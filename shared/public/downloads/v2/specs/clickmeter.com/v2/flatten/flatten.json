{
	"definitions.Api.Core.Dto.Accounting.ConversionOptions.properties.hideComCost.type": "boolean",
	"definitions.Api.Core.Dto.Accounting.ConversionOptions.properties.hideCost.type": "boolean",
	"definitions.Api.Core.Dto.Accounting.ConversionOptions.properties.hideCount.type": "boolean",
	"definitions.Api.Core.Dto.Accounting.ConversionOptions.properties.hideParams.type": "boolean",
	"definitions.Api.Core.Dto.Accounting.ConversionOptions.properties.hideValue.type": "boolean",
	"definitions.Api.Core.Dto.Accounting.ConversionOptions.properties.percentCommission.format": "int32",
	"definitions.Api.Core.Dto.Accounting.ConversionOptions.properties.percentCommission.type": "integer",
	"definitions.Api.Core.Dto.Accounting.ConversionOptions.properties.percentValue.format": "int32",
	"definitions.Api.Core.Dto.Accounting.ConversionOptions.properties.percentValue.type": "integer",
	"definitions.Api.Core.Dto.Accounting.ConversionOptions.type": "object",
	"definitions.Api.Core.Dto.Accounting.DomainWhitelistEntry.properties.id.type": "string",
	"definitions.Api.Core.Dto.Accounting.DomainWhitelistEntry.properties.name.type": "string",
	"definitions.Api.Core.Dto.Accounting.DomainWhitelistEntry.type": "object",
	"definitions.Api.Core.Dto.Accounting.ExtendedGrants.properties.allowAllGrants.type": "boolean",
	"definitions.Api.Core.Dto.Accounting.ExtendedGrants.properties.allowGroupCreation.type": "boolean",
	"definitions.Api.Core.Dto.Accounting.ExtendedGrants.type": "object",
	"definitions.Api.Core.Dto.Accounting.Guest.properties.apiKey.type": "string",
	"definitions.Api.Core.Dto.Accounting.Guest.properties.conversionOptions.$ref": "#/definitions/Api.Core.Dto.Accounting.ConversionOptions",
	"definitions.Api.Core.Dto.Accounting.Guest.properties.creationDate.description": " (A date in \"YmdHis\" format)",
	"definitions.Api.Core.Dto.Accounting.Guest.properties.creationDate.example": "20120203120530",
	"definitions.Api.Core.Dto.Accounting.Guest.properties.creationDate.type": "string",
	"definitions.Api.Core.Dto.Accounting.Guest.properties.currentGrant.$ref": "#/definitions/Api.Core.Dto.Grants.Grant",
	"definitions.Api.Core.Dto.Accounting.Guest.properties.dateFormat.type": "string",
	"definitions.Api.Core.Dto.Accounting.Guest.properties.decimalSeparator.type": "string",
	"definitions.Api.Core.Dto.Accounting.Guest.properties.email.type": "string",
	"definitions.Api.Core.Dto.Accounting.Guest.properties.extendedGrants.$ref": "#/definitions/Api.Core.Dto.Accounting.ExtendedGrants",
	"definitions.Api.Core.Dto.Accounting.Guest.properties.groupGrants.format": "int64",
	"definitions.Api.Core.Dto.Accounting.Guest.properties.groupGrants.type": "integer",
	"definitions.Api.Core.Dto.Accounting.Guest.properties.hitOptions.$ref": "#/definitions/Api.Core.Dto.Accounting.HitOptions",
	"definitions.Api.Core.Dto.Accounting.Guest.properties.id.format": "int64",
	"definitions.Api.Core.Dto.Accounting.Guest.properties.id.type": "integer",
	"definitions.Api.Core.Dto.Accounting.Guest.properties.key.type": "string",
	"definitions.Api.Core.Dto.Accounting.Guest.properties.language.type": "string",
	"definitions.Api.Core.Dto.Accounting.Guest.properties.loginCount.format": "int32",
	"definitions.Api.Core.Dto.Accounting.Guest.properties.loginCount.type": "integer",
	"definitions.Api.Core.Dto.Accounting.Guest.properties.name.type": "string",
	"definitions.Api.Core.Dto.Accounting.Guest.properties.notes.type": "string",
	"definitions.Api.Core.Dto.Accounting.Guest.properties.numberGroupSeparator.type": "string",
	"definitions.Api.Core.Dto.Accounting.Guest.properties.password.type": "string",
	"definitions.Api.Core.Dto.Accounting.Guest.properties.timeFormat.enum.length": 2,
	"definitions.Api.Core.Dto.Accounting.Guest.properties.timeFormat.enum[0]": "AmPm",
	"definitions.Api.Core.Dto.Accounting.Guest.properties.timeFormat.enum[1]": "H24",
	"definitions.Api.Core.Dto.Accounting.Guest.properties.timeFormat.type": "string",
	"definitions.Api.Core.Dto.Accounting.Guest.properties.timeZone.format": "int32",
	"definitions.Api.Core.Dto.Accounting.Guest.properties.timeZone.type": "integer",
	"definitions.Api.Core.Dto.Accounting.Guest.properties.timeframeMinDate.description": " (A date in \"YmdHis\" format)",
	"definitions.Api.Core.Dto.Accounting.Guest.properties.timeframeMinDate.example": "20120203120530",
	"definitions.Api.Core.Dto.Accounting.Guest.properties.timeframeMinDate.type": "string",
	"definitions.Api.Core.Dto.Accounting.Guest.properties.timezonename.type": "string",
	"definitions.Api.Core.Dto.Accounting.Guest.properties.tlGrants.format": "int64",
	"definitions.Api.Core.Dto.Accounting.Guest.properties.tlGrants.type": "integer",
	"definitions.Api.Core.Dto.Accounting.Guest.properties.tpGrants.format": "int64",
	"definitions.Api.Core.Dto.Accounting.Guest.properties.tpGrants.type": "integer",
	"definitions.Api.Core.Dto.Accounting.Guest.properties.userName.type": "string",
	"definitions.Api.Core.Dto.Accounting.Guest.type": "object",
	"definitions.Api.Core.Dto.Accounting.HitOptions.properties.hideReferrer.type": "boolean",
	"definitions.Api.Core.Dto.Accounting.HitOptions.type": "object",
	"definitions.Api.Core.Dto.Accounting.IpBlacklistEntry.properties.id.type": "string",
	"definitions.Api.Core.Dto.Accounting.IpBlacklistEntry.properties.ip.type": "string",
	"definitions.Api.Core.Dto.Accounting.IpBlacklistEntry.type": "object",
	"definitions.Api.Core.Dto.Accounting.Plan.properties.allowedPersonalDomains.format": "int32",
	"definitions.Api.Core.Dto.Accounting.Plan.properties.allowedPersonalDomains.type": "integer",
	"definitions.Api.Core.Dto.Accounting.Plan.properties.allowedPersonalUrls.format": "int32",
	"definitions.Api.Core.Dto.Accounting.Plan.properties.allowedPersonalUrls.type": "integer",
	"definitions.Api.Core.Dto.Accounting.Plan.properties.billingPeriodEnd.description": " (A date in \"YmdHis\" format)",
	"definitions.Api.Core.Dto.Accounting.Plan.properties.billingPeriodEnd.example": "20120203120530",
	"definitions.Api.Core.Dto.Accounting.Plan.properties.billingPeriodEnd.type": "string",
	"definitions.Api.Core.Dto.Accounting.Plan.properties.billingPeriodStart.description": " (A date in \"YmdHis\" format)",
	"definitions.Api.Core.Dto.Accounting.Plan.properties.billingPeriodStart.example": "20120203120530",
	"definitions.Api.Core.Dto.Accounting.Plan.properties.billingPeriodStart.type": "string",
	"definitions.Api.Core.Dto.Accounting.Plan.properties.bonusMonthlyEvents.format": "int64",
	"definitions.Api.Core.Dto.Accounting.Plan.properties.bonusMonthlyEvents.type": "integer",
	"definitions.Api.Core.Dto.Accounting.Plan.properties.maximumDatapoints.format": "int64",
	"definitions.Api.Core.Dto.Accounting.Plan.properties.maximumDatapoints.type": "integer",
	"definitions.Api.Core.Dto.Accounting.Plan.properties.maximumGuests.format": "int64",
	"definitions.Api.Core.Dto.Accounting.Plan.properties.maximumGuests.type": "integer",
	"definitions.Api.Core.Dto.Accounting.Plan.properties.monthlyEvents.format": "int64",
	"definitions.Api.Core.Dto.Accounting.Plan.properties.monthlyEvents.type": "integer",
	"definitions.Api.Core.Dto.Accounting.Plan.properties.name.type": "string",
	"definitions.Api.Core.Dto.Accounting.Plan.properties.price.format": "double",
	"definitions.Api.Core.Dto.Accounting.Plan.properties.price.type": "number",
	"definitions.Api.Core.Dto.Accounting.Plan.properties.profileId.format": "int64",
	"definitions.Api.Core.Dto.Accounting.Plan.properties.profileId.type": "integer",
	"definitions.Api.Core.Dto.Accounting.Plan.properties.recurring.type": "boolean",
	"definitions.Api.Core.Dto.Accounting.Plan.properties.recurringPeriod.format": "int32",
	"definitions.Api.Core.Dto.Accounting.Plan.properties.recurringPeriod.type": "integer",
	"definitions.Api.Core.Dto.Accounting.Plan.properties.usedDatapoints.format": "int64",
	"definitions.Api.Core.Dto.Accounting.Plan.properties.usedDatapoints.type": "integer",
	"definitions.Api.Core.Dto.Accounting.Plan.properties.usedMonthlyEvents.format": "int64",
	"definitions.Api.Core.Dto.Accounting.Plan.properties.usedMonthlyEvents.type": "integer",
	"definitions.Api.Core.Dto.Accounting.Plan.type": "object",
	"definitions.Api.Core.Dto.Accounting.User.properties.boGoVal.type": "string",
	"definitions.Api.Core.Dto.Accounting.User.properties.bonusClicks.format": "int64",
	"definitions.Api.Core.Dto.Accounting.User.properties.bonusClicks.type": "integer",
	"definitions.Api.Core.Dto.Accounting.User.properties.companyName.type": "string",
	"definitions.Api.Core.Dto.Accounting.User.properties.companyRole.type": "string",
	"definitions.Api.Core.Dto.Accounting.User.properties.email.type": "string",
	"definitions.Api.Core.Dto.Accounting.User.properties.firstName.type": "string",
	"definitions.Api.Core.Dto.Accounting.User.properties.lastName.type": "string",
	"definitions.Api.Core.Dto.Accounting.User.properties.phone.type": "string",
	"definitions.Api.Core.Dto.Accounting.User.properties.redirectOnly.type": "boolean",
	"definitions.Api.Core.Dto.Accounting.User.properties.registrationDate.description": " (A date in \"YmdHis\" format)",
	"definitions.Api.Core.Dto.Accounting.User.properties.registrationDate.example": "20120203120530",
	"definitions.Api.Core.Dto.Accounting.User.properties.registrationDate.type": "string",
	"definitions.Api.Core.Dto.Accounting.User.properties.timeframeMinDate.description": " (A date in \"YmdHis\" format)",
	"definitions.Api.Core.Dto.Accounting.User.properties.timeframeMinDate.example": "20120203120530",
	"definitions.Api.Core.Dto.Accounting.User.properties.timeframeMinDate.type": "string",
	"definitions.Api.Core.Dto.Accounting.User.properties.timezone.format": "int32",
	"definitions.Api.Core.Dto.Accounting.User.properties.timezone.type": "integer",
	"definitions.Api.Core.Dto.Accounting.User.properties.timezonename.type": "string",
	"definitions.Api.Core.Dto.Accounting.User.type": "object",
	"definitions.Api.Core.Dto.Aggregated.AggregatedResult.properties.activityDay.description": " (A date in \"YmdHis\" format)",
	"definitions.Api.Core.Dto.Aggregated.AggregatedResult.properties.activityDay.example": "20120203120530",
	"definitions.Api.Core.Dto.Aggregated.AggregatedResult.properties.activityDay.type": "string",
	"definitions.Api.Core.Dto.Aggregated.AggregatedResult.properties.commissionsCost.format": "double",
	"definitions.Api.Core.Dto.Aggregated.AggregatedResult.properties.commissionsCost.type": "number",
	"definitions.Api.Core.Dto.Aggregated.AggregatedResult.properties.conversionsCost.format": "double",
	"definitions.Api.Core.Dto.Aggregated.AggregatedResult.properties.conversionsCost.type": "number",
	"definitions.Api.Core.Dto.Aggregated.AggregatedResult.properties.conversionsValue.format": "double",
	"definitions.Api.Core.Dto.Aggregated.AggregatedResult.properties.conversionsValue.type": "number",
	"definitions.Api.Core.Dto.Aggregated.AggregatedResult.properties.convertedClicks.format": "int64",
	"definitions.Api.Core.Dto.Aggregated.AggregatedResult.properties.convertedClicks.type": "integer",
	"definitions.Api.Core.Dto.Aggregated.AggregatedResult.properties.entityData.$ref": "#/definitions/System.Object",
	"definitions.Api.Core.Dto.Aggregated.AggregatedResult.properties.entityId.type": "string",
	"definitions.Api.Core.Dto.Aggregated.AggregatedResult.properties.fromDay.description": " (A date in \"YmdHis\" format)",
	"definitions.Api.Core.Dto.Aggregated.AggregatedResult.properties.fromDay.example": "20120203120530",
	"definitions.Api.Core.Dto.Aggregated.AggregatedResult.properties.fromDay.type": "string",
	"definitions.Api.Core.Dto.Aggregated.AggregatedResult.properties.hourlyBreakDown.additionalProperties.$ref": "#/definitions/Api.Core.Dto.Aggregated.AggregatedResult",
	"definitions.Api.Core.Dto.Aggregated.AggregatedResult.properties.hourlyBreakDown.type": "object",
	"definitions.Api.Core.Dto.Aggregated.AggregatedResult.properties.lastHitDate.description": " (A date in \"YmdHis\" format)",
	"definitions.Api.Core.Dto.Aggregated.AggregatedResult.properties.lastHitDate.example": "20120203120530",
	"definitions.Api.Core.Dto.Aggregated.AggregatedResult.properties.lastHitDate.type": "string",
	"definitions.Api.Core.Dto.Aggregated.AggregatedResult.properties.spiderHitsCount.format": "int64",
	"definitions.Api.Core.Dto.Aggregated.AggregatedResult.properties.spiderHitsCount.type": "integer",
	"definitions.Api.Core.Dto.Aggregated.AggregatedResult.properties.toDay.description": " (A date in \"YmdHis\" format)",
	"definitions.Api.Core.Dto.Aggregated.AggregatedResult.properties.toDay.example": "20120203120530",
	"definitions.Api.Core.Dto.Aggregated.AggregatedResult.properties.toDay.type": "string",
	"definitions.Api.Core.Dto.Aggregated.AggregatedResult.properties.totalClicks.format": "int64",
	"definitions.Api.Core.Dto.Aggregated.AggregatedResult.properties.totalClicks.type": "integer",
	"definitions.Api.Core.Dto.Aggregated.AggregatedResult.properties.totalViews.format": "int64",
	"definitions.Api.Core.Dto.Aggregated.AggregatedResult.properties.totalViews.type": "integer",
	"definitions.Api.Core.Dto.Aggregated.AggregatedResult.properties.uniqueClicks.format": "int64",
	"definitions.Api.Core.Dto.Aggregated.AggregatedResult.properties.uniqueClicks.type": "integer",
	"definitions.Api.Core.Dto.Aggregated.AggregatedResult.properties.uniqueConversions.format": "int64",
	"definitions.Api.Core.Dto.Aggregated.AggregatedResult.properties.uniqueConversions.type": "integer",
	"definitions.Api.Core.Dto.Aggregated.AggregatedResult.properties.uniqueViews.format": "int64",
	"definitions.Api.Core.Dto.Aggregated.AggregatedResult.properties.uniqueViews.type": "integer",
	"definitions.Api.Core.Dto.Aggregated.AggregatedResult.type": "object",
	"definitions.Api.Core.Dto.Aggregated.AggregatedSummaryResult.properties.count.format": "int64",
	"definitions.Api.Core.Dto.Aggregated.AggregatedSummaryResult.properties.count.type": "integer",
	"definitions.Api.Core.Dto.Aggregated.AggregatedSummaryResult.properties.limit.format": "int32",
	"definitions.Api.Core.Dto.Aggregated.AggregatedSummaryResult.properties.limit.type": "integer",
	"definitions.Api.Core.Dto.Aggregated.AggregatedSummaryResult.properties.offset.format": "int64",
	"definitions.Api.Core.Dto.Aggregated.AggregatedSummaryResult.properties.offset.type": "integer",
	"definitions.Api.Core.Dto.Aggregated.AggregatedSummaryResult.properties.result.items.$ref": "#/definitions/Api.Core.Dto.Aggregated.AggregatedResult",
	"definitions.Api.Core.Dto.Aggregated.AggregatedSummaryResult.properties.result.type": "array",
	"definitions.Api.Core.Dto.Aggregated.AggregatedSummaryResult.type": "object",
	"definitions.Api.Core.Dto.ClickStream.Hit.properties.accessTime.description": " (A date in \"YmdHis\" format)",
	"definitions.Api.Core.Dto.ClickStream.Hit.properties.accessTime.example": "20120203120530",
	"definitions.Api.Core.Dto.ClickStream.Hit.properties.accessTime.type": "string",
	"definitions.Api.Core.Dto.ClickStream.Hit.properties.browser.$ref": "#/definitions/Api.Core.Dto.ClickStream.HitBrowserInfo",
	"definitions.Api.Core.Dto.ClickStream.Hit.properties.clientLanguage.type": "string",
	"definitions.Api.Core.Dto.ClickStream.Hit.properties.conversion1.$ref": "#/definitions/Api.Core.Dto.ClickStream.HitConversionInfo",
	"definitions.Api.Core.Dto.ClickStream.Hit.properties.conversion2.$ref": "#/definitions/Api.Core.Dto.ClickStream.HitConversionInfo",
	"definitions.Api.Core.Dto.ClickStream.Hit.properties.conversion3.$ref": "#/definitions/Api.Core.Dto.ClickStream.HitConversionInfo",
	"definitions.Api.Core.Dto.ClickStream.Hit.properties.conversion4.$ref": "#/definitions/Api.Core.Dto.ClickStream.HitConversionInfo",
	"definitions.Api.Core.Dto.ClickStream.Hit.properties.conversion5.$ref": "#/definitions/Api.Core.Dto.ClickStream.HitConversionInfo",
	"definitions.Api.Core.Dto.ClickStream.Hit.properties.conversions.items.$ref": "#/definitions/Api.Core.Dto.ClickStream.HitConversionInfo",
	"definitions.Api.Core.Dto.ClickStream.Hit.properties.conversions.type": "array",
	"definitions.Api.Core.Dto.ClickStream.Hit.properties.entity.$ref": "#/definitions/Api.Core.Dto.ClickStream.HitDatapointInfo",
	"definitions.Api.Core.Dto.ClickStream.Hit.properties.ip.type": "string",
	"definitions.Api.Core.Dto.ClickStream.Hit.properties.isProxy.type": "string",
	"definitions.Api.Core.Dto.ClickStream.Hit.properties.isSpider.type": "string",
	"definitions.Api.Core.Dto.ClickStream.Hit.properties.isUnique.type": "string",
	"definitions.Api.Core.Dto.ClickStream.Hit.properties.location.$ref": "#/definitions/Api.Core.Dto.ClickStream.HitLocationInfo",
	"definitions.Api.Core.Dto.ClickStream.Hit.properties.org.type": "string",
	"definitions.Api.Core.Dto.ClickStream.Hit.properties.os.$ref": "#/definitions/Api.Core.Dto.ClickStream.HitOsInfo",
	"definitions.Api.Core.Dto.ClickStream.Hit.properties.queryParams.type": "string",
	"definitions.Api.Core.Dto.ClickStream.Hit.properties.realDestinationUrl.type": "string",
	"definitions.Api.Core.Dto.ClickStream.Hit.properties.referer.type": "string",
	"definitions.Api.Core.Dto.ClickStream.Hit.properties.source.$ref": "#/definitions/Api.Core.Dto.ClickStream.HitSource",
	"definitions.Api.Core.Dto.ClickStream.Hit.properties.type.type": "string",
	"definitions.Api.Core.Dto.ClickStream.Hit.type": "object",
	"definitions.Api.Core.Dto.ClickStream.HitBrowserInfo.properties.browserType.type": "string",
	"definitions.Api.Core.Dto.ClickStream.HitBrowserInfo.properties.familyId.format": "int64",
	"definitions.Api.Core.Dto.ClickStream.HitBrowserInfo.properties.familyId.type": "integer",
	"definitions.Api.Core.Dto.ClickStream.HitBrowserInfo.properties.familyName.type": "string",
	"definitions.Api.Core.Dto.ClickStream.HitBrowserInfo.properties.id.format": "int64",
	"definitions.Api.Core.Dto.ClickStream.HitBrowserInfo.properties.id.type": "integer",
	"definitions.Api.Core.Dto.ClickStream.HitBrowserInfo.properties.name.type": "string",
	"definitions.Api.Core.Dto.ClickStream.HitBrowserInfo.type": "object",
	"definitions.Api.Core.Dto.ClickStream.HitConversionInfo.properties.accessTime.description": " (A date in \"YmdHis\" format)",
	"definitions.Api.Core.Dto.ClickStream.HitConversionInfo.properties.accessTime.example": "20120203120530",
	"definitions.Api.Core.Dto.ClickStream.HitConversionInfo.properties.accessTime.type": "string",
	"definitions.Api.Core.Dto.ClickStream.HitConversionInfo.properties.comcost.format": "double",
	"definitions.Api.Core.Dto.ClickStream.HitConversionInfo.properties.comcost.type": "number",
	"definitions.Api.Core.Dto.ClickStream.HitConversionInfo.properties.cost.format": "double",
	"definitions.Api.Core.Dto.ClickStream.HitConversionInfo.properties.cost.type": "number",
	"definitions.Api.Core.Dto.ClickStream.HitConversionInfo.properties.date.description": " (A date in \"YmdHis\" format)",
	"definitions.Api.Core.Dto.ClickStream.HitConversionInfo.properties.date.example": "20120203120530",
	"definitions.Api.Core.Dto.ClickStream.HitConversionInfo.properties.date.type": "string",
	"definitions.Api.Core.Dto.ClickStream.HitConversionInfo.properties.deleted.type": "boolean",
	"definitions.Api.Core.Dto.ClickStream.HitConversionInfo.properties.id.format": "int64",
	"definitions.Api.Core.Dto.ClickStream.HitConversionInfo.properties.id.type": "integer",
	"definitions.Api.Core.Dto.ClickStream.HitConversionInfo.properties.name.type": "string",
	"definitions.Api.Core.Dto.ClickStream.HitConversionInfo.properties.parameter.type": "string",
	"definitions.Api.Core.Dto.ClickStream.HitConversionInfo.properties.value.format": "double",
	"definitions.Api.Core.Dto.ClickStream.HitConversionInfo.properties.value.type": "number",
	"definitions.Api.Core.Dto.ClickStream.HitConversionInfo.type": "object",
	"definitions.Api.Core.Dto.ClickStream.HitDatapointInfo.properties.creationDate.description": " (A date in \"YmdHis\" format)",
	"definitions.Api.Core.Dto.ClickStream.HitDatapointInfo.properties.creationDate.example": "20120203120530",
	"definitions.Api.Core.Dto.ClickStream.HitDatapointInfo.properties.creationDate.type": "string",
	"definitions.Api.Core.Dto.ClickStream.HitDatapointInfo.properties.datapointFavourite.type": "boolean",
	"definitions.Api.Core.Dto.ClickStream.HitDatapointInfo.properties.datapointId.format": "int64",
	"definitions.Api.Core.Dto.ClickStream.HitDatapointInfo.properties.datapointId.type": "integer",
	"definitions.Api.Core.Dto.ClickStream.HitDatapointInfo.properties.datapointName.type": "string",
	"definitions.Api.Core.Dto.ClickStream.HitDatapointInfo.properties.datapointTitle.type": "string",
	"definitions.Api.Core.Dto.ClickStream.HitDatapointInfo.properties.datapointType.type": "string",
	"definitions.Api.Core.Dto.ClickStream.HitDatapointInfo.properties.destinationUrl.type": "string",
	"definitions.Api.Core.Dto.ClickStream.HitDatapointInfo.properties.groupId.format": "int64",
	"definitions.Api.Core.Dto.ClickStream.HitDatapointInfo.properties.groupId.type": "integer",
	"definitions.Api.Core.Dto.ClickStream.HitDatapointInfo.properties.groupName.type": "string",
	"definitions.Api.Core.Dto.ClickStream.HitDatapointInfo.properties.isABTest.type": "boolean",
	"definitions.Api.Core.Dto.ClickStream.HitDatapointInfo.properties.isPrivateShared.type": "boolean",
	"definitions.Api.Core.Dto.ClickStream.HitDatapointInfo.properties.isPublic.type": "boolean",
	"definitions.Api.Core.Dto.ClickStream.HitDatapointInfo.properties.notes.type": "string",
	"definitions.Api.Core.Dto.ClickStream.HitDatapointInfo.properties.status.enum.length": 4,
	"definitions.Api.Core.Dto.ClickStream.HitDatapointInfo.properties.status.enum[0]": "Active",
	"definitions.Api.Core.Dto.ClickStream.HitDatapointInfo.properties.status.enum[1]": "Paused",
	"definitions.Api.Core.Dto.ClickStream.HitDatapointInfo.properties.status.enum[2]": "Abuse",
	"definitions.Api.Core.Dto.ClickStream.HitDatapointInfo.properties.status.enum[3]": "Deleted",
	"definitions.Api.Core.Dto.ClickStream.HitDatapointInfo.properties.status.type": "string",
	"definitions.Api.Core.Dto.ClickStream.HitDatapointInfo.properties.tags.items.$ref": "#/definitions/Api.Core.Dto.Tags.Tag",
	"definitions.Api.Core.Dto.ClickStream.HitDatapointInfo.properties.tags.type": "array",
	"definitions.Api.Core.Dto.ClickStream.HitDatapointInfo.properties.trackingCode.type": "string",
	"definitions.Api.Core.Dto.ClickStream.HitDatapointInfo.type": "object",
	"definitions.Api.Core.Dto.ClickStream.HitListPage.properties.hits.items.$ref": "#/definitions/Api.Core.Dto.ClickStream.Hit",
	"definitions.Api.Core.Dto.ClickStream.HitListPage.properties.hits.type": "array",
	"definitions.Api.Core.Dto.ClickStream.HitListPage.properties.lastKey.type": "string",
	"definitions.Api.Core.Dto.ClickStream.HitListPage.type": "object",
	"definitions.Api.Core.Dto.ClickStream.HitLocationInfo.properties.areacode.type": "string",
	"definitions.Api.Core.Dto.ClickStream.HitLocationInfo.properties.city.type": "string",
	"definitions.Api.Core.Dto.ClickStream.HitLocationInfo.properties.country.type": "string",
	"definitions.Api.Core.Dto.ClickStream.HitLocationInfo.properties.latitude.format": "double",
	"definitions.Api.Core.Dto.ClickStream.HitLocationInfo.properties.latitude.type": "number",
	"definitions.Api.Core.Dto.ClickStream.HitLocationInfo.properties.longitude.format": "double",
	"definitions.Api.Core.Dto.ClickStream.HitLocationInfo.properties.longitude.type": "number",
	"definitions.Api.Core.Dto.ClickStream.HitLocationInfo.properties.metrocode.type": "string",
	"definitions.Api.Core.Dto.ClickStream.HitLocationInfo.properties.organization.type": "string",
	"definitions.Api.Core.Dto.ClickStream.HitLocationInfo.properties.postalcode.type": "string",
	"definitions.Api.Core.Dto.ClickStream.HitLocationInfo.properties.region.type": "string",
	"definitions.Api.Core.Dto.ClickStream.HitLocationInfo.properties.regionName.type": "string",
	"definitions.Api.Core.Dto.ClickStream.HitLocationInfo.type": "object",
	"definitions.Api.Core.Dto.ClickStream.HitOsInfo.properties.familyId.format": "int64",
	"definitions.Api.Core.Dto.ClickStream.HitOsInfo.properties.familyId.type": "integer",
	"definitions.Api.Core.Dto.ClickStream.HitOsInfo.properties.familyName.type": "string",
	"definitions.Api.Core.Dto.ClickStream.HitOsInfo.properties.id.format": "int64",
	"definitions.Api.Core.Dto.ClickStream.HitOsInfo.properties.id.type": "integer",
	"definitions.Api.Core.Dto.ClickStream.HitOsInfo.properties.name.type": "string",
	"definitions.Api.Core.Dto.ClickStream.HitOsInfo.type": "object",
	"definitions.Api.Core.Dto.ClickStream.HitSource.properties.id.format": "int64",
	"definitions.Api.Core.Dto.ClickStream.HitSource.properties.id.type": "integer",
	"definitions.Api.Core.Dto.ClickStream.HitSource.properties.name.type": "string",
	"definitions.Api.Core.Dto.ClickStream.HitSource.properties.param.type": "string",
	"definitions.Api.Core.Dto.ClickStream.HitSource.type": "object",
	"definitions.Api.Core.Dto.Conversions.Conversion.properties.code.type": "string",
	"definitions.Api.Core.Dto.Conversions.Conversion.properties.creationDate.description": " (A date in \"YmdHis\" format)",
	"definitions.Api.Core.Dto.Conversions.Conversion.properties.creationDate.example": "20120203120530",
	"definitions.Api.Core.Dto.Conversions.Conversion.properties.creationDate.type": "string",
	"definitions.Api.Core.Dto.Conversions.Conversion.properties.deleted.type": "boolean",
	"definitions.Api.Core.Dto.Conversions.Conversion.properties.description.type": "string",
	"definitions.Api.Core.Dto.Conversions.Conversion.properties.id.format": "int64",
	"definitions.Api.Core.Dto.Conversions.Conversion.properties.id.type": "integer",
	"definitions.Api.Core.Dto.Conversions.Conversion.properties.name.type": "string",
	"definitions.Api.Core.Dto.Conversions.Conversion.properties.protocol.enum.length": 2,
	"definitions.Api.Core.Dto.Conversions.Conversion.properties.protocol.enum[0]": "Http",
	"definitions.Api.Core.Dto.Conversions.Conversion.properties.protocol.enum[1]": "Https",
	"definitions.Api.Core.Dto.Conversions.Conversion.properties.protocol.type": "string",
	"definitions.Api.Core.Dto.Conversions.Conversion.properties.value.format": "double",
	"definitions.Api.Core.Dto.Conversions.Conversion.properties.value.type": "number",
	"definitions.Api.Core.Dto.Conversions.Conversion.type": "object",
	"definitions.Api.Core.Dto.Datapoints.BrowserBaseDestinationItem.properties.emailDestinationUrl.type": "string",
	"definitions.Api.Core.Dto.Datapoints.BrowserBaseDestinationItem.properties.mobileDestinationUrl.type": "string",
	"definitions.Api.Core.Dto.Datapoints.BrowserBaseDestinationItem.properties.spidersDestinationUrl.type": "string",
	"definitions.Api.Core.Dto.Datapoints.BrowserBaseDestinationItem.type": "object",
	"definitions.Api.Core.Dto.Datapoints.Datapoint.properties.creationDate.description": " (A date in \"YmdHis\" format)",
	"definitions.Api.Core.Dto.Datapoints.Datapoint.properties.creationDate.example": "20120203120530",
	"definitions.Api.Core.Dto.Datapoints.Datapoint.properties.creationDate.type": "string",
	"definitions.Api.Core.Dto.Datapoints.Datapoint.properties.encodeIp.type": "boolean",
	"definitions.Api.Core.Dto.Datapoints.Datapoint.properties.fifthConversionId.format": "int64",
	"definitions.Api.Core.Dto.Datapoints.Datapoint.properties.fifthConversionId.type": "integer",
	"definitions.Api.Core.Dto.Datapoints.Datapoint.properties.fifthConversionName.type": "string",
	"definitions.Api.Core.Dto.Datapoints.Datapoint.properties.firstConversionId.format": "int64",
	"definitions.Api.Core.Dto.Datapoints.Datapoint.properties.firstConversionId.type": "integer",
	"definitions.Api.Core.Dto.Datapoints.Datapoint.properties.firstConversionName.type": "string",
	"definitions.Api.Core.Dto.Datapoints.Datapoint.properties.fourthConversionId.format": "int64",
	"definitions.Api.Core.Dto.Datapoints.Datapoint.properties.fourthConversionId.type": "integer",
	"definitions.Api.Core.Dto.Datapoints.Datapoint.properties.fourthConversionName.type": "string",
	"definitions.Api.Core.Dto.Datapoints.Datapoint.properties.groupId.format": "int64",
	"definitions.Api.Core.Dto.Datapoints.Datapoint.properties.groupId.type": "integer",
	"definitions.Api.Core.Dto.Datapoints.Datapoint.properties.groupName.type": "string",
	"definitions.Api.Core.Dto.Datapoints.Datapoint.properties.id.format": "int64",
	"definitions.Api.Core.Dto.Datapoints.Datapoint.properties.id.type": "integer",
	"definitions.Api.Core.Dto.Datapoints.Datapoint.properties.isPublic.type": "boolean",
	"definitions.Api.Core.Dto.Datapoints.Datapoint.properties.isSecured.type": "boolean",
	"definitions.Api.Core.Dto.Datapoints.Datapoint.properties.lightTracking.type": "boolean",
	"definitions.Api.Core.Dto.Datapoints.Datapoint.properties.name.type": "string",
	"definitions.Api.Core.Dto.Datapoints.Datapoint.properties.notes.type": "string",
	"definitions.Api.Core.Dto.Datapoints.Datapoint.properties.preferred.type": "boolean",
	"definitions.Api.Core.Dto.Datapoints.Datapoint.properties.redirectOnly.type": "boolean",
	"definitions.Api.Core.Dto.Datapoints.Datapoint.properties.secondConversionId.format": "int64",
	"definitions.Api.Core.Dto.Datapoints.Datapoint.properties.secondConversionId.type": "integer",
	"definitions.Api.Core.Dto.Datapoints.Datapoint.properties.secondConversionName.type": "string",
	"definitions.Api.Core.Dto.Datapoints.Datapoint.properties.status.enum.length": 4,
	"definitions.Api.Core.Dto.Datapoints.Datapoint.properties.status.enum[0]": "Active",
	"definitions.Api.Core.Dto.Datapoints.Datapoint.properties.status.enum[1]": "Paused",
	"definitions.Api.Core.Dto.Datapoints.Datapoint.properties.status.enum[2]": "Abuse",
	"definitions.Api.Core.Dto.Datapoints.Datapoint.properties.status.enum[3]": "Deleted",
	"definitions.Api.Core.Dto.Datapoints.Datapoint.properties.status.type": "string",
	"definitions.Api.Core.Dto.Datapoints.Datapoint.properties.tags.items.$ref": "#/definitions/Api.Core.Dto.Tags.Tag",
	"definitions.Api.Core.Dto.Datapoints.Datapoint.properties.tags.type": "array",
	"definitions.Api.Core.Dto.Datapoints.Datapoint.properties.thirdConversionId.format": "int64",
	"definitions.Api.Core.Dto.Datapoints.Datapoint.properties.thirdConversionId.type": "integer",
	"definitions.Api.Core.Dto.Datapoints.Datapoint.properties.thirdConversionName.type": "string",
	"definitions.Api.Core.Dto.Datapoints.Datapoint.properties.title.type": "string",
	"definitions.Api.Core.Dto.Datapoints.Datapoint.properties.trackingCode.type": "string",
	"definitions.Api.Core.Dto.Datapoints.Datapoint.properties.type.enum.length": 2,
	"definitions.Api.Core.Dto.Datapoints.Datapoint.properties.type.enum[0]": "TrackingLink",
	"definitions.Api.Core.Dto.Datapoints.Datapoint.properties.type.enum[1]": "TrackingPixel",
	"definitions.Api.Core.Dto.Datapoints.Datapoint.properties.type.type": "string",
	"definitions.Api.Core.Dto.Datapoints.Datapoint.properties.typeTL.$ref": "#/definitions/Api.Core.Dto.Datapoints.TrackingLinkSpecifics",
	"definitions.Api.Core.Dto.Datapoints.Datapoint.properties.typeTP.$ref": "#/definitions/Api.Core.Dto.Datapoints.TrackingPixelSpecifics",
	"definitions.Api.Core.Dto.Datapoints.Datapoint.properties.writePermited.type": "boolean",
	"definitions.Api.Core.Dto.Datapoints.Datapoint.type": "object",
	"definitions.Api.Core.Dto.Datapoints.DatapointRetargetingInfo.properties.id.format": "int64",
	"definitions.Api.Core.Dto.Datapoints.DatapointRetargetingInfo.properties.id.type": "integer",
	"definitions.Api.Core.Dto.Datapoints.DatapointRetargetingInfo.properties.name.type": "string",
	"definitions.Api.Core.Dto.Datapoints.DatapointRetargetingInfo.type": "object",
	"definitions.Api.Core.Dto.Datapoints.MultipleDestinationItem.properties.url.type": "string",
	"definitions.Api.Core.Dto.Datapoints.MultipleDestinationItem.type": "object",
	"definitions.Api.Core.Dto.Datapoints.TrackingLinkSpecifics.properties.appendQuery.type": "boolean",
	"definitions.Api.Core.Dto.Datapoints.TrackingLinkSpecifics.properties.browserDestinationItem.$ref": "#/definitions/Api.Core.Dto.Datapoints.BrowserBaseDestinationItem",
	"definitions.Api.Core.Dto.Datapoints.TrackingLinkSpecifics.properties.destinationMode.enum.length": 10,
	"definitions.Api.Core.Dto.Datapoints.TrackingLinkSpecifics.properties.destinationMode.enum[0]": "Simple",
	"definitions.Api.Core.Dto.Datapoints.TrackingLinkSpecifics.properties.destinationMode.enum[1]": "RandomDestination",
	"definitions.Api.Core.Dto.Datapoints.TrackingLinkSpecifics.properties.destinationMode.enum[2]": "DestinationByLanguage",
	"definitions.Api.Core.Dto.Datapoints.TrackingLinkSpecifics.properties.destinationMode.enum[3]": "SpilloverDestination",
	"definitions.Api.Core.Dto.Datapoints.TrackingLinkSpecifics.properties.destinationMode.enum[4]": "DynamicUrl",
	"definitions.Api.Core.Dto.Datapoints.TrackingLinkSpecifics.properties.destinationMode.enum[5]": "BrowserDestination",
	"definitions.Api.Core.Dto.Datapoints.TrackingLinkSpecifics.properties.destinationMode.enum[6]": "DestinationByNation",
	"definitions.Api.Core.Dto.Datapoints.TrackingLinkSpecifics.properties.destinationMode.enum[7]": "UniqueDestination",
	"definitions.Api.Core.Dto.Datapoints.TrackingLinkSpecifics.properties.destinationMode.enum[8]": "SequentialDestination",
	"definitions.Api.Core.Dto.Datapoints.TrackingLinkSpecifics.properties.destinationMode.enum[9]": "WeightedDestination",
	"definitions.Api.Core.Dto.Datapoints.TrackingLinkSpecifics.properties.destinationMode.type": "string",
	"definitions.Api.Core.Dto.Datapoints.TrackingLinkSpecifics.properties.domainId.format": "int32",
	"definitions.Api.Core.Dto.Datapoints.TrackingLinkSpecifics.properties.domainId.type": "integer",
	"definitions.Api.Core.Dto.Datapoints.TrackingLinkSpecifics.properties.encodeUrl.type": "boolean",
	"definitions.Api.Core.Dto.Datapoints.TrackingLinkSpecifics.properties.expirationClicks.format": "int64",
	"definitions.Api.Core.Dto.Datapoints.TrackingLinkSpecifics.properties.expirationClicks.type": "integer",
	"definitions.Api.Core.Dto.Datapoints.TrackingLinkSpecifics.properties.expirationDate.description": " (A date in \"YmdHis\" format)",
	"definitions.Api.Core.Dto.Datapoints.TrackingLinkSpecifics.properties.expirationDate.example": "20120203120530",
	"definitions.Api.Core.Dto.Datapoints.TrackingLinkSpecifics.properties.expirationDate.type": "string",
	"definitions.Api.Core.Dto.Datapoints.TrackingLinkSpecifics.properties.firstUrl.type": "string",
	"definitions.Api.Core.Dto.Datapoints.TrackingLinkSpecifics.properties.goDomainId.format": "int32",
	"definitions.Api.Core.Dto.Datapoints.TrackingLinkSpecifics.properties.goDomainId.type": "integer",
	"definitions.Api.Core.Dto.Datapoints.TrackingLinkSpecifics.properties.hideUrl.type": "boolean",
	"definitions.Api.Core.Dto.Datapoints.TrackingLinkSpecifics.properties.hideUrlTitle.type": "string",
	"definitions.Api.Core.Dto.Datapoints.TrackingLinkSpecifics.properties.isABTest.type": "boolean",
	"definitions.Api.Core.Dto.Datapoints.TrackingLinkSpecifics.properties.password.type": "string",
	"definitions.Api.Core.Dto.Datapoints.TrackingLinkSpecifics.properties.pauseAfterClicksExpiration.type": "boolean",
	"definitions.Api.Core.Dto.Datapoints.TrackingLinkSpecifics.properties.pauseAfterDateExpiration.type": "boolean",
	"definitions.Api.Core.Dto.Datapoints.TrackingLinkSpecifics.properties.randomDestinationItems.items.$ref": "#/definitions/Api.Core.Dto.Datapoints.MultipleDestinationItem",
	"definitions.Api.Core.Dto.Datapoints.TrackingLinkSpecifics.properties.randomDestinationItems.type": "array",
	"definitions.Api.Core.Dto.Datapoints.TrackingLinkSpecifics.properties.redirectType.enum.length": 2,
	"definitions.Api.Core.Dto.Datapoints.TrackingLinkSpecifics.properties.redirectType.enum[0]": "PermanentRedirect",
	"definitions.Api.Core.Dto.Datapoints.TrackingLinkSpecifics.properties.redirectType.enum[1]": "TemporaryRedirect",
	"definitions.Api.Core.Dto.Datapoints.TrackingLinkSpecifics.properties.redirectType.type": "string",
	"definitions.Api.Core.Dto.Datapoints.TrackingLinkSpecifics.properties.referrerClean.enum.length": 3,
	"definitions.Api.Core.Dto.Datapoints.TrackingLinkSpecifics.properties.referrerClean.enum[0]": "None",
	"definitions.Api.Core.Dto.Datapoints.TrackingLinkSpecifics.properties.referrerClean.enum[1]": "Clean",
	"definitions.Api.Core.Dto.Datapoints.TrackingLinkSpecifics.properties.referrerClean.enum[2]": "Myself",
	"definitions.Api.Core.Dto.Datapoints.TrackingLinkSpecifics.properties.referrerClean.type": "string",
	"definitions.Api.Core.Dto.Datapoints.TrackingLinkSpecifics.properties.scripts.items.$ref": "#/definitions/Api.Core.Dto.Datapoints.DatapointRetargetingInfo",
	"definitions.Api.Core.Dto.Datapoints.TrackingLinkSpecifics.properties.scripts.type": "array",
	"definitions.Api.Core.Dto.Datapoints.TrackingLinkSpecifics.properties.sequentialDestinationItems.items.$ref": "#/definitions/Api.Core.Dto.Datapoints.MultipleDestinationItem",
	"definitions.Api.Core.Dto.Datapoints.TrackingLinkSpecifics.properties.sequentialDestinationItems.type": "array",
	"definitions.Api.Core.Dto.Datapoints.TrackingLinkSpecifics.properties.spilloverDestinationItems.items.$ref": "#/definitions/Api.Core.Dto.Datapoints.MultipleDestinationItem",
	"definitions.Api.Core.Dto.Datapoints.TrackingLinkSpecifics.properties.spilloverDestinationItems.type": "array",
	"definitions.Api.Core.Dto.Datapoints.TrackingLinkSpecifics.properties.uniqueDestinationItem.$ref": "#/definitions/Api.Core.Dto.Datapoints.UniqueDestinationItem",
	"definitions.Api.Core.Dto.Datapoints.TrackingLinkSpecifics.properties.url.type": "string",
	"definitions.Api.Core.Dto.Datapoints.TrackingLinkSpecifics.properties.urlAfterClicksExpiration.type": "string",
	"definitions.Api.Core.Dto.Datapoints.TrackingLinkSpecifics.properties.urlAfterDateExpiration.type": "string",
	"definitions.Api.Core.Dto.Datapoints.TrackingLinkSpecifics.properties.urlsByLanguage.items.$ref": "#/definitions/Api.Core.Dto.Datapoints.UrlByLanguageItem",
	"definitions.Api.Core.Dto.Datapoints.TrackingLinkSpecifics.properties.urlsByLanguage.type": "array",
	"definitions.Api.Core.Dto.Datapoints.TrackingLinkSpecifics.properties.urlsByNation.items.$ref": "#/definitions/Api.Core.Dto.Datapoints.UrlByNationItem",
	"definitions.Api.Core.Dto.Datapoints.TrackingLinkSpecifics.properties.urlsByNation.type": "array",
	"definitions.Api.Core.Dto.Datapoints.TrackingLinkSpecifics.properties.weightedDestinationItems.items.$ref": "#/definitions/Api.Core.Dto.Datapoints.WeightedDestinationItem",
	"definitions.Api.Core.Dto.Datapoints.TrackingLinkSpecifics.properties.weightedDestinationItems.type": "array",
	"definitions.Api.Core.Dto.Datapoints.TrackingLinkSpecifics.type": "object",
	"definitions.Api.Core.Dto.Datapoints.TrackingPixelSpecifics.properties.parameterNote.type": "string",
	"definitions.Api.Core.Dto.Datapoints.TrackingPixelSpecifics.type": "object",
	"definitions.Api.Core.Dto.Datapoints.UniqueDestinationItem.properties.firstDestinationUrl.type": "string",
	"definitions.Api.Core.Dto.Datapoints.UniqueDestinationItem.type": "object",
	"definitions.Api.Core.Dto.Datapoints.UrlByLanguageItem.properties.languageCode.type": "string",
	"definitions.Api.Core.Dto.Datapoints.UrlByLanguageItem.properties.url.type": "string",
	"definitions.Api.Core.Dto.Datapoints.UrlByLanguageItem.type": "object",
	"definitions.Api.Core.Dto.Datapoints.UrlByNationItem.properties.nation.type": "string",
	"definitions.Api.Core.Dto.Datapoints.UrlByNationItem.properties.url.type": "string",
	"definitions.Api.Core.Dto.Datapoints.UrlByNationItem.type": "object",
	"definitions.Api.Core.Dto.Datapoints.WeightedDestinationItem.properties.url.type": "string",
	"definitions.Api.Core.Dto.Datapoints.WeightedDestinationItem.properties.weight.format": "int32",
	"definitions.Api.Core.Dto.Datapoints.WeightedDestinationItem.properties.weight.type": "integer",
	"definitions.Api.Core.Dto.Datapoints.WeightedDestinationItem.type": "object",
	"definitions.Api.Core.Dto.Domains.Domain.properties.custom404.type": "string",
	"definitions.Api.Core.Dto.Domains.Domain.properties.customHomepage.type": "string",
	"definitions.Api.Core.Dto.Domains.Domain.properties.id.format": "int64",
	"definitions.Api.Core.Dto.Domains.Domain.properties.id.type": "integer",
	"definitions.Api.Core.Dto.Domains.Domain.properties.name.type": "string",
	"definitions.Api.Core.Dto.Domains.Domain.properties.type.enum.length": 4,
	"definitions.Api.Core.Dto.Domains.Domain.properties.type.enum[0]": "System",
	"definitions.Api.Core.Dto.Domains.Domain.properties.type.enum[1]": "Go",
	"definitions.Api.Core.Dto.Domains.Domain.properties.type.enum[2]": "Dedicated",
	"definitions.Api.Core.Dto.Domains.Domain.properties.type.enum[3]": "Personal",
	"definitions.Api.Core.Dto.Domains.Domain.properties.type.type": "string",
	"definitions.Api.Core.Dto.Domains.Domain.type": "object",
	"definitions.Api.Core.Dto.EntityUriLong.properties.id.format": "int64",
	"definitions.Api.Core.Dto.EntityUriLong.properties.id.type": "integer",
	"definitions.Api.Core.Dto.EntityUriLong.properties.uri.type": "string",
	"definitions.Api.Core.Dto.EntityUriLong.type": "object",
	"definitions.Api.Core.Dto.Grants.Grant.properties.DatapointType.type": "string",
	"definitions.Api.Core.Dto.Grants.Grant.properties.Entity.$ref": "#/definitions/Api.Core.Responses.EntityUri[System.Int64]",
	"definitions.Api.Core.Dto.Grants.Grant.properties.EntityName.type": "string",
	"definitions.Api.Core.Dto.Grants.Grant.properties.EntityType.type": "string",
	"definitions.Api.Core.Dto.Grants.Grant.properties.Type.type": "string",
	"definitions.Api.Core.Dto.Grants.Grant.type": "object",
	"definitions.Api.Core.Dto.Groups.Group.properties.creationDate.description": " (A date in \"YmdHis\" format)",
	"definitions.Api.Core.Dto.Groups.Group.properties.creationDate.example": "20120203120530",
	"definitions.Api.Core.Dto.Groups.Group.properties.creationDate.type": "string",
	"definitions.Api.Core.Dto.Groups.Group.properties.deleted.type": "boolean",
	"definitions.Api.Core.Dto.Groups.Group.properties.id.format": "int64",
	"definitions.Api.Core.Dto.Groups.Group.properties.id.type": "integer",
	"definitions.Api.Core.Dto.Groups.Group.properties.isPublic.type": "boolean",
	"definitions.Api.Core.Dto.Groups.Group.properties.name.type": "string",
	"definitions.Api.Core.Dto.Groups.Group.properties.notes.type": "string",
	"definitions.Api.Core.Dto.Groups.Group.properties.preferred.type": "boolean",
	"definitions.Api.Core.Dto.Groups.Group.properties.redirectOnly.type": "boolean",
	"definitions.Api.Core.Dto.Groups.Group.properties.tags.items.$ref": "#/definitions/Api.Core.Dto.Tags.Tag",
	"definitions.Api.Core.Dto.Groups.Group.properties.tags.type": "array",
	"definitions.Api.Core.Dto.Groups.Group.properties.writePermited.type": "boolean",
	"definitions.Api.Core.Dto.Groups.Group.type": "object",
	"definitions.Api.Core.Dto.Retargeting.RetargetingScript.properties.id.format": "int64",
	"definitions.Api.Core.Dto.Retargeting.RetargetingScript.properties.id.type": "integer",
	"definitions.Api.Core.Dto.Retargeting.RetargetingScript.properties.name.type": "string",
	"definitions.Api.Core.Dto.Retargeting.RetargetingScript.properties.script.type": "string",
	"definitions.Api.Core.Dto.Retargeting.RetargetingScript.type": "object",
	"definitions.Api.Core.Dto.Tags.Tag.properties.datapoints.items.format": "int64",
	"definitions.Api.Core.Dto.Tags.Tag.properties.datapoints.items.type": "integer",
	"definitions.Api.Core.Dto.Tags.Tag.properties.datapoints.type": "array",
	"definitions.Api.Core.Dto.Tags.Tag.properties.groups.items.format": "int64",
	"definitions.Api.Core.Dto.Tags.Tag.properties.groups.items.type": "integer",
	"definitions.Api.Core.Dto.Tags.Tag.properties.groups.type": "array",
	"definitions.Api.Core.Dto.Tags.Tag.properties.id.format": "int64",
	"definitions.Api.Core.Dto.Tags.Tag.properties.id.type": "integer",
	"definitions.Api.Core.Dto.Tags.Tag.properties.name.type": "string",
	"definitions.Api.Core.Dto.Tags.Tag.type": "object",
	"definitions.Api.Core.Dto.Tops.Top.properties.createdAt.description": " (A date in \"YmdHis\" format)",
	"definitions.Api.Core.Dto.Tops.Top.properties.createdAt.example": "20120203120530",
	"definitions.Api.Core.Dto.Tops.Top.properties.createdAt.type": "string",
	"definitions.Api.Core.Dto.Tops.Top.properties.data.items.$ref": "#/definitions/Api.Core.Dto.Tops.TopItem",
	"definitions.Api.Core.Dto.Tops.Top.properties.data.type": "array",
	"definitions.Api.Core.Dto.Tops.Top.properties.key.type": "string",
	"definitions.Api.Core.Dto.Tops.Top.type": "object",
	"definitions.Api.Core.Dto.Tops.TopItem.properties.entityData.$ref": "#/definitions/System.Object",
	"definitions.Api.Core.Dto.Tops.TopItem.properties.id.type": "string",
	"definitions.Api.Core.Dto.Tops.TopItem.properties.lastHitDate.description": " (A date in \"YmdHis\" format)",
	"definitions.Api.Core.Dto.Tops.TopItem.properties.lastHitDate.example": "20120203120530",
	"definitions.Api.Core.Dto.Tops.TopItem.properties.lastHitDate.type": "string",
	"definitions.Api.Core.Dto.Tops.TopItem.properties.spiderClicks.format": "int64",
	"definitions.Api.Core.Dto.Tops.TopItem.properties.spiderClicks.type": "integer",
	"definitions.Api.Core.Dto.Tops.TopItem.properties.spiderHits.format": "int64",
	"definitions.Api.Core.Dto.Tops.TopItem.properties.spiderHits.type": "integer",
	"definitions.Api.Core.Dto.Tops.TopItem.properties.spiderViews.format": "int64",
	"definitions.Api.Core.Dto.Tops.TopItem.properties.spiderViews.type": "integer",
	"definitions.Api.Core.Dto.Tops.TopItem.properties.totalClicks.format": "int64",
	"definitions.Api.Core.Dto.Tops.TopItem.properties.totalClicks.type": "integer",
	"definitions.Api.Core.Dto.Tops.TopItem.properties.totalCommissionsCost.format": "double",
	"definitions.Api.Core.Dto.Tops.TopItem.properties.totalCommissionsCost.type": "number",
	"definitions.Api.Core.Dto.Tops.TopItem.properties.totalConversions.format": "int64",
	"definitions.Api.Core.Dto.Tops.TopItem.properties.totalConversions.type": "integer",
	"definitions.Api.Core.Dto.Tops.TopItem.properties.totalConversionsCost.format": "double",
	"definitions.Api.Core.Dto.Tops.TopItem.properties.totalConversionsCost.type": "number",
	"definitions.Api.Core.Dto.Tops.TopItem.properties.totalConversionsValue.format": "double",
	"definitions.Api.Core.Dto.Tops.TopItem.properties.totalConversionsValue.type": "number",
	"definitions.Api.Core.Dto.Tops.TopItem.properties.totalHits.format": "int64",
	"definitions.Api.Core.Dto.Tops.TopItem.properties.totalHits.type": "integer",
	"definitions.Api.Core.Dto.Tops.TopItem.properties.totalViews.format": "int64",
	"definitions.Api.Core.Dto.Tops.TopItem.properties.totalViews.type": "integer",
	"definitions.Api.Core.Dto.Tops.TopItem.properties.uniqueClicks.format": "int64",
	"definitions.Api.Core.Dto.Tops.TopItem.properties.uniqueClicks.type": "integer",
	"definitions.Api.Core.Dto.Tops.TopItem.properties.uniqueHits.format": "int64",
	"definitions.Api.Core.Dto.Tops.TopItem.properties.uniqueHits.type": "integer",
	"definitions.Api.Core.Dto.Tops.TopItem.properties.uniqueViews.format": "int64",
	"definitions.Api.Core.Dto.Tops.TopItem.properties.uniqueViews.type": "integer",
	"definitions.Api.Core.Dto.Tops.TopItem.type": "object",
	"definitions.Api.Core.Requests.ConversionPatchBody.properties.Action.type": "string",
	"definitions.Api.Core.Requests.ConversionPatchBody.properties.Id.format": "int64",
	"definitions.Api.Core.Requests.ConversionPatchBody.properties.Id.type": "integer",
	"definitions.Api.Core.Requests.ConversionPatchBody.properties.ReplaceId.format": "int64",
	"definitions.Api.Core.Requests.ConversionPatchBody.properties.ReplaceId.type": "integer",
	"definitions.Api.Core.Requests.ConversionPatchBody.type": "object",
	"definitions.Api.Core.Requests.DatapointsBatch.properties.List.items.$ref": "#/definitions/Api.Core.Dto.Datapoints.Datapoint",
	"definitions.Api.Core.Requests.DatapointsBatch.properties.List.type": "array",
	"definitions.Api.Core.Requests.DatapointsBatch.type": "object",
	"definitions.Api.Core.Requests.DeleteBatch.properties.Entities.items.$ref": "#/definitions/Api.Core.Dto.EntityUriLong",
	"definitions.Api.Core.Requests.DeleteBatch.properties.Entities.type": "array",
	"definitions.Api.Core.Requests.DeleteBatch.type": "object",
	"definitions.Api.Core.Requests.GenericTextPatch.properties.Text.type": "string",
	"definitions.Api.Core.Requests.GenericTextPatch.type": "object",
	"definitions.Api.Core.Requests.PatchBody.properties.Action.type": "string",
	"definitions.Api.Core.Requests.PatchBody.properties.Id.format": "int64",
	"definitions.Api.Core.Requests.PatchBody.properties.Id.type": "integer",
	"definitions.Api.Core.Requests.PatchBody.type": "object",
	"definitions.Api.Core.Requests.PatchBodyBatch.properties.PatchRequests.items.$ref": "#/definitions/Api.Core.Requests.PatchBody",
	"definitions.Api.Core.Requests.PatchBodyBatch.properties.PatchRequests.type": "array",
	"definitions.Api.Core.Requests.PatchBodyBatch.type": "object",
	"definitions.Api.Core.Requests.PermissionPatchRequest.properties.Action.type": "string",
	"definitions.Api.Core.Requests.PermissionPatchRequest.properties.Id.format": "int64",
	"definitions.Api.Core.Requests.PermissionPatchRequest.properties.Id.type": "integer",
	"definitions.Api.Core.Requests.PermissionPatchRequest.properties.Verb.type": "string",
	"definitions.Api.Core.Requests.PermissionPatchRequest.type": "object",
	"definitions.Api.Core.Responses.CountResponce.properties.count.format": "int64",
	"definitions.Api.Core.Responses.CountResponce.properties.count.type": "integer",
	"definitions.Api.Core.Responses.CountResponce.type": "object",
	"definitions.Api.Core.Responses.EntitiesResponse[Api.Core.Dto.Accounting.DomainWhitelistEntry].properties.entities.items.$ref": "#/definitions/Api.Core.Dto.Accounting.DomainWhitelistEntry",
	"definitions.Api.Core.Responses.EntitiesResponse[Api.Core.Dto.Accounting.DomainWhitelistEntry].properties.entities.type": "array",
	"definitions.Api.Core.Responses.EntitiesResponse[Api.Core.Dto.Accounting.DomainWhitelistEntry].type": "object",
	"definitions.Api.Core.Responses.EntitiesResponse[Api.Core.Dto.Accounting.IpBlacklistEntry].properties.entities.items.$ref": "#/definitions/Api.Core.Dto.Accounting.IpBlacklistEntry",
	"definitions.Api.Core.Responses.EntitiesResponse[Api.Core.Dto.Accounting.IpBlacklistEntry].properties.entities.type": "array",
	"definitions.Api.Core.Responses.EntitiesResponse[Api.Core.Dto.Accounting.IpBlacklistEntry].type": "object",
	"definitions.Api.Core.Responses.EntitiesResponse[Api.Core.Dto.Aggregated.AggregatedResult].properties.entities.items.$ref": "#/definitions/Api.Core.Dto.Aggregated.AggregatedResult",
	"definitions.Api.Core.Responses.EntitiesResponse[Api.Core.Dto.Aggregated.AggregatedResult].properties.entities.type": "array",
	"definitions.Api.Core.Responses.EntitiesResponse[Api.Core.Dto.Aggregated.AggregatedResult].type": "object",
	"definitions.Api.Core.Responses.EntitiesResponse[Api.Core.Dto.ClickStream.Hit].properties.entities.items.$ref": "#/definitions/Api.Core.Dto.ClickStream.Hit",
	"definitions.Api.Core.Responses.EntitiesResponse[Api.Core.Dto.ClickStream.Hit].properties.entities.type": "array",
	"definitions.Api.Core.Responses.EntitiesResponse[Api.Core.Dto.ClickStream.Hit].type": "object",
	"definitions.Api.Core.Responses.EntitiesResponse[Api.Core.Dto.Grants.Grant].properties.entities.items.$ref": "#/definitions/Api.Core.Dto.Grants.Grant",
	"definitions.Api.Core.Responses.EntitiesResponse[Api.Core.Dto.Grants.Grant].properties.entities.type": "array",
	"definitions.Api.Core.Responses.EntitiesResponse[Api.Core.Dto.Grants.Grant].type": "object",
	"definitions.Api.Core.Responses.EntitiesResponse[Api.Core.Responses.EntityUri[System.Int64]].properties.entities.items.$ref": "#/definitions/Api.Core.Responses.EntityUri[System.Int64]",
	"definitions.Api.Core.Responses.EntitiesResponse[Api.Core.Responses.EntityUri[System.Int64]].properties.entities.type": "array",
	"definitions.Api.Core.Responses.EntitiesResponse[Api.Core.Responses.EntityUri[System.Int64]].type": "object",
	"definitions.Api.Core.Responses.EntityUri[System.Int64].properties.id.format": "int64",
	"definitions.Api.Core.Responses.EntityUri[System.Int64].properties.id.type": "integer",
	"definitions.Api.Core.Responses.EntityUri[System.Int64].properties.uri.type": "string",
	"definitions.Api.Core.Responses.EntityUri[System.Int64].type": "object",
	"definitions.Api.Core.Responses.ModifyBatchItemResponce[Api.Core.Dto.Datapoints.Datapoint,System.Int64].properties.entityData.$ref": "#/definitions/Api.Core.Dto.Datapoints.Datapoint",
	"definitions.Api.Core.Responses.ModifyBatchItemResponce[Api.Core.Dto.Datapoints.Datapoint,System.Int64].properties.errors.items.$ref": "#/definitions/ClickMeter.Infrastructure.Validation.ValidationFailure",
	"definitions.Api.Core.Responses.ModifyBatchItemResponce[Api.Core.Dto.Datapoints.Datapoint,System.Int64].properties.errors.type": "array",
	"definitions.Api.Core.Responses.ModifyBatchItemResponce[Api.Core.Dto.Datapoints.Datapoint,System.Int64].properties.result.$ref": "#/definitions/Api.Core.Responses.EntityUri[System.Int64]",
	"definitions.Api.Core.Responses.ModifyBatchItemResponce[Api.Core.Dto.Datapoints.Datapoint,System.Int64].properties.status.type": "string",
	"definitions.Api.Core.Responses.ModifyBatchItemResponce[Api.Core.Dto.Datapoints.Datapoint,System.Int64].type": "object",
	"definitions.ClickMeter.Infrastructure.Validation.ValidationFailure.properties.code.$ref": "#/definitions/System.Object",
	"definitions.ClickMeter.Infrastructure.Validation.ValidationFailure.properties.errorMessage.type": "string",
	"definitions.ClickMeter.Infrastructure.Validation.ValidationFailure.properties.errorValue.$ref": "#/definitions/System.Object",
	"definitions.ClickMeter.Infrastructure.Validation.ValidationFailure.properties.property.type": "string",
	"definitions.ClickMeter.Infrastructure.Validation.ValidationFailure.type": "object",
	"definitions.System.Object.type": "object",
	"host": "apiv2.clickmeter.com:80",
	"info.contact.email": "api@clickmeter.com",
	"info.contact.name": "Api Support",
	"info.contact.url": "http://www.clickmeter.com/api",
	"info.description": "Api dashboard for ClickMeter API",
	"info.title": "ClickMeter",
	"info.version": "v2",
	"info.x-apisguru-categories.length": 1,
	"info.x-apisguru-categories[0]": "marketing",
	"info.x-logo.url": "https://api.apis.guru/v2/cache/logo/https_s3.amazonaws.com_clickmeter.com_Web_static_cmlogo.svg",
	"info.x-origin.length": 1,
	"info.x-origin[0].format": "swagger",
	"info.x-origin[0].url": "http://api.v2.clickmeter.com.s3.amazonaws.com/docs/api-docs-v2.json",
	"info.x-origin[0].version": "2.0",
	"info.x-preferred": true,
	"info.x-providerName": "clickmeter.com",
	"paths./account.get.consumes.length": 0,
	"paths./account.get.deprecated": false,
	"paths./account.get.produces.length": 4,
	"paths./account.get.produces[0]": "application/json",
	"paths./account.get.produces[1]": "text/json",
	"paths./account.get.produces[2]": "application/xml",
	"paths./account.get.produces[3]": "text/xml",
	"paths./account.get.responses.200.description": "",
	"paths./account.get.responses.200.schema.$ref": "#/definitions/Api.Core.Dto.Accounting.User",
	"paths./account.get.responses.401.description": "Unauthorized",
	"paths./account.get.responses.500.description": "Internal Server Error",
	"paths./account.get.summary": "Retrieve current account data",
	"paths./account.get.tags.length": 1,
	"paths./account.get.tags[0]": "Account",
	"paths./account.post.consumes.length": 5,
	"paths./account.post.consumes[0]": "application/json",
	"paths./account.post.consumes[1]": "text/json",
	"paths./account.post.consumes[2]": "application/xml",
	"paths./account.post.consumes[3]": "text/xml",
	"paths./account.post.consumes[4]": "application/x-www-form-urlencoded",
	"paths./account.post.deprecated": false,
	"paths./account.post.parameters.length": 1,
	"paths./account.post.parameters[0].in": "body",
	"paths./account.post.parameters[0].name": "value",
	"paths./account.post.parameters[0].required": true,
	"paths./account.post.parameters[0].schema.$ref": "#/definitions/Api.Core.Dto.Accounting.User",
	"paths./account.post.produces.length": 4,
	"paths./account.post.produces[0]": "application/json",
	"paths./account.post.produces[1]": "text/json",
	"paths./account.post.produces[2]": "application/xml",
	"paths./account.post.produces[3]": "text/xml",
	"paths./account.post.responses.200.description": "",
	"paths./account.post.responses.200.schema.$ref": "#/definitions/Api.Core.Dto.Accounting.User",
	"paths./account.post.responses.401.description": "Unauthorized",
	"paths./account.post.responses.500.description": "Internal Server Error",
	"paths./account.post.summary": "Update current account data",
	"paths./account.post.tags.length": 1,
	"paths./account.post.tags[0]": "Account",
	"paths./account/domainwhitelist.get.consumes.length": 0,
	"paths./account/domainwhitelist.get.deprecated": false,
	"paths./account/domainwhitelist.get.parameters.length": 2,
	"paths./account/domainwhitelist.get.parameters[0].description": "Offset where to start from",
	"paths./account/domainwhitelist.get.parameters[0].format": "int32",
	"paths./account/domainwhitelist.get.parameters[0].in": "query",
	"paths./account/domainwhitelist.get.parameters[0].name": "offset",
	"paths./account/domainwhitelist.get.parameters[0].required": false,
	"paths./account/domainwhitelist.get.parameters[0].type": "integer",
	"paths./account/domainwhitelist.get.parameters[1].description": "Limit results to this number",
	"paths./account/domainwhitelist.get.parameters[1].format": "int32",
	"paths./account/domainwhitelist.get.parameters[1].in": "query",
	"paths./account/domainwhitelist.get.parameters[1].name": "limit",
	"paths./account/domainwhitelist.get.parameters[1].required": false,
	"paths./account/domainwhitelist.get.parameters[1].type": "integer",
	"paths./account/domainwhitelist.get.produces.length": 2,
	"paths./account/domainwhitelist.get.produces[0]": "application/json",
	"paths./account/domainwhitelist.get.produces[1]": "text/json",
	"paths./account/domainwhitelist.get.responses.200.description": "",
	"paths./account/domainwhitelist.get.responses.200.schema.$ref": "#/definitions/Api.Core.Responses.EntitiesResponse[Api.Core.Dto.Accounting.DomainWhitelistEntry]",
	"paths./account/domainwhitelist.get.responses.401.description": "Unauthorized",
	"paths./account/domainwhitelist.get.responses.500.description": "Internal Server Error",
	"paths./account/domainwhitelist.get.summary": "Retrieve list of a domains allowed to redirect in DDU mode",
	"paths./account/domainwhitelist.get.tags.length": 1,
	"paths./account/domainwhitelist.get.tags[0]": "Account",
	"paths./account/domainwhitelist.post.consumes.length": 5,
	"paths./account/domainwhitelist.post.consumes[0]": "application/json",
	"paths./account/domainwhitelist.post.consumes[1]": "text/json",
	"paths./account/domainwhitelist.post.consumes[2]": "application/xml",
	"paths./account/domainwhitelist.post.consumes[3]": "text/xml",
	"paths./account/domainwhitelist.post.consumes[4]": "application/x-www-form-urlencoded",
	"paths./account/domainwhitelist.post.deprecated": false,
	"paths./account/domainwhitelist.post.parameters.length": 1,
	"paths./account/domainwhitelist.post.parameters[0].description": "The entry to add",
	"paths./account/domainwhitelist.post.parameters[0].in": "body",
	"paths./account/domainwhitelist.post.parameters[0].name": "value",
	"paths./account/domainwhitelist.post.parameters[0].required": true,
	"paths./account/domainwhitelist.post.parameters[0].schema.$ref": "#/definitions/Api.Core.Dto.Accounting.DomainWhitelistEntry",
	"paths./account/domainwhitelist.post.produces.length": 4,
	"paths./account/domainwhitelist.post.produces[0]": "application/json",
	"paths./account/domainwhitelist.post.produces[1]": "text/json",
	"paths./account/domainwhitelist.post.produces[2]": "application/xml",
	"paths./account/domainwhitelist.post.produces[3]": "text/xml",
	"paths./account/domainwhitelist.post.responses.200.description": "",
	"paths./account/domainwhitelist.post.responses.200.schema.$ref": "#/definitions/Api.Core.Dto.Accounting.DomainWhitelistEntry",
	"paths./account/domainwhitelist.post.responses.401.description": "Unauthorized",
	"paths./account/domainwhitelist.post.responses.500.description": "Internal Server Error",
	"paths./account/domainwhitelist.post.summary": "Create an domain entry",
	"paths./account/domainwhitelist.post.tags.length": 1,
	"paths./account/domainwhitelist.post.tags[0]": "Account",
	"paths./account/domainwhitelist/{whitelistId}.delete.consumes.length": 0,
	"paths./account/domainwhitelist/{whitelistId}.delete.deprecated": false,
	"paths./account/domainwhitelist/{whitelistId}.delete.parameters.length": 1,
	"paths./account/domainwhitelist/{whitelistId}.delete.parameters[0].description": "The id of the domain to delete",
	"paths./account/domainwhitelist/{whitelistId}.delete.parameters[0].in": "path",
	"paths./account/domainwhitelist/{whitelistId}.delete.parameters[0].name": "whitelistId",
	"paths./account/domainwhitelist/{whitelistId}.delete.parameters[0].required": true,
	"paths./account/domainwhitelist/{whitelistId}.delete.parameters[0].type": "string",
	"paths./account/domainwhitelist/{whitelistId}.delete.produces.length": 4,
	"paths./account/domainwhitelist/{whitelistId}.delete.produces[0]": "application/json",
	"paths./account/domainwhitelist/{whitelistId}.delete.produces[1]": "text/json",
	"paths./account/domainwhitelist/{whitelistId}.delete.produces[2]": "application/xml",
	"paths./account/domainwhitelist/{whitelistId}.delete.produces[3]": "text/xml",
	"paths./account/domainwhitelist/{whitelistId}.delete.responses.200.description": "",
	"paths./account/domainwhitelist/{whitelistId}.delete.responses.200.schema.$ref": "#/definitions/Api.Core.Dto.Accounting.DomainWhitelistEntry",
	"paths./account/domainwhitelist/{whitelistId}.delete.responses.401.description": "Unauthorized",
	"paths./account/domainwhitelist/{whitelistId}.delete.responses.500.description": "Internal Server Error",
	"paths./account/domainwhitelist/{whitelistId}.delete.summary": "Delete an domain entry",
	"paths./account/domainwhitelist/{whitelistId}.delete.tags.length": 1,
	"paths./account/domainwhitelist/{whitelistId}.delete.tags[0]": "Account",
	"paths./account/guests.get.consumes.length": 0,
	"paths./account/guests.get.deprecated": false,
	"paths./account/guests.get.parameters.length": 5,
	"paths./account/guests.get.parameters[0].description": "Offset where to start from",
	"paths./account/guests.get.parameters[0].format": "int32",
	"paths./account/guests.get.parameters[0].in": "query",
	"paths./account/guests.get.parameters[0].name": "offset",
	"paths./account/guests.get.parameters[0].required": false,
	"paths./account/guests.get.parameters[0].type": "integer",
	"paths./account/guests.get.parameters[1].description": "Limit results to this number",
	"paths./account/guests.get.parameters[1].format": "int32",
	"paths./account/guests.get.parameters[1].in": "query",
	"paths./account/guests.get.parameters[1].name": "limit",
	"paths./account/guests.get.parameters[1].required": false,
	"paths./account/guests.get.parameters[1].type": "integer",
	"paths./account/guests.get.parameters[2].description": "Field to sort by",
	"paths./account/guests.get.parameters[2].in": "query",
	"paths./account/guests.get.parameters[2].name": "sortBy",
	"paths./account/guests.get.parameters[2].required": false,
	"paths./account/guests.get.parameters[2].type": "string",
	"paths./account/guests.get.parameters[3].description": "Direction of sort \"asc\" or \"desc\"",
	"paths./account/guests.get.parameters[3].enum.length": 2,
	"paths./account/guests.get.parameters[3].enum[0]": "asc",
	"paths./account/guests.get.parameters[3].enum[1]": "desc",
	"paths./account/guests.get.parameters[3].in": "query",
	"paths./account/guests.get.parameters[3].name": "sortDirection",
	"paths./account/guests.get.parameters[3].required": false,
	"paths./account/guests.get.parameters[3].type": "string",
	"paths./account/guests.get.parameters[4].description": "Filter fields by this pattern",
	"paths./account/guests.get.parameters[4].in": "query",
	"paths./account/guests.get.parameters[4].name": "textSearch",
	"paths./account/guests.get.parameters[4].required": false,
	"paths./account/guests.get.parameters[4].type": "string",
	"paths./account/guests.get.produces.length": 2,
	"paths./account/guests.get.produces[0]": "application/json",
	"paths./account/guests.get.produces[1]": "text/json",
	"paths./account/guests.get.responses.200.description": "",
	"paths./account/guests.get.responses.200.schema.$ref": "#/definitions/Api.Core.Responses.EntitiesResponse[Api.Core.Responses.EntityUri[System.Int64]]",
	"paths./account/guests.get.responses.401.description": "Unauthorized",
	"paths./account/guests.get.responses.500.description": "Internal Server Error",
	"paths./account/guests.get.summary": "Retrieve list of a guest",
	"paths./account/guests.get.tags.length": 1,
	"paths./account/guests.get.tags[0]": "Account",
	"paths./account/guests.post.consumes.length": 5,
	"paths./account/guests.post.consumes[0]": "application/json",
	"paths./account/guests.post.consumes[1]": "text/json",
	"paths./account/guests.post.consumes[2]": "application/xml",
	"paths./account/guests.post.consumes[3]": "text/xml",
	"paths./account/guests.post.consumes[4]": "application/x-www-form-urlencoded",
	"paths./account/guests.post.deprecated": false,
	"paths./account/guests.post.parameters.length": 1,
	"paths./account/guests.post.parameters[0].description": "Guest object to create",
	"paths./account/guests.post.parameters[0].in": "body",
	"paths./account/guests.post.parameters[0].name": "value",
	"paths./account/guests.post.parameters[0].required": true,
	"paths./account/guests.post.parameters[0].schema.$ref": "#/definitions/Api.Core.Dto.Accounting.Guest",
	"paths./account/guests.post.produces.length": 4,
	"paths./account/guests.post.produces[0]": "application/json",
	"paths./account/guests.post.produces[1]": "text/json",
	"paths./account/guests.post.produces[2]": "application/xml",
	"paths./account/guests.post.produces[3]": "text/xml",
	"paths./account/guests.post.responses.200.description": "",
	"paths./account/guests.post.responses.200.schema.$ref": "#/definitions/Api.Core.Dto.Accounting.Guest",
	"paths./account/guests.post.responses.401.description": "Unauthorized",
	"paths./account/guests.post.responses.500.description": "Internal Server Error",
	"paths./account/guests.post.summary": "Create a guest",
	"paths./account/guests.post.tags.length": 1,
	"paths./account/guests.post.tags[0]": "Account",
	"paths./account/guests/count.get.consumes.length": 0,
	"paths./account/guests/count.get.deprecated": false,
	"paths./account/guests/count.get.parameters.length": 1,
	"paths./account/guests/count.get.parameters[0].description": "Filter fields by this pattern",
	"paths./account/guests/count.get.parameters[0].in": "query",
	"paths./account/guests/count.get.parameters[0].name": "textSearch",
	"paths./account/guests/count.get.parameters[0].required": false,
	"paths./account/guests/count.get.parameters[0].type": "string",
	"paths./account/guests/count.get.produces.length": 4,
	"paths./account/guests/count.get.produces[0]": "application/json",
	"paths./account/guests/count.get.produces[1]": "text/json",
	"paths./account/guests/count.get.produces[2]": "application/xml",
	"paths./account/guests/count.get.produces[3]": "text/xml",
	"paths./account/guests/count.get.responses.200.description": "",
	"paths./account/guests/count.get.responses.200.schema.$ref": "#/definitions/Api.Core.Responses.CountResponce",
	"paths./account/guests/count.get.responses.401.description": "Unauthorized",
	"paths./account/guests/count.get.responses.500.description": "Internal Server Error",
	"paths./account/guests/count.get.summary": "Retrieve count of guests",
	"paths./account/guests/count.get.tags.length": 1,
	"paths./account/guests/count.get.tags[0]": "Account",
	"paths./account/guests/{guestId}.delete.consumes.length": 0,
	"paths./account/guests/{guestId}.delete.deprecated": false,
	"paths./account/guests/{guestId}.delete.parameters.length": 1,
	"paths./account/guests/{guestId}.delete.parameters[0].description": "Id of the guest",
	"paths./account/guests/{guestId}.delete.parameters[0].format": "int64",
	"paths./account/guests/{guestId}.delete.parameters[0].in": "path",
	"paths./account/guests/{guestId}.delete.parameters[0].name": "guestId",
	"paths./account/guests/{guestId}.delete.parameters[0].required": true,
	"paths./account/guests/{guestId}.delete.parameters[0].type": "integer",
	"paths./account/guests/{guestId}.delete.produces.length": 4,
	"paths./account/guests/{guestId}.delete.produces[0]": "application/json",
	"paths./account/guests/{guestId}.delete.produces[1]": "text/json",
	"paths./account/guests/{guestId}.delete.produces[2]": "application/xml",
	"paths./account/guests/{guestId}.delete.produces[3]": "text/xml",
	"paths./account/guests/{guestId}.delete.responses.200.description": "",
	"paths./account/guests/{guestId}.delete.responses.200.schema.$ref": "#/definitions/Api.Core.Responses.EntityUri[System.Int64]",
	"paths./account/guests/{guestId}.delete.responses.401.description": "Unauthorized",
	"paths./account/guests/{guestId}.delete.responses.500.description": "Internal Server Error",
	"paths./account/guests/{guestId}.delete.summary": "Delete a guest",
	"paths./account/guests/{guestId}.delete.tags.length": 1,
	"paths./account/guests/{guestId}.delete.tags[0]": "Account",
	"paths./account/guests/{guestId}.get.consumes.length": 0,
	"paths./account/guests/{guestId}.get.deprecated": false,
	"paths./account/guests/{guestId}.get.parameters.length": 1,
	"paths./account/guests/{guestId}.get.parameters[0].description": "Id of the guest",
	"paths./account/guests/{guestId}.get.parameters[0].format": "int64",
	"paths./account/guests/{guestId}.get.parameters[0].in": "path",
	"paths./account/guests/{guestId}.get.parameters[0].name": "guestId",
	"paths./account/guests/{guestId}.get.parameters[0].required": true,
	"paths./account/guests/{guestId}.get.parameters[0].type": "integer",
	"paths./account/guests/{guestId}.get.produces.length": 4,
	"paths./account/guests/{guestId}.get.produces[0]": "application/json",
	"paths./account/guests/{guestId}.get.produces[1]": "text/json",
	"paths./account/guests/{guestId}.get.produces[2]": "application/xml",
	"paths./account/guests/{guestId}.get.produces[3]": "text/xml",
	"paths./account/guests/{guestId}.get.responses.200.description": "",
	"paths./account/guests/{guestId}.get.responses.200.schema.$ref": "#/definitions/Api.Core.Dto.Accounting.Guest",
	"paths./account/guests/{guestId}.get.responses.401.description": "Unauthorized",
	"paths./account/guests/{guestId}.get.responses.500.description": "Internal Server Error",
	"paths./account/guests/{guestId}.get.summary": "Retrieve a guest",
	"paths./account/guests/{guestId}.get.tags.length": 1,
	"paths./account/guests/{guestId}.get.tags[0]": "Account",
	"paths./account/guests/{guestId}.post.consumes.length": 5,
	"paths./account/guests/{guestId}.post.consumes[0]": "application/json",
	"paths./account/guests/{guestId}.post.consumes[1]": "text/json",
	"paths./account/guests/{guestId}.post.consumes[2]": "application/xml",
	"paths./account/guests/{guestId}.post.consumes[3]": "text/xml",
	"paths./account/guests/{guestId}.post.consumes[4]": "application/x-www-form-urlencoded",
	"paths./account/guests/{guestId}.post.deprecated": false,
	"paths./account/guests/{guestId}.post.parameters.length": 2,
	"paths./account/guests/{guestId}.post.parameters[0].description": "Id of the guest",
	"paths./account/guests/{guestId}.post.parameters[0].format": "int64",
	"paths./account/guests/{guestId}.post.parameters[0].in": "path",
	"paths./account/guests/{guestId}.post.parameters[0].name": "guestId",
	"paths./account/guests/{guestId}.post.parameters[0].required": true,
	"paths./account/guests/{guestId}.post.parameters[0].type": "integer",
	"paths./account/guests/{guestId}.post.parameters[1].description": "Guest object with field updated",
	"paths./account/guests/{guestId}.post.parameters[1].in": "body",
	"paths./account/guests/{guestId}.post.parameters[1].name": "value",
	"paths./account/guests/{guestId}.post.parameters[1].required": true,
	"paths./account/guests/{guestId}.post.parameters[1].schema.$ref": "#/definitions/Api.Core.Dto.Accounting.Guest",
	"paths./account/guests/{guestId}.post.produces.length": 4,
	"paths./account/guests/{guestId}.post.produces[0]": "application/json",
	"paths./account/guests/{guestId}.post.produces[1]": "text/json",
	"paths./account/guests/{guestId}.post.produces[2]": "application/xml",
	"paths./account/guests/{guestId}.post.produces[3]": "text/xml",
	"paths./account/guests/{guestId}.post.responses.200.description": "",
	"paths./account/guests/{guestId}.post.responses.200.schema.$ref": "#/definitions/Api.Core.Dto.Accounting.Guest",
	"paths./account/guests/{guestId}.post.responses.401.description": "Unauthorized",
	"paths./account/guests/{guestId}.post.responses.500.description": "Internal Server Error",
	"paths./account/guests/{guestId}.post.summary": "Update a guest",
	"paths./account/guests/{guestId}.post.tags.length": 1,
	"paths./account/guests/{guestId}.post.tags[0]": "Account",
	"paths./account/guests/{guestId}/permissions.get.consumes.length": 0,
	"paths./account/guests/{guestId}/permissions.get.deprecated": false,
	"paths./account/guests/{guestId}/permissions.get.parameters.length": 6,
	"paths./account/guests/{guestId}/permissions.get.parameters[0].description": "Id of the guest",
	"paths./account/guests/{guestId}/permissions.get.parameters[0].format": "int64",
	"paths./account/guests/{guestId}/permissions.get.parameters[0].in": "path",
	"paths./account/guests/{guestId}/permissions.get.parameters[0].name": "guestId",
	"paths./account/guests/{guestId}/permissions.get.parameters[0].required": true,
	"paths./account/guests/{guestId}/permissions.get.parameters[0].type": "integer",
	"paths./account/guests/{guestId}/permissions.get.parameters[1].description": "Can be \"datapoint\" or \"group\"",
	"paths./account/guests/{guestId}/permissions.get.parameters[1].enum.length": 2,
	"paths./account/guests/{guestId}/permissions.get.parameters[1].enum[0]": "datapoint",
	"paths./account/guests/{guestId}/permissions.get.parameters[1].enum[1]": "group",
	"paths./account/guests/{guestId}/permissions.get.parameters[1].in": "query",
	"paths./account/guests/{guestId}/permissions.get.parameters[1].name": "entityType",
	"paths./account/guests/{guestId}/permissions.get.parameters[1].required": false,
	"paths./account/guests/{guestId}/permissions.get.parameters[1].type": "string",
	"paths./account/guests/{guestId}/permissions.get.parameters[2].description": "Offset where to start from",
	"paths./account/guests/{guestId}/permissions.get.parameters[2].format": "int32",
	"paths./account/guests/{guestId}/permissions.get.parameters[2].in": "query",
	"paths./account/guests/{guestId}/permissions.get.parameters[2].name": "offset",
	"paths./account/guests/{guestId}/permissions.get.parameters[2].required": false,
	"paths./account/guests/{guestId}/permissions.get.parameters[2].type": "integer",
	"paths./account/guests/{guestId}/permissions.get.parameters[3].description": "Limit results to this number",
	"paths./account/guests/{guestId}/permissions.get.parameters[3].format": "int32",
	"paths./account/guests/{guestId}/permissions.get.parameters[3].in": "query",
	"paths./account/guests/{guestId}/permissions.get.parameters[3].name": "limit",
	"paths./account/guests/{guestId}/permissions.get.parameters[3].required": false,
	"paths./account/guests/{guestId}/permissions.get.parameters[3].type": "integer",
	"paths./account/guests/{guestId}/permissions.get.parameters[4].description": "Can be \"w\" or \"r\"",
	"paths./account/guests/{guestId}/permissions.get.parameters[4].enum.length": 2,
	"paths./account/guests/{guestId}/permissions.get.parameters[4].enum[0]": "r",
	"paths./account/guests/{guestId}/permissions.get.parameters[4].enum[1]": "w",
	"paths./account/guests/{guestId}/permissions.get.parameters[4].in": "query",
	"paths./account/guests/{guestId}/permissions.get.parameters[4].name": "type",
	"paths./account/guests/{guestId}/permissions.get.parameters[4].required": false,
	"paths./account/guests/{guestId}/permissions.get.parameters[4].type": "string",
	"paths./account/guests/{guestId}/permissions.get.parameters[5].description": "Optional id of the datapoint/group entity to filter by",
	"paths./account/guests/{guestId}/permissions.get.parameters[5].format": "int64",
	"paths./account/guests/{guestId}/permissions.get.parameters[5].in": "query",
	"paths./account/guests/{guestId}/permissions.get.parameters[5].name": "entityId",
	"paths./account/guests/{guestId}/permissions.get.parameters[5].required": false,
	"paths./account/guests/{guestId}/permissions.get.parameters[5].type": "integer",
	"paths./account/guests/{guestId}/permissions.get.produces.length": 2,
	"paths./account/guests/{guestId}/permissions.get.produces[0]": "application/json",
	"paths./account/guests/{guestId}/permissions.get.produces[1]": "text/json",
	"paths./account/guests/{guestId}/permissions.get.responses.200.description": "",
	"paths./account/guests/{guestId}/permissions.get.responses.200.schema.$ref": "#/definitions/Api.Core.Responses.EntitiesResponse[Api.Core.Dto.Grants.Grant]",
	"paths./account/guests/{guestId}/permissions.get.responses.401.description": "Unauthorized",
	"paths./account/guests/{guestId}/permissions.get.responses.500.description": "Internal Server Error",
	"paths./account/guests/{guestId}/permissions.get.summary": "Retrieve permissions for a guest",
	"paths./account/guests/{guestId}/permissions.get.tags.length": 1,
	"paths./account/guests/{guestId}/permissions.get.tags[0]": "Account",
	"paths./account/guests/{guestId}/permissions/count.get.consumes.length": 0,
	"paths./account/guests/{guestId}/permissions/count.get.deprecated": false,
	"paths./account/guests/{guestId}/permissions/count.get.parameters.length": 4,
	"paths./account/guests/{guestId}/permissions/count.get.parameters[0].description": "Id of the guest",
	"paths./account/guests/{guestId}/permissions/count.get.parameters[0].format": "int64",
	"paths./account/guests/{guestId}/permissions/count.get.parameters[0].in": "path",
	"paths./account/guests/{guestId}/permissions/count.get.parameters[0].name": "guestId",
	"paths./account/guests/{guestId}/permissions/count.get.parameters[0].required": true,
	"paths./account/guests/{guestId}/permissions/count.get.parameters[0].type": "integer",
	"paths./account/guests/{guestId}/permissions/count.get.parameters[1].description": "Can be \"datapoint\" or \"group\"",
	"paths./account/guests/{guestId}/permissions/count.get.parameters[1].enum.length": 2,
	"paths./account/guests/{guestId}/permissions/count.get.parameters[1].enum[0]": "datapoint",
	"paths./account/guests/{guestId}/permissions/count.get.parameters[1].enum[1]": "group",
	"paths./account/guests/{guestId}/permissions/count.get.parameters[1].in": "query",
	"paths./account/guests/{guestId}/permissions/count.get.parameters[1].name": "entityType",
	"paths./account/guests/{guestId}/permissions/count.get.parameters[1].required": false,
	"paths./account/guests/{guestId}/permissions/count.get.parameters[1].type": "string",
	"paths./account/guests/{guestId}/permissions/count.get.parameters[2].description": "Can be \"w\" or \"r\"",
	"paths./account/guests/{guestId}/permissions/count.get.parameters[2].enum.length": 2,
	"paths./account/guests/{guestId}/permissions/count.get.parameters[2].enum[0]": "r",
	"paths./account/guests/{guestId}/permissions/count.get.parameters[2].enum[1]": "w",
	"paths./account/guests/{guestId}/permissions/count.get.parameters[2].in": "query",
	"paths./account/guests/{guestId}/permissions/count.get.parameters[2].name": "type",
	"paths./account/guests/{guestId}/permissions/count.get.parameters[2].required": false,
	"paths./account/guests/{guestId}/permissions/count.get.parameters[2].type": "string",
	"paths./account/guests/{guestId}/permissions/count.get.parameters[3].description": "Optional id of the datapoint/group entity to filter by",
	"paths./account/guests/{guestId}/permissions/count.get.parameters[3].format": "int64",
	"paths./account/guests/{guestId}/permissions/count.get.parameters[3].in": "query",
	"paths./account/guests/{guestId}/permissions/count.get.parameters[3].name": "entityId",
	"paths./account/guests/{guestId}/permissions/count.get.parameters[3].required": false,
	"paths./account/guests/{guestId}/permissions/count.get.parameters[3].type": "integer",
	"paths./account/guests/{guestId}/permissions/count.get.produces.length": 4,
	"paths./account/guests/{guestId}/permissions/count.get.produces[0]": "application/json",
	"paths./account/guests/{guestId}/permissions/count.get.produces[1]": "text/json",
	"paths./account/guests/{guestId}/permissions/count.get.produces[2]": "application/xml",
	"paths./account/guests/{guestId}/permissions/count.get.produces[3]": "text/xml",
	"paths./account/guests/{guestId}/permissions/count.get.responses.200.description": "",
	"paths./account/guests/{guestId}/permissions/count.get.responses.200.schema.$ref": "#/definitions/Api.Core.Responses.CountResponce",
	"paths./account/guests/{guestId}/permissions/count.get.responses.401.description": "Unauthorized",
	"paths./account/guests/{guestId}/permissions/count.get.responses.500.description": "Internal Server Error",
	"paths./account/guests/{guestId}/permissions/count.get.summary": "Retrieve count of the permissions for a guest",
	"paths./account/guests/{guestId}/permissions/count.get.tags.length": 1,
	"paths./account/guests/{guestId}/permissions/count.get.tags[0]": "Account",
	"paths./account/guests/{guestId}/{type}/permissions/patch.post.consumes.length": 5,
	"paths./account/guests/{guestId}/{type}/permissions/patch.post.consumes[0]": "application/json",
	"paths./account/guests/{guestId}/{type}/permissions/patch.post.consumes[1]": "text/json",
	"paths./account/guests/{guestId}/{type}/permissions/patch.post.consumes[2]": "application/xml",
	"paths./account/guests/{guestId}/{type}/permissions/patch.post.consumes[3]": "text/xml",
	"paths./account/guests/{guestId}/{type}/permissions/patch.post.consumes[4]": "application/x-www-form-urlencoded",
	"paths./account/guests/{guestId}/{type}/permissions/patch.post.deprecated": false,
	"paths./account/guests/{guestId}/{type}/permissions/patch.post.parameters.length": 3,
	"paths./account/guests/{guestId}/{type}/permissions/patch.post.parameters[0].description": "Id of the guest",
	"paths./account/guests/{guestId}/{type}/permissions/patch.post.parameters[0].format": "int64",
	"paths./account/guests/{guestId}/{type}/permissions/patch.post.parameters[0].in": "path",
	"paths./account/guests/{guestId}/{type}/permissions/patch.post.parameters[0].name": "guestId",
	"paths./account/guests/{guestId}/{type}/permissions/patch.post.parameters[0].required": true,
	"paths./account/guests/{guestId}/{type}/permissions/patch.post.parameters[0].type": "integer",
	"paths./account/guests/{guestId}/{type}/permissions/patch.post.parameters[1].description": "Can be \"datapoint\" or \"group\"",
	"paths./account/guests/{guestId}/{type}/permissions/patch.post.parameters[1].enum.length": 2,
	"paths./account/guests/{guestId}/{type}/permissions/patch.post.parameters[1].enum[0]": "datapoint",
	"paths./account/guests/{guestId}/{type}/permissions/patch.post.parameters[1].enum[1]": "group",
	"paths./account/guests/{guestId}/{type}/permissions/patch.post.parameters[1].in": "path",
	"paths./account/guests/{guestId}/{type}/permissions/patch.post.parameters[1].name": "type",
	"paths./account/guests/{guestId}/{type}/permissions/patch.post.parameters[1].required": true,
	"paths./account/guests/{guestId}/{type}/permissions/patch.post.parameters[1].type": "string",
	"paths./account/guests/{guestId}/{type}/permissions/patch.post.parameters[2].description": "The patch permission request",
	"paths./account/guests/{guestId}/{type}/permissions/patch.post.parameters[2].in": "body",
	"paths./account/guests/{guestId}/{type}/permissions/patch.post.parameters[2].name": "body",
	"paths./account/guests/{guestId}/{type}/permissions/patch.post.parameters[2].required": true,
	"paths./account/guests/{guestId}/{type}/permissions/patch.post.parameters[2].schema.$ref": "#/definitions/Api.Core.Requests.PermissionPatchRequest",
	"paths./account/guests/{guestId}/{type}/permissions/patch.post.produces.length": 4,
	"paths./account/guests/{guestId}/{type}/permissions/patch.post.produces[0]": "application/json",
	"paths./account/guests/{guestId}/{type}/permissions/patch.post.produces[1]": "text/json",
	"paths./account/guests/{guestId}/{type}/permissions/patch.post.produces[2]": "application/xml",
	"paths./account/guests/{guestId}/{type}/permissions/patch.post.produces[3]": "text/xml",
	"paths./account/guests/{guestId}/{type}/permissions/patch.post.responses.200.description": "",
	"paths./account/guests/{guestId}/{type}/permissions/patch.post.responses.200.schema.$ref": "#/definitions/Api.Core.Responses.EntityUri[System.Int64]",
	"paths./account/guests/{guestId}/{type}/permissions/patch.post.responses.401.description": "Unauthorized",
	"paths./account/guests/{guestId}/{type}/permissions/patch.post.responses.500.description": "Internal Server Error",
	"paths./account/guests/{guestId}/{type}/permissions/patch.post.summary": "Change the permission on a shared object",
	"paths./account/guests/{guestId}/{type}/permissions/patch.post.tags.length": 1,
	"paths./account/guests/{guestId}/{type}/permissions/patch.post.tags[0]": "Account",
	"paths./account/guests/{guestId}/{type}/permissions/patch.put.consumes.length": 5,
	"paths./account/guests/{guestId}/{type}/permissions/patch.put.consumes[0]": "application/json",
	"paths./account/guests/{guestId}/{type}/permissions/patch.put.consumes[1]": "text/json",
	"paths./account/guests/{guestId}/{type}/permissions/patch.put.consumes[2]": "application/xml",
	"paths./account/guests/{guestId}/{type}/permissions/patch.put.consumes[3]": "text/xml",
	"paths./account/guests/{guestId}/{type}/permissions/patch.put.consumes[4]": "application/x-www-form-urlencoded",
	"paths./account/guests/{guestId}/{type}/permissions/patch.put.deprecated": false,
	"paths./account/guests/{guestId}/{type}/permissions/patch.put.parameters.length": 3,
	"paths./account/guests/{guestId}/{type}/permissions/patch.put.parameters[0].description": "Id of the guest",
	"paths./account/guests/{guestId}/{type}/permissions/patch.put.parameters[0].format": "int64",
	"paths./account/guests/{guestId}/{type}/permissions/patch.put.parameters[0].in": "path",
	"paths./account/guests/{guestId}/{type}/permissions/patch.put.parameters[0].name": "guestId",
	"paths./account/guests/{guestId}/{type}/permissions/patch.put.parameters[0].required": true,
	"paths./account/guests/{guestId}/{type}/permissions/patch.put.parameters[0].type": "integer",
	"paths./account/guests/{guestId}/{type}/permissions/patch.put.parameters[1].description": "Can be \"datapoint\" or \"group\"",
	"paths./account/guests/{guestId}/{type}/permissions/patch.put.parameters[1].enum.length": 2,
	"paths./account/guests/{guestId}/{type}/permissions/patch.put.parameters[1].enum[0]": "datapoint",
	"paths./account/guests/{guestId}/{type}/permissions/patch.put.parameters[1].enum[1]": "group",
	"paths./account/guests/{guestId}/{type}/permissions/patch.put.parameters[1].in": "path",
	"paths./account/guests/{guestId}/{type}/permissions/patch.put.parameters[1].name": "type",
	"paths./account/guests/{guestId}/{type}/permissions/patch.put.parameters[1].required": true,
	"paths./account/guests/{guestId}/{type}/permissions/patch.put.parameters[1].type": "string",
	"paths./account/guests/{guestId}/{type}/permissions/patch.put.parameters[2].description": "The patch permission request",
	"paths./account/guests/{guestId}/{type}/permissions/patch.put.parameters[2].in": "body",
	"paths./account/guests/{guestId}/{type}/permissions/patch.put.parameters[2].name": "body",
	"paths./account/guests/{guestId}/{type}/permissions/patch.put.parameters[2].required": true,
	"paths./account/guests/{guestId}/{type}/permissions/patch.put.parameters[2].schema.$ref": "#/definitions/Api.Core.Requests.PermissionPatchRequest",
	"paths./account/guests/{guestId}/{type}/permissions/patch.put.produces.length": 4,
	"paths./account/guests/{guestId}/{type}/permissions/patch.put.produces[0]": "application/json",
	"paths./account/guests/{guestId}/{type}/permissions/patch.put.produces[1]": "text/json",
	"paths./account/guests/{guestId}/{type}/permissions/patch.put.produces[2]": "application/xml",
	"paths./account/guests/{guestId}/{type}/permissions/patch.put.produces[3]": "text/xml",
	"paths./account/guests/{guestId}/{type}/permissions/patch.put.responses.200.description": "",
	"paths./account/guests/{guestId}/{type}/permissions/patch.put.responses.200.schema.$ref": "#/definitions/Api.Core.Responses.EntityUri[System.Int64]",
	"paths./account/guests/{guestId}/{type}/permissions/patch.put.responses.401.description": "Unauthorized",
	"paths./account/guests/{guestId}/{type}/permissions/patch.put.responses.500.description": "Internal Server Error",
	"paths./account/guests/{guestId}/{type}/permissions/patch.put.summary": "Change the permission on a shared object",
	"paths./account/guests/{guestId}/{type}/permissions/patch.put.tags.length": 1,
	"paths./account/guests/{guestId}/{type}/permissions/patch.put.tags[0]": "Account",
	"paths./account/ipblacklist.get.consumes.length": 0,
	"paths./account/ipblacklist.get.deprecated": false,
	"paths./account/ipblacklist.get.parameters.length": 2,
	"paths./account/ipblacklist.get.parameters[0].description": "Offset where to start from",
	"paths./account/ipblacklist.get.parameters[0].format": "int32",
	"paths./account/ipblacklist.get.parameters[0].in": "query",
	"paths./account/ipblacklist.get.parameters[0].name": "offset",
	"paths./account/ipblacklist.get.parameters[0].required": false,
	"paths./account/ipblacklist.get.parameters[0].type": "integer",
	"paths./account/ipblacklist.get.parameters[1].description": "Limit results to this number",
	"paths./account/ipblacklist.get.parameters[1].format": "int32",
	"paths./account/ipblacklist.get.parameters[1].in": "query",
	"paths./account/ipblacklist.get.parameters[1].name": "limit",
	"paths./account/ipblacklist.get.parameters[1].required": false,
	"paths./account/ipblacklist.get.parameters[1].type": "integer",
	"paths./account/ipblacklist.get.produces.length": 2,
	"paths./account/ipblacklist.get.produces[0]": "application/json",
	"paths./account/ipblacklist.get.produces[1]": "text/json",
	"paths./account/ipblacklist.get.responses.200.description": "",
	"paths./account/ipblacklist.get.responses.200.schema.$ref": "#/definitions/Api.Core.Responses.EntitiesResponse[Api.Core.Dto.Accounting.IpBlacklistEntry]",
	"paths./account/ipblacklist.get.responses.401.description": "Unauthorized",
	"paths./account/ipblacklist.get.responses.500.description": "Internal Server Error",
	"paths./account/ipblacklist.get.summary": "Retrieve list of a ip to exclude from event tracking",
	"paths./account/ipblacklist.get.tags.length": 1,
	"paths./account/ipblacklist.get.tags[0]": "Account",
	"paths./account/ipblacklist.post.consumes.length": 5,
	"paths./account/ipblacklist.post.consumes[0]": "application/json",
	"paths./account/ipblacklist.post.consumes[1]": "text/json",
	"paths./account/ipblacklist.post.consumes[2]": "application/xml",
	"paths./account/ipblacklist.post.consumes[3]": "text/xml",
	"paths./account/ipblacklist.post.consumes[4]": "application/x-www-form-urlencoded",
	"paths./account/ipblacklist.post.deprecated": false,
	"paths./account/ipblacklist.post.parameters.length": 1,
	"paths./account/ipblacklist.post.parameters[0].description": "The entry to add",
	"paths./account/ipblacklist.post.parameters[0].in": "body",
	"paths./account/ipblacklist.post.parameters[0].name": "value",
	"paths./account/ipblacklist.post.parameters[0].required": true,
	"paths./account/ipblacklist.post.parameters[0].schema.$ref": "#/definitions/Api.Core.Dto.Accounting.IpBlacklistEntry",
	"paths./account/ipblacklist.post.produces.length": 4,
	"paths./account/ipblacklist.post.produces[0]": "application/json",
	"paths./account/ipblacklist.post.produces[1]": "text/json",
	"paths./account/ipblacklist.post.produces[2]": "application/xml",
	"paths./account/ipblacklist.post.produces[3]": "text/xml",
	"paths./account/ipblacklist.post.responses.200.description": "",
	"paths./account/ipblacklist.post.responses.200.schema.$ref": "#/definitions/Api.Core.Dto.Accounting.IpBlacklistEntry",
	"paths./account/ipblacklist.post.responses.401.description": "Unauthorized",
	"paths./account/ipblacklist.post.responses.500.description": "Internal Server Error",
	"paths./account/ipblacklist.post.summary": "Create an ip blacklist entry",
	"paths./account/ipblacklist.post.tags.length": 1,
	"paths./account/ipblacklist.post.tags[0]": "Account",
	"paths./account/ipblacklist/{blacklistId}.delete.consumes.length": 0,
	"paths./account/ipblacklist/{blacklistId}.delete.deprecated": false,
	"paths./account/ipblacklist/{blacklistId}.delete.parameters.length": 1,
	"paths./account/ipblacklist/{blacklistId}.delete.parameters[0].description": "The id of the ip to delete",
	"paths./account/ipblacklist/{blacklistId}.delete.parameters[0].in": "path",
	"paths./account/ipblacklist/{blacklistId}.delete.parameters[0].name": "blacklistId",
	"paths./account/ipblacklist/{blacklistId}.delete.parameters[0].required": true,
	"paths./account/ipblacklist/{blacklistId}.delete.parameters[0].type": "string",
	"paths./account/ipblacklist/{blacklistId}.delete.produces.length": 4,
	"paths./account/ipblacklist/{blacklistId}.delete.produces[0]": "application/json",
	"paths./account/ipblacklist/{blacklistId}.delete.produces[1]": "text/json",
	"paths./account/ipblacklist/{blacklistId}.delete.produces[2]": "application/xml",
	"paths./account/ipblacklist/{blacklistId}.delete.produces[3]": "text/xml",
	"paths./account/ipblacklist/{blacklistId}.delete.responses.200.description": "",
	"paths./account/ipblacklist/{blacklistId}.delete.responses.200.schema.$ref": "#/definitions/Api.Core.Dto.Accounting.IpBlacklistEntry",
	"paths./account/ipblacklist/{blacklistId}.delete.responses.401.description": "Unauthorized",
	"paths./account/ipblacklist/{blacklistId}.delete.responses.500.description": "Internal Server Error",
	"paths./account/ipblacklist/{blacklistId}.delete.summary": "Delete an ip blacklist entry",
	"paths./account/ipblacklist/{blacklistId}.delete.tags.length": 1,
	"paths./account/ipblacklist/{blacklistId}.delete.tags[0]": "Account",
	"paths./account/plan.get.consumes.length": 0,
	"paths./account/plan.get.deprecated": false,
	"paths./account/plan.get.produces.length": 4,
	"paths./account/plan.get.produces[0]": "application/json",
	"paths./account/plan.get.produces[1]": "text/json",
	"paths./account/plan.get.produces[2]": "application/xml",
	"paths./account/plan.get.produces[3]": "text/xml",
	"paths./account/plan.get.responses.200.description": "",
	"paths./account/plan.get.responses.200.schema.$ref": "#/definitions/Api.Core.Dto.Accounting.Plan",
	"paths./account/plan.get.responses.401.description": "Unauthorized",
	"paths./account/plan.get.responses.500.description": "Internal Server Error",
	"paths./account/plan.get.summary": "Retrieve current account plan",
	"paths./account/plan.get.tags.length": 1,
	"paths./account/plan.get.tags[0]": "Account",
	"paths./aggregated.get.consumes.length": 0,
	"paths./aggregated.get.deprecated": false,
	"paths./aggregated.get.parameters.length": 5,
	"paths./aggregated.get.parameters[0].description": "Timeframe of the request. See list at $timeframeList",
	"paths./aggregated.get.parameters[0].enum.length": 15,
	"paths./aggregated.get.parameters[0].enum[0]": "today",
	"paths./aggregated.get.parameters[0].enum[10]": "last12months",
	"paths./aggregated.get.parameters[0].enum[11]": "lastyear",
	"paths./aggregated.get.parameters[0].enum[12]": "currentyear",
	"paths./aggregated.get.parameters[0].enum[13]": "beginning",
	"paths./aggregated.get.parameters[0].enum[14]": "custom",
	"paths./aggregated.get.parameters[0].enum[1]": "yesterday",
	"paths./aggregated.get.parameters[0].enum[2]": "last7",
	"paths./aggregated.get.parameters[0].enum[3]": "last30",
	"paths./aggregated.get.parameters[0].enum[4]": "lastmonth",
	"paths./aggregated.get.parameters[0].enum[5]": "currentmonth",
	"paths./aggregated.get.parameters[0].enum[6]": "previousmonth",
	"paths./aggregated.get.parameters[0].enum[7]": "last90",
	"paths./aggregated.get.parameters[0].enum[8]": "last120",
	"paths./aggregated.get.parameters[0].enum[9]": "last180",
	"paths./aggregated.get.parameters[0].in": "query",
	"paths./aggregated.get.parameters[0].name": "timeFrame",
	"paths./aggregated.get.parameters[0].required": true,
	"paths./aggregated.get.parameters[0].type": "string",
	"paths./aggregated.get.parameters[1].description": "If using a \"custom\" timeFrame you can specify the starting day (YYYYMMDD)",
	"paths./aggregated.get.parameters[1].in": "query",
	"paths./aggregated.get.parameters[1].name": "fromDay",
	"paths./aggregated.get.parameters[1].required": false,
	"paths./aggregated.get.parameters[1].type": "string",
	"paths./aggregated.get.parameters[2].description": "If using a \"custom\" timeFrame you can specify the ending day (YYYYMMDD)",
	"paths./aggregated.get.parameters[2].in": "query",
	"paths./aggregated.get.parameters[2].name": "toDay",
	"paths./aggregated.get.parameters[2].required": false,
	"paths./aggregated.get.parameters[2].type": "string",
	"paths./aggregated.get.parameters[3].description": "If using \"yesterday\" or \"today\" timeframe you can ask for the hourly detail",
	"paths./aggregated.get.parameters[3].in": "query",
	"paths./aggregated.get.parameters[3].name": "hourly",
	"paths./aggregated.get.parameters[3].required": false,
	"paths./aggregated.get.parameters[3].type": "boolean",
	"paths./aggregated.get.parameters[4].description": "",
	"paths./aggregated.get.parameters[4].in": "query",
	"paths./aggregated.get.parameters[4].name": "onlyFavorites",
	"paths./aggregated.get.parameters[4].required": false,
	"paths./aggregated.get.parameters[4].type": "string",
	"paths./aggregated.get.produces.length": 2,
	"paths./aggregated.get.produces[0]": "application/json",
	"paths./aggregated.get.produces[1]": "text/json",
	"paths./aggregated.get.responses.200.description": "",
	"paths./aggregated.get.responses.200.schema.$ref": "#/definitions/Api.Core.Dto.Aggregated.AggregatedResult",
	"paths./aggregated.get.responses.401.description": "Unauthorized",
	"paths./aggregated.get.responses.500.description": "Internal Server Error",
	"paths./aggregated.get.summary": "Retrieve statistics about this customer for a timeframe",
	"paths./aggregated.get.tags.length": 1,
	"paths./aggregated.get.tags[0]": "Aggregated",
	"paths./aggregated/list.get.consumes.length": 0,
	"paths./aggregated/list.get.deprecated": false,
	"paths./aggregated/list.get.parameters.length": 4,
	"paths./aggregated/list.get.parameters[0].description": "Timeframe of the request. See list at $timeframeList",
	"paths./aggregated/list.get.parameters[0].enum.length": 15,
	"paths./aggregated/list.get.parameters[0].enum[0]": "today",
	"paths./aggregated/list.get.parameters[0].enum[10]": "last12months",
	"paths./aggregated/list.get.parameters[0].enum[11]": "lastyear",
	"paths./aggregated/list.get.parameters[0].enum[12]": "currentyear",
	"paths./aggregated/list.get.parameters[0].enum[13]": "beginning",
	"paths./aggregated/list.get.parameters[0].enum[14]": "custom",
	"paths./aggregated/list.get.parameters[0].enum[1]": "yesterday",
	"paths./aggregated/list.get.parameters[0].enum[2]": "last7",
	"paths./aggregated/list.get.parameters[0].enum[3]": "last30",
	"paths./aggregated/list.get.parameters[0].enum[4]": "lastmonth",
	"paths./aggregated/list.get.parameters[0].enum[5]": "currentmonth",
	"paths./aggregated/list.get.parameters[0].enum[6]": "previousmonth",
	"paths./aggregated/list.get.parameters[0].enum[7]": "last90",
	"paths./aggregated/list.get.parameters[0].enum[8]": "last120",
	"paths./aggregated/list.get.parameters[0].enum[9]": "last180",
	"paths./aggregated/list.get.parameters[0].in": "query",
	"paths./aggregated/list.get.parameters[0].name": "timeFrame",
	"paths./aggregated/list.get.parameters[0].required": true,
	"paths./aggregated/list.get.parameters[0].type": "string",
	"paths./aggregated/list.get.parameters[1].description": "If using a \"custom\" timeFrame you can specify the starting day (YYYYMMDD)",
	"paths./aggregated/list.get.parameters[1].in": "query",
	"paths./aggregated/list.get.parameters[1].name": "fromDay",
	"paths./aggregated/list.get.parameters[1].required": false,
	"paths./aggregated/list.get.parameters[1].type": "string",
	"paths./aggregated/list.get.parameters[2].description": "If using a \"custom\" timeFrame you can specify the ending day (YYYYMMDD)",
	"paths./aggregated/list.get.parameters[2].in": "query",
	"paths./aggregated/list.get.parameters[2].name": "toDay",
	"paths./aggregated/list.get.parameters[2].required": false,
	"paths./aggregated/list.get.parameters[2].type": "string",
	"paths./aggregated/list.get.parameters[3].description": "The temporal entity you want to group by (\"week\"/\"month\"). If unspecified is \"day\".",
	"paths./aggregated/list.get.parameters[3].enum.length": 2,
	"paths./aggregated/list.get.parameters[3].enum[0]": "week",
	"paths./aggregated/list.get.parameters[3].enum[1]": "month",
	"paths./aggregated/list.get.parameters[3].in": "query",
	"paths./aggregated/list.get.parameters[3].name": "groupBy",
	"paths./aggregated/list.get.parameters[3].required": false,
	"paths./aggregated/list.get.parameters[3].type": "string",
	"paths./aggregated/list.get.produces.length": 2,
	"paths./aggregated/list.get.produces[0]": "application/json",
	"paths./aggregated/list.get.produces[1]": "text/json",
	"paths./aggregated/list.get.responses.200.description": "",
	"paths./aggregated/list.get.responses.200.schema.$ref": "#/definitions/Api.Core.Responses.EntitiesResponse[Api.Core.Dto.Aggregated.AggregatedResult]",
	"paths./aggregated/list.get.responses.401.description": "Unauthorized",
	"paths./aggregated/list.get.responses.500.description": "Internal Server Error",
	"paths./aggregated/list.get.summary": "Retrieve statistics about this customer for a timeframe grouped by some temporal entity (day/week/month)",
	"paths./aggregated/list.get.tags.length": 1,
	"paths./aggregated/list.get.tags[0]": "Aggregated",
	"paths./aggregated/summary/conversions.get.consumes.length": 0,
	"paths./aggregated/summary/conversions.get.deprecated": false,
	"paths./aggregated/summary/conversions.get.parameters.length": 9,
	"paths./aggregated/summary/conversions.get.parameters[0].description": "Timeframe of the request. See list at $timeframeList",
	"paths./aggregated/summary/conversions.get.parameters[0].enum.length": 15,
	"paths./aggregated/summary/conversions.get.parameters[0].enum[0]": "today",
	"paths./aggregated/summary/conversions.get.parameters[0].enum[10]": "last12months",
	"paths./aggregated/summary/conversions.get.parameters[0].enum[11]": "lastyear",
	"paths./aggregated/summary/conversions.get.parameters[0].enum[12]": "currentyear",
	"paths./aggregated/summary/conversions.get.parameters[0].enum[13]": "beginning",
	"paths./aggregated/summary/conversions.get.parameters[0].enum[14]": "custom",
	"paths./aggregated/summary/conversions.get.parameters[0].enum[1]": "yesterday",
	"paths./aggregated/summary/conversions.get.parameters[0].enum[2]": "last7",
	"paths./aggregated/summary/conversions.get.parameters[0].enum[3]": "last30",
	"paths./aggregated/summary/conversions.get.parameters[0].enum[4]": "lastmonth",
	"paths./aggregated/summary/conversions.get.parameters[0].enum[5]": "currentmonth",
	"paths./aggregated/summary/conversions.get.parameters[0].enum[6]": "previousmonth",
	"paths./aggregated/summary/conversions.get.parameters[0].enum[7]": "last90",
	"paths./aggregated/summary/conversions.get.parameters[0].enum[8]": "last120",
	"paths./aggregated/summary/conversions.get.parameters[0].enum[9]": "last180",
	"paths./aggregated/summary/conversions.get.parameters[0].in": "query",
	"paths./aggregated/summary/conversions.get.parameters[0].name": "timeFrame",
	"paths./aggregated/summary/conversions.get.parameters[0].required": true,
	"paths./aggregated/summary/conversions.get.parameters[0].type": "string",
	"paths./aggregated/summary/conversions.get.parameters[1].description": "If using a \"custom\" timeFrame you can specify the starting day (YYYYMMDD)",
	"paths./aggregated/summary/conversions.get.parameters[1].in": "query",
	"paths./aggregated/summary/conversions.get.parameters[1].name": "fromDay",
	"paths./aggregated/summary/conversions.get.parameters[1].required": false,
	"paths./aggregated/summary/conversions.get.parameters[1].type": "string",
	"paths./aggregated/summary/conversions.get.parameters[2].description": "If using a \"custom\" timeFrame you can specify the ending day (YYYYMMDD)",
	"paths./aggregated/summary/conversions.get.parameters[2].in": "query",
	"paths./aggregated/summary/conversions.get.parameters[2].name": "toDay",
	"paths./aggregated/summary/conversions.get.parameters[2].required": false,
	"paths./aggregated/summary/conversions.get.parameters[2].type": "string",
	"paths./aggregated/summary/conversions.get.parameters[3].description": "Status of conversion (\"deleted\"/\"active\")",
	"paths./aggregated/summary/conversions.get.parameters[3].enum.length": 2,
	"paths./aggregated/summary/conversions.get.parameters[3].enum[0]": "deleted",
	"paths./aggregated/summary/conversions.get.parameters[3].enum[1]": "active",
	"paths./aggregated/summary/conversions.get.parameters[3].in": "query",
	"paths./aggregated/summary/conversions.get.parameters[3].name": "status",
	"paths./aggregated/summary/conversions.get.parameters[3].required": false,
	"paths./aggregated/summary/conversions.get.parameters[3].type": "string",
	"paths./aggregated/summary/conversions.get.parameters[4].description": "Field to sort by",
	"paths./aggregated/summary/conversions.get.parameters[4].in": "query",
	"paths./aggregated/summary/conversions.get.parameters[4].name": "sortBy",
	"paths./aggregated/summary/conversions.get.parameters[4].required": false,
	"paths./aggregated/summary/conversions.get.parameters[4].type": "string",
	"paths./aggregated/summary/conversions.get.parameters[5].description": "Direction of sort \"asc\" or \"desc\"",
	"paths./aggregated/summary/conversions.get.parameters[5].enum.length": 2,
	"paths./aggregated/summary/conversions.get.parameters[5].enum[0]": "asc",
	"paths./aggregated/summary/conversions.get.parameters[5].enum[1]": "desc",
	"paths./aggregated/summary/conversions.get.parameters[5].in": "query",
	"paths./aggregated/summary/conversions.get.parameters[5].name": "sortDirection",
	"paths./aggregated/summary/conversions.get.parameters[5].required": false,
	"paths./aggregated/summary/conversions.get.parameters[5].type": "string",
	"paths./aggregated/summary/conversions.get.parameters[6].description": "Offset where to start from",
	"paths./aggregated/summary/conversions.get.parameters[6].format": "int32",
	"paths./aggregated/summary/conversions.get.parameters[6].in": "query",
	"paths./aggregated/summary/conversions.get.parameters[6].name": "offset",
	"paths./aggregated/summary/conversions.get.parameters[6].required": false,
	"paths./aggregated/summary/conversions.get.parameters[6].type": "integer",
	"paths./aggregated/summary/conversions.get.parameters[7].description": "Limit results to this number",
	"paths./aggregated/summary/conversions.get.parameters[7].format": "int32",
	"paths./aggregated/summary/conversions.get.parameters[7].in": "query",
	"paths./aggregated/summary/conversions.get.parameters[7].name": "limit",
	"paths./aggregated/summary/conversions.get.parameters[7].required": false,
	"paths./aggregated/summary/conversions.get.parameters[7].type": "integer",
	"paths./aggregated/summary/conversions.get.parameters[8].description": "Filter fields by this pattern",
	"paths./aggregated/summary/conversions.get.parameters[8].in": "query",
	"paths./aggregated/summary/conversions.get.parameters[8].name": "textSearch",
	"paths./aggregated/summary/conversions.get.parameters[8].required": false,
	"paths./aggregated/summary/conversions.get.parameters[8].type": "string",
	"paths./aggregated/summary/conversions.get.produces.length": 2,
	"paths./aggregated/summary/conversions.get.produces[0]": "application/json",
	"paths./aggregated/summary/conversions.get.produces[1]": "text/json",
	"paths./aggregated/summary/conversions.get.responses.200.description": "",
	"paths./aggregated/summary/conversions.get.responses.200.schema.$ref": "#/definitions/Api.Core.Dto.Aggregated.AggregatedSummaryResult",
	"paths./aggregated/summary/conversions.get.responses.401.description": "Unauthorized",
	"paths./aggregated/summary/conversions.get.responses.500.description": "Internal Server Error",
	"paths./aggregated/summary/conversions.get.summary": "Retrieve statistics about a subset of conversions for a timeframe with conversions data",
	"paths./aggregated/summary/conversions.get.tags.length": 1,
	"paths./aggregated/summary/conversions.get.tags[0]": "Aggregated",
	"paths./aggregated/summary/datapoints.get.consumes.length": 0,
	"paths./aggregated/summary/datapoints.get.deprecated": false,
	"paths./aggregated/summary/datapoints.get.parameters.length": 13,
	"paths./aggregated/summary/datapoints.get.parameters[0].description": "Timeframe of the request. See list at $timeframeList",
	"paths./aggregated/summary/datapoints.get.parameters[0].enum.length": 15,
	"paths./aggregated/summary/datapoints.get.parameters[0].enum[0]": "today",
	"paths./aggregated/summary/datapoints.get.parameters[0].enum[10]": "last12months",
	"paths./aggregated/summary/datapoints.get.parameters[0].enum[11]": "lastyear",
	"paths./aggregated/summary/datapoints.get.parameters[0].enum[12]": "currentyear",
	"paths./aggregated/summary/datapoints.get.parameters[0].enum[13]": "beginning",
	"paths./aggregated/summary/datapoints.get.parameters[0].enum[14]": "custom",
	"paths./aggregated/summary/datapoints.get.parameters[0].enum[1]": "yesterday",
	"paths./aggregated/summary/datapoints.get.parameters[0].enum[2]": "last7",
	"paths./aggregated/summary/datapoints.get.parameters[0].enum[3]": "last30",
	"paths./aggregated/summary/datapoints.get.parameters[0].enum[4]": "lastmonth",
	"paths./aggregated/summary/datapoints.get.parameters[0].enum[5]": "currentmonth",
	"paths./aggregated/summary/datapoints.get.parameters[0].enum[6]": "previousmonth",
	"paths./aggregated/summary/datapoints.get.parameters[0].enum[7]": "last90",
	"paths./aggregated/summary/datapoints.get.parameters[0].enum[8]": "last120",
	"paths./aggregated/summary/datapoints.get.parameters[0].enum[9]": "last180",
	"paths./aggregated/summary/datapoints.get.parameters[0].in": "query",
	"paths./aggregated/summary/datapoints.get.parameters[0].name": "timeFrame",
	"paths./aggregated/summary/datapoints.get.parameters[0].required": true,
	"paths./aggregated/summary/datapoints.get.parameters[0].type": "string",
	"paths./aggregated/summary/datapoints.get.parameters[10].description": "Limit results to this number",
	"paths./aggregated/summary/datapoints.get.parameters[10].format": "int32",
	"paths./aggregated/summary/datapoints.get.parameters[10].in": "query",
	"paths./aggregated/summary/datapoints.get.parameters[10].name": "limit",
	"paths./aggregated/summary/datapoints.get.parameters[10].required": false,
	"paths./aggregated/summary/datapoints.get.parameters[10].type": "integer",
	"paths./aggregated/summary/datapoints.get.parameters[11].description": "Filter by this group id",
	"paths./aggregated/summary/datapoints.get.parameters[11].format": "int64",
	"paths./aggregated/summary/datapoints.get.parameters[11].in": "query",
	"paths./aggregated/summary/datapoints.get.parameters[11].name": "groupId",
	"paths./aggregated/summary/datapoints.get.parameters[11].required": false,
	"paths./aggregated/summary/datapoints.get.parameters[11].type": "integer",
	"paths./aggregated/summary/datapoints.get.parameters[12].description": "Filter fields by this pattern",
	"paths./aggregated/summary/datapoints.get.parameters[12].in": "query",
	"paths./aggregated/summary/datapoints.get.parameters[12].name": "textSearch",
	"paths./aggregated/summary/datapoints.get.parameters[12].required": false,
	"paths./aggregated/summary/datapoints.get.parameters[12].type": "string",
	"paths./aggregated/summary/datapoints.get.parameters[1].description": "Type of datapoint (\"tl\"/\"tp\")",
	"paths./aggregated/summary/datapoints.get.parameters[1].enum.length": 2,
	"paths./aggregated/summary/datapoints.get.parameters[1].enum[0]": "tp",
	"paths./aggregated/summary/datapoints.get.parameters[1].enum[1]": "tl",
	"paths./aggregated/summary/datapoints.get.parameters[1].in": "query",
	"paths./aggregated/summary/datapoints.get.parameters[1].name": "type",
	"paths./aggregated/summary/datapoints.get.parameters[1].required": true,
	"paths./aggregated/summary/datapoints.get.parameters[1].type": "string",
	"paths./aggregated/summary/datapoints.get.parameters[2].description": "If using a \"custom\" timeFrame you can specify the starting day (YYYYMMDD)",
	"paths./aggregated/summary/datapoints.get.parameters[2].in": "query",
	"paths./aggregated/summary/datapoints.get.parameters[2].name": "fromDay",
	"paths./aggregated/summary/datapoints.get.parameters[2].required": false,
	"paths./aggregated/summary/datapoints.get.parameters[2].type": "string",
	"paths./aggregated/summary/datapoints.get.parameters[3].description": "If using a \"custom\" timeFrame you can specify the ending day (YYYYMMDD)",
	"paths./aggregated/summary/datapoints.get.parameters[3].in": "query",
	"paths./aggregated/summary/datapoints.get.parameters[3].name": "toDay",
	"paths./aggregated/summary/datapoints.get.parameters[3].required": false,
	"paths./aggregated/summary/datapoints.get.parameters[3].type": "string",
	"paths./aggregated/summary/datapoints.get.parameters[4].description": "Status of datapoint (\"deleted\"/\"active\"/\"paused\"/\"spam\")",
	"paths./aggregated/summary/datapoints.get.parameters[4].enum.length": 4,
	"paths./aggregated/summary/datapoints.get.parameters[4].enum[0]": "deleted",
	"paths./aggregated/summary/datapoints.get.parameters[4].enum[1]": "active",
	"paths./aggregated/summary/datapoints.get.parameters[4].enum[2]": "paused",
	"paths./aggregated/summary/datapoints.get.parameters[4].enum[3]": "spam",
	"paths./aggregated/summary/datapoints.get.parameters[4].in": "query",
	"paths./aggregated/summary/datapoints.get.parameters[4].name": "status",
	"paths./aggregated/summary/datapoints.get.parameters[4].required": false,
	"paths./aggregated/summary/datapoints.get.parameters[4].type": "string",
	"paths./aggregated/summary/datapoints.get.parameters[5].description": "A comma separated list of tags you want to filter with.",
	"paths./aggregated/summary/datapoints.get.parameters[5].in": "query",
	"paths./aggregated/summary/datapoints.get.parameters[5].name": "tag",
	"paths./aggregated/summary/datapoints.get.parameters[5].required": false,
	"paths./aggregated/summary/datapoints.get.parameters[5].type": "string",
	"paths./aggregated/summary/datapoints.get.parameters[6].description": "Is the datapoint marked as favourite",
	"paths./aggregated/summary/datapoints.get.parameters[6].in": "query",
	"paths./aggregated/summary/datapoints.get.parameters[6].name": "favourite",
	"paths./aggregated/summary/datapoints.get.parameters[6].required": false,
	"paths./aggregated/summary/datapoints.get.parameters[6].type": "boolean",
	"paths./aggregated/summary/datapoints.get.parameters[7].description": "Field to sort by",
	"paths./aggregated/summary/datapoints.get.parameters[7].in": "query",
	"paths./aggregated/summary/datapoints.get.parameters[7].name": "sortBy",
	"paths./aggregated/summary/datapoints.get.parameters[7].required": false,
	"paths./aggregated/summary/datapoints.get.parameters[7].type": "string",
	"paths./aggregated/summary/datapoints.get.parameters[8].description": "Direction of sort \"asc\" or \"desc\"",
	"paths./aggregated/summary/datapoints.get.parameters[8].enum.length": 2,
	"paths./aggregated/summary/datapoints.get.parameters[8].enum[0]": "asc",
	"paths./aggregated/summary/datapoints.get.parameters[8].enum[1]": "desc",
	"paths./aggregated/summary/datapoints.get.parameters[8].in": "query",
	"paths./aggregated/summary/datapoints.get.parameters[8].name": "sortDirection",
	"paths./aggregated/summary/datapoints.get.parameters[8].required": false,
	"paths./aggregated/summary/datapoints.get.parameters[8].type": "string",
	"paths./aggregated/summary/datapoints.get.parameters[9].description": "Offset where to start from",
	"paths./aggregated/summary/datapoints.get.parameters[9].format": "int32",
	"paths./aggregated/summary/datapoints.get.parameters[9].in": "query",
	"paths./aggregated/summary/datapoints.get.parameters[9].name": "offset",
	"paths./aggregated/summary/datapoints.get.parameters[9].required": false,
	"paths./aggregated/summary/datapoints.get.parameters[9].type": "integer",
	"paths./aggregated/summary/datapoints.get.produces.length": 2,
	"paths./aggregated/summary/datapoints.get.produces[0]": "application/json",
	"paths./aggregated/summary/datapoints.get.produces[1]": "text/json",
	"paths./aggregated/summary/datapoints.get.responses.200.description": "",
	"paths./aggregated/summary/datapoints.get.responses.200.schema.$ref": "#/definitions/Api.Core.Dto.Aggregated.AggregatedSummaryResult",
	"paths./aggregated/summary/datapoints.get.responses.401.description": "Unauthorized",
	"paths./aggregated/summary/datapoints.get.responses.500.description": "Internal Server Error",
	"paths./aggregated/summary/datapoints.get.summary": "Retrieve statistics about a subset of datapoints for a timeframe with datapoints data",
	"paths./aggregated/summary/datapoints.get.tags.length": 1,
	"paths./aggregated/summary/datapoints.get.tags[0]": "Aggregated",
	"paths./aggregated/summary/groups.get.consumes.length": 0,
	"paths./aggregated/summary/groups.get.deprecated": false,
	"paths./aggregated/summary/groups.get.parameters.length": 11,
	"paths./aggregated/summary/groups.get.parameters[0].description": "Timeframe of the request. See list at $timeframeList",
	"paths./aggregated/summary/groups.get.parameters[0].enum.length": 15,
	"paths./aggregated/summary/groups.get.parameters[0].enum[0]": "today",
	"paths./aggregated/summary/groups.get.parameters[0].enum[10]": "last12months",
	"paths./aggregated/summary/groups.get.parameters[0].enum[11]": "lastyear",
	"paths./aggregated/summary/groups.get.parameters[0].enum[12]": "currentyear",
	"paths./aggregated/summary/groups.get.parameters[0].enum[13]": "beginning",
	"paths./aggregated/summary/groups.get.parameters[0].enum[14]": "custom",
	"paths./aggregated/summary/groups.get.parameters[0].enum[1]": "yesterday",
	"paths./aggregated/summary/groups.get.parameters[0].enum[2]": "last7",
	"paths./aggregated/summary/groups.get.parameters[0].enum[3]": "last30",
	"paths./aggregated/summary/groups.get.parameters[0].enum[4]": "lastmonth",
	"paths./aggregated/summary/groups.get.parameters[0].enum[5]": "currentmonth",
	"paths./aggregated/summary/groups.get.parameters[0].enum[6]": "previousmonth",
	"paths./aggregated/summary/groups.get.parameters[0].enum[7]": "last90",
	"paths./aggregated/summary/groups.get.parameters[0].enum[8]": "last120",
	"paths./aggregated/summary/groups.get.parameters[0].enum[9]": "last180",
	"paths./aggregated/summary/groups.get.parameters[0].in": "query",
	"paths./aggregated/summary/groups.get.parameters[0].name": "timeFrame",
	"paths./aggregated/summary/groups.get.parameters[0].required": true,
	"paths./aggregated/summary/groups.get.parameters[0].type": "string",
	"paths./aggregated/summary/groups.get.parameters[10].description": "Filter fields by this pattern",
	"paths./aggregated/summary/groups.get.parameters[10].in": "query",
	"paths./aggregated/summary/groups.get.parameters[10].name": "textSearch",
	"paths./aggregated/summary/groups.get.parameters[10].required": false,
	"paths./aggregated/summary/groups.get.parameters[10].type": "string",
	"paths./aggregated/summary/groups.get.parameters[1].description": "If using a \"custom\" timeFrame you can specify the starting day (YYYYMMDD)",
	"paths./aggregated/summary/groups.get.parameters[1].in": "query",
	"paths./aggregated/summary/groups.get.parameters[1].name": "fromDay",
	"paths./aggregated/summary/groups.get.parameters[1].required": false,
	"paths./aggregated/summary/groups.get.parameters[1].type": "string",
	"paths./aggregated/summary/groups.get.parameters[2].description": "If using a \"custom\" timeFrame you can specify the ending day (YYYYMMDD)",
	"paths./aggregated/summary/groups.get.parameters[2].in": "query",
	"paths./aggregated/summary/groups.get.parameters[2].name": "toDay",
	"paths./aggregated/summary/groups.get.parameters[2].required": false,
	"paths./aggregated/summary/groups.get.parameters[2].type": "string",
	"paths./aggregated/summary/groups.get.parameters[3].description": "Status of group (\"deleted\"/\"active\")",
	"paths./aggregated/summary/groups.get.parameters[3].enum.length": 2,
	"paths./aggregated/summary/groups.get.parameters[3].enum[0]": "deleted",
	"paths./aggregated/summary/groups.get.parameters[3].enum[1]": "active",
	"paths./aggregated/summary/groups.get.parameters[3].in": "query",
	"paths./aggregated/summary/groups.get.parameters[3].name": "status",
	"paths./aggregated/summary/groups.get.parameters[3].required": false,
	"paths./aggregated/summary/groups.get.parameters[3].type": "string",
	"paths./aggregated/summary/groups.get.parameters[4].description": "A comma separated list of tags you want to filter with.",
	"paths./aggregated/summary/groups.get.parameters[4].in": "query",
	"paths./aggregated/summary/groups.get.parameters[4].name": "tag",
	"paths./aggregated/summary/groups.get.parameters[4].required": false,
	"paths./aggregated/summary/groups.get.parameters[4].type": "string",
	"paths./aggregated/summary/groups.get.parameters[5].description": "Is the group marked as favourite",
	"paths./aggregated/summary/groups.get.parameters[5].in": "query",
	"paths./aggregated/summary/groups.get.parameters[5].name": "favourite",
	"paths./aggregated/summary/groups.get.parameters[5].required": false,
	"paths./aggregated/summary/groups.get.parameters[5].type": "boolean",
	"paths./aggregated/summary/groups.get.parameters[6].description": "Field to sort by",
	"paths./aggregated/summary/groups.get.parameters[6].in": "query",
	"paths./aggregated/summary/groups.get.parameters[6].name": "sortBy",
	"paths./aggregated/summary/groups.get.parameters[6].required": false,
	"paths./aggregated/summary/groups.get.parameters[6].type": "string",
	"paths./aggregated/summary/groups.get.parameters[7].description": "Direction of sort \"asc\" or \"desc\"",
	"paths./aggregated/summary/groups.get.parameters[7].enum.length": 2,
	"paths./aggregated/summary/groups.get.parameters[7].enum[0]": "asc",
	"paths./aggregated/summary/groups.get.parameters[7].enum[1]": "desc",
	"paths./aggregated/summary/groups.get.parameters[7].in": "query",
	"paths./aggregated/summary/groups.get.parameters[7].name": "sortDirection",
	"paths./aggregated/summary/groups.get.parameters[7].required": false,
	"paths./aggregated/summary/groups.get.parameters[7].type": "string",
	"paths./aggregated/summary/groups.get.parameters[8].description": "Offset where to start from",
	"paths./aggregated/summary/groups.get.parameters[8].format": "int32",
	"paths./aggregated/summary/groups.get.parameters[8].in": "query",
	"paths./aggregated/summary/groups.get.parameters[8].name": "offset",
	"paths./aggregated/summary/groups.get.parameters[8].required": false,
	"paths./aggregated/summary/groups.get.parameters[8].type": "integer",
	"paths./aggregated/summary/groups.get.parameters[9].description": "Limit results to this number",
	"paths./aggregated/summary/groups.get.parameters[9].format": "int32",
	"paths./aggregated/summary/groups.get.parameters[9].in": "query",
	"paths./aggregated/summary/groups.get.parameters[9].name": "limit",
	"paths./aggregated/summary/groups.get.parameters[9].required": false,
	"paths./aggregated/summary/groups.get.parameters[9].type": "integer",
	"paths./aggregated/summary/groups.get.produces.length": 2,
	"paths./aggregated/summary/groups.get.produces[0]": "application/json",
	"paths./aggregated/summary/groups.get.produces[1]": "text/json",
	"paths./aggregated/summary/groups.get.responses.200.description": "",
	"paths./aggregated/summary/groups.get.responses.200.schema.$ref": "#/definitions/Api.Core.Dto.Aggregated.AggregatedSummaryResult",
	"paths./aggregated/summary/groups.get.responses.401.description": "Unauthorized",
	"paths./aggregated/summary/groups.get.responses.500.description": "Internal Server Error",
	"paths./aggregated/summary/groups.get.summary": "Retrieve statistics about a subset of groups for a timeframe with groups data",
	"paths./aggregated/summary/groups.get.tags.length": 1,
	"paths./aggregated/summary/groups.get.tags[0]": "Aggregated",
	"paths./clickstream.get.consumes.length": 0,
	"paths./clickstream.get.deprecated": false,
	"paths./clickstream.get.parameters.length": 5,
	"paths./clickstream.get.parameters[0].description": "Filter by this group id (mutually exclusive with \"datapoint\" and \"conversion\")",
	"paths./clickstream.get.parameters[0].format": "int64",
	"paths./clickstream.get.parameters[0].in": "query",
	"paths./clickstream.get.parameters[0].name": "group",
	"paths./clickstream.get.parameters[0].required": false,
	"paths./clickstream.get.parameters[0].type": "integer",
	"paths./clickstream.get.parameters[1].description": "Filter by this datapoint id (mutually exclusive with \"group\" and \"conversion\")",
	"paths./clickstream.get.parameters[1].format": "int64",
	"paths./clickstream.get.parameters[1].in": "query",
	"paths./clickstream.get.parameters[1].name": "datapoint",
	"paths./clickstream.get.parameters[1].required": false,
	"paths./clickstream.get.parameters[1].type": "integer",
	"paths./clickstream.get.parameters[2].description": "Filter by this conversion id (mutually exclusive with \"datapoint\" and \"group\")",
	"paths./clickstream.get.parameters[2].format": "int64",
	"paths./clickstream.get.parameters[2].in": "query",
	"paths./clickstream.get.parameters[2].name": "conversion",
	"paths./clickstream.get.parameters[2].required": false,
	"paths./clickstream.get.parameters[2].type": "integer",
	"paths./clickstream.get.parameters[3].default": 50,
	"paths./clickstream.get.parameters[3].description": "Limit results to this number",
	"paths./clickstream.get.parameters[3].format": "int32",
	"paths./clickstream.get.parameters[3].in": "query",
	"paths./clickstream.get.parameters[3].name": "pageSize",
	"paths./clickstream.get.parameters[3].required": false,
	"paths./clickstream.get.parameters[3].type": "integer",
	"paths./clickstream.get.parameters[4].description": "Filter event type (\"spiders\"/\"uniques\"/\"nonuniques\"/\"conversions\")",
	"paths./clickstream.get.parameters[4].enum.length": 5,
	"paths./clickstream.get.parameters[4].enum[0]": "",
	"paths./clickstream.get.parameters[4].enum[1]": "spiders",
	"paths./clickstream.get.parameters[4].enum[2]": "uniques",
	"paths./clickstream.get.parameters[4].enum[3]": "nonuniques",
	"paths./clickstream.get.parameters[4].enum[4]": "conversions",
	"paths./clickstream.get.parameters[4].in": "query",
	"paths./clickstream.get.parameters[4].name": "filter",
	"paths./clickstream.get.parameters[4].required": false,
	"paths./clickstream.get.parameters[4].type": "string",
	"paths./clickstream.get.produces.length": 2,
	"paths./clickstream.get.produces[0]": "application/json",
	"paths./clickstream.get.produces[1]": "text/json",
	"paths./clickstream.get.responses.200.description": "",
	"paths./clickstream.get.responses.200.schema.$ref": "#/definitions/Api.Core.Responses.EntitiesResponse[Api.Core.Dto.ClickStream.Hit]",
	"paths./clickstream.get.responses.401.description": "Unauthorized",
	"paths./clickstream.get.responses.500.description": "Internal Server Error",
	"paths./clickstream.get.summary": "Retrieve the latest list of events of this account. Limited to last 100.",
	"paths./clickstream.get.tags.length": 1,
	"paths./clickstream.get.tags[0]": "ClickStream",
	"paths./conversions.get.consumes.length": 0,
	"paths./conversions.get.deprecated": false,
	"paths./conversions.get.parameters.length": 6,
	"paths./conversions.get.parameters[0].description": "Offset where to start from",
	"paths./conversions.get.parameters[0].format": "int32",
	"paths./conversions.get.parameters[0].in": "query",
	"paths./conversions.get.parameters[0].name": "offset",
	"paths./conversions.get.parameters[0].required": false,
	"paths./conversions.get.parameters[0].type": "integer",
	"paths./conversions.get.parameters[1].description": "Limit results to this number",
	"paths./conversions.get.parameters[1].format": "int32",
	"paths./conversions.get.parameters[1].in": "query",
	"paths./conversions.get.parameters[1].name": "limit",
	"paths./conversions.get.parameters[1].required": false,
	"paths./conversions.get.parameters[1].type": "integer",
	"paths./conversions.get.parameters[2].description": "Status of conversion (\"deleted\"/\"active\")",
	"paths./conversions.get.parameters[2].enum.length": 2,
	"paths./conversions.get.parameters[2].enum[0]": "deleted",
	"paths./conversions.get.parameters[2].enum[1]": "active",
	"paths./conversions.get.parameters[2].in": "query",
	"paths./conversions.get.parameters[2].name": "status",
	"paths./conversions.get.parameters[2].required": false,
	"paths./conversions.get.parameters[2].type": "string",
	"paths./conversions.get.parameters[3].description": "Filter fields by this pattern",
	"paths./conversions.get.parameters[3].in": "query",
	"paths./conversions.get.parameters[3].name": "textSearch",
	"paths./conversions.get.parameters[3].required": false,
	"paths./conversions.get.parameters[3].type": "string",
	"paths./conversions.get.parameters[4].description": "Exclude conversions created before this date (YYYYMMDD)",
	"paths./conversions.get.parameters[4].in": "query",
	"paths./conversions.get.parameters[4].name": "createdAfter",
	"paths./conversions.get.parameters[4].required": false,
	"paths./conversions.get.parameters[4].type": "string",
	"paths./conversions.get.parameters[5].description": "Exclude conversions created after this date (YYYYMMDD)",
	"paths./conversions.get.parameters[5].in": "query",
	"paths./conversions.get.parameters[5].name": "createdBefore",
	"paths./conversions.get.parameters[5].required": false,
	"paths./conversions.get.parameters[5].type": "string",
	"paths./conversions.get.produces.length": 2,
	"paths./conversions.get.produces[0]": "application/json",
	"paths./conversions.get.produces[1]": "text/json",
	"paths./conversions.get.responses.200.description": "",
	"paths./conversions.get.responses.200.schema.$ref": "#/definitions/Api.Core.Responses.EntitiesResponse[Api.Core.Responses.EntityUri[System.Int64]]",
	"paths./conversions.get.responses.401.description": "Unauthorized",
	"paths./conversions.get.responses.500.description": "Internal Server Error",
	"paths./conversions.get.summary": "Retrieve a list of conversions",
	"paths./conversions.get.tags.length": 1,
	"paths./conversions.get.tags[0]": "Conversions",
	"paths./conversions.post.consumes.length": 5,
	"paths./conversions.post.consumes[0]": "application/json",
	"paths./conversions.post.consumes[1]": "text/json",
	"paths./conversions.post.consumes[2]": "application/xml",
	"paths./conversions.post.consumes[3]": "text/xml",
	"paths./conversions.post.consumes[4]": "application/x-www-form-urlencoded",
	"paths./conversions.post.deprecated": false,
	"paths./conversions.post.parameters.length": 1,
	"paths./conversions.post.parameters[0].description": "The body of the conversion",
	"paths./conversions.post.parameters[0].in": "body",
	"paths./conversions.post.parameters[0].name": "value",
	"paths./conversions.post.parameters[0].required": true,
	"paths./conversions.post.parameters[0].schema.$ref": "#/definitions/Api.Core.Dto.Conversions.Conversion",
	"paths./conversions.post.produces.length": 4,
	"paths./conversions.post.produces[0]": "application/json",
	"paths./conversions.post.produces[1]": "text/json",
	"paths./conversions.post.produces[2]": "application/xml",
	"paths./conversions.post.produces[3]": "text/xml",
	"paths./conversions.post.responses.200.description": "",
	"paths./conversions.post.responses.200.schema.$ref": "#/definitions/Api.Core.Responses.EntityUri[System.Int64]",
	"paths./conversions.post.responses.401.description": "Unauthorized",
	"paths./conversions.post.responses.404.description": "Not found",
	"paths./conversions.post.responses.500.description": "Internal Server Error",
	"paths./conversions.post.summary": "Create a conversion",
	"paths./conversions.post.tags.length": 1,
	"paths./conversions.post.tags[0]": "Conversions",
	"paths./conversions/aggregated/list.get.consumes.length": 0,
	"paths./conversions/aggregated/list.get.deprecated": false,
	"paths./conversions/aggregated/list.get.parameters.length": 5,
	"paths./conversions/aggregated/list.get.parameters[0].description": "Timeframe of the request. See list at $timeframeList",
	"paths./conversions/aggregated/list.get.parameters[0].enum.length": 15,
	"paths./conversions/aggregated/list.get.parameters[0].enum[0]": "today",
	"paths./conversions/aggregated/list.get.parameters[0].enum[10]": "last12months",
	"paths./conversions/aggregated/list.get.parameters[0].enum[11]": "lastyear",
	"paths./conversions/aggregated/list.get.parameters[0].enum[12]": "currentyear",
	"paths./conversions/aggregated/list.get.parameters[0].enum[13]": "beginning",
	"paths./conversions/aggregated/list.get.parameters[0].enum[14]": "custom",
	"paths./conversions/aggregated/list.get.parameters[0].enum[1]": "yesterday",
	"paths./conversions/aggregated/list.get.parameters[0].enum[2]": "last7",
	"paths./conversions/aggregated/list.get.parameters[0].enum[3]": "last30",
	"paths./conversions/aggregated/list.get.parameters[0].enum[4]": "lastmonth",
	"paths./conversions/aggregated/list.get.parameters[0].enum[5]": "currentmonth",
	"paths./conversions/aggregated/list.get.parameters[0].enum[6]": "previousmonth",
	"paths./conversions/aggregated/list.get.parameters[0].enum[7]": "last90",
	"paths./conversions/aggregated/list.get.parameters[0].enum[8]": "last120",
	"paths./conversions/aggregated/list.get.parameters[0].enum[9]": "last180",
	"paths./conversions/aggregated/list.get.parameters[0].in": "query",
	"paths./conversions/aggregated/list.get.parameters[0].name": "timeFrame",
	"paths./conversions/aggregated/list.get.parameters[0].required": true,
	"paths./conversions/aggregated/list.get.parameters[0].type": "string",
	"paths./conversions/aggregated/list.get.parameters[1].description": "If using a \"custom\" timeFrame you can specify the starting day (YYYYMMDD)",
	"paths./conversions/aggregated/list.get.parameters[1].in": "query",
	"paths./conversions/aggregated/list.get.parameters[1].name": "fromDay",
	"paths./conversions/aggregated/list.get.parameters[1].required": false,
	"paths./conversions/aggregated/list.get.parameters[1].type": "string",
	"paths./conversions/aggregated/list.get.parameters[2].description": "If using a \"custom\" timeFrame you can specify the ending day (YYYYMMDD)",
	"paths./conversions/aggregated/list.get.parameters[2].in": "query",
	"paths./conversions/aggregated/list.get.parameters[2].name": "toDay",
	"paths./conversions/aggregated/list.get.parameters[2].required": false,
	"paths./conversions/aggregated/list.get.parameters[2].type": "string",
	"paths./conversions/aggregated/list.get.parameters[3].description": "Status of conversion (\"deleted\"/\"active\")",
	"paths./conversions/aggregated/list.get.parameters[3].enum.length": 2,
	"paths./conversions/aggregated/list.get.parameters[3].enum[0]": "deleted",
	"paths./conversions/aggregated/list.get.parameters[3].enum[1]": "active",
	"paths./conversions/aggregated/list.get.parameters[3].in": "query",
	"paths./conversions/aggregated/list.get.parameters[3].name": "status",
	"paths./conversions/aggregated/list.get.parameters[3].required": false,
	"paths./conversions/aggregated/list.get.parameters[3].type": "string",
	"paths./conversions/aggregated/list.get.parameters[4].description": "The temporal entity you want to group by (\"week\"/\"month\"). If unspecified is \"day\".",
	"paths./conversions/aggregated/list.get.parameters[4].enum.length": 2,
	"paths./conversions/aggregated/list.get.parameters[4].enum[0]": "week",
	"paths./conversions/aggregated/list.get.parameters[4].enum[1]": "month",
	"paths./conversions/aggregated/list.get.parameters[4].in": "query",
	"paths./conversions/aggregated/list.get.parameters[4].name": "groupBy",
	"paths./conversions/aggregated/list.get.parameters[4].required": false,
	"paths./conversions/aggregated/list.get.parameters[4].type": "string",
	"paths./conversions/aggregated/list.get.produces.length": 2,
	"paths./conversions/aggregated/list.get.produces[0]": "application/json",
	"paths./conversions/aggregated/list.get.produces[1]": "text/json",
	"paths./conversions/aggregated/list.get.responses.200.description": "",
	"paths./conversions/aggregated/list.get.responses.200.schema.$ref": "#/definitions/Api.Core.Responses.EntitiesResponse[Api.Core.Dto.Aggregated.AggregatedResult]",
	"paths./conversions/aggregated/list.get.responses.401.description": "Unauthorized",
	"paths./conversions/aggregated/list.get.responses.500.description": "Internal Server Error",
	"paths./conversions/aggregated/list.get.summary": "Retrieve statistics about this customer for a timeframe related to a subset of conversions grouped by some temporal entity (day/week/month)",
	"paths./conversions/aggregated/list.get.tags.length": 1,
	"paths./conversions/aggregated/list.get.tags[0]": "Conversions",
	"paths./conversions/count.get.consumes.length": 0,
	"paths./conversions/count.get.deprecated": false,
	"paths./conversions/count.get.parameters.length": 4,
	"paths./conversions/count.get.parameters[0].description": "Status of conversion (\"deleted\"/\"active\")",
	"paths./conversions/count.get.parameters[0].enum.length": 2,
	"paths./conversions/count.get.parameters[0].enum[0]": "deleted",
	"paths./conversions/count.get.parameters[0].enum[1]": "active",
	"paths./conversions/count.get.parameters[0].in": "query",
	"paths./conversions/count.get.parameters[0].name": "status",
	"paths./conversions/count.get.parameters[0].required": false,
	"paths./conversions/count.get.parameters[0].type": "string",
	"paths./conversions/count.get.parameters[1].description": "Filter fields by this pattern",
	"paths./conversions/count.get.parameters[1].in": "query",
	"paths./conversions/count.get.parameters[1].name": "textSearch",
	"paths./conversions/count.get.parameters[1].required": false,
	"paths./conversions/count.get.parameters[1].type": "string",
	"paths./conversions/count.get.parameters[2].description": "Exclude conversions created before this date (YYYYMMDD)",
	"paths./conversions/count.get.parameters[2].in": "query",
	"paths./conversions/count.get.parameters[2].name": "createdAfter",
	"paths./conversions/count.get.parameters[2].required": false,
	"paths./conversions/count.get.parameters[2].type": "string",
	"paths./conversions/count.get.parameters[3].description": "Exclude conversions created after this date (YYYYMMDD)",
	"paths./conversions/count.get.parameters[3].in": "query",
	"paths./conversions/count.get.parameters[3].name": "createdBefore",
	"paths./conversions/count.get.parameters[3].required": false,
	"paths./conversions/count.get.parameters[3].type": "string",
	"paths./conversions/count.get.produces.length": 4,
	"paths./conversions/count.get.produces[0]": "application/json",
	"paths./conversions/count.get.produces[1]": "text/json",
	"paths./conversions/count.get.produces[2]": "application/xml",
	"paths./conversions/count.get.produces[3]": "text/xml",
	"paths./conversions/count.get.responses.200.description": "",
	"paths./conversions/count.get.responses.200.schema.$ref": "#/definitions/Api.Core.Responses.CountResponce",
	"paths./conversions/count.get.responses.401.description": "Unauthorized",
	"paths./conversions/count.get.responses.500.description": "Internal Server Error",
	"paths./conversions/count.get.summary": "Retrieve a count of conversions",
	"paths./conversions/count.get.tags.length": 1,
	"paths./conversions/count.get.tags[0]": "Conversions",
	"paths./conversions/{conversionId}.delete.consumes.length": 0,
	"paths./conversions/{conversionId}.delete.deprecated": false,
	"paths./conversions/{conversionId}.delete.parameters.length": 1,
	"paths./conversions/{conversionId}.delete.parameters[0].description": "Id of the conversion",
	"paths./conversions/{conversionId}.delete.parameters[0].format": "int64",
	"paths./conversions/{conversionId}.delete.parameters[0].in": "path",
	"paths./conversions/{conversionId}.delete.parameters[0].name": "conversionId",
	"paths./conversions/{conversionId}.delete.parameters[0].required": true,
	"paths./conversions/{conversionId}.delete.parameters[0].type": "integer",
	"paths./conversions/{conversionId}.delete.produces.length": 4,
	"paths./conversions/{conversionId}.delete.produces[0]": "application/json",
	"paths./conversions/{conversionId}.delete.produces[1]": "text/json",
	"paths./conversions/{conversionId}.delete.produces[2]": "application/xml",
	"paths./conversions/{conversionId}.delete.produces[3]": "text/xml",
	"paths./conversions/{conversionId}.delete.responses.200.description": "",
	"paths./conversions/{conversionId}.delete.responses.200.schema.$ref": "#/definitions/Api.Core.Responses.EntityUri[System.Int64]",
	"paths./conversions/{conversionId}.delete.responses.401.description": "Unauthorized",
	"paths./conversions/{conversionId}.delete.responses.404.description": "Not found",
	"paths./conversions/{conversionId}.delete.responses.500.description": "Internal Server Error",
	"paths./conversions/{conversionId}.delete.summary": "Delete conversion specified by id",
	"paths./conversions/{conversionId}.delete.tags.length": 1,
	"paths./conversions/{conversionId}.delete.tags[0]": "Conversions",
	"paths./conversions/{conversionId}.get.consumes.length": 0,
	"paths./conversions/{conversionId}.get.deprecated": false,
	"paths./conversions/{conversionId}.get.parameters.length": 1,
	"paths./conversions/{conversionId}.get.parameters[0].description": "Id of the conversion",
	"paths./conversions/{conversionId}.get.parameters[0].format": "int64",
	"paths./conversions/{conversionId}.get.parameters[0].in": "path",
	"paths./conversions/{conversionId}.get.parameters[0].name": "conversionId",
	"paths./conversions/{conversionId}.get.parameters[0].required": true,
	"paths./conversions/{conversionId}.get.parameters[0].type": "integer",
	"paths./conversions/{conversionId}.get.produces.length": 4,
	"paths./conversions/{conversionId}.get.produces[0]": "application/json",
	"paths./conversions/{conversionId}.get.produces[1]": "text/json",
	"paths./conversions/{conversionId}.get.produces[2]": "application/xml",
	"paths./conversions/{conversionId}.get.produces[3]": "text/xml",
	"paths./conversions/{conversionId}.get.responses.200.description": "",
	"paths./conversions/{conversionId}.get.responses.200.schema.$ref": "#/definitions/Api.Core.Dto.Conversions.Conversion",
	"paths./conversions/{conversionId}.get.responses.401.description": "Unauthorized",
	"paths./conversions/{conversionId}.get.responses.404.description": "Not found",
	"paths./conversions/{conversionId}.get.responses.500.description": "Internal Server Error",
	"paths./conversions/{conversionId}.get.summary": "Retrieve conversion specified by id",
	"paths./conversions/{conversionId}.get.tags.length": 1,
	"paths./conversions/{conversionId}.get.tags[0]": "Conversions",
	"paths./conversions/{conversionId}.post.consumes.length": 5,
	"paths./conversions/{conversionId}.post.consumes[0]": "application/json",
	"paths./conversions/{conversionId}.post.consumes[1]": "text/json",
	"paths./conversions/{conversionId}.post.consumes[2]": "application/xml",
	"paths./conversions/{conversionId}.post.consumes[3]": "text/xml",
	"paths./conversions/{conversionId}.post.consumes[4]": "application/x-www-form-urlencoded",
	"paths./conversions/{conversionId}.post.deprecated": false,
	"paths./conversions/{conversionId}.post.parameters.length": 2,
	"paths./conversions/{conversionId}.post.parameters[0].description": "Id of the conversion",
	"paths./conversions/{conversionId}.post.parameters[0].format": "int64",
	"paths./conversions/{conversionId}.post.parameters[0].in": "path",
	"paths./conversions/{conversionId}.post.parameters[0].name": "conversionId",
	"paths./conversions/{conversionId}.post.parameters[0].required": true,
	"paths./conversions/{conversionId}.post.parameters[0].type": "integer",
	"paths./conversions/{conversionId}.post.parameters[1].description": "Updated body of the conversion",
	"paths./conversions/{conversionId}.post.parameters[1].in": "body",
	"paths./conversions/{conversionId}.post.parameters[1].name": "value",
	"paths./conversions/{conversionId}.post.parameters[1].required": true,
	"paths./conversions/{conversionId}.post.parameters[1].schema.$ref": "#/definitions/Api.Core.Dto.Conversions.Conversion",
	"paths./conversions/{conversionId}.post.produces.length": 4,
	"paths./conversions/{conversionId}.post.produces[0]": "application/json",
	"paths./conversions/{conversionId}.post.produces[1]": "text/json",
	"paths./conversions/{conversionId}.post.produces[2]": "application/xml",
	"paths./conversions/{conversionId}.post.produces[3]": "text/xml",
	"paths./conversions/{conversionId}.post.responses.200.description": "",
	"paths./conversions/{conversionId}.post.responses.200.schema.$ref": "#/definitions/Api.Core.Responses.EntityUri[System.Int64]",
	"paths./conversions/{conversionId}.post.responses.401.description": "Unauthorized",
	"paths./conversions/{conversionId}.post.responses.404.description": "Not found",
	"paths./conversions/{conversionId}.post.responses.500.description": "Internal Server Error",
	"paths./conversions/{conversionId}.post.summary": "Update conversion specified by id",
	"paths./conversions/{conversionId}.post.tags.length": 1,
	"paths./conversions/{conversionId}.post.tags[0]": "Conversions",
	"paths./conversions/{conversionId}/aggregated.get.consumes.length": 0,
	"paths./conversions/{conversionId}/aggregated.get.deprecated": false,
	"paths./conversions/{conversionId}/aggregated.get.parameters.length": 7,
	"paths./conversions/{conversionId}/aggregated.get.parameters[0].description": "Id of the conversion",
	"paths./conversions/{conversionId}/aggregated.get.parameters[0].format": "int64",
	"paths./conversions/{conversionId}/aggregated.get.parameters[0].in": "path",
	"paths./conversions/{conversionId}/aggregated.get.parameters[0].name": "conversionId",
	"paths./conversions/{conversionId}/aggregated.get.parameters[0].required": true,
	"paths./conversions/{conversionId}/aggregated.get.parameters[0].type": "integer",
	"paths./conversions/{conversionId}/aggregated.get.parameters[1].description": "Timeframe of the request. See list at $timeframeList",
	"paths./conversions/{conversionId}/aggregated.get.parameters[1].enum.length": 15,
	"paths./conversions/{conversionId}/aggregated.get.parameters[1].enum[0]": "today",
	"paths./conversions/{conversionId}/aggregated.get.parameters[1].enum[10]": "last12months",
	"paths./conversions/{conversionId}/aggregated.get.parameters[1].enum[11]": "lastyear",
	"paths./conversions/{conversionId}/aggregated.get.parameters[1].enum[12]": "currentyear",
	"paths./conversions/{conversionId}/aggregated.get.parameters[1].enum[13]": "beginning",
	"paths./conversions/{conversionId}/aggregated.get.parameters[1].enum[14]": "custom",
	"paths./conversions/{conversionId}/aggregated.get.parameters[1].enum[1]": "yesterday",
	"paths./conversions/{conversionId}/aggregated.get.parameters[1].enum[2]": "last7",
	"paths./conversions/{conversionId}/aggregated.get.parameters[1].enum[3]": "last30",
	"paths./conversions/{conversionId}/aggregated.get.parameters[1].enum[4]": "lastmonth",
	"paths./conversions/{conversionId}/aggregated.get.parameters[1].enum[5]": "currentmonth",
	"paths./conversions/{conversionId}/aggregated.get.parameters[1].enum[6]": "previousmonth",
	"paths./conversions/{conversionId}/aggregated.get.parameters[1].enum[7]": "last90",
	"paths./conversions/{conversionId}/aggregated.get.parameters[1].enum[8]": "last120",
	"paths./conversions/{conversionId}/aggregated.get.parameters[1].enum[9]": "last180",
	"paths./conversions/{conversionId}/aggregated.get.parameters[1].in": "query",
	"paths./conversions/{conversionId}/aggregated.get.parameters[1].name": "timeFrame",
	"paths./conversions/{conversionId}/aggregated.get.parameters[1].required": true,
	"paths./conversions/{conversionId}/aggregated.get.parameters[1].type": "string",
	"paths./conversions/{conversionId}/aggregated.get.parameters[2].description": "If using a \"custom\" timeFrame you can specify the starting day (YYYYMMDD)",
	"paths./conversions/{conversionId}/aggregated.get.parameters[2].in": "query",
	"paths./conversions/{conversionId}/aggregated.get.parameters[2].name": "fromDay",
	"paths./conversions/{conversionId}/aggregated.get.parameters[2].required": false,
	"paths./conversions/{conversionId}/aggregated.get.parameters[2].type": "string",
	"paths./conversions/{conversionId}/aggregated.get.parameters[3].description": "If using a \"custom\" timeFrame you can specify the ending day (YYYYMMDD)",
	"paths./conversions/{conversionId}/aggregated.get.parameters[3].in": "query",
	"paths./conversions/{conversionId}/aggregated.get.parameters[3].name": "toDay",
	"paths./conversions/{conversionId}/aggregated.get.parameters[3].required": false,
	"paths./conversions/{conversionId}/aggregated.get.parameters[3].type": "string",
	"paths./conversions/{conversionId}/aggregated.get.parameters[4].description": "Filter by this tag name",
	"paths./conversions/{conversionId}/aggregated.get.parameters[4].in": "query",
	"paths./conversions/{conversionId}/aggregated.get.parameters[4].name": "tag",
	"paths./conversions/{conversionId}/aggregated.get.parameters[4].required": false,
	"paths./conversions/{conversionId}/aggregated.get.parameters[4].type": "string",
	"paths./conversions/{conversionId}/aggregated.get.parameters[5].description": "Is the datapoint marked as favourite",
	"paths./conversions/{conversionId}/aggregated.get.parameters[5].in": "query",
	"paths./conversions/{conversionId}/aggregated.get.parameters[5].name": "favourite",
	"paths./conversions/{conversionId}/aggregated.get.parameters[5].required": false,
	"paths./conversions/{conversionId}/aggregated.get.parameters[5].type": "boolean",
	"paths./conversions/{conversionId}/aggregated.get.parameters[6].description": "If using \"yesterday\" or \"today\" timeframe you can ask for the hourly detail",
	"paths./conversions/{conversionId}/aggregated.get.parameters[6].in": "query",
	"paths./conversions/{conversionId}/aggregated.get.parameters[6].name": "hourly",
	"paths./conversions/{conversionId}/aggregated.get.parameters[6].required": false,
	"paths./conversions/{conversionId}/aggregated.get.parameters[6].type": "boolean",
	"paths./conversions/{conversionId}/aggregated.get.produces.length": 2,
	"paths./conversions/{conversionId}/aggregated.get.produces[0]": "application/json",
	"paths./conversions/{conversionId}/aggregated.get.produces[1]": "text/json",
	"paths./conversions/{conversionId}/aggregated.get.responses.200.description": "",
	"paths./conversions/{conversionId}/aggregated.get.responses.200.schema.$ref": "#/definitions/Api.Core.Dto.Aggregated.AggregatedResult",
	"paths./conversions/{conversionId}/aggregated.get.responses.401.description": "Unauthorized",
	"paths./conversions/{conversionId}/aggregated.get.responses.500.description": "Internal Server Error",
	"paths./conversions/{conversionId}/aggregated.get.summary": "Retrieve statistics about this conversion for a timeframe",
	"paths./conversions/{conversionId}/aggregated.get.tags.length": 1,
	"paths./conversions/{conversionId}/aggregated.get.tags[0]": "Conversions",
	"paths./conversions/{conversionId}/aggregated/list.get.consumes.length": 0,
	"paths./conversions/{conversionId}/aggregated/list.get.deprecated": false,
	"paths./conversions/{conversionId}/aggregated/list.get.parameters.length": 5,
	"paths./conversions/{conversionId}/aggregated/list.get.parameters[0].description": "Id of the conversion",
	"paths./conversions/{conversionId}/aggregated/list.get.parameters[0].format": "int64",
	"paths./conversions/{conversionId}/aggregated/list.get.parameters[0].in": "path",
	"paths./conversions/{conversionId}/aggregated/list.get.parameters[0].name": "conversionId",
	"paths./conversions/{conversionId}/aggregated/list.get.parameters[0].required": true,
	"paths./conversions/{conversionId}/aggregated/list.get.parameters[0].type": "integer",
	"paths./conversions/{conversionId}/aggregated/list.get.parameters[1].description": "Timeframe of the request. See list at $timeframeList",
	"paths./conversions/{conversionId}/aggregated/list.get.parameters[1].enum.length": 15,
	"paths./conversions/{conversionId}/aggregated/list.get.parameters[1].enum[0]": "today",
	"paths./conversions/{conversionId}/aggregated/list.get.parameters[1].enum[10]": "last12months",
	"paths./conversions/{conversionId}/aggregated/list.get.parameters[1].enum[11]": "lastyear",
	"paths./conversions/{conversionId}/aggregated/list.get.parameters[1].enum[12]": "currentyear",
	"paths./conversions/{conversionId}/aggregated/list.get.parameters[1].enum[13]": "beginning",
	"paths./conversions/{conversionId}/aggregated/list.get.parameters[1].enum[14]": "custom",
	"paths./conversions/{conversionId}/aggregated/list.get.parameters[1].enum[1]": "yesterday",
	"paths./conversions/{conversionId}/aggregated/list.get.parameters[1].enum[2]": "last7",
	"paths./conversions/{conversionId}/aggregated/list.get.parameters[1].enum[3]": "last30",
	"paths./conversions/{conversionId}/aggregated/list.get.parameters[1].enum[4]": "lastmonth",
	"paths./conversions/{conversionId}/aggregated/list.get.parameters[1].enum[5]": "currentmonth",
	"paths./conversions/{conversionId}/aggregated/list.get.parameters[1].enum[6]": "previousmonth",
	"paths./conversions/{conversionId}/aggregated/list.get.parameters[1].enum[7]": "last90",
	"paths./conversions/{conversionId}/aggregated/list.get.parameters[1].enum[8]": "last120",
	"paths./conversions/{conversionId}/aggregated/list.get.parameters[1].enum[9]": "last180",
	"paths./conversions/{conversionId}/aggregated/list.get.parameters[1].in": "query",
	"paths./conversions/{conversionId}/aggregated/list.get.parameters[1].name": "timeFrame",
	"paths./conversions/{conversionId}/aggregated/list.get.parameters[1].required": true,
	"paths./conversions/{conversionId}/aggregated/list.get.parameters[1].type": "string",
	"paths./conversions/{conversionId}/aggregated/list.get.parameters[2].description": "If using a \"custom\" timeFrame you can specify the starting day (YYYYMMDD)",
	"paths./conversions/{conversionId}/aggregated/list.get.parameters[2].in": "query",
	"paths./conversions/{conversionId}/aggregated/list.get.parameters[2].name": "fromDay",
	"paths./conversions/{conversionId}/aggregated/list.get.parameters[2].required": false,
	"paths./conversions/{conversionId}/aggregated/list.get.parameters[2].type": "string",
	"paths./conversions/{conversionId}/aggregated/list.get.parameters[3].description": "If using a \"custom\" timeFrame you can specify the ending day (YYYYMMDD)",
	"paths./conversions/{conversionId}/aggregated/list.get.parameters[3].in": "query",
	"paths./conversions/{conversionId}/aggregated/list.get.parameters[3].name": "toDay",
	"paths./conversions/{conversionId}/aggregated/list.get.parameters[3].required": false,
	"paths./conversions/{conversionId}/aggregated/list.get.parameters[3].type": "string",
	"paths./conversions/{conversionId}/aggregated/list.get.parameters[4].description": "The temporal entity you want to group by (\"week\"/\"month\"). If unspecified is \"day\".",
	"paths./conversions/{conversionId}/aggregated/list.get.parameters[4].enum.length": 2,
	"paths./conversions/{conversionId}/aggregated/list.get.parameters[4].enum[0]": "week",
	"paths./conversions/{conversionId}/aggregated/list.get.parameters[4].enum[1]": "month",
	"paths./conversions/{conversionId}/aggregated/list.get.parameters[4].in": "query",
	"paths./conversions/{conversionId}/aggregated/list.get.parameters[4].name": "groupBy",
	"paths./conversions/{conversionId}/aggregated/list.get.parameters[4].required": false,
	"paths./conversions/{conversionId}/aggregated/list.get.parameters[4].type": "string",
	"paths./conversions/{conversionId}/aggregated/list.get.produces.length": 2,
	"paths./conversions/{conversionId}/aggregated/list.get.produces[0]": "application/json",
	"paths./conversions/{conversionId}/aggregated/list.get.produces[1]": "text/json",
	"paths./conversions/{conversionId}/aggregated/list.get.responses.200.description": "",
	"paths./conversions/{conversionId}/aggregated/list.get.responses.200.schema.$ref": "#/definitions/Api.Core.Responses.EntitiesResponse[Api.Core.Dto.Aggregated.AggregatedResult]",
	"paths./conversions/{conversionId}/aggregated/list.get.responses.401.description": "Unauthorized",
	"paths./conversions/{conversionId}/aggregated/list.get.responses.500.description": "Internal Server Error",
	"paths./conversions/{conversionId}/aggregated/list.get.summary": "Retrieve statistics about this conversion for a timeframe grouped by some temporal entity (day/week/month)",
	"paths./conversions/{conversionId}/aggregated/list.get.tags.length": 1,
	"paths./conversions/{conversionId}/aggregated/list.get.tags[0]": "Conversions",
	"paths./conversions/{conversionId}/datapoints.get.consumes.length": 0,
	"paths./conversions/{conversionId}/datapoints.get.deprecated": false,
	"paths./conversions/{conversionId}/datapoints.get.parameters.length": 9,
	"paths./conversions/{conversionId}/datapoints.get.parameters[0].description": "Id of the conversion",
	"paths./conversions/{conversionId}/datapoints.get.parameters[0].format": "int64",
	"paths./conversions/{conversionId}/datapoints.get.parameters[0].in": "path",
	"paths./conversions/{conversionId}/datapoints.get.parameters[0].name": "conversionId",
	"paths./conversions/{conversionId}/datapoints.get.parameters[0].required": true,
	"paths./conversions/{conversionId}/datapoints.get.parameters[0].type": "integer",
	"paths./conversions/{conversionId}/datapoints.get.parameters[1].description": "Offset where to start from",
	"paths./conversions/{conversionId}/datapoints.get.parameters[1].format": "int32",
	"paths./conversions/{conversionId}/datapoints.get.parameters[1].in": "query",
	"paths./conversions/{conversionId}/datapoints.get.parameters[1].name": "offset",
	"paths./conversions/{conversionId}/datapoints.get.parameters[1].required": false,
	"paths./conversions/{conversionId}/datapoints.get.parameters[1].type": "integer",
	"paths./conversions/{conversionId}/datapoints.get.parameters[2].description": "Limit results to this number",
	"paths./conversions/{conversionId}/datapoints.get.parameters[2].format": "int32",
	"paths./conversions/{conversionId}/datapoints.get.parameters[2].in": "query",
	"paths./conversions/{conversionId}/datapoints.get.parameters[2].name": "limit",
	"paths./conversions/{conversionId}/datapoints.get.parameters[2].required": false,
	"paths./conversions/{conversionId}/datapoints.get.parameters[2].type": "integer",
	"paths./conversions/{conversionId}/datapoints.get.parameters[3].description": "Type of datapoint (\"tl\"/\"tp\")",
	"paths./conversions/{conversionId}/datapoints.get.parameters[3].enum.length": 2,
	"paths./conversions/{conversionId}/datapoints.get.parameters[3].enum[0]": "tp",
	"paths./conversions/{conversionId}/datapoints.get.parameters[3].enum[1]": "tl",
	"paths./conversions/{conversionId}/datapoints.get.parameters[3].in": "query",
	"paths./conversions/{conversionId}/datapoints.get.parameters[3].name": "type",
	"paths./conversions/{conversionId}/datapoints.get.parameters[3].required": false,
	"paths./conversions/{conversionId}/datapoints.get.parameters[3].type": "string",
	"paths./conversions/{conversionId}/datapoints.get.parameters[4].description": "Status of datapoint (\"deleted\"/\"active\"/\"paused\"/\"spam\")",
	"paths./conversions/{conversionId}/datapoints.get.parameters[4].enum.length": 4,
	"paths./conversions/{conversionId}/datapoints.get.parameters[4].enum[0]": "deleted",
	"paths./conversions/{conversionId}/datapoints.get.parameters[4].enum[1]": "active",
	"paths./conversions/{conversionId}/datapoints.get.parameters[4].enum[2]": "paused",
	"paths./conversions/{conversionId}/datapoints.get.parameters[4].enum[3]": "spam",
	"paths./conversions/{conversionId}/datapoints.get.parameters[4].in": "query",
	"paths./conversions/{conversionId}/datapoints.get.parameters[4].name": "status",
	"paths./conversions/{conversionId}/datapoints.get.parameters[4].required": false,
	"paths./conversions/{conversionId}/datapoints.get.parameters[4].type": "string",
	"paths./conversions/{conversionId}/datapoints.get.parameters[5].description": "Filter by this tag name",
	"paths./conversions/{conversionId}/datapoints.get.parameters[5].in": "query",
	"paths./conversions/{conversionId}/datapoints.get.parameters[5].name": "tags",
	"paths./conversions/{conversionId}/datapoints.get.parameters[5].required": false,
	"paths./conversions/{conversionId}/datapoints.get.parameters[5].type": "string",
	"paths./conversions/{conversionId}/datapoints.get.parameters[6].description": "Filter fields by this pattern",
	"paths./conversions/{conversionId}/datapoints.get.parameters[6].in": "query",
	"paths./conversions/{conversionId}/datapoints.get.parameters[6].name": "textSearch",
	"paths./conversions/{conversionId}/datapoints.get.parameters[6].required": false,
	"paths./conversions/{conversionId}/datapoints.get.parameters[6].type": "string",
	"paths./conversions/{conversionId}/datapoints.get.parameters[7].description": "Exclude datapoints created before this date (YYYYMMDD)",
	"paths./conversions/{conversionId}/datapoints.get.parameters[7].in": "query",
	"paths./conversions/{conversionId}/datapoints.get.parameters[7].name": "createdAfter",
	"paths./conversions/{conversionId}/datapoints.get.parameters[7].required": false,
	"paths./conversions/{conversionId}/datapoints.get.parameters[7].type": "string",
	"paths./conversions/{conversionId}/datapoints.get.parameters[8].description": "Exclude datapoints created after this date (YYYYMMDD)",
	"paths./conversions/{conversionId}/datapoints.get.parameters[8].in": "query",
	"paths./conversions/{conversionId}/datapoints.get.parameters[8].name": "createdBefore",
	"paths./conversions/{conversionId}/datapoints.get.parameters[8].required": false,
	"paths./conversions/{conversionId}/datapoints.get.parameters[8].type": "string",
	"paths./conversions/{conversionId}/datapoints.get.produces.length": 2,
	"paths./conversions/{conversionId}/datapoints.get.produces[0]": "application/json",
	"paths./conversions/{conversionId}/datapoints.get.produces[1]": "text/json",
	"paths./conversions/{conversionId}/datapoints.get.responses.200.description": "",
	"paths./conversions/{conversionId}/datapoints.get.responses.200.schema.$ref": "#/definitions/Api.Core.Responses.EntitiesResponse[Api.Core.Responses.EntityUri[System.Int64]]",
	"paths./conversions/{conversionId}/datapoints.get.responses.401.description": "Unauthorized",
	"paths./conversions/{conversionId}/datapoints.get.responses.500.description": "Internal Server Error",
	"paths./conversions/{conversionId}/datapoints.get.summary": "Retrieve a list of datapoints connected to this conversion",
	"paths./conversions/{conversionId}/datapoints.get.tags.length": 1,
	"paths./conversions/{conversionId}/datapoints.get.tags[0]": "Conversions",
	"paths./conversions/{conversionId}/datapoints/batch/patch.put.consumes.length": 3,
	"paths./conversions/{conversionId}/datapoints/batch/patch.put.consumes[0]": "application/json",
	"paths./conversions/{conversionId}/datapoints/batch/patch.put.consumes[1]": "text/json",
	"paths./conversions/{conversionId}/datapoints/batch/patch.put.consumes[2]": "application/x-www-form-urlencoded",
	"paths./conversions/{conversionId}/datapoints/batch/patch.put.deprecated": false,
	"paths./conversions/{conversionId}/datapoints/batch/patch.put.parameters.length": 2,
	"paths./conversions/{conversionId}/datapoints/batch/patch.put.parameters[0].description": "Id of the conversion",
	"paths./conversions/{conversionId}/datapoints/batch/patch.put.parameters[0].format": "int64",
	"paths./conversions/{conversionId}/datapoints/batch/patch.put.parameters[0].in": "path",
	"paths./conversions/{conversionId}/datapoints/batch/patch.put.parameters[0].name": "conversionId",
	"paths./conversions/{conversionId}/datapoints/batch/patch.put.parameters[0].required": true,
	"paths./conversions/{conversionId}/datapoints/batch/patch.put.parameters[0].type": "integer",
	"paths./conversions/{conversionId}/datapoints/batch/patch.put.parameters[1].description": "Patch requests",
	"paths./conversions/{conversionId}/datapoints/batch/patch.put.parameters[1].in": "body",
	"paths./conversions/{conversionId}/datapoints/batch/patch.put.parameters[1].name": "data",
	"paths./conversions/{conversionId}/datapoints/batch/patch.put.parameters[1].required": true,
	"paths./conversions/{conversionId}/datapoints/batch/patch.put.parameters[1].schema.$ref": "#/definitions/Api.Core.Requests.PatchBodyBatch",
	"paths./conversions/{conversionId}/datapoints/batch/patch.put.produces.length": 4,
	"paths./conversions/{conversionId}/datapoints/batch/patch.put.produces[0]": "application/json",
	"paths./conversions/{conversionId}/datapoints/batch/patch.put.produces[1]": "text/json",
	"paths./conversions/{conversionId}/datapoints/batch/patch.put.produces[2]": "application/xml",
	"paths./conversions/{conversionId}/datapoints/batch/patch.put.produces[3]": "text/xml",
	"paths./conversions/{conversionId}/datapoints/batch/patch.put.responses.200.description": "",
	"paths./conversions/{conversionId}/datapoints/batch/patch.put.responses.200.schema.$ref": "#/definitions/Api.Core.Responses.EntityUri[System.Int64]",
	"paths./conversions/{conversionId}/datapoints/batch/patch.put.responses.401.description": "Unauthorized",
	"paths./conversions/{conversionId}/datapoints/batch/patch.put.responses.404.description": "Not found",
	"paths./conversions/{conversionId}/datapoints/batch/patch.put.responses.500.description": "Internal Server Error",
	"paths./conversions/{conversionId}/datapoints/batch/patch.put.summary": "Modify the association between a conversion and multiple datapoints",
	"paths./conversions/{conversionId}/datapoints/batch/patch.put.tags.length": 1,
	"paths./conversions/{conversionId}/datapoints/batch/patch.put.tags[0]": "Conversions",
	"paths./conversions/{conversionId}/datapoints/count.get.consumes.length": 0,
	"paths./conversions/{conversionId}/datapoints/count.get.deprecated": false,
	"paths./conversions/{conversionId}/datapoints/count.get.parameters.length": 7,
	"paths./conversions/{conversionId}/datapoints/count.get.parameters[0].description": "Id of the conversion",
	"paths./conversions/{conversionId}/datapoints/count.get.parameters[0].format": "int64",
	"paths./conversions/{conversionId}/datapoints/count.get.parameters[0].in": "path",
	"paths./conversions/{conversionId}/datapoints/count.get.parameters[0].name": "conversionId",
	"paths./conversions/{conversionId}/datapoints/count.get.parameters[0].required": true,
	"paths./conversions/{conversionId}/datapoints/count.get.parameters[0].type": "integer",
	"paths./conversions/{conversionId}/datapoints/count.get.parameters[1].description": "Type of datapoint (\"tl\"/\"tp\")",
	"paths./conversions/{conversionId}/datapoints/count.get.parameters[1].in": "query",
	"paths./conversions/{conversionId}/datapoints/count.get.parameters[1].name": "type",
	"paths./conversions/{conversionId}/datapoints/count.get.parameters[1].required": false,
	"paths./conversions/{conversionId}/datapoints/count.get.parameters[1].type": "string",
	"paths./conversions/{conversionId}/datapoints/count.get.parameters[2].description": "Status of datapoint (\"deleted\"/\"active\"/\"paused\"/\"spam\")",
	"paths./conversions/{conversionId}/datapoints/count.get.parameters[2].in": "query",
	"paths./conversions/{conversionId}/datapoints/count.get.parameters[2].name": "status",
	"paths./conversions/{conversionId}/datapoints/count.get.parameters[2].required": false,
	"paths./conversions/{conversionId}/datapoints/count.get.parameters[2].type": "string",
	"paths./conversions/{conversionId}/datapoints/count.get.parameters[3].description": "Filter by this tag name",
	"paths./conversions/{conversionId}/datapoints/count.get.parameters[3].in": "query",
	"paths./conversions/{conversionId}/datapoints/count.get.parameters[3].name": "tags",
	"paths./conversions/{conversionId}/datapoints/count.get.parameters[3].required": false,
	"paths./conversions/{conversionId}/datapoints/count.get.parameters[3].type": "string",
	"paths./conversions/{conversionId}/datapoints/count.get.parameters[4].description": "Filter fields by this pattern",
	"paths./conversions/{conversionId}/datapoints/count.get.parameters[4].in": "query",
	"paths./conversions/{conversionId}/datapoints/count.get.parameters[4].name": "textSearch",
	"paths./conversions/{conversionId}/datapoints/count.get.parameters[4].required": false,
	"paths./conversions/{conversionId}/datapoints/count.get.parameters[4].type": "string",
	"paths./conversions/{conversionId}/datapoints/count.get.parameters[5].description": "Exclude datapoints created before this date (YYYYMMDD)",
	"paths./conversions/{conversionId}/datapoints/count.get.parameters[5].in": "query",
	"paths./conversions/{conversionId}/datapoints/count.get.parameters[5].name": "createdAfter",
	"paths./conversions/{conversionId}/datapoints/count.get.parameters[5].required": false,
	"paths./conversions/{conversionId}/datapoints/count.get.parameters[5].type": "string",
	"paths./conversions/{conversionId}/datapoints/count.get.parameters[6].description": "Exclude datapoints created after this date (YYYYMMDD)",
	"paths./conversions/{conversionId}/datapoints/count.get.parameters[6].in": "query",
	"paths./conversions/{conversionId}/datapoints/count.get.parameters[6].name": "createdBefore",
	"paths./conversions/{conversionId}/datapoints/count.get.parameters[6].required": false,
	"paths./conversions/{conversionId}/datapoints/count.get.parameters[6].type": "string",
	"paths./conversions/{conversionId}/datapoints/count.get.produces.length": 4,
	"paths./conversions/{conversionId}/datapoints/count.get.produces[0]": "application/json",
	"paths./conversions/{conversionId}/datapoints/count.get.produces[1]": "text/json",
	"paths./conversions/{conversionId}/datapoints/count.get.produces[2]": "application/xml",
	"paths./conversions/{conversionId}/datapoints/count.get.produces[3]": "text/xml",
	"paths./conversions/{conversionId}/datapoints/count.get.responses.200.description": "",
	"paths./conversions/{conversionId}/datapoints/count.get.responses.200.schema.$ref": "#/definitions/Api.Core.Responses.CountResponce",
	"paths./conversions/{conversionId}/datapoints/count.get.responses.401.description": "Unauthorized",
	"paths./conversions/{conversionId}/datapoints/count.get.responses.500.description": "Internal Server Error",
	"paths./conversions/{conversionId}/datapoints/count.get.summary": "Retrieve a count of datapoints connected to this conversion",
	"paths./conversions/{conversionId}/datapoints/count.get.tags.length": 1,
	"paths./conversions/{conversionId}/datapoints/count.get.tags[0]": "Conversions",
	"paths./conversions/{conversionId}/datapoints/patch.put.consumes.length": 5,
	"paths./conversions/{conversionId}/datapoints/patch.put.consumes[0]": "application/json",
	"paths./conversions/{conversionId}/datapoints/patch.put.consumes[1]": "text/json",
	"paths./conversions/{conversionId}/datapoints/patch.put.consumes[2]": "application/xml",
	"paths./conversions/{conversionId}/datapoints/patch.put.consumes[3]": "text/xml",
	"paths./conversions/{conversionId}/datapoints/patch.put.consumes[4]": "application/x-www-form-urlencoded",
	"paths./conversions/{conversionId}/datapoints/patch.put.deprecated": false,
	"paths./conversions/{conversionId}/datapoints/patch.put.parameters.length": 2,
	"paths./conversions/{conversionId}/datapoints/patch.put.parameters[0].description": "Id of the conversion",
	"paths./conversions/{conversionId}/datapoints/patch.put.parameters[0].format": "int64",
	"paths./conversions/{conversionId}/datapoints/patch.put.parameters[0].in": "path",
	"paths./conversions/{conversionId}/datapoints/patch.put.parameters[0].name": "conversionId",
	"paths./conversions/{conversionId}/datapoints/patch.put.parameters[0].required": true,
	"paths./conversions/{conversionId}/datapoints/patch.put.parameters[0].type": "integer",
	"paths./conversions/{conversionId}/datapoints/patch.put.parameters[1].description": "Patch request",
	"paths./conversions/{conversionId}/datapoints/patch.put.parameters[1].in": "body",
	"paths./conversions/{conversionId}/datapoints/patch.put.parameters[1].name": "data",
	"paths./conversions/{conversionId}/datapoints/patch.put.parameters[1].required": true,
	"paths./conversions/{conversionId}/datapoints/patch.put.parameters[1].schema.$ref": "#/definitions/Api.Core.Requests.ConversionPatchBody",
	"paths./conversions/{conversionId}/datapoints/patch.put.produces.length": 4,
	"paths./conversions/{conversionId}/datapoints/patch.put.produces[0]": "application/json",
	"paths./conversions/{conversionId}/datapoints/patch.put.produces[1]": "text/json",
	"paths./conversions/{conversionId}/datapoints/patch.put.produces[2]": "application/xml",
	"paths./conversions/{conversionId}/datapoints/patch.put.produces[3]": "text/xml",
	"paths./conversions/{conversionId}/datapoints/patch.put.responses.200.description": "",
	"paths./conversions/{conversionId}/datapoints/patch.put.responses.200.schema.$ref": "#/definitions/Api.Core.Responses.EntityUri[System.Int64]",
	"paths./conversions/{conversionId}/datapoints/patch.put.responses.401.description": "Unauthorized",
	"paths./conversions/{conversionId}/datapoints/patch.put.responses.404.description": "Not found",
	"paths./conversions/{conversionId}/datapoints/patch.put.responses.500.description": "Internal Server Error",
	"paths./conversions/{conversionId}/datapoints/patch.put.summary": "Modify the association between a conversion and a datapoint",
	"paths./conversions/{conversionId}/datapoints/patch.put.tags.length": 1,
	"paths./conversions/{conversionId}/datapoints/patch.put.tags[0]": "Conversions",
	"paths./conversions/{conversionId}/hits.get.consumes.length": 0,
	"paths./conversions/{conversionId}/hits.get.deprecated": false,
	"paths./conversions/{conversionId}/hits.get.parameters.length": 7,
	"paths./conversions/{conversionId}/hits.get.parameters[0].description": "Id of the conversion",
	"paths./conversions/{conversionId}/hits.get.parameters[0].format": "int64",
	"paths./conversions/{conversionId}/hits.get.parameters[0].in": "path",
	"paths./conversions/{conversionId}/hits.get.parameters[0].name": "conversionId",
	"paths./conversions/{conversionId}/hits.get.parameters[0].required": true,
	"paths./conversions/{conversionId}/hits.get.parameters[0].type": "integer",
	"paths./conversions/{conversionId}/hits.get.parameters[1].description": "Timeframe of the request. See list at $timeframeList",
	"paths./conversions/{conversionId}/hits.get.parameters[1].enum.length": 10,
	"paths./conversions/{conversionId}/hits.get.parameters[1].enum[0]": "yesterday",
	"paths./conversions/{conversionId}/hits.get.parameters[1].enum[1]": "last7",
	"paths./conversions/{conversionId}/hits.get.parameters[1].enum[2]": "last30",
	"paths./conversions/{conversionId}/hits.get.parameters[1].enum[3]": "lastmonth",
	"paths./conversions/{conversionId}/hits.get.parameters[1].enum[4]": "currentmonth",
	"paths./conversions/{conversionId}/hits.get.parameters[1].enum[5]": "previousmonth",
	"paths./conversions/{conversionId}/hits.get.parameters[1].enum[6]": "last90",
	"paths./conversions/{conversionId}/hits.get.parameters[1].enum[7]": "last120",
	"paths./conversions/{conversionId}/hits.get.parameters[1].enum[8]": "last180",
	"paths./conversions/{conversionId}/hits.get.parameters[1].enum[9]": "custom",
	"paths./conversions/{conversionId}/hits.get.parameters[1].in": "query",
	"paths./conversions/{conversionId}/hits.get.parameters[1].name": "timeframe",
	"paths./conversions/{conversionId}/hits.get.parameters[1].required": true,
	"paths./conversions/{conversionId}/hits.get.parameters[1].type": "string",
	"paths./conversions/{conversionId}/hits.get.parameters[2].description": "Limit results to this number",
	"paths./conversions/{conversionId}/hits.get.parameters[2].format": "int32",
	"paths./conversions/{conversionId}/hits.get.parameters[2].in": "query",
	"paths./conversions/{conversionId}/hits.get.parameters[2].name": "limit",
	"paths./conversions/{conversionId}/hits.get.parameters[2].required": false,
	"paths./conversions/{conversionId}/hits.get.parameters[2].type": "integer",
	"paths./conversions/{conversionId}/hits.get.parameters[3].description": "Offset where to start from (it's the lastKey field in the response object)",
	"paths./conversions/{conversionId}/hits.get.parameters[3].in": "query",
	"paths./conversions/{conversionId}/hits.get.parameters[3].name": "offset",
	"paths./conversions/{conversionId}/hits.get.parameters[3].required": false,
	"paths./conversions/{conversionId}/hits.get.parameters[3].type": "string",
	"paths./conversions/{conversionId}/hits.get.parameters[4].description": "If using a \"custom\" timeFrame you can specify the starting day (YYYYMMDD)",
	"paths./conversions/{conversionId}/hits.get.parameters[4].in": "query",
	"paths./conversions/{conversionId}/hits.get.parameters[4].name": "fromDay",
	"paths./conversions/{conversionId}/hits.get.parameters[4].required": false,
	"paths./conversions/{conversionId}/hits.get.parameters[4].type": "string",
	"paths./conversions/{conversionId}/hits.get.parameters[5].description": "If using a \"custom\" timeFrame you can specify the ending day (YYYYMMDD)",
	"paths./conversions/{conversionId}/hits.get.parameters[5].in": "query",
	"paths./conversions/{conversionId}/hits.get.parameters[5].name": "toDay",
	"paths./conversions/{conversionId}/hits.get.parameters[5].required": false,
	"paths./conversions/{conversionId}/hits.get.parameters[5].type": "string",
	"paths./conversions/{conversionId}/hits.get.parameters[6].description": "Filter event type (\"spiders\"/\"uniques\"/\"nonuniques\"/\"conversions\")",
	"paths./conversions/{conversionId}/hits.get.parameters[6].enum.length": 4,
	"paths./conversions/{conversionId}/hits.get.parameters[6].enum[0]": "spiders",
	"paths./conversions/{conversionId}/hits.get.parameters[6].enum[1]": "uniques",
	"paths./conversions/{conversionId}/hits.get.parameters[6].enum[2]": "nonuniques",
	"paths./conversions/{conversionId}/hits.get.parameters[6].enum[3]": "conversions",
	"paths./conversions/{conversionId}/hits.get.parameters[6].in": "query",
	"paths./conversions/{conversionId}/hits.get.parameters[6].name": "filter",
	"paths./conversions/{conversionId}/hits.get.parameters[6].required": false,
	"paths./conversions/{conversionId}/hits.get.parameters[6].type": "string",
	"paths./conversions/{conversionId}/hits.get.produces.length": 2,
	"paths./conversions/{conversionId}/hits.get.produces[0]": "application/json",
	"paths./conversions/{conversionId}/hits.get.produces[1]": "text/json",
	"paths./conversions/{conversionId}/hits.get.responses.200.description": "",
	"paths./conversions/{conversionId}/hits.get.responses.200.schema.$ref": "#/definitions/Api.Core.Dto.ClickStream.HitListPage",
	"paths./conversions/{conversionId}/hits.get.responses.401.description": "Unauthorized",
	"paths./conversions/{conversionId}/hits.get.responses.500.description": "Internal Server Error",
	"paths./conversions/{conversionId}/hits.get.summary": "Retrieve the list of events related to this conversion.",
	"paths./conversions/{conversionId}/hits.get.tags.length": 1,
	"paths./conversions/{conversionId}/hits.get.tags[0]": "Conversions",
	"paths./conversions/{conversionId}/notes.put.consumes.length": 5,
	"paths./conversions/{conversionId}/notes.put.consumes[0]": "application/json",
	"paths./conversions/{conversionId}/notes.put.consumes[1]": "text/json",
	"paths./conversions/{conversionId}/notes.put.consumes[2]": "application/xml",
	"paths./conversions/{conversionId}/notes.put.consumes[3]": "text/xml",
	"paths./conversions/{conversionId}/notes.put.consumes[4]": "application/x-www-form-urlencoded",
	"paths./conversions/{conversionId}/notes.put.deprecated": false,
	"paths./conversions/{conversionId}/notes.put.parameters.length": 2,
	"paths./conversions/{conversionId}/notes.put.parameters[0].description": "Id of the conversion",
	"paths./conversions/{conversionId}/notes.put.parameters[0].format": "int64",
	"paths./conversions/{conversionId}/notes.put.parameters[0].in": "path",
	"paths./conversions/{conversionId}/notes.put.parameters[0].name": "conversionId",
	"paths./conversions/{conversionId}/notes.put.parameters[0].required": true,
	"paths./conversions/{conversionId}/notes.put.parameters[0].type": "integer",
	"paths./conversions/{conversionId}/notes.put.parameters[1].description": "Patch requests",
	"paths./conversions/{conversionId}/notes.put.parameters[1].in": "body",
	"paths./conversions/{conversionId}/notes.put.parameters[1].name": "note",
	"paths./conversions/{conversionId}/notes.put.parameters[1].required": true,
	"paths./conversions/{conversionId}/notes.put.parameters[1].schema.$ref": "#/definitions/Api.Core.Requests.GenericTextPatch",
	"paths./conversions/{conversionId}/notes.put.produces.length": 4,
	"paths./conversions/{conversionId}/notes.put.produces[0]": "application/json",
	"paths./conversions/{conversionId}/notes.put.produces[1]": "text/json",
	"paths./conversions/{conversionId}/notes.put.produces[2]": "application/xml",
	"paths./conversions/{conversionId}/notes.put.produces[3]": "text/xml",
	"paths./conversions/{conversionId}/notes.put.responses.200.description": "",
	"paths./conversions/{conversionId}/notes.put.responses.200.schema.$ref": "#/definitions/Api.Core.Responses.EntityUri[System.Int64]",
	"paths./conversions/{conversionId}/notes.put.responses.401.description": "Unauthorized",
	"paths./conversions/{conversionId}/notes.put.responses.403.description": "Forbidden",
	"paths./conversions/{conversionId}/notes.put.responses.404.description": "Not found",
	"paths./conversions/{conversionId}/notes.put.responses.500.description": "Internal Server Error",
	"paths./conversions/{conversionId}/notes.put.summary": "Fast patch the \"notes\" field of a conversion",
	"paths./conversions/{conversionId}/notes.put.tags.length": 1,
	"paths./conversions/{conversionId}/notes.put.tags[0]": "Conversions",
	"paths./conversions/{conversionId}/reports.get.consumes.length": 0,
	"paths./conversions/{conversionId}/reports.get.deprecated": false,
	"paths./conversions/{conversionId}/reports.get.parameters.length": 6,
	"paths./conversions/{conversionId}/reports.get.parameters[0].description": "Id of the conversion",
	"paths./conversions/{conversionId}/reports.get.parameters[0].format": "int64",
	"paths./conversions/{conversionId}/reports.get.parameters[0].in": "path",
	"paths./conversions/{conversionId}/reports.get.parameters[0].name": "conversionId",
	"paths./conversions/{conversionId}/reports.get.parameters[0].required": true,
	"paths./conversions/{conversionId}/reports.get.parameters[0].type": "integer",
	"paths./conversions/{conversionId}/reports.get.parameters[1].description": "Type of the report.",
	"paths./conversions/{conversionId}/reports.get.parameters[1].enum.length": 13,
	"paths./conversions/{conversionId}/reports.get.parameters[1].enum[0]": "datapoints",
	"paths./conversions/{conversionId}/reports.get.parameters[1].enum[10]": "destinations",
	"paths./conversions/{conversionId}/reports.get.parameters[1].enum[11]": "languages",
	"paths./conversions/{conversionId}/reports.get.parameters[1].enum[12]": "params",
	"paths./conversions/{conversionId}/reports.get.parameters[1].enum[1]": "groups",
	"paths./conversions/{conversionId}/reports.get.parameters[1].enum[2]": "browsers",
	"paths./conversions/{conversionId}/reports.get.parameters[1].enum[3]": "browsersfamilies",
	"paths./conversions/{conversionId}/reports.get.parameters[1].enum[4]": "platforms",
	"paths./conversions/{conversionId}/reports.get.parameters[1].enum[5]": "cities",
	"paths./conversions/{conversionId}/reports.get.parameters[1].enum[6]": "countries",
	"paths./conversions/{conversionId}/reports.get.parameters[1].enum[7]": "keywords",
	"paths./conversions/{conversionId}/reports.get.parameters[1].enum[8]": "referrers",
	"paths./conversions/{conversionId}/reports.get.parameters[1].enum[9]": "convparameters",
	"paths./conversions/{conversionId}/reports.get.parameters[1].in": "query",
	"paths./conversions/{conversionId}/reports.get.parameters[1].name": "type",
	"paths./conversions/{conversionId}/reports.get.parameters[1].required": true,
	"paths./conversions/{conversionId}/reports.get.parameters[1].type": "string",
	"paths./conversions/{conversionId}/reports.get.parameters[2].description": "Timeframe of the request. See list at $timeframeList",
	"paths./conversions/{conversionId}/reports.get.parameters[2].enum.length": 11,
	"paths./conversions/{conversionId}/reports.get.parameters[2].enum[0]": "yesterday",
	"paths./conversions/{conversionId}/reports.get.parameters[2].enum[10]": "custom",
	"paths./conversions/{conversionId}/reports.get.parameters[2].enum[1]": "last7",
	"paths./conversions/{conversionId}/reports.get.parameters[2].enum[2]": "last30",
	"paths./conversions/{conversionId}/reports.get.parameters[2].enum[3]": "lastmonth",
	"paths./conversions/{conversionId}/reports.get.parameters[2].enum[4]": "currentmonth",
	"paths./conversions/{conversionId}/reports.get.parameters[2].enum[5]": "previousmonth",
	"paths./conversions/{conversionId}/reports.get.parameters[2].enum[6]": "last90",
	"paths./conversions/{conversionId}/reports.get.parameters[2].enum[7]": "last120",
	"paths./conversions/{conversionId}/reports.get.parameters[2].enum[8]": "last180",
	"paths./conversions/{conversionId}/reports.get.parameters[2].enum[9]": "beginning",
	"paths./conversions/{conversionId}/reports.get.parameters[2].in": "query",
	"paths./conversions/{conversionId}/reports.get.parameters[2].name": "timeframe",
	"paths./conversions/{conversionId}/reports.get.parameters[2].required": true,
	"paths./conversions/{conversionId}/reports.get.parameters[2].type": "string",
	"paths./conversions/{conversionId}/reports.get.parameters[3].description": "Type of the event you want to filter this report with. By default no filter is applied.",
	"paths./conversions/{conversionId}/reports.get.parameters[3].enum.length": 2,
	"paths./conversions/{conversionId}/reports.get.parameters[3].enum[0]": "clicks",
	"paths./conversions/{conversionId}/reports.get.parameters[3].enum[1]": "views",
	"paths./conversions/{conversionId}/reports.get.parameters[3].in": "query",
	"paths./conversions/{conversionId}/reports.get.parameters[3].name": "hittype",
	"paths./conversions/{conversionId}/reports.get.parameters[3].required": false,
	"paths./conversions/{conversionId}/reports.get.parameters[3].type": "string",
	"paths./conversions/{conversionId}/reports.get.parameters[4].description": "If using a \"custom\" timeFrame you can specify the starting day (YYYYMMDD)",
	"paths./conversions/{conversionId}/reports.get.parameters[4].in": "query",
	"paths./conversions/{conversionId}/reports.get.parameters[4].name": "fromDay",
	"paths./conversions/{conversionId}/reports.get.parameters[4].required": false,
	"paths./conversions/{conversionId}/reports.get.parameters[4].type": "string",
	"paths./conversions/{conversionId}/reports.get.parameters[5].description": "If using a \"custom\" timeFrame you can specify the ending day (YYYYMMDD)",
	"paths./conversions/{conversionId}/reports.get.parameters[5].in": "query",
	"paths./conversions/{conversionId}/reports.get.parameters[5].name": "toDay",
	"paths./conversions/{conversionId}/reports.get.parameters[5].required": false,
	"paths./conversions/{conversionId}/reports.get.parameters[5].type": "string",
	"paths./conversions/{conversionId}/reports.get.produces.length": 2,
	"paths./conversions/{conversionId}/reports.get.produces[0]": "application/json",
	"paths./conversions/{conversionId}/reports.get.produces[1]": "text/json",
	"paths./conversions/{conversionId}/reports.get.responses.200.description": "",
	"paths./conversions/{conversionId}/reports.get.responses.200.schema.$ref": "#/definitions/Api.Core.Dto.Tops.Top",
	"paths./conversions/{conversionId}/reports.get.responses.401.description": "Forbidden",
	"paths./conversions/{conversionId}/reports.get.responses.404.description": "Not found",
	"paths./conversions/{conversionId}/reports.get.responses.500.description": "Internal Server Error",
	"paths./conversions/{conversionId}/reports.get.summary": "Retrieve a top report connected to this conversion",
	"paths./conversions/{conversionId}/reports.get.tags.length": 1,
	"paths./conversions/{conversionId}/reports.get.tags[0]": "Conversions",
	"paths./datapoints.get.consumes.length": 0,
	"paths./datapoints.get.deprecated": false,
	"paths./datapoints.get.parameters.length": 11,
	"paths./datapoints.get.parameters[0].default": 0,
	"paths./datapoints.get.parameters[0].description": "Where to start when retrieving elements. Default is 0 if not specified.",
	"paths./datapoints.get.parameters[0].format": "int32",
	"paths./datapoints.get.parameters[0].in": "query",
	"paths./datapoints.get.parameters[0].name": "offset",
	"paths./datapoints.get.parameters[0].required": false,
	"paths./datapoints.get.parameters[0].type": "integer",
	"paths./datapoints.get.parameters[10].description": "Exclude datapoints created after this date (YYYYMMDD)",
	"paths./datapoints.get.parameters[10].in": "query",
	"paths./datapoints.get.parameters[10].name": "createdBefore",
	"paths./datapoints.get.parameters[10].required": false,
	"paths./datapoints.get.parameters[10].type": "string",
	"paths./datapoints.get.parameters[1].default": 20,
	"paths./datapoints.get.parameters[1].description": "Maximum elements to retrieve. Default to 20 if not specified.",
	"paths./datapoints.get.parameters[1].format": "int32",
	"paths./datapoints.get.parameters[1].in": "query",
	"paths./datapoints.get.parameters[1].name": "limit",
	"paths./datapoints.get.parameters[1].required": false,
	"paths./datapoints.get.parameters[1].type": "integer",
	"paths./datapoints.get.parameters[2].description": "Type of the datapoint (\"tp\"/\"tl\")",
	"paths./datapoints.get.parameters[2].enum.length": 2,
	"paths./datapoints.get.parameters[2].enum[0]": "tp",
	"paths./datapoints.get.parameters[2].enum[1]": "tl",
	"paths./datapoints.get.parameters[2].in": "query",
	"paths./datapoints.get.parameters[2].name": "type",
	"paths./datapoints.get.parameters[2].required": false,
	"paths./datapoints.get.parameters[2].type": "string",
	"paths./datapoints.get.parameters[3].description": "Status of the datapoint",
	"paths./datapoints.get.parameters[3].enum.length": 4,
	"paths./datapoints.get.parameters[3].enum[0]": "deleted",
	"paths./datapoints.get.parameters[3].enum[1]": "active",
	"paths./datapoints.get.parameters[3].enum[2]": "paused",
	"paths./datapoints.get.parameters[3].enum[3]": "spam",
	"paths./datapoints.get.parameters[3].in": "query",
	"paths./datapoints.get.parameters[3].name": "status",
	"paths./datapoints.get.parameters[3].required": false,
	"paths./datapoints.get.parameters[3].type": "string",
	"paths./datapoints.get.parameters[4].description": "A comma separated list of tags you want to filter with.",
	"paths./datapoints.get.parameters[4].in": "query",
	"paths./datapoints.get.parameters[4].name": "tags",
	"paths./datapoints.get.parameters[4].required": false,
	"paths./datapoints.get.parameters[4].type": "string",
	"paths./datapoints.get.parameters[5].description": "Filter fields by this pattern",
	"paths./datapoints.get.parameters[5].in": "query",
	"paths./datapoints.get.parameters[5].name": "textSearch",
	"paths./datapoints.get.parameters[5].required": false,
	"paths./datapoints.get.parameters[5].type": "string",
	"paths./datapoints.get.parameters[6].description": "Filter fields by favourite status",
	"paths./datapoints.get.parameters[6].in": "query",
	"paths./datapoints.get.parameters[6].name": "onlyFavorites",
	"paths./datapoints.get.parameters[6].required": false,
	"paths./datapoints.get.parameters[6].type": "boolean",
	"paths./datapoints.get.parameters[7].description": "Field to sort by",
	"paths./datapoints.get.parameters[7].in": "query",
	"paths./datapoints.get.parameters[7].name": "sortBy",
	"paths./datapoints.get.parameters[7].required": false,
	"paths./datapoints.get.parameters[7].type": "string",
	"paths./datapoints.get.parameters[8].description": "Direction of sort \"asc\" or \"desc\"",
	"paths./datapoints.get.parameters[8].enum.length": 2,
	"paths./datapoints.get.parameters[8].enum[0]": "asc",
	"paths./datapoints.get.parameters[8].enum[1]": "desc",
	"paths./datapoints.get.parameters[8].in": "query",
	"paths./datapoints.get.parameters[8].name": "sortDirection",
	"paths./datapoints.get.parameters[8].required": false,
	"paths./datapoints.get.parameters[8].type": "string",
	"paths./datapoints.get.parameters[9].description": "Exclude datapoints created before this date (YYYYMMDD)",
	"paths./datapoints.get.parameters[9].in": "query",
	"paths./datapoints.get.parameters[9].name": "createdAfter",
	"paths./datapoints.get.parameters[9].required": false,
	"paths./datapoints.get.parameters[9].type": "string",
	"paths./datapoints.get.produces.length": 2,
	"paths./datapoints.get.produces[0]": "application/json",
	"paths./datapoints.get.produces[1]": "text/json",
	"paths./datapoints.get.responses.200.description": "",
	"paths./datapoints.get.responses.200.schema.$ref": "#/definitions/Api.Core.Responses.EntitiesResponse[Api.Core.Responses.EntityUri[System.Int64]]",
	"paths./datapoints.get.responses.401.description": "Unauthorized",
	"paths./datapoints.get.responses.404.description": "Not found",
	"paths./datapoints.get.responses.500.description": "Internal Server Error",
	"paths./datapoints.get.summary": "List of all the datapoints associated to the user",
	"paths./datapoints.get.tags.length": 1,
	"paths./datapoints.get.tags[0]": "DataPoints",
	"paths./datapoints.post.consumes.length": 3,
	"paths./datapoints.post.consumes[0]": "application/json",
	"paths./datapoints.post.consumes[1]": "text/json",
	"paths./datapoints.post.consumes[2]": "application/x-www-form-urlencoded",
	"paths./datapoints.post.deprecated": false,
	"paths./datapoints.post.parameters.length": 1,
	"paths./datapoints.post.parameters[0].description": "The body of the datapoint",
	"paths./datapoints.post.parameters[0].in": "body",
	"paths./datapoints.post.parameters[0].name": "value",
	"paths./datapoints.post.parameters[0].required": true,
	"paths./datapoints.post.parameters[0].schema.$ref": "#/definitions/Api.Core.Dto.Datapoints.Datapoint",
	"paths./datapoints.post.produces.length": 4,
	"paths./datapoints.post.produces[0]": "application/json",
	"paths./datapoints.post.produces[1]": "text/json",
	"paths./datapoints.post.produces[2]": "application/xml",
	"paths./datapoints.post.produces[3]": "text/xml",
	"paths./datapoints.post.responses.200.description": "",
	"paths./datapoints.post.responses.200.schema.$ref": "#/definitions/Api.Core.Responses.EntityUri[System.Int64]",
	"paths./datapoints.post.responses.401.description": "Unauthorized",
	"paths./datapoints.post.responses.404.description": "Not found",
	"paths./datapoints.post.responses.500.description": "Internal Server Error",
	"paths./datapoints.post.summary": "Create a datapoint",
	"paths./datapoints.post.tags.length": 1,
	"paths./datapoints.post.tags[0]": "DataPoints",
	"paths./datapoints/aggregated.get.consumes.length": 0,
	"paths./datapoints/aggregated.get.deprecated": false,
	"paths./datapoints/aggregated.get.parameters.length": 8,
	"paths./datapoints/aggregated.get.parameters[0].description": "Timeframe of the request. See list at $timeframeList",
	"paths./datapoints/aggregated.get.parameters[0].enum.length": 15,
	"paths./datapoints/aggregated.get.parameters[0].enum[0]": "today",
	"paths./datapoints/aggregated.get.parameters[0].enum[10]": "last12months",
	"paths./datapoints/aggregated.get.parameters[0].enum[11]": "lastyear",
	"paths./datapoints/aggregated.get.parameters[0].enum[12]": "currentyear",
	"paths./datapoints/aggregated.get.parameters[0].enum[13]": "beginning",
	"paths./datapoints/aggregated.get.parameters[0].enum[14]": "custom",
	"paths./datapoints/aggregated.get.parameters[0].enum[1]": "yesterday",
	"paths./datapoints/aggregated.get.parameters[0].enum[2]": "last7",
	"paths./datapoints/aggregated.get.parameters[0].enum[3]": "last30",
	"paths./datapoints/aggregated.get.parameters[0].enum[4]": "lastmonth",
	"paths./datapoints/aggregated.get.parameters[0].enum[5]": "currentmonth",
	"paths./datapoints/aggregated.get.parameters[0].enum[6]": "previousmonth",
	"paths./datapoints/aggregated.get.parameters[0].enum[7]": "last90",
	"paths./datapoints/aggregated.get.parameters[0].enum[8]": "last120",
	"paths./datapoints/aggregated.get.parameters[0].enum[9]": "last180",
	"paths./datapoints/aggregated.get.parameters[0].in": "query",
	"paths./datapoints/aggregated.get.parameters[0].name": "timeFrame",
	"paths./datapoints/aggregated.get.parameters[0].required": true,
	"paths./datapoints/aggregated.get.parameters[0].type": "string",
	"paths./datapoints/aggregated.get.parameters[1].description": "Type of datapoint (\"tl\"/\"tp\")",
	"paths./datapoints/aggregated.get.parameters[1].enum.length": 2,
	"paths./datapoints/aggregated.get.parameters[1].enum[0]": "tp",
	"paths./datapoints/aggregated.get.parameters[1].enum[1]": "tl",
	"paths./datapoints/aggregated.get.parameters[1].in": "query",
	"paths./datapoints/aggregated.get.parameters[1].name": "type",
	"paths./datapoints/aggregated.get.parameters[1].required": false,
	"paths./datapoints/aggregated.get.parameters[1].type": "string",
	"paths./datapoints/aggregated.get.parameters[2].description": "If using a \"custom\" timeFrame you can specify the starting day (YYYYMMDD)",
	"paths./datapoints/aggregated.get.parameters[2].in": "query",
	"paths./datapoints/aggregated.get.parameters[2].name": "fromDay",
	"paths./datapoints/aggregated.get.parameters[2].required": false,
	"paths./datapoints/aggregated.get.parameters[2].type": "string",
	"paths./datapoints/aggregated.get.parameters[3].description": "If using a \"custom\" timeFrame you can specify the ending day (YYYYMMDD)",
	"paths./datapoints/aggregated.get.parameters[3].in": "query",
	"paths./datapoints/aggregated.get.parameters[3].name": "toDay",
	"paths./datapoints/aggregated.get.parameters[3].required": false,
	"paths./datapoints/aggregated.get.parameters[3].type": "string",
	"paths./datapoints/aggregated.get.parameters[4].description": "If using \"yesterday\" or \"today\" timeframe you can ask for the hourly detail",
	"paths./datapoints/aggregated.get.parameters[4].in": "query",
	"paths./datapoints/aggregated.get.parameters[4].name": "hourly",
	"paths./datapoints/aggregated.get.parameters[4].required": false,
	"paths./datapoints/aggregated.get.parameters[4].type": "boolean",
	"paths./datapoints/aggregated.get.parameters[5].description": "Status of datapoint (\"deleted\"/\"active\"/\"paused\"/\"spam\")",
	"paths./datapoints/aggregated.get.parameters[5].enum.length": 4,
	"paths./datapoints/aggregated.get.parameters[5].enum[0]": "deleted",
	"paths./datapoints/aggregated.get.parameters[5].enum[1]": "active",
	"paths./datapoints/aggregated.get.parameters[5].enum[2]": "paused",
	"paths./datapoints/aggregated.get.parameters[5].enum[3]": "spam",
	"paths./datapoints/aggregated.get.parameters[5].in": "query",
	"paths./datapoints/aggregated.get.parameters[5].name": "status",
	"paths./datapoints/aggregated.get.parameters[5].required": false,
	"paths./datapoints/aggregated.get.parameters[5].type": "string",
	"paths./datapoints/aggregated.get.parameters[6].description": "A comma separated list of tags you want to filter with.",
	"paths./datapoints/aggregated.get.parameters[6].in": "query",
	"paths./datapoints/aggregated.get.parameters[6].name": "tag",
	"paths./datapoints/aggregated.get.parameters[6].required": false,
	"paths./datapoints/aggregated.get.parameters[6].type": "string",
	"paths./datapoints/aggregated.get.parameters[7].description": "Is the datapoint is marked as favourite",
	"paths./datapoints/aggregated.get.parameters[7].in": "query",
	"paths./datapoints/aggregated.get.parameters[7].name": "favourite",
	"paths./datapoints/aggregated.get.parameters[7].required": false,
	"paths./datapoints/aggregated.get.parameters[7].type": "boolean",
	"paths./datapoints/aggregated.get.produces.length": 2,
	"paths./datapoints/aggregated.get.produces[0]": "application/json",
	"paths./datapoints/aggregated.get.produces[1]": "text/json",
	"paths./datapoints/aggregated.get.responses.200.description": "",
	"paths./datapoints/aggregated.get.responses.200.schema.$ref": "#/definitions/Api.Core.Dto.Aggregated.AggregatedResult",
	"paths./datapoints/aggregated.get.responses.401.description": "Unauthorized",
	"paths./datapoints/aggregated.get.responses.500.description": "Internal Server Error",
	"paths./datapoints/aggregated.get.summary": "Retrieve statistics about this customer for a timeframe by groups",
	"paths./datapoints/aggregated.get.tags.length": 1,
	"paths./datapoints/aggregated.get.tags[0]": "DataPoints",
	"paths./datapoints/aggregated/list.get.consumes.length": 0,
	"paths./datapoints/aggregated/list.get.deprecated": false,
	"paths./datapoints/aggregated/list.get.parameters.length": 8,
	"paths./datapoints/aggregated/list.get.parameters[0].description": "Type of datapoint (\"tl\"/\"tp\")",
	"paths./datapoints/aggregated/list.get.parameters[0].enum.length": 2,
	"paths./datapoints/aggregated/list.get.parameters[0].enum[0]": "tp",
	"paths./datapoints/aggregated/list.get.parameters[0].enum[1]": "tl",
	"paths./datapoints/aggregated/list.get.parameters[0].in": "query",
	"paths./datapoints/aggregated/list.get.parameters[0].name": "type",
	"paths./datapoints/aggregated/list.get.parameters[0].required": true,
	"paths./datapoints/aggregated/list.get.parameters[0].type": "string",
	"paths./datapoints/aggregated/list.get.parameters[1].description": "Timeframe of the request. See list at $timeframeList",
	"paths./datapoints/aggregated/list.get.parameters[1].enum.length": 15,
	"paths./datapoints/aggregated/list.get.parameters[1].enum[0]": "today",
	"paths./datapoints/aggregated/list.get.parameters[1].enum[10]": "last12months",
	"paths./datapoints/aggregated/list.get.parameters[1].enum[11]": "lastyear",
	"paths./datapoints/aggregated/list.get.parameters[1].enum[12]": "currentyear",
	"paths./datapoints/aggregated/list.get.parameters[1].enum[13]": "beginning",
	"paths./datapoints/aggregated/list.get.parameters[1].enum[14]": "custom",
	"paths./datapoints/aggregated/list.get.parameters[1].enum[1]": "yesterday",
	"paths./datapoints/aggregated/list.get.parameters[1].enum[2]": "last7",
	"paths./datapoints/aggregated/list.get.parameters[1].enum[3]": "last30",
	"paths./datapoints/aggregated/list.get.parameters[1].enum[4]": "lastmonth",
	"paths./datapoints/aggregated/list.get.parameters[1].enum[5]": "currentmonth",
	"paths./datapoints/aggregated/list.get.parameters[1].enum[6]": "previousmonth",
	"paths./datapoints/aggregated/list.get.parameters[1].enum[7]": "last90",
	"paths./datapoints/aggregated/list.get.parameters[1].enum[8]": "last120",
	"paths./datapoints/aggregated/list.get.parameters[1].enum[9]": "last180",
	"paths./datapoints/aggregated/list.get.parameters[1].in": "query",
	"paths./datapoints/aggregated/list.get.parameters[1].name": "timeFrame",
	"paths./datapoints/aggregated/list.get.parameters[1].required": true,
	"paths./datapoints/aggregated/list.get.parameters[1].type": "string",
	"paths./datapoints/aggregated/list.get.parameters[2].description": "If using a \"custom\" timeFrame you can specify the starting day (YYYYMMDD)",
	"paths./datapoints/aggregated/list.get.parameters[2].in": "query",
	"paths./datapoints/aggregated/list.get.parameters[2].name": "fromDay",
	"paths./datapoints/aggregated/list.get.parameters[2].required": false,
	"paths./datapoints/aggregated/list.get.parameters[2].type": "string",
	"paths./datapoints/aggregated/list.get.parameters[3].description": "If using a \"custom\" timeFrame you can specify the ending day (YYYYMMDD)",
	"paths./datapoints/aggregated/list.get.parameters[3].in": "query",
	"paths./datapoints/aggregated/list.get.parameters[3].name": "toDay",
	"paths./datapoints/aggregated/list.get.parameters[3].required": false,
	"paths./datapoints/aggregated/list.get.parameters[3].type": "string",
	"paths./datapoints/aggregated/list.get.parameters[4].description": "Status of datapoint (\"deleted\"/\"active\"/\"paused\"/\"spam\")",
	"paths./datapoints/aggregated/list.get.parameters[4].enum.length": 4,
	"paths./datapoints/aggregated/list.get.parameters[4].enum[0]": "deleted",
	"paths./datapoints/aggregated/list.get.parameters[4].enum[1]": "active",
	"paths./datapoints/aggregated/list.get.parameters[4].enum[2]": "paused",
	"paths./datapoints/aggregated/list.get.parameters[4].enum[3]": "spam",
	"paths./datapoints/aggregated/list.get.parameters[4].in": "query",
	"paths./datapoints/aggregated/list.get.parameters[4].name": "status",
	"paths./datapoints/aggregated/list.get.parameters[4].required": false,
	"paths./datapoints/aggregated/list.get.parameters[4].type": "string",
	"paths./datapoints/aggregated/list.get.parameters[5].description": "A comma separated list of tags you want to filter with.",
	"paths./datapoints/aggregated/list.get.parameters[5].in": "query",
	"paths./datapoints/aggregated/list.get.parameters[5].name": "tag",
	"paths./datapoints/aggregated/list.get.parameters[5].required": false,
	"paths./datapoints/aggregated/list.get.parameters[5].type": "string",
	"paths./datapoints/aggregated/list.get.parameters[6].description": "Is the datapoint is marked as favourite",
	"paths./datapoints/aggregated/list.get.parameters[6].in": "query",
	"paths./datapoints/aggregated/list.get.parameters[6].name": "favourite",
	"paths./datapoints/aggregated/list.get.parameters[6].required": false,
	"paths./datapoints/aggregated/list.get.parameters[6].type": "boolean",
	"paths./datapoints/aggregated/list.get.parameters[7].description": "The temporal entity you want to group by (\"week\"/\"month\"). If unspecified is \"day\".",
	"paths./datapoints/aggregated/list.get.parameters[7].enum.length": 2,
	"paths./datapoints/aggregated/list.get.parameters[7].enum[0]": "week",
	"paths./datapoints/aggregated/list.get.parameters[7].enum[1]": "month",
	"paths./datapoints/aggregated/list.get.parameters[7].in": "query",
	"paths./datapoints/aggregated/list.get.parameters[7].name": "groupBy",
	"paths./datapoints/aggregated/list.get.parameters[7].required": false,
	"paths./datapoints/aggregated/list.get.parameters[7].type": "string",
	"paths./datapoints/aggregated/list.get.produces.length": 2,
	"paths./datapoints/aggregated/list.get.produces[0]": "application/json",
	"paths./datapoints/aggregated/list.get.produces[1]": "text/json",
	"paths./datapoints/aggregated/list.get.responses.200.description": "",
	"paths./datapoints/aggregated/list.get.responses.200.schema.$ref": "#/definitions/Api.Core.Responses.EntitiesResponse[Api.Core.Dto.Aggregated.AggregatedResult]",
	"paths./datapoints/aggregated/list.get.responses.401.description": "Unauthorized",
	"paths./datapoints/aggregated/list.get.responses.500.description": "Internal Server Error",
	"paths./datapoints/aggregated/list.get.summary": "Retrieve statistics about all datapoints of this customer for a timeframe grouped by some temporal entity (day/week/month)",
	"paths./datapoints/aggregated/list.get.tags.length": 1,
	"paths./datapoints/aggregated/list.get.tags[0]": "DataPoints",
	"paths./datapoints/batch.delete.consumes.length": 3,
	"paths./datapoints/batch.delete.consumes[0]": "application/json",
	"paths./datapoints/batch.delete.consumes[1]": "text/json",
	"paths./datapoints/batch.delete.consumes[2]": "application/x-www-form-urlencoded",
	"paths./datapoints/batch.delete.deprecated": false,
	"paths./datapoints/batch.delete.parameters.length": 1,
	"paths./datapoints/batch.delete.parameters[0].description": "A json containing the datapoints to delete.",
	"paths./datapoints/batch.delete.parameters[0].in": "body",
	"paths./datapoints/batch.delete.parameters[0].name": "batch",
	"paths./datapoints/batch.delete.parameters[0].required": true,
	"paths./datapoints/batch.delete.parameters[0].schema.$ref": "#/definitions/Api.Core.Requests.DeleteBatch",
	"paths./datapoints/batch.delete.produces.length": 2,
	"paths./datapoints/batch.delete.produces[0]": "application/json",
	"paths./datapoints/batch.delete.produces[1]": "text/json",
	"paths./datapoints/batch.delete.responses.200.description": "",
	"paths./datapoints/batch.delete.responses.200.schema.$ref": "#/definitions/Api.Core.Responses.ModifyBatchItemResponce[Api.Core.Dto.Datapoints.Datapoint,System.Int64]",
	"paths./datapoints/batch.delete.responses.401.description": "Unauthorized",
	"paths./datapoints/batch.delete.responses.404.description": "Not found",
	"paths./datapoints/batch.delete.responses.500.description": "Internal Server Error",
	"paths./datapoints/batch.delete.summary": "Delete multiple datapoints",
	"paths./datapoints/batch.delete.tags.length": 1,
	"paths./datapoints/batch.delete.tags[0]": "DataPoints",
	"paths./datapoints/batch.post.consumes.length": 3,
	"paths./datapoints/batch.post.consumes[0]": "application/json",
	"paths./datapoints/batch.post.consumes[1]": "text/json",
	"paths./datapoints/batch.post.consumes[2]": "application/x-www-form-urlencoded",
	"paths./datapoints/batch.post.deprecated": false,
	"paths./datapoints/batch.post.parameters.length": 1,
	"paths./datapoints/batch.post.parameters[0].description": "A json containing the datapoints to update.",
	"paths./datapoints/batch.post.parameters[0].in": "body",
	"paths./datapoints/batch.post.parameters[0].name": "batch",
	"paths./datapoints/batch.post.parameters[0].required": true,
	"paths./datapoints/batch.post.parameters[0].schema.$ref": "#/definitions/Api.Core.Requests.DatapointsBatch",
	"paths./datapoints/batch.post.produces.length": 2,
	"paths./datapoints/batch.post.produces[0]": "application/json",
	"paths./datapoints/batch.post.produces[1]": "text/json",
	"paths./datapoints/batch.post.responses.200.description": "",
	"paths./datapoints/batch.post.responses.200.schema.$ref": "#/definitions/Api.Core.Responses.ModifyBatchItemResponce[Api.Core.Dto.Datapoints.Datapoint,System.Int64]",
	"paths./datapoints/batch.post.responses.401.description": "Unauthorized",
	"paths./datapoints/batch.post.responses.404.description": "Not found",
	"paths./datapoints/batch.post.responses.500.description": "Internal Server Error",
	"paths./datapoints/batch.post.summary": "Update multiple datapoints",
	"paths./datapoints/batch.post.tags.length": 1,
	"paths./datapoints/batch.post.tags[0]": "DataPoints",
	"paths./datapoints/batch.put.consumes.length": 3,
	"paths./datapoints/batch.put.consumes[0]": "application/json",
	"paths./datapoints/batch.put.consumes[1]": "text/json",
	"paths./datapoints/batch.put.consumes[2]": "application/x-www-form-urlencoded",
	"paths./datapoints/batch.put.deprecated": false,
	"paths./datapoints/batch.put.parameters.length": 1,
	"paths./datapoints/batch.put.parameters[0].description": "A json containing the datapoints to create.",
	"paths./datapoints/batch.put.parameters[0].in": "body",
	"paths./datapoints/batch.put.parameters[0].name": "batch",
	"paths./datapoints/batch.put.parameters[0].required": true,
	"paths./datapoints/batch.put.parameters[0].schema.$ref": "#/definitions/Api.Core.Requests.DatapointsBatch",
	"paths./datapoints/batch.put.produces.length": 2,
	"paths./datapoints/batch.put.produces[0]": "application/json",
	"paths./datapoints/batch.put.produces[1]": "text/json",
	"paths./datapoints/batch.put.responses.200.description": "",
	"paths./datapoints/batch.put.responses.200.schema.$ref": "#/definitions/Api.Core.Responses.ModifyBatchItemResponce[Api.Core.Dto.Datapoints.Datapoint,System.Int64]",
	"paths./datapoints/batch.put.responses.401.description": "Unauthorized",
	"paths./datapoints/batch.put.responses.404.description": "Not found",
	"paths./datapoints/batch.put.responses.500.description": "Internal Server Error",
	"paths./datapoints/batch.put.summary": "Create multiple datapoints",
	"paths./datapoints/batch.put.tags.length": 1,
	"paths./datapoints/batch.put.tags[0]": "DataPoints",
	"paths./datapoints/count.get.consumes.length": 0,
	"paths./datapoints/count.get.deprecated": false,
	"paths./datapoints/count.get.parameters.length": 7,
	"paths./datapoints/count.get.parameters[0].description": "Type of the datapoint (\"tp\"/\"tl\")",
	"paths./datapoints/count.get.parameters[0].enum.length": 2,
	"paths./datapoints/count.get.parameters[0].enum[0]": "tp",
	"paths./datapoints/count.get.parameters[0].enum[1]": "tl",
	"paths./datapoints/count.get.parameters[0].in": "query",
	"paths./datapoints/count.get.parameters[0].name": "type",
	"paths./datapoints/count.get.parameters[0].required": false,
	"paths./datapoints/count.get.parameters[0].type": "string",
	"paths./datapoints/count.get.parameters[1].description": "Status of the datapoint",
	"paths./datapoints/count.get.parameters[1].enum.length": 4,
	"paths./datapoints/count.get.parameters[1].enum[0]": "deleted",
	"paths./datapoints/count.get.parameters[1].enum[1]": "active",
	"paths./datapoints/count.get.parameters[1].enum[2]": "paused",
	"paths./datapoints/count.get.parameters[1].enum[3]": "spam",
	"paths./datapoints/count.get.parameters[1].in": "query",
	"paths./datapoints/count.get.parameters[1].name": "status",
	"paths./datapoints/count.get.parameters[1].required": false,
	"paths./datapoints/count.get.parameters[1].type": "string",
	"paths./datapoints/count.get.parameters[2].description": "A comma separated list of tags you want to filter with.",
	"paths./datapoints/count.get.parameters[2].in": "query",
	"paths./datapoints/count.get.parameters[2].name": "tags",
	"paths./datapoints/count.get.parameters[2].required": false,
	"paths./datapoints/count.get.parameters[2].type": "string",
	"paths./datapoints/count.get.parameters[3].description": "Filter fields by this pattern",
	"paths./datapoints/count.get.parameters[3].in": "query",
	"paths./datapoints/count.get.parameters[3].name": "textSearch",
	"paths./datapoints/count.get.parameters[3].required": false,
	"paths./datapoints/count.get.parameters[3].type": "string",
	"paths./datapoints/count.get.parameters[4].description": "Filter fields by favourite status",
	"paths./datapoints/count.get.parameters[4].in": "query",
	"paths./datapoints/count.get.parameters[4].name": "onlyFavorites",
	"paths./datapoints/count.get.parameters[4].required": false,
	"paths./datapoints/count.get.parameters[4].type": "boolean",
	"paths./datapoints/count.get.parameters[5].description": "Exclude datapoints created before this date (YYYYMMDD)",
	"paths./datapoints/count.get.parameters[5].in": "query",
	"paths./datapoints/count.get.parameters[5].name": "createdAfter",
	"paths./datapoints/count.get.parameters[5].required": false,
	"paths./datapoints/count.get.parameters[5].type": "string",
	"paths./datapoints/count.get.parameters[6].description": "Exclude datapoints created after this date (YYYYMMDD)",
	"paths./datapoints/count.get.parameters[6].in": "query",
	"paths./datapoints/count.get.parameters[6].name": "createdBefore",
	"paths./datapoints/count.get.parameters[6].required": false,
	"paths./datapoints/count.get.parameters[6].type": "string",
	"paths./datapoints/count.get.produces.length": 4,
	"paths./datapoints/count.get.produces[0]": "application/json",
	"paths./datapoints/count.get.produces[1]": "text/json",
	"paths./datapoints/count.get.produces[2]": "application/xml",
	"paths./datapoints/count.get.produces[3]": "text/xml",
	"paths./datapoints/count.get.responses.200.description": "",
	"paths./datapoints/count.get.responses.200.schema.$ref": "#/definitions/Api.Core.Responses.CountResponce",
	"paths./datapoints/count.get.responses.401.description": "Unauthorized",
	"paths./datapoints/count.get.responses.404.description": "Not found",
	"paths./datapoints/count.get.responses.500.description": "Internal Server Error",
	"paths./datapoints/count.get.summary": "Count the datapoints associated to the user",
	"paths./datapoints/count.get.tags.length": 1,
	"paths./datapoints/count.get.tags[0]": "DataPoints",
	"paths./datapoints/{id}.delete.consumes.length": 0,
	"paths./datapoints/{id}.delete.deprecated": false,
	"paths./datapoints/{id}.delete.parameters.length": 1,
	"paths./datapoints/{id}.delete.parameters[0].description": "The id of the datapoint",
	"paths./datapoints/{id}.delete.parameters[0].format": "int64",
	"paths./datapoints/{id}.delete.parameters[0].in": "path",
	"paths./datapoints/{id}.delete.parameters[0].name": "id",
	"paths./datapoints/{id}.delete.parameters[0].required": true,
	"paths./datapoints/{id}.delete.parameters[0].type": "integer",
	"paths./datapoints/{id}.delete.produces.length": 4,
	"paths./datapoints/{id}.delete.produces[0]": "application/json",
	"paths./datapoints/{id}.delete.produces[1]": "text/json",
	"paths./datapoints/{id}.delete.produces[2]": "application/xml",
	"paths./datapoints/{id}.delete.produces[3]": "text/xml",
	"paths./datapoints/{id}.delete.responses.200.description": "",
	"paths./datapoints/{id}.delete.responses.200.schema.$ref": "#/definitions/Api.Core.Responses.EntityUri[System.Int64]",
	"paths./datapoints/{id}.delete.responses.401.description": "Unauthorized",
	"paths./datapoints/{id}.delete.responses.404.description": "Not found",
	"paths./datapoints/{id}.delete.responses.500.description": "Internal Server Error",
	"paths./datapoints/{id}.delete.summary": "Delete a datapoint",
	"paths./datapoints/{id}.delete.tags.length": 1,
	"paths./datapoints/{id}.delete.tags[0]": "DataPoints",
	"paths./datapoints/{id}.get.consumes.length": 0,
	"paths./datapoints/{id}.get.deprecated": false,
	"paths./datapoints/{id}.get.parameters.length": 1,
	"paths./datapoints/{id}.get.parameters[0].description": "The id of the datapoint",
	"paths./datapoints/{id}.get.parameters[0].format": "int64",
	"paths./datapoints/{id}.get.parameters[0].in": "path",
	"paths./datapoints/{id}.get.parameters[0].name": "id",
	"paths./datapoints/{id}.get.parameters[0].required": true,
	"paths./datapoints/{id}.get.parameters[0].type": "integer",
	"paths./datapoints/{id}.get.produces.length": 2,
	"paths./datapoints/{id}.get.produces[0]": "application/json",
	"paths./datapoints/{id}.get.produces[1]": "text/json",
	"paths./datapoints/{id}.get.responses.200.description": "",
	"paths./datapoints/{id}.get.responses.200.schema.$ref": "#/definitions/Api.Core.Dto.Datapoints.Datapoint",
	"paths./datapoints/{id}.get.responses.401.description": "Unauthorized",
	"paths./datapoints/{id}.get.responses.404.description": "Not found",
	"paths./datapoints/{id}.get.responses.500.description": "Internal Server Error",
	"paths./datapoints/{id}.get.summary": "Get a datapoint",
	"paths./datapoints/{id}.get.tags.length": 1,
	"paths./datapoints/{id}.get.tags[0]": "DataPoints",
	"paths./datapoints/{id}.post.consumes.length": 3,
	"paths./datapoints/{id}.post.consumes[0]": "application/json",
	"paths./datapoints/{id}.post.consumes[1]": "text/json",
	"paths./datapoints/{id}.post.consumes[2]": "application/x-www-form-urlencoded",
	"paths./datapoints/{id}.post.deprecated": false,
	"paths./datapoints/{id}.post.parameters.length": 2,
	"paths./datapoints/{id}.post.parameters[0].description": "The id of the datapoint",
	"paths./datapoints/{id}.post.parameters[0].format": "int64",
	"paths./datapoints/{id}.post.parameters[0].in": "path",
	"paths./datapoints/{id}.post.parameters[0].name": "id",
	"paths./datapoints/{id}.post.parameters[0].required": true,
	"paths./datapoints/{id}.post.parameters[0].type": "integer",
	"paths./datapoints/{id}.post.parameters[1].description": "The body of the datapoint",
	"paths./datapoints/{id}.post.parameters[1].in": "body",
	"paths./datapoints/{id}.post.parameters[1].name": "value",
	"paths./datapoints/{id}.post.parameters[1].required": true,
	"paths./datapoints/{id}.post.parameters[1].schema.$ref": "#/definitions/Api.Core.Dto.Datapoints.Datapoint",
	"paths./datapoints/{id}.post.produces.length": 4,
	"paths./datapoints/{id}.post.produces[0]": "application/json",
	"paths./datapoints/{id}.post.produces[1]": "text/json",
	"paths./datapoints/{id}.post.produces[2]": "application/xml",
	"paths./datapoints/{id}.post.produces[3]": "text/xml",
	"paths./datapoints/{id}.post.responses.200.description": "",
	"paths./datapoints/{id}.post.responses.200.schema.$ref": "#/definitions/Api.Core.Responses.EntityUri[System.Int64]",
	"paths./datapoints/{id}.post.responses.401.description": "Unauthorized",
	"paths./datapoints/{id}.post.responses.404.description": "Not found",
	"paths./datapoints/{id}.post.responses.500.description": "Internal Server Error",
	"paths./datapoints/{id}.post.summary": "Update a datapoint",
	"paths./datapoints/{id}.post.tags.length": 1,
	"paths./datapoints/{id}.post.tags[0]": "DataPoints",
	"paths./datapoints/{id}/aggregated.get.consumes.length": 0,
	"paths./datapoints/{id}/aggregated.get.deprecated": false,
	"paths./datapoints/{id}/aggregated.get.parameters.length": 5,
	"paths./datapoints/{id}/aggregated.get.parameters[0].description": "Id of the datapoint",
	"paths./datapoints/{id}/aggregated.get.parameters[0].format": "int64",
	"paths./datapoints/{id}/aggregated.get.parameters[0].in": "path",
	"paths./datapoints/{id}/aggregated.get.parameters[0].name": "id",
	"paths./datapoints/{id}/aggregated.get.parameters[0].required": true,
	"paths./datapoints/{id}/aggregated.get.parameters[0].type": "integer",
	"paths./datapoints/{id}/aggregated.get.parameters[1].description": "Timeframe of the request. See list at $timeframeList",
	"paths./datapoints/{id}/aggregated.get.parameters[1].enum.length": 15,
	"paths./datapoints/{id}/aggregated.get.parameters[1].enum[0]": "today",
	"paths./datapoints/{id}/aggregated.get.parameters[1].enum[10]": "last12months",
	"paths./datapoints/{id}/aggregated.get.parameters[1].enum[11]": "lastyear",
	"paths./datapoints/{id}/aggregated.get.parameters[1].enum[12]": "currentyear",
	"paths./datapoints/{id}/aggregated.get.parameters[1].enum[13]": "beginning",
	"paths./datapoints/{id}/aggregated.get.parameters[1].enum[14]": "custom",
	"paths./datapoints/{id}/aggregated.get.parameters[1].enum[1]": "yesterday",
	"paths./datapoints/{id}/aggregated.get.parameters[1].enum[2]": "last7",
	"paths./datapoints/{id}/aggregated.get.parameters[1].enum[3]": "last30",
	"paths./datapoints/{id}/aggregated.get.parameters[1].enum[4]": "lastmonth",
	"paths./datapoints/{id}/aggregated.get.parameters[1].enum[5]": "currentmonth",
	"paths./datapoints/{id}/aggregated.get.parameters[1].enum[6]": "previousmonth",
	"paths./datapoints/{id}/aggregated.get.parameters[1].enum[7]": "last90",
	"paths./datapoints/{id}/aggregated.get.parameters[1].enum[8]": "last120",
	"paths./datapoints/{id}/aggregated.get.parameters[1].enum[9]": "last180",
	"paths./datapoints/{id}/aggregated.get.parameters[1].in": "query",
	"paths./datapoints/{id}/aggregated.get.parameters[1].name": "timeFrame",
	"paths./datapoints/{id}/aggregated.get.parameters[1].required": true,
	"paths./datapoints/{id}/aggregated.get.parameters[1].type": "string",
	"paths./datapoints/{id}/aggregated.get.parameters[2].description": "If using a \"custom\" timeFrame you can specify the starting day (YYYYMMDD)",
	"paths./datapoints/{id}/aggregated.get.parameters[2].in": "query",
	"paths./datapoints/{id}/aggregated.get.parameters[2].name": "fromDay",
	"paths./datapoints/{id}/aggregated.get.parameters[2].required": false,
	"paths./datapoints/{id}/aggregated.get.parameters[2].type": "string",
	"paths./datapoints/{id}/aggregated.get.parameters[3].description": "If using a \"custom\" timeFrame you can specify the ending day (YYYYMMDD)",
	"paths./datapoints/{id}/aggregated.get.parameters[3].in": "query",
	"paths./datapoints/{id}/aggregated.get.parameters[3].name": "toDay",
	"paths./datapoints/{id}/aggregated.get.parameters[3].required": false,
	"paths./datapoints/{id}/aggregated.get.parameters[3].type": "string",
	"paths./datapoints/{id}/aggregated.get.parameters[4].description": "If using \"yesterday\" or \"today\" timeframe you can ask for the hourly detail",
	"paths./datapoints/{id}/aggregated.get.parameters[4].in": "query",
	"paths./datapoints/{id}/aggregated.get.parameters[4].name": "hourly",
	"paths./datapoints/{id}/aggregated.get.parameters[4].required": false,
	"paths./datapoints/{id}/aggregated.get.parameters[4].type": "boolean",
	"paths./datapoints/{id}/aggregated.get.produces.length": 2,
	"paths./datapoints/{id}/aggregated.get.produces[0]": "application/json",
	"paths./datapoints/{id}/aggregated.get.produces[1]": "text/json",
	"paths./datapoints/{id}/aggregated.get.responses.200.description": "",
	"paths./datapoints/{id}/aggregated.get.responses.200.schema.$ref": "#/definitions/Api.Core.Dto.Aggregated.AggregatedResult",
	"paths./datapoints/{id}/aggregated.get.responses.401.description": "Unauthorized",
	"paths./datapoints/{id}/aggregated.get.responses.500.description": "Internal Server Error",
	"paths./datapoints/{id}/aggregated.get.summary": "Retrieve statistics about this datapoint for a timeframe",
	"paths./datapoints/{id}/aggregated.get.tags.length": 1,
	"paths./datapoints/{id}/aggregated.get.tags[0]": "DataPoints",
	"paths./datapoints/{id}/aggregated/list.get.consumes.length": 0,
	"paths./datapoints/{id}/aggregated/list.get.deprecated": false,
	"paths./datapoints/{id}/aggregated/list.get.parameters.length": 5,
	"paths./datapoints/{id}/aggregated/list.get.parameters[0].description": "Id of the datapoint",
	"paths./datapoints/{id}/aggregated/list.get.parameters[0].format": "int64",
	"paths./datapoints/{id}/aggregated/list.get.parameters[0].in": "path",
	"paths./datapoints/{id}/aggregated/list.get.parameters[0].name": "id",
	"paths./datapoints/{id}/aggregated/list.get.parameters[0].required": true,
	"paths./datapoints/{id}/aggregated/list.get.parameters[0].type": "integer",
	"paths./datapoints/{id}/aggregated/list.get.parameters[1].description": "Timeframe of the request. See list at $timeframeList",
	"paths./datapoints/{id}/aggregated/list.get.parameters[1].enum.length": 15,
	"paths./datapoints/{id}/aggregated/list.get.parameters[1].enum[0]": "today",
	"paths./datapoints/{id}/aggregated/list.get.parameters[1].enum[10]": "last12months",
	"paths./datapoints/{id}/aggregated/list.get.parameters[1].enum[11]": "lastyear",
	"paths./datapoints/{id}/aggregated/list.get.parameters[1].enum[12]": "currentyear",
	"paths./datapoints/{id}/aggregated/list.get.parameters[1].enum[13]": "beginning",
	"paths./datapoints/{id}/aggregated/list.get.parameters[1].enum[14]": "custom",
	"paths./datapoints/{id}/aggregated/list.get.parameters[1].enum[1]": "yesterday",
	"paths./datapoints/{id}/aggregated/list.get.parameters[1].enum[2]": "last7",
	"paths./datapoints/{id}/aggregated/list.get.parameters[1].enum[3]": "last30",
	"paths./datapoints/{id}/aggregated/list.get.parameters[1].enum[4]": "lastmonth",
	"paths./datapoints/{id}/aggregated/list.get.parameters[1].enum[5]": "currentmonth",
	"paths./datapoints/{id}/aggregated/list.get.parameters[1].enum[6]": "previousmonth",
	"paths./datapoints/{id}/aggregated/list.get.parameters[1].enum[7]": "last90",
	"paths./datapoints/{id}/aggregated/list.get.parameters[1].enum[8]": "last120",
	"paths./datapoints/{id}/aggregated/list.get.parameters[1].enum[9]": "last180",
	"paths./datapoints/{id}/aggregated/list.get.parameters[1].in": "query",
	"paths./datapoints/{id}/aggregated/list.get.parameters[1].name": "timeFrame",
	"paths./datapoints/{id}/aggregated/list.get.parameters[1].required": true,
	"paths./datapoints/{id}/aggregated/list.get.parameters[1].type": "string",
	"paths./datapoints/{id}/aggregated/list.get.parameters[2].description": "If using a \"custom\" timeFrame you can specify the starting day (YYYYMMDD)",
	"paths./datapoints/{id}/aggregated/list.get.parameters[2].in": "query",
	"paths./datapoints/{id}/aggregated/list.get.parameters[2].name": "fromDay",
	"paths./datapoints/{id}/aggregated/list.get.parameters[2].required": false,
	"paths./datapoints/{id}/aggregated/list.get.parameters[2].type": "string",
	"paths./datapoints/{id}/aggregated/list.get.parameters[3].description": "If using a \"custom\" timeFrame you can specify the ending day (YYYYMMDD)",
	"paths./datapoints/{id}/aggregated/list.get.parameters[3].in": "query",
	"paths./datapoints/{id}/aggregated/list.get.parameters[3].name": "toDay",
	"paths./datapoints/{id}/aggregated/list.get.parameters[3].required": false,
	"paths./datapoints/{id}/aggregated/list.get.parameters[3].type": "string",
	"paths./datapoints/{id}/aggregated/list.get.parameters[4].description": "The temporal entity you want to group by (\"week\"/\"month\"). If unspecified is \"day\".",
	"paths./datapoints/{id}/aggregated/list.get.parameters[4].enum.length": 2,
	"paths./datapoints/{id}/aggregated/list.get.parameters[4].enum[0]": "week",
	"paths./datapoints/{id}/aggregated/list.get.parameters[4].enum[1]": "month",
	"paths./datapoints/{id}/aggregated/list.get.parameters[4].in": "query",
	"paths./datapoints/{id}/aggregated/list.get.parameters[4].name": "groupBy",
	"paths./datapoints/{id}/aggregated/list.get.parameters[4].required": false,
	"paths./datapoints/{id}/aggregated/list.get.parameters[4].type": "string",
	"paths./datapoints/{id}/aggregated/list.get.produces.length": 2,
	"paths./datapoints/{id}/aggregated/list.get.produces[0]": "application/json",
	"paths./datapoints/{id}/aggregated/list.get.produces[1]": "text/json",
	"paths./datapoints/{id}/aggregated/list.get.responses.200.description": "",
	"paths./datapoints/{id}/aggregated/list.get.responses.200.schema.$ref": "#/definitions/Api.Core.Responses.EntitiesResponse[Api.Core.Dto.Aggregated.AggregatedResult]",
	"paths./datapoints/{id}/aggregated/list.get.responses.401.description": "Unauthorized",
	"paths./datapoints/{id}/aggregated/list.get.responses.500.description": "Internal Server Error",
	"paths./datapoints/{id}/aggregated/list.get.summary": "Retrieve statistics about this datapoint for a timeframe grouped by some temporal entity (day/week/month)",
	"paths./datapoints/{id}/aggregated/list.get.tags.length": 1,
	"paths./datapoints/{id}/aggregated/list.get.tags[0]": "DataPoints",
	"paths./datapoints/{id}/favourite.put.consumes.length": 0,
	"paths./datapoints/{id}/favourite.put.deprecated": false,
	"paths./datapoints/{id}/favourite.put.parameters.length": 1,
	"paths./datapoints/{id}/favourite.put.parameters[0].description": "Id of the datapoint",
	"paths./datapoints/{id}/favourite.put.parameters[0].format": "int64",
	"paths./datapoints/{id}/favourite.put.parameters[0].in": "path",
	"paths./datapoints/{id}/favourite.put.parameters[0].name": "id",
	"paths./datapoints/{id}/favourite.put.parameters[0].required": true,
	"paths./datapoints/{id}/favourite.put.parameters[0].type": "integer",
	"paths./datapoints/{id}/favourite.put.produces.length": 4,
	"paths./datapoints/{id}/favourite.put.produces[0]": "application/json",
	"paths./datapoints/{id}/favourite.put.produces[1]": "text/json",
	"paths./datapoints/{id}/favourite.put.produces[2]": "application/xml",
	"paths./datapoints/{id}/favourite.put.produces[3]": "text/xml",
	"paths./datapoints/{id}/favourite.put.responses.200.description": "",
	"paths./datapoints/{id}/favourite.put.responses.200.schema.$ref": "#/definitions/Api.Core.Responses.EntityUri[System.Int64]",
	"paths./datapoints/{id}/favourite.put.responses.401.description": "Unauthorized",
	"paths./datapoints/{id}/favourite.put.responses.403.description": "Forbidden",
	"paths./datapoints/{id}/favourite.put.responses.404.description": "Not found",
	"paths./datapoints/{id}/favourite.put.responses.500.description": "Internal Server Error",
	"paths./datapoints/{id}/favourite.put.summary": "Fast switch the \"favourite\" field of a datapoint",
	"paths./datapoints/{id}/favourite.put.tags.length": 1,
	"paths./datapoints/{id}/favourite.put.tags[0]": "DataPoints",
	"paths./datapoints/{id}/hits.get.consumes.length": 0,
	"paths./datapoints/{id}/hits.get.deprecated": false,
	"paths./datapoints/{id}/hits.get.parameters.length": 7,
	"paths./datapoints/{id}/hits.get.parameters[0].description": "Id of the datapoint",
	"paths./datapoints/{id}/hits.get.parameters[0].format": "int64",
	"paths./datapoints/{id}/hits.get.parameters[0].in": "path",
	"paths./datapoints/{id}/hits.get.parameters[0].name": "id",
	"paths./datapoints/{id}/hits.get.parameters[0].required": true,
	"paths./datapoints/{id}/hits.get.parameters[0].type": "integer",
	"paths./datapoints/{id}/hits.get.parameters[1].description": "Timeframe of the request. See list at $timeframeList",
	"paths./datapoints/{id}/hits.get.parameters[1].enum.length": 10,
	"paths./datapoints/{id}/hits.get.parameters[1].enum[0]": "yesterday",
	"paths./datapoints/{id}/hits.get.parameters[1].enum[1]": "last7",
	"paths./datapoints/{id}/hits.get.parameters[1].enum[2]": "last30",
	"paths./datapoints/{id}/hits.get.parameters[1].enum[3]": "lastmonth",
	"paths./datapoints/{id}/hits.get.parameters[1].enum[4]": "currentmonth",
	"paths./datapoints/{id}/hits.get.parameters[1].enum[5]": "previousmonth",
	"paths./datapoints/{id}/hits.get.parameters[1].enum[6]": "last90",
	"paths./datapoints/{id}/hits.get.parameters[1].enum[7]": "last120",
	"paths./datapoints/{id}/hits.get.parameters[1].enum[8]": "last180",
	"paths./datapoints/{id}/hits.get.parameters[1].enum[9]": "custom",
	"paths./datapoints/{id}/hits.get.parameters[1].in": "query",
	"paths./datapoints/{id}/hits.get.parameters[1].name": "timeframe",
	"paths./datapoints/{id}/hits.get.parameters[1].required": true,
	"paths./datapoints/{id}/hits.get.parameters[1].type": "string",
	"paths./datapoints/{id}/hits.get.parameters[2].description": "Limit results to this number",
	"paths./datapoints/{id}/hits.get.parameters[2].format": "int32",
	"paths./datapoints/{id}/hits.get.parameters[2].in": "query",
	"paths./datapoints/{id}/hits.get.parameters[2].name": "limit",
	"paths./datapoints/{id}/hits.get.parameters[2].required": false,
	"paths./datapoints/{id}/hits.get.parameters[2].type": "integer",
	"paths./datapoints/{id}/hits.get.parameters[3].description": "Offset where to start from (it's the lastKey field in the response object)",
	"paths./datapoints/{id}/hits.get.parameters[3].in": "query",
	"paths./datapoints/{id}/hits.get.parameters[3].name": "offset",
	"paths./datapoints/{id}/hits.get.parameters[3].required": false,
	"paths./datapoints/{id}/hits.get.parameters[3].type": "string",
	"paths./datapoints/{id}/hits.get.parameters[4].description": "If using a \"custom\" timeFrame you can specify the starting day (YYYYMMDD)",
	"paths./datapoints/{id}/hits.get.parameters[4].in": "query",
	"paths./datapoints/{id}/hits.get.parameters[4].name": "fromDay",
	"paths./datapoints/{id}/hits.get.parameters[4].required": false,
	"paths./datapoints/{id}/hits.get.parameters[4].type": "string",
	"paths./datapoints/{id}/hits.get.parameters[5].description": "If using a \"custom\" timeFrame you can specify the ending day (YYYYMMDD)",
	"paths./datapoints/{id}/hits.get.parameters[5].in": "query",
	"paths./datapoints/{id}/hits.get.parameters[5].name": "toDay",
	"paths./datapoints/{id}/hits.get.parameters[5].required": false,
	"paths./datapoints/{id}/hits.get.parameters[5].type": "string",
	"paths./datapoints/{id}/hits.get.parameters[6].description": "Filter event type (\"spiders\"/\"uniques\"/\"nonuniques\"/\"conversions\")",
	"paths./datapoints/{id}/hits.get.parameters[6].enum.length": 4,
	"paths./datapoints/{id}/hits.get.parameters[6].enum[0]": "spiders",
	"paths./datapoints/{id}/hits.get.parameters[6].enum[1]": "uniques",
	"paths./datapoints/{id}/hits.get.parameters[6].enum[2]": "nonuniques",
	"paths./datapoints/{id}/hits.get.parameters[6].enum[3]": "conversions",
	"paths./datapoints/{id}/hits.get.parameters[6].in": "query",
	"paths./datapoints/{id}/hits.get.parameters[6].name": "filter",
	"paths./datapoints/{id}/hits.get.parameters[6].required": false,
	"paths./datapoints/{id}/hits.get.parameters[6].type": "string",
	"paths./datapoints/{id}/hits.get.produces.length": 2,
	"paths./datapoints/{id}/hits.get.produces[0]": "application/json",
	"paths./datapoints/{id}/hits.get.produces[1]": "text/json",
	"paths./datapoints/{id}/hits.get.responses.200.description": "",
	"paths./datapoints/{id}/hits.get.responses.200.schema.$ref": "#/definitions/Api.Core.Dto.ClickStream.HitListPage",
	"paths./datapoints/{id}/hits.get.responses.401.description": "Unauthorized",
	"paths./datapoints/{id}/hits.get.responses.500.description": "Internal Server Error",
	"paths./datapoints/{id}/hits.get.summary": "Retrieve the list of events related to this datapoint.",
	"paths./datapoints/{id}/hits.get.tags.length": 1,
	"paths./datapoints/{id}/hits.get.tags[0]": "DataPoints",
	"paths./datapoints/{id}/notes.put.consumes.length": 5,
	"paths./datapoints/{id}/notes.put.consumes[0]": "application/json",
	"paths./datapoints/{id}/notes.put.consumes[1]": "text/json",
	"paths./datapoints/{id}/notes.put.consumes[2]": "application/xml",
	"paths./datapoints/{id}/notes.put.consumes[3]": "text/xml",
	"paths./datapoints/{id}/notes.put.consumes[4]": "application/x-www-form-urlencoded",
	"paths./datapoints/{id}/notes.put.deprecated": false,
	"paths./datapoints/{id}/notes.put.parameters.length": 2,
	"paths./datapoints/{id}/notes.put.parameters[0].description": "Id of the datapoint",
	"paths./datapoints/{id}/notes.put.parameters[0].format": "int64",
	"paths./datapoints/{id}/notes.put.parameters[0].in": "path",
	"paths./datapoints/{id}/notes.put.parameters[0].name": "id",
	"paths./datapoints/{id}/notes.put.parameters[0].required": true,
	"paths./datapoints/{id}/notes.put.parameters[0].type": "integer",
	"paths./datapoints/{id}/notes.put.parameters[1].description": "Patch requests",
	"paths./datapoints/{id}/notes.put.parameters[1].in": "body",
	"paths./datapoints/{id}/notes.put.parameters[1].name": "note",
	"paths./datapoints/{id}/notes.put.parameters[1].required": true,
	"paths./datapoints/{id}/notes.put.parameters[1].schema.$ref": "#/definitions/Api.Core.Requests.GenericTextPatch",
	"paths./datapoints/{id}/notes.put.produces.length": 4,
	"paths./datapoints/{id}/notes.put.produces[0]": "application/json",
	"paths./datapoints/{id}/notes.put.produces[1]": "text/json",
	"paths./datapoints/{id}/notes.put.produces[2]": "application/xml",
	"paths./datapoints/{id}/notes.put.produces[3]": "text/xml",
	"paths./datapoints/{id}/notes.put.responses.200.description": "",
	"paths./datapoints/{id}/notes.put.responses.200.schema.$ref": "#/definitions/Api.Core.Responses.EntityUri[System.Int64]",
	"paths./datapoints/{id}/notes.put.responses.401.description": "Unauthorized",
	"paths./datapoints/{id}/notes.put.responses.403.description": "Forbidden",
	"paths./datapoints/{id}/notes.put.responses.404.description": "Not found",
	"paths./datapoints/{id}/notes.put.responses.500.description": "Internal Server Error",
	"paths./datapoints/{id}/notes.put.summary": "Fast patch the \"notes\" field of a datapoint",
	"paths./datapoints/{id}/notes.put.tags.length": 1,
	"paths./datapoints/{id}/notes.put.tags[0]": "DataPoints",
	"paths./datapoints/{id}/reports.get.consumes.length": 0,
	"paths./datapoints/{id}/reports.get.deprecated": false,
	"paths./datapoints/{id}/reports.get.parameters.length": 5,
	"paths./datapoints/{id}/reports.get.parameters[0].description": "Id of the datapoint",
	"paths./datapoints/{id}/reports.get.parameters[0].format": "int64",
	"paths./datapoints/{id}/reports.get.parameters[0].in": "path",
	"paths./datapoints/{id}/reports.get.parameters[0].name": "id",
	"paths./datapoints/{id}/reports.get.parameters[0].required": true,
	"paths./datapoints/{id}/reports.get.parameters[0].type": "integer",
	"paths./datapoints/{id}/reports.get.parameters[1].description": "Type of the report.",
	"paths./datapoints/{id}/reports.get.parameters[1].enum.length": 14,
	"paths./datapoints/{id}/reports.get.parameters[1].enum[0]": "browsers",
	"paths./datapoints/{id}/reports.get.parameters[1].enum[10]": "referrers",
	"paths./datapoints/{id}/reports.get.parameters[1].enum[11]": "destinations",
	"paths./datapoints/{id}/reports.get.parameters[1].enum[12]": "languages",
	"paths./datapoints/{id}/reports.get.parameters[1].enum[13]": "params",
	"paths./datapoints/{id}/reports.get.parameters[1].enum[1]": "browsersfamilies",
	"paths./datapoints/{id}/reports.get.parameters[1].enum[2]": "platforms",
	"paths./datapoints/{id}/reports.get.parameters[1].enum[3]": "cities",
	"paths./datapoints/{id}/reports.get.parameters[1].enum[4]": "countries",
	"paths./datapoints/{id}/reports.get.parameters[1].enum[5]": "isps",
	"paths./datapoints/{id}/reports.get.parameters[1].enum[6]": "ips",
	"paths./datapoints/{id}/reports.get.parameters[1].enum[7]": "oss",
	"paths./datapoints/{id}/reports.get.parameters[1].enum[8]": "ossfamilies",
	"paths./datapoints/{id}/reports.get.parameters[1].enum[9]": "keywords",
	"paths./datapoints/{id}/reports.get.parameters[1].in": "query",
	"paths./datapoints/{id}/reports.get.parameters[1].name": "type",
	"paths./datapoints/{id}/reports.get.parameters[1].required": true,
	"paths./datapoints/{id}/reports.get.parameters[1].type": "string",
	"paths./datapoints/{id}/reports.get.parameters[2].description": "Timeframe of the request. See list at $timeframeList",
	"paths./datapoints/{id}/reports.get.parameters[2].enum.length": 11,
	"paths./datapoints/{id}/reports.get.parameters[2].enum[0]": "yesterday",
	"paths./datapoints/{id}/reports.get.parameters[2].enum[10]": "custom",
	"paths./datapoints/{id}/reports.get.parameters[2].enum[1]": "last7",
	"paths./datapoints/{id}/reports.get.parameters[2].enum[2]": "last30",
	"paths./datapoints/{id}/reports.get.parameters[2].enum[3]": "lastmonth",
	"paths./datapoints/{id}/reports.get.parameters[2].enum[4]": "currentmonth",
	"paths./datapoints/{id}/reports.get.parameters[2].enum[5]": "previousmonth",
	"paths./datapoints/{id}/reports.get.parameters[2].enum[6]": "last90",
	"paths./datapoints/{id}/reports.get.parameters[2].enum[7]": "last120",
	"paths./datapoints/{id}/reports.get.parameters[2].enum[8]": "last180",
	"paths./datapoints/{id}/reports.get.parameters[2].enum[9]": "beginning",
	"paths./datapoints/{id}/reports.get.parameters[2].in": "query",
	"paths./datapoints/{id}/reports.get.parameters[2].name": "timeframe",
	"paths./datapoints/{id}/reports.get.parameters[2].required": true,
	"paths./datapoints/{id}/reports.get.parameters[2].type": "string",
	"paths./datapoints/{id}/reports.get.parameters[3].description": "If using a \"custom\" timeFrame you can specify the starting day (YYYYMMDD)",
	"paths./datapoints/{id}/reports.get.parameters[3].in": "query",
	"paths./datapoints/{id}/reports.get.parameters[3].name": "fromDay",
	"paths./datapoints/{id}/reports.get.parameters[3].required": false,
	"paths./datapoints/{id}/reports.get.parameters[3].type": "string",
	"paths./datapoints/{id}/reports.get.parameters[4].description": "If using a \"custom\" timeFrame you can specify the ending day (YYYYMMDD)",
	"paths./datapoints/{id}/reports.get.parameters[4].in": "query",
	"paths./datapoints/{id}/reports.get.parameters[4].name": "toDay",
	"paths./datapoints/{id}/reports.get.parameters[4].required": false,
	"paths./datapoints/{id}/reports.get.parameters[4].type": "string",
	"paths./datapoints/{id}/reports.get.produces.length": 2,
	"paths./datapoints/{id}/reports.get.produces[0]": "application/json",
	"paths./datapoints/{id}/reports.get.produces[1]": "text/json",
	"paths./datapoints/{id}/reports.get.responses.200.description": "",
	"paths./datapoints/{id}/reports.get.responses.200.schema.$ref": "#/definitions/Api.Core.Dto.Tops.Top",
	"paths./datapoints/{id}/reports.get.responses.401.description": "Forbidden",
	"paths./datapoints/{id}/reports.get.responses.404.description": "Not found",
	"paths./datapoints/{id}/reports.get.responses.500.description": "Internal Server Error",
	"paths./datapoints/{id}/reports.get.summary": "Retrieve a top report connected to this datapoint",
	"paths./datapoints/{id}/reports.get.tags.length": 1,
	"paths./datapoints/{id}/reports.get.tags[0]": "DataPoints",
	"paths./domains.get.consumes.length": 0,
	"paths./domains.get.deprecated": false,
	"paths./domains.get.parameters.length": 4,
	"paths./domains.get.parameters[0].description": "Offset where to start from",
	"paths./domains.get.parameters[0].format": "int32",
	"paths./domains.get.parameters[0].in": "query",
	"paths./domains.get.parameters[0].name": "offset",
	"paths./domains.get.parameters[0].required": false,
	"paths./domains.get.parameters[0].type": "integer",
	"paths./domains.get.parameters[1].description": "Limit results to this number",
	"paths./domains.get.parameters[1].format": "int32",
	"paths./domains.get.parameters[1].in": "query",
	"paths./domains.get.parameters[1].name": "limit",
	"paths./domains.get.parameters[1].required": false,
	"paths./domains.get.parameters[1].type": "integer",
	"paths./domains.get.parameters[2].default": "system",
	"paths./domains.get.parameters[2].description": "Type of domain (\"system\"/\"go\"/\"personal\"/\"dedicated\"). If not specified default is \"system\"",
	"paths./domains.get.parameters[2].enum.length": 4,
	"paths./domains.get.parameters[2].enum[0]": "system",
	"paths./domains.get.parameters[2].enum[1]": "go",
	"paths./domains.get.parameters[2].enum[2]": "personal",
	"paths./domains.get.parameters[2].enum[3]": "dedicated",
	"paths./domains.get.parameters[2].in": "query",
	"paths./domains.get.parameters[2].name": "type",
	"paths./domains.get.parameters[2].required": false,
	"paths./domains.get.parameters[2].type": "string",
	"paths./domains.get.parameters[3].description": "Filter domains with this anmen",
	"paths./domains.get.parameters[3].in": "query",
	"paths./domains.get.parameters[3].name": "name",
	"paths./domains.get.parameters[3].required": false,
	"paths./domains.get.parameters[3].type": "string",
	"paths./domains.get.produces.length": 2,
	"paths./domains.get.produces[0]": "application/json",
	"paths./domains.get.produces[1]": "text/json",
	"paths./domains.get.responses.200.description": "",
	"paths./domains.get.responses.200.schema.$ref": "#/definitions/Api.Core.Responses.EntitiesResponse[Api.Core.Responses.EntityUri[System.Int64]]",
	"paths./domains.get.responses.401.description": "Unauthorized",
	"paths./domains.get.responses.500.description": "Internal Server Error",
	"paths./domains.get.summary": "Retrieve a list of domains",
	"paths./domains.get.tags.length": 1,
	"paths./domains.get.tags[0]": "Domains",
	"paths./domains.post.consumes.length": 5,
	"paths./domains.post.consumes[0]": "application/json",
	"paths./domains.post.consumes[1]": "text/json",
	"paths./domains.post.consumes[2]": "application/xml",
	"paths./domains.post.consumes[3]": "text/xml",
	"paths./domains.post.consumes[4]": "application/x-www-form-urlencoded",
	"paths./domains.post.deprecated": false,
	"paths./domains.post.parameters.length": 1,
	"paths./domains.post.parameters[0].description": "The domain to create",
	"paths./domains.post.parameters[0].in": "body",
	"paths./domains.post.parameters[0].name": "value",
	"paths./domains.post.parameters[0].required": true,
	"paths./domains.post.parameters[0].schema.$ref": "#/definitions/Api.Core.Dto.Domains.Domain",
	"paths./domains.post.produces.length": 4,
	"paths./domains.post.produces[0]": "application/json",
	"paths./domains.post.produces[1]": "text/json",
	"paths./domains.post.produces[2]": "application/xml",
	"paths./domains.post.produces[3]": "text/xml",
	"paths./domains.post.responses.200.description": "",
	"paths./domains.post.responses.200.schema.$ref": "#/definitions/Api.Core.Responses.EntityUri[System.Int64]",
	"paths./domains.post.responses.401.description": "Unauthorized",
	"paths./domains.post.responses.500.description": "Internal Server Error",
	"paths./domains.post.summary": "Create a domain",
	"paths./domains.post.tags.length": 1,
	"paths./domains.post.tags[0]": "Domains",
	"paths./domains/count.get.consumes.length": 0,
	"paths./domains/count.get.deprecated": false,
	"paths./domains/count.get.parameters.length": 2,
	"paths./domains/count.get.parameters[0].default": "system",
	"paths./domains/count.get.parameters[0].description": "Type of domain (\"system\"/\"go\"/\"personal\"/\"dedicated\"). If not specified default is \"system\"",
	"paths./domains/count.get.parameters[0].enum.length": 4,
	"paths./domains/count.get.parameters[0].enum[0]": "system",
	"paths./domains/count.get.parameters[0].enum[1]": "go",
	"paths./domains/count.get.parameters[0].enum[2]": "personal",
	"paths./domains/count.get.parameters[0].enum[3]": "dedicated",
	"paths./domains/count.get.parameters[0].in": "query",
	"paths./domains/count.get.parameters[0].name": "type",
	"paths./domains/count.get.parameters[0].required": false,
	"paths./domains/count.get.parameters[0].type": "string",
	"paths./domains/count.get.parameters[1].description": "Filter domains with this anmen",
	"paths./domains/count.get.parameters[1].in": "query",
	"paths./domains/count.get.parameters[1].name": "name",
	"paths./domains/count.get.parameters[1].required": false,
	"paths./domains/count.get.parameters[1].type": "string",
	"paths./domains/count.get.produces.length": 4,
	"paths./domains/count.get.produces[0]": "application/json",
	"paths./domains/count.get.produces[1]": "text/json",
	"paths./domains/count.get.produces[2]": "application/xml",
	"paths./domains/count.get.produces[3]": "text/xml",
	"paths./domains/count.get.responses.200.description": "",
	"paths./domains/count.get.responses.200.schema.$ref": "#/definitions/Api.Core.Responses.CountResponce",
	"paths./domains/count.get.responses.401.description": "Unauthorized",
	"paths./domains/count.get.responses.500.description": "Internal Server Error",
	"paths./domains/count.get.summary": "Retrieve count of domains",
	"paths./domains/count.get.tags.length": 1,
	"paths./domains/count.get.tags[0]": "Domains",
	"paths./domains/{id}.delete.consumes.length": 0,
	"paths./domains/{id}.delete.deprecated": false,
	"paths./domains/{id}.delete.parameters.length": 1,
	"paths./domains/{id}.delete.parameters[0].description": "Id of domain",
	"paths./domains/{id}.delete.parameters[0].format": "int64",
	"paths./domains/{id}.delete.parameters[0].in": "path",
	"paths./domains/{id}.delete.parameters[0].name": "id",
	"paths./domains/{id}.delete.parameters[0].required": true,
	"paths./domains/{id}.delete.parameters[0].type": "integer",
	"paths./domains/{id}.delete.produces.length": 4,
	"paths./domains/{id}.delete.produces[0]": "application/json",
	"paths./domains/{id}.delete.produces[1]": "text/json",
	"paths./domains/{id}.delete.produces[2]": "application/xml",
	"paths./domains/{id}.delete.produces[3]": "text/xml",
	"paths./domains/{id}.delete.responses.200.description": "",
	"paths./domains/{id}.delete.responses.200.schema.$ref": "#/definitions/Api.Core.Responses.EntityUri[System.Int64]",
	"paths./domains/{id}.delete.responses.401.description": "Unauthorized",
	"paths./domains/{id}.delete.responses.500.description": "Internal Server Error",
	"paths./domains/{id}.delete.summary": "Delete a domain",
	"paths./domains/{id}.delete.tags.length": 1,
	"paths./domains/{id}.delete.tags[0]": "Domains",
	"paths./domains/{id}.get.consumes.length": 0,
	"paths./domains/{id}.get.deprecated": false,
	"paths./domains/{id}.get.parameters.length": 1,
	"paths./domains/{id}.get.parameters[0].description": "Id of domain",
	"paths./domains/{id}.get.parameters[0].format": "int64",
	"paths./domains/{id}.get.parameters[0].in": "path",
	"paths./domains/{id}.get.parameters[0].name": "id",
	"paths./domains/{id}.get.parameters[0].required": true,
	"paths./domains/{id}.get.parameters[0].type": "integer",
	"paths./domains/{id}.get.produces.length": 4,
	"paths./domains/{id}.get.produces[0]": "application/json",
	"paths./domains/{id}.get.produces[1]": "text/json",
	"paths./domains/{id}.get.produces[2]": "application/xml",
	"paths./domains/{id}.get.produces[3]": "text/xml",
	"paths./domains/{id}.get.responses.200.description": "",
	"paths./domains/{id}.get.responses.200.schema.$ref": "#/definitions/Api.Core.Dto.Domains.Domain",
	"paths./domains/{id}.get.responses.401.description": "Unauthorized",
	"paths./domains/{id}.get.responses.500.description": "Internal Server Error",
	"paths./domains/{id}.get.summary": "Get a domain",
	"paths./domains/{id}.get.tags.length": 1,
	"paths./domains/{id}.get.tags[0]": "Domains",
	"paths./domains/{id}.post.consumes.length": 5,
	"paths./domains/{id}.post.consumes[0]": "application/json",
	"paths./domains/{id}.post.consumes[1]": "text/json",
	"paths./domains/{id}.post.consumes[2]": "application/xml",
	"paths./domains/{id}.post.consumes[3]": "text/xml",
	"paths./domains/{id}.post.consumes[4]": "application/x-www-form-urlencoded",
	"paths./domains/{id}.post.deprecated": false,
	"paths./domains/{id}.post.parameters.length": 2,
	"paths./domains/{id}.post.parameters[0].description": "Id of domain",
	"paths./domains/{id}.post.parameters[0].format": "int64",
	"paths./domains/{id}.post.parameters[0].in": "path",
	"paths./domains/{id}.post.parameters[0].name": "id",
	"paths./domains/{id}.post.parameters[0].required": true,
	"paths./domains/{id}.post.parameters[0].type": "integer",
	"paths./domains/{id}.post.parameters[1].description": "The domain to update",
	"paths./domains/{id}.post.parameters[1].in": "body",
	"paths./domains/{id}.post.parameters[1].name": "value",
	"paths./domains/{id}.post.parameters[1].required": true,
	"paths./domains/{id}.post.parameters[1].schema.$ref": "#/definitions/Api.Core.Dto.Domains.Domain",
	"paths./domains/{id}.post.produces.length": 4,
	"paths./domains/{id}.post.produces[0]": "application/json",
	"paths./domains/{id}.post.produces[1]": "text/json",
	"paths./domains/{id}.post.produces[2]": "application/xml",
	"paths./domains/{id}.post.produces[3]": "text/xml",
	"paths./domains/{id}.post.responses.200.description": "",
	"paths./domains/{id}.post.responses.200.schema.$ref": "#/definitions/Api.Core.Responses.EntityUri[System.Int64]",
	"paths./domains/{id}.post.responses.401.description": "Unauthorized",
	"paths./domains/{id}.post.responses.500.description": "Internal Server Error",
	"paths./domains/{id}.post.summary": "Update a domain",
	"paths./domains/{id}.post.tags.length": 1,
	"paths./domains/{id}.post.tags[0]": "Domains",
	"paths./groups.get.consumes.length": 0,
	"paths./groups.get.deprecated": false,
	"paths./groups.get.parameters.length": 8,
	"paths./groups.get.parameters[0].default": 0,
	"paths./groups.get.parameters[0].description": "Where to start when retrieving elements. Default is 0 if not specified.",
	"paths./groups.get.parameters[0].format": "int32",
	"paths./groups.get.parameters[0].in": "query",
	"paths./groups.get.parameters[0].name": "offset",
	"paths./groups.get.parameters[0].required": false,
	"paths./groups.get.parameters[0].type": "integer",
	"paths./groups.get.parameters[1].default": 20,
	"paths./groups.get.parameters[1].description": "Maximum elements to retrieve. Default to 20 if not specified.",
	"paths./groups.get.parameters[1].format": "int32",
	"paths./groups.get.parameters[1].in": "query",
	"paths./groups.get.parameters[1].name": "limit",
	"paths./groups.get.parameters[1].required": false,
	"paths./groups.get.parameters[1].type": "integer",
	"paths./groups.get.parameters[2].description": "Status of the group",
	"paths./groups.get.parameters[2].enum.length": 2,
	"paths./groups.get.parameters[2].enum[0]": "deleted",
	"paths./groups.get.parameters[2].enum[1]": "active",
	"paths./groups.get.parameters[2].in": "query",
	"paths./groups.get.parameters[2].name": "status",
	"paths./groups.get.parameters[2].required": false,
	"paths./groups.get.parameters[2].type": "string",
	"paths./groups.get.parameters[3].description": "A comma separated list of tags you want to filter with.",
	"paths./groups.get.parameters[3].in": "query",
	"paths./groups.get.parameters[3].name": "tags",
	"paths./groups.get.parameters[3].required": false,
	"paths./groups.get.parameters[3].type": "string",
	"paths./groups.get.parameters[4].description": "Filter fields by this pattern",
	"paths./groups.get.parameters[4].in": "query",
	"paths./groups.get.parameters[4].name": "textSearch",
	"paths./groups.get.parameters[4].required": false,
	"paths./groups.get.parameters[4].type": "string",
	"paths./groups.get.parameters[5].description": "Exclude groups created before this date (YYYYMMDD)",
	"paths./groups.get.parameters[5].in": "query",
	"paths./groups.get.parameters[5].name": "createdAfter",
	"paths./groups.get.parameters[5].required": false,
	"paths./groups.get.parameters[5].type": "string",
	"paths./groups.get.parameters[6].description": "Exclude groups created after this date (YYYYMMDD)",
	"paths./groups.get.parameters[6].in": "query",
	"paths./groups.get.parameters[6].name": "createdBefore",
	"paths./groups.get.parameters[6].required": false,
	"paths./groups.get.parameters[6].type": "string",
	"paths./groups.get.parameters[7].description": "Write permission",
	"paths./groups.get.parameters[7].in": "query",
	"paths./groups.get.parameters[7].name": "write",
	"paths./groups.get.parameters[7].required": false,
	"paths./groups.get.parameters[7].type": "boolean",
	"paths./groups.get.produces.length": 2,
	"paths./groups.get.produces[0]": "application/json",
	"paths./groups.get.produces[1]": "text/json",
	"paths./groups.get.responses.200.description": "",
	"paths./groups.get.responses.200.schema.$ref": "#/definitions/Api.Core.Responses.EntitiesResponse[Api.Core.Responses.EntityUri[System.Int64]]",
	"paths./groups.get.responses.401.description": "Unauthorized",
	"paths./groups.get.responses.404.description": "Not found",
	"paths./groups.get.responses.500.description": "Internal Server Error",
	"paths./groups.get.summary": "List of all the groups associated to the user.",
	"paths./groups.get.tags.length": 1,
	"paths./groups.get.tags[0]": "Groups",
	"paths./groups.post.consumes.length": 3,
	"paths./groups.post.consumes[0]": "application/json",
	"paths./groups.post.consumes[1]": "text/json",
	"paths./groups.post.consumes[2]": "application/x-www-form-urlencoded",
	"paths./groups.post.deprecated": false,
	"paths./groups.post.parameters.length": 1,
	"paths./groups.post.parameters[0].description": "The body of the group",
	"paths./groups.post.parameters[0].in": "body",
	"paths./groups.post.parameters[0].name": "value",
	"paths./groups.post.parameters[0].required": true,
	"paths./groups.post.parameters[0].schema.$ref": "#/definitions/Api.Core.Dto.Groups.Group",
	"paths./groups.post.produces.length": 4,
	"paths./groups.post.produces[0]": "application/json",
	"paths./groups.post.produces[1]": "text/json",
	"paths./groups.post.produces[2]": "application/xml",
	"paths./groups.post.produces[3]": "text/xml",
	"paths./groups.post.responses.200.description": "",
	"paths./groups.post.responses.200.schema.$ref": "#/definitions/Api.Core.Responses.EntityUri[System.Int64]",
	"paths./groups.post.responses.401.description": "Unauthorized",
	"paths./groups.post.responses.404.description": "Not found",
	"paths./groups.post.responses.500.description": "Internal Server Error",
	"paths./groups.post.summary": "Create a group",
	"paths./groups.post.tags.length": 1,
	"paths./groups.post.tags[0]": "Groups",
	"paths./groups/aggregated.get.consumes.length": 0,
	"paths./groups/aggregated.get.deprecated": false,
	"paths./groups/aggregated.get.parameters.length": 7,
	"paths./groups/aggregated.get.parameters[0].description": "Timeframe of the request. See list at $timeframeList",
	"paths./groups/aggregated.get.parameters[0].enum.length": 15,
	"paths./groups/aggregated.get.parameters[0].enum[0]": "today",
	"paths./groups/aggregated.get.parameters[0].enum[10]": "last12months",
	"paths./groups/aggregated.get.parameters[0].enum[11]": "lastyear",
	"paths./groups/aggregated.get.parameters[0].enum[12]": "currentyear",
	"paths./groups/aggregated.get.parameters[0].enum[13]": "beginning",
	"paths./groups/aggregated.get.parameters[0].enum[14]": "custom",
	"paths./groups/aggregated.get.parameters[0].enum[1]": "yesterday",
	"paths./groups/aggregated.get.parameters[0].enum[2]": "last7",
	"paths./groups/aggregated.get.parameters[0].enum[3]": "last30",
	"paths./groups/aggregated.get.parameters[0].enum[4]": "lastmonth",
	"paths./groups/aggregated.get.parameters[0].enum[5]": "currentmonth",
	"paths./groups/aggregated.get.parameters[0].enum[6]": "previousmonth",
	"paths./groups/aggregated.get.parameters[0].enum[7]": "last90",
	"paths./groups/aggregated.get.parameters[0].enum[8]": "last120",
	"paths./groups/aggregated.get.parameters[0].enum[9]": "last180",
	"paths./groups/aggregated.get.parameters[0].in": "query",
	"paths./groups/aggregated.get.parameters[0].name": "timeFrame",
	"paths./groups/aggregated.get.parameters[0].required": true,
	"paths./groups/aggregated.get.parameters[0].type": "string",
	"paths./groups/aggregated.get.parameters[1].description": "If using a \"custom\" timeFrame you can specify the starting day (YYYYMMDD)",
	"paths./groups/aggregated.get.parameters[1].in": "query",
	"paths./groups/aggregated.get.parameters[1].name": "fromDay",
	"paths./groups/aggregated.get.parameters[1].required": false,
	"paths./groups/aggregated.get.parameters[1].type": "string",
	"paths./groups/aggregated.get.parameters[2].description": "If using a \"custom\" timeFrame you can specify the ending day (YYYYMMDD)",
	"paths./groups/aggregated.get.parameters[2].in": "query",
	"paths./groups/aggregated.get.parameters[2].name": "toDay",
	"paths./groups/aggregated.get.parameters[2].required": false,
	"paths./groups/aggregated.get.parameters[2].type": "string",
	"paths./groups/aggregated.get.parameters[3].description": "If using \"yesterday\" or \"today\" timeframe you can ask for the hourly detail",
	"paths./groups/aggregated.get.parameters[3].in": "query",
	"paths./groups/aggregated.get.parameters[3].name": "hourly",
	"paths./groups/aggregated.get.parameters[3].required": false,
	"paths./groups/aggregated.get.parameters[3].type": "boolean",
	"paths./groups/aggregated.get.parameters[4].description": "Status of group (\"deleted\"/\"active\")",
	"paths./groups/aggregated.get.parameters[4].enum.length": 2,
	"paths./groups/aggregated.get.parameters[4].enum[0]": "deleted",
	"paths./groups/aggregated.get.parameters[4].enum[1]": "active",
	"paths./groups/aggregated.get.parameters[4].in": "query",
	"paths./groups/aggregated.get.parameters[4].name": "status",
	"paths./groups/aggregated.get.parameters[4].required": false,
	"paths./groups/aggregated.get.parameters[4].type": "string",
	"paths./groups/aggregated.get.parameters[5].description": "A comma separated list of tags you want to filter with.",
	"paths./groups/aggregated.get.parameters[5].in": "query",
	"paths./groups/aggregated.get.parameters[5].name": "tag",
	"paths./groups/aggregated.get.parameters[5].required": false,
	"paths./groups/aggregated.get.parameters[5].type": "string",
	"paths./groups/aggregated.get.parameters[6].description": "Is the group is marked as favourite",
	"paths./groups/aggregated.get.parameters[6].in": "query",
	"paths./groups/aggregated.get.parameters[6].name": "favourite",
	"paths./groups/aggregated.get.parameters[6].required": false,
	"paths./groups/aggregated.get.parameters[6].type": "boolean",
	"paths./groups/aggregated.get.produces.length": 2,
	"paths./groups/aggregated.get.produces[0]": "application/json",
	"paths./groups/aggregated.get.produces[1]": "text/json",
	"paths./groups/aggregated.get.responses.200.description": "",
	"paths./groups/aggregated.get.responses.200.schema.$ref": "#/definitions/Api.Core.Dto.Aggregated.AggregatedResult",
	"paths./groups/aggregated.get.responses.401.description": "Unauthorized",
	"paths./groups/aggregated.get.responses.500.description": "Internal Server Error",
	"paths./groups/aggregated.get.summary": "Retrieve statistics about this customer for a timeframe by groups",
	"paths./groups/aggregated.get.tags.length": 1,
	"paths./groups/aggregated.get.tags[0]": "Groups",
	"paths./groups/aggregated/list.get.consumes.length": 0,
	"paths./groups/aggregated/list.get.deprecated": false,
	"paths./groups/aggregated/list.get.parameters.length": 7,
	"paths./groups/aggregated/list.get.parameters[0].description": "Timeframe of the request. See list at $timeframeList",
	"paths./groups/aggregated/list.get.parameters[0].enum.length": 15,
	"paths./groups/aggregated/list.get.parameters[0].enum[0]": "today",
	"paths./groups/aggregated/list.get.parameters[0].enum[10]": "last12months",
	"paths./groups/aggregated/list.get.parameters[0].enum[11]": "lastyear",
	"paths./groups/aggregated/list.get.parameters[0].enum[12]": "currentyear",
	"paths./groups/aggregated/list.get.parameters[0].enum[13]": "beginning",
	"paths./groups/aggregated/list.get.parameters[0].enum[14]": "custom",
	"paths./groups/aggregated/list.get.parameters[0].enum[1]": "yesterday",
	"paths./groups/aggregated/list.get.parameters[0].enum[2]": "last7",
	"paths./groups/aggregated/list.get.parameters[0].enum[3]": "last30",
	"paths./groups/aggregated/list.get.parameters[0].enum[4]": "lastmonth",
	"paths./groups/aggregated/list.get.parameters[0].enum[5]": "currentmonth",
	"paths./groups/aggregated/list.get.parameters[0].enum[6]": "previousmonth",
	"paths./groups/aggregated/list.get.parameters[0].enum[7]": "last90",
	"paths./groups/aggregated/list.get.parameters[0].enum[8]": "last120",
	"paths./groups/aggregated/list.get.parameters[0].enum[9]": "last180",
	"paths./groups/aggregated/list.get.parameters[0].in": "query",
	"paths./groups/aggregated/list.get.parameters[0].name": "timeFrame",
	"paths./groups/aggregated/list.get.parameters[0].required": true,
	"paths./groups/aggregated/list.get.parameters[0].type": "string",
	"paths./groups/aggregated/list.get.parameters[1].description": "If using a \"custom\" timeFrame you can specify the starting day (YYYYMMDD)",
	"paths./groups/aggregated/list.get.parameters[1].in": "query",
	"paths./groups/aggregated/list.get.parameters[1].name": "fromDay",
	"paths./groups/aggregated/list.get.parameters[1].required": false,
	"paths./groups/aggregated/list.get.parameters[1].type": "string",
	"paths./groups/aggregated/list.get.parameters[2].description": "If using a \"custom\" timeFrame you can specify the ending day (YYYYMMDD)",
	"paths./groups/aggregated/list.get.parameters[2].in": "query",
	"paths./groups/aggregated/list.get.parameters[2].name": "toDay",
	"paths./groups/aggregated/list.get.parameters[2].required": false,
	"paths./groups/aggregated/list.get.parameters[2].type": "string",
	"paths./groups/aggregated/list.get.parameters[3].description": "Status of group (\"deleted\"/\"active\")",
	"paths./groups/aggregated/list.get.parameters[3].in": "query",
	"paths./groups/aggregated/list.get.parameters[3].name": "status",
	"paths./groups/aggregated/list.get.parameters[3].required": false,
	"paths./groups/aggregated/list.get.parameters[3].type": "string",
	"paths./groups/aggregated/list.get.parameters[4].description": "A comma separated list of tags you want to filter with.",
	"paths./groups/aggregated/list.get.parameters[4].in": "query",
	"paths./groups/aggregated/list.get.parameters[4].name": "tag",
	"paths./groups/aggregated/list.get.parameters[4].required": false,
	"paths./groups/aggregated/list.get.parameters[4].type": "string",
	"paths./groups/aggregated/list.get.parameters[5].description": "Is the group is marked as favourite",
	"paths./groups/aggregated/list.get.parameters[5].in": "query",
	"paths./groups/aggregated/list.get.parameters[5].name": "favourite",
	"paths./groups/aggregated/list.get.parameters[5].required": false,
	"paths./groups/aggregated/list.get.parameters[5].type": "boolean",
	"paths./groups/aggregated/list.get.parameters[6].description": "The temporal entity you want to group by (\"week\"/\"month\"). If unspecified is \"day\".",
	"paths./groups/aggregated/list.get.parameters[6].enum.length": 2,
	"paths./groups/aggregated/list.get.parameters[6].enum[0]": "deleted",
	"paths./groups/aggregated/list.get.parameters[6].enum[1]": "active",
	"paths./groups/aggregated/list.get.parameters[6].in": "query",
	"paths./groups/aggregated/list.get.parameters[6].name": "groupBy",
	"paths./groups/aggregated/list.get.parameters[6].required": false,
	"paths./groups/aggregated/list.get.parameters[6].type": "string",
	"paths./groups/aggregated/list.get.produces.length": 2,
	"paths./groups/aggregated/list.get.produces[0]": "application/json",
	"paths./groups/aggregated/list.get.produces[1]": "text/json",
	"paths./groups/aggregated/list.get.responses.200.description": "",
	"paths./groups/aggregated/list.get.responses.200.schema.$ref": "#/definitions/Api.Core.Responses.EntitiesResponse[Api.Core.Dto.Aggregated.AggregatedResult]",
	"paths./groups/aggregated/list.get.responses.401.description": "Unauthorized",
	"paths./groups/aggregated/list.get.responses.500.description": "Internal Server Error",
	"paths./groups/aggregated/list.get.summary": "Retrieve statistics about all groups of this customer for a timeframe grouped by some temporal entity (day/week/month)",
	"paths./groups/aggregated/list.get.tags.length": 1,
	"paths./groups/aggregated/list.get.tags[0]": "Groups",
	"paths./groups/count.get.consumes.length": 0,
	"paths./groups/count.get.deprecated": false,
	"paths./groups/count.get.parameters.length": 6,
	"paths./groups/count.get.parameters[0].description": "Status of the datapoint",
	"paths./groups/count.get.parameters[0].enum.length": 2,
	"paths./groups/count.get.parameters[0].enum[0]": "deleted",
	"paths./groups/count.get.parameters[0].enum[1]": "active",
	"paths./groups/count.get.parameters[0].in": "query",
	"paths./groups/count.get.parameters[0].name": "status",
	"paths./groups/count.get.parameters[0].required": false,
	"paths./groups/count.get.parameters[0].type": "string",
	"paths./groups/count.get.parameters[1].description": "A comma separated list of tags you want to filter with.",
	"paths./groups/count.get.parameters[1].in": "query",
	"paths./groups/count.get.parameters[1].name": "tags",
	"paths./groups/count.get.parameters[1].required": false,
	"paths./groups/count.get.parameters[1].type": "string",
	"paths./groups/count.get.parameters[2].description": "Filter fields by this pattern",
	"paths./groups/count.get.parameters[2].in": "query",
	"paths./groups/count.get.parameters[2].name": "textSearch",
	"paths./groups/count.get.parameters[2].required": false,
	"paths./groups/count.get.parameters[2].type": "string",
	"paths./groups/count.get.parameters[3].description": "Exclude groups created before this date (YYYYMMDD)",
	"paths./groups/count.get.parameters[3].in": "query",
	"paths./groups/count.get.parameters[3].name": "createdAfter",
	"paths./groups/count.get.parameters[3].required": false,
	"paths./groups/count.get.parameters[3].type": "string",
	"paths./groups/count.get.parameters[4].description": "Exclude groups created after this date (YYYYMMDD)",
	"paths./groups/count.get.parameters[4].in": "query",
	"paths./groups/count.get.parameters[4].name": "createdBefore",
	"paths./groups/count.get.parameters[4].required": false,
	"paths./groups/count.get.parameters[4].type": "string",
	"paths./groups/count.get.parameters[5].description": "Write permission",
	"paths./groups/count.get.parameters[5].in": "query",
	"paths./groups/count.get.parameters[5].name": "write",
	"paths./groups/count.get.parameters[5].required": false,
	"paths./groups/count.get.parameters[5].type": "boolean",
	"paths./groups/count.get.produces.length": 4,
	"paths./groups/count.get.produces[0]": "application/json",
	"paths./groups/count.get.produces[1]": "text/json",
	"paths./groups/count.get.produces[2]": "application/xml",
	"paths./groups/count.get.produces[3]": "text/xml",
	"paths./groups/count.get.responses.200.description": "",
	"paths./groups/count.get.responses.200.schema.$ref": "#/definitions/Api.Core.Responses.CountResponce",
	"paths./groups/count.get.responses.401.description": "Unauthorized",
	"paths./groups/count.get.responses.404.description": "Not found",
	"paths./groups/count.get.responses.500.description": "Internal Server Error",
	"paths./groups/count.get.summary": "Count the groups associated to the user.",
	"paths./groups/count.get.tags.length": 1,
	"paths./groups/count.get.tags[0]": "Groups",
	"paths./groups/{id}.delete.consumes.length": 0,
	"paths./groups/{id}.delete.deprecated": false,
	"paths./groups/{id}.delete.parameters.length": 1,
	"paths./groups/{id}.delete.parameters[0].description": "Id of the group",
	"paths./groups/{id}.delete.parameters[0].format": "int64",
	"paths./groups/{id}.delete.parameters[0].in": "path",
	"paths./groups/{id}.delete.parameters[0].name": "id",
	"paths./groups/{id}.delete.parameters[0].required": true,
	"paths./groups/{id}.delete.parameters[0].type": "integer",
	"paths./groups/{id}.delete.produces.length": 4,
	"paths./groups/{id}.delete.produces[0]": "application/json",
	"paths./groups/{id}.delete.produces[1]": "text/json",
	"paths./groups/{id}.delete.produces[2]": "application/xml",
	"paths./groups/{id}.delete.produces[3]": "text/xml",
	"paths./groups/{id}.delete.responses.200.description": "",
	"paths./groups/{id}.delete.responses.200.schema.$ref": "#/definitions/Api.Core.Responses.EntityUri[System.Int64]",
	"paths./groups/{id}.delete.responses.401.description": "Unauthorized",
	"paths./groups/{id}.delete.responses.404.description": "Not found",
	"paths./groups/{id}.delete.responses.500.description": "Internal Server Error",
	"paths./groups/{id}.delete.summary": "Delete group specified by id",
	"paths./groups/{id}.delete.tags.length": 1,
	"paths./groups/{id}.delete.tags[0]": "Groups",
	"paths./groups/{id}.get.consumes.length": 0,
	"paths./groups/{id}.get.deprecated": false,
	"paths./groups/{id}.get.parameters.length": 1,
	"paths./groups/{id}.get.parameters[0].description": "The id of the group",
	"paths./groups/{id}.get.parameters[0].format": "int64",
	"paths./groups/{id}.get.parameters[0].in": "path",
	"paths./groups/{id}.get.parameters[0].name": "id",
	"paths./groups/{id}.get.parameters[0].required": true,
	"paths./groups/{id}.get.parameters[0].type": "integer",
	"paths./groups/{id}.get.produces.length": 2,
	"paths./groups/{id}.get.produces[0]": "application/json",
	"paths./groups/{id}.get.produces[1]": "text/json",
	"paths./groups/{id}.get.responses.200.description": "",
	"paths./groups/{id}.get.responses.200.schema.$ref": "#/definitions/Api.Core.Dto.Groups.Group",
	"paths./groups/{id}.get.responses.401.description": "Unauthorized",
	"paths./groups/{id}.get.responses.404.description": "Not found",
	"paths./groups/{id}.get.responses.500.description": "Internal Server Error",
	"paths./groups/{id}.get.summary": "Get a group",
	"paths./groups/{id}.get.tags.length": 1,
	"paths./groups/{id}.get.tags[0]": "Groups",
	"paths./groups/{id}.post.consumes.length": 3,
	"paths./groups/{id}.post.consumes[0]": "application/json",
	"paths./groups/{id}.post.consumes[1]": "text/json",
	"paths./groups/{id}.post.consumes[2]": "application/x-www-form-urlencoded",
	"paths./groups/{id}.post.deprecated": false,
	"paths./groups/{id}.post.parameters.length": 2,
	"paths./groups/{id}.post.parameters[0].description": "The id of the group",
	"paths./groups/{id}.post.parameters[0].format": "int64",
	"paths./groups/{id}.post.parameters[0].in": "path",
	"paths./groups/{id}.post.parameters[0].name": "id",
	"paths./groups/{id}.post.parameters[0].required": true,
	"paths./groups/{id}.post.parameters[0].type": "integer",
	"paths./groups/{id}.post.parameters[1].description": "The body of the group",
	"paths./groups/{id}.post.parameters[1].in": "body",
	"paths./groups/{id}.post.parameters[1].name": "value",
	"paths./groups/{id}.post.parameters[1].required": true,
	"paths./groups/{id}.post.parameters[1].schema.$ref": "#/definitions/Api.Core.Dto.Groups.Group",
	"paths./groups/{id}.post.produces.length": 4,
	"paths./groups/{id}.post.produces[0]": "application/json",
	"paths./groups/{id}.post.produces[1]": "text/json",
	"paths./groups/{id}.post.produces[2]": "application/xml",
	"paths./groups/{id}.post.produces[3]": "text/xml",
	"paths./groups/{id}.post.responses.200.description": "",
	"paths./groups/{id}.post.responses.200.schema.$ref": "#/definitions/Api.Core.Responses.EntityUri[System.Int64]",
	"paths./groups/{id}.post.responses.401.description": "Unauthorized",
	"paths./groups/{id}.post.responses.404.description": "Not found",
	"paths./groups/{id}.post.responses.500.description": "Internal Server Error",
	"paths./groups/{id}.post.summary": "Update a group",
	"paths./groups/{id}.post.tags.length": 1,
	"paths./groups/{id}.post.tags[0]": "Groups",
	"paths./groups/{id}/aggregated.get.consumes.length": 0,
	"paths./groups/{id}/aggregated.get.deprecated": false,
	"paths./groups/{id}/aggregated.get.parameters.length": 5,
	"paths./groups/{id}/aggregated.get.parameters[0].description": "Id of the group",
	"paths./groups/{id}/aggregated.get.parameters[0].format": "int64",
	"paths./groups/{id}/aggregated.get.parameters[0].in": "path",
	"paths./groups/{id}/aggregated.get.parameters[0].name": "id",
	"paths./groups/{id}/aggregated.get.parameters[0].required": true,
	"paths./groups/{id}/aggregated.get.parameters[0].type": "integer",
	"paths./groups/{id}/aggregated.get.parameters[1].description": "Timeframe of the request. See list at $timeframeList",
	"paths./groups/{id}/aggregated.get.parameters[1].enum.length": 15,
	"paths./groups/{id}/aggregated.get.parameters[1].enum[0]": "today",
	"paths./groups/{id}/aggregated.get.parameters[1].enum[10]": "last12months",
	"paths./groups/{id}/aggregated.get.parameters[1].enum[11]": "lastyear",
	"paths./groups/{id}/aggregated.get.parameters[1].enum[12]": "currentyear",
	"paths./groups/{id}/aggregated.get.parameters[1].enum[13]": "beginning",
	"paths./groups/{id}/aggregated.get.parameters[1].enum[14]": "custom",
	"paths./groups/{id}/aggregated.get.parameters[1].enum[1]": "yesterday",
	"paths./groups/{id}/aggregated.get.parameters[1].enum[2]": "last7",
	"paths./groups/{id}/aggregated.get.parameters[1].enum[3]": "last30",
	"paths./groups/{id}/aggregated.get.parameters[1].enum[4]": "lastmonth",
	"paths./groups/{id}/aggregated.get.parameters[1].enum[5]": "currentmonth",
	"paths./groups/{id}/aggregated.get.parameters[1].enum[6]": "previousmonth",
	"paths./groups/{id}/aggregated.get.parameters[1].enum[7]": "last90",
	"paths./groups/{id}/aggregated.get.parameters[1].enum[8]": "last120",
	"paths./groups/{id}/aggregated.get.parameters[1].enum[9]": "last180",
	"paths./groups/{id}/aggregated.get.parameters[1].in": "query",
	"paths./groups/{id}/aggregated.get.parameters[1].name": "timeFrame",
	"paths./groups/{id}/aggregated.get.parameters[1].required": true,
	"paths./groups/{id}/aggregated.get.parameters[1].type": "string",
	"paths./groups/{id}/aggregated.get.parameters[2].description": "If using a \"custom\" timeFrame you can specify the starting day (YYYYMMDD)",
	"paths./groups/{id}/aggregated.get.parameters[2].in": "query",
	"paths./groups/{id}/aggregated.get.parameters[2].name": "fromDay",
	"paths./groups/{id}/aggregated.get.parameters[2].required": false,
	"paths./groups/{id}/aggregated.get.parameters[2].type": "string",
	"paths./groups/{id}/aggregated.get.parameters[3].description": "If using a \"custom\" timeFrame you can specify the ending day (YYYYMMDD)",
	"paths./groups/{id}/aggregated.get.parameters[3].in": "query",
	"paths./groups/{id}/aggregated.get.parameters[3].name": "toDay",
	"paths./groups/{id}/aggregated.get.parameters[3].required": false,
	"paths./groups/{id}/aggregated.get.parameters[3].type": "string",
	"paths./groups/{id}/aggregated.get.parameters[4].description": "If using \"yesterday\" or \"today\" timeframe you can ask for the hourly detail",
	"paths./groups/{id}/aggregated.get.parameters[4].in": "query",
	"paths./groups/{id}/aggregated.get.parameters[4].name": "hourly",
	"paths./groups/{id}/aggregated.get.parameters[4].required": false,
	"paths./groups/{id}/aggregated.get.parameters[4].type": "boolean",
	"paths./groups/{id}/aggregated.get.produces.length": 2,
	"paths./groups/{id}/aggregated.get.produces[0]": "application/json",
	"paths./groups/{id}/aggregated.get.produces[1]": "text/json",
	"paths./groups/{id}/aggregated.get.responses.200.description": "",
	"paths./groups/{id}/aggregated.get.responses.200.schema.$ref": "#/definitions/Api.Core.Dto.Aggregated.AggregatedResult",
	"paths./groups/{id}/aggregated.get.responses.401.description": "Unauthorized",
	"paths./groups/{id}/aggregated.get.responses.500.description": "Internal Server Error",
	"paths./groups/{id}/aggregated.get.summary": "Retrieve statistics about this group for a timeframe",
	"paths./groups/{id}/aggregated.get.tags.length": 1,
	"paths./groups/{id}/aggregated.get.tags[0]": "Groups",
	"paths./groups/{id}/aggregated/list.get.consumes.length": 0,
	"paths./groups/{id}/aggregated/list.get.deprecated": false,
	"paths./groups/{id}/aggregated/list.get.parameters.length": 5,
	"paths./groups/{id}/aggregated/list.get.parameters[0].description": "Id of the group",
	"paths./groups/{id}/aggregated/list.get.parameters[0].format": "int64",
	"paths./groups/{id}/aggregated/list.get.parameters[0].in": "path",
	"paths./groups/{id}/aggregated/list.get.parameters[0].name": "id",
	"paths./groups/{id}/aggregated/list.get.parameters[0].required": true,
	"paths./groups/{id}/aggregated/list.get.parameters[0].type": "integer",
	"paths./groups/{id}/aggregated/list.get.parameters[1].description": "Timeframe of the request. See list at $timeframeList",
	"paths./groups/{id}/aggregated/list.get.parameters[1].enum.length": 15,
	"paths./groups/{id}/aggregated/list.get.parameters[1].enum[0]": "today",
	"paths./groups/{id}/aggregated/list.get.parameters[1].enum[10]": "last12months",
	"paths./groups/{id}/aggregated/list.get.parameters[1].enum[11]": "lastyear",
	"paths./groups/{id}/aggregated/list.get.parameters[1].enum[12]": "currentyear",
	"paths./groups/{id}/aggregated/list.get.parameters[1].enum[13]": "beginning",
	"paths./groups/{id}/aggregated/list.get.parameters[1].enum[14]": "custom",
	"paths./groups/{id}/aggregated/list.get.parameters[1].enum[1]": "yesterday",
	"paths./groups/{id}/aggregated/list.get.parameters[1].enum[2]": "last7",
	"paths./groups/{id}/aggregated/list.get.parameters[1].enum[3]": "last30",
	"paths./groups/{id}/aggregated/list.get.parameters[1].enum[4]": "lastmonth",
	"paths./groups/{id}/aggregated/list.get.parameters[1].enum[5]": "currentmonth",
	"paths./groups/{id}/aggregated/list.get.parameters[1].enum[6]": "previousmonth",
	"paths./groups/{id}/aggregated/list.get.parameters[1].enum[7]": "last90",
	"paths./groups/{id}/aggregated/list.get.parameters[1].enum[8]": "last120",
	"paths./groups/{id}/aggregated/list.get.parameters[1].enum[9]": "last180",
	"paths./groups/{id}/aggregated/list.get.parameters[1].in": "query",
	"paths./groups/{id}/aggregated/list.get.parameters[1].name": "timeFrame",
	"paths./groups/{id}/aggregated/list.get.parameters[1].required": true,
	"paths./groups/{id}/aggregated/list.get.parameters[1].type": "string",
	"paths./groups/{id}/aggregated/list.get.parameters[2].description": "If using a \"custom\" timeFrame you can specify the starting day (YYYYMMDD)",
	"paths./groups/{id}/aggregated/list.get.parameters[2].in": "query",
	"paths./groups/{id}/aggregated/list.get.parameters[2].name": "fromDay",
	"paths./groups/{id}/aggregated/list.get.parameters[2].required": false,
	"paths./groups/{id}/aggregated/list.get.parameters[2].type": "string",
	"paths./groups/{id}/aggregated/list.get.parameters[3].description": "If using a \"custom\" timeFrame you can specify the ending day (YYYYMMDD)",
	"paths./groups/{id}/aggregated/list.get.parameters[3].in": "query",
	"paths./groups/{id}/aggregated/list.get.parameters[3].name": "toDay",
	"paths./groups/{id}/aggregated/list.get.parameters[3].required": false,
	"paths./groups/{id}/aggregated/list.get.parameters[3].type": "string",
	"paths./groups/{id}/aggregated/list.get.parameters[4].description": "The temporal entity you want to group by (\"week\"/\"month\"). If unspecified is \"day\".",
	"paths./groups/{id}/aggregated/list.get.parameters[4].enum.length": 2,
	"paths./groups/{id}/aggregated/list.get.parameters[4].enum[0]": "week",
	"paths./groups/{id}/aggregated/list.get.parameters[4].enum[1]": "month",
	"paths./groups/{id}/aggregated/list.get.parameters[4].in": "query",
	"paths./groups/{id}/aggregated/list.get.parameters[4].name": "groupBy",
	"paths./groups/{id}/aggregated/list.get.parameters[4].required": false,
	"paths./groups/{id}/aggregated/list.get.parameters[4].type": "string",
	"paths./groups/{id}/aggregated/list.get.produces.length": 2,
	"paths./groups/{id}/aggregated/list.get.produces[0]": "application/json",
	"paths./groups/{id}/aggregated/list.get.produces[1]": "text/json",
	"paths./groups/{id}/aggregated/list.get.responses.200.description": "",
	"paths./groups/{id}/aggregated/list.get.responses.200.schema.$ref": "#/definitions/Api.Core.Responses.EntitiesResponse[Api.Core.Dto.Aggregated.AggregatedResult]",
	"paths./groups/{id}/aggregated/list.get.responses.401.description": "Unauthorized",
	"paths./groups/{id}/aggregated/list.get.responses.500.description": "Internal Server Error",
	"paths./groups/{id}/aggregated/list.get.summary": "Retrieve statistics about this group for a timeframe grouped by some temporal entity (day/week/month)",
	"paths./groups/{id}/aggregated/list.get.tags.length": 1,
	"paths./groups/{id}/aggregated/list.get.tags[0]": "Groups",
	"paths./groups/{id}/aggregated/summary.get.consumes.length": 0,
	"paths./groups/{id}/aggregated/summary.get.deprecated": false,
	"paths./groups/{id}/aggregated/summary.get.parameters.length": 13,
	"paths./groups/{id}/aggregated/summary.get.parameters[0].description": "Filter by this group id",
	"paths./groups/{id}/aggregated/summary.get.parameters[0].format": "int64",
	"paths./groups/{id}/aggregated/summary.get.parameters[0].in": "path",
	"paths./groups/{id}/aggregated/summary.get.parameters[0].name": "id",
	"paths./groups/{id}/aggregated/summary.get.parameters[0].required": true,
	"paths./groups/{id}/aggregated/summary.get.parameters[0].type": "integer",
	"paths./groups/{id}/aggregated/summary.get.parameters[10].default": 0,
	"paths./groups/{id}/aggregated/summary.get.parameters[10].description": "Offset where to start from",
	"paths./groups/{id}/aggregated/summary.get.parameters[10].format": "int32",
	"paths./groups/{id}/aggregated/summary.get.parameters[10].in": "query",
	"paths./groups/{id}/aggregated/summary.get.parameters[10].name": "offset",
	"paths./groups/{id}/aggregated/summary.get.parameters[10].required": false,
	"paths./groups/{id}/aggregated/summary.get.parameters[10].type": "integer",
	"paths./groups/{id}/aggregated/summary.get.parameters[11].default": 20,
	"paths./groups/{id}/aggregated/summary.get.parameters[11].description": "Limit results to this number",
	"paths./groups/{id}/aggregated/summary.get.parameters[11].format": "int32",
	"paths./groups/{id}/aggregated/summary.get.parameters[11].in": "query",
	"paths./groups/{id}/aggregated/summary.get.parameters[11].name": "limit",
	"paths./groups/{id}/aggregated/summary.get.parameters[11].required": false,
	"paths./groups/{id}/aggregated/summary.get.parameters[11].type": "integer",
	"paths./groups/{id}/aggregated/summary.get.parameters[12].description": "Filter fields by this pattern",
	"paths./groups/{id}/aggregated/summary.get.parameters[12].in": "query",
	"paths./groups/{id}/aggregated/summary.get.parameters[12].name": "textSearch",
	"paths./groups/{id}/aggregated/summary.get.parameters[12].required": false,
	"paths./groups/{id}/aggregated/summary.get.parameters[12].type": "string",
	"paths./groups/{id}/aggregated/summary.get.parameters[1].description": "Timeframe of the request. See list at $timeframeList",
	"paths./groups/{id}/aggregated/summary.get.parameters[1].enum.length": 15,
	"paths./groups/{id}/aggregated/summary.get.parameters[1].enum[0]": "today",
	"paths./groups/{id}/aggregated/summary.get.parameters[1].enum[10]": "last12months",
	"paths./groups/{id}/aggregated/summary.get.parameters[1].enum[11]": "lastyear",
	"paths./groups/{id}/aggregated/summary.get.parameters[1].enum[12]": "currentyear",
	"paths./groups/{id}/aggregated/summary.get.parameters[1].enum[13]": "beginning",
	"paths./groups/{id}/aggregated/summary.get.parameters[1].enum[14]": "custom",
	"paths./groups/{id}/aggregated/summary.get.parameters[1].enum[1]": "yesterday",
	"paths./groups/{id}/aggregated/summary.get.parameters[1].enum[2]": "last7",
	"paths./groups/{id}/aggregated/summary.get.parameters[1].enum[3]": "last30",
	"paths./groups/{id}/aggregated/summary.get.parameters[1].enum[4]": "lastmonth",
	"paths./groups/{id}/aggregated/summary.get.parameters[1].enum[5]": "currentmonth",
	"paths./groups/{id}/aggregated/summary.get.parameters[1].enum[6]": "previousmonth",
	"paths./groups/{id}/aggregated/summary.get.parameters[1].enum[7]": "last90",
	"paths./groups/{id}/aggregated/summary.get.parameters[1].enum[8]": "last120",
	"paths./groups/{id}/aggregated/summary.get.parameters[1].enum[9]": "last180",
	"paths./groups/{id}/aggregated/summary.get.parameters[1].in": "query",
	"paths./groups/{id}/aggregated/summary.get.parameters[1].name": "timeFrame",
	"paths./groups/{id}/aggregated/summary.get.parameters[1].required": true,
	"paths./groups/{id}/aggregated/summary.get.parameters[1].type": "string",
	"paths./groups/{id}/aggregated/summary.get.parameters[2].description": "Type of datapoint (\"tl\"/\"tp\")",
	"paths./groups/{id}/aggregated/summary.get.parameters[2].enum.length": 2,
	"paths./groups/{id}/aggregated/summary.get.parameters[2].enum[0]": "tp",
	"paths./groups/{id}/aggregated/summary.get.parameters[2].enum[1]": "tl",
	"paths./groups/{id}/aggregated/summary.get.parameters[2].in": "query",
	"paths./groups/{id}/aggregated/summary.get.parameters[2].name": "type",
	"paths./groups/{id}/aggregated/summary.get.parameters[2].required": false,
	"paths./groups/{id}/aggregated/summary.get.parameters[2].type": "string",
	"paths./groups/{id}/aggregated/summary.get.parameters[3].description": "If using a \"custom\" timeFrame you can specify the starting day (YYYYMMDD)",
	"paths./groups/{id}/aggregated/summary.get.parameters[3].in": "query",
	"paths./groups/{id}/aggregated/summary.get.parameters[3].name": "fromDay",
	"paths./groups/{id}/aggregated/summary.get.parameters[3].required": false,
	"paths./groups/{id}/aggregated/summary.get.parameters[3].type": "string",
	"paths./groups/{id}/aggregated/summary.get.parameters[4].description": "If using a \"custom\" timeFrame you can specify the ending day (YYYYMMDD)",
	"paths./groups/{id}/aggregated/summary.get.parameters[4].in": "query",
	"paths./groups/{id}/aggregated/summary.get.parameters[4].name": "toDay",
	"paths./groups/{id}/aggregated/summary.get.parameters[4].required": false,
	"paths./groups/{id}/aggregated/summary.get.parameters[4].type": "string",
	"paths./groups/{id}/aggregated/summary.get.parameters[5].description": "Status of datapoint (\"deleted\"/\"active\"/\"paused\"/\"spam\")",
	"paths./groups/{id}/aggregated/summary.get.parameters[5].enum.length": 2,
	"paths./groups/{id}/aggregated/summary.get.parameters[5].enum[0]": "deleted",
	"paths./groups/{id}/aggregated/summary.get.parameters[5].enum[1]": "active",
	"paths./groups/{id}/aggregated/summary.get.parameters[5].in": "query",
	"paths./groups/{id}/aggregated/summary.get.parameters[5].name": "status",
	"paths./groups/{id}/aggregated/summary.get.parameters[5].required": false,
	"paths./groups/{id}/aggregated/summary.get.parameters[5].type": "string",
	"paths./groups/{id}/aggregated/summary.get.parameters[6].description": "A comma separated list of tags you want to filter with.",
	"paths./groups/{id}/aggregated/summary.get.parameters[6].in": "query",
	"paths./groups/{id}/aggregated/summary.get.parameters[6].name": "tag",
	"paths./groups/{id}/aggregated/summary.get.parameters[6].required": false,
	"paths./groups/{id}/aggregated/summary.get.parameters[6].type": "string",
	"paths./groups/{id}/aggregated/summary.get.parameters[7].description": "Is the datapoint marked as favourite",
	"paths./groups/{id}/aggregated/summary.get.parameters[7].in": "query",
	"paths./groups/{id}/aggregated/summary.get.parameters[7].name": "favourite",
	"paths./groups/{id}/aggregated/summary.get.parameters[7].required": false,
	"paths./groups/{id}/aggregated/summary.get.parameters[7].type": "boolean",
	"paths./groups/{id}/aggregated/summary.get.parameters[8].description": "Field to sort by",
	"paths./groups/{id}/aggregated/summary.get.parameters[8].in": "query",
	"paths./groups/{id}/aggregated/summary.get.parameters[8].name": "sortBy",
	"paths./groups/{id}/aggregated/summary.get.parameters[8].required": false,
	"paths./groups/{id}/aggregated/summary.get.parameters[8].type": "string",
	"paths./groups/{id}/aggregated/summary.get.parameters[9].description": "Direction of sort \"asc\" or \"desc\"",
	"paths./groups/{id}/aggregated/summary.get.parameters[9].enum.length": 2,
	"paths./groups/{id}/aggregated/summary.get.parameters[9].enum[0]": "asc",
	"paths./groups/{id}/aggregated/summary.get.parameters[9].enum[1]": "desc",
	"paths./groups/{id}/aggregated/summary.get.parameters[9].in": "query",
	"paths./groups/{id}/aggregated/summary.get.parameters[9].name": "sortDirection",
	"paths./groups/{id}/aggregated/summary.get.parameters[9].required": false,
	"paths./groups/{id}/aggregated/summary.get.parameters[9].type": "string",
	"paths./groups/{id}/aggregated/summary.get.produces.length": 2,
	"paths./groups/{id}/aggregated/summary.get.produces[0]": "application/json",
	"paths./groups/{id}/aggregated/summary.get.produces[1]": "text/json",
	"paths./groups/{id}/aggregated/summary.get.responses.200.description": "",
	"paths./groups/{id}/aggregated/summary.get.responses.200.schema.$ref": "#/definitions/Api.Core.Dto.Aggregated.AggregatedSummaryResult",
	"paths./groups/{id}/aggregated/summary.get.responses.401.description": "Unauthorized",
	"paths./groups/{id}/aggregated/summary.get.responses.500.description": "Internal Server Error",
	"paths./groups/{id}/aggregated/summary.get.summary": "Retrieve statistics about a subset of datapoints for a timeframe with datapoints data",
	"paths./groups/{id}/aggregated/summary.get.tags.length": 1,
	"paths./groups/{id}/aggregated/summary.get.tags[0]": "Groups",
	"paths./groups/{id}/datapoints.get.consumes.length": 0,
	"paths./groups/{id}/datapoints.get.deprecated": false,
	"paths./groups/{id}/datapoints.get.parameters.length": 12,
	"paths./groups/{id}/datapoints.get.parameters[0].description": "Id of the group",
	"paths./groups/{id}/datapoints.get.parameters[0].format": "int64",
	"paths./groups/{id}/datapoints.get.parameters[0].in": "path",
	"paths./groups/{id}/datapoints.get.parameters[0].name": "id",
	"paths./groups/{id}/datapoints.get.parameters[0].required": true,
	"paths./groups/{id}/datapoints.get.parameters[0].type": "integer",
	"paths./groups/{id}/datapoints.get.parameters[10].description": "Exclude datapoints created before this date (YYYYMMDD)",
	"paths./groups/{id}/datapoints.get.parameters[10].in": "query",
	"paths./groups/{id}/datapoints.get.parameters[10].name": "createdAfter",
	"paths./groups/{id}/datapoints.get.parameters[10].required": false,
	"paths./groups/{id}/datapoints.get.parameters[10].type": "string",
	"paths./groups/{id}/datapoints.get.parameters[11].description": "Exclude datapoints created after this date (YYYYMMDD)",
	"paths./groups/{id}/datapoints.get.parameters[11].in": "query",
	"paths./groups/{id}/datapoints.get.parameters[11].name": "createdBefore",
	"paths./groups/{id}/datapoints.get.parameters[11].required": false,
	"paths./groups/{id}/datapoints.get.parameters[11].type": "string",
	"paths./groups/{id}/datapoints.get.parameters[1].default": 0,
	"paths./groups/{id}/datapoints.get.parameters[1].description": "Where to start when retrieving elements. Default is 0 if not specified.",
	"paths./groups/{id}/datapoints.get.parameters[1].format": "int32",
	"paths./groups/{id}/datapoints.get.parameters[1].in": "query",
	"paths./groups/{id}/datapoints.get.parameters[1].name": "offset",
	"paths./groups/{id}/datapoints.get.parameters[1].required": false,
	"paths./groups/{id}/datapoints.get.parameters[1].type": "integer",
	"paths./groups/{id}/datapoints.get.parameters[2].default": 20,
	"paths./groups/{id}/datapoints.get.parameters[2].description": "Maximum elements to retrieve. Default to 20 if not specified.",
	"paths./groups/{id}/datapoints.get.parameters[2].format": "int32",
	"paths./groups/{id}/datapoints.get.parameters[2].in": "query",
	"paths./groups/{id}/datapoints.get.parameters[2].name": "limit",
	"paths./groups/{id}/datapoints.get.parameters[2].required": false,
	"paths./groups/{id}/datapoints.get.parameters[2].type": "integer",
	"paths./groups/{id}/datapoints.get.parameters[3].description": "Type of the datapoint (\"tp\"/\"tl\")",
	"paths./groups/{id}/datapoints.get.parameters[3].enum.length": 2,
	"paths./groups/{id}/datapoints.get.parameters[3].enum[0]": "tp",
	"paths./groups/{id}/datapoints.get.parameters[3].enum[1]": "tl",
	"paths./groups/{id}/datapoints.get.parameters[3].in": "query",
	"paths./groups/{id}/datapoints.get.parameters[3].name": "type",
	"paths./groups/{id}/datapoints.get.parameters[3].required": false,
	"paths./groups/{id}/datapoints.get.parameters[3].type": "string",
	"paths./groups/{id}/datapoints.get.parameters[4].description": "Status of the datapoint",
	"paths./groups/{id}/datapoints.get.parameters[4].enum.length": 4,
	"paths./groups/{id}/datapoints.get.parameters[4].enum[0]": "deleted",
	"paths./groups/{id}/datapoints.get.parameters[4].enum[1]": "active",
	"paths./groups/{id}/datapoints.get.parameters[4].enum[2]": "paused",
	"paths./groups/{id}/datapoints.get.parameters[4].enum[3]": "spam",
	"paths./groups/{id}/datapoints.get.parameters[4].in": "query",
	"paths./groups/{id}/datapoints.get.parameters[4].name": "status",
	"paths./groups/{id}/datapoints.get.parameters[4].required": false,
	"paths./groups/{id}/datapoints.get.parameters[4].type": "string",
	"paths./groups/{id}/datapoints.get.parameters[5].description": "A comma separated list of tags you want to filter with.",
	"paths./groups/{id}/datapoints.get.parameters[5].in": "query",
	"paths./groups/{id}/datapoints.get.parameters[5].name": "tags",
	"paths./groups/{id}/datapoints.get.parameters[5].required": false,
	"paths./groups/{id}/datapoints.get.parameters[5].type": "string",
	"paths./groups/{id}/datapoints.get.parameters[6].description": "Filter fields by this pattern",
	"paths./groups/{id}/datapoints.get.parameters[6].in": "query",
	"paths./groups/{id}/datapoints.get.parameters[6].name": "textSearch",
	"paths./groups/{id}/datapoints.get.parameters[6].required": false,
	"paths./groups/{id}/datapoints.get.parameters[6].type": "string",
	"paths./groups/{id}/datapoints.get.parameters[7].description": "Filter fields by favourite status",
	"paths./groups/{id}/datapoints.get.parameters[7].in": "query",
	"paths./groups/{id}/datapoints.get.parameters[7].name": "onlyFavorites",
	"paths./groups/{id}/datapoints.get.parameters[7].required": false,
	"paths./groups/{id}/datapoints.get.parameters[7].type": "boolean",
	"paths./groups/{id}/datapoints.get.parameters[8].description": "Field to sort by",
	"paths./groups/{id}/datapoints.get.parameters[8].in": "query",
	"paths./groups/{id}/datapoints.get.parameters[8].name": "sortBy",
	"paths./groups/{id}/datapoints.get.parameters[8].required": false,
	"paths./groups/{id}/datapoints.get.parameters[8].type": "string",
	"paths./groups/{id}/datapoints.get.parameters[9].description": "Direction of sort \"asc\" or \"desc\"",
	"paths./groups/{id}/datapoints.get.parameters[9].enum.length": 2,
	"paths./groups/{id}/datapoints.get.parameters[9].enum[0]": "asc",
	"paths./groups/{id}/datapoints.get.parameters[9].enum[1]": "desc",
	"paths./groups/{id}/datapoints.get.parameters[9].in": "query",
	"paths./groups/{id}/datapoints.get.parameters[9].name": "sortDirection",
	"paths./groups/{id}/datapoints.get.parameters[9].required": false,
	"paths./groups/{id}/datapoints.get.parameters[9].type": "string",
	"paths./groups/{id}/datapoints.get.produces.length": 2,
	"paths./groups/{id}/datapoints.get.produces[0]": "application/json",
	"paths./groups/{id}/datapoints.get.produces[1]": "text/json",
	"paths./groups/{id}/datapoints.get.responses.200.description": "",
	"paths./groups/{id}/datapoints.get.responses.200.schema.$ref": "#/definitions/Api.Core.Responses.EntitiesResponse[Api.Core.Responses.EntityUri[System.Int64]]",
	"paths./groups/{id}/datapoints.get.responses.401.description": "Unauthorized",
	"paths./groups/{id}/datapoints.get.responses.404.description": "Not found",
	"paths./groups/{id}/datapoints.get.responses.500.description": "Internal Server Error",
	"paths./groups/{id}/datapoints.get.summary": "List of all the datapoints associated to the user in this group.",
	"paths./groups/{id}/datapoints.get.tags.length": 1,
	"paths./groups/{id}/datapoints.get.tags[0]": "Groups",
	"paths./groups/{id}/datapoints.post.consumes.length": 3,
	"paths./groups/{id}/datapoints.post.consumes[0]": "application/json",
	"paths./groups/{id}/datapoints.post.consumes[1]": "text/json",
	"paths./groups/{id}/datapoints.post.consumes[2]": "application/x-www-form-urlencoded",
	"paths./groups/{id}/datapoints.post.deprecated": false,
	"paths./groups/{id}/datapoints.post.parameters.length": 2,
	"paths./groups/{id}/datapoints.post.parameters[0].description": "The id of the group",
	"paths./groups/{id}/datapoints.post.parameters[0].format": "int64",
	"paths./groups/{id}/datapoints.post.parameters[0].in": "path",
	"paths./groups/{id}/datapoints.post.parameters[0].name": "id",
	"paths./groups/{id}/datapoints.post.parameters[0].required": true,
	"paths./groups/{id}/datapoints.post.parameters[0].type": "integer",
	"paths./groups/{id}/datapoints.post.parameters[1].description": "The body of the datapoint",
	"paths./groups/{id}/datapoints.post.parameters[1].in": "body",
	"paths./groups/{id}/datapoints.post.parameters[1].name": "value",
	"paths./groups/{id}/datapoints.post.parameters[1].required": true,
	"paths./groups/{id}/datapoints.post.parameters[1].schema.$ref": "#/definitions/Api.Core.Dto.Datapoints.Datapoint",
	"paths./groups/{id}/datapoints.post.produces.length": 4,
	"paths./groups/{id}/datapoints.post.produces[0]": "application/json",
	"paths./groups/{id}/datapoints.post.produces[1]": "text/json",
	"paths./groups/{id}/datapoints.post.produces[2]": "application/xml",
	"paths./groups/{id}/datapoints.post.produces[3]": "text/xml",
	"paths./groups/{id}/datapoints.post.responses.200.description": "",
	"paths./groups/{id}/datapoints.post.responses.200.schema.$ref": "#/definitions/Api.Core.Responses.EntityUri[System.Int64]",
	"paths./groups/{id}/datapoints.post.responses.401.description": "Unauthorized",
	"paths./groups/{id}/datapoints.post.responses.404.description": "Not found",
	"paths./groups/{id}/datapoints.post.responses.500.description": "Internal Server Error",
	"paths./groups/{id}/datapoints.post.summary": "Create a datapoint in this group",
	"paths./groups/{id}/datapoints.post.tags.length": 1,
	"paths./groups/{id}/datapoints.post.tags[0]": "Groups",
	"paths./groups/{id}/datapoints/count.get.consumes.length": 0,
	"paths./groups/{id}/datapoints/count.get.deprecated": false,
	"paths./groups/{id}/datapoints/count.get.parameters.length": 8,
	"paths./groups/{id}/datapoints/count.get.parameters[0].description": "Id of the group",
	"paths./groups/{id}/datapoints/count.get.parameters[0].format": "int64",
	"paths./groups/{id}/datapoints/count.get.parameters[0].in": "path",
	"paths./groups/{id}/datapoints/count.get.parameters[0].name": "id",
	"paths./groups/{id}/datapoints/count.get.parameters[0].required": true,
	"paths./groups/{id}/datapoints/count.get.parameters[0].type": "integer",
	"paths./groups/{id}/datapoints/count.get.parameters[1].description": "Type of the datapoint (\"tp\"/\"tl\")",
	"paths./groups/{id}/datapoints/count.get.parameters[1].enum.length": 2,
	"paths./groups/{id}/datapoints/count.get.parameters[1].enum[0]": "tp",
	"paths./groups/{id}/datapoints/count.get.parameters[1].enum[1]": "tl",
	"paths./groups/{id}/datapoints/count.get.parameters[1].in": "query",
	"paths./groups/{id}/datapoints/count.get.parameters[1].name": "type",
	"paths./groups/{id}/datapoints/count.get.parameters[1].required": false,
	"paths./groups/{id}/datapoints/count.get.parameters[1].type": "string",
	"paths./groups/{id}/datapoints/count.get.parameters[2].description": "Status of the datapoint",
	"paths./groups/{id}/datapoints/count.get.parameters[2].enum.length": 4,
	"paths./groups/{id}/datapoints/count.get.parameters[2].enum[0]": "deleted",
	"paths./groups/{id}/datapoints/count.get.parameters[2].enum[1]": "active",
	"paths./groups/{id}/datapoints/count.get.parameters[2].enum[2]": "paused",
	"paths./groups/{id}/datapoints/count.get.parameters[2].enum[3]": "spam",
	"paths./groups/{id}/datapoints/count.get.parameters[2].in": "query",
	"paths./groups/{id}/datapoints/count.get.parameters[2].name": "status",
	"paths./groups/{id}/datapoints/count.get.parameters[2].required": false,
	"paths./groups/{id}/datapoints/count.get.parameters[2].type": "string",
	"paths./groups/{id}/datapoints/count.get.parameters[3].description": "A comma separated list of tags you want to filter with.",
	"paths./groups/{id}/datapoints/count.get.parameters[3].in": "query",
	"paths./groups/{id}/datapoints/count.get.parameters[3].name": "tags",
	"paths./groups/{id}/datapoints/count.get.parameters[3].required": false,
	"paths./groups/{id}/datapoints/count.get.parameters[3].type": "string",
	"paths./groups/{id}/datapoints/count.get.parameters[4].description": "Filter fields by this pattern",
	"paths./groups/{id}/datapoints/count.get.parameters[4].in": "query",
	"paths./groups/{id}/datapoints/count.get.parameters[4].name": "textSearch",
	"paths./groups/{id}/datapoints/count.get.parameters[4].required": false,
	"paths./groups/{id}/datapoints/count.get.parameters[4].type": "string",
	"paths./groups/{id}/datapoints/count.get.parameters[5].description": "Filter fields by favourite status",
	"paths./groups/{id}/datapoints/count.get.parameters[5].in": "query",
	"paths./groups/{id}/datapoints/count.get.parameters[5].name": "onlyFavorites",
	"paths./groups/{id}/datapoints/count.get.parameters[5].required": false,
	"paths./groups/{id}/datapoints/count.get.parameters[5].type": "boolean",
	"paths./groups/{id}/datapoints/count.get.parameters[6].description": "Exclude datapoints created before this date (YYYYMMDD)",
	"paths./groups/{id}/datapoints/count.get.parameters[6].in": "query",
	"paths./groups/{id}/datapoints/count.get.parameters[6].name": "createdAfter",
	"paths./groups/{id}/datapoints/count.get.parameters[6].required": false,
	"paths./groups/{id}/datapoints/count.get.parameters[6].type": "string",
	"paths./groups/{id}/datapoints/count.get.parameters[7].description": "Exclude datapoints created after this date (YYYYMMDD)",
	"paths./groups/{id}/datapoints/count.get.parameters[7].in": "query",
	"paths./groups/{id}/datapoints/count.get.parameters[7].name": "createdBefore",
	"paths./groups/{id}/datapoints/count.get.parameters[7].required": false,
	"paths./groups/{id}/datapoints/count.get.parameters[7].type": "string",
	"paths./groups/{id}/datapoints/count.get.produces.length": 4,
	"paths./groups/{id}/datapoints/count.get.produces[0]": "application/json",
	"paths./groups/{id}/datapoints/count.get.produces[1]": "text/json",
	"paths./groups/{id}/datapoints/count.get.produces[2]": "application/xml",
	"paths./groups/{id}/datapoints/count.get.produces[3]": "text/xml",
	"paths./groups/{id}/datapoints/count.get.responses.200.description": "",
	"paths./groups/{id}/datapoints/count.get.responses.200.schema.$ref": "#/definitions/Api.Core.Responses.CountResponce",
	"paths./groups/{id}/datapoints/count.get.responses.401.description": "Unauthorized",
	"paths./groups/{id}/datapoints/count.get.responses.404.description": "Not found",
	"paths./groups/{id}/datapoints/count.get.responses.500.description": "Internal Server Error",
	"paths./groups/{id}/datapoints/count.get.summary": "Count the datapoints associated to the user in this group.",
	"paths./groups/{id}/datapoints/count.get.tags.length": 1,
	"paths./groups/{id}/datapoints/count.get.tags[0]": "Groups",
	"paths./groups/{id}/favourite.put.consumes.length": 0,
	"paths./groups/{id}/favourite.put.deprecated": false,
	"paths./groups/{id}/favourite.put.parameters.length": 1,
	"paths./groups/{id}/favourite.put.parameters[0].description": "Id of the group",
	"paths./groups/{id}/favourite.put.parameters[0].format": "int64",
	"paths./groups/{id}/favourite.put.parameters[0].in": "path",
	"paths./groups/{id}/favourite.put.parameters[0].name": "id",
	"paths./groups/{id}/favourite.put.parameters[0].required": true,
	"paths./groups/{id}/favourite.put.parameters[0].type": "integer",
	"paths./groups/{id}/favourite.put.produces.length": 4,
	"paths./groups/{id}/favourite.put.produces[0]": "application/json",
	"paths./groups/{id}/favourite.put.produces[1]": "text/json",
	"paths./groups/{id}/favourite.put.produces[2]": "application/xml",
	"paths./groups/{id}/favourite.put.produces[3]": "text/xml",
	"paths./groups/{id}/favourite.put.responses.200.description": "",
	"paths./groups/{id}/favourite.put.responses.200.schema.$ref": "#/definitions/Api.Core.Responses.EntityUri[System.Int64]",
	"paths./groups/{id}/favourite.put.responses.401.description": "Unauthorized",
	"paths./groups/{id}/favourite.put.responses.403.description": "Forbidden",
	"paths./groups/{id}/favourite.put.responses.404.description": "Not found",
	"paths./groups/{id}/favourite.put.responses.500.description": "Internal Server Error",
	"paths./groups/{id}/favourite.put.summary": "Fast switch the \"favourite\" field of a group",
	"paths./groups/{id}/favourite.put.tags.length": 1,
	"paths./groups/{id}/favourite.put.tags[0]": "Groups",
	"paths./groups/{id}/hits.get.consumes.length": 0,
	"paths./groups/{id}/hits.get.deprecated": false,
	"paths./groups/{id}/hits.get.parameters.length": 7,
	"paths./groups/{id}/hits.get.parameters[0].description": "Id of the group",
	"paths./groups/{id}/hits.get.parameters[0].format": "int64",
	"paths./groups/{id}/hits.get.parameters[0].in": "path",
	"paths./groups/{id}/hits.get.parameters[0].name": "id",
	"paths./groups/{id}/hits.get.parameters[0].required": true,
	"paths./groups/{id}/hits.get.parameters[0].type": "integer",
	"paths./groups/{id}/hits.get.parameters[1].description": "Timeframe of the request. See list at $timeframeList",
	"paths./groups/{id}/hits.get.parameters[1].enum.length": 10,
	"paths./groups/{id}/hits.get.parameters[1].enum[0]": "yesterday",
	"paths./groups/{id}/hits.get.parameters[1].enum[1]": "last7",
	"paths./groups/{id}/hits.get.parameters[1].enum[2]": "last30",
	"paths./groups/{id}/hits.get.parameters[1].enum[3]": "lastmonth",
	"paths./groups/{id}/hits.get.parameters[1].enum[4]": "currentmonth",
	"paths./groups/{id}/hits.get.parameters[1].enum[5]": "previousmonth",
	"paths./groups/{id}/hits.get.parameters[1].enum[6]": "last90",
	"paths./groups/{id}/hits.get.parameters[1].enum[7]": "last120",
	"paths./groups/{id}/hits.get.parameters[1].enum[8]": "last180",
	"paths./groups/{id}/hits.get.parameters[1].enum[9]": "custom",
	"paths./groups/{id}/hits.get.parameters[1].in": "query",
	"paths./groups/{id}/hits.get.parameters[1].name": "timeframe",
	"paths./groups/{id}/hits.get.parameters[1].required": true,
	"paths./groups/{id}/hits.get.parameters[1].type": "string",
	"paths./groups/{id}/hits.get.parameters[2].description": "Limit results to this number",
	"paths./groups/{id}/hits.get.parameters[2].format": "int32",
	"paths./groups/{id}/hits.get.parameters[2].in": "query",
	"paths./groups/{id}/hits.get.parameters[2].name": "limit",
	"paths./groups/{id}/hits.get.parameters[2].required": false,
	"paths./groups/{id}/hits.get.parameters[2].type": "integer",
	"paths./groups/{id}/hits.get.parameters[3].description": "Offset where to start from (it's the lastKey field in the response object)",
	"paths./groups/{id}/hits.get.parameters[3].in": "query",
	"paths./groups/{id}/hits.get.parameters[3].name": "offset",
	"paths./groups/{id}/hits.get.parameters[3].required": false,
	"paths./groups/{id}/hits.get.parameters[3].type": "string",
	"paths./groups/{id}/hits.get.parameters[4].description": "If using a \"custom\" timeFrame you can specify the starting day (YYYYMMDD)",
	"paths./groups/{id}/hits.get.parameters[4].in": "query",
	"paths./groups/{id}/hits.get.parameters[4].name": "fromDay",
	"paths./groups/{id}/hits.get.parameters[4].required": false,
	"paths./groups/{id}/hits.get.parameters[4].type": "string",
	"paths./groups/{id}/hits.get.parameters[5].description": "If using a \"custom\" timeFrame you can specify the ending day (YYYYMMDD)",
	"paths./groups/{id}/hits.get.parameters[5].in": "query",
	"paths./groups/{id}/hits.get.parameters[5].name": "toDay",
	"paths./groups/{id}/hits.get.parameters[5].required": false,
	"paths./groups/{id}/hits.get.parameters[5].type": "string",
	"paths./groups/{id}/hits.get.parameters[6].description": "Filter event type (\"spiders\"/\"uniques\"/\"nonuniques\"/\"conversions\")",
	"paths./groups/{id}/hits.get.parameters[6].enum.length": 4,
	"paths./groups/{id}/hits.get.parameters[6].enum[0]": "spiders",
	"paths./groups/{id}/hits.get.parameters[6].enum[1]": "uniques",
	"paths./groups/{id}/hits.get.parameters[6].enum[2]": "nonuniques",
	"paths./groups/{id}/hits.get.parameters[6].enum[3]": "conversions",
	"paths./groups/{id}/hits.get.parameters[6].in": "query",
	"paths./groups/{id}/hits.get.parameters[6].name": "filter",
	"paths./groups/{id}/hits.get.parameters[6].required": false,
	"paths./groups/{id}/hits.get.parameters[6].type": "string",
	"paths./groups/{id}/hits.get.produces.length": 2,
	"paths./groups/{id}/hits.get.produces[0]": "application/json",
	"paths./groups/{id}/hits.get.produces[1]": "text/json",
	"paths./groups/{id}/hits.get.responses.200.description": "",
	"paths./groups/{id}/hits.get.responses.200.schema.$ref": "#/definitions/Api.Core.Dto.ClickStream.HitListPage",
	"paths./groups/{id}/hits.get.responses.401.description": "Unauthorized",
	"paths./groups/{id}/hits.get.responses.500.description": "Internal Server Error",
	"paths./groups/{id}/hits.get.summary": "Retrieve the list of events related to this group.",
	"paths./groups/{id}/hits.get.tags.length": 1,
	"paths./groups/{id}/hits.get.tags[0]": "Groups",
	"paths./groups/{id}/notes.put.consumes.length": 5,
	"paths./groups/{id}/notes.put.consumes[0]": "application/json",
	"paths./groups/{id}/notes.put.consumes[1]": "text/json",
	"paths./groups/{id}/notes.put.consumes[2]": "application/xml",
	"paths./groups/{id}/notes.put.consumes[3]": "text/xml",
	"paths./groups/{id}/notes.put.consumes[4]": "application/x-www-form-urlencoded",
	"paths./groups/{id}/notes.put.deprecated": false,
	"paths./groups/{id}/notes.put.parameters.length": 2,
	"paths./groups/{id}/notes.put.parameters[0].description": "Id of the group",
	"paths./groups/{id}/notes.put.parameters[0].format": "int64",
	"paths./groups/{id}/notes.put.parameters[0].in": "path",
	"paths./groups/{id}/notes.put.parameters[0].name": "id",
	"paths./groups/{id}/notes.put.parameters[0].required": true,
	"paths./groups/{id}/notes.put.parameters[0].type": "integer",
	"paths./groups/{id}/notes.put.parameters[1].description": "Patch requests",
	"paths./groups/{id}/notes.put.parameters[1].in": "body",
	"paths./groups/{id}/notes.put.parameters[1].name": "note",
	"paths./groups/{id}/notes.put.parameters[1].required": true,
	"paths./groups/{id}/notes.put.parameters[1].schema.$ref": "#/definitions/Api.Core.Requests.GenericTextPatch",
	"paths./groups/{id}/notes.put.produces.length": 4,
	"paths./groups/{id}/notes.put.produces[0]": "application/json",
	"paths./groups/{id}/notes.put.produces[1]": "text/json",
	"paths./groups/{id}/notes.put.produces[2]": "application/xml",
	"paths./groups/{id}/notes.put.produces[3]": "text/xml",
	"paths./groups/{id}/notes.put.responses.200.description": "",
	"paths./groups/{id}/notes.put.responses.200.schema.$ref": "#/definitions/Api.Core.Responses.EntityUri[System.Int64]",
	"paths./groups/{id}/notes.put.responses.401.description": "Unauthorized",
	"paths./groups/{id}/notes.put.responses.403.description": "Forbidden",
	"paths./groups/{id}/notes.put.responses.404.description": "Not found",
	"paths./groups/{id}/notes.put.responses.500.description": "Internal Server Error",
	"paths./groups/{id}/notes.put.summary": "Fast patch the \"notes\" field of a group",
	"paths./groups/{id}/notes.put.tags.length": 1,
	"paths./groups/{id}/notes.put.tags[0]": "Groups",
	"paths./groups/{id}/reports.get.consumes.length": 0,
	"paths./groups/{id}/reports.get.deprecated": false,
	"paths./groups/{id}/reports.get.parameters.length": 6,
	"paths./groups/{id}/reports.get.parameters[0].description": "Id of the group",
	"paths./groups/{id}/reports.get.parameters[0].format": "int64",
	"paths./groups/{id}/reports.get.parameters[0].in": "path",
	"paths./groups/{id}/reports.get.parameters[0].name": "id",
	"paths./groups/{id}/reports.get.parameters[0].required": true,
	"paths./groups/{id}/reports.get.parameters[0].type": "integer",
	"paths./groups/{id}/reports.get.parameters[1].description": "Type of the report.",
	"paths./groups/{id}/reports.get.parameters[1].enum.length": 14,
	"paths./groups/{id}/reports.get.parameters[1].enum[0]": "browsers",
	"paths./groups/{id}/reports.get.parameters[1].enum[10]": "referrers",
	"paths./groups/{id}/reports.get.parameters[1].enum[11]": "destinations",
	"paths./groups/{id}/reports.get.parameters[1].enum[12]": "languages",
	"paths./groups/{id}/reports.get.parameters[1].enum[13]": "params",
	"paths./groups/{id}/reports.get.parameters[1].enum[1]": "browsersfamilies",
	"paths./groups/{id}/reports.get.parameters[1].enum[2]": "platforms",
	"paths./groups/{id}/reports.get.parameters[1].enum[3]": "cities",
	"paths./groups/{id}/reports.get.parameters[1].enum[4]": "countries",
	"paths./groups/{id}/reports.get.parameters[1].enum[5]": "isps",
	"paths./groups/{id}/reports.get.parameters[1].enum[6]": "ips",
	"paths./groups/{id}/reports.get.parameters[1].enum[7]": "oss",
	"paths./groups/{id}/reports.get.parameters[1].enum[8]": "ossfamilies",
	"paths./groups/{id}/reports.get.parameters[1].enum[9]": "keywords",
	"paths./groups/{id}/reports.get.parameters[1].in": "query",
	"paths./groups/{id}/reports.get.parameters[1].name": "type",
	"paths./groups/{id}/reports.get.parameters[1].required": true,
	"paths./groups/{id}/reports.get.parameters[1].type": "string",
	"paths./groups/{id}/reports.get.parameters[2].description": "Timeframe of the request. See list at $timeframeList",
	"paths./groups/{id}/reports.get.parameters[2].enum.length": 11,
	"paths./groups/{id}/reports.get.parameters[2].enum[0]": "yesterday",
	"paths./groups/{id}/reports.get.parameters[2].enum[10]": "custom",
	"paths./groups/{id}/reports.get.parameters[2].enum[1]": "last7",
	"paths./groups/{id}/reports.get.parameters[2].enum[2]": "last30",
	"paths./groups/{id}/reports.get.parameters[2].enum[3]": "lastmonth",
	"paths./groups/{id}/reports.get.parameters[2].enum[4]": "currentmonth",
	"paths./groups/{id}/reports.get.parameters[2].enum[5]": "previousmonth",
	"paths./groups/{id}/reports.get.parameters[2].enum[6]": "last90",
	"paths./groups/{id}/reports.get.parameters[2].enum[7]": "last120",
	"paths./groups/{id}/reports.get.parameters[2].enum[8]": "last180",
	"paths./groups/{id}/reports.get.parameters[2].enum[9]": "beginning",
	"paths./groups/{id}/reports.get.parameters[2].in": "query",
	"paths./groups/{id}/reports.get.parameters[2].name": "timeframe",
	"paths./groups/{id}/reports.get.parameters[2].required": true,
	"paths./groups/{id}/reports.get.parameters[2].type": "string",
	"paths./groups/{id}/reports.get.parameters[3].description": "Type of the event you want to filter this report with. By default no filter is applied.",
	"paths./groups/{id}/reports.get.parameters[3].enum.length": 2,
	"paths./groups/{id}/reports.get.parameters[3].enum[0]": "clicks",
	"paths./groups/{id}/reports.get.parameters[3].enum[1]": "views",
	"paths./groups/{id}/reports.get.parameters[3].in": "query",
	"paths./groups/{id}/reports.get.parameters[3].name": "hittype",
	"paths./groups/{id}/reports.get.parameters[3].required": false,
	"paths./groups/{id}/reports.get.parameters[3].type": "string",
	"paths./groups/{id}/reports.get.parameters[4].description": "If using a \"custom\" timeFrame you can specify the starting day (YYYYMMDD)",
	"paths./groups/{id}/reports.get.parameters[4].in": "query",
	"paths./groups/{id}/reports.get.parameters[4].name": "fromDay",
	"paths./groups/{id}/reports.get.parameters[4].required": false,
	"paths./groups/{id}/reports.get.parameters[4].type": "string",
	"paths./groups/{id}/reports.get.parameters[5].description": "If using a \"custom\" timeFrame you can specify the ending day (YYYYMMDD)",
	"paths./groups/{id}/reports.get.parameters[5].in": "query",
	"paths./groups/{id}/reports.get.parameters[5].name": "toDay",
	"paths./groups/{id}/reports.get.parameters[5].required": false,
	"paths./groups/{id}/reports.get.parameters[5].type": "string",
	"paths./groups/{id}/reports.get.produces.length": 2,
	"paths./groups/{id}/reports.get.produces[0]": "application/json",
	"paths./groups/{id}/reports.get.produces[1]": "text/json",
	"paths./groups/{id}/reports.get.responses.200.description": "",
	"paths./groups/{id}/reports.get.responses.200.schema.$ref": "#/definitions/Api.Core.Dto.Tops.Top",
	"paths./groups/{id}/reports.get.responses.401.description": "Forbidden",
	"paths./groups/{id}/reports.get.responses.404.description": "Not found",
	"paths./groups/{id}/reports.get.responses.500.description": "Internal Server Error",
	"paths./groups/{id}/reports.get.summary": "Retrieve a top report connected to this group",
	"paths./groups/{id}/reports.get.tags.length": 1,
	"paths./groups/{id}/reports.get.tags[0]": "Groups",
	"paths./hits.get.consumes.length": 0,
	"paths./hits.get.deprecated": false,
	"paths./hits.get.parameters.length": 6,
	"paths./hits.get.parameters[0].description": "Timeframe of the request. See list at $timeframeList",
	"paths./hits.get.parameters[0].enum.length": 10,
	"paths./hits.get.parameters[0].enum[0]": "yesterday",
	"paths./hits.get.parameters[0].enum[1]": "last7",
	"paths./hits.get.parameters[0].enum[2]": "last30",
	"paths./hits.get.parameters[0].enum[3]": "lastmonth",
	"paths./hits.get.parameters[0].enum[4]": "currentmonth",
	"paths./hits.get.parameters[0].enum[5]": "previousmonth",
	"paths./hits.get.parameters[0].enum[6]": "last90",
	"paths./hits.get.parameters[0].enum[7]": "last120",
	"paths./hits.get.parameters[0].enum[8]": "last180",
	"paths./hits.get.parameters[0].enum[9]": "custom",
	"paths./hits.get.parameters[0].in": "query",
	"paths./hits.get.parameters[0].name": "timeframe",
	"paths./hits.get.parameters[0].required": true,
	"paths./hits.get.parameters[0].type": "string",
	"paths./hits.get.parameters[1].description": "Limit results to this number",
	"paths./hits.get.parameters[1].format": "int32",
	"paths./hits.get.parameters[1].in": "query",
	"paths./hits.get.parameters[1].name": "limit",
	"paths./hits.get.parameters[1].required": false,
	"paths./hits.get.parameters[1].type": "integer",
	"paths./hits.get.parameters[2].description": "Offset where to start from (it's the lastKey field in the response object)",
	"paths./hits.get.parameters[2].in": "query",
	"paths./hits.get.parameters[2].name": "offset",
	"paths./hits.get.parameters[2].required": false,
	"paths./hits.get.parameters[2].type": "string",
	"paths./hits.get.parameters[3].description": "If using a \"custom\" timeFrame you can specify the starting day (YYYYMMDD)",
	"paths./hits.get.parameters[3].in": "query",
	"paths./hits.get.parameters[3].name": "fromDay",
	"paths./hits.get.parameters[3].required": false,
	"paths./hits.get.parameters[3].type": "string",
	"paths./hits.get.parameters[4].description": "If using a \"custom\" timeFrame you can specify the ending day (YYYYMMDD)",
	"paths./hits.get.parameters[4].in": "query",
	"paths./hits.get.parameters[4].name": "toDay",
	"paths./hits.get.parameters[4].required": false,
	"paths./hits.get.parameters[4].type": "string",
	"paths./hits.get.parameters[5].description": "Filter event type (\"spiders\"/\"uniques\"/\"nonuniques\"/\"conversions\")",
	"paths./hits.get.parameters[5].enum.length": 4,
	"paths./hits.get.parameters[5].enum[0]": "spiders",
	"paths./hits.get.parameters[5].enum[1]": "uniques",
	"paths./hits.get.parameters[5].enum[2]": "nonuniques",
	"paths./hits.get.parameters[5].enum[3]": "conversions",
	"paths./hits.get.parameters[5].in": "query",
	"paths./hits.get.parameters[5].name": "filter",
	"paths./hits.get.parameters[5].required": false,
	"paths./hits.get.parameters[5].type": "string",
	"paths./hits.get.produces.length": 2,
	"paths./hits.get.produces[0]": "application/json",
	"paths./hits.get.produces[1]": "text/json",
	"paths./hits.get.responses.200.description": "",
	"paths./hits.get.responses.200.schema.$ref": "#/definitions/Api.Core.Dto.ClickStream.HitListPage",
	"paths./hits.get.responses.401.description": "Unauthorized",
	"paths./hits.get.responses.500.description": "Internal Server Error",
	"paths./hits.get.summary": "Retrieve the list of events related to this account.",
	"paths./hits.get.tags.length": 1,
	"paths./hits.get.tags[0]": "Hits",
	"paths./me.get.consumes.length": 0,
	"paths./me.get.deprecated": false,
	"paths./me.get.produces.length": 4,
	"paths./me.get.produces[0]": "application/json",
	"paths./me.get.produces[1]": "text/json",
	"paths./me.get.produces[2]": "application/xml",
	"paths./me.get.produces[3]": "text/xml",
	"paths./me.get.responses.200.description": "",
	"paths./me.get.responses.200.schema.$ref": "#/definitions/Api.Core.Dto.Accounting.User",
	"paths./me.get.responses.401.description": "Unauthorized",
	"paths./me.get.responses.500.description": "Internal Server Error",
	"paths./me.get.summary": "Retrieve current account data",
	"paths./me.get.tags.length": 1,
	"paths./me.get.tags[0]": "Me",
	"paths./me/plan.get.consumes.length": 0,
	"paths./me/plan.get.deprecated": false,
	"paths./me/plan.get.produces.length": 4,
	"paths./me/plan.get.produces[0]": "application/json",
	"paths./me/plan.get.produces[1]": "text/json",
	"paths./me/plan.get.produces[2]": "application/xml",
	"paths./me/plan.get.produces[3]": "text/xml",
	"paths./me/plan.get.responses.200.description": "",
	"paths./me/plan.get.responses.200.schema.$ref": "#/definitions/Api.Core.Dto.Accounting.Plan",
	"paths./me/plan.get.responses.401.description": "Unauthorized",
	"paths./me/plan.get.responses.500.description": "Internal Server Error",
	"paths./me/plan.get.summary": "Retrieve current account plan",
	"paths./me/plan.get.tags.length": 1,
	"paths./me/plan.get.tags[0]": "Me",
	"paths./reports.get.consumes.length": 0,
	"paths./reports.get.deprecated": false,
	"paths./reports.get.parameters.length": 8,
	"paths./reports.get.parameters[0].description": "Type of the report.",
	"paths./reports.get.parameters[0].enum.length": 14,
	"paths./reports.get.parameters[0].enum[0]": "browsers",
	"paths./reports.get.parameters[0].enum[10]": "referrers",
	"paths./reports.get.parameters[0].enum[11]": "destinations",
	"paths./reports.get.parameters[0].enum[12]": "languages",
	"paths./reports.get.parameters[0].enum[13]": "params",
	"paths./reports.get.parameters[0].enum[1]": "browsersfamilies",
	"paths./reports.get.parameters[0].enum[2]": "platforms",
	"paths./reports.get.parameters[0].enum[3]": "cities",
	"paths./reports.get.parameters[0].enum[4]": "countries",
	"paths./reports.get.parameters[0].enum[5]": "isps",
	"paths./reports.get.parameters[0].enum[6]": "ips",
	"paths./reports.get.parameters[0].enum[7]": "oss",
	"paths./reports.get.parameters[0].enum[8]": "ossfamilies",
	"paths./reports.get.parameters[0].enum[9]": "keywords",
	"paths./reports.get.parameters[0].in": "query",
	"paths./reports.get.parameters[0].name": "type",
	"paths./reports.get.parameters[0].required": true,
	"paths./reports.get.parameters[0].type": "string",
	"paths./reports.get.parameters[1].description": "Timeframe of the request. See list at $timeframeList",
	"paths./reports.get.parameters[1].enum.length": 11,
	"paths./reports.get.parameters[1].enum[0]": "yesterday",
	"paths./reports.get.parameters[1].enum[10]": "custom",
	"paths./reports.get.parameters[1].enum[1]": "last7",
	"paths./reports.get.parameters[1].enum[2]": "last30",
	"paths./reports.get.parameters[1].enum[3]": "lastmonth",
	"paths./reports.get.parameters[1].enum[4]": "currentmonth",
	"paths./reports.get.parameters[1].enum[5]": "previousmonth",
	"paths./reports.get.parameters[1].enum[6]": "last90",
	"paths./reports.get.parameters[1].enum[7]": "last120",
	"paths./reports.get.parameters[1].enum[8]": "last180",
	"paths./reports.get.parameters[1].enum[9]": "beginning",
	"paths./reports.get.parameters[1].in": "query",
	"paths./reports.get.parameters[1].name": "timeframe",
	"paths./reports.get.parameters[1].required": true,
	"paths./reports.get.parameters[1].type": "string",
	"paths./reports.get.parameters[2].description": "Type of the event you want to filter this report with. By default no filter is applied.",
	"paths./reports.get.parameters[2].in": "query",
	"paths./reports.get.parameters[2].name": "hittype",
	"paths./reports.get.parameters[2].required": false,
	"paths./reports.get.parameters[2].type": "string",
	"paths./reports.get.parameters[3].description": "Filter by this group id (mutually exclusive with \"datapoint\" and \"conversion\")",
	"paths./reports.get.parameters[3].format": "int64",
	"paths./reports.get.parameters[3].in": "query",
	"paths./reports.get.parameters[3].name": "group",
	"paths./reports.get.parameters[3].required": false,
	"paths./reports.get.parameters[3].type": "integer",
	"paths./reports.get.parameters[4].description": "Filter by this datapoint id (mutually exclusive with \"group\" and \"conversion\")",
	"paths./reports.get.parameters[4].format": "int64",
	"paths./reports.get.parameters[4].in": "query",
	"paths./reports.get.parameters[4].name": "datapoint",
	"paths./reports.get.parameters[4].required": false,
	"paths./reports.get.parameters[4].type": "integer",
	"paths./reports.get.parameters[5].description": "Filter by this conversion id (mutually exclusive with \"datapoint\" and \"group\")",
	"paths./reports.get.parameters[5].format": "int64",
	"paths./reports.get.parameters[5].in": "query",
	"paths./reports.get.parameters[5].name": "conversion",
	"paths./reports.get.parameters[5].required": false,
	"paths./reports.get.parameters[5].type": "integer",
	"paths./reports.get.parameters[6].description": "If using a \"custom\" timeFrame you can specify the starting day (YYYYMMDD)",
	"paths./reports.get.parameters[6].in": "query",
	"paths./reports.get.parameters[6].name": "fromDay",
	"paths./reports.get.parameters[6].required": false,
	"paths./reports.get.parameters[6].type": "string",
	"paths./reports.get.parameters[7].description": "If using a \"custom\" timeFrame you can specify the ending day (YYYYMMDD)",
	"paths./reports.get.parameters[7].in": "query",
	"paths./reports.get.parameters[7].name": "toDay",
	"paths./reports.get.parameters[7].required": false,
	"paths./reports.get.parameters[7].type": "string",
	"paths./reports.get.produces.length": 2,
	"paths./reports.get.produces[0]": "application/json",
	"paths./reports.get.produces[1]": "text/json",
	"paths./reports.get.responses.200.description": "",
	"paths./reports.get.responses.200.schema.$ref": "#/definitions/Api.Core.Dto.Tops.Top",
	"paths./reports.get.responses.401.description": "Forbidden",
	"paths./reports.get.responses.404.description": "Not found",
	"paths./reports.get.responses.500.description": "Internal Server Error",
	"paths./reports.get.summary": "Retrieve a top report",
	"paths./reports.get.tags.length": 1,
	"paths./reports.get.tags[0]": "Reports",
	"paths./retargeting.get.consumes.length": 0,
	"paths./retargeting.get.deprecated": false,
	"paths./retargeting.get.parameters.length": 2,
	"paths./retargeting.get.parameters[0].default": 0,
	"paths./retargeting.get.parameters[0].description": "Where to start when retrieving elements. Default is 0 if not specified.",
	"paths./retargeting.get.parameters[0].format": "int32",
	"paths./retargeting.get.parameters[0].in": "query",
	"paths./retargeting.get.parameters[0].name": "offset",
	"paths./retargeting.get.parameters[0].required": false,
	"paths./retargeting.get.parameters[0].type": "integer",
	"paths./retargeting.get.parameters[1].default": 20,
	"paths./retargeting.get.parameters[1].description": "Maximum elements to retrieve. Default to 20 if not specified.",
	"paths./retargeting.get.parameters[1].format": "int32",
	"paths./retargeting.get.parameters[1].in": "query",
	"paths./retargeting.get.parameters[1].name": "limit",
	"paths./retargeting.get.parameters[1].required": false,
	"paths./retargeting.get.parameters[1].type": "integer",
	"paths./retargeting.get.produces.length": 2,
	"paths./retargeting.get.produces[0]": "application/json",
	"paths./retargeting.get.produces[1]": "text/json",
	"paths./retargeting.get.responses.200.description": "",
	"paths./retargeting.get.responses.200.schema.$ref": "#/definitions/Api.Core.Responses.EntitiesResponse[Api.Core.Responses.EntityUri[System.Int64]]",
	"paths./retargeting.get.responses.401.description": "Unauthorized",
	"paths./retargeting.get.responses.404.description": "Not found",
	"paths./retargeting.get.responses.500.description": "Internal Server Error",
	"paths./retargeting.get.summary": "List of all the retargeting scripts associated to the user",
	"paths./retargeting.get.tags.length": 1,
	"paths./retargeting.get.tags[0]": "Retargeting",
	"paths./retargeting.post.consumes.length": 5,
	"paths./retargeting.post.consumes[0]": "application/json",
	"paths./retargeting.post.consumes[1]": "text/json",
	"paths./retargeting.post.consumes[2]": "application/xml",
	"paths./retargeting.post.consumes[3]": "text/xml",
	"paths./retargeting.post.consumes[4]": "application/x-www-form-urlencoded",
	"paths./retargeting.post.deprecated": false,
	"paths./retargeting.post.parameters.length": 1,
	"paths./retargeting.post.parameters[0].description": "The body of the retargeting script",
	"paths./retargeting.post.parameters[0].in": "body",
	"paths./retargeting.post.parameters[0].name": "value",
	"paths./retargeting.post.parameters[0].required": true,
	"paths./retargeting.post.parameters[0].schema.$ref": "#/definitions/Api.Core.Dto.Retargeting.RetargetingScript",
	"paths./retargeting.post.produces.length": 4,
	"paths./retargeting.post.produces[0]": "application/json",
	"paths./retargeting.post.produces[1]": "text/json",
	"paths./retargeting.post.produces[2]": "application/xml",
	"paths./retargeting.post.produces[3]": "text/xml",
	"paths./retargeting.post.responses.200.description": "",
	"paths./retargeting.post.responses.200.schema.$ref": "#/definitions/Api.Core.Responses.EntityUri[System.Int64]",
	"paths./retargeting.post.responses.401.description": "Unauthorized",
	"paths./retargeting.post.responses.404.description": "Not found",
	"paths./retargeting.post.responses.500.description": "Internal Server Error",
	"paths./retargeting.post.summary": "Creates a retargeting script",
	"paths./retargeting.post.tags.length": 1,
	"paths./retargeting.post.tags[0]": "Retargeting",
	"paths./retargeting/count.get.consumes.length": 0,
	"paths./retargeting/count.get.deprecated": false,
	"paths./retargeting/count.get.produces.length": 4,
	"paths./retargeting/count.get.produces[0]": "application/json",
	"paths./retargeting/count.get.produces[1]": "text/json",
	"paths./retargeting/count.get.produces[2]": "application/xml",
	"paths./retargeting/count.get.produces[3]": "text/xml",
	"paths./retargeting/count.get.responses.200.description": "",
	"paths./retargeting/count.get.responses.200.schema.$ref": "#/definitions/Api.Core.Responses.CountResponce",
	"paths./retargeting/count.get.responses.401.description": "Unauthorized",
	"paths./retargeting/count.get.responses.500.description": "Internal Server Error",
	"paths./retargeting/count.get.summary": "Retrieve count of retargeting scripts",
	"paths./retargeting/count.get.tags.length": 1,
	"paths./retargeting/count.get.tags[0]": "Retargeting",
	"paths./retargeting/{id}.delete.consumes.length": 0,
	"paths./retargeting/{id}.delete.deprecated": false,
	"paths./retargeting/{id}.delete.parameters.length": 1,
	"paths./retargeting/{id}.delete.parameters[0].description": "The id of the retargeting script",
	"paths./retargeting/{id}.delete.parameters[0].format": "int64",
	"paths./retargeting/{id}.delete.parameters[0].in": "path",
	"paths./retargeting/{id}.delete.parameters[0].name": "id",
	"paths./retargeting/{id}.delete.parameters[0].required": true,
	"paths./retargeting/{id}.delete.parameters[0].type": "integer",
	"paths./retargeting/{id}.delete.produces.length": 4,
	"paths./retargeting/{id}.delete.produces[0]": "application/json",
	"paths./retargeting/{id}.delete.produces[1]": "text/json",
	"paths./retargeting/{id}.delete.produces[2]": "application/xml",
	"paths./retargeting/{id}.delete.produces[3]": "text/xml",
	"paths./retargeting/{id}.delete.responses.200.description": "",
	"paths./retargeting/{id}.delete.responses.200.schema.$ref": "#/definitions/Api.Core.Responses.EntityUri[System.Int64]",
	"paths./retargeting/{id}.delete.responses.401.description": "Unauthorized",
	"paths./retargeting/{id}.delete.responses.404.description": "Not found",
	"paths./retargeting/{id}.delete.responses.500.description": "Internal Server Error",
	"paths./retargeting/{id}.delete.summary": "Deletes a retargeting script (and remove associations)",
	"paths./retargeting/{id}.delete.tags.length": 1,
	"paths./retargeting/{id}.delete.tags[0]": "Retargeting",
	"paths./retargeting/{id}.get.consumes.length": 0,
	"paths./retargeting/{id}.get.deprecated": false,
	"paths./retargeting/{id}.get.parameters.length": 1,
	"paths./retargeting/{id}.get.parameters[0].description": "The id of the retargeting script",
	"paths./retargeting/{id}.get.parameters[0].format": "int64",
	"paths./retargeting/{id}.get.parameters[0].in": "path",
	"paths./retargeting/{id}.get.parameters[0].name": "id",
	"paths./retargeting/{id}.get.parameters[0].required": true,
	"paths./retargeting/{id}.get.parameters[0].type": "integer",
	"paths./retargeting/{id}.get.produces.length": 4,
	"paths./retargeting/{id}.get.produces[0]": "application/json",
	"paths./retargeting/{id}.get.produces[1]": "text/json",
	"paths./retargeting/{id}.get.produces[2]": "application/xml",
	"paths./retargeting/{id}.get.produces[3]": "text/xml",
	"paths./retargeting/{id}.get.responses.200.description": "",
	"paths./retargeting/{id}.get.responses.200.schema.$ref": "#/definitions/Api.Core.Dto.Retargeting.RetargetingScript",
	"paths./retargeting/{id}.get.responses.401.description": "Unauthorized",
	"paths./retargeting/{id}.get.responses.404.description": "Not found",
	"paths./retargeting/{id}.get.responses.500.description": "Internal Server Error",
	"paths./retargeting/{id}.get.summary": "Get a retargeting script object",
	"paths./retargeting/{id}.get.tags.length": 1,
	"paths./retargeting/{id}.get.tags[0]": "Retargeting",
	"paths./retargeting/{id}.post.consumes.length": 5,
	"paths./retargeting/{id}.post.consumes[0]": "application/json",
	"paths./retargeting/{id}.post.consumes[1]": "text/json",
	"paths./retargeting/{id}.post.consumes[2]": "application/xml",
	"paths./retargeting/{id}.post.consumes[3]": "text/xml",
	"paths./retargeting/{id}.post.consumes[4]": "application/x-www-form-urlencoded",
	"paths./retargeting/{id}.post.deprecated": false,
	"paths./retargeting/{id}.post.parameters.length": 2,
	"paths./retargeting/{id}.post.parameters[0].description": "The id of the retargeting script",
	"paths./retargeting/{id}.post.parameters[0].format": "int64",
	"paths./retargeting/{id}.post.parameters[0].in": "path",
	"paths./retargeting/{id}.post.parameters[0].name": "id",
	"paths./retargeting/{id}.post.parameters[0].required": true,
	"paths./retargeting/{id}.post.parameters[0].type": "integer",
	"paths./retargeting/{id}.post.parameters[1].description": "The body of the retargeting script",
	"paths./retargeting/{id}.post.parameters[1].in": "body",
	"paths./retargeting/{id}.post.parameters[1].name": "value",
	"paths./retargeting/{id}.post.parameters[1].required": true,
	"paths./retargeting/{id}.post.parameters[1].schema.$ref": "#/definitions/Api.Core.Dto.Retargeting.RetargetingScript",
	"paths./retargeting/{id}.post.produces.length": 4,
	"paths./retargeting/{id}.post.produces[0]": "application/json",
	"paths./retargeting/{id}.post.produces[1]": "text/json",
	"paths./retargeting/{id}.post.produces[2]": "application/xml",
	"paths./retargeting/{id}.post.produces[3]": "text/xml",
	"paths./retargeting/{id}.post.responses.200.description": "",
	"paths./retargeting/{id}.post.responses.200.schema.$ref": "#/definitions/Api.Core.Responses.EntityUri[System.Int64]",
	"paths./retargeting/{id}.post.responses.401.description": "Unauthorized",
	"paths./retargeting/{id}.post.responses.404.description": "Not found",
	"paths./retargeting/{id}.post.responses.500.description": "Internal Server Error",
	"paths./retargeting/{id}.post.summary": "Updates a retargeting script",
	"paths./retargeting/{id}.post.tags.length": 1,
	"paths./retargeting/{id}.post.tags[0]": "Retargeting",
	"paths./retargeting/{id}/datapoints.get.consumes.length": 0,
	"paths./retargeting/{id}/datapoints.get.deprecated": false,
	"paths./retargeting/{id}/datapoints.get.parameters.length": 11,
	"paths./retargeting/{id}/datapoints.get.parameters[0].description": "Id of the retargeting script",
	"paths./retargeting/{id}/datapoints.get.parameters[0].format": "int64",
	"paths./retargeting/{id}/datapoints.get.parameters[0].in": "path",
	"paths./retargeting/{id}/datapoints.get.parameters[0].name": "id",
	"paths./retargeting/{id}/datapoints.get.parameters[0].required": true,
	"paths./retargeting/{id}/datapoints.get.parameters[0].type": "integer",
	"paths./retargeting/{id}/datapoints.get.parameters[10].description": "Exclude datapoints created after this date (YYYYMMDD)",
	"paths./retargeting/{id}/datapoints.get.parameters[10].in": "query",
	"paths./retargeting/{id}/datapoints.get.parameters[10].name": "createdBefore",
	"paths./retargeting/{id}/datapoints.get.parameters[10].required": false,
	"paths./retargeting/{id}/datapoints.get.parameters[10].type": "string",
	"paths./retargeting/{id}/datapoints.get.parameters[1].default": 0,
	"paths./retargeting/{id}/datapoints.get.parameters[1].description": "Where to start when retrieving elements. Default is 0 if not specified.",
	"paths./retargeting/{id}/datapoints.get.parameters[1].format": "int32",
	"paths./retargeting/{id}/datapoints.get.parameters[1].in": "query",
	"paths./retargeting/{id}/datapoints.get.parameters[1].name": "offset",
	"paths./retargeting/{id}/datapoints.get.parameters[1].required": false,
	"paths./retargeting/{id}/datapoints.get.parameters[1].type": "integer",
	"paths./retargeting/{id}/datapoints.get.parameters[2].default": 20,
	"paths./retargeting/{id}/datapoints.get.parameters[2].description": "Maximum elements to retrieve. Default to 20 if not specified.",
	"paths./retargeting/{id}/datapoints.get.parameters[2].format": "int32",
	"paths./retargeting/{id}/datapoints.get.parameters[2].in": "query",
	"paths./retargeting/{id}/datapoints.get.parameters[2].name": "limit",
	"paths./retargeting/{id}/datapoints.get.parameters[2].required": false,
	"paths./retargeting/{id}/datapoints.get.parameters[2].type": "integer",
	"paths./retargeting/{id}/datapoints.get.parameters[3].description": "Status of the datapoint",
	"paths./retargeting/{id}/datapoints.get.parameters[3].enum.length": 4,
	"paths./retargeting/{id}/datapoints.get.parameters[3].enum[0]": "deleted",
	"paths./retargeting/{id}/datapoints.get.parameters[3].enum[1]": "active",
	"paths./retargeting/{id}/datapoints.get.parameters[3].enum[2]": "paused",
	"paths./retargeting/{id}/datapoints.get.parameters[3].enum[3]": "spam",
	"paths./retargeting/{id}/datapoints.get.parameters[3].in": "query",
	"paths./retargeting/{id}/datapoints.get.parameters[3].name": "status",
	"paths./retargeting/{id}/datapoints.get.parameters[3].required": false,
	"paths./retargeting/{id}/datapoints.get.parameters[3].type": "string",
	"paths./retargeting/{id}/datapoints.get.parameters[4].description": "A comma separated list of tags you want to filter with.",
	"paths./retargeting/{id}/datapoints.get.parameters[4].in": "query",
	"paths./retargeting/{id}/datapoints.get.parameters[4].name": "tags",
	"paths./retargeting/{id}/datapoints.get.parameters[4].required": false,
	"paths./retargeting/{id}/datapoints.get.parameters[4].type": "string",
	"paths./retargeting/{id}/datapoints.get.parameters[5].description": "Filter fields by this pattern",
	"paths./retargeting/{id}/datapoints.get.parameters[5].in": "query",
	"paths./retargeting/{id}/datapoints.get.parameters[5].name": "textSearch",
	"paths./retargeting/{id}/datapoints.get.parameters[5].required": false,
	"paths./retargeting/{id}/datapoints.get.parameters[5].type": "string",
	"paths./retargeting/{id}/datapoints.get.parameters[6].description": "Filter fields by favourite status",
	"paths./retargeting/{id}/datapoints.get.parameters[6].in": "query",
	"paths./retargeting/{id}/datapoints.get.parameters[6].name": "onlyFavorites",
	"paths./retargeting/{id}/datapoints.get.parameters[6].required": false,
	"paths./retargeting/{id}/datapoints.get.parameters[6].type": "boolean",
	"paths./retargeting/{id}/datapoints.get.parameters[7].description": "Field to sort by",
	"paths./retargeting/{id}/datapoints.get.parameters[7].in": "query",
	"paths./retargeting/{id}/datapoints.get.parameters[7].name": "sortBy",
	"paths./retargeting/{id}/datapoints.get.parameters[7].required": false,
	"paths./retargeting/{id}/datapoints.get.parameters[7].type": "string",
	"paths./retargeting/{id}/datapoints.get.parameters[8].description": "Direction of sort \"asc\" or \"desc\"",
	"paths./retargeting/{id}/datapoints.get.parameters[8].enum.length": 2,
	"paths./retargeting/{id}/datapoints.get.parameters[8].enum[0]": "asc",
	"paths./retargeting/{id}/datapoints.get.parameters[8].enum[1]": "desc",
	"paths./retargeting/{id}/datapoints.get.parameters[8].in": "query",
	"paths./retargeting/{id}/datapoints.get.parameters[8].name": "sortDirection",
	"paths./retargeting/{id}/datapoints.get.parameters[8].required": false,
	"paths./retargeting/{id}/datapoints.get.parameters[8].type": "string",
	"paths./retargeting/{id}/datapoints.get.parameters[9].description": "Exclude datapoints created before this date (YYYYMMDD)",
	"paths./retargeting/{id}/datapoints.get.parameters[9].in": "query",
	"paths./retargeting/{id}/datapoints.get.parameters[9].name": "createdAfter",
	"paths./retargeting/{id}/datapoints.get.parameters[9].required": false,
	"paths./retargeting/{id}/datapoints.get.parameters[9].type": "string",
	"paths./retargeting/{id}/datapoints.get.produces.length": 2,
	"paths./retargeting/{id}/datapoints.get.produces[0]": "application/json",
	"paths./retargeting/{id}/datapoints.get.produces[1]": "text/json",
	"paths./retargeting/{id}/datapoints.get.responses.200.description": "",
	"paths./retargeting/{id}/datapoints.get.responses.200.schema.$ref": "#/definitions/Api.Core.Responses.EntitiesResponse[Api.Core.Responses.EntityUri[System.Int64]]",
	"paths./retargeting/{id}/datapoints.get.responses.401.description": "Unauthorized",
	"paths./retargeting/{id}/datapoints.get.responses.404.description": "Not found",
	"paths./retargeting/{id}/datapoints.get.responses.500.description": "Internal Server Error",
	"paths./retargeting/{id}/datapoints.get.summary": "List of all the datapoints associated to the retargeting script.",
	"paths./retargeting/{id}/datapoints.get.tags.length": 1,
	"paths./retargeting/{id}/datapoints.get.tags[0]": "Retargeting",
	"paths./retargeting/{id}/datapoints/count.get.consumes.length": 0,
	"paths./retargeting/{id}/datapoints/count.get.deprecated": false,
	"paths./retargeting/{id}/datapoints/count.get.parameters.length": 7,
	"paths./retargeting/{id}/datapoints/count.get.parameters[0].description": "Id of the group",
	"paths./retargeting/{id}/datapoints/count.get.parameters[0].format": "int64",
	"paths./retargeting/{id}/datapoints/count.get.parameters[0].in": "path",
	"paths./retargeting/{id}/datapoints/count.get.parameters[0].name": "id",
	"paths./retargeting/{id}/datapoints/count.get.parameters[0].required": true,
	"paths./retargeting/{id}/datapoints/count.get.parameters[0].type": "integer",
	"paths./retargeting/{id}/datapoints/count.get.parameters[1].description": "Status of the datapoint",
	"paths./retargeting/{id}/datapoints/count.get.parameters[1].enum.length": 4,
	"paths./retargeting/{id}/datapoints/count.get.parameters[1].enum[0]": "deleted",
	"paths./retargeting/{id}/datapoints/count.get.parameters[1].enum[1]": "active",
	"paths./retargeting/{id}/datapoints/count.get.parameters[1].enum[2]": "paused",
	"paths./retargeting/{id}/datapoints/count.get.parameters[1].enum[3]": "spam",
	"paths./retargeting/{id}/datapoints/count.get.parameters[1].in": "query",
	"paths./retargeting/{id}/datapoints/count.get.parameters[1].name": "status",
	"paths./retargeting/{id}/datapoints/count.get.parameters[1].required": false,
	"paths./retargeting/{id}/datapoints/count.get.parameters[1].type": "string",
	"paths./retargeting/{id}/datapoints/count.get.parameters[2].description": "A comma separated list of tags you want to filter with.",
	"paths./retargeting/{id}/datapoints/count.get.parameters[2].in": "query",
	"paths./retargeting/{id}/datapoints/count.get.parameters[2].name": "tags",
	"paths./retargeting/{id}/datapoints/count.get.parameters[2].required": false,
	"paths./retargeting/{id}/datapoints/count.get.parameters[2].type": "string",
	"paths./retargeting/{id}/datapoints/count.get.parameters[3].description": "Filter fields by this pattern",
	"paths./retargeting/{id}/datapoints/count.get.parameters[3].in": "query",
	"paths./retargeting/{id}/datapoints/count.get.parameters[3].name": "textSearch",
	"paths./retargeting/{id}/datapoints/count.get.parameters[3].required": false,
	"paths./retargeting/{id}/datapoints/count.get.parameters[3].type": "string",
	"paths./retargeting/{id}/datapoints/count.get.parameters[4].description": "Filter fields by favourite status",
	"paths./retargeting/{id}/datapoints/count.get.parameters[4].in": "query",
	"paths./retargeting/{id}/datapoints/count.get.parameters[4].name": "onlyFavorites",
	"paths./retargeting/{id}/datapoints/count.get.parameters[4].required": false,
	"paths./retargeting/{id}/datapoints/count.get.parameters[4].type": "boolean",
	"paths./retargeting/{id}/datapoints/count.get.parameters[5].description": "Exclude datapoints created before this date (YYYYMMDD)",
	"paths./retargeting/{id}/datapoints/count.get.parameters[5].in": "query",
	"paths./retargeting/{id}/datapoints/count.get.parameters[5].name": "createdAfter",
	"paths./retargeting/{id}/datapoints/count.get.parameters[5].required": false,
	"paths./retargeting/{id}/datapoints/count.get.parameters[5].type": "string",
	"paths./retargeting/{id}/datapoints/count.get.parameters[6].description": "Exclude datapoints created after this date (YYYYMMDD)",
	"paths./retargeting/{id}/datapoints/count.get.parameters[6].in": "query",
	"paths./retargeting/{id}/datapoints/count.get.parameters[6].name": "createdBefore",
	"paths./retargeting/{id}/datapoints/count.get.parameters[6].required": false,
	"paths./retargeting/{id}/datapoints/count.get.parameters[6].type": "string",
	"paths./retargeting/{id}/datapoints/count.get.produces.length": 4,
	"paths./retargeting/{id}/datapoints/count.get.produces[0]": "application/json",
	"paths./retargeting/{id}/datapoints/count.get.produces[1]": "text/json",
	"paths./retargeting/{id}/datapoints/count.get.produces[2]": "application/xml",
	"paths./retargeting/{id}/datapoints/count.get.produces[3]": "text/xml",
	"paths./retargeting/{id}/datapoints/count.get.responses.200.description": "",
	"paths./retargeting/{id}/datapoints/count.get.responses.200.schema.$ref": "#/definitions/Api.Core.Responses.CountResponce",
	"paths./retargeting/{id}/datapoints/count.get.responses.401.description": "Unauthorized",
	"paths./retargeting/{id}/datapoints/count.get.responses.404.description": "Not found",
	"paths./retargeting/{id}/datapoints/count.get.responses.500.description": "Internal Server Error",
	"paths./retargeting/{id}/datapoints/count.get.summary": "Count the datapoints associated to the retargeting script.",
	"paths./retargeting/{id}/datapoints/count.get.tags.length": 1,
	"paths./retargeting/{id}/datapoints/count.get.tags[0]": "Retargeting",
	"paths./tags.get.consumes.length": 0,
	"paths./tags.get.deprecated": false,
	"paths./tags.get.parameters.length": 6,
	"paths./tags.get.parameters[0].default": 0,
	"paths./tags.get.parameters[0].description": "Where to start when retrieving elements. Default is 0 if not specified.",
	"paths./tags.get.parameters[0].format": "int32",
	"paths./tags.get.parameters[0].in": "query",
	"paths./tags.get.parameters[0].name": "offset",
	"paths./tags.get.parameters[0].required": false,
	"paths./tags.get.parameters[0].type": "integer",
	"paths./tags.get.parameters[1].default": 20,
	"paths./tags.get.parameters[1].description": "Maximum elements to retrieve. Default to 20 if not specified.",
	"paths./tags.get.parameters[1].format": "int32",
	"paths./tags.get.parameters[1].in": "query",
	"paths./tags.get.parameters[1].name": "limit",
	"paths./tags.get.parameters[1].required": false,
	"paths./tags.get.parameters[1].type": "integer",
	"paths./tags.get.parameters[2].description": "Name of the tag",
	"paths./tags.get.parameters[2].in": "query",
	"paths./tags.get.parameters[2].name": "name",
	"paths./tags.get.parameters[2].required": false,
	"paths./tags.get.parameters[2].type": "string",
	"paths./tags.get.parameters[3].description": "Comma separated list of datapoints id to filter by",
	"paths./tags.get.parameters[3].in": "query",
	"paths./tags.get.parameters[3].name": "datapoints",
	"paths./tags.get.parameters[3].required": false,
	"paths./tags.get.parameters[3].type": "string",
	"paths./tags.get.parameters[4].description": "Comma separated list of groups id to filter by",
	"paths./tags.get.parameters[4].in": "query",
	"paths./tags.get.parameters[4].name": "groups",
	"paths./tags.get.parameters[4].required": false,
	"paths./tags.get.parameters[4].type": "string",
	"paths./tags.get.parameters[5].description": "Type of entity related to the tag",
	"paths./tags.get.parameters[5].enum.length": 4,
	"paths./tags.get.parameters[5].enum[0]": "tp",
	"paths./tags.get.parameters[5].enum[1]": "tl",
	"paths./tags.get.parameters[5].enum[2]": "dp",
	"paths./tags.get.parameters[5].enum[3]": "gr",
	"paths./tags.get.parameters[5].in": "query",
	"paths./tags.get.parameters[5].name": "type",
	"paths./tags.get.parameters[5].required": false,
	"paths./tags.get.parameters[5].type": "string",
	"paths./tags.get.produces.length": 2,
	"paths./tags.get.produces[0]": "application/json",
	"paths./tags.get.produces[1]": "text/json",
	"paths./tags.get.responses.200.description": "",
	"paths./tags.get.responses.200.schema.$ref": "#/definitions/Api.Core.Responses.EntitiesResponse[Api.Core.Responses.EntityUri[System.Int64]]",
	"paths./tags.get.responses.401.description": "Unauthorized",
	"paths./tags.get.responses.404.description": "Not found",
	"paths./tags.get.responses.500.description": "Internal Server Error",
	"paths./tags.get.summary": "List of all the groups associated to the user filtered by this tag.",
	"paths./tags.get.tags.length": 1,
	"paths./tags.get.tags[0]": "Tags",
	"paths./tags.post.consumes.length": 3,
	"paths./tags.post.consumes[0]": "application/json",
	"paths./tags.post.consumes[1]": "text/json",
	"paths./tags.post.consumes[2]": "application/x-www-form-urlencoded",
	"paths./tags.post.deprecated": false,
	"paths./tags.post.parameters.length": 1,
	"paths./tags.post.parameters[0].description": "The body of the tag",
	"paths./tags.post.parameters[0].in": "body",
	"paths./tags.post.parameters[0].name": "value",
	"paths./tags.post.parameters[0].required": true,
	"paths./tags.post.parameters[0].schema.$ref": "#/definitions/Api.Core.Dto.Tags.Tag",
	"paths./tags.post.produces.length": 4,
	"paths./tags.post.produces[0]": "application/json",
	"paths./tags.post.produces[1]": "text/json",
	"paths./tags.post.produces[2]": "application/xml",
	"paths./tags.post.produces[3]": "text/xml",
	"paths./tags.post.responses.200.description": "",
	"paths./tags.post.responses.200.schema.$ref": "#/definitions/Api.Core.Responses.EntityUri[System.Int64]",
	"paths./tags.post.responses.401.description": "Unauthorized",
	"paths./tags.post.responses.404.description": "Not found",
	"paths./tags.post.responses.500.description": "Internal Server Error",
	"paths./tags.post.summary": "Create a tag",
	"paths./tags.post.tags.length": 1,
	"paths./tags.post.tags[0]": "Tags",
	"paths./tags/count.get.consumes.length": 0,
	"paths./tags/count.get.deprecated": false,
	"paths./tags/count.get.parameters.length": 4,
	"paths./tags/count.get.parameters[0].description": "Name of the tag",
	"paths./tags/count.get.parameters[0].in": "query",
	"paths./tags/count.get.parameters[0].name": "name",
	"paths./tags/count.get.parameters[0].required": false,
	"paths./tags/count.get.parameters[0].type": "string",
	"paths./tags/count.get.parameters[1].description": "Comma separated list of datapoints id to filter by",
	"paths./tags/count.get.parameters[1].in": "query",
	"paths./tags/count.get.parameters[1].name": "datapoints",
	"paths./tags/count.get.parameters[1].required": false,
	"paths./tags/count.get.parameters[1].type": "string",
	"paths./tags/count.get.parameters[2].description": "Comma separated list of groups id to filter by",
	"paths./tags/count.get.parameters[2].in": "query",
	"paths./tags/count.get.parameters[2].name": "groups",
	"paths./tags/count.get.parameters[2].required": false,
	"paths./tags/count.get.parameters[2].type": "string",
	"paths./tags/count.get.parameters[3].description": "Type of entity related to the tag",
	"paths./tags/count.get.parameters[3].enum.length": 4,
	"paths./tags/count.get.parameters[3].enum[0]": "tp",
	"paths./tags/count.get.parameters[3].enum[1]": "tl",
	"paths./tags/count.get.parameters[3].enum[2]": "dp",
	"paths./tags/count.get.parameters[3].enum[3]": "gr",
	"paths./tags/count.get.parameters[3].in": "query",
	"paths./tags/count.get.parameters[3].name": "type",
	"paths./tags/count.get.parameters[3].required": false,
	"paths./tags/count.get.parameters[3].type": "string",
	"paths./tags/count.get.produces.length": 2,
	"paths./tags/count.get.produces[0]": "application/json",
	"paths./tags/count.get.produces[1]": "text/json",
	"paths./tags/count.get.responses.200.description": "",
	"paths./tags/count.get.responses.200.schema.$ref": "#/definitions/System.Object",
	"paths./tags/count.get.responses.401.description": "Unauthorized",
	"paths./tags/count.get.responses.404.description": "Not found",
	"paths./tags/count.get.responses.500.description": "Internal Server Error",
	"paths./tags/count.get.summary": "List of all the groups associated to the user filtered by this tag.",
	"paths./tags/count.get.tags.length": 1,
	"paths./tags/count.get.tags[0]": "Tags",
	"paths./tags/{tagId}.delete.consumes.length": 0,
	"paths./tags/{tagId}.delete.deprecated": false,
	"paths./tags/{tagId}.delete.parameters.length": 1,
	"paths./tags/{tagId}.delete.parameters[0].description": "Id of the tag",
	"paths./tags/{tagId}.delete.parameters[0].format": "int64",
	"paths./tags/{tagId}.delete.parameters[0].in": "path",
	"paths./tags/{tagId}.delete.parameters[0].name": "tagId",
	"paths./tags/{tagId}.delete.parameters[0].required": true,
	"paths./tags/{tagId}.delete.parameters[0].type": "integer",
	"paths./tags/{tagId}.delete.produces.length": 2,
	"paths./tags/{tagId}.delete.produces[0]": "application/json",
	"paths./tags/{tagId}.delete.produces[1]": "text/json",
	"paths./tags/{tagId}.delete.responses.200.description": "",
	"paths./tags/{tagId}.delete.responses.200.schema.$ref": "#/definitions/System.Object",
	"paths./tags/{tagId}.delete.responses.401.description": "Unauthorized",
	"paths./tags/{tagId}.delete.responses.500.description": "Internal Server Error",
	"paths./tags/{tagId}.delete.summary": "Delete a tag",
	"paths./tags/{tagId}.delete.tags.length": 1,
	"paths./tags/{tagId}.delete.tags[0]": "Tags",
	"paths./tags/{tagId}.get.consumes.length": 0,
	"paths./tags/{tagId}.get.deprecated": false,
	"paths./tags/{tagId}.get.parameters.length": 1,
	"paths./tags/{tagId}.get.parameters[0].description": "Id of the tag",
	"paths./tags/{tagId}.get.parameters[0].format": "int64",
	"paths./tags/{tagId}.get.parameters[0].in": "path",
	"paths./tags/{tagId}.get.parameters[0].name": "tagId",
	"paths./tags/{tagId}.get.parameters[0].required": true,
	"paths./tags/{tagId}.get.parameters[0].type": "integer",
	"paths./tags/{tagId}.get.produces.length": 2,
	"paths./tags/{tagId}.get.produces[0]": "application/json",
	"paths./tags/{tagId}.get.produces[1]": "text/json",
	"paths./tags/{tagId}.get.responses.200.description": "",
	"paths./tags/{tagId}.get.responses.200.schema.$ref": "#/definitions/Api.Core.Dto.Tags.Tag",
	"paths./tags/{tagId}.get.responses.401.description": "Unauthorized",
	"paths./tags/{tagId}.get.responses.500.description": "Internal Server Error",
	"paths./tags/{tagId}.get.summary": "Retrieve a tag",
	"paths./tags/{tagId}.get.tags.length": 1,
	"paths./tags/{tagId}.get.tags[0]": "Tags",
	"paths./tags/{tagId}/datapoints.delete.consumes.length": 0,
	"paths./tags/{tagId}/datapoints.delete.deprecated": false,
	"paths./tags/{tagId}/datapoints.delete.parameters.length": 1,
	"paths./tags/{tagId}/datapoints.delete.parameters[0].description": "Id of the tag",
	"paths./tags/{tagId}/datapoints.delete.parameters[0].format": "int64",
	"paths./tags/{tagId}/datapoints.delete.parameters[0].in": "path",
	"paths./tags/{tagId}/datapoints.delete.parameters[0].name": "tagId",
	"paths./tags/{tagId}/datapoints.delete.parameters[0].required": true,
	"paths./tags/{tagId}/datapoints.delete.parameters[0].type": "integer",
	"paths./tags/{tagId}/datapoints.delete.produces.length": 4,
	"paths./tags/{tagId}/datapoints.delete.produces[0]": "application/json",
	"paths./tags/{tagId}/datapoints.delete.produces[1]": "text/json",
	"paths./tags/{tagId}/datapoints.delete.produces[2]": "application/xml",
	"paths./tags/{tagId}/datapoints.delete.produces[3]": "text/xml",
	"paths./tags/{tagId}/datapoints.delete.responses.200.description": "",
	"paths./tags/{tagId}/datapoints.delete.responses.200.schema.$ref": "#/definitions/Api.Core.Responses.EntityUri[System.Int64]",
	"paths./tags/{tagId}/datapoints.delete.responses.401.description": "Unauthorized",
	"paths./tags/{tagId}/datapoints.delete.responses.500.description": "Internal Server Error",
	"paths./tags/{tagId}/datapoints.delete.summary": "Delete the association of this tag with all datapoints",
	"paths./tags/{tagId}/datapoints.delete.tags.length": 1,
	"paths./tags/{tagId}/datapoints.delete.tags[0]": "Tags",
	"paths./tags/{tagId}/datapoints.get.consumes.length": 0,
	"paths./tags/{tagId}/datapoints.get.deprecated": false,
	"paths./tags/{tagId}/datapoints.get.parameters.length": 8,
	"paths./tags/{tagId}/datapoints.get.parameters[0].description": "Id of the tag.",
	"paths./tags/{tagId}/datapoints.get.parameters[0].format": "int64",
	"paths./tags/{tagId}/datapoints.get.parameters[0].in": "path",
	"paths./tags/{tagId}/datapoints.get.parameters[0].name": "tagId",
	"paths./tags/{tagId}/datapoints.get.parameters[0].required": true,
	"paths./tags/{tagId}/datapoints.get.parameters[0].type": "integer",
	"paths./tags/{tagId}/datapoints.get.parameters[1].default": 0,
	"paths./tags/{tagId}/datapoints.get.parameters[1].description": "Where to start when retrieving elements. Default is 0 if not specified.",
	"paths./tags/{tagId}/datapoints.get.parameters[1].format": "int32",
	"paths./tags/{tagId}/datapoints.get.parameters[1].in": "query",
	"paths./tags/{tagId}/datapoints.get.parameters[1].name": "offset",
	"paths./tags/{tagId}/datapoints.get.parameters[1].required": false,
	"paths./tags/{tagId}/datapoints.get.parameters[1].type": "integer",
	"paths./tags/{tagId}/datapoints.get.parameters[2].default": 20,
	"paths./tags/{tagId}/datapoints.get.parameters[2].description": "Maximum elements to retrieve. Default to 20 if not specified.",
	"paths./tags/{tagId}/datapoints.get.parameters[2].format": "int32",
	"paths./tags/{tagId}/datapoints.get.parameters[2].in": "query",
	"paths./tags/{tagId}/datapoints.get.parameters[2].name": "limit",
	"paths./tags/{tagId}/datapoints.get.parameters[2].required": false,
	"paths./tags/{tagId}/datapoints.get.parameters[2].type": "integer",
	"paths./tags/{tagId}/datapoints.get.parameters[3].description": "Type of the datapoint (\"tp\"/\"tl\")",
	"paths./tags/{tagId}/datapoints.get.parameters[3].enum.length": 2,
	"paths./tags/{tagId}/datapoints.get.parameters[3].enum[0]": "tp",
	"paths./tags/{tagId}/datapoints.get.parameters[3].enum[1]": "tl",
	"paths./tags/{tagId}/datapoints.get.parameters[3].in": "query",
	"paths./tags/{tagId}/datapoints.get.parameters[3].name": "type",
	"paths./tags/{tagId}/datapoints.get.parameters[3].required": false,
	"paths./tags/{tagId}/datapoints.get.parameters[3].type": "string",
	"paths./tags/{tagId}/datapoints.get.parameters[4].description": "Status of the datapoint",
	"paths./tags/{tagId}/datapoints.get.parameters[4].enum.length": 4,
	"paths./tags/{tagId}/datapoints.get.parameters[4].enum[0]": "deleted",
	"paths./tags/{tagId}/datapoints.get.parameters[4].enum[1]": "active",
	"paths./tags/{tagId}/datapoints.get.parameters[4].enum[2]": "paused",
	"paths./tags/{tagId}/datapoints.get.parameters[4].enum[3]": "spam",
	"paths./tags/{tagId}/datapoints.get.parameters[4].in": "query",
	"paths./tags/{tagId}/datapoints.get.parameters[4].name": "status",
	"paths./tags/{tagId}/datapoints.get.parameters[4].required": false,
	"paths./tags/{tagId}/datapoints.get.parameters[4].type": "string",
	"paths./tags/{tagId}/datapoints.get.parameters[5].description": "Filter fields by this pattern",
	"paths./tags/{tagId}/datapoints.get.parameters[5].in": "query",
	"paths./tags/{tagId}/datapoints.get.parameters[5].name": "textSearch",
	"paths./tags/{tagId}/datapoints.get.parameters[5].required": false,
	"paths./tags/{tagId}/datapoints.get.parameters[5].type": "string",
	"paths./tags/{tagId}/datapoints.get.parameters[6].description": "Exclude datapoints created before this date (YYYYMMDD)",
	"paths./tags/{tagId}/datapoints.get.parameters[6].in": "query",
	"paths./tags/{tagId}/datapoints.get.parameters[6].name": "createdAfter",
	"paths./tags/{tagId}/datapoints.get.parameters[6].required": false,
	"paths./tags/{tagId}/datapoints.get.parameters[6].type": "string",
	"paths./tags/{tagId}/datapoints.get.parameters[7].description": "Exclude datapoints created after this date (YYYYMMDD)",
	"paths./tags/{tagId}/datapoints.get.parameters[7].in": "query",
	"paths./tags/{tagId}/datapoints.get.parameters[7].name": "createdBefore",
	"paths./tags/{tagId}/datapoints.get.parameters[7].required": false,
	"paths./tags/{tagId}/datapoints.get.parameters[7].type": "string",
	"paths./tags/{tagId}/datapoints.get.produces.length": 2,
	"paths./tags/{tagId}/datapoints.get.produces[0]": "application/json",
	"paths./tags/{tagId}/datapoints.get.produces[1]": "text/json",
	"paths./tags/{tagId}/datapoints.get.responses.200.description": "",
	"paths./tags/{tagId}/datapoints.get.responses.200.schema.$ref": "#/definitions/Api.Core.Responses.EntitiesResponse[Api.Core.Responses.EntityUri[System.Int64]]",
	"paths./tags/{tagId}/datapoints.get.responses.401.description": "Unauthorized",
	"paths./tags/{tagId}/datapoints.get.responses.404.description": "Not found",
	"paths./tags/{tagId}/datapoints.get.responses.500.description": "Internal Server Error",
	"paths./tags/{tagId}/datapoints.get.summary": "List of all the datapoints associated to the user filtered by this tag",
	"paths./tags/{tagId}/datapoints.get.tags.length": 1,
	"paths./tags/{tagId}/datapoints.get.tags[0]": "Tags",
	"paths./tags/{tagId}/datapoints/count.get.consumes.length": 0,
	"paths./tags/{tagId}/datapoints/count.get.deprecated": false,
	"paths./tags/{tagId}/datapoints/count.get.parameters.length": 6,
	"paths./tags/{tagId}/datapoints/count.get.parameters[0].description": "Id of the tag.",
	"paths./tags/{tagId}/datapoints/count.get.parameters[0].format": "int64",
	"paths./tags/{tagId}/datapoints/count.get.parameters[0].in": "path",
	"paths./tags/{tagId}/datapoints/count.get.parameters[0].name": "tagId",
	"paths./tags/{tagId}/datapoints/count.get.parameters[0].required": true,
	"paths./tags/{tagId}/datapoints/count.get.parameters[0].type": "integer",
	"paths./tags/{tagId}/datapoints/count.get.parameters[1].description": "Type of the datapoint (\"tp\"/\"tl\")",
	"paths./tags/{tagId}/datapoints/count.get.parameters[1].enum.length": 2,
	"paths./tags/{tagId}/datapoints/count.get.parameters[1].enum[0]": "tp",
	"paths./tags/{tagId}/datapoints/count.get.parameters[1].enum[1]": "tl",
	"paths./tags/{tagId}/datapoints/count.get.parameters[1].in": "query",
	"paths./tags/{tagId}/datapoints/count.get.parameters[1].name": "type",
	"paths./tags/{tagId}/datapoints/count.get.parameters[1].required": false,
	"paths./tags/{tagId}/datapoints/count.get.parameters[1].type": "string",
	"paths./tags/{tagId}/datapoints/count.get.parameters[2].description": "Status of the datapoint",
	"paths./tags/{tagId}/datapoints/count.get.parameters[2].enum.length": 4,
	"paths./tags/{tagId}/datapoints/count.get.parameters[2].enum[0]": "deleted",
	"paths./tags/{tagId}/datapoints/count.get.parameters[2].enum[1]": "active",
	"paths./tags/{tagId}/datapoints/count.get.parameters[2].enum[2]": "paused",
	"paths./tags/{tagId}/datapoints/count.get.parameters[2].enum[3]": "spam",
	"paths./tags/{tagId}/datapoints/count.get.parameters[2].in": "query",
	"paths./tags/{tagId}/datapoints/count.get.parameters[2].name": "status",
	"paths./tags/{tagId}/datapoints/count.get.parameters[2].required": false,
	"paths./tags/{tagId}/datapoints/count.get.parameters[2].type": "string",
	"paths./tags/{tagId}/datapoints/count.get.parameters[3].description": "Filter fields by this pattern",
	"paths./tags/{tagId}/datapoints/count.get.parameters[3].in": "query",
	"paths./tags/{tagId}/datapoints/count.get.parameters[3].name": "textSearch",
	"paths./tags/{tagId}/datapoints/count.get.parameters[3].required": false,
	"paths./tags/{tagId}/datapoints/count.get.parameters[3].type": "string",
	"paths./tags/{tagId}/datapoints/count.get.parameters[4].description": "Exclude datapoints created before this date (YYYYMMDD)",
	"paths./tags/{tagId}/datapoints/count.get.parameters[4].in": "query",
	"paths./tags/{tagId}/datapoints/count.get.parameters[4].name": "createdAfter",
	"paths./tags/{tagId}/datapoints/count.get.parameters[4].required": false,
	"paths./tags/{tagId}/datapoints/count.get.parameters[4].type": "string",
	"paths./tags/{tagId}/datapoints/count.get.parameters[5].description": "Exclude datapoints created after this date (YYYYMMDD)",
	"paths./tags/{tagId}/datapoints/count.get.parameters[5].in": "query",
	"paths./tags/{tagId}/datapoints/count.get.parameters[5].name": "createdBefore",
	"paths./tags/{tagId}/datapoints/count.get.parameters[5].required": false,
	"paths./tags/{tagId}/datapoints/count.get.parameters[5].type": "string",
	"paths./tags/{tagId}/datapoints/count.get.produces.length": 4,
	"paths./tags/{tagId}/datapoints/count.get.produces[0]": "application/json",
	"paths./tags/{tagId}/datapoints/count.get.produces[1]": "text/json",
	"paths./tags/{tagId}/datapoints/count.get.produces[2]": "application/xml",
	"paths./tags/{tagId}/datapoints/count.get.produces[3]": "text/xml",
	"paths./tags/{tagId}/datapoints/count.get.responses.200.description": "",
	"paths./tags/{tagId}/datapoints/count.get.responses.200.schema.$ref": "#/definitions/Api.Core.Responses.CountResponce",
	"paths./tags/{tagId}/datapoints/count.get.responses.401.description": "Unauthorized",
	"paths./tags/{tagId}/datapoints/count.get.responses.404.description": "Not found",
	"paths./tags/{tagId}/datapoints/count.get.responses.500.description": "Internal Server Error",
	"paths./tags/{tagId}/datapoints/count.get.summary": "Count the datapoints associated to the user filtered by this tag",
	"paths./tags/{tagId}/datapoints/count.get.tags.length": 1,
	"paths./tags/{tagId}/datapoints/count.get.tags[0]": "Tags",
	"paths./tags/{tagId}/datapoints/patch.put.consumes.length": 5,
	"paths./tags/{tagId}/datapoints/patch.put.consumes[0]": "application/json",
	"paths./tags/{tagId}/datapoints/patch.put.consumes[1]": "text/json",
	"paths./tags/{tagId}/datapoints/patch.put.consumes[2]": "application/xml",
	"paths./tags/{tagId}/datapoints/patch.put.consumes[3]": "text/xml",
	"paths./tags/{tagId}/datapoints/patch.put.consumes[4]": "application/x-www-form-urlencoded",
	"paths./tags/{tagId}/datapoints/patch.put.deprecated": false,
	"paths./tags/{tagId}/datapoints/patch.put.parameters.length": 2,
	"paths./tags/{tagId}/datapoints/patch.put.parameters[0].description": "Id of the tag",
	"paths./tags/{tagId}/datapoints/patch.put.parameters[0].format": "int64",
	"paths./tags/{tagId}/datapoints/patch.put.parameters[0].in": "path",
	"paths./tags/{tagId}/datapoints/patch.put.parameters[0].name": "tagId",
	"paths./tags/{tagId}/datapoints/patch.put.parameters[0].required": true,
	"paths./tags/{tagId}/datapoints/patch.put.parameters[0].type": "integer",
	"paths./tags/{tagId}/datapoints/patch.put.parameters[1].description": "The body patch",
	"paths./tags/{tagId}/datapoints/patch.put.parameters[1].in": "body",
	"paths./tags/{tagId}/datapoints/patch.put.parameters[1].name": "data",
	"paths./tags/{tagId}/datapoints/patch.put.parameters[1].required": true,
	"paths./tags/{tagId}/datapoints/patch.put.parameters[1].schema.$ref": "#/definitions/Api.Core.Requests.PatchBody",
	"paths./tags/{tagId}/datapoints/patch.put.produces.length": 4,
	"paths./tags/{tagId}/datapoints/patch.put.produces[0]": "application/json",
	"paths./tags/{tagId}/datapoints/patch.put.produces[1]": "text/json",
	"paths./tags/{tagId}/datapoints/patch.put.produces[2]": "application/xml",
	"paths./tags/{tagId}/datapoints/patch.put.produces[3]": "text/xml",
	"paths./tags/{tagId}/datapoints/patch.put.responses.200.description": "",
	"paths./tags/{tagId}/datapoints/patch.put.responses.200.schema.$ref": "#/definitions/Api.Core.Responses.EntityUri[System.Int64]",
	"paths./tags/{tagId}/datapoints/patch.put.responses.401.description": "Unauthorized",
	"paths./tags/{tagId}/datapoints/patch.put.responses.404.description": "Not found",
	"paths./tags/{tagId}/datapoints/patch.put.responses.500.description": "Internal Server Error",
	"paths./tags/{tagId}/datapoints/patch.put.summary": "Associate/Deassociate a tag with a datapoint",
	"paths./tags/{tagId}/datapoints/patch.put.tags.length": 1,
	"paths./tags/{tagId}/datapoints/patch.put.tags[0]": "Tags",
	"paths./tags/{tagId}/groups.delete.consumes.length": 0,
	"paths./tags/{tagId}/groups.delete.deprecated": false,
	"paths./tags/{tagId}/groups.delete.parameters.length": 1,
	"paths./tags/{tagId}/groups.delete.parameters[0].description": "Id of the tag",
	"paths./tags/{tagId}/groups.delete.parameters[0].format": "int64",
	"paths./tags/{tagId}/groups.delete.parameters[0].in": "path",
	"paths./tags/{tagId}/groups.delete.parameters[0].name": "tagId",
	"paths./tags/{tagId}/groups.delete.parameters[0].required": true,
	"paths./tags/{tagId}/groups.delete.parameters[0].type": "integer",
	"paths./tags/{tagId}/groups.delete.produces.length": 4,
	"paths./tags/{tagId}/groups.delete.produces[0]": "application/json",
	"paths./tags/{tagId}/groups.delete.produces[1]": "text/json",
	"paths./tags/{tagId}/groups.delete.produces[2]": "application/xml",
	"paths./tags/{tagId}/groups.delete.produces[3]": "text/xml",
	"paths./tags/{tagId}/groups.delete.responses.200.description": "",
	"paths./tags/{tagId}/groups.delete.responses.200.schema.$ref": "#/definitions/Api.Core.Responses.EntityUri[System.Int64]",
	"paths./tags/{tagId}/groups.delete.responses.401.description": "Unauthorized",
	"paths./tags/{tagId}/groups.delete.responses.500.description": "Internal Server Error",
	"paths./tags/{tagId}/groups.delete.summary": "Delete the association of this tag with all groups",
	"paths./tags/{tagId}/groups.delete.tags.length": 1,
	"paths./tags/{tagId}/groups.delete.tags[0]": "Tags",
	"paths./tags/{tagId}/groups.get.consumes.length": 0,
	"paths./tags/{tagId}/groups.get.deprecated": false,
	"paths./tags/{tagId}/groups.get.parameters.length": 7,
	"paths./tags/{tagId}/groups.get.parameters[0].description": "Id of the tag.",
	"paths./tags/{tagId}/groups.get.parameters[0].format": "int64",
	"paths./tags/{tagId}/groups.get.parameters[0].in": "path",
	"paths./tags/{tagId}/groups.get.parameters[0].name": "tagId",
	"paths./tags/{tagId}/groups.get.parameters[0].required": true,
	"paths./tags/{tagId}/groups.get.parameters[0].type": "integer",
	"paths./tags/{tagId}/groups.get.parameters[1].default": 0,
	"paths./tags/{tagId}/groups.get.parameters[1].description": "Where to start when retrieving elements. Default is 0 if not specified.",
	"paths./tags/{tagId}/groups.get.parameters[1].format": "int32",
	"paths./tags/{tagId}/groups.get.parameters[1].in": "query",
	"paths./tags/{tagId}/groups.get.parameters[1].name": "offset",
	"paths./tags/{tagId}/groups.get.parameters[1].required": false,
	"paths./tags/{tagId}/groups.get.parameters[1].type": "integer",
	"paths./tags/{tagId}/groups.get.parameters[2].default": 20,
	"paths./tags/{tagId}/groups.get.parameters[2].description": "Maximum elements to retrieve. Default to 20 if not specified.",
	"paths./tags/{tagId}/groups.get.parameters[2].format": "int32",
	"paths./tags/{tagId}/groups.get.parameters[2].in": "query",
	"paths./tags/{tagId}/groups.get.parameters[2].name": "limit",
	"paths./tags/{tagId}/groups.get.parameters[2].required": false,
	"paths./tags/{tagId}/groups.get.parameters[2].type": "integer",
	"paths./tags/{tagId}/groups.get.parameters[3].description": "Status of the datapoint",
	"paths./tags/{tagId}/groups.get.parameters[3].enum.length": 2,
	"paths./tags/{tagId}/groups.get.parameters[3].enum[0]": "deleted",
	"paths./tags/{tagId}/groups.get.parameters[3].enum[1]": "active",
	"paths./tags/{tagId}/groups.get.parameters[3].in": "query",
	"paths./tags/{tagId}/groups.get.parameters[3].name": "status",
	"paths./tags/{tagId}/groups.get.parameters[3].required": false,
	"paths./tags/{tagId}/groups.get.parameters[3].type": "string",
	"paths./tags/{tagId}/groups.get.parameters[4].description": "Filter fields by this pattern",
	"paths./tags/{tagId}/groups.get.parameters[4].in": "query",
	"paths./tags/{tagId}/groups.get.parameters[4].name": "textSearch",
	"paths./tags/{tagId}/groups.get.parameters[4].required": false,
	"paths./tags/{tagId}/groups.get.parameters[4].type": "string",
	"paths./tags/{tagId}/groups.get.parameters[5].description": "Exclude groups created before this date (YYYYMMDD)",
	"paths./tags/{tagId}/groups.get.parameters[5].in": "query",
	"paths./tags/{tagId}/groups.get.parameters[5].name": "createdAfter",
	"paths./tags/{tagId}/groups.get.parameters[5].required": false,
	"paths./tags/{tagId}/groups.get.parameters[5].type": "string",
	"paths./tags/{tagId}/groups.get.parameters[6].description": "Exclude groups created after this date (YYYYMMDD)",
	"paths./tags/{tagId}/groups.get.parameters[6].in": "query",
	"paths./tags/{tagId}/groups.get.parameters[6].name": "createdBefore",
	"paths./tags/{tagId}/groups.get.parameters[6].required": false,
	"paths./tags/{tagId}/groups.get.parameters[6].type": "string",
	"paths./tags/{tagId}/groups.get.produces.length": 2,
	"paths./tags/{tagId}/groups.get.produces[0]": "application/json",
	"paths./tags/{tagId}/groups.get.produces[1]": "text/json",
	"paths./tags/{tagId}/groups.get.responses.200.description": "",
	"paths./tags/{tagId}/groups.get.responses.200.schema.$ref": "#/definitions/Api.Core.Responses.EntitiesResponse[Api.Core.Responses.EntityUri[System.Int64]]",
	"paths./tags/{tagId}/groups.get.responses.401.description": "Unauthorized",
	"paths./tags/{tagId}/groups.get.responses.404.description": "Not found",
	"paths./tags/{tagId}/groups.get.responses.500.description": "Internal Server Error",
	"paths./tags/{tagId}/groups.get.summary": "List of all the groups associated to the user filtered by this tag.",
	"paths./tags/{tagId}/groups.get.tags.length": 1,
	"paths./tags/{tagId}/groups.get.tags[0]": "Tags",
	"paths./tags/{tagId}/groups/count.get.consumes.length": 0,
	"paths./tags/{tagId}/groups/count.get.deprecated": false,
	"paths./tags/{tagId}/groups/count.get.parameters.length": 5,
	"paths./tags/{tagId}/groups/count.get.parameters[0].description": "Id of the tag.",
	"paths./tags/{tagId}/groups/count.get.parameters[0].format": "int64",
	"paths./tags/{tagId}/groups/count.get.parameters[0].in": "path",
	"paths./tags/{tagId}/groups/count.get.parameters[0].name": "tagId",
	"paths./tags/{tagId}/groups/count.get.parameters[0].required": true,
	"paths./tags/{tagId}/groups/count.get.parameters[0].type": "integer",
	"paths./tags/{tagId}/groups/count.get.parameters[1].description": "Status of the datapoint",
	"paths./tags/{tagId}/groups/count.get.parameters[1].enum.length": 2,
	"paths./tags/{tagId}/groups/count.get.parameters[1].enum[0]": "deleted",
	"paths./tags/{tagId}/groups/count.get.parameters[1].enum[1]": "active",
	"paths./tags/{tagId}/groups/count.get.parameters[1].in": "query",
	"paths./tags/{tagId}/groups/count.get.parameters[1].name": "status",
	"paths./tags/{tagId}/groups/count.get.parameters[1].required": false,
	"paths./tags/{tagId}/groups/count.get.parameters[1].type": "string",
	"paths./tags/{tagId}/groups/count.get.parameters[2].description": "Filter fields by this pattern",
	"paths./tags/{tagId}/groups/count.get.parameters[2].in": "query",
	"paths./tags/{tagId}/groups/count.get.parameters[2].name": "textSearch",
	"paths./tags/{tagId}/groups/count.get.parameters[2].required": false,
	"paths./tags/{tagId}/groups/count.get.parameters[2].type": "string",
	"paths./tags/{tagId}/groups/count.get.parameters[3].description": "Exclude groups created before this date (YYYYMMDD)",
	"paths./tags/{tagId}/groups/count.get.parameters[3].in": "query",
	"paths./tags/{tagId}/groups/count.get.parameters[3].name": "createdAfter",
	"paths./tags/{tagId}/groups/count.get.parameters[3].required": false,
	"paths./tags/{tagId}/groups/count.get.parameters[3].type": "string",
	"paths./tags/{tagId}/groups/count.get.parameters[4].description": "Exclude groups created after this date (YYYYMMDD)",
	"paths./tags/{tagId}/groups/count.get.parameters[4].in": "query",
	"paths./tags/{tagId}/groups/count.get.parameters[4].name": "createdBefore",
	"paths./tags/{tagId}/groups/count.get.parameters[4].required": false,
	"paths./tags/{tagId}/groups/count.get.parameters[4].type": "string",
	"paths./tags/{tagId}/groups/count.get.produces.length": 4,
	"paths./tags/{tagId}/groups/count.get.produces[0]": "application/json",
	"paths./tags/{tagId}/groups/count.get.produces[1]": "text/json",
	"paths./tags/{tagId}/groups/count.get.produces[2]": "application/xml",
	"paths./tags/{tagId}/groups/count.get.produces[3]": "text/xml",
	"paths./tags/{tagId}/groups/count.get.responses.200.description": "",
	"paths./tags/{tagId}/groups/count.get.responses.200.schema.$ref": "#/definitions/Api.Core.Responses.CountResponce",
	"paths./tags/{tagId}/groups/count.get.responses.401.description": "Unauthorized",
	"paths./tags/{tagId}/groups/count.get.responses.404.description": "Not found",
	"paths./tags/{tagId}/groups/count.get.responses.500.description": "Internal Server Error",
	"paths./tags/{tagId}/groups/count.get.summary": "Count the groups associated to the user filtered by this tag",
	"paths./tags/{tagId}/groups/count.get.tags.length": 1,
	"paths./tags/{tagId}/groups/count.get.tags[0]": "Tags",
	"paths./tags/{tagId}/groups/patch.put.consumes.length": 5,
	"paths./tags/{tagId}/groups/patch.put.consumes[0]": "application/json",
	"paths./tags/{tagId}/groups/patch.put.consumes[1]": "text/json",
	"paths./tags/{tagId}/groups/patch.put.consumes[2]": "application/xml",
	"paths./tags/{tagId}/groups/patch.put.consumes[3]": "text/xml",
	"paths./tags/{tagId}/groups/patch.put.consumes[4]": "application/x-www-form-urlencoded",
	"paths./tags/{tagId}/groups/patch.put.deprecated": false,
	"paths./tags/{tagId}/groups/patch.put.parameters.length": 2,
	"paths./tags/{tagId}/groups/patch.put.parameters[0].description": "Id of the tag",
	"paths./tags/{tagId}/groups/patch.put.parameters[0].format": "int64",
	"paths./tags/{tagId}/groups/patch.put.parameters[0].in": "path",
	"paths./tags/{tagId}/groups/patch.put.parameters[0].name": "tagId",
	"paths./tags/{tagId}/groups/patch.put.parameters[0].required": true,
	"paths./tags/{tagId}/groups/patch.put.parameters[0].type": "integer",
	"paths./tags/{tagId}/groups/patch.put.parameters[1].description": "The body patch",
	"paths./tags/{tagId}/groups/patch.put.parameters[1].in": "body",
	"paths./tags/{tagId}/groups/patch.put.parameters[1].name": "data",
	"paths./tags/{tagId}/groups/patch.put.parameters[1].required": true,
	"paths./tags/{tagId}/groups/patch.put.parameters[1].schema.$ref": "#/definitions/Api.Core.Requests.PatchBody",
	"paths./tags/{tagId}/groups/patch.put.produces.length": 4,
	"paths./tags/{tagId}/groups/patch.put.produces[0]": "application/json",
	"paths./tags/{tagId}/groups/patch.put.produces[1]": "text/json",
	"paths./tags/{tagId}/groups/patch.put.produces[2]": "application/xml",
	"paths./tags/{tagId}/groups/patch.put.produces[3]": "text/xml",
	"paths./tags/{tagId}/groups/patch.put.responses.200.description": "",
	"paths./tags/{tagId}/groups/patch.put.responses.200.schema.$ref": "#/definitions/Api.Core.Responses.EntityUri[System.Int64]",
	"paths./tags/{tagId}/groups/patch.put.responses.401.description": "Unauthorized",
	"paths./tags/{tagId}/groups/patch.put.responses.404.description": "Not found",
	"paths./tags/{tagId}/groups/patch.put.responses.500.description": "Internal Server Error",
	"paths./tags/{tagId}/groups/patch.put.summary": "Associate/Deassociate a tag with a group",
	"paths./tags/{tagId}/groups/patch.put.tags.length": 1,
	"paths./tags/{tagId}/groups/patch.put.tags[0]": "Tags",
	"paths./tags/{tagId}/name.put.consumes.length": 5,
	"paths./tags/{tagId}/name.put.consumes[0]": "application/json",
	"paths./tags/{tagId}/name.put.consumes[1]": "text/json",
	"paths./tags/{tagId}/name.put.consumes[2]": "application/xml",
	"paths./tags/{tagId}/name.put.consumes[3]": "text/xml",
	"paths./tags/{tagId}/name.put.consumes[4]": "application/x-www-form-urlencoded",
	"paths./tags/{tagId}/name.put.deprecated": false,
	"paths./tags/{tagId}/name.put.parameters.length": 2,
	"paths./tags/{tagId}/name.put.parameters[0].description": "Id of the tag",
	"paths./tags/{tagId}/name.put.parameters[0].format": "int64",
	"paths./tags/{tagId}/name.put.parameters[0].in": "path",
	"paths./tags/{tagId}/name.put.parameters[0].name": "tagId",
	"paths./tags/{tagId}/name.put.parameters[0].required": true,
	"paths./tags/{tagId}/name.put.parameters[0].type": "integer",
	"paths./tags/{tagId}/name.put.parameters[1].description": "The body patch",
	"paths./tags/{tagId}/name.put.parameters[1].in": "body",
	"paths./tags/{tagId}/name.put.parameters[1].name": "data",
	"paths./tags/{tagId}/name.put.parameters[1].required": true,
	"paths./tags/{tagId}/name.put.parameters[1].schema.$ref": "#/definitions/Api.Core.Requests.GenericTextPatch",
	"paths./tags/{tagId}/name.put.produces.length": 4,
	"paths./tags/{tagId}/name.put.produces[0]": "application/json",
	"paths./tags/{tagId}/name.put.produces[1]": "text/json",
	"paths./tags/{tagId}/name.put.produces[2]": "application/xml",
	"paths./tags/{tagId}/name.put.produces[3]": "text/xml",
	"paths./tags/{tagId}/name.put.responses.200.description": "",
	"paths./tags/{tagId}/name.put.responses.200.schema.$ref": "#/definitions/Api.Core.Responses.EntityUri[System.Int64]",
	"paths./tags/{tagId}/name.put.responses.401.description": "Unauthorized",
	"paths./tags/{tagId}/name.put.responses.500.description": "Internal Server Error",
	"paths./tags/{tagId}/name.put.summary": "Fast patch a tag name",
	"paths./tags/{tagId}/name.put.tags.length": 1,
	"paths./tags/{tagId}/name.put.tags[0]": "Tags",
	"schemes.length": 2,
	"schemes[0]": "http",
	"schemes[1]": "https",
	"security.length": 1,
	"securityDefinitions.api_key.description": "API Key Authentication",
	"securityDefinitions.api_key.in": "header",
	"securityDefinitions.api_key.name": "X-Clickmeter-AuthKey",
	"securityDefinitions.api_key.type": "apiKey",
	"security[0].api_key.length": 0,
	"swagger": "2.0"
}