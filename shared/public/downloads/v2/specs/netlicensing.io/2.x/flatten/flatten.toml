basePath = "/core/v2/rest"
"definitions.License.properties.active.description" = "If set to 'false', the license is disabled. License can be re-enabled, but as long as it is disabled, the license is excluded from the validation process."
"definitions.License.properties.active.type" = "boolean"
"definitions.License.properties.currency.description" = "specifies currency for the license price. Check data types to discover which currencies are supported. Read-only, set from license template on creation."
"definitions.License.properties.currency.type" = "string"
"definitions.License.properties.hidden.description" = "If set to 'true', this license is not shown in NetLicensing Shop as purchased license. Set from license template on creation, if not specified explicitly."
"definitions.License.properties.hidden.type" = "boolean"
"definitions.License.properties.name.description" = "Name for the licensed item. Set from license template on creation, if not specified explicitly."
"definitions.License.properties.name.type" = "string"
"definitions.License.properties.number.description" = "Unique number (across all products/licensees of a vendor) that identifies the license. Vendor can assign this number when creating a license or let NetLicensing generate one. Read-only after corresponding creation transaction status is set to closed."
"definitions.License.properties.number.type" = "string"
"definitions.License.properties.price.description" = "price for the license. If >0, it must always be accompanied by the currency specification. Read-only, set from license template on creation."
"definitions.License.properties.price.format" = "double"
"definitions.License.properties.price.type" = "number"
"definitions.License.type" = "object"
"definitions.License.xml.name" = "license"
"definitions.LicenseTemplate.properties.active.description" = "If set to 'false', the license template is disabled. Licensee can not obtain any new licenses off this license template."
"definitions.LicenseTemplate.properties.active.type" = "boolean"
"definitions.LicenseTemplate.properties.automatic.description" = "If set to 'true', every new licensee automatically gets one license out of this license template on creation. Automatic licenses must have their price set to 0."
"definitions.LicenseTemplate.properties.automatic.type" = "boolean"
"definitions.LicenseTemplate.properties.currency.description" = "specifies currency for the license price. Check data types to discover which currencies are supported."
"definitions.LicenseTemplate.properties.currency.type" = "string"
"definitions.LicenseTemplate.properties.hidden.description" = "If set to 'true', this license template is not shown in NetLicensing Shop as offered for purchase."
"definitions.LicenseTemplate.properties.hidden.type" = "boolean"
"definitions.LicenseTemplate.properties.hiddenLicenses.description" = "If set to 'true', licenses from this license template are not visible to the end customer, but participate in validation."
"definitions.LicenseTemplate.properties.hiddenLicenses.type" = "boolean"
"definitions.LicenseTemplate.properties.licenseType.description" = "type of licenses created from this license template"
"definitions.LicenseTemplate.properties.licenseType.enum.length" = 2
"definitions.LicenseTemplate.properties.licenseType.enum[0]" = "FEATURE"
"definitions.LicenseTemplate.properties.licenseType.enum[1]" = "TIMEVOLUME"
"definitions.LicenseTemplate.properties.licenseType.type" = "string"
"definitions.LicenseTemplate.properties.name.description" = "Name for the licensed item."
"definitions.LicenseTemplate.properties.name.type" = "string"
"definitions.LicenseTemplate.properties.number.description" = "Unique number (across all products of a vendor) that identifies the license template. Vendor can assign this number when creating a license template or let NetLicensing generate one. Read-only after creation of the first license from this license template."
"definitions.LicenseTemplate.properties.number.type" = "string"
"definitions.LicenseTemplate.properties.price.description" = "price for the license. If >0, it must always be accompanied by the currency specification."
"definitions.LicenseTemplate.properties.price.format" = "double"
"definitions.LicenseTemplate.properties.price.type" = "number"
"definitions.LicenseTemplate.type" = "object"
"definitions.LicenseTemplate.xml.name" = "licensetemplate"
"definitions.Licensee.properties.active.description" = "If set to 'false', the licensee is disabled. Licensee can not obtain new licenses, and validation is disabled."
"definitions.Licensee.properties.active.type" = "boolean"
"definitions.Licensee.properties.number.description" = "Unique number (across all products of a vendor) that identifies the licensee. Vendor can assign this number when creating a licensee or let NetLicensing generate one. Read-only after creation of the first license for the licensee."
"definitions.Licensee.properties.number.type" = "string"
"definitions.Licensee.type" = "object"
"definitions.Licensee.xml.name" = "licensee"
"definitions.PaymentMethod.properties.active.type" = "boolean"
"definitions.PaymentMethod.properties.number.type" = "string"
"definitions.PaymentMethod.type" = "object"
"definitions.PaymentMethod.xml.name" = "paymentmethod"
"definitions.Product.properties.active.description" = "If set to 'false', the product is disabled. No new licensees can be registered for the product, existing licensees can not obtain new licenses"
"definitions.Product.properties.active.type" = "boolean"
"definitions.Product.properties.licenseeAutoCreate.description" = "If set to 'true', non-existing licensees will be created at first validation attempt."
"definitions.Product.properties.licenseeAutoCreate.type" = "boolean"
"definitions.Product.properties.name.description" = "Product name. Together with the version identifies the product for the end customer"
"definitions.Product.properties.name.type" = "string"
"definitions.Product.properties.number.description" = "Unique number that identifies the product. Vendor can assign this number when creating a product or let NetLicensing generate one. Read-only after creation of the first licensee for the product."
"definitions.Product.properties.number.type" = "string"
"definitions.Product.properties.version.description" = "Product version. Convenience parameter, additional to the product name."
"definitions.Product.properties.version.type" = "string"
"definitions.Product.type" = "object"
"definitions.Product.xml.name" = "product"
"definitions.ProductModule.properties.active.description" = "If set to 'false', the product module is disabled. Licensees can not obtain any new licenses for this product module."
"definitions.ProductModule.properties.active.type" = "boolean"
"definitions.ProductModule.properties.licensingInfo.description" = "Licensing model applied to this product module. Defines what license templates can be configured for the product module and how licenses for this product module are processed during validation."
"definitions.ProductModule.properties.licensingInfo.type" = "string"
"definitions.ProductModule.properties.name.description" = "Product module name that is visible to the end customers in NetLicensing Shop."
"definitions.ProductModule.properties.name.type" = "string"
"definitions.ProductModule.properties.number.description" = "Unique number (across all products of a vendor) that identifies the product module. Vendor can assign this number when creating a product module or let NetLicensing generate one. Read-only after creation of the first licensee for the product."
"definitions.ProductModule.properties.number.type" = "string"
"definitions.ProductModule.type" = "object"
"definitions.ProductModule.xml.name" = "productmodule"
"definitions.Token.properties.active.type" = "boolean"
"definitions.Token.properties.expirationTime.format" = "date-time"
"definitions.Token.properties.expirationTime.type" = "string"
"definitions.Token.properties.licenseNumber.type" = "string"
"definitions.Token.properties.number.type" = "string"
"definitions.Token.properties.shopURL.type" = "string"
"definitions.Token.properties.tokenType.type" = "string"
"definitions.Token.properties.vensorNumber.type" = "string"
"definitions.Token.type" = "object"
"definitions.Token.xml.name" = "token"
"definitions.Transaction.properties.active.description" = "Always true for the transactions"
"definitions.Transaction.properties.active.type" = "string"
"definitions.Transaction.properties.number.description" = "Unique number (across all products of a vendor) that identifies the transaction. This number is always generated by NetLicensing."
"definitions.Transaction.properties.number.type" = "string"
"definitions.Transaction.properties.source.enum.length" = 1
"definitions.Transaction.properties.source.enum[0]" = "SHOP"
"definitions.Transaction.properties.source.type" = "string"
"definitions.Transaction.properties.status.enum.length" = 3
"definitions.Transaction.properties.status.enum[0]" = "CANCELLED"
"definitions.Transaction.properties.status.enum[1]" = "CLOSED"
"definitions.Transaction.properties.status.enum[2]" = "PENDING"
"definitions.Transaction.properties.status.type" = "string"
"definitions.Transaction.type" = "object"
"definitions.Transaction.xml.name" = "transaction"
"definitions.discount.properties.amountPercent.type" = "string"
"definitions.discount.properties.currency.type" = "string"
"definitions.discount.properties.totalPrice.format" = "double"
"definitions.discount.properties.totalPrice.type" = "number"
"definitions.discount.type" = "object"
"definitions.discount.xml.name" = "discount"
"definitions.infos.xml.name" = "infos"
"definitions.items.xml.name" = "items"
"definitions.licensingModel.properties.name.type" = "string"
"definitions.licensingModel.type" = "object"
"definitions.licensingModel.xml.name" = "licensingModel"
"definitions.netlicensing.properties.infos.$ref" = "#/definitions/infos"
"definitions.netlicensing.properties.items.$ref" = "#/definitions/items"
"definitions.netlicensing.xml.name" = "netlicensing"
host = "go.netlicensing.io"
"info.description" = "The Labs64 <a href='https://www.labs64.de/confluence/x/pwCo' target='_blank'>NetLicensing RESTful API</a> gives you access to NetLicensing’s core features.<br/><br/><strong>Authentication</strong><br/>You authenticate to the NetLicensing API by providing your account credentials or simply use our demo account - <code>demo:demo</code><br/><br/>Find out more about Labs64 NetLicensing at <a href='https://netlicensing.io' target='_blank'>netlicensing.io</a>"
"info.termsOfService" = "https://www.labs64.com/legal/terms-of-service/netlicensing"
"info.title" = "Labs64 NetLicensing RESTful API Test Center"
"info.version" = "2.x"
"info.x-logo.url" = "https://api.apis.guru/v2/cache/logo/http_draft-labs64.rhcloud.com_content_uploads_2015_06_labs64-logo.png"
"info.x-origin.length" = 1
"info.x-origin[0].format" = "swagger"
"info.x-origin[0].url" = "http://io.labs64.com/NetLicensing-API/v2.x/netlicensing.json"
"info.x-origin[0].version" = "2.0"
"info.x-preferred" = true
"info.x-providerName" = "netlicensing.io"
"paths./license.get.description" = "Return a list of all licenses for the current vendor"
"paths./license.get.operationId" = "listLicenses"
"paths./license.get.responses.200.description" = "Successful request"
"paths./license.get.responses.200.schema.items.$ref" = "#/definitions/netlicensing"
"paths./license.get.responses.200.schema.type" = "array"
"paths./license.get.responses.400.description" = "Malformed or illegal request"
"paths./license.get.responses.403.description" = "Access is denied"
"paths./license.get.responses.404.description" = "Resource not found"
"paths./license.get.responses.500.description" = "Internal service error"
"paths./license.get.security.length" = 1
"paths./license.get.security[0].basicAuth.length" = 0
"paths./license.get.summary" = "Licenses list"
"paths./license.get.tags.length" = 1
"paths./license.get.tags[0]" = "License"
"paths./license.post.consumes.length" = 1
"paths./license.post.consumes[0]" = "application/x-www-form-urlencoded"
"paths./license.post.description" = "Creates a new license"
"paths./license.post.operationId" = "createLicense"
"paths./license.post.parameters.length" = 11
"paths./license.post.parameters[0].in" = "formData"
"paths./license.post.parameters[0].name" = "licenseeNumber"
"paths./license.post.parameters[0].required" = true
"paths./license.post.parameters[0].type" = "string"
"paths./license.post.parameters[10].description" = "If set to 'true', this license is not shown in NetLicensing Shop as purchased license. Set from license template on creation, if not specified explicitly"
"paths./license.post.parameters[10].in" = "formData"
"paths./license.post.parameters[10].name" = "hidden"
"paths./license.post.parameters[10].required" = false
"paths./license.post.parameters[10].type" = "boolean"
"paths./license.post.parameters[1].in" = "formData"
"paths./license.post.parameters[1].name" = "licenseTemplateNumber"
"paths./license.post.parameters[1].required" = true
"paths./license.post.parameters[1].type" = "string"
"paths./license.post.parameters[2].in" = "formData"
"paths./license.post.parameters[2].name" = "active"
"paths./license.post.parameters[2].required" = true
"paths./license.post.parameters[2].type" = "boolean"
"paths./license.post.parameters[3].in" = "formData"
"paths./license.post.parameters[3].name" = "number"
"paths./license.post.parameters[3].required" = true
"paths./license.post.parameters[3].type" = "string"
"paths./license.post.parameters[4].description" = "Name for the licensed item. Set from license template on creation, if not specified explicitly."
"paths./license.post.parameters[4].in" = "formData"
"paths./license.post.parameters[4].name" = "name"
"paths./license.post.parameters[4].required" = false
"paths./license.post.parameters[4].type" = "string"
"paths./license.post.parameters[5].description" = "Mandatory for 'TIMEVOLUME' license type and 'RENTAL' licensing model"
"paths./license.post.parameters[5].in" = "formData"
"paths./license.post.parameters[5].name" = "parentfeature"
"paths./license.post.parameters[5].required" = false
"paths./license.post.parameters[5].type" = "string"
"paths./license.post.parameters[6].description" = "Mandatory for 'TIMEVOLUME' license type."
"paths./license.post.parameters[6].in" = "formData"
"paths./license.post.parameters[6].name" = "timeVolume"
"paths./license.post.parameters[6].required" = false
"paths./license.post.parameters[6].type" = "string"
"paths./license.post.parameters[7].description" = "Mandatory for 'TIMEVOLUME' license type."
"paths./license.post.parameters[7].format" = "date-time"
"paths./license.post.parameters[7].in" = "formData"
"paths./license.post.parameters[7].name" = "startDate"
"paths./license.post.parameters[7].required" = false
"paths./license.post.parameters[7].type" = "string"
"paths./license.post.parameters[8].description" = "Price for the license. If >0, it must always be accompanied by the currency specification. Read-only, set from license template on creation"
"paths./license.post.parameters[8].format" = "double"
"paths./license.post.parameters[8].in" = "formData"
"paths./license.post.parameters[8].name" = "price"
"paths./license.post.parameters[8].required" = false
"paths./license.post.parameters[8].type" = "number"
"paths./license.post.parameters[9].description" = "Specifies currency for the license price. Check data types to discover which currencies are supported. Read-only, set from license template on creation"
"paths./license.post.parameters[9].in" = "formData"
"paths./license.post.parameters[9].name" = "currency"
"paths./license.post.parameters[9].required" = false
"paths./license.post.parameters[9].type" = "string"
"paths./license.post.responses.200.description" = "Successful request"
"paths./license.post.responses.200.schema.$ref" = "#/definitions/netlicensing"
"paths./license.post.responses.400.description" = "Malformed or illegal request"
"paths./license.post.responses.403.description" = "Access is denied"
"paths./license.post.responses.404.description" = "Resource not found"
"paths./license.post.responses.500.description" = "Internal service error"
"paths./license.post.security.length" = 1
"paths./license.post.security[0].basicAuth.length" = 0
"paths./license.post.summary" = "Create license"
"paths./license.post.tags.length" = 1
"paths./license.post.tags[0]" = "License"
"paths./license/{licenseNumber}.delete.description" = "Delete license by a licenseNumber"
"paths./license/{licenseNumber}.delete.operationId" = "deleteLicense"
"paths./license/{licenseNumber}.delete.parameters.length" = 1
"paths./license/{licenseNumber}.delete.parameters[0].description" = "Unique number (across all products/licensees of a vendor) that identifies the license. Vendor can assign this number when creating a license or let NetLicensing generate one. Read-only after corresponding creation transaction status is set to closed."
"paths./license/{licenseNumber}.delete.parameters[0].in" = "path"
"paths./license/{licenseNumber}.delete.parameters[0].name" = "licenseNumber"
"paths./license/{licenseNumber}.delete.parameters[0].required" = true
"paths./license/{licenseNumber}.delete.parameters[0].type" = "string"
"paths./license/{licenseNumber}.delete.responses.200.description" = "Successful request"
"paths./license/{licenseNumber}.delete.responses.200.schema.$ref" = "#/definitions/netlicensing"
"paths./license/{licenseNumber}.delete.responses.400.description" = "Malformed or illegal request"
"paths./license/{licenseNumber}.delete.responses.403.description" = "Access is denied"
"paths./license/{licenseNumber}.delete.responses.404.description" = "Resource not found"
"paths./license/{licenseNumber}.delete.responses.500.description" = "Internal service error"
"paths./license/{licenseNumber}.delete.security.length" = 1
"paths./license/{licenseNumber}.delete.security[0].basicAuth.length" = 0
"paths./license/{licenseNumber}.delete.summary" = "Delete license"
"paths./license/{licenseNumber}.delete.tags.length" = 1
"paths./license/{licenseNumber}.delete.tags[0]" = "License"
"paths./license/{licenseNumber}.get.description" = "Get license by a licenseNumber"
"paths./license/{licenseNumber}.get.operationId" = "getLicense"
"paths./license/{licenseNumber}.get.parameters.length" = 1
"paths./license/{licenseNumber}.get.parameters[0].description" = "Unique number (across all products/licensees of a vendor) that identifies the license. Vendor can assign this number when creating a license or let NetLicensing generate one. Read-only after corresponding creation transaction status is set to closed."
"paths./license/{licenseNumber}.get.parameters[0].in" = "path"
"paths./license/{licenseNumber}.get.parameters[0].name" = "licenseNumber"
"paths./license/{licenseNumber}.get.parameters[0].required" = true
"paths./license/{licenseNumber}.get.parameters[0].type" = "string"
"paths./license/{licenseNumber}.get.responses.200.description" = "Successful request"
"paths./license/{licenseNumber}.get.responses.200.schema.$ref" = "#/definitions/netlicensing"
"paths./license/{licenseNumber}.get.responses.400.description" = "Malformed or illegal request"
"paths./license/{licenseNumber}.get.responses.403.description" = "Access is denied"
"paths./license/{licenseNumber}.get.responses.404.description" = "Resource not found"
"paths./license/{licenseNumber}.get.responses.500.description" = "Internal service error"
"paths./license/{licenseNumber}.get.security.length" = 1
"paths./license/{licenseNumber}.get.security[0].basicAuth.length" = 0
"paths./license/{licenseNumber}.get.summary" = "Get license"
"paths./license/{licenseNumber}.get.tags.length" = 1
"paths./license/{licenseNumber}.get.tags[0]" = "License"
"paths./license/{licenseNumber}.post.consumes.length" = 1
"paths./license/{licenseNumber}.post.consumes[0]" = "application/x-www-form-urlencoded"
"paths./license/{licenseNumber}.post.description" = "Update license by a licenseNumber"
"paths./license/{licenseNumber}.post.operationId" = "updateLicense"
"paths./license/{licenseNumber}.post.parameters.length" = 10
"paths./license/{licenseNumber}.post.parameters[0].description" = "Unique number (across all products/licensees of a vendor) that identifies the license. Vendor can assign this number when creating a license or let NetLicensing generate one. Read-only after corresponding creation transaction status is set to closed."
"paths./license/{licenseNumber}.post.parameters[0].in" = "path"
"paths./license/{licenseNumber}.post.parameters[0].name" = "licenseNumber"
"paths./license/{licenseNumber}.post.parameters[0].required" = true
"paths./license/{licenseNumber}.post.parameters[0].type" = "string"
"paths./license/{licenseNumber}.post.parameters[1].description" = "Unique number (across all products/licensees of a vendor) that identifies the license. Vendor can assign this number when creating a license or let NetLicensing generate one. Read-only after corresponding creation transaction status is set to closed."
"paths./license/{licenseNumber}.post.parameters[1].in" = "formData"
"paths./license/{licenseNumber}.post.parameters[1].name" = "number"
"paths./license/{licenseNumber}.post.parameters[1].required" = false
"paths./license/{licenseNumber}.post.parameters[1].type" = "string"
"paths./license/{licenseNumber}.post.parameters[2].in" = "formData"
"paths./license/{licenseNumber}.post.parameters[2].name" = "active"
"paths./license/{licenseNumber}.post.parameters[2].required" = false
"paths./license/{licenseNumber}.post.parameters[2].type" = "boolean"
"paths./license/{licenseNumber}.post.parameters[3].description" = "Name for the licensed item. Set from license template on creation, if not specified explicitly."
"paths./license/{licenseNumber}.post.parameters[3].in" = "formData"
"paths./license/{licenseNumber}.post.parameters[3].name" = "name"
"paths./license/{licenseNumber}.post.parameters[3].required" = false
"paths./license/{licenseNumber}.post.parameters[3].type" = "string"
"paths./license/{licenseNumber}.post.parameters[4].description" = "for TIMEVOLUME licenseType"
"paths./license/{licenseNumber}.post.parameters[4].format" = "date-time"
"paths./license/{licenseNumber}.post.parameters[4].in" = "formData"
"paths./license/{licenseNumber}.post.parameters[4].name" = "startDate"
"paths./license/{licenseNumber}.post.parameters[4].required" = false
"paths./license/{licenseNumber}.post.parameters[4].type" = "string"
"paths./license/{licenseNumber}.post.parameters[5].in" = "formData"
"paths./license/{licenseNumber}.post.parameters[5].name" = "parentfeature"
"paths./license/{licenseNumber}.post.parameters[5].required" = false
"paths./license/{licenseNumber}.post.parameters[5].type" = "string"
"paths./license/{licenseNumber}.post.parameters[6].in" = "formData"
"paths./license/{licenseNumber}.post.parameters[6].name" = "timeVolume"
"paths./license/{licenseNumber}.post.parameters[6].required" = false
"paths./license/{licenseNumber}.post.parameters[6].type" = "string"
"paths./license/{licenseNumber}.post.parameters[7].description" = "Price for the license. If > 0, it must always be accompanied by the currency specification. Read-only, set from license template on creation"
"paths./license/{licenseNumber}.post.parameters[7].format" = "double"
"paths./license/{licenseNumber}.post.parameters[7].in" = "formData"
"paths./license/{licenseNumber}.post.parameters[7].name" = "price"
"paths./license/{licenseNumber}.post.parameters[7].required" = false
"paths./license/{licenseNumber}.post.parameters[7].type" = "number"
"paths./license/{licenseNumber}.post.parameters[8].description" = "Specifies currency for the license price. Check data types to discover which currencies are supported. Read-only, set from license template on creation"
"paths./license/{licenseNumber}.post.parameters[8].in" = "formData"
"paths./license/{licenseNumber}.post.parameters[8].name" = "currency"
"paths./license/{licenseNumber}.post.parameters[8].required" = false
"paths./license/{licenseNumber}.post.parameters[8].type" = "string"
"paths./license/{licenseNumber}.post.parameters[9].description" = "If set to 'true', this license is not shown in NetLicensing Shop as purchased license. Set from license template on creation, if not specified explicitly"
"paths./license/{licenseNumber}.post.parameters[9].in" = "formData"
"paths./license/{licenseNumber}.post.parameters[9].name" = "hidden"
"paths./license/{licenseNumber}.post.parameters[9].required" = false
"paths./license/{licenseNumber}.post.parameters[9].type" = "boolean"
"paths./license/{licenseNumber}.post.responses.200.description" = "Successful request"
"paths./license/{licenseNumber}.post.responses.200.schema.$ref" = "#/definitions/netlicensing"
"paths./license/{licenseNumber}.post.responses.400.description" = "Malformed or illegal request"
"paths./license/{licenseNumber}.post.responses.403.description" = "Access is denied"
"paths./license/{licenseNumber}.post.responses.404.description" = "Resource not found"
"paths./license/{licenseNumber}.post.responses.500.description" = "Internal service error"
"paths./license/{licenseNumber}.post.security.length" = 1
"paths./license/{licenseNumber}.post.security[0].basicAuth.length" = 0
"paths./license/{licenseNumber}.post.summary" = "Update license"
"paths./license/{licenseNumber}.post.tags.length" = 1
"paths./license/{licenseNumber}.post.tags[0]" = "License"
"paths./licensee.get.description" = "Return a list of all licensees for the current vendor"
"paths./licensee.get.operationId" = "listLicensees"
"paths./licensee.get.responses.200.description" = "Successful request"
"paths./licensee.get.responses.200.schema.items.$ref" = "#/definitions/netlicensing"
"paths./licensee.get.responses.200.schema.type" = "array"
"paths./licensee.get.responses.400.description" = "Malformed or illegal request"
"paths./licensee.get.responses.403.description" = "Access is denied"
"paths./licensee.get.responses.404.description" = "Resource not found"
"paths./licensee.get.responses.500.description" = "Internal service error"
"paths./licensee.get.security.length" = 1
"paths./licensee.get.security[0].basicAuth.length" = 0
"paths./licensee.get.summary" = "Licensees list"
"paths./licensee.get.tags.length" = 1
"paths./licensee.get.tags[0]" = "Licensee"
"paths./licensee.post.consumes.length" = 1
"paths./licensee.post.consumes[0]" = "application/x-www-form-urlencoded"
"paths./licensee.post.description" = "Creates a new licensee"
"paths./licensee.post.operationId" = "createLicensee"
"paths./licensee.post.parameters.length" = 6
"paths./licensee.post.parameters[0].description" = "Unique number (across all products of a vendor) that identifies the licensee. Vendor can assign this number when creating a licensee or let NetLicensing generate one. Read-only after creation of the first license for the licensee"
"paths./licensee.post.parameters[0].in" = "formData"
"paths./licensee.post.parameters[0].name" = "number"
"paths./licensee.post.parameters[0].required" = false
"paths./licensee.post.parameters[0].type" = "string"
"paths./licensee.post.parameters[1].description" = "productNumber to assign new licensee object"
"paths./licensee.post.parameters[1].in" = "formData"
"paths./licensee.post.parameters[1].name" = "productNumber"
"paths./licensee.post.parameters[1].required" = true
"paths./licensee.post.parameters[1].type" = "string"
"paths./licensee.post.parameters[2].in" = "formData"
"paths./licensee.post.parameters[2].name" = "name"
"paths./licensee.post.parameters[2].required" = false
"paths./licensee.post.parameters[2].type" = "string"
"paths./licensee.post.parameters[3].description" = "If set to 'false', the licensee is disabled. Licensee can not obtain new licenses, and validation is disabled"
"paths./licensee.post.parameters[3].in" = "formData"
"paths./licensee.post.parameters[3].name" = "active"
"paths./licensee.post.parameters[3].required" = true
"paths./licensee.post.parameters[3].type" = "boolean"
"paths./licensee.post.parameters[4].description" = "Licensee Secret for licensee."
"paths./licensee.post.parameters[4].in" = "formData"
"paths./licensee.post.parameters[4].name" = "licenseeSecret"
"paths./licensee.post.parameters[4].required" = false
"paths./licensee.post.parameters[4].type" = "string"
"paths./licensee.post.parameters[5].description" = "Mark licensee for transfer."
"paths./licensee.post.parameters[5].in" = "formData"
"paths./licensee.post.parameters[5].name" = "markedForTransfer"
"paths./licensee.post.parameters[5].required" = false
"paths./licensee.post.parameters[5].type" = "boolean"
"paths./licensee.post.responses.200.description" = "Successful request"
"paths./licensee.post.responses.200.schema.$ref" = "#/definitions/netlicensing"
"paths./licensee.post.responses.400.description" = "Malformed or illegal request"
"paths./licensee.post.responses.403.description" = "Access is denied"
"paths./licensee.post.responses.404.description" = "Resource not found"
"paths./licensee.post.responses.500.description" = "Internal service error"
"paths./licensee.post.security.length" = 1
"paths./licensee.post.security[0].basicAuth.length" = 0
"paths./licensee.post.summary" = "Create licensee"
"paths./licensee.post.tags.length" = 1
"paths./licensee.post.tags[0]" = "Licensee"
"paths./licensee/{licenseeNumber}.delete.description" = "Delete a licensee by number"
"paths./licensee/{licenseeNumber}.delete.operationId" = "deleteLicensee"
"paths./licensee/{licenseeNumber}.delete.parameters.length" = 2
"paths./licensee/{licenseeNumber}.delete.parameters[0].description" = "Unique number (across all products of a vendor) that identifies the licensee."
"paths./licensee/{licenseeNumber}.delete.parameters[0].in" = "path"
"paths./licensee/{licenseeNumber}.delete.parameters[0].name" = "licenseeNumber"
"paths./licensee/{licenseeNumber}.delete.parameters[0].required" = true
"paths./licensee/{licenseeNumber}.delete.parameters[0].type" = "string"
"paths./licensee/{licenseeNumber}.delete.parameters[1].description" = "Force object deletion and all descendants."
"paths./licensee/{licenseeNumber}.delete.parameters[1].in" = "query"
"paths./licensee/{licenseeNumber}.delete.parameters[1].name" = "forceCascade"
"paths./licensee/{licenseeNumber}.delete.parameters[1].required" = false
"paths./licensee/{licenseeNumber}.delete.parameters[1].type" = "boolean"
"paths./licensee/{licenseeNumber}.delete.responses.200.description" = "Successful request"
"paths./licensee/{licenseeNumber}.delete.responses.200.schema.$ref" = "#/definitions/netlicensing"
"paths./licensee/{licenseeNumber}.delete.responses.400.description" = "Malformed or illegal request"
"paths./licensee/{licenseeNumber}.delete.responses.403.description" = "Access is denied"
"paths./licensee/{licenseeNumber}.delete.responses.404.description" = "Resource not found"
"paths./licensee/{licenseeNumber}.delete.responses.500.description" = "Internal service error"
"paths./licensee/{licenseeNumber}.delete.security.length" = 1
"paths./licensee/{licenseeNumber}.delete.security[0].basicAuth.length" = 0
"paths./licensee/{licenseeNumber}.delete.summary" = "Delete licensee"
"paths./licensee/{licenseeNumber}.delete.tags.length" = 1
"paths./licensee/{licenseeNumber}.delete.tags[0]" = "Licensee"
"paths./licensee/{licenseeNumber}.get.description" = "Return a licensee by licenseeNumber"
"paths./licensee/{licenseeNumber}.get.operationId" = "getLicensee"
"paths./licensee/{licenseeNumber}.get.parameters.length" = 1
"paths./licensee/{licenseeNumber}.get.parameters[0].description" = "Unique number (across all products of a vendor) that identifies the licensee. Vendor can assign this number when creating a licensee or let NetLicensing generate one. Read-only after creation of the first license for the licensee."
"paths./licensee/{licenseeNumber}.get.parameters[0].in" = "path"
"paths./licensee/{licenseeNumber}.get.parameters[0].name" = "licenseeNumber"
"paths./licensee/{licenseeNumber}.get.parameters[0].required" = true
"paths./licensee/{licenseeNumber}.get.parameters[0].type" = "string"
"paths./licensee/{licenseeNumber}.get.responses.200.description" = "Successful request"
"paths./licensee/{licenseeNumber}.get.responses.200.schema.$ref" = "#/definitions/netlicensing"
"paths./licensee/{licenseeNumber}.get.responses.400.description" = "Malformed or illegal request"
"paths./licensee/{licenseeNumber}.get.responses.403.description" = "Access is denied"
"paths./licensee/{licenseeNumber}.get.responses.404.description" = "Resource not found"
"paths./licensee/{licenseeNumber}.get.responses.500.description" = "Internal service error"
"paths./licensee/{licenseeNumber}.get.security.length" = 1
"paths./licensee/{licenseeNumber}.get.security[0].basicAuth.length" = 0
"paths./licensee/{licenseeNumber}.get.summary" = "Get licensee"
"paths./licensee/{licenseeNumber}.get.tags.length" = 1
"paths./licensee/{licenseeNumber}.get.tags[0]" = "Licensee"
"paths./licensee/{licenseeNumber}.post.consumes.length" = 1
"paths./licensee/{licenseeNumber}.post.consumes[0]" = "application/x-www-form-urlencoded"
"paths./licensee/{licenseeNumber}.post.description" = "Sets the provided properties to a licensee. Return an updated licensee"
"paths./licensee/{licenseeNumber}.post.operationId" = "updateLicensee"
"paths./licensee/{licenseeNumber}.post.parameters.length" = 6
"paths./licensee/{licenseeNumber}.post.parameters[0].description" = "Unique number (across all products of a vendor) that identifies the licensee. Vendor can assign this number when creating a licensee or let NetLicensing generate one. Read-only after creation of the first license for the licensee."
"paths./licensee/{licenseeNumber}.post.parameters[0].in" = "path"
"paths./licensee/{licenseeNumber}.post.parameters[0].name" = "licenseeNumber"
"paths./licensee/{licenseeNumber}.post.parameters[0].required" = true
"paths./licensee/{licenseeNumber}.post.parameters[0].type" = "string"
"paths./licensee/{licenseeNumber}.post.parameters[1].description" = "New licensee number (update)."
"paths./licensee/{licenseeNumber}.post.parameters[1].in" = "formData"
"paths./licensee/{licenseeNumber}.post.parameters[1].name" = "number"
"paths./licensee/{licenseeNumber}.post.parameters[1].required" = false
"paths./licensee/{licenseeNumber}.post.parameters[1].type" = "string"
"paths./licensee/{licenseeNumber}.post.parameters[2].description" = "If set to 'false', the licensee is disabled. Licensee can not obtain new licenses, and validation is disabled"
"paths./licensee/{licenseeNumber}.post.parameters[2].in" = "formData"
"paths./licensee/{licenseeNumber}.post.parameters[2].name" = "active"
"paths./licensee/{licenseeNumber}.post.parameters[2].required" = false
"paths./licensee/{licenseeNumber}.post.parameters[2].type" = "boolean"
"paths./licensee/{licenseeNumber}.post.parameters[3].in" = "formData"
"paths./licensee/{licenseeNumber}.post.parameters[3].name" = "name"
"paths./licensee/{licenseeNumber}.post.parameters[3].required" = false
"paths./licensee/{licenseeNumber}.post.parameters[3].type" = "string"
"paths./licensee/{licenseeNumber}.post.parameters[4].description" = "Licensee Secret for licensee."
"paths./licensee/{licenseeNumber}.post.parameters[4].in" = "formData"
"paths./licensee/{licenseeNumber}.post.parameters[4].name" = "licenseeSecret"
"paths./licensee/{licenseeNumber}.post.parameters[4].required" = false
"paths./licensee/{licenseeNumber}.post.parameters[4].type" = "string"
"paths./licensee/{licenseeNumber}.post.parameters[5].description" = "Mark licensee for transfer."
"paths./licensee/{licenseeNumber}.post.parameters[5].in" = "formData"
"paths./licensee/{licenseeNumber}.post.parameters[5].name" = "markedForTransfer"
"paths./licensee/{licenseeNumber}.post.parameters[5].required" = false
"paths./licensee/{licenseeNumber}.post.parameters[5].type" = "boolean"
"paths./licensee/{licenseeNumber}.post.responses.200.description" = "Successful request"
"paths./licensee/{licenseeNumber}.post.responses.200.schema.$ref" = "#/definitions/netlicensing"
"paths./licensee/{licenseeNumber}.post.responses.400.description" = "Malformed or illegal request"
"paths./licensee/{licenseeNumber}.post.responses.403.description" = "Access is denied"
"paths./licensee/{licenseeNumber}.post.responses.404.description" = "Resource not found"
"paths./licensee/{licenseeNumber}.post.responses.500.description" = "Internal service error"
"paths./licensee/{licenseeNumber}.post.security.length" = 1
"paths./licensee/{licenseeNumber}.post.security[0].basicAuth.length" = 0
"paths./licensee/{licenseeNumber}.post.summary" = "Update licensee"
"paths./licensee/{licenseeNumber}.post.tags.length" = 1
"paths./licensee/{licenseeNumber}.post.tags[0]" = "Licensee"
"paths./licensee/{licenseeNumber}/transfer.post.consumes.length" = 1
"paths./licensee/{licenseeNumber}/transfer.post.consumes[0]" = "application/x-www-form-urlencoded"
"paths./licensee/{licenseeNumber}/transfer.post.description" = "Licenses transfer between licensees"
"paths./licensee/{licenseeNumber}/transfer.post.operationId" = "transferLicenses"
"paths./licensee/{licenseeNumber}/transfer.post.parameters.length" = 2
"paths./licensee/{licenseeNumber}/transfer.post.parameters[0].description" = "Licensee number with a maximum length of 1000 characters"
"paths./licensee/{licenseeNumber}/transfer.post.parameters[0].in" = "path"
"paths./licensee/{licenseeNumber}/transfer.post.parameters[0].name" = "licenseeNumber"
"paths./licensee/{licenseeNumber}/transfer.post.parameters[0].required" = true
"paths./licensee/{licenseeNumber}/transfer.post.parameters[0].type" = "string"
"paths./licensee/{licenseeNumber}/transfer.post.parameters[1].description" = "Licensee number which licenses to be transferred"
"paths./licensee/{licenseeNumber}/transfer.post.parameters[1].in" = "formData"
"paths./licensee/{licenseeNumber}/transfer.post.parameters[1].name" = "sourceLicenseeNumber"
"paths./licensee/{licenseeNumber}/transfer.post.parameters[1].required" = true
"paths./licensee/{licenseeNumber}/transfer.post.parameters[1].type" = "string"
"paths./licensee/{licenseeNumber}/transfer.post.responses.200.description" = "Successful request"
"paths./licensee/{licenseeNumber}/transfer.post.responses.200.schema.$ref" = "#/definitions/netlicensing"
"paths./licensee/{licenseeNumber}/transfer.post.responses.400.description" = "Malformed or illegal request"
"paths./licensee/{licenseeNumber}/transfer.post.responses.403.description" = "Access is denied"
"paths./licensee/{licenseeNumber}/transfer.post.responses.404.description" = "Resource not found"
"paths./licensee/{licenseeNumber}/transfer.post.responses.500.description" = "Internal service error"
"paths./licensee/{licenseeNumber}/transfer.post.security.length" = 1
"paths./licensee/{licenseeNumber}/transfer.post.security[0].basicAuth.length" = 0
"paths./licensee/{licenseeNumber}/transfer.post.summary" = "Transfer licenses"
"paths./licensee/{licenseeNumber}/transfer.post.tags.length" = 1
"paths./licensee/{licenseeNumber}/transfer.post.tags[0]" = "Licensee"
"paths./licensee/{licenseeNumber}/validate.post.consumes.length" = 1
"paths./licensee/{licenseeNumber}/validate.post.consumes[0]" = "application/x-www-form-urlencoded"
"paths./licensee/{licenseeNumber}/validate.post.description" = "Validates active licenses of the licensee"
"paths./licensee/{licenseeNumber}/validate.post.operationId" = "validateLicensee"
"paths./licensee/{licenseeNumber}/validate.post.parameters.length" = 4
"paths./licensee/{licenseeNumber}/validate.post.parameters[0].description" = "Licensee number with a maximum length of 1000 characters"
"paths./licensee/{licenseeNumber}/validate.post.parameters[0].in" = "path"
"paths./licensee/{licenseeNumber}/validate.post.parameters[0].name" = "licenseeNumber"
"paths./licensee/{licenseeNumber}/validate.post.parameters[0].required" = true
"paths./licensee/{licenseeNumber}/validate.post.parameters[0].type" = "string"
"paths./licensee/{licenseeNumber}/validate.post.parameters[1].description" = "Product number, must be provided when 'licensee auto-create' is enabled (see also Product JavaDoc). Identifies the product to which new licensee should be added"
"paths./licensee/{licenseeNumber}/validate.post.parameters[1].in" = "formData"
"paths./licensee/{licenseeNumber}/validate.post.parameters[1].name" = "productNumber"
"paths./licensee/{licenseeNumber}/validate.post.parameters[1].required" = false
"paths./licensee/{licenseeNumber}/validate.post.parameters[1].type" = "string"
"paths./licensee/{licenseeNumber}/validate.post.parameters[2].description" = "Human-readable name for the auto-created licensee (will be set as custom Licensee property)"
"paths./licensee/{licenseeNumber}/validate.post.parameters[2].in" = "formData"
"paths./licensee/{licenseeNumber}/validate.post.parameters[2].name" = "licenseeName"
"paths./licensee/{licenseeNumber}/validate.post.parameters[2].required" = false
"paths./licensee/{licenseeNumber}/validate.post.parameters[2].type" = "string"
"paths./licensee/{licenseeNumber}/validate.post.parameters[3].description" = "Licensee Secret key for licensee"
"paths./licensee/{licenseeNumber}/validate.post.parameters[3].in" = "formData"
"paths./licensee/{licenseeNumber}/validate.post.parameters[3].name" = "licenseeSecret"
"paths./licensee/{licenseeNumber}/validate.post.parameters[3].required" = false
"paths./licensee/{licenseeNumber}/validate.post.parameters[3].type" = "string"
"paths./licensee/{licenseeNumber}/validate.post.responses.200.description" = "Successful request"
"paths./licensee/{licenseeNumber}/validate.post.responses.200.schema.$ref" = "#/definitions/netlicensing"
"paths./licensee/{licenseeNumber}/validate.post.responses.400.description" = "Malformed or illegal request"
"paths./licensee/{licenseeNumber}/validate.post.responses.403.description" = "Access is denied"
"paths./licensee/{licenseeNumber}/validate.post.responses.404.description" = "Resource not found"
"paths./licensee/{licenseeNumber}/validate.post.responses.500.description" = "Internal service error"
"paths./licensee/{licenseeNumber}/validate.post.security.length" = 1
"paths./licensee/{licenseeNumber}/validate.post.security[0].basicAuth.length" = 0
"paths./licensee/{licenseeNumber}/validate.post.summary" = "Validate licensee"
"paths./licensee/{licenseeNumber}/validate.post.tags.length" = 1
"paths./licensee/{licenseeNumber}/validate.post.tags[0]" = "Licensee"
"paths./licensetemplate.get.description" = "Return a list of all license templates for the current vendor"
"paths./licensetemplate.get.operationId" = "listLicenseTemplates"
"paths./licensetemplate.get.responses.200.description" = "Successful request"
"paths./licensetemplate.get.responses.200.schema.items.$ref" = "#/definitions/netlicensing"
"paths./licensetemplate.get.responses.200.schema.type" = "array"
"paths./licensetemplate.get.responses.400.description" = "Malformed or illegal request"
"paths./licensetemplate.get.responses.403.description" = "Access is denied"
"paths./licensetemplate.get.responses.404.description" = "Resource not found"
"paths./licensetemplate.get.responses.500.description" = "Internal service error"
"paths./licensetemplate.get.security.length" = 1
"paths./licensetemplate.get.security[0].basicAuth.length" = 0
"paths./licensetemplate.get.summary" = "License Templates list"
"paths./licensetemplate.get.tags.length" = 1
"paths./licensetemplate.get.tags[0]" = "License Template"
"paths./licensetemplate.post.consumes.length" = 1
"paths./licensetemplate.post.consumes[0]" = "application/x-www-form-urlencoded"
"paths./licensetemplate.post.description" = "Creates a new license template"
"paths./licensetemplate.post.operationId" = "createLicenseTemplate"
"paths./licensetemplate.post.parameters.length" = 12
"paths./licensetemplate.post.parameters[0].description" = "Number of product module to сreate license template object"
"paths./licensetemplate.post.parameters[0].in" = "formData"
"paths./licensetemplate.post.parameters[0].name" = "productModuleNumber"
"paths./licensetemplate.post.parameters[0].required" = true
"paths./licensetemplate.post.parameters[0].type" = "string"
"paths./licensetemplate.post.parameters[10].description" = "If set to 'true', this license template is not shown in NetLicensing Shop as offered for purchase."
"paths./licensetemplate.post.parameters[10].in" = "formData"
"paths./licensetemplate.post.parameters[10].name" = "hidden"
"paths./licensetemplate.post.parameters[10].required" = false
"paths./licensetemplate.post.parameters[10].type" = "boolean"
"paths./licensetemplate.post.parameters[11].description" = "If set to 'true', licenses from this license template are not visible to the end customer, but participate in validation."
"paths./licensetemplate.post.parameters[11].in" = "formData"
"paths./licensetemplate.post.parameters[11].name" = "hideLicenses"
"paths./licensetemplate.post.parameters[11].required" = false
"paths./licensetemplate.post.parameters[11].type" = "boolean"
"paths./licensetemplate.post.parameters[1].description" = "lUnique number (across all products of a vendor) that identifies the license template. Vendor can assign this number when creating a license template or let NetLicensing generate one. Read-only after creation of the first license from this license template."
"paths./licensetemplate.post.parameters[1].in" = "formData"
"paths./licensetemplate.post.parameters[1].name" = "number"
"paths./licensetemplate.post.parameters[1].required" = true
"paths./licensetemplate.post.parameters[1].type" = "string"
"paths./licensetemplate.post.parameters[2].description" = "license template name to сreate license template object"
"paths./licensetemplate.post.parameters[2].in" = "formData"
"paths./licensetemplate.post.parameters[2].name" = "name"
"paths./licensetemplate.post.parameters[2].required" = true
"paths./licensetemplate.post.parameters[2].type" = "string"
"paths./licensetemplate.post.parameters[3].description" = "If set to 'false', the license template is disabled. Licensee can not obtain any new licenses off this license template."
"paths./licensetemplate.post.parameters[3].in" = "formData"
"paths./licensetemplate.post.parameters[3].name" = "active"
"paths./licensetemplate.post.parameters[3].required" = true
"paths./licensetemplate.post.parameters[3].type" = "boolean"
"paths./licensetemplate.post.parameters[4].collectionFormat" = "multi"
"paths./licensetemplate.post.parameters[4].description" = "type of licenses created from this license template. Supported types: FEATURE, TIMEVOLUME"
"paths./licensetemplate.post.parameters[4].in" = "formData"
"paths./licensetemplate.post.parameters[4].items.default" = "FEATURE"
"paths./licensetemplate.post.parameters[4].items.enum.length" = 3
"paths./licensetemplate.post.parameters[4].items.enum[0]" = "FEATURE"
"paths./licensetemplate.post.parameters[4].items.enum[1]" = "TIMEVOLUME"
"paths./licensetemplate.post.parameters[4].items.enum[2]" = "FLOATING"
"paths./licensetemplate.post.parameters[4].items.type" = "string"
"paths./licensetemplate.post.parameters[4].name" = "licenseType"
"paths./licensetemplate.post.parameters[4].required" = true
"paths./licensetemplate.post.parameters[4].type" = "array"
"paths./licensetemplate.post.parameters[5].description" = "Mandatory for 'TIMEVOLUME' license type."
"paths./licensetemplate.post.parameters[5].in" = "formData"
"paths./licensetemplate.post.parameters[5].name" = "timeVolume"
"paths./licensetemplate.post.parameters[5].required" = false
"paths./licensetemplate.post.parameters[5].type" = "string"
"paths./licensetemplate.post.parameters[6].description" = "Mandatory for 'FLOATING' license type."
"paths./licensetemplate.post.parameters[6].in" = "formData"
"paths./licensetemplate.post.parameters[6].name" = "maxSessions"
"paths./licensetemplate.post.parameters[6].required" = false
"paths./licensetemplate.post.parameters[6].type" = "string"
"paths./licensetemplate.post.parameters[7].description" = "price for the license. If >0, it must always be accompanied by the currency specification."
"paths./licensetemplate.post.parameters[7].format" = "double"
"paths./licensetemplate.post.parameters[7].in" = "formData"
"paths./licensetemplate.post.parameters[7].name" = "price"
"paths./licensetemplate.post.parameters[7].required" = false
"paths./licensetemplate.post.parameters[7].type" = "number"
"paths./licensetemplate.post.parameters[8].description" = "specifies currency for the license price. Check data types to discover which currencies are supported."
"paths./licensetemplate.post.parameters[8].in" = "formData"
"paths./licensetemplate.post.parameters[8].name" = "currency"
"paths./licensetemplate.post.parameters[8].required" = false
"paths./licensetemplate.post.parameters[8].type" = "string"
"paths./licensetemplate.post.parameters[9].description" = "If set to 'true', every new licensee automatically gets one license out of this license template on creation. Automatic licenses must have their price set to 0."
"paths./licensetemplate.post.parameters[9].in" = "formData"
"paths./licensetemplate.post.parameters[9].name" = "automatic"
"paths./licensetemplate.post.parameters[9].required" = false
"paths./licensetemplate.post.parameters[9].type" = "boolean"
"paths./licensetemplate.post.responses.200.description" = "Successful request"
"paths./licensetemplate.post.responses.200.schema.$ref" = "#/definitions/netlicensing"
"paths./licensetemplate.post.responses.400.description" = "Malformed or illegal request"
"paths./licensetemplate.post.responses.403.description" = "Access is denied"
"paths./licensetemplate.post.responses.404.description" = "Resource not found"
"paths./licensetemplate.post.responses.500.description" = "Internal service error"
"paths./licensetemplate.post.security.length" = 1
"paths./licensetemplate.post.security[0].basicAuth.length" = 0
"paths./licensetemplate.post.summary" = "Create license template"
"paths./licensetemplate.post.tags.length" = 1
"paths./licensetemplate.post.tags[0]" = "License Template"
"paths./licensetemplate/{licenseTemplateNumber}.delete.consumes.length" = 1
"paths./licensetemplate/{licenseTemplateNumber}.delete.consumes[0]" = "application/x-www-form-urlencoded"
"paths./licensetemplate/{licenseTemplateNumber}.delete.description" = "Delete a license template by number."
"paths./licensetemplate/{licenseTemplateNumber}.delete.operationId" = "deleteLicenseTemplate"
"paths./licensetemplate/{licenseTemplateNumber}.delete.parameters.length" = 2
"paths./licensetemplate/{licenseTemplateNumber}.delete.parameters[0].description" = "Unique number (across all products of a vendor) that identifies the license template."
"paths./licensetemplate/{licenseTemplateNumber}.delete.parameters[0].in" = "path"
"paths./licensetemplate/{licenseTemplateNumber}.delete.parameters[0].name" = "licenseTemplateNumber"
"paths./licensetemplate/{licenseTemplateNumber}.delete.parameters[0].required" = true
"paths./licensetemplate/{licenseTemplateNumber}.delete.parameters[0].type" = "string"
"paths./licensetemplate/{licenseTemplateNumber}.delete.parameters[1].description" = "Force object deletion and all descendants."
"paths./licensetemplate/{licenseTemplateNumber}.delete.parameters[1].in" = "query"
"paths./licensetemplate/{licenseTemplateNumber}.delete.parameters[1].name" = "forceCascade"
"paths./licensetemplate/{licenseTemplateNumber}.delete.parameters[1].required" = false
"paths./licensetemplate/{licenseTemplateNumber}.delete.parameters[1].type" = "boolean"
"paths./licensetemplate/{licenseTemplateNumber}.delete.responses.200.description" = "Successful request"
"paths./licensetemplate/{licenseTemplateNumber}.delete.responses.200.schema.$ref" = "#/definitions/netlicensing"
"paths./licensetemplate/{licenseTemplateNumber}.delete.responses.400.description" = "Malformed or illegal request"
"paths./licensetemplate/{licenseTemplateNumber}.delete.responses.403.description" = "Access is denied"
"paths./licensetemplate/{licenseTemplateNumber}.delete.responses.404.description" = "Resource not found"
"paths./licensetemplate/{licenseTemplateNumber}.delete.responses.500.description" = "Internal service error"
"paths./licensetemplate/{licenseTemplateNumber}.delete.security.length" = 1
"paths./licensetemplate/{licenseTemplateNumber}.delete.security[0].basicAuth.length" = 0
"paths./licensetemplate/{licenseTemplateNumber}.delete.summary" = "Delete license template"
"paths./licensetemplate/{licenseTemplateNumber}.delete.tags.length" = 1
"paths./licensetemplate/{licenseTemplateNumber}.delete.tags[0]" = "License Template"
"paths./licensetemplate/{licenseTemplateNumber}.get.description" = "Return a license template by licenseTemplateNumber"
"paths./licensetemplate/{licenseTemplateNumber}.get.operationId" = "getLicenseTemplate"
"paths./licensetemplate/{licenseTemplateNumber}.get.parameters.length" = 1
"paths./licensetemplate/{licenseTemplateNumber}.get.parameters[0].description" = "Unique number (across all products of a vendor) that identifies the license template. Vendor can assign this number when creating a license template or let NetLicensing generate one. Read-only after creation of the first license from this license template."
"paths./licensetemplate/{licenseTemplateNumber}.get.parameters[0].in" = "path"
"paths./licensetemplate/{licenseTemplateNumber}.get.parameters[0].name" = "licenseTemplateNumber"
"paths./licensetemplate/{licenseTemplateNumber}.get.parameters[0].required" = true
"paths./licensetemplate/{licenseTemplateNumber}.get.parameters[0].type" = "string"
"paths./licensetemplate/{licenseTemplateNumber}.get.responses.200.description" = "Successful request"
"paths./licensetemplate/{licenseTemplateNumber}.get.responses.200.schema.$ref" = "#/definitions/netlicensing"
"paths./licensetemplate/{licenseTemplateNumber}.get.responses.400.description" = "Malformed or illegal request"
"paths./licensetemplate/{licenseTemplateNumber}.get.responses.403.description" = "Access is denied"
"paths./licensetemplate/{licenseTemplateNumber}.get.responses.404.description" = "Resource not found"
"paths./licensetemplate/{licenseTemplateNumber}.get.responses.500.description" = "Internal service error"
"paths./licensetemplate/{licenseTemplateNumber}.get.security.length" = 1
"paths./licensetemplate/{licenseTemplateNumber}.get.security[0].basicAuth.length" = 0
"paths./licensetemplate/{licenseTemplateNumber}.get.summary" = "Get license template"
"paths./licensetemplate/{licenseTemplateNumber}.get.tags.length" = 1
"paths./licensetemplate/{licenseTemplateNumber}.get.tags[0]" = "License Template"
"paths./licensetemplate/{licenseTemplateNumber}.post.consumes.length" = 1
"paths./licensetemplate/{licenseTemplateNumber}.post.consumes[0]" = "application/x-www-form-urlencoded"
"paths./licensetemplate/{licenseTemplateNumber}.post.description" = "Sets the provided properties to a license template. Return an updated license template"
"paths./licensetemplate/{licenseTemplateNumber}.post.operationId" = "updateLicenseTemplate"
"paths./licensetemplate/{licenseTemplateNumber}.post.parameters.length" = 12
"paths./licensetemplate/{licenseTemplateNumber}.post.parameters[0].description" = "Unique number (across all products of a vendor) that identifies the license template. Vendor can assign this number when creating a license template or let NetLicensing generate one. Read-only after creation of the first license from this license template."
"paths./licensetemplate/{licenseTemplateNumber}.post.parameters[0].in" = "path"
"paths./licensetemplate/{licenseTemplateNumber}.post.parameters[0].name" = "licenseTemplateNumber"
"paths./licensetemplate/{licenseTemplateNumber}.post.parameters[0].required" = true
"paths./licensetemplate/{licenseTemplateNumber}.post.parameters[0].type" = "string"
"paths./licensetemplate/{licenseTemplateNumber}.post.parameters[10].description" = "If set to 'true', this license template is not shown in NetLicensing Shop as offered for purchase."
"paths./licensetemplate/{licenseTemplateNumber}.post.parameters[10].in" = "formData"
"paths./licensetemplate/{licenseTemplateNumber}.post.parameters[10].name" = "hidden"
"paths./licensetemplate/{licenseTemplateNumber}.post.parameters[10].required" = false
"paths./licensetemplate/{licenseTemplateNumber}.post.parameters[10].type" = "boolean"
"paths./licensetemplate/{licenseTemplateNumber}.post.parameters[11].description" = "If set to 'true', licenses from this license template are not visible to the end customer, but participate in validation."
"paths./licensetemplate/{licenseTemplateNumber}.post.parameters[11].in" = "formData"
"paths./licensetemplate/{licenseTemplateNumber}.post.parameters[11].name" = "hideLicenses"
"paths./licensetemplate/{licenseTemplateNumber}.post.parameters[11].required" = false
"paths./licensetemplate/{licenseTemplateNumber}.post.parameters[11].type" = "boolean"
"paths./licensetemplate/{licenseTemplateNumber}.post.parameters[1].description" = "New license template number (update)."
"paths./licensetemplate/{licenseTemplateNumber}.post.parameters[1].in" = "formData"
"paths./licensetemplate/{licenseTemplateNumber}.post.parameters[1].name" = "number"
"paths./licensetemplate/{licenseTemplateNumber}.post.parameters[1].required" = false
"paths./licensetemplate/{licenseTemplateNumber}.post.parameters[1].type" = "string"
"paths./licensetemplate/{licenseTemplateNumber}.post.parameters[2].description" = "Name for the licensed item"
"paths./licensetemplate/{licenseTemplateNumber}.post.parameters[2].in" = "formData"
"paths./licensetemplate/{licenseTemplateNumber}.post.parameters[2].name" = "name"
"paths./licensetemplate/{licenseTemplateNumber}.post.parameters[2].required" = false
"paths./licensetemplate/{licenseTemplateNumber}.post.parameters[2].type" = "string"
"paths./licensetemplate/{licenseTemplateNumber}.post.parameters[3].description" = "If set to 'false', the license template is disabled. Licensee can not obtain any new licenses off this license template."
"paths./licensetemplate/{licenseTemplateNumber}.post.parameters[3].in" = "formData"
"paths./licensetemplate/{licenseTemplateNumber}.post.parameters[3].name" = "active"
"paths./licensetemplate/{licenseTemplateNumber}.post.parameters[3].required" = false
"paths./licensetemplate/{licenseTemplateNumber}.post.parameters[3].type" = "boolean"
"paths./licensetemplate/{licenseTemplateNumber}.post.parameters[4].collectionFormat" = "multi"
"paths./licensetemplate/{licenseTemplateNumber}.post.parameters[4].description" = "type of licenses created from this license template. Supported types: FEATURE, TIMEVOLUME, FLOATING"
"paths./licensetemplate/{licenseTemplateNumber}.post.parameters[4].in" = "formData"
"paths./licensetemplate/{licenseTemplateNumber}.post.parameters[4].items.default" = "FEATURE"
"paths./licensetemplate/{licenseTemplateNumber}.post.parameters[4].items.enum.length" = 3
"paths./licensetemplate/{licenseTemplateNumber}.post.parameters[4].items.enum[0]" = "FEATURE"
"paths./licensetemplate/{licenseTemplateNumber}.post.parameters[4].items.enum[1]" = "TIMEVOLUME"
"paths./licensetemplate/{licenseTemplateNumber}.post.parameters[4].items.enum[2]" = "FLOATING"
"paths./licensetemplate/{licenseTemplateNumber}.post.parameters[4].items.type" = "string"
"paths./licensetemplate/{licenseTemplateNumber}.post.parameters[4].name" = "licenseType"
"paths./licensetemplate/{licenseTemplateNumber}.post.parameters[4].required" = false
"paths./licensetemplate/{licenseTemplateNumber}.post.parameters[4].type" = "array"
"paths./licensetemplate/{licenseTemplateNumber}.post.parameters[5].description" = "Mandatory for 'TIMEVOLUME' license type."
"paths./licensetemplate/{licenseTemplateNumber}.post.parameters[5].in" = "formData"
"paths./licensetemplate/{licenseTemplateNumber}.post.parameters[5].name" = "timeVolume"
"paths./licensetemplate/{licenseTemplateNumber}.post.parameters[5].required" = false
"paths./licensetemplate/{licenseTemplateNumber}.post.parameters[5].type" = "string"
"paths./licensetemplate/{licenseTemplateNumber}.post.parameters[6].description" = "Mandatory for 'FLOATING' license type."
"paths./licensetemplate/{licenseTemplateNumber}.post.parameters[6].in" = "formData"
"paths./licensetemplate/{licenseTemplateNumber}.post.parameters[6].name" = "maxSessions"
"paths./licensetemplate/{licenseTemplateNumber}.post.parameters[6].required" = false
"paths./licensetemplate/{licenseTemplateNumber}.post.parameters[6].type" = "string"
"paths./licensetemplate/{licenseTemplateNumber}.post.parameters[7].description" = "Price for the license. If >0, it must always be accompanied by the currency specification."
"paths./licensetemplate/{licenseTemplateNumber}.post.parameters[7].format" = "double"
"paths./licensetemplate/{licenseTemplateNumber}.post.parameters[7].in" = "formData"
"paths./licensetemplate/{licenseTemplateNumber}.post.parameters[7].name" = "price"
"paths./licensetemplate/{licenseTemplateNumber}.post.parameters[7].required" = false
"paths./licensetemplate/{licenseTemplateNumber}.post.parameters[7].type" = "number"
"paths./licensetemplate/{licenseTemplateNumber}.post.parameters[8].description" = "Specifies currency for the license price. Check data types to discover which currencies are supported."
"paths./licensetemplate/{licenseTemplateNumber}.post.parameters[8].in" = "formData"
"paths./licensetemplate/{licenseTemplateNumber}.post.parameters[8].name" = "currency"
"paths./licensetemplate/{licenseTemplateNumber}.post.parameters[8].required" = false
"paths./licensetemplate/{licenseTemplateNumber}.post.parameters[8].type" = "string"
"paths./licensetemplate/{licenseTemplateNumber}.post.parameters[9].description" = "If set to 'true', every new licensee automatically gets one license out of this license template on creation. Automatic licenses must have their price set to 0."
"paths./licensetemplate/{licenseTemplateNumber}.post.parameters[9].in" = "formData"
"paths./licensetemplate/{licenseTemplateNumber}.post.parameters[9].name" = "automatic"
"paths./licensetemplate/{licenseTemplateNumber}.post.parameters[9].required" = false
"paths./licensetemplate/{licenseTemplateNumber}.post.parameters[9].type" = "boolean"
"paths./licensetemplate/{licenseTemplateNumber}.post.responses.200.description" = "Successful request"
"paths./licensetemplate/{licenseTemplateNumber}.post.responses.200.schema.$ref" = "#/definitions/netlicensing"
"paths./licensetemplate/{licenseTemplateNumber}.post.responses.400.description" = "Malformed or illegal request"
"paths./licensetemplate/{licenseTemplateNumber}.post.responses.403.description" = "Access is denied"
"paths./licensetemplate/{licenseTemplateNumber}.post.responses.404.description" = "Resource not found"
"paths./licensetemplate/{licenseTemplateNumber}.post.responses.500.description" = "Internal service error"
"paths./licensetemplate/{licenseTemplateNumber}.post.security.length" = 1
"paths./licensetemplate/{licenseTemplateNumber}.post.security[0].basicAuth.length" = 0
"paths./licensetemplate/{licenseTemplateNumber}.post.summary" = "Update license template"
"paths./licensetemplate/{licenseTemplateNumber}.post.tags.length" = 1
"paths./licensetemplate/{licenseTemplateNumber}.post.tags[0]" = "License Template"
"paths./paymentmethod.get.description" = "Return a list of all payment methods for the current vendor"
"paths./paymentmethod.get.operationId" = "listPaymentMethods"
"paths./paymentmethod.get.responses.200.description" = "Successful request"
"paths./paymentmethod.get.responses.200.schema.items.$ref" = "#/definitions/netlicensing"
"paths./paymentmethod.get.responses.200.schema.type" = "array"
"paths./paymentmethod.get.responses.400.description" = "Malformed or illegal request"
"paths./paymentmethod.get.responses.403.description" = "Access is denied"
"paths./paymentmethod.get.responses.404.description" = "Resource not found"
"paths./paymentmethod.get.responses.500.description" = "Internal service error"
"paths./paymentmethod.get.security.length" = 1
"paths./paymentmethod.get.security[0].basicAuth.length" = 0
"paths./paymentmethod.get.summary" = "Payment Methods list"
"paths./paymentmethod.get.tags.length" = 1
"paths./paymentmethod.get.tags[0]" = "Payment Method"
"paths./paymentmethod/{paymentMethodNumber}.get.description" = "Return a payment method info by paymentMethodNumber"
"paths./paymentmethod/{paymentMethodNumber}.get.operationId" = "getPaymentMethod"
"paths./paymentmethod/{paymentMethodNumber}.get.parameters.length" = 1
"paths./paymentmethod/{paymentMethodNumber}.get.parameters[0].description" = "Payment method number"
"paths./paymentmethod/{paymentMethodNumber}.get.parameters[0].in" = "path"
"paths./paymentmethod/{paymentMethodNumber}.get.parameters[0].name" = "paymentMethodNumber"
"paths./paymentmethod/{paymentMethodNumber}.get.parameters[0].required" = true
"paths./paymentmethod/{paymentMethodNumber}.get.parameters[0].type" = "string"
"paths./paymentmethod/{paymentMethodNumber}.get.responses.200.description" = "Successful request"
"paths./paymentmethod/{paymentMethodNumber}.get.responses.200.schema.$ref" = "#/definitions/netlicensing"
"paths./paymentmethod/{paymentMethodNumber}.get.responses.400.description" = "Malformed or illegal request"
"paths./paymentmethod/{paymentMethodNumber}.get.responses.403.description" = "Access is denied"
"paths./paymentmethod/{paymentMethodNumber}.get.responses.404.description" = "Resource not found"
"paths./paymentmethod/{paymentMethodNumber}.get.responses.500.description" = "Internal service error"
"paths./paymentmethod/{paymentMethodNumber}.get.security.length" = 1
"paths./paymentmethod/{paymentMethodNumber}.get.security[0].basicAuth.length" = 0
"paths./paymentmethod/{paymentMethodNumber}.get.summary" = "Get payment method"
"paths./paymentmethod/{paymentMethodNumber}.get.tags.length" = 1
"paths./paymentmethod/{paymentMethodNumber}.get.tags[0]" = "Payment Method"
"paths./paymentmethod/{paymentMethodNumber}.post.consumes.length" = 1
"paths./paymentmethod/{paymentMethodNumber}.post.consumes[0]" = "application/x-www-form-urlencoded"
"paths./paymentmethod/{paymentMethodNumber}.post.description" = "Sets the provided properties to a payment method. Return an updated payment method"
"paths./paymentmethod/{paymentMethodNumber}.post.operationId" = "updatePaymentMethod"
"paths./paymentmethod/{paymentMethodNumber}.post.parameters.length" = 3
"paths./paymentmethod/{paymentMethodNumber}.post.parameters[0].description" = "Payment method number"
"paths./paymentmethod/{paymentMethodNumber}.post.parameters[0].in" = "path"
"paths./paymentmethod/{paymentMethodNumber}.post.parameters[0].name" = "paymentMethodNumber"
"paths./paymentmethod/{paymentMethodNumber}.post.parameters[0].required" = true
"paths./paymentmethod/{paymentMethodNumber}.post.parameters[0].type" = "string"
"paths./paymentmethod/{paymentMethodNumber}.post.parameters[1].description" = "If set to 'false', the payment method is disabled."
"paths./paymentmethod/{paymentMethodNumber}.post.parameters[1].in" = "formData"
"paths./paymentmethod/{paymentMethodNumber}.post.parameters[1].name" = "active"
"paths./paymentmethod/{paymentMethodNumber}.post.parameters[1].required" = false
"paths./paymentmethod/{paymentMethodNumber}.post.parameters[1].type" = "boolean"
"paths./paymentmethod/{paymentMethodNumber}.post.parameters[2].description" = "The e-mail address of the PayPal account for which you are making the API calls."
"paths./paymentmethod/{paymentMethodNumber}.post.parameters[2].in" = "formData"
"paths./paymentmethod/{paymentMethodNumber}.post.parameters[2].name" = "paypal.subject"
"paths./paymentmethod/{paymentMethodNumber}.post.parameters[2].required" = false
"paths./paymentmethod/{paymentMethodNumber}.post.parameters[2].type" = "string"
"paths./paymentmethod/{paymentMethodNumber}.post.responses.200.description" = "Successful request"
"paths./paymentmethod/{paymentMethodNumber}.post.responses.200.schema.$ref" = "#/definitions/netlicensing"
"paths./paymentmethod/{paymentMethodNumber}.post.responses.400.description" = "Malformed or illegal request"
"paths./paymentmethod/{paymentMethodNumber}.post.responses.403.description" = "Access is denied"
"paths./paymentmethod/{paymentMethodNumber}.post.responses.404.description" = "Resource not found"
"paths./paymentmethod/{paymentMethodNumber}.post.responses.500.description" = "Internal service error"
"paths./paymentmethod/{paymentMethodNumber}.post.security.length" = 1
"paths./paymentmethod/{paymentMethodNumber}.post.security[0].basicAuth.length" = 0
"paths./paymentmethod/{paymentMethodNumber}.post.summary" = "Update payment method"
"paths./paymentmethod/{paymentMethodNumber}.post.tags.length" = 1
"paths./paymentmethod/{paymentMethodNumber}.post.tags[0]" = "Payment Method"
"paths./product.get.description" = "Return a list of all configured products for the current vendor"
"paths./product.get.operationId" = "listProducts"
"paths./product.get.responses.200.description" = "Successful request"
"paths./product.get.responses.200.schema.items.$ref" = "#/definitions/netlicensing"
"paths./product.get.responses.200.schema.type" = "array"
"paths./product.get.responses.400.description" = "Malformed or illegal request"
"paths./product.get.responses.403.description" = "Access is denied"
"paths./product.get.responses.404.description" = "Resource not found"
"paths./product.get.responses.500.description" = "Internal service error"
"paths./product.get.security.length" = 1
"paths./product.get.security[0].basicAuth.length" = 0
"paths./product.get.summary" = "Products list"
"paths./product.get.tags.length" = 1
"paths./product.get.tags[0]" = "Product"
"paths./product.post.consumes.length" = 1
"paths./product.post.consumes[0]" = "application/x-www-form-urlencoded"
"paths./product.post.description" = "Creates a new product"
"paths./product.post.operationId" = "createProduct"
"paths./product.post.parameters.length" = 9
"paths./product.post.parameters[0].description" = "Unique number that identifies the product. Vendor can assign this number when creating a product or let NetLicensing generate one."
"paths./product.post.parameters[0].in" = "formData"
"paths./product.post.parameters[0].name" = "number"
"paths./product.post.parameters[0].required" = false
"paths./product.post.parameters[0].type" = "string"
"paths./product.post.parameters[1].description" = "If set to 'false', the product is disabled. No new licensees can be registered for the product, existing licensees can not obtain new licenses."
"paths./product.post.parameters[1].in" = "formData"
"paths./product.post.parameters[1].name" = "active"
"paths./product.post.parameters[1].required" = true
"paths./product.post.parameters[1].type" = "boolean"
"paths./product.post.parameters[2].description" = "Product name. Together with the version identifies the product for the end customer."
"paths./product.post.parameters[2].in" = "formData"
"paths./product.post.parameters[2].name" = "name"
"paths./product.post.parameters[2].required" = true
"paths./product.post.parameters[2].type" = "string"
"paths./product.post.parameters[3].description" = "Product version. Convenience parameter, additional to the product name."
"paths./product.post.parameters[3].in" = "formData"
"paths./product.post.parameters[3].name" = "version"
"paths./product.post.parameters[3].required" = true
"paths./product.post.parameters[3].type" = "string"
"paths./product.post.parameters[4].description" = "If set to 'true', non-existing licensees will be created at first validation attempt."
"paths./product.post.parameters[4].in" = "formData"
"paths./product.post.parameters[4].name" = "licenseeAutoCreate"
"paths./product.post.parameters[4].required" = false
"paths./product.post.parameters[4].type" = "boolean"
"paths./product.post.parameters[5].description" = "Product description."
"paths./product.post.parameters[5].in" = "formData"
"paths./product.post.parameters[5].name" = "description"
"paths./product.post.parameters[5].required" = false
"paths./product.post.parameters[5].type" = "string"
"paths./product.post.parameters[6].description" = "Licensing information."
"paths./product.post.parameters[6].in" = "formData"
"paths./product.post.parameters[6].name" = "licensingInfo"
"paths./product.post.parameters[6].required" = false
"paths./product.post.parameters[6].type" = "string"
"paths./product.post.parameters[7].description" = "Licensee secret mode for product. Supported types: DISABLED, PREDEFINED, CLIENT"
"paths./product.post.parameters[7].enum.length" = 3
"paths./product.post.parameters[7].enum[0]" = "DISABLED"
"paths./product.post.parameters[7].enum[1]" = "PREDEFINED"
"paths./product.post.parameters[7].enum[2]" = "CLIENT"
"paths./product.post.parameters[7].in" = "formData"
"paths./product.post.parameters[7].name" = "licenseeSecretMode"
"paths./product.post.parameters[7].required" = false
"paths./product.post.parameters[7].type" = "string"
"paths./product.post.parameters[8].description" = "Vat mode for product. Supported types: GROSS, NET"
"paths./product.post.parameters[8].enum.length" = 2
"paths./product.post.parameters[8].enum[0]" = "GROSS"
"paths./product.post.parameters[8].enum[1]" = "NET"
"paths./product.post.parameters[8].in" = "formData"
"paths./product.post.parameters[8].name" = "vatMode"
"paths./product.post.parameters[8].required" = false
"paths./product.post.parameters[8].type" = "string"
"paths./product.post.responses.200.description" = "Successful request"
"paths./product.post.responses.200.schema.$ref" = "#/definitions/netlicensing"
"paths./product.post.responses.400.description" = "Malformed or illegal request"
"paths./product.post.responses.403.description" = "Access is denied"
"paths./product.post.responses.404.description" = "Resource not found"
"paths./product.post.responses.500.description" = "Internal service error"
"paths./product.post.security.length" = 1
"paths./product.post.security[0].basicAuth.length" = 0
"paths./product.post.summary" = "Create product"
"paths./product.post.tags.length" = 1
"paths./product.post.tags[0]" = "Product"
"paths./product/{productNumber}.delete.consumes.length" = 1
"paths./product/{productNumber}.delete.consumes[0]" = "application/x-www-form-urlencoded"
"paths./product/{productNumber}.delete.description" = "Delete a product by number"
"paths./product/{productNumber}.delete.operationId" = "deleteProduct"
"paths./product/{productNumber}.delete.parameters.length" = 2
"paths./product/{productNumber}.delete.parameters[0].description" = "Unique number that identifies the product."
"paths./product/{productNumber}.delete.parameters[0].in" = "path"
"paths./product/{productNumber}.delete.parameters[0].name" = "productNumber"
"paths./product/{productNumber}.delete.parameters[0].required" = true
"paths./product/{productNumber}.delete.parameters[0].type" = "string"
"paths./product/{productNumber}.delete.parameters[1].description" = "Force object deletion and all descendants."
"paths./product/{productNumber}.delete.parameters[1].in" = "query"
"paths./product/{productNumber}.delete.parameters[1].name" = "forceCascade"
"paths./product/{productNumber}.delete.parameters[1].required" = false
"paths./product/{productNumber}.delete.parameters[1].type" = "boolean"
"paths./product/{productNumber}.delete.responses.200.description" = "Successful request"
"paths./product/{productNumber}.delete.responses.200.schema.$ref" = "#/definitions/netlicensing"
"paths./product/{productNumber}.delete.responses.400.description" = "Malformed or illegal request"
"paths./product/{productNumber}.delete.responses.403.description" = "Access is denied"
"paths./product/{productNumber}.delete.responses.404.description" = "Resource not found"
"paths./product/{productNumber}.delete.responses.500.description" = "Internal service error"
"paths./product/{productNumber}.delete.security.length" = 1
"paths./product/{productNumber}.delete.security[0].basicAuth.length" = 0
"paths./product/{productNumber}.delete.summary" = "Delete product"
"paths./product/{productNumber}.delete.tags.length" = 1
"paths./product/{productNumber}.delete.tags[0]" = "Product"
"paths./product/{productNumber}.get.description" = "Return a product by productNumber"
"paths./product/{productNumber}.get.operationId" = "productNumber"
"paths./product/{productNumber}.get.parameters.length" = 1
"paths./product/{productNumber}.get.parameters[0].description" = "Unique number that identifies the product."
"paths./product/{productNumber}.get.parameters[0].in" = "path"
"paths./product/{productNumber}.get.parameters[0].name" = "productNumber"
"paths./product/{productNumber}.get.parameters[0].required" = true
"paths./product/{productNumber}.get.parameters[0].type" = "string"
"paths./product/{productNumber}.get.responses.200.description" = "Successful request"
"paths./product/{productNumber}.get.responses.200.schema.$ref" = "#/definitions/netlicensing"
"paths./product/{productNumber}.get.responses.400.description" = "Malformed or illegal request"
"paths./product/{productNumber}.get.responses.403.description" = "Access is denied"
"paths./product/{productNumber}.get.responses.404.description" = "Resource not found"
"paths./product/{productNumber}.get.responses.500.description" = "Internal service error"
"paths./product/{productNumber}.get.security.length" = 1
"paths./product/{productNumber}.get.security[0].basicAuth.length" = 0
"paths./product/{productNumber}.get.summary" = "Get product"
"paths./product/{productNumber}.get.tags.length" = 1
"paths./product/{productNumber}.get.tags[0]" = "Product"
"paths./product/{productNumber}.post.consumes.length" = 1
"paths./product/{productNumber}.post.consumes[0]" = "application/x-www-form-urlencoded"
"paths./product/{productNumber}.post.description" = "Sets the provided properties to a product. Return an updated product"
"paths./product/{productNumber}.post.operationId" = "updateProduct"
"paths./product/{productNumber}.post.parameters.length" = 10
"paths./product/{productNumber}.post.parameters[0].description" = "Unique number that identifies the product."
"paths./product/{productNumber}.post.parameters[0].in" = "path"
"paths./product/{productNumber}.post.parameters[0].name" = "productNumber"
"paths./product/{productNumber}.post.parameters[0].required" = true
"paths./product/{productNumber}.post.parameters[0].type" = "string"
"paths./product/{productNumber}.post.parameters[1].description" = "New product number (update)"
"paths./product/{productNumber}.post.parameters[1].in" = "formData"
"paths./product/{productNumber}.post.parameters[1].name" = "number"
"paths./product/{productNumber}.post.parameters[1].required" = false
"paths./product/{productNumber}.post.parameters[1].type" = "string"
"paths./product/{productNumber}.post.parameters[2].description" = "If set to 'false', the product is disabled. No new licensees can be registered for the product, existing licensees can not obtain new licenses."
"paths./product/{productNumber}.post.parameters[2].in" = "formData"
"paths./product/{productNumber}.post.parameters[2].name" = "active"
"paths./product/{productNumber}.post.parameters[2].required" = false
"paths./product/{productNumber}.post.parameters[2].type" = "boolean"
"paths./product/{productNumber}.post.parameters[3].description" = "Product name. Together with the version identifies the product for the end customer."
"paths./product/{productNumber}.post.parameters[3].in" = "formData"
"paths./product/{productNumber}.post.parameters[3].name" = "name"
"paths./product/{productNumber}.post.parameters[3].required" = false
"paths./product/{productNumber}.post.parameters[3].type" = "string"
"paths./product/{productNumber}.post.parameters[4].description" = "Product version. Convenience parameter, additional to the product name."
"paths./product/{productNumber}.post.parameters[4].in" = "formData"
"paths./product/{productNumber}.post.parameters[4].name" = "version"
"paths./product/{productNumber}.post.parameters[4].required" = false
"paths./product/{productNumber}.post.parameters[4].type" = "string"
"paths./product/{productNumber}.post.parameters[5].description" = "If set to 'true', non-existing licensees will be created at first validation attempt."
"paths./product/{productNumber}.post.parameters[5].in" = "formData"
"paths./product/{productNumber}.post.parameters[5].name" = "licenseeAutoCreate"
"paths./product/{productNumber}.post.parameters[5].required" = false
"paths./product/{productNumber}.post.parameters[5].type" = "boolean"
"paths./product/{productNumber}.post.parameters[6].description" = "Product description."
"paths./product/{productNumber}.post.parameters[6].in" = "formData"
"paths./product/{productNumber}.post.parameters[6].name" = "description"
"paths./product/{productNumber}.post.parameters[6].required" = false
"paths./product/{productNumber}.post.parameters[6].type" = "string"
"paths./product/{productNumber}.post.parameters[7].description" = "Licensing information."
"paths./product/{productNumber}.post.parameters[7].in" = "formData"
"paths./product/{productNumber}.post.parameters[7].name" = "licensingInfo"
"paths./product/{productNumber}.post.parameters[7].required" = false
"paths./product/{productNumber}.post.parameters[7].type" = "string"
"paths./product/{productNumber}.post.parameters[8].description" = "Licensee secret mode for product. Supported types: DISABLED, PREDEFINED, CLIENT"
"paths./product/{productNumber}.post.parameters[8].enum.length" = 3
"paths./product/{productNumber}.post.parameters[8].enum[0]" = "DISABLED"
"paths./product/{productNumber}.post.parameters[8].enum[1]" = "PREDEFINED"
"paths./product/{productNumber}.post.parameters[8].enum[2]" = "CLIENT"
"paths./product/{productNumber}.post.parameters[8].in" = "formData"
"paths./product/{productNumber}.post.parameters[8].name" = "licenseeSecretMode"
"paths./product/{productNumber}.post.parameters[8].required" = false
"paths./product/{productNumber}.post.parameters[8].type" = "string"
"paths./product/{productNumber}.post.parameters[9].description" = "Vat mode for product. Supported types: GROSS, NET"
"paths./product/{productNumber}.post.parameters[9].enum.length" = 2
"paths./product/{productNumber}.post.parameters[9].enum[0]" = "GROSS"
"paths./product/{productNumber}.post.parameters[9].enum[1]" = "NET"
"paths./product/{productNumber}.post.parameters[9].in" = "formData"
"paths./product/{productNumber}.post.parameters[9].name" = "vatMode"
"paths./product/{productNumber}.post.parameters[9].required" = false
"paths./product/{productNumber}.post.parameters[9].type" = "string"
"paths./product/{productNumber}.post.responses.200.description" = "Successful request"
"paths./product/{productNumber}.post.responses.200.schema.$ref" = "#/definitions/netlicensing"
"paths./product/{productNumber}.post.responses.400.description" = "Malformed or illegal request"
"paths./product/{productNumber}.post.responses.403.description" = "Access is denied"
"paths./product/{productNumber}.post.responses.404.description" = "Resource not found"
"paths./product/{productNumber}.post.responses.500.description" = "Internal service error"
"paths./product/{productNumber}.post.security.length" = 1
"paths./product/{productNumber}.post.security[0].basicAuth.length" = 0
"paths./product/{productNumber}.post.summary" = "Update product"
"paths./product/{productNumber}.post.tags.length" = 1
"paths./product/{productNumber}.post.tags[0]" = "Product"
"paths./productmodule.get.description" = "Return a list of all product modules for the current vendor"
"paths./productmodule.get.operationId" = "listProductModules"
"paths./productmodule.get.responses.200.description" = "Successful request"
"paths./productmodule.get.responses.200.schema.items.$ref" = "#/definitions/netlicensing"
"paths./productmodule.get.responses.200.schema.type" = "array"
"paths./productmodule.get.responses.400.description" = "Malformed or illegal request"
"paths./productmodule.get.responses.403.description" = "Access is denied"
"paths./productmodule.get.responses.404.description" = "Resource not found"
"paths./productmodule.get.responses.500.description" = "Internal service error"
"paths./productmodule.get.security.length" = 1
"paths./productmodule.get.security[0].basicAuth.length" = 0
"paths./productmodule.get.summary" = "Product Modules list"
"paths./productmodule.get.tags.length" = 1
"paths./productmodule.get.tags[0]" = "Product Module"
"paths./productmodule.post.consumes.length" = 1
"paths./productmodule.post.consumes[0]" = "application/x-www-form-urlencoded"
"paths./productmodule.post.description" = "Creates a new product module"
"paths./productmodule.post.operationId" = "createProductModule"
"paths./productmodule.post.parameters.length" = 9
"paths./productmodule.post.parameters[0].description" = "Unique number (across all products of a vendor) that identifies the product module. Vendor can assign this number when creating a product module or let NetLicensing generate one. Read-only after creation of the first licensee for the product."
"paths./productmodule.post.parameters[0].in" = "formData"
"paths./productmodule.post.parameters[0].name" = "productNumber"
"paths./productmodule.post.parameters[0].required" = true
"paths./productmodule.post.parameters[0].type" = "string"
"paths./productmodule.post.parameters[1].description" = "Unique number (across all products of a vendor) that identifies the product module. Vendor can assign this number when creating a product module or let NetLicensing generate one. Read-only after creation of the first licensee for the product."
"paths./productmodule.post.parameters[1].in" = "formData"
"paths./productmodule.post.parameters[1].name" = "number"
"paths./productmodule.post.parameters[1].required" = false
"paths./productmodule.post.parameters[1].type" = "string"
"paths./productmodule.post.parameters[2].description" = "If set to 'false', the product module is disabled. Licensees can not obtain any new licenses for this product module."
"paths./productmodule.post.parameters[2].in" = "formData"
"paths./productmodule.post.parameters[2].name" = "active"
"paths./productmodule.post.parameters[2].required" = true
"paths./productmodule.post.parameters[2].type" = "boolean"
"paths./productmodule.post.parameters[3].description" = "Product module name that is visible to the end customers in NetLicensing Shop."
"paths./productmodule.post.parameters[3].in" = "formData"
"paths./productmodule.post.parameters[3].name" = "name"
"paths./productmodule.post.parameters[3].required" = true
"paths./productmodule.post.parameters[3].type" = "string"
"paths./productmodule.post.parameters[4].collectionFormat" = "multi"
"paths./productmodule.post.parameters[4].description" = "Licensing model applied to this product module. Defines what license templates can be configured for the product module and how licenses for this product module are processed during validation."
"paths./productmodule.post.parameters[4].in" = "formData"
"paths./productmodule.post.parameters[4].items.default" = "Subscription"
"paths./productmodule.post.parameters[4].items.enum.length" = 4
"paths./productmodule.post.parameters[4].items.enum[0]" = "Subscription"
"paths./productmodule.post.parameters[4].items.enum[1]" = "TryAndBuy"
"paths./productmodule.post.parameters[4].items.enum[2]" = "Rental"
"paths./productmodule.post.parameters[4].items.enum[3]" = "Floating"
"paths./productmodule.post.parameters[4].items.type" = "string"
"paths./productmodule.post.parameters[4].name" = "licensingModel"
"paths./productmodule.post.parameters[4].required" = true
"paths./productmodule.post.parameters[4].type" = "array"
"paths./productmodule.post.parameters[5].description" = "Maximum checkout validity (days). Mandatory for 'Floating' licensing model."
"paths./productmodule.post.parameters[5].format" = "int32"
"paths./productmodule.post.parameters[5].in" = "formData"
"paths./productmodule.post.parameters[5].name" = "maxCheckoutValidity"
"paths./productmodule.post.parameters[5].required" = false
"paths./productmodule.post.parameters[5].type" = "integer"
"paths./productmodule.post.parameters[6].description" = "Remaining time volume for yellow level. Mandatory for 'Rental' licensing model."
"paths./productmodule.post.parameters[6].format" = "int32"
"paths./productmodule.post.parameters[6].in" = "formData"
"paths./productmodule.post.parameters[6].name" = "yellowThreshold"
"paths./productmodule.post.parameters[6].required" = false
"paths./productmodule.post.parameters[6].type" = "integer"
"paths./productmodule.post.parameters[7].description" = "Remaining time volume for red level. Mandatory for 'Rental' licensing model."
"paths./productmodule.post.parameters[7].format" = "int32"
"paths./productmodule.post.parameters[7].in" = "formData"
"paths./productmodule.post.parameters[7].name" = "redThreshold"
"paths./productmodule.post.parameters[7].required" = false
"paths./productmodule.post.parameters[7].type" = "integer"
"paths./productmodule.post.parameters[8].description" = "License template. Mandatory for 'Try &amp; Buy' licensing model."
"paths./productmodule.post.parameters[8].in" = "formData"
"paths./productmodule.post.parameters[8].items.default" = "TIMEVOLUME"
"paths./productmodule.post.parameters[8].items.enum.length" = 2
"paths./productmodule.post.parameters[8].items.enum[0]" = "TIMEVOLUME"
"paths./productmodule.post.parameters[8].items.enum[1]" = "FEATURE"
"paths./productmodule.post.parameters[8].items.type" = "string"
"paths./productmodule.post.parameters[8].name" = "licenseTemplate"
"paths./productmodule.post.parameters[8].required" = false
"paths./productmodule.post.parameters[8].type" = "array"
"paths./productmodule.post.responses.200.description" = "Successful request"
"paths./productmodule.post.responses.200.schema.$ref" = "#/definitions/netlicensing"
"paths./productmodule.post.responses.400.description" = "Malformed or illegal request"
"paths./productmodule.post.responses.403.description" = "Access is denied"
"paths./productmodule.post.responses.404.description" = "Resource not found"
"paths./productmodule.post.responses.500.description" = "Internal service error"
"paths./productmodule.post.security.length" = 1
"paths./productmodule.post.security[0].basicAuth.length" = 0
"paths./productmodule.post.summary" = "Create product module"
"paths./productmodule.post.tags.length" = 1
"paths./productmodule.post.tags[0]" = "Product Module"
"paths./productmodule/{productModuleNumber}.delete.description" = "Delete a product module by number"
"paths./productmodule/{productModuleNumber}.delete.operationId" = "deleteProductModule"
"paths./productmodule/{productModuleNumber}.delete.parameters.length" = 2
"paths./productmodule/{productModuleNumber}.delete.parameters[0].description" = "Unique number (across all products of a vendor) that identifies the product module."
"paths./productmodule/{productModuleNumber}.delete.parameters[0].in" = "path"
"paths./productmodule/{productModuleNumber}.delete.parameters[0].name" = "productModuleNumber"
"paths./productmodule/{productModuleNumber}.delete.parameters[0].required" = true
"paths./productmodule/{productModuleNumber}.delete.parameters[0].type" = "string"
"paths./productmodule/{productModuleNumber}.delete.parameters[1].description" = "Force object deletion and all descendants."
"paths./productmodule/{productModuleNumber}.delete.parameters[1].in" = "query"
"paths./productmodule/{productModuleNumber}.delete.parameters[1].name" = "forceCascade"
"paths./productmodule/{productModuleNumber}.delete.parameters[1].required" = false
"paths./productmodule/{productModuleNumber}.delete.parameters[1].type" = "boolean"
"paths./productmodule/{productModuleNumber}.delete.responses.200.description" = "Successful request"
"paths./productmodule/{productModuleNumber}.delete.responses.200.schema.$ref" = "#/definitions/netlicensing"
"paths./productmodule/{productModuleNumber}.delete.responses.400.description" = "Malformed or illegal request"
"paths./productmodule/{productModuleNumber}.delete.responses.403.description" = "Access is denied"
"paths./productmodule/{productModuleNumber}.delete.responses.404.description" = "Resource not found"
"paths./productmodule/{productModuleNumber}.delete.responses.500.description" = "Internal service error"
"paths./productmodule/{productModuleNumber}.delete.security.length" = 1
"paths./productmodule/{productModuleNumber}.delete.security[0].basicAuth.length" = 0
"paths./productmodule/{productModuleNumber}.delete.summary" = "Delete product module"
"paths./productmodule/{productModuleNumber}.delete.tags.length" = 1
"paths./productmodule/{productModuleNumber}.delete.tags[0]" = "Product Module"
"paths./productmodule/{productModuleNumber}.get.description" = "Return a product module by productModuleNumber"
"paths./productmodule/{productModuleNumber}.get.operationId" = "getProductModule"
"paths./productmodule/{productModuleNumber}.get.parameters.length" = 1
"paths./productmodule/{productModuleNumber}.get.parameters[0].description" = "Unique number (across all products of a vendor) that identifies the product module. Vendor can assign this number when creating a product module or let NetLicensing generate one. Read-only after creation of the first licensee for the product."
"paths./productmodule/{productModuleNumber}.get.parameters[0].in" = "path"
"paths./productmodule/{productModuleNumber}.get.parameters[0].name" = "productModuleNumber"
"paths./productmodule/{productModuleNumber}.get.parameters[0].required" = true
"paths./productmodule/{productModuleNumber}.get.parameters[0].type" = "string"
"paths./productmodule/{productModuleNumber}.get.responses.200.description" = "Successful request"
"paths./productmodule/{productModuleNumber}.get.responses.200.schema.$ref" = "#/definitions/netlicensing"
"paths./productmodule/{productModuleNumber}.get.responses.400.description" = "Malformed or illegal request"
"paths./productmodule/{productModuleNumber}.get.responses.403.description" = "Access is denied"
"paths./productmodule/{productModuleNumber}.get.responses.404.description" = "Resource not found"
"paths./productmodule/{productModuleNumber}.get.responses.500.description" = "Internal service error"
"paths./productmodule/{productModuleNumber}.get.security.length" = 1
"paths./productmodule/{productModuleNumber}.get.security[0].basicAuth.length" = 0
"paths./productmodule/{productModuleNumber}.get.summary" = "Get product module"
"paths./productmodule/{productModuleNumber}.get.tags.length" = 1
"paths./productmodule/{productModuleNumber}.get.tags[0]" = "Product Module"
"paths./productmodule/{productModuleNumber}.post.consumes.length" = 1
"paths./productmodule/{productModuleNumber}.post.consumes[0]" = "application/x-www-form-urlencoded"
"paths./productmodule/{productModuleNumber}.post.description" = "Sets the provided properties to a product module. Return an updated product module"
"paths./productmodule/{productModuleNumber}.post.operationId" = "updateProductModule"
"paths./productmodule/{productModuleNumber}.post.parameters.length" = 9
"paths./productmodule/{productModuleNumber}.post.parameters[0].description" = "Unique number (across all products of a vendor) that identifies the product module. Vendor can assign this number when creating a product module or let NetLicensing generate one. Read-only after creation of the first licensee for the product."
"paths./productmodule/{productModuleNumber}.post.parameters[0].in" = "path"
"paths./productmodule/{productModuleNumber}.post.parameters[0].name" = "productModuleNumber"
"paths./productmodule/{productModuleNumber}.post.parameters[0].required" = true
"paths./productmodule/{productModuleNumber}.post.parameters[0].type" = "string"
"paths./productmodule/{productModuleNumber}.post.parameters[1].description" = "New product module number (update)."
"paths./productmodule/{productModuleNumber}.post.parameters[1].in" = "formData"
"paths./productmodule/{productModuleNumber}.post.parameters[1].name" = "number"
"paths./productmodule/{productModuleNumber}.post.parameters[1].required" = false
"paths./productmodule/{productModuleNumber}.post.parameters[1].type" = "string"
"paths./productmodule/{productModuleNumber}.post.parameters[2].description" = "If set to 'false', the product module is disabled. Licensees can not obtain any new licenses for this product module."
"paths./productmodule/{productModuleNumber}.post.parameters[2].in" = "formData"
"paths./productmodule/{productModuleNumber}.post.parameters[2].name" = "active"
"paths./productmodule/{productModuleNumber}.post.parameters[2].required" = false
"paths./productmodule/{productModuleNumber}.post.parameters[2].type" = "boolean"
"paths./productmodule/{productModuleNumber}.post.parameters[3].description" = "Product module name that is visible to the end customers in NetLicensing Shop."
"paths./productmodule/{productModuleNumber}.post.parameters[3].in" = "formData"
"paths./productmodule/{productModuleNumber}.post.parameters[3].name" = "name"
"paths./productmodule/{productModuleNumber}.post.parameters[3].required" = false
"paths./productmodule/{productModuleNumber}.post.parameters[3].type" = "string"
"paths./productmodule/{productModuleNumber}.post.parameters[4].collectionFormat" = "multi"
"paths./productmodule/{productModuleNumber}.post.parameters[4].description" = "Licensing model applied to this product module. Defines what license templates can be configured for the product module and how licenses for this product module are processed during validation."
"paths./productmodule/{productModuleNumber}.post.parameters[4].in" = "formData"
"paths./productmodule/{productModuleNumber}.post.parameters[4].items.default" = "Subscription"
"paths./productmodule/{productModuleNumber}.post.parameters[4].items.enum.length" = 4
"paths./productmodule/{productModuleNumber}.post.parameters[4].items.enum[0]" = "Subscription"
"paths./productmodule/{productModuleNumber}.post.parameters[4].items.enum[1]" = "TryAndBuy"
"paths./productmodule/{productModuleNumber}.post.parameters[4].items.enum[2]" = "Rental"
"paths./productmodule/{productModuleNumber}.post.parameters[4].items.enum[3]" = "Floating"
"paths./productmodule/{productModuleNumber}.post.parameters[4].items.type" = "string"
"paths./productmodule/{productModuleNumber}.post.parameters[4].name" = "licensingModel"
"paths./productmodule/{productModuleNumber}.post.parameters[4].required" = false
"paths./productmodule/{productModuleNumber}.post.parameters[4].type" = "array"
"paths./productmodule/{productModuleNumber}.post.parameters[5].description" = "Maximum checkout validity (days). Mandatory for 'Floating' licensing model."
"paths./productmodule/{productModuleNumber}.post.parameters[5].format" = "int32"
"paths./productmodule/{productModuleNumber}.post.parameters[5].in" = "formData"
"paths./productmodule/{productModuleNumber}.post.parameters[5].name" = "maxCheckoutValidity"
"paths./productmodule/{productModuleNumber}.post.parameters[5].required" = false
"paths./productmodule/{productModuleNumber}.post.parameters[5].type" = "integer"
"paths./productmodule/{productModuleNumber}.post.parameters[6].description" = "Remaining time volume for yellow level. Mandatory for 'Rental' licensing model."
"paths./productmodule/{productModuleNumber}.post.parameters[6].format" = "int32"
"paths./productmodule/{productModuleNumber}.post.parameters[6].in" = "formData"
"paths./productmodule/{productModuleNumber}.post.parameters[6].name" = "yellowThreshold"
"paths./productmodule/{productModuleNumber}.post.parameters[6].required" = false
"paths./productmodule/{productModuleNumber}.post.parameters[6].type" = "integer"
"paths./productmodule/{productModuleNumber}.post.parameters[7].description" = "Remaining time volume for red level. Mandatory for 'Rental' licensing model."
"paths./productmodule/{productModuleNumber}.post.parameters[7].format" = "int32"
"paths./productmodule/{productModuleNumber}.post.parameters[7].in" = "formData"
"paths./productmodule/{productModuleNumber}.post.parameters[7].name" = "redThreshold"
"paths./productmodule/{productModuleNumber}.post.parameters[7].required" = false
"paths./productmodule/{productModuleNumber}.post.parameters[7].type" = "integer"
"paths./productmodule/{productModuleNumber}.post.parameters[8].description" = "License template. Mandatory for 'Try &amp; Buy' licensing model."
"paths./productmodule/{productModuleNumber}.post.parameters[8].in" = "formData"
"paths./productmodule/{productModuleNumber}.post.parameters[8].items.default" = "TIMEVOLUME"
"paths./productmodule/{productModuleNumber}.post.parameters[8].items.enum.length" = 2
"paths./productmodule/{productModuleNumber}.post.parameters[8].items.enum[0]" = "TIMEVOLUME"
"paths./productmodule/{productModuleNumber}.post.parameters[8].items.enum[1]" = "FEATURE"
"paths./productmodule/{productModuleNumber}.post.parameters[8].items.type" = "string"
"paths./productmodule/{productModuleNumber}.post.parameters[8].name" = "licenseTemplate"
"paths./productmodule/{productModuleNumber}.post.parameters[8].required" = false
"paths./productmodule/{productModuleNumber}.post.parameters[8].type" = "array"
"paths./productmodule/{productModuleNumber}.post.responses.200.description" = "Successful request"
"paths./productmodule/{productModuleNumber}.post.responses.200.schema.$ref" = "#/definitions/netlicensing"
"paths./productmodule/{productModuleNumber}.post.responses.400.description" = "Malformed or illegal request"
"paths./productmodule/{productModuleNumber}.post.responses.403.description" = "Access is denied"
"paths./productmodule/{productModuleNumber}.post.responses.404.description" = "Resource not found"
"paths./productmodule/{productModuleNumber}.post.responses.500.description" = "Internal service error"
"paths./productmodule/{productModuleNumber}.post.security.length" = 1
"paths./productmodule/{productModuleNumber}.post.security[0].basicAuth.length" = 0
"paths./productmodule/{productModuleNumber}.post.summary" = "Update product module"
"paths./productmodule/{productModuleNumber}.post.tags.length" = 1
"paths./productmodule/{productModuleNumber}.post.tags[0]" = "Product Module"
"paths./token.get.description" = "Return a list of all tokens for the current vendor"
"paths./token.get.operationId" = "listTokens"
"paths./token.get.responses.200.description" = "Successful request"
"paths./token.get.responses.200.schema.items.$ref" = "#/definitions/netlicensing"
"paths./token.get.responses.200.schema.type" = "array"
"paths./token.get.responses.400.description" = "Malformed or illegal request"
"paths./token.get.responses.403.description" = "Access is denied"
"paths./token.get.responses.404.description" = "Resource not found"
"paths./token.get.responses.500.description" = "Internal service error"
"paths./token.get.security.length" = 1
"paths./token.get.security[0].basicAuth.length" = 0
"paths./token.get.summary" = "Tokens list"
"paths./token.get.tags.length" = 1
"paths./token.get.tags[0]" = "Token"
"paths./token.post.consumes.length" = 1
"paths./token.post.consumes[0]" = "application/x-www-form-urlencoded"
"paths./token.post.description" = "Create token by tokenType and additional token parameters"
"paths./token.post.operationId" = "createToken"
"paths./token.post.parameters.length" = 6
"paths./token.post.parameters[0].collectionFormat" = "multi"
"paths./token.post.parameters[0].description" = "Token type to be generated"
"paths./token.post.parameters[0].enum.length" = 3
"paths./token.post.parameters[0].enum[0]" = "DEFAULT"
"paths./token.post.parameters[0].enum[1]" = "SHOP"
"paths./token.post.parameters[0].enum[2]" = "APIKEY"
"paths./token.post.parameters[0].in" = "formData"
"paths./token.post.parameters[0].name" = "tokenType"
"paths./token.post.parameters[0].required" = true
"paths./token.post.parameters[0].type" = "string"
"paths./token.post.parameters[1].description" = "for <i>tokenType=SHOP</i> only (mandatory); identifies licensee that will be assigned to the shop token"
"paths./token.post.parameters[1].in" = "formData"
"paths./token.post.parameters[1].name" = "licenseeNumber"
"paths./token.post.parameters[1].required" = false
"paths./token.post.parameters[1].type" = "string"
"paths./token.post.parameters[2].description" = "for <i>tokenType=SHOP</i> only; take customers to this URL when they finish checkout"
"paths./token.post.parameters[2].in" = "formData"
"paths./token.post.parameters[2].name" = "successURL"
"paths./token.post.parameters[2].required" = false
"paths./token.post.parameters[2].type" = "string"
"paths./token.post.parameters[3].description" = "for <i>tokenType=SHOP</i> only; shop link title for successful checkout process"
"paths./token.post.parameters[3].in" = "formData"
"paths./token.post.parameters[3].name" = "successURLTitle"
"paths./token.post.parameters[3].required" = false
"paths./token.post.parameters[3].type" = "string"
"paths./token.post.parameters[4].description" = "for <i>tokenType=SHOP</i> only; take customers to this URL when they cancel their checkout"
"paths./token.post.parameters[4].in" = "formData"
"paths./token.post.parameters[4].name" = "cancelURL"
"paths./token.post.parameters[4].required" = false
"paths./token.post.parameters[4].type" = "string"
"paths./token.post.parameters[5].description" = "for <i>tokenType=SHOP</i> only; shop link title for cancel checkout process"
"paths./token.post.parameters[5].in" = "formData"
"paths./token.post.parameters[5].name" = "cancelURLTitle"
"paths./token.post.parameters[5].required" = false
"paths./token.post.parameters[5].type" = "string"
"paths./token.post.responses.200.description" = "Successful request"
"paths./token.post.responses.200.schema.$ref" = "#/definitions/netlicensing"
"paths./token.post.responses.400.description" = "Malformed or illegal request"
"paths./token.post.responses.403.description" = "Access is denied"
"paths./token.post.responses.404.description" = "Resource not found"
"paths./token.post.responses.500.description" = "Internal service error"
"paths./token.post.security.length" = 1
"paths./token.post.security[0].api_key.length" = 0
"paths./token.post.security[0].basicAuth.length" = 0
"paths./token.post.summary" = "Create token"
"paths./token.post.tags.length" = 1
"paths./token.post.tags[0]" = "Token"
"paths./token/{tokenNumber}.delete.description" = "Delete a token by number"
"paths./token/{tokenNumber}.delete.operationId" = "deleteToken"
"paths./token/{tokenNumber}.delete.parameters.length" = 1
"paths./token/{tokenNumber}.delete.parameters[0].description" = "Token number"
"paths./token/{tokenNumber}.delete.parameters[0].in" = "path"
"paths./token/{tokenNumber}.delete.parameters[0].name" = "tokenNumber"
"paths./token/{tokenNumber}.delete.parameters[0].required" = true
"paths./token/{tokenNumber}.delete.parameters[0].type" = "string"
"paths./token/{tokenNumber}.delete.responses.200.description" = "Successful request"
"paths./token/{tokenNumber}.delete.responses.200.schema.$ref" = "#/definitions/netlicensing"
"paths./token/{tokenNumber}.delete.responses.400.description" = "Malformed or illegal request"
"paths./token/{tokenNumber}.delete.responses.403.description" = "Access is denied"
"paths./token/{tokenNumber}.delete.responses.404.description" = "Resource not found"
"paths./token/{tokenNumber}.delete.responses.500.description" = "Internal service error"
"paths./token/{tokenNumber}.delete.security.length" = 1
"paths./token/{tokenNumber}.delete.security[0].basicAuth.length" = 0
"paths./token/{tokenNumber}.delete.summary" = "Delete token"
"paths./token/{tokenNumber}.delete.tags.length" = 1
"paths./token/{tokenNumber}.delete.tags[0]" = "Token"
"paths./token/{tokenNumber}.get.description" = "Return a token by tokenNumber"
"paths./token/{tokenNumber}.get.operationId" = "getToken"
"paths./token/{tokenNumber}.get.parameters.length" = 1
"paths./token/{tokenNumber}.get.parameters[0].description" = "Token number"
"paths./token/{tokenNumber}.get.parameters[0].in" = "path"
"paths./token/{tokenNumber}.get.parameters[0].name" = "tokenNumber"
"paths./token/{tokenNumber}.get.parameters[0].required" = true
"paths./token/{tokenNumber}.get.parameters[0].type" = "string"
"paths./token/{tokenNumber}.get.responses.200.description" = "Successful request"
"paths./token/{tokenNumber}.get.responses.200.schema.$ref" = "#/definitions/netlicensing"
"paths./token/{tokenNumber}.get.responses.400.description" = "Malformed or illegal request"
"paths./token/{tokenNumber}.get.responses.403.description" = "Access is denied"
"paths./token/{tokenNumber}.get.responses.404.description" = "Resource not found"
"paths./token/{tokenNumber}.get.responses.500.description" = "Internal service error"
"paths./token/{tokenNumber}.get.security.length" = 1
"paths./token/{tokenNumber}.get.security[0].basicAuth.length" = 0
"paths./token/{tokenNumber}.get.summary" = "Get token"
"paths./token/{tokenNumber}.get.tags.length" = 1
"paths./token/{tokenNumber}.get.tags[0]" = "Token"
"paths./transaction.get.description" = "Return a list of all transactions for the current vendor"
"paths./transaction.get.operationId" = "listTransactions"
"paths./transaction.get.responses.200.description" = "Successful request"
"paths./transaction.get.responses.200.schema.items.$ref" = "#/definitions/netlicensing"
"paths./transaction.get.responses.200.schema.type" = "array"
"paths./transaction.get.responses.400.description" = "Malformed or illegal request"
"paths./transaction.get.responses.403.description" = "Access is denied"
"paths./transaction.get.responses.404.description" = "Resource not found"
"paths./transaction.get.responses.500.description" = "Internal service error"
"paths./transaction.get.security.length" = 1
"paths./transaction.get.security[0].basicAuth.length" = 0
"paths./transaction.get.summary" = "Transactions list"
"paths./transaction.get.tags.length" = 1
"paths./transaction.get.tags[0]" = "Transaction"
"paths./transaction.post.consumes.length" = 1
"paths./transaction.post.consumes[0]" = "application/x-www-form-urlencoded"
"paths./transaction.post.description" = "Creates a new transaction"
"paths./transaction.post.operationId" = "createTransaction"
"paths./transaction.post.parameters.length" = 8
"paths./transaction.post.parameters[0].in" = "formData"
"paths./transaction.post.parameters[0].name" = "licenseeNumber"
"paths./transaction.post.parameters[0].required" = true
"paths./transaction.post.parameters[0].type" = "string"
"paths./transaction.post.parameters[1].description" = "Unique number (across all products of a vendor) that identifies the transaction"
"paths./transaction.post.parameters[1].in" = "formData"
"paths./transaction.post.parameters[1].name" = "number"
"paths./transaction.post.parameters[1].required" = false
"paths./transaction.post.parameters[1].type" = "string"
"paths./transaction.post.parameters[2].description" = "always true for transactions"
"paths./transaction.post.parameters[2].in" = "formData"
"paths./transaction.post.parameters[2].name" = "active"
"paths./transaction.post.parameters[2].required" = true
"paths./transaction.post.parameters[2].type" = "boolean"
"paths./transaction.post.parameters[3].collectionFormat" = "multi"
"paths./transaction.post.parameters[3].enum.length" = 3
"paths./transaction.post.parameters[3].enum[0]" = "CANCELLED"
"paths./transaction.post.parameters[3].enum[1]" = "CLOSED"
"paths./transaction.post.parameters[3].enum[2]" = "PENDING"
"paths./transaction.post.parameters[3].in" = "formData"
"paths./transaction.post.parameters[3].name" = "status"
"paths./transaction.post.parameters[3].required" = true
"paths./transaction.post.parameters[3].type" = "string"
"paths./transaction.post.parameters[4].collectionFormat" = "multi"
"paths./transaction.post.parameters[4].description" = "AUTO transaction for internal use only"
"paths./transaction.post.parameters[4].enum.length" = 1
"paths./transaction.post.parameters[4].enum[0]" = "SHOP"
"paths./transaction.post.parameters[4].in" = "formData"
"paths./transaction.post.parameters[4].name" = "source"
"paths./transaction.post.parameters[4].required" = true
"paths./transaction.post.parameters[4].type" = "string"
"paths./transaction.post.parameters[5].format" = "date-time"
"paths./transaction.post.parameters[5].in" = "formData"
"paths./transaction.post.parameters[5].name" = "dateCreated"
"paths./transaction.post.parameters[5].required" = false
"paths./transaction.post.parameters[5].type" = "string"
"paths./transaction.post.parameters[6].format" = "date-time"
"paths./transaction.post.parameters[6].in" = "formData"
"paths./transaction.post.parameters[6].name" = "dateClosed"
"paths./transaction.post.parameters[6].required" = false
"paths./transaction.post.parameters[6].type" = "string"
"paths./transaction.post.parameters[7].in" = "formData"
"paths./transaction.post.parameters[7].name" = "paymentMethod"
"paths./transaction.post.parameters[7].required" = false
"paths./transaction.post.parameters[7].type" = "string"
"paths./transaction.post.responses.200.description" = "Successful request"
"paths./transaction.post.responses.200.schema.$ref" = "#/definitions/netlicensing"
"paths./transaction.post.responses.400.description" = "Malformed or illegal request"
"paths./transaction.post.responses.403.description" = "Access is denied"
"paths./transaction.post.responses.404.description" = "Resource not found"
"paths./transaction.post.responses.500.description" = "Internal service error"
"paths./transaction.post.security.length" = 1
"paths./transaction.post.security[0].basicAuth.length" = 0
"paths./transaction.post.summary" = "Create transaction"
"paths./transaction.post.tags.length" = 1
"paths./transaction.post.tags[0]" = "Transaction"
"paths./transaction/{transactionNumber}.get.description" = "Return a transaction by transactionNumber"
"paths./transaction/{transactionNumber}.get.operationId" = "getTransaction"
"paths./transaction/{transactionNumber}.get.parameters.length" = 1
"paths./transaction/{transactionNumber}.get.parameters[0].description" = "Unique number (across all products of a vendor) that identifies the transaction"
"paths./transaction/{transactionNumber}.get.parameters[0].in" = "path"
"paths./transaction/{transactionNumber}.get.parameters[0].name" = "transactionNumber"
"paths./transaction/{transactionNumber}.get.parameters[0].required" = true
"paths./transaction/{transactionNumber}.get.parameters[0].type" = "string"
"paths./transaction/{transactionNumber}.get.responses.200.description" = "Successful request"
"paths./transaction/{transactionNumber}.get.responses.200.schema.$ref" = "#/definitions/netlicensing"
"paths./transaction/{transactionNumber}.get.responses.400.description" = "Malformed or illegal request"
"paths./transaction/{transactionNumber}.get.responses.403.description" = "Access is denied"
"paths./transaction/{transactionNumber}.get.responses.404.description" = "Resource not found"
"paths./transaction/{transactionNumber}.get.responses.500.description" = "Internal service error"
"paths./transaction/{transactionNumber}.get.security.length" = 1
"paths./transaction/{transactionNumber}.get.security[0].basicAuth.length" = 0
"paths./transaction/{transactionNumber}.get.summary" = "Get transaction "
"paths./transaction/{transactionNumber}.get.tags.length" = 1
"paths./transaction/{transactionNumber}.get.tags[0]" = "Transaction"
"paths./transaction/{transactionNumber}.post.consumes.length" = 1
"paths./transaction/{transactionNumber}.post.consumes[0]" = "application/x-www-form-urlencoded"
"paths./transaction/{transactionNumber}.post.description" = "Sets the provided properties to a transaction. Return an updated transaction"
"paths./transaction/{transactionNumber}.post.operationId" = "updateTransaction"
"paths./transaction/{transactionNumber}.post.parameters.length" = 8
"paths./transaction/{transactionNumber}.post.parameters[0].description" = "Unique number (across all products of a vendor) that identifies the transaction"
"paths./transaction/{transactionNumber}.post.parameters[0].in" = "path"
"paths./transaction/{transactionNumber}.post.parameters[0].name" = "transactionNumber"
"paths./transaction/{transactionNumber}.post.parameters[0].required" = true
"paths./transaction/{transactionNumber}.post.parameters[0].type" = "string"
"paths./transaction/{transactionNumber}.post.parameters[1].description" = "Unique number (across all products of a vendor) that identifies the transaction"
"paths./transaction/{transactionNumber}.post.parameters[1].in" = "formData"
"paths./transaction/{transactionNumber}.post.parameters[1].name" = "number"
"paths./transaction/{transactionNumber}.post.parameters[1].required" = false
"paths./transaction/{transactionNumber}.post.parameters[1].type" = "string"
"paths./transaction/{transactionNumber}.post.parameters[2].description" = "always true for transactions"
"paths./transaction/{transactionNumber}.post.parameters[2].in" = "formData"
"paths./transaction/{transactionNumber}.post.parameters[2].name" = "active"
"paths./transaction/{transactionNumber}.post.parameters[2].required" = false
"paths./transaction/{transactionNumber}.post.parameters[2].type" = "boolean"
"paths./transaction/{transactionNumber}.post.parameters[3].collectionFormat" = "multi"
"paths./transaction/{transactionNumber}.post.parameters[3].enum.length" = 3
"paths./transaction/{transactionNumber}.post.parameters[3].enum[0]" = "CANCELLED"
"paths./transaction/{transactionNumber}.post.parameters[3].enum[1]" = "CLOSED"
"paths./transaction/{transactionNumber}.post.parameters[3].enum[2]" = "PENDING"
"paths./transaction/{transactionNumber}.post.parameters[3].in" = "formData"
"paths./transaction/{transactionNumber}.post.parameters[3].name" = "status"
"paths./transaction/{transactionNumber}.post.parameters[3].required" = false
"paths./transaction/{transactionNumber}.post.parameters[3].type" = "string"
"paths./transaction/{transactionNumber}.post.parameters[4].collectionFormat" = "multi"
"paths./transaction/{transactionNumber}.post.parameters[4].description" = "AUTO transaction for internal use only"
"paths./transaction/{transactionNumber}.post.parameters[4].enum.length" = 1
"paths./transaction/{transactionNumber}.post.parameters[4].enum[0]" = "SHOP"
"paths./transaction/{transactionNumber}.post.parameters[4].in" = "formData"
"paths./transaction/{transactionNumber}.post.parameters[4].name" = "source"
"paths./transaction/{transactionNumber}.post.parameters[4].required" = false
"paths./transaction/{transactionNumber}.post.parameters[4].type" = "string"
"paths./transaction/{transactionNumber}.post.parameters[5].format" = "date-time"
"paths./transaction/{transactionNumber}.post.parameters[5].in" = "formData"
"paths./transaction/{transactionNumber}.post.parameters[5].name" = "dateCreated"
"paths./transaction/{transactionNumber}.post.parameters[5].required" = false
"paths./transaction/{transactionNumber}.post.parameters[5].type" = "string"
"paths./transaction/{transactionNumber}.post.parameters[6].format" = "date-time"
"paths./transaction/{transactionNumber}.post.parameters[6].in" = "formData"
"paths./transaction/{transactionNumber}.post.parameters[6].name" = "dateClosed"
"paths./transaction/{transactionNumber}.post.parameters[6].required" = false
"paths./transaction/{transactionNumber}.post.parameters[6].type" = "string"
"paths./transaction/{transactionNumber}.post.parameters[7].in" = "formData"
"paths./transaction/{transactionNumber}.post.parameters[7].name" = "paymentMethod"
"paths./transaction/{transactionNumber}.post.parameters[7].required" = false
"paths./transaction/{transactionNumber}.post.parameters[7].type" = "string"
"paths./transaction/{transactionNumber}.post.responses.200.description" = "Successful request"
"paths./transaction/{transactionNumber}.post.responses.200.schema.$ref" = "#/definitions/netlicensing"
"paths./transaction/{transactionNumber}.post.responses.400.description" = "Malformed or illegal request"
"paths./transaction/{transactionNumber}.post.responses.403.description" = "Access is denied"
"paths./transaction/{transactionNumber}.post.responses.404.description" = "Resource not found"
"paths./transaction/{transactionNumber}.post.responses.500.description" = "Internal service error"
"paths./transaction/{transactionNumber}.post.security.length" = 1
"paths./transaction/{transactionNumber}.post.security[0].basicAuth.length" = 0
"paths./transaction/{transactionNumber}.post.summary" = "Update transaction"
"paths./transaction/{transactionNumber}.post.tags.length" = 1
"paths./transaction/{transactionNumber}.post.tags[0]" = "Transaction"
"paths./utility/licenseTypes.get.description" = "Return a list of all license types supported by the service"
"paths./utility/licenseTypes.get.operationId" = "licenseTypes"
"paths./utility/licenseTypes.get.responses.200.description" = "Successful request"
"paths./utility/licenseTypes.get.responses.200.schema.$ref" = "#/definitions/netlicensing"
"paths./utility/licenseTypes.get.responses.400.description" = "Malformed or illegal request"
"paths./utility/licenseTypes.get.responses.403.description" = "Access is denied"
"paths./utility/licenseTypes.get.responses.404.description" = "Resource not found"
"paths./utility/licenseTypes.get.responses.500.description" = "Internal service error"
"paths./utility/licenseTypes.get.security.length" = 1
"paths./utility/licenseTypes.get.security[0].basicAuth.length" = 0
"paths./utility/licenseTypes.get.summary" = "License Types list"
"paths./utility/licenseTypes.get.tags.length" = 1
"paths./utility/licenseTypes.get.tags[0]" = "Utility"
"paths./utility/licensingModels.get.description" = "Return a list of all licensing models supported by the service"
"paths./utility/licensingModels.get.operationId" = "licensingModels"
"paths./utility/licensingModels.get.responses.200.description" = "Successful request"
"paths./utility/licensingModels.get.responses.200.schema.$ref" = "#/definitions/netlicensing"
"paths./utility/licensingModels.get.responses.400.description" = "Malformed or illegal request"
"paths./utility/licensingModels.get.responses.403.description" = "Access is denied"
"paths./utility/licensingModels.get.responses.404.description" = "Resource not found"
"paths./utility/licensingModels.get.responses.500.description" = "Internal service error"
"paths./utility/licensingModels.get.security.length" = 1
"paths./utility/licensingModels.get.security[0].basicAuth.length" = 0
"paths./utility/licensingModels.get.summary" = "Licensing Models list"
"paths./utility/licensingModels.get.tags.length" = 1
"paths./utility/licensingModels.get.tags[0]" = "Utility"
"produces.length" = 2
"produces[0]" = "application/xml"
"produces[1]" = "application/json"
"schemes.length" = 1
"schemes[0]" = "https"
"securityDefinitions.api_key.in" = "header"
"securityDefinitions.api_key.name" = "api_key"
"securityDefinitions.api_key.type" = "apiKey"
"securityDefinitions.basicAuth.description" = "HTTP Basic Authentication. Works over `HTTP` and `HTTPS`"
"securityDefinitions.basicAuth.type" = "basic"
swagger = "2.0"
"tags.length" = 9
"tags[0].description" = "Product operations"
"tags[0].externalDocs.description" = "Product Services"
"tags[0].externalDocs.url" = "https://www.labs64.de/confluence/x/qACo"
"tags[0].name" = "Product"
"tags[1].description" = "Product Module operations"
"tags[1].externalDocs.description" = "Product Module Services"
"tags[1].externalDocs.url" = "https://www.labs64.de/confluence/x/qwCo"
"tags[1].name" = "Product Module"
"tags[2].description" = "License Template operations"
"tags[2].externalDocs.description" = "License Template Services"
"tags[2].externalDocs.url" = "https://www.labs64.de/confluence/x/rQCo"
"tags[2].name" = "License Template"
"tags[3].description" = "Licensee operations"
"tags[3].externalDocs.description" = "Licensee Services"
"tags[3].externalDocs.url" = "https://www.labs64.de/confluence/x/qQCo"
"tags[3].name" = "Licensee"
"tags[4].description" = "License operations"
"tags[4].externalDocs.description" = "License Services"
"tags[4].externalDocs.url" = "https://www.labs64.de/confluence/x/rACo"
"tags[4].name" = "License"
"tags[5].description" = "Transaction operations"
"tags[5].externalDocs.description" = "Transaction Services"
"tags[5].externalDocs.url" = "https://www.labs64.de/confluence/x/qgCo"
"tags[5].name" = "Transaction"
"tags[6].description" = "Token operations"
"tags[6].externalDocs.description" = "Token Services"
"tags[6].externalDocs.url" = "https://www.labs64.de/confluence/x/rwCo"
"tags[6].name" = "Token"
"tags[7].description" = "Payment Method operations"
"tags[7].externalDocs.description" = "Payment Method Services"
"tags[7].externalDocs.url" = "https://www.labs64.de/confluence/x/sACo"
"tags[7].name" = "Payment Method"
"tags[8].description" = "Utility operations"
"tags[8].externalDocs.description" = "Utility Services"
"tags[8].externalDocs.url" = "https://www.labs64.de/confluence/x/rgCo"
"tags[8].name" = "Utility"
