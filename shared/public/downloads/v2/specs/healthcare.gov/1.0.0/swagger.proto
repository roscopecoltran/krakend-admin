syntax = "proto3";

import "google/api/annotations.proto";

package healthcare;

message GetApiArticlesmediaTypeExtensionRequest {
    // Omiting the param causes html to be returned.
    enum GetApiArticlesmediaTypeExtensionRequest_MediaTypeExtension {
        GETAPIARTICLESMEDIATYPEEXTENSIONREQUEST_MEDIATYPEEXTENSION_JSON = 0;
    }
    GetApiArticlesmediaTypeExtensionRequest_MediaTypeExtension mediaTypeExtension = 1;
}

message GetApiBlogmediaTypeExtensionRequest {
    // Omiting the param causes html to be returned.
    enum GetApiBlogmediaTypeExtensionRequest_MediaTypeExtension {
        GETAPIBLOGMEDIATYPEEXTENSIONREQUEST_MEDIATYPEEXTENSION_JSON = 0;
    }
    GetApiBlogmediaTypeExtensionRequest_MediaTypeExtension mediaTypeExtension = 1;
}

message GetApiGlossarymediaTypeExtensionRequest {
    // Omiting the param causes html to be returned.
    enum GetApiGlossarymediaTypeExtensionRequest_MediaTypeExtension {
        GETAPIGLOSSARYMEDIATYPEEXTENSIONREQUEST_MEDIATYPEEXTENSION_JSON = 0;
    }
    GetApiGlossarymediaTypeExtensionRequest_MediaTypeExtension mediaTypeExtension = 1;
}

message GetApiQuestionsmediaTypeExtensionRequest {
    // Omiting the param causes html to be returned.
    enum GetApiQuestionsmediaTypeExtensionRequest_MediaTypeExtension {
        GETAPIQUESTIONSMEDIATYPEEXTENSIONREQUEST_MEDIATYPEEXTENSION_JSON = 0;
    }
    GetApiQuestionsmediaTypeExtensionRequest_MediaTypeExtension mediaTypeExtension = 1;
}

message GetApiStatesmediaTypeExtensionRequest {
    // Omiting the param causes html to be returned.
    enum GetApiStatesmediaTypeExtensionRequest_MediaTypeExtension {
        GETAPISTATESMEDIATYPEEXTENSIONREQUEST_MEDIATYPEEXTENSION_JSON = 0;
    }
    GetApiStatesmediaTypeExtensionRequest_MediaTypeExtension mediaTypeExtension = 1;
}

message GetApiTopicsmediaTypeExtensionRequest {
    // Omiting the param causes html to be returned.
    enum GetApiTopicsmediaTypeExtensionRequest_MediaTypeExtension {
        GETAPITOPICSMEDIATYPEEXTENSIONREQUEST_MEDIATYPEEXTENSION_JSON = 0;
    }
    GetApiTopicsmediaTypeExtensionRequest_MediaTypeExtension mediaTypeExtension = 1;
}

message GetBlogPageNamemediaTypeExtensionRequest {
    // Omiting the param causes html to be returned.
    enum GetBlogPageNamemediaTypeExtensionRequest_MediaTypeExtension {
        GETBLOGPAGENAMEMEDIATYPEEXTENSIONREQUEST_MEDIATYPEEXTENSION_JSON = 0;
    }
    GetBlogPageNamemediaTypeExtensionRequest_MediaTypeExtension mediaTypeExtension = 1;
    string pageName = 2;
}

message GetEsBlogPageNamemediaTypeExtensionRequest {
    // Omiting the param causes html to be returned.
    enum GetEsBlogPageNamemediaTypeExtensionRequest_MediaTypeExtension {
        GETESBLOGPAGENAMEMEDIATYPEEXTENSIONREQUEST_MEDIATYPEEXTENSION_JSON = 0;
    }
    GetEsBlogPageNamemediaTypeExtensionRequest_MediaTypeExtension mediaTypeExtension = 1;
    string pageName = 2;
}

message GetEsGlossaryPageNamemediaTypeExtensionRequest {
    // Omiting the param causes html to be returned.
    enum GetEsGlossaryPageNamemediaTypeExtensionRequest_MediaTypeExtension {
        GETESGLOSSARYPAGENAMEMEDIATYPEEXTENSIONREQUEST_MEDIATYPEEXTENSION_JSON = 0;
    }
    GetEsGlossaryPageNamemediaTypeExtensionRequest_MediaTypeExtension mediaTypeExtension = 1;
    string pageName = 2;
}

message GetEsQuestionPageNamemediaTypeExtensionRequest {
    // Omiting the param causes html to be returned.
    enum GetEsQuestionPageNamemediaTypeExtensionRequest_MediaTypeExtension {
        GETESQUESTIONPAGENAMEMEDIATYPEEXTENSIONREQUEST_MEDIATYPEEXTENSION_JSON = 0;
    }
    GetEsQuestionPageNamemediaTypeExtensionRequest_MediaTypeExtension mediaTypeExtension = 1;
    string pageName = 2;
}

message GetEsPageNamemediaTypeExtensionRequest {
    // Omiting the param causes html to be returned.
    enum GetEsPageNamemediaTypeExtensionRequest_MediaTypeExtension {
        GETESPAGENAMEMEDIATYPEEXTENSIONREQUEST_MEDIATYPEEXTENSION_JSON = 0;
    }
    GetEsPageNamemediaTypeExtensionRequest_MediaTypeExtension mediaTypeExtension = 1;
    string pageName = 2;
}

message GetEsStateNamemediaTypeExtensionRequest {
    // Omiting the param causes html to be returned.
    enum GetEsStateNamemediaTypeExtensionRequest_MediaTypeExtension {
        GETESSTATENAMEMEDIATYPEEXTENSIONREQUEST_MEDIATYPEEXTENSION_JSON = 0;
    }
    GetEsStateNamemediaTypeExtensionRequest_MediaTypeExtension mediaTypeExtension = 1;
    string stateName = 2;
}

message GetGlossaryPageNamemediaTypeExtensionRequest {
    // Omiting the param causes html to be returned.
    enum GetGlossaryPageNamemediaTypeExtensionRequest_MediaTypeExtension {
        GETGLOSSARYPAGENAMEMEDIATYPEEXTENSIONREQUEST_MEDIATYPEEXTENSION_JSON = 0;
    }
    GetGlossaryPageNamemediaTypeExtensionRequest_MediaTypeExtension mediaTypeExtension = 1;
    string pageName = 2;
}

message GetQuestionPageNamemediaTypeExtensionRequest {
    // Omiting the param causes html to be returned.
    enum GetQuestionPageNamemediaTypeExtensionRequest_MediaTypeExtension {
        GETQUESTIONPAGENAMEMEDIATYPEEXTENSIONREQUEST_MEDIATYPEEXTENSION_JSON = 0;
    }
    GetQuestionPageNamemediaTypeExtensionRequest_MediaTypeExtension mediaTypeExtension = 1;
    string pageName = 2;
}

message GetPageNamemediaTypeExtensionRequest {
    // Omiting the param causes html to be returned.
    enum GetPageNamemediaTypeExtensionRequest_MediaTypeExtension {
        GETPAGENAMEMEDIATYPEEXTENSIONREQUEST_MEDIATYPEEXTENSION_JSON = 0;
    }
    GetPageNamemediaTypeExtensionRequest_MediaTypeExtension mediaTypeExtension = 1;
    string pageName = 2;
}

message GetStateNamemediaTypeExtensionRequest {
    // Omiting the param causes html to be returned.
    enum GetStateNamemediaTypeExtensionRequest_MediaTypeExtension {
        GETSTATENAMEMEDIATYPEEXTENSIONREQUEST_MEDIATYPEEXTENSION_JSON = 0;
    }
    GetStateNamemediaTypeExtensionRequest_MediaTypeExtension mediaTypeExtension = 1;
    string stateName = 2;
}

message ArticlesList {
    message Article {
        string bite = 1;
        message Categorie {
        }
        repeated Categorie categories = 2;
        string content = 3;
        string date = 4;
        string excerpt = 5;
        bool featured = 6;
        string id = 7;
        string lang = 8;
        string layout = 9;
        string meta_description = 10;
        string meta_title = 11;
        string path = 12;
        bool published = 13;
        message Related {
        }
        repeated Related related = 14;
        string seo_keywords = 15;
        int32 sort = 16;
        message Tag {
        }
        repeated Tag tags = 17;
        string title = 18;
        string title_short = 19;
        message Topic {
        }
        repeated Topic topics = 20;
        string url = 21;
    }
    repeated Article articles = 1;
}

message BlogList {
    message Blog {
    }
    repeated Blog blog = 1;
}

message BlogPage {
    message Categorie {
    }
    repeated Categorie categories = 1;
    string content = 2;
    string date = 3;
    string excerpt = 4;
    string id = 5;
    string lang = 6;
    string layout = 7;
    string meta_description = 8;
    string meta_title = 9;
    string path = 10;
    bool published = 11;
    string seo_keywords = 12;
    int32 sort = 13;
    message Tag {
    }
    repeated Tag tags = 14;
    string title = 15;
    message Topic {
    }
    repeated Topic topics = 16;
    string url = 17;
}

message GlossaryList {
    message Glossary {
        repeated string categories = 1;
        string content = 2;
        string date = 3;
        string excerpt = 4;
        string id = 5;
        string lang = 6;
        string layout = 7;
        string path = 8;
        bool published = 9;
        int32 sort = 10;
        repeated string tags = 11;
        string title = 12;
        string url = 13;
    }
    repeated Glossary glossary = 1;
}

message GlossaryPage {
    repeated string categories = 1;
    string content = 2;
    string date = 3;
    string excerpt = 4;
    string id = 5;
    string lang = 6;
    string layout = 7;
    string path = 8;
    bool published = 9;
    int32 sort = 10;
    repeated string tags = 11;
    string title = 12;
    string url = 13;
}

message Page {
    message Categorie {
    }
    repeated Categorie categories = 1;
    string content = 2;
    string date = 3;
    string excerpt = 4;
    string experience = 5;
    string id = 6;
    string lang = 7;
    string layout = 8;
    string path = 9;
    bool published = 10;
    int32 sort = 11;
    message Tag {
    }
    repeated Tag tags = 12;
    string title = 13;
    string url = 14;
}

message QuestionPage {
    repeated string categories = 1;
    string content = 2;
    string date = 3;
    string excerpt = 4;
    string id = 5;
    string lang = 6;
    string path = 7;
    bool published = 8;
    int32 sort = 9;
    repeated string tags = 10;
    string title = 11;
    string url = 12;
}

message QuestionsList {
    message Question {
        repeated string categories = 1;
        string content = 2;
        string date = 3;
        string excerpt = 4;
        string id = 5;
        string lang = 6;
        string path = 7;
        bool published = 8;
        int32 sort = 9;
        repeated string tags = 10;
        string title = 11;
        string url = 12;
    }
    repeated Question questions = 1;
}

message StatePage {
    message Categorie {
    }
    repeated Categorie categories = 1;
    string content = 2;
    string date = 3;
    string excerpt = 4;
    string id = 5;
    string lang = 6;
    string path = 7;
    int32 sort = 8;
    string stateurl = 9;
    message Tag {
    }
    repeated Tag tags = 10;
    string title = 11;
    string url = 12;
}

message StatesList {
    message State {
    }
    repeated State states = 1;
}

message TopicsList {
    message Topic {
        message Articleorder {
        }
        repeated Articleorder articleorder = 1;
        message Categorie {
        }
        repeated Categorie categories = 2;
        string content = 3;
        string date = 4;
        string excerpt = 5;
        string id = 6;
        string lang = 7;
        string layout = 8;
        string meta_description = 9;
        string meta_title = 10;
        int32 order = 11;
        string path = 12;
        bool published = 13;
        int32 sort = 14;
        message Tag {
        }
        repeated Tag tags = 15;
        string title = 16;
        string url = 17;
    }
    repeated Topic topics = 1;
}

service HealthcareService {
    // Returns pages content.
    rpc GetApiArticlesmediaTypeExtension(GetApiArticlesmediaTypeExtensionRequest) returns (ArticlesList) {
      option (google.api.http) = {
        get: "//api/articles{mediaTypeExtension}"
      };
    }
    // Returns pages content.
    rpc GetApiBlogmediaTypeExtension(GetApiBlogmediaTypeExtensionRequest) returns (BlogList) {
      option (google.api.http) = {
        get: "//api/blog{mediaTypeExtension}"
      };
    }
    // Returns pages content.
    rpc GetApiGlossarymediaTypeExtension(GetApiGlossarymediaTypeExtensionRequest) returns (GlossaryList) {
      option (google.api.http) = {
        get: "//api/glossary{mediaTypeExtension}"
      };
    }
    // Returns pages content.
    rpc GetApiQuestionsmediaTypeExtension(GetApiQuestionsmediaTypeExtensionRequest) returns (QuestionsList) {
      option (google.api.http) = {
        get: "//api/questions{mediaTypeExtension}"
      };
    }
    // Returns pages content.
    rpc GetApiStatesmediaTypeExtension(GetApiStatesmediaTypeExtensionRequest) returns (StatesList) {
      option (google.api.http) = {
        get: "//api/states{mediaTypeExtension}"
      };
    }
    // Returns pages content.
    rpc GetApiTopicsmediaTypeExtension(GetApiTopicsmediaTypeExtensionRequest) returns (TopicsList) {
      option (google.api.http) = {
        get: "//api/topics{mediaTypeExtension}"
      };
    }
    // Returns pages content.
    rpc GetBlogPageNamemediaTypeExtension(GetBlogPageNamemediaTypeExtensionRequest) returns (BlogPage) {
      option (google.api.http) = {
        get: "//blog/{pageName}{mediaTypeExtension}"
      };
    }
    // Returns pages content.
    rpc GetEsBlogPageNamemediaTypeExtension(GetEsBlogPageNamemediaTypeExtensionRequest) returns (BlogPage) {
      option (google.api.http) = {
        get: "//es/blog/{pageName}{mediaTypeExtension}"
      };
    }
    // Returns pages content.
    rpc GetEsGlossaryPageNamemediaTypeExtension(GetEsGlossaryPageNamemediaTypeExtensionRequest) returns (GlossaryPage) {
      option (google.api.http) = {
        get: "//es/glossary/{pageName}{mediaTypeExtension}"
      };
    }
    // Returns pages content.
    rpc GetEsQuestionPageNamemediaTypeExtension(GetEsQuestionPageNamemediaTypeExtensionRequest) returns (QuestionPage) {
      option (google.api.http) = {
        get: "//es/question/{pageName}{mediaTypeExtension}"
      };
    }
    // Returns pages content.
    rpc GetEsPageNamemediaTypeExtension(GetEsPageNamemediaTypeExtensionRequest) returns (Page) {
      option (google.api.http) = {
        get: "//es/{pageName}{mediaTypeExtension}"
      };
    }
    // Returns pages content.
    rpc GetEsStateNamemediaTypeExtension(GetEsStateNamemediaTypeExtensionRequest) returns (StatePage) {
      option (google.api.http) = {
        get: "//es/{stateName}{mediaTypeExtension}"
      };
    }
    // Returns pages content.
    rpc GetGlossaryPageNamemediaTypeExtension(GetGlossaryPageNamemediaTypeExtensionRequest) returns (GlossaryPage) {
      option (google.api.http) = {
        get: "//glossary/{pageName}{mediaTypeExtension}"
      };
    }
    // Returns pages content.
    rpc GetQuestionPageNamemediaTypeExtension(GetQuestionPageNamemediaTypeExtensionRequest) returns (QuestionPage) {
      option (google.api.http) = {
        get: "//question/{pageName}{mediaTypeExtension}"
      };
    }
    // Returns pages content.
    rpc GetPageNamemediaTypeExtension(GetPageNamemediaTypeExtensionRequest) returns (Page) {
      option (google.api.http) = {
        get: "//{pageName}{mediaTypeExtension}"
      };
    }
    // Returns pages content.
    rpc GetStateNamemediaTypeExtension(GetStateNamemediaTypeExtensionRequest) returns (StatePage) {
      option (google.api.http) = {
        get: "//{stateName}{mediaTypeExtension}"
      };
    }
}
