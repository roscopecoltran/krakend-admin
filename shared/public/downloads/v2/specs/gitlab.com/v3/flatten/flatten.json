{
	"basePath": "/api",
	"definitions.AccessRequester.description": "This feature was introduced in GitLab 8.11.",
	"definitions.AccessRequester.properties.avatar_url.type": "string",
	"definitions.AccessRequester.properties.id.type": "string",
	"definitions.AccessRequester.properties.name.type": "string",
	"definitions.AccessRequester.properties.requested_at.type": "string",
	"definitions.AccessRequester.properties.state.type": "string",
	"definitions.AccessRequester.properties.username.type": "string",
	"definitions.AccessRequester.properties.web_url.type": "string",
	"definitions.AccessRequester.type": "object",
	"definitions.ApplicationSetting.description": "Modify application settings",
	"definitions.ApplicationSetting.properties.after_sign_out_path.type": "string",
	"definitions.ApplicationSetting.properties.after_sign_up_text.type": "string",
	"definitions.ApplicationSetting.properties.container_registry_token_expire_delay.type": "string",
	"definitions.ApplicationSetting.properties.created_at.type": "string",
	"definitions.ApplicationSetting.properties.default_branch_protection.type": "string",
	"definitions.ApplicationSetting.properties.default_group_visibility.type": "string",
	"definitions.ApplicationSetting.properties.default_project_visibility.type": "string",
	"definitions.ApplicationSetting.properties.default_projects_limit.type": "string",
	"definitions.ApplicationSetting.properties.default_snippet_visibility.type": "string",
	"definitions.ApplicationSetting.properties.domain_blacklist.type": "string",
	"definitions.ApplicationSetting.properties.domain_blacklist_enabled.type": "string",
	"definitions.ApplicationSetting.properties.domain_whitelist.type": "string",
	"definitions.ApplicationSetting.properties.gravatar_enabled.type": "string",
	"definitions.ApplicationSetting.properties.home_page_url.type": "string",
	"definitions.ApplicationSetting.properties.id.type": "string",
	"definitions.ApplicationSetting.properties.koding_enabled.type": "string",
	"definitions.ApplicationSetting.properties.koding_url.type": "string",
	"definitions.ApplicationSetting.properties.max_attachment_size.type": "string",
	"definitions.ApplicationSetting.properties.plantuml_enabled.type": "string",
	"definitions.ApplicationSetting.properties.plantuml_url.type": "string",
	"definitions.ApplicationSetting.properties.repository_storage.type": "string",
	"definitions.ApplicationSetting.properties.repository_storages.type": "string",
	"definitions.ApplicationSetting.properties.restricted_visibility_levels.type": "string",
	"definitions.ApplicationSetting.properties.session_expire_delay.type": "string",
	"definitions.ApplicationSetting.properties.sign_in_text.type": "string",
	"definitions.ApplicationSetting.properties.signin_enabled.type": "string",
	"definitions.ApplicationSetting.properties.signup_enabled.type": "string",
	"definitions.ApplicationSetting.properties.updated_at.type": "string",
	"definitions.ApplicationSetting.properties.user_oauth_applications.type": "string",
	"definitions.ApplicationSetting.type": "object",
	"definitions.AwardEmoji.description": "This feature was introduced in 8.9",
	"definitions.AwardEmoji.properties.awardable_id.type": "string",
	"definitions.AwardEmoji.properties.awardable_type.type": "string",
	"definitions.AwardEmoji.properties.created_at.type": "string",
	"definitions.AwardEmoji.properties.id.type": "string",
	"definitions.AwardEmoji.properties.name.type": "string",
	"definitions.AwardEmoji.properties.updated_at.type": "string",
	"definitions.AwardEmoji.properties.user.$ref": "#/definitions/UserBasic",
	"definitions.AwardEmoji.type": "object",
	"definitions.BasicProjectDetails.description": "Get all projects for admin user",
	"definitions.BasicProjectDetails.properties.http_url_to_repo.type": "string",
	"definitions.BasicProjectDetails.properties.id.type": "string",
	"definitions.BasicProjectDetails.properties.name.type": "string",
	"definitions.BasicProjectDetails.properties.name_with_namespace.type": "string",
	"definitions.BasicProjectDetails.properties.path.type": "string",
	"definitions.BasicProjectDetails.properties.path_with_namespace.type": "string",
	"definitions.BasicProjectDetails.properties.web_url.type": "string",
	"definitions.BasicProjectDetails.type": "object",
	"definitions.Board.description": "This feature was introduced in 8.13",
	"definitions.Board.properties.id.type": "string",
	"definitions.Board.properties.lists.$ref": "#/definitions/List",
	"definitions.Board.type": "object",
	"definitions.Build.description": "This feature was added in GitLab 8.11",
	"definitions.Build.properties.artifacts_file.$ref": "#/definitions/BuildArtifactFile",
	"definitions.Build.properties.commit.$ref": "#/definitions/RepoCommit",
	"definitions.Build.properties.coverage.type": "string",
	"definitions.Build.properties.created_at.type": "string",
	"definitions.Build.properties.finished_at.type": "string",
	"definitions.Build.properties.id.type": "string",
	"definitions.Build.properties.name.type": "string",
	"definitions.Build.properties.pipeline.$ref": "#/definitions/PipelineBasic",
	"definitions.Build.properties.ref.type": "string",
	"definitions.Build.properties.runner.$ref": "#/definitions/Runner",
	"definitions.Build.properties.stage.type": "string",
	"definitions.Build.properties.started_at.type": "string",
	"definitions.Build.properties.status.type": "string",
	"definitions.Build.properties.tag.type": "string",
	"definitions.Build.properties.user.$ref": "#/definitions/User",
	"definitions.Build.type": "object",
	"definitions.BuildArtifactFile.properties.filename.type": "string",
	"definitions.BuildArtifactFile.properties.size.type": "string",
	"definitions.BuildArtifactFile.type": "object",
	"definitions.CommitNote.description": "Post comment to commit",
	"definitions.CommitNote.properties.author.$ref": "#/definitions/UserBasic",
	"definitions.CommitNote.properties.created_at.type": "string",
	"definitions.CommitNote.properties.line.type": "string",
	"definitions.CommitNote.properties.line_type.type": "string",
	"definitions.CommitNote.properties.note.type": "string",
	"definitions.CommitNote.properties.path.type": "string",
	"definitions.CommitNote.type": "object",
	"definitions.CommitStatus.description": "Post status to a commit",
	"definitions.CommitStatus.properties.allow_failure.type": "string",
	"definitions.CommitStatus.properties.author.$ref": "#/definitions/UserBasic",
	"definitions.CommitStatus.properties.created_at.type": "string",
	"definitions.CommitStatus.properties.description.type": "string",
	"definitions.CommitStatus.properties.finished_at.type": "string",
	"definitions.CommitStatus.properties.id.type": "string",
	"definitions.CommitStatus.properties.name.type": "string",
	"definitions.CommitStatus.properties.ref.type": "string",
	"definitions.CommitStatus.properties.sha.type": "string",
	"definitions.CommitStatus.properties.started_at.type": "string",
	"definitions.CommitStatus.properties.status.type": "string",
	"definitions.CommitStatus.properties.target_url.type": "string",
	"definitions.CommitStatus.type": "object",
	"definitions.Compare.description": "Compare two branches, tags, or commits",
	"definitions.Compare.properties.commit.$ref": "#/definitions/RepoCommit",
	"definitions.Compare.properties.commits.$ref": "#/definitions/RepoCommit",
	"definitions.Compare.properties.compare_same_ref.type": "string",
	"definitions.Compare.properties.compare_timeout.type": "string",
	"definitions.Compare.properties.diffs.$ref": "#/definitions/RepoDiff",
	"definitions.Compare.type": "object",
	"definitions.Contributor.description": "Get repository contributors",
	"definitions.Contributor.properties.additions.type": "string",
	"definitions.Contributor.properties.commits.type": "string",
	"definitions.Contributor.properties.deletions.type": "string",
	"definitions.Contributor.properties.email.type": "string",
	"definitions.Contributor.properties.name.type": "string",
	"definitions.Contributor.type": "object",
	"definitions.Deployment.description": "This feature was introduced in GitLab 8.11.",
	"definitions.Deployment.properties.created_at.type": "string",
	"definitions.Deployment.properties.deployable.$ref": "#/definitions/Build",
	"definitions.Deployment.properties.environment.$ref": "#/definitions/EnvironmentBasic",
	"definitions.Deployment.properties.id.type": "string",
	"definitions.Deployment.properties.iid.type": "string",
	"definitions.Deployment.properties.ref.type": "string",
	"definitions.Deployment.properties.sha.type": "string",
	"definitions.Deployment.properties.user.$ref": "#/definitions/UserBasic",
	"definitions.Deployment.type": "object",
	"definitions.Email.description": "Add new email address to the currently authenticated user",
	"definitions.Email.properties.email.type": "string",
	"definitions.Email.properties.id.type": "string",
	"definitions.Email.type": "object",
	"definitions.Environment.description": "This feature was introduced in GitLab 8.11.",
	"definitions.Environment.properties.external_url.type": "string",
	"definitions.Environment.properties.id.type": "string",
	"definitions.Environment.properties.name.type": "string",
	"definitions.Environment.properties.project.$ref": "#/definitions/Project",
	"definitions.Environment.properties.slug.type": "string",
	"definitions.Environment.type": "object",
	"definitions.EnvironmentBasic.properties.external_url.type": "string",
	"definitions.EnvironmentBasic.properties.id.type": "string",
	"definitions.EnvironmentBasic.properties.name.type": "string",
	"definitions.EnvironmentBasic.properties.slug.type": "string",
	"definitions.EnvironmentBasic.type": "object",
	"definitions.Event.description": "This feature was introduced in GitLab 8.13.",
	"definitions.Event.properties.action_name.type": "string",
	"definitions.Event.properties.author.$ref": "#/definitions/UserBasic",
	"definitions.Event.properties.author_id.type": "string",
	"definitions.Event.properties.author_username.type": "string",
	"definitions.Event.properties.created_at.type": "string",
	"definitions.Event.properties.data.type": "string",
	"definitions.Event.properties.note.$ref": "#/definitions/Note",
	"definitions.Event.properties.project_id.type": "string",
	"definitions.Event.properties.target_id.type": "string",
	"definitions.Event.properties.target_title.type": "string",
	"definitions.Event.properties.target_type.type": "string",
	"definitions.Event.properties.title.type": "string",
	"definitions.Event.type": "object",
	"definitions.GlobalNotificationSetting.description": "This feature was introduced in GitLab 8.12",
	"definitions.GlobalNotificationSetting.properties.events.type": "string",
	"definitions.GlobalNotificationSetting.properties.level.type": "string",
	"definitions.GlobalNotificationSetting.properties.notification_email.type": "string",
	"definitions.GlobalNotificationSetting.type": "object",
	"definitions.Group.description": "Update a group. Available only for users who can administrate groups.",
	"definitions.Group.properties.avatar_url.type": "string",
	"definitions.Group.properties.description.type": "string",
	"definitions.Group.properties.id.type": "string",
	"definitions.Group.properties.lfs_enabled.type": "string",
	"definitions.Group.properties.name.type": "string",
	"definitions.Group.properties.path.type": "string",
	"definitions.Group.properties.request_access_enabled.type": "string",
	"definitions.Group.properties.statistics.type": "string",
	"definitions.Group.properties.visibility_level.type": "string",
	"definitions.Group.properties.web_url.type": "string",
	"definitions.Group.type": "object",
	"definitions.GroupDetail.description": "Transfer a project to the group namespace. Available only for admin.",
	"definitions.GroupDetail.properties.avatar_url.type": "string",
	"definitions.GroupDetail.properties.description.type": "string",
	"definitions.GroupDetail.properties.id.type": "string",
	"definitions.GroupDetail.properties.lfs_enabled.type": "string",
	"definitions.GroupDetail.properties.name.type": "string",
	"definitions.GroupDetail.properties.path.type": "string",
	"definitions.GroupDetail.properties.projects.$ref": "#/definitions/Project",
	"definitions.GroupDetail.properties.request_access_enabled.type": "string",
	"definitions.GroupDetail.properties.shared_projects.$ref": "#/definitions/Project",
	"definitions.GroupDetail.properties.statistics.type": "string",
	"definitions.GroupDetail.properties.visibility_level.type": "string",
	"definitions.GroupDetail.properties.web_url.type": "string",
	"definitions.GroupDetail.type": "object",
	"definitions.Hook.description": "Delete a hook",
	"definitions.Hook.properties.created_at.type": "string",
	"definitions.Hook.properties.enable_ssl_verification.type": "string",
	"definitions.Hook.properties.id.type": "string",
	"definitions.Hook.properties.push_events.type": "string",
	"definitions.Hook.properties.tag_push_events.type": "string",
	"definitions.Hook.properties.url.type": "string",
	"definitions.Hook.type": "object",
	"definitions.Identity.properties.extern_uid.type": "string",
	"definitions.Identity.properties.provider.type": "string",
	"definitions.Identity.type": "object",
	"definitions.Issue.description": "Get currently authenticated user's issues",
	"definitions.Issue.properties.assignee.$ref": "#/definitions/UserBasic",
	"definitions.Issue.properties.author.$ref": "#/definitions/UserBasic",
	"definitions.Issue.properties.confidential.type": "string",
	"definitions.Issue.properties.created_at.type": "string",
	"definitions.Issue.properties.description.type": "string",
	"definitions.Issue.properties.downvotes.type": "string",
	"definitions.Issue.properties.due_date.type": "string",
	"definitions.Issue.properties.id.type": "string",
	"definitions.Issue.properties.iid.type": "string",
	"definitions.Issue.properties.labels.type": "string",
	"definitions.Issue.properties.milestone.$ref": "#/definitions/Milestone",
	"definitions.Issue.properties.project_id.type": "string",
	"definitions.Issue.properties.state.type": "string",
	"definitions.Issue.properties.subscribed.type": "string",
	"definitions.Issue.properties.title.type": "string",
	"definitions.Issue.properties.updated_at.type": "string",
	"definitions.Issue.properties.upvotes.type": "string",
	"definitions.Issue.properties.user_notes_count.type": "string",
	"definitions.Issue.properties.web_url.type": "string",
	"definitions.Issue.type": "object",
	"definitions.Label.description": "Unsubscribe from a resource",
	"definitions.Label.properties.closed_issues_count.type": "string",
	"definitions.Label.properties.color.type": "string",
	"definitions.Label.properties.description.type": "string",
	"definitions.Label.properties.id.type": "string",
	"definitions.Label.properties.name.type": "string",
	"definitions.Label.properties.open_issues_count.type": "string",
	"definitions.Label.properties.open_merge_requests_count.type": "string",
	"definitions.Label.properties.priority.type": "string",
	"definitions.Label.properties.subscribed.type": "string",
	"definitions.Label.type": "object",
	"definitions.LabelBasic.properties.color.type": "string",
	"definitions.LabelBasic.properties.description.type": "string",
	"definitions.LabelBasic.properties.id.type": "string",
	"definitions.LabelBasic.properties.name.type": "string",
	"definitions.LabelBasic.type": "object",
	"definitions.List.description": "This feature was introduced in 8.13",
	"definitions.List.properties.id.type": "string",
	"definitions.List.properties.label.$ref": "#/definitions/LabelBasic",
	"definitions.List.properties.position.type": "string",
	"definitions.List.type": "object",
	"definitions.MRNote.description": "List issues that will be closed on merge",
	"definitions.MRNote.properties.author.$ref": "#/definitions/UserBasic",
	"definitions.MRNote.properties.note.type": "string",
	"definitions.MRNote.type": "object",
	"definitions.Member.description": "Updates a member of a group or project.",
	"definitions.Member.properties.access_level.type": "string",
	"definitions.Member.properties.avatar_url.type": "string",
	"definitions.Member.properties.expires_at.type": "string",
	"definitions.Member.properties.id.type": "string",
	"definitions.Member.properties.name.type": "string",
	"definitions.Member.properties.state.type": "string",
	"definitions.Member.properties.username.type": "string",
	"definitions.Member.properties.web_url.type": "string",
	"definitions.Member.type": "object",
	"definitions.MergeRequest.description": "Unsubscribe from a resource",
	"definitions.MergeRequest.properties.assignee.$ref": "#/definitions/UserBasic",
	"definitions.MergeRequest.properties.author.$ref": "#/definitions/UserBasic",
	"definitions.MergeRequest.properties.created_at.type": "string",
	"definitions.MergeRequest.properties.description.type": "string",
	"definitions.MergeRequest.properties.downvotes.type": "string",
	"definitions.MergeRequest.properties.force_remove_source_branch.type": "string",
	"definitions.MergeRequest.properties.id.type": "string",
	"definitions.MergeRequest.properties.iid.type": "string",
	"definitions.MergeRequest.properties.labels.type": "string",
	"definitions.MergeRequest.properties.merge_commit_sha.type": "string",
	"definitions.MergeRequest.properties.merge_status.type": "string",
	"definitions.MergeRequest.properties.merge_when_build_succeeds.type": "string",
	"definitions.MergeRequest.properties.milestone.$ref": "#/definitions/Milestone",
	"definitions.MergeRequest.properties.project_id.type": "string",
	"definitions.MergeRequest.properties.sha.type": "string",
	"definitions.MergeRequest.properties.should_remove_source_branch.type": "string",
	"definitions.MergeRequest.properties.source_branch.type": "string",
	"definitions.MergeRequest.properties.source_project_id.type": "string",
	"definitions.MergeRequest.properties.state.type": "string",
	"definitions.MergeRequest.properties.subscribed.type": "string",
	"definitions.MergeRequest.properties.target_branch.type": "string",
	"definitions.MergeRequest.properties.target_project_id.type": "string",
	"definitions.MergeRequest.properties.title.type": "string",
	"definitions.MergeRequest.properties.updated_at.type": "string",
	"definitions.MergeRequest.properties.upvotes.type": "string",
	"definitions.MergeRequest.properties.user_notes_count.type": "string",
	"definitions.MergeRequest.properties.web_url.type": "string",
	"definitions.MergeRequest.properties.work_in_progress.type": "string",
	"definitions.MergeRequest.type": "object",
	"definitions.MergeRequestChanges.description": "Show the merge request changes",
	"definitions.MergeRequestChanges.properties.assignee.$ref": "#/definitions/UserBasic",
	"definitions.MergeRequestChanges.properties.author.$ref": "#/definitions/UserBasic",
	"definitions.MergeRequestChanges.properties.changes.$ref": "#/definitions/RepoDiff",
	"definitions.MergeRequestChanges.properties.created_at.type": "string",
	"definitions.MergeRequestChanges.properties.description.type": "string",
	"definitions.MergeRequestChanges.properties.downvotes.type": "string",
	"definitions.MergeRequestChanges.properties.force_remove_source_branch.type": "string",
	"definitions.MergeRequestChanges.properties.id.type": "string",
	"definitions.MergeRequestChanges.properties.iid.type": "string",
	"definitions.MergeRequestChanges.properties.labels.type": "string",
	"definitions.MergeRequestChanges.properties.merge_commit_sha.type": "string",
	"definitions.MergeRequestChanges.properties.merge_status.type": "string",
	"definitions.MergeRequestChanges.properties.merge_when_build_succeeds.type": "string",
	"definitions.MergeRequestChanges.properties.milestone.$ref": "#/definitions/Milestone",
	"definitions.MergeRequestChanges.properties.project_id.type": "string",
	"definitions.MergeRequestChanges.properties.sha.type": "string",
	"definitions.MergeRequestChanges.properties.should_remove_source_branch.type": "string",
	"definitions.MergeRequestChanges.properties.source_branch.type": "string",
	"definitions.MergeRequestChanges.properties.source_project_id.type": "string",
	"definitions.MergeRequestChanges.properties.state.type": "string",
	"definitions.MergeRequestChanges.properties.subscribed.type": "string",
	"definitions.MergeRequestChanges.properties.target_branch.type": "string",
	"definitions.MergeRequestChanges.properties.target_project_id.type": "string",
	"definitions.MergeRequestChanges.properties.title.type": "string",
	"definitions.MergeRequestChanges.properties.updated_at.type": "string",
	"definitions.MergeRequestChanges.properties.upvotes.type": "string",
	"definitions.MergeRequestChanges.properties.user_notes_count.type": "string",
	"definitions.MergeRequestChanges.properties.web_url.type": "string",
	"definitions.MergeRequestChanges.properties.work_in_progress.type": "string",
	"definitions.MergeRequestChanges.type": "object",
	"definitions.MergeRequestDiff.description": "This feature was introduced in GitLab 8.12.",
	"definitions.MergeRequestDiff.properties.base_commit_sha.type": "string",
	"definitions.MergeRequestDiff.properties.created_at.type": "string",
	"definitions.MergeRequestDiff.properties.head_commit_sha.type": "string",
	"definitions.MergeRequestDiff.properties.id.type": "string",
	"definitions.MergeRequestDiff.properties.merge_request_id.type": "string",
	"definitions.MergeRequestDiff.properties.real_size.type": "string",
	"definitions.MergeRequestDiff.properties.start_commit_sha.type": "string",
	"definitions.MergeRequestDiff.properties.state.type": "string",
	"definitions.MergeRequestDiff.type": "object",
	"definitions.MergeRequestDiffFull.description": "This feature was introduced in GitLab 8.12.",
	"definitions.MergeRequestDiffFull.properties.base_commit_sha.type": "string",
	"definitions.MergeRequestDiffFull.properties.commits.$ref": "#/definitions/RepoCommit",
	"definitions.MergeRequestDiffFull.properties.created_at.type": "string",
	"definitions.MergeRequestDiffFull.properties.diffs.$ref": "#/definitions/RepoDiff",
	"definitions.MergeRequestDiffFull.properties.head_commit_sha.type": "string",
	"definitions.MergeRequestDiffFull.properties.id.type": "string",
	"definitions.MergeRequestDiffFull.properties.merge_request_id.type": "string",
	"definitions.MergeRequestDiffFull.properties.real_size.type": "string",
	"definitions.MergeRequestDiffFull.properties.start_commit_sha.type": "string",
	"definitions.MergeRequestDiffFull.properties.state.type": "string",
	"definitions.MergeRequestDiffFull.type": "object",
	"definitions.Milestone.description": "Update an existing project milestone",
	"definitions.Milestone.properties.created_at.type": "string",
	"definitions.Milestone.properties.description.type": "string",
	"definitions.Milestone.properties.due_date.type": "string",
	"definitions.Milestone.properties.id.type": "string",
	"definitions.Milestone.properties.iid.type": "string",
	"definitions.Milestone.properties.project_id.type": "string",
	"definitions.Milestone.properties.start_date.type": "string",
	"definitions.Milestone.properties.state.type": "string",
	"definitions.Milestone.properties.title.type": "string",
	"definitions.Milestone.properties.updated_at.type": "string",
	"definitions.Milestone.type": "object",
	"definitions.Namespace.description": "Get a namespaces list",
	"definitions.Namespace.properties.id.type": "string",
	"definitions.Namespace.properties.kind.type": "string",
	"definitions.Namespace.properties.name.type": "string",
	"definitions.Namespace.properties.path.type": "string",
	"definitions.Namespace.type": "object",
	"definitions.Note.description": "Delete a +noteable+ note",
	"definitions.Note.properties.attachment.type": "string",
	"definitions.Note.properties.author.$ref": "#/definitions/UserBasic",
	"definitions.Note.properties.body.type": "string",
	"definitions.Note.properties.created_at.type": "string",
	"definitions.Note.properties.downvote?.type": "string",
	"definitions.Note.properties.id.type": "string",
	"definitions.Note.properties.noteable_id.type": "string",
	"definitions.Note.properties.noteable_type.type": "string",
	"definitions.Note.properties.system.type": "string",
	"definitions.Note.properties.updated_at.type": "string",
	"definitions.Note.properties.upvote?.type": "string",
	"definitions.Note.type": "object",
	"definitions.NotificationSetting.description": "This feature was introduced in GitLab 8.12",
	"definitions.NotificationSetting.properties.events.type": "string",
	"definitions.NotificationSetting.properties.level.type": "string",
	"definitions.NotificationSetting.type": "object",
	"definitions.PersonalSnippet.description": "This feature was introduced in GitLab 8.15.",
	"definitions.PersonalSnippet.properties.author.$ref": "#/definitions/UserBasic",
	"definitions.PersonalSnippet.properties.created_at.type": "string",
	"definitions.PersonalSnippet.properties.file_name.type": "string",
	"definitions.PersonalSnippet.properties.id.type": "string",
	"definitions.PersonalSnippet.properties.raw_url.type": "string",
	"definitions.PersonalSnippet.properties.title.type": "string",
	"definitions.PersonalSnippet.properties.updated_at.type": "string",
	"definitions.PersonalSnippet.properties.web_url.type": "string",
	"definitions.PersonalSnippet.type": "object",
	"definitions.Pipeline.description": "This feature was introduced in GitLab 8.11.",
	"definitions.Pipeline.properties.before_sha.type": "string",
	"definitions.Pipeline.properties.committed_at.type": "string",
	"definitions.Pipeline.properties.coverage.type": "string",
	"definitions.Pipeline.properties.created_at.type": "string",
	"definitions.Pipeline.properties.duration.type": "string",
	"definitions.Pipeline.properties.finished_at.type": "string",
	"definitions.Pipeline.properties.id.type": "string",
	"definitions.Pipeline.properties.ref.type": "string",
	"definitions.Pipeline.properties.sha.type": "string",
	"definitions.Pipeline.properties.started_at.type": "string",
	"definitions.Pipeline.properties.status.type": "string",
	"definitions.Pipeline.properties.tag.type": "string",
	"definitions.Pipeline.properties.updated_at.type": "string",
	"definitions.Pipeline.properties.user.$ref": "#/definitions/UserBasic",
	"definitions.Pipeline.properties.yaml_errors.type": "string",
	"definitions.Pipeline.type": "object",
	"definitions.PipelineBasic.properties.id.type": "string",
	"definitions.PipelineBasic.properties.ref.type": "string",
	"definitions.PipelineBasic.properties.sha.type": "string",
	"definitions.PipelineBasic.properties.status.type": "string",
	"definitions.PipelineBasic.type": "object",
	"definitions.Project.description": "Unstar a project",
	"definitions.Project.properties.archived.type": "string",
	"definitions.Project.properties.avatar_url.type": "string",
	"definitions.Project.properties.builds_enabled.type": "string",
	"definitions.Project.properties.container_registry_enabled.type": "string",
	"definitions.Project.properties.created_at.type": "string",
	"definitions.Project.properties.creator_id.type": "string",
	"definitions.Project.properties.default_branch.type": "string",
	"definitions.Project.properties.description.type": "string",
	"definitions.Project.properties.forked_from_project.$ref": "#/definitions/BasicProjectDetails",
	"definitions.Project.properties.forks_count.type": "string",
	"definitions.Project.properties.http_url_to_repo.type": "string",
	"definitions.Project.properties.id.type": "string",
	"definitions.Project.properties.issues_enabled.type": "string",
	"definitions.Project.properties.last_activity_at.type": "string",
	"definitions.Project.properties.lfs_enabled.type": "string",
	"definitions.Project.properties.merge_requests_enabled.type": "string",
	"definitions.Project.properties.name.type": "string",
	"definitions.Project.properties.name_with_namespace.type": "string",
	"definitions.Project.properties.namespace.$ref": "#/definitions/Namespace",
	"definitions.Project.properties.only_allow_merge_if_all_discussions_are_resolved.type": "string",
	"definitions.Project.properties.only_allow_merge_if_build_succeeds.type": "string",
	"definitions.Project.properties.open_issues_count.type": "string",
	"definitions.Project.properties.owner.$ref": "#/definitions/UserBasic",
	"definitions.Project.properties.path.type": "string",
	"definitions.Project.properties.path_with_namespace.type": "string",
	"definitions.Project.properties.public.type": "string",
	"definitions.Project.properties.public_builds.type": "string",
	"definitions.Project.properties.request_access_enabled.type": "string",
	"definitions.Project.properties.runners_token.type": "string",
	"definitions.Project.properties.shared_runners_enabled.type": "string",
	"definitions.Project.properties.shared_with_groups.type": "string",
	"definitions.Project.properties.snippets_enabled.type": "string",
	"definitions.Project.properties.ssh_url_to_repo.type": "string",
	"definitions.Project.properties.star_count.type": "string",
	"definitions.Project.properties.statistics.$ref": "#/definitions/ProjectStatistics",
	"definitions.Project.properties.tag_list.type": "string",
	"definitions.Project.properties.visibility_level.type": "string",
	"definitions.Project.properties.web_url.type": "string",
	"definitions.Project.properties.wiki_enabled.type": "string",
	"definitions.Project.type": "object",
	"definitions.ProjectGroupLink.description": "Share the project with a group",
	"definitions.ProjectGroupLink.properties.expires_at.type": "string",
	"definitions.ProjectGroupLink.properties.group_access.type": "string",
	"definitions.ProjectGroupLink.properties.group_id.type": "string",
	"definitions.ProjectGroupLink.properties.id.type": "string",
	"definitions.ProjectGroupLink.properties.project_id.type": "string",
	"definitions.ProjectGroupLink.type": "object",
	"definitions.ProjectHook.description": "Deletes project hook",
	"definitions.ProjectHook.properties.build_events.type": "string",
	"definitions.ProjectHook.properties.created_at.type": "string",
	"definitions.ProjectHook.properties.enable_ssl_verification.type": "string",
	"definitions.ProjectHook.properties.id.type": "string",
	"definitions.ProjectHook.properties.issues_events.type": "string",
	"definitions.ProjectHook.properties.merge_requests_events.type": "string",
	"definitions.ProjectHook.properties.note_events.type": "string",
	"definitions.ProjectHook.properties.pipeline_events.type": "string",
	"definitions.ProjectHook.properties.project_id.type": "string",
	"definitions.ProjectHook.properties.push_events.type": "string",
	"definitions.ProjectHook.properties.tag_push_events.type": "string",
	"definitions.ProjectHook.properties.url.type": "string",
	"definitions.ProjectHook.properties.wiki_page_events.type": "string",
	"definitions.ProjectHook.type": "object",
	"definitions.ProjectService.description": "Get the service settings for project",
	"definitions.ProjectService.properties.active.type": "string",
	"definitions.ProjectService.properties.build_events.type": "string",
	"definitions.ProjectService.properties.created_at.type": "string",
	"definitions.ProjectService.properties.id.type": "string",
	"definitions.ProjectService.properties.issues_events.type": "string",
	"definitions.ProjectService.properties.merge_requests_events.type": "string",
	"definitions.ProjectService.properties.note_events.type": "string",
	"definitions.ProjectService.properties.pipeline_events.type": "string",
	"definitions.ProjectService.properties.properties.type": "string",
	"definitions.ProjectService.properties.push_events.type": "string",
	"definitions.ProjectService.properties.tag_push_events.type": "string",
	"definitions.ProjectService.properties.title.type": "string",
	"definitions.ProjectService.properties.updated_at.type": "string",
	"definitions.ProjectService.type": "object",
	"definitions.ProjectSnippet.description": "Update an existing project snippet",
	"definitions.ProjectSnippet.properties.author.$ref": "#/definitions/UserBasic",
	"definitions.ProjectSnippet.properties.created_at.type": "string",
	"definitions.ProjectSnippet.properties.expires_at.type": "string",
	"definitions.ProjectSnippet.properties.file_name.type": "string",
	"definitions.ProjectSnippet.properties.id.type": "string",
	"definitions.ProjectSnippet.properties.title.type": "string",
	"definitions.ProjectSnippet.properties.updated_at.type": "string",
	"definitions.ProjectSnippet.properties.web_url.type": "string",
	"definitions.ProjectSnippet.type": "object",
	"definitions.ProjectStatistics.properties.build_artifacts_size.type": "string",
	"definitions.ProjectStatistics.properties.commit_count.type": "string",
	"definitions.ProjectStatistics.properties.lfs_objects_size.type": "string",
	"definitions.ProjectStatistics.properties.repository_size.type": "string",
	"definitions.ProjectStatistics.properties.storage_size.type": "string",
	"definitions.ProjectStatistics.type": "object",
	"definitions.ProjectWithAccess.description": "Get a single project",
	"definitions.ProjectWithAccess.properties.archived.type": "string",
	"definitions.ProjectWithAccess.properties.avatar_url.type": "string",
	"definitions.ProjectWithAccess.properties.builds_enabled.type": "string",
	"definitions.ProjectWithAccess.properties.container_registry_enabled.type": "string",
	"definitions.ProjectWithAccess.properties.created_at.type": "string",
	"definitions.ProjectWithAccess.properties.creator_id.type": "string",
	"definitions.ProjectWithAccess.properties.default_branch.type": "string",
	"definitions.ProjectWithAccess.properties.description.type": "string",
	"definitions.ProjectWithAccess.properties.forked_from_project.$ref": "#/definitions/BasicProjectDetails",
	"definitions.ProjectWithAccess.properties.forks_count.type": "string",
	"definitions.ProjectWithAccess.properties.http_url_to_repo.type": "string",
	"definitions.ProjectWithAccess.properties.id.type": "string",
	"definitions.ProjectWithAccess.properties.issues_enabled.type": "string",
	"definitions.ProjectWithAccess.properties.last_activity_at.type": "string",
	"definitions.ProjectWithAccess.properties.lfs_enabled.type": "string",
	"definitions.ProjectWithAccess.properties.merge_requests_enabled.type": "string",
	"definitions.ProjectWithAccess.properties.name.type": "string",
	"definitions.ProjectWithAccess.properties.name_with_namespace.type": "string",
	"definitions.ProjectWithAccess.properties.namespace.$ref": "#/definitions/Namespace",
	"definitions.ProjectWithAccess.properties.only_allow_merge_if_all_discussions_are_resolved.type": "string",
	"definitions.ProjectWithAccess.properties.only_allow_merge_if_build_succeeds.type": "string",
	"definitions.ProjectWithAccess.properties.open_issues_count.type": "string",
	"definitions.ProjectWithAccess.properties.owner.$ref": "#/definitions/UserBasic",
	"definitions.ProjectWithAccess.properties.path.type": "string",
	"definitions.ProjectWithAccess.properties.path_with_namespace.type": "string",
	"definitions.ProjectWithAccess.properties.permissions.type": "string",
	"definitions.ProjectWithAccess.properties.public.type": "string",
	"definitions.ProjectWithAccess.properties.public_builds.type": "string",
	"definitions.ProjectWithAccess.properties.request_access_enabled.type": "string",
	"definitions.ProjectWithAccess.properties.runners_token.type": "string",
	"definitions.ProjectWithAccess.properties.shared_runners_enabled.type": "string",
	"definitions.ProjectWithAccess.properties.shared_with_groups.type": "string",
	"definitions.ProjectWithAccess.properties.snippets_enabled.type": "string",
	"definitions.ProjectWithAccess.properties.ssh_url_to_repo.type": "string",
	"definitions.ProjectWithAccess.properties.star_count.type": "string",
	"definitions.ProjectWithAccess.properties.statistics.$ref": "#/definitions/ProjectStatistics",
	"definitions.ProjectWithAccess.properties.tag_list.type": "string",
	"definitions.ProjectWithAccess.properties.visibility_level.type": "string",
	"definitions.ProjectWithAccess.properties.web_url.type": "string",
	"definitions.ProjectWithAccess.properties.wiki_enabled.type": "string",
	"definitions.ProjectWithAccess.type": "object",
	"definitions.Release.description": "Update a tag's release note",
	"definitions.Release.properties.description.type": "string",
	"definitions.Release.properties.tag_name.type": "string",
	"definitions.Release.type": "object",
	"definitions.RepoBranch.description": "Create branch",
	"definitions.RepoBranch.properties.commit.type": "string",
	"definitions.RepoBranch.properties.developers_can_merge.type": "string",
	"definitions.RepoBranch.properties.developers_can_push.type": "string",
	"definitions.RepoBranch.properties.merged.type": "string",
	"definitions.RepoBranch.properties.name.type": "string",
	"definitions.RepoBranch.properties.protected.type": "string",
	"definitions.RepoBranch.type": "object",
	"definitions.RepoCommit.description": "Get the commits of a merge request",
	"definitions.RepoCommit.properties.author_email.type": "string",
	"definitions.RepoCommit.properties.author_name.type": "string",
	"definitions.RepoCommit.properties.committer_email.type": "string",
	"definitions.RepoCommit.properties.committer_name.type": "string",
	"definitions.RepoCommit.properties.created_at.type": "string",
	"definitions.RepoCommit.properties.id.type": "string",
	"definitions.RepoCommit.properties.message.type": "string",
	"definitions.RepoCommit.properties.short_id.type": "string",
	"definitions.RepoCommit.properties.title.type": "string",
	"definitions.RepoCommit.type": "object",
	"definitions.RepoCommitDetail.description": "Get a specific commit of a project",
	"definitions.RepoCommitDetail.properties.author_email.type": "string",
	"definitions.RepoCommitDetail.properties.author_name.type": "string",
	"definitions.RepoCommitDetail.properties.authored_date.type": "string",
	"definitions.RepoCommitDetail.properties.committed_date.type": "string",
	"definitions.RepoCommitDetail.properties.committer_email.type": "string",
	"definitions.RepoCommitDetail.properties.committer_name.type": "string",
	"definitions.RepoCommitDetail.properties.created_at.type": "string",
	"definitions.RepoCommitDetail.properties.id.type": "string",
	"definitions.RepoCommitDetail.properties.message.type": "string",
	"definitions.RepoCommitDetail.properties.parent_ids.type": "string",
	"definitions.RepoCommitDetail.properties.short_id.type": "string",
	"definitions.RepoCommitDetail.properties.stats.$ref": "#/definitions/RepoCommitStats",
	"definitions.RepoCommitDetail.properties.status.type": "string",
	"definitions.RepoCommitDetail.properties.title.type": "string",
	"definitions.RepoCommitDetail.type": "object",
	"definitions.RepoCommitStats.properties.additions.type": "string",
	"definitions.RepoCommitStats.properties.deletions.type": "string",
	"definitions.RepoCommitStats.properties.total.type": "string",
	"definitions.RepoCommitStats.type": "object",
	"definitions.RepoDiff.properties.a_mode.type": "string",
	"definitions.RepoDiff.properties.b_mode.type": "string",
	"definitions.RepoDiff.properties.deleted_file.type": "string",
	"definitions.RepoDiff.properties.diff.type": "string",
	"definitions.RepoDiff.properties.new_file.type": "string",
	"definitions.RepoDiff.properties.new_path.type": "string",
	"definitions.RepoDiff.properties.old_path.type": "string",
	"definitions.RepoDiff.properties.renamed_file.type": "string",
	"definitions.RepoDiff.type": "object",
	"definitions.RepoLicense.description": "This feature was introduced in GitLab 8.7.",
	"definitions.RepoLicense.properties.conditions.type": "string",
	"definitions.RepoLicense.properties.content.type": "string",
	"definitions.RepoLicense.properties.description.type": "string",
	"definitions.RepoLicense.properties.html_url.type": "string",
	"definitions.RepoLicense.properties.key.type": "string",
	"definitions.RepoLicense.properties.limitations.type": "string",
	"definitions.RepoLicense.properties.name.type": "string",
	"definitions.RepoLicense.properties.nickname.type": "string",
	"definitions.RepoLicense.properties.permissions.type": "string",
	"definitions.RepoLicense.properties.popular.type": "string",
	"definitions.RepoLicense.properties.source_url.type": "string",
	"definitions.RepoLicense.type": "object",
	"definitions.RepoTag.description": "Create a new repository tag",
	"definitions.RepoTag.properties.commit.type": "string",
	"definitions.RepoTag.properties.message.type": "string",
	"definitions.RepoTag.properties.name.type": "string",
	"definitions.RepoTag.properties.release.$ref": "#/definitions/Release",
	"definitions.RepoTag.type": "object",
	"definitions.RepoTreeObject.description": "Get a project repository tree",
	"definitions.RepoTreeObject.properties.id.type": "string",
	"definitions.RepoTreeObject.properties.mode.type": "string",
	"definitions.RepoTreeObject.properties.name.type": "string",
	"definitions.RepoTreeObject.properties.path.type": "string",
	"definitions.RepoTreeObject.properties.type.type": "string",
	"definitions.RepoTreeObject.type": "object",
	"definitions.Runner.description": "Remove a runner",
	"definitions.Runner.properties.active.type": "string",
	"definitions.Runner.properties.description.type": "string",
	"definitions.Runner.properties.id.type": "string",
	"definitions.Runner.properties.is_shared.type": "string",
	"definitions.Runner.properties.name.type": "string",
	"definitions.Runner.type": "object",
	"definitions.RunnerDetails.description": "Update runner's details",
	"definitions.RunnerDetails.properties.active.type": "string",
	"definitions.RunnerDetails.properties.architecture.type": "string",
	"definitions.RunnerDetails.properties.contacted_at.type": "string",
	"definitions.RunnerDetails.properties.description.type": "string",
	"definitions.RunnerDetails.properties.id.type": "string",
	"definitions.RunnerDetails.properties.is_shared.type": "string",
	"definitions.RunnerDetails.properties.locked.type": "string",
	"definitions.RunnerDetails.properties.name.type": "string",
	"definitions.RunnerDetails.properties.platform.type": "string",
	"definitions.RunnerDetails.properties.projects.$ref": "#/definitions/BasicProjectDetails",
	"definitions.RunnerDetails.properties.revision.type": "string",
	"definitions.RunnerDetails.properties.run_untagged.type": "string",
	"definitions.RunnerDetails.properties.tag_list.type": "string",
	"definitions.RunnerDetails.properties.token.type": "string",
	"definitions.RunnerDetails.properties.version.type": "string",
	"definitions.RunnerDetails.type": "object",
	"definitions.SSHKey.description": "Delete an SSH key from the currently authenticated user",
	"definitions.SSHKey.properties.can_push.type": "string",
	"definitions.SSHKey.properties.created_at.type": "string",
	"definitions.SSHKey.properties.id.type": "string",
	"definitions.SSHKey.properties.key.type": "string",
	"definitions.SSHKey.properties.title.type": "string",
	"definitions.SSHKey.type": "object",
	"definitions.SSHKeyWithUser.description": "Get single ssh key by id. Only available to admin users",
	"definitions.SSHKeyWithUser.properties.can_push.type": "string",
	"definitions.SSHKeyWithUser.properties.created_at.type": "string",
	"definitions.SSHKeyWithUser.properties.id.type": "string",
	"definitions.SSHKeyWithUser.properties.key.type": "string",
	"definitions.SSHKeyWithUser.properties.title.type": "string",
	"definitions.SSHKeyWithUser.properties.user.$ref": "#/definitions/UserPublic",
	"definitions.SSHKeyWithUser.type": "object",
	"definitions.Template.description": "This feature was introduced in GitLab 8.15. This endpoint is deprecated and will be removed in GitLab 9.0.",
	"definitions.Template.properties.content.type": "string",
	"definitions.Template.properties.name.type": "string",
	"definitions.Template.type": "object",
	"definitions.TemplatesList.description": "This feature was introduced in GitLab 8.15. This endpoint is deprecated and will be removed in GitLab 9.0.",
	"definitions.TemplatesList.properties.name.type": "string",
	"definitions.TemplatesList.type": "object",
	"definitions.Todo.description": "Mark a todo as done",
	"definitions.Todo.properties.action_name.type": "string",
	"definitions.Todo.properties.author.$ref": "#/definitions/UserBasic",
	"definitions.Todo.properties.body.type": "string",
	"definitions.Todo.properties.created_at.type": "string",
	"definitions.Todo.properties.id.type": "string",
	"definitions.Todo.properties.project.$ref": "#/definitions/BasicProjectDetails",
	"definitions.Todo.properties.state.type": "string",
	"definitions.Todo.properties.target.type": "string",
	"definitions.Todo.properties.target_type.type": "string",
	"definitions.Todo.properties.target_url.type": "string",
	"definitions.Todo.type": "object",
	"definitions.Trigger.description": "Delete a trigger",
	"definitions.Trigger.properties.created_at.type": "string",
	"definitions.Trigger.properties.deleted_at.type": "string",
	"definitions.Trigger.properties.last_used.type": "string",
	"definitions.Trigger.properties.token.type": "string",
	"definitions.Trigger.properties.updated_at.type": "string",
	"definitions.Trigger.type": "object",
	"definitions.TriggerRequest.description": "Trigger a GitLab project build",
	"definitions.TriggerRequest.properties.id.type": "string",
	"definitions.TriggerRequest.properties.variables.type": "string",
	"definitions.TriggerRequest.type": "object",
	"definitions.User.properties.avatar_url.type": "string",
	"definitions.User.properties.bio.type": "string",
	"definitions.User.properties.created_at.type": "string",
	"definitions.User.properties.id.type": "string",
	"definitions.User.properties.is_admin.type": "string",
	"definitions.User.properties.linkedin.type": "string",
	"definitions.User.properties.location.type": "string",
	"definitions.User.properties.name.type": "string",
	"definitions.User.properties.organization.type": "string",
	"definitions.User.properties.skype.type": "string",
	"definitions.User.properties.state.type": "string",
	"definitions.User.properties.twitter.type": "string",
	"definitions.User.properties.username.type": "string",
	"definitions.User.properties.web_url.type": "string",
	"definitions.User.properties.website_url.type": "string",
	"definitions.User.type": "object",
	"definitions.UserBasic.description": "Get a single user",
	"definitions.UserBasic.properties.avatar_url.type": "string",
	"definitions.UserBasic.properties.id.type": "string",
	"definitions.UserBasic.properties.name.type": "string",
	"definitions.UserBasic.properties.state.type": "string",
	"definitions.UserBasic.properties.username.type": "string",
	"definitions.UserBasic.properties.web_url.type": "string",
	"definitions.UserBasic.type": "object",
	"definitions.UserPublic.description": "Get the currently authenticated user",
	"definitions.UserPublic.properties.avatar_url.type": "string",
	"definitions.UserPublic.properties.bio.type": "string",
	"definitions.UserPublic.properties.can_create_group.type": "string",
	"definitions.UserPublic.properties.can_create_project.type": "string",
	"definitions.UserPublic.properties.color_scheme_id.type": "string",
	"definitions.UserPublic.properties.confirmed_at.type": "string",
	"definitions.UserPublic.properties.created_at.type": "string",
	"definitions.UserPublic.properties.current_sign_in_at.type": "string",
	"definitions.UserPublic.properties.email.type": "string",
	"definitions.UserPublic.properties.external.type": "string",
	"definitions.UserPublic.properties.id.type": "string",
	"definitions.UserPublic.properties.identities.$ref": "#/definitions/Identity",
	"definitions.UserPublic.properties.is_admin.type": "string",
	"definitions.UserPublic.properties.last_sign_in_at.type": "string",
	"definitions.UserPublic.properties.linkedin.type": "string",
	"definitions.UserPublic.properties.location.type": "string",
	"definitions.UserPublic.properties.name.type": "string",
	"definitions.UserPublic.properties.organization.type": "string",
	"definitions.UserPublic.properties.projects_limit.type": "string",
	"definitions.UserPublic.properties.skype.type": "string",
	"definitions.UserPublic.properties.state.type": "string",
	"definitions.UserPublic.properties.theme_id.type": "string",
	"definitions.UserPublic.properties.twitter.type": "string",
	"definitions.UserPublic.properties.two_factor_enabled.type": "string",
	"definitions.UserPublic.properties.username.type": "string",
	"definitions.UserPublic.properties.web_url.type": "string",
	"definitions.UserPublic.properties.website_url.type": "string",
	"definitions.UserPublic.type": "object",
	"definitions.UserWithPrivateToken.description": "Login to get token",
	"definitions.UserWithPrivateToken.properties.avatar_url.type": "string",
	"definitions.UserWithPrivateToken.properties.bio.type": "string",
	"definitions.UserWithPrivateToken.properties.can_create_group.type": "string",
	"definitions.UserWithPrivateToken.properties.can_create_project.type": "string",
	"definitions.UserWithPrivateToken.properties.color_scheme_id.type": "string",
	"definitions.UserWithPrivateToken.properties.confirmed_at.type": "string",
	"definitions.UserWithPrivateToken.properties.created_at.type": "string",
	"definitions.UserWithPrivateToken.properties.current_sign_in_at.type": "string",
	"definitions.UserWithPrivateToken.properties.email.type": "string",
	"definitions.UserWithPrivateToken.properties.external.type": "string",
	"definitions.UserWithPrivateToken.properties.id.type": "string",
	"definitions.UserWithPrivateToken.properties.identities.$ref": "#/definitions/Identity",
	"definitions.UserWithPrivateToken.properties.is_admin.type": "string",
	"definitions.UserWithPrivateToken.properties.last_sign_in_at.type": "string",
	"definitions.UserWithPrivateToken.properties.linkedin.type": "string",
	"definitions.UserWithPrivateToken.properties.location.type": "string",
	"definitions.UserWithPrivateToken.properties.name.type": "string",
	"definitions.UserWithPrivateToken.properties.organization.type": "string",
	"definitions.UserWithPrivateToken.properties.private_token.type": "string",
	"definitions.UserWithPrivateToken.properties.projects_limit.type": "string",
	"definitions.UserWithPrivateToken.properties.skype.type": "string",
	"definitions.UserWithPrivateToken.properties.state.type": "string",
	"definitions.UserWithPrivateToken.properties.theme_id.type": "string",
	"definitions.UserWithPrivateToken.properties.twitter.type": "string",
	"definitions.UserWithPrivateToken.properties.two_factor_enabled.type": "string",
	"definitions.UserWithPrivateToken.properties.username.type": "string",
	"definitions.UserWithPrivateToken.properties.web_url.type": "string",
	"definitions.UserWithPrivateToken.properties.website_url.type": "string",
	"definitions.UserWithPrivateToken.type": "object",
	"definitions.Variable.description": "Delete an existing variable from a project",
	"definitions.Variable.properties.key.type": "string",
	"definitions.Variable.properties.value.type": "string",
	"definitions.Variable.type": "object",
	"host": "gitlab.com",
	"info.description": "The platform for modern developers\nGitLab unifies issues, code review, CI and CD into a single UI",
	"info.title": "Gitlab",
	"info.version": "v3",
	"info.x-apisguru-categories.length": 1,
	"info.x-apisguru-categories[0]": "developer_tools",
	"info.x-logo.backgroundColor": "#FFFFFF",
	"info.x-logo.url": "https://api.apis.guru/v2/cache/logo/https_cloud.githubusercontent.com_assets_21603_24521837_642e411c-1585-11e7-817f-61082580b6f6.png",
	"info.x-origin.length": 2,
	"info.x-origin[0].format": "swagger",
	"info.x-origin[0].url": "https://axil.gitlab.io/swaggerapi/static/swagger.json",
	"info.x-origin[0].version": "2.0",
	"info.x-origin[1].format": "swagger",
	"info.x-origin[1].url": "https://raw.githubusercontent.com/Mermade/openapi-definitions/master/gitlab/swagger.json",
	"info.x-origin[1].version": "2.0",
	"info.x-preferred": true,
	"info.x-providerName": "gitlab.com",
	"paths./v3/application/settings.get.description": "Get the current application settings",
	"paths./v3/application/settings.get.operationId": "getV3ApplicationSettings",
	"paths./v3/application/settings.get.produces.length": 1,
	"paths./v3/application/settings.get.produces[0]": "application/json",
	"paths./v3/application/settings.get.responses.200.description": "Get the current application settings",
	"paths./v3/application/settings.get.responses.200.schema.$ref": "#/definitions/ApplicationSetting",
	"paths./v3/application/settings.get.summary": "Get the current application settings",
	"paths./v3/application/settings.get.tags.length": 1,
	"paths./v3/application/settings.get.tags[0]": "application",
	"paths./v3/application/settings.put.consumes.length": 1,
	"paths./v3/application/settings.put.consumes[0]": "application/json",
	"paths./v3/application/settings.put.description": "Modify application settings",
	"paths./v3/application/settings.put.operationId": "putV3ApplicationSettings",
	"paths./v3/application/settings.put.parameters.length": 64,
	"paths./v3/application/settings.put.parameters[0].description": "Determine if developers can push to master",
	"paths./v3/application/settings.put.parameters[0].enum.length": 3,
	"paths./v3/application/settings.put.parameters[0].enum[0]": 0,
	"paths./v3/application/settings.put.parameters[0].enum[1]": 1,
	"paths./v3/application/settings.put.parameters[0].enum[2]": 2,
	"paths./v3/application/settings.put.parameters[0].format": "int32",
	"paths./v3/application/settings.put.parameters[0].in": "formData",
	"paths./v3/application/settings.put.parameters[0].name": "default_branch_protection",
	"paths./v3/application/settings.put.parameters[0].required": false,
	"paths./v3/application/settings.put.parameters[0].type": "integer",
	"paths./v3/application/settings.put.parameters[10].description": "Maximum attachment size in MB",
	"paths./v3/application/settings.put.parameters[10].format": "int32",
	"paths./v3/application/settings.put.parameters[10].in": "formData",
	"paths./v3/application/settings.put.parameters[10].name": "max_attachment_size",
	"paths./v3/application/settings.put.parameters[10].required": false,
	"paths./v3/application/settings.put.parameters[10].type": "integer",
	"paths./v3/application/settings.put.parameters[11].description": "Session duration in minutes. GitLab restart is required to apply changes.",
	"paths./v3/application/settings.put.parameters[11].format": "int32",
	"paths./v3/application/settings.put.parameters[11].in": "formData",
	"paths./v3/application/settings.put.parameters[11].name": "session_expire_delay",
	"paths./v3/application/settings.put.parameters[11].required": false,
	"paths./v3/application/settings.put.parameters[11].type": "integer",
	"paths./v3/application/settings.put.parameters[12].description": "Allow users to register any application to use GitLab as an OAuth provider",
	"paths./v3/application/settings.put.parameters[12].in": "formData",
	"paths./v3/application/settings.put.parameters[12].name": "user_oauth_applications",
	"paths./v3/application/settings.put.parameters[12].required": false,
	"paths./v3/application/settings.put.parameters[12].type": "boolean",
	"paths./v3/application/settings.put.parameters[13].description": "Newly registered users will by default be external",
	"paths./v3/application/settings.put.parameters[13].in": "formData",
	"paths./v3/application/settings.put.parameters[13].name": "user_default_external",
	"paths./v3/application/settings.put.parameters[13].required": false,
	"paths./v3/application/settings.put.parameters[13].type": "boolean",
	"paths./v3/application/settings.put.parameters[14].description": "Flag indicating if sign up is enabled",
	"paths./v3/application/settings.put.parameters[14].in": "formData",
	"paths./v3/application/settings.put.parameters[14].name": "signup_enabled",
	"paths./v3/application/settings.put.parameters[14].required": false,
	"paths./v3/application/settings.put.parameters[14].type": "boolean",
	"paths./v3/application/settings.put.parameters[15].description": "Send confirmation email on sign-up",
	"paths./v3/application/settings.put.parameters[15].in": "formData",
	"paths./v3/application/settings.put.parameters[15].name": "send_user_confirmation_email",
	"paths./v3/application/settings.put.parameters[15].required": false,
	"paths./v3/application/settings.put.parameters[15].type": "boolean",
	"paths./v3/application/settings.put.parameters[16].description": "ONLY users with e-mail addresses that match these domain(s) will be able to sign-up. Wildcards allowed. Use separate lines for multiple entries. Ex: domain.com, *.domain.com",
	"paths./v3/application/settings.put.parameters[16].in": "formData",
	"paths./v3/application/settings.put.parameters[16].name": "domain_whitelist",
	"paths./v3/application/settings.put.parameters[16].required": false,
	"paths./v3/application/settings.put.parameters[16].type": "string",
	"paths./v3/application/settings.put.parameters[17].description": "Enable domain blacklist for sign ups",
	"paths./v3/application/settings.put.parameters[17].in": "formData",
	"paths./v3/application/settings.put.parameters[17].name": "domain_blacklist_enabled",
	"paths./v3/application/settings.put.parameters[17].required": false,
	"paths./v3/application/settings.put.parameters[17].type": "boolean",
	"paths./v3/application/settings.put.parameters[18].description": "Users with e-mail addresses that match these domain(s) will NOT be able to sign-up. Wildcards allowed. Use separate lines for multiple entries. Ex: domain.com, *.domain.com",
	"paths./v3/application/settings.put.parameters[18].in": "formData",
	"paths./v3/application/settings.put.parameters[18].name": "domain_blacklist",
	"paths./v3/application/settings.put.parameters[18].required": true,
	"paths./v3/application/settings.put.parameters[18].type": "string",
	"paths./v3/application/settings.put.parameters[19].description": "Text shown after sign up",
	"paths./v3/application/settings.put.parameters[19].in": "formData",
	"paths./v3/application/settings.put.parameters[19].name": "after_sign_up_text",
	"paths./v3/application/settings.put.parameters[19].required": false,
	"paths./v3/application/settings.put.parameters[19].type": "string",
	"paths./v3/application/settings.put.parameters[1].description": "The default project visibility",
	"paths./v3/application/settings.put.parameters[1].enum.length": 3,
	"paths./v3/application/settings.put.parameters[1].enum[0]": 0,
	"paths./v3/application/settings.put.parameters[1].enum[1]": 10,
	"paths./v3/application/settings.put.parameters[1].enum[2]": 20,
	"paths./v3/application/settings.put.parameters[1].format": "int32",
	"paths./v3/application/settings.put.parameters[1].in": "formData",
	"paths./v3/application/settings.put.parameters[1].name": "default_project_visibility",
	"paths./v3/application/settings.put.parameters[1].required": false,
	"paths./v3/application/settings.put.parameters[1].type": "integer",
	"paths./v3/application/settings.put.parameters[20].description": "Flag indicating if sign in is enabled",
	"paths./v3/application/settings.put.parameters[20].in": "formData",
	"paths./v3/application/settings.put.parameters[20].name": "signin_enabled",
	"paths./v3/application/settings.put.parameters[20].required": false,
	"paths./v3/application/settings.put.parameters[20].type": "boolean",
	"paths./v3/application/settings.put.parameters[21].description": "Require all users to setup Two-factor authentication",
	"paths./v3/application/settings.put.parameters[21].in": "formData",
	"paths./v3/application/settings.put.parameters[21].name": "require_two_factor_authentication",
	"paths./v3/application/settings.put.parameters[21].required": false,
	"paths./v3/application/settings.put.parameters[21].type": "boolean",
	"paths./v3/application/settings.put.parameters[22].description": "Amount of time (in hours) that users are allowed to skip forced configuration of two-factor authentication",
	"paths./v3/application/settings.put.parameters[22].format": "int32",
	"paths./v3/application/settings.put.parameters[22].in": "formData",
	"paths./v3/application/settings.put.parameters[22].name": "two_factor_grace_period",
	"paths./v3/application/settings.put.parameters[22].required": true,
	"paths./v3/application/settings.put.parameters[22].type": "integer",
	"paths./v3/application/settings.put.parameters[23].description": "We will redirect non-logged in users to this page",
	"paths./v3/application/settings.put.parameters[23].in": "formData",
	"paths./v3/application/settings.put.parameters[23].name": "home_page_url",
	"paths./v3/application/settings.put.parameters[23].required": false,
	"paths./v3/application/settings.put.parameters[23].type": "string",
	"paths./v3/application/settings.put.parameters[24].description": "We will redirect users to this page after they sign out",
	"paths./v3/application/settings.put.parameters[24].in": "formData",
	"paths./v3/application/settings.put.parameters[24].name": "after_sign_out_path",
	"paths./v3/application/settings.put.parameters[24].required": false,
	"paths./v3/application/settings.put.parameters[24].type": "string",
	"paths./v3/application/settings.put.parameters[25].description": "The sign in text of the GitLab application",
	"paths./v3/application/settings.put.parameters[25].in": "formData",
	"paths./v3/application/settings.put.parameters[25].name": "sign_in_text",
	"paths./v3/application/settings.put.parameters[25].required": false,
	"paths./v3/application/settings.put.parameters[25].type": "string",
	"paths./v3/application/settings.put.parameters[26].description": "Custom text displayed on the help page",
	"paths./v3/application/settings.put.parameters[26].in": "formData",
	"paths./v3/application/settings.put.parameters[26].name": "help_page_text",
	"paths./v3/application/settings.put.parameters[26].required": false,
	"paths./v3/application/settings.put.parameters[26].type": "string",
	"paths./v3/application/settings.put.parameters[27].description": "Enable shared runners for new projects",
	"paths./v3/application/settings.put.parameters[27].in": "formData",
	"paths./v3/application/settings.put.parameters[27].name": "shared_runners_enabled",
	"paths./v3/application/settings.put.parameters[27].required": false,
	"paths./v3/application/settings.put.parameters[27].type": "boolean",
	"paths./v3/application/settings.put.parameters[28].description": "Shared runners text ",
	"paths./v3/application/settings.put.parameters[28].in": "formData",
	"paths./v3/application/settings.put.parameters[28].name": "shared_runners_text",
	"paths./v3/application/settings.put.parameters[28].required": true,
	"paths./v3/application/settings.put.parameters[28].type": "string",
	"paths./v3/application/settings.put.parameters[29].description": "Set the maximum file size each build's artifacts can have",
	"paths./v3/application/settings.put.parameters[29].format": "int32",
	"paths./v3/application/settings.put.parameters[29].in": "formData",
	"paths./v3/application/settings.put.parameters[29].name": "max_artifacts_size",
	"paths./v3/application/settings.put.parameters[29].required": false,
	"paths./v3/application/settings.put.parameters[29].type": "integer",
	"paths./v3/application/settings.put.parameters[2].description": "The default snippet visibility",
	"paths./v3/application/settings.put.parameters[2].enum.length": 3,
	"paths./v3/application/settings.put.parameters[2].enum[0]": 0,
	"paths./v3/application/settings.put.parameters[2].enum[1]": 10,
	"paths./v3/application/settings.put.parameters[2].enum[2]": 20,
	"paths./v3/application/settings.put.parameters[2].format": "int32",
	"paths./v3/application/settings.put.parameters[2].in": "formData",
	"paths./v3/application/settings.put.parameters[2].name": "default_snippet_visibility",
	"paths./v3/application/settings.put.parameters[2].required": false,
	"paths./v3/application/settings.put.parameters[2].type": "integer",
	"paths./v3/application/settings.put.parameters[30].description": "Authorization token duration (minutes)",
	"paths./v3/application/settings.put.parameters[30].format": "int32",
	"paths./v3/application/settings.put.parameters[30].in": "formData",
	"paths./v3/application/settings.put.parameters[30].name": "container_registry_token_expire_delay",
	"paths./v3/application/settings.put.parameters[30].required": false,
	"paths./v3/application/settings.put.parameters[30].type": "integer",
	"paths./v3/application/settings.put.parameters[31].description": "Enable the InfluxDB metrics",
	"paths./v3/application/settings.put.parameters[31].in": "formData",
	"paths./v3/application/settings.put.parameters[31].name": "metrics_enabled",
	"paths./v3/application/settings.put.parameters[31].required": false,
	"paths./v3/application/settings.put.parameters[31].type": "boolean",
	"paths./v3/application/settings.put.parameters[32].description": "The InfluxDB host",
	"paths./v3/application/settings.put.parameters[32].in": "formData",
	"paths./v3/application/settings.put.parameters[32].name": "metrics_host",
	"paths./v3/application/settings.put.parameters[32].required": true,
	"paths./v3/application/settings.put.parameters[32].type": "string",
	"paths./v3/application/settings.put.parameters[33].description": "The UDP port to use for connecting to InfluxDB",
	"paths./v3/application/settings.put.parameters[33].format": "int32",
	"paths./v3/application/settings.put.parameters[33].in": "formData",
	"paths./v3/application/settings.put.parameters[33].name": "metrics_port",
	"paths./v3/application/settings.put.parameters[33].required": true,
	"paths./v3/application/settings.put.parameters[33].type": "integer",
	"paths./v3/application/settings.put.parameters[34].description": "The amount of InfluxDB connections to open",
	"paths./v3/application/settings.put.parameters[34].format": "int32",
	"paths./v3/application/settings.put.parameters[34].in": "formData",
	"paths./v3/application/settings.put.parameters[34].name": "metrics_pool_size",
	"paths./v3/application/settings.put.parameters[34].required": true,
	"paths./v3/application/settings.put.parameters[34].type": "integer",
	"paths./v3/application/settings.put.parameters[35].description": "The amount of seconds after which an InfluxDB connection will time out",
	"paths./v3/application/settings.put.parameters[35].format": "int32",
	"paths./v3/application/settings.put.parameters[35].in": "formData",
	"paths./v3/application/settings.put.parameters[35].name": "metrics_timeout",
	"paths./v3/application/settings.put.parameters[35].required": true,
	"paths./v3/application/settings.put.parameters[35].type": "integer",
	"paths./v3/application/settings.put.parameters[36].description": "A method call is only tracked when it takes longer to complete than the given amount of milliseconds.",
	"paths./v3/application/settings.put.parameters[36].format": "int32",
	"paths./v3/application/settings.put.parameters[36].in": "formData",
	"paths./v3/application/settings.put.parameters[36].name": "metrics_method_call_threshold",
	"paths./v3/application/settings.put.parameters[36].required": true,
	"paths./v3/application/settings.put.parameters[36].type": "integer",
	"paths./v3/application/settings.put.parameters[37].description": "The sampling interval in seconds",
	"paths./v3/application/settings.put.parameters[37].format": "int32",
	"paths./v3/application/settings.put.parameters[37].in": "formData",
	"paths./v3/application/settings.put.parameters[37].name": "metrics_sample_interval",
	"paths./v3/application/settings.put.parameters[37].required": true,
	"paths./v3/application/settings.put.parameters[37].type": "integer",
	"paths./v3/application/settings.put.parameters[38].description": "The amount of points to store in a single UDP packet",
	"paths./v3/application/settings.put.parameters[38].format": "int32",
	"paths./v3/application/settings.put.parameters[38].in": "formData",
	"paths./v3/application/settings.put.parameters[38].name": "metrics_packet_size",
	"paths./v3/application/settings.put.parameters[38].required": true,
	"paths./v3/application/settings.put.parameters[38].type": "integer",
	"paths./v3/application/settings.put.parameters[39].description": "Enable Sidekiq Job Throttling",
	"paths./v3/application/settings.put.parameters[39].in": "formData",
	"paths./v3/application/settings.put.parameters[39].name": "sidekiq_throttling_enabled",
	"paths./v3/application/settings.put.parameters[39].required": false,
	"paths./v3/application/settings.put.parameters[39].type": "boolean",
	"paths./v3/application/settings.put.parameters[3].description": "The default group visibility",
	"paths./v3/application/settings.put.parameters[3].enum.length": 3,
	"paths./v3/application/settings.put.parameters[3].enum[0]": 0,
	"paths./v3/application/settings.put.parameters[3].enum[1]": 10,
	"paths./v3/application/settings.put.parameters[3].enum[2]": 20,
	"paths./v3/application/settings.put.parameters[3].format": "int32",
	"paths./v3/application/settings.put.parameters[3].in": "formData",
	"paths./v3/application/settings.put.parameters[3].name": "default_group_visibility",
	"paths./v3/application/settings.put.parameters[3].required": false,
	"paths./v3/application/settings.put.parameters[3].type": "integer",
	"paths./v3/application/settings.put.parameters[40].description": "Choose which queues you wish to throttle",
	"paths./v3/application/settings.put.parameters[40].in": "formData",
	"paths./v3/application/settings.put.parameters[40].items.type": "string",
	"paths./v3/application/settings.put.parameters[40].name": "sidekiq_throttling_queus",
	"paths./v3/application/settings.put.parameters[40].required": true,
	"paths./v3/application/settings.put.parameters[40].type": "array",
	"paths./v3/application/settings.put.parameters[41].description": "The factor by which the queues should be throttled. A value between 0.0 and 1.0, exclusive.",
	"paths./v3/application/settings.put.parameters[41].format": "float",
	"paths./v3/application/settings.put.parameters[41].in": "formData",
	"paths./v3/application/settings.put.parameters[41].name": "sidekiq_throttling_factor",
	"paths./v3/application/settings.put.parameters[41].required": true,
	"paths./v3/application/settings.put.parameters[41].type": "number",
	"paths./v3/application/settings.put.parameters[42].description": "Helps prevent bots from creating accounts",
	"paths./v3/application/settings.put.parameters[42].in": "formData",
	"paths./v3/application/settings.put.parameters[42].name": "recaptcha_enabled",
	"paths./v3/application/settings.put.parameters[42].required": false,
	"paths./v3/application/settings.put.parameters[42].type": "boolean",
	"paths./v3/application/settings.put.parameters[43].description": "Generate site key at http://www.google.com/recaptcha",
	"paths./v3/application/settings.put.parameters[43].in": "formData",
	"paths./v3/application/settings.put.parameters[43].name": "recaptcha_site_key",
	"paths./v3/application/settings.put.parameters[43].required": true,
	"paths./v3/application/settings.put.parameters[43].type": "string",
	"paths./v3/application/settings.put.parameters[44].description": "Generate private key at http://www.google.com/recaptcha",
	"paths./v3/application/settings.put.parameters[44].in": "formData",
	"paths./v3/application/settings.put.parameters[44].name": "recaptcha_private_key",
	"paths./v3/application/settings.put.parameters[44].required": true,
	"paths./v3/application/settings.put.parameters[44].type": "string",
	"paths./v3/application/settings.put.parameters[45].description": "Helps prevent bots from creating issues",
	"paths./v3/application/settings.put.parameters[45].in": "formData",
	"paths./v3/application/settings.put.parameters[45].name": "akismet_enabled",
	"paths./v3/application/settings.put.parameters[45].required": false,
	"paths./v3/application/settings.put.parameters[45].type": "boolean",
	"paths./v3/application/settings.put.parameters[46].description": "Generate API key at http://www.akismet.com",
	"paths./v3/application/settings.put.parameters[46].in": "formData",
	"paths./v3/application/settings.put.parameters[46].name": "akismet_api_key",
	"paths./v3/application/settings.put.parameters[46].required": true,
	"paths./v3/application/settings.put.parameters[46].type": "string",
	"paths./v3/application/settings.put.parameters[47].description": "Abuse reports will be sent to this address if it is set. Abuse reports are always available in the admin area.",
	"paths./v3/application/settings.put.parameters[47].in": "formData",
	"paths./v3/application/settings.put.parameters[47].name": "admin_notification_email",
	"paths./v3/application/settings.put.parameters[47].required": false,
	"paths./v3/application/settings.put.parameters[47].type": "string",
	"paths./v3/application/settings.put.parameters[48].description": "Sentry is an error reporting and logging tool which is currently not shipped with GitLab, get it here: https://getsentry.com",
	"paths./v3/application/settings.put.parameters[48].in": "formData",
	"paths./v3/application/settings.put.parameters[48].name": "sentry_enabled",
	"paths./v3/application/settings.put.parameters[48].required": false,
	"paths./v3/application/settings.put.parameters[48].type": "boolean",
	"paths./v3/application/settings.put.parameters[49].description": "Sentry Data Source Name",
	"paths./v3/application/settings.put.parameters[49].in": "formData",
	"paths./v3/application/settings.put.parameters[49].name": "sentry_dsn",
	"paths./v3/application/settings.put.parameters[49].required": true,
	"paths./v3/application/settings.put.parameters[49].type": "string",
	"paths./v3/application/settings.put.parameters[4].description": "Selected levels cannot be used by non-admin users for projects or snippets. If the public level is restricted, user profiles are only visible to logged in users.",
	"paths./v3/application/settings.put.parameters[4].in": "formData",
	"paths./v3/application/settings.put.parameters[4].items.type": "string",
	"paths./v3/application/settings.put.parameters[4].name": "restricted_visibility_levels",
	"paths./v3/application/settings.put.parameters[4].required": false,
	"paths./v3/application/settings.put.parameters[4].type": "array",
	"paths./v3/application/settings.put.parameters[50].description": "Storage paths for new projects",
	"paths./v3/application/settings.put.parameters[50].in": "formData",
	"paths./v3/application/settings.put.parameters[50].name": "repository_storage",
	"paths./v3/application/settings.put.parameters[50].required": false,
	"paths./v3/application/settings.put.parameters[50].type": "string",
	"paths./v3/application/settings.put.parameters[51].description": "GitLab will periodically run 'git fsck' in all project and wiki repositories to look for silent disk corruption issues.",
	"paths./v3/application/settings.put.parameters[51].in": "formData",
	"paths./v3/application/settings.put.parameters[51].name": "repository_checks_enabled",
	"paths./v3/application/settings.put.parameters[51].required": false,
	"paths./v3/application/settings.put.parameters[51].type": "boolean",
	"paths./v3/application/settings.put.parameters[52].description": "Enable Koding",
	"paths./v3/application/settings.put.parameters[52].in": "formData",
	"paths./v3/application/settings.put.parameters[52].name": "koding_enabled",
	"paths./v3/application/settings.put.parameters[52].required": false,
	"paths./v3/application/settings.put.parameters[52].type": "boolean",
	"paths./v3/application/settings.put.parameters[53].description": "The Koding team URL",
	"paths./v3/application/settings.put.parameters[53].in": "formData",
	"paths./v3/application/settings.put.parameters[53].name": "koding_url",
	"paths./v3/application/settings.put.parameters[53].required": true,
	"paths./v3/application/settings.put.parameters[53].type": "string",
	"paths./v3/application/settings.put.parameters[54].description": "Enable PlantUML",
	"paths./v3/application/settings.put.parameters[54].in": "formData",
	"paths./v3/application/settings.put.parameters[54].name": "plantuml_enabled",
	"paths./v3/application/settings.put.parameters[54].required": false,
	"paths./v3/application/settings.put.parameters[54].type": "boolean",
	"paths./v3/application/settings.put.parameters[55].description": "The PlantUML server URL",
	"paths./v3/application/settings.put.parameters[55].in": "formData",
	"paths./v3/application/settings.put.parameters[55].name": "plantuml_url",
	"paths./v3/application/settings.put.parameters[55].required": true,
	"paths./v3/application/settings.put.parameters[55].type": "string",
	"paths./v3/application/settings.put.parameters[56].description": "Let GitLab inform you when an update is available.",
	"paths./v3/application/settings.put.parameters[56].in": "formData",
	"paths./v3/application/settings.put.parameters[56].name": "version_check_enabled",
	"paths./v3/application/settings.put.parameters[56].required": false,
	"paths./v3/application/settings.put.parameters[56].type": "boolean",
	"paths./v3/application/settings.put.parameters[57].description": "Some email servers do not support overriding the email sender name. Enable this option to include the name of the author of the issue, merge request or comment in the email body instead.",
	"paths./v3/application/settings.put.parameters[57].in": "formData",
	"paths./v3/application/settings.put.parameters[57].name": "email_author_in_body",
	"paths./v3/application/settings.put.parameters[57].required": false,
	"paths./v3/application/settings.put.parameters[57].type": "boolean",
	"paths./v3/application/settings.put.parameters[58].description": "By default GitLab sends emails in HTML and plain text formats so mail clients can choose what format to use. Disable this option if you only want to send emails in plain text format.",
	"paths./v3/application/settings.put.parameters[58].in": "formData",
	"paths./v3/application/settings.put.parameters[58].name": "html_emails_enabled",
	"paths./v3/application/settings.put.parameters[58].required": false,
	"paths./v3/application/settings.put.parameters[58].type": "boolean",
	"paths./v3/application/settings.put.parameters[59].description": "Enable automatic repository housekeeping (git repack, git gc)",
	"paths./v3/application/settings.put.parameters[59].in": "formData",
	"paths./v3/application/settings.put.parameters[59].name": "housekeeping_enabled",
	"paths./v3/application/settings.put.parameters[59].required": false,
	"paths./v3/application/settings.put.parameters[59].type": "boolean",
	"paths./v3/application/settings.put.parameters[5].description": "Enabled sources for code import during project creation. OmniAuth must be configured for GitHub, Bitbucket, and GitLab.com",
	"paths./v3/application/settings.put.parameters[5].enum.length": 7,
	"paths./v3/application/settings.put.parameters[5].enum[0]": "github",
	"paths./v3/application/settings.put.parameters[5].enum[1]": "bitbucket",
	"paths./v3/application/settings.put.parameters[5].enum[2]": "gitlab",
	"paths./v3/application/settings.put.parameters[5].enum[3]": "google_code",
	"paths./v3/application/settings.put.parameters[5].enum[4]": "fogbugz",
	"paths./v3/application/settings.put.parameters[5].enum[5]": "git",
	"paths./v3/application/settings.put.parameters[5].enum[6]": "gitlab_project",
	"paths./v3/application/settings.put.parameters[5].in": "formData",
	"paths./v3/application/settings.put.parameters[5].items.type": "string",
	"paths./v3/application/settings.put.parameters[5].name": "import_sources",
	"paths./v3/application/settings.put.parameters[5].required": false,
	"paths./v3/application/settings.put.parameters[5].type": "array",
	"paths./v3/application/settings.put.parameters[60].description": "Creating pack file bitmaps makes housekeeping take a little longer but bitmaps should accelerate 'git clone' performance.",
	"paths./v3/application/settings.put.parameters[60].in": "formData",
	"paths./v3/application/settings.put.parameters[60].name": "housekeeping_bitmaps_enabled",
	"paths./v3/application/settings.put.parameters[60].required": true,
	"paths./v3/application/settings.put.parameters[60].type": "boolean",
	"paths./v3/application/settings.put.parameters[61].description": "Number of Git pushes after which an incremental 'git repack' is run.",
	"paths./v3/application/settings.put.parameters[61].format": "int32",
	"paths./v3/application/settings.put.parameters[61].in": "formData",
	"paths./v3/application/settings.put.parameters[61].name": "housekeeping_incremental_repack_period",
	"paths./v3/application/settings.put.parameters[61].required": true,
	"paths./v3/application/settings.put.parameters[61].type": "integer",
	"paths./v3/application/settings.put.parameters[62].description": "Number of Git pushes after which a full 'git repack' is run.",
	"paths./v3/application/settings.put.parameters[62].format": "int32",
	"paths./v3/application/settings.put.parameters[62].in": "formData",
	"paths./v3/application/settings.put.parameters[62].name": "housekeeping_full_repack_period",
	"paths./v3/application/settings.put.parameters[62].required": true,
	"paths./v3/application/settings.put.parameters[62].type": "integer",
	"paths./v3/application/settings.put.parameters[63].description": "Number of Git pushes after which 'git gc' is run.",
	"paths./v3/application/settings.put.parameters[63].format": "int32",
	"paths./v3/application/settings.put.parameters[63].in": "formData",
	"paths./v3/application/settings.put.parameters[63].name": "housekeeping_gc_period",
	"paths./v3/application/settings.put.parameters[63].required": true,
	"paths./v3/application/settings.put.parameters[63].type": "integer",
	"paths./v3/application/settings.put.parameters[6].description": "Disable certain OAuth sign-in sources",
	"paths./v3/application/settings.put.parameters[6].in": "formData",
	"paths./v3/application/settings.put.parameters[6].items.type": "string",
	"paths./v3/application/settings.put.parameters[6].name": "disabled_oauth_sign_in_sources",
	"paths./v3/application/settings.put.parameters[6].required": false,
	"paths./v3/application/settings.put.parameters[6].type": "array",
	"paths./v3/application/settings.put.parameters[7].description": "Allow only the selected protocols to be used for Git access.",
	"paths./v3/application/settings.put.parameters[7].enum.length": 3,
	"paths./v3/application/settings.put.parameters[7].enum[0]": "ssh",
	"paths./v3/application/settings.put.parameters[7].enum[1]": "http",
	"paths./v3/application/settings.put.parameters[7].enum[2]": "nil",
	"paths./v3/application/settings.put.parameters[7].in": "formData",
	"paths./v3/application/settings.put.parameters[7].name": "enabled_git_access_protocol",
	"paths./v3/application/settings.put.parameters[7].required": false,
	"paths./v3/application/settings.put.parameters[7].type": "string",
	"paths./v3/application/settings.put.parameters[8].description": "Flag indicating if the Gravatar service is enabled",
	"paths./v3/application/settings.put.parameters[8].in": "formData",
	"paths./v3/application/settings.put.parameters[8].name": "gravatar_enabled",
	"paths./v3/application/settings.put.parameters[8].required": false,
	"paths./v3/application/settings.put.parameters[8].type": "boolean",
	"paths./v3/application/settings.put.parameters[9].description": "The maximum number of personal projects",
	"paths./v3/application/settings.put.parameters[9].format": "int32",
	"paths./v3/application/settings.put.parameters[9].in": "formData",
	"paths./v3/application/settings.put.parameters[9].name": "default_projects_limit",
	"paths./v3/application/settings.put.parameters[9].required": false,
	"paths./v3/application/settings.put.parameters[9].type": "integer",
	"paths./v3/application/settings.put.produces.length": 1,
	"paths./v3/application/settings.put.produces[0]": "application/json",
	"paths./v3/application/settings.put.responses.200.description": "Modify application settings",
	"paths./v3/application/settings.put.responses.200.schema.$ref": "#/definitions/ApplicationSetting",
	"paths./v3/application/settings.put.summary": "Modify application settings",
	"paths./v3/application/settings.put.tags.length": 1,
	"paths./v3/application/settings.put.tags[0]": "application",
	"paths./v3/ci/lint.post.consumes.length": 1,
	"paths./v3/ci/lint.post.consumes[0]": "application/json",
	"paths./v3/ci/lint.post.description": "Validation of .gitlab-ci.yml content",
	"paths./v3/ci/lint.post.operationId": "postV3CiLint",
	"paths./v3/ci/lint.post.parameters.length": 1,
	"paths./v3/ci/lint.post.parameters[0].description": "Content of .gitlab-ci.yml",
	"paths./v3/ci/lint.post.parameters[0].in": "formData",
	"paths./v3/ci/lint.post.parameters[0].name": "content",
	"paths./v3/ci/lint.post.parameters[0].required": true,
	"paths./v3/ci/lint.post.parameters[0].type": "string",
	"paths./v3/ci/lint.post.produces.length": 1,
	"paths./v3/ci/lint.post.produces[0]": "application/json",
	"paths./v3/ci/lint.post.responses.201.description": "Validation of .gitlab-ci.yml content",
	"paths./v3/ci/lint.post.summary": "Validation of .gitlab-ci.yml content",
	"paths./v3/ci/lint.post.tags.length": 1,
	"paths./v3/ci/lint.post.tags[0]": "ci",
	"paths./v3/deploy_keys.get.operationId": "getV3DeployKeys",
	"paths./v3/deploy_keys.get.produces.length": 1,
	"paths./v3/deploy_keys.get.produces[0]": "application/json",
	"paths./v3/deploy_keys.get.responses.200.description": "get DeployKey(s)",
	"paths./v3/deploy_keys.get.tags.length": 1,
	"paths./v3/deploy_keys.get.tags[0]": "deploy_keys",
	"paths./v3/dockerfiles.get.description": "This feature was introduced in GitLab 8.15. This endpoint is deprecated and will be removed in GitLab 9.0.",
	"paths./v3/dockerfiles.get.operationId": "getV3Dockerfiles",
	"paths./v3/dockerfiles.get.produces.length": 1,
	"paths./v3/dockerfiles.get.produces[0]": "application/json",
	"paths./v3/dockerfiles.get.responses.200.description": "Get the list of the available template",
	"paths./v3/dockerfiles.get.responses.200.schema.$ref": "#/definitions/TemplatesList",
	"paths./v3/dockerfiles.get.summary": "Get the list of the available template",
	"paths./v3/dockerfiles.get.tags.length": 1,
	"paths./v3/dockerfiles.get.tags[0]": "dockerfiles",
	"paths./v3/dockerfiles/{name}.get.description": "This feature was introduced in GitLab 8.15. This endpoint is deprecated and will be removed in GitLab 9.0.",
	"paths./v3/dockerfiles/{name}.get.operationId": "getV3DockerfilesName",
	"paths./v3/dockerfiles/{name}.get.parameters.length": 1,
	"paths./v3/dockerfiles/{name}.get.parameters[0].description": "The name of the template",
	"paths./v3/dockerfiles/{name}.get.parameters[0].in": "path",
	"paths./v3/dockerfiles/{name}.get.parameters[0].name": "name",
	"paths./v3/dockerfiles/{name}.get.parameters[0].required": true,
	"paths./v3/dockerfiles/{name}.get.parameters[0].type": "string",
	"paths./v3/dockerfiles/{name}.get.produces.length": 1,
	"paths./v3/dockerfiles/{name}.get.produces[0]": "application/json",
	"paths./v3/dockerfiles/{name}.get.responses.200.description": "Get the text for a specific template present in local filesystem",
	"paths./v3/dockerfiles/{name}.get.responses.200.schema.$ref": "#/definitions/Template",
	"paths./v3/dockerfiles/{name}.get.summary": "Get the text for a specific template present in local filesystem",
	"paths./v3/dockerfiles/{name}.get.tags.length": 1,
	"paths./v3/dockerfiles/{name}.get.tags[0]": "dockerfiles",
	"paths./v3/gitignores.get.description": "This feature was introduced in GitLab 8.8. This endpoint is deprecated and will be removed in GitLab 9.0.",
	"paths./v3/gitignores.get.operationId": "getV3Gitignores",
	"paths./v3/gitignores.get.produces.length": 1,
	"paths./v3/gitignores.get.produces[0]": "application/json",
	"paths./v3/gitignores.get.responses.200.description": "Get the list of the available template",
	"paths./v3/gitignores.get.responses.200.schema.$ref": "#/definitions/TemplatesList",
	"paths./v3/gitignores.get.summary": "Get the list of the available template",
	"paths./v3/gitignores.get.tags.length": 1,
	"paths./v3/gitignores.get.tags[0]": "gitignores",
	"paths./v3/gitignores/{name}.get.description": "This feature was introduced in GitLab 8.8. This endpoint is deprecated and will be removed in GitLab 9.0.",
	"paths./v3/gitignores/{name}.get.operationId": "getV3GitignoresName",
	"paths./v3/gitignores/{name}.get.parameters.length": 1,
	"paths./v3/gitignores/{name}.get.parameters[0].description": "The name of the template",
	"paths./v3/gitignores/{name}.get.parameters[0].in": "path",
	"paths./v3/gitignores/{name}.get.parameters[0].name": "name",
	"paths./v3/gitignores/{name}.get.parameters[0].required": true,
	"paths./v3/gitignores/{name}.get.parameters[0].type": "string",
	"paths./v3/gitignores/{name}.get.produces.length": 1,
	"paths./v3/gitignores/{name}.get.produces[0]": "application/json",
	"paths./v3/gitignores/{name}.get.responses.200.description": "Get the text for a specific template present in local filesystem",
	"paths./v3/gitignores/{name}.get.responses.200.schema.$ref": "#/definitions/Template",
	"paths./v3/gitignores/{name}.get.summary": "Get the text for a specific template present in local filesystem",
	"paths./v3/gitignores/{name}.get.tags.length": 1,
	"paths./v3/gitignores/{name}.get.tags[0]": "gitignores",
	"paths./v3/gitlab_ci_ymls.get.description": "This feature was introduced in GitLab 8.9. This endpoint is deprecated and will be removed in GitLab 9.0.",
	"paths./v3/gitlab_ci_ymls.get.operationId": "getV3GitlabCiYmls",
	"paths./v3/gitlab_ci_ymls.get.produces.length": 1,
	"paths./v3/gitlab_ci_ymls.get.produces[0]": "application/json",
	"paths./v3/gitlab_ci_ymls.get.responses.200.description": "Get the list of the available template",
	"paths./v3/gitlab_ci_ymls.get.responses.200.schema.$ref": "#/definitions/TemplatesList",
	"paths./v3/gitlab_ci_ymls.get.summary": "Get the list of the available template",
	"paths./v3/gitlab_ci_ymls.get.tags.length": 1,
	"paths./v3/gitlab_ci_ymls.get.tags[0]": "gitlab_ci_ymls",
	"paths./v3/gitlab_ci_ymls/{name}.get.description": "This feature was introduced in GitLab 8.9. This endpoint is deprecated and will be removed in GitLab 9.0.",
	"paths./v3/gitlab_ci_ymls/{name}.get.operationId": "getV3GitlabCiYmlsName",
	"paths./v3/gitlab_ci_ymls/{name}.get.parameters.length": 1,
	"paths./v3/gitlab_ci_ymls/{name}.get.parameters[0].description": "The name of the template",
	"paths./v3/gitlab_ci_ymls/{name}.get.parameters[0].in": "path",
	"paths./v3/gitlab_ci_ymls/{name}.get.parameters[0].name": "name",
	"paths./v3/gitlab_ci_ymls/{name}.get.parameters[0].required": true,
	"paths./v3/gitlab_ci_ymls/{name}.get.parameters[0].type": "string",
	"paths./v3/gitlab_ci_ymls/{name}.get.produces.length": 1,
	"paths./v3/gitlab_ci_ymls/{name}.get.produces[0]": "application/json",
	"paths./v3/gitlab_ci_ymls/{name}.get.responses.200.description": "Get the text for a specific template present in local filesystem",
	"paths./v3/gitlab_ci_ymls/{name}.get.responses.200.schema.$ref": "#/definitions/Template",
	"paths./v3/gitlab_ci_ymls/{name}.get.summary": "Get the text for a specific template present in local filesystem",
	"paths./v3/gitlab_ci_ymls/{name}.get.tags.length": 1,
	"paths./v3/gitlab_ci_ymls/{name}.get.tags[0]": "gitlab_ci_ymls",
	"paths./v3/groups.get.description": "Get a groups list",
	"paths./v3/groups.get.operationId": "getV3Groups",
	"paths./v3/groups.get.parameters.length": 8,
	"paths./v3/groups.get.parameters[0].description": "Include project statistics",
	"paths./v3/groups.get.parameters[0].in": "query",
	"paths./v3/groups.get.parameters[0].name": "statistics",
	"paths./v3/groups.get.parameters[0].required": false,
	"paths./v3/groups.get.parameters[0].type": "boolean",
	"paths./v3/groups.get.parameters[1].description": "Array of group ids to exclude from list",
	"paths./v3/groups.get.parameters[1].in": "formData",
	"paths./v3/groups.get.parameters[1].items.format": "int32",
	"paths./v3/groups.get.parameters[1].items.type": "integer",
	"paths./v3/groups.get.parameters[1].name": "skip_groups",
	"paths./v3/groups.get.parameters[1].required": false,
	"paths./v3/groups.get.parameters[1].type": "array",
	"paths./v3/groups.get.parameters[2].description": "Show all group that you have access to",
	"paths./v3/groups.get.parameters[2].in": "query",
	"paths./v3/groups.get.parameters[2].name": "all_available",
	"paths./v3/groups.get.parameters[2].required": false,
	"paths./v3/groups.get.parameters[2].type": "boolean",
	"paths./v3/groups.get.parameters[3].description": "Search for a specific group",
	"paths./v3/groups.get.parameters[3].in": "query",
	"paths./v3/groups.get.parameters[3].name": "search",
	"paths./v3/groups.get.parameters[3].required": false,
	"paths./v3/groups.get.parameters[3].type": "string",
	"paths./v3/groups.get.parameters[4].default": "name",
	"paths./v3/groups.get.parameters[4].description": "Order by name or path",
	"paths./v3/groups.get.parameters[4].enum.length": 2,
	"paths./v3/groups.get.parameters[4].enum[0]": "name",
	"paths./v3/groups.get.parameters[4].enum[1]": "path",
	"paths./v3/groups.get.parameters[4].in": "query",
	"paths./v3/groups.get.parameters[4].name": "order_by",
	"paths./v3/groups.get.parameters[4].required": false,
	"paths./v3/groups.get.parameters[4].type": "string",
	"paths./v3/groups.get.parameters[5].default": "asc",
	"paths./v3/groups.get.parameters[5].description": "Sort by asc (ascending) or desc (descending)",
	"paths./v3/groups.get.parameters[5].enum.length": 2,
	"paths./v3/groups.get.parameters[5].enum[0]": "asc",
	"paths./v3/groups.get.parameters[5].enum[1]": "desc",
	"paths./v3/groups.get.parameters[5].in": "query",
	"paths./v3/groups.get.parameters[5].name": "sort",
	"paths./v3/groups.get.parameters[5].required": false,
	"paths./v3/groups.get.parameters[5].type": "string",
	"paths./v3/groups.get.parameters[6].description": "Current page number",
	"paths./v3/groups.get.parameters[6].format": "int32",
	"paths./v3/groups.get.parameters[6].in": "query",
	"paths./v3/groups.get.parameters[6].name": "page",
	"paths./v3/groups.get.parameters[6].required": false,
	"paths./v3/groups.get.parameters[6].type": "integer",
	"paths./v3/groups.get.parameters[7].description": "Number of items per page",
	"paths./v3/groups.get.parameters[7].format": "int32",
	"paths./v3/groups.get.parameters[7].in": "query",
	"paths./v3/groups.get.parameters[7].name": "per_page",
	"paths./v3/groups.get.parameters[7].required": false,
	"paths./v3/groups.get.parameters[7].type": "integer",
	"paths./v3/groups.get.produces.length": 1,
	"paths./v3/groups.get.produces[0]": "application/json",
	"paths./v3/groups.get.responses.200.description": "Get a groups list",
	"paths./v3/groups.get.responses.200.schema.$ref": "#/definitions/Group",
	"paths./v3/groups.get.summary": "Get a groups list",
	"paths./v3/groups.get.tags.length": 1,
	"paths./v3/groups.get.tags[0]": "groups",
	"paths./v3/groups.post.consumes.length": 1,
	"paths./v3/groups.post.consumes[0]": "application/json",
	"paths./v3/groups.post.description": "Create a group. Available only for users who can create groups.",
	"paths./v3/groups.post.operationId": "postV3Groups",
	"paths./v3/groups.post.parameters.length": 6,
	"paths./v3/groups.post.parameters[0].description": "The name of the group",
	"paths./v3/groups.post.parameters[0].in": "formData",
	"paths./v3/groups.post.parameters[0].name": "name",
	"paths./v3/groups.post.parameters[0].required": true,
	"paths./v3/groups.post.parameters[0].type": "string",
	"paths./v3/groups.post.parameters[1].description": "The path of the group",
	"paths./v3/groups.post.parameters[1].in": "formData",
	"paths./v3/groups.post.parameters[1].name": "path",
	"paths./v3/groups.post.parameters[1].required": true,
	"paths./v3/groups.post.parameters[1].type": "string",
	"paths./v3/groups.post.parameters[2].description": "The description of the group",
	"paths./v3/groups.post.parameters[2].in": "formData",
	"paths./v3/groups.post.parameters[2].name": "description",
	"paths./v3/groups.post.parameters[2].required": false,
	"paths./v3/groups.post.parameters[2].type": "string",
	"paths./v3/groups.post.parameters[3].description": "The visibility level of the group",
	"paths./v3/groups.post.parameters[3].format": "int32",
	"paths./v3/groups.post.parameters[3].in": "formData",
	"paths./v3/groups.post.parameters[3].name": "visibility_level",
	"paths./v3/groups.post.parameters[3].required": false,
	"paths./v3/groups.post.parameters[3].type": "integer",
	"paths./v3/groups.post.parameters[4].description": "Enable/disable LFS for the projects in this group",
	"paths./v3/groups.post.parameters[4].in": "formData",
	"paths./v3/groups.post.parameters[4].name": "lfs_enabled",
	"paths./v3/groups.post.parameters[4].required": false,
	"paths./v3/groups.post.parameters[4].type": "boolean",
	"paths./v3/groups.post.parameters[5].description": "Allow users to request member access",
	"paths./v3/groups.post.parameters[5].in": "formData",
	"paths./v3/groups.post.parameters[5].name": "request_access_enabled",
	"paths./v3/groups.post.parameters[5].required": false,
	"paths./v3/groups.post.parameters[5].type": "boolean",
	"paths./v3/groups.post.produces.length": 1,
	"paths./v3/groups.post.produces[0]": "application/json",
	"paths./v3/groups.post.responses.201.description": "Create a group. Available only for users who can create groups.",
	"paths./v3/groups.post.responses.201.schema.$ref": "#/definitions/Group",
	"paths./v3/groups.post.summary": "Create a group. Available only for users who can create groups.",
	"paths./v3/groups.post.tags.length": 1,
	"paths./v3/groups.post.tags[0]": "groups",
	"paths./v3/groups/owned.get.description": "Get list of owned groups for authenticated user",
	"paths./v3/groups/owned.get.operationId": "getV3GroupsOwned",
	"paths./v3/groups/owned.get.parameters.length": 3,
	"paths./v3/groups/owned.get.parameters[0].description": "Current page number",
	"paths./v3/groups/owned.get.parameters[0].format": "int32",
	"paths./v3/groups/owned.get.parameters[0].in": "query",
	"paths./v3/groups/owned.get.parameters[0].name": "page",
	"paths./v3/groups/owned.get.parameters[0].required": false,
	"paths./v3/groups/owned.get.parameters[0].type": "integer",
	"paths./v3/groups/owned.get.parameters[1].description": "Number of items per page",
	"paths./v3/groups/owned.get.parameters[1].format": "int32",
	"paths./v3/groups/owned.get.parameters[1].in": "query",
	"paths./v3/groups/owned.get.parameters[1].name": "per_page",
	"paths./v3/groups/owned.get.parameters[1].required": false,
	"paths./v3/groups/owned.get.parameters[1].type": "integer",
	"paths./v3/groups/owned.get.parameters[2].description": "Include project statistics",
	"paths./v3/groups/owned.get.parameters[2].in": "query",
	"paths./v3/groups/owned.get.parameters[2].name": "statistics",
	"paths./v3/groups/owned.get.parameters[2].required": false,
	"paths./v3/groups/owned.get.parameters[2].type": "boolean",
	"paths./v3/groups/owned.get.produces.length": 1,
	"paths./v3/groups/owned.get.produces[0]": "application/json",
	"paths./v3/groups/owned.get.responses.200.description": "Get list of owned groups for authenticated user",
	"paths./v3/groups/owned.get.responses.200.schema.$ref": "#/definitions/Group",
	"paths./v3/groups/owned.get.summary": "Get list of owned groups for authenticated user",
	"paths./v3/groups/owned.get.tags.length": 1,
	"paths./v3/groups/owned.get.tags[0]": "groups",
	"paths./v3/groups/{id}.delete.description": "Remove a group.",
	"paths./v3/groups/{id}.delete.operationId": "deleteV3GroupsId",
	"paths./v3/groups/{id}.delete.parameters.length": 1,
	"paths./v3/groups/{id}.delete.parameters[0].description": "The ID of a group",
	"paths./v3/groups/{id}.delete.parameters[0].in": "path",
	"paths./v3/groups/{id}.delete.parameters[0].name": "id",
	"paths./v3/groups/{id}.delete.parameters[0].required": true,
	"paths./v3/groups/{id}.delete.parameters[0].type": "string",
	"paths./v3/groups/{id}.delete.produces.length": 1,
	"paths./v3/groups/{id}.delete.produces[0]": "application/json",
	"paths./v3/groups/{id}.delete.responses.204.description": "Remove a group.",
	"paths./v3/groups/{id}.delete.summary": "Remove a group.",
	"paths./v3/groups/{id}.delete.tags.length": 1,
	"paths./v3/groups/{id}.delete.tags[0]": "groups",
	"paths./v3/groups/{id}.get.description": "Get a single group, with containing projects.",
	"paths./v3/groups/{id}.get.operationId": "getV3GroupsId",
	"paths./v3/groups/{id}.get.parameters.length": 1,
	"paths./v3/groups/{id}.get.parameters[0].description": "The ID of a group",
	"paths./v3/groups/{id}.get.parameters[0].in": "path",
	"paths./v3/groups/{id}.get.parameters[0].name": "id",
	"paths./v3/groups/{id}.get.parameters[0].required": true,
	"paths./v3/groups/{id}.get.parameters[0].type": "string",
	"paths./v3/groups/{id}.get.produces.length": 1,
	"paths./v3/groups/{id}.get.produces[0]": "application/json",
	"paths./v3/groups/{id}.get.responses.200.description": "Get a single group, with containing projects.",
	"paths./v3/groups/{id}.get.responses.200.schema.$ref": "#/definitions/GroupDetail",
	"paths./v3/groups/{id}.get.summary": "Get a single group, with containing projects.",
	"paths./v3/groups/{id}.get.tags.length": 1,
	"paths./v3/groups/{id}.get.tags[0]": "groups",
	"paths./v3/groups/{id}.put.consumes.length": 1,
	"paths./v3/groups/{id}.put.consumes[0]": "application/json",
	"paths./v3/groups/{id}.put.description": "Update a group. Available only for users who can administrate groups.",
	"paths./v3/groups/{id}.put.operationId": "putV3GroupsId",
	"paths./v3/groups/{id}.put.parameters.length": 7,
	"paths./v3/groups/{id}.put.parameters[0].description": "The ID of a group",
	"paths./v3/groups/{id}.put.parameters[0].in": "path",
	"paths./v3/groups/{id}.put.parameters[0].name": "id",
	"paths./v3/groups/{id}.put.parameters[0].required": true,
	"paths./v3/groups/{id}.put.parameters[0].type": "string",
	"paths./v3/groups/{id}.put.parameters[1].description": "The name of the group",
	"paths./v3/groups/{id}.put.parameters[1].in": "formData",
	"paths./v3/groups/{id}.put.parameters[1].name": "name",
	"paths./v3/groups/{id}.put.parameters[1].required": false,
	"paths./v3/groups/{id}.put.parameters[1].type": "string",
	"paths./v3/groups/{id}.put.parameters[2].description": "The path of the group",
	"paths./v3/groups/{id}.put.parameters[2].in": "formData",
	"paths./v3/groups/{id}.put.parameters[2].name": "path",
	"paths./v3/groups/{id}.put.parameters[2].required": false,
	"paths./v3/groups/{id}.put.parameters[2].type": "string",
	"paths./v3/groups/{id}.put.parameters[3].description": "The description of the group",
	"paths./v3/groups/{id}.put.parameters[3].in": "formData",
	"paths./v3/groups/{id}.put.parameters[3].name": "description",
	"paths./v3/groups/{id}.put.parameters[3].required": false,
	"paths./v3/groups/{id}.put.parameters[3].type": "string",
	"paths./v3/groups/{id}.put.parameters[4].description": "The visibility level of the group",
	"paths./v3/groups/{id}.put.parameters[4].format": "int32",
	"paths./v3/groups/{id}.put.parameters[4].in": "formData",
	"paths./v3/groups/{id}.put.parameters[4].name": "visibility_level",
	"paths./v3/groups/{id}.put.parameters[4].required": false,
	"paths./v3/groups/{id}.put.parameters[4].type": "integer",
	"paths./v3/groups/{id}.put.parameters[5].description": "Enable/disable LFS for the projects in this group",
	"paths./v3/groups/{id}.put.parameters[5].in": "formData",
	"paths./v3/groups/{id}.put.parameters[5].name": "lfs_enabled",
	"paths./v3/groups/{id}.put.parameters[5].required": false,
	"paths./v3/groups/{id}.put.parameters[5].type": "boolean",
	"paths./v3/groups/{id}.put.parameters[6].description": "Allow users to request member access",
	"paths./v3/groups/{id}.put.parameters[6].in": "formData",
	"paths./v3/groups/{id}.put.parameters[6].name": "request_access_enabled",
	"paths./v3/groups/{id}.put.parameters[6].required": false,
	"paths./v3/groups/{id}.put.parameters[6].type": "boolean",
	"paths./v3/groups/{id}.put.produces.length": 1,
	"paths./v3/groups/{id}.put.produces[0]": "application/json",
	"paths./v3/groups/{id}.put.responses.200.description": "Update a group. Available only for users who can administrate groups.",
	"paths./v3/groups/{id}.put.responses.200.schema.$ref": "#/definitions/Group",
	"paths./v3/groups/{id}.put.summary": "Update a group. Available only for users who can administrate groups.",
	"paths./v3/groups/{id}.put.tags.length": 1,
	"paths./v3/groups/{id}.put.tags[0]": "groups",
	"paths./v3/groups/{id}/access_requests.get.description": "This feature was introduced in GitLab 8.11.",
	"paths./v3/groups/{id}/access_requests.get.operationId": "getV3GroupsIdAccessRequests",
	"paths./v3/groups/{id}/access_requests.get.parameters.length": 3,
	"paths./v3/groups/{id}/access_requests.get.parameters[0].description": "The group ID",
	"paths./v3/groups/{id}/access_requests.get.parameters[0].in": "path",
	"paths./v3/groups/{id}/access_requests.get.parameters[0].name": "id",
	"paths./v3/groups/{id}/access_requests.get.parameters[0].required": true,
	"paths./v3/groups/{id}/access_requests.get.parameters[0].type": "string",
	"paths./v3/groups/{id}/access_requests.get.parameters[1].description": "Current page number",
	"paths./v3/groups/{id}/access_requests.get.parameters[1].format": "int32",
	"paths./v3/groups/{id}/access_requests.get.parameters[1].in": "query",
	"paths./v3/groups/{id}/access_requests.get.parameters[1].name": "page",
	"paths./v3/groups/{id}/access_requests.get.parameters[1].required": false,
	"paths./v3/groups/{id}/access_requests.get.parameters[1].type": "integer",
	"paths./v3/groups/{id}/access_requests.get.parameters[2].description": "Number of items per page",
	"paths./v3/groups/{id}/access_requests.get.parameters[2].format": "int32",
	"paths./v3/groups/{id}/access_requests.get.parameters[2].in": "query",
	"paths./v3/groups/{id}/access_requests.get.parameters[2].name": "per_page",
	"paths./v3/groups/{id}/access_requests.get.parameters[2].required": false,
	"paths./v3/groups/{id}/access_requests.get.parameters[2].type": "integer",
	"paths./v3/groups/{id}/access_requests.get.produces.length": 1,
	"paths./v3/groups/{id}/access_requests.get.produces[0]": "application/json",
	"paths./v3/groups/{id}/access_requests.get.responses.200.description": "Gets a list of access requests for a group.",
	"paths./v3/groups/{id}/access_requests.get.responses.200.schema.$ref": "#/definitions/AccessRequester",
	"paths./v3/groups/{id}/access_requests.get.summary": "Gets a list of access requests for a group.",
	"paths./v3/groups/{id}/access_requests.get.tags.length": 1,
	"paths./v3/groups/{id}/access_requests.get.tags[0]": "groups",
	"paths./v3/groups/{id}/access_requests.post.consumes.length": 1,
	"paths./v3/groups/{id}/access_requests.post.consumes[0]": "application/json",
	"paths./v3/groups/{id}/access_requests.post.description": "This feature was introduced in GitLab 8.11.",
	"paths./v3/groups/{id}/access_requests.post.operationId": "postV3GroupsIdAccessRequests",
	"paths./v3/groups/{id}/access_requests.post.parameters.length": 1,
	"paths./v3/groups/{id}/access_requests.post.parameters[0].description": "The group ID",
	"paths./v3/groups/{id}/access_requests.post.parameters[0].in": "path",
	"paths./v3/groups/{id}/access_requests.post.parameters[0].name": "id",
	"paths./v3/groups/{id}/access_requests.post.parameters[0].required": true,
	"paths./v3/groups/{id}/access_requests.post.parameters[0].type": "string",
	"paths./v3/groups/{id}/access_requests.post.produces.length": 1,
	"paths./v3/groups/{id}/access_requests.post.produces[0]": "application/json",
	"paths./v3/groups/{id}/access_requests.post.responses.201.description": "Requests access for the authenticated user to a group.",
	"paths./v3/groups/{id}/access_requests.post.responses.201.schema.$ref": "#/definitions/AccessRequester",
	"paths./v3/groups/{id}/access_requests.post.summary": "Requests access for the authenticated user to a group.",
	"paths./v3/groups/{id}/access_requests.post.tags.length": 1,
	"paths./v3/groups/{id}/access_requests.post.tags[0]": "groups",
	"paths./v3/groups/{id}/access_requests/{user_id}.delete.description": "This feature was introduced in GitLab 8.11.",
	"paths./v3/groups/{id}/access_requests/{user_id}.delete.operationId": "deleteV3GroupsIdAccessRequestsUserId",
	"paths./v3/groups/{id}/access_requests/{user_id}.delete.parameters.length": 2,
	"paths./v3/groups/{id}/access_requests/{user_id}.delete.parameters[0].description": "The group ID",
	"paths./v3/groups/{id}/access_requests/{user_id}.delete.parameters[0].in": "path",
	"paths./v3/groups/{id}/access_requests/{user_id}.delete.parameters[0].name": "id",
	"paths./v3/groups/{id}/access_requests/{user_id}.delete.parameters[0].required": true,
	"paths./v3/groups/{id}/access_requests/{user_id}.delete.parameters[0].type": "string",
	"paths./v3/groups/{id}/access_requests/{user_id}.delete.parameters[1].description": "The user ID of the access requester",
	"paths./v3/groups/{id}/access_requests/{user_id}.delete.parameters[1].format": "int32",
	"paths./v3/groups/{id}/access_requests/{user_id}.delete.parameters[1].in": "path",
	"paths./v3/groups/{id}/access_requests/{user_id}.delete.parameters[1].name": "user_id",
	"paths./v3/groups/{id}/access_requests/{user_id}.delete.parameters[1].required": true,
	"paths./v3/groups/{id}/access_requests/{user_id}.delete.parameters[1].type": "integer",
	"paths./v3/groups/{id}/access_requests/{user_id}.delete.produces.length": 1,
	"paths./v3/groups/{id}/access_requests/{user_id}.delete.produces[0]": "application/json",
	"paths./v3/groups/{id}/access_requests/{user_id}.delete.responses.204.description": "Denies an access request for the given user.",
	"paths./v3/groups/{id}/access_requests/{user_id}.delete.summary": "Denies an access request for the given user.",
	"paths./v3/groups/{id}/access_requests/{user_id}.delete.tags.length": 1,
	"paths./v3/groups/{id}/access_requests/{user_id}.delete.tags[0]": "groups",
	"paths./v3/groups/{id}/access_requests/{user_id}/approve.put.consumes.length": 1,
	"paths./v3/groups/{id}/access_requests/{user_id}/approve.put.consumes[0]": "application/json",
	"paths./v3/groups/{id}/access_requests/{user_id}/approve.put.description": "This feature was introduced in GitLab 8.11.",
	"paths./v3/groups/{id}/access_requests/{user_id}/approve.put.operationId": "putV3GroupsIdAccessRequestsUserIdApprove",
	"paths./v3/groups/{id}/access_requests/{user_id}/approve.put.parameters.length": 3,
	"paths./v3/groups/{id}/access_requests/{user_id}/approve.put.parameters[0].description": "The group ID",
	"paths./v3/groups/{id}/access_requests/{user_id}/approve.put.parameters[0].in": "path",
	"paths./v3/groups/{id}/access_requests/{user_id}/approve.put.parameters[0].name": "id",
	"paths./v3/groups/{id}/access_requests/{user_id}/approve.put.parameters[0].required": true,
	"paths./v3/groups/{id}/access_requests/{user_id}/approve.put.parameters[0].type": "string",
	"paths./v3/groups/{id}/access_requests/{user_id}/approve.put.parameters[1].description": "The user ID of the access requester",
	"paths./v3/groups/{id}/access_requests/{user_id}/approve.put.parameters[1].format": "int32",
	"paths./v3/groups/{id}/access_requests/{user_id}/approve.put.parameters[1].in": "path",
	"paths./v3/groups/{id}/access_requests/{user_id}/approve.put.parameters[1].name": "user_id",
	"paths./v3/groups/{id}/access_requests/{user_id}/approve.put.parameters[1].required": true,
	"paths./v3/groups/{id}/access_requests/{user_id}/approve.put.parameters[1].type": "integer",
	"paths./v3/groups/{id}/access_requests/{user_id}/approve.put.parameters[2].description": "A valid access level (defaults: `30`, developer access level)",
	"paths./v3/groups/{id}/access_requests/{user_id}/approve.put.parameters[2].format": "int32",
	"paths./v3/groups/{id}/access_requests/{user_id}/approve.put.parameters[2].in": "formData",
	"paths./v3/groups/{id}/access_requests/{user_id}/approve.put.parameters[2].name": "access_level",
	"paths./v3/groups/{id}/access_requests/{user_id}/approve.put.parameters[2].required": false,
	"paths./v3/groups/{id}/access_requests/{user_id}/approve.put.parameters[2].type": "integer",
	"paths./v3/groups/{id}/access_requests/{user_id}/approve.put.produces.length": 1,
	"paths./v3/groups/{id}/access_requests/{user_id}/approve.put.produces[0]": "application/json",
	"paths./v3/groups/{id}/access_requests/{user_id}/approve.put.responses.200.description": "Approves an access request for the given user.",
	"paths./v3/groups/{id}/access_requests/{user_id}/approve.put.responses.200.schema.$ref": "#/definitions/Member",
	"paths./v3/groups/{id}/access_requests/{user_id}/approve.put.summary": "Approves an access request for the given user.",
	"paths./v3/groups/{id}/access_requests/{user_id}/approve.put.tags.length": 1,
	"paths./v3/groups/{id}/access_requests/{user_id}/approve.put.tags[0]": "groups",
	"paths./v3/groups/{id}/issues.get.description": "Get a list of group issues",
	"paths./v3/groups/{id}/issues.get.operationId": "getV3GroupsIdIssues",
	"paths./v3/groups/{id}/issues.get.parameters.length": 8,
	"paths./v3/groups/{id}/issues.get.parameters[0].description": "The ID of a group",
	"paths./v3/groups/{id}/issues.get.parameters[0].in": "path",
	"paths./v3/groups/{id}/issues.get.parameters[0].name": "id",
	"paths./v3/groups/{id}/issues.get.parameters[0].required": true,
	"paths./v3/groups/{id}/issues.get.parameters[0].type": "string",
	"paths./v3/groups/{id}/issues.get.parameters[1].default": "opened",
	"paths./v3/groups/{id}/issues.get.parameters[1].description": "Return opened, closed, or all issues",
	"paths./v3/groups/{id}/issues.get.parameters[1].enum.length": 3,
	"paths./v3/groups/{id}/issues.get.parameters[1].enum[0]": "opened",
	"paths./v3/groups/{id}/issues.get.parameters[1].enum[1]": "closed",
	"paths./v3/groups/{id}/issues.get.parameters[1].enum[2]": "all",
	"paths./v3/groups/{id}/issues.get.parameters[1].in": "query",
	"paths./v3/groups/{id}/issues.get.parameters[1].name": "state",
	"paths./v3/groups/{id}/issues.get.parameters[1].required": false,
	"paths./v3/groups/{id}/issues.get.parameters[1].type": "string",
	"paths./v3/groups/{id}/issues.get.parameters[2].description": "Comma-separated list of label names",
	"paths./v3/groups/{id}/issues.get.parameters[2].in": "query",
	"paths./v3/groups/{id}/issues.get.parameters[2].name": "labels",
	"paths./v3/groups/{id}/issues.get.parameters[2].required": false,
	"paths./v3/groups/{id}/issues.get.parameters[2].type": "string",
	"paths./v3/groups/{id}/issues.get.parameters[3].description": "Return issues for a specific milestone",
	"paths./v3/groups/{id}/issues.get.parameters[3].in": "query",
	"paths./v3/groups/{id}/issues.get.parameters[3].name": "milestone",
	"paths./v3/groups/{id}/issues.get.parameters[3].required": false,
	"paths./v3/groups/{id}/issues.get.parameters[3].type": "string",
	"paths./v3/groups/{id}/issues.get.parameters[4].default": "created_at",
	"paths./v3/groups/{id}/issues.get.parameters[4].description": "Return issues ordered by `created_at` or `updated_at` fields.",
	"paths./v3/groups/{id}/issues.get.parameters[4].enum.length": 2,
	"paths./v3/groups/{id}/issues.get.parameters[4].enum[0]": "created_at",
	"paths./v3/groups/{id}/issues.get.parameters[4].enum[1]": "updated_at",
	"paths./v3/groups/{id}/issues.get.parameters[4].in": "query",
	"paths./v3/groups/{id}/issues.get.parameters[4].name": "order_by",
	"paths./v3/groups/{id}/issues.get.parameters[4].required": false,
	"paths./v3/groups/{id}/issues.get.parameters[4].type": "string",
	"paths./v3/groups/{id}/issues.get.parameters[5].default": "desc",
	"paths./v3/groups/{id}/issues.get.parameters[5].description": "Return issues sorted in `asc` or `desc` order.",
	"paths./v3/groups/{id}/issues.get.parameters[5].enum.length": 2,
	"paths./v3/groups/{id}/issues.get.parameters[5].enum[0]": "asc",
	"paths./v3/groups/{id}/issues.get.parameters[5].enum[1]": "desc",
	"paths./v3/groups/{id}/issues.get.parameters[5].in": "query",
	"paths./v3/groups/{id}/issues.get.parameters[5].name": "sort",
	"paths./v3/groups/{id}/issues.get.parameters[5].required": false,
	"paths./v3/groups/{id}/issues.get.parameters[5].type": "string",
	"paths./v3/groups/{id}/issues.get.parameters[6].description": "Current page number",
	"paths./v3/groups/{id}/issues.get.parameters[6].format": "int32",
	"paths./v3/groups/{id}/issues.get.parameters[6].in": "query",
	"paths./v3/groups/{id}/issues.get.parameters[6].name": "page",
	"paths./v3/groups/{id}/issues.get.parameters[6].required": false,
	"paths./v3/groups/{id}/issues.get.parameters[6].type": "integer",
	"paths./v3/groups/{id}/issues.get.parameters[7].description": "Number of items per page",
	"paths./v3/groups/{id}/issues.get.parameters[7].format": "int32",
	"paths./v3/groups/{id}/issues.get.parameters[7].in": "query",
	"paths./v3/groups/{id}/issues.get.parameters[7].name": "per_page",
	"paths./v3/groups/{id}/issues.get.parameters[7].required": false,
	"paths./v3/groups/{id}/issues.get.parameters[7].type": "integer",
	"paths./v3/groups/{id}/issues.get.produces.length": 1,
	"paths./v3/groups/{id}/issues.get.produces[0]": "application/json",
	"paths./v3/groups/{id}/issues.get.responses.200.description": "Get a list of group issues",
	"paths./v3/groups/{id}/issues.get.responses.200.schema.$ref": "#/definitions/Issue",
	"paths./v3/groups/{id}/issues.get.summary": "Get a list of group issues",
	"paths./v3/groups/{id}/issues.get.tags.length": 1,
	"paths./v3/groups/{id}/issues.get.tags[0]": "groups",
	"paths./v3/groups/{id}/members.get.description": "Gets a list of group or project members viewable by the authenticated user.",
	"paths./v3/groups/{id}/members.get.operationId": "getV3GroupsIdMembers",
	"paths./v3/groups/{id}/members.get.parameters.length": 4,
	"paths./v3/groups/{id}/members.get.parameters[0].description": "The group ID",
	"paths./v3/groups/{id}/members.get.parameters[0].in": "path",
	"paths./v3/groups/{id}/members.get.parameters[0].name": "id",
	"paths./v3/groups/{id}/members.get.parameters[0].required": true,
	"paths./v3/groups/{id}/members.get.parameters[0].type": "string",
	"paths./v3/groups/{id}/members.get.parameters[1].description": "A query string to search for members",
	"paths./v3/groups/{id}/members.get.parameters[1].in": "query",
	"paths./v3/groups/{id}/members.get.parameters[1].name": "query",
	"paths./v3/groups/{id}/members.get.parameters[1].required": false,
	"paths./v3/groups/{id}/members.get.parameters[1].type": "string",
	"paths./v3/groups/{id}/members.get.parameters[2].description": "Current page number",
	"paths./v3/groups/{id}/members.get.parameters[2].format": "int32",
	"paths./v3/groups/{id}/members.get.parameters[2].in": "query",
	"paths./v3/groups/{id}/members.get.parameters[2].name": "page",
	"paths./v3/groups/{id}/members.get.parameters[2].required": false,
	"paths./v3/groups/{id}/members.get.parameters[2].type": "integer",
	"paths./v3/groups/{id}/members.get.parameters[3].description": "Number of items per page",
	"paths./v3/groups/{id}/members.get.parameters[3].format": "int32",
	"paths./v3/groups/{id}/members.get.parameters[3].in": "query",
	"paths./v3/groups/{id}/members.get.parameters[3].name": "per_page",
	"paths./v3/groups/{id}/members.get.parameters[3].required": false,
	"paths./v3/groups/{id}/members.get.parameters[3].type": "integer",
	"paths./v3/groups/{id}/members.get.produces.length": 1,
	"paths./v3/groups/{id}/members.get.produces[0]": "application/json",
	"paths./v3/groups/{id}/members.get.responses.200.description": "Gets a list of group or project members viewable by the authenticated user.",
	"paths./v3/groups/{id}/members.get.responses.200.schema.$ref": "#/definitions/Member",
	"paths./v3/groups/{id}/members.get.summary": "Gets a list of group or project members viewable by the authenticated user.",
	"paths./v3/groups/{id}/members.get.tags.length": 1,
	"paths./v3/groups/{id}/members.get.tags[0]": "groups",
	"paths./v3/groups/{id}/members.post.consumes.length": 1,
	"paths./v3/groups/{id}/members.post.consumes[0]": "application/json",
	"paths./v3/groups/{id}/members.post.description": "Adds a member to a group or project.",
	"paths./v3/groups/{id}/members.post.operationId": "postV3GroupsIdMembers",
	"paths./v3/groups/{id}/members.post.parameters.length": 4,
	"paths./v3/groups/{id}/members.post.parameters[0].description": "The group ID",
	"paths./v3/groups/{id}/members.post.parameters[0].in": "path",
	"paths./v3/groups/{id}/members.post.parameters[0].name": "id",
	"paths./v3/groups/{id}/members.post.parameters[0].required": true,
	"paths./v3/groups/{id}/members.post.parameters[0].type": "string",
	"paths./v3/groups/{id}/members.post.parameters[1].description": "The user ID of the new member",
	"paths./v3/groups/{id}/members.post.parameters[1].format": "int32",
	"paths./v3/groups/{id}/members.post.parameters[1].in": "formData",
	"paths./v3/groups/{id}/members.post.parameters[1].name": "user_id",
	"paths./v3/groups/{id}/members.post.parameters[1].required": true,
	"paths./v3/groups/{id}/members.post.parameters[1].type": "integer",
	"paths./v3/groups/{id}/members.post.parameters[2].description": "A valid access level (defaults: `30`, developer access level)",
	"paths./v3/groups/{id}/members.post.parameters[2].format": "int32",
	"paths./v3/groups/{id}/members.post.parameters[2].in": "formData",
	"paths./v3/groups/{id}/members.post.parameters[2].name": "access_level",
	"paths./v3/groups/{id}/members.post.parameters[2].required": true,
	"paths./v3/groups/{id}/members.post.parameters[2].type": "integer",
	"paths./v3/groups/{id}/members.post.parameters[3].description": "Date string in the format YEAR-MONTH-DAY",
	"paths./v3/groups/{id}/members.post.parameters[3].format": "date-time",
	"paths./v3/groups/{id}/members.post.parameters[3].in": "formData",
	"paths./v3/groups/{id}/members.post.parameters[3].name": "expires_at",
	"paths./v3/groups/{id}/members.post.parameters[3].required": false,
	"paths./v3/groups/{id}/members.post.parameters[3].type": "string",
	"paths./v3/groups/{id}/members.post.produces.length": 1,
	"paths./v3/groups/{id}/members.post.produces[0]": "application/json",
	"paths./v3/groups/{id}/members.post.responses.201.description": "Adds a member to a group or project.",
	"paths./v3/groups/{id}/members.post.responses.201.schema.$ref": "#/definitions/Member",
	"paths./v3/groups/{id}/members.post.summary": "Adds a member to a group or project.",
	"paths./v3/groups/{id}/members.post.tags.length": 1,
	"paths./v3/groups/{id}/members.post.tags[0]": "groups",
	"paths./v3/groups/{id}/members/{user_id}.delete.description": "Removes a user from a group or project.",
	"paths./v3/groups/{id}/members/{user_id}.delete.operationId": "deleteV3GroupsIdMembersUserId",
	"paths./v3/groups/{id}/members/{user_id}.delete.parameters.length": 2,
	"paths./v3/groups/{id}/members/{user_id}.delete.parameters[0].description": "The group ID",
	"paths./v3/groups/{id}/members/{user_id}.delete.parameters[0].in": "path",
	"paths./v3/groups/{id}/members/{user_id}.delete.parameters[0].name": "id",
	"paths./v3/groups/{id}/members/{user_id}.delete.parameters[0].required": true,
	"paths./v3/groups/{id}/members/{user_id}.delete.parameters[0].type": "string",
	"paths./v3/groups/{id}/members/{user_id}.delete.parameters[1].description": "The user ID of the member",
	"paths./v3/groups/{id}/members/{user_id}.delete.parameters[1].format": "int32",
	"paths./v3/groups/{id}/members/{user_id}.delete.parameters[1].in": "path",
	"paths./v3/groups/{id}/members/{user_id}.delete.parameters[1].name": "user_id",
	"paths./v3/groups/{id}/members/{user_id}.delete.parameters[1].required": true,
	"paths./v3/groups/{id}/members/{user_id}.delete.parameters[1].type": "integer",
	"paths./v3/groups/{id}/members/{user_id}.delete.produces.length": 1,
	"paths./v3/groups/{id}/members/{user_id}.delete.produces[0]": "application/json",
	"paths./v3/groups/{id}/members/{user_id}.delete.responses.204.description": "Removes a user from a group or project.",
	"paths./v3/groups/{id}/members/{user_id}.delete.summary": "Removes a user from a group or project.",
	"paths./v3/groups/{id}/members/{user_id}.delete.tags.length": 1,
	"paths./v3/groups/{id}/members/{user_id}.delete.tags[0]": "groups",
	"paths./v3/groups/{id}/members/{user_id}.get.description": "Gets a member of a group or project.",
	"paths./v3/groups/{id}/members/{user_id}.get.operationId": "getV3GroupsIdMembersUserId",
	"paths./v3/groups/{id}/members/{user_id}.get.parameters.length": 2,
	"paths./v3/groups/{id}/members/{user_id}.get.parameters[0].description": "The group ID",
	"paths./v3/groups/{id}/members/{user_id}.get.parameters[0].in": "path",
	"paths./v3/groups/{id}/members/{user_id}.get.parameters[0].name": "id",
	"paths./v3/groups/{id}/members/{user_id}.get.parameters[0].required": true,
	"paths./v3/groups/{id}/members/{user_id}.get.parameters[0].type": "string",
	"paths./v3/groups/{id}/members/{user_id}.get.parameters[1].description": "The user ID of the member",
	"paths./v3/groups/{id}/members/{user_id}.get.parameters[1].format": "int32",
	"paths./v3/groups/{id}/members/{user_id}.get.parameters[1].in": "path",
	"paths./v3/groups/{id}/members/{user_id}.get.parameters[1].name": "user_id",
	"paths./v3/groups/{id}/members/{user_id}.get.parameters[1].required": true,
	"paths./v3/groups/{id}/members/{user_id}.get.parameters[1].type": "integer",
	"paths./v3/groups/{id}/members/{user_id}.get.produces.length": 1,
	"paths./v3/groups/{id}/members/{user_id}.get.produces[0]": "application/json",
	"paths./v3/groups/{id}/members/{user_id}.get.responses.200.description": "Gets a member of a group or project.",
	"paths./v3/groups/{id}/members/{user_id}.get.responses.200.schema.$ref": "#/definitions/Member",
	"paths./v3/groups/{id}/members/{user_id}.get.summary": "Gets a member of a group or project.",
	"paths./v3/groups/{id}/members/{user_id}.get.tags.length": 1,
	"paths./v3/groups/{id}/members/{user_id}.get.tags[0]": "groups",
	"paths./v3/groups/{id}/members/{user_id}.put.consumes.length": 1,
	"paths./v3/groups/{id}/members/{user_id}.put.consumes[0]": "application/json",
	"paths./v3/groups/{id}/members/{user_id}.put.description": "Updates a member of a group or project.",
	"paths./v3/groups/{id}/members/{user_id}.put.operationId": "putV3GroupsIdMembersUserId",
	"paths./v3/groups/{id}/members/{user_id}.put.parameters.length": 4,
	"paths./v3/groups/{id}/members/{user_id}.put.parameters[0].description": "The group ID",
	"paths./v3/groups/{id}/members/{user_id}.put.parameters[0].in": "path",
	"paths./v3/groups/{id}/members/{user_id}.put.parameters[0].name": "id",
	"paths./v3/groups/{id}/members/{user_id}.put.parameters[0].required": true,
	"paths./v3/groups/{id}/members/{user_id}.put.parameters[0].type": "string",
	"paths./v3/groups/{id}/members/{user_id}.put.parameters[1].description": "The user ID of the new member",
	"paths./v3/groups/{id}/members/{user_id}.put.parameters[1].format": "int32",
	"paths./v3/groups/{id}/members/{user_id}.put.parameters[1].in": "path",
	"paths./v3/groups/{id}/members/{user_id}.put.parameters[1].name": "user_id",
	"paths./v3/groups/{id}/members/{user_id}.put.parameters[1].required": true,
	"paths./v3/groups/{id}/members/{user_id}.put.parameters[1].type": "integer",
	"paths./v3/groups/{id}/members/{user_id}.put.parameters[2].description": "A valid access level",
	"paths./v3/groups/{id}/members/{user_id}.put.parameters[2].format": "int32",
	"paths./v3/groups/{id}/members/{user_id}.put.parameters[2].in": "formData",
	"paths./v3/groups/{id}/members/{user_id}.put.parameters[2].name": "access_level",
	"paths./v3/groups/{id}/members/{user_id}.put.parameters[2].required": true,
	"paths./v3/groups/{id}/members/{user_id}.put.parameters[2].type": "integer",
	"paths./v3/groups/{id}/members/{user_id}.put.parameters[3].description": "Date string in the format YEAR-MONTH-DAY",
	"paths./v3/groups/{id}/members/{user_id}.put.parameters[3].format": "date-time",
	"paths./v3/groups/{id}/members/{user_id}.put.parameters[3].in": "formData",
	"paths./v3/groups/{id}/members/{user_id}.put.parameters[3].name": "expires_at",
	"paths./v3/groups/{id}/members/{user_id}.put.parameters[3].required": false,
	"paths./v3/groups/{id}/members/{user_id}.put.parameters[3].type": "string",
	"paths./v3/groups/{id}/members/{user_id}.put.produces.length": 1,
	"paths./v3/groups/{id}/members/{user_id}.put.produces[0]": "application/json",
	"paths./v3/groups/{id}/members/{user_id}.put.responses.200.description": "Updates a member of a group or project.",
	"paths./v3/groups/{id}/members/{user_id}.put.responses.200.schema.$ref": "#/definitions/Member",
	"paths./v3/groups/{id}/members/{user_id}.put.summary": "Updates a member of a group or project.",
	"paths./v3/groups/{id}/members/{user_id}.put.tags.length": 1,
	"paths./v3/groups/{id}/members/{user_id}.put.tags[0]": "groups",
	"paths./v3/groups/{id}/notification_settings.get.description": "This feature was introduced in GitLab 8.12",
	"paths./v3/groups/{id}/notification_settings.get.operationId": "getV3GroupsIdNotificationSettings",
	"paths./v3/groups/{id}/notification_settings.get.parameters.length": 1,
	"paths./v3/groups/{id}/notification_settings.get.parameters[0].description": "The group ID or project ID or project NAMESPACE/PROJECT_NAME",
	"paths./v3/groups/{id}/notification_settings.get.parameters[0].in": "path",
	"paths./v3/groups/{id}/notification_settings.get.parameters[0].name": "id",
	"paths./v3/groups/{id}/notification_settings.get.parameters[0].required": true,
	"paths./v3/groups/{id}/notification_settings.get.parameters[0].type": "string",
	"paths./v3/groups/{id}/notification_settings.get.produces.length": 1,
	"paths./v3/groups/{id}/notification_settings.get.produces[0]": "application/json",
	"paths./v3/groups/{id}/notification_settings.get.responses.200.description": "Get group level notification level settings, defaults to Global",
	"paths./v3/groups/{id}/notification_settings.get.responses.200.schema.$ref": "#/definitions/NotificationSetting",
	"paths./v3/groups/{id}/notification_settings.get.summary": "Get group level notification level settings, defaults to Global",
	"paths./v3/groups/{id}/notification_settings.get.tags.length": 1,
	"paths./v3/groups/{id}/notification_settings.get.tags[0]": "groups",
	"paths./v3/groups/{id}/notification_settings.put.consumes.length": 1,
	"paths./v3/groups/{id}/notification_settings.put.consumes[0]": "application/json",
	"paths./v3/groups/{id}/notification_settings.put.description": "This feature was introduced in GitLab 8.12",
	"paths./v3/groups/{id}/notification_settings.put.operationId": "putV3GroupsIdNotificationSettings",
	"paths./v3/groups/{id}/notification_settings.put.parameters.length": 14,
	"paths./v3/groups/{id}/notification_settings.put.parameters[0].description": "The group ID or project ID or project NAMESPACE/PROJECT_NAME",
	"paths./v3/groups/{id}/notification_settings.put.parameters[0].in": "path",
	"paths./v3/groups/{id}/notification_settings.put.parameters[0].name": "id",
	"paths./v3/groups/{id}/notification_settings.put.parameters[0].required": true,
	"paths./v3/groups/{id}/notification_settings.put.parameters[0].type": "string",
	"paths./v3/groups/{id}/notification_settings.put.parameters[10].description": "Enable/disable this notification",
	"paths./v3/groups/{id}/notification_settings.put.parameters[10].in": "formData",
	"paths./v3/groups/{id}/notification_settings.put.parameters[10].name": "reassign_merge_request",
	"paths./v3/groups/{id}/notification_settings.put.parameters[10].required": false,
	"paths./v3/groups/{id}/notification_settings.put.parameters[10].type": "boolean",
	"paths./v3/groups/{id}/notification_settings.put.parameters[11].description": "Enable/disable this notification",
	"paths./v3/groups/{id}/notification_settings.put.parameters[11].in": "formData",
	"paths./v3/groups/{id}/notification_settings.put.parameters[11].name": "merge_merge_request",
	"paths./v3/groups/{id}/notification_settings.put.parameters[11].required": false,
	"paths./v3/groups/{id}/notification_settings.put.parameters[11].type": "boolean",
	"paths./v3/groups/{id}/notification_settings.put.parameters[12].description": "Enable/disable this notification",
	"paths./v3/groups/{id}/notification_settings.put.parameters[12].in": "formData",
	"paths./v3/groups/{id}/notification_settings.put.parameters[12].name": "failed_pipeline",
	"paths./v3/groups/{id}/notification_settings.put.parameters[12].required": false,
	"paths./v3/groups/{id}/notification_settings.put.parameters[12].type": "boolean",
	"paths./v3/groups/{id}/notification_settings.put.parameters[13].description": "Enable/disable this notification",
	"paths./v3/groups/{id}/notification_settings.put.parameters[13].in": "formData",
	"paths./v3/groups/{id}/notification_settings.put.parameters[13].name": "success_pipeline",
	"paths./v3/groups/{id}/notification_settings.put.parameters[13].required": false,
	"paths./v3/groups/{id}/notification_settings.put.parameters[13].type": "boolean",
	"paths./v3/groups/{id}/notification_settings.put.parameters[1].description": "The group notification level",
	"paths./v3/groups/{id}/notification_settings.put.parameters[1].in": "formData",
	"paths./v3/groups/{id}/notification_settings.put.parameters[1].name": "level",
	"paths./v3/groups/{id}/notification_settings.put.parameters[1].required": false,
	"paths./v3/groups/{id}/notification_settings.put.parameters[1].type": "string",
	"paths./v3/groups/{id}/notification_settings.put.parameters[2].description": "Enable/disable this notification",
	"paths./v3/groups/{id}/notification_settings.put.parameters[2].in": "formData",
	"paths./v3/groups/{id}/notification_settings.put.parameters[2].name": "new_note",
	"paths./v3/groups/{id}/notification_settings.put.parameters[2].required": false,
	"paths./v3/groups/{id}/notification_settings.put.parameters[2].type": "boolean",
	"paths./v3/groups/{id}/notification_settings.put.parameters[3].description": "Enable/disable this notification",
	"paths./v3/groups/{id}/notification_settings.put.parameters[3].in": "formData",
	"paths./v3/groups/{id}/notification_settings.put.parameters[3].name": "new_issue",
	"paths./v3/groups/{id}/notification_settings.put.parameters[3].required": false,
	"paths./v3/groups/{id}/notification_settings.put.parameters[3].type": "boolean",
	"paths./v3/groups/{id}/notification_settings.put.parameters[4].description": "Enable/disable this notification",
	"paths./v3/groups/{id}/notification_settings.put.parameters[4].in": "formData",
	"paths./v3/groups/{id}/notification_settings.put.parameters[4].name": "reopen_issue",
	"paths./v3/groups/{id}/notification_settings.put.parameters[4].required": false,
	"paths./v3/groups/{id}/notification_settings.put.parameters[4].type": "boolean",
	"paths./v3/groups/{id}/notification_settings.put.parameters[5].description": "Enable/disable this notification",
	"paths./v3/groups/{id}/notification_settings.put.parameters[5].in": "formData",
	"paths./v3/groups/{id}/notification_settings.put.parameters[5].name": "close_issue",
	"paths./v3/groups/{id}/notification_settings.put.parameters[5].required": false,
	"paths./v3/groups/{id}/notification_settings.put.parameters[5].type": "boolean",
	"paths./v3/groups/{id}/notification_settings.put.parameters[6].description": "Enable/disable this notification",
	"paths./v3/groups/{id}/notification_settings.put.parameters[6].in": "formData",
	"paths./v3/groups/{id}/notification_settings.put.parameters[6].name": "reassign_issue",
	"paths./v3/groups/{id}/notification_settings.put.parameters[6].required": false,
	"paths./v3/groups/{id}/notification_settings.put.parameters[6].type": "boolean",
	"paths./v3/groups/{id}/notification_settings.put.parameters[7].description": "Enable/disable this notification",
	"paths./v3/groups/{id}/notification_settings.put.parameters[7].in": "formData",
	"paths./v3/groups/{id}/notification_settings.put.parameters[7].name": "new_merge_request",
	"paths./v3/groups/{id}/notification_settings.put.parameters[7].required": false,
	"paths./v3/groups/{id}/notification_settings.put.parameters[7].type": "boolean",
	"paths./v3/groups/{id}/notification_settings.put.parameters[8].description": "Enable/disable this notification",
	"paths./v3/groups/{id}/notification_settings.put.parameters[8].in": "formData",
	"paths./v3/groups/{id}/notification_settings.put.parameters[8].name": "reopen_merge_request",
	"paths./v3/groups/{id}/notification_settings.put.parameters[8].required": false,
	"paths./v3/groups/{id}/notification_settings.put.parameters[8].type": "boolean",
	"paths./v3/groups/{id}/notification_settings.put.parameters[9].description": "Enable/disable this notification",
	"paths./v3/groups/{id}/notification_settings.put.parameters[9].in": "formData",
	"paths./v3/groups/{id}/notification_settings.put.parameters[9].name": "close_merge_request",
	"paths./v3/groups/{id}/notification_settings.put.parameters[9].required": false,
	"paths./v3/groups/{id}/notification_settings.put.parameters[9].type": "boolean",
	"paths./v3/groups/{id}/notification_settings.put.produces.length": 1,
	"paths./v3/groups/{id}/notification_settings.put.produces[0]": "application/json",
	"paths./v3/groups/{id}/notification_settings.put.responses.200.description": "Update group level notification level settings, defaults to Global",
	"paths./v3/groups/{id}/notification_settings.put.responses.200.schema.$ref": "#/definitions/NotificationSetting",
	"paths./v3/groups/{id}/notification_settings.put.summary": "Update group level notification level settings, defaults to Global",
	"paths./v3/groups/{id}/notification_settings.put.tags.length": 1,
	"paths./v3/groups/{id}/notification_settings.put.tags[0]": "groups",
	"paths./v3/groups/{id}/projects.get.description": "Get a list of projects in this group.",
	"paths./v3/groups/{id}/projects.get.operationId": "getV3GroupsIdProjects",
	"paths./v3/groups/{id}/projects.get.parameters.length": 9,
	"paths./v3/groups/{id}/projects.get.parameters[0].description": "The ID of a group",
	"paths./v3/groups/{id}/projects.get.parameters[0].in": "path",
	"paths./v3/groups/{id}/projects.get.parameters[0].name": "id",
	"paths./v3/groups/{id}/projects.get.parameters[0].required": true,
	"paths./v3/groups/{id}/projects.get.parameters[0].type": "string",
	"paths./v3/groups/{id}/projects.get.parameters[1].description": "Limit by archived status",
	"paths./v3/groups/{id}/projects.get.parameters[1].in": "query",
	"paths./v3/groups/{id}/projects.get.parameters[1].name": "archived",
	"paths./v3/groups/{id}/projects.get.parameters[1].required": false,
	"paths./v3/groups/{id}/projects.get.parameters[1].type": "boolean",
	"paths./v3/groups/{id}/projects.get.parameters[2].description": "Limit by visibility",
	"paths./v3/groups/{id}/projects.get.parameters[2].enum.length": 3,
	"paths./v3/groups/{id}/projects.get.parameters[2].enum[0]": "public",
	"paths./v3/groups/{id}/projects.get.parameters[2].enum[1]": "internal",
	"paths./v3/groups/{id}/projects.get.parameters[2].enum[2]": "private",
	"paths./v3/groups/{id}/projects.get.parameters[2].in": "query",
	"paths./v3/groups/{id}/projects.get.parameters[2].name": "visibility",
	"paths./v3/groups/{id}/projects.get.parameters[2].required": false,
	"paths./v3/groups/{id}/projects.get.parameters[2].type": "string",
	"paths./v3/groups/{id}/projects.get.parameters[3].description": "Return list of authorized projects matching the search criteria",
	"paths./v3/groups/{id}/projects.get.parameters[3].in": "query",
	"paths./v3/groups/{id}/projects.get.parameters[3].name": "search",
	"paths./v3/groups/{id}/projects.get.parameters[3].required": false,
	"paths./v3/groups/{id}/projects.get.parameters[3].type": "string",
	"paths./v3/groups/{id}/projects.get.parameters[4].default": "created_at",
	"paths./v3/groups/{id}/projects.get.parameters[4].description": "Return projects ordered by field",
	"paths./v3/groups/{id}/projects.get.parameters[4].enum.length": 6,
	"paths./v3/groups/{id}/projects.get.parameters[4].enum[0]": "id",
	"paths./v3/groups/{id}/projects.get.parameters[4].enum[1]": "name",
	"paths./v3/groups/{id}/projects.get.parameters[4].enum[2]": "path",
	"paths./v3/groups/{id}/projects.get.parameters[4].enum[3]": "created_at",
	"paths./v3/groups/{id}/projects.get.parameters[4].enum[4]": "updated_at",
	"paths./v3/groups/{id}/projects.get.parameters[4].enum[5]": "last_activity_at",
	"paths./v3/groups/{id}/projects.get.parameters[4].in": "query",
	"paths./v3/groups/{id}/projects.get.parameters[4].name": "order_by",
	"paths./v3/groups/{id}/projects.get.parameters[4].required": false,
	"paths./v3/groups/{id}/projects.get.parameters[4].type": "string",
	"paths./v3/groups/{id}/projects.get.parameters[5].default": "desc",
	"paths./v3/groups/{id}/projects.get.parameters[5].description": "Return projects sorted in ascending and descending order",
	"paths./v3/groups/{id}/projects.get.parameters[5].enum.length": 2,
	"paths./v3/groups/{id}/projects.get.parameters[5].enum[0]": "asc",
	"paths./v3/groups/{id}/projects.get.parameters[5].enum[1]": "desc",
	"paths./v3/groups/{id}/projects.get.parameters[5].in": "query",
	"paths./v3/groups/{id}/projects.get.parameters[5].name": "sort",
	"paths./v3/groups/{id}/projects.get.parameters[5].required": false,
	"paths./v3/groups/{id}/projects.get.parameters[5].type": "string",
	"paths./v3/groups/{id}/projects.get.parameters[6].description": "Return only the ID, URL, name, and path of each project",
	"paths./v3/groups/{id}/projects.get.parameters[6].in": "query",
	"paths./v3/groups/{id}/projects.get.parameters[6].name": "simple",
	"paths./v3/groups/{id}/projects.get.parameters[6].required": false,
	"paths./v3/groups/{id}/projects.get.parameters[6].type": "boolean",
	"paths./v3/groups/{id}/projects.get.parameters[7].description": "Current page number",
	"paths./v3/groups/{id}/projects.get.parameters[7].format": "int32",
	"paths./v3/groups/{id}/projects.get.parameters[7].in": "query",
	"paths./v3/groups/{id}/projects.get.parameters[7].name": "page",
	"paths./v3/groups/{id}/projects.get.parameters[7].required": false,
	"paths./v3/groups/{id}/projects.get.parameters[7].type": "integer",
	"paths./v3/groups/{id}/projects.get.parameters[8].description": "Number of items per page",
	"paths./v3/groups/{id}/projects.get.parameters[8].format": "int32",
	"paths./v3/groups/{id}/projects.get.parameters[8].in": "query",
	"paths./v3/groups/{id}/projects.get.parameters[8].name": "per_page",
	"paths./v3/groups/{id}/projects.get.parameters[8].required": false,
	"paths./v3/groups/{id}/projects.get.parameters[8].type": "integer",
	"paths./v3/groups/{id}/projects.get.produces.length": 1,
	"paths./v3/groups/{id}/projects.get.produces[0]": "application/json",
	"paths./v3/groups/{id}/projects.get.responses.200.description": "Get a list of projects in this group.",
	"paths./v3/groups/{id}/projects.get.responses.200.schema.$ref": "#/definitions/Project",
	"paths./v3/groups/{id}/projects.get.summary": "Get a list of projects in this group.",
	"paths./v3/groups/{id}/projects.get.tags.length": 1,
	"paths./v3/groups/{id}/projects.get.tags[0]": "groups",
	"paths./v3/groups/{id}/projects/{project_id}.post.consumes.length": 1,
	"paths./v3/groups/{id}/projects/{project_id}.post.consumes[0]": "application/json",
	"paths./v3/groups/{id}/projects/{project_id}.post.description": "Transfer a project to the group namespace. Available only for admin.",
	"paths./v3/groups/{id}/projects/{project_id}.post.operationId": "postV3GroupsIdProjectsProjectId",
	"paths./v3/groups/{id}/projects/{project_id}.post.parameters.length": 2,
	"paths./v3/groups/{id}/projects/{project_id}.post.parameters[0].description": "The ID of a group",
	"paths./v3/groups/{id}/projects/{project_id}.post.parameters[0].in": "path",
	"paths./v3/groups/{id}/projects/{project_id}.post.parameters[0].name": "id",
	"paths./v3/groups/{id}/projects/{project_id}.post.parameters[0].required": true,
	"paths./v3/groups/{id}/projects/{project_id}.post.parameters[0].type": "string",
	"paths./v3/groups/{id}/projects/{project_id}.post.parameters[1].description": "The ID or path of the project",
	"paths./v3/groups/{id}/projects/{project_id}.post.parameters[1].in": "path",
	"paths./v3/groups/{id}/projects/{project_id}.post.parameters[1].name": "project_id",
	"paths./v3/groups/{id}/projects/{project_id}.post.parameters[1].required": true,
	"paths./v3/groups/{id}/projects/{project_id}.post.parameters[1].type": "string",
	"paths./v3/groups/{id}/projects/{project_id}.post.produces.length": 1,
	"paths./v3/groups/{id}/projects/{project_id}.post.produces[0]": "application/json",
	"paths./v3/groups/{id}/projects/{project_id}.post.responses.201.description": "Transfer a project to the group namespace. Available only for admin.",
	"paths./v3/groups/{id}/projects/{project_id}.post.responses.201.schema.$ref": "#/definitions/GroupDetail",
	"paths./v3/groups/{id}/projects/{project_id}.post.summary": "Transfer a project to the group namespace. Available only for admin.",
	"paths./v3/groups/{id}/projects/{project_id}.post.tags.length": 1,
	"paths./v3/groups/{id}/projects/{project_id}.post.tags[0]": "groups",
	"paths./v3/hooks.get.description": "Get the list of system hooks",
	"paths./v3/hooks.get.operationId": "getV3Hooks",
	"paths./v3/hooks.get.produces.length": 1,
	"paths./v3/hooks.get.produces[0]": "application/json",
	"paths./v3/hooks.get.responses.200.description": "Get the list of system hooks",
	"paths./v3/hooks.get.responses.200.schema.$ref": "#/definitions/Hook",
	"paths./v3/hooks.get.summary": "Get the list of system hooks",
	"paths./v3/hooks.get.tags.length": 1,
	"paths./v3/hooks.get.tags[0]": "hooks",
	"paths./v3/hooks.post.consumes.length": 1,
	"paths./v3/hooks.post.consumes[0]": "application/json",
	"paths./v3/hooks.post.description": "Create a new system hook",
	"paths./v3/hooks.post.operationId": "postV3Hooks",
	"paths./v3/hooks.post.parameters.length": 5,
	"paths./v3/hooks.post.parameters[0].description": "The URL to send the request to",
	"paths./v3/hooks.post.parameters[0].in": "formData",
	"paths./v3/hooks.post.parameters[0].name": "url",
	"paths./v3/hooks.post.parameters[0].required": true,
	"paths./v3/hooks.post.parameters[0].type": "string",
	"paths./v3/hooks.post.parameters[1].description": "The token used to validate payloads",
	"paths./v3/hooks.post.parameters[1].in": "formData",
	"paths./v3/hooks.post.parameters[1].name": "token",
	"paths./v3/hooks.post.parameters[1].required": false,
	"paths./v3/hooks.post.parameters[1].type": "string",
	"paths./v3/hooks.post.parameters[2].description": "Trigger hook on push events",
	"paths./v3/hooks.post.parameters[2].in": "formData",
	"paths./v3/hooks.post.parameters[2].name": "push_events",
	"paths./v3/hooks.post.parameters[2].required": false,
	"paths./v3/hooks.post.parameters[2].type": "boolean",
	"paths./v3/hooks.post.parameters[3].description": "Trigger hook on tag push events",
	"paths./v3/hooks.post.parameters[3].in": "formData",
	"paths./v3/hooks.post.parameters[3].name": "tag_push_events",
	"paths./v3/hooks.post.parameters[3].required": false,
	"paths./v3/hooks.post.parameters[3].type": "boolean",
	"paths./v3/hooks.post.parameters[4].description": "Do SSL verification when triggering the hook",
	"paths./v3/hooks.post.parameters[4].in": "formData",
	"paths./v3/hooks.post.parameters[4].name": "enable_ssl_verification",
	"paths./v3/hooks.post.parameters[4].required": false,
	"paths./v3/hooks.post.parameters[4].type": "boolean",
	"paths./v3/hooks.post.produces.length": 1,
	"paths./v3/hooks.post.produces[0]": "application/json",
	"paths./v3/hooks.post.responses.201.description": "Create a new system hook",
	"paths./v3/hooks.post.responses.201.schema.$ref": "#/definitions/Hook",
	"paths./v3/hooks.post.summary": "Create a new system hook",
	"paths./v3/hooks.post.tags.length": 1,
	"paths./v3/hooks.post.tags[0]": "hooks",
	"paths./v3/hooks/{id}.delete.description": "Delete a hook",
	"paths./v3/hooks/{id}.delete.operationId": "deleteV3HooksId",
	"paths./v3/hooks/{id}.delete.parameters.length": 1,
	"paths./v3/hooks/{id}.delete.parameters[0].description": "The ID of the system hook",
	"paths./v3/hooks/{id}.delete.parameters[0].format": "int32",
	"paths./v3/hooks/{id}.delete.parameters[0].in": "path",
	"paths./v3/hooks/{id}.delete.parameters[0].name": "id",
	"paths./v3/hooks/{id}.delete.parameters[0].required": true,
	"paths./v3/hooks/{id}.delete.parameters[0].type": "integer",
	"paths./v3/hooks/{id}.delete.produces.length": 1,
	"paths./v3/hooks/{id}.delete.produces[0]": "application/json",
	"paths./v3/hooks/{id}.delete.responses.200.description": "Delete a hook",
	"paths./v3/hooks/{id}.delete.responses.200.schema.$ref": "#/definitions/Hook",
	"paths./v3/hooks/{id}.delete.summary": "Delete a hook",
	"paths./v3/hooks/{id}.delete.tags.length": 1,
	"paths./v3/hooks/{id}.delete.tags[0]": "hooks",
	"paths./v3/hooks/{id}.get.description": "Test a hook",
	"paths./v3/hooks/{id}.get.operationId": "getV3HooksId",
	"paths./v3/hooks/{id}.get.parameters.length": 1,
	"paths./v3/hooks/{id}.get.parameters[0].description": "The ID of the system hook",
	"paths./v3/hooks/{id}.get.parameters[0].format": "int32",
	"paths./v3/hooks/{id}.get.parameters[0].in": "path",
	"paths./v3/hooks/{id}.get.parameters[0].name": "id",
	"paths./v3/hooks/{id}.get.parameters[0].required": true,
	"paths./v3/hooks/{id}.get.parameters[0].type": "integer",
	"paths./v3/hooks/{id}.get.produces.length": 1,
	"paths./v3/hooks/{id}.get.produces[0]": "application/json",
	"paths./v3/hooks/{id}.get.responses.200.description": "Test a hook",
	"paths./v3/hooks/{id}.get.responses.200.schema.$ref": "#/definitions/Hook",
	"paths./v3/hooks/{id}.get.summary": "Test a hook",
	"paths./v3/hooks/{id}.get.tags.length": 1,
	"paths./v3/hooks/{id}.get.tags[0]": "hooks",
	"paths./v3/internal/allowed.post.consumes.length": 1,
	"paths./v3/internal/allowed.post.consumes[0]": "application/json",
	"paths./v3/internal/allowed.post.operationId": "postV3InternalAllowed",
	"paths./v3/internal/allowed.post.produces.length": 1,
	"paths./v3/internal/allowed.post.produces[0]": "application/json",
	"paths./v3/internal/allowed.post.responses.201.description": "created Allowed",
	"paths./v3/internal/allowed.post.tags.length": 1,
	"paths./v3/internal/allowed.post.tags[0]": "internal",
	"paths./v3/internal/broadcast_message.get.operationId": "getV3InternalBroadcastMessage",
	"paths./v3/internal/broadcast_message.get.produces.length": 1,
	"paths./v3/internal/broadcast_message.get.produces[0]": "application/json",
	"paths./v3/internal/broadcast_message.get.responses.200.description": "get BroadcastMessage(s)",
	"paths./v3/internal/broadcast_message.get.tags.length": 1,
	"paths./v3/internal/broadcast_message.get.tags[0]": "internal",
	"paths./v3/internal/check.get.operationId": "getV3InternalCheck",
	"paths./v3/internal/check.get.produces.length": 1,
	"paths./v3/internal/check.get.produces[0]": "application/json",
	"paths./v3/internal/check.get.responses.200.description": "get Check(s)",
	"paths./v3/internal/check.get.tags.length": 1,
	"paths./v3/internal/check.get.tags[0]": "internal",
	"paths./v3/internal/discover.get.operationId": "getV3InternalDiscover",
	"paths./v3/internal/discover.get.produces.length": 1,
	"paths./v3/internal/discover.get.produces[0]": "application/json",
	"paths./v3/internal/discover.get.responses.200.description": "get Discover(s)",
	"paths./v3/internal/discover.get.tags.length": 1,
	"paths./v3/internal/discover.get.tags[0]": "internal",
	"paths./v3/internal/lfs_authenticate.post.consumes.length": 1,
	"paths./v3/internal/lfs_authenticate.post.consumes[0]": "application/json",
	"paths./v3/internal/lfs_authenticate.post.operationId": "postV3InternalLfsAuthenticate",
	"paths./v3/internal/lfs_authenticate.post.produces.length": 1,
	"paths./v3/internal/lfs_authenticate.post.produces[0]": "application/json",
	"paths./v3/internal/lfs_authenticate.post.responses.201.description": "created LfsAuthenticate",
	"paths./v3/internal/lfs_authenticate.post.tags.length": 1,
	"paths./v3/internal/lfs_authenticate.post.tags[0]": "internal",
	"paths./v3/internal/merge_request_urls.get.operationId": "getV3InternalMergeRequestUrls",
	"paths./v3/internal/merge_request_urls.get.produces.length": 1,
	"paths./v3/internal/merge_request_urls.get.produces[0]": "application/json",
	"paths./v3/internal/merge_request_urls.get.responses.200.description": "get MergeRequestUrl(s)",
	"paths./v3/internal/merge_request_urls.get.tags.length": 1,
	"paths./v3/internal/merge_request_urls.get.tags[0]": "internal",
	"paths./v3/internal/two_factor_recovery_codes.post.consumes.length": 1,
	"paths./v3/internal/two_factor_recovery_codes.post.consumes[0]": "application/json",
	"paths./v3/internal/two_factor_recovery_codes.post.operationId": "postV3InternalTwoFactorRecoveryCodes",
	"paths./v3/internal/two_factor_recovery_codes.post.produces.length": 1,
	"paths./v3/internal/two_factor_recovery_codes.post.produces[0]": "application/json",
	"paths./v3/internal/two_factor_recovery_codes.post.responses.201.description": "created TwoFactorRecoveryCode",
	"paths./v3/internal/two_factor_recovery_codes.post.tags.length": 1,
	"paths./v3/internal/two_factor_recovery_codes.post.tags[0]": "internal",
	"paths./v3/issues.get.description": "Get currently authenticated user's issues",
	"paths./v3/issues.get.operationId": "getV3Issues",
	"paths./v3/issues.get.parameters.length": 7,
	"paths./v3/issues.get.parameters[0].default": "all",
	"paths./v3/issues.get.parameters[0].description": "Return opened, closed, or all issues",
	"paths./v3/issues.get.parameters[0].enum.length": 3,
	"paths./v3/issues.get.parameters[0].enum[0]": "opened",
	"paths./v3/issues.get.parameters[0].enum[1]": "closed",
	"paths./v3/issues.get.parameters[0].enum[2]": "all",
	"paths./v3/issues.get.parameters[0].in": "query",
	"paths./v3/issues.get.parameters[0].name": "state",
	"paths./v3/issues.get.parameters[0].required": false,
	"paths./v3/issues.get.parameters[0].type": "string",
	"paths./v3/issues.get.parameters[1].description": "Comma-separated list of label names",
	"paths./v3/issues.get.parameters[1].in": "query",
	"paths./v3/issues.get.parameters[1].name": "labels",
	"paths./v3/issues.get.parameters[1].required": false,
	"paths./v3/issues.get.parameters[1].type": "string",
	"paths./v3/issues.get.parameters[2].description": "Return issues for a specific milestone",
	"paths./v3/issues.get.parameters[2].in": "query",
	"paths./v3/issues.get.parameters[2].name": "milestone",
	"paths./v3/issues.get.parameters[2].required": false,
	"paths./v3/issues.get.parameters[2].type": "string",
	"paths./v3/issues.get.parameters[3].default": "created_at",
	"paths./v3/issues.get.parameters[3].description": "Return issues ordered by `created_at` or `updated_at` fields.",
	"paths./v3/issues.get.parameters[3].enum.length": 2,
	"paths./v3/issues.get.parameters[3].enum[0]": "created_at",
	"paths./v3/issues.get.parameters[3].enum[1]": "updated_at",
	"paths./v3/issues.get.parameters[3].in": "query",
	"paths./v3/issues.get.parameters[3].name": "order_by",
	"paths./v3/issues.get.parameters[3].required": false,
	"paths./v3/issues.get.parameters[3].type": "string",
	"paths./v3/issues.get.parameters[4].default": "desc",
	"paths./v3/issues.get.parameters[4].description": "Return issues sorted in `asc` or `desc` order.",
	"paths./v3/issues.get.parameters[4].enum.length": 2,
	"paths./v3/issues.get.parameters[4].enum[0]": "asc",
	"paths./v3/issues.get.parameters[4].enum[1]": "desc",
	"paths./v3/issues.get.parameters[4].in": "query",
	"paths./v3/issues.get.parameters[4].name": "sort",
	"paths./v3/issues.get.parameters[4].required": false,
	"paths./v3/issues.get.parameters[4].type": "string",
	"paths./v3/issues.get.parameters[5].description": "Current page number",
	"paths./v3/issues.get.parameters[5].format": "int32",
	"paths./v3/issues.get.parameters[5].in": "query",
	"paths./v3/issues.get.parameters[5].name": "page",
	"paths./v3/issues.get.parameters[5].required": false,
	"paths./v3/issues.get.parameters[5].type": "integer",
	"paths./v3/issues.get.parameters[6].description": "Number of items per page",
	"paths./v3/issues.get.parameters[6].format": "int32",
	"paths./v3/issues.get.parameters[6].in": "query",
	"paths./v3/issues.get.parameters[6].name": "per_page",
	"paths./v3/issues.get.parameters[6].required": false,
	"paths./v3/issues.get.parameters[6].type": "integer",
	"paths./v3/issues.get.produces.length": 1,
	"paths./v3/issues.get.produces[0]": "application/json",
	"paths./v3/issues.get.responses.200.description": "Get currently authenticated user's issues",
	"paths./v3/issues.get.responses.200.schema.$ref": "#/definitions/Issue",
	"paths./v3/issues.get.summary": "Get currently authenticated user's issues",
	"paths./v3/issues.get.tags.length": 1,
	"paths./v3/issues.get.tags[0]": "issues",
	"paths./v3/keys/{id}.get.description": "Get single ssh key by id. Only available to admin users",
	"paths./v3/keys/{id}.get.operationId": "getV3KeysId",
	"paths./v3/keys/{id}.get.parameters.length": 1,
	"paths./v3/keys/{id}.get.parameters[0].format": "int32",
	"paths./v3/keys/{id}.get.parameters[0].in": "path",
	"paths./v3/keys/{id}.get.parameters[0].name": "id",
	"paths./v3/keys/{id}.get.parameters[0].required": true,
	"paths./v3/keys/{id}.get.parameters[0].type": "integer",
	"paths./v3/keys/{id}.get.produces.length": 1,
	"paths./v3/keys/{id}.get.produces[0]": "application/json",
	"paths./v3/keys/{id}.get.responses.200.description": "Get single ssh key by id. Only available to admin users",
	"paths./v3/keys/{id}.get.responses.200.schema.$ref": "#/definitions/SSHKeyWithUser",
	"paths./v3/keys/{id}.get.summary": "Get single ssh key by id. Only available to admin users",
	"paths./v3/keys/{id}.get.tags.length": 1,
	"paths./v3/keys/{id}.get.tags[0]": "keys",
	"paths./v3/licenses.get.description": "This feature was introduced in GitLab 8.7. This endpoint is deprecated and will be removed in GitLab 9.0.",
	"paths./v3/licenses.get.operationId": "getV3Licenses",
	"paths./v3/licenses.get.parameters.length": 1,
	"paths./v3/licenses.get.parameters[0].description": "If passed, returns only popular licenses",
	"paths./v3/licenses.get.parameters[0].in": "query",
	"paths./v3/licenses.get.parameters[0].name": "popular",
	"paths./v3/licenses.get.parameters[0].required": false,
	"paths./v3/licenses.get.parameters[0].type": "boolean",
	"paths./v3/licenses.get.produces.length": 1,
	"paths./v3/licenses.get.produces[0]": "application/json",
	"paths./v3/licenses.get.responses.200.description": "Get the list of the available license template",
	"paths./v3/licenses.get.responses.200.schema.$ref": "#/definitions/RepoLicense",
	"paths./v3/licenses.get.summary": "Get the list of the available license template",
	"paths./v3/licenses.get.tags.length": 1,
	"paths./v3/licenses.get.tags[0]": "licenses",
	"paths./v3/licenses/{name}.get.description": "This feature was introduced in GitLab 8.7. This endpoint is deprecated and will be removed in GitLab 9.0.",
	"paths./v3/licenses/{name}.get.operationId": "getV3LicensesName",
	"paths./v3/licenses/{name}.get.parameters.length": 1,
	"paths./v3/licenses/{name}.get.parameters[0].description": "The name of the template",
	"paths./v3/licenses/{name}.get.parameters[0].in": "path",
	"paths./v3/licenses/{name}.get.parameters[0].name": "name",
	"paths./v3/licenses/{name}.get.parameters[0].required": true,
	"paths./v3/licenses/{name}.get.parameters[0].type": "string",
	"paths./v3/licenses/{name}.get.produces.length": 1,
	"paths./v3/licenses/{name}.get.produces[0]": "application/json",
	"paths./v3/licenses/{name}.get.responses.200.description": "Get the text for a specific license",
	"paths./v3/licenses/{name}.get.responses.200.schema.$ref": "#/definitions/RepoLicense",
	"paths./v3/licenses/{name}.get.summary": "Get the text for a specific license",
	"paths./v3/licenses/{name}.get.tags.length": 1,
	"paths./v3/licenses/{name}.get.tags[0]": "licenses",
	"paths./v3/namespaces.get.description": "Get a namespaces list",
	"paths./v3/namespaces.get.operationId": "getV3Namespaces",
	"paths./v3/namespaces.get.parameters.length": 3,
	"paths./v3/namespaces.get.parameters[0].description": "Search query for namespaces",
	"paths./v3/namespaces.get.parameters[0].in": "query",
	"paths./v3/namespaces.get.parameters[0].name": "search",
	"paths./v3/namespaces.get.parameters[0].required": false,
	"paths./v3/namespaces.get.parameters[0].type": "string",
	"paths./v3/namespaces.get.parameters[1].description": "Current page number",
	"paths./v3/namespaces.get.parameters[1].format": "int32",
	"paths./v3/namespaces.get.parameters[1].in": "query",
	"paths./v3/namespaces.get.parameters[1].name": "page",
	"paths./v3/namespaces.get.parameters[1].required": false,
	"paths./v3/namespaces.get.parameters[1].type": "integer",
	"paths./v3/namespaces.get.parameters[2].description": "Number of items per page",
	"paths./v3/namespaces.get.parameters[2].format": "int32",
	"paths./v3/namespaces.get.parameters[2].in": "query",
	"paths./v3/namespaces.get.parameters[2].name": "per_page",
	"paths./v3/namespaces.get.parameters[2].required": false,
	"paths./v3/namespaces.get.parameters[2].type": "integer",
	"paths./v3/namespaces.get.produces.length": 1,
	"paths./v3/namespaces.get.produces[0]": "application/json",
	"paths./v3/namespaces.get.responses.200.description": "Get a namespaces list",
	"paths./v3/namespaces.get.responses.200.schema.$ref": "#/definitions/Namespace",
	"paths./v3/namespaces.get.summary": "Get a namespaces list",
	"paths./v3/namespaces.get.tags.length": 1,
	"paths./v3/namespaces.get.tags[0]": "namespaces",
	"paths./v3/notification_settings.get.description": "This feature was introduced in GitLab 8.12",
	"paths./v3/notification_settings.get.operationId": "getV3NotificationSettings",
	"paths./v3/notification_settings.get.produces.length": 1,
	"paths./v3/notification_settings.get.produces[0]": "application/json",
	"paths./v3/notification_settings.get.responses.200.description": "Get global notification level settings and email, defaults to Participate",
	"paths./v3/notification_settings.get.responses.200.schema.$ref": "#/definitions/GlobalNotificationSetting",
	"paths./v3/notification_settings.get.summary": "Get global notification level settings and email, defaults to Participate",
	"paths./v3/notification_settings.get.tags.length": 1,
	"paths./v3/notification_settings.get.tags[0]": "notification_settings",
	"paths./v3/notification_settings.put.consumes.length": 1,
	"paths./v3/notification_settings.put.consumes[0]": "application/json",
	"paths./v3/notification_settings.put.description": "This feature was introduced in GitLab 8.12",
	"paths./v3/notification_settings.put.operationId": "putV3NotificationSettings",
	"paths./v3/notification_settings.put.parameters.length": 14,
	"paths./v3/notification_settings.put.parameters[0].description": "The global notification level",
	"paths./v3/notification_settings.put.parameters[0].in": "formData",
	"paths./v3/notification_settings.put.parameters[0].name": "level",
	"paths./v3/notification_settings.put.parameters[0].required": false,
	"paths./v3/notification_settings.put.parameters[0].type": "string",
	"paths./v3/notification_settings.put.parameters[10].description": "Enable/disable this notification",
	"paths./v3/notification_settings.put.parameters[10].in": "formData",
	"paths./v3/notification_settings.put.parameters[10].name": "reassign_merge_request",
	"paths./v3/notification_settings.put.parameters[10].required": false,
	"paths./v3/notification_settings.put.parameters[10].type": "boolean",
	"paths./v3/notification_settings.put.parameters[11].description": "Enable/disable this notification",
	"paths./v3/notification_settings.put.parameters[11].in": "formData",
	"paths./v3/notification_settings.put.parameters[11].name": "merge_merge_request",
	"paths./v3/notification_settings.put.parameters[11].required": false,
	"paths./v3/notification_settings.put.parameters[11].type": "boolean",
	"paths./v3/notification_settings.put.parameters[12].description": "Enable/disable this notification",
	"paths./v3/notification_settings.put.parameters[12].in": "formData",
	"paths./v3/notification_settings.put.parameters[12].name": "failed_pipeline",
	"paths./v3/notification_settings.put.parameters[12].required": false,
	"paths./v3/notification_settings.put.parameters[12].type": "boolean",
	"paths./v3/notification_settings.put.parameters[13].description": "Enable/disable this notification",
	"paths./v3/notification_settings.put.parameters[13].in": "formData",
	"paths./v3/notification_settings.put.parameters[13].name": "success_pipeline",
	"paths./v3/notification_settings.put.parameters[13].required": false,
	"paths./v3/notification_settings.put.parameters[13].type": "boolean",
	"paths./v3/notification_settings.put.parameters[1].description": "The email address to send notifications",
	"paths./v3/notification_settings.put.parameters[1].in": "formData",
	"paths./v3/notification_settings.put.parameters[1].name": "notification_email",
	"paths./v3/notification_settings.put.parameters[1].required": false,
	"paths./v3/notification_settings.put.parameters[1].type": "string",
	"paths./v3/notification_settings.put.parameters[2].description": "Enable/disable this notification",
	"paths./v3/notification_settings.put.parameters[2].in": "formData",
	"paths./v3/notification_settings.put.parameters[2].name": "new_note",
	"paths./v3/notification_settings.put.parameters[2].required": false,
	"paths./v3/notification_settings.put.parameters[2].type": "boolean",
	"paths./v3/notification_settings.put.parameters[3].description": "Enable/disable this notification",
	"paths./v3/notification_settings.put.parameters[3].in": "formData",
	"paths./v3/notification_settings.put.parameters[3].name": "new_issue",
	"paths./v3/notification_settings.put.parameters[3].required": false,
	"paths./v3/notification_settings.put.parameters[3].type": "boolean",
	"paths./v3/notification_settings.put.parameters[4].description": "Enable/disable this notification",
	"paths./v3/notification_settings.put.parameters[4].in": "formData",
	"paths./v3/notification_settings.put.parameters[4].name": "reopen_issue",
	"paths./v3/notification_settings.put.parameters[4].required": false,
	"paths./v3/notification_settings.put.parameters[4].type": "boolean",
	"paths./v3/notification_settings.put.parameters[5].description": "Enable/disable this notification",
	"paths./v3/notification_settings.put.parameters[5].in": "formData",
	"paths./v3/notification_settings.put.parameters[5].name": "close_issue",
	"paths./v3/notification_settings.put.parameters[5].required": false,
	"paths./v3/notification_settings.put.parameters[5].type": "boolean",
	"paths./v3/notification_settings.put.parameters[6].description": "Enable/disable this notification",
	"paths./v3/notification_settings.put.parameters[6].in": "formData",
	"paths./v3/notification_settings.put.parameters[6].name": "reassign_issue",
	"paths./v3/notification_settings.put.parameters[6].required": false,
	"paths./v3/notification_settings.put.parameters[6].type": "boolean",
	"paths./v3/notification_settings.put.parameters[7].description": "Enable/disable this notification",
	"paths./v3/notification_settings.put.parameters[7].in": "formData",
	"paths./v3/notification_settings.put.parameters[7].name": "new_merge_request",
	"paths./v3/notification_settings.put.parameters[7].required": false,
	"paths./v3/notification_settings.put.parameters[7].type": "boolean",
	"paths./v3/notification_settings.put.parameters[8].description": "Enable/disable this notification",
	"paths./v3/notification_settings.put.parameters[8].in": "formData",
	"paths./v3/notification_settings.put.parameters[8].name": "reopen_merge_request",
	"paths./v3/notification_settings.put.parameters[8].required": false,
	"paths./v3/notification_settings.put.parameters[8].type": "boolean",
	"paths./v3/notification_settings.put.parameters[9].description": "Enable/disable this notification",
	"paths./v3/notification_settings.put.parameters[9].in": "formData",
	"paths./v3/notification_settings.put.parameters[9].name": "close_merge_request",
	"paths./v3/notification_settings.put.parameters[9].required": false,
	"paths./v3/notification_settings.put.parameters[9].type": "boolean",
	"paths./v3/notification_settings.put.produces.length": 1,
	"paths./v3/notification_settings.put.produces[0]": "application/json",
	"paths./v3/notification_settings.put.responses.200.description": "Update global notification level settings and email, defaults to Participate",
	"paths./v3/notification_settings.put.responses.200.schema.$ref": "#/definitions/GlobalNotificationSetting",
	"paths./v3/notification_settings.put.summary": "Update global notification level settings and email, defaults to Participate",
	"paths./v3/notification_settings.put.tags.length": 1,
	"paths./v3/notification_settings.put.tags[0]": "notification_settings",
	"paths./v3/projects.get.description": "Get a projects list for authenticated user",
	"paths./v3/projects.get.operationId": "getV3Projects",
	"paths./v3/projects.get.parameters.length": 8,
	"paths./v3/projects.get.parameters[0].default": "created_at",
	"paths./v3/projects.get.parameters[0].description": "Return projects ordered by field",
	"paths./v3/projects.get.parameters[0].enum.length": 6,
	"paths./v3/projects.get.parameters[0].enum[0]": "id",
	"paths./v3/projects.get.parameters[0].enum[1]": "name",
	"paths./v3/projects.get.parameters[0].enum[2]": "path",
	"paths./v3/projects.get.parameters[0].enum[3]": "created_at",
	"paths./v3/projects.get.parameters[0].enum[4]": "updated_at",
	"paths./v3/projects.get.parameters[0].enum[5]": "last_activity_at",
	"paths./v3/projects.get.parameters[0].in": "query",
	"paths./v3/projects.get.parameters[0].name": "order_by",
	"paths./v3/projects.get.parameters[0].required": false,
	"paths./v3/projects.get.parameters[0].type": "string",
	"paths./v3/projects.get.parameters[1].default": "desc",
	"paths./v3/projects.get.parameters[1].description": "Return projects sorted in ascending and descending order",
	"paths./v3/projects.get.parameters[1].enum.length": 2,
	"paths./v3/projects.get.parameters[1].enum[0]": "asc",
	"paths./v3/projects.get.parameters[1].enum[1]": "desc",
	"paths./v3/projects.get.parameters[1].in": "query",
	"paths./v3/projects.get.parameters[1].name": "sort",
	"paths./v3/projects.get.parameters[1].required": false,
	"paths./v3/projects.get.parameters[1].type": "string",
	"paths./v3/projects.get.parameters[2].description": "Limit by archived status",
	"paths./v3/projects.get.parameters[2].in": "query",
	"paths./v3/projects.get.parameters[2].name": "archived",
	"paths./v3/projects.get.parameters[2].required": false,
	"paths./v3/projects.get.parameters[2].type": "boolean",
	"paths./v3/projects.get.parameters[3].description": "Limit by visibility",
	"paths./v3/projects.get.parameters[3].enum.length": 3,
	"paths./v3/projects.get.parameters[3].enum[0]": "public",
	"paths./v3/projects.get.parameters[3].enum[1]": "internal",
	"paths./v3/projects.get.parameters[3].enum[2]": "private",
	"paths./v3/projects.get.parameters[3].in": "query",
	"paths./v3/projects.get.parameters[3].name": "visibility",
	"paths./v3/projects.get.parameters[3].required": false,
	"paths./v3/projects.get.parameters[3].type": "string",
	"paths./v3/projects.get.parameters[4].description": "Return list of authorized projects matching the search criteria",
	"paths./v3/projects.get.parameters[4].in": "query",
	"paths./v3/projects.get.parameters[4].name": "search",
	"paths./v3/projects.get.parameters[4].required": false,
	"paths./v3/projects.get.parameters[4].type": "string",
	"paths./v3/projects.get.parameters[5].description": "Current page number",
	"paths./v3/projects.get.parameters[5].format": "int32",
	"paths./v3/projects.get.parameters[5].in": "query",
	"paths./v3/projects.get.parameters[5].name": "page",
	"paths./v3/projects.get.parameters[5].required": false,
	"paths./v3/projects.get.parameters[5].type": "integer",
	"paths./v3/projects.get.parameters[6].description": "Number of items per page",
	"paths./v3/projects.get.parameters[6].format": "int32",
	"paths./v3/projects.get.parameters[6].in": "query",
	"paths./v3/projects.get.parameters[6].name": "per_page",
	"paths./v3/projects.get.parameters[6].required": false,
	"paths./v3/projects.get.parameters[6].type": "integer",
	"paths./v3/projects.get.parameters[7].description": "Return only the ID, URL, name, and path of each project",
	"paths./v3/projects.get.parameters[7].in": "query",
	"paths./v3/projects.get.parameters[7].name": "simple",
	"paths./v3/projects.get.parameters[7].required": false,
	"paths./v3/projects.get.parameters[7].type": "boolean",
	"paths./v3/projects.get.produces.length": 1,
	"paths./v3/projects.get.produces[0]": "application/json",
	"paths./v3/projects.get.responses.200.description": "Get a projects list for authenticated user",
	"paths./v3/projects.get.responses.200.schema.$ref": "#/definitions/BasicProjectDetails",
	"paths./v3/projects.get.summary": "Get a projects list for authenticated user",
	"paths./v3/projects.get.tags.length": 1,
	"paths./v3/projects.get.tags[0]": "projects",
	"paths./v3/projects.post.consumes.length": 1,
	"paths./v3/projects.post.consumes[0]": "application/json",
	"paths./v3/projects.post.description": "Create new project",
	"paths./v3/projects.post.operationId": "postV3Projects",
	"paths./v3/projects.post.parameters.length": 19,
	"paths./v3/projects.post.parameters[0].description": "The name of the project",
	"paths./v3/projects.post.parameters[0].in": "formData",
	"paths./v3/projects.post.parameters[0].name": "name",
	"paths./v3/projects.post.parameters[0].required": true,
	"paths./v3/projects.post.parameters[0].type": "string",
	"paths./v3/projects.post.parameters[10].description": "Flag indication if Git LFS is enabled for that project",
	"paths./v3/projects.post.parameters[10].in": "formData",
	"paths./v3/projects.post.parameters[10].name": "lfs_enabled",
	"paths./v3/projects.post.parameters[10].required": false,
	"paths./v3/projects.post.parameters[10].type": "boolean",
	"paths./v3/projects.post.parameters[11].description": "Create a public project. The same as visibility_level = 20.",
	"paths./v3/projects.post.parameters[11].in": "formData",
	"paths./v3/projects.post.parameters[11].name": "public",
	"paths./v3/projects.post.parameters[11].required": false,
	"paths./v3/projects.post.parameters[11].type": "boolean",
	"paths./v3/projects.post.parameters[12].description": "Create a public project. The same as visibility_level = 20.",
	"paths./v3/projects.post.parameters[12].enum.length": 3,
	"paths./v3/projects.post.parameters[12].enum[0]": 0,
	"paths./v3/projects.post.parameters[12].enum[1]": 10,
	"paths./v3/projects.post.parameters[12].enum[2]": 20,
	"paths./v3/projects.post.parameters[12].format": "int32",
	"paths./v3/projects.post.parameters[12].in": "formData",
	"paths./v3/projects.post.parameters[12].name": "visibility_level",
	"paths./v3/projects.post.parameters[12].required": false,
	"paths./v3/projects.post.parameters[12].type": "integer",
	"paths./v3/projects.post.parameters[13].description": "Perform public builds",
	"paths./v3/projects.post.parameters[13].in": "formData",
	"paths./v3/projects.post.parameters[13].name": "public_builds",
	"paths./v3/projects.post.parameters[13].required": false,
	"paths./v3/projects.post.parameters[13].type": "boolean",
	"paths./v3/projects.post.parameters[14].description": "Allow users to request member access",
	"paths./v3/projects.post.parameters[14].in": "formData",
	"paths./v3/projects.post.parameters[14].name": "request_access_enabled",
	"paths./v3/projects.post.parameters[14].required": false,
	"paths./v3/projects.post.parameters[14].type": "boolean",
	"paths./v3/projects.post.parameters[15].description": "Only allow to merge if builds succeed",
	"paths./v3/projects.post.parameters[15].in": "formData",
	"paths./v3/projects.post.parameters[15].name": "only_allow_merge_if_build_succeeds",
	"paths./v3/projects.post.parameters[15].required": false,
	"paths./v3/projects.post.parameters[15].type": "boolean",
	"paths./v3/projects.post.parameters[16].description": "Only allow to merge if all discussions are resolved",
	"paths./v3/projects.post.parameters[16].in": "formData",
	"paths./v3/projects.post.parameters[16].name": "only_allow_merge_if_all_discussions_are_resolved",
	"paths./v3/projects.post.parameters[16].required": false,
	"paths./v3/projects.post.parameters[16].type": "boolean",
	"paths./v3/projects.post.parameters[17].description": "Namespace ID for the new project. Default to the user namespace.",
	"paths./v3/projects.post.parameters[17].format": "int32",
	"paths./v3/projects.post.parameters[17].in": "formData",
	"paths./v3/projects.post.parameters[17].name": "namespace_id",
	"paths./v3/projects.post.parameters[17].required": false,
	"paths./v3/projects.post.parameters[17].type": "integer",
	"paths./v3/projects.post.parameters[18].description": "URL from which the project is imported",
	"paths./v3/projects.post.parameters[18].in": "formData",
	"paths./v3/projects.post.parameters[18].name": "import_url",
	"paths./v3/projects.post.parameters[18].required": false,
	"paths./v3/projects.post.parameters[18].type": "string",
	"paths./v3/projects.post.parameters[1].description": "The path of the repository",
	"paths./v3/projects.post.parameters[1].in": "formData",
	"paths./v3/projects.post.parameters[1].name": "path",
	"paths./v3/projects.post.parameters[1].required": false,
	"paths./v3/projects.post.parameters[1].type": "string",
	"paths./v3/projects.post.parameters[2].description": "The description of the project",
	"paths./v3/projects.post.parameters[2].in": "formData",
	"paths./v3/projects.post.parameters[2].name": "description",
	"paths./v3/projects.post.parameters[2].required": false,
	"paths./v3/projects.post.parameters[2].type": "string",
	"paths./v3/projects.post.parameters[3].description": "Flag indication if the issue tracker is enabled",
	"paths./v3/projects.post.parameters[3].in": "formData",
	"paths./v3/projects.post.parameters[3].name": "issues_enabled",
	"paths./v3/projects.post.parameters[3].required": false,
	"paths./v3/projects.post.parameters[3].type": "boolean",
	"paths./v3/projects.post.parameters[4].description": "Flag indication if merge requests are enabled",
	"paths./v3/projects.post.parameters[4].in": "formData",
	"paths./v3/projects.post.parameters[4].name": "merge_requests_enabled",
	"paths./v3/projects.post.parameters[4].required": false,
	"paths./v3/projects.post.parameters[4].type": "boolean",
	"paths./v3/projects.post.parameters[5].description": "Flag indication if the wiki is enabled",
	"paths./v3/projects.post.parameters[5].in": "formData",
	"paths./v3/projects.post.parameters[5].name": "wiki_enabled",
	"paths./v3/projects.post.parameters[5].required": false,
	"paths./v3/projects.post.parameters[5].type": "boolean",
	"paths./v3/projects.post.parameters[6].description": "Flag indication if builds are enabled",
	"paths./v3/projects.post.parameters[6].in": "formData",
	"paths./v3/projects.post.parameters[6].name": "builds_enabled",
	"paths./v3/projects.post.parameters[6].required": false,
	"paths./v3/projects.post.parameters[6].type": "boolean",
	"paths./v3/projects.post.parameters[7].description": "Flag indication if snippets are enabled",
	"paths./v3/projects.post.parameters[7].in": "formData",
	"paths./v3/projects.post.parameters[7].name": "snippets_enabled",
	"paths./v3/projects.post.parameters[7].required": false,
	"paths./v3/projects.post.parameters[7].type": "boolean",
	"paths./v3/projects.post.parameters[8].description": "Flag indication if shared runners are enabled for that project",
	"paths./v3/projects.post.parameters[8].in": "formData",
	"paths./v3/projects.post.parameters[8].name": "shared_runners_enabled",
	"paths./v3/projects.post.parameters[8].required": false,
	"paths./v3/projects.post.parameters[8].type": "boolean",
	"paths./v3/projects.post.parameters[9].description": "Flag indication if the container registry is enabled for that project",
	"paths./v3/projects.post.parameters[9].in": "formData",
	"paths./v3/projects.post.parameters[9].name": "container_registry_enabled",
	"paths./v3/projects.post.parameters[9].required": false,
	"paths./v3/projects.post.parameters[9].type": "boolean",
	"paths./v3/projects.post.produces.length": 1,
	"paths./v3/projects.post.produces[0]": "application/json",
	"paths./v3/projects.post.responses.201.description": "Create new project",
	"paths./v3/projects.post.responses.201.schema.$ref": "#/definitions/Project",
	"paths./v3/projects.post.summary": "Create new project",
	"paths./v3/projects.post.tags.length": 1,
	"paths./v3/projects.post.tags[0]": "projects",
	"paths./v3/projects/all.get.description": "Get all projects for admin user",
	"paths./v3/projects/all.get.operationId": "getV3ProjectsAll",
	"paths./v3/projects/all.get.parameters.length": 9,
	"paths./v3/projects/all.get.parameters[0].default": "created_at",
	"paths./v3/projects/all.get.parameters[0].description": "Return projects ordered by field",
	"paths./v3/projects/all.get.parameters[0].enum.length": 6,
	"paths./v3/projects/all.get.parameters[0].enum[0]": "id",
	"paths./v3/projects/all.get.parameters[0].enum[1]": "name",
	"paths./v3/projects/all.get.parameters[0].enum[2]": "path",
	"paths./v3/projects/all.get.parameters[0].enum[3]": "created_at",
	"paths./v3/projects/all.get.parameters[0].enum[4]": "updated_at",
	"paths./v3/projects/all.get.parameters[0].enum[5]": "last_activity_at",
	"paths./v3/projects/all.get.parameters[0].in": "query",
	"paths./v3/projects/all.get.parameters[0].name": "order_by",
	"paths./v3/projects/all.get.parameters[0].required": false,
	"paths./v3/projects/all.get.parameters[0].type": "string",
	"paths./v3/projects/all.get.parameters[1].default": "desc",
	"paths./v3/projects/all.get.parameters[1].description": "Return projects sorted in ascending and descending order",
	"paths./v3/projects/all.get.parameters[1].enum.length": 2,
	"paths./v3/projects/all.get.parameters[1].enum[0]": "asc",
	"paths./v3/projects/all.get.parameters[1].enum[1]": "desc",
	"paths./v3/projects/all.get.parameters[1].in": "query",
	"paths./v3/projects/all.get.parameters[1].name": "sort",
	"paths./v3/projects/all.get.parameters[1].required": false,
	"paths./v3/projects/all.get.parameters[1].type": "string",
	"paths./v3/projects/all.get.parameters[2].description": "Limit by archived status",
	"paths./v3/projects/all.get.parameters[2].in": "query",
	"paths./v3/projects/all.get.parameters[2].name": "archived",
	"paths./v3/projects/all.get.parameters[2].required": false,
	"paths./v3/projects/all.get.parameters[2].type": "boolean",
	"paths./v3/projects/all.get.parameters[3].description": "Limit by visibility",
	"paths./v3/projects/all.get.parameters[3].enum.length": 3,
	"paths./v3/projects/all.get.parameters[3].enum[0]": "public",
	"paths./v3/projects/all.get.parameters[3].enum[1]": "internal",
	"paths./v3/projects/all.get.parameters[3].enum[2]": "private",
	"paths./v3/projects/all.get.parameters[3].in": "query",
	"paths./v3/projects/all.get.parameters[3].name": "visibility",
	"paths./v3/projects/all.get.parameters[3].required": false,
	"paths./v3/projects/all.get.parameters[3].type": "string",
	"paths./v3/projects/all.get.parameters[4].description": "Return list of authorized projects matching the search criteria",
	"paths./v3/projects/all.get.parameters[4].in": "query",
	"paths./v3/projects/all.get.parameters[4].name": "search",
	"paths./v3/projects/all.get.parameters[4].required": false,
	"paths./v3/projects/all.get.parameters[4].type": "string",
	"paths./v3/projects/all.get.parameters[5].description": "Current page number",
	"paths./v3/projects/all.get.parameters[5].format": "int32",
	"paths./v3/projects/all.get.parameters[5].in": "query",
	"paths./v3/projects/all.get.parameters[5].name": "page",
	"paths./v3/projects/all.get.parameters[5].required": false,
	"paths./v3/projects/all.get.parameters[5].type": "integer",
	"paths./v3/projects/all.get.parameters[6].description": "Number of items per page",
	"paths./v3/projects/all.get.parameters[6].format": "int32",
	"paths./v3/projects/all.get.parameters[6].in": "query",
	"paths./v3/projects/all.get.parameters[6].name": "per_page",
	"paths./v3/projects/all.get.parameters[6].required": false,
	"paths./v3/projects/all.get.parameters[6].type": "integer",
	"paths./v3/projects/all.get.parameters[7].description": "Return only the ID, URL, name, and path of each project",
	"paths./v3/projects/all.get.parameters[7].in": "query",
	"paths./v3/projects/all.get.parameters[7].name": "simple",
	"paths./v3/projects/all.get.parameters[7].required": false,
	"paths./v3/projects/all.get.parameters[7].type": "boolean",
	"paths./v3/projects/all.get.parameters[8].description": "Include project statistics",
	"paths./v3/projects/all.get.parameters[8].in": "query",
	"paths./v3/projects/all.get.parameters[8].name": "statistics",
	"paths./v3/projects/all.get.parameters[8].required": false,
	"paths./v3/projects/all.get.parameters[8].type": "boolean",
	"paths./v3/projects/all.get.produces.length": 1,
	"paths./v3/projects/all.get.produces[0]": "application/json",
	"paths./v3/projects/all.get.responses.200.description": "Get all projects for admin user",
	"paths./v3/projects/all.get.responses.200.schema.$ref": "#/definitions/BasicProjectDetails",
	"paths./v3/projects/all.get.summary": "Get all projects for admin user",
	"paths./v3/projects/all.get.tags.length": 1,
	"paths./v3/projects/all.get.tags[0]": "projects",
	"paths./v3/projects/fork/{id}.post.consumes.length": 1,
	"paths./v3/projects/fork/{id}.post.consumes[0]": "application/json",
	"paths./v3/projects/fork/{id}.post.description": "Fork new project for the current user or provided namespace.",
	"paths./v3/projects/fork/{id}.post.operationId": "postV3ProjectsForkId",
	"paths./v3/projects/fork/{id}.post.parameters.length": 2,
	"paths./v3/projects/fork/{id}.post.parameters[0].description": "The ID of a project",
	"paths./v3/projects/fork/{id}.post.parameters[0].in": "path",
	"paths./v3/projects/fork/{id}.post.parameters[0].name": "id",
	"paths./v3/projects/fork/{id}.post.parameters[0].required": true,
	"paths./v3/projects/fork/{id}.post.parameters[0].type": "string",
	"paths./v3/projects/fork/{id}.post.parameters[1].description": "The ID or name of the namespace that the project will be forked into",
	"paths./v3/projects/fork/{id}.post.parameters[1].in": "formData",
	"paths./v3/projects/fork/{id}.post.parameters[1].name": "namespace",
	"paths./v3/projects/fork/{id}.post.parameters[1].required": false,
	"paths./v3/projects/fork/{id}.post.parameters[1].type": "string",
	"paths./v3/projects/fork/{id}.post.produces.length": 1,
	"paths./v3/projects/fork/{id}.post.produces[0]": "application/json",
	"paths./v3/projects/fork/{id}.post.responses.201.description": "Fork new project for the current user or provided namespace.",
	"paths./v3/projects/fork/{id}.post.responses.201.schema.$ref": "#/definitions/Project",
	"paths./v3/projects/fork/{id}.post.summary": "Fork new project for the current user or provided namespace.",
	"paths./v3/projects/fork/{id}.post.tags.length": 1,
	"paths./v3/projects/fork/{id}.post.tags[0]": "projects",
	"paths./v3/projects/owned.get.description": "Get an owned projects list for authenticated user",
	"paths./v3/projects/owned.get.operationId": "getV3ProjectsOwned",
	"paths./v3/projects/owned.get.parameters.length": 9,
	"paths./v3/projects/owned.get.parameters[0].default": "created_at",
	"paths./v3/projects/owned.get.parameters[0].description": "Return projects ordered by field",
	"paths./v3/projects/owned.get.parameters[0].enum.length": 6,
	"paths./v3/projects/owned.get.parameters[0].enum[0]": "id",
	"paths./v3/projects/owned.get.parameters[0].enum[1]": "name",
	"paths./v3/projects/owned.get.parameters[0].enum[2]": "path",
	"paths./v3/projects/owned.get.parameters[0].enum[3]": "created_at",
	"paths./v3/projects/owned.get.parameters[0].enum[4]": "updated_at",
	"paths./v3/projects/owned.get.parameters[0].enum[5]": "last_activity_at",
	"paths./v3/projects/owned.get.parameters[0].in": "query",
	"paths./v3/projects/owned.get.parameters[0].name": "order_by",
	"paths./v3/projects/owned.get.parameters[0].required": false,
	"paths./v3/projects/owned.get.parameters[0].type": "string",
	"paths./v3/projects/owned.get.parameters[1].default": "desc",
	"paths./v3/projects/owned.get.parameters[1].description": "Return projects sorted in ascending and descending order",
	"paths./v3/projects/owned.get.parameters[1].enum.length": 2,
	"paths./v3/projects/owned.get.parameters[1].enum[0]": "asc",
	"paths./v3/projects/owned.get.parameters[1].enum[1]": "desc",
	"paths./v3/projects/owned.get.parameters[1].in": "query",
	"paths./v3/projects/owned.get.parameters[1].name": "sort",
	"paths./v3/projects/owned.get.parameters[1].required": false,
	"paths./v3/projects/owned.get.parameters[1].type": "string",
	"paths./v3/projects/owned.get.parameters[2].description": "Limit by archived status",
	"paths./v3/projects/owned.get.parameters[2].in": "query",
	"paths./v3/projects/owned.get.parameters[2].name": "archived",
	"paths./v3/projects/owned.get.parameters[2].required": false,
	"paths./v3/projects/owned.get.parameters[2].type": "boolean",
	"paths./v3/projects/owned.get.parameters[3].description": "Limit by visibility",
	"paths./v3/projects/owned.get.parameters[3].enum.length": 3,
	"paths./v3/projects/owned.get.parameters[3].enum[0]": "public",
	"paths./v3/projects/owned.get.parameters[3].enum[1]": "internal",
	"paths./v3/projects/owned.get.parameters[3].enum[2]": "private",
	"paths./v3/projects/owned.get.parameters[3].in": "query",
	"paths./v3/projects/owned.get.parameters[3].name": "visibility",
	"paths./v3/projects/owned.get.parameters[3].required": false,
	"paths./v3/projects/owned.get.parameters[3].type": "string",
	"paths./v3/projects/owned.get.parameters[4].description": "Return list of authorized projects matching the search criteria",
	"paths./v3/projects/owned.get.parameters[4].in": "query",
	"paths./v3/projects/owned.get.parameters[4].name": "search",
	"paths./v3/projects/owned.get.parameters[4].required": false,
	"paths./v3/projects/owned.get.parameters[4].type": "string",
	"paths./v3/projects/owned.get.parameters[5].description": "Current page number",
	"paths./v3/projects/owned.get.parameters[5].format": "int32",
	"paths./v3/projects/owned.get.parameters[5].in": "query",
	"paths./v3/projects/owned.get.parameters[5].name": "page",
	"paths./v3/projects/owned.get.parameters[5].required": false,
	"paths./v3/projects/owned.get.parameters[5].type": "integer",
	"paths./v3/projects/owned.get.parameters[6].description": "Number of items per page",
	"paths./v3/projects/owned.get.parameters[6].format": "int32",
	"paths./v3/projects/owned.get.parameters[6].in": "query",
	"paths./v3/projects/owned.get.parameters[6].name": "per_page",
	"paths./v3/projects/owned.get.parameters[6].required": false,
	"paths./v3/projects/owned.get.parameters[6].type": "integer",
	"paths./v3/projects/owned.get.parameters[7].description": "Return only the ID, URL, name, and path of each project",
	"paths./v3/projects/owned.get.parameters[7].in": "query",
	"paths./v3/projects/owned.get.parameters[7].name": "simple",
	"paths./v3/projects/owned.get.parameters[7].required": false,
	"paths./v3/projects/owned.get.parameters[7].type": "boolean",
	"paths./v3/projects/owned.get.parameters[8].description": "Include project statistics",
	"paths./v3/projects/owned.get.parameters[8].in": "query",
	"paths./v3/projects/owned.get.parameters[8].name": "statistics",
	"paths./v3/projects/owned.get.parameters[8].required": false,
	"paths./v3/projects/owned.get.parameters[8].type": "boolean",
	"paths./v3/projects/owned.get.produces.length": 1,
	"paths./v3/projects/owned.get.produces[0]": "application/json",
	"paths./v3/projects/owned.get.responses.200.description": "Get an owned projects list for authenticated user",
	"paths./v3/projects/owned.get.responses.200.schema.$ref": "#/definitions/BasicProjectDetails",
	"paths./v3/projects/owned.get.summary": "Get an owned projects list for authenticated user",
	"paths./v3/projects/owned.get.tags.length": 1,
	"paths./v3/projects/owned.get.tags[0]": "projects",
	"paths./v3/projects/search/{query}.get.description": "Search for projects the current user has access to",
	"paths./v3/projects/search/{query}.get.operationId": "getV3ProjectsSearchQuery",
	"paths./v3/projects/search/{query}.get.parameters.length": 5,
	"paths./v3/projects/search/{query}.get.parameters[0].description": "The project name to be searched",
	"paths./v3/projects/search/{query}.get.parameters[0].in": "path",
	"paths./v3/projects/search/{query}.get.parameters[0].name": "query",
	"paths./v3/projects/search/{query}.get.parameters[0].required": true,
	"paths./v3/projects/search/{query}.get.parameters[0].type": "string",
	"paths./v3/projects/search/{query}.get.parameters[1].default": "created_at",
	"paths./v3/projects/search/{query}.get.parameters[1].description": "Return projects ordered by field",
	"paths./v3/projects/search/{query}.get.parameters[1].enum.length": 6,
	"paths./v3/projects/search/{query}.get.parameters[1].enum[0]": "id",
	"paths./v3/projects/search/{query}.get.parameters[1].enum[1]": "name",
	"paths./v3/projects/search/{query}.get.parameters[1].enum[2]": "path",
	"paths./v3/projects/search/{query}.get.parameters[1].enum[3]": "created_at",
	"paths./v3/projects/search/{query}.get.parameters[1].enum[4]": "updated_at",
	"paths./v3/projects/search/{query}.get.parameters[1].enum[5]": "last_activity_at",
	"paths./v3/projects/search/{query}.get.parameters[1].in": "query",
	"paths./v3/projects/search/{query}.get.parameters[1].name": "order_by",
	"paths./v3/projects/search/{query}.get.parameters[1].required": false,
	"paths./v3/projects/search/{query}.get.parameters[1].type": "string",
	"paths./v3/projects/search/{query}.get.parameters[2].default": "desc",
	"paths./v3/projects/search/{query}.get.parameters[2].description": "Return projects sorted in ascending and descending order",
	"paths./v3/projects/search/{query}.get.parameters[2].enum.length": 2,
	"paths./v3/projects/search/{query}.get.parameters[2].enum[0]": "asc",
	"paths./v3/projects/search/{query}.get.parameters[2].enum[1]": "desc",
	"paths./v3/projects/search/{query}.get.parameters[2].in": "query",
	"paths./v3/projects/search/{query}.get.parameters[2].name": "sort",
	"paths./v3/projects/search/{query}.get.parameters[2].required": false,
	"paths./v3/projects/search/{query}.get.parameters[2].type": "string",
	"paths./v3/projects/search/{query}.get.parameters[3].description": "Current page number",
	"paths./v3/projects/search/{query}.get.parameters[3].format": "int32",
	"paths./v3/projects/search/{query}.get.parameters[3].in": "query",
	"paths./v3/projects/search/{query}.get.parameters[3].name": "page",
	"paths./v3/projects/search/{query}.get.parameters[3].required": false,
	"paths./v3/projects/search/{query}.get.parameters[3].type": "integer",
	"paths./v3/projects/search/{query}.get.parameters[4].description": "Number of items per page",
	"paths./v3/projects/search/{query}.get.parameters[4].format": "int32",
	"paths./v3/projects/search/{query}.get.parameters[4].in": "query",
	"paths./v3/projects/search/{query}.get.parameters[4].name": "per_page",
	"paths./v3/projects/search/{query}.get.parameters[4].required": false,
	"paths./v3/projects/search/{query}.get.parameters[4].type": "integer",
	"paths./v3/projects/search/{query}.get.produces.length": 1,
	"paths./v3/projects/search/{query}.get.produces[0]": "application/json",
	"paths./v3/projects/search/{query}.get.responses.200.description": "Search for projects the current user has access to",
	"paths./v3/projects/search/{query}.get.responses.200.schema.$ref": "#/definitions/Project",
	"paths./v3/projects/search/{query}.get.summary": "Search for projects the current user has access to",
	"paths./v3/projects/search/{query}.get.tags.length": 1,
	"paths./v3/projects/search/{query}.get.tags[0]": "projects",
	"paths./v3/projects/starred.get.description": "Gets starred project for the authenticated user",
	"paths./v3/projects/starred.get.operationId": "getV3ProjectsStarred",
	"paths./v3/projects/starred.get.parameters.length": 8,
	"paths./v3/projects/starred.get.parameters[0].default": "created_at",
	"paths./v3/projects/starred.get.parameters[0].description": "Return projects ordered by field",
	"paths./v3/projects/starred.get.parameters[0].enum.length": 6,
	"paths./v3/projects/starred.get.parameters[0].enum[0]": "id",
	"paths./v3/projects/starred.get.parameters[0].enum[1]": "name",
	"paths./v3/projects/starred.get.parameters[0].enum[2]": "path",
	"paths./v3/projects/starred.get.parameters[0].enum[3]": "created_at",
	"paths./v3/projects/starred.get.parameters[0].enum[4]": "updated_at",
	"paths./v3/projects/starred.get.parameters[0].enum[5]": "last_activity_at",
	"paths./v3/projects/starred.get.parameters[0].in": "query",
	"paths./v3/projects/starred.get.parameters[0].name": "order_by",
	"paths./v3/projects/starred.get.parameters[0].required": false,
	"paths./v3/projects/starred.get.parameters[0].type": "string",
	"paths./v3/projects/starred.get.parameters[1].default": "desc",
	"paths./v3/projects/starred.get.parameters[1].description": "Return projects sorted in ascending and descending order",
	"paths./v3/projects/starred.get.parameters[1].enum.length": 2,
	"paths./v3/projects/starred.get.parameters[1].enum[0]": "asc",
	"paths./v3/projects/starred.get.parameters[1].enum[1]": "desc",
	"paths./v3/projects/starred.get.parameters[1].in": "query",
	"paths./v3/projects/starred.get.parameters[1].name": "sort",
	"paths./v3/projects/starred.get.parameters[1].required": false,
	"paths./v3/projects/starred.get.parameters[1].type": "string",
	"paths./v3/projects/starred.get.parameters[2].description": "Limit by archived status",
	"paths./v3/projects/starred.get.parameters[2].in": "query",
	"paths./v3/projects/starred.get.parameters[2].name": "archived",
	"paths./v3/projects/starred.get.parameters[2].required": false,
	"paths./v3/projects/starred.get.parameters[2].type": "boolean",
	"paths./v3/projects/starred.get.parameters[3].description": "Limit by visibility",
	"paths./v3/projects/starred.get.parameters[3].enum.length": 3,
	"paths./v3/projects/starred.get.parameters[3].enum[0]": "public",
	"paths./v3/projects/starred.get.parameters[3].enum[1]": "internal",
	"paths./v3/projects/starred.get.parameters[3].enum[2]": "private",
	"paths./v3/projects/starred.get.parameters[3].in": "query",
	"paths./v3/projects/starred.get.parameters[3].name": "visibility",
	"paths./v3/projects/starred.get.parameters[3].required": false,
	"paths./v3/projects/starred.get.parameters[3].type": "string",
	"paths./v3/projects/starred.get.parameters[4].description": "Return list of authorized projects matching the search criteria",
	"paths./v3/projects/starred.get.parameters[4].in": "query",
	"paths./v3/projects/starred.get.parameters[4].name": "search",
	"paths./v3/projects/starred.get.parameters[4].required": false,
	"paths./v3/projects/starred.get.parameters[4].type": "string",
	"paths./v3/projects/starred.get.parameters[5].description": "Current page number",
	"paths./v3/projects/starred.get.parameters[5].format": "int32",
	"paths./v3/projects/starred.get.parameters[5].in": "query",
	"paths./v3/projects/starred.get.parameters[5].name": "page",
	"paths./v3/projects/starred.get.parameters[5].required": false,
	"paths./v3/projects/starred.get.parameters[5].type": "integer",
	"paths./v3/projects/starred.get.parameters[6].description": "Number of items per page",
	"paths./v3/projects/starred.get.parameters[6].format": "int32",
	"paths./v3/projects/starred.get.parameters[6].in": "query",
	"paths./v3/projects/starred.get.parameters[6].name": "per_page",
	"paths./v3/projects/starred.get.parameters[6].required": false,
	"paths./v3/projects/starred.get.parameters[6].type": "integer",
	"paths./v3/projects/starred.get.parameters[7].description": "Return only the ID, URL, name, and path of each project",
	"paths./v3/projects/starred.get.parameters[7].in": "query",
	"paths./v3/projects/starred.get.parameters[7].name": "simple",
	"paths./v3/projects/starred.get.parameters[7].required": false,
	"paths./v3/projects/starred.get.parameters[7].type": "boolean",
	"paths./v3/projects/starred.get.produces.length": 1,
	"paths./v3/projects/starred.get.produces[0]": "application/json",
	"paths./v3/projects/starred.get.responses.200.description": "Gets starred project for the authenticated user",
	"paths./v3/projects/starred.get.responses.200.schema.$ref": "#/definitions/BasicProjectDetails",
	"paths./v3/projects/starred.get.summary": "Gets starred project for the authenticated user",
	"paths./v3/projects/starred.get.tags.length": 1,
	"paths./v3/projects/starred.get.tags[0]": "projects",
	"paths./v3/projects/user/{user_id}.post.consumes.length": 1,
	"paths./v3/projects/user/{user_id}.post.consumes[0]": "application/json",
	"paths./v3/projects/user/{user_id}.post.description": "Create new project for a specified user. Only available to admin users.",
	"paths./v3/projects/user/{user_id}.post.operationId": "postV3ProjectsUserUserId",
	"paths./v3/projects/user/{user_id}.post.parameters.length": 20,
	"paths./v3/projects/user/{user_id}.post.parameters[0].description": "The name of the project",
	"paths./v3/projects/user/{user_id}.post.parameters[0].in": "formData",
	"paths./v3/projects/user/{user_id}.post.parameters[0].name": "name",
	"paths./v3/projects/user/{user_id}.post.parameters[0].required": true,
	"paths./v3/projects/user/{user_id}.post.parameters[0].type": "string",
	"paths./v3/projects/user/{user_id}.post.parameters[10].description": "Flag indication if the container registry is enabled for that project",
	"paths./v3/projects/user/{user_id}.post.parameters[10].in": "formData",
	"paths./v3/projects/user/{user_id}.post.parameters[10].name": "container_registry_enabled",
	"paths./v3/projects/user/{user_id}.post.parameters[10].required": false,
	"paths./v3/projects/user/{user_id}.post.parameters[10].type": "boolean",
	"paths./v3/projects/user/{user_id}.post.parameters[11].description": "Flag indication if Git LFS is enabled for that project",
	"paths./v3/projects/user/{user_id}.post.parameters[11].in": "formData",
	"paths./v3/projects/user/{user_id}.post.parameters[11].name": "lfs_enabled",
	"paths./v3/projects/user/{user_id}.post.parameters[11].required": false,
	"paths./v3/projects/user/{user_id}.post.parameters[11].type": "boolean",
	"paths./v3/projects/user/{user_id}.post.parameters[12].description": "Create a public project. The same as visibility_level = 20.",
	"paths./v3/projects/user/{user_id}.post.parameters[12].in": "formData",
	"paths./v3/projects/user/{user_id}.post.parameters[12].name": "public",
	"paths./v3/projects/user/{user_id}.post.parameters[12].required": false,
	"paths./v3/projects/user/{user_id}.post.parameters[12].type": "boolean",
	"paths./v3/projects/user/{user_id}.post.parameters[13].description": "Create a public project. The same as visibility_level = 20.",
	"paths./v3/projects/user/{user_id}.post.parameters[13].enum.length": 3,
	"paths./v3/projects/user/{user_id}.post.parameters[13].enum[0]": 0,
	"paths./v3/projects/user/{user_id}.post.parameters[13].enum[1]": 10,
	"paths./v3/projects/user/{user_id}.post.parameters[13].enum[2]": 20,
	"paths./v3/projects/user/{user_id}.post.parameters[13].format": "int32",
	"paths./v3/projects/user/{user_id}.post.parameters[13].in": "formData",
	"paths./v3/projects/user/{user_id}.post.parameters[13].name": "visibility_level",
	"paths./v3/projects/user/{user_id}.post.parameters[13].required": false,
	"paths./v3/projects/user/{user_id}.post.parameters[13].type": "integer",
	"paths./v3/projects/user/{user_id}.post.parameters[14].description": "Perform public builds",
	"paths./v3/projects/user/{user_id}.post.parameters[14].in": "formData",
	"paths./v3/projects/user/{user_id}.post.parameters[14].name": "public_builds",
	"paths./v3/projects/user/{user_id}.post.parameters[14].required": false,
	"paths./v3/projects/user/{user_id}.post.parameters[14].type": "boolean",
	"paths./v3/projects/user/{user_id}.post.parameters[15].description": "Allow users to request member access",
	"paths./v3/projects/user/{user_id}.post.parameters[15].in": "formData",
	"paths./v3/projects/user/{user_id}.post.parameters[15].name": "request_access_enabled",
	"paths./v3/projects/user/{user_id}.post.parameters[15].required": false,
	"paths./v3/projects/user/{user_id}.post.parameters[15].type": "boolean",
	"paths./v3/projects/user/{user_id}.post.parameters[16].description": "Only allow to merge if builds succeed",
	"paths./v3/projects/user/{user_id}.post.parameters[16].in": "formData",
	"paths./v3/projects/user/{user_id}.post.parameters[16].name": "only_allow_merge_if_build_succeeds",
	"paths./v3/projects/user/{user_id}.post.parameters[16].required": false,
	"paths./v3/projects/user/{user_id}.post.parameters[16].type": "boolean",
	"paths./v3/projects/user/{user_id}.post.parameters[17].description": "Only allow to merge if all discussions are resolved",
	"paths./v3/projects/user/{user_id}.post.parameters[17].in": "formData",
	"paths./v3/projects/user/{user_id}.post.parameters[17].name": "only_allow_merge_if_all_discussions_are_resolved",
	"paths./v3/projects/user/{user_id}.post.parameters[17].required": false,
	"paths./v3/projects/user/{user_id}.post.parameters[17].type": "boolean",
	"paths./v3/projects/user/{user_id}.post.parameters[18].description": "Namespace ID for the new project. Default to the user namespace.",
	"paths./v3/projects/user/{user_id}.post.parameters[18].format": "int32",
	"paths./v3/projects/user/{user_id}.post.parameters[18].in": "formData",
	"paths./v3/projects/user/{user_id}.post.parameters[18].name": "namespace_id",
	"paths./v3/projects/user/{user_id}.post.parameters[18].required": false,
	"paths./v3/projects/user/{user_id}.post.parameters[18].type": "integer",
	"paths./v3/projects/user/{user_id}.post.parameters[19].description": "URL from which the project is imported",
	"paths./v3/projects/user/{user_id}.post.parameters[19].in": "formData",
	"paths./v3/projects/user/{user_id}.post.parameters[19].name": "import_url",
	"paths./v3/projects/user/{user_id}.post.parameters[19].required": false,
	"paths./v3/projects/user/{user_id}.post.parameters[19].type": "string",
	"paths./v3/projects/user/{user_id}.post.parameters[1].description": "The ID of a user",
	"paths./v3/projects/user/{user_id}.post.parameters[1].format": "int32",
	"paths./v3/projects/user/{user_id}.post.parameters[1].in": "path",
	"paths./v3/projects/user/{user_id}.post.parameters[1].name": "user_id",
	"paths./v3/projects/user/{user_id}.post.parameters[1].required": true,
	"paths./v3/projects/user/{user_id}.post.parameters[1].type": "integer",
	"paths./v3/projects/user/{user_id}.post.parameters[2].description": "The default branch of the project",
	"paths./v3/projects/user/{user_id}.post.parameters[2].in": "formData",
	"paths./v3/projects/user/{user_id}.post.parameters[2].name": "default_branch",
	"paths./v3/projects/user/{user_id}.post.parameters[2].required": false,
	"paths./v3/projects/user/{user_id}.post.parameters[2].type": "string",
	"paths./v3/projects/user/{user_id}.post.parameters[3].description": "The description of the project",
	"paths./v3/projects/user/{user_id}.post.parameters[3].in": "formData",
	"paths./v3/projects/user/{user_id}.post.parameters[3].name": "description",
	"paths./v3/projects/user/{user_id}.post.parameters[3].required": false,
	"paths./v3/projects/user/{user_id}.post.parameters[3].type": "string",
	"paths./v3/projects/user/{user_id}.post.parameters[4].description": "Flag indication if the issue tracker is enabled",
	"paths./v3/projects/user/{user_id}.post.parameters[4].in": "formData",
	"paths./v3/projects/user/{user_id}.post.parameters[4].name": "issues_enabled",
	"paths./v3/projects/user/{user_id}.post.parameters[4].required": false,
	"paths./v3/projects/user/{user_id}.post.parameters[4].type": "boolean",
	"paths./v3/projects/user/{user_id}.post.parameters[5].description": "Flag indication if merge requests are enabled",
	"paths./v3/projects/user/{user_id}.post.parameters[5].in": "formData",
	"paths./v3/projects/user/{user_id}.post.parameters[5].name": "merge_requests_enabled",
	"paths./v3/projects/user/{user_id}.post.parameters[5].required": false,
	"paths./v3/projects/user/{user_id}.post.parameters[5].type": "boolean",
	"paths./v3/projects/user/{user_id}.post.parameters[6].description": "Flag indication if the wiki is enabled",
	"paths./v3/projects/user/{user_id}.post.parameters[6].in": "formData",
	"paths./v3/projects/user/{user_id}.post.parameters[6].name": "wiki_enabled",
	"paths./v3/projects/user/{user_id}.post.parameters[6].required": false,
	"paths./v3/projects/user/{user_id}.post.parameters[6].type": "boolean",
	"paths./v3/projects/user/{user_id}.post.parameters[7].description": "Flag indication if builds are enabled",
	"paths./v3/projects/user/{user_id}.post.parameters[7].in": "formData",
	"paths./v3/projects/user/{user_id}.post.parameters[7].name": "builds_enabled",
	"paths./v3/projects/user/{user_id}.post.parameters[7].required": false,
	"paths./v3/projects/user/{user_id}.post.parameters[7].type": "boolean",
	"paths./v3/projects/user/{user_id}.post.parameters[8].description": "Flag indication if snippets are enabled",
	"paths./v3/projects/user/{user_id}.post.parameters[8].in": "formData",
	"paths./v3/projects/user/{user_id}.post.parameters[8].name": "snippets_enabled",
	"paths./v3/projects/user/{user_id}.post.parameters[8].required": false,
	"paths./v3/projects/user/{user_id}.post.parameters[8].type": "boolean",
	"paths./v3/projects/user/{user_id}.post.parameters[9].description": "Flag indication if shared runners are enabled for that project",
	"paths./v3/projects/user/{user_id}.post.parameters[9].in": "formData",
	"paths./v3/projects/user/{user_id}.post.parameters[9].name": "shared_runners_enabled",
	"paths./v3/projects/user/{user_id}.post.parameters[9].required": false,
	"paths./v3/projects/user/{user_id}.post.parameters[9].type": "boolean",
	"paths./v3/projects/user/{user_id}.post.produces.length": 1,
	"paths./v3/projects/user/{user_id}.post.produces[0]": "application/json",
	"paths./v3/projects/user/{user_id}.post.responses.201.description": "Create new project for a specified user. Only available to admin users.",
	"paths./v3/projects/user/{user_id}.post.responses.201.schema.$ref": "#/definitions/Project",
	"paths./v3/projects/user/{user_id}.post.summary": "Create new project for a specified user. Only available to admin users.",
	"paths./v3/projects/user/{user_id}.post.tags.length": 1,
	"paths./v3/projects/user/{user_id}.post.tags[0]": "projects",
	"paths./v3/projects/visible.get.description": "Get a list of visible projects for authenticated user",
	"paths./v3/projects/visible.get.operationId": "getV3ProjectsVisible",
	"paths./v3/projects/visible.get.parameters.length": 8,
	"paths./v3/projects/visible.get.parameters[0].default": "created_at",
	"paths./v3/projects/visible.get.parameters[0].description": "Return projects ordered by field",
	"paths./v3/projects/visible.get.parameters[0].enum.length": 6,
	"paths./v3/projects/visible.get.parameters[0].enum[0]": "id",
	"paths./v3/projects/visible.get.parameters[0].enum[1]": "name",
	"paths./v3/projects/visible.get.parameters[0].enum[2]": "path",
	"paths./v3/projects/visible.get.parameters[0].enum[3]": "created_at",
	"paths./v3/projects/visible.get.parameters[0].enum[4]": "updated_at",
	"paths./v3/projects/visible.get.parameters[0].enum[5]": "last_activity_at",
	"paths./v3/projects/visible.get.parameters[0].in": "query",
	"paths./v3/projects/visible.get.parameters[0].name": "order_by",
	"paths./v3/projects/visible.get.parameters[0].required": false,
	"paths./v3/projects/visible.get.parameters[0].type": "string",
	"paths./v3/projects/visible.get.parameters[1].default": "desc",
	"paths./v3/projects/visible.get.parameters[1].description": "Return projects sorted in ascending and descending order",
	"paths./v3/projects/visible.get.parameters[1].enum.length": 2,
	"paths./v3/projects/visible.get.parameters[1].enum[0]": "asc",
	"paths./v3/projects/visible.get.parameters[1].enum[1]": "desc",
	"paths./v3/projects/visible.get.parameters[1].in": "query",
	"paths./v3/projects/visible.get.parameters[1].name": "sort",
	"paths./v3/projects/visible.get.parameters[1].required": false,
	"paths./v3/projects/visible.get.parameters[1].type": "string",
	"paths./v3/projects/visible.get.parameters[2].description": "Limit by archived status",
	"paths./v3/projects/visible.get.parameters[2].in": "query",
	"paths./v3/projects/visible.get.parameters[2].name": "archived",
	"paths./v3/projects/visible.get.parameters[2].required": false,
	"paths./v3/projects/visible.get.parameters[2].type": "boolean",
	"paths./v3/projects/visible.get.parameters[3].description": "Limit by visibility",
	"paths./v3/projects/visible.get.parameters[3].enum.length": 3,
	"paths./v3/projects/visible.get.parameters[3].enum[0]": "public",
	"paths./v3/projects/visible.get.parameters[3].enum[1]": "internal",
	"paths./v3/projects/visible.get.parameters[3].enum[2]": "private",
	"paths./v3/projects/visible.get.parameters[3].in": "query",
	"paths./v3/projects/visible.get.parameters[3].name": "visibility",
	"paths./v3/projects/visible.get.parameters[3].required": false,
	"paths./v3/projects/visible.get.parameters[3].type": "string",
	"paths./v3/projects/visible.get.parameters[4].description": "Return list of authorized projects matching the search criteria",
	"paths./v3/projects/visible.get.parameters[4].in": "query",
	"paths./v3/projects/visible.get.parameters[4].name": "search",
	"paths./v3/projects/visible.get.parameters[4].required": false,
	"paths./v3/projects/visible.get.parameters[4].type": "string",
	"paths./v3/projects/visible.get.parameters[5].description": "Current page number",
	"paths./v3/projects/visible.get.parameters[5].format": "int32",
	"paths./v3/projects/visible.get.parameters[5].in": "query",
	"paths./v3/projects/visible.get.parameters[5].name": "page",
	"paths./v3/projects/visible.get.parameters[5].required": false,
	"paths./v3/projects/visible.get.parameters[5].type": "integer",
	"paths./v3/projects/visible.get.parameters[6].description": "Number of items per page",
	"paths./v3/projects/visible.get.parameters[6].format": "int32",
	"paths./v3/projects/visible.get.parameters[6].in": "query",
	"paths./v3/projects/visible.get.parameters[6].name": "per_page",
	"paths./v3/projects/visible.get.parameters[6].required": false,
	"paths./v3/projects/visible.get.parameters[6].type": "integer",
	"paths./v3/projects/visible.get.parameters[7].description": "Return only the ID, URL, name, and path of each project",
	"paths./v3/projects/visible.get.parameters[7].in": "query",
	"paths./v3/projects/visible.get.parameters[7].name": "simple",
	"paths./v3/projects/visible.get.parameters[7].required": false,
	"paths./v3/projects/visible.get.parameters[7].type": "boolean",
	"paths./v3/projects/visible.get.produces.length": 1,
	"paths./v3/projects/visible.get.produces[0]": "application/json",
	"paths./v3/projects/visible.get.responses.200.description": "Get a list of visible projects for authenticated user",
	"paths./v3/projects/visible.get.responses.200.schema.$ref": "#/definitions/BasicProjectDetails",
	"paths./v3/projects/visible.get.summary": "Get a list of visible projects for authenticated user",
	"paths./v3/projects/visible.get.tags.length": 1,
	"paths./v3/projects/visible.get.tags[0]": "projects",
	"paths./v3/projects/{id}.delete.description": "Remove a project",
	"paths./v3/projects/{id}.delete.operationId": "deleteV3ProjectsId",
	"paths./v3/projects/{id}.delete.parameters.length": 1,
	"paths./v3/projects/{id}.delete.parameters[0].description": "The ID of a project",
	"paths./v3/projects/{id}.delete.parameters[0].in": "path",
	"paths./v3/projects/{id}.delete.parameters[0].name": "id",
	"paths./v3/projects/{id}.delete.parameters[0].required": true,
	"paths./v3/projects/{id}.delete.parameters[0].type": "string",
	"paths./v3/projects/{id}.delete.produces.length": 1,
	"paths./v3/projects/{id}.delete.produces[0]": "application/json",
	"paths./v3/projects/{id}.delete.responses.204.description": "Remove a project",
	"paths./v3/projects/{id}.delete.summary": "Remove a project",
	"paths./v3/projects/{id}.delete.tags.length": 1,
	"paths./v3/projects/{id}.delete.tags[0]": "projects",
	"paths./v3/projects/{id}.get.description": "Get a single project",
	"paths./v3/projects/{id}.get.operationId": "getV3ProjectsId",
	"paths./v3/projects/{id}.get.parameters.length": 1,
	"paths./v3/projects/{id}.get.parameters[0].description": "The ID of a project",
	"paths./v3/projects/{id}.get.parameters[0].in": "path",
	"paths./v3/projects/{id}.get.parameters[0].name": "id",
	"paths./v3/projects/{id}.get.parameters[0].required": true,
	"paths./v3/projects/{id}.get.parameters[0].type": "string",
	"paths./v3/projects/{id}.get.produces.length": 1,
	"paths./v3/projects/{id}.get.produces[0]": "application/json",
	"paths./v3/projects/{id}.get.responses.200.description": "Get a single project",
	"paths./v3/projects/{id}.get.responses.200.schema.$ref": "#/definitions/ProjectWithAccess",
	"paths./v3/projects/{id}.get.summary": "Get a single project",
	"paths./v3/projects/{id}.get.tags.length": 1,
	"paths./v3/projects/{id}.get.tags[0]": "projects",
	"paths./v3/projects/{id}.put.consumes.length": 1,
	"paths./v3/projects/{id}.put.consumes[0]": "application/json",
	"paths./v3/projects/{id}.put.description": "Update an existing project",
	"paths./v3/projects/{id}.put.operationId": "putV3ProjectsId",
	"paths./v3/projects/{id}.put.parameters.length": 19,
	"paths./v3/projects/{id}.put.parameters[0].description": "The ID of a project",
	"paths./v3/projects/{id}.put.parameters[0].in": "path",
	"paths./v3/projects/{id}.put.parameters[0].name": "id",
	"paths./v3/projects/{id}.put.parameters[0].required": true,
	"paths./v3/projects/{id}.put.parameters[0].type": "string",
	"paths./v3/projects/{id}.put.parameters[10].description": "Flag indication if shared runners are enabled for that project",
	"paths./v3/projects/{id}.put.parameters[10].in": "formData",
	"paths./v3/projects/{id}.put.parameters[10].name": "shared_runners_enabled",
	"paths./v3/projects/{id}.put.parameters[10].required": false,
	"paths./v3/projects/{id}.put.parameters[10].type": "boolean",
	"paths./v3/projects/{id}.put.parameters[11].description": "Flag indication if the container registry is enabled for that project",
	"paths./v3/projects/{id}.put.parameters[11].in": "formData",
	"paths./v3/projects/{id}.put.parameters[11].name": "container_registry_enabled",
	"paths./v3/projects/{id}.put.parameters[11].required": false,
	"paths./v3/projects/{id}.put.parameters[11].type": "boolean",
	"paths./v3/projects/{id}.put.parameters[12].description": "Flag indication if Git LFS is enabled for that project",
	"paths./v3/projects/{id}.put.parameters[12].in": "formData",
	"paths./v3/projects/{id}.put.parameters[12].name": "lfs_enabled",
	"paths./v3/projects/{id}.put.parameters[12].required": false,
	"paths./v3/projects/{id}.put.parameters[12].type": "boolean",
	"paths./v3/projects/{id}.put.parameters[13].description": "Create a public project. The same as visibility_level = 20.",
	"paths./v3/projects/{id}.put.parameters[13].in": "formData",
	"paths./v3/projects/{id}.put.parameters[13].name": "public",
	"paths./v3/projects/{id}.put.parameters[13].required": false,
	"paths./v3/projects/{id}.put.parameters[13].type": "boolean",
	"paths./v3/projects/{id}.put.parameters[14].description": "Create a public project. The same as visibility_level = 20.",
	"paths./v3/projects/{id}.put.parameters[14].enum.length": 3,
	"paths./v3/projects/{id}.put.parameters[14].enum[0]": 0,
	"paths./v3/projects/{id}.put.parameters[14].enum[1]": 10,
	"paths./v3/projects/{id}.put.parameters[14].enum[2]": 20,
	"paths./v3/projects/{id}.put.parameters[14].format": "int32",
	"paths./v3/projects/{id}.put.parameters[14].in": "formData",
	"paths./v3/projects/{id}.put.parameters[14].name": "visibility_level",
	"paths./v3/projects/{id}.put.parameters[14].required": false,
	"paths./v3/projects/{id}.put.parameters[14].type": "integer",
	"paths./v3/projects/{id}.put.parameters[15].description": "Perform public builds",
	"paths./v3/projects/{id}.put.parameters[15].in": "formData",
	"paths./v3/projects/{id}.put.parameters[15].name": "public_builds",
	"paths./v3/projects/{id}.put.parameters[15].required": false,
	"paths./v3/projects/{id}.put.parameters[15].type": "boolean",
	"paths./v3/projects/{id}.put.parameters[16].description": "Allow users to request member access",
	"paths./v3/projects/{id}.put.parameters[16].in": "formData",
	"paths./v3/projects/{id}.put.parameters[16].name": "request_access_enabled",
	"paths./v3/projects/{id}.put.parameters[16].required": false,
	"paths./v3/projects/{id}.put.parameters[16].type": "boolean",
	"paths./v3/projects/{id}.put.parameters[17].description": "Only allow to merge if builds succeed",
	"paths./v3/projects/{id}.put.parameters[17].in": "formData",
	"paths./v3/projects/{id}.put.parameters[17].name": "only_allow_merge_if_build_succeeds",
	"paths./v3/projects/{id}.put.parameters[17].required": false,
	"paths./v3/projects/{id}.put.parameters[17].type": "boolean",
	"paths./v3/projects/{id}.put.parameters[18].description": "Only allow to merge if all discussions are resolved",
	"paths./v3/projects/{id}.put.parameters[18].in": "formData",
	"paths./v3/projects/{id}.put.parameters[18].name": "only_allow_merge_if_all_discussions_are_resolved",
	"paths./v3/projects/{id}.put.parameters[18].required": false,
	"paths./v3/projects/{id}.put.parameters[18].type": "boolean",
	"paths./v3/projects/{id}.put.parameters[1].description": "The name of the project",
	"paths./v3/projects/{id}.put.parameters[1].in": "formData",
	"paths./v3/projects/{id}.put.parameters[1].name": "name",
	"paths./v3/projects/{id}.put.parameters[1].required": false,
	"paths./v3/projects/{id}.put.parameters[1].type": "string",
	"paths./v3/projects/{id}.put.parameters[2].description": "The default branch of the project",
	"paths./v3/projects/{id}.put.parameters[2].in": "formData",
	"paths./v3/projects/{id}.put.parameters[2].name": "default_branch",
	"paths./v3/projects/{id}.put.parameters[2].required": false,
	"paths./v3/projects/{id}.put.parameters[2].type": "string",
	"paths./v3/projects/{id}.put.parameters[3].description": "The path of the repository",
	"paths./v3/projects/{id}.put.parameters[3].in": "formData",
	"paths./v3/projects/{id}.put.parameters[3].name": "path",
	"paths./v3/projects/{id}.put.parameters[3].required": false,
	"paths./v3/projects/{id}.put.parameters[3].type": "string",
	"paths./v3/projects/{id}.put.parameters[4].description": "The description of the project",
	"paths./v3/projects/{id}.put.parameters[4].in": "formData",
	"paths./v3/projects/{id}.put.parameters[4].name": "description",
	"paths./v3/projects/{id}.put.parameters[4].required": false,
	"paths./v3/projects/{id}.put.parameters[4].type": "string",
	"paths./v3/projects/{id}.put.parameters[5].description": "Flag indication if the issue tracker is enabled",
	"paths./v3/projects/{id}.put.parameters[5].in": "formData",
	"paths./v3/projects/{id}.put.parameters[5].name": "issues_enabled",
	"paths./v3/projects/{id}.put.parameters[5].required": false,
	"paths./v3/projects/{id}.put.parameters[5].type": "boolean",
	"paths./v3/projects/{id}.put.parameters[6].description": "Flag indication if merge requests are enabled",
	"paths./v3/projects/{id}.put.parameters[6].in": "formData",
	"paths./v3/projects/{id}.put.parameters[6].name": "merge_requests_enabled",
	"paths./v3/projects/{id}.put.parameters[6].required": false,
	"paths./v3/projects/{id}.put.parameters[6].type": "boolean",
	"paths./v3/projects/{id}.put.parameters[7].description": "Flag indication if the wiki is enabled",
	"paths./v3/projects/{id}.put.parameters[7].in": "formData",
	"paths./v3/projects/{id}.put.parameters[7].name": "wiki_enabled",
	"paths./v3/projects/{id}.put.parameters[7].required": false,
	"paths./v3/projects/{id}.put.parameters[7].type": "boolean",
	"paths./v3/projects/{id}.put.parameters[8].description": "Flag indication if builds are enabled",
	"paths./v3/projects/{id}.put.parameters[8].in": "formData",
	"paths./v3/projects/{id}.put.parameters[8].name": "builds_enabled",
	"paths./v3/projects/{id}.put.parameters[8].required": false,
	"paths./v3/projects/{id}.put.parameters[8].type": "boolean",
	"paths./v3/projects/{id}.put.parameters[9].description": "Flag indication if snippets are enabled",
	"paths./v3/projects/{id}.put.parameters[9].in": "formData",
	"paths./v3/projects/{id}.put.parameters[9].name": "snippets_enabled",
	"paths./v3/projects/{id}.put.parameters[9].required": false,
	"paths./v3/projects/{id}.put.parameters[9].type": "boolean",
	"paths./v3/projects/{id}.put.produces.length": 1,
	"paths./v3/projects/{id}.put.produces[0]": "application/json",
	"paths./v3/projects/{id}.put.responses.200.description": "Update an existing project",
	"paths./v3/projects/{id}.put.responses.200.schema.$ref": "#/definitions/Project",
	"paths./v3/projects/{id}.put.summary": "Update an existing project",
	"paths./v3/projects/{id}.put.tags.length": 1,
	"paths./v3/projects/{id}.put.tags[0]": "projects",
	"paths./v3/projects/{id}/(ref/{ref}/)trigger/builds.post.consumes.length": 1,
	"paths./v3/projects/{id}/(ref/{ref}/)trigger/builds.post.consumes[0]": "application/json",
	"paths./v3/projects/{id}/(ref/{ref}/)trigger/builds.post.description": "Trigger a GitLab project build",
	"paths./v3/projects/{id}/(ref/{ref}/)trigger/builds.post.operationId": "postV3ProjectsId(refRef)triggerBuilds",
	"paths./v3/projects/{id}/(ref/{ref}/)trigger/builds.post.parameters.length": 3,
	"paths./v3/projects/{id}/(ref/{ref}/)trigger/builds.post.parameters[0].description": "The ID of a project",
	"paths./v3/projects/{id}/(ref/{ref}/)trigger/builds.post.parameters[0].in": "path",
	"paths./v3/projects/{id}/(ref/{ref}/)trigger/builds.post.parameters[0].name": "id",
	"paths./v3/projects/{id}/(ref/{ref}/)trigger/builds.post.parameters[0].required": true,
	"paths./v3/projects/{id}/(ref/{ref}/)trigger/builds.post.parameters[0].type": "string",
	"paths./v3/projects/{id}/(ref/{ref}/)trigger/builds.post.parameters[1].description": "The commit sha or name of a branch or tag",
	"paths./v3/projects/{id}/(ref/{ref}/)trigger/builds.post.parameters[1].in": "path",
	"paths./v3/projects/{id}/(ref/{ref}/)trigger/builds.post.parameters[1].name": "ref",
	"paths./v3/projects/{id}/(ref/{ref}/)trigger/builds.post.parameters[1].required": true,
	"paths./v3/projects/{id}/(ref/{ref}/)trigger/builds.post.parameters[1].type": "string",
	"paths./v3/projects/{id}/(ref/{ref}/)trigger/builds.post.parameters[2].description": "The unique token of trigger",
	"paths./v3/projects/{id}/(ref/{ref}/)trigger/builds.post.parameters[2].in": "formData",
	"paths./v3/projects/{id}/(ref/{ref}/)trigger/builds.post.parameters[2].name": "token",
	"paths./v3/projects/{id}/(ref/{ref}/)trigger/builds.post.parameters[2].required": true,
	"paths./v3/projects/{id}/(ref/{ref}/)trigger/builds.post.parameters[2].type": "string",
	"paths./v3/projects/{id}/(ref/{ref}/)trigger/builds.post.produces.length": 1,
	"paths./v3/projects/{id}/(ref/{ref}/)trigger/builds.post.produces[0]": "application/json",
	"paths./v3/projects/{id}/(ref/{ref}/)trigger/builds.post.responses.201.description": "Trigger a GitLab project build",
	"paths./v3/projects/{id}/(ref/{ref}/)trigger/builds.post.responses.201.schema.$ref": "#/definitions/TriggerRequest",
	"paths./v3/projects/{id}/(ref/{ref}/)trigger/builds.post.summary": "Trigger a GitLab project build",
	"paths./v3/projects/{id}/(ref/{ref}/)trigger/builds.post.tags.length": 1,
	"paths./v3/projects/{id}/(ref/{ref}/)trigger/builds.post.tags[0]": "projects",
	"paths./v3/projects/{id}/access_requests.get.description": "This feature was introduced in GitLab 8.11.",
	"paths./v3/projects/{id}/access_requests.get.operationId": "getV3ProjectsIdAccessRequests",
	"paths./v3/projects/{id}/access_requests.get.parameters.length": 3,
	"paths./v3/projects/{id}/access_requests.get.parameters[0].description": "The project ID",
	"paths./v3/projects/{id}/access_requests.get.parameters[0].in": "path",
	"paths./v3/projects/{id}/access_requests.get.parameters[0].name": "id",
	"paths./v3/projects/{id}/access_requests.get.parameters[0].required": true,
	"paths./v3/projects/{id}/access_requests.get.parameters[0].type": "string",
	"paths./v3/projects/{id}/access_requests.get.parameters[1].description": "Current page number",
	"paths./v3/projects/{id}/access_requests.get.parameters[1].format": "int32",
	"paths./v3/projects/{id}/access_requests.get.parameters[1].in": "query",
	"paths./v3/projects/{id}/access_requests.get.parameters[1].name": "page",
	"paths./v3/projects/{id}/access_requests.get.parameters[1].required": false,
	"paths./v3/projects/{id}/access_requests.get.parameters[1].type": "integer",
	"paths./v3/projects/{id}/access_requests.get.parameters[2].description": "Number of items per page",
	"paths./v3/projects/{id}/access_requests.get.parameters[2].format": "int32",
	"paths./v3/projects/{id}/access_requests.get.parameters[2].in": "query",
	"paths./v3/projects/{id}/access_requests.get.parameters[2].name": "per_page",
	"paths./v3/projects/{id}/access_requests.get.parameters[2].required": false,
	"paths./v3/projects/{id}/access_requests.get.parameters[2].type": "integer",
	"paths./v3/projects/{id}/access_requests.get.produces.length": 1,
	"paths./v3/projects/{id}/access_requests.get.produces[0]": "application/json",
	"paths./v3/projects/{id}/access_requests.get.responses.200.description": "Gets a list of access requests for a project.",
	"paths./v3/projects/{id}/access_requests.get.responses.200.schema.$ref": "#/definitions/AccessRequester",
	"paths./v3/projects/{id}/access_requests.get.summary": "Gets a list of access requests for a project.",
	"paths./v3/projects/{id}/access_requests.get.tags.length": 1,
	"paths./v3/projects/{id}/access_requests.get.tags[0]": "projects",
	"paths./v3/projects/{id}/access_requests.post.consumes.length": 1,
	"paths./v3/projects/{id}/access_requests.post.consumes[0]": "application/json",
	"paths./v3/projects/{id}/access_requests.post.description": "This feature was introduced in GitLab 8.11.",
	"paths./v3/projects/{id}/access_requests.post.operationId": "postV3ProjectsIdAccessRequests",
	"paths./v3/projects/{id}/access_requests.post.parameters.length": 1,
	"paths./v3/projects/{id}/access_requests.post.parameters[0].description": "The project ID",
	"paths./v3/projects/{id}/access_requests.post.parameters[0].in": "path",
	"paths./v3/projects/{id}/access_requests.post.parameters[0].name": "id",
	"paths./v3/projects/{id}/access_requests.post.parameters[0].required": true,
	"paths./v3/projects/{id}/access_requests.post.parameters[0].type": "string",
	"paths./v3/projects/{id}/access_requests.post.produces.length": 1,
	"paths./v3/projects/{id}/access_requests.post.produces[0]": "application/json",
	"paths./v3/projects/{id}/access_requests.post.responses.201.description": "Requests access for the authenticated user to a project.",
	"paths./v3/projects/{id}/access_requests.post.responses.201.schema.$ref": "#/definitions/AccessRequester",
	"paths./v3/projects/{id}/access_requests.post.summary": "Requests access for the authenticated user to a project.",
	"paths./v3/projects/{id}/access_requests.post.tags.length": 1,
	"paths./v3/projects/{id}/access_requests.post.tags[0]": "projects",
	"paths./v3/projects/{id}/access_requests/{user_id}.delete.description": "This feature was introduced in GitLab 8.11.",
	"paths./v3/projects/{id}/access_requests/{user_id}.delete.operationId": "deleteV3ProjectsIdAccessRequestsUserId",
	"paths./v3/projects/{id}/access_requests/{user_id}.delete.parameters.length": 2,
	"paths./v3/projects/{id}/access_requests/{user_id}.delete.parameters[0].description": "The project ID",
	"paths./v3/projects/{id}/access_requests/{user_id}.delete.parameters[0].in": "path",
	"paths./v3/projects/{id}/access_requests/{user_id}.delete.parameters[0].name": "id",
	"paths./v3/projects/{id}/access_requests/{user_id}.delete.parameters[0].required": true,
	"paths./v3/projects/{id}/access_requests/{user_id}.delete.parameters[0].type": "string",
	"paths./v3/projects/{id}/access_requests/{user_id}.delete.parameters[1].description": "The user ID of the access requester",
	"paths./v3/projects/{id}/access_requests/{user_id}.delete.parameters[1].format": "int32",
	"paths./v3/projects/{id}/access_requests/{user_id}.delete.parameters[1].in": "path",
	"paths./v3/projects/{id}/access_requests/{user_id}.delete.parameters[1].name": "user_id",
	"paths./v3/projects/{id}/access_requests/{user_id}.delete.parameters[1].required": true,
	"paths./v3/projects/{id}/access_requests/{user_id}.delete.parameters[1].type": "integer",
	"paths./v3/projects/{id}/access_requests/{user_id}.delete.produces.length": 1,
	"paths./v3/projects/{id}/access_requests/{user_id}.delete.produces[0]": "application/json",
	"paths./v3/projects/{id}/access_requests/{user_id}.delete.responses.204.description": "Denies an access request for the given user.",
	"paths./v3/projects/{id}/access_requests/{user_id}.delete.summary": "Denies an access request for the given user.",
	"paths./v3/projects/{id}/access_requests/{user_id}.delete.tags.length": 1,
	"paths./v3/projects/{id}/access_requests/{user_id}.delete.tags[0]": "projects",
	"paths./v3/projects/{id}/access_requests/{user_id}/approve.put.consumes.length": 1,
	"paths./v3/projects/{id}/access_requests/{user_id}/approve.put.consumes[0]": "application/json",
	"paths./v3/projects/{id}/access_requests/{user_id}/approve.put.description": "This feature was introduced in GitLab 8.11.",
	"paths./v3/projects/{id}/access_requests/{user_id}/approve.put.operationId": "putV3ProjectsIdAccessRequestsUserIdApprove",
	"paths./v3/projects/{id}/access_requests/{user_id}/approve.put.parameters.length": 3,
	"paths./v3/projects/{id}/access_requests/{user_id}/approve.put.parameters[0].description": "The project ID",
	"paths./v3/projects/{id}/access_requests/{user_id}/approve.put.parameters[0].in": "path",
	"paths./v3/projects/{id}/access_requests/{user_id}/approve.put.parameters[0].name": "id",
	"paths./v3/projects/{id}/access_requests/{user_id}/approve.put.parameters[0].required": true,
	"paths./v3/projects/{id}/access_requests/{user_id}/approve.put.parameters[0].type": "string",
	"paths./v3/projects/{id}/access_requests/{user_id}/approve.put.parameters[1].description": "The user ID of the access requester",
	"paths./v3/projects/{id}/access_requests/{user_id}/approve.put.parameters[1].format": "int32",
	"paths./v3/projects/{id}/access_requests/{user_id}/approve.put.parameters[1].in": "path",
	"paths./v3/projects/{id}/access_requests/{user_id}/approve.put.parameters[1].name": "user_id",
	"paths./v3/projects/{id}/access_requests/{user_id}/approve.put.parameters[1].required": true,
	"paths./v3/projects/{id}/access_requests/{user_id}/approve.put.parameters[1].type": "integer",
	"paths./v3/projects/{id}/access_requests/{user_id}/approve.put.parameters[2].description": "A valid access level (defaults: `30`, developer access level)",
	"paths./v3/projects/{id}/access_requests/{user_id}/approve.put.parameters[2].format": "int32",
	"paths./v3/projects/{id}/access_requests/{user_id}/approve.put.parameters[2].in": "formData",
	"paths./v3/projects/{id}/access_requests/{user_id}/approve.put.parameters[2].name": "access_level",
	"paths./v3/projects/{id}/access_requests/{user_id}/approve.put.parameters[2].required": false,
	"paths./v3/projects/{id}/access_requests/{user_id}/approve.put.parameters[2].type": "integer",
	"paths./v3/projects/{id}/access_requests/{user_id}/approve.put.produces.length": 1,
	"paths./v3/projects/{id}/access_requests/{user_id}/approve.put.produces[0]": "application/json",
	"paths./v3/projects/{id}/access_requests/{user_id}/approve.put.responses.200.description": "Approves an access request for the given user.",
	"paths./v3/projects/{id}/access_requests/{user_id}/approve.put.responses.200.schema.$ref": "#/definitions/Member",
	"paths./v3/projects/{id}/access_requests/{user_id}/approve.put.summary": "Approves an access request for the given user.",
	"paths./v3/projects/{id}/access_requests/{user_id}/approve.put.tags.length": 1,
	"paths./v3/projects/{id}/access_requests/{user_id}/approve.put.tags[0]": "projects",
	"paths./v3/projects/{id}/archive.post.consumes.length": 1,
	"paths./v3/projects/{id}/archive.post.consumes[0]": "application/json",
	"paths./v3/projects/{id}/archive.post.description": "Archive a project",
	"paths./v3/projects/{id}/archive.post.operationId": "postV3ProjectsIdArchive",
	"paths./v3/projects/{id}/archive.post.parameters.length": 1,
	"paths./v3/projects/{id}/archive.post.parameters[0].description": "The ID of a project",
	"paths./v3/projects/{id}/archive.post.parameters[0].in": "path",
	"paths./v3/projects/{id}/archive.post.parameters[0].name": "id",
	"paths./v3/projects/{id}/archive.post.parameters[0].required": true,
	"paths./v3/projects/{id}/archive.post.parameters[0].type": "string",
	"paths./v3/projects/{id}/archive.post.produces.length": 1,
	"paths./v3/projects/{id}/archive.post.produces[0]": "application/json",
	"paths./v3/projects/{id}/archive.post.responses.201.description": "Archive a project",
	"paths./v3/projects/{id}/archive.post.responses.201.schema.$ref": "#/definitions/Project",
	"paths./v3/projects/{id}/archive.post.summary": "Archive a project",
	"paths./v3/projects/{id}/archive.post.tags.length": 1,
	"paths./v3/projects/{id}/archive.post.tags[0]": "projects",
	"paths./v3/projects/{id}/boards.get.description": "This feature was introduced in 8.13",
	"paths./v3/projects/{id}/boards.get.operationId": "getV3ProjectsIdBoards",
	"paths./v3/projects/{id}/boards.get.parameters.length": 1,
	"paths./v3/projects/{id}/boards.get.parameters[0].description": "The ID of a project",
	"paths./v3/projects/{id}/boards.get.parameters[0].in": "path",
	"paths./v3/projects/{id}/boards.get.parameters[0].name": "id",
	"paths./v3/projects/{id}/boards.get.parameters[0].required": true,
	"paths./v3/projects/{id}/boards.get.parameters[0].type": "string",
	"paths./v3/projects/{id}/boards.get.produces.length": 1,
	"paths./v3/projects/{id}/boards.get.produces[0]": "application/json",
	"paths./v3/projects/{id}/boards.get.responses.200.description": "Get all project boards",
	"paths./v3/projects/{id}/boards.get.responses.200.schema.$ref": "#/definitions/Board",
	"paths./v3/projects/{id}/boards.get.summary": "Get all project boards",
	"paths./v3/projects/{id}/boards.get.tags.length": 1,
	"paths./v3/projects/{id}/boards.get.tags[0]": "projects",
	"paths./v3/projects/{id}/boards/{board_id}/lists.get.description": "Does not include `backlog` and `done` lists. This feature was introduced in 8.13",
	"paths./v3/projects/{id}/boards/{board_id}/lists.get.operationId": "getV3ProjectsIdBoardsBoardIdLists",
	"paths./v3/projects/{id}/boards/{board_id}/lists.get.parameters.length": 2,
	"paths./v3/projects/{id}/boards/{board_id}/lists.get.parameters[0].description": "The ID of a project",
	"paths./v3/projects/{id}/boards/{board_id}/lists.get.parameters[0].in": "path",
	"paths./v3/projects/{id}/boards/{board_id}/lists.get.parameters[0].name": "id",
	"paths./v3/projects/{id}/boards/{board_id}/lists.get.parameters[0].required": true,
	"paths./v3/projects/{id}/boards/{board_id}/lists.get.parameters[0].type": "string",
	"paths./v3/projects/{id}/boards/{board_id}/lists.get.parameters[1].description": "The ID of a board",
	"paths./v3/projects/{id}/boards/{board_id}/lists.get.parameters[1].format": "int32",
	"paths./v3/projects/{id}/boards/{board_id}/lists.get.parameters[1].in": "path",
	"paths./v3/projects/{id}/boards/{board_id}/lists.get.parameters[1].name": "board_id",
	"paths./v3/projects/{id}/boards/{board_id}/lists.get.parameters[1].required": true,
	"paths./v3/projects/{id}/boards/{board_id}/lists.get.parameters[1].type": "integer",
	"paths./v3/projects/{id}/boards/{board_id}/lists.get.produces.length": 1,
	"paths./v3/projects/{id}/boards/{board_id}/lists.get.produces[0]": "application/json",
	"paths./v3/projects/{id}/boards/{board_id}/lists.get.responses.200.description": "Get the lists of a project board",
	"paths./v3/projects/{id}/boards/{board_id}/lists.get.responses.200.schema.$ref": "#/definitions/List",
	"paths./v3/projects/{id}/boards/{board_id}/lists.get.summary": "Get the lists of a project board",
	"paths./v3/projects/{id}/boards/{board_id}/lists.get.tags.length": 1,
	"paths./v3/projects/{id}/boards/{board_id}/lists.get.tags[0]": "projects",
	"paths./v3/projects/{id}/boards/{board_id}/lists.post.consumes.length": 1,
	"paths./v3/projects/{id}/boards/{board_id}/lists.post.consumes[0]": "application/json",
	"paths./v3/projects/{id}/boards/{board_id}/lists.post.description": "This feature was introduced in 8.13",
	"paths./v3/projects/{id}/boards/{board_id}/lists.post.operationId": "postV3ProjectsIdBoardsBoardIdLists",
	"paths./v3/projects/{id}/boards/{board_id}/lists.post.parameters.length": 3,
	"paths./v3/projects/{id}/boards/{board_id}/lists.post.parameters[0].description": "The ID of a project",
	"paths./v3/projects/{id}/boards/{board_id}/lists.post.parameters[0].in": "path",
	"paths./v3/projects/{id}/boards/{board_id}/lists.post.parameters[0].name": "id",
	"paths./v3/projects/{id}/boards/{board_id}/lists.post.parameters[0].required": true,
	"paths./v3/projects/{id}/boards/{board_id}/lists.post.parameters[0].type": "string",
	"paths./v3/projects/{id}/boards/{board_id}/lists.post.parameters[1].description": "The ID of a board",
	"paths./v3/projects/{id}/boards/{board_id}/lists.post.parameters[1].format": "int32",
	"paths./v3/projects/{id}/boards/{board_id}/lists.post.parameters[1].in": "path",
	"paths./v3/projects/{id}/boards/{board_id}/lists.post.parameters[1].name": "board_id",
	"paths./v3/projects/{id}/boards/{board_id}/lists.post.parameters[1].required": true,
	"paths./v3/projects/{id}/boards/{board_id}/lists.post.parameters[1].type": "integer",
	"paths./v3/projects/{id}/boards/{board_id}/lists.post.parameters[2].description": "The ID of an existing label",
	"paths./v3/projects/{id}/boards/{board_id}/lists.post.parameters[2].format": "int32",
	"paths./v3/projects/{id}/boards/{board_id}/lists.post.parameters[2].in": "formData",
	"paths./v3/projects/{id}/boards/{board_id}/lists.post.parameters[2].name": "label_id",
	"paths./v3/projects/{id}/boards/{board_id}/lists.post.parameters[2].required": true,
	"paths./v3/projects/{id}/boards/{board_id}/lists.post.parameters[2].type": "integer",
	"paths./v3/projects/{id}/boards/{board_id}/lists.post.produces.length": 1,
	"paths./v3/projects/{id}/boards/{board_id}/lists.post.produces[0]": "application/json",
	"paths./v3/projects/{id}/boards/{board_id}/lists.post.responses.201.description": "Create a new board list",
	"paths./v3/projects/{id}/boards/{board_id}/lists.post.responses.201.schema.$ref": "#/definitions/List",
	"paths./v3/projects/{id}/boards/{board_id}/lists.post.summary": "Create a new board list",
	"paths./v3/projects/{id}/boards/{board_id}/lists.post.tags.length": 1,
	"paths./v3/projects/{id}/boards/{board_id}/lists.post.tags[0]": "projects",
	"paths./v3/projects/{id}/boards/{board_id}/lists/{list_id}.delete.description": "This feature was introduced in 8.13",
	"paths./v3/projects/{id}/boards/{board_id}/lists/{list_id}.delete.operationId": "deleteV3ProjectsIdBoardsBoardIdListsListId",
	"paths./v3/projects/{id}/boards/{board_id}/lists/{list_id}.delete.parameters.length": 3,
	"paths./v3/projects/{id}/boards/{board_id}/lists/{list_id}.delete.parameters[0].description": "The ID of a project",
	"paths./v3/projects/{id}/boards/{board_id}/lists/{list_id}.delete.parameters[0].in": "path",
	"paths./v3/projects/{id}/boards/{board_id}/lists/{list_id}.delete.parameters[0].name": "id",
	"paths./v3/projects/{id}/boards/{board_id}/lists/{list_id}.delete.parameters[0].required": true,
	"paths./v3/projects/{id}/boards/{board_id}/lists/{list_id}.delete.parameters[0].type": "string",
	"paths./v3/projects/{id}/boards/{board_id}/lists/{list_id}.delete.parameters[1].description": "The ID of a board",
	"paths./v3/projects/{id}/boards/{board_id}/lists/{list_id}.delete.parameters[1].format": "int32",
	"paths./v3/projects/{id}/boards/{board_id}/lists/{list_id}.delete.parameters[1].in": "path",
	"paths./v3/projects/{id}/boards/{board_id}/lists/{list_id}.delete.parameters[1].name": "board_id",
	"paths./v3/projects/{id}/boards/{board_id}/lists/{list_id}.delete.parameters[1].required": true,
	"paths./v3/projects/{id}/boards/{board_id}/lists/{list_id}.delete.parameters[1].type": "integer",
	"paths./v3/projects/{id}/boards/{board_id}/lists/{list_id}.delete.parameters[2].description": "The ID of a board list",
	"paths./v3/projects/{id}/boards/{board_id}/lists/{list_id}.delete.parameters[2].format": "int32",
	"paths./v3/projects/{id}/boards/{board_id}/lists/{list_id}.delete.parameters[2].in": "path",
	"paths./v3/projects/{id}/boards/{board_id}/lists/{list_id}.delete.parameters[2].name": "list_id",
	"paths./v3/projects/{id}/boards/{board_id}/lists/{list_id}.delete.parameters[2].required": true,
	"paths./v3/projects/{id}/boards/{board_id}/lists/{list_id}.delete.parameters[2].type": "integer",
	"paths./v3/projects/{id}/boards/{board_id}/lists/{list_id}.delete.produces.length": 1,
	"paths./v3/projects/{id}/boards/{board_id}/lists/{list_id}.delete.produces[0]": "application/json",
	"paths./v3/projects/{id}/boards/{board_id}/lists/{list_id}.delete.responses.200.description": "Delete a board list",
	"paths./v3/projects/{id}/boards/{board_id}/lists/{list_id}.delete.responses.200.schema.$ref": "#/definitions/List",
	"paths./v3/projects/{id}/boards/{board_id}/lists/{list_id}.delete.summary": "Delete a board list",
	"paths./v3/projects/{id}/boards/{board_id}/lists/{list_id}.delete.tags.length": 1,
	"paths./v3/projects/{id}/boards/{board_id}/lists/{list_id}.delete.tags[0]": "projects",
	"paths./v3/projects/{id}/boards/{board_id}/lists/{list_id}.get.description": "This feature was introduced in 8.13",
	"paths./v3/projects/{id}/boards/{board_id}/lists/{list_id}.get.operationId": "getV3ProjectsIdBoardsBoardIdListsListId",
	"paths./v3/projects/{id}/boards/{board_id}/lists/{list_id}.get.parameters.length": 3,
	"paths./v3/projects/{id}/boards/{board_id}/lists/{list_id}.get.parameters[0].description": "The ID of a project",
	"paths./v3/projects/{id}/boards/{board_id}/lists/{list_id}.get.parameters[0].in": "path",
	"paths./v3/projects/{id}/boards/{board_id}/lists/{list_id}.get.parameters[0].name": "id",
	"paths./v3/projects/{id}/boards/{board_id}/lists/{list_id}.get.parameters[0].required": true,
	"paths./v3/projects/{id}/boards/{board_id}/lists/{list_id}.get.parameters[0].type": "string",
	"paths./v3/projects/{id}/boards/{board_id}/lists/{list_id}.get.parameters[1].description": "The ID of a board",
	"paths./v3/projects/{id}/boards/{board_id}/lists/{list_id}.get.parameters[1].format": "int32",
	"paths./v3/projects/{id}/boards/{board_id}/lists/{list_id}.get.parameters[1].in": "path",
	"paths./v3/projects/{id}/boards/{board_id}/lists/{list_id}.get.parameters[1].name": "board_id",
	"paths./v3/projects/{id}/boards/{board_id}/lists/{list_id}.get.parameters[1].required": true,
	"paths./v3/projects/{id}/boards/{board_id}/lists/{list_id}.get.parameters[1].type": "integer",
	"paths./v3/projects/{id}/boards/{board_id}/lists/{list_id}.get.parameters[2].description": "The ID of a list",
	"paths./v3/projects/{id}/boards/{board_id}/lists/{list_id}.get.parameters[2].format": "int32",
	"paths./v3/projects/{id}/boards/{board_id}/lists/{list_id}.get.parameters[2].in": "path",
	"paths./v3/projects/{id}/boards/{board_id}/lists/{list_id}.get.parameters[2].name": "list_id",
	"paths./v3/projects/{id}/boards/{board_id}/lists/{list_id}.get.parameters[2].required": true,
	"paths./v3/projects/{id}/boards/{board_id}/lists/{list_id}.get.parameters[2].type": "integer",
	"paths./v3/projects/{id}/boards/{board_id}/lists/{list_id}.get.produces.length": 1,
	"paths./v3/projects/{id}/boards/{board_id}/lists/{list_id}.get.produces[0]": "application/json",
	"paths./v3/projects/{id}/boards/{board_id}/lists/{list_id}.get.responses.200.description": "Get a list of a project board",
	"paths./v3/projects/{id}/boards/{board_id}/lists/{list_id}.get.responses.200.schema.$ref": "#/definitions/List",
	"paths./v3/projects/{id}/boards/{board_id}/lists/{list_id}.get.summary": "Get a list of a project board",
	"paths./v3/projects/{id}/boards/{board_id}/lists/{list_id}.get.tags.length": 1,
	"paths./v3/projects/{id}/boards/{board_id}/lists/{list_id}.get.tags[0]": "projects",
	"paths./v3/projects/{id}/boards/{board_id}/lists/{list_id}.put.consumes.length": 1,
	"paths./v3/projects/{id}/boards/{board_id}/lists/{list_id}.put.consumes[0]": "application/json",
	"paths./v3/projects/{id}/boards/{board_id}/lists/{list_id}.put.description": "This feature was introduced in 8.13",
	"paths./v3/projects/{id}/boards/{board_id}/lists/{list_id}.put.operationId": "putV3ProjectsIdBoardsBoardIdListsListId",
	"paths./v3/projects/{id}/boards/{board_id}/lists/{list_id}.put.parameters.length": 4,
	"paths./v3/projects/{id}/boards/{board_id}/lists/{list_id}.put.parameters[0].description": "The ID of a project",
	"paths./v3/projects/{id}/boards/{board_id}/lists/{list_id}.put.parameters[0].in": "path",
	"paths./v3/projects/{id}/boards/{board_id}/lists/{list_id}.put.parameters[0].name": "id",
	"paths./v3/projects/{id}/boards/{board_id}/lists/{list_id}.put.parameters[0].required": true,
	"paths./v3/projects/{id}/boards/{board_id}/lists/{list_id}.put.parameters[0].type": "string",
	"paths./v3/projects/{id}/boards/{board_id}/lists/{list_id}.put.parameters[1].description": "The ID of a board",
	"paths./v3/projects/{id}/boards/{board_id}/lists/{list_id}.put.parameters[1].format": "int32",
	"paths./v3/projects/{id}/boards/{board_id}/lists/{list_id}.put.parameters[1].in": "path",
	"paths./v3/projects/{id}/boards/{board_id}/lists/{list_id}.put.parameters[1].name": "board_id",
	"paths./v3/projects/{id}/boards/{board_id}/lists/{list_id}.put.parameters[1].required": true,
	"paths./v3/projects/{id}/boards/{board_id}/lists/{list_id}.put.parameters[1].type": "integer",
	"paths./v3/projects/{id}/boards/{board_id}/lists/{list_id}.put.parameters[2].description": "The ID of a list",
	"paths./v3/projects/{id}/boards/{board_id}/lists/{list_id}.put.parameters[2].format": "int32",
	"paths./v3/projects/{id}/boards/{board_id}/lists/{list_id}.put.parameters[2].in": "path",
	"paths./v3/projects/{id}/boards/{board_id}/lists/{list_id}.put.parameters[2].name": "list_id",
	"paths./v3/projects/{id}/boards/{board_id}/lists/{list_id}.put.parameters[2].required": true,
	"paths./v3/projects/{id}/boards/{board_id}/lists/{list_id}.put.parameters[2].type": "integer",
	"paths./v3/projects/{id}/boards/{board_id}/lists/{list_id}.put.parameters[3].description": "The position of the list",
	"paths./v3/projects/{id}/boards/{board_id}/lists/{list_id}.put.parameters[3].format": "int32",
	"paths./v3/projects/{id}/boards/{board_id}/lists/{list_id}.put.parameters[3].in": "formData",
	"paths./v3/projects/{id}/boards/{board_id}/lists/{list_id}.put.parameters[3].name": "position",
	"paths./v3/projects/{id}/boards/{board_id}/lists/{list_id}.put.parameters[3].required": true,
	"paths./v3/projects/{id}/boards/{board_id}/lists/{list_id}.put.parameters[3].type": "integer",
	"paths./v3/projects/{id}/boards/{board_id}/lists/{list_id}.put.produces.length": 1,
	"paths./v3/projects/{id}/boards/{board_id}/lists/{list_id}.put.produces[0]": "application/json",
	"paths./v3/projects/{id}/boards/{board_id}/lists/{list_id}.put.responses.200.description": "Moves a board list to a new position",
	"paths./v3/projects/{id}/boards/{board_id}/lists/{list_id}.put.responses.200.schema.$ref": "#/definitions/List",
	"paths./v3/projects/{id}/boards/{board_id}/lists/{list_id}.put.summary": "Moves a board list to a new position",
	"paths./v3/projects/{id}/boards/{board_id}/lists/{list_id}.put.tags.length": 1,
	"paths./v3/projects/{id}/boards/{board_id}/lists/{list_id}.put.tags[0]": "projects",
	"paths./v3/projects/{id}/builds.get.description": "Get a project builds",
	"paths./v3/projects/{id}/builds.get.operationId": "getV3ProjectsIdBuilds",
	"paths./v3/projects/{id}/builds.get.parameters.length": 4,
	"paths./v3/projects/{id}/builds.get.parameters[0].description": "The ID of a project",
	"paths./v3/projects/{id}/builds.get.parameters[0].in": "path",
	"paths./v3/projects/{id}/builds.get.parameters[0].name": "id",
	"paths./v3/projects/{id}/builds.get.parameters[0].required": true,
	"paths./v3/projects/{id}/builds.get.parameters[0].type": "string",
	"paths./v3/projects/{id}/builds.get.parameters[1].description": "The scope of builds to show",
	"paths./v3/projects/{id}/builds.get.parameters[1].enum.length": 5,
	"paths./v3/projects/{id}/builds.get.parameters[1].enum[0]": "pending",
	"paths./v3/projects/{id}/builds.get.parameters[1].enum[1]": "running",
	"paths./v3/projects/{id}/builds.get.parameters[1].enum[2]": "failed",
	"paths./v3/projects/{id}/builds.get.parameters[1].enum[3]": "success",
	"paths./v3/projects/{id}/builds.get.parameters[1].enum[4]": "canceled",
	"paths./v3/projects/{id}/builds.get.parameters[1].in": "query",
	"paths./v3/projects/{id}/builds.get.parameters[1].name": "scope",
	"paths./v3/projects/{id}/builds.get.parameters[1].required": false,
	"paths./v3/projects/{id}/builds.get.parameters[1].type": "string",
	"paths./v3/projects/{id}/builds.get.parameters[2].description": "Current page number",
	"paths./v3/projects/{id}/builds.get.parameters[2].format": "int32",
	"paths./v3/projects/{id}/builds.get.parameters[2].in": "query",
	"paths./v3/projects/{id}/builds.get.parameters[2].name": "page",
	"paths./v3/projects/{id}/builds.get.parameters[2].required": false,
	"paths./v3/projects/{id}/builds.get.parameters[2].type": "integer",
	"paths./v3/projects/{id}/builds.get.parameters[3].description": "Number of items per page",
	"paths./v3/projects/{id}/builds.get.parameters[3].format": "int32",
	"paths./v3/projects/{id}/builds.get.parameters[3].in": "query",
	"paths./v3/projects/{id}/builds.get.parameters[3].name": "per_page",
	"paths./v3/projects/{id}/builds.get.parameters[3].required": false,
	"paths./v3/projects/{id}/builds.get.parameters[3].type": "integer",
	"paths./v3/projects/{id}/builds.get.produces.length": 1,
	"paths./v3/projects/{id}/builds.get.produces[0]": "application/json",
	"paths./v3/projects/{id}/builds.get.responses.200.description": "Get a project builds",
	"paths./v3/projects/{id}/builds.get.responses.200.schema.$ref": "#/definitions/Build",
	"paths./v3/projects/{id}/builds.get.summary": "Get a project builds",
	"paths./v3/projects/{id}/builds.get.tags.length": 1,
	"paths./v3/projects/{id}/builds.get.tags[0]": "projects",
	"paths./v3/projects/{id}/builds/artifacts/{ref_name}/download.get.description": "This feature was introduced in GitLab 8.10",
	"paths./v3/projects/{id}/builds/artifacts/{ref_name}/download.get.operationId": "getV3ProjectsIdBuildsArtifactsRefNameDownload",
	"paths./v3/projects/{id}/builds/artifacts/{ref_name}/download.get.parameters.length": 3,
	"paths./v3/projects/{id}/builds/artifacts/{ref_name}/download.get.parameters[0].description": "The ID of a project",
	"paths./v3/projects/{id}/builds/artifacts/{ref_name}/download.get.parameters[0].in": "path",
	"paths./v3/projects/{id}/builds/artifacts/{ref_name}/download.get.parameters[0].name": "id",
	"paths./v3/projects/{id}/builds/artifacts/{ref_name}/download.get.parameters[0].required": true,
	"paths./v3/projects/{id}/builds/artifacts/{ref_name}/download.get.parameters[0].type": "string",
	"paths./v3/projects/{id}/builds/artifacts/{ref_name}/download.get.parameters[1].description": "The ref from repository",
	"paths./v3/projects/{id}/builds/artifacts/{ref_name}/download.get.parameters[1].in": "path",
	"paths./v3/projects/{id}/builds/artifacts/{ref_name}/download.get.parameters[1].name": "ref_name",
	"paths./v3/projects/{id}/builds/artifacts/{ref_name}/download.get.parameters[1].required": true,
	"paths./v3/projects/{id}/builds/artifacts/{ref_name}/download.get.parameters[1].type": "string",
	"paths./v3/projects/{id}/builds/artifacts/{ref_name}/download.get.parameters[2].description": "The name for the build",
	"paths./v3/projects/{id}/builds/artifacts/{ref_name}/download.get.parameters[2].in": "query",
	"paths./v3/projects/{id}/builds/artifacts/{ref_name}/download.get.parameters[2].name": "job",
	"paths./v3/projects/{id}/builds/artifacts/{ref_name}/download.get.parameters[2].required": true,
	"paths./v3/projects/{id}/builds/artifacts/{ref_name}/download.get.parameters[2].type": "string",
	"paths./v3/projects/{id}/builds/artifacts/{ref_name}/download.get.produces.length": 1,
	"paths./v3/projects/{id}/builds/artifacts/{ref_name}/download.get.produces[0]": "application/json",
	"paths./v3/projects/{id}/builds/artifacts/{ref_name}/download.get.responses.200.description": "Download the artifacts file from build",
	"paths./v3/projects/{id}/builds/artifacts/{ref_name}/download.get.summary": "Download the artifacts file from build",
	"paths./v3/projects/{id}/builds/artifacts/{ref_name}/download.get.tags.length": 1,
	"paths./v3/projects/{id}/builds/artifacts/{ref_name}/download.get.tags[0]": "projects",
	"paths./v3/projects/{id}/builds/{build_id}.get.description": "Get a specific build of a project",
	"paths./v3/projects/{id}/builds/{build_id}.get.operationId": "getV3ProjectsIdBuildsBuildId",
	"paths./v3/projects/{id}/builds/{build_id}.get.parameters.length": 2,
	"paths./v3/projects/{id}/builds/{build_id}.get.parameters[0].description": "The ID of a project",
	"paths./v3/projects/{id}/builds/{build_id}.get.parameters[0].in": "path",
	"paths./v3/projects/{id}/builds/{build_id}.get.parameters[0].name": "id",
	"paths./v3/projects/{id}/builds/{build_id}.get.parameters[0].required": true,
	"paths./v3/projects/{id}/builds/{build_id}.get.parameters[0].type": "string",
	"paths./v3/projects/{id}/builds/{build_id}.get.parameters[1].description": "The ID of a build",
	"paths./v3/projects/{id}/builds/{build_id}.get.parameters[1].format": "int32",
	"paths./v3/projects/{id}/builds/{build_id}.get.parameters[1].in": "path",
	"paths./v3/projects/{id}/builds/{build_id}.get.parameters[1].name": "build_id",
	"paths./v3/projects/{id}/builds/{build_id}.get.parameters[1].required": true,
	"paths./v3/projects/{id}/builds/{build_id}.get.parameters[1].type": "integer",
	"paths./v3/projects/{id}/builds/{build_id}.get.produces.length": 1,
	"paths./v3/projects/{id}/builds/{build_id}.get.produces[0]": "application/json",
	"paths./v3/projects/{id}/builds/{build_id}.get.responses.200.description": "Get a specific build of a project",
	"paths./v3/projects/{id}/builds/{build_id}.get.responses.200.schema.$ref": "#/definitions/Build",
	"paths./v3/projects/{id}/builds/{build_id}.get.summary": "Get a specific build of a project",
	"paths./v3/projects/{id}/builds/{build_id}.get.tags.length": 1,
	"paths./v3/projects/{id}/builds/{build_id}.get.tags[0]": "projects",
	"paths./v3/projects/{id}/builds/{build_id}/artifacts.get.description": "This feature was introduced in GitLab 8.5",
	"paths./v3/projects/{id}/builds/{build_id}/artifacts.get.operationId": "getV3ProjectsIdBuildsBuildIdArtifacts",
	"paths./v3/projects/{id}/builds/{build_id}/artifacts.get.parameters.length": 2,
	"paths./v3/projects/{id}/builds/{build_id}/artifacts.get.parameters[0].description": "The ID of a project",
	"paths./v3/projects/{id}/builds/{build_id}/artifacts.get.parameters[0].in": "path",
	"paths./v3/projects/{id}/builds/{build_id}/artifacts.get.parameters[0].name": "id",
	"paths./v3/projects/{id}/builds/{build_id}/artifacts.get.parameters[0].required": true,
	"paths./v3/projects/{id}/builds/{build_id}/artifacts.get.parameters[0].type": "string",
	"paths./v3/projects/{id}/builds/{build_id}/artifacts.get.parameters[1].description": "The ID of a build",
	"paths./v3/projects/{id}/builds/{build_id}/artifacts.get.parameters[1].format": "int32",
	"paths./v3/projects/{id}/builds/{build_id}/artifacts.get.parameters[1].in": "path",
	"paths./v3/projects/{id}/builds/{build_id}/artifacts.get.parameters[1].name": "build_id",
	"paths./v3/projects/{id}/builds/{build_id}/artifacts.get.parameters[1].required": true,
	"paths./v3/projects/{id}/builds/{build_id}/artifacts.get.parameters[1].type": "integer",
	"paths./v3/projects/{id}/builds/{build_id}/artifacts.get.produces.length": 1,
	"paths./v3/projects/{id}/builds/{build_id}/artifacts.get.produces[0]": "application/json",
	"paths./v3/projects/{id}/builds/{build_id}/artifacts.get.responses.200.description": "Download the artifacts file from build",
	"paths./v3/projects/{id}/builds/{build_id}/artifacts.get.summary": "Download the artifacts file from build",
	"paths./v3/projects/{id}/builds/{build_id}/artifacts.get.tags.length": 1,
	"paths./v3/projects/{id}/builds/{build_id}/artifacts.get.tags[0]": "projects",
	"paths./v3/projects/{id}/builds/{build_id}/artifacts/keep.post.consumes.length": 1,
	"paths./v3/projects/{id}/builds/{build_id}/artifacts/keep.post.consumes[0]": "application/json",
	"paths./v3/projects/{id}/builds/{build_id}/artifacts/keep.post.description": "Keep the artifacts to prevent them from being deleted",
	"paths./v3/projects/{id}/builds/{build_id}/artifacts/keep.post.operationId": "postV3ProjectsIdBuildsBuildIdArtifactsKeep",
	"paths./v3/projects/{id}/builds/{build_id}/artifacts/keep.post.parameters.length": 2,
	"paths./v3/projects/{id}/builds/{build_id}/artifacts/keep.post.parameters[0].description": "The ID of a project",
	"paths./v3/projects/{id}/builds/{build_id}/artifacts/keep.post.parameters[0].in": "path",
	"paths./v3/projects/{id}/builds/{build_id}/artifacts/keep.post.parameters[0].name": "id",
	"paths./v3/projects/{id}/builds/{build_id}/artifacts/keep.post.parameters[0].required": true,
	"paths./v3/projects/{id}/builds/{build_id}/artifacts/keep.post.parameters[0].type": "string",
	"paths./v3/projects/{id}/builds/{build_id}/artifacts/keep.post.parameters[1].description": "The ID of a build",
	"paths./v3/projects/{id}/builds/{build_id}/artifacts/keep.post.parameters[1].format": "int32",
	"paths./v3/projects/{id}/builds/{build_id}/artifacts/keep.post.parameters[1].in": "path",
	"paths./v3/projects/{id}/builds/{build_id}/artifacts/keep.post.parameters[1].name": "build_id",
	"paths./v3/projects/{id}/builds/{build_id}/artifacts/keep.post.parameters[1].required": true,
	"paths./v3/projects/{id}/builds/{build_id}/artifacts/keep.post.parameters[1].type": "integer",
	"paths./v3/projects/{id}/builds/{build_id}/artifacts/keep.post.produces.length": 1,
	"paths./v3/projects/{id}/builds/{build_id}/artifacts/keep.post.produces[0]": "application/json",
	"paths./v3/projects/{id}/builds/{build_id}/artifacts/keep.post.responses.201.description": "Keep the artifacts to prevent them from being deleted",
	"paths./v3/projects/{id}/builds/{build_id}/artifacts/keep.post.responses.201.schema.$ref": "#/definitions/Build",
	"paths./v3/projects/{id}/builds/{build_id}/artifacts/keep.post.summary": "Keep the artifacts to prevent them from being deleted",
	"paths./v3/projects/{id}/builds/{build_id}/artifacts/keep.post.tags.length": 1,
	"paths./v3/projects/{id}/builds/{build_id}/artifacts/keep.post.tags[0]": "projects",
	"paths./v3/projects/{id}/builds/{build_id}/cancel.post.consumes.length": 1,
	"paths./v3/projects/{id}/builds/{build_id}/cancel.post.consumes[0]": "application/json",
	"paths./v3/projects/{id}/builds/{build_id}/cancel.post.description": "Cancel a specific build of a project",
	"paths./v3/projects/{id}/builds/{build_id}/cancel.post.operationId": "postV3ProjectsIdBuildsBuildIdCancel",
	"paths./v3/projects/{id}/builds/{build_id}/cancel.post.parameters.length": 2,
	"paths./v3/projects/{id}/builds/{build_id}/cancel.post.parameters[0].description": "The ID of a project",
	"paths./v3/projects/{id}/builds/{build_id}/cancel.post.parameters[0].in": "path",
	"paths./v3/projects/{id}/builds/{build_id}/cancel.post.parameters[0].name": "id",
	"paths./v3/projects/{id}/builds/{build_id}/cancel.post.parameters[0].required": true,
	"paths./v3/projects/{id}/builds/{build_id}/cancel.post.parameters[0].type": "string",
	"paths./v3/projects/{id}/builds/{build_id}/cancel.post.parameters[1].description": "The ID of a build",
	"paths./v3/projects/{id}/builds/{build_id}/cancel.post.parameters[1].format": "int32",
	"paths./v3/projects/{id}/builds/{build_id}/cancel.post.parameters[1].in": "path",
	"paths./v3/projects/{id}/builds/{build_id}/cancel.post.parameters[1].name": "build_id",
	"paths./v3/projects/{id}/builds/{build_id}/cancel.post.parameters[1].required": true,
	"paths./v3/projects/{id}/builds/{build_id}/cancel.post.parameters[1].type": "integer",
	"paths./v3/projects/{id}/builds/{build_id}/cancel.post.produces.length": 1,
	"paths./v3/projects/{id}/builds/{build_id}/cancel.post.produces[0]": "application/json",
	"paths./v3/projects/{id}/builds/{build_id}/cancel.post.responses.201.description": "Cancel a specific build of a project",
	"paths./v3/projects/{id}/builds/{build_id}/cancel.post.responses.201.schema.$ref": "#/definitions/Build",
	"paths./v3/projects/{id}/builds/{build_id}/cancel.post.summary": "Cancel a specific build of a project",
	"paths./v3/projects/{id}/builds/{build_id}/cancel.post.tags.length": 1,
	"paths./v3/projects/{id}/builds/{build_id}/cancel.post.tags[0]": "projects",
	"paths./v3/projects/{id}/builds/{build_id}/erase.post.consumes.length": 1,
	"paths./v3/projects/{id}/builds/{build_id}/erase.post.consumes[0]": "application/json",
	"paths./v3/projects/{id}/builds/{build_id}/erase.post.description": "Erase build (remove artifacts and build trace)",
	"paths./v3/projects/{id}/builds/{build_id}/erase.post.operationId": "postV3ProjectsIdBuildsBuildIdErase",
	"paths./v3/projects/{id}/builds/{build_id}/erase.post.parameters.length": 2,
	"paths./v3/projects/{id}/builds/{build_id}/erase.post.parameters[0].description": "The ID of a project",
	"paths./v3/projects/{id}/builds/{build_id}/erase.post.parameters[0].in": "path",
	"paths./v3/projects/{id}/builds/{build_id}/erase.post.parameters[0].name": "id",
	"paths./v3/projects/{id}/builds/{build_id}/erase.post.parameters[0].required": true,
	"paths./v3/projects/{id}/builds/{build_id}/erase.post.parameters[0].type": "string",
	"paths./v3/projects/{id}/builds/{build_id}/erase.post.parameters[1].description": "The ID of a build",
	"paths./v3/projects/{id}/builds/{build_id}/erase.post.parameters[1].format": "int32",
	"paths./v3/projects/{id}/builds/{build_id}/erase.post.parameters[1].in": "path",
	"paths./v3/projects/{id}/builds/{build_id}/erase.post.parameters[1].name": "build_id",
	"paths./v3/projects/{id}/builds/{build_id}/erase.post.parameters[1].required": true,
	"paths./v3/projects/{id}/builds/{build_id}/erase.post.parameters[1].type": "integer",
	"paths./v3/projects/{id}/builds/{build_id}/erase.post.produces.length": 1,
	"paths./v3/projects/{id}/builds/{build_id}/erase.post.produces[0]": "application/json",
	"paths./v3/projects/{id}/builds/{build_id}/erase.post.responses.201.description": "Erase build (remove artifacts and build trace)",
	"paths./v3/projects/{id}/builds/{build_id}/erase.post.responses.201.schema.$ref": "#/definitions/Build",
	"paths./v3/projects/{id}/builds/{build_id}/erase.post.summary": "Erase build (remove artifacts and build trace)",
	"paths./v3/projects/{id}/builds/{build_id}/erase.post.tags.length": 1,
	"paths./v3/projects/{id}/builds/{build_id}/erase.post.tags[0]": "projects",
	"paths./v3/projects/{id}/builds/{build_id}/play.post.consumes.length": 1,
	"paths./v3/projects/{id}/builds/{build_id}/play.post.consumes[0]": "application/json",
	"paths./v3/projects/{id}/builds/{build_id}/play.post.description": "This feature was added in GitLab 8.11",
	"paths./v3/projects/{id}/builds/{build_id}/play.post.operationId": "postV3ProjectsIdBuildsBuildIdPlay",
	"paths./v3/projects/{id}/builds/{build_id}/play.post.parameters.length": 2,
	"paths./v3/projects/{id}/builds/{build_id}/play.post.parameters[0].description": "The ID of a project",
	"paths./v3/projects/{id}/builds/{build_id}/play.post.parameters[0].in": "path",
	"paths./v3/projects/{id}/builds/{build_id}/play.post.parameters[0].name": "id",
	"paths./v3/projects/{id}/builds/{build_id}/play.post.parameters[0].required": true,
	"paths./v3/projects/{id}/builds/{build_id}/play.post.parameters[0].type": "string",
	"paths./v3/projects/{id}/builds/{build_id}/play.post.parameters[1].description": "The ID of a Build",
	"paths./v3/projects/{id}/builds/{build_id}/play.post.parameters[1].format": "int32",
	"paths./v3/projects/{id}/builds/{build_id}/play.post.parameters[1].in": "path",
	"paths./v3/projects/{id}/builds/{build_id}/play.post.parameters[1].name": "build_id",
	"paths./v3/projects/{id}/builds/{build_id}/play.post.parameters[1].required": true,
	"paths./v3/projects/{id}/builds/{build_id}/play.post.parameters[1].type": "integer",
	"paths./v3/projects/{id}/builds/{build_id}/play.post.produces.length": 1,
	"paths./v3/projects/{id}/builds/{build_id}/play.post.produces[0]": "application/json",
	"paths./v3/projects/{id}/builds/{build_id}/play.post.responses.201.description": "Trigger a manual build",
	"paths./v3/projects/{id}/builds/{build_id}/play.post.responses.201.schema.$ref": "#/definitions/Build",
	"paths./v3/projects/{id}/builds/{build_id}/play.post.summary": "Trigger a manual build",
	"paths./v3/projects/{id}/builds/{build_id}/play.post.tags.length": 1,
	"paths./v3/projects/{id}/builds/{build_id}/play.post.tags[0]": "projects",
	"paths./v3/projects/{id}/builds/{build_id}/retry.post.consumes.length": 1,
	"paths./v3/projects/{id}/builds/{build_id}/retry.post.consumes[0]": "application/json",
	"paths./v3/projects/{id}/builds/{build_id}/retry.post.description": "Retry a specific build of a project",
	"paths./v3/projects/{id}/builds/{build_id}/retry.post.operationId": "postV3ProjectsIdBuildsBuildIdRetry",
	"paths./v3/projects/{id}/builds/{build_id}/retry.post.parameters.length": 2,
	"paths./v3/projects/{id}/builds/{build_id}/retry.post.parameters[0].description": "The ID of a project",
	"paths./v3/projects/{id}/builds/{build_id}/retry.post.parameters[0].in": "path",
	"paths./v3/projects/{id}/builds/{build_id}/retry.post.parameters[0].name": "id",
	"paths./v3/projects/{id}/builds/{build_id}/retry.post.parameters[0].required": true,
	"paths./v3/projects/{id}/builds/{build_id}/retry.post.parameters[0].type": "string",
	"paths./v3/projects/{id}/builds/{build_id}/retry.post.parameters[1].description": "The ID of a build",
	"paths./v3/projects/{id}/builds/{build_id}/retry.post.parameters[1].format": "int32",
	"paths./v3/projects/{id}/builds/{build_id}/retry.post.parameters[1].in": "path",
	"paths./v3/projects/{id}/builds/{build_id}/retry.post.parameters[1].name": "build_id",
	"paths./v3/projects/{id}/builds/{build_id}/retry.post.parameters[1].required": true,
	"paths./v3/projects/{id}/builds/{build_id}/retry.post.parameters[1].type": "integer",
	"paths./v3/projects/{id}/builds/{build_id}/retry.post.produces.length": 1,
	"paths./v3/projects/{id}/builds/{build_id}/retry.post.produces[0]": "application/json",
	"paths./v3/projects/{id}/builds/{build_id}/retry.post.responses.201.description": "Retry a specific build of a project",
	"paths./v3/projects/{id}/builds/{build_id}/retry.post.responses.201.schema.$ref": "#/definitions/Build",
	"paths./v3/projects/{id}/builds/{build_id}/retry.post.summary": "Retry a specific build of a project",
	"paths./v3/projects/{id}/builds/{build_id}/retry.post.tags.length": 1,
	"paths./v3/projects/{id}/builds/{build_id}/retry.post.tags[0]": "projects",
	"paths./v3/projects/{id}/builds/{build_id}/trace.get.description": "Get a trace of a specific build of a project",
	"paths./v3/projects/{id}/builds/{build_id}/trace.get.operationId": "getV3ProjectsIdBuildsBuildIdTrace",
	"paths./v3/projects/{id}/builds/{build_id}/trace.get.parameters.length": 2,
	"paths./v3/projects/{id}/builds/{build_id}/trace.get.parameters[0].description": "The ID of a project",
	"paths./v3/projects/{id}/builds/{build_id}/trace.get.parameters[0].in": "path",
	"paths./v3/projects/{id}/builds/{build_id}/trace.get.parameters[0].name": "id",
	"paths./v3/projects/{id}/builds/{build_id}/trace.get.parameters[0].required": true,
	"paths./v3/projects/{id}/builds/{build_id}/trace.get.parameters[0].type": "string",
	"paths./v3/projects/{id}/builds/{build_id}/trace.get.parameters[1].description": "The ID of a build",
	"paths./v3/projects/{id}/builds/{build_id}/trace.get.parameters[1].format": "int32",
	"paths./v3/projects/{id}/builds/{build_id}/trace.get.parameters[1].in": "path",
	"paths./v3/projects/{id}/builds/{build_id}/trace.get.parameters[1].name": "build_id",
	"paths./v3/projects/{id}/builds/{build_id}/trace.get.parameters[1].required": true,
	"paths./v3/projects/{id}/builds/{build_id}/trace.get.parameters[1].type": "integer",
	"paths./v3/projects/{id}/builds/{build_id}/trace.get.produces.length": 1,
	"paths./v3/projects/{id}/builds/{build_id}/trace.get.produces[0]": "application/json",
	"paths./v3/projects/{id}/builds/{build_id}/trace.get.responses.200.description": "Get a trace of a specific build of a project",
	"paths./v3/projects/{id}/builds/{build_id}/trace.get.summary": "Get a trace of a specific build of a project",
	"paths./v3/projects/{id}/builds/{build_id}/trace.get.tags.length": 1,
	"paths./v3/projects/{id}/builds/{build_id}/trace.get.tags[0]": "projects",
	"paths./v3/projects/{id}/deploy_keys.get.description": "Get a specific project's deploy keys",
	"paths./v3/projects/{id}/deploy_keys.get.operationId": "getV3ProjectsIdDeployKeys",
	"paths./v3/projects/{id}/deploy_keys.get.parameters.length": 1,
	"paths./v3/projects/{id}/deploy_keys.get.parameters[0].description": "The ID of the project",
	"paths./v3/projects/{id}/deploy_keys.get.parameters[0].in": "path",
	"paths./v3/projects/{id}/deploy_keys.get.parameters[0].name": "id",
	"paths./v3/projects/{id}/deploy_keys.get.parameters[0].required": true,
	"paths./v3/projects/{id}/deploy_keys.get.parameters[0].type": "string",
	"paths./v3/projects/{id}/deploy_keys.get.produces.length": 1,
	"paths./v3/projects/{id}/deploy_keys.get.produces[0]": "application/json",
	"paths./v3/projects/{id}/deploy_keys.get.responses.200.description": "Get a specific project's deploy keys",
	"paths./v3/projects/{id}/deploy_keys.get.responses.200.schema.$ref": "#/definitions/SSHKey",
	"paths./v3/projects/{id}/deploy_keys.get.summary": "Get a specific project's deploy keys",
	"paths./v3/projects/{id}/deploy_keys.get.tags.length": 1,
	"paths./v3/projects/{id}/deploy_keys.get.tags[0]": "projects",
	"paths./v3/projects/{id}/deploy_keys.post.consumes.length": 1,
	"paths./v3/projects/{id}/deploy_keys.post.consumes[0]": "application/json",
	"paths./v3/projects/{id}/deploy_keys.post.description": "Add new deploy key to currently authenticated user",
	"paths./v3/projects/{id}/deploy_keys.post.operationId": "postV3ProjectsIdDeployKeys",
	"paths./v3/projects/{id}/deploy_keys.post.parameters.length": 3,
	"paths./v3/projects/{id}/deploy_keys.post.parameters[0].description": "The ID of the project",
	"paths./v3/projects/{id}/deploy_keys.post.parameters[0].in": "path",
	"paths./v3/projects/{id}/deploy_keys.post.parameters[0].name": "id",
	"paths./v3/projects/{id}/deploy_keys.post.parameters[0].required": true,
	"paths./v3/projects/{id}/deploy_keys.post.parameters[0].type": "string",
	"paths./v3/projects/{id}/deploy_keys.post.parameters[1].description": "The new deploy key",
	"paths./v3/projects/{id}/deploy_keys.post.parameters[1].in": "formData",
	"paths./v3/projects/{id}/deploy_keys.post.parameters[1].name": "key",
	"paths./v3/projects/{id}/deploy_keys.post.parameters[1].required": true,
	"paths./v3/projects/{id}/deploy_keys.post.parameters[1].type": "string",
	"paths./v3/projects/{id}/deploy_keys.post.parameters[2].description": "The name of the deploy key",
	"paths./v3/projects/{id}/deploy_keys.post.parameters[2].in": "formData",
	"paths./v3/projects/{id}/deploy_keys.post.parameters[2].name": "title",
	"paths./v3/projects/{id}/deploy_keys.post.parameters[2].required": true,
	"paths./v3/projects/{id}/deploy_keys.post.parameters[2].type": "string",
	"paths./v3/projects/{id}/deploy_keys.post.produces.length": 1,
	"paths./v3/projects/{id}/deploy_keys.post.produces[0]": "application/json",
	"paths./v3/projects/{id}/deploy_keys.post.responses.201.description": "Add new deploy key to currently authenticated user",
	"paths./v3/projects/{id}/deploy_keys.post.responses.201.schema.$ref": "#/definitions/SSHKey",
	"paths./v3/projects/{id}/deploy_keys.post.summary": "Add new deploy key to currently authenticated user",
	"paths./v3/projects/{id}/deploy_keys.post.tags.length": 1,
	"paths./v3/projects/{id}/deploy_keys.post.tags[0]": "projects",
	"paths./v3/projects/{id}/deploy_keys/{key_id}.delete.description": "Delete deploy key for a project",
	"paths./v3/projects/{id}/deploy_keys/{key_id}.delete.operationId": "deleteV3ProjectsIdDeployKeysKeyId",
	"paths./v3/projects/{id}/deploy_keys/{key_id}.delete.parameters.length": 2,
	"paths./v3/projects/{id}/deploy_keys/{key_id}.delete.parameters[0].description": "The ID of the project",
	"paths./v3/projects/{id}/deploy_keys/{key_id}.delete.parameters[0].in": "path",
	"paths./v3/projects/{id}/deploy_keys/{key_id}.delete.parameters[0].name": "id",
	"paths./v3/projects/{id}/deploy_keys/{key_id}.delete.parameters[0].required": true,
	"paths./v3/projects/{id}/deploy_keys/{key_id}.delete.parameters[0].type": "string",
	"paths./v3/projects/{id}/deploy_keys/{key_id}.delete.parameters[1].description": "The ID of the deploy key",
	"paths./v3/projects/{id}/deploy_keys/{key_id}.delete.parameters[1].format": "int32",
	"paths./v3/projects/{id}/deploy_keys/{key_id}.delete.parameters[1].in": "path",
	"paths./v3/projects/{id}/deploy_keys/{key_id}.delete.parameters[1].name": "key_id",
	"paths./v3/projects/{id}/deploy_keys/{key_id}.delete.parameters[1].required": true,
	"paths./v3/projects/{id}/deploy_keys/{key_id}.delete.parameters[1].type": "integer",
	"paths./v3/projects/{id}/deploy_keys/{key_id}.delete.produces.length": 1,
	"paths./v3/projects/{id}/deploy_keys/{key_id}.delete.produces[0]": "application/json",
	"paths./v3/projects/{id}/deploy_keys/{key_id}.delete.responses.200.description": "Delete deploy key for a project",
	"paths./v3/projects/{id}/deploy_keys/{key_id}.delete.responses.200.schema.$ref": "#/definitions/SSHKey",
	"paths./v3/projects/{id}/deploy_keys/{key_id}.delete.summary": "Delete deploy key for a project",
	"paths./v3/projects/{id}/deploy_keys/{key_id}.delete.tags.length": 1,
	"paths./v3/projects/{id}/deploy_keys/{key_id}.delete.tags[0]": "projects",
	"paths./v3/projects/{id}/deploy_keys/{key_id}.get.description": "Get single deploy key",
	"paths./v3/projects/{id}/deploy_keys/{key_id}.get.operationId": "getV3ProjectsIdDeployKeysKeyId",
	"paths./v3/projects/{id}/deploy_keys/{key_id}.get.parameters.length": 2,
	"paths./v3/projects/{id}/deploy_keys/{key_id}.get.parameters[0].description": "The ID of the project",
	"paths./v3/projects/{id}/deploy_keys/{key_id}.get.parameters[0].in": "path",
	"paths./v3/projects/{id}/deploy_keys/{key_id}.get.parameters[0].name": "id",
	"paths./v3/projects/{id}/deploy_keys/{key_id}.get.parameters[0].required": true,
	"paths./v3/projects/{id}/deploy_keys/{key_id}.get.parameters[0].type": "string",
	"paths./v3/projects/{id}/deploy_keys/{key_id}.get.parameters[1].description": "The ID of the deploy key",
	"paths./v3/projects/{id}/deploy_keys/{key_id}.get.parameters[1].format": "int32",
	"paths./v3/projects/{id}/deploy_keys/{key_id}.get.parameters[1].in": "path",
	"paths./v3/projects/{id}/deploy_keys/{key_id}.get.parameters[1].name": "key_id",
	"paths./v3/projects/{id}/deploy_keys/{key_id}.get.parameters[1].required": true,
	"paths./v3/projects/{id}/deploy_keys/{key_id}.get.parameters[1].type": "integer",
	"paths./v3/projects/{id}/deploy_keys/{key_id}.get.produces.length": 1,
	"paths./v3/projects/{id}/deploy_keys/{key_id}.get.produces[0]": "application/json",
	"paths./v3/projects/{id}/deploy_keys/{key_id}.get.responses.200.description": "Get single deploy key",
	"paths./v3/projects/{id}/deploy_keys/{key_id}.get.responses.200.schema.$ref": "#/definitions/SSHKey",
	"paths./v3/projects/{id}/deploy_keys/{key_id}.get.summary": "Get single deploy key",
	"paths./v3/projects/{id}/deploy_keys/{key_id}.get.tags.length": 1,
	"paths./v3/projects/{id}/deploy_keys/{key_id}.get.tags[0]": "projects",
	"paths./v3/projects/{id}/deploy_keys/{key_id}/disable.delete.description": "This feature was added in GitLab 8.11",
	"paths./v3/projects/{id}/deploy_keys/{key_id}/disable.delete.operationId": "deleteV3ProjectsIdDeployKeysKeyIdDisable",
	"paths./v3/projects/{id}/deploy_keys/{key_id}/disable.delete.parameters.length": 2,
	"paths./v3/projects/{id}/deploy_keys/{key_id}/disable.delete.parameters[0].description": "The ID of the project",
	"paths./v3/projects/{id}/deploy_keys/{key_id}/disable.delete.parameters[0].in": "path",
	"paths./v3/projects/{id}/deploy_keys/{key_id}/disable.delete.parameters[0].name": "id",
	"paths./v3/projects/{id}/deploy_keys/{key_id}/disable.delete.parameters[0].required": true,
	"paths./v3/projects/{id}/deploy_keys/{key_id}/disable.delete.parameters[0].type": "string",
	"paths./v3/projects/{id}/deploy_keys/{key_id}/disable.delete.parameters[1].description": "The ID of the deploy key",
	"paths./v3/projects/{id}/deploy_keys/{key_id}/disable.delete.parameters[1].format": "int32",
	"paths./v3/projects/{id}/deploy_keys/{key_id}/disable.delete.parameters[1].in": "path",
	"paths./v3/projects/{id}/deploy_keys/{key_id}/disable.delete.parameters[1].name": "key_id",
	"paths./v3/projects/{id}/deploy_keys/{key_id}/disable.delete.parameters[1].required": true,
	"paths./v3/projects/{id}/deploy_keys/{key_id}/disable.delete.parameters[1].type": "integer",
	"paths./v3/projects/{id}/deploy_keys/{key_id}/disable.delete.produces.length": 1,
	"paths./v3/projects/{id}/deploy_keys/{key_id}/disable.delete.produces[0]": "application/json",
	"paths./v3/projects/{id}/deploy_keys/{key_id}/disable.delete.responses.200.description": "Disable a deploy key for a project",
	"paths./v3/projects/{id}/deploy_keys/{key_id}/disable.delete.responses.200.schema.$ref": "#/definitions/SSHKey",
	"paths./v3/projects/{id}/deploy_keys/{key_id}/disable.delete.summary": "Disable a deploy key for a project",
	"paths./v3/projects/{id}/deploy_keys/{key_id}/disable.delete.tags.length": 1,
	"paths./v3/projects/{id}/deploy_keys/{key_id}/disable.delete.tags[0]": "projects",
	"paths./v3/projects/{id}/deploy_keys/{key_id}/enable.post.consumes.length": 1,
	"paths./v3/projects/{id}/deploy_keys/{key_id}/enable.post.consumes[0]": "application/json",
	"paths./v3/projects/{id}/deploy_keys/{key_id}/enable.post.description": "This feature was added in GitLab 8.11",
	"paths./v3/projects/{id}/deploy_keys/{key_id}/enable.post.operationId": "postV3ProjectsIdDeployKeysKeyIdEnable",
	"paths./v3/projects/{id}/deploy_keys/{key_id}/enable.post.parameters.length": 2,
	"paths./v3/projects/{id}/deploy_keys/{key_id}/enable.post.parameters[0].description": "The ID of the project",
	"paths./v3/projects/{id}/deploy_keys/{key_id}/enable.post.parameters[0].in": "path",
	"paths./v3/projects/{id}/deploy_keys/{key_id}/enable.post.parameters[0].name": "id",
	"paths./v3/projects/{id}/deploy_keys/{key_id}/enable.post.parameters[0].required": true,
	"paths./v3/projects/{id}/deploy_keys/{key_id}/enable.post.parameters[0].type": "string",
	"paths./v3/projects/{id}/deploy_keys/{key_id}/enable.post.parameters[1].description": "The ID of the deploy key",
	"paths./v3/projects/{id}/deploy_keys/{key_id}/enable.post.parameters[1].format": "int32",
	"paths./v3/projects/{id}/deploy_keys/{key_id}/enable.post.parameters[1].in": "path",
	"paths./v3/projects/{id}/deploy_keys/{key_id}/enable.post.parameters[1].name": "key_id",
	"paths./v3/projects/{id}/deploy_keys/{key_id}/enable.post.parameters[1].required": true,
	"paths./v3/projects/{id}/deploy_keys/{key_id}/enable.post.parameters[1].type": "integer",
	"paths./v3/projects/{id}/deploy_keys/{key_id}/enable.post.produces.length": 1,
	"paths./v3/projects/{id}/deploy_keys/{key_id}/enable.post.produces[0]": "application/json",
	"paths./v3/projects/{id}/deploy_keys/{key_id}/enable.post.responses.201.description": "Enable a deploy key for a project",
	"paths./v3/projects/{id}/deploy_keys/{key_id}/enable.post.responses.201.schema.$ref": "#/definitions/SSHKey",
	"paths./v3/projects/{id}/deploy_keys/{key_id}/enable.post.summary": "Enable a deploy key for a project",
	"paths./v3/projects/{id}/deploy_keys/{key_id}/enable.post.tags.length": 1,
	"paths./v3/projects/{id}/deploy_keys/{key_id}/enable.post.tags[0]": "projects",
	"paths./v3/projects/{id}/deployments.get.description": "This feature was introduced in GitLab 8.11.",
	"paths./v3/projects/{id}/deployments.get.operationId": "getV3ProjectsIdDeployments",
	"paths./v3/projects/{id}/deployments.get.parameters.length": 3,
	"paths./v3/projects/{id}/deployments.get.parameters[0].description": "The project ID",
	"paths./v3/projects/{id}/deployments.get.parameters[0].in": "path",
	"paths./v3/projects/{id}/deployments.get.parameters[0].name": "id",
	"paths./v3/projects/{id}/deployments.get.parameters[0].required": true,
	"paths./v3/projects/{id}/deployments.get.parameters[0].type": "string",
	"paths./v3/projects/{id}/deployments.get.parameters[1].description": "Current page number",
	"paths./v3/projects/{id}/deployments.get.parameters[1].format": "int32",
	"paths./v3/projects/{id}/deployments.get.parameters[1].in": "query",
	"paths./v3/projects/{id}/deployments.get.parameters[1].name": "page",
	"paths./v3/projects/{id}/deployments.get.parameters[1].required": false,
	"paths./v3/projects/{id}/deployments.get.parameters[1].type": "integer",
	"paths./v3/projects/{id}/deployments.get.parameters[2].description": "Number of items per page",
	"paths./v3/projects/{id}/deployments.get.parameters[2].format": "int32",
	"paths./v3/projects/{id}/deployments.get.parameters[2].in": "query",
	"paths./v3/projects/{id}/deployments.get.parameters[2].name": "per_page",
	"paths./v3/projects/{id}/deployments.get.parameters[2].required": false,
	"paths./v3/projects/{id}/deployments.get.parameters[2].type": "integer",
	"paths./v3/projects/{id}/deployments.get.produces.length": 1,
	"paths./v3/projects/{id}/deployments.get.produces[0]": "application/json",
	"paths./v3/projects/{id}/deployments.get.responses.200.description": "Get all deployments of the project",
	"paths./v3/projects/{id}/deployments.get.responses.200.schema.$ref": "#/definitions/Deployment",
	"paths./v3/projects/{id}/deployments.get.summary": "Get all deployments of the project",
	"paths./v3/projects/{id}/deployments.get.tags.length": 1,
	"paths./v3/projects/{id}/deployments.get.tags[0]": "projects",
	"paths./v3/projects/{id}/deployments/{deployment_id}.get.description": "This feature was introduced in GitLab 8.11.",
	"paths./v3/projects/{id}/deployments/{deployment_id}.get.operationId": "getV3ProjectsIdDeploymentsDeploymentId",
	"paths./v3/projects/{id}/deployments/{deployment_id}.get.parameters.length": 2,
	"paths./v3/projects/{id}/deployments/{deployment_id}.get.parameters[0].description": "The project ID",
	"paths./v3/projects/{id}/deployments/{deployment_id}.get.parameters[0].in": "path",
	"paths./v3/projects/{id}/deployments/{deployment_id}.get.parameters[0].name": "id",
	"paths./v3/projects/{id}/deployments/{deployment_id}.get.parameters[0].required": true,
	"paths./v3/projects/{id}/deployments/{deployment_id}.get.parameters[0].type": "string",
	"paths./v3/projects/{id}/deployments/{deployment_id}.get.parameters[1].description": "The deployment ID",
	"paths./v3/projects/{id}/deployments/{deployment_id}.get.parameters[1].format": "int32",
	"paths./v3/projects/{id}/deployments/{deployment_id}.get.parameters[1].in": "path",
	"paths./v3/projects/{id}/deployments/{deployment_id}.get.parameters[1].name": "deployment_id",
	"paths./v3/projects/{id}/deployments/{deployment_id}.get.parameters[1].required": true,
	"paths./v3/projects/{id}/deployments/{deployment_id}.get.parameters[1].type": "integer",
	"paths./v3/projects/{id}/deployments/{deployment_id}.get.produces.length": 1,
	"paths./v3/projects/{id}/deployments/{deployment_id}.get.produces[0]": "application/json",
	"paths./v3/projects/{id}/deployments/{deployment_id}.get.responses.200.description": "Gets a specific deployment",
	"paths./v3/projects/{id}/deployments/{deployment_id}.get.responses.200.schema.$ref": "#/definitions/Deployment",
	"paths./v3/projects/{id}/deployments/{deployment_id}.get.summary": "Gets a specific deployment",
	"paths./v3/projects/{id}/deployments/{deployment_id}.get.tags.length": 1,
	"paths./v3/projects/{id}/deployments/{deployment_id}.get.tags[0]": "projects",
	"paths./v3/projects/{id}/environments.get.description": "This feature was introduced in GitLab 8.11.",
	"paths./v3/projects/{id}/environments.get.operationId": "getV3ProjectsIdEnvironments",
	"paths./v3/projects/{id}/environments.get.parameters.length": 3,
	"paths./v3/projects/{id}/environments.get.parameters[0].description": "The project ID",
	"paths./v3/projects/{id}/environments.get.parameters[0].in": "path",
	"paths./v3/projects/{id}/environments.get.parameters[0].name": "id",
	"paths./v3/projects/{id}/environments.get.parameters[0].required": true,
	"paths./v3/projects/{id}/environments.get.parameters[0].type": "string",
	"paths./v3/projects/{id}/environments.get.parameters[1].description": "Current page number",
	"paths./v3/projects/{id}/environments.get.parameters[1].format": "int32",
	"paths./v3/projects/{id}/environments.get.parameters[1].in": "query",
	"paths./v3/projects/{id}/environments.get.parameters[1].name": "page",
	"paths./v3/projects/{id}/environments.get.parameters[1].required": false,
	"paths./v3/projects/{id}/environments.get.parameters[1].type": "integer",
	"paths./v3/projects/{id}/environments.get.parameters[2].description": "Number of items per page",
	"paths./v3/projects/{id}/environments.get.parameters[2].format": "int32",
	"paths./v3/projects/{id}/environments.get.parameters[2].in": "query",
	"paths./v3/projects/{id}/environments.get.parameters[2].name": "per_page",
	"paths./v3/projects/{id}/environments.get.parameters[2].required": false,
	"paths./v3/projects/{id}/environments.get.parameters[2].type": "integer",
	"paths./v3/projects/{id}/environments.get.produces.length": 1,
	"paths./v3/projects/{id}/environments.get.produces[0]": "application/json",
	"paths./v3/projects/{id}/environments.get.responses.200.description": "Get all environments of the project",
	"paths./v3/projects/{id}/environments.get.responses.200.schema.$ref": "#/definitions/Environment",
	"paths./v3/projects/{id}/environments.get.summary": "Get all environments of the project",
	"paths./v3/projects/{id}/environments.get.tags.length": 1,
	"paths./v3/projects/{id}/environments.get.tags[0]": "projects",
	"paths./v3/projects/{id}/environments.post.consumes.length": 1,
	"paths./v3/projects/{id}/environments.post.consumes[0]": "application/json",
	"paths./v3/projects/{id}/environments.post.description": "This feature was introduced in GitLab 8.11.",
	"paths./v3/projects/{id}/environments.post.operationId": "postV3ProjectsIdEnvironments",
	"paths./v3/projects/{id}/environments.post.parameters.length": 4,
	"paths./v3/projects/{id}/environments.post.parameters[0].description": "The project ID",
	"paths./v3/projects/{id}/environments.post.parameters[0].in": "path",
	"paths./v3/projects/{id}/environments.post.parameters[0].name": "id",
	"paths./v3/projects/{id}/environments.post.parameters[0].required": true,
	"paths./v3/projects/{id}/environments.post.parameters[0].type": "string",
	"paths./v3/projects/{id}/environments.post.parameters[1].description": "The name of the environment to be created",
	"paths./v3/projects/{id}/environments.post.parameters[1].in": "formData",
	"paths./v3/projects/{id}/environments.post.parameters[1].name": "name",
	"paths./v3/projects/{id}/environments.post.parameters[1].required": true,
	"paths./v3/projects/{id}/environments.post.parameters[1].type": "string",
	"paths./v3/projects/{id}/environments.post.parameters[2].description": "URL on which this deployment is viewable",
	"paths./v3/projects/{id}/environments.post.parameters[2].in": "formData",
	"paths./v3/projects/{id}/environments.post.parameters[2].name": "external_url",
	"paths./v3/projects/{id}/environments.post.parameters[2].required": false,
	"paths./v3/projects/{id}/environments.post.parameters[2].type": "string",
	"paths./v3/projects/{id}/environments.post.parameters[3].in": "formData",
	"paths./v3/projects/{id}/environments.post.parameters[3].name": "slug",
	"paths./v3/projects/{id}/environments.post.parameters[3].required": false,
	"paths./v3/projects/{id}/environments.post.parameters[3].type": "string",
	"paths./v3/projects/{id}/environments.post.produces.length": 1,
	"paths./v3/projects/{id}/environments.post.produces[0]": "application/json",
	"paths./v3/projects/{id}/environments.post.responses.201.description": "Creates a new environment",
	"paths./v3/projects/{id}/environments.post.responses.201.schema.$ref": "#/definitions/Environment",
	"paths./v3/projects/{id}/environments.post.summary": "Creates a new environment",
	"paths./v3/projects/{id}/environments.post.tags.length": 1,
	"paths./v3/projects/{id}/environments.post.tags[0]": "projects",
	"paths./v3/projects/{id}/environments/{environment_id}.delete.description": "This feature was introduced in GitLab 8.11.",
	"paths./v3/projects/{id}/environments/{environment_id}.delete.operationId": "deleteV3ProjectsIdEnvironmentsEnvironmentId",
	"paths./v3/projects/{id}/environments/{environment_id}.delete.parameters.length": 2,
	"paths./v3/projects/{id}/environments/{environment_id}.delete.parameters[0].description": "The project ID",
	"paths./v3/projects/{id}/environments/{environment_id}.delete.parameters[0].in": "path",
	"paths./v3/projects/{id}/environments/{environment_id}.delete.parameters[0].name": "id",
	"paths./v3/projects/{id}/environments/{environment_id}.delete.parameters[0].required": true,
	"paths./v3/projects/{id}/environments/{environment_id}.delete.parameters[0].type": "string",
	"paths./v3/projects/{id}/environments/{environment_id}.delete.parameters[1].description": "The environment ID",
	"paths./v3/projects/{id}/environments/{environment_id}.delete.parameters[1].format": "int32",
	"paths./v3/projects/{id}/environments/{environment_id}.delete.parameters[1].in": "path",
	"paths./v3/projects/{id}/environments/{environment_id}.delete.parameters[1].name": "environment_id",
	"paths./v3/projects/{id}/environments/{environment_id}.delete.parameters[1].required": true,
	"paths./v3/projects/{id}/environments/{environment_id}.delete.parameters[1].type": "integer",
	"paths./v3/projects/{id}/environments/{environment_id}.delete.produces.length": 1,
	"paths./v3/projects/{id}/environments/{environment_id}.delete.produces[0]": "application/json",
	"paths./v3/projects/{id}/environments/{environment_id}.delete.responses.200.description": "Deletes an existing environment",
	"paths./v3/projects/{id}/environments/{environment_id}.delete.responses.200.schema.$ref": "#/definitions/Environment",
	"paths./v3/projects/{id}/environments/{environment_id}.delete.summary": "Deletes an existing environment",
	"paths./v3/projects/{id}/environments/{environment_id}.delete.tags.length": 1,
	"paths./v3/projects/{id}/environments/{environment_id}.delete.tags[0]": "projects",
	"paths./v3/projects/{id}/environments/{environment_id}.put.consumes.length": 1,
	"paths./v3/projects/{id}/environments/{environment_id}.put.consumes[0]": "application/json",
	"paths./v3/projects/{id}/environments/{environment_id}.put.description": "This feature was introduced in GitLab 8.11.",
	"paths./v3/projects/{id}/environments/{environment_id}.put.operationId": "putV3ProjectsIdEnvironmentsEnvironmentId",
	"paths./v3/projects/{id}/environments/{environment_id}.put.parameters.length": 5,
	"paths./v3/projects/{id}/environments/{environment_id}.put.parameters[0].description": "The project ID",
	"paths./v3/projects/{id}/environments/{environment_id}.put.parameters[0].in": "path",
	"paths./v3/projects/{id}/environments/{environment_id}.put.parameters[0].name": "id",
	"paths./v3/projects/{id}/environments/{environment_id}.put.parameters[0].required": true,
	"paths./v3/projects/{id}/environments/{environment_id}.put.parameters[0].type": "string",
	"paths./v3/projects/{id}/environments/{environment_id}.put.parameters[1].description": "The environment ID",
	"paths./v3/projects/{id}/environments/{environment_id}.put.parameters[1].format": "int32",
	"paths./v3/projects/{id}/environments/{environment_id}.put.parameters[1].in": "path",
	"paths./v3/projects/{id}/environments/{environment_id}.put.parameters[1].name": "environment_id",
	"paths./v3/projects/{id}/environments/{environment_id}.put.parameters[1].required": true,
	"paths./v3/projects/{id}/environments/{environment_id}.put.parameters[1].type": "integer",
	"paths./v3/projects/{id}/environments/{environment_id}.put.parameters[2].description": "The new environment name",
	"paths./v3/projects/{id}/environments/{environment_id}.put.parameters[2].in": "formData",
	"paths./v3/projects/{id}/environments/{environment_id}.put.parameters[2].name": "name",
	"paths./v3/projects/{id}/environments/{environment_id}.put.parameters[2].required": false,
	"paths./v3/projects/{id}/environments/{environment_id}.put.parameters[2].type": "string",
	"paths./v3/projects/{id}/environments/{environment_id}.put.parameters[3].description": "The new URL on which this deployment is viewable",
	"paths./v3/projects/{id}/environments/{environment_id}.put.parameters[3].in": "formData",
	"paths./v3/projects/{id}/environments/{environment_id}.put.parameters[3].name": "external_url",
	"paths./v3/projects/{id}/environments/{environment_id}.put.parameters[3].required": false,
	"paths./v3/projects/{id}/environments/{environment_id}.put.parameters[3].type": "string",
	"paths./v3/projects/{id}/environments/{environment_id}.put.parameters[4].in": "formData",
	"paths./v3/projects/{id}/environments/{environment_id}.put.parameters[4].name": "slug",
	"paths./v3/projects/{id}/environments/{environment_id}.put.parameters[4].required": false,
	"paths./v3/projects/{id}/environments/{environment_id}.put.parameters[4].type": "string",
	"paths./v3/projects/{id}/environments/{environment_id}.put.produces.length": 1,
	"paths./v3/projects/{id}/environments/{environment_id}.put.produces[0]": "application/json",
	"paths./v3/projects/{id}/environments/{environment_id}.put.responses.200.description": "Updates an existing environment",
	"paths./v3/projects/{id}/environments/{environment_id}.put.responses.200.schema.$ref": "#/definitions/Environment",
	"paths./v3/projects/{id}/environments/{environment_id}.put.summary": "Updates an existing environment",
	"paths./v3/projects/{id}/environments/{environment_id}.put.tags.length": 1,
	"paths./v3/projects/{id}/environments/{environment_id}.put.tags[0]": "projects",
	"paths./v3/projects/{id}/events.get.description": "Get events for a single project",
	"paths./v3/projects/{id}/events.get.operationId": "getV3ProjectsIdEvents",
	"paths./v3/projects/{id}/events.get.parameters.length": 3,
	"paths./v3/projects/{id}/events.get.parameters[0].description": "The ID of a project",
	"paths./v3/projects/{id}/events.get.parameters[0].in": "path",
	"paths./v3/projects/{id}/events.get.parameters[0].name": "id",
	"paths./v3/projects/{id}/events.get.parameters[0].required": true,
	"paths./v3/projects/{id}/events.get.parameters[0].type": "string",
	"paths./v3/projects/{id}/events.get.parameters[1].description": "Current page number",
	"paths./v3/projects/{id}/events.get.parameters[1].format": "int32",
	"paths./v3/projects/{id}/events.get.parameters[1].in": "query",
	"paths./v3/projects/{id}/events.get.parameters[1].name": "page",
	"paths./v3/projects/{id}/events.get.parameters[1].required": false,
	"paths./v3/projects/{id}/events.get.parameters[1].type": "integer",
	"paths./v3/projects/{id}/events.get.parameters[2].description": "Number of items per page",
	"paths./v3/projects/{id}/events.get.parameters[2].format": "int32",
	"paths./v3/projects/{id}/events.get.parameters[2].in": "query",
	"paths./v3/projects/{id}/events.get.parameters[2].name": "per_page",
	"paths./v3/projects/{id}/events.get.parameters[2].required": false,
	"paths./v3/projects/{id}/events.get.parameters[2].type": "integer",
	"paths./v3/projects/{id}/events.get.produces.length": 1,
	"paths./v3/projects/{id}/events.get.produces[0]": "application/json",
	"paths./v3/projects/{id}/events.get.responses.200.description": "Get events for a single project",
	"paths./v3/projects/{id}/events.get.responses.200.schema.$ref": "#/definitions/Event",
	"paths./v3/projects/{id}/events.get.summary": "Get events for a single project",
	"paths./v3/projects/{id}/events.get.tags.length": 1,
	"paths./v3/projects/{id}/events.get.tags[0]": "projects",
	"paths./v3/projects/{id}/fork.delete.description": "Remove a forked_from relationship",
	"paths./v3/projects/{id}/fork.delete.operationId": "deleteV3ProjectsIdFork",
	"paths./v3/projects/{id}/fork.delete.parameters.length": 1,
	"paths./v3/projects/{id}/fork.delete.parameters[0].description": "The ID of a project",
	"paths./v3/projects/{id}/fork.delete.parameters[0].in": "path",
	"paths./v3/projects/{id}/fork.delete.parameters[0].name": "id",
	"paths./v3/projects/{id}/fork.delete.parameters[0].required": true,
	"paths./v3/projects/{id}/fork.delete.parameters[0].type": "string",
	"paths./v3/projects/{id}/fork.delete.produces.length": 1,
	"paths./v3/projects/{id}/fork.delete.produces[0]": "application/json",
	"paths./v3/projects/{id}/fork.delete.responses.204.description": "Remove a forked_from relationship",
	"paths./v3/projects/{id}/fork.delete.summary": "Remove a forked_from relationship",
	"paths./v3/projects/{id}/fork.delete.tags.length": 1,
	"paths./v3/projects/{id}/fork.delete.tags[0]": "projects",
	"paths./v3/projects/{id}/fork/{forked_from_id}.post.consumes.length": 1,
	"paths./v3/projects/{id}/fork/{forked_from_id}.post.consumes[0]": "application/json",
	"paths./v3/projects/{id}/fork/{forked_from_id}.post.description": "Mark this project as forked from another",
	"paths./v3/projects/{id}/fork/{forked_from_id}.post.operationId": "postV3ProjectsIdForkForkedFromId",
	"paths./v3/projects/{id}/fork/{forked_from_id}.post.parameters.length": 2,
	"paths./v3/projects/{id}/fork/{forked_from_id}.post.parameters[0].description": "The ID of a project",
	"paths./v3/projects/{id}/fork/{forked_from_id}.post.parameters[0].in": "path",
	"paths./v3/projects/{id}/fork/{forked_from_id}.post.parameters[0].name": "id",
	"paths./v3/projects/{id}/fork/{forked_from_id}.post.parameters[0].required": true,
	"paths./v3/projects/{id}/fork/{forked_from_id}.post.parameters[0].type": "string",
	"paths./v3/projects/{id}/fork/{forked_from_id}.post.parameters[1].description": "The ID of the project it was forked from",
	"paths./v3/projects/{id}/fork/{forked_from_id}.post.parameters[1].in": "path",
	"paths./v3/projects/{id}/fork/{forked_from_id}.post.parameters[1].name": "forked_from_id",
	"paths./v3/projects/{id}/fork/{forked_from_id}.post.parameters[1].required": true,
	"paths./v3/projects/{id}/fork/{forked_from_id}.post.parameters[1].type": "string",
	"paths./v3/projects/{id}/fork/{forked_from_id}.post.produces.length": 1,
	"paths./v3/projects/{id}/fork/{forked_from_id}.post.produces[0]": "application/json",
	"paths./v3/projects/{id}/fork/{forked_from_id}.post.responses.201.description": "Mark this project as forked from another",
	"paths./v3/projects/{id}/fork/{forked_from_id}.post.summary": "Mark this project as forked from another",
	"paths./v3/projects/{id}/fork/{forked_from_id}.post.tags.length": 1,
	"paths./v3/projects/{id}/fork/{forked_from_id}.post.tags[0]": "projects",
	"paths./v3/projects/{id}/hooks.get.description": "Get project hooks",
	"paths./v3/projects/{id}/hooks.get.operationId": "getV3ProjectsIdHooks",
	"paths./v3/projects/{id}/hooks.get.parameters.length": 3,
	"paths./v3/projects/{id}/hooks.get.parameters[0].description": "The ID of a project",
	"paths./v3/projects/{id}/hooks.get.parameters[0].in": "path",
	"paths./v3/projects/{id}/hooks.get.parameters[0].name": "id",
	"paths./v3/projects/{id}/hooks.get.parameters[0].required": true,
	"paths./v3/projects/{id}/hooks.get.parameters[0].type": "string",
	"paths./v3/projects/{id}/hooks.get.parameters[1].description": "Current page number",
	"paths./v3/projects/{id}/hooks.get.parameters[1].format": "int32",
	"paths./v3/projects/{id}/hooks.get.parameters[1].in": "query",
	"paths./v3/projects/{id}/hooks.get.parameters[1].name": "page",
	"paths./v3/projects/{id}/hooks.get.parameters[1].required": false,
	"paths./v3/projects/{id}/hooks.get.parameters[1].type": "integer",
	"paths./v3/projects/{id}/hooks.get.parameters[2].description": "Number of items per page",
	"paths./v3/projects/{id}/hooks.get.parameters[2].format": "int32",
	"paths./v3/projects/{id}/hooks.get.parameters[2].in": "query",
	"paths./v3/projects/{id}/hooks.get.parameters[2].name": "per_page",
	"paths./v3/projects/{id}/hooks.get.parameters[2].required": false,
	"paths./v3/projects/{id}/hooks.get.parameters[2].type": "integer",
	"paths./v3/projects/{id}/hooks.get.produces.length": 1,
	"paths./v3/projects/{id}/hooks.get.produces[0]": "application/json",
	"paths./v3/projects/{id}/hooks.get.responses.200.description": "Get project hooks",
	"paths./v3/projects/{id}/hooks.get.responses.200.schema.$ref": "#/definitions/ProjectHook",
	"paths./v3/projects/{id}/hooks.get.summary": "Get project hooks",
	"paths./v3/projects/{id}/hooks.get.tags.length": 1,
	"paths./v3/projects/{id}/hooks.get.tags[0]": "projects",
	"paths./v3/projects/{id}/hooks.post.consumes.length": 1,
	"paths./v3/projects/{id}/hooks.post.consumes[0]": "application/json",
	"paths./v3/projects/{id}/hooks.post.description": "Add hook to project",
	"paths./v3/projects/{id}/hooks.post.operationId": "postV3ProjectsIdHooks",
	"paths./v3/projects/{id}/hooks.post.parameters.length": 12,
	"paths./v3/projects/{id}/hooks.post.parameters[0].description": "The ID of a project",
	"paths./v3/projects/{id}/hooks.post.parameters[0].in": "path",
	"paths./v3/projects/{id}/hooks.post.parameters[0].name": "id",
	"paths./v3/projects/{id}/hooks.post.parameters[0].required": true,
	"paths./v3/projects/{id}/hooks.post.parameters[0].type": "string",
	"paths./v3/projects/{id}/hooks.post.parameters[10].description": "Do SSL verification when triggering the hook",
	"paths./v3/projects/{id}/hooks.post.parameters[10].in": "formData",
	"paths./v3/projects/{id}/hooks.post.parameters[10].name": "enable_ssl_verification",
	"paths./v3/projects/{id}/hooks.post.parameters[10].required": false,
	"paths./v3/projects/{id}/hooks.post.parameters[10].type": "boolean",
	"paths./v3/projects/{id}/hooks.post.parameters[11].description": "Secret token to validate received payloads; this will not be returned in the response",
	"paths./v3/projects/{id}/hooks.post.parameters[11].in": "formData",
	"paths./v3/projects/{id}/hooks.post.parameters[11].name": "token",
	"paths./v3/projects/{id}/hooks.post.parameters[11].required": false,
	"paths./v3/projects/{id}/hooks.post.parameters[11].type": "string",
	"paths./v3/projects/{id}/hooks.post.parameters[1].description": "The URL to send the request to",
	"paths./v3/projects/{id}/hooks.post.parameters[1].in": "formData",
	"paths./v3/projects/{id}/hooks.post.parameters[1].name": "url",
	"paths./v3/projects/{id}/hooks.post.parameters[1].required": true,
	"paths./v3/projects/{id}/hooks.post.parameters[1].type": "string",
	"paths./v3/projects/{id}/hooks.post.parameters[2].description": "Trigger hook on push events",
	"paths./v3/projects/{id}/hooks.post.parameters[2].in": "formData",
	"paths./v3/projects/{id}/hooks.post.parameters[2].name": "push_events",
	"paths./v3/projects/{id}/hooks.post.parameters[2].required": false,
	"paths./v3/projects/{id}/hooks.post.parameters[2].type": "boolean",
	"paths./v3/projects/{id}/hooks.post.parameters[3].description": "Trigger hook on issues events",
	"paths./v3/projects/{id}/hooks.post.parameters[3].in": "formData",
	"paths./v3/projects/{id}/hooks.post.parameters[3].name": "issues_events",
	"paths./v3/projects/{id}/hooks.post.parameters[3].required": false,
	"paths./v3/projects/{id}/hooks.post.parameters[3].type": "boolean",
	"paths./v3/projects/{id}/hooks.post.parameters[4].description": "Trigger hook on merge request events",
	"paths./v3/projects/{id}/hooks.post.parameters[4].in": "formData",
	"paths./v3/projects/{id}/hooks.post.parameters[4].name": "merge_requests_events",
	"paths./v3/projects/{id}/hooks.post.parameters[4].required": false,
	"paths./v3/projects/{id}/hooks.post.parameters[4].type": "boolean",
	"paths./v3/projects/{id}/hooks.post.parameters[5].description": "Trigger hook on tag push events",
	"paths./v3/projects/{id}/hooks.post.parameters[5].in": "formData",
	"paths./v3/projects/{id}/hooks.post.parameters[5].name": "tag_push_events",
	"paths./v3/projects/{id}/hooks.post.parameters[5].required": false,
	"paths./v3/projects/{id}/hooks.post.parameters[5].type": "boolean",
	"paths./v3/projects/{id}/hooks.post.parameters[6].description": "Trigger hook on note(comment) events",
	"paths./v3/projects/{id}/hooks.post.parameters[6].in": "formData",
	"paths./v3/projects/{id}/hooks.post.parameters[6].name": "note_events",
	"paths./v3/projects/{id}/hooks.post.parameters[6].required": false,
	"paths./v3/projects/{id}/hooks.post.parameters[6].type": "boolean",
	"paths./v3/projects/{id}/hooks.post.parameters[7].description": "Trigger hook on build events",
	"paths./v3/projects/{id}/hooks.post.parameters[7].in": "formData",
	"paths./v3/projects/{id}/hooks.post.parameters[7].name": "build_events",
	"paths./v3/projects/{id}/hooks.post.parameters[7].required": false,
	"paths./v3/projects/{id}/hooks.post.parameters[7].type": "boolean",
	"paths./v3/projects/{id}/hooks.post.parameters[8].description": "Trigger hook on pipeline events",
	"paths./v3/projects/{id}/hooks.post.parameters[8].in": "formData",
	"paths./v3/projects/{id}/hooks.post.parameters[8].name": "pipeline_events",
	"paths./v3/projects/{id}/hooks.post.parameters[8].required": false,
	"paths./v3/projects/{id}/hooks.post.parameters[8].type": "boolean",
	"paths./v3/projects/{id}/hooks.post.parameters[9].description": "Trigger hook on wiki events",
	"paths./v3/projects/{id}/hooks.post.parameters[9].in": "formData",
	"paths./v3/projects/{id}/hooks.post.parameters[9].name": "wiki_page_events",
	"paths./v3/projects/{id}/hooks.post.parameters[9].required": false,
	"paths./v3/projects/{id}/hooks.post.parameters[9].type": "boolean",
	"paths./v3/projects/{id}/hooks.post.produces.length": 1,
	"paths./v3/projects/{id}/hooks.post.produces[0]": "application/json",
	"paths./v3/projects/{id}/hooks.post.responses.201.description": "Add hook to project",
	"paths./v3/projects/{id}/hooks.post.responses.201.schema.$ref": "#/definitions/ProjectHook",
	"paths./v3/projects/{id}/hooks.post.summary": "Add hook to project",
	"paths./v3/projects/{id}/hooks.post.tags.length": 1,
	"paths./v3/projects/{id}/hooks.post.tags[0]": "projects",
	"paths./v3/projects/{id}/hooks/{hook_id}.delete.description": "Deletes project hook",
	"paths./v3/projects/{id}/hooks/{hook_id}.delete.operationId": "deleteV3ProjectsIdHooksHookId",
	"paths./v3/projects/{id}/hooks/{hook_id}.delete.parameters.length": 2,
	"paths./v3/projects/{id}/hooks/{hook_id}.delete.parameters[0].description": "The ID of a project",
	"paths./v3/projects/{id}/hooks/{hook_id}.delete.parameters[0].in": "path",
	"paths./v3/projects/{id}/hooks/{hook_id}.delete.parameters[0].name": "id",
	"paths./v3/projects/{id}/hooks/{hook_id}.delete.parameters[0].required": true,
	"paths./v3/projects/{id}/hooks/{hook_id}.delete.parameters[0].type": "string",
	"paths./v3/projects/{id}/hooks/{hook_id}.delete.parameters[1].description": "The ID of the hook to delete",
	"paths./v3/projects/{id}/hooks/{hook_id}.delete.parameters[1].format": "int32",
	"paths./v3/projects/{id}/hooks/{hook_id}.delete.parameters[1].in": "path",
	"paths./v3/projects/{id}/hooks/{hook_id}.delete.parameters[1].name": "hook_id",
	"paths./v3/projects/{id}/hooks/{hook_id}.delete.parameters[1].required": true,
	"paths./v3/projects/{id}/hooks/{hook_id}.delete.parameters[1].type": "integer",
	"paths./v3/projects/{id}/hooks/{hook_id}.delete.produces.length": 1,
	"paths./v3/projects/{id}/hooks/{hook_id}.delete.produces[0]": "application/json",
	"paths./v3/projects/{id}/hooks/{hook_id}.delete.responses.200.description": "Deletes project hook",
	"paths./v3/projects/{id}/hooks/{hook_id}.delete.responses.200.schema.$ref": "#/definitions/ProjectHook",
	"paths./v3/projects/{id}/hooks/{hook_id}.delete.summary": "Deletes project hook",
	"paths./v3/projects/{id}/hooks/{hook_id}.delete.tags.length": 1,
	"paths./v3/projects/{id}/hooks/{hook_id}.delete.tags[0]": "projects",
	"paths./v3/projects/{id}/hooks/{hook_id}.get.description": "Get a project hook",
	"paths./v3/projects/{id}/hooks/{hook_id}.get.operationId": "getV3ProjectsIdHooksHookId",
	"paths./v3/projects/{id}/hooks/{hook_id}.get.parameters.length": 2,
	"paths./v3/projects/{id}/hooks/{hook_id}.get.parameters[0].description": "The ID of a project",
	"paths./v3/projects/{id}/hooks/{hook_id}.get.parameters[0].in": "path",
	"paths./v3/projects/{id}/hooks/{hook_id}.get.parameters[0].name": "id",
	"paths./v3/projects/{id}/hooks/{hook_id}.get.parameters[0].required": true,
	"paths./v3/projects/{id}/hooks/{hook_id}.get.parameters[0].type": "string",
	"paths./v3/projects/{id}/hooks/{hook_id}.get.parameters[1].description": "The ID of a project hook",
	"paths./v3/projects/{id}/hooks/{hook_id}.get.parameters[1].format": "int32",
	"paths./v3/projects/{id}/hooks/{hook_id}.get.parameters[1].in": "path",
	"paths./v3/projects/{id}/hooks/{hook_id}.get.parameters[1].name": "hook_id",
	"paths./v3/projects/{id}/hooks/{hook_id}.get.parameters[1].required": true,
	"paths./v3/projects/{id}/hooks/{hook_id}.get.parameters[1].type": "integer",
	"paths./v3/projects/{id}/hooks/{hook_id}.get.produces.length": 1,
	"paths./v3/projects/{id}/hooks/{hook_id}.get.produces[0]": "application/json",
	"paths./v3/projects/{id}/hooks/{hook_id}.get.responses.200.description": "Get a project hook",
	"paths./v3/projects/{id}/hooks/{hook_id}.get.responses.200.schema.$ref": "#/definitions/ProjectHook",
	"paths./v3/projects/{id}/hooks/{hook_id}.get.summary": "Get a project hook",
	"paths./v3/projects/{id}/hooks/{hook_id}.get.tags.length": 1,
	"paths./v3/projects/{id}/hooks/{hook_id}.get.tags[0]": "projects",
	"paths./v3/projects/{id}/hooks/{hook_id}.put.consumes.length": 1,
	"paths./v3/projects/{id}/hooks/{hook_id}.put.consumes[0]": "application/json",
	"paths./v3/projects/{id}/hooks/{hook_id}.put.description": "Update an existing project hook",
	"paths./v3/projects/{id}/hooks/{hook_id}.put.operationId": "putV3ProjectsIdHooksHookId",
	"paths./v3/projects/{id}/hooks/{hook_id}.put.parameters.length": 13,
	"paths./v3/projects/{id}/hooks/{hook_id}.put.parameters[0].description": "The ID of a project",
	"paths./v3/projects/{id}/hooks/{hook_id}.put.parameters[0].in": "path",
	"paths./v3/projects/{id}/hooks/{hook_id}.put.parameters[0].name": "id",
	"paths./v3/projects/{id}/hooks/{hook_id}.put.parameters[0].required": true,
	"paths./v3/projects/{id}/hooks/{hook_id}.put.parameters[0].type": "string",
	"paths./v3/projects/{id}/hooks/{hook_id}.put.parameters[10].description": "Trigger hook on wiki events",
	"paths./v3/projects/{id}/hooks/{hook_id}.put.parameters[10].in": "formData",
	"paths./v3/projects/{id}/hooks/{hook_id}.put.parameters[10].name": "wiki_page_events",
	"paths./v3/projects/{id}/hooks/{hook_id}.put.parameters[10].required": false,
	"paths./v3/projects/{id}/hooks/{hook_id}.put.parameters[10].type": "boolean",
	"paths./v3/projects/{id}/hooks/{hook_id}.put.parameters[11].description": "Do SSL verification when triggering the hook",
	"paths./v3/projects/{id}/hooks/{hook_id}.put.parameters[11].in": "formData",
	"paths./v3/projects/{id}/hooks/{hook_id}.put.parameters[11].name": "enable_ssl_verification",
	"paths./v3/projects/{id}/hooks/{hook_id}.put.parameters[11].required": false,
	"paths./v3/projects/{id}/hooks/{hook_id}.put.parameters[11].type": "boolean",
	"paths./v3/projects/{id}/hooks/{hook_id}.put.parameters[12].description": "Secret token to validate received payloads; this will not be returned in the response",
	"paths./v3/projects/{id}/hooks/{hook_id}.put.parameters[12].in": "formData",
	"paths./v3/projects/{id}/hooks/{hook_id}.put.parameters[12].name": "token",
	"paths./v3/projects/{id}/hooks/{hook_id}.put.parameters[12].required": false,
	"paths./v3/projects/{id}/hooks/{hook_id}.put.parameters[12].type": "string",
	"paths./v3/projects/{id}/hooks/{hook_id}.put.parameters[1].description": "The ID of the hook to update",
	"paths./v3/projects/{id}/hooks/{hook_id}.put.parameters[1].format": "int32",
	"paths./v3/projects/{id}/hooks/{hook_id}.put.parameters[1].in": "path",
	"paths./v3/projects/{id}/hooks/{hook_id}.put.parameters[1].name": "hook_id",
	"paths./v3/projects/{id}/hooks/{hook_id}.put.parameters[1].required": true,
	"paths./v3/projects/{id}/hooks/{hook_id}.put.parameters[1].type": "integer",
	"paths./v3/projects/{id}/hooks/{hook_id}.put.parameters[2].description": "The URL to send the request to",
	"paths./v3/projects/{id}/hooks/{hook_id}.put.parameters[2].in": "formData",
	"paths./v3/projects/{id}/hooks/{hook_id}.put.parameters[2].name": "url",
	"paths./v3/projects/{id}/hooks/{hook_id}.put.parameters[2].required": true,
	"paths./v3/projects/{id}/hooks/{hook_id}.put.parameters[2].type": "string",
	"paths./v3/projects/{id}/hooks/{hook_id}.put.parameters[3].description": "Trigger hook on push events",
	"paths./v3/projects/{id}/hooks/{hook_id}.put.parameters[3].in": "formData",
	"paths./v3/projects/{id}/hooks/{hook_id}.put.parameters[3].name": "push_events",
	"paths./v3/projects/{id}/hooks/{hook_id}.put.parameters[3].required": false,
	"paths./v3/projects/{id}/hooks/{hook_id}.put.parameters[3].type": "boolean",
	"paths./v3/projects/{id}/hooks/{hook_id}.put.parameters[4].description": "Trigger hook on issues events",
	"paths./v3/projects/{id}/hooks/{hook_id}.put.parameters[4].in": "formData",
	"paths./v3/projects/{id}/hooks/{hook_id}.put.parameters[4].name": "issues_events",
	"paths./v3/projects/{id}/hooks/{hook_id}.put.parameters[4].required": false,
	"paths./v3/projects/{id}/hooks/{hook_id}.put.parameters[4].type": "boolean",
	"paths./v3/projects/{id}/hooks/{hook_id}.put.parameters[5].description": "Trigger hook on merge request events",
	"paths./v3/projects/{id}/hooks/{hook_id}.put.parameters[5].in": "formData",
	"paths./v3/projects/{id}/hooks/{hook_id}.put.parameters[5].name": "merge_requests_events",
	"paths./v3/projects/{id}/hooks/{hook_id}.put.parameters[5].required": false,
	"paths./v3/projects/{id}/hooks/{hook_id}.put.parameters[5].type": "boolean",
	"paths./v3/projects/{id}/hooks/{hook_id}.put.parameters[6].description": "Trigger hook on tag push events",
	"paths./v3/projects/{id}/hooks/{hook_id}.put.parameters[6].in": "formData",
	"paths./v3/projects/{id}/hooks/{hook_id}.put.parameters[6].name": "tag_push_events",
	"paths./v3/projects/{id}/hooks/{hook_id}.put.parameters[6].required": false,
	"paths./v3/projects/{id}/hooks/{hook_id}.put.parameters[6].type": "boolean",
	"paths./v3/projects/{id}/hooks/{hook_id}.put.parameters[7].description": "Trigger hook on note(comment) events",
	"paths./v3/projects/{id}/hooks/{hook_id}.put.parameters[7].in": "formData",
	"paths./v3/projects/{id}/hooks/{hook_id}.put.parameters[7].name": "note_events",
	"paths./v3/projects/{id}/hooks/{hook_id}.put.parameters[7].required": false,
	"paths./v3/projects/{id}/hooks/{hook_id}.put.parameters[7].type": "boolean",
	"paths./v3/projects/{id}/hooks/{hook_id}.put.parameters[8].description": "Trigger hook on build events",
	"paths./v3/projects/{id}/hooks/{hook_id}.put.parameters[8].in": "formData",
	"paths./v3/projects/{id}/hooks/{hook_id}.put.parameters[8].name": "build_events",
	"paths./v3/projects/{id}/hooks/{hook_id}.put.parameters[8].required": false,
	"paths./v3/projects/{id}/hooks/{hook_id}.put.parameters[8].type": "boolean",
	"paths./v3/projects/{id}/hooks/{hook_id}.put.parameters[9].description": "Trigger hook on pipeline events",
	"paths./v3/projects/{id}/hooks/{hook_id}.put.parameters[9].in": "formData",
	"paths./v3/projects/{id}/hooks/{hook_id}.put.parameters[9].name": "pipeline_events",
	"paths./v3/projects/{id}/hooks/{hook_id}.put.parameters[9].required": false,
	"paths./v3/projects/{id}/hooks/{hook_id}.put.parameters[9].type": "boolean",
	"paths./v3/projects/{id}/hooks/{hook_id}.put.produces.length": 1,
	"paths./v3/projects/{id}/hooks/{hook_id}.put.produces[0]": "application/json",
	"paths./v3/projects/{id}/hooks/{hook_id}.put.responses.200.description": "Update an existing project hook",
	"paths./v3/projects/{id}/hooks/{hook_id}.put.responses.200.schema.$ref": "#/definitions/ProjectHook",
	"paths./v3/projects/{id}/hooks/{hook_id}.put.summary": "Update an existing project hook",
	"paths./v3/projects/{id}/hooks/{hook_id}.put.tags.length": 1,
	"paths./v3/projects/{id}/hooks/{hook_id}.put.tags[0]": "projects",
	"paths./v3/projects/{id}/issues.get.description": "Get a list of project issues",
	"paths./v3/projects/{id}/issues.get.operationId": "getV3ProjectsIdIssues",
	"paths./v3/projects/{id}/issues.get.parameters.length": 9,
	"paths./v3/projects/{id}/issues.get.parameters[0].description": "The ID of a project",
	"paths./v3/projects/{id}/issues.get.parameters[0].in": "path",
	"paths./v3/projects/{id}/issues.get.parameters[0].name": "id",
	"paths./v3/projects/{id}/issues.get.parameters[0].required": true,
	"paths./v3/projects/{id}/issues.get.parameters[0].type": "string",
	"paths./v3/projects/{id}/issues.get.parameters[1].default": "all",
	"paths./v3/projects/{id}/issues.get.parameters[1].description": "Return opened, closed, or all issues",
	"paths./v3/projects/{id}/issues.get.parameters[1].enum.length": 3,
	"paths./v3/projects/{id}/issues.get.parameters[1].enum[0]": "opened",
	"paths./v3/projects/{id}/issues.get.parameters[1].enum[1]": "closed",
	"paths./v3/projects/{id}/issues.get.parameters[1].enum[2]": "all",
	"paths./v3/projects/{id}/issues.get.parameters[1].in": "query",
	"paths./v3/projects/{id}/issues.get.parameters[1].name": "state",
	"paths./v3/projects/{id}/issues.get.parameters[1].required": false,
	"paths./v3/projects/{id}/issues.get.parameters[1].type": "string",
	"paths./v3/projects/{id}/issues.get.parameters[2].description": "Return the issue having the given `iid`",
	"paths./v3/projects/{id}/issues.get.parameters[2].format": "int32",
	"paths./v3/projects/{id}/issues.get.parameters[2].in": "query",
	"paths./v3/projects/{id}/issues.get.parameters[2].name": "iid",
	"paths./v3/projects/{id}/issues.get.parameters[2].required": false,
	"paths./v3/projects/{id}/issues.get.parameters[2].type": "integer",
	"paths./v3/projects/{id}/issues.get.parameters[3].description": "Comma-separated list of label names",
	"paths./v3/projects/{id}/issues.get.parameters[3].in": "query",
	"paths./v3/projects/{id}/issues.get.parameters[3].name": "labels",
	"paths./v3/projects/{id}/issues.get.parameters[3].required": false,
	"paths./v3/projects/{id}/issues.get.parameters[3].type": "string",
	"paths./v3/projects/{id}/issues.get.parameters[4].description": "Return issues for a specific milestone",
	"paths./v3/projects/{id}/issues.get.parameters[4].in": "query",
	"paths./v3/projects/{id}/issues.get.parameters[4].name": "milestone",
	"paths./v3/projects/{id}/issues.get.parameters[4].required": false,
	"paths./v3/projects/{id}/issues.get.parameters[4].type": "string",
	"paths./v3/projects/{id}/issues.get.parameters[5].default": "created_at",
	"paths./v3/projects/{id}/issues.get.parameters[5].description": "Return issues ordered by `created_at` or `updated_at` fields.",
	"paths./v3/projects/{id}/issues.get.parameters[5].enum.length": 2,
	"paths./v3/projects/{id}/issues.get.parameters[5].enum[0]": "created_at",
	"paths./v3/projects/{id}/issues.get.parameters[5].enum[1]": "updated_at",
	"paths./v3/projects/{id}/issues.get.parameters[5].in": "query",
	"paths./v3/projects/{id}/issues.get.parameters[5].name": "order_by",
	"paths./v3/projects/{id}/issues.get.parameters[5].required": false,
	"paths./v3/projects/{id}/issues.get.parameters[5].type": "string",
	"paths./v3/projects/{id}/issues.get.parameters[6].default": "desc",
	"paths./v3/projects/{id}/issues.get.parameters[6].description": "Return issues sorted in `asc` or `desc` order.",
	"paths./v3/projects/{id}/issues.get.parameters[6].enum.length": 2,
	"paths./v3/projects/{id}/issues.get.parameters[6].enum[0]": "asc",
	"paths./v3/projects/{id}/issues.get.parameters[6].enum[1]": "desc",
	"paths./v3/projects/{id}/issues.get.parameters[6].in": "query",
	"paths./v3/projects/{id}/issues.get.parameters[6].name": "sort",
	"paths./v3/projects/{id}/issues.get.parameters[6].required": false,
	"paths./v3/projects/{id}/issues.get.parameters[6].type": "string",
	"paths./v3/projects/{id}/issues.get.parameters[7].description": "Current page number",
	"paths./v3/projects/{id}/issues.get.parameters[7].format": "int32",
	"paths./v3/projects/{id}/issues.get.parameters[7].in": "query",
	"paths./v3/projects/{id}/issues.get.parameters[7].name": "page",
	"paths./v3/projects/{id}/issues.get.parameters[7].required": false,
	"paths./v3/projects/{id}/issues.get.parameters[7].type": "integer",
	"paths./v3/projects/{id}/issues.get.parameters[8].description": "Number of items per page",
	"paths./v3/projects/{id}/issues.get.parameters[8].format": "int32",
	"paths./v3/projects/{id}/issues.get.parameters[8].in": "query",
	"paths./v3/projects/{id}/issues.get.parameters[8].name": "per_page",
	"paths./v3/projects/{id}/issues.get.parameters[8].required": false,
	"paths./v3/projects/{id}/issues.get.parameters[8].type": "integer",
	"paths./v3/projects/{id}/issues.get.produces.length": 1,
	"paths./v3/projects/{id}/issues.get.produces[0]": "application/json",
	"paths./v3/projects/{id}/issues.get.responses.200.description": "Get a list of project issues",
	"paths./v3/projects/{id}/issues.get.responses.200.schema.$ref": "#/definitions/Issue",
	"paths./v3/projects/{id}/issues.get.summary": "Get a list of project issues",
	"paths./v3/projects/{id}/issues.get.tags.length": 1,
	"paths./v3/projects/{id}/issues.get.tags[0]": "projects",
	"paths./v3/projects/{id}/issues.post.consumes.length": 1,
	"paths./v3/projects/{id}/issues.post.consumes[0]": "application/json",
	"paths./v3/projects/{id}/issues.post.description": "Create a new project issue",
	"paths./v3/projects/{id}/issues.post.operationId": "postV3ProjectsIdIssues",
	"paths./v3/projects/{id}/issues.post.parameters.length": 10,
	"paths./v3/projects/{id}/issues.post.parameters[0].description": "The ID of a project",
	"paths./v3/projects/{id}/issues.post.parameters[0].in": "path",
	"paths./v3/projects/{id}/issues.post.parameters[0].name": "id",
	"paths./v3/projects/{id}/issues.post.parameters[0].required": true,
	"paths./v3/projects/{id}/issues.post.parameters[0].type": "string",
	"paths./v3/projects/{id}/issues.post.parameters[1].description": "The title of an issue",
	"paths./v3/projects/{id}/issues.post.parameters[1].in": "formData",
	"paths./v3/projects/{id}/issues.post.parameters[1].name": "title",
	"paths./v3/projects/{id}/issues.post.parameters[1].required": true,
	"paths./v3/projects/{id}/issues.post.parameters[1].type": "string",
	"paths./v3/projects/{id}/issues.post.parameters[2].description": "Date time when the issue was created. Available only for admins and project owners.",
	"paths./v3/projects/{id}/issues.post.parameters[2].format": "date-time",
	"paths./v3/projects/{id}/issues.post.parameters[2].in": "formData",
	"paths./v3/projects/{id}/issues.post.parameters[2].name": "created_at",
	"paths./v3/projects/{id}/issues.post.parameters[2].required": false,
	"paths./v3/projects/{id}/issues.post.parameters[2].type": "string",
	"paths./v3/projects/{id}/issues.post.parameters[3].description": "The IID of a merge request for which to resolve discussions",
	"paths./v3/projects/{id}/issues.post.parameters[3].format": "int32",
	"paths./v3/projects/{id}/issues.post.parameters[3].in": "formData",
	"paths./v3/projects/{id}/issues.post.parameters[3].name": "merge_request_for_resolving_discussions",
	"paths./v3/projects/{id}/issues.post.parameters[3].required": false,
	"paths./v3/projects/{id}/issues.post.parameters[3].type": "integer",
	"paths./v3/projects/{id}/issues.post.parameters[4].description": "The description of an issue",
	"paths./v3/projects/{id}/issues.post.parameters[4].in": "formData",
	"paths./v3/projects/{id}/issues.post.parameters[4].name": "description",
	"paths./v3/projects/{id}/issues.post.parameters[4].required": false,
	"paths./v3/projects/{id}/issues.post.parameters[4].type": "string",
	"paths./v3/projects/{id}/issues.post.parameters[5].description": "The ID of a user to assign issue",
	"paths./v3/projects/{id}/issues.post.parameters[5].format": "int32",
	"paths./v3/projects/{id}/issues.post.parameters[5].in": "formData",
	"paths./v3/projects/{id}/issues.post.parameters[5].name": "assignee_id",
	"paths./v3/projects/{id}/issues.post.parameters[5].required": false,
	"paths./v3/projects/{id}/issues.post.parameters[5].type": "integer",
	"paths./v3/projects/{id}/issues.post.parameters[6].description": "The ID of a milestone to assign issue",
	"paths./v3/projects/{id}/issues.post.parameters[6].format": "int32",
	"paths./v3/projects/{id}/issues.post.parameters[6].in": "formData",
	"paths./v3/projects/{id}/issues.post.parameters[6].name": "milestone_id",
	"paths./v3/projects/{id}/issues.post.parameters[6].required": false,
	"paths./v3/projects/{id}/issues.post.parameters[6].type": "integer",
	"paths./v3/projects/{id}/issues.post.parameters[7].description": "Comma-separated list of label names",
	"paths./v3/projects/{id}/issues.post.parameters[7].in": "formData",
	"paths./v3/projects/{id}/issues.post.parameters[7].name": "labels",
	"paths./v3/projects/{id}/issues.post.parameters[7].required": false,
	"paths./v3/projects/{id}/issues.post.parameters[7].type": "string",
	"paths./v3/projects/{id}/issues.post.parameters[8].description": "Date time string in the format YEAR-MONTH-DAY",
	"paths./v3/projects/{id}/issues.post.parameters[8].in": "formData",
	"paths./v3/projects/{id}/issues.post.parameters[8].name": "due_date",
	"paths./v3/projects/{id}/issues.post.parameters[8].required": false,
	"paths./v3/projects/{id}/issues.post.parameters[8].type": "string",
	"paths./v3/projects/{id}/issues.post.parameters[9].description": "Boolean parameter if the issue should be confidential",
	"paths./v3/projects/{id}/issues.post.parameters[9].in": "formData",
	"paths./v3/projects/{id}/issues.post.parameters[9].name": "confidential",
	"paths./v3/projects/{id}/issues.post.parameters[9].required": false,
	"paths./v3/projects/{id}/issues.post.parameters[9].type": "boolean",
	"paths./v3/projects/{id}/issues.post.produces.length": 1,
	"paths./v3/projects/{id}/issues.post.produces[0]": "application/json",
	"paths./v3/projects/{id}/issues.post.responses.201.description": "Create a new project issue",
	"paths./v3/projects/{id}/issues.post.responses.201.schema.$ref": "#/definitions/Issue",
	"paths./v3/projects/{id}/issues.post.summary": "Create a new project issue",
	"paths./v3/projects/{id}/issues.post.tags.length": 1,
	"paths./v3/projects/{id}/issues.post.tags[0]": "projects",
	"paths./v3/projects/{id}/issues/{issue_id}.delete.description": "Delete a project issue",
	"paths./v3/projects/{id}/issues/{issue_id}.delete.operationId": "deleteV3ProjectsIdIssuesIssueId",
	"paths./v3/projects/{id}/issues/{issue_id}.delete.parameters.length": 2,
	"paths./v3/projects/{id}/issues/{issue_id}.delete.parameters[0].description": "The ID of a project",
	"paths./v3/projects/{id}/issues/{issue_id}.delete.parameters[0].in": "path",
	"paths./v3/projects/{id}/issues/{issue_id}.delete.parameters[0].name": "id",
	"paths./v3/projects/{id}/issues/{issue_id}.delete.parameters[0].required": true,
	"paths./v3/projects/{id}/issues/{issue_id}.delete.parameters[0].type": "string",
	"paths./v3/projects/{id}/issues/{issue_id}.delete.parameters[1].description": "The ID of a project issue",
	"paths./v3/projects/{id}/issues/{issue_id}.delete.parameters[1].format": "int32",
	"paths./v3/projects/{id}/issues/{issue_id}.delete.parameters[1].in": "path",
	"paths./v3/projects/{id}/issues/{issue_id}.delete.parameters[1].name": "issue_id",
	"paths./v3/projects/{id}/issues/{issue_id}.delete.parameters[1].required": true,
	"paths./v3/projects/{id}/issues/{issue_id}.delete.parameters[1].type": "integer",
	"paths./v3/projects/{id}/issues/{issue_id}.delete.produces.length": 1,
	"paths./v3/projects/{id}/issues/{issue_id}.delete.produces[0]": "application/json",
	"paths./v3/projects/{id}/issues/{issue_id}.delete.responses.204.description": "Delete a project issue",
	"paths./v3/projects/{id}/issues/{issue_id}.delete.summary": "Delete a project issue",
	"paths./v3/projects/{id}/issues/{issue_id}.delete.tags.length": 1,
	"paths./v3/projects/{id}/issues/{issue_id}.delete.tags[0]": "projects",
	"paths./v3/projects/{id}/issues/{issue_id}.get.description": "Get a single project issue",
	"paths./v3/projects/{id}/issues/{issue_id}.get.operationId": "getV3ProjectsIdIssuesIssueId",
	"paths./v3/projects/{id}/issues/{issue_id}.get.parameters.length": 2,
	"paths./v3/projects/{id}/issues/{issue_id}.get.parameters[0].description": "The ID of a project",
	"paths./v3/projects/{id}/issues/{issue_id}.get.parameters[0].in": "path",
	"paths./v3/projects/{id}/issues/{issue_id}.get.parameters[0].name": "id",
	"paths./v3/projects/{id}/issues/{issue_id}.get.parameters[0].required": true,
	"paths./v3/projects/{id}/issues/{issue_id}.get.parameters[0].type": "string",
	"paths./v3/projects/{id}/issues/{issue_id}.get.parameters[1].description": "The ID of a project issue",
	"paths./v3/projects/{id}/issues/{issue_id}.get.parameters[1].format": "int32",
	"paths./v3/projects/{id}/issues/{issue_id}.get.parameters[1].in": "path",
	"paths./v3/projects/{id}/issues/{issue_id}.get.parameters[1].name": "issue_id",
	"paths./v3/projects/{id}/issues/{issue_id}.get.parameters[1].required": true,
	"paths./v3/projects/{id}/issues/{issue_id}.get.parameters[1].type": "integer",
	"paths./v3/projects/{id}/issues/{issue_id}.get.produces.length": 1,
	"paths./v3/projects/{id}/issues/{issue_id}.get.produces[0]": "application/json",
	"paths./v3/projects/{id}/issues/{issue_id}.get.responses.200.description": "Get a single project issue",
	"paths./v3/projects/{id}/issues/{issue_id}.get.responses.200.schema.$ref": "#/definitions/Issue",
	"paths./v3/projects/{id}/issues/{issue_id}.get.summary": "Get a single project issue",
	"paths./v3/projects/{id}/issues/{issue_id}.get.tags.length": 1,
	"paths./v3/projects/{id}/issues/{issue_id}.get.tags[0]": "projects",
	"paths./v3/projects/{id}/issues/{issue_id}.put.consumes.length": 1,
	"paths./v3/projects/{id}/issues/{issue_id}.put.consumes[0]": "application/json",
	"paths./v3/projects/{id}/issues/{issue_id}.put.description": "Update an existing issue",
	"paths./v3/projects/{id}/issues/{issue_id}.put.operationId": "putV3ProjectsIdIssuesIssueId",
	"paths./v3/projects/{id}/issues/{issue_id}.put.parameters.length": 12,
	"paths./v3/projects/{id}/issues/{issue_id}.put.parameters[0].description": "The ID of a project",
	"paths./v3/projects/{id}/issues/{issue_id}.put.parameters[0].in": "path",
	"paths./v3/projects/{id}/issues/{issue_id}.put.parameters[0].name": "id",
	"paths./v3/projects/{id}/issues/{issue_id}.put.parameters[0].required": true,
	"paths./v3/projects/{id}/issues/{issue_id}.put.parameters[0].type": "string",
	"paths./v3/projects/{id}/issues/{issue_id}.put.parameters[10].description": "Boolean parameter if the issue should be confidential",
	"paths./v3/projects/{id}/issues/{issue_id}.put.parameters[10].in": "formData",
	"paths./v3/projects/{id}/issues/{issue_id}.put.parameters[10].name": "confidential",
	"paths./v3/projects/{id}/issues/{issue_id}.put.parameters[10].required": false,
	"paths./v3/projects/{id}/issues/{issue_id}.put.parameters[10].type": "boolean",
	"paths./v3/projects/{id}/issues/{issue_id}.put.parameters[11].in": "formData",
	"paths./v3/projects/{id}/issues/{issue_id}.put.parameters[11].name": "created_at",
	"paths./v3/projects/{id}/issues/{issue_id}.put.parameters[11].required": false,
	"paths./v3/projects/{id}/issues/{issue_id}.put.parameters[11].type": "string",
	"paths./v3/projects/{id}/issues/{issue_id}.put.parameters[1].description": "The ID of a project issue",
	"paths./v3/projects/{id}/issues/{issue_id}.put.parameters[1].format": "int32",
	"paths./v3/projects/{id}/issues/{issue_id}.put.parameters[1].in": "path",
	"paths./v3/projects/{id}/issues/{issue_id}.put.parameters[1].name": "issue_id",
	"paths./v3/projects/{id}/issues/{issue_id}.put.parameters[1].required": true,
	"paths./v3/projects/{id}/issues/{issue_id}.put.parameters[1].type": "integer",
	"paths./v3/projects/{id}/issues/{issue_id}.put.parameters[2].description": "The title of an issue",
	"paths./v3/projects/{id}/issues/{issue_id}.put.parameters[2].in": "formData",
	"paths./v3/projects/{id}/issues/{issue_id}.put.parameters[2].name": "title",
	"paths./v3/projects/{id}/issues/{issue_id}.put.parameters[2].required": false,
	"paths./v3/projects/{id}/issues/{issue_id}.put.parameters[2].type": "string",
	"paths./v3/projects/{id}/issues/{issue_id}.put.parameters[3].description": "Date time when the issue was updated. Available only for admins and project owners.",
	"paths./v3/projects/{id}/issues/{issue_id}.put.parameters[3].format": "date-time",
	"paths./v3/projects/{id}/issues/{issue_id}.put.parameters[3].in": "formData",
	"paths./v3/projects/{id}/issues/{issue_id}.put.parameters[3].name": "updated_at",
	"paths./v3/projects/{id}/issues/{issue_id}.put.parameters[3].required": false,
	"paths./v3/projects/{id}/issues/{issue_id}.put.parameters[3].type": "string",
	"paths./v3/projects/{id}/issues/{issue_id}.put.parameters[4].description": "State of the issue",
	"paths./v3/projects/{id}/issues/{issue_id}.put.parameters[4].enum.length": 2,
	"paths./v3/projects/{id}/issues/{issue_id}.put.parameters[4].enum[0]": "reopen",
	"paths./v3/projects/{id}/issues/{issue_id}.put.parameters[4].enum[1]": "close",
	"paths./v3/projects/{id}/issues/{issue_id}.put.parameters[4].in": "formData",
	"paths./v3/projects/{id}/issues/{issue_id}.put.parameters[4].name": "state_event",
	"paths./v3/projects/{id}/issues/{issue_id}.put.parameters[4].required": false,
	"paths./v3/projects/{id}/issues/{issue_id}.put.parameters[4].type": "string",
	"paths./v3/projects/{id}/issues/{issue_id}.put.parameters[5].description": "The description of an issue",
	"paths./v3/projects/{id}/issues/{issue_id}.put.parameters[5].in": "formData",
	"paths./v3/projects/{id}/issues/{issue_id}.put.parameters[5].name": "description",
	"paths./v3/projects/{id}/issues/{issue_id}.put.parameters[5].required": false,
	"paths./v3/projects/{id}/issues/{issue_id}.put.parameters[5].type": "string",
	"paths./v3/projects/{id}/issues/{issue_id}.put.parameters[6].description": "The ID of a user to assign issue",
	"paths./v3/projects/{id}/issues/{issue_id}.put.parameters[6].format": "int32",
	"paths./v3/projects/{id}/issues/{issue_id}.put.parameters[6].in": "formData",
	"paths./v3/projects/{id}/issues/{issue_id}.put.parameters[6].name": "assignee_id",
	"paths./v3/projects/{id}/issues/{issue_id}.put.parameters[6].required": false,
	"paths./v3/projects/{id}/issues/{issue_id}.put.parameters[6].type": "integer",
	"paths./v3/projects/{id}/issues/{issue_id}.put.parameters[7].description": "The ID of a milestone to assign issue",
	"paths./v3/projects/{id}/issues/{issue_id}.put.parameters[7].format": "int32",
	"paths./v3/projects/{id}/issues/{issue_id}.put.parameters[7].in": "formData",
	"paths./v3/projects/{id}/issues/{issue_id}.put.parameters[7].name": "milestone_id",
	"paths./v3/projects/{id}/issues/{issue_id}.put.parameters[7].required": false,
	"paths./v3/projects/{id}/issues/{issue_id}.put.parameters[7].type": "integer",
	"paths./v3/projects/{id}/issues/{issue_id}.put.parameters[8].description": "Comma-separated list of label names",
	"paths./v3/projects/{id}/issues/{issue_id}.put.parameters[8].in": "formData",
	"paths./v3/projects/{id}/issues/{issue_id}.put.parameters[8].name": "labels",
	"paths./v3/projects/{id}/issues/{issue_id}.put.parameters[8].required": false,
	"paths./v3/projects/{id}/issues/{issue_id}.put.parameters[8].type": "string",
	"paths./v3/projects/{id}/issues/{issue_id}.put.parameters[9].description": "Date time string in the format YEAR-MONTH-DAY",
	"paths./v3/projects/{id}/issues/{issue_id}.put.parameters[9].in": "formData",
	"paths./v3/projects/{id}/issues/{issue_id}.put.parameters[9].name": "due_date",
	"paths./v3/projects/{id}/issues/{issue_id}.put.parameters[9].required": false,
	"paths./v3/projects/{id}/issues/{issue_id}.put.parameters[9].type": "string",
	"paths./v3/projects/{id}/issues/{issue_id}.put.produces.length": 1,
	"paths./v3/projects/{id}/issues/{issue_id}.put.produces[0]": "application/json",
	"paths./v3/projects/{id}/issues/{issue_id}.put.responses.200.description": "Update an existing issue",
	"paths./v3/projects/{id}/issues/{issue_id}.put.responses.200.schema.$ref": "#/definitions/Issue",
	"paths./v3/projects/{id}/issues/{issue_id}.put.summary": "Update an existing issue",
	"paths./v3/projects/{id}/issues/{issue_id}.put.tags.length": 1,
	"paths./v3/projects/{id}/issues/{issue_id}.put.tags[0]": "projects",
	"paths./v3/projects/{id}/issues/{issue_id}/add_spent_time.post.consumes.length": 1,
	"paths./v3/projects/{id}/issues/{issue_id}/add_spent_time.post.consumes[0]": "application/json",
	"paths./v3/projects/{id}/issues/{issue_id}/add_spent_time.post.description": "Add spent time for a project issue",
	"paths./v3/projects/{id}/issues/{issue_id}/add_spent_time.post.operationId": "postV3ProjectsIdIssuesIssueIdAddSpentTime",
	"paths./v3/projects/{id}/issues/{issue_id}/add_spent_time.post.parameters.length": 3,
	"paths./v3/projects/{id}/issues/{issue_id}/add_spent_time.post.parameters[0].description": "The ID of a project",
	"paths./v3/projects/{id}/issues/{issue_id}/add_spent_time.post.parameters[0].in": "path",
	"paths./v3/projects/{id}/issues/{issue_id}/add_spent_time.post.parameters[0].name": "id",
	"paths./v3/projects/{id}/issues/{issue_id}/add_spent_time.post.parameters[0].required": true,
	"paths./v3/projects/{id}/issues/{issue_id}/add_spent_time.post.parameters[0].type": "string",
	"paths./v3/projects/{id}/issues/{issue_id}/add_spent_time.post.parameters[1].description": "The ID of a project issue",
	"paths./v3/projects/{id}/issues/{issue_id}/add_spent_time.post.parameters[1].format": "int32",
	"paths./v3/projects/{id}/issues/{issue_id}/add_spent_time.post.parameters[1].in": "path",
	"paths./v3/projects/{id}/issues/{issue_id}/add_spent_time.post.parameters[1].name": "issue_id",
	"paths./v3/projects/{id}/issues/{issue_id}/add_spent_time.post.parameters[1].required": true,
	"paths./v3/projects/{id}/issues/{issue_id}/add_spent_time.post.parameters[1].type": "integer",
	"paths./v3/projects/{id}/issues/{issue_id}/add_spent_time.post.parameters[2].description": "The duration to be parsed",
	"paths./v3/projects/{id}/issues/{issue_id}/add_spent_time.post.parameters[2].in": "formData",
	"paths./v3/projects/{id}/issues/{issue_id}/add_spent_time.post.parameters[2].name": "duration",
	"paths./v3/projects/{id}/issues/{issue_id}/add_spent_time.post.parameters[2].required": true,
	"paths./v3/projects/{id}/issues/{issue_id}/add_spent_time.post.parameters[2].type": "string",
	"paths./v3/projects/{id}/issues/{issue_id}/add_spent_time.post.produces.length": 1,
	"paths./v3/projects/{id}/issues/{issue_id}/add_spent_time.post.produces[0]": "application/json",
	"paths./v3/projects/{id}/issues/{issue_id}/add_spent_time.post.responses.201.description": "Add spent time for a project issue",
	"paths./v3/projects/{id}/issues/{issue_id}/add_spent_time.post.summary": "Add spent time for a project issue",
	"paths./v3/projects/{id}/issues/{issue_id}/add_spent_time.post.tags.length": 1,
	"paths./v3/projects/{id}/issues/{issue_id}/add_spent_time.post.tags[0]": "projects",
	"paths./v3/projects/{id}/issues/{issue_id}/award_emoji.get.description": "This feature was introduced in 8.9",
	"paths./v3/projects/{id}/issues/{issue_id}/award_emoji.get.operationId": "getV3ProjectsIdIssuesIssueIdAwardEmoji",
	"paths./v3/projects/{id}/issues/{issue_id}/award_emoji.get.parameters.length": 4,
	"paths./v3/projects/{id}/issues/{issue_id}/award_emoji.get.parameters[0].description": "The ID of a project",
	"paths./v3/projects/{id}/issues/{issue_id}/award_emoji.get.parameters[0].in": "path",
	"paths./v3/projects/{id}/issues/{issue_id}/award_emoji.get.parameters[0].name": "id",
	"paths./v3/projects/{id}/issues/{issue_id}/award_emoji.get.parameters[0].required": true,
	"paths./v3/projects/{id}/issues/{issue_id}/award_emoji.get.parameters[0].type": "string",
	"paths./v3/projects/{id}/issues/{issue_id}/award_emoji.get.parameters[1].description": "The ID of an Issue, Merge Request or Snippet",
	"paths./v3/projects/{id}/issues/{issue_id}/award_emoji.get.parameters[1].format": "int32",
	"paths./v3/projects/{id}/issues/{issue_id}/award_emoji.get.parameters[1].in": "path",
	"paths./v3/projects/{id}/issues/{issue_id}/award_emoji.get.parameters[1].name": "issue_id",
	"paths./v3/projects/{id}/issues/{issue_id}/award_emoji.get.parameters[1].required": true,
	"paths./v3/projects/{id}/issues/{issue_id}/award_emoji.get.parameters[1].type": "integer",
	"paths./v3/projects/{id}/issues/{issue_id}/award_emoji.get.parameters[2].description": "Current page number",
	"paths./v3/projects/{id}/issues/{issue_id}/award_emoji.get.parameters[2].format": "int32",
	"paths./v3/projects/{id}/issues/{issue_id}/award_emoji.get.parameters[2].in": "query",
	"paths./v3/projects/{id}/issues/{issue_id}/award_emoji.get.parameters[2].name": "page",
	"paths./v3/projects/{id}/issues/{issue_id}/award_emoji.get.parameters[2].required": false,
	"paths./v3/projects/{id}/issues/{issue_id}/award_emoji.get.parameters[2].type": "integer",
	"paths./v3/projects/{id}/issues/{issue_id}/award_emoji.get.parameters[3].description": "Number of items per page",
	"paths./v3/projects/{id}/issues/{issue_id}/award_emoji.get.parameters[3].format": "int32",
	"paths./v3/projects/{id}/issues/{issue_id}/award_emoji.get.parameters[3].in": "query",
	"paths./v3/projects/{id}/issues/{issue_id}/award_emoji.get.parameters[3].name": "per_page",
	"paths./v3/projects/{id}/issues/{issue_id}/award_emoji.get.parameters[3].required": false,
	"paths./v3/projects/{id}/issues/{issue_id}/award_emoji.get.parameters[3].type": "integer",
	"paths./v3/projects/{id}/issues/{issue_id}/award_emoji.get.produces.length": 1,
	"paths./v3/projects/{id}/issues/{issue_id}/award_emoji.get.produces[0]": "application/json",
	"paths./v3/projects/{id}/issues/{issue_id}/award_emoji.get.responses.200.description": "Get a list of project +awardable+ award emoji",
	"paths./v3/projects/{id}/issues/{issue_id}/award_emoji.get.responses.200.schema.$ref": "#/definitions/AwardEmoji",
	"paths./v3/projects/{id}/issues/{issue_id}/award_emoji.get.summary": "Get a list of project +awardable+ award emoji",
	"paths./v3/projects/{id}/issues/{issue_id}/award_emoji.get.tags.length": 1,
	"paths./v3/projects/{id}/issues/{issue_id}/award_emoji.get.tags[0]": "projects",
	"paths./v3/projects/{id}/issues/{issue_id}/award_emoji.post.consumes.length": 1,
	"paths./v3/projects/{id}/issues/{issue_id}/award_emoji.post.consumes[0]": "application/json",
	"paths./v3/projects/{id}/issues/{issue_id}/award_emoji.post.description": "This feature was introduced in 8.9",
	"paths./v3/projects/{id}/issues/{issue_id}/award_emoji.post.operationId": "postV3ProjectsIdIssuesIssueIdAwardEmoji",
	"paths./v3/projects/{id}/issues/{issue_id}/award_emoji.post.parameters.length": 3,
	"paths./v3/projects/{id}/issues/{issue_id}/award_emoji.post.parameters[0].description": "The name of a award_emoji (without colons)",
	"paths./v3/projects/{id}/issues/{issue_id}/award_emoji.post.parameters[0].in": "formData",
	"paths./v3/projects/{id}/issues/{issue_id}/award_emoji.post.parameters[0].name": "name",
	"paths./v3/projects/{id}/issues/{issue_id}/award_emoji.post.parameters[0].required": true,
	"paths./v3/projects/{id}/issues/{issue_id}/award_emoji.post.parameters[0].type": "string",
	"paths./v3/projects/{id}/issues/{issue_id}/award_emoji.post.parameters[1].format": "int32",
	"paths./v3/projects/{id}/issues/{issue_id}/award_emoji.post.parameters[1].in": "path",
	"paths./v3/projects/{id}/issues/{issue_id}/award_emoji.post.parameters[1].name": "id",
	"paths./v3/projects/{id}/issues/{issue_id}/award_emoji.post.parameters[1].required": true,
	"paths./v3/projects/{id}/issues/{issue_id}/award_emoji.post.parameters[1].type": "integer",
	"paths./v3/projects/{id}/issues/{issue_id}/award_emoji.post.parameters[2].format": "int32",
	"paths./v3/projects/{id}/issues/{issue_id}/award_emoji.post.parameters[2].in": "path",
	"paths./v3/projects/{id}/issues/{issue_id}/award_emoji.post.parameters[2].name": "issue_id",
	"paths./v3/projects/{id}/issues/{issue_id}/award_emoji.post.parameters[2].required": true,
	"paths./v3/projects/{id}/issues/{issue_id}/award_emoji.post.parameters[2].type": "integer",
	"paths./v3/projects/{id}/issues/{issue_id}/award_emoji.post.produces.length": 1,
	"paths./v3/projects/{id}/issues/{issue_id}/award_emoji.post.produces[0]": "application/json",
	"paths./v3/projects/{id}/issues/{issue_id}/award_emoji.post.responses.201.description": "Award a new Emoji",
	"paths./v3/projects/{id}/issues/{issue_id}/award_emoji.post.responses.201.schema.$ref": "#/definitions/AwardEmoji",
	"paths./v3/projects/{id}/issues/{issue_id}/award_emoji.post.summary": "Award a new Emoji",
	"paths./v3/projects/{id}/issues/{issue_id}/award_emoji.post.tags.length": 1,
	"paths./v3/projects/{id}/issues/{issue_id}/award_emoji.post.tags[0]": "projects",
	"paths./v3/projects/{id}/issues/{issue_id}/award_emoji/{award_id}.delete.description": "This feature was introduced in 8.9",
	"paths./v3/projects/{id}/issues/{issue_id}/award_emoji/{award_id}.delete.operationId": "deleteV3ProjectsIdIssuesIssueIdAwardEmojiAwardId",
	"paths./v3/projects/{id}/issues/{issue_id}/award_emoji/{award_id}.delete.parameters.length": 3,
	"paths./v3/projects/{id}/issues/{issue_id}/award_emoji/{award_id}.delete.parameters[0].description": "The ID of an award emoji",
	"paths./v3/projects/{id}/issues/{issue_id}/award_emoji/{award_id}.delete.parameters[0].format": "int32",
	"paths./v3/projects/{id}/issues/{issue_id}/award_emoji/{award_id}.delete.parameters[0].in": "path",
	"paths./v3/projects/{id}/issues/{issue_id}/award_emoji/{award_id}.delete.parameters[0].name": "award_id",
	"paths./v3/projects/{id}/issues/{issue_id}/award_emoji/{award_id}.delete.parameters[0].required": true,
	"paths./v3/projects/{id}/issues/{issue_id}/award_emoji/{award_id}.delete.parameters[0].type": "integer",
	"paths./v3/projects/{id}/issues/{issue_id}/award_emoji/{award_id}.delete.parameters[1].format": "int32",
	"paths./v3/projects/{id}/issues/{issue_id}/award_emoji/{award_id}.delete.parameters[1].in": "path",
	"paths./v3/projects/{id}/issues/{issue_id}/award_emoji/{award_id}.delete.parameters[1].name": "id",
	"paths./v3/projects/{id}/issues/{issue_id}/award_emoji/{award_id}.delete.parameters[1].required": true,
	"paths./v3/projects/{id}/issues/{issue_id}/award_emoji/{award_id}.delete.parameters[1].type": "integer",
	"paths./v3/projects/{id}/issues/{issue_id}/award_emoji/{award_id}.delete.parameters[2].format": "int32",
	"paths./v3/projects/{id}/issues/{issue_id}/award_emoji/{award_id}.delete.parameters[2].in": "path",
	"paths./v3/projects/{id}/issues/{issue_id}/award_emoji/{award_id}.delete.parameters[2].name": "issue_id",
	"paths./v3/projects/{id}/issues/{issue_id}/award_emoji/{award_id}.delete.parameters[2].required": true,
	"paths./v3/projects/{id}/issues/{issue_id}/award_emoji/{award_id}.delete.parameters[2].type": "integer",
	"paths./v3/projects/{id}/issues/{issue_id}/award_emoji/{award_id}.delete.produces.length": 1,
	"paths./v3/projects/{id}/issues/{issue_id}/award_emoji/{award_id}.delete.produces[0]": "application/json",
	"paths./v3/projects/{id}/issues/{issue_id}/award_emoji/{award_id}.delete.responses.200.description": "Delete a +awardables+ award emoji",
	"paths./v3/projects/{id}/issues/{issue_id}/award_emoji/{award_id}.delete.responses.200.schema.$ref": "#/definitions/AwardEmoji",
	"paths./v3/projects/{id}/issues/{issue_id}/award_emoji/{award_id}.delete.summary": "Delete a +awardables+ award emoji",
	"paths./v3/projects/{id}/issues/{issue_id}/award_emoji/{award_id}.delete.tags.length": 1,
	"paths./v3/projects/{id}/issues/{issue_id}/award_emoji/{award_id}.delete.tags[0]": "projects",
	"paths./v3/projects/{id}/issues/{issue_id}/award_emoji/{award_id}.get.description": "This feature was introduced in 8.9",
	"paths./v3/projects/{id}/issues/{issue_id}/award_emoji/{award_id}.get.operationId": "getV3ProjectsIdIssuesIssueIdAwardEmojiAwardId",
	"paths./v3/projects/{id}/issues/{issue_id}/award_emoji/{award_id}.get.parameters.length": 3,
	"paths./v3/projects/{id}/issues/{issue_id}/award_emoji/{award_id}.get.parameters[0].description": "The ID of the award",
	"paths./v3/projects/{id}/issues/{issue_id}/award_emoji/{award_id}.get.parameters[0].format": "int32",
	"paths./v3/projects/{id}/issues/{issue_id}/award_emoji/{award_id}.get.parameters[0].in": "path",
	"paths./v3/projects/{id}/issues/{issue_id}/award_emoji/{award_id}.get.parameters[0].name": "award_id",
	"paths./v3/projects/{id}/issues/{issue_id}/award_emoji/{award_id}.get.parameters[0].required": true,
	"paths./v3/projects/{id}/issues/{issue_id}/award_emoji/{award_id}.get.parameters[0].type": "integer",
	"paths./v3/projects/{id}/issues/{issue_id}/award_emoji/{award_id}.get.parameters[1].format": "int32",
	"paths./v3/projects/{id}/issues/{issue_id}/award_emoji/{award_id}.get.parameters[1].in": "path",
	"paths./v3/projects/{id}/issues/{issue_id}/award_emoji/{award_id}.get.parameters[1].name": "id",
	"paths./v3/projects/{id}/issues/{issue_id}/award_emoji/{award_id}.get.parameters[1].required": true,
	"paths./v3/projects/{id}/issues/{issue_id}/award_emoji/{award_id}.get.parameters[1].type": "integer",
	"paths./v3/projects/{id}/issues/{issue_id}/award_emoji/{award_id}.get.parameters[2].format": "int32",
	"paths./v3/projects/{id}/issues/{issue_id}/award_emoji/{award_id}.get.parameters[2].in": "path",
	"paths./v3/projects/{id}/issues/{issue_id}/award_emoji/{award_id}.get.parameters[2].name": "issue_id",
	"paths./v3/projects/{id}/issues/{issue_id}/award_emoji/{award_id}.get.parameters[2].required": true,
	"paths./v3/projects/{id}/issues/{issue_id}/award_emoji/{award_id}.get.parameters[2].type": "integer",
	"paths./v3/projects/{id}/issues/{issue_id}/award_emoji/{award_id}.get.produces.length": 1,
	"paths./v3/projects/{id}/issues/{issue_id}/award_emoji/{award_id}.get.produces[0]": "application/json",
	"paths./v3/projects/{id}/issues/{issue_id}/award_emoji/{award_id}.get.responses.200.description": "Get a specific award emoji",
	"paths./v3/projects/{id}/issues/{issue_id}/award_emoji/{award_id}.get.responses.200.schema.$ref": "#/definitions/AwardEmoji",
	"paths./v3/projects/{id}/issues/{issue_id}/award_emoji/{award_id}.get.summary": "Get a specific award emoji",
	"paths./v3/projects/{id}/issues/{issue_id}/award_emoji/{award_id}.get.tags.length": 1,
	"paths./v3/projects/{id}/issues/{issue_id}/award_emoji/{award_id}.get.tags[0]": "projects",
	"paths./v3/projects/{id}/issues/{issue_id}/move.post.consumes.length": 1,
	"paths./v3/projects/{id}/issues/{issue_id}/move.post.consumes[0]": "application/json",
	"paths./v3/projects/{id}/issues/{issue_id}/move.post.description": "Move an existing issue",
	"paths./v3/projects/{id}/issues/{issue_id}/move.post.operationId": "postV3ProjectsIdIssuesIssueIdMove",
	"paths./v3/projects/{id}/issues/{issue_id}/move.post.parameters.length": 3,
	"paths./v3/projects/{id}/issues/{issue_id}/move.post.parameters[0].description": "The ID of a project",
	"paths./v3/projects/{id}/issues/{issue_id}/move.post.parameters[0].in": "path",
	"paths./v3/projects/{id}/issues/{issue_id}/move.post.parameters[0].name": "id",
	"paths./v3/projects/{id}/issues/{issue_id}/move.post.parameters[0].required": true,
	"paths./v3/projects/{id}/issues/{issue_id}/move.post.parameters[0].type": "string",
	"paths./v3/projects/{id}/issues/{issue_id}/move.post.parameters[1].description": "The ID of a project issue",
	"paths./v3/projects/{id}/issues/{issue_id}/move.post.parameters[1].format": "int32",
	"paths./v3/projects/{id}/issues/{issue_id}/move.post.parameters[1].in": "path",
	"paths./v3/projects/{id}/issues/{issue_id}/move.post.parameters[1].name": "issue_id",
	"paths./v3/projects/{id}/issues/{issue_id}/move.post.parameters[1].required": true,
	"paths./v3/projects/{id}/issues/{issue_id}/move.post.parameters[1].type": "integer",
	"paths./v3/projects/{id}/issues/{issue_id}/move.post.parameters[2].description": "The ID of the new project",
	"paths./v3/projects/{id}/issues/{issue_id}/move.post.parameters[2].format": "int32",
	"paths./v3/projects/{id}/issues/{issue_id}/move.post.parameters[2].in": "formData",
	"paths./v3/projects/{id}/issues/{issue_id}/move.post.parameters[2].name": "to_project_id",
	"paths./v3/projects/{id}/issues/{issue_id}/move.post.parameters[2].required": true,
	"paths./v3/projects/{id}/issues/{issue_id}/move.post.parameters[2].type": "integer",
	"paths./v3/projects/{id}/issues/{issue_id}/move.post.produces.length": 1,
	"paths./v3/projects/{id}/issues/{issue_id}/move.post.produces[0]": "application/json",
	"paths./v3/projects/{id}/issues/{issue_id}/move.post.responses.201.description": "Move an existing issue",
	"paths./v3/projects/{id}/issues/{issue_id}/move.post.responses.201.schema.$ref": "#/definitions/Issue",
	"paths./v3/projects/{id}/issues/{issue_id}/move.post.summary": "Move an existing issue",
	"paths./v3/projects/{id}/issues/{issue_id}/move.post.tags.length": 1,
	"paths./v3/projects/{id}/issues/{issue_id}/move.post.tags[0]": "projects",
	"paths./v3/projects/{id}/issues/{issue_id}/notes/{note_id}/award_emoji.get.description": "This feature was introduced in 8.9",
	"paths./v3/projects/{id}/issues/{issue_id}/notes/{note_id}/award_emoji.get.operationId": "getV3ProjectsIdIssuesIssueIdNotesNoteIdAwardEmoji",
	"paths./v3/projects/{id}/issues/{issue_id}/notes/{note_id}/award_emoji.get.parameters.length": 5,
	"paths./v3/projects/{id}/issues/{issue_id}/notes/{note_id}/award_emoji.get.parameters[0].description": "Current page number",
	"paths./v3/projects/{id}/issues/{issue_id}/notes/{note_id}/award_emoji.get.parameters[0].format": "int32",
	"paths./v3/projects/{id}/issues/{issue_id}/notes/{note_id}/award_emoji.get.parameters[0].in": "query",
	"paths./v3/projects/{id}/issues/{issue_id}/notes/{note_id}/award_emoji.get.parameters[0].name": "page",
	"paths./v3/projects/{id}/issues/{issue_id}/notes/{note_id}/award_emoji.get.parameters[0].required": false,
	"paths./v3/projects/{id}/issues/{issue_id}/notes/{note_id}/award_emoji.get.parameters[0].type": "integer",
	"paths./v3/projects/{id}/issues/{issue_id}/notes/{note_id}/award_emoji.get.parameters[1].description": "Number of items per page",
	"paths./v3/projects/{id}/issues/{issue_id}/notes/{note_id}/award_emoji.get.parameters[1].format": "int32",
	"paths./v3/projects/{id}/issues/{issue_id}/notes/{note_id}/award_emoji.get.parameters[1].in": "query",
	"paths./v3/projects/{id}/issues/{issue_id}/notes/{note_id}/award_emoji.get.parameters[1].name": "per_page",
	"paths./v3/projects/{id}/issues/{issue_id}/notes/{note_id}/award_emoji.get.parameters[1].required": false,
	"paths./v3/projects/{id}/issues/{issue_id}/notes/{note_id}/award_emoji.get.parameters[1].type": "integer",
	"paths./v3/projects/{id}/issues/{issue_id}/notes/{note_id}/award_emoji.get.parameters[2].format": "int32",
	"paths./v3/projects/{id}/issues/{issue_id}/notes/{note_id}/award_emoji.get.parameters[2].in": "path",
	"paths./v3/projects/{id}/issues/{issue_id}/notes/{note_id}/award_emoji.get.parameters[2].name": "id",
	"paths./v3/projects/{id}/issues/{issue_id}/notes/{note_id}/award_emoji.get.parameters[2].required": true,
	"paths./v3/projects/{id}/issues/{issue_id}/notes/{note_id}/award_emoji.get.parameters[2].type": "integer",
	"paths./v3/projects/{id}/issues/{issue_id}/notes/{note_id}/award_emoji.get.parameters[3].format": "int32",
	"paths./v3/projects/{id}/issues/{issue_id}/notes/{note_id}/award_emoji.get.parameters[3].in": "path",
	"paths./v3/projects/{id}/issues/{issue_id}/notes/{note_id}/award_emoji.get.parameters[3].name": "issue_id",
	"paths./v3/projects/{id}/issues/{issue_id}/notes/{note_id}/award_emoji.get.parameters[3].required": true,
	"paths./v3/projects/{id}/issues/{issue_id}/notes/{note_id}/award_emoji.get.parameters[3].type": "integer",
	"paths./v3/projects/{id}/issues/{issue_id}/notes/{note_id}/award_emoji.get.parameters[4].format": "int32",
	"paths./v3/projects/{id}/issues/{issue_id}/notes/{note_id}/award_emoji.get.parameters[4].in": "path",
	"paths./v3/projects/{id}/issues/{issue_id}/notes/{note_id}/award_emoji.get.parameters[4].name": "note_id",
	"paths./v3/projects/{id}/issues/{issue_id}/notes/{note_id}/award_emoji.get.parameters[4].required": true,
	"paths./v3/projects/{id}/issues/{issue_id}/notes/{note_id}/award_emoji.get.parameters[4].type": "integer",
	"paths./v3/projects/{id}/issues/{issue_id}/notes/{note_id}/award_emoji.get.produces.length": 1,
	"paths./v3/projects/{id}/issues/{issue_id}/notes/{note_id}/award_emoji.get.produces[0]": "application/json",
	"paths./v3/projects/{id}/issues/{issue_id}/notes/{note_id}/award_emoji.get.responses.200.description": "Get a list of project +awardable+ award emoji",
	"paths./v3/projects/{id}/issues/{issue_id}/notes/{note_id}/award_emoji.get.responses.200.schema.$ref": "#/definitions/AwardEmoji",
	"paths./v3/projects/{id}/issues/{issue_id}/notes/{note_id}/award_emoji.get.summary": "Get a list of project +awardable+ award emoji",
	"paths./v3/projects/{id}/issues/{issue_id}/notes/{note_id}/award_emoji.get.tags.length": 1,
	"paths./v3/projects/{id}/issues/{issue_id}/notes/{note_id}/award_emoji.get.tags[0]": "projects",
	"paths./v3/projects/{id}/issues/{issue_id}/notes/{note_id}/award_emoji.post.consumes.length": 1,
	"paths./v3/projects/{id}/issues/{issue_id}/notes/{note_id}/award_emoji.post.consumes[0]": "application/json",
	"paths./v3/projects/{id}/issues/{issue_id}/notes/{note_id}/award_emoji.post.description": "This feature was introduced in 8.9",
	"paths./v3/projects/{id}/issues/{issue_id}/notes/{note_id}/award_emoji.post.operationId": "postV3ProjectsIdIssuesIssueIdNotesNoteIdAwardEmoji",
	"paths./v3/projects/{id}/issues/{issue_id}/notes/{note_id}/award_emoji.post.parameters.length": 4,
	"paths./v3/projects/{id}/issues/{issue_id}/notes/{note_id}/award_emoji.post.parameters[0].description": "The name of a award_emoji (without colons)",
	"paths./v3/projects/{id}/issues/{issue_id}/notes/{note_id}/award_emoji.post.parameters[0].in": "formData",
	"paths./v3/projects/{id}/issues/{issue_id}/notes/{note_id}/award_emoji.post.parameters[0].name": "name",
	"paths./v3/projects/{id}/issues/{issue_id}/notes/{note_id}/award_emoji.post.parameters[0].required": true,
	"paths./v3/projects/{id}/issues/{issue_id}/notes/{note_id}/award_emoji.post.parameters[0].type": "string",
	"paths./v3/projects/{id}/issues/{issue_id}/notes/{note_id}/award_emoji.post.parameters[1].format": "int32",
	"paths./v3/projects/{id}/issues/{issue_id}/notes/{note_id}/award_emoji.post.parameters[1].in": "path",
	"paths./v3/projects/{id}/issues/{issue_id}/notes/{note_id}/award_emoji.post.parameters[1].name": "id",
	"paths./v3/projects/{id}/issues/{issue_id}/notes/{note_id}/award_emoji.post.parameters[1].required": true,
	"paths./v3/projects/{id}/issues/{issue_id}/notes/{note_id}/award_emoji.post.parameters[1].type": "integer",
	"paths./v3/projects/{id}/issues/{issue_id}/notes/{note_id}/award_emoji.post.parameters[2].format": "int32",
	"paths./v3/projects/{id}/issues/{issue_id}/notes/{note_id}/award_emoji.post.parameters[2].in": "path",
	"paths./v3/projects/{id}/issues/{issue_id}/notes/{note_id}/award_emoji.post.parameters[2].name": "issue_id",
	"paths./v3/projects/{id}/issues/{issue_id}/notes/{note_id}/award_emoji.post.parameters[2].required": true,
	"paths./v3/projects/{id}/issues/{issue_id}/notes/{note_id}/award_emoji.post.parameters[2].type": "integer",
	"paths./v3/projects/{id}/issues/{issue_id}/notes/{note_id}/award_emoji.post.parameters[3].format": "int32",
	"paths./v3/projects/{id}/issues/{issue_id}/notes/{note_id}/award_emoji.post.parameters[3].in": "path",
	"paths./v3/projects/{id}/issues/{issue_id}/notes/{note_id}/award_emoji.post.parameters[3].name": "note_id",
	"paths./v3/projects/{id}/issues/{issue_id}/notes/{note_id}/award_emoji.post.parameters[3].required": true,
	"paths./v3/projects/{id}/issues/{issue_id}/notes/{note_id}/award_emoji.post.parameters[3].type": "integer",
	"paths./v3/projects/{id}/issues/{issue_id}/notes/{note_id}/award_emoji.post.produces.length": 1,
	"paths./v3/projects/{id}/issues/{issue_id}/notes/{note_id}/award_emoji.post.produces[0]": "application/json",
	"paths./v3/projects/{id}/issues/{issue_id}/notes/{note_id}/award_emoji.post.responses.201.description": "Award a new Emoji",
	"paths./v3/projects/{id}/issues/{issue_id}/notes/{note_id}/award_emoji.post.responses.201.schema.$ref": "#/definitions/AwardEmoji",
	"paths./v3/projects/{id}/issues/{issue_id}/notes/{note_id}/award_emoji.post.summary": "Award a new Emoji",
	"paths./v3/projects/{id}/issues/{issue_id}/notes/{note_id}/award_emoji.post.tags.length": 1,
	"paths./v3/projects/{id}/issues/{issue_id}/notes/{note_id}/award_emoji.post.tags[0]": "projects",
	"paths./v3/projects/{id}/issues/{issue_id}/notes/{note_id}/award_emoji/{award_id}.delete.description": "This feature was introduced in 8.9",
	"paths./v3/projects/{id}/issues/{issue_id}/notes/{note_id}/award_emoji/{award_id}.delete.operationId": "deleteV3ProjectsIdIssuesIssueIdNotesNoteIdAwardEmojiAwardId",
	"paths./v3/projects/{id}/issues/{issue_id}/notes/{note_id}/award_emoji/{award_id}.delete.parameters.length": 4,
	"paths./v3/projects/{id}/issues/{issue_id}/notes/{note_id}/award_emoji/{award_id}.delete.parameters[0].description": "The ID of an award emoji",
	"paths./v3/projects/{id}/issues/{issue_id}/notes/{note_id}/award_emoji/{award_id}.delete.parameters[0].format": "int32",
	"paths./v3/projects/{id}/issues/{issue_id}/notes/{note_id}/award_emoji/{award_id}.delete.parameters[0].in": "path",
	"paths./v3/projects/{id}/issues/{issue_id}/notes/{note_id}/award_emoji/{award_id}.delete.parameters[0].name": "award_id",
	"paths./v3/projects/{id}/issues/{issue_id}/notes/{note_id}/award_emoji/{award_id}.delete.parameters[0].required": true,
	"paths./v3/projects/{id}/issues/{issue_id}/notes/{note_id}/award_emoji/{award_id}.delete.parameters[0].type": "integer",
	"paths./v3/projects/{id}/issues/{issue_id}/notes/{note_id}/award_emoji/{award_id}.delete.parameters[1].format": "int32",
	"paths./v3/projects/{id}/issues/{issue_id}/notes/{note_id}/award_emoji/{award_id}.delete.parameters[1].in": "path",
	"paths./v3/projects/{id}/issues/{issue_id}/notes/{note_id}/award_emoji/{award_id}.delete.parameters[1].name": "id",
	"paths./v3/projects/{id}/issues/{issue_id}/notes/{note_id}/award_emoji/{award_id}.delete.parameters[1].required": true,
	"paths./v3/projects/{id}/issues/{issue_id}/notes/{note_id}/award_emoji/{award_id}.delete.parameters[1].type": "integer",
	"paths./v3/projects/{id}/issues/{issue_id}/notes/{note_id}/award_emoji/{award_id}.delete.parameters[2].format": "int32",
	"paths./v3/projects/{id}/issues/{issue_id}/notes/{note_id}/award_emoji/{award_id}.delete.parameters[2].in": "path",
	"paths./v3/projects/{id}/issues/{issue_id}/notes/{note_id}/award_emoji/{award_id}.delete.parameters[2].name": "issue_id",
	"paths./v3/projects/{id}/issues/{issue_id}/notes/{note_id}/award_emoji/{award_id}.delete.parameters[2].required": true,
	"paths./v3/projects/{id}/issues/{issue_id}/notes/{note_id}/award_emoji/{award_id}.delete.parameters[2].type": "integer",
	"paths./v3/projects/{id}/issues/{issue_id}/notes/{note_id}/award_emoji/{award_id}.delete.parameters[3].format": "int32",
	"paths./v3/projects/{id}/issues/{issue_id}/notes/{note_id}/award_emoji/{award_id}.delete.parameters[3].in": "path",
	"paths./v3/projects/{id}/issues/{issue_id}/notes/{note_id}/award_emoji/{award_id}.delete.parameters[3].name": "note_id",
	"paths./v3/projects/{id}/issues/{issue_id}/notes/{note_id}/award_emoji/{award_id}.delete.parameters[3].required": true,
	"paths./v3/projects/{id}/issues/{issue_id}/notes/{note_id}/award_emoji/{award_id}.delete.parameters[3].type": "integer",
	"paths./v3/projects/{id}/issues/{issue_id}/notes/{note_id}/award_emoji/{award_id}.delete.produces.length": 1,
	"paths./v3/projects/{id}/issues/{issue_id}/notes/{note_id}/award_emoji/{award_id}.delete.produces[0]": "application/json",
	"paths./v3/projects/{id}/issues/{issue_id}/notes/{note_id}/award_emoji/{award_id}.delete.responses.200.description": "Delete a +awardables+ award emoji",
	"paths./v3/projects/{id}/issues/{issue_id}/notes/{note_id}/award_emoji/{award_id}.delete.responses.200.schema.$ref": "#/definitions/AwardEmoji",
	"paths./v3/projects/{id}/issues/{issue_id}/notes/{note_id}/award_emoji/{award_id}.delete.summary": "Delete a +awardables+ award emoji",
	"paths./v3/projects/{id}/issues/{issue_id}/notes/{note_id}/award_emoji/{award_id}.delete.tags.length": 1,
	"paths./v3/projects/{id}/issues/{issue_id}/notes/{note_id}/award_emoji/{award_id}.delete.tags[0]": "projects",
	"paths./v3/projects/{id}/issues/{issue_id}/notes/{note_id}/award_emoji/{award_id}.get.description": "This feature was introduced in 8.9",
	"paths./v3/projects/{id}/issues/{issue_id}/notes/{note_id}/award_emoji/{award_id}.get.operationId": "getV3ProjectsIdIssuesIssueIdNotesNoteIdAwardEmojiAwardId",
	"paths./v3/projects/{id}/issues/{issue_id}/notes/{note_id}/award_emoji/{award_id}.get.parameters.length": 4,
	"paths./v3/projects/{id}/issues/{issue_id}/notes/{note_id}/award_emoji/{award_id}.get.parameters[0].description": "The ID of the award",
	"paths./v3/projects/{id}/issues/{issue_id}/notes/{note_id}/award_emoji/{award_id}.get.parameters[0].format": "int32",
	"paths./v3/projects/{id}/issues/{issue_id}/notes/{note_id}/award_emoji/{award_id}.get.parameters[0].in": "path",
	"paths./v3/projects/{id}/issues/{issue_id}/notes/{note_id}/award_emoji/{award_id}.get.parameters[0].name": "award_id",
	"paths./v3/projects/{id}/issues/{issue_id}/notes/{note_id}/award_emoji/{award_id}.get.parameters[0].required": true,
	"paths./v3/projects/{id}/issues/{issue_id}/notes/{note_id}/award_emoji/{award_id}.get.parameters[0].type": "integer",
	"paths./v3/projects/{id}/issues/{issue_id}/notes/{note_id}/award_emoji/{award_id}.get.parameters[1].format": "int32",
	"paths./v3/projects/{id}/issues/{issue_id}/notes/{note_id}/award_emoji/{award_id}.get.parameters[1].in": "path",
	"paths./v3/projects/{id}/issues/{issue_id}/notes/{note_id}/award_emoji/{award_id}.get.parameters[1].name": "id",
	"paths./v3/projects/{id}/issues/{issue_id}/notes/{note_id}/award_emoji/{award_id}.get.parameters[1].required": true,
	"paths./v3/projects/{id}/issues/{issue_id}/notes/{note_id}/award_emoji/{award_id}.get.parameters[1].type": "integer",
	"paths./v3/projects/{id}/issues/{issue_id}/notes/{note_id}/award_emoji/{award_id}.get.parameters[2].format": "int32",
	"paths./v3/projects/{id}/issues/{issue_id}/notes/{note_id}/award_emoji/{award_id}.get.parameters[2].in": "path",
	"paths./v3/projects/{id}/issues/{issue_id}/notes/{note_id}/award_emoji/{award_id}.get.parameters[2].name": "issue_id",
	"paths./v3/projects/{id}/issues/{issue_id}/notes/{note_id}/award_emoji/{award_id}.get.parameters[2].required": true,
	"paths./v3/projects/{id}/issues/{issue_id}/notes/{note_id}/award_emoji/{award_id}.get.parameters[2].type": "integer",
	"paths./v3/projects/{id}/issues/{issue_id}/notes/{note_id}/award_emoji/{award_id}.get.parameters[3].format": "int32",
	"paths./v3/projects/{id}/issues/{issue_id}/notes/{note_id}/award_emoji/{award_id}.get.parameters[3].in": "path",
	"paths./v3/projects/{id}/issues/{issue_id}/notes/{note_id}/award_emoji/{award_id}.get.parameters[3].name": "note_id",
	"paths./v3/projects/{id}/issues/{issue_id}/notes/{note_id}/award_emoji/{award_id}.get.parameters[3].required": true,
	"paths./v3/projects/{id}/issues/{issue_id}/notes/{note_id}/award_emoji/{award_id}.get.parameters[3].type": "integer",
	"paths./v3/projects/{id}/issues/{issue_id}/notes/{note_id}/award_emoji/{award_id}.get.produces.length": 1,
	"paths./v3/projects/{id}/issues/{issue_id}/notes/{note_id}/award_emoji/{award_id}.get.produces[0]": "application/json",
	"paths./v3/projects/{id}/issues/{issue_id}/notes/{note_id}/award_emoji/{award_id}.get.responses.200.description": "Get a specific award emoji",
	"paths./v3/projects/{id}/issues/{issue_id}/notes/{note_id}/award_emoji/{award_id}.get.responses.200.schema.$ref": "#/definitions/AwardEmoji",
	"paths./v3/projects/{id}/issues/{issue_id}/notes/{note_id}/award_emoji/{award_id}.get.summary": "Get a specific award emoji",
	"paths./v3/projects/{id}/issues/{issue_id}/notes/{note_id}/award_emoji/{award_id}.get.tags.length": 1,
	"paths./v3/projects/{id}/issues/{issue_id}/notes/{note_id}/award_emoji/{award_id}.get.tags[0]": "projects",
	"paths./v3/projects/{id}/issues/{issue_id}/reset_spent_time.post.consumes.length": 1,
	"paths./v3/projects/{id}/issues/{issue_id}/reset_spent_time.post.consumes[0]": "application/json",
	"paths./v3/projects/{id}/issues/{issue_id}/reset_spent_time.post.description": "Reset spent time for a project issue",
	"paths./v3/projects/{id}/issues/{issue_id}/reset_spent_time.post.operationId": "postV3ProjectsIdIssuesIssueIdResetSpentTime",
	"paths./v3/projects/{id}/issues/{issue_id}/reset_spent_time.post.parameters.length": 2,
	"paths./v3/projects/{id}/issues/{issue_id}/reset_spent_time.post.parameters[0].description": "The ID of a project",
	"paths./v3/projects/{id}/issues/{issue_id}/reset_spent_time.post.parameters[0].in": "path",
	"paths./v3/projects/{id}/issues/{issue_id}/reset_spent_time.post.parameters[0].name": "id",
	"paths./v3/projects/{id}/issues/{issue_id}/reset_spent_time.post.parameters[0].required": true,
	"paths./v3/projects/{id}/issues/{issue_id}/reset_spent_time.post.parameters[0].type": "string",
	"paths./v3/projects/{id}/issues/{issue_id}/reset_spent_time.post.parameters[1].description": "The ID of a project issue",
	"paths./v3/projects/{id}/issues/{issue_id}/reset_spent_time.post.parameters[1].format": "int32",
	"paths./v3/projects/{id}/issues/{issue_id}/reset_spent_time.post.parameters[1].in": "path",
	"paths./v3/projects/{id}/issues/{issue_id}/reset_spent_time.post.parameters[1].name": "issue_id",
	"paths./v3/projects/{id}/issues/{issue_id}/reset_spent_time.post.parameters[1].required": true,
	"paths./v3/projects/{id}/issues/{issue_id}/reset_spent_time.post.parameters[1].type": "integer",
	"paths./v3/projects/{id}/issues/{issue_id}/reset_spent_time.post.produces.length": 1,
	"paths./v3/projects/{id}/issues/{issue_id}/reset_spent_time.post.produces[0]": "application/json",
	"paths./v3/projects/{id}/issues/{issue_id}/reset_spent_time.post.responses.201.description": "Reset spent time for a project issue",
	"paths./v3/projects/{id}/issues/{issue_id}/reset_spent_time.post.summary": "Reset spent time for a project issue",
	"paths./v3/projects/{id}/issues/{issue_id}/reset_spent_time.post.tags.length": 1,
	"paths./v3/projects/{id}/issues/{issue_id}/reset_spent_time.post.tags[0]": "projects",
	"paths./v3/projects/{id}/issues/{issue_id}/reset_time_estimate.post.consumes.length": 1,
	"paths./v3/projects/{id}/issues/{issue_id}/reset_time_estimate.post.consumes[0]": "application/json",
	"paths./v3/projects/{id}/issues/{issue_id}/reset_time_estimate.post.description": "Reset the time estimate for a project issue",
	"paths./v3/projects/{id}/issues/{issue_id}/reset_time_estimate.post.operationId": "postV3ProjectsIdIssuesIssueIdResetTimeEstimate",
	"paths./v3/projects/{id}/issues/{issue_id}/reset_time_estimate.post.parameters.length": 2,
	"paths./v3/projects/{id}/issues/{issue_id}/reset_time_estimate.post.parameters[0].description": "The ID of a project",
	"paths./v3/projects/{id}/issues/{issue_id}/reset_time_estimate.post.parameters[0].in": "path",
	"paths./v3/projects/{id}/issues/{issue_id}/reset_time_estimate.post.parameters[0].name": "id",
	"paths./v3/projects/{id}/issues/{issue_id}/reset_time_estimate.post.parameters[0].required": true,
	"paths./v3/projects/{id}/issues/{issue_id}/reset_time_estimate.post.parameters[0].type": "string",
	"paths./v3/projects/{id}/issues/{issue_id}/reset_time_estimate.post.parameters[1].description": "The ID of a project issue",
	"paths./v3/projects/{id}/issues/{issue_id}/reset_time_estimate.post.parameters[1].format": "int32",
	"paths./v3/projects/{id}/issues/{issue_id}/reset_time_estimate.post.parameters[1].in": "path",
	"paths./v3/projects/{id}/issues/{issue_id}/reset_time_estimate.post.parameters[1].name": "issue_id",
	"paths./v3/projects/{id}/issues/{issue_id}/reset_time_estimate.post.parameters[1].required": true,
	"paths./v3/projects/{id}/issues/{issue_id}/reset_time_estimate.post.parameters[1].type": "integer",
	"paths./v3/projects/{id}/issues/{issue_id}/reset_time_estimate.post.produces.length": 1,
	"paths./v3/projects/{id}/issues/{issue_id}/reset_time_estimate.post.produces[0]": "application/json",
	"paths./v3/projects/{id}/issues/{issue_id}/reset_time_estimate.post.responses.201.description": "Reset the time estimate for a project issue",
	"paths./v3/projects/{id}/issues/{issue_id}/reset_time_estimate.post.summary": "Reset the time estimate for a project issue",
	"paths./v3/projects/{id}/issues/{issue_id}/reset_time_estimate.post.tags.length": 1,
	"paths./v3/projects/{id}/issues/{issue_id}/reset_time_estimate.post.tags[0]": "projects",
	"paths./v3/projects/{id}/issues/{issue_id}/time_estimate.post.consumes.length": 1,
	"paths./v3/projects/{id}/issues/{issue_id}/time_estimate.post.consumes[0]": "application/json",
	"paths./v3/projects/{id}/issues/{issue_id}/time_estimate.post.description": "Set a time estimate for a project issue",
	"paths./v3/projects/{id}/issues/{issue_id}/time_estimate.post.operationId": "postV3ProjectsIdIssuesIssueIdTimeEstimate",
	"paths./v3/projects/{id}/issues/{issue_id}/time_estimate.post.parameters.length": 3,
	"paths./v3/projects/{id}/issues/{issue_id}/time_estimate.post.parameters[0].description": "The ID of a project",
	"paths./v3/projects/{id}/issues/{issue_id}/time_estimate.post.parameters[0].in": "path",
	"paths./v3/projects/{id}/issues/{issue_id}/time_estimate.post.parameters[0].name": "id",
	"paths./v3/projects/{id}/issues/{issue_id}/time_estimate.post.parameters[0].required": true,
	"paths./v3/projects/{id}/issues/{issue_id}/time_estimate.post.parameters[0].type": "string",
	"paths./v3/projects/{id}/issues/{issue_id}/time_estimate.post.parameters[1].description": "The ID of a project issue",
	"paths./v3/projects/{id}/issues/{issue_id}/time_estimate.post.parameters[1].format": "int32",
	"paths./v3/projects/{id}/issues/{issue_id}/time_estimate.post.parameters[1].in": "path",
	"paths./v3/projects/{id}/issues/{issue_id}/time_estimate.post.parameters[1].name": "issue_id",
	"paths./v3/projects/{id}/issues/{issue_id}/time_estimate.post.parameters[1].required": true,
	"paths./v3/projects/{id}/issues/{issue_id}/time_estimate.post.parameters[1].type": "integer",
	"paths./v3/projects/{id}/issues/{issue_id}/time_estimate.post.parameters[2].description": "The duration to be parsed",
	"paths./v3/projects/{id}/issues/{issue_id}/time_estimate.post.parameters[2].in": "formData",
	"paths./v3/projects/{id}/issues/{issue_id}/time_estimate.post.parameters[2].name": "duration",
	"paths./v3/projects/{id}/issues/{issue_id}/time_estimate.post.parameters[2].required": true,
	"paths./v3/projects/{id}/issues/{issue_id}/time_estimate.post.parameters[2].type": "string",
	"paths./v3/projects/{id}/issues/{issue_id}/time_estimate.post.produces.length": 1,
	"paths./v3/projects/{id}/issues/{issue_id}/time_estimate.post.produces[0]": "application/json",
	"paths./v3/projects/{id}/issues/{issue_id}/time_estimate.post.responses.201.description": "Set a time estimate for a project issue",
	"paths./v3/projects/{id}/issues/{issue_id}/time_estimate.post.summary": "Set a time estimate for a project issue",
	"paths./v3/projects/{id}/issues/{issue_id}/time_estimate.post.tags.length": 1,
	"paths./v3/projects/{id}/issues/{issue_id}/time_estimate.post.tags[0]": "projects",
	"paths./v3/projects/{id}/issues/{issue_id}/time_stats.get.description": "Show time stats for a project issue",
	"paths./v3/projects/{id}/issues/{issue_id}/time_stats.get.operationId": "getV3ProjectsIdIssuesIssueIdTimeStats",
	"paths./v3/projects/{id}/issues/{issue_id}/time_stats.get.parameters.length": 2,
	"paths./v3/projects/{id}/issues/{issue_id}/time_stats.get.parameters[0].description": "The ID of a project",
	"paths./v3/projects/{id}/issues/{issue_id}/time_stats.get.parameters[0].in": "path",
	"paths./v3/projects/{id}/issues/{issue_id}/time_stats.get.parameters[0].name": "id",
	"paths./v3/projects/{id}/issues/{issue_id}/time_stats.get.parameters[0].required": true,
	"paths./v3/projects/{id}/issues/{issue_id}/time_stats.get.parameters[0].type": "string",
	"paths./v3/projects/{id}/issues/{issue_id}/time_stats.get.parameters[1].description": "The ID of a project issue",
	"paths./v3/projects/{id}/issues/{issue_id}/time_stats.get.parameters[1].format": "int32",
	"paths./v3/projects/{id}/issues/{issue_id}/time_stats.get.parameters[1].in": "path",
	"paths./v3/projects/{id}/issues/{issue_id}/time_stats.get.parameters[1].name": "issue_id",
	"paths./v3/projects/{id}/issues/{issue_id}/time_stats.get.parameters[1].required": true,
	"paths./v3/projects/{id}/issues/{issue_id}/time_stats.get.parameters[1].type": "integer",
	"paths./v3/projects/{id}/issues/{issue_id}/time_stats.get.produces.length": 1,
	"paths./v3/projects/{id}/issues/{issue_id}/time_stats.get.produces[0]": "application/json",
	"paths./v3/projects/{id}/issues/{issue_id}/time_stats.get.responses.200.description": "Show time stats for a project issue",
	"paths./v3/projects/{id}/issues/{issue_id}/time_stats.get.summary": "Show time stats for a project issue",
	"paths./v3/projects/{id}/issues/{issue_id}/time_stats.get.tags.length": 1,
	"paths./v3/projects/{id}/issues/{issue_id}/time_stats.get.tags[0]": "projects",
	"paths./v3/projects/{id}/issues/{issue_id}/todo.post.consumes.length": 1,
	"paths./v3/projects/{id}/issues/{issue_id}/todo.post.consumes[0]": "application/json",
	"paths./v3/projects/{id}/issues/{issue_id}/todo.post.description": "Create a todo on an issuable",
	"paths./v3/projects/{id}/issues/{issue_id}/todo.post.operationId": "postV3ProjectsIdIssuesIssueIdTodo",
	"paths./v3/projects/{id}/issues/{issue_id}/todo.post.parameters.length": 2,
	"paths./v3/projects/{id}/issues/{issue_id}/todo.post.parameters[0].description": "The ID of a project",
	"paths./v3/projects/{id}/issues/{issue_id}/todo.post.parameters[0].in": "path",
	"paths./v3/projects/{id}/issues/{issue_id}/todo.post.parameters[0].name": "id",
	"paths./v3/projects/{id}/issues/{issue_id}/todo.post.parameters[0].required": true,
	"paths./v3/projects/{id}/issues/{issue_id}/todo.post.parameters[0].type": "string",
	"paths./v3/projects/{id}/issues/{issue_id}/todo.post.parameters[1].description": "The ID of an issuable",
	"paths./v3/projects/{id}/issues/{issue_id}/todo.post.parameters[1].format": "int32",
	"paths./v3/projects/{id}/issues/{issue_id}/todo.post.parameters[1].in": "path",
	"paths./v3/projects/{id}/issues/{issue_id}/todo.post.parameters[1].name": "issue_id",
	"paths./v3/projects/{id}/issues/{issue_id}/todo.post.parameters[1].required": true,
	"paths./v3/projects/{id}/issues/{issue_id}/todo.post.parameters[1].type": "integer",
	"paths./v3/projects/{id}/issues/{issue_id}/todo.post.produces.length": 1,
	"paths./v3/projects/{id}/issues/{issue_id}/todo.post.produces[0]": "application/json",
	"paths./v3/projects/{id}/issues/{issue_id}/todo.post.responses.201.description": "Create a todo on an issuable",
	"paths./v3/projects/{id}/issues/{issue_id}/todo.post.responses.201.schema.$ref": "#/definitions/Todo",
	"paths./v3/projects/{id}/issues/{issue_id}/todo.post.summary": "Create a todo on an issuable",
	"paths./v3/projects/{id}/issues/{issue_id}/todo.post.tags.length": 1,
	"paths./v3/projects/{id}/issues/{issue_id}/todo.post.tags[0]": "projects",
	"paths./v3/projects/{id}/issues/{noteable_id}/notes.get.description": "Get a list of project +noteable+ notes",
	"paths./v3/projects/{id}/issues/{noteable_id}/notes.get.operationId": "getV3ProjectsIdIssuesNoteableIdNotes",
	"paths./v3/projects/{id}/issues/{noteable_id}/notes.get.parameters.length": 4,
	"paths./v3/projects/{id}/issues/{noteable_id}/notes.get.parameters[0].description": "The ID of a project",
	"paths./v3/projects/{id}/issues/{noteable_id}/notes.get.parameters[0].in": "path",
	"paths./v3/projects/{id}/issues/{noteable_id}/notes.get.parameters[0].name": "id",
	"paths./v3/projects/{id}/issues/{noteable_id}/notes.get.parameters[0].required": true,
	"paths./v3/projects/{id}/issues/{noteable_id}/notes.get.parameters[0].type": "string",
	"paths./v3/projects/{id}/issues/{noteable_id}/notes.get.parameters[1].description": "The ID of the noteable",
	"paths./v3/projects/{id}/issues/{noteable_id}/notes.get.parameters[1].format": "int32",
	"paths./v3/projects/{id}/issues/{noteable_id}/notes.get.parameters[1].in": "path",
	"paths./v3/projects/{id}/issues/{noteable_id}/notes.get.parameters[1].name": "noteable_id",
	"paths./v3/projects/{id}/issues/{noteable_id}/notes.get.parameters[1].required": true,
	"paths./v3/projects/{id}/issues/{noteable_id}/notes.get.parameters[1].type": "integer",
	"paths./v3/projects/{id}/issues/{noteable_id}/notes.get.parameters[2].description": "Current page number",
	"paths./v3/projects/{id}/issues/{noteable_id}/notes.get.parameters[2].format": "int32",
	"paths./v3/projects/{id}/issues/{noteable_id}/notes.get.parameters[2].in": "query",
	"paths./v3/projects/{id}/issues/{noteable_id}/notes.get.parameters[2].name": "page",
	"paths./v3/projects/{id}/issues/{noteable_id}/notes.get.parameters[2].required": false,
	"paths./v3/projects/{id}/issues/{noteable_id}/notes.get.parameters[2].type": "integer",
	"paths./v3/projects/{id}/issues/{noteable_id}/notes.get.parameters[3].description": "Number of items per page",
	"paths./v3/projects/{id}/issues/{noteable_id}/notes.get.parameters[3].format": "int32",
	"paths./v3/projects/{id}/issues/{noteable_id}/notes.get.parameters[3].in": "query",
	"paths./v3/projects/{id}/issues/{noteable_id}/notes.get.parameters[3].name": "per_page",
	"paths./v3/projects/{id}/issues/{noteable_id}/notes.get.parameters[3].required": false,
	"paths./v3/projects/{id}/issues/{noteable_id}/notes.get.parameters[3].type": "integer",
	"paths./v3/projects/{id}/issues/{noteable_id}/notes.get.produces.length": 1,
	"paths./v3/projects/{id}/issues/{noteable_id}/notes.get.produces[0]": "application/json",
	"paths./v3/projects/{id}/issues/{noteable_id}/notes.get.responses.200.description": "Get a list of project +noteable+ notes",
	"paths./v3/projects/{id}/issues/{noteable_id}/notes.get.responses.200.schema.$ref": "#/definitions/Note",
	"paths./v3/projects/{id}/issues/{noteable_id}/notes.get.summary": "Get a list of project +noteable+ notes",
	"paths./v3/projects/{id}/issues/{noteable_id}/notes.get.tags.length": 1,
	"paths./v3/projects/{id}/issues/{noteable_id}/notes.get.tags[0]": "projects",
	"paths./v3/projects/{id}/issues/{noteable_id}/notes.post.consumes.length": 1,
	"paths./v3/projects/{id}/issues/{noteable_id}/notes.post.consumes[0]": "application/json",
	"paths./v3/projects/{id}/issues/{noteable_id}/notes.post.description": "Create a new +noteable+ note",
	"paths./v3/projects/{id}/issues/{noteable_id}/notes.post.operationId": "postV3ProjectsIdIssuesNoteableIdNotes",
	"paths./v3/projects/{id}/issues/{noteable_id}/notes.post.parameters.length": 4,
	"paths./v3/projects/{id}/issues/{noteable_id}/notes.post.parameters[0].description": "The ID of a project",
	"paths./v3/projects/{id}/issues/{noteable_id}/notes.post.parameters[0].in": "path",
	"paths./v3/projects/{id}/issues/{noteable_id}/notes.post.parameters[0].name": "id",
	"paths./v3/projects/{id}/issues/{noteable_id}/notes.post.parameters[0].required": true,
	"paths./v3/projects/{id}/issues/{noteable_id}/notes.post.parameters[0].type": "string",
	"paths./v3/projects/{id}/issues/{noteable_id}/notes.post.parameters[1].description": "The ID of the noteable",
	"paths./v3/projects/{id}/issues/{noteable_id}/notes.post.parameters[1].format": "int32",
	"paths./v3/projects/{id}/issues/{noteable_id}/notes.post.parameters[1].in": "path",
	"paths./v3/projects/{id}/issues/{noteable_id}/notes.post.parameters[1].name": "noteable_id",
	"paths./v3/projects/{id}/issues/{noteable_id}/notes.post.parameters[1].required": true,
	"paths./v3/projects/{id}/issues/{noteable_id}/notes.post.parameters[1].type": "integer",
	"paths./v3/projects/{id}/issues/{noteable_id}/notes.post.parameters[2].description": "The content of a note",
	"paths./v3/projects/{id}/issues/{noteable_id}/notes.post.parameters[2].in": "formData",
	"paths./v3/projects/{id}/issues/{noteable_id}/notes.post.parameters[2].name": "body",
	"paths./v3/projects/{id}/issues/{noteable_id}/notes.post.parameters[2].required": true,
	"paths./v3/projects/{id}/issues/{noteable_id}/notes.post.parameters[2].type": "string",
	"paths./v3/projects/{id}/issues/{noteable_id}/notes.post.parameters[3].description": "The creation date of the note",
	"paths./v3/projects/{id}/issues/{noteable_id}/notes.post.parameters[3].in": "formData",
	"paths./v3/projects/{id}/issues/{noteable_id}/notes.post.parameters[3].name": "created_at",
	"paths./v3/projects/{id}/issues/{noteable_id}/notes.post.parameters[3].required": false,
	"paths./v3/projects/{id}/issues/{noteable_id}/notes.post.parameters[3].type": "string",
	"paths./v3/projects/{id}/issues/{noteable_id}/notes.post.produces.length": 1,
	"paths./v3/projects/{id}/issues/{noteable_id}/notes.post.produces[0]": "application/json",
	"paths./v3/projects/{id}/issues/{noteable_id}/notes.post.responses.201.description": "Create a new +noteable+ note",
	"paths./v3/projects/{id}/issues/{noteable_id}/notes.post.responses.201.schema.$ref": "#/definitions/Note",
	"paths./v3/projects/{id}/issues/{noteable_id}/notes.post.summary": "Create a new +noteable+ note",
	"paths./v3/projects/{id}/issues/{noteable_id}/notes.post.tags.length": 1,
	"paths./v3/projects/{id}/issues/{noteable_id}/notes.post.tags[0]": "projects",
	"paths./v3/projects/{id}/issues/{noteable_id}/notes/{note_id}.delete.description": "Delete a +noteable+ note",
	"paths./v3/projects/{id}/issues/{noteable_id}/notes/{note_id}.delete.operationId": "deleteV3ProjectsIdIssuesNoteableIdNotesNoteId",
	"paths./v3/projects/{id}/issues/{noteable_id}/notes/{note_id}.delete.parameters.length": 3,
	"paths./v3/projects/{id}/issues/{noteable_id}/notes/{note_id}.delete.parameters[0].description": "The ID of a project",
	"paths./v3/projects/{id}/issues/{noteable_id}/notes/{note_id}.delete.parameters[0].in": "path",
	"paths./v3/projects/{id}/issues/{noteable_id}/notes/{note_id}.delete.parameters[0].name": "id",
	"paths./v3/projects/{id}/issues/{noteable_id}/notes/{note_id}.delete.parameters[0].required": true,
	"paths./v3/projects/{id}/issues/{noteable_id}/notes/{note_id}.delete.parameters[0].type": "string",
	"paths./v3/projects/{id}/issues/{noteable_id}/notes/{note_id}.delete.parameters[1].description": "The ID of the noteable",
	"paths./v3/projects/{id}/issues/{noteable_id}/notes/{note_id}.delete.parameters[1].format": "int32",
	"paths./v3/projects/{id}/issues/{noteable_id}/notes/{note_id}.delete.parameters[1].in": "path",
	"paths./v3/projects/{id}/issues/{noteable_id}/notes/{note_id}.delete.parameters[1].name": "noteable_id",
	"paths./v3/projects/{id}/issues/{noteable_id}/notes/{note_id}.delete.parameters[1].required": true,
	"paths./v3/projects/{id}/issues/{noteable_id}/notes/{note_id}.delete.parameters[1].type": "integer",
	"paths./v3/projects/{id}/issues/{noteable_id}/notes/{note_id}.delete.parameters[2].description": "The ID of a note",
	"paths./v3/projects/{id}/issues/{noteable_id}/notes/{note_id}.delete.parameters[2].format": "int32",
	"paths./v3/projects/{id}/issues/{noteable_id}/notes/{note_id}.delete.parameters[2].in": "path",
	"paths./v3/projects/{id}/issues/{noteable_id}/notes/{note_id}.delete.parameters[2].name": "note_id",
	"paths./v3/projects/{id}/issues/{noteable_id}/notes/{note_id}.delete.parameters[2].required": true,
	"paths./v3/projects/{id}/issues/{noteable_id}/notes/{note_id}.delete.parameters[2].type": "integer",
	"paths./v3/projects/{id}/issues/{noteable_id}/notes/{note_id}.delete.produces.length": 1,
	"paths./v3/projects/{id}/issues/{noteable_id}/notes/{note_id}.delete.produces[0]": "application/json",
	"paths./v3/projects/{id}/issues/{noteable_id}/notes/{note_id}.delete.responses.200.description": "Delete a +noteable+ note",
	"paths./v3/projects/{id}/issues/{noteable_id}/notes/{note_id}.delete.responses.200.schema.$ref": "#/definitions/Note",
	"paths./v3/projects/{id}/issues/{noteable_id}/notes/{note_id}.delete.summary": "Delete a +noteable+ note",
	"paths./v3/projects/{id}/issues/{noteable_id}/notes/{note_id}.delete.tags.length": 1,
	"paths./v3/projects/{id}/issues/{noteable_id}/notes/{note_id}.delete.tags[0]": "projects",
	"paths./v3/projects/{id}/issues/{noteable_id}/notes/{note_id}.get.description": "Get a single +noteable+ note",
	"paths./v3/projects/{id}/issues/{noteable_id}/notes/{note_id}.get.operationId": "getV3ProjectsIdIssuesNoteableIdNotesNoteId",
	"paths./v3/projects/{id}/issues/{noteable_id}/notes/{note_id}.get.parameters.length": 3,
	"paths./v3/projects/{id}/issues/{noteable_id}/notes/{note_id}.get.parameters[0].description": "The ID of a project",
	"paths./v3/projects/{id}/issues/{noteable_id}/notes/{note_id}.get.parameters[0].in": "path",
	"paths./v3/projects/{id}/issues/{noteable_id}/notes/{note_id}.get.parameters[0].name": "id",
	"paths./v3/projects/{id}/issues/{noteable_id}/notes/{note_id}.get.parameters[0].required": true,
	"paths./v3/projects/{id}/issues/{noteable_id}/notes/{note_id}.get.parameters[0].type": "string",
	"paths./v3/projects/{id}/issues/{noteable_id}/notes/{note_id}.get.parameters[1].description": "The ID of a note",
	"paths./v3/projects/{id}/issues/{noteable_id}/notes/{note_id}.get.parameters[1].format": "int32",
	"paths./v3/projects/{id}/issues/{noteable_id}/notes/{note_id}.get.parameters[1].in": "path",
	"paths./v3/projects/{id}/issues/{noteable_id}/notes/{note_id}.get.parameters[1].name": "note_id",
	"paths./v3/projects/{id}/issues/{noteable_id}/notes/{note_id}.get.parameters[1].required": true,
	"paths./v3/projects/{id}/issues/{noteable_id}/notes/{note_id}.get.parameters[1].type": "integer",
	"paths./v3/projects/{id}/issues/{noteable_id}/notes/{note_id}.get.parameters[2].description": "The ID of the noteable",
	"paths./v3/projects/{id}/issues/{noteable_id}/notes/{note_id}.get.parameters[2].format": "int32",
	"paths./v3/projects/{id}/issues/{noteable_id}/notes/{note_id}.get.parameters[2].in": "path",
	"paths./v3/projects/{id}/issues/{noteable_id}/notes/{note_id}.get.parameters[2].name": "noteable_id",
	"paths./v3/projects/{id}/issues/{noteable_id}/notes/{note_id}.get.parameters[2].required": true,
	"paths./v3/projects/{id}/issues/{noteable_id}/notes/{note_id}.get.parameters[2].type": "integer",
	"paths./v3/projects/{id}/issues/{noteable_id}/notes/{note_id}.get.produces.length": 1,
	"paths./v3/projects/{id}/issues/{noteable_id}/notes/{note_id}.get.produces[0]": "application/json",
	"paths./v3/projects/{id}/issues/{noteable_id}/notes/{note_id}.get.responses.200.description": "Get a single +noteable+ note",
	"paths./v3/projects/{id}/issues/{noteable_id}/notes/{note_id}.get.responses.200.schema.$ref": "#/definitions/Note",
	"paths./v3/projects/{id}/issues/{noteable_id}/notes/{note_id}.get.summary": "Get a single +noteable+ note",
	"paths./v3/projects/{id}/issues/{noteable_id}/notes/{note_id}.get.tags.length": 1,
	"paths./v3/projects/{id}/issues/{noteable_id}/notes/{note_id}.get.tags[0]": "projects",
	"paths./v3/projects/{id}/issues/{noteable_id}/notes/{note_id}.put.consumes.length": 1,
	"paths./v3/projects/{id}/issues/{noteable_id}/notes/{note_id}.put.consumes[0]": "application/json",
	"paths./v3/projects/{id}/issues/{noteable_id}/notes/{note_id}.put.description": "Update an existing +noteable+ note",
	"paths./v3/projects/{id}/issues/{noteable_id}/notes/{note_id}.put.operationId": "putV3ProjectsIdIssuesNoteableIdNotesNoteId",
	"paths./v3/projects/{id}/issues/{noteable_id}/notes/{note_id}.put.parameters.length": 4,
	"paths./v3/projects/{id}/issues/{noteable_id}/notes/{note_id}.put.parameters[0].description": "The ID of a project",
	"paths./v3/projects/{id}/issues/{noteable_id}/notes/{note_id}.put.parameters[0].in": "path",
	"paths./v3/projects/{id}/issues/{noteable_id}/notes/{note_id}.put.parameters[0].name": "id",
	"paths./v3/projects/{id}/issues/{noteable_id}/notes/{note_id}.put.parameters[0].required": true,
	"paths./v3/projects/{id}/issues/{noteable_id}/notes/{note_id}.put.parameters[0].type": "string",
	"paths./v3/projects/{id}/issues/{noteable_id}/notes/{note_id}.put.parameters[1].description": "The ID of the noteable",
	"paths./v3/projects/{id}/issues/{noteable_id}/notes/{note_id}.put.parameters[1].format": "int32",
	"paths./v3/projects/{id}/issues/{noteable_id}/notes/{note_id}.put.parameters[1].in": "path",
	"paths./v3/projects/{id}/issues/{noteable_id}/notes/{note_id}.put.parameters[1].name": "noteable_id",
	"paths./v3/projects/{id}/issues/{noteable_id}/notes/{note_id}.put.parameters[1].required": true,
	"paths./v3/projects/{id}/issues/{noteable_id}/notes/{note_id}.put.parameters[1].type": "integer",
	"paths./v3/projects/{id}/issues/{noteable_id}/notes/{note_id}.put.parameters[2].description": "The ID of a note",
	"paths./v3/projects/{id}/issues/{noteable_id}/notes/{note_id}.put.parameters[2].format": "int32",
	"paths./v3/projects/{id}/issues/{noteable_id}/notes/{note_id}.put.parameters[2].in": "path",
	"paths./v3/projects/{id}/issues/{noteable_id}/notes/{note_id}.put.parameters[2].name": "note_id",
	"paths./v3/projects/{id}/issues/{noteable_id}/notes/{note_id}.put.parameters[2].required": true,
	"paths./v3/projects/{id}/issues/{noteable_id}/notes/{note_id}.put.parameters[2].type": "integer",
	"paths./v3/projects/{id}/issues/{noteable_id}/notes/{note_id}.put.parameters[3].description": "The content of a note",
	"paths./v3/projects/{id}/issues/{noteable_id}/notes/{note_id}.put.parameters[3].in": "formData",
	"paths./v3/projects/{id}/issues/{noteable_id}/notes/{note_id}.put.parameters[3].name": "body",
	"paths./v3/projects/{id}/issues/{noteable_id}/notes/{note_id}.put.parameters[3].required": true,
	"paths./v3/projects/{id}/issues/{noteable_id}/notes/{note_id}.put.parameters[3].type": "string",
	"paths./v3/projects/{id}/issues/{noteable_id}/notes/{note_id}.put.produces.length": 1,
	"paths./v3/projects/{id}/issues/{noteable_id}/notes/{note_id}.put.produces[0]": "application/json",
	"paths./v3/projects/{id}/issues/{noteable_id}/notes/{note_id}.put.responses.200.description": "Update an existing +noteable+ note",
	"paths./v3/projects/{id}/issues/{noteable_id}/notes/{note_id}.put.responses.200.schema.$ref": "#/definitions/Note",
	"paths./v3/projects/{id}/issues/{noteable_id}/notes/{note_id}.put.summary": "Update an existing +noteable+ note",
	"paths./v3/projects/{id}/issues/{noteable_id}/notes/{note_id}.put.tags.length": 1,
	"paths./v3/projects/{id}/issues/{noteable_id}/notes/{note_id}.put.tags[0]": "projects",
	"paths./v3/projects/{id}/issues/{subscribable_id}/subscription.delete.description": "Unsubscribe from a resource",
	"paths./v3/projects/{id}/issues/{subscribable_id}/subscription.delete.operationId": "deleteV3ProjectsIdIssuesSubscribableIdSubscription",
	"paths./v3/projects/{id}/issues/{subscribable_id}/subscription.delete.parameters.length": 2,
	"paths./v3/projects/{id}/issues/{subscribable_id}/subscription.delete.parameters[0].description": "The ID of a project",
	"paths./v3/projects/{id}/issues/{subscribable_id}/subscription.delete.parameters[0].in": "path",
	"paths./v3/projects/{id}/issues/{subscribable_id}/subscription.delete.parameters[0].name": "id",
	"paths./v3/projects/{id}/issues/{subscribable_id}/subscription.delete.parameters[0].required": true,
	"paths./v3/projects/{id}/issues/{subscribable_id}/subscription.delete.parameters[0].type": "string",
	"paths./v3/projects/{id}/issues/{subscribable_id}/subscription.delete.parameters[1].description": "The ID of a resource",
	"paths./v3/projects/{id}/issues/{subscribable_id}/subscription.delete.parameters[1].in": "path",
	"paths./v3/projects/{id}/issues/{subscribable_id}/subscription.delete.parameters[1].name": "subscribable_id",
	"paths./v3/projects/{id}/issues/{subscribable_id}/subscription.delete.parameters[1].required": true,
	"paths./v3/projects/{id}/issues/{subscribable_id}/subscription.delete.parameters[1].type": "string",
	"paths./v3/projects/{id}/issues/{subscribable_id}/subscription.delete.produces.length": 1,
	"paths./v3/projects/{id}/issues/{subscribable_id}/subscription.delete.produces[0]": "application/json",
	"paths./v3/projects/{id}/issues/{subscribable_id}/subscription.delete.responses.200.description": "Unsubscribe from a resource",
	"paths./v3/projects/{id}/issues/{subscribable_id}/subscription.delete.responses.200.schema.$ref": "#/definitions/Issue",
	"paths./v3/projects/{id}/issues/{subscribable_id}/subscription.delete.summary": "Unsubscribe from a resource",
	"paths./v3/projects/{id}/issues/{subscribable_id}/subscription.delete.tags.length": 1,
	"paths./v3/projects/{id}/issues/{subscribable_id}/subscription.delete.tags[0]": "projects",
	"paths./v3/projects/{id}/issues/{subscribable_id}/subscription.post.consumes.length": 1,
	"paths./v3/projects/{id}/issues/{subscribable_id}/subscription.post.consumes[0]": "application/json",
	"paths./v3/projects/{id}/issues/{subscribable_id}/subscription.post.description": "Subscribe to a resource",
	"paths./v3/projects/{id}/issues/{subscribable_id}/subscription.post.operationId": "postV3ProjectsIdIssuesSubscribableIdSubscription",
	"paths./v3/projects/{id}/issues/{subscribable_id}/subscription.post.parameters.length": 2,
	"paths./v3/projects/{id}/issues/{subscribable_id}/subscription.post.parameters[0].description": "The ID of a project",
	"paths./v3/projects/{id}/issues/{subscribable_id}/subscription.post.parameters[0].in": "path",
	"paths./v3/projects/{id}/issues/{subscribable_id}/subscription.post.parameters[0].name": "id",
	"paths./v3/projects/{id}/issues/{subscribable_id}/subscription.post.parameters[0].required": true,
	"paths./v3/projects/{id}/issues/{subscribable_id}/subscription.post.parameters[0].type": "string",
	"paths./v3/projects/{id}/issues/{subscribable_id}/subscription.post.parameters[1].description": "The ID of a resource",
	"paths./v3/projects/{id}/issues/{subscribable_id}/subscription.post.parameters[1].in": "path",
	"paths./v3/projects/{id}/issues/{subscribable_id}/subscription.post.parameters[1].name": "subscribable_id",
	"paths./v3/projects/{id}/issues/{subscribable_id}/subscription.post.parameters[1].required": true,
	"paths./v3/projects/{id}/issues/{subscribable_id}/subscription.post.parameters[1].type": "string",
	"paths./v3/projects/{id}/issues/{subscribable_id}/subscription.post.produces.length": 1,
	"paths./v3/projects/{id}/issues/{subscribable_id}/subscription.post.produces[0]": "application/json",
	"paths./v3/projects/{id}/issues/{subscribable_id}/subscription.post.responses.201.description": "Subscribe to a resource",
	"paths./v3/projects/{id}/issues/{subscribable_id}/subscription.post.responses.201.schema.$ref": "#/definitions/Issue",
	"paths./v3/projects/{id}/issues/{subscribable_id}/subscription.post.summary": "Subscribe to a resource",
	"paths./v3/projects/{id}/issues/{subscribable_id}/subscription.post.tags.length": 1,
	"paths./v3/projects/{id}/issues/{subscribable_id}/subscription.post.tags[0]": "projects",
	"paths./v3/projects/{id}/keys.get.description": "Get a specific project's deploy keys",
	"paths./v3/projects/{id}/keys.get.operationId": "getV3ProjectsIdKeys",
	"paths./v3/projects/{id}/keys.get.parameters.length": 1,
	"paths./v3/projects/{id}/keys.get.parameters[0].description": "The ID of the project",
	"paths./v3/projects/{id}/keys.get.parameters[0].in": "path",
	"paths./v3/projects/{id}/keys.get.parameters[0].name": "id",
	"paths./v3/projects/{id}/keys.get.parameters[0].required": true,
	"paths./v3/projects/{id}/keys.get.parameters[0].type": "string",
	"paths./v3/projects/{id}/keys.get.produces.length": 1,
	"paths./v3/projects/{id}/keys.get.produces[0]": "application/json",
	"paths./v3/projects/{id}/keys.get.responses.200.description": "Get a specific project's deploy keys",
	"paths./v3/projects/{id}/keys.get.responses.200.schema.$ref": "#/definitions/SSHKey",
	"paths./v3/projects/{id}/keys.get.summary": "Get a specific project's deploy keys",
	"paths./v3/projects/{id}/keys.get.tags.length": 1,
	"paths./v3/projects/{id}/keys.get.tags[0]": "projects",
	"paths./v3/projects/{id}/keys.post.consumes.length": 1,
	"paths./v3/projects/{id}/keys.post.consumes[0]": "application/json",
	"paths./v3/projects/{id}/keys.post.description": "Add new deploy key to currently authenticated user",
	"paths./v3/projects/{id}/keys.post.operationId": "postV3ProjectsIdKeys",
	"paths./v3/projects/{id}/keys.post.parameters.length": 3,
	"paths./v3/projects/{id}/keys.post.parameters[0].description": "The ID of the project",
	"paths./v3/projects/{id}/keys.post.parameters[0].in": "path",
	"paths./v3/projects/{id}/keys.post.parameters[0].name": "id",
	"paths./v3/projects/{id}/keys.post.parameters[0].required": true,
	"paths./v3/projects/{id}/keys.post.parameters[0].type": "string",
	"paths./v3/projects/{id}/keys.post.parameters[1].description": "The new deploy key",
	"paths./v3/projects/{id}/keys.post.parameters[1].in": "formData",
	"paths./v3/projects/{id}/keys.post.parameters[1].name": "key",
	"paths./v3/projects/{id}/keys.post.parameters[1].required": true,
	"paths./v3/projects/{id}/keys.post.parameters[1].type": "string",
	"paths./v3/projects/{id}/keys.post.parameters[2].description": "The name of the deploy key",
	"paths./v3/projects/{id}/keys.post.parameters[2].in": "formData",
	"paths./v3/projects/{id}/keys.post.parameters[2].name": "title",
	"paths./v3/projects/{id}/keys.post.parameters[2].required": true,
	"paths./v3/projects/{id}/keys.post.parameters[2].type": "string",
	"paths./v3/projects/{id}/keys.post.produces.length": 1,
	"paths./v3/projects/{id}/keys.post.produces[0]": "application/json",
	"paths./v3/projects/{id}/keys.post.responses.201.description": "Add new deploy key to currently authenticated user",
	"paths./v3/projects/{id}/keys.post.responses.201.schema.$ref": "#/definitions/SSHKey",
	"paths./v3/projects/{id}/keys.post.summary": "Add new deploy key to currently authenticated user",
	"paths./v3/projects/{id}/keys.post.tags.length": 1,
	"paths./v3/projects/{id}/keys.post.tags[0]": "projects",
	"paths./v3/projects/{id}/keys/{key_id}.delete.description": "Delete deploy key for a project",
	"paths./v3/projects/{id}/keys/{key_id}.delete.operationId": "deleteV3ProjectsIdKeysKeyId",
	"paths./v3/projects/{id}/keys/{key_id}.delete.parameters.length": 2,
	"paths./v3/projects/{id}/keys/{key_id}.delete.parameters[0].description": "The ID of the project",
	"paths./v3/projects/{id}/keys/{key_id}.delete.parameters[0].in": "path",
	"paths./v3/projects/{id}/keys/{key_id}.delete.parameters[0].name": "id",
	"paths./v3/projects/{id}/keys/{key_id}.delete.parameters[0].required": true,
	"paths./v3/projects/{id}/keys/{key_id}.delete.parameters[0].type": "string",
	"paths./v3/projects/{id}/keys/{key_id}.delete.parameters[1].description": "The ID of the deploy key",
	"paths./v3/projects/{id}/keys/{key_id}.delete.parameters[1].format": "int32",
	"paths./v3/projects/{id}/keys/{key_id}.delete.parameters[1].in": "path",
	"paths./v3/projects/{id}/keys/{key_id}.delete.parameters[1].name": "key_id",
	"paths./v3/projects/{id}/keys/{key_id}.delete.parameters[1].required": true,
	"paths./v3/projects/{id}/keys/{key_id}.delete.parameters[1].type": "integer",
	"paths./v3/projects/{id}/keys/{key_id}.delete.produces.length": 1,
	"paths./v3/projects/{id}/keys/{key_id}.delete.produces[0]": "application/json",
	"paths./v3/projects/{id}/keys/{key_id}.delete.responses.200.description": "Delete deploy key for a project",
	"paths./v3/projects/{id}/keys/{key_id}.delete.responses.200.schema.$ref": "#/definitions/SSHKey",
	"paths./v3/projects/{id}/keys/{key_id}.delete.summary": "Delete deploy key for a project",
	"paths./v3/projects/{id}/keys/{key_id}.delete.tags.length": 1,
	"paths./v3/projects/{id}/keys/{key_id}.delete.tags[0]": "projects",
	"paths./v3/projects/{id}/keys/{key_id}.get.description": "Get single deploy key",
	"paths./v3/projects/{id}/keys/{key_id}.get.operationId": "getV3ProjectsIdKeysKeyId",
	"paths./v3/projects/{id}/keys/{key_id}.get.parameters.length": 2,
	"paths./v3/projects/{id}/keys/{key_id}.get.parameters[0].description": "The ID of the project",
	"paths./v3/projects/{id}/keys/{key_id}.get.parameters[0].in": "path",
	"paths./v3/projects/{id}/keys/{key_id}.get.parameters[0].name": "id",
	"paths./v3/projects/{id}/keys/{key_id}.get.parameters[0].required": true,
	"paths./v3/projects/{id}/keys/{key_id}.get.parameters[0].type": "string",
	"paths./v3/projects/{id}/keys/{key_id}.get.parameters[1].description": "The ID of the deploy key",
	"paths./v3/projects/{id}/keys/{key_id}.get.parameters[1].format": "int32",
	"paths./v3/projects/{id}/keys/{key_id}.get.parameters[1].in": "path",
	"paths./v3/projects/{id}/keys/{key_id}.get.parameters[1].name": "key_id",
	"paths./v3/projects/{id}/keys/{key_id}.get.parameters[1].required": true,
	"paths./v3/projects/{id}/keys/{key_id}.get.parameters[1].type": "integer",
	"paths./v3/projects/{id}/keys/{key_id}.get.produces.length": 1,
	"paths./v3/projects/{id}/keys/{key_id}.get.produces[0]": "application/json",
	"paths./v3/projects/{id}/keys/{key_id}.get.responses.200.description": "Get single deploy key",
	"paths./v3/projects/{id}/keys/{key_id}.get.responses.200.schema.$ref": "#/definitions/SSHKey",
	"paths./v3/projects/{id}/keys/{key_id}.get.summary": "Get single deploy key",
	"paths./v3/projects/{id}/keys/{key_id}.get.tags.length": 1,
	"paths./v3/projects/{id}/keys/{key_id}.get.tags[0]": "projects",
	"paths./v3/projects/{id}/keys/{key_id}/disable.delete.description": "This feature was added in GitLab 8.11",
	"paths./v3/projects/{id}/keys/{key_id}/disable.delete.operationId": "deleteV3ProjectsIdKeysKeyIdDisable",
	"paths./v3/projects/{id}/keys/{key_id}/disable.delete.parameters.length": 2,
	"paths./v3/projects/{id}/keys/{key_id}/disable.delete.parameters[0].description": "The ID of the project",
	"paths./v3/projects/{id}/keys/{key_id}/disable.delete.parameters[0].in": "path",
	"paths./v3/projects/{id}/keys/{key_id}/disable.delete.parameters[0].name": "id",
	"paths./v3/projects/{id}/keys/{key_id}/disable.delete.parameters[0].required": true,
	"paths./v3/projects/{id}/keys/{key_id}/disable.delete.parameters[0].type": "string",
	"paths./v3/projects/{id}/keys/{key_id}/disable.delete.parameters[1].description": "The ID of the deploy key",
	"paths./v3/projects/{id}/keys/{key_id}/disable.delete.parameters[1].format": "int32",
	"paths./v3/projects/{id}/keys/{key_id}/disable.delete.parameters[1].in": "path",
	"paths./v3/projects/{id}/keys/{key_id}/disable.delete.parameters[1].name": "key_id",
	"paths./v3/projects/{id}/keys/{key_id}/disable.delete.parameters[1].required": true,
	"paths./v3/projects/{id}/keys/{key_id}/disable.delete.parameters[1].type": "integer",
	"paths./v3/projects/{id}/keys/{key_id}/disable.delete.produces.length": 1,
	"paths./v3/projects/{id}/keys/{key_id}/disable.delete.produces[0]": "application/json",
	"paths./v3/projects/{id}/keys/{key_id}/disable.delete.responses.200.description": "Disable a deploy key for a project",
	"paths./v3/projects/{id}/keys/{key_id}/disable.delete.responses.200.schema.$ref": "#/definitions/SSHKey",
	"paths./v3/projects/{id}/keys/{key_id}/disable.delete.summary": "Disable a deploy key for a project",
	"paths./v3/projects/{id}/keys/{key_id}/disable.delete.tags.length": 1,
	"paths./v3/projects/{id}/keys/{key_id}/disable.delete.tags[0]": "projects",
	"paths./v3/projects/{id}/keys/{key_id}/enable.post.consumes.length": 1,
	"paths./v3/projects/{id}/keys/{key_id}/enable.post.consumes[0]": "application/json",
	"paths./v3/projects/{id}/keys/{key_id}/enable.post.description": "This feature was added in GitLab 8.11",
	"paths./v3/projects/{id}/keys/{key_id}/enable.post.operationId": "postV3ProjectsIdKeysKeyIdEnable",
	"paths./v3/projects/{id}/keys/{key_id}/enable.post.parameters.length": 2,
	"paths./v3/projects/{id}/keys/{key_id}/enable.post.parameters[0].description": "The ID of the project",
	"paths./v3/projects/{id}/keys/{key_id}/enable.post.parameters[0].in": "path",
	"paths./v3/projects/{id}/keys/{key_id}/enable.post.parameters[0].name": "id",
	"paths./v3/projects/{id}/keys/{key_id}/enable.post.parameters[0].required": true,
	"paths./v3/projects/{id}/keys/{key_id}/enable.post.parameters[0].type": "string",
	"paths./v3/projects/{id}/keys/{key_id}/enable.post.parameters[1].description": "The ID of the deploy key",
	"paths./v3/projects/{id}/keys/{key_id}/enable.post.parameters[1].format": "int32",
	"paths./v3/projects/{id}/keys/{key_id}/enable.post.parameters[1].in": "path",
	"paths./v3/projects/{id}/keys/{key_id}/enable.post.parameters[1].name": "key_id",
	"paths./v3/projects/{id}/keys/{key_id}/enable.post.parameters[1].required": true,
	"paths./v3/projects/{id}/keys/{key_id}/enable.post.parameters[1].type": "integer",
	"paths./v3/projects/{id}/keys/{key_id}/enable.post.produces.length": 1,
	"paths./v3/projects/{id}/keys/{key_id}/enable.post.produces[0]": "application/json",
	"paths./v3/projects/{id}/keys/{key_id}/enable.post.responses.201.description": "Enable a deploy key for a project",
	"paths./v3/projects/{id}/keys/{key_id}/enable.post.responses.201.schema.$ref": "#/definitions/SSHKey",
	"paths./v3/projects/{id}/keys/{key_id}/enable.post.summary": "Enable a deploy key for a project",
	"paths./v3/projects/{id}/keys/{key_id}/enable.post.tags.length": 1,
	"paths./v3/projects/{id}/keys/{key_id}/enable.post.tags[0]": "projects",
	"paths./v3/projects/{id}/labels.delete.description": "Delete an existing label",
	"paths./v3/projects/{id}/labels.delete.operationId": "deleteV3ProjectsIdLabels",
	"paths./v3/projects/{id}/labels.delete.parameters.length": 2,
	"paths./v3/projects/{id}/labels.delete.parameters[0].description": "The ID of a project",
	"paths./v3/projects/{id}/labels.delete.parameters[0].in": "path",
	"paths./v3/projects/{id}/labels.delete.parameters[0].name": "id",
	"paths./v3/projects/{id}/labels.delete.parameters[0].required": true,
	"paths./v3/projects/{id}/labels.delete.parameters[0].type": "string",
	"paths./v3/projects/{id}/labels.delete.parameters[1].description": "The name of the label to be deleted",
	"paths./v3/projects/{id}/labels.delete.parameters[1].in": "query",
	"paths./v3/projects/{id}/labels.delete.parameters[1].name": "name",
	"paths./v3/projects/{id}/labels.delete.parameters[1].required": true,
	"paths./v3/projects/{id}/labels.delete.parameters[1].type": "string",
	"paths./v3/projects/{id}/labels.delete.produces.length": 1,
	"paths./v3/projects/{id}/labels.delete.produces[0]": "application/json",
	"paths./v3/projects/{id}/labels.delete.responses.200.description": "Delete an existing label",
	"paths./v3/projects/{id}/labels.delete.responses.200.schema.$ref": "#/definitions/Label",
	"paths./v3/projects/{id}/labels.delete.summary": "Delete an existing label",
	"paths./v3/projects/{id}/labels.delete.tags.length": 1,
	"paths./v3/projects/{id}/labels.delete.tags[0]": "projects",
	"paths./v3/projects/{id}/labels.get.description": "Get all labels of the project",
	"paths./v3/projects/{id}/labels.get.operationId": "getV3ProjectsIdLabels",
	"paths./v3/projects/{id}/labels.get.parameters.length": 1,
	"paths./v3/projects/{id}/labels.get.parameters[0].description": "The ID of a project",
	"paths./v3/projects/{id}/labels.get.parameters[0].in": "path",
	"paths./v3/projects/{id}/labels.get.parameters[0].name": "id",
	"paths./v3/projects/{id}/labels.get.parameters[0].required": true,
	"paths./v3/projects/{id}/labels.get.parameters[0].type": "string",
	"paths./v3/projects/{id}/labels.get.produces.length": 1,
	"paths./v3/projects/{id}/labels.get.produces[0]": "application/json",
	"paths./v3/projects/{id}/labels.get.responses.200.description": "Get all labels of the project",
	"paths./v3/projects/{id}/labels.get.responses.200.schema.$ref": "#/definitions/Label",
	"paths./v3/projects/{id}/labels.get.summary": "Get all labels of the project",
	"paths./v3/projects/{id}/labels.get.tags.length": 1,
	"paths./v3/projects/{id}/labels.get.tags[0]": "projects",
	"paths./v3/projects/{id}/labels.post.consumes.length": 1,
	"paths./v3/projects/{id}/labels.post.consumes[0]": "application/json",
	"paths./v3/projects/{id}/labels.post.description": "Create a new label",
	"paths./v3/projects/{id}/labels.post.operationId": "postV3ProjectsIdLabels",
	"paths./v3/projects/{id}/labels.post.parameters.length": 5,
	"paths./v3/projects/{id}/labels.post.parameters[0].description": "The ID of a project",
	"paths./v3/projects/{id}/labels.post.parameters[0].in": "path",
	"paths./v3/projects/{id}/labels.post.parameters[0].name": "id",
	"paths./v3/projects/{id}/labels.post.parameters[0].required": true,
	"paths./v3/projects/{id}/labels.post.parameters[0].type": "string",
	"paths./v3/projects/{id}/labels.post.parameters[1].description": "The name of the label to be created",
	"paths./v3/projects/{id}/labels.post.parameters[1].in": "formData",
	"paths./v3/projects/{id}/labels.post.parameters[1].name": "name",
	"paths./v3/projects/{id}/labels.post.parameters[1].required": true,
	"paths./v3/projects/{id}/labels.post.parameters[1].type": "string",
	"paths./v3/projects/{id}/labels.post.parameters[2].description": "The color of the label given in 6-digit hex notation with leading '#' sign (e.g. #FFAABB)",
	"paths./v3/projects/{id}/labels.post.parameters[2].in": "formData",
	"paths./v3/projects/{id}/labels.post.parameters[2].name": "color",
	"paths./v3/projects/{id}/labels.post.parameters[2].required": true,
	"paths./v3/projects/{id}/labels.post.parameters[2].type": "string",
	"paths./v3/projects/{id}/labels.post.parameters[3].description": "The description of label to be created",
	"paths./v3/projects/{id}/labels.post.parameters[3].in": "formData",
	"paths./v3/projects/{id}/labels.post.parameters[3].name": "description",
	"paths./v3/projects/{id}/labels.post.parameters[3].required": false,
	"paths./v3/projects/{id}/labels.post.parameters[3].type": "string",
	"paths./v3/projects/{id}/labels.post.parameters[4].description": "The priority of the label",
	"paths./v3/projects/{id}/labels.post.parameters[4].format": "int32",
	"paths./v3/projects/{id}/labels.post.parameters[4].in": "formData",
	"paths./v3/projects/{id}/labels.post.parameters[4].name": "priority",
	"paths./v3/projects/{id}/labels.post.parameters[4].required": false,
	"paths./v3/projects/{id}/labels.post.parameters[4].type": "integer",
	"paths./v3/projects/{id}/labels.post.produces.length": 1,
	"paths./v3/projects/{id}/labels.post.produces[0]": "application/json",
	"paths./v3/projects/{id}/labels.post.responses.201.description": "Create a new label",
	"paths./v3/projects/{id}/labels.post.responses.201.schema.$ref": "#/definitions/Label",
	"paths./v3/projects/{id}/labels.post.summary": "Create a new label",
	"paths./v3/projects/{id}/labels.post.tags.length": 1,
	"paths./v3/projects/{id}/labels.post.tags[0]": "projects",
	"paths./v3/projects/{id}/labels.put.consumes.length": 1,
	"paths./v3/projects/{id}/labels.put.consumes[0]": "application/json",
	"paths./v3/projects/{id}/labels.put.description": "Update an existing label. At least one optional parameter is required.",
	"paths./v3/projects/{id}/labels.put.operationId": "putV3ProjectsIdLabels",
	"paths./v3/projects/{id}/labels.put.parameters.length": 6,
	"paths./v3/projects/{id}/labels.put.parameters[0].description": "The ID of a project",
	"paths./v3/projects/{id}/labels.put.parameters[0].in": "path",
	"paths./v3/projects/{id}/labels.put.parameters[0].name": "id",
	"paths./v3/projects/{id}/labels.put.parameters[0].required": true,
	"paths./v3/projects/{id}/labels.put.parameters[0].type": "string",
	"paths./v3/projects/{id}/labels.put.parameters[1].description": "The name of the label to be updated",
	"paths./v3/projects/{id}/labels.put.parameters[1].in": "formData",
	"paths./v3/projects/{id}/labels.put.parameters[1].name": "name",
	"paths./v3/projects/{id}/labels.put.parameters[1].required": true,
	"paths./v3/projects/{id}/labels.put.parameters[1].type": "string",
	"paths./v3/projects/{id}/labels.put.parameters[2].description": "The new name of the label",
	"paths./v3/projects/{id}/labels.put.parameters[2].in": "formData",
	"paths./v3/projects/{id}/labels.put.parameters[2].name": "new_name",
	"paths./v3/projects/{id}/labels.put.parameters[2].required": false,
	"paths./v3/projects/{id}/labels.put.parameters[2].type": "string",
	"paths./v3/projects/{id}/labels.put.parameters[3].description": "The new color of the label given in 6-digit hex notation with leading '#' sign (e.g. #FFAABB)",
	"paths./v3/projects/{id}/labels.put.parameters[3].in": "formData",
	"paths./v3/projects/{id}/labels.put.parameters[3].name": "color",
	"paths./v3/projects/{id}/labels.put.parameters[3].required": false,
	"paths./v3/projects/{id}/labels.put.parameters[3].type": "string",
	"paths./v3/projects/{id}/labels.put.parameters[4].description": "The new description of label",
	"paths./v3/projects/{id}/labels.put.parameters[4].in": "formData",
	"paths./v3/projects/{id}/labels.put.parameters[4].name": "description",
	"paths./v3/projects/{id}/labels.put.parameters[4].required": false,
	"paths./v3/projects/{id}/labels.put.parameters[4].type": "string",
	"paths./v3/projects/{id}/labels.put.parameters[5].description": "The priority of the label",
	"paths./v3/projects/{id}/labels.put.parameters[5].format": "int32",
	"paths./v3/projects/{id}/labels.put.parameters[5].in": "formData",
	"paths./v3/projects/{id}/labels.put.parameters[5].name": "priority",
	"paths./v3/projects/{id}/labels.put.parameters[5].required": false,
	"paths./v3/projects/{id}/labels.put.parameters[5].type": "integer",
	"paths./v3/projects/{id}/labels.put.produces.length": 1,
	"paths./v3/projects/{id}/labels.put.produces[0]": "application/json",
	"paths./v3/projects/{id}/labels.put.responses.200.description": "Update an existing label. At least one optional parameter is required.",
	"paths./v3/projects/{id}/labels.put.responses.200.schema.$ref": "#/definitions/Label",
	"paths./v3/projects/{id}/labels.put.summary": "Update an existing label. At least one optional parameter is required.",
	"paths./v3/projects/{id}/labels.put.tags.length": 1,
	"paths./v3/projects/{id}/labels.put.tags[0]": "projects",
	"paths./v3/projects/{id}/labels/{subscribable_id}/subscription.delete.description": "Unsubscribe from a resource",
	"paths./v3/projects/{id}/labels/{subscribable_id}/subscription.delete.operationId": "deleteV3ProjectsIdLabelsSubscribableIdSubscription",
	"paths./v3/projects/{id}/labels/{subscribable_id}/subscription.delete.parameters.length": 2,
	"paths./v3/projects/{id}/labels/{subscribable_id}/subscription.delete.parameters[0].description": "The ID of a project",
	"paths./v3/projects/{id}/labels/{subscribable_id}/subscription.delete.parameters[0].in": "path",
	"paths./v3/projects/{id}/labels/{subscribable_id}/subscription.delete.parameters[0].name": "id",
	"paths./v3/projects/{id}/labels/{subscribable_id}/subscription.delete.parameters[0].required": true,
	"paths./v3/projects/{id}/labels/{subscribable_id}/subscription.delete.parameters[0].type": "string",
	"paths./v3/projects/{id}/labels/{subscribable_id}/subscription.delete.parameters[1].description": "The ID of a resource",
	"paths./v3/projects/{id}/labels/{subscribable_id}/subscription.delete.parameters[1].in": "path",
	"paths./v3/projects/{id}/labels/{subscribable_id}/subscription.delete.parameters[1].name": "subscribable_id",
	"paths./v3/projects/{id}/labels/{subscribable_id}/subscription.delete.parameters[1].required": true,
	"paths./v3/projects/{id}/labels/{subscribable_id}/subscription.delete.parameters[1].type": "string",
	"paths./v3/projects/{id}/labels/{subscribable_id}/subscription.delete.produces.length": 1,
	"paths./v3/projects/{id}/labels/{subscribable_id}/subscription.delete.produces[0]": "application/json",
	"paths./v3/projects/{id}/labels/{subscribable_id}/subscription.delete.responses.200.description": "Unsubscribe from a resource",
	"paths./v3/projects/{id}/labels/{subscribable_id}/subscription.delete.responses.200.schema.$ref": "#/definitions/Label",
	"paths./v3/projects/{id}/labels/{subscribable_id}/subscription.delete.summary": "Unsubscribe from a resource",
	"paths./v3/projects/{id}/labels/{subscribable_id}/subscription.delete.tags.length": 1,
	"paths./v3/projects/{id}/labels/{subscribable_id}/subscription.delete.tags[0]": "projects",
	"paths./v3/projects/{id}/labels/{subscribable_id}/subscription.post.consumes.length": 1,
	"paths./v3/projects/{id}/labels/{subscribable_id}/subscription.post.consumes[0]": "application/json",
	"paths./v3/projects/{id}/labels/{subscribable_id}/subscription.post.description": "Subscribe to a resource",
	"paths./v3/projects/{id}/labels/{subscribable_id}/subscription.post.operationId": "postV3ProjectsIdLabelsSubscribableIdSubscription",
	"paths./v3/projects/{id}/labels/{subscribable_id}/subscription.post.parameters.length": 2,
	"paths./v3/projects/{id}/labels/{subscribable_id}/subscription.post.parameters[0].description": "The ID of a project",
	"paths./v3/projects/{id}/labels/{subscribable_id}/subscription.post.parameters[0].in": "path",
	"paths./v3/projects/{id}/labels/{subscribable_id}/subscription.post.parameters[0].name": "id",
	"paths./v3/projects/{id}/labels/{subscribable_id}/subscription.post.parameters[0].required": true,
	"paths./v3/projects/{id}/labels/{subscribable_id}/subscription.post.parameters[0].type": "string",
	"paths./v3/projects/{id}/labels/{subscribable_id}/subscription.post.parameters[1].description": "The ID of a resource",
	"paths./v3/projects/{id}/labels/{subscribable_id}/subscription.post.parameters[1].in": "path",
	"paths./v3/projects/{id}/labels/{subscribable_id}/subscription.post.parameters[1].name": "subscribable_id",
	"paths./v3/projects/{id}/labels/{subscribable_id}/subscription.post.parameters[1].required": true,
	"paths./v3/projects/{id}/labels/{subscribable_id}/subscription.post.parameters[1].type": "string",
	"paths./v3/projects/{id}/labels/{subscribable_id}/subscription.post.produces.length": 1,
	"paths./v3/projects/{id}/labels/{subscribable_id}/subscription.post.produces[0]": "application/json",
	"paths./v3/projects/{id}/labels/{subscribable_id}/subscription.post.responses.201.description": "Subscribe to a resource",
	"paths./v3/projects/{id}/labels/{subscribable_id}/subscription.post.responses.201.schema.$ref": "#/definitions/Label",
	"paths./v3/projects/{id}/labels/{subscribable_id}/subscription.post.summary": "Subscribe to a resource",
	"paths./v3/projects/{id}/labels/{subscribable_id}/subscription.post.tags.length": 1,
	"paths./v3/projects/{id}/labels/{subscribable_id}/subscription.post.tags[0]": "projects",
	"paths./v3/projects/{id}/members.get.description": "Gets a list of group or project members viewable by the authenticated user.",
	"paths./v3/projects/{id}/members.get.operationId": "getV3ProjectsIdMembers",
	"paths./v3/projects/{id}/members.get.parameters.length": 4,
	"paths./v3/projects/{id}/members.get.parameters[0].description": "The project ID",
	"paths./v3/projects/{id}/members.get.parameters[0].in": "path",
	"paths./v3/projects/{id}/members.get.parameters[0].name": "id",
	"paths./v3/projects/{id}/members.get.parameters[0].required": true,
	"paths./v3/projects/{id}/members.get.parameters[0].type": "string",
	"paths./v3/projects/{id}/members.get.parameters[1].description": "A query string to search for members",
	"paths./v3/projects/{id}/members.get.parameters[1].in": "query",
	"paths./v3/projects/{id}/members.get.parameters[1].name": "query",
	"paths./v3/projects/{id}/members.get.parameters[1].required": false,
	"paths./v3/projects/{id}/members.get.parameters[1].type": "string",
	"paths./v3/projects/{id}/members.get.parameters[2].description": "Current page number",
	"paths./v3/projects/{id}/members.get.parameters[2].format": "int32",
	"paths./v3/projects/{id}/members.get.parameters[2].in": "query",
	"paths./v3/projects/{id}/members.get.parameters[2].name": "page",
	"paths./v3/projects/{id}/members.get.parameters[2].required": false,
	"paths./v3/projects/{id}/members.get.parameters[2].type": "integer",
	"paths./v3/projects/{id}/members.get.parameters[3].description": "Number of items per page",
	"paths./v3/projects/{id}/members.get.parameters[3].format": "int32",
	"paths./v3/projects/{id}/members.get.parameters[3].in": "query",
	"paths./v3/projects/{id}/members.get.parameters[3].name": "per_page",
	"paths./v3/projects/{id}/members.get.parameters[3].required": false,
	"paths./v3/projects/{id}/members.get.parameters[3].type": "integer",
	"paths./v3/projects/{id}/members.get.produces.length": 1,
	"paths./v3/projects/{id}/members.get.produces[0]": "application/json",
	"paths./v3/projects/{id}/members.get.responses.200.description": "Gets a list of group or project members viewable by the authenticated user.",
	"paths./v3/projects/{id}/members.get.responses.200.schema.$ref": "#/definitions/Member",
	"paths./v3/projects/{id}/members.get.summary": "Gets a list of group or project members viewable by the authenticated user.",
	"paths./v3/projects/{id}/members.get.tags.length": 1,
	"paths./v3/projects/{id}/members.get.tags[0]": "projects",
	"paths./v3/projects/{id}/members.post.consumes.length": 1,
	"paths./v3/projects/{id}/members.post.consumes[0]": "application/json",
	"paths./v3/projects/{id}/members.post.description": "Adds a member to a group or project.",
	"paths./v3/projects/{id}/members.post.operationId": "postV3ProjectsIdMembers",
	"paths./v3/projects/{id}/members.post.parameters.length": 4,
	"paths./v3/projects/{id}/members.post.parameters[0].description": "The project ID",
	"paths./v3/projects/{id}/members.post.parameters[0].in": "path",
	"paths./v3/projects/{id}/members.post.parameters[0].name": "id",
	"paths./v3/projects/{id}/members.post.parameters[0].required": true,
	"paths./v3/projects/{id}/members.post.parameters[0].type": "string",
	"paths./v3/projects/{id}/members.post.parameters[1].description": "The user ID of the new member",
	"paths./v3/projects/{id}/members.post.parameters[1].format": "int32",
	"paths./v3/projects/{id}/members.post.parameters[1].in": "formData",
	"paths./v3/projects/{id}/members.post.parameters[1].name": "user_id",
	"paths./v3/projects/{id}/members.post.parameters[1].required": true,
	"paths./v3/projects/{id}/members.post.parameters[1].type": "integer",
	"paths./v3/projects/{id}/members.post.parameters[2].description": "A valid access level (defaults: `30`, developer access level)",
	"paths./v3/projects/{id}/members.post.parameters[2].format": "int32",
	"paths./v3/projects/{id}/members.post.parameters[2].in": "formData",
	"paths./v3/projects/{id}/members.post.parameters[2].name": "access_level",
	"paths./v3/projects/{id}/members.post.parameters[2].required": true,
	"paths./v3/projects/{id}/members.post.parameters[2].type": "integer",
	"paths./v3/projects/{id}/members.post.parameters[3].description": "Date string in the format YEAR-MONTH-DAY",
	"paths./v3/projects/{id}/members.post.parameters[3].format": "date-time",
	"paths./v3/projects/{id}/members.post.parameters[3].in": "formData",
	"paths./v3/projects/{id}/members.post.parameters[3].name": "expires_at",
	"paths./v3/projects/{id}/members.post.parameters[3].required": false,
	"paths./v3/projects/{id}/members.post.parameters[3].type": "string",
	"paths./v3/projects/{id}/members.post.produces.length": 1,
	"paths./v3/projects/{id}/members.post.produces[0]": "application/json",
	"paths./v3/projects/{id}/members.post.responses.201.description": "Adds a member to a group or project.",
	"paths./v3/projects/{id}/members.post.responses.201.schema.$ref": "#/definitions/Member",
	"paths./v3/projects/{id}/members.post.summary": "Adds a member to a group or project.",
	"paths./v3/projects/{id}/members.post.tags.length": 1,
	"paths./v3/projects/{id}/members.post.tags[0]": "projects",
	"paths./v3/projects/{id}/members/{user_id}.delete.description": "Removes a user from a group or project.",
	"paths./v3/projects/{id}/members/{user_id}.delete.operationId": "deleteV3ProjectsIdMembersUserId",
	"paths./v3/projects/{id}/members/{user_id}.delete.parameters.length": 2,
	"paths./v3/projects/{id}/members/{user_id}.delete.parameters[0].description": "The project ID",
	"paths./v3/projects/{id}/members/{user_id}.delete.parameters[0].in": "path",
	"paths./v3/projects/{id}/members/{user_id}.delete.parameters[0].name": "id",
	"paths./v3/projects/{id}/members/{user_id}.delete.parameters[0].required": true,
	"paths./v3/projects/{id}/members/{user_id}.delete.parameters[0].type": "string",
	"paths./v3/projects/{id}/members/{user_id}.delete.parameters[1].description": "The user ID of the member",
	"paths./v3/projects/{id}/members/{user_id}.delete.parameters[1].format": "int32",
	"paths./v3/projects/{id}/members/{user_id}.delete.parameters[1].in": "path",
	"paths./v3/projects/{id}/members/{user_id}.delete.parameters[1].name": "user_id",
	"paths./v3/projects/{id}/members/{user_id}.delete.parameters[1].required": true,
	"paths./v3/projects/{id}/members/{user_id}.delete.parameters[1].type": "integer",
	"paths./v3/projects/{id}/members/{user_id}.delete.produces.length": 1,
	"paths./v3/projects/{id}/members/{user_id}.delete.produces[0]": "application/json",
	"paths./v3/projects/{id}/members/{user_id}.delete.responses.204.description": "Removes a user from a group or project.",
	"paths./v3/projects/{id}/members/{user_id}.delete.summary": "Removes a user from a group or project.",
	"paths./v3/projects/{id}/members/{user_id}.delete.tags.length": 1,
	"paths./v3/projects/{id}/members/{user_id}.delete.tags[0]": "projects",
	"paths./v3/projects/{id}/members/{user_id}.get.description": "Gets a member of a group or project.",
	"paths./v3/projects/{id}/members/{user_id}.get.operationId": "getV3ProjectsIdMembersUserId",
	"paths./v3/projects/{id}/members/{user_id}.get.parameters.length": 2,
	"paths./v3/projects/{id}/members/{user_id}.get.parameters[0].description": "The project ID",
	"paths./v3/projects/{id}/members/{user_id}.get.parameters[0].in": "path",
	"paths./v3/projects/{id}/members/{user_id}.get.parameters[0].name": "id",
	"paths./v3/projects/{id}/members/{user_id}.get.parameters[0].required": true,
	"paths./v3/projects/{id}/members/{user_id}.get.parameters[0].type": "string",
	"paths./v3/projects/{id}/members/{user_id}.get.parameters[1].description": "The user ID of the member",
	"paths./v3/projects/{id}/members/{user_id}.get.parameters[1].format": "int32",
	"paths./v3/projects/{id}/members/{user_id}.get.parameters[1].in": "path",
	"paths./v3/projects/{id}/members/{user_id}.get.parameters[1].name": "user_id",
	"paths./v3/projects/{id}/members/{user_id}.get.parameters[1].required": true,
	"paths./v3/projects/{id}/members/{user_id}.get.parameters[1].type": "integer",
	"paths./v3/projects/{id}/members/{user_id}.get.produces.length": 1,
	"paths./v3/projects/{id}/members/{user_id}.get.produces[0]": "application/json",
	"paths./v3/projects/{id}/members/{user_id}.get.responses.200.description": "Gets a member of a group or project.",
	"paths./v3/projects/{id}/members/{user_id}.get.responses.200.schema.$ref": "#/definitions/Member",
	"paths./v3/projects/{id}/members/{user_id}.get.summary": "Gets a member of a group or project.",
	"paths./v3/projects/{id}/members/{user_id}.get.tags.length": 1,
	"paths./v3/projects/{id}/members/{user_id}.get.tags[0]": "projects",
	"paths./v3/projects/{id}/members/{user_id}.put.consumes.length": 1,
	"paths./v3/projects/{id}/members/{user_id}.put.consumes[0]": "application/json",
	"paths./v3/projects/{id}/members/{user_id}.put.description": "Updates a member of a group or project.",
	"paths./v3/projects/{id}/members/{user_id}.put.operationId": "putV3ProjectsIdMembersUserId",
	"paths./v3/projects/{id}/members/{user_id}.put.parameters.length": 4,
	"paths./v3/projects/{id}/members/{user_id}.put.parameters[0].description": "The project ID",
	"paths./v3/projects/{id}/members/{user_id}.put.parameters[0].in": "path",
	"paths./v3/projects/{id}/members/{user_id}.put.parameters[0].name": "id",
	"paths./v3/projects/{id}/members/{user_id}.put.parameters[0].required": true,
	"paths./v3/projects/{id}/members/{user_id}.put.parameters[0].type": "string",
	"paths./v3/projects/{id}/members/{user_id}.put.parameters[1].description": "The user ID of the new member",
	"paths./v3/projects/{id}/members/{user_id}.put.parameters[1].format": "int32",
	"paths./v3/projects/{id}/members/{user_id}.put.parameters[1].in": "path",
	"paths./v3/projects/{id}/members/{user_id}.put.parameters[1].name": "user_id",
	"paths./v3/projects/{id}/members/{user_id}.put.parameters[1].required": true,
	"paths./v3/projects/{id}/members/{user_id}.put.parameters[1].type": "integer",
	"paths./v3/projects/{id}/members/{user_id}.put.parameters[2].description": "A valid access level",
	"paths./v3/projects/{id}/members/{user_id}.put.parameters[2].format": "int32",
	"paths./v3/projects/{id}/members/{user_id}.put.parameters[2].in": "formData",
	"paths./v3/projects/{id}/members/{user_id}.put.parameters[2].name": "access_level",
	"paths./v3/projects/{id}/members/{user_id}.put.parameters[2].required": true,
	"paths./v3/projects/{id}/members/{user_id}.put.parameters[2].type": "integer",
	"paths./v3/projects/{id}/members/{user_id}.put.parameters[3].description": "Date string in the format YEAR-MONTH-DAY",
	"paths./v3/projects/{id}/members/{user_id}.put.parameters[3].format": "date-time",
	"paths./v3/projects/{id}/members/{user_id}.put.parameters[3].in": "formData",
	"paths./v3/projects/{id}/members/{user_id}.put.parameters[3].name": "expires_at",
	"paths./v3/projects/{id}/members/{user_id}.put.parameters[3].required": false,
	"paths./v3/projects/{id}/members/{user_id}.put.parameters[3].type": "string",
	"paths./v3/projects/{id}/members/{user_id}.put.produces.length": 1,
	"paths./v3/projects/{id}/members/{user_id}.put.produces[0]": "application/json",
	"paths./v3/projects/{id}/members/{user_id}.put.responses.200.description": "Updates a member of a group or project.",
	"paths./v3/projects/{id}/members/{user_id}.put.responses.200.schema.$ref": "#/definitions/Member",
	"paths./v3/projects/{id}/members/{user_id}.put.summary": "Updates a member of a group or project.",
	"paths./v3/projects/{id}/members/{user_id}.put.tags.length": 1,
	"paths./v3/projects/{id}/members/{user_id}.put.tags[0]": "projects",
	"paths./v3/projects/{id}/merge_request/{merge_request_id}.get.description": "This endpoint is deprecated and will be removed in GitLab 9.0.",
	"paths./v3/projects/{id}/merge_request/{merge_request_id}.get.operationId": "getV3ProjectsIdMergeRequestMergeRequestId",
	"paths./v3/projects/{id}/merge_request/{merge_request_id}.get.parameters.length": 2,
	"paths./v3/projects/{id}/merge_request/{merge_request_id}.get.parameters[0].description": "The ID of a project",
	"paths./v3/projects/{id}/merge_request/{merge_request_id}.get.parameters[0].in": "path",
	"paths./v3/projects/{id}/merge_request/{merge_request_id}.get.parameters[0].name": "id",
	"paths./v3/projects/{id}/merge_request/{merge_request_id}.get.parameters[0].required": true,
	"paths./v3/projects/{id}/merge_request/{merge_request_id}.get.parameters[0].type": "string",
	"paths./v3/projects/{id}/merge_request/{merge_request_id}.get.parameters[1].description": "The ID of a merge request",
	"paths./v3/projects/{id}/merge_request/{merge_request_id}.get.parameters[1].format": "int32",
	"paths./v3/projects/{id}/merge_request/{merge_request_id}.get.parameters[1].in": "path",
	"paths./v3/projects/{id}/merge_request/{merge_request_id}.get.parameters[1].name": "merge_request_id",
	"paths./v3/projects/{id}/merge_request/{merge_request_id}.get.parameters[1].required": true,
	"paths./v3/projects/{id}/merge_request/{merge_request_id}.get.parameters[1].type": "integer",
	"paths./v3/projects/{id}/merge_request/{merge_request_id}.get.produces.length": 1,
	"paths./v3/projects/{id}/merge_request/{merge_request_id}.get.produces[0]": "application/json",
	"paths./v3/projects/{id}/merge_request/{merge_request_id}.get.responses.200.description": "Get a single merge request",
	"paths./v3/projects/{id}/merge_request/{merge_request_id}.get.responses.200.schema.$ref": "#/definitions/MergeRequest",
	"paths./v3/projects/{id}/merge_request/{merge_request_id}.get.summary": "Get a single merge request",
	"paths./v3/projects/{id}/merge_request/{merge_request_id}.get.tags.length": 1,
	"paths./v3/projects/{id}/merge_request/{merge_request_id}.get.tags[0]": "projects",
	"paths./v3/projects/{id}/merge_request/{merge_request_id}.put.consumes.length": 1,
	"paths./v3/projects/{id}/merge_request/{merge_request_id}.put.consumes[0]": "application/json",
	"paths./v3/projects/{id}/merge_request/{merge_request_id}.put.description": "Update a merge request",
	"paths./v3/projects/{id}/merge_request/{merge_request_id}.put.operationId": "putV3ProjectsIdMergeRequestMergeRequestId",
	"paths./v3/projects/{id}/merge_request/{merge_request_id}.put.parameters.length": 10,
	"paths./v3/projects/{id}/merge_request/{merge_request_id}.put.parameters[0].description": "The ID of a project",
	"paths./v3/projects/{id}/merge_request/{merge_request_id}.put.parameters[0].in": "path",
	"paths./v3/projects/{id}/merge_request/{merge_request_id}.put.parameters[0].name": "id",
	"paths./v3/projects/{id}/merge_request/{merge_request_id}.put.parameters[0].required": true,
	"paths./v3/projects/{id}/merge_request/{merge_request_id}.put.parameters[0].type": "string",
	"paths./v3/projects/{id}/merge_request/{merge_request_id}.put.parameters[1].description": "The title of the merge request",
	"paths./v3/projects/{id}/merge_request/{merge_request_id}.put.parameters[1].in": "formData",
	"paths./v3/projects/{id}/merge_request/{merge_request_id}.put.parameters[1].name": "title",
	"paths./v3/projects/{id}/merge_request/{merge_request_id}.put.parameters[1].required": false,
	"paths./v3/projects/{id}/merge_request/{merge_request_id}.put.parameters[1].type": "string",
	"paths./v3/projects/{id}/merge_request/{merge_request_id}.put.parameters[2].description": "The target branch",
	"paths./v3/projects/{id}/merge_request/{merge_request_id}.put.parameters[2].in": "formData",
	"paths./v3/projects/{id}/merge_request/{merge_request_id}.put.parameters[2].name": "target_branch",
	"paths./v3/projects/{id}/merge_request/{merge_request_id}.put.parameters[2].required": false,
	"paths./v3/projects/{id}/merge_request/{merge_request_id}.put.parameters[2].type": "string",
	"paths./v3/projects/{id}/merge_request/{merge_request_id}.put.parameters[3].description": "Status of the merge request",
	"paths./v3/projects/{id}/merge_request/{merge_request_id}.put.parameters[3].enum.length": 3,
	"paths./v3/projects/{id}/merge_request/{merge_request_id}.put.parameters[3].enum[0]": "close",
	"paths./v3/projects/{id}/merge_request/{merge_request_id}.put.parameters[3].enum[1]": "reopen",
	"paths./v3/projects/{id}/merge_request/{merge_request_id}.put.parameters[3].enum[2]": "merge",
	"paths./v3/projects/{id}/merge_request/{merge_request_id}.put.parameters[3].in": "formData",
	"paths./v3/projects/{id}/merge_request/{merge_request_id}.put.parameters[3].name": "state_event",
	"paths./v3/projects/{id}/merge_request/{merge_request_id}.put.parameters[3].required": false,
	"paths./v3/projects/{id}/merge_request/{merge_request_id}.put.parameters[3].type": "string",
	"paths./v3/projects/{id}/merge_request/{merge_request_id}.put.parameters[4].description": "The description of the merge request",
	"paths./v3/projects/{id}/merge_request/{merge_request_id}.put.parameters[4].in": "formData",
	"paths./v3/projects/{id}/merge_request/{merge_request_id}.put.parameters[4].name": "description",
	"paths./v3/projects/{id}/merge_request/{merge_request_id}.put.parameters[4].required": false,
	"paths./v3/projects/{id}/merge_request/{merge_request_id}.put.parameters[4].type": "string",
	"paths./v3/projects/{id}/merge_request/{merge_request_id}.put.parameters[5].description": "The ID of a user to assign the merge request",
	"paths./v3/projects/{id}/merge_request/{merge_request_id}.put.parameters[5].format": "int32",
	"paths./v3/projects/{id}/merge_request/{merge_request_id}.put.parameters[5].in": "formData",
	"paths./v3/projects/{id}/merge_request/{merge_request_id}.put.parameters[5].name": "assignee_id",
	"paths./v3/projects/{id}/merge_request/{merge_request_id}.put.parameters[5].required": false,
	"paths./v3/projects/{id}/merge_request/{merge_request_id}.put.parameters[5].type": "integer",
	"paths./v3/projects/{id}/merge_request/{merge_request_id}.put.parameters[6].description": "The ID of a milestone to assign the merge request",
	"paths./v3/projects/{id}/merge_request/{merge_request_id}.put.parameters[6].format": "int32",
	"paths./v3/projects/{id}/merge_request/{merge_request_id}.put.parameters[6].in": "formData",
	"paths./v3/projects/{id}/merge_request/{merge_request_id}.put.parameters[6].name": "milestone_id",
	"paths./v3/projects/{id}/merge_request/{merge_request_id}.put.parameters[6].required": false,
	"paths./v3/projects/{id}/merge_request/{merge_request_id}.put.parameters[6].type": "integer",
	"paths./v3/projects/{id}/merge_request/{merge_request_id}.put.parameters[7].description": "Comma-separated list of label names",
	"paths./v3/projects/{id}/merge_request/{merge_request_id}.put.parameters[7].in": "formData",
	"paths./v3/projects/{id}/merge_request/{merge_request_id}.put.parameters[7].name": "labels",
	"paths./v3/projects/{id}/merge_request/{merge_request_id}.put.parameters[7].required": false,
	"paths./v3/projects/{id}/merge_request/{merge_request_id}.put.parameters[7].type": "string",
	"paths./v3/projects/{id}/merge_request/{merge_request_id}.put.parameters[8].description": "Remove source branch when merging",
	"paths./v3/projects/{id}/merge_request/{merge_request_id}.put.parameters[8].in": "formData",
	"paths./v3/projects/{id}/merge_request/{merge_request_id}.put.parameters[8].name": "remove_source_branch",
	"paths./v3/projects/{id}/merge_request/{merge_request_id}.put.parameters[8].required": false,
	"paths./v3/projects/{id}/merge_request/{merge_request_id}.put.parameters[8].type": "boolean",
	"paths./v3/projects/{id}/merge_request/{merge_request_id}.put.parameters[9].format": "int32",
	"paths./v3/projects/{id}/merge_request/{merge_request_id}.put.parameters[9].in": "path",
	"paths./v3/projects/{id}/merge_request/{merge_request_id}.put.parameters[9].name": "merge_request_id",
	"paths./v3/projects/{id}/merge_request/{merge_request_id}.put.parameters[9].required": true,
	"paths./v3/projects/{id}/merge_request/{merge_request_id}.put.parameters[9].type": "integer",
	"paths./v3/projects/{id}/merge_request/{merge_request_id}.put.produces.length": 1,
	"paths./v3/projects/{id}/merge_request/{merge_request_id}.put.produces[0]": "application/json",
	"paths./v3/projects/{id}/merge_request/{merge_request_id}.put.responses.200.description": "Update a merge request",
	"paths./v3/projects/{id}/merge_request/{merge_request_id}.put.responses.200.schema.$ref": "#/definitions/MergeRequest",
	"paths./v3/projects/{id}/merge_request/{merge_request_id}.put.summary": "Update a merge request",
	"paths./v3/projects/{id}/merge_request/{merge_request_id}.put.tags.length": 1,
	"paths./v3/projects/{id}/merge_request/{merge_request_id}.put.tags[0]": "projects",
	"paths./v3/projects/{id}/merge_request/{merge_request_id}/cancel_merge_when_build_succeeds.post.consumes.length": 1,
	"paths./v3/projects/{id}/merge_request/{merge_request_id}/cancel_merge_when_build_succeeds.post.consumes[0]": "application/json",
	"paths./v3/projects/{id}/merge_request/{merge_request_id}/cancel_merge_when_build_succeeds.post.description": "Cancel merge if \"Merge When Pipeline Succeeds\" is enabled",
	"paths./v3/projects/{id}/merge_request/{merge_request_id}/cancel_merge_when_build_succeeds.post.operationId": "postV3ProjectsIdMergeRequestMergeRequestIdCancelMergeWhenBuildSucceeds",
	"paths./v3/projects/{id}/merge_request/{merge_request_id}/cancel_merge_when_build_succeeds.post.parameters.length": 2,
	"paths./v3/projects/{id}/merge_request/{merge_request_id}/cancel_merge_when_build_succeeds.post.parameters[0].description": "The ID of a project",
	"paths./v3/projects/{id}/merge_request/{merge_request_id}/cancel_merge_when_build_succeeds.post.parameters[0].in": "path",
	"paths./v3/projects/{id}/merge_request/{merge_request_id}/cancel_merge_when_build_succeeds.post.parameters[0].name": "id",
	"paths./v3/projects/{id}/merge_request/{merge_request_id}/cancel_merge_when_build_succeeds.post.parameters[0].required": true,
	"paths./v3/projects/{id}/merge_request/{merge_request_id}/cancel_merge_when_build_succeeds.post.parameters[0].type": "string",
	"paths./v3/projects/{id}/merge_request/{merge_request_id}/cancel_merge_when_build_succeeds.post.parameters[1].format": "int32",
	"paths./v3/projects/{id}/merge_request/{merge_request_id}/cancel_merge_when_build_succeeds.post.parameters[1].in": "path",
	"paths./v3/projects/{id}/merge_request/{merge_request_id}/cancel_merge_when_build_succeeds.post.parameters[1].name": "merge_request_id",
	"paths./v3/projects/{id}/merge_request/{merge_request_id}/cancel_merge_when_build_succeeds.post.parameters[1].required": true,
	"paths./v3/projects/{id}/merge_request/{merge_request_id}/cancel_merge_when_build_succeeds.post.parameters[1].type": "integer",
	"paths./v3/projects/{id}/merge_request/{merge_request_id}/cancel_merge_when_build_succeeds.post.produces.length": 1,
	"paths./v3/projects/{id}/merge_request/{merge_request_id}/cancel_merge_when_build_succeeds.post.produces[0]": "application/json",
	"paths./v3/projects/{id}/merge_request/{merge_request_id}/cancel_merge_when_build_succeeds.post.responses.201.description": "Cancel merge if \"Merge When Pipeline Succeeds\" is enabled",
	"paths./v3/projects/{id}/merge_request/{merge_request_id}/cancel_merge_when_build_succeeds.post.responses.201.schema.$ref": "#/definitions/MergeRequest",
	"paths./v3/projects/{id}/merge_request/{merge_request_id}/cancel_merge_when_build_succeeds.post.summary": "Cancel merge if \"Merge When Pipeline Succeeds\" is enabled",
	"paths./v3/projects/{id}/merge_request/{merge_request_id}/cancel_merge_when_build_succeeds.post.tags.length": 1,
	"paths./v3/projects/{id}/merge_request/{merge_request_id}/cancel_merge_when_build_succeeds.post.tags[0]": "projects",
	"paths./v3/projects/{id}/merge_request/{merge_request_id}/changes.get.description": "Show the merge request changes",
	"paths./v3/projects/{id}/merge_request/{merge_request_id}/changes.get.operationId": "getV3ProjectsIdMergeRequestMergeRequestIdChanges",
	"paths./v3/projects/{id}/merge_request/{merge_request_id}/changes.get.parameters.length": 2,
	"paths./v3/projects/{id}/merge_request/{merge_request_id}/changes.get.parameters[0].description": "The ID of a project",
	"paths./v3/projects/{id}/merge_request/{merge_request_id}/changes.get.parameters[0].in": "path",
	"paths./v3/projects/{id}/merge_request/{merge_request_id}/changes.get.parameters[0].name": "id",
	"paths./v3/projects/{id}/merge_request/{merge_request_id}/changes.get.parameters[0].required": true,
	"paths./v3/projects/{id}/merge_request/{merge_request_id}/changes.get.parameters[0].type": "string",
	"paths./v3/projects/{id}/merge_request/{merge_request_id}/changes.get.parameters[1].format": "int32",
	"paths./v3/projects/{id}/merge_request/{merge_request_id}/changes.get.parameters[1].in": "path",
	"paths./v3/projects/{id}/merge_request/{merge_request_id}/changes.get.parameters[1].name": "merge_request_id",
	"paths./v3/projects/{id}/merge_request/{merge_request_id}/changes.get.parameters[1].required": true,
	"paths./v3/projects/{id}/merge_request/{merge_request_id}/changes.get.parameters[1].type": "integer",
	"paths./v3/projects/{id}/merge_request/{merge_request_id}/changes.get.produces.length": 1,
	"paths./v3/projects/{id}/merge_request/{merge_request_id}/changes.get.produces[0]": "application/json",
	"paths./v3/projects/{id}/merge_request/{merge_request_id}/changes.get.responses.200.description": "Show the merge request changes",
	"paths./v3/projects/{id}/merge_request/{merge_request_id}/changes.get.responses.200.schema.$ref": "#/definitions/MergeRequestChanges",
	"paths./v3/projects/{id}/merge_request/{merge_request_id}/changes.get.summary": "Show the merge request changes",
	"paths./v3/projects/{id}/merge_request/{merge_request_id}/changes.get.tags.length": 1,
	"paths./v3/projects/{id}/merge_request/{merge_request_id}/changes.get.tags[0]": "projects",
	"paths./v3/projects/{id}/merge_request/{merge_request_id}/closes_issues.get.description": "List issues that will be closed on merge",
	"paths./v3/projects/{id}/merge_request/{merge_request_id}/closes_issues.get.operationId": "getV3ProjectsIdMergeRequestMergeRequestIdClosesIssues",
	"paths./v3/projects/{id}/merge_request/{merge_request_id}/closes_issues.get.parameters.length": 4,
	"paths./v3/projects/{id}/merge_request/{merge_request_id}/closes_issues.get.parameters[0].description": "The ID of a project",
	"paths./v3/projects/{id}/merge_request/{merge_request_id}/closes_issues.get.parameters[0].in": "path",
	"paths./v3/projects/{id}/merge_request/{merge_request_id}/closes_issues.get.parameters[0].name": "id",
	"paths./v3/projects/{id}/merge_request/{merge_request_id}/closes_issues.get.parameters[0].required": true,
	"paths./v3/projects/{id}/merge_request/{merge_request_id}/closes_issues.get.parameters[0].type": "string",
	"paths./v3/projects/{id}/merge_request/{merge_request_id}/closes_issues.get.parameters[1].description": "Current page number",
	"paths./v3/projects/{id}/merge_request/{merge_request_id}/closes_issues.get.parameters[1].format": "int32",
	"paths./v3/projects/{id}/merge_request/{merge_request_id}/closes_issues.get.parameters[1].in": "query",
	"paths./v3/projects/{id}/merge_request/{merge_request_id}/closes_issues.get.parameters[1].name": "page",
	"paths./v3/projects/{id}/merge_request/{merge_request_id}/closes_issues.get.parameters[1].required": false,
	"paths./v3/projects/{id}/merge_request/{merge_request_id}/closes_issues.get.parameters[1].type": "integer",
	"paths./v3/projects/{id}/merge_request/{merge_request_id}/closes_issues.get.parameters[2].description": "Number of items per page",
	"paths./v3/projects/{id}/merge_request/{merge_request_id}/closes_issues.get.parameters[2].format": "int32",
	"paths./v3/projects/{id}/merge_request/{merge_request_id}/closes_issues.get.parameters[2].in": "query",
	"paths./v3/projects/{id}/merge_request/{merge_request_id}/closes_issues.get.parameters[2].name": "per_page",
	"paths./v3/projects/{id}/merge_request/{merge_request_id}/closes_issues.get.parameters[2].required": false,
	"paths./v3/projects/{id}/merge_request/{merge_request_id}/closes_issues.get.parameters[2].type": "integer",
	"paths./v3/projects/{id}/merge_request/{merge_request_id}/closes_issues.get.parameters[3].format": "int32",
	"paths./v3/projects/{id}/merge_request/{merge_request_id}/closes_issues.get.parameters[3].in": "path",
	"paths./v3/projects/{id}/merge_request/{merge_request_id}/closes_issues.get.parameters[3].name": "merge_request_id",
	"paths./v3/projects/{id}/merge_request/{merge_request_id}/closes_issues.get.parameters[3].required": true,
	"paths./v3/projects/{id}/merge_request/{merge_request_id}/closes_issues.get.parameters[3].type": "integer",
	"paths./v3/projects/{id}/merge_request/{merge_request_id}/closes_issues.get.produces.length": 1,
	"paths./v3/projects/{id}/merge_request/{merge_request_id}/closes_issues.get.produces[0]": "application/json",
	"paths./v3/projects/{id}/merge_request/{merge_request_id}/closes_issues.get.responses.200.description": "List issues that will be closed on merge",
	"paths./v3/projects/{id}/merge_request/{merge_request_id}/closes_issues.get.responses.200.schema.$ref": "#/definitions/MRNote",
	"paths./v3/projects/{id}/merge_request/{merge_request_id}/closes_issues.get.summary": "List issues that will be closed on merge",
	"paths./v3/projects/{id}/merge_request/{merge_request_id}/closes_issues.get.tags.length": 1,
	"paths./v3/projects/{id}/merge_request/{merge_request_id}/closes_issues.get.tags[0]": "projects",
	"paths./v3/projects/{id}/merge_request/{merge_request_id}/comments.get.description": "Duplicate. DEPRECATED and WILL BE REMOVED in 9.0",
	"paths./v3/projects/{id}/merge_request/{merge_request_id}/comments.get.operationId": "getV3ProjectsIdMergeRequestMergeRequestIdComments",
	"paths./v3/projects/{id}/merge_request/{merge_request_id}/comments.get.parameters.length": 4,
	"paths./v3/projects/{id}/merge_request/{merge_request_id}/comments.get.parameters[0].description": "The ID of a project",
	"paths./v3/projects/{id}/merge_request/{merge_request_id}/comments.get.parameters[0].in": "path",
	"paths./v3/projects/{id}/merge_request/{merge_request_id}/comments.get.parameters[0].name": "id",
	"paths./v3/projects/{id}/merge_request/{merge_request_id}/comments.get.parameters[0].required": true,
	"paths./v3/projects/{id}/merge_request/{merge_request_id}/comments.get.parameters[0].type": "string",
	"paths./v3/projects/{id}/merge_request/{merge_request_id}/comments.get.parameters[1].description": "Current page number",
	"paths./v3/projects/{id}/merge_request/{merge_request_id}/comments.get.parameters[1].format": "int32",
	"paths./v3/projects/{id}/merge_request/{merge_request_id}/comments.get.parameters[1].in": "query",
	"paths./v3/projects/{id}/merge_request/{merge_request_id}/comments.get.parameters[1].name": "page",
	"paths./v3/projects/{id}/merge_request/{merge_request_id}/comments.get.parameters[1].required": false,
	"paths./v3/projects/{id}/merge_request/{merge_request_id}/comments.get.parameters[1].type": "integer",
	"paths./v3/projects/{id}/merge_request/{merge_request_id}/comments.get.parameters[2].description": "Number of items per page",
	"paths./v3/projects/{id}/merge_request/{merge_request_id}/comments.get.parameters[2].format": "int32",
	"paths./v3/projects/{id}/merge_request/{merge_request_id}/comments.get.parameters[2].in": "query",
	"paths./v3/projects/{id}/merge_request/{merge_request_id}/comments.get.parameters[2].name": "per_page",
	"paths./v3/projects/{id}/merge_request/{merge_request_id}/comments.get.parameters[2].required": false,
	"paths./v3/projects/{id}/merge_request/{merge_request_id}/comments.get.parameters[2].type": "integer",
	"paths./v3/projects/{id}/merge_request/{merge_request_id}/comments.get.parameters[3].format": "int32",
	"paths./v3/projects/{id}/merge_request/{merge_request_id}/comments.get.parameters[3].in": "path",
	"paths./v3/projects/{id}/merge_request/{merge_request_id}/comments.get.parameters[3].name": "merge_request_id",
	"paths./v3/projects/{id}/merge_request/{merge_request_id}/comments.get.parameters[3].required": true,
	"paths./v3/projects/{id}/merge_request/{merge_request_id}/comments.get.parameters[3].type": "integer",
	"paths./v3/projects/{id}/merge_request/{merge_request_id}/comments.get.produces.length": 1,
	"paths./v3/projects/{id}/merge_request/{merge_request_id}/comments.get.produces[0]": "application/json",
	"paths./v3/projects/{id}/merge_request/{merge_request_id}/comments.get.responses.200.description": "Get the comments of a merge request",
	"paths./v3/projects/{id}/merge_request/{merge_request_id}/comments.get.responses.200.schema.$ref": "#/definitions/MRNote",
	"paths./v3/projects/{id}/merge_request/{merge_request_id}/comments.get.summary": "Get the comments of a merge request",
	"paths./v3/projects/{id}/merge_request/{merge_request_id}/comments.get.tags.length": 1,
	"paths./v3/projects/{id}/merge_request/{merge_request_id}/comments.get.tags[0]": "projects",
	"paths./v3/projects/{id}/merge_request/{merge_request_id}/comments.post.consumes.length": 1,
	"paths./v3/projects/{id}/merge_request/{merge_request_id}/comments.post.consumes[0]": "application/json",
	"paths./v3/projects/{id}/merge_request/{merge_request_id}/comments.post.description": "Duplicate. DEPRECATED and WILL BE REMOVED in 9.0",
	"paths./v3/projects/{id}/merge_request/{merge_request_id}/comments.post.operationId": "postV3ProjectsIdMergeRequestMergeRequestIdComments",
	"paths./v3/projects/{id}/merge_request/{merge_request_id}/comments.post.parameters.length": 3,
	"paths./v3/projects/{id}/merge_request/{merge_request_id}/comments.post.parameters[0].description": "The ID of a project",
	"paths./v3/projects/{id}/merge_request/{merge_request_id}/comments.post.parameters[0].in": "path",
	"paths./v3/projects/{id}/merge_request/{merge_request_id}/comments.post.parameters[0].name": "id",
	"paths./v3/projects/{id}/merge_request/{merge_request_id}/comments.post.parameters[0].required": true,
	"paths./v3/projects/{id}/merge_request/{merge_request_id}/comments.post.parameters[0].type": "string",
	"paths./v3/projects/{id}/merge_request/{merge_request_id}/comments.post.parameters[1].description": "The text of the comment",
	"paths./v3/projects/{id}/merge_request/{merge_request_id}/comments.post.parameters[1].in": "formData",
	"paths./v3/projects/{id}/merge_request/{merge_request_id}/comments.post.parameters[1].name": "note",
	"paths./v3/projects/{id}/merge_request/{merge_request_id}/comments.post.parameters[1].required": true,
	"paths./v3/projects/{id}/merge_request/{merge_request_id}/comments.post.parameters[1].type": "string",
	"paths./v3/projects/{id}/merge_request/{merge_request_id}/comments.post.parameters[2].format": "int32",
	"paths./v3/projects/{id}/merge_request/{merge_request_id}/comments.post.parameters[2].in": "path",
	"paths./v3/projects/{id}/merge_request/{merge_request_id}/comments.post.parameters[2].name": "merge_request_id",
	"paths./v3/projects/{id}/merge_request/{merge_request_id}/comments.post.parameters[2].required": true,
	"paths./v3/projects/{id}/merge_request/{merge_request_id}/comments.post.parameters[2].type": "integer",
	"paths./v3/projects/{id}/merge_request/{merge_request_id}/comments.post.produces.length": 1,
	"paths./v3/projects/{id}/merge_request/{merge_request_id}/comments.post.produces[0]": "application/json",
	"paths./v3/projects/{id}/merge_request/{merge_request_id}/comments.post.responses.201.description": "Post a comment to a merge request",
	"paths./v3/projects/{id}/merge_request/{merge_request_id}/comments.post.responses.201.schema.$ref": "#/definitions/MRNote",
	"paths./v3/projects/{id}/merge_request/{merge_request_id}/comments.post.summary": "Post a comment to a merge request",
	"paths./v3/projects/{id}/merge_request/{merge_request_id}/comments.post.tags.length": 1,
	"paths./v3/projects/{id}/merge_request/{merge_request_id}/comments.post.tags[0]": "projects",
	"paths./v3/projects/{id}/merge_request/{merge_request_id}/commits.get.description": "Get the commits of a merge request",
	"paths./v3/projects/{id}/merge_request/{merge_request_id}/commits.get.operationId": "getV3ProjectsIdMergeRequestMergeRequestIdCommits",
	"paths./v3/projects/{id}/merge_request/{merge_request_id}/commits.get.parameters.length": 2,
	"paths./v3/projects/{id}/merge_request/{merge_request_id}/commits.get.parameters[0].description": "The ID of a project",
	"paths./v3/projects/{id}/merge_request/{merge_request_id}/commits.get.parameters[0].in": "path",
	"paths./v3/projects/{id}/merge_request/{merge_request_id}/commits.get.parameters[0].name": "id",
	"paths./v3/projects/{id}/merge_request/{merge_request_id}/commits.get.parameters[0].required": true,
	"paths./v3/projects/{id}/merge_request/{merge_request_id}/commits.get.parameters[0].type": "string",
	"paths./v3/projects/{id}/merge_request/{merge_request_id}/commits.get.parameters[1].format": "int32",
	"paths./v3/projects/{id}/merge_request/{merge_request_id}/commits.get.parameters[1].in": "path",
	"paths./v3/projects/{id}/merge_request/{merge_request_id}/commits.get.parameters[1].name": "merge_request_id",
	"paths./v3/projects/{id}/merge_request/{merge_request_id}/commits.get.parameters[1].required": true,
	"paths./v3/projects/{id}/merge_request/{merge_request_id}/commits.get.parameters[1].type": "integer",
	"paths./v3/projects/{id}/merge_request/{merge_request_id}/commits.get.produces.length": 1,
	"paths./v3/projects/{id}/merge_request/{merge_request_id}/commits.get.produces[0]": "application/json",
	"paths./v3/projects/{id}/merge_request/{merge_request_id}/commits.get.responses.200.description": "Get the commits of a merge request",
	"paths./v3/projects/{id}/merge_request/{merge_request_id}/commits.get.responses.200.schema.$ref": "#/definitions/RepoCommit",
	"paths./v3/projects/{id}/merge_request/{merge_request_id}/commits.get.summary": "Get the commits of a merge request",
	"paths./v3/projects/{id}/merge_request/{merge_request_id}/commits.get.tags.length": 1,
	"paths./v3/projects/{id}/merge_request/{merge_request_id}/commits.get.tags[0]": "projects",
	"paths./v3/projects/{id}/merge_request/{merge_request_id}/merge.put.consumes.length": 1,
	"paths./v3/projects/{id}/merge_request/{merge_request_id}/merge.put.consumes[0]": "application/json",
	"paths./v3/projects/{id}/merge_request/{merge_request_id}/merge.put.description": "Merge a merge request",
	"paths./v3/projects/{id}/merge_request/{merge_request_id}/merge.put.operationId": "putV3ProjectsIdMergeRequestMergeRequestIdMerge",
	"paths./v3/projects/{id}/merge_request/{merge_request_id}/merge.put.parameters.length": 6,
	"paths./v3/projects/{id}/merge_request/{merge_request_id}/merge.put.parameters[0].description": "The ID of a project",
	"paths./v3/projects/{id}/merge_request/{merge_request_id}/merge.put.parameters[0].in": "path",
	"paths./v3/projects/{id}/merge_request/{merge_request_id}/merge.put.parameters[0].name": "id",
	"paths./v3/projects/{id}/merge_request/{merge_request_id}/merge.put.parameters[0].required": true,
	"paths./v3/projects/{id}/merge_request/{merge_request_id}/merge.put.parameters[0].type": "string",
	"paths./v3/projects/{id}/merge_request/{merge_request_id}/merge.put.parameters[1].description": "Custom merge commit message",
	"paths./v3/projects/{id}/merge_request/{merge_request_id}/merge.put.parameters[1].in": "formData",
	"paths./v3/projects/{id}/merge_request/{merge_request_id}/merge.put.parameters[1].name": "merge_commit_message",
	"paths./v3/projects/{id}/merge_request/{merge_request_id}/merge.put.parameters[1].required": false,
	"paths./v3/projects/{id}/merge_request/{merge_request_id}/merge.put.parameters[1].type": "string",
	"paths./v3/projects/{id}/merge_request/{merge_request_id}/merge.put.parameters[2].description": "When true, the source branch will be deleted if possible",
	"paths./v3/projects/{id}/merge_request/{merge_request_id}/merge.put.parameters[2].in": "formData",
	"paths./v3/projects/{id}/merge_request/{merge_request_id}/merge.put.parameters[2].name": "should_remove_source_branch",
	"paths./v3/projects/{id}/merge_request/{merge_request_id}/merge.put.parameters[2].required": false,
	"paths./v3/projects/{id}/merge_request/{merge_request_id}/merge.put.parameters[2].type": "boolean",
	"paths./v3/projects/{id}/merge_request/{merge_request_id}/merge.put.parameters[3].description": "When true, this merge request will be merged when the pipeline succeeds",
	"paths./v3/projects/{id}/merge_request/{merge_request_id}/merge.put.parameters[3].in": "formData",
	"paths./v3/projects/{id}/merge_request/{merge_request_id}/merge.put.parameters[3].name": "merge_when_build_succeeds",
	"paths./v3/projects/{id}/merge_request/{merge_request_id}/merge.put.parameters[3].required": false,
	"paths./v3/projects/{id}/merge_request/{merge_request_id}/merge.put.parameters[3].type": "boolean",
	"paths./v3/projects/{id}/merge_request/{merge_request_id}/merge.put.parameters[4].description": "When present, must have the HEAD SHA of the source branch",
	"paths./v3/projects/{id}/merge_request/{merge_request_id}/merge.put.parameters[4].in": "formData",
	"paths./v3/projects/{id}/merge_request/{merge_request_id}/merge.put.parameters[4].name": "sha",
	"paths./v3/projects/{id}/merge_request/{merge_request_id}/merge.put.parameters[4].required": false,
	"paths./v3/projects/{id}/merge_request/{merge_request_id}/merge.put.parameters[4].type": "string",
	"paths./v3/projects/{id}/merge_request/{merge_request_id}/merge.put.parameters[5].format": "int32",
	"paths./v3/projects/{id}/merge_request/{merge_request_id}/merge.put.parameters[5].in": "path",
	"paths./v3/projects/{id}/merge_request/{merge_request_id}/merge.put.parameters[5].name": "merge_request_id",
	"paths./v3/projects/{id}/merge_request/{merge_request_id}/merge.put.parameters[5].required": true,
	"paths./v3/projects/{id}/merge_request/{merge_request_id}/merge.put.parameters[5].type": "integer",
	"paths./v3/projects/{id}/merge_request/{merge_request_id}/merge.put.produces.length": 1,
	"paths./v3/projects/{id}/merge_request/{merge_request_id}/merge.put.produces[0]": "application/json",
	"paths./v3/projects/{id}/merge_request/{merge_request_id}/merge.put.responses.200.description": "Merge a merge request",
	"paths./v3/projects/{id}/merge_request/{merge_request_id}/merge.put.responses.200.schema.$ref": "#/definitions/MergeRequest",
	"paths./v3/projects/{id}/merge_request/{merge_request_id}/merge.put.summary": "Merge a merge request",
	"paths./v3/projects/{id}/merge_request/{merge_request_id}/merge.put.tags.length": 1,
	"paths./v3/projects/{id}/merge_request/{merge_request_id}/merge.put.tags[0]": "projects",
	"paths./v3/projects/{id}/merge_request/{subscribable_id}/subscription.delete.description": "Unsubscribe from a resource",
	"paths./v3/projects/{id}/merge_request/{subscribable_id}/subscription.delete.operationId": "deleteV3ProjectsIdMergeRequestSubscribableIdSubscription",
	"paths./v3/projects/{id}/merge_request/{subscribable_id}/subscription.delete.parameters.length": 2,
	"paths./v3/projects/{id}/merge_request/{subscribable_id}/subscription.delete.parameters[0].description": "The ID of a project",
	"paths./v3/projects/{id}/merge_request/{subscribable_id}/subscription.delete.parameters[0].in": "path",
	"paths./v3/projects/{id}/merge_request/{subscribable_id}/subscription.delete.parameters[0].name": "id",
	"paths./v3/projects/{id}/merge_request/{subscribable_id}/subscription.delete.parameters[0].required": true,
	"paths./v3/projects/{id}/merge_request/{subscribable_id}/subscription.delete.parameters[0].type": "string",
	"paths./v3/projects/{id}/merge_request/{subscribable_id}/subscription.delete.parameters[1].description": "The ID of a resource",
	"paths./v3/projects/{id}/merge_request/{subscribable_id}/subscription.delete.parameters[1].in": "path",
	"paths./v3/projects/{id}/merge_request/{subscribable_id}/subscription.delete.parameters[1].name": "subscribable_id",
	"paths./v3/projects/{id}/merge_request/{subscribable_id}/subscription.delete.parameters[1].required": true,
	"paths./v3/projects/{id}/merge_request/{subscribable_id}/subscription.delete.parameters[1].type": "string",
	"paths./v3/projects/{id}/merge_request/{subscribable_id}/subscription.delete.produces.length": 1,
	"paths./v3/projects/{id}/merge_request/{subscribable_id}/subscription.delete.produces[0]": "application/json",
	"paths./v3/projects/{id}/merge_request/{subscribable_id}/subscription.delete.responses.200.description": "Unsubscribe from a resource",
	"paths./v3/projects/{id}/merge_request/{subscribable_id}/subscription.delete.responses.200.schema.$ref": "#/definitions/MergeRequest",
	"paths./v3/projects/{id}/merge_request/{subscribable_id}/subscription.delete.summary": "Unsubscribe from a resource",
	"paths./v3/projects/{id}/merge_request/{subscribable_id}/subscription.delete.tags.length": 1,
	"paths./v3/projects/{id}/merge_request/{subscribable_id}/subscription.delete.tags[0]": "projects",
	"paths./v3/projects/{id}/merge_request/{subscribable_id}/subscription.post.consumes.length": 1,
	"paths./v3/projects/{id}/merge_request/{subscribable_id}/subscription.post.consumes[0]": "application/json",
	"paths./v3/projects/{id}/merge_request/{subscribable_id}/subscription.post.description": "Subscribe to a resource",
	"paths./v3/projects/{id}/merge_request/{subscribable_id}/subscription.post.operationId": "postV3ProjectsIdMergeRequestSubscribableIdSubscription",
	"paths./v3/projects/{id}/merge_request/{subscribable_id}/subscription.post.parameters.length": 2,
	"paths./v3/projects/{id}/merge_request/{subscribable_id}/subscription.post.parameters[0].description": "The ID of a project",
	"paths./v3/projects/{id}/merge_request/{subscribable_id}/subscription.post.parameters[0].in": "path",
	"paths./v3/projects/{id}/merge_request/{subscribable_id}/subscription.post.parameters[0].name": "id",
	"paths./v3/projects/{id}/merge_request/{subscribable_id}/subscription.post.parameters[0].required": true,
	"paths./v3/projects/{id}/merge_request/{subscribable_id}/subscription.post.parameters[0].type": "string",
	"paths./v3/projects/{id}/merge_request/{subscribable_id}/subscription.post.parameters[1].description": "The ID of a resource",
	"paths./v3/projects/{id}/merge_request/{subscribable_id}/subscription.post.parameters[1].in": "path",
	"paths./v3/projects/{id}/merge_request/{subscribable_id}/subscription.post.parameters[1].name": "subscribable_id",
	"paths./v3/projects/{id}/merge_request/{subscribable_id}/subscription.post.parameters[1].required": true,
	"paths./v3/projects/{id}/merge_request/{subscribable_id}/subscription.post.parameters[1].type": "string",
	"paths./v3/projects/{id}/merge_request/{subscribable_id}/subscription.post.produces.length": 1,
	"paths./v3/projects/{id}/merge_request/{subscribable_id}/subscription.post.produces[0]": "application/json",
	"paths./v3/projects/{id}/merge_request/{subscribable_id}/subscription.post.responses.201.description": "Subscribe to a resource",
	"paths./v3/projects/{id}/merge_request/{subscribable_id}/subscription.post.responses.201.schema.$ref": "#/definitions/MergeRequest",
	"paths./v3/projects/{id}/merge_request/{subscribable_id}/subscription.post.summary": "Subscribe to a resource",
	"paths./v3/projects/{id}/merge_request/{subscribable_id}/subscription.post.tags.length": 1,
	"paths./v3/projects/{id}/merge_request/{subscribable_id}/subscription.post.tags[0]": "projects",
	"paths./v3/projects/{id}/merge_requests.get.description": "List merge requests",
	"paths./v3/projects/{id}/merge_requests.get.operationId": "getV3ProjectsIdMergeRequests",
	"paths./v3/projects/{id}/merge_requests.get.parameters.length": 7,
	"paths./v3/projects/{id}/merge_requests.get.parameters[0].description": "The ID of a project",
	"paths./v3/projects/{id}/merge_requests.get.parameters[0].in": "path",
	"paths./v3/projects/{id}/merge_requests.get.parameters[0].name": "id",
	"paths./v3/projects/{id}/merge_requests.get.parameters[0].required": true,
	"paths./v3/projects/{id}/merge_requests.get.parameters[0].type": "string",
	"paths./v3/projects/{id}/merge_requests.get.parameters[1].default": "all",
	"paths./v3/projects/{id}/merge_requests.get.parameters[1].description": "Return opened, closed, merged, or all merge requests",
	"paths./v3/projects/{id}/merge_requests.get.parameters[1].enum.length": 4,
	"paths./v3/projects/{id}/merge_requests.get.parameters[1].enum[0]": "opened",
	"paths./v3/projects/{id}/merge_requests.get.parameters[1].enum[1]": "closed",
	"paths./v3/projects/{id}/merge_requests.get.parameters[1].enum[2]": "merged",
	"paths./v3/projects/{id}/merge_requests.get.parameters[1].enum[3]": "all",
	"paths./v3/projects/{id}/merge_requests.get.parameters[1].in": "query",
	"paths./v3/projects/{id}/merge_requests.get.parameters[1].name": "state",
	"paths./v3/projects/{id}/merge_requests.get.parameters[1].required": false,
	"paths./v3/projects/{id}/merge_requests.get.parameters[1].type": "string",
	"paths./v3/projects/{id}/merge_requests.get.parameters[2].default": "created_at",
	"paths./v3/projects/{id}/merge_requests.get.parameters[2].description": "Return merge requests ordered by `created_at` or `updated_at` fields.",
	"paths./v3/projects/{id}/merge_requests.get.parameters[2].enum.length": 2,
	"paths./v3/projects/{id}/merge_requests.get.parameters[2].enum[0]": "created_at",
	"paths./v3/projects/{id}/merge_requests.get.parameters[2].enum[1]": "updated_at",
	"paths./v3/projects/{id}/merge_requests.get.parameters[2].in": "query",
	"paths./v3/projects/{id}/merge_requests.get.parameters[2].name": "order_by",
	"paths./v3/projects/{id}/merge_requests.get.parameters[2].required": false,
	"paths./v3/projects/{id}/merge_requests.get.parameters[2].type": "string",
	"paths./v3/projects/{id}/merge_requests.get.parameters[3].default": "desc",
	"paths./v3/projects/{id}/merge_requests.get.parameters[3].description": "Return merge requests sorted in `asc` or `desc` order.",
	"paths./v3/projects/{id}/merge_requests.get.parameters[3].enum.length": 2,
	"paths./v3/projects/{id}/merge_requests.get.parameters[3].enum[0]": "asc",
	"paths./v3/projects/{id}/merge_requests.get.parameters[3].enum[1]": "desc",
	"paths./v3/projects/{id}/merge_requests.get.parameters[3].in": "query",
	"paths./v3/projects/{id}/merge_requests.get.parameters[3].name": "sort",
	"paths./v3/projects/{id}/merge_requests.get.parameters[3].required": false,
	"paths./v3/projects/{id}/merge_requests.get.parameters[3].type": "string",
	"paths./v3/projects/{id}/merge_requests.get.parameters[4].description": "The IID of the merge requests",
	"paths./v3/projects/{id}/merge_requests.get.parameters[4].in": "formData",
	"paths./v3/projects/{id}/merge_requests.get.parameters[4].items.format": "int32",
	"paths./v3/projects/{id}/merge_requests.get.parameters[4].items.type": "integer",
	"paths./v3/projects/{id}/merge_requests.get.parameters[4].name": "iid",
	"paths./v3/projects/{id}/merge_requests.get.parameters[4].required": false,
	"paths./v3/projects/{id}/merge_requests.get.parameters[4].type": "array",
	"paths./v3/projects/{id}/merge_requests.get.parameters[5].description": "Current page number",
	"paths./v3/projects/{id}/merge_requests.get.parameters[5].format": "int32",
	"paths./v3/projects/{id}/merge_requests.get.parameters[5].in": "query",
	"paths./v3/projects/{id}/merge_requests.get.parameters[5].name": "page",
	"paths./v3/projects/{id}/merge_requests.get.parameters[5].required": false,
	"paths./v3/projects/{id}/merge_requests.get.parameters[5].type": "integer",
	"paths./v3/projects/{id}/merge_requests.get.parameters[6].description": "Number of items per page",
	"paths./v3/projects/{id}/merge_requests.get.parameters[6].format": "int32",
	"paths./v3/projects/{id}/merge_requests.get.parameters[6].in": "query",
	"paths./v3/projects/{id}/merge_requests.get.parameters[6].name": "per_page",
	"paths./v3/projects/{id}/merge_requests.get.parameters[6].required": false,
	"paths./v3/projects/{id}/merge_requests.get.parameters[6].type": "integer",
	"paths./v3/projects/{id}/merge_requests.get.produces.length": 1,
	"paths./v3/projects/{id}/merge_requests.get.produces[0]": "application/json",
	"paths./v3/projects/{id}/merge_requests.get.responses.200.description": "List merge requests",
	"paths./v3/projects/{id}/merge_requests.get.responses.200.schema.$ref": "#/definitions/MergeRequest",
	"paths./v3/projects/{id}/merge_requests.get.summary": "List merge requests",
	"paths./v3/projects/{id}/merge_requests.get.tags.length": 1,
	"paths./v3/projects/{id}/merge_requests.get.tags[0]": "projects",
	"paths./v3/projects/{id}/merge_requests.post.consumes.length": 1,
	"paths./v3/projects/{id}/merge_requests.post.consumes[0]": "application/json",
	"paths./v3/projects/{id}/merge_requests.post.description": "Create a merge request",
	"paths./v3/projects/{id}/merge_requests.post.operationId": "postV3ProjectsIdMergeRequests",
	"paths./v3/projects/{id}/merge_requests.post.parameters.length": 10,
	"paths./v3/projects/{id}/merge_requests.post.parameters[0].description": "The ID of a project",
	"paths./v3/projects/{id}/merge_requests.post.parameters[0].in": "path",
	"paths./v3/projects/{id}/merge_requests.post.parameters[0].name": "id",
	"paths./v3/projects/{id}/merge_requests.post.parameters[0].required": true,
	"paths./v3/projects/{id}/merge_requests.post.parameters[0].type": "string",
	"paths./v3/projects/{id}/merge_requests.post.parameters[1].description": "The title of the merge request",
	"paths./v3/projects/{id}/merge_requests.post.parameters[1].in": "formData",
	"paths./v3/projects/{id}/merge_requests.post.parameters[1].name": "title",
	"paths./v3/projects/{id}/merge_requests.post.parameters[1].required": true,
	"paths./v3/projects/{id}/merge_requests.post.parameters[1].type": "string",
	"paths./v3/projects/{id}/merge_requests.post.parameters[2].description": "The source branch",
	"paths./v3/projects/{id}/merge_requests.post.parameters[2].in": "formData",
	"paths./v3/projects/{id}/merge_requests.post.parameters[2].name": "source_branch",
	"paths./v3/projects/{id}/merge_requests.post.parameters[2].required": true,
	"paths./v3/projects/{id}/merge_requests.post.parameters[2].type": "string",
	"paths./v3/projects/{id}/merge_requests.post.parameters[3].description": "The target branch",
	"paths./v3/projects/{id}/merge_requests.post.parameters[3].in": "formData",
	"paths./v3/projects/{id}/merge_requests.post.parameters[3].name": "target_branch",
	"paths./v3/projects/{id}/merge_requests.post.parameters[3].required": true,
	"paths./v3/projects/{id}/merge_requests.post.parameters[3].type": "string",
	"paths./v3/projects/{id}/merge_requests.post.parameters[4].description": "The target project of the merge request defaults to the :id of the project",
	"paths./v3/projects/{id}/merge_requests.post.parameters[4].format": "int32",
	"paths./v3/projects/{id}/merge_requests.post.parameters[4].in": "formData",
	"paths./v3/projects/{id}/merge_requests.post.parameters[4].name": "target_project_id",
	"paths./v3/projects/{id}/merge_requests.post.parameters[4].required": false,
	"paths./v3/projects/{id}/merge_requests.post.parameters[4].type": "integer",
	"paths./v3/projects/{id}/merge_requests.post.parameters[5].description": "The description of the merge request",
	"paths./v3/projects/{id}/merge_requests.post.parameters[5].in": "formData",
	"paths./v3/projects/{id}/merge_requests.post.parameters[5].name": "description",
	"paths./v3/projects/{id}/merge_requests.post.parameters[5].required": false,
	"paths./v3/projects/{id}/merge_requests.post.parameters[5].type": "string",
	"paths./v3/projects/{id}/merge_requests.post.parameters[6].description": "The ID of a user to assign the merge request",
	"paths./v3/projects/{id}/merge_requests.post.parameters[6].format": "int32",
	"paths./v3/projects/{id}/merge_requests.post.parameters[6].in": "formData",
	"paths./v3/projects/{id}/merge_requests.post.parameters[6].name": "assignee_id",
	"paths./v3/projects/{id}/merge_requests.post.parameters[6].required": false,
	"paths./v3/projects/{id}/merge_requests.post.parameters[6].type": "integer",
	"paths./v3/projects/{id}/merge_requests.post.parameters[7].description": "The ID of a milestone to assign the merge request",
	"paths./v3/projects/{id}/merge_requests.post.parameters[7].format": "int32",
	"paths./v3/projects/{id}/merge_requests.post.parameters[7].in": "formData",
	"paths./v3/projects/{id}/merge_requests.post.parameters[7].name": "milestone_id",
	"paths./v3/projects/{id}/merge_requests.post.parameters[7].required": false,
	"paths./v3/projects/{id}/merge_requests.post.parameters[7].type": "integer",
	"paths./v3/projects/{id}/merge_requests.post.parameters[8].description": "Comma-separated list of label names",
	"paths./v3/projects/{id}/merge_requests.post.parameters[8].in": "formData",
	"paths./v3/projects/{id}/merge_requests.post.parameters[8].name": "labels",
	"paths./v3/projects/{id}/merge_requests.post.parameters[8].required": false,
	"paths./v3/projects/{id}/merge_requests.post.parameters[8].type": "string",
	"paths./v3/projects/{id}/merge_requests.post.parameters[9].description": "Remove source branch when merging",
	"paths./v3/projects/{id}/merge_requests.post.parameters[9].in": "formData",
	"paths./v3/projects/{id}/merge_requests.post.parameters[9].name": "remove_source_branch",
	"paths./v3/projects/{id}/merge_requests.post.parameters[9].required": false,
	"paths./v3/projects/{id}/merge_requests.post.parameters[9].type": "boolean",
	"paths./v3/projects/{id}/merge_requests.post.produces.length": 1,
	"paths./v3/projects/{id}/merge_requests.post.produces[0]": "application/json",
	"paths./v3/projects/{id}/merge_requests.post.responses.201.description": "Create a merge request",
	"paths./v3/projects/{id}/merge_requests.post.responses.201.schema.$ref": "#/definitions/MergeRequest",
	"paths./v3/projects/{id}/merge_requests.post.summary": "Create a merge request",
	"paths./v3/projects/{id}/merge_requests.post.tags.length": 1,
	"paths./v3/projects/{id}/merge_requests.post.tags[0]": "projects",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}.delete.description": "Delete a merge request",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}.delete.operationId": "deleteV3ProjectsIdMergeRequestsMergeRequestId",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}.delete.parameters.length": 2,
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}.delete.parameters[0].description": "The ID of a project",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}.delete.parameters[0].in": "path",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}.delete.parameters[0].name": "id",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}.delete.parameters[0].required": true,
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}.delete.parameters[0].type": "string",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}.delete.parameters[1].description": "The ID of a merge request",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}.delete.parameters[1].format": "int32",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}.delete.parameters[1].in": "path",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}.delete.parameters[1].name": "merge_request_id",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}.delete.parameters[1].required": true,
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}.delete.parameters[1].type": "integer",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}.delete.produces.length": 1,
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}.delete.produces[0]": "application/json",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}.delete.responses.204.description": "Delete a merge request",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}.delete.summary": "Delete a merge request",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}.delete.tags.length": 1,
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}.delete.tags[0]": "projects",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}.get.description": "Get a single merge request",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}.get.operationId": "getV3ProjectsIdMergeRequestsMergeRequestId",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}.get.parameters.length": 2,
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}.get.parameters[0].description": "The ID of a project",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}.get.parameters[0].in": "path",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}.get.parameters[0].name": "id",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}.get.parameters[0].required": true,
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}.get.parameters[0].type": "string",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}.get.parameters[1].format": "int32",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}.get.parameters[1].in": "path",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}.get.parameters[1].name": "merge_request_id",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}.get.parameters[1].required": true,
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}.get.parameters[1].type": "integer",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}.get.produces.length": 1,
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}.get.produces[0]": "application/json",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}.get.responses.200.description": "Get a single merge request",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}.get.responses.200.schema.$ref": "#/definitions/MergeRequest",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}.get.summary": "Get a single merge request",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}.get.tags.length": 1,
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}.get.tags[0]": "projects",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}.put.consumes.length": 1,
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}.put.consumes[0]": "application/json",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}.put.description": "Update a merge request",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}.put.operationId": "putV3ProjectsIdMergeRequestsMergeRequestId",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}.put.parameters.length": 10,
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}.put.parameters[0].description": "The ID of a project",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}.put.parameters[0].in": "path",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}.put.parameters[0].name": "id",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}.put.parameters[0].required": true,
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}.put.parameters[0].type": "string",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}.put.parameters[1].description": "The title of the merge request",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}.put.parameters[1].in": "formData",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}.put.parameters[1].name": "title",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}.put.parameters[1].required": false,
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}.put.parameters[1].type": "string",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}.put.parameters[2].description": "The target branch",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}.put.parameters[2].in": "formData",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}.put.parameters[2].name": "target_branch",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}.put.parameters[2].required": false,
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}.put.parameters[2].type": "string",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}.put.parameters[3].description": "Status of the merge request",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}.put.parameters[3].enum.length": 3,
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}.put.parameters[3].enum[0]": "close",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}.put.parameters[3].enum[1]": "reopen",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}.put.parameters[3].enum[2]": "merge",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}.put.parameters[3].in": "formData",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}.put.parameters[3].name": "state_event",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}.put.parameters[3].required": false,
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}.put.parameters[3].type": "string",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}.put.parameters[4].description": "The description of the merge request",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}.put.parameters[4].in": "formData",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}.put.parameters[4].name": "description",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}.put.parameters[4].required": false,
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}.put.parameters[4].type": "string",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}.put.parameters[5].description": "The ID of a user to assign the merge request",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}.put.parameters[5].format": "int32",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}.put.parameters[5].in": "formData",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}.put.parameters[5].name": "assignee_id",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}.put.parameters[5].required": false,
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}.put.parameters[5].type": "integer",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}.put.parameters[6].description": "The ID of a milestone to assign the merge request",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}.put.parameters[6].format": "int32",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}.put.parameters[6].in": "formData",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}.put.parameters[6].name": "milestone_id",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}.put.parameters[6].required": false,
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}.put.parameters[6].type": "integer",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}.put.parameters[7].description": "Comma-separated list of label names",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}.put.parameters[7].in": "formData",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}.put.parameters[7].name": "labels",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}.put.parameters[7].required": false,
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}.put.parameters[7].type": "string",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}.put.parameters[8].description": "Remove source branch when merging",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}.put.parameters[8].in": "formData",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}.put.parameters[8].name": "remove_source_branch",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}.put.parameters[8].required": false,
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}.put.parameters[8].type": "boolean",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}.put.parameters[9].format": "int32",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}.put.parameters[9].in": "path",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}.put.parameters[9].name": "merge_request_id",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}.put.parameters[9].required": true,
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}.put.parameters[9].type": "integer",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}.put.produces.length": 1,
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}.put.produces[0]": "application/json",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}.put.responses.200.description": "Update a merge request",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}.put.responses.200.schema.$ref": "#/definitions/MergeRequest",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}.put.summary": "Update a merge request",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}.put.tags.length": 1,
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}.put.tags[0]": "projects",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/add_spent_time.post.consumes.length": 1,
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/add_spent_time.post.consumes[0]": "application/json",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/add_spent_time.post.description": "Add spent time for a project merge_request",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/add_spent_time.post.operationId": "postV3ProjectsIdMergeRequestsMergeRequestIdAddSpentTime",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/add_spent_time.post.parameters.length": 3,
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/add_spent_time.post.parameters[0].description": "The ID of a project",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/add_spent_time.post.parameters[0].in": "path",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/add_spent_time.post.parameters[0].name": "id",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/add_spent_time.post.parameters[0].required": true,
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/add_spent_time.post.parameters[0].type": "string",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/add_spent_time.post.parameters[1].description": "The ID of a project merge_request",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/add_spent_time.post.parameters[1].format": "int32",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/add_spent_time.post.parameters[1].in": "path",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/add_spent_time.post.parameters[1].name": "merge_request_id",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/add_spent_time.post.parameters[1].required": true,
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/add_spent_time.post.parameters[1].type": "integer",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/add_spent_time.post.parameters[2].description": "The duration to be parsed",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/add_spent_time.post.parameters[2].in": "formData",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/add_spent_time.post.parameters[2].name": "duration",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/add_spent_time.post.parameters[2].required": true,
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/add_spent_time.post.parameters[2].type": "string",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/add_spent_time.post.produces.length": 1,
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/add_spent_time.post.produces[0]": "application/json",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/add_spent_time.post.responses.201.description": "Add spent time for a project merge_request",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/add_spent_time.post.summary": "Add spent time for a project merge_request",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/add_spent_time.post.tags.length": 1,
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/add_spent_time.post.tags[0]": "projects",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/award_emoji.get.description": "This feature was introduced in 8.9",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/award_emoji.get.operationId": "getV3ProjectsIdMergeRequestsMergeRequestIdAwardEmoji",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/award_emoji.get.parameters.length": 4,
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/award_emoji.get.parameters[0].description": "The ID of a project",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/award_emoji.get.parameters[0].in": "path",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/award_emoji.get.parameters[0].name": "id",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/award_emoji.get.parameters[0].required": true,
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/award_emoji.get.parameters[0].type": "string",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/award_emoji.get.parameters[1].description": "The ID of an Issue, Merge Request or Snippet",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/award_emoji.get.parameters[1].format": "int32",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/award_emoji.get.parameters[1].in": "path",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/award_emoji.get.parameters[1].name": "merge_request_id",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/award_emoji.get.parameters[1].required": true,
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/award_emoji.get.parameters[1].type": "integer",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/award_emoji.get.parameters[2].description": "Current page number",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/award_emoji.get.parameters[2].format": "int32",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/award_emoji.get.parameters[2].in": "query",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/award_emoji.get.parameters[2].name": "page",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/award_emoji.get.parameters[2].required": false,
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/award_emoji.get.parameters[2].type": "integer",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/award_emoji.get.parameters[3].description": "Number of items per page",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/award_emoji.get.parameters[3].format": "int32",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/award_emoji.get.parameters[3].in": "query",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/award_emoji.get.parameters[3].name": "per_page",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/award_emoji.get.parameters[3].required": false,
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/award_emoji.get.parameters[3].type": "integer",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/award_emoji.get.produces.length": 1,
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/award_emoji.get.produces[0]": "application/json",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/award_emoji.get.responses.200.description": "Get a list of project +awardable+ award emoji",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/award_emoji.get.responses.200.schema.$ref": "#/definitions/AwardEmoji",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/award_emoji.get.summary": "Get a list of project +awardable+ award emoji",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/award_emoji.get.tags.length": 1,
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/award_emoji.get.tags[0]": "projects",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/award_emoji.post.consumes.length": 1,
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/award_emoji.post.consumes[0]": "application/json",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/award_emoji.post.description": "This feature was introduced in 8.9",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/award_emoji.post.operationId": "postV3ProjectsIdMergeRequestsMergeRequestIdAwardEmoji",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/award_emoji.post.parameters.length": 3,
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/award_emoji.post.parameters[0].description": "The name of a award_emoji (without colons)",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/award_emoji.post.parameters[0].in": "formData",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/award_emoji.post.parameters[0].name": "name",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/award_emoji.post.parameters[0].required": true,
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/award_emoji.post.parameters[0].type": "string",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/award_emoji.post.parameters[1].format": "int32",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/award_emoji.post.parameters[1].in": "path",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/award_emoji.post.parameters[1].name": "id",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/award_emoji.post.parameters[1].required": true,
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/award_emoji.post.parameters[1].type": "integer",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/award_emoji.post.parameters[2].format": "int32",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/award_emoji.post.parameters[2].in": "path",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/award_emoji.post.parameters[2].name": "merge_request_id",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/award_emoji.post.parameters[2].required": true,
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/award_emoji.post.parameters[2].type": "integer",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/award_emoji.post.produces.length": 1,
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/award_emoji.post.produces[0]": "application/json",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/award_emoji.post.responses.201.description": "Award a new Emoji",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/award_emoji.post.responses.201.schema.$ref": "#/definitions/AwardEmoji",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/award_emoji.post.summary": "Award a new Emoji",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/award_emoji.post.tags.length": 1,
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/award_emoji.post.tags[0]": "projects",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/award_emoji/{award_id}.delete.description": "This feature was introduced in 8.9",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/award_emoji/{award_id}.delete.operationId": "deleteV3ProjectsIdMergeRequestsMergeRequestIdAwardEmojiAwardId",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/award_emoji/{award_id}.delete.parameters.length": 3,
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/award_emoji/{award_id}.delete.parameters[0].description": "The ID of an award emoji",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/award_emoji/{award_id}.delete.parameters[0].format": "int32",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/award_emoji/{award_id}.delete.parameters[0].in": "path",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/award_emoji/{award_id}.delete.parameters[0].name": "award_id",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/award_emoji/{award_id}.delete.parameters[0].required": true,
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/award_emoji/{award_id}.delete.parameters[0].type": "integer",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/award_emoji/{award_id}.delete.parameters[1].format": "int32",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/award_emoji/{award_id}.delete.parameters[1].in": "path",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/award_emoji/{award_id}.delete.parameters[1].name": "id",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/award_emoji/{award_id}.delete.parameters[1].required": true,
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/award_emoji/{award_id}.delete.parameters[1].type": "integer",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/award_emoji/{award_id}.delete.parameters[2].format": "int32",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/award_emoji/{award_id}.delete.parameters[2].in": "path",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/award_emoji/{award_id}.delete.parameters[2].name": "merge_request_id",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/award_emoji/{award_id}.delete.parameters[2].required": true,
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/award_emoji/{award_id}.delete.parameters[2].type": "integer",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/award_emoji/{award_id}.delete.produces.length": 1,
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/award_emoji/{award_id}.delete.produces[0]": "application/json",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/award_emoji/{award_id}.delete.responses.200.description": "Delete a +awardables+ award emoji",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/award_emoji/{award_id}.delete.responses.200.schema.$ref": "#/definitions/AwardEmoji",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/award_emoji/{award_id}.delete.summary": "Delete a +awardables+ award emoji",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/award_emoji/{award_id}.delete.tags.length": 1,
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/award_emoji/{award_id}.delete.tags[0]": "projects",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/award_emoji/{award_id}.get.description": "This feature was introduced in 8.9",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/award_emoji/{award_id}.get.operationId": "getV3ProjectsIdMergeRequestsMergeRequestIdAwardEmojiAwardId",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/award_emoji/{award_id}.get.parameters.length": 3,
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/award_emoji/{award_id}.get.parameters[0].description": "The ID of the award",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/award_emoji/{award_id}.get.parameters[0].format": "int32",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/award_emoji/{award_id}.get.parameters[0].in": "path",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/award_emoji/{award_id}.get.parameters[0].name": "award_id",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/award_emoji/{award_id}.get.parameters[0].required": true,
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/award_emoji/{award_id}.get.parameters[0].type": "integer",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/award_emoji/{award_id}.get.parameters[1].format": "int32",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/award_emoji/{award_id}.get.parameters[1].in": "path",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/award_emoji/{award_id}.get.parameters[1].name": "id",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/award_emoji/{award_id}.get.parameters[1].required": true,
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/award_emoji/{award_id}.get.parameters[1].type": "integer",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/award_emoji/{award_id}.get.parameters[2].format": "int32",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/award_emoji/{award_id}.get.parameters[2].in": "path",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/award_emoji/{award_id}.get.parameters[2].name": "merge_request_id",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/award_emoji/{award_id}.get.parameters[2].required": true,
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/award_emoji/{award_id}.get.parameters[2].type": "integer",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/award_emoji/{award_id}.get.produces.length": 1,
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/award_emoji/{award_id}.get.produces[0]": "application/json",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/award_emoji/{award_id}.get.responses.200.description": "Get a specific award emoji",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/award_emoji/{award_id}.get.responses.200.schema.$ref": "#/definitions/AwardEmoji",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/award_emoji/{award_id}.get.summary": "Get a specific award emoji",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/award_emoji/{award_id}.get.tags.length": 1,
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/award_emoji/{award_id}.get.tags[0]": "projects",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/cancel_merge_when_build_succeeds.post.consumes.length": 1,
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/cancel_merge_when_build_succeeds.post.consumes[0]": "application/json",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/cancel_merge_when_build_succeeds.post.description": "Cancel merge if \"Merge When Pipeline Succeeds\" is enabled",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/cancel_merge_when_build_succeeds.post.operationId": "postV3ProjectsIdMergeRequestsMergeRequestIdCancelMergeWhenBuildSucceeds",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/cancel_merge_when_build_succeeds.post.parameters.length": 2,
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/cancel_merge_when_build_succeeds.post.parameters[0].description": "The ID of a project",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/cancel_merge_when_build_succeeds.post.parameters[0].in": "path",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/cancel_merge_when_build_succeeds.post.parameters[0].name": "id",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/cancel_merge_when_build_succeeds.post.parameters[0].required": true,
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/cancel_merge_when_build_succeeds.post.parameters[0].type": "string",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/cancel_merge_when_build_succeeds.post.parameters[1].format": "int32",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/cancel_merge_when_build_succeeds.post.parameters[1].in": "path",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/cancel_merge_when_build_succeeds.post.parameters[1].name": "merge_request_id",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/cancel_merge_when_build_succeeds.post.parameters[1].required": true,
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/cancel_merge_when_build_succeeds.post.parameters[1].type": "integer",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/cancel_merge_when_build_succeeds.post.produces.length": 1,
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/cancel_merge_when_build_succeeds.post.produces[0]": "application/json",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/cancel_merge_when_build_succeeds.post.responses.201.description": "Cancel merge if \"Merge When Pipeline Succeeds\" is enabled",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/cancel_merge_when_build_succeeds.post.responses.201.schema.$ref": "#/definitions/MergeRequest",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/cancel_merge_when_build_succeeds.post.summary": "Cancel merge if \"Merge When Pipeline Succeeds\" is enabled",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/cancel_merge_when_build_succeeds.post.tags.length": 1,
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/cancel_merge_when_build_succeeds.post.tags[0]": "projects",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/changes.get.description": "Show the merge request changes",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/changes.get.operationId": "getV3ProjectsIdMergeRequestsMergeRequestIdChanges",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/changes.get.parameters.length": 2,
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/changes.get.parameters[0].description": "The ID of a project",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/changes.get.parameters[0].in": "path",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/changes.get.parameters[0].name": "id",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/changes.get.parameters[0].required": true,
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/changes.get.parameters[0].type": "string",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/changes.get.parameters[1].format": "int32",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/changes.get.parameters[1].in": "path",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/changes.get.parameters[1].name": "merge_request_id",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/changes.get.parameters[1].required": true,
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/changes.get.parameters[1].type": "integer",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/changes.get.produces.length": 1,
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/changes.get.produces[0]": "application/json",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/changes.get.responses.200.description": "Show the merge request changes",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/changes.get.responses.200.schema.$ref": "#/definitions/MergeRequestChanges",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/changes.get.summary": "Show the merge request changes",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/changes.get.tags.length": 1,
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/changes.get.tags[0]": "projects",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/closes_issues.get.description": "List issues that will be closed on merge",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/closes_issues.get.operationId": "getV3ProjectsIdMergeRequestsMergeRequestIdClosesIssues",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/closes_issues.get.parameters.length": 4,
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/closes_issues.get.parameters[0].description": "The ID of a project",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/closes_issues.get.parameters[0].in": "path",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/closes_issues.get.parameters[0].name": "id",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/closes_issues.get.parameters[0].required": true,
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/closes_issues.get.parameters[0].type": "string",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/closes_issues.get.parameters[1].description": "Current page number",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/closes_issues.get.parameters[1].format": "int32",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/closes_issues.get.parameters[1].in": "query",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/closes_issues.get.parameters[1].name": "page",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/closes_issues.get.parameters[1].required": false,
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/closes_issues.get.parameters[1].type": "integer",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/closes_issues.get.parameters[2].description": "Number of items per page",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/closes_issues.get.parameters[2].format": "int32",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/closes_issues.get.parameters[2].in": "query",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/closes_issues.get.parameters[2].name": "per_page",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/closes_issues.get.parameters[2].required": false,
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/closes_issues.get.parameters[2].type": "integer",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/closes_issues.get.parameters[3].format": "int32",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/closes_issues.get.parameters[3].in": "path",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/closes_issues.get.parameters[3].name": "merge_request_id",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/closes_issues.get.parameters[3].required": true,
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/closes_issues.get.parameters[3].type": "integer",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/closes_issues.get.produces.length": 1,
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/closes_issues.get.produces[0]": "application/json",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/closes_issues.get.responses.200.description": "List issues that will be closed on merge",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/closes_issues.get.responses.200.schema.$ref": "#/definitions/MRNote",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/closes_issues.get.summary": "List issues that will be closed on merge",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/closes_issues.get.tags.length": 1,
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/closes_issues.get.tags[0]": "projects",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/comments.get.description": "Duplicate. DEPRECATED and WILL BE REMOVED in 9.0",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/comments.get.operationId": "getV3ProjectsIdMergeRequestsMergeRequestIdComments",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/comments.get.parameters.length": 4,
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/comments.get.parameters[0].description": "The ID of a project",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/comments.get.parameters[0].in": "path",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/comments.get.parameters[0].name": "id",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/comments.get.parameters[0].required": true,
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/comments.get.parameters[0].type": "string",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/comments.get.parameters[1].description": "Current page number",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/comments.get.parameters[1].format": "int32",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/comments.get.parameters[1].in": "query",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/comments.get.parameters[1].name": "page",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/comments.get.parameters[1].required": false,
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/comments.get.parameters[1].type": "integer",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/comments.get.parameters[2].description": "Number of items per page",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/comments.get.parameters[2].format": "int32",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/comments.get.parameters[2].in": "query",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/comments.get.parameters[2].name": "per_page",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/comments.get.parameters[2].required": false,
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/comments.get.parameters[2].type": "integer",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/comments.get.parameters[3].format": "int32",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/comments.get.parameters[3].in": "path",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/comments.get.parameters[3].name": "merge_request_id",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/comments.get.parameters[3].required": true,
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/comments.get.parameters[3].type": "integer",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/comments.get.produces.length": 1,
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/comments.get.produces[0]": "application/json",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/comments.get.responses.200.description": "Get the comments of a merge request",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/comments.get.responses.200.schema.$ref": "#/definitions/MRNote",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/comments.get.summary": "Get the comments of a merge request",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/comments.get.tags.length": 1,
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/comments.get.tags[0]": "projects",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/comments.post.consumes.length": 1,
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/comments.post.consumes[0]": "application/json",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/comments.post.description": "Duplicate. DEPRECATED and WILL BE REMOVED in 9.0",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/comments.post.operationId": "postV3ProjectsIdMergeRequestsMergeRequestIdComments",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/comments.post.parameters.length": 3,
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/comments.post.parameters[0].description": "The ID of a project",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/comments.post.parameters[0].in": "path",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/comments.post.parameters[0].name": "id",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/comments.post.parameters[0].required": true,
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/comments.post.parameters[0].type": "string",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/comments.post.parameters[1].description": "The text of the comment",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/comments.post.parameters[1].in": "formData",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/comments.post.parameters[1].name": "note",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/comments.post.parameters[1].required": true,
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/comments.post.parameters[1].type": "string",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/comments.post.parameters[2].format": "int32",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/comments.post.parameters[2].in": "path",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/comments.post.parameters[2].name": "merge_request_id",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/comments.post.parameters[2].required": true,
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/comments.post.parameters[2].type": "integer",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/comments.post.produces.length": 1,
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/comments.post.produces[0]": "application/json",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/comments.post.responses.201.description": "Post a comment to a merge request",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/comments.post.responses.201.schema.$ref": "#/definitions/MRNote",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/comments.post.summary": "Post a comment to a merge request",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/comments.post.tags.length": 1,
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/comments.post.tags[0]": "projects",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/commits.get.description": "Get the commits of a merge request",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/commits.get.operationId": "getV3ProjectsIdMergeRequestsMergeRequestIdCommits",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/commits.get.parameters.length": 2,
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/commits.get.parameters[0].description": "The ID of a project",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/commits.get.parameters[0].in": "path",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/commits.get.parameters[0].name": "id",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/commits.get.parameters[0].required": true,
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/commits.get.parameters[0].type": "string",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/commits.get.parameters[1].format": "int32",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/commits.get.parameters[1].in": "path",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/commits.get.parameters[1].name": "merge_request_id",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/commits.get.parameters[1].required": true,
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/commits.get.parameters[1].type": "integer",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/commits.get.produces.length": 1,
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/commits.get.produces[0]": "application/json",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/commits.get.responses.200.description": "Get the commits of a merge request",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/commits.get.responses.200.schema.$ref": "#/definitions/RepoCommit",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/commits.get.summary": "Get the commits of a merge request",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/commits.get.tags.length": 1,
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/commits.get.tags[0]": "projects",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/merge.put.consumes.length": 1,
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/merge.put.consumes[0]": "application/json",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/merge.put.description": "Merge a merge request",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/merge.put.operationId": "putV3ProjectsIdMergeRequestsMergeRequestIdMerge",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/merge.put.parameters.length": 6,
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/merge.put.parameters[0].description": "The ID of a project",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/merge.put.parameters[0].in": "path",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/merge.put.parameters[0].name": "id",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/merge.put.parameters[0].required": true,
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/merge.put.parameters[0].type": "string",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/merge.put.parameters[1].description": "Custom merge commit message",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/merge.put.parameters[1].in": "formData",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/merge.put.parameters[1].name": "merge_commit_message",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/merge.put.parameters[1].required": false,
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/merge.put.parameters[1].type": "string",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/merge.put.parameters[2].description": "When true, the source branch will be deleted if possible",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/merge.put.parameters[2].in": "formData",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/merge.put.parameters[2].name": "should_remove_source_branch",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/merge.put.parameters[2].required": false,
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/merge.put.parameters[2].type": "boolean",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/merge.put.parameters[3].description": "When true, this merge request will be merged when the pipeline succeeds",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/merge.put.parameters[3].in": "formData",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/merge.put.parameters[3].name": "merge_when_build_succeeds",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/merge.put.parameters[3].required": false,
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/merge.put.parameters[3].type": "boolean",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/merge.put.parameters[4].description": "When present, must have the HEAD SHA of the source branch",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/merge.put.parameters[4].in": "formData",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/merge.put.parameters[4].name": "sha",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/merge.put.parameters[4].required": false,
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/merge.put.parameters[4].type": "string",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/merge.put.parameters[5].format": "int32",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/merge.put.parameters[5].in": "path",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/merge.put.parameters[5].name": "merge_request_id",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/merge.put.parameters[5].required": true,
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/merge.put.parameters[5].type": "integer",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/merge.put.produces.length": 1,
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/merge.put.produces[0]": "application/json",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/merge.put.responses.200.description": "Merge a merge request",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/merge.put.responses.200.schema.$ref": "#/definitions/MergeRequest",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/merge.put.summary": "Merge a merge request",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/merge.put.tags.length": 1,
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/merge.put.tags[0]": "projects",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/notes/{note_id}/award_emoji.get.description": "This feature was introduced in 8.9",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/notes/{note_id}/award_emoji.get.operationId": "getV3ProjectsIdMergeRequestsMergeRequestIdNotesNoteIdAwardEmoji",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/notes/{note_id}/award_emoji.get.parameters.length": 5,
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/notes/{note_id}/award_emoji.get.parameters[0].description": "Current page number",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/notes/{note_id}/award_emoji.get.parameters[0].format": "int32",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/notes/{note_id}/award_emoji.get.parameters[0].in": "query",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/notes/{note_id}/award_emoji.get.parameters[0].name": "page",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/notes/{note_id}/award_emoji.get.parameters[0].required": false,
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/notes/{note_id}/award_emoji.get.parameters[0].type": "integer",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/notes/{note_id}/award_emoji.get.parameters[1].description": "Number of items per page",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/notes/{note_id}/award_emoji.get.parameters[1].format": "int32",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/notes/{note_id}/award_emoji.get.parameters[1].in": "query",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/notes/{note_id}/award_emoji.get.parameters[1].name": "per_page",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/notes/{note_id}/award_emoji.get.parameters[1].required": false,
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/notes/{note_id}/award_emoji.get.parameters[1].type": "integer",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/notes/{note_id}/award_emoji.get.parameters[2].format": "int32",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/notes/{note_id}/award_emoji.get.parameters[2].in": "path",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/notes/{note_id}/award_emoji.get.parameters[2].name": "id",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/notes/{note_id}/award_emoji.get.parameters[2].required": true,
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/notes/{note_id}/award_emoji.get.parameters[2].type": "integer",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/notes/{note_id}/award_emoji.get.parameters[3].format": "int32",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/notes/{note_id}/award_emoji.get.parameters[3].in": "path",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/notes/{note_id}/award_emoji.get.parameters[3].name": "merge_request_id",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/notes/{note_id}/award_emoji.get.parameters[3].required": true,
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/notes/{note_id}/award_emoji.get.parameters[3].type": "integer",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/notes/{note_id}/award_emoji.get.parameters[4].format": "int32",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/notes/{note_id}/award_emoji.get.parameters[4].in": "path",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/notes/{note_id}/award_emoji.get.parameters[4].name": "note_id",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/notes/{note_id}/award_emoji.get.parameters[4].required": true,
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/notes/{note_id}/award_emoji.get.parameters[4].type": "integer",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/notes/{note_id}/award_emoji.get.produces.length": 1,
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/notes/{note_id}/award_emoji.get.produces[0]": "application/json",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/notes/{note_id}/award_emoji.get.responses.200.description": "Get a list of project +awardable+ award emoji",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/notes/{note_id}/award_emoji.get.responses.200.schema.$ref": "#/definitions/AwardEmoji",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/notes/{note_id}/award_emoji.get.summary": "Get a list of project +awardable+ award emoji",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/notes/{note_id}/award_emoji.get.tags.length": 1,
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/notes/{note_id}/award_emoji.get.tags[0]": "projects",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/notes/{note_id}/award_emoji.post.consumes.length": 1,
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/notes/{note_id}/award_emoji.post.consumes[0]": "application/json",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/notes/{note_id}/award_emoji.post.description": "This feature was introduced in 8.9",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/notes/{note_id}/award_emoji.post.operationId": "postV3ProjectsIdMergeRequestsMergeRequestIdNotesNoteIdAwardEmoji",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/notes/{note_id}/award_emoji.post.parameters.length": 4,
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/notes/{note_id}/award_emoji.post.parameters[0].description": "The name of a award_emoji (without colons)",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/notes/{note_id}/award_emoji.post.parameters[0].in": "formData",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/notes/{note_id}/award_emoji.post.parameters[0].name": "name",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/notes/{note_id}/award_emoji.post.parameters[0].required": true,
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/notes/{note_id}/award_emoji.post.parameters[0].type": "string",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/notes/{note_id}/award_emoji.post.parameters[1].format": "int32",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/notes/{note_id}/award_emoji.post.parameters[1].in": "path",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/notes/{note_id}/award_emoji.post.parameters[1].name": "id",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/notes/{note_id}/award_emoji.post.parameters[1].required": true,
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/notes/{note_id}/award_emoji.post.parameters[1].type": "integer",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/notes/{note_id}/award_emoji.post.parameters[2].format": "int32",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/notes/{note_id}/award_emoji.post.parameters[2].in": "path",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/notes/{note_id}/award_emoji.post.parameters[2].name": "merge_request_id",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/notes/{note_id}/award_emoji.post.parameters[2].required": true,
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/notes/{note_id}/award_emoji.post.parameters[2].type": "integer",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/notes/{note_id}/award_emoji.post.parameters[3].format": "int32",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/notes/{note_id}/award_emoji.post.parameters[3].in": "path",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/notes/{note_id}/award_emoji.post.parameters[3].name": "note_id",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/notes/{note_id}/award_emoji.post.parameters[3].required": true,
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/notes/{note_id}/award_emoji.post.parameters[3].type": "integer",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/notes/{note_id}/award_emoji.post.produces.length": 1,
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/notes/{note_id}/award_emoji.post.produces[0]": "application/json",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/notes/{note_id}/award_emoji.post.responses.201.description": "Award a new Emoji",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/notes/{note_id}/award_emoji.post.responses.201.schema.$ref": "#/definitions/AwardEmoji",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/notes/{note_id}/award_emoji.post.summary": "Award a new Emoji",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/notes/{note_id}/award_emoji.post.tags.length": 1,
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/notes/{note_id}/award_emoji.post.tags[0]": "projects",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/notes/{note_id}/award_emoji/{award_id}.delete.description": "This feature was introduced in 8.9",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/notes/{note_id}/award_emoji/{award_id}.delete.operationId": "deleteV3ProjectsIdMergeRequestsMergeRequestIdNotesNoteIdAwardEmojiAwardId",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/notes/{note_id}/award_emoji/{award_id}.delete.parameters.length": 4,
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/notes/{note_id}/award_emoji/{award_id}.delete.parameters[0].description": "The ID of an award emoji",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/notes/{note_id}/award_emoji/{award_id}.delete.parameters[0].format": "int32",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/notes/{note_id}/award_emoji/{award_id}.delete.parameters[0].in": "path",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/notes/{note_id}/award_emoji/{award_id}.delete.parameters[0].name": "award_id",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/notes/{note_id}/award_emoji/{award_id}.delete.parameters[0].required": true,
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/notes/{note_id}/award_emoji/{award_id}.delete.parameters[0].type": "integer",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/notes/{note_id}/award_emoji/{award_id}.delete.parameters[1].format": "int32",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/notes/{note_id}/award_emoji/{award_id}.delete.parameters[1].in": "path",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/notes/{note_id}/award_emoji/{award_id}.delete.parameters[1].name": "id",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/notes/{note_id}/award_emoji/{award_id}.delete.parameters[1].required": true,
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/notes/{note_id}/award_emoji/{award_id}.delete.parameters[1].type": "integer",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/notes/{note_id}/award_emoji/{award_id}.delete.parameters[2].format": "int32",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/notes/{note_id}/award_emoji/{award_id}.delete.parameters[2].in": "path",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/notes/{note_id}/award_emoji/{award_id}.delete.parameters[2].name": "merge_request_id",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/notes/{note_id}/award_emoji/{award_id}.delete.parameters[2].required": true,
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/notes/{note_id}/award_emoji/{award_id}.delete.parameters[2].type": "integer",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/notes/{note_id}/award_emoji/{award_id}.delete.parameters[3].format": "int32",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/notes/{note_id}/award_emoji/{award_id}.delete.parameters[3].in": "path",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/notes/{note_id}/award_emoji/{award_id}.delete.parameters[3].name": "note_id",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/notes/{note_id}/award_emoji/{award_id}.delete.parameters[3].required": true,
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/notes/{note_id}/award_emoji/{award_id}.delete.parameters[3].type": "integer",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/notes/{note_id}/award_emoji/{award_id}.delete.produces.length": 1,
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/notes/{note_id}/award_emoji/{award_id}.delete.produces[0]": "application/json",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/notes/{note_id}/award_emoji/{award_id}.delete.responses.200.description": "Delete a +awardables+ award emoji",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/notes/{note_id}/award_emoji/{award_id}.delete.responses.200.schema.$ref": "#/definitions/AwardEmoji",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/notes/{note_id}/award_emoji/{award_id}.delete.summary": "Delete a +awardables+ award emoji",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/notes/{note_id}/award_emoji/{award_id}.delete.tags.length": 1,
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/notes/{note_id}/award_emoji/{award_id}.delete.tags[0]": "projects",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/notes/{note_id}/award_emoji/{award_id}.get.description": "This feature was introduced in 8.9",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/notes/{note_id}/award_emoji/{award_id}.get.operationId": "getV3ProjectsIdMergeRequestsMergeRequestIdNotesNoteIdAwardEmojiAwardId",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/notes/{note_id}/award_emoji/{award_id}.get.parameters.length": 4,
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/notes/{note_id}/award_emoji/{award_id}.get.parameters[0].description": "The ID of the award",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/notes/{note_id}/award_emoji/{award_id}.get.parameters[0].format": "int32",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/notes/{note_id}/award_emoji/{award_id}.get.parameters[0].in": "path",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/notes/{note_id}/award_emoji/{award_id}.get.parameters[0].name": "award_id",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/notes/{note_id}/award_emoji/{award_id}.get.parameters[0].required": true,
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/notes/{note_id}/award_emoji/{award_id}.get.parameters[0].type": "integer",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/notes/{note_id}/award_emoji/{award_id}.get.parameters[1].format": "int32",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/notes/{note_id}/award_emoji/{award_id}.get.parameters[1].in": "path",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/notes/{note_id}/award_emoji/{award_id}.get.parameters[1].name": "id",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/notes/{note_id}/award_emoji/{award_id}.get.parameters[1].required": true,
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/notes/{note_id}/award_emoji/{award_id}.get.parameters[1].type": "integer",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/notes/{note_id}/award_emoji/{award_id}.get.parameters[2].format": "int32",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/notes/{note_id}/award_emoji/{award_id}.get.parameters[2].in": "path",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/notes/{note_id}/award_emoji/{award_id}.get.parameters[2].name": "merge_request_id",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/notes/{note_id}/award_emoji/{award_id}.get.parameters[2].required": true,
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/notes/{note_id}/award_emoji/{award_id}.get.parameters[2].type": "integer",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/notes/{note_id}/award_emoji/{award_id}.get.parameters[3].format": "int32",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/notes/{note_id}/award_emoji/{award_id}.get.parameters[3].in": "path",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/notes/{note_id}/award_emoji/{award_id}.get.parameters[3].name": "note_id",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/notes/{note_id}/award_emoji/{award_id}.get.parameters[3].required": true,
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/notes/{note_id}/award_emoji/{award_id}.get.parameters[3].type": "integer",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/notes/{note_id}/award_emoji/{award_id}.get.produces.length": 1,
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/notes/{note_id}/award_emoji/{award_id}.get.produces[0]": "application/json",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/notes/{note_id}/award_emoji/{award_id}.get.responses.200.description": "Get a specific award emoji",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/notes/{note_id}/award_emoji/{award_id}.get.responses.200.schema.$ref": "#/definitions/AwardEmoji",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/notes/{note_id}/award_emoji/{award_id}.get.summary": "Get a specific award emoji",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/notes/{note_id}/award_emoji/{award_id}.get.tags.length": 1,
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/notes/{note_id}/award_emoji/{award_id}.get.tags[0]": "projects",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/reset_spent_time.post.consumes.length": 1,
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/reset_spent_time.post.consumes[0]": "application/json",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/reset_spent_time.post.description": "Reset spent time for a project merge_request",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/reset_spent_time.post.operationId": "postV3ProjectsIdMergeRequestsMergeRequestIdResetSpentTime",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/reset_spent_time.post.parameters.length": 2,
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/reset_spent_time.post.parameters[0].description": "The ID of a project",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/reset_spent_time.post.parameters[0].in": "path",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/reset_spent_time.post.parameters[0].name": "id",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/reset_spent_time.post.parameters[0].required": true,
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/reset_spent_time.post.parameters[0].type": "string",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/reset_spent_time.post.parameters[1].description": "The ID of a project merge_request",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/reset_spent_time.post.parameters[1].format": "int32",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/reset_spent_time.post.parameters[1].in": "path",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/reset_spent_time.post.parameters[1].name": "merge_request_id",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/reset_spent_time.post.parameters[1].required": true,
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/reset_spent_time.post.parameters[1].type": "integer",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/reset_spent_time.post.produces.length": 1,
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/reset_spent_time.post.produces[0]": "application/json",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/reset_spent_time.post.responses.201.description": "Reset spent time for a project merge_request",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/reset_spent_time.post.summary": "Reset spent time for a project merge_request",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/reset_spent_time.post.tags.length": 1,
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/reset_spent_time.post.tags[0]": "projects",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/reset_time_estimate.post.consumes.length": 1,
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/reset_time_estimate.post.consumes[0]": "application/json",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/reset_time_estimate.post.description": "Reset the time estimate for a project merge_request",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/reset_time_estimate.post.operationId": "postV3ProjectsIdMergeRequestsMergeRequestIdResetTimeEstimate",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/reset_time_estimate.post.parameters.length": 2,
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/reset_time_estimate.post.parameters[0].description": "The ID of a project",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/reset_time_estimate.post.parameters[0].in": "path",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/reset_time_estimate.post.parameters[0].name": "id",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/reset_time_estimate.post.parameters[0].required": true,
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/reset_time_estimate.post.parameters[0].type": "string",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/reset_time_estimate.post.parameters[1].description": "The ID of a project merge_request",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/reset_time_estimate.post.parameters[1].format": "int32",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/reset_time_estimate.post.parameters[1].in": "path",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/reset_time_estimate.post.parameters[1].name": "merge_request_id",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/reset_time_estimate.post.parameters[1].required": true,
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/reset_time_estimate.post.parameters[1].type": "integer",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/reset_time_estimate.post.produces.length": 1,
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/reset_time_estimate.post.produces[0]": "application/json",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/reset_time_estimate.post.responses.201.description": "Reset the time estimate for a project merge_request",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/reset_time_estimate.post.summary": "Reset the time estimate for a project merge_request",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/reset_time_estimate.post.tags.length": 1,
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/reset_time_estimate.post.tags[0]": "projects",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/time_estimate.post.consumes.length": 1,
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/time_estimate.post.consumes[0]": "application/json",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/time_estimate.post.description": "Set a time estimate for a project merge_request",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/time_estimate.post.operationId": "postV3ProjectsIdMergeRequestsMergeRequestIdTimeEstimate",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/time_estimate.post.parameters.length": 3,
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/time_estimate.post.parameters[0].description": "The ID of a project",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/time_estimate.post.parameters[0].in": "path",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/time_estimate.post.parameters[0].name": "id",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/time_estimate.post.parameters[0].required": true,
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/time_estimate.post.parameters[0].type": "string",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/time_estimate.post.parameters[1].description": "The ID of a project merge_request",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/time_estimate.post.parameters[1].format": "int32",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/time_estimate.post.parameters[1].in": "path",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/time_estimate.post.parameters[1].name": "merge_request_id",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/time_estimate.post.parameters[1].required": true,
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/time_estimate.post.parameters[1].type": "integer",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/time_estimate.post.parameters[2].description": "The duration to be parsed",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/time_estimate.post.parameters[2].in": "formData",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/time_estimate.post.parameters[2].name": "duration",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/time_estimate.post.parameters[2].required": true,
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/time_estimate.post.parameters[2].type": "string",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/time_estimate.post.produces.length": 1,
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/time_estimate.post.produces[0]": "application/json",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/time_estimate.post.responses.201.description": "Set a time estimate for a project merge_request",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/time_estimate.post.summary": "Set a time estimate for a project merge_request",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/time_estimate.post.tags.length": 1,
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/time_estimate.post.tags[0]": "projects",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/time_stats.get.description": "Show time stats for a project merge_request",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/time_stats.get.operationId": "getV3ProjectsIdMergeRequestsMergeRequestIdTimeStats",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/time_stats.get.parameters.length": 2,
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/time_stats.get.parameters[0].description": "The ID of a project",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/time_stats.get.parameters[0].in": "path",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/time_stats.get.parameters[0].name": "id",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/time_stats.get.parameters[0].required": true,
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/time_stats.get.parameters[0].type": "string",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/time_stats.get.parameters[1].description": "The ID of a project merge_request",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/time_stats.get.parameters[1].format": "int32",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/time_stats.get.parameters[1].in": "path",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/time_stats.get.parameters[1].name": "merge_request_id",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/time_stats.get.parameters[1].required": true,
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/time_stats.get.parameters[1].type": "integer",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/time_stats.get.produces.length": 1,
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/time_stats.get.produces[0]": "application/json",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/time_stats.get.responses.200.description": "Show time stats for a project merge_request",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/time_stats.get.summary": "Show time stats for a project merge_request",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/time_stats.get.tags.length": 1,
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/time_stats.get.tags[0]": "projects",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/todo.post.consumes.length": 1,
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/todo.post.consumes[0]": "application/json",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/todo.post.description": "Create a todo on an issuable",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/todo.post.operationId": "postV3ProjectsIdMergeRequestsMergeRequestIdTodo",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/todo.post.parameters.length": 2,
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/todo.post.parameters[0].description": "The ID of a project",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/todo.post.parameters[0].in": "path",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/todo.post.parameters[0].name": "id",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/todo.post.parameters[0].required": true,
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/todo.post.parameters[0].type": "string",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/todo.post.parameters[1].description": "The ID of an issuable",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/todo.post.parameters[1].format": "int32",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/todo.post.parameters[1].in": "path",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/todo.post.parameters[1].name": "merge_request_id",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/todo.post.parameters[1].required": true,
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/todo.post.parameters[1].type": "integer",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/todo.post.produces.length": 1,
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/todo.post.produces[0]": "application/json",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/todo.post.responses.201.description": "Create a todo on an issuable",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/todo.post.responses.201.schema.$ref": "#/definitions/Todo",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/todo.post.summary": "Create a todo on an issuable",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/todo.post.tags.length": 1,
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/todo.post.tags[0]": "projects",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/versions.get.description": "This feature was introduced in GitLab 8.12.",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/versions.get.operationId": "getV3ProjectsIdMergeRequestsMergeRequestIdVersions",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/versions.get.parameters.length": 2,
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/versions.get.parameters[0].description": "The ID of a project",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/versions.get.parameters[0].in": "path",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/versions.get.parameters[0].name": "id",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/versions.get.parameters[0].required": true,
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/versions.get.parameters[0].type": "string",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/versions.get.parameters[1].description": "The ID of a merge request",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/versions.get.parameters[1].format": "int32",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/versions.get.parameters[1].in": "path",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/versions.get.parameters[1].name": "merge_request_id",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/versions.get.parameters[1].required": true,
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/versions.get.parameters[1].type": "integer",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/versions.get.produces.length": 1,
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/versions.get.produces[0]": "application/json",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/versions.get.responses.200.description": "Get a list of merge request diff versions",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/versions.get.responses.200.schema.$ref": "#/definitions/MergeRequestDiff",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/versions.get.summary": "Get a list of merge request diff versions",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/versions.get.tags.length": 1,
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/versions.get.tags[0]": "projects",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/versions/{version_id}.get.description": "This feature was introduced in GitLab 8.12.",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/versions/{version_id}.get.operationId": "getV3ProjectsIdMergeRequestsMergeRequestIdVersionsVersionId",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/versions/{version_id}.get.parameters.length": 3,
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/versions/{version_id}.get.parameters[0].description": "The ID of a project",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/versions/{version_id}.get.parameters[0].in": "path",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/versions/{version_id}.get.parameters[0].name": "id",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/versions/{version_id}.get.parameters[0].required": true,
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/versions/{version_id}.get.parameters[0].type": "string",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/versions/{version_id}.get.parameters[1].description": "The ID of a merge request",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/versions/{version_id}.get.parameters[1].format": "int32",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/versions/{version_id}.get.parameters[1].in": "path",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/versions/{version_id}.get.parameters[1].name": "merge_request_id",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/versions/{version_id}.get.parameters[1].required": true,
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/versions/{version_id}.get.parameters[1].type": "integer",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/versions/{version_id}.get.parameters[2].description": "The ID of a merge request diff version",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/versions/{version_id}.get.parameters[2].format": "int32",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/versions/{version_id}.get.parameters[2].in": "path",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/versions/{version_id}.get.parameters[2].name": "version_id",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/versions/{version_id}.get.parameters[2].required": true,
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/versions/{version_id}.get.parameters[2].type": "integer",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/versions/{version_id}.get.produces.length": 1,
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/versions/{version_id}.get.produces[0]": "application/json",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/versions/{version_id}.get.responses.200.description": "Get a single merge request diff version",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/versions/{version_id}.get.responses.200.schema.$ref": "#/definitions/MergeRequestDiffFull",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/versions/{version_id}.get.summary": "Get a single merge request diff version",
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/versions/{version_id}.get.tags.length": 1,
	"paths./v3/projects/{id}/merge_requests/{merge_request_id}/versions/{version_id}.get.tags[0]": "projects",
	"paths./v3/projects/{id}/merge_requests/{noteable_id}/notes.get.description": "Get a list of project +noteable+ notes",
	"paths./v3/projects/{id}/merge_requests/{noteable_id}/notes.get.operationId": "getV3ProjectsIdMergeRequestsNoteableIdNotes",
	"paths./v3/projects/{id}/merge_requests/{noteable_id}/notes.get.parameters.length": 4,
	"paths./v3/projects/{id}/merge_requests/{noteable_id}/notes.get.parameters[0].description": "The ID of a project",
	"paths./v3/projects/{id}/merge_requests/{noteable_id}/notes.get.parameters[0].in": "path",
	"paths./v3/projects/{id}/merge_requests/{noteable_id}/notes.get.parameters[0].name": "id",
	"paths./v3/projects/{id}/merge_requests/{noteable_id}/notes.get.parameters[0].required": true,
	"paths./v3/projects/{id}/merge_requests/{noteable_id}/notes.get.parameters[0].type": "string",
	"paths./v3/projects/{id}/merge_requests/{noteable_id}/notes.get.parameters[1].description": "The ID of the noteable",
	"paths./v3/projects/{id}/merge_requests/{noteable_id}/notes.get.parameters[1].format": "int32",
	"paths./v3/projects/{id}/merge_requests/{noteable_id}/notes.get.parameters[1].in": "path",
	"paths./v3/projects/{id}/merge_requests/{noteable_id}/notes.get.parameters[1].name": "noteable_id",
	"paths./v3/projects/{id}/merge_requests/{noteable_id}/notes.get.parameters[1].required": true,
	"paths./v3/projects/{id}/merge_requests/{noteable_id}/notes.get.parameters[1].type": "integer",
	"paths./v3/projects/{id}/merge_requests/{noteable_id}/notes.get.parameters[2].description": "Current page number",
	"paths./v3/projects/{id}/merge_requests/{noteable_id}/notes.get.parameters[2].format": "int32",
	"paths./v3/projects/{id}/merge_requests/{noteable_id}/notes.get.parameters[2].in": "query",
	"paths./v3/projects/{id}/merge_requests/{noteable_id}/notes.get.parameters[2].name": "page",
	"paths./v3/projects/{id}/merge_requests/{noteable_id}/notes.get.parameters[2].required": false,
	"paths./v3/projects/{id}/merge_requests/{noteable_id}/notes.get.parameters[2].type": "integer",
	"paths./v3/projects/{id}/merge_requests/{noteable_id}/notes.get.parameters[3].description": "Number of items per page",
	"paths./v3/projects/{id}/merge_requests/{noteable_id}/notes.get.parameters[3].format": "int32",
	"paths./v3/projects/{id}/merge_requests/{noteable_id}/notes.get.parameters[3].in": "query",
	"paths./v3/projects/{id}/merge_requests/{noteable_id}/notes.get.parameters[3].name": "per_page",
	"paths./v3/projects/{id}/merge_requests/{noteable_id}/notes.get.parameters[3].required": false,
	"paths./v3/projects/{id}/merge_requests/{noteable_id}/notes.get.parameters[3].type": "integer",
	"paths./v3/projects/{id}/merge_requests/{noteable_id}/notes.get.produces.length": 1,
	"paths./v3/projects/{id}/merge_requests/{noteable_id}/notes.get.produces[0]": "application/json",
	"paths./v3/projects/{id}/merge_requests/{noteable_id}/notes.get.responses.200.description": "Get a list of project +noteable+ notes",
	"paths./v3/projects/{id}/merge_requests/{noteable_id}/notes.get.responses.200.schema.$ref": "#/definitions/Note",
	"paths./v3/projects/{id}/merge_requests/{noteable_id}/notes.get.summary": "Get a list of project +noteable+ notes",
	"paths./v3/projects/{id}/merge_requests/{noteable_id}/notes.get.tags.length": 1,
	"paths./v3/projects/{id}/merge_requests/{noteable_id}/notes.get.tags[0]": "projects",
	"paths./v3/projects/{id}/merge_requests/{noteable_id}/notes.post.consumes.length": 1,
	"paths./v3/projects/{id}/merge_requests/{noteable_id}/notes.post.consumes[0]": "application/json",
	"paths./v3/projects/{id}/merge_requests/{noteable_id}/notes.post.description": "Create a new +noteable+ note",
	"paths./v3/projects/{id}/merge_requests/{noteable_id}/notes.post.operationId": "postV3ProjectsIdMergeRequestsNoteableIdNotes",
	"paths./v3/projects/{id}/merge_requests/{noteable_id}/notes.post.parameters.length": 4,
	"paths./v3/projects/{id}/merge_requests/{noteable_id}/notes.post.parameters[0].description": "The ID of a project",
	"paths./v3/projects/{id}/merge_requests/{noteable_id}/notes.post.parameters[0].in": "path",
	"paths./v3/projects/{id}/merge_requests/{noteable_id}/notes.post.parameters[0].name": "id",
	"paths./v3/projects/{id}/merge_requests/{noteable_id}/notes.post.parameters[0].required": true,
	"paths./v3/projects/{id}/merge_requests/{noteable_id}/notes.post.parameters[0].type": "string",
	"paths./v3/projects/{id}/merge_requests/{noteable_id}/notes.post.parameters[1].description": "The ID of the noteable",
	"paths./v3/projects/{id}/merge_requests/{noteable_id}/notes.post.parameters[1].format": "int32",
	"paths./v3/projects/{id}/merge_requests/{noteable_id}/notes.post.parameters[1].in": "path",
	"paths./v3/projects/{id}/merge_requests/{noteable_id}/notes.post.parameters[1].name": "noteable_id",
	"paths./v3/projects/{id}/merge_requests/{noteable_id}/notes.post.parameters[1].required": true,
	"paths./v3/projects/{id}/merge_requests/{noteable_id}/notes.post.parameters[1].type": "integer",
	"paths./v3/projects/{id}/merge_requests/{noteable_id}/notes.post.parameters[2].description": "The content of a note",
	"paths./v3/projects/{id}/merge_requests/{noteable_id}/notes.post.parameters[2].in": "formData",
	"paths./v3/projects/{id}/merge_requests/{noteable_id}/notes.post.parameters[2].name": "body",
	"paths./v3/projects/{id}/merge_requests/{noteable_id}/notes.post.parameters[2].required": true,
	"paths./v3/projects/{id}/merge_requests/{noteable_id}/notes.post.parameters[2].type": "string",
	"paths./v3/projects/{id}/merge_requests/{noteable_id}/notes.post.parameters[3].description": "The creation date of the note",
	"paths./v3/projects/{id}/merge_requests/{noteable_id}/notes.post.parameters[3].in": "formData",
	"paths./v3/projects/{id}/merge_requests/{noteable_id}/notes.post.parameters[3].name": "created_at",
	"paths./v3/projects/{id}/merge_requests/{noteable_id}/notes.post.parameters[3].required": false,
	"paths./v3/projects/{id}/merge_requests/{noteable_id}/notes.post.parameters[3].type": "string",
	"paths./v3/projects/{id}/merge_requests/{noteable_id}/notes.post.produces.length": 1,
	"paths./v3/projects/{id}/merge_requests/{noteable_id}/notes.post.produces[0]": "application/json",
	"paths./v3/projects/{id}/merge_requests/{noteable_id}/notes.post.responses.201.description": "Create a new +noteable+ note",
	"paths./v3/projects/{id}/merge_requests/{noteable_id}/notes.post.responses.201.schema.$ref": "#/definitions/Note",
	"paths./v3/projects/{id}/merge_requests/{noteable_id}/notes.post.summary": "Create a new +noteable+ note",
	"paths./v3/projects/{id}/merge_requests/{noteable_id}/notes.post.tags.length": 1,
	"paths./v3/projects/{id}/merge_requests/{noteable_id}/notes.post.tags[0]": "projects",
	"paths./v3/projects/{id}/merge_requests/{noteable_id}/notes/{note_id}.delete.description": "Delete a +noteable+ note",
	"paths./v3/projects/{id}/merge_requests/{noteable_id}/notes/{note_id}.delete.operationId": "deleteV3ProjectsIdMergeRequestsNoteableIdNotesNoteId",
	"paths./v3/projects/{id}/merge_requests/{noteable_id}/notes/{note_id}.delete.parameters.length": 3,
	"paths./v3/projects/{id}/merge_requests/{noteable_id}/notes/{note_id}.delete.parameters[0].description": "The ID of a project",
	"paths./v3/projects/{id}/merge_requests/{noteable_id}/notes/{note_id}.delete.parameters[0].in": "path",
	"paths./v3/projects/{id}/merge_requests/{noteable_id}/notes/{note_id}.delete.parameters[0].name": "id",
	"paths./v3/projects/{id}/merge_requests/{noteable_id}/notes/{note_id}.delete.parameters[0].required": true,
	"paths./v3/projects/{id}/merge_requests/{noteable_id}/notes/{note_id}.delete.parameters[0].type": "string",
	"paths./v3/projects/{id}/merge_requests/{noteable_id}/notes/{note_id}.delete.parameters[1].description": "The ID of the noteable",
	"paths./v3/projects/{id}/merge_requests/{noteable_id}/notes/{note_id}.delete.parameters[1].format": "int32",
	"paths./v3/projects/{id}/merge_requests/{noteable_id}/notes/{note_id}.delete.parameters[1].in": "path",
	"paths./v3/projects/{id}/merge_requests/{noteable_id}/notes/{note_id}.delete.parameters[1].name": "noteable_id",
	"paths./v3/projects/{id}/merge_requests/{noteable_id}/notes/{note_id}.delete.parameters[1].required": true,
	"paths./v3/projects/{id}/merge_requests/{noteable_id}/notes/{note_id}.delete.parameters[1].type": "integer",
	"paths./v3/projects/{id}/merge_requests/{noteable_id}/notes/{note_id}.delete.parameters[2].description": "The ID of a note",
	"paths./v3/projects/{id}/merge_requests/{noteable_id}/notes/{note_id}.delete.parameters[2].format": "int32",
	"paths./v3/projects/{id}/merge_requests/{noteable_id}/notes/{note_id}.delete.parameters[2].in": "path",
	"paths./v3/projects/{id}/merge_requests/{noteable_id}/notes/{note_id}.delete.parameters[2].name": "note_id",
	"paths./v3/projects/{id}/merge_requests/{noteable_id}/notes/{note_id}.delete.parameters[2].required": true,
	"paths./v3/projects/{id}/merge_requests/{noteable_id}/notes/{note_id}.delete.parameters[2].type": "integer",
	"paths./v3/projects/{id}/merge_requests/{noteable_id}/notes/{note_id}.delete.produces.length": 1,
	"paths./v3/projects/{id}/merge_requests/{noteable_id}/notes/{note_id}.delete.produces[0]": "application/json",
	"paths./v3/projects/{id}/merge_requests/{noteable_id}/notes/{note_id}.delete.responses.200.description": "Delete a +noteable+ note",
	"paths./v3/projects/{id}/merge_requests/{noteable_id}/notes/{note_id}.delete.responses.200.schema.$ref": "#/definitions/Note",
	"paths./v3/projects/{id}/merge_requests/{noteable_id}/notes/{note_id}.delete.summary": "Delete a +noteable+ note",
	"paths./v3/projects/{id}/merge_requests/{noteable_id}/notes/{note_id}.delete.tags.length": 1,
	"paths./v3/projects/{id}/merge_requests/{noteable_id}/notes/{note_id}.delete.tags[0]": "projects",
	"paths./v3/projects/{id}/merge_requests/{noteable_id}/notes/{note_id}.get.description": "Get a single +noteable+ note",
	"paths./v3/projects/{id}/merge_requests/{noteable_id}/notes/{note_id}.get.operationId": "getV3ProjectsIdMergeRequestsNoteableIdNotesNoteId",
	"paths./v3/projects/{id}/merge_requests/{noteable_id}/notes/{note_id}.get.parameters.length": 3,
	"paths./v3/projects/{id}/merge_requests/{noteable_id}/notes/{note_id}.get.parameters[0].description": "The ID of a project",
	"paths./v3/projects/{id}/merge_requests/{noteable_id}/notes/{note_id}.get.parameters[0].in": "path",
	"paths./v3/projects/{id}/merge_requests/{noteable_id}/notes/{note_id}.get.parameters[0].name": "id",
	"paths./v3/projects/{id}/merge_requests/{noteable_id}/notes/{note_id}.get.parameters[0].required": true,
	"paths./v3/projects/{id}/merge_requests/{noteable_id}/notes/{note_id}.get.parameters[0].type": "string",
	"paths./v3/projects/{id}/merge_requests/{noteable_id}/notes/{note_id}.get.parameters[1].description": "The ID of a note",
	"paths./v3/projects/{id}/merge_requests/{noteable_id}/notes/{note_id}.get.parameters[1].format": "int32",
	"paths./v3/projects/{id}/merge_requests/{noteable_id}/notes/{note_id}.get.parameters[1].in": "path",
	"paths./v3/projects/{id}/merge_requests/{noteable_id}/notes/{note_id}.get.parameters[1].name": "note_id",
	"paths./v3/projects/{id}/merge_requests/{noteable_id}/notes/{note_id}.get.parameters[1].required": true,
	"paths./v3/projects/{id}/merge_requests/{noteable_id}/notes/{note_id}.get.parameters[1].type": "integer",
	"paths./v3/projects/{id}/merge_requests/{noteable_id}/notes/{note_id}.get.parameters[2].description": "The ID of the noteable",
	"paths./v3/projects/{id}/merge_requests/{noteable_id}/notes/{note_id}.get.parameters[2].format": "int32",
	"paths./v3/projects/{id}/merge_requests/{noteable_id}/notes/{note_id}.get.parameters[2].in": "path",
	"paths./v3/projects/{id}/merge_requests/{noteable_id}/notes/{note_id}.get.parameters[2].name": "noteable_id",
	"paths./v3/projects/{id}/merge_requests/{noteable_id}/notes/{note_id}.get.parameters[2].required": true,
	"paths./v3/projects/{id}/merge_requests/{noteable_id}/notes/{note_id}.get.parameters[2].type": "integer",
	"paths./v3/projects/{id}/merge_requests/{noteable_id}/notes/{note_id}.get.produces.length": 1,
	"paths./v3/projects/{id}/merge_requests/{noteable_id}/notes/{note_id}.get.produces[0]": "application/json",
	"paths./v3/projects/{id}/merge_requests/{noteable_id}/notes/{note_id}.get.responses.200.description": "Get a single +noteable+ note",
	"paths./v3/projects/{id}/merge_requests/{noteable_id}/notes/{note_id}.get.responses.200.schema.$ref": "#/definitions/Note",
	"paths./v3/projects/{id}/merge_requests/{noteable_id}/notes/{note_id}.get.summary": "Get a single +noteable+ note",
	"paths./v3/projects/{id}/merge_requests/{noteable_id}/notes/{note_id}.get.tags.length": 1,
	"paths./v3/projects/{id}/merge_requests/{noteable_id}/notes/{note_id}.get.tags[0]": "projects",
	"paths./v3/projects/{id}/merge_requests/{noteable_id}/notes/{note_id}.put.consumes.length": 1,
	"paths./v3/projects/{id}/merge_requests/{noteable_id}/notes/{note_id}.put.consumes[0]": "application/json",
	"paths./v3/projects/{id}/merge_requests/{noteable_id}/notes/{note_id}.put.description": "Update an existing +noteable+ note",
	"paths./v3/projects/{id}/merge_requests/{noteable_id}/notes/{note_id}.put.operationId": "putV3ProjectsIdMergeRequestsNoteableIdNotesNoteId",
	"paths./v3/projects/{id}/merge_requests/{noteable_id}/notes/{note_id}.put.parameters.length": 4,
	"paths./v3/projects/{id}/merge_requests/{noteable_id}/notes/{note_id}.put.parameters[0].description": "The ID of a project",
	"paths./v3/projects/{id}/merge_requests/{noteable_id}/notes/{note_id}.put.parameters[0].in": "path",
	"paths./v3/projects/{id}/merge_requests/{noteable_id}/notes/{note_id}.put.parameters[0].name": "id",
	"paths./v3/projects/{id}/merge_requests/{noteable_id}/notes/{note_id}.put.parameters[0].required": true,
	"paths./v3/projects/{id}/merge_requests/{noteable_id}/notes/{note_id}.put.parameters[0].type": "string",
	"paths./v3/projects/{id}/merge_requests/{noteable_id}/notes/{note_id}.put.parameters[1].description": "The ID of the noteable",
	"paths./v3/projects/{id}/merge_requests/{noteable_id}/notes/{note_id}.put.parameters[1].format": "int32",
	"paths./v3/projects/{id}/merge_requests/{noteable_id}/notes/{note_id}.put.parameters[1].in": "path",
	"paths./v3/projects/{id}/merge_requests/{noteable_id}/notes/{note_id}.put.parameters[1].name": "noteable_id",
	"paths./v3/projects/{id}/merge_requests/{noteable_id}/notes/{note_id}.put.parameters[1].required": true,
	"paths./v3/projects/{id}/merge_requests/{noteable_id}/notes/{note_id}.put.parameters[1].type": "integer",
	"paths./v3/projects/{id}/merge_requests/{noteable_id}/notes/{note_id}.put.parameters[2].description": "The ID of a note",
	"paths./v3/projects/{id}/merge_requests/{noteable_id}/notes/{note_id}.put.parameters[2].format": "int32",
	"paths./v3/projects/{id}/merge_requests/{noteable_id}/notes/{note_id}.put.parameters[2].in": "path",
	"paths./v3/projects/{id}/merge_requests/{noteable_id}/notes/{note_id}.put.parameters[2].name": "note_id",
	"paths./v3/projects/{id}/merge_requests/{noteable_id}/notes/{note_id}.put.parameters[2].required": true,
	"paths./v3/projects/{id}/merge_requests/{noteable_id}/notes/{note_id}.put.parameters[2].type": "integer",
	"paths./v3/projects/{id}/merge_requests/{noteable_id}/notes/{note_id}.put.parameters[3].description": "The content of a note",
	"paths./v3/projects/{id}/merge_requests/{noteable_id}/notes/{note_id}.put.parameters[3].in": "formData",
	"paths./v3/projects/{id}/merge_requests/{noteable_id}/notes/{note_id}.put.parameters[3].name": "body",
	"paths./v3/projects/{id}/merge_requests/{noteable_id}/notes/{note_id}.put.parameters[3].required": true,
	"paths./v3/projects/{id}/merge_requests/{noteable_id}/notes/{note_id}.put.parameters[3].type": "string",
	"paths./v3/projects/{id}/merge_requests/{noteable_id}/notes/{note_id}.put.produces.length": 1,
	"paths./v3/projects/{id}/merge_requests/{noteable_id}/notes/{note_id}.put.produces[0]": "application/json",
	"paths./v3/projects/{id}/merge_requests/{noteable_id}/notes/{note_id}.put.responses.200.description": "Update an existing +noteable+ note",
	"paths./v3/projects/{id}/merge_requests/{noteable_id}/notes/{note_id}.put.responses.200.schema.$ref": "#/definitions/Note",
	"paths./v3/projects/{id}/merge_requests/{noteable_id}/notes/{note_id}.put.summary": "Update an existing +noteable+ note",
	"paths./v3/projects/{id}/merge_requests/{noteable_id}/notes/{note_id}.put.tags.length": 1,
	"paths./v3/projects/{id}/merge_requests/{noteable_id}/notes/{note_id}.put.tags[0]": "projects",
	"paths./v3/projects/{id}/merge_requests/{subscribable_id}/subscription.delete.description": "Unsubscribe from a resource",
	"paths./v3/projects/{id}/merge_requests/{subscribable_id}/subscription.delete.operationId": "deleteV3ProjectsIdMergeRequestsSubscribableIdSubscription",
	"paths./v3/projects/{id}/merge_requests/{subscribable_id}/subscription.delete.parameters.length": 2,
	"paths./v3/projects/{id}/merge_requests/{subscribable_id}/subscription.delete.parameters[0].description": "The ID of a project",
	"paths./v3/projects/{id}/merge_requests/{subscribable_id}/subscription.delete.parameters[0].in": "path",
	"paths./v3/projects/{id}/merge_requests/{subscribable_id}/subscription.delete.parameters[0].name": "id",
	"paths./v3/projects/{id}/merge_requests/{subscribable_id}/subscription.delete.parameters[0].required": true,
	"paths./v3/projects/{id}/merge_requests/{subscribable_id}/subscription.delete.parameters[0].type": "string",
	"paths./v3/projects/{id}/merge_requests/{subscribable_id}/subscription.delete.parameters[1].description": "The ID of a resource",
	"paths./v3/projects/{id}/merge_requests/{subscribable_id}/subscription.delete.parameters[1].in": "path",
	"paths./v3/projects/{id}/merge_requests/{subscribable_id}/subscription.delete.parameters[1].name": "subscribable_id",
	"paths./v3/projects/{id}/merge_requests/{subscribable_id}/subscription.delete.parameters[1].required": true,
	"paths./v3/projects/{id}/merge_requests/{subscribable_id}/subscription.delete.parameters[1].type": "string",
	"paths./v3/projects/{id}/merge_requests/{subscribable_id}/subscription.delete.produces.length": 1,
	"paths./v3/projects/{id}/merge_requests/{subscribable_id}/subscription.delete.produces[0]": "application/json",
	"paths./v3/projects/{id}/merge_requests/{subscribable_id}/subscription.delete.responses.200.description": "Unsubscribe from a resource",
	"paths./v3/projects/{id}/merge_requests/{subscribable_id}/subscription.delete.responses.200.schema.$ref": "#/definitions/MergeRequest",
	"paths./v3/projects/{id}/merge_requests/{subscribable_id}/subscription.delete.summary": "Unsubscribe from a resource",
	"paths./v3/projects/{id}/merge_requests/{subscribable_id}/subscription.delete.tags.length": 1,
	"paths./v3/projects/{id}/merge_requests/{subscribable_id}/subscription.delete.tags[0]": "projects",
	"paths./v3/projects/{id}/merge_requests/{subscribable_id}/subscription.post.consumes.length": 1,
	"paths./v3/projects/{id}/merge_requests/{subscribable_id}/subscription.post.consumes[0]": "application/json",
	"paths./v3/projects/{id}/merge_requests/{subscribable_id}/subscription.post.description": "Subscribe to a resource",
	"paths./v3/projects/{id}/merge_requests/{subscribable_id}/subscription.post.operationId": "postV3ProjectsIdMergeRequestsSubscribableIdSubscription",
	"paths./v3/projects/{id}/merge_requests/{subscribable_id}/subscription.post.parameters.length": 2,
	"paths./v3/projects/{id}/merge_requests/{subscribable_id}/subscription.post.parameters[0].description": "The ID of a project",
	"paths./v3/projects/{id}/merge_requests/{subscribable_id}/subscription.post.parameters[0].in": "path",
	"paths./v3/projects/{id}/merge_requests/{subscribable_id}/subscription.post.parameters[0].name": "id",
	"paths./v3/projects/{id}/merge_requests/{subscribable_id}/subscription.post.parameters[0].required": true,
	"paths./v3/projects/{id}/merge_requests/{subscribable_id}/subscription.post.parameters[0].type": "string",
	"paths./v3/projects/{id}/merge_requests/{subscribable_id}/subscription.post.parameters[1].description": "The ID of a resource",
	"paths./v3/projects/{id}/merge_requests/{subscribable_id}/subscription.post.parameters[1].in": "path",
	"paths./v3/projects/{id}/merge_requests/{subscribable_id}/subscription.post.parameters[1].name": "subscribable_id",
	"paths./v3/projects/{id}/merge_requests/{subscribable_id}/subscription.post.parameters[1].required": true,
	"paths./v3/projects/{id}/merge_requests/{subscribable_id}/subscription.post.parameters[1].type": "string",
	"paths./v3/projects/{id}/merge_requests/{subscribable_id}/subscription.post.produces.length": 1,
	"paths./v3/projects/{id}/merge_requests/{subscribable_id}/subscription.post.produces[0]": "application/json",
	"paths./v3/projects/{id}/merge_requests/{subscribable_id}/subscription.post.responses.201.description": "Subscribe to a resource",
	"paths./v3/projects/{id}/merge_requests/{subscribable_id}/subscription.post.responses.201.schema.$ref": "#/definitions/MergeRequest",
	"paths./v3/projects/{id}/merge_requests/{subscribable_id}/subscription.post.summary": "Subscribe to a resource",
	"paths./v3/projects/{id}/merge_requests/{subscribable_id}/subscription.post.tags.length": 1,
	"paths./v3/projects/{id}/merge_requests/{subscribable_id}/subscription.post.tags[0]": "projects",
	"paths./v3/projects/{id}/milestones.get.description": "Get a list of project milestones",
	"paths./v3/projects/{id}/milestones.get.operationId": "getV3ProjectsIdMilestones",
	"paths./v3/projects/{id}/milestones.get.parameters.length": 5,
	"paths./v3/projects/{id}/milestones.get.parameters[0].description": "The ID of a project",
	"paths./v3/projects/{id}/milestones.get.parameters[0].in": "path",
	"paths./v3/projects/{id}/milestones.get.parameters[0].name": "id",
	"paths./v3/projects/{id}/milestones.get.parameters[0].required": true,
	"paths./v3/projects/{id}/milestones.get.parameters[0].type": "string",
	"paths./v3/projects/{id}/milestones.get.parameters[1].default": "all",
	"paths./v3/projects/{id}/milestones.get.parameters[1].description": "Return \"active\", \"closed\", or \"all\" milestones",
	"paths./v3/projects/{id}/milestones.get.parameters[1].enum.length": 3,
	"paths./v3/projects/{id}/milestones.get.parameters[1].enum[0]": "active",
	"paths./v3/projects/{id}/milestones.get.parameters[1].enum[1]": "closed",
	"paths./v3/projects/{id}/milestones.get.parameters[1].enum[2]": "all",
	"paths./v3/projects/{id}/milestones.get.parameters[1].in": "query",
	"paths./v3/projects/{id}/milestones.get.parameters[1].name": "state",
	"paths./v3/projects/{id}/milestones.get.parameters[1].required": false,
	"paths./v3/projects/{id}/milestones.get.parameters[1].type": "string",
	"paths./v3/projects/{id}/milestones.get.parameters[2].description": "The IID of the milestone",
	"paths./v3/projects/{id}/milestones.get.parameters[2].in": "formData",
	"paths./v3/projects/{id}/milestones.get.parameters[2].items.format": "int32",
	"paths./v3/projects/{id}/milestones.get.parameters[2].items.type": "integer",
	"paths./v3/projects/{id}/milestones.get.parameters[2].name": "iid",
	"paths./v3/projects/{id}/milestones.get.parameters[2].required": false,
	"paths./v3/projects/{id}/milestones.get.parameters[2].type": "array",
	"paths./v3/projects/{id}/milestones.get.parameters[3].description": "Current page number",
	"paths./v3/projects/{id}/milestones.get.parameters[3].format": "int32",
	"paths./v3/projects/{id}/milestones.get.parameters[3].in": "query",
	"paths./v3/projects/{id}/milestones.get.parameters[3].name": "page",
	"paths./v3/projects/{id}/milestones.get.parameters[3].required": false,
	"paths./v3/projects/{id}/milestones.get.parameters[3].type": "integer",
	"paths./v3/projects/{id}/milestones.get.parameters[4].description": "Number of items per page",
	"paths./v3/projects/{id}/milestones.get.parameters[4].format": "int32",
	"paths./v3/projects/{id}/milestones.get.parameters[4].in": "query",
	"paths./v3/projects/{id}/milestones.get.parameters[4].name": "per_page",
	"paths./v3/projects/{id}/milestones.get.parameters[4].required": false,
	"paths./v3/projects/{id}/milestones.get.parameters[4].type": "integer",
	"paths./v3/projects/{id}/milestones.get.produces.length": 1,
	"paths./v3/projects/{id}/milestones.get.produces[0]": "application/json",
	"paths./v3/projects/{id}/milestones.get.responses.200.description": "Get a list of project milestones",
	"paths./v3/projects/{id}/milestones.get.responses.200.schema.$ref": "#/definitions/Milestone",
	"paths./v3/projects/{id}/milestones.get.summary": "Get a list of project milestones",
	"paths./v3/projects/{id}/milestones.get.tags.length": 1,
	"paths./v3/projects/{id}/milestones.get.tags[0]": "projects",
	"paths./v3/projects/{id}/milestones.post.consumes.length": 1,
	"paths./v3/projects/{id}/milestones.post.consumes[0]": "application/json",
	"paths./v3/projects/{id}/milestones.post.description": "Create a new project milestone",
	"paths./v3/projects/{id}/milestones.post.operationId": "postV3ProjectsIdMilestones",
	"paths./v3/projects/{id}/milestones.post.parameters.length": 5,
	"paths./v3/projects/{id}/milestones.post.parameters[0].description": "The ID of a project",
	"paths./v3/projects/{id}/milestones.post.parameters[0].in": "path",
	"paths./v3/projects/{id}/milestones.post.parameters[0].name": "id",
	"paths./v3/projects/{id}/milestones.post.parameters[0].required": true,
	"paths./v3/projects/{id}/milestones.post.parameters[0].type": "string",
	"paths./v3/projects/{id}/milestones.post.parameters[1].description": "The title of the milestone",
	"paths./v3/projects/{id}/milestones.post.parameters[1].in": "formData",
	"paths./v3/projects/{id}/milestones.post.parameters[1].name": "title",
	"paths./v3/projects/{id}/milestones.post.parameters[1].required": true,
	"paths./v3/projects/{id}/milestones.post.parameters[1].type": "string",
	"paths./v3/projects/{id}/milestones.post.parameters[2].description": "The description of the milestone",
	"paths./v3/projects/{id}/milestones.post.parameters[2].in": "formData",
	"paths./v3/projects/{id}/milestones.post.parameters[2].name": "description",
	"paths./v3/projects/{id}/milestones.post.parameters[2].required": false,
	"paths./v3/projects/{id}/milestones.post.parameters[2].type": "string",
	"paths./v3/projects/{id}/milestones.post.parameters[3].description": "The due date of the milestone. The ISO 8601 date format (%Y-%m-%d)",
	"paths./v3/projects/{id}/milestones.post.parameters[3].in": "formData",
	"paths./v3/projects/{id}/milestones.post.parameters[3].name": "due_date",
	"paths./v3/projects/{id}/milestones.post.parameters[3].required": false,
	"paths./v3/projects/{id}/milestones.post.parameters[3].type": "string",
	"paths./v3/projects/{id}/milestones.post.parameters[4].description": "The start date of the milestone. The ISO 8601 date format (%Y-%m-%d)",
	"paths./v3/projects/{id}/milestones.post.parameters[4].in": "formData",
	"paths./v3/projects/{id}/milestones.post.parameters[4].name": "start_date",
	"paths./v3/projects/{id}/milestones.post.parameters[4].required": false,
	"paths./v3/projects/{id}/milestones.post.parameters[4].type": "string",
	"paths./v3/projects/{id}/milestones.post.produces.length": 1,
	"paths./v3/projects/{id}/milestones.post.produces[0]": "application/json",
	"paths./v3/projects/{id}/milestones.post.responses.201.description": "Create a new project milestone",
	"paths./v3/projects/{id}/milestones.post.responses.201.schema.$ref": "#/definitions/Milestone",
	"paths./v3/projects/{id}/milestones.post.summary": "Create a new project milestone",
	"paths./v3/projects/{id}/milestones.post.tags.length": 1,
	"paths./v3/projects/{id}/milestones.post.tags[0]": "projects",
	"paths./v3/projects/{id}/milestones/{milestone_id}.get.description": "Get a single project milestone",
	"paths./v3/projects/{id}/milestones/{milestone_id}.get.operationId": "getV3ProjectsIdMilestonesMilestoneId",
	"paths./v3/projects/{id}/milestones/{milestone_id}.get.parameters.length": 2,
	"paths./v3/projects/{id}/milestones/{milestone_id}.get.parameters[0].description": "The ID of a project",
	"paths./v3/projects/{id}/milestones/{milestone_id}.get.parameters[0].in": "path",
	"paths./v3/projects/{id}/milestones/{milestone_id}.get.parameters[0].name": "id",
	"paths./v3/projects/{id}/milestones/{milestone_id}.get.parameters[0].required": true,
	"paths./v3/projects/{id}/milestones/{milestone_id}.get.parameters[0].type": "string",
	"paths./v3/projects/{id}/milestones/{milestone_id}.get.parameters[1].description": "The ID of a project milestone",
	"paths./v3/projects/{id}/milestones/{milestone_id}.get.parameters[1].format": "int32",
	"paths./v3/projects/{id}/milestones/{milestone_id}.get.parameters[1].in": "path",
	"paths./v3/projects/{id}/milestones/{milestone_id}.get.parameters[1].name": "milestone_id",
	"paths./v3/projects/{id}/milestones/{milestone_id}.get.parameters[1].required": true,
	"paths./v3/projects/{id}/milestones/{milestone_id}.get.parameters[1].type": "integer",
	"paths./v3/projects/{id}/milestones/{milestone_id}.get.produces.length": 1,
	"paths./v3/projects/{id}/milestones/{milestone_id}.get.produces[0]": "application/json",
	"paths./v3/projects/{id}/milestones/{milestone_id}.get.responses.200.description": "Get a single project milestone",
	"paths./v3/projects/{id}/milestones/{milestone_id}.get.responses.200.schema.$ref": "#/definitions/Milestone",
	"paths./v3/projects/{id}/milestones/{milestone_id}.get.summary": "Get a single project milestone",
	"paths./v3/projects/{id}/milestones/{milestone_id}.get.tags.length": 1,
	"paths./v3/projects/{id}/milestones/{milestone_id}.get.tags[0]": "projects",
	"paths./v3/projects/{id}/milestones/{milestone_id}.put.consumes.length": 1,
	"paths./v3/projects/{id}/milestones/{milestone_id}.put.consumes[0]": "application/json",
	"paths./v3/projects/{id}/milestones/{milestone_id}.put.description": "Update an existing project milestone",
	"paths./v3/projects/{id}/milestones/{milestone_id}.put.operationId": "putV3ProjectsIdMilestonesMilestoneId",
	"paths./v3/projects/{id}/milestones/{milestone_id}.put.parameters.length": 7,
	"paths./v3/projects/{id}/milestones/{milestone_id}.put.parameters[0].description": "The ID of a project",
	"paths./v3/projects/{id}/milestones/{milestone_id}.put.parameters[0].in": "path",
	"paths./v3/projects/{id}/milestones/{milestone_id}.put.parameters[0].name": "id",
	"paths./v3/projects/{id}/milestones/{milestone_id}.put.parameters[0].required": true,
	"paths./v3/projects/{id}/milestones/{milestone_id}.put.parameters[0].type": "string",
	"paths./v3/projects/{id}/milestones/{milestone_id}.put.parameters[1].description": "The ID of a project milestone",
	"paths./v3/projects/{id}/milestones/{milestone_id}.put.parameters[1].format": "int32",
	"paths./v3/projects/{id}/milestones/{milestone_id}.put.parameters[1].in": "path",
	"paths./v3/projects/{id}/milestones/{milestone_id}.put.parameters[1].name": "milestone_id",
	"paths./v3/projects/{id}/milestones/{milestone_id}.put.parameters[1].required": true,
	"paths./v3/projects/{id}/milestones/{milestone_id}.put.parameters[1].type": "integer",
	"paths./v3/projects/{id}/milestones/{milestone_id}.put.parameters[2].description": "The title of the milestone",
	"paths./v3/projects/{id}/milestones/{milestone_id}.put.parameters[2].in": "formData",
	"paths./v3/projects/{id}/milestones/{milestone_id}.put.parameters[2].name": "title",
	"paths./v3/projects/{id}/milestones/{milestone_id}.put.parameters[2].required": false,
	"paths./v3/projects/{id}/milestones/{milestone_id}.put.parameters[2].type": "string",
	"paths./v3/projects/{id}/milestones/{milestone_id}.put.parameters[3].description": "The state event of the milestone ",
	"paths./v3/projects/{id}/milestones/{milestone_id}.put.parameters[3].enum.length": 2,
	"paths./v3/projects/{id}/milestones/{milestone_id}.put.parameters[3].enum[0]": "close",
	"paths./v3/projects/{id}/milestones/{milestone_id}.put.parameters[3].enum[1]": "activate",
	"paths./v3/projects/{id}/milestones/{milestone_id}.put.parameters[3].in": "formData",
	"paths./v3/projects/{id}/milestones/{milestone_id}.put.parameters[3].name": "state_event",
	"paths./v3/projects/{id}/milestones/{milestone_id}.put.parameters[3].required": false,
	"paths./v3/projects/{id}/milestones/{milestone_id}.put.parameters[3].type": "string",
	"paths./v3/projects/{id}/milestones/{milestone_id}.put.parameters[4].description": "The description of the milestone",
	"paths./v3/projects/{id}/milestones/{milestone_id}.put.parameters[4].in": "formData",
	"paths./v3/projects/{id}/milestones/{milestone_id}.put.parameters[4].name": "description",
	"paths./v3/projects/{id}/milestones/{milestone_id}.put.parameters[4].required": false,
	"paths./v3/projects/{id}/milestones/{milestone_id}.put.parameters[4].type": "string",
	"paths./v3/projects/{id}/milestones/{milestone_id}.put.parameters[5].description": "The due date of the milestone. The ISO 8601 date format (%Y-%m-%d)",
	"paths./v3/projects/{id}/milestones/{milestone_id}.put.parameters[5].in": "formData",
	"paths./v3/projects/{id}/milestones/{milestone_id}.put.parameters[5].name": "due_date",
	"paths./v3/projects/{id}/milestones/{milestone_id}.put.parameters[5].required": false,
	"paths./v3/projects/{id}/milestones/{milestone_id}.put.parameters[5].type": "string",
	"paths./v3/projects/{id}/milestones/{milestone_id}.put.parameters[6].description": "The start date of the milestone. The ISO 8601 date format (%Y-%m-%d)",
	"paths./v3/projects/{id}/milestones/{milestone_id}.put.parameters[6].in": "formData",
	"paths./v3/projects/{id}/milestones/{milestone_id}.put.parameters[6].name": "start_date",
	"paths./v3/projects/{id}/milestones/{milestone_id}.put.parameters[6].required": false,
	"paths./v3/projects/{id}/milestones/{milestone_id}.put.parameters[6].type": "string",
	"paths./v3/projects/{id}/milestones/{milestone_id}.put.produces.length": 1,
	"paths./v3/projects/{id}/milestones/{milestone_id}.put.produces[0]": "application/json",
	"paths./v3/projects/{id}/milestones/{milestone_id}.put.responses.200.description": "Update an existing project milestone",
	"paths./v3/projects/{id}/milestones/{milestone_id}.put.responses.200.schema.$ref": "#/definitions/Milestone",
	"paths./v3/projects/{id}/milestones/{milestone_id}.put.summary": "Update an existing project milestone",
	"paths./v3/projects/{id}/milestones/{milestone_id}.put.tags.length": 1,
	"paths./v3/projects/{id}/milestones/{milestone_id}.put.tags[0]": "projects",
	"paths./v3/projects/{id}/milestones/{milestone_id}/issues.get.description": "Get all issues for a single project milestone",
	"paths./v3/projects/{id}/milestones/{milestone_id}/issues.get.operationId": "getV3ProjectsIdMilestonesMilestoneIdIssues",
	"paths./v3/projects/{id}/milestones/{milestone_id}/issues.get.parameters.length": 4,
	"paths./v3/projects/{id}/milestones/{milestone_id}/issues.get.parameters[0].description": "The ID of a project",
	"paths./v3/projects/{id}/milestones/{milestone_id}/issues.get.parameters[0].in": "path",
	"paths./v3/projects/{id}/milestones/{milestone_id}/issues.get.parameters[0].name": "id",
	"paths./v3/projects/{id}/milestones/{milestone_id}/issues.get.parameters[0].required": true,
	"paths./v3/projects/{id}/milestones/{milestone_id}/issues.get.parameters[0].type": "string",
	"paths./v3/projects/{id}/milestones/{milestone_id}/issues.get.parameters[1].description": "The ID of a project milestone",
	"paths./v3/projects/{id}/milestones/{milestone_id}/issues.get.parameters[1].format": "int32",
	"paths./v3/projects/{id}/milestones/{milestone_id}/issues.get.parameters[1].in": "path",
	"paths./v3/projects/{id}/milestones/{milestone_id}/issues.get.parameters[1].name": "milestone_id",
	"paths./v3/projects/{id}/milestones/{milestone_id}/issues.get.parameters[1].required": true,
	"paths./v3/projects/{id}/milestones/{milestone_id}/issues.get.parameters[1].type": "integer",
	"paths./v3/projects/{id}/milestones/{milestone_id}/issues.get.parameters[2].description": "Current page number",
	"paths./v3/projects/{id}/milestones/{milestone_id}/issues.get.parameters[2].format": "int32",
	"paths./v3/projects/{id}/milestones/{milestone_id}/issues.get.parameters[2].in": "query",
	"paths./v3/projects/{id}/milestones/{milestone_id}/issues.get.parameters[2].name": "page",
	"paths./v3/projects/{id}/milestones/{milestone_id}/issues.get.parameters[2].required": false,
	"paths./v3/projects/{id}/milestones/{milestone_id}/issues.get.parameters[2].type": "integer",
	"paths./v3/projects/{id}/milestones/{milestone_id}/issues.get.parameters[3].description": "Number of items per page",
	"paths./v3/projects/{id}/milestones/{milestone_id}/issues.get.parameters[3].format": "int32",
	"paths./v3/projects/{id}/milestones/{milestone_id}/issues.get.parameters[3].in": "query",
	"paths./v3/projects/{id}/milestones/{milestone_id}/issues.get.parameters[3].name": "per_page",
	"paths./v3/projects/{id}/milestones/{milestone_id}/issues.get.parameters[3].required": false,
	"paths./v3/projects/{id}/milestones/{milestone_id}/issues.get.parameters[3].type": "integer",
	"paths./v3/projects/{id}/milestones/{milestone_id}/issues.get.produces.length": 1,
	"paths./v3/projects/{id}/milestones/{milestone_id}/issues.get.produces[0]": "application/json",
	"paths./v3/projects/{id}/milestones/{milestone_id}/issues.get.responses.200.description": "Get all issues for a single project milestone",
	"paths./v3/projects/{id}/milestones/{milestone_id}/issues.get.responses.200.schema.$ref": "#/definitions/Issue",
	"paths./v3/projects/{id}/milestones/{milestone_id}/issues.get.summary": "Get all issues for a single project milestone",
	"paths./v3/projects/{id}/milestones/{milestone_id}/issues.get.tags.length": 1,
	"paths./v3/projects/{id}/milestones/{milestone_id}/issues.get.tags[0]": "projects",
	"paths./v3/projects/{id}/notification_settings.get.description": "This feature was introduced in GitLab 8.12",
	"paths./v3/projects/{id}/notification_settings.get.operationId": "getV3ProjectsIdNotificationSettings",
	"paths./v3/projects/{id}/notification_settings.get.parameters.length": 1,
	"paths./v3/projects/{id}/notification_settings.get.parameters[0].description": "The group ID or project ID or project NAMESPACE/PROJECT_NAME",
	"paths./v3/projects/{id}/notification_settings.get.parameters[0].in": "path",
	"paths./v3/projects/{id}/notification_settings.get.parameters[0].name": "id",
	"paths./v3/projects/{id}/notification_settings.get.parameters[0].required": true,
	"paths./v3/projects/{id}/notification_settings.get.parameters[0].type": "string",
	"paths./v3/projects/{id}/notification_settings.get.produces.length": 1,
	"paths./v3/projects/{id}/notification_settings.get.produces[0]": "application/json",
	"paths./v3/projects/{id}/notification_settings.get.responses.200.description": "Get project level notification level settings, defaults to Global",
	"paths./v3/projects/{id}/notification_settings.get.responses.200.schema.$ref": "#/definitions/NotificationSetting",
	"paths./v3/projects/{id}/notification_settings.get.summary": "Get project level notification level settings, defaults to Global",
	"paths./v3/projects/{id}/notification_settings.get.tags.length": 1,
	"paths./v3/projects/{id}/notification_settings.get.tags[0]": "projects",
	"paths./v3/projects/{id}/notification_settings.put.consumes.length": 1,
	"paths./v3/projects/{id}/notification_settings.put.consumes[0]": "application/json",
	"paths./v3/projects/{id}/notification_settings.put.description": "This feature was introduced in GitLab 8.12",
	"paths./v3/projects/{id}/notification_settings.put.operationId": "putV3ProjectsIdNotificationSettings",
	"paths./v3/projects/{id}/notification_settings.put.parameters.length": 14,
	"paths./v3/projects/{id}/notification_settings.put.parameters[0].description": "The group ID or project ID or project NAMESPACE/PROJECT_NAME",
	"paths./v3/projects/{id}/notification_settings.put.parameters[0].in": "path",
	"paths./v3/projects/{id}/notification_settings.put.parameters[0].name": "id",
	"paths./v3/projects/{id}/notification_settings.put.parameters[0].required": true,
	"paths./v3/projects/{id}/notification_settings.put.parameters[0].type": "string",
	"paths./v3/projects/{id}/notification_settings.put.parameters[10].description": "Enable/disable this notification",
	"paths./v3/projects/{id}/notification_settings.put.parameters[10].in": "formData",
	"paths./v3/projects/{id}/notification_settings.put.parameters[10].name": "reassign_merge_request",
	"paths./v3/projects/{id}/notification_settings.put.parameters[10].required": false,
	"paths./v3/projects/{id}/notification_settings.put.parameters[10].type": "boolean",
	"paths./v3/projects/{id}/notification_settings.put.parameters[11].description": "Enable/disable this notification",
	"paths./v3/projects/{id}/notification_settings.put.parameters[11].in": "formData",
	"paths./v3/projects/{id}/notification_settings.put.parameters[11].name": "merge_merge_request",
	"paths./v3/projects/{id}/notification_settings.put.parameters[11].required": false,
	"paths./v3/projects/{id}/notification_settings.put.parameters[11].type": "boolean",
	"paths./v3/projects/{id}/notification_settings.put.parameters[12].description": "Enable/disable this notification",
	"paths./v3/projects/{id}/notification_settings.put.parameters[12].in": "formData",
	"paths./v3/projects/{id}/notification_settings.put.parameters[12].name": "failed_pipeline",
	"paths./v3/projects/{id}/notification_settings.put.parameters[12].required": false,
	"paths./v3/projects/{id}/notification_settings.put.parameters[12].type": "boolean",
	"paths./v3/projects/{id}/notification_settings.put.parameters[13].description": "Enable/disable this notification",
	"paths./v3/projects/{id}/notification_settings.put.parameters[13].in": "formData",
	"paths./v3/projects/{id}/notification_settings.put.parameters[13].name": "success_pipeline",
	"paths./v3/projects/{id}/notification_settings.put.parameters[13].required": false,
	"paths./v3/projects/{id}/notification_settings.put.parameters[13].type": "boolean",
	"paths./v3/projects/{id}/notification_settings.put.parameters[1].description": "The project notification level",
	"paths./v3/projects/{id}/notification_settings.put.parameters[1].in": "formData",
	"paths./v3/projects/{id}/notification_settings.put.parameters[1].name": "level",
	"paths./v3/projects/{id}/notification_settings.put.parameters[1].required": false,
	"paths./v3/projects/{id}/notification_settings.put.parameters[1].type": "string",
	"paths./v3/projects/{id}/notification_settings.put.parameters[2].description": "Enable/disable this notification",
	"paths./v3/projects/{id}/notification_settings.put.parameters[2].in": "formData",
	"paths./v3/projects/{id}/notification_settings.put.parameters[2].name": "new_note",
	"paths./v3/projects/{id}/notification_settings.put.parameters[2].required": false,
	"paths./v3/projects/{id}/notification_settings.put.parameters[2].type": "boolean",
	"paths./v3/projects/{id}/notification_settings.put.parameters[3].description": "Enable/disable this notification",
	"paths./v3/projects/{id}/notification_settings.put.parameters[3].in": "formData",
	"paths./v3/projects/{id}/notification_settings.put.parameters[3].name": "new_issue",
	"paths./v3/projects/{id}/notification_settings.put.parameters[3].required": false,
	"paths./v3/projects/{id}/notification_settings.put.parameters[3].type": "boolean",
	"paths./v3/projects/{id}/notification_settings.put.parameters[4].description": "Enable/disable this notification",
	"paths./v3/projects/{id}/notification_settings.put.parameters[4].in": "formData",
	"paths./v3/projects/{id}/notification_settings.put.parameters[4].name": "reopen_issue",
	"paths./v3/projects/{id}/notification_settings.put.parameters[4].required": false,
	"paths./v3/projects/{id}/notification_settings.put.parameters[4].type": "boolean",
	"paths./v3/projects/{id}/notification_settings.put.parameters[5].description": "Enable/disable this notification",
	"paths./v3/projects/{id}/notification_settings.put.parameters[5].in": "formData",
	"paths./v3/projects/{id}/notification_settings.put.parameters[5].name": "close_issue",
	"paths./v3/projects/{id}/notification_settings.put.parameters[5].required": false,
	"paths./v3/projects/{id}/notification_settings.put.parameters[5].type": "boolean",
	"paths./v3/projects/{id}/notification_settings.put.parameters[6].description": "Enable/disable this notification",
	"paths./v3/projects/{id}/notification_settings.put.parameters[6].in": "formData",
	"paths./v3/projects/{id}/notification_settings.put.parameters[6].name": "reassign_issue",
	"paths./v3/projects/{id}/notification_settings.put.parameters[6].required": false,
	"paths./v3/projects/{id}/notification_settings.put.parameters[6].type": "boolean",
	"paths./v3/projects/{id}/notification_settings.put.parameters[7].description": "Enable/disable this notification",
	"paths./v3/projects/{id}/notification_settings.put.parameters[7].in": "formData",
	"paths./v3/projects/{id}/notification_settings.put.parameters[7].name": "new_merge_request",
	"paths./v3/projects/{id}/notification_settings.put.parameters[7].required": false,
	"paths./v3/projects/{id}/notification_settings.put.parameters[7].type": "boolean",
	"paths./v3/projects/{id}/notification_settings.put.parameters[8].description": "Enable/disable this notification",
	"paths./v3/projects/{id}/notification_settings.put.parameters[8].in": "formData",
	"paths./v3/projects/{id}/notification_settings.put.parameters[8].name": "reopen_merge_request",
	"paths./v3/projects/{id}/notification_settings.put.parameters[8].required": false,
	"paths./v3/projects/{id}/notification_settings.put.parameters[8].type": "boolean",
	"paths./v3/projects/{id}/notification_settings.put.parameters[9].description": "Enable/disable this notification",
	"paths./v3/projects/{id}/notification_settings.put.parameters[9].in": "formData",
	"paths./v3/projects/{id}/notification_settings.put.parameters[9].name": "close_merge_request",
	"paths./v3/projects/{id}/notification_settings.put.parameters[9].required": false,
	"paths./v3/projects/{id}/notification_settings.put.parameters[9].type": "boolean",
	"paths./v3/projects/{id}/notification_settings.put.produces.length": 1,
	"paths./v3/projects/{id}/notification_settings.put.produces[0]": "application/json",
	"paths./v3/projects/{id}/notification_settings.put.responses.200.description": "Update project level notification level settings, defaults to Global",
	"paths./v3/projects/{id}/notification_settings.put.responses.200.schema.$ref": "#/definitions/NotificationSetting",
	"paths./v3/projects/{id}/notification_settings.put.summary": "Update project level notification level settings, defaults to Global",
	"paths./v3/projects/{id}/notification_settings.put.tags.length": 1,
	"paths./v3/projects/{id}/notification_settings.put.tags[0]": "projects",
	"paths./v3/projects/{id}/pipeline.post.consumes.length": 1,
	"paths./v3/projects/{id}/pipeline.post.consumes[0]": "application/json",
	"paths./v3/projects/{id}/pipeline.post.description": "This feature was introduced in GitLab 8.14",
	"paths./v3/projects/{id}/pipeline.post.operationId": "postV3ProjectsIdPipeline",
	"paths./v3/projects/{id}/pipeline.post.parameters.length": 2,
	"paths./v3/projects/{id}/pipeline.post.parameters[0].description": "The project ID",
	"paths./v3/projects/{id}/pipeline.post.parameters[0].in": "path",
	"paths./v3/projects/{id}/pipeline.post.parameters[0].name": "id",
	"paths./v3/projects/{id}/pipeline.post.parameters[0].required": true,
	"paths./v3/projects/{id}/pipeline.post.parameters[0].type": "string",
	"paths./v3/projects/{id}/pipeline.post.parameters[1].description": "Reference",
	"paths./v3/projects/{id}/pipeline.post.parameters[1].in": "formData",
	"paths./v3/projects/{id}/pipeline.post.parameters[1].name": "ref",
	"paths./v3/projects/{id}/pipeline.post.parameters[1].required": true,
	"paths./v3/projects/{id}/pipeline.post.parameters[1].type": "string",
	"paths./v3/projects/{id}/pipeline.post.produces.length": 1,
	"paths./v3/projects/{id}/pipeline.post.produces[0]": "application/json",
	"paths./v3/projects/{id}/pipeline.post.responses.201.description": "Create a new pipeline",
	"paths./v3/projects/{id}/pipeline.post.responses.201.schema.$ref": "#/definitions/Pipeline",
	"paths./v3/projects/{id}/pipeline.post.summary": "Create a new pipeline",
	"paths./v3/projects/{id}/pipeline.post.tags.length": 1,
	"paths./v3/projects/{id}/pipeline.post.tags[0]": "projects",
	"paths./v3/projects/{id}/pipelines.get.description": "This feature was introduced in GitLab 8.11.",
	"paths./v3/projects/{id}/pipelines.get.operationId": "getV3ProjectsIdPipelines",
	"paths./v3/projects/{id}/pipelines.get.parameters.length": 4,
	"paths./v3/projects/{id}/pipelines.get.parameters[0].description": "The project ID",
	"paths./v3/projects/{id}/pipelines.get.parameters[0].in": "path",
	"paths./v3/projects/{id}/pipelines.get.parameters[0].name": "id",
	"paths./v3/projects/{id}/pipelines.get.parameters[0].required": true,
	"paths./v3/projects/{id}/pipelines.get.parameters[0].type": "string",
	"paths./v3/projects/{id}/pipelines.get.parameters[1].description": "Current page number",
	"paths./v3/projects/{id}/pipelines.get.parameters[1].format": "int32",
	"paths./v3/projects/{id}/pipelines.get.parameters[1].in": "query",
	"paths./v3/projects/{id}/pipelines.get.parameters[1].name": "page",
	"paths./v3/projects/{id}/pipelines.get.parameters[1].required": false,
	"paths./v3/projects/{id}/pipelines.get.parameters[1].type": "integer",
	"paths./v3/projects/{id}/pipelines.get.parameters[2].description": "Number of items per page",
	"paths./v3/projects/{id}/pipelines.get.parameters[2].format": "int32",
	"paths./v3/projects/{id}/pipelines.get.parameters[2].in": "query",
	"paths./v3/projects/{id}/pipelines.get.parameters[2].name": "per_page",
	"paths./v3/projects/{id}/pipelines.get.parameters[2].required": false,
	"paths./v3/projects/{id}/pipelines.get.parameters[2].type": "integer",
	"paths./v3/projects/{id}/pipelines.get.parameters[3].description": "Either running, branches, or tags",
	"paths./v3/projects/{id}/pipelines.get.parameters[3].enum.length": 3,
	"paths./v3/projects/{id}/pipelines.get.parameters[3].enum[0]": "running",
	"paths./v3/projects/{id}/pipelines.get.parameters[3].enum[1]": "branches",
	"paths./v3/projects/{id}/pipelines.get.parameters[3].enum[2]": "tags",
	"paths./v3/projects/{id}/pipelines.get.parameters[3].in": "query",
	"paths./v3/projects/{id}/pipelines.get.parameters[3].name": "scope",
	"paths./v3/projects/{id}/pipelines.get.parameters[3].required": false,
	"paths./v3/projects/{id}/pipelines.get.parameters[3].type": "string",
	"paths./v3/projects/{id}/pipelines.get.produces.length": 1,
	"paths./v3/projects/{id}/pipelines.get.produces[0]": "application/json",
	"paths./v3/projects/{id}/pipelines.get.responses.200.description": "Get all Pipelines of the project",
	"paths./v3/projects/{id}/pipelines.get.responses.200.schema.$ref": "#/definitions/Pipeline",
	"paths./v3/projects/{id}/pipelines.get.summary": "Get all Pipelines of the project",
	"paths./v3/projects/{id}/pipelines.get.tags.length": 1,
	"paths./v3/projects/{id}/pipelines.get.tags[0]": "projects",
	"paths./v3/projects/{id}/pipelines/{pipeline_id}.get.description": "This feature was introduced in GitLab 8.11",
	"paths./v3/projects/{id}/pipelines/{pipeline_id}.get.operationId": "getV3ProjectsIdPipelinesPipelineId",
	"paths./v3/projects/{id}/pipelines/{pipeline_id}.get.parameters.length": 2,
	"paths./v3/projects/{id}/pipelines/{pipeline_id}.get.parameters[0].description": "The project ID",
	"paths./v3/projects/{id}/pipelines/{pipeline_id}.get.parameters[0].in": "path",
	"paths./v3/projects/{id}/pipelines/{pipeline_id}.get.parameters[0].name": "id",
	"paths./v3/projects/{id}/pipelines/{pipeline_id}.get.parameters[0].required": true,
	"paths./v3/projects/{id}/pipelines/{pipeline_id}.get.parameters[0].type": "string",
	"paths./v3/projects/{id}/pipelines/{pipeline_id}.get.parameters[1].description": "The pipeline ID",
	"paths./v3/projects/{id}/pipelines/{pipeline_id}.get.parameters[1].format": "int32",
	"paths./v3/projects/{id}/pipelines/{pipeline_id}.get.parameters[1].in": "path",
	"paths./v3/projects/{id}/pipelines/{pipeline_id}.get.parameters[1].name": "pipeline_id",
	"paths./v3/projects/{id}/pipelines/{pipeline_id}.get.parameters[1].required": true,
	"paths./v3/projects/{id}/pipelines/{pipeline_id}.get.parameters[1].type": "integer",
	"paths./v3/projects/{id}/pipelines/{pipeline_id}.get.produces.length": 1,
	"paths./v3/projects/{id}/pipelines/{pipeline_id}.get.produces[0]": "application/json",
	"paths./v3/projects/{id}/pipelines/{pipeline_id}.get.responses.200.description": "Gets a specific pipeline for the project",
	"paths./v3/projects/{id}/pipelines/{pipeline_id}.get.responses.200.schema.$ref": "#/definitions/Pipeline",
	"paths./v3/projects/{id}/pipelines/{pipeline_id}.get.summary": "Gets a specific pipeline for the project",
	"paths./v3/projects/{id}/pipelines/{pipeline_id}.get.tags.length": 1,
	"paths./v3/projects/{id}/pipelines/{pipeline_id}.get.tags[0]": "projects",
	"paths./v3/projects/{id}/pipelines/{pipeline_id}/cancel.post.consumes.length": 1,
	"paths./v3/projects/{id}/pipelines/{pipeline_id}/cancel.post.consumes[0]": "application/json",
	"paths./v3/projects/{id}/pipelines/{pipeline_id}/cancel.post.description": "This feature was introduced in GitLab 8.11.",
	"paths./v3/projects/{id}/pipelines/{pipeline_id}/cancel.post.operationId": "postV3ProjectsIdPipelinesPipelineIdCancel",
	"paths./v3/projects/{id}/pipelines/{pipeline_id}/cancel.post.parameters.length": 2,
	"paths./v3/projects/{id}/pipelines/{pipeline_id}/cancel.post.parameters[0].description": "The project ID",
	"paths./v3/projects/{id}/pipelines/{pipeline_id}/cancel.post.parameters[0].in": "path",
	"paths./v3/projects/{id}/pipelines/{pipeline_id}/cancel.post.parameters[0].name": "id",
	"paths./v3/projects/{id}/pipelines/{pipeline_id}/cancel.post.parameters[0].required": true,
	"paths./v3/projects/{id}/pipelines/{pipeline_id}/cancel.post.parameters[0].type": "string",
	"paths./v3/projects/{id}/pipelines/{pipeline_id}/cancel.post.parameters[1].description": "The pipeline ID",
	"paths./v3/projects/{id}/pipelines/{pipeline_id}/cancel.post.parameters[1].format": "int32",
	"paths./v3/projects/{id}/pipelines/{pipeline_id}/cancel.post.parameters[1].in": "path",
	"paths./v3/projects/{id}/pipelines/{pipeline_id}/cancel.post.parameters[1].name": "pipeline_id",
	"paths./v3/projects/{id}/pipelines/{pipeline_id}/cancel.post.parameters[1].required": true,
	"paths./v3/projects/{id}/pipelines/{pipeline_id}/cancel.post.parameters[1].type": "integer",
	"paths./v3/projects/{id}/pipelines/{pipeline_id}/cancel.post.produces.length": 1,
	"paths./v3/projects/{id}/pipelines/{pipeline_id}/cancel.post.produces[0]": "application/json",
	"paths./v3/projects/{id}/pipelines/{pipeline_id}/cancel.post.responses.201.description": "Cancel all builds in the pipeline",
	"paths./v3/projects/{id}/pipelines/{pipeline_id}/cancel.post.responses.201.schema.$ref": "#/definitions/Pipeline",
	"paths./v3/projects/{id}/pipelines/{pipeline_id}/cancel.post.summary": "Cancel all builds in the pipeline",
	"paths./v3/projects/{id}/pipelines/{pipeline_id}/cancel.post.tags.length": 1,
	"paths./v3/projects/{id}/pipelines/{pipeline_id}/cancel.post.tags[0]": "projects",
	"paths./v3/projects/{id}/pipelines/{pipeline_id}/retry.post.consumes.length": 1,
	"paths./v3/projects/{id}/pipelines/{pipeline_id}/retry.post.consumes[0]": "application/json",
	"paths./v3/projects/{id}/pipelines/{pipeline_id}/retry.post.description": "This feature was introduced in GitLab 8.11.",
	"paths./v3/projects/{id}/pipelines/{pipeline_id}/retry.post.operationId": "postV3ProjectsIdPipelinesPipelineIdRetry",
	"paths./v3/projects/{id}/pipelines/{pipeline_id}/retry.post.parameters.length": 2,
	"paths./v3/projects/{id}/pipelines/{pipeline_id}/retry.post.parameters[0].description": "The project ID",
	"paths./v3/projects/{id}/pipelines/{pipeline_id}/retry.post.parameters[0].in": "path",
	"paths./v3/projects/{id}/pipelines/{pipeline_id}/retry.post.parameters[0].name": "id",
	"paths./v3/projects/{id}/pipelines/{pipeline_id}/retry.post.parameters[0].required": true,
	"paths./v3/projects/{id}/pipelines/{pipeline_id}/retry.post.parameters[0].type": "string",
	"paths./v3/projects/{id}/pipelines/{pipeline_id}/retry.post.parameters[1].description": "The pipeline ID",
	"paths./v3/projects/{id}/pipelines/{pipeline_id}/retry.post.parameters[1].format": "int32",
	"paths./v3/projects/{id}/pipelines/{pipeline_id}/retry.post.parameters[1].in": "path",
	"paths./v3/projects/{id}/pipelines/{pipeline_id}/retry.post.parameters[1].name": "pipeline_id",
	"paths./v3/projects/{id}/pipelines/{pipeline_id}/retry.post.parameters[1].required": true,
	"paths./v3/projects/{id}/pipelines/{pipeline_id}/retry.post.parameters[1].type": "integer",
	"paths./v3/projects/{id}/pipelines/{pipeline_id}/retry.post.produces.length": 1,
	"paths./v3/projects/{id}/pipelines/{pipeline_id}/retry.post.produces[0]": "application/json",
	"paths./v3/projects/{id}/pipelines/{pipeline_id}/retry.post.responses.201.description": "Retry failed builds in the pipeline",
	"paths./v3/projects/{id}/pipelines/{pipeline_id}/retry.post.responses.201.schema.$ref": "#/definitions/Pipeline",
	"paths./v3/projects/{id}/pipelines/{pipeline_id}/retry.post.summary": "Retry failed builds in the pipeline",
	"paths./v3/projects/{id}/pipelines/{pipeline_id}/retry.post.tags.length": 1,
	"paths./v3/projects/{id}/pipelines/{pipeline_id}/retry.post.tags[0]": "projects",
	"paths./v3/projects/{id}/repository/archive.get.description": "Get an archive of the repository",
	"paths./v3/projects/{id}/repository/archive.get.operationId": "getV3ProjectsIdRepositoryArchive",
	"paths./v3/projects/{id}/repository/archive.get.parameters.length": 3,
	"paths./v3/projects/{id}/repository/archive.get.parameters[0].description": "The ID of a project",
	"paths./v3/projects/{id}/repository/archive.get.parameters[0].in": "path",
	"paths./v3/projects/{id}/repository/archive.get.parameters[0].name": "id",
	"paths./v3/projects/{id}/repository/archive.get.parameters[0].required": true,
	"paths./v3/projects/{id}/repository/archive.get.parameters[0].type": "string",
	"paths./v3/projects/{id}/repository/archive.get.parameters[1].description": "The commit sha of the archive to be downloaded",
	"paths./v3/projects/{id}/repository/archive.get.parameters[1].in": "query",
	"paths./v3/projects/{id}/repository/archive.get.parameters[1].name": "sha",
	"paths./v3/projects/{id}/repository/archive.get.parameters[1].required": false,
	"paths./v3/projects/{id}/repository/archive.get.parameters[1].type": "string",
	"paths./v3/projects/{id}/repository/archive.get.parameters[2].description": "The archive format",
	"paths./v3/projects/{id}/repository/archive.get.parameters[2].in": "query",
	"paths./v3/projects/{id}/repository/archive.get.parameters[2].name": "format",
	"paths./v3/projects/{id}/repository/archive.get.parameters[2].required": false,
	"paths./v3/projects/{id}/repository/archive.get.parameters[2].type": "string",
	"paths./v3/projects/{id}/repository/archive.get.produces.length": 1,
	"paths./v3/projects/{id}/repository/archive.get.produces[0]": "application/json",
	"paths./v3/projects/{id}/repository/archive.get.responses.200.description": "Get an archive of the repository",
	"paths./v3/projects/{id}/repository/archive.get.summary": "Get an archive of the repository",
	"paths./v3/projects/{id}/repository/archive.get.tags.length": 1,
	"paths./v3/projects/{id}/repository/archive.get.tags[0]": "projects",
	"paths./v3/projects/{id}/repository/blobs/{sha}.get.description": "Get a raw file contents",
	"paths./v3/projects/{id}/repository/blobs/{sha}.get.operationId": "getV3ProjectsIdRepositoryBlobsSha",
	"paths./v3/projects/{id}/repository/blobs/{sha}.get.parameters.length": 3,
	"paths./v3/projects/{id}/repository/blobs/{sha}.get.parameters[0].description": "The ID of a project",
	"paths./v3/projects/{id}/repository/blobs/{sha}.get.parameters[0].in": "path",
	"paths./v3/projects/{id}/repository/blobs/{sha}.get.parameters[0].name": "id",
	"paths./v3/projects/{id}/repository/blobs/{sha}.get.parameters[0].required": true,
	"paths./v3/projects/{id}/repository/blobs/{sha}.get.parameters[0].type": "string",
	"paths./v3/projects/{id}/repository/blobs/{sha}.get.parameters[1].description": "The commit, branch name, or tag name",
	"paths./v3/projects/{id}/repository/blobs/{sha}.get.parameters[1].in": "path",
	"paths./v3/projects/{id}/repository/blobs/{sha}.get.parameters[1].name": "sha",
	"paths./v3/projects/{id}/repository/blobs/{sha}.get.parameters[1].required": true,
	"paths./v3/projects/{id}/repository/blobs/{sha}.get.parameters[1].type": "string",
	"paths./v3/projects/{id}/repository/blobs/{sha}.get.parameters[2].description": "The path to the file to display",
	"paths./v3/projects/{id}/repository/blobs/{sha}.get.parameters[2].in": "query",
	"paths./v3/projects/{id}/repository/blobs/{sha}.get.parameters[2].name": "filepath",
	"paths./v3/projects/{id}/repository/blobs/{sha}.get.parameters[2].required": true,
	"paths./v3/projects/{id}/repository/blobs/{sha}.get.parameters[2].type": "string",
	"paths./v3/projects/{id}/repository/blobs/{sha}.get.produces.length": 1,
	"paths./v3/projects/{id}/repository/blobs/{sha}.get.produces[0]": "application/json",
	"paths./v3/projects/{id}/repository/blobs/{sha}.get.responses.200.description": "Get a raw file contents",
	"paths./v3/projects/{id}/repository/blobs/{sha}.get.summary": "Get a raw file contents",
	"paths./v3/projects/{id}/repository/blobs/{sha}.get.tags.length": 1,
	"paths./v3/projects/{id}/repository/blobs/{sha}.get.tags[0]": "projects",
	"paths./v3/projects/{id}/repository/branches.get.description": "Get a project repository branches",
	"paths./v3/projects/{id}/repository/branches.get.operationId": "getV3ProjectsIdRepositoryBranches",
	"paths./v3/projects/{id}/repository/branches.get.parameters.length": 1,
	"paths./v3/projects/{id}/repository/branches.get.parameters[0].description": "The ID of a project",
	"paths./v3/projects/{id}/repository/branches.get.parameters[0].in": "path",
	"paths./v3/projects/{id}/repository/branches.get.parameters[0].name": "id",
	"paths./v3/projects/{id}/repository/branches.get.parameters[0].required": true,
	"paths./v3/projects/{id}/repository/branches.get.parameters[0].type": "string",
	"paths./v3/projects/{id}/repository/branches.get.produces.length": 1,
	"paths./v3/projects/{id}/repository/branches.get.produces[0]": "application/json",
	"paths./v3/projects/{id}/repository/branches.get.responses.200.description": "Get a project repository branches",
	"paths./v3/projects/{id}/repository/branches.get.responses.200.schema.$ref": "#/definitions/RepoBranch",
	"paths./v3/projects/{id}/repository/branches.get.summary": "Get a project repository branches",
	"paths./v3/projects/{id}/repository/branches.get.tags.length": 1,
	"paths./v3/projects/{id}/repository/branches.get.tags[0]": "projects",
	"paths./v3/projects/{id}/repository/branches.post.consumes.length": 1,
	"paths./v3/projects/{id}/repository/branches.post.consumes[0]": "application/json",
	"paths./v3/projects/{id}/repository/branches.post.description": "Create branch",
	"paths./v3/projects/{id}/repository/branches.post.operationId": "postV3ProjectsIdRepositoryBranches",
	"paths./v3/projects/{id}/repository/branches.post.parameters.length": 3,
	"paths./v3/projects/{id}/repository/branches.post.parameters[0].description": "The ID of a project",
	"paths./v3/projects/{id}/repository/branches.post.parameters[0].in": "path",
	"paths./v3/projects/{id}/repository/branches.post.parameters[0].name": "id",
	"paths./v3/projects/{id}/repository/branches.post.parameters[0].required": true,
	"paths./v3/projects/{id}/repository/branches.post.parameters[0].type": "string",
	"paths./v3/projects/{id}/repository/branches.post.parameters[1].description": "The name of the branch",
	"paths./v3/projects/{id}/repository/branches.post.parameters[1].in": "formData",
	"paths./v3/projects/{id}/repository/branches.post.parameters[1].name": "branch_name",
	"paths./v3/projects/{id}/repository/branches.post.parameters[1].required": true,
	"paths./v3/projects/{id}/repository/branches.post.parameters[1].type": "string",
	"paths./v3/projects/{id}/repository/branches.post.parameters[2].description": "Create branch from commit sha or existing branch",
	"paths./v3/projects/{id}/repository/branches.post.parameters[2].in": "formData",
	"paths./v3/projects/{id}/repository/branches.post.parameters[2].name": "ref",
	"paths./v3/projects/{id}/repository/branches.post.parameters[2].required": true,
	"paths./v3/projects/{id}/repository/branches.post.parameters[2].type": "string",
	"paths./v3/projects/{id}/repository/branches.post.produces.length": 1,
	"paths./v3/projects/{id}/repository/branches.post.produces[0]": "application/json",
	"paths./v3/projects/{id}/repository/branches.post.responses.201.description": "Create branch",
	"paths./v3/projects/{id}/repository/branches.post.responses.201.schema.$ref": "#/definitions/RepoBranch",
	"paths./v3/projects/{id}/repository/branches.post.summary": "Create branch",
	"paths./v3/projects/{id}/repository/branches.post.tags.length": 1,
	"paths./v3/projects/{id}/repository/branches.post.tags[0]": "projects",
	"paths./v3/projects/{id}/repository/branches/{branch}.delete.description": "Delete a branch",
	"paths./v3/projects/{id}/repository/branches/{branch}.delete.operationId": "deleteV3ProjectsIdRepositoryBranchesBranch",
	"paths./v3/projects/{id}/repository/branches/{branch}.delete.parameters.length": 2,
	"paths./v3/projects/{id}/repository/branches/{branch}.delete.parameters[0].description": "The ID of a project",
	"paths./v3/projects/{id}/repository/branches/{branch}.delete.parameters[0].in": "path",
	"paths./v3/projects/{id}/repository/branches/{branch}.delete.parameters[0].name": "id",
	"paths./v3/projects/{id}/repository/branches/{branch}.delete.parameters[0].required": true,
	"paths./v3/projects/{id}/repository/branches/{branch}.delete.parameters[0].type": "string",
	"paths./v3/projects/{id}/repository/branches/{branch}.delete.parameters[1].description": "The name of the branch",
	"paths./v3/projects/{id}/repository/branches/{branch}.delete.parameters[1].in": "path",
	"paths./v3/projects/{id}/repository/branches/{branch}.delete.parameters[1].name": "branch",
	"paths./v3/projects/{id}/repository/branches/{branch}.delete.parameters[1].required": true,
	"paths./v3/projects/{id}/repository/branches/{branch}.delete.parameters[1].type": "string",
	"paths./v3/projects/{id}/repository/branches/{branch}.delete.produces.length": 1,
	"paths./v3/projects/{id}/repository/branches/{branch}.delete.produces[0]": "application/json",
	"paths./v3/projects/{id}/repository/branches/{branch}.delete.responses.204.description": "Delete a branch",
	"paths./v3/projects/{id}/repository/branches/{branch}.delete.summary": "Delete a branch",
	"paths./v3/projects/{id}/repository/branches/{branch}.delete.tags.length": 1,
	"paths./v3/projects/{id}/repository/branches/{branch}.delete.tags[0]": "projects",
	"paths./v3/projects/{id}/repository/branches/{branch}.get.description": "Get a single branch",
	"paths./v3/projects/{id}/repository/branches/{branch}.get.operationId": "getV3ProjectsIdRepositoryBranchesBranch",
	"paths./v3/projects/{id}/repository/branches/{branch}.get.parameters.length": 2,
	"paths./v3/projects/{id}/repository/branches/{branch}.get.parameters[0].description": "The ID of a project",
	"paths./v3/projects/{id}/repository/branches/{branch}.get.parameters[0].in": "path",
	"paths./v3/projects/{id}/repository/branches/{branch}.get.parameters[0].name": "id",
	"paths./v3/projects/{id}/repository/branches/{branch}.get.parameters[0].required": true,
	"paths./v3/projects/{id}/repository/branches/{branch}.get.parameters[0].type": "string",
	"paths./v3/projects/{id}/repository/branches/{branch}.get.parameters[1].description": "The name of the branch",
	"paths./v3/projects/{id}/repository/branches/{branch}.get.parameters[1].in": "path",
	"paths./v3/projects/{id}/repository/branches/{branch}.get.parameters[1].name": "branch",
	"paths./v3/projects/{id}/repository/branches/{branch}.get.parameters[1].required": true,
	"paths./v3/projects/{id}/repository/branches/{branch}.get.parameters[1].type": "string",
	"paths./v3/projects/{id}/repository/branches/{branch}.get.produces.length": 1,
	"paths./v3/projects/{id}/repository/branches/{branch}.get.produces[0]": "application/json",
	"paths./v3/projects/{id}/repository/branches/{branch}.get.responses.200.description": "Get a single branch",
	"paths./v3/projects/{id}/repository/branches/{branch}.get.responses.200.schema.$ref": "#/definitions/RepoBranch",
	"paths./v3/projects/{id}/repository/branches/{branch}.get.summary": "Get a single branch",
	"paths./v3/projects/{id}/repository/branches/{branch}.get.tags.length": 1,
	"paths./v3/projects/{id}/repository/branches/{branch}.get.tags[0]": "projects",
	"paths./v3/projects/{id}/repository/branches/{branch}/protect.put.consumes.length": 1,
	"paths./v3/projects/{id}/repository/branches/{branch}/protect.put.consumes[0]": "application/json",
	"paths./v3/projects/{id}/repository/branches/{branch}/protect.put.description": "Protect a single branch",
	"paths./v3/projects/{id}/repository/branches/{branch}/protect.put.operationId": "putV3ProjectsIdRepositoryBranchesBranchProtect",
	"paths./v3/projects/{id}/repository/branches/{branch}/protect.put.parameters.length": 4,
	"paths./v3/projects/{id}/repository/branches/{branch}/protect.put.parameters[0].description": "The ID of a project",
	"paths./v3/projects/{id}/repository/branches/{branch}/protect.put.parameters[0].in": "path",
	"paths./v3/projects/{id}/repository/branches/{branch}/protect.put.parameters[0].name": "id",
	"paths./v3/projects/{id}/repository/branches/{branch}/protect.put.parameters[0].required": true,
	"paths./v3/projects/{id}/repository/branches/{branch}/protect.put.parameters[0].type": "string",
	"paths./v3/projects/{id}/repository/branches/{branch}/protect.put.parameters[1].description": "The name of the branch",
	"paths./v3/projects/{id}/repository/branches/{branch}/protect.put.parameters[1].in": "path",
	"paths./v3/projects/{id}/repository/branches/{branch}/protect.put.parameters[1].name": "branch",
	"paths./v3/projects/{id}/repository/branches/{branch}/protect.put.parameters[1].required": true,
	"paths./v3/projects/{id}/repository/branches/{branch}/protect.put.parameters[1].type": "string",
	"paths./v3/projects/{id}/repository/branches/{branch}/protect.put.parameters[2].description": "Flag if developers can push to that branch",
	"paths./v3/projects/{id}/repository/branches/{branch}/protect.put.parameters[2].in": "formData",
	"paths./v3/projects/{id}/repository/branches/{branch}/protect.put.parameters[2].name": "developers_can_push",
	"paths./v3/projects/{id}/repository/branches/{branch}/protect.put.parameters[2].required": false,
	"paths./v3/projects/{id}/repository/branches/{branch}/protect.put.parameters[2].type": "boolean",
	"paths./v3/projects/{id}/repository/branches/{branch}/protect.put.parameters[3].description": "Flag if developers can merge to that branch",
	"paths./v3/projects/{id}/repository/branches/{branch}/protect.put.parameters[3].in": "formData",
	"paths./v3/projects/{id}/repository/branches/{branch}/protect.put.parameters[3].name": "developers_can_merge",
	"paths./v3/projects/{id}/repository/branches/{branch}/protect.put.parameters[3].required": false,
	"paths./v3/projects/{id}/repository/branches/{branch}/protect.put.parameters[3].type": "boolean",
	"paths./v3/projects/{id}/repository/branches/{branch}/protect.put.produces.length": 1,
	"paths./v3/projects/{id}/repository/branches/{branch}/protect.put.produces[0]": "application/json",
	"paths./v3/projects/{id}/repository/branches/{branch}/protect.put.responses.200.description": "Protect a single branch",
	"paths./v3/projects/{id}/repository/branches/{branch}/protect.put.responses.200.schema.$ref": "#/definitions/RepoBranch",
	"paths./v3/projects/{id}/repository/branches/{branch}/protect.put.summary": "Protect a single branch",
	"paths./v3/projects/{id}/repository/branches/{branch}/protect.put.tags.length": 1,
	"paths./v3/projects/{id}/repository/branches/{branch}/protect.put.tags[0]": "projects",
	"paths./v3/projects/{id}/repository/branches/{branch}/unprotect.put.consumes.length": 1,
	"paths./v3/projects/{id}/repository/branches/{branch}/unprotect.put.consumes[0]": "application/json",
	"paths./v3/projects/{id}/repository/branches/{branch}/unprotect.put.description": "Unprotect a single branch",
	"paths./v3/projects/{id}/repository/branches/{branch}/unprotect.put.operationId": "putV3ProjectsIdRepositoryBranchesBranchUnprotect",
	"paths./v3/projects/{id}/repository/branches/{branch}/unprotect.put.parameters.length": 2,
	"paths./v3/projects/{id}/repository/branches/{branch}/unprotect.put.parameters[0].description": "The ID of a project",
	"paths./v3/projects/{id}/repository/branches/{branch}/unprotect.put.parameters[0].in": "path",
	"paths./v3/projects/{id}/repository/branches/{branch}/unprotect.put.parameters[0].name": "id",
	"paths./v3/projects/{id}/repository/branches/{branch}/unprotect.put.parameters[0].required": true,
	"paths./v3/projects/{id}/repository/branches/{branch}/unprotect.put.parameters[0].type": "string",
	"paths./v3/projects/{id}/repository/branches/{branch}/unprotect.put.parameters[1].description": "The name of the branch",
	"paths./v3/projects/{id}/repository/branches/{branch}/unprotect.put.parameters[1].in": "path",
	"paths./v3/projects/{id}/repository/branches/{branch}/unprotect.put.parameters[1].name": "branch",
	"paths./v3/projects/{id}/repository/branches/{branch}/unprotect.put.parameters[1].required": true,
	"paths./v3/projects/{id}/repository/branches/{branch}/unprotect.put.parameters[1].type": "string",
	"paths./v3/projects/{id}/repository/branches/{branch}/unprotect.put.produces.length": 1,
	"paths./v3/projects/{id}/repository/branches/{branch}/unprotect.put.produces[0]": "application/json",
	"paths./v3/projects/{id}/repository/branches/{branch}/unprotect.put.responses.200.description": "Unprotect a single branch",
	"paths./v3/projects/{id}/repository/branches/{branch}/unprotect.put.responses.200.schema.$ref": "#/definitions/RepoBranch",
	"paths./v3/projects/{id}/repository/branches/{branch}/unprotect.put.summary": "Unprotect a single branch",
	"paths./v3/projects/{id}/repository/branches/{branch}/unprotect.put.tags.length": 1,
	"paths./v3/projects/{id}/repository/branches/{branch}/unprotect.put.tags[0]": "projects",
	"paths./v3/projects/{id}/repository/commits.get.description": "Get a project repository commits",
	"paths./v3/projects/{id}/repository/commits.get.operationId": "getV3ProjectsIdRepositoryCommits",
	"paths./v3/projects/{id}/repository/commits.get.parameters.length": 7,
	"paths./v3/projects/{id}/repository/commits.get.parameters[0].description": "The ID of a project",
	"paths./v3/projects/{id}/repository/commits.get.parameters[0].in": "path",
	"paths./v3/projects/{id}/repository/commits.get.parameters[0].name": "id",
	"paths./v3/projects/{id}/repository/commits.get.parameters[0].required": true,
	"paths./v3/projects/{id}/repository/commits.get.parameters[0].type": "string",
	"paths./v3/projects/{id}/repository/commits.get.parameters[1].description": "The name of a repository branch or tag, if not given the default branch is used",
	"paths./v3/projects/{id}/repository/commits.get.parameters[1].in": "query",
	"paths./v3/projects/{id}/repository/commits.get.parameters[1].name": "ref_name",
	"paths./v3/projects/{id}/repository/commits.get.parameters[1].required": false,
	"paths./v3/projects/{id}/repository/commits.get.parameters[1].type": "string",
	"paths./v3/projects/{id}/repository/commits.get.parameters[2].description": "Only commits after or in this date will be returned",
	"paths./v3/projects/{id}/repository/commits.get.parameters[2].in": "query",
	"paths./v3/projects/{id}/repository/commits.get.parameters[2].name": "since",
	"paths./v3/projects/{id}/repository/commits.get.parameters[2].required": false,
	"paths./v3/projects/{id}/repository/commits.get.parameters[2].type": "string",
	"paths./v3/projects/{id}/repository/commits.get.parameters[3].description": "Only commits before or in this date will be returned",
	"paths./v3/projects/{id}/repository/commits.get.parameters[3].in": "query",
	"paths./v3/projects/{id}/repository/commits.get.parameters[3].name": "until",
	"paths./v3/projects/{id}/repository/commits.get.parameters[3].required": false,
	"paths./v3/projects/{id}/repository/commits.get.parameters[3].type": "string",
	"paths./v3/projects/{id}/repository/commits.get.parameters[4].default": 0,
	"paths./v3/projects/{id}/repository/commits.get.parameters[4].description": "The page for pagination",
	"paths./v3/projects/{id}/repository/commits.get.parameters[4].format": "int32",
	"paths./v3/projects/{id}/repository/commits.get.parameters[4].in": "query",
	"paths./v3/projects/{id}/repository/commits.get.parameters[4].name": "page",
	"paths./v3/projects/{id}/repository/commits.get.parameters[4].required": false,
	"paths./v3/projects/{id}/repository/commits.get.parameters[4].type": "integer",
	"paths./v3/projects/{id}/repository/commits.get.parameters[5].default": 20,
	"paths./v3/projects/{id}/repository/commits.get.parameters[5].description": "The number of results per page",
	"paths./v3/projects/{id}/repository/commits.get.parameters[5].format": "int32",
	"paths./v3/projects/{id}/repository/commits.get.parameters[5].in": "query",
	"paths./v3/projects/{id}/repository/commits.get.parameters[5].name": "per_page",
	"paths./v3/projects/{id}/repository/commits.get.parameters[5].required": false,
	"paths./v3/projects/{id}/repository/commits.get.parameters[5].type": "integer",
	"paths./v3/projects/{id}/repository/commits.get.parameters[6].description": "The file path",
	"paths./v3/projects/{id}/repository/commits.get.parameters[6].in": "query",
	"paths./v3/projects/{id}/repository/commits.get.parameters[6].name": "path",
	"paths./v3/projects/{id}/repository/commits.get.parameters[6].required": false,
	"paths./v3/projects/{id}/repository/commits.get.parameters[6].type": "string",
	"paths./v3/projects/{id}/repository/commits.get.produces.length": 1,
	"paths./v3/projects/{id}/repository/commits.get.produces[0]": "application/json",
	"paths./v3/projects/{id}/repository/commits.get.responses.200.description": "Get a project repository commits",
	"paths./v3/projects/{id}/repository/commits.get.responses.200.schema.$ref": "#/definitions/RepoCommit",
	"paths./v3/projects/{id}/repository/commits.get.summary": "Get a project repository commits",
	"paths./v3/projects/{id}/repository/commits.get.tags.length": 1,
	"paths./v3/projects/{id}/repository/commits.get.tags[0]": "projects",
	"paths./v3/projects/{id}/repository/commits.post.consumes.length": 1,
	"paths./v3/projects/{id}/repository/commits.post.consumes[0]": "application/json",
	"paths./v3/projects/{id}/repository/commits.post.description": "This feature was introduced in GitLab 8.13",
	"paths./v3/projects/{id}/repository/commits.post.operationId": "postV3ProjectsIdRepositoryCommits",
	"paths./v3/projects/{id}/repository/commits.post.parameters.length": 6,
	"paths./v3/projects/{id}/repository/commits.post.parameters[0].description": "The ID of a project",
	"paths./v3/projects/{id}/repository/commits.post.parameters[0].in": "path",
	"paths./v3/projects/{id}/repository/commits.post.parameters[0].name": "id",
	"paths./v3/projects/{id}/repository/commits.post.parameters[0].required": true,
	"paths./v3/projects/{id}/repository/commits.post.parameters[0].type": "string",
	"paths./v3/projects/{id}/repository/commits.post.parameters[1].description": "The name of branch",
	"paths./v3/projects/{id}/repository/commits.post.parameters[1].in": "formData",
	"paths./v3/projects/{id}/repository/commits.post.parameters[1].name": "branch_name",
	"paths./v3/projects/{id}/repository/commits.post.parameters[1].required": true,
	"paths./v3/projects/{id}/repository/commits.post.parameters[1].type": "string",
	"paths./v3/projects/{id}/repository/commits.post.parameters[2].description": "Commit message",
	"paths./v3/projects/{id}/repository/commits.post.parameters[2].in": "formData",
	"paths./v3/projects/{id}/repository/commits.post.parameters[2].name": "commit_message",
	"paths./v3/projects/{id}/repository/commits.post.parameters[2].required": true,
	"paths./v3/projects/{id}/repository/commits.post.parameters[2].type": "string",
	"paths./v3/projects/{id}/repository/commits.post.parameters[3].description": "Actions to perform in commit",
	"paths./v3/projects/{id}/repository/commits.post.parameters[3].in": "formData",
	"paths./v3/projects/{id}/repository/commits.post.parameters[3].items.x-type": "object",
	"paths./v3/projects/{id}/repository/commits.post.parameters[3].name": "actions",
	"paths./v3/projects/{id}/repository/commits.post.parameters[3].required": true,
	"paths./v3/projects/{id}/repository/commits.post.parameters[3].type": "array",
	"paths./v3/projects/{id}/repository/commits.post.parameters[4].description": "Author email for commit",
	"paths./v3/projects/{id}/repository/commits.post.parameters[4].in": "formData",
	"paths./v3/projects/{id}/repository/commits.post.parameters[4].name": "author_email",
	"paths./v3/projects/{id}/repository/commits.post.parameters[4].required": false,
	"paths./v3/projects/{id}/repository/commits.post.parameters[4].type": "string",
	"paths./v3/projects/{id}/repository/commits.post.parameters[5].description": "Author name for commit",
	"paths./v3/projects/{id}/repository/commits.post.parameters[5].in": "formData",
	"paths./v3/projects/{id}/repository/commits.post.parameters[5].name": "author_name",
	"paths./v3/projects/{id}/repository/commits.post.parameters[5].required": false,
	"paths./v3/projects/{id}/repository/commits.post.parameters[5].type": "string",
	"paths./v3/projects/{id}/repository/commits.post.produces.length": 1,
	"paths./v3/projects/{id}/repository/commits.post.produces[0]": "application/json",
	"paths./v3/projects/{id}/repository/commits.post.responses.201.description": "Commit multiple file changes as one commit",
	"paths./v3/projects/{id}/repository/commits.post.responses.201.schema.$ref": "#/definitions/RepoCommitDetail",
	"paths./v3/projects/{id}/repository/commits.post.summary": "Commit multiple file changes as one commit",
	"paths./v3/projects/{id}/repository/commits.post.tags.length": 1,
	"paths./v3/projects/{id}/repository/commits.post.tags[0]": "projects",
	"paths./v3/projects/{id}/repository/commits/{sha}.get.description": "Get a specific commit of a project",
	"paths./v3/projects/{id}/repository/commits/{sha}.get.operationId": "getV3ProjectsIdRepositoryCommitsSha",
	"paths./v3/projects/{id}/repository/commits/{sha}.get.parameters.length": 2,
	"paths./v3/projects/{id}/repository/commits/{sha}.get.parameters[0].description": "The ID of a project",
	"paths./v3/projects/{id}/repository/commits/{sha}.get.parameters[0].in": "path",
	"paths./v3/projects/{id}/repository/commits/{sha}.get.parameters[0].name": "id",
	"paths./v3/projects/{id}/repository/commits/{sha}.get.parameters[0].required": true,
	"paths./v3/projects/{id}/repository/commits/{sha}.get.parameters[0].type": "string",
	"paths./v3/projects/{id}/repository/commits/{sha}.get.parameters[1].description": "A commit sha, or the name of a branch or tag",
	"paths./v3/projects/{id}/repository/commits/{sha}.get.parameters[1].in": "path",
	"paths./v3/projects/{id}/repository/commits/{sha}.get.parameters[1].name": "sha",
	"paths./v3/projects/{id}/repository/commits/{sha}.get.parameters[1].required": true,
	"paths./v3/projects/{id}/repository/commits/{sha}.get.parameters[1].type": "string",
	"paths./v3/projects/{id}/repository/commits/{sha}.get.produces.length": 1,
	"paths./v3/projects/{id}/repository/commits/{sha}.get.produces[0]": "application/json",
	"paths./v3/projects/{id}/repository/commits/{sha}.get.responses.200.description": "Get a specific commit of a project",
	"paths./v3/projects/{id}/repository/commits/{sha}.get.responses.200.schema.$ref": "#/definitions/RepoCommitDetail",
	"paths./v3/projects/{id}/repository/commits/{sha}.get.responses.404.description": "Not Found",
	"paths./v3/projects/{id}/repository/commits/{sha}.get.summary": "Get a specific commit of a project",
	"paths./v3/projects/{id}/repository/commits/{sha}.get.tags.length": 1,
	"paths./v3/projects/{id}/repository/commits/{sha}.get.tags[0]": "projects",
	"paths./v3/projects/{id}/repository/commits/{sha}/blob.get.description": "Get a raw file contents",
	"paths./v3/projects/{id}/repository/commits/{sha}/blob.get.operationId": "getV3ProjectsIdRepositoryCommitsShaBlob",
	"paths./v3/projects/{id}/repository/commits/{sha}/blob.get.parameters.length": 3,
	"paths./v3/projects/{id}/repository/commits/{sha}/blob.get.parameters[0].description": "The ID of a project",
	"paths./v3/projects/{id}/repository/commits/{sha}/blob.get.parameters[0].in": "path",
	"paths./v3/projects/{id}/repository/commits/{sha}/blob.get.parameters[0].name": "id",
	"paths./v3/projects/{id}/repository/commits/{sha}/blob.get.parameters[0].required": true,
	"paths./v3/projects/{id}/repository/commits/{sha}/blob.get.parameters[0].type": "string",
	"paths./v3/projects/{id}/repository/commits/{sha}/blob.get.parameters[1].description": "The commit, branch name, or tag name",
	"paths./v3/projects/{id}/repository/commits/{sha}/blob.get.parameters[1].in": "path",
	"paths./v3/projects/{id}/repository/commits/{sha}/blob.get.parameters[1].name": "sha",
	"paths./v3/projects/{id}/repository/commits/{sha}/blob.get.parameters[1].required": true,
	"paths./v3/projects/{id}/repository/commits/{sha}/blob.get.parameters[1].type": "string",
	"paths./v3/projects/{id}/repository/commits/{sha}/blob.get.parameters[2].description": "The path to the file to display",
	"paths./v3/projects/{id}/repository/commits/{sha}/blob.get.parameters[2].in": "query",
	"paths./v3/projects/{id}/repository/commits/{sha}/blob.get.parameters[2].name": "filepath",
	"paths./v3/projects/{id}/repository/commits/{sha}/blob.get.parameters[2].required": true,
	"paths./v3/projects/{id}/repository/commits/{sha}/blob.get.parameters[2].type": "string",
	"paths./v3/projects/{id}/repository/commits/{sha}/blob.get.produces.length": 1,
	"paths./v3/projects/{id}/repository/commits/{sha}/blob.get.produces[0]": "application/json",
	"paths./v3/projects/{id}/repository/commits/{sha}/blob.get.responses.200.description": "Get a raw file contents",
	"paths./v3/projects/{id}/repository/commits/{sha}/blob.get.summary": "Get a raw file contents",
	"paths./v3/projects/{id}/repository/commits/{sha}/blob.get.tags.length": 1,
	"paths./v3/projects/{id}/repository/commits/{sha}/blob.get.tags[0]": "projects",
	"paths./v3/projects/{id}/repository/commits/{sha}/builds.get.description": "Get builds for a specific commit of a project",
	"paths./v3/projects/{id}/repository/commits/{sha}/builds.get.operationId": "getV3ProjectsIdRepositoryCommitsShaBuilds",
	"paths./v3/projects/{id}/repository/commits/{sha}/builds.get.parameters.length": 5,
	"paths./v3/projects/{id}/repository/commits/{sha}/builds.get.parameters[0].description": "The ID of a project",
	"paths./v3/projects/{id}/repository/commits/{sha}/builds.get.parameters[0].in": "path",
	"paths./v3/projects/{id}/repository/commits/{sha}/builds.get.parameters[0].name": "id",
	"paths./v3/projects/{id}/repository/commits/{sha}/builds.get.parameters[0].required": true,
	"paths./v3/projects/{id}/repository/commits/{sha}/builds.get.parameters[0].type": "string",
	"paths./v3/projects/{id}/repository/commits/{sha}/builds.get.parameters[1].description": "The SHA id of a commit",
	"paths./v3/projects/{id}/repository/commits/{sha}/builds.get.parameters[1].in": "path",
	"paths./v3/projects/{id}/repository/commits/{sha}/builds.get.parameters[1].name": "sha",
	"paths./v3/projects/{id}/repository/commits/{sha}/builds.get.parameters[1].required": true,
	"paths./v3/projects/{id}/repository/commits/{sha}/builds.get.parameters[1].type": "string",
	"paths./v3/projects/{id}/repository/commits/{sha}/builds.get.parameters[2].description": "The scope of builds to show",
	"paths./v3/projects/{id}/repository/commits/{sha}/builds.get.parameters[2].enum.length": 5,
	"paths./v3/projects/{id}/repository/commits/{sha}/builds.get.parameters[2].enum[0]": "pending",
	"paths./v3/projects/{id}/repository/commits/{sha}/builds.get.parameters[2].enum[1]": "running",
	"paths./v3/projects/{id}/repository/commits/{sha}/builds.get.parameters[2].enum[2]": "failed",
	"paths./v3/projects/{id}/repository/commits/{sha}/builds.get.parameters[2].enum[3]": "success",
	"paths./v3/projects/{id}/repository/commits/{sha}/builds.get.parameters[2].enum[4]": "canceled",
	"paths./v3/projects/{id}/repository/commits/{sha}/builds.get.parameters[2].in": "query",
	"paths./v3/projects/{id}/repository/commits/{sha}/builds.get.parameters[2].name": "scope",
	"paths./v3/projects/{id}/repository/commits/{sha}/builds.get.parameters[2].required": false,
	"paths./v3/projects/{id}/repository/commits/{sha}/builds.get.parameters[2].type": "string",
	"paths./v3/projects/{id}/repository/commits/{sha}/builds.get.parameters[3].description": "Current page number",
	"paths./v3/projects/{id}/repository/commits/{sha}/builds.get.parameters[3].format": "int32",
	"paths./v3/projects/{id}/repository/commits/{sha}/builds.get.parameters[3].in": "query",
	"paths./v3/projects/{id}/repository/commits/{sha}/builds.get.parameters[3].name": "page",
	"paths./v3/projects/{id}/repository/commits/{sha}/builds.get.parameters[3].required": false,
	"paths./v3/projects/{id}/repository/commits/{sha}/builds.get.parameters[3].type": "integer",
	"paths./v3/projects/{id}/repository/commits/{sha}/builds.get.parameters[4].description": "Number of items per page",
	"paths./v3/projects/{id}/repository/commits/{sha}/builds.get.parameters[4].format": "int32",
	"paths./v3/projects/{id}/repository/commits/{sha}/builds.get.parameters[4].in": "query",
	"paths./v3/projects/{id}/repository/commits/{sha}/builds.get.parameters[4].name": "per_page",
	"paths./v3/projects/{id}/repository/commits/{sha}/builds.get.parameters[4].required": false,
	"paths./v3/projects/{id}/repository/commits/{sha}/builds.get.parameters[4].type": "integer",
	"paths./v3/projects/{id}/repository/commits/{sha}/builds.get.produces.length": 1,
	"paths./v3/projects/{id}/repository/commits/{sha}/builds.get.produces[0]": "application/json",
	"paths./v3/projects/{id}/repository/commits/{sha}/builds.get.responses.200.description": "Get builds for a specific commit of a project",
	"paths./v3/projects/{id}/repository/commits/{sha}/builds.get.responses.200.schema.$ref": "#/definitions/Build",
	"paths./v3/projects/{id}/repository/commits/{sha}/builds.get.summary": "Get builds for a specific commit of a project",
	"paths./v3/projects/{id}/repository/commits/{sha}/builds.get.tags.length": 1,
	"paths./v3/projects/{id}/repository/commits/{sha}/builds.get.tags[0]": "projects",
	"paths./v3/projects/{id}/repository/commits/{sha}/cherry_pick.post.consumes.length": 1,
	"paths./v3/projects/{id}/repository/commits/{sha}/cherry_pick.post.consumes[0]": "application/json",
	"paths./v3/projects/{id}/repository/commits/{sha}/cherry_pick.post.description": "This feature was introduced in GitLab 8.15",
	"paths./v3/projects/{id}/repository/commits/{sha}/cherry_pick.post.operationId": "postV3ProjectsIdRepositoryCommitsShaCherryPick",
	"paths./v3/projects/{id}/repository/commits/{sha}/cherry_pick.post.parameters.length": 3,
	"paths./v3/projects/{id}/repository/commits/{sha}/cherry_pick.post.parameters[0].description": "The ID of a project",
	"paths./v3/projects/{id}/repository/commits/{sha}/cherry_pick.post.parameters[0].in": "path",
	"paths./v3/projects/{id}/repository/commits/{sha}/cherry_pick.post.parameters[0].name": "id",
	"paths./v3/projects/{id}/repository/commits/{sha}/cherry_pick.post.parameters[0].required": true,
	"paths./v3/projects/{id}/repository/commits/{sha}/cherry_pick.post.parameters[0].type": "string",
	"paths./v3/projects/{id}/repository/commits/{sha}/cherry_pick.post.parameters[1].description": "A commit sha to be cherry picked",
	"paths./v3/projects/{id}/repository/commits/{sha}/cherry_pick.post.parameters[1].in": "path",
	"paths./v3/projects/{id}/repository/commits/{sha}/cherry_pick.post.parameters[1].name": "sha",
	"paths./v3/projects/{id}/repository/commits/{sha}/cherry_pick.post.parameters[1].required": true,
	"paths./v3/projects/{id}/repository/commits/{sha}/cherry_pick.post.parameters[1].type": "string",
	"paths./v3/projects/{id}/repository/commits/{sha}/cherry_pick.post.parameters[2].description": "The name of the branch",
	"paths./v3/projects/{id}/repository/commits/{sha}/cherry_pick.post.parameters[2].in": "formData",
	"paths./v3/projects/{id}/repository/commits/{sha}/cherry_pick.post.parameters[2].name": "branch",
	"paths./v3/projects/{id}/repository/commits/{sha}/cherry_pick.post.parameters[2].required": true,
	"paths./v3/projects/{id}/repository/commits/{sha}/cherry_pick.post.parameters[2].type": "string",
	"paths./v3/projects/{id}/repository/commits/{sha}/cherry_pick.post.produces.length": 1,
	"paths./v3/projects/{id}/repository/commits/{sha}/cherry_pick.post.produces[0]": "application/json",
	"paths./v3/projects/{id}/repository/commits/{sha}/cherry_pick.post.responses.201.description": "Cherry pick commit into a branch",
	"paths./v3/projects/{id}/repository/commits/{sha}/cherry_pick.post.responses.201.schema.$ref": "#/definitions/RepoCommit",
	"paths./v3/projects/{id}/repository/commits/{sha}/cherry_pick.post.summary": "Cherry pick commit into a branch",
	"paths./v3/projects/{id}/repository/commits/{sha}/cherry_pick.post.tags.length": 1,
	"paths./v3/projects/{id}/repository/commits/{sha}/cherry_pick.post.tags[0]": "projects",
	"paths./v3/projects/{id}/repository/commits/{sha}/comments.get.description": "Get a commit's comments",
	"paths./v3/projects/{id}/repository/commits/{sha}/comments.get.operationId": "getV3ProjectsIdRepositoryCommitsShaComments",
	"paths./v3/projects/{id}/repository/commits/{sha}/comments.get.parameters.length": 4,
	"paths./v3/projects/{id}/repository/commits/{sha}/comments.get.parameters[0].description": "The ID of a project",
	"paths./v3/projects/{id}/repository/commits/{sha}/comments.get.parameters[0].in": "path",
	"paths./v3/projects/{id}/repository/commits/{sha}/comments.get.parameters[0].name": "id",
	"paths./v3/projects/{id}/repository/commits/{sha}/comments.get.parameters[0].required": true,
	"paths./v3/projects/{id}/repository/commits/{sha}/comments.get.parameters[0].type": "string",
	"paths./v3/projects/{id}/repository/commits/{sha}/comments.get.parameters[1].description": "Current page number",
	"paths./v3/projects/{id}/repository/commits/{sha}/comments.get.parameters[1].format": "int32",
	"paths./v3/projects/{id}/repository/commits/{sha}/comments.get.parameters[1].in": "query",
	"paths./v3/projects/{id}/repository/commits/{sha}/comments.get.parameters[1].name": "page",
	"paths./v3/projects/{id}/repository/commits/{sha}/comments.get.parameters[1].required": false,
	"paths./v3/projects/{id}/repository/commits/{sha}/comments.get.parameters[1].type": "integer",
	"paths./v3/projects/{id}/repository/commits/{sha}/comments.get.parameters[2].description": "Number of items per page",
	"paths./v3/projects/{id}/repository/commits/{sha}/comments.get.parameters[2].format": "int32",
	"paths./v3/projects/{id}/repository/commits/{sha}/comments.get.parameters[2].in": "query",
	"paths./v3/projects/{id}/repository/commits/{sha}/comments.get.parameters[2].name": "per_page",
	"paths./v3/projects/{id}/repository/commits/{sha}/comments.get.parameters[2].required": false,
	"paths./v3/projects/{id}/repository/commits/{sha}/comments.get.parameters[2].type": "integer",
	"paths./v3/projects/{id}/repository/commits/{sha}/comments.get.parameters[3].description": "A commit sha, or the name of a branch or tag",
	"paths./v3/projects/{id}/repository/commits/{sha}/comments.get.parameters[3].in": "path",
	"paths./v3/projects/{id}/repository/commits/{sha}/comments.get.parameters[3].name": "sha",
	"paths./v3/projects/{id}/repository/commits/{sha}/comments.get.parameters[3].required": true,
	"paths./v3/projects/{id}/repository/commits/{sha}/comments.get.parameters[3].type": "string",
	"paths./v3/projects/{id}/repository/commits/{sha}/comments.get.produces.length": 1,
	"paths./v3/projects/{id}/repository/commits/{sha}/comments.get.produces[0]": "application/json",
	"paths./v3/projects/{id}/repository/commits/{sha}/comments.get.responses.200.description": "Get a commit's comments",
	"paths./v3/projects/{id}/repository/commits/{sha}/comments.get.responses.200.schema.$ref": "#/definitions/CommitNote",
	"paths./v3/projects/{id}/repository/commits/{sha}/comments.get.responses.404.description": "Not Found",
	"paths./v3/projects/{id}/repository/commits/{sha}/comments.get.summary": "Get a commit's comments",
	"paths./v3/projects/{id}/repository/commits/{sha}/comments.get.tags.length": 1,
	"paths./v3/projects/{id}/repository/commits/{sha}/comments.get.tags[0]": "projects",
	"paths./v3/projects/{id}/repository/commits/{sha}/comments.post.consumes.length": 1,
	"paths./v3/projects/{id}/repository/commits/{sha}/comments.post.consumes[0]": "application/json",
	"paths./v3/projects/{id}/repository/commits/{sha}/comments.post.description": "Post comment to commit",
	"paths./v3/projects/{id}/repository/commits/{sha}/comments.post.operationId": "postV3ProjectsIdRepositoryCommitsShaComments",
	"paths./v3/projects/{id}/repository/commits/{sha}/comments.post.parameters.length": 6,
	"paths./v3/projects/{id}/repository/commits/{sha}/comments.post.parameters[0].description": "The ID of a project",
	"paths./v3/projects/{id}/repository/commits/{sha}/comments.post.parameters[0].in": "path",
	"paths./v3/projects/{id}/repository/commits/{sha}/comments.post.parameters[0].name": "id",
	"paths./v3/projects/{id}/repository/commits/{sha}/comments.post.parameters[0].required": true,
	"paths./v3/projects/{id}/repository/commits/{sha}/comments.post.parameters[0].type": "string",
	"paths./v3/projects/{id}/repository/commits/{sha}/comments.post.parameters[1].description": "The commit's SHA",
	"paths./v3/projects/{id}/repository/commits/{sha}/comments.post.parameters[1].in": "path",
	"paths./v3/projects/{id}/repository/commits/{sha}/comments.post.parameters[1].name": "sha",
	"paths./v3/projects/{id}/repository/commits/{sha}/comments.post.parameters[1].required": true,
	"paths./v3/projects/{id}/repository/commits/{sha}/comments.post.parameters[1].type": "string",
	"paths./v3/projects/{id}/repository/commits/{sha}/comments.post.parameters[2].description": "The text of the comment",
	"paths./v3/projects/{id}/repository/commits/{sha}/comments.post.parameters[2].in": "formData",
	"paths./v3/projects/{id}/repository/commits/{sha}/comments.post.parameters[2].name": "note",
	"paths./v3/projects/{id}/repository/commits/{sha}/comments.post.parameters[2].required": true,
	"paths./v3/projects/{id}/repository/commits/{sha}/comments.post.parameters[2].type": "string",
	"paths./v3/projects/{id}/repository/commits/{sha}/comments.post.parameters[3].description": "The file path",
	"paths./v3/projects/{id}/repository/commits/{sha}/comments.post.parameters[3].in": "formData",
	"paths./v3/projects/{id}/repository/commits/{sha}/comments.post.parameters[3].name": "path",
	"paths./v3/projects/{id}/repository/commits/{sha}/comments.post.parameters[3].required": false,
	"paths./v3/projects/{id}/repository/commits/{sha}/comments.post.parameters[3].type": "string",
	"paths./v3/projects/{id}/repository/commits/{sha}/comments.post.parameters[4].description": "The line number",
	"paths./v3/projects/{id}/repository/commits/{sha}/comments.post.parameters[4].format": "int32",
	"paths./v3/projects/{id}/repository/commits/{sha}/comments.post.parameters[4].in": "formData",
	"paths./v3/projects/{id}/repository/commits/{sha}/comments.post.parameters[4].name": "line",
	"paths./v3/projects/{id}/repository/commits/{sha}/comments.post.parameters[4].required": true,
	"paths./v3/projects/{id}/repository/commits/{sha}/comments.post.parameters[4].type": "integer",
	"paths./v3/projects/{id}/repository/commits/{sha}/comments.post.parameters[5].default": "new",
	"paths./v3/projects/{id}/repository/commits/{sha}/comments.post.parameters[5].description": "The type of the line",
	"paths./v3/projects/{id}/repository/commits/{sha}/comments.post.parameters[5].enum.length": 2,
	"paths./v3/projects/{id}/repository/commits/{sha}/comments.post.parameters[5].enum[0]": "new",
	"paths./v3/projects/{id}/repository/commits/{sha}/comments.post.parameters[5].enum[1]": "old",
	"paths./v3/projects/{id}/repository/commits/{sha}/comments.post.parameters[5].in": "formData",
	"paths./v3/projects/{id}/repository/commits/{sha}/comments.post.parameters[5].name": "line_type",
	"paths./v3/projects/{id}/repository/commits/{sha}/comments.post.parameters[5].required": true,
	"paths./v3/projects/{id}/repository/commits/{sha}/comments.post.parameters[5].type": "string",
	"paths./v3/projects/{id}/repository/commits/{sha}/comments.post.produces.length": 1,
	"paths./v3/projects/{id}/repository/commits/{sha}/comments.post.produces[0]": "application/json",
	"paths./v3/projects/{id}/repository/commits/{sha}/comments.post.responses.201.description": "Post comment to commit",
	"paths./v3/projects/{id}/repository/commits/{sha}/comments.post.responses.201.schema.$ref": "#/definitions/CommitNote",
	"paths./v3/projects/{id}/repository/commits/{sha}/comments.post.summary": "Post comment to commit",
	"paths./v3/projects/{id}/repository/commits/{sha}/comments.post.tags.length": 1,
	"paths./v3/projects/{id}/repository/commits/{sha}/comments.post.tags[0]": "projects",
	"paths./v3/projects/{id}/repository/commits/{sha}/diff.get.description": "Get the diff for a specific commit of a project",
	"paths./v3/projects/{id}/repository/commits/{sha}/diff.get.operationId": "getV3ProjectsIdRepositoryCommitsShaDiff",
	"paths./v3/projects/{id}/repository/commits/{sha}/diff.get.parameters.length": 2,
	"paths./v3/projects/{id}/repository/commits/{sha}/diff.get.parameters[0].description": "The ID of a project",
	"paths./v3/projects/{id}/repository/commits/{sha}/diff.get.parameters[0].in": "path",
	"paths./v3/projects/{id}/repository/commits/{sha}/diff.get.parameters[0].name": "id",
	"paths./v3/projects/{id}/repository/commits/{sha}/diff.get.parameters[0].required": true,
	"paths./v3/projects/{id}/repository/commits/{sha}/diff.get.parameters[0].type": "string",
	"paths./v3/projects/{id}/repository/commits/{sha}/diff.get.parameters[1].description": "A commit sha, or the name of a branch or tag",
	"paths./v3/projects/{id}/repository/commits/{sha}/diff.get.parameters[1].in": "path",
	"paths./v3/projects/{id}/repository/commits/{sha}/diff.get.parameters[1].name": "sha",
	"paths./v3/projects/{id}/repository/commits/{sha}/diff.get.parameters[1].required": true,
	"paths./v3/projects/{id}/repository/commits/{sha}/diff.get.parameters[1].type": "string",
	"paths./v3/projects/{id}/repository/commits/{sha}/diff.get.produces.length": 1,
	"paths./v3/projects/{id}/repository/commits/{sha}/diff.get.produces[0]": "application/json",
	"paths./v3/projects/{id}/repository/commits/{sha}/diff.get.responses.200.description": "Get the diff for a specific commit of a project",
	"paths./v3/projects/{id}/repository/commits/{sha}/diff.get.responses.404.description": "Not Found",
	"paths./v3/projects/{id}/repository/commits/{sha}/diff.get.summary": "Get the diff for a specific commit of a project",
	"paths./v3/projects/{id}/repository/commits/{sha}/diff.get.tags.length": 1,
	"paths./v3/projects/{id}/repository/commits/{sha}/diff.get.tags[0]": "projects",
	"paths./v3/projects/{id}/repository/commits/{sha}/statuses.get.description": "Get a commit's statuses",
	"paths./v3/projects/{id}/repository/commits/{sha}/statuses.get.operationId": "getV3ProjectsIdRepositoryCommitsShaStatuses",
	"paths./v3/projects/{id}/repository/commits/{sha}/statuses.get.parameters.length": 8,
	"paths./v3/projects/{id}/repository/commits/{sha}/statuses.get.parameters[0].description": "The ID of a project",
	"paths./v3/projects/{id}/repository/commits/{sha}/statuses.get.parameters[0].in": "path",
	"paths./v3/projects/{id}/repository/commits/{sha}/statuses.get.parameters[0].name": "id",
	"paths./v3/projects/{id}/repository/commits/{sha}/statuses.get.parameters[0].required": true,
	"paths./v3/projects/{id}/repository/commits/{sha}/statuses.get.parameters[0].type": "string",
	"paths./v3/projects/{id}/repository/commits/{sha}/statuses.get.parameters[1].description": "The commit hash",
	"paths./v3/projects/{id}/repository/commits/{sha}/statuses.get.parameters[1].in": "path",
	"paths./v3/projects/{id}/repository/commits/{sha}/statuses.get.parameters[1].name": "sha",
	"paths./v3/projects/{id}/repository/commits/{sha}/statuses.get.parameters[1].required": true,
	"paths./v3/projects/{id}/repository/commits/{sha}/statuses.get.parameters[1].type": "string",
	"paths./v3/projects/{id}/repository/commits/{sha}/statuses.get.parameters[2].description": "The ref",
	"paths./v3/projects/{id}/repository/commits/{sha}/statuses.get.parameters[2].in": "query",
	"paths./v3/projects/{id}/repository/commits/{sha}/statuses.get.parameters[2].name": "ref",
	"paths./v3/projects/{id}/repository/commits/{sha}/statuses.get.parameters[2].required": false,
	"paths./v3/projects/{id}/repository/commits/{sha}/statuses.get.parameters[2].type": "string",
	"paths./v3/projects/{id}/repository/commits/{sha}/statuses.get.parameters[3].description": "The stage",
	"paths./v3/projects/{id}/repository/commits/{sha}/statuses.get.parameters[3].in": "query",
	"paths./v3/projects/{id}/repository/commits/{sha}/statuses.get.parameters[3].name": "stage",
	"paths./v3/projects/{id}/repository/commits/{sha}/statuses.get.parameters[3].required": false,
	"paths./v3/projects/{id}/repository/commits/{sha}/statuses.get.parameters[3].type": "string",
	"paths./v3/projects/{id}/repository/commits/{sha}/statuses.get.parameters[4].description": "The name",
	"paths./v3/projects/{id}/repository/commits/{sha}/statuses.get.parameters[4].in": "query",
	"paths./v3/projects/{id}/repository/commits/{sha}/statuses.get.parameters[4].name": "name",
	"paths./v3/projects/{id}/repository/commits/{sha}/statuses.get.parameters[4].required": false,
	"paths./v3/projects/{id}/repository/commits/{sha}/statuses.get.parameters[4].type": "string",
	"paths./v3/projects/{id}/repository/commits/{sha}/statuses.get.parameters[5].description": "Show all statuses, default: false",
	"paths./v3/projects/{id}/repository/commits/{sha}/statuses.get.parameters[5].in": "query",
	"paths./v3/projects/{id}/repository/commits/{sha}/statuses.get.parameters[5].name": "all",
	"paths./v3/projects/{id}/repository/commits/{sha}/statuses.get.parameters[5].required": false,
	"paths./v3/projects/{id}/repository/commits/{sha}/statuses.get.parameters[5].type": "string",
	"paths./v3/projects/{id}/repository/commits/{sha}/statuses.get.parameters[6].description": "Current page number",
	"paths./v3/projects/{id}/repository/commits/{sha}/statuses.get.parameters[6].format": "int32",
	"paths./v3/projects/{id}/repository/commits/{sha}/statuses.get.parameters[6].in": "query",
	"paths./v3/projects/{id}/repository/commits/{sha}/statuses.get.parameters[6].name": "page",
	"paths./v3/projects/{id}/repository/commits/{sha}/statuses.get.parameters[6].required": false,
	"paths./v3/projects/{id}/repository/commits/{sha}/statuses.get.parameters[6].type": "integer",
	"paths./v3/projects/{id}/repository/commits/{sha}/statuses.get.parameters[7].description": "Number of items per page",
	"paths./v3/projects/{id}/repository/commits/{sha}/statuses.get.parameters[7].format": "int32",
	"paths./v3/projects/{id}/repository/commits/{sha}/statuses.get.parameters[7].in": "query",
	"paths./v3/projects/{id}/repository/commits/{sha}/statuses.get.parameters[7].name": "per_page",
	"paths./v3/projects/{id}/repository/commits/{sha}/statuses.get.parameters[7].required": false,
	"paths./v3/projects/{id}/repository/commits/{sha}/statuses.get.parameters[7].type": "integer",
	"paths./v3/projects/{id}/repository/commits/{sha}/statuses.get.produces.length": 1,
	"paths./v3/projects/{id}/repository/commits/{sha}/statuses.get.produces[0]": "application/json",
	"paths./v3/projects/{id}/repository/commits/{sha}/statuses.get.responses.200.description": "Get a commit's statuses",
	"paths./v3/projects/{id}/repository/commits/{sha}/statuses.get.responses.200.schema.$ref": "#/definitions/CommitStatus",
	"paths./v3/projects/{id}/repository/commits/{sha}/statuses.get.summary": "Get a commit's statuses",
	"paths./v3/projects/{id}/repository/commits/{sha}/statuses.get.tags.length": 1,
	"paths./v3/projects/{id}/repository/commits/{sha}/statuses.get.tags[0]": "projects",
	"paths./v3/projects/{id}/repository/compare.get.description": "Compare two branches, tags, or commits",
	"paths./v3/projects/{id}/repository/compare.get.operationId": "getV3ProjectsIdRepositoryCompare",
	"paths./v3/projects/{id}/repository/compare.get.parameters.length": 3,
	"paths./v3/projects/{id}/repository/compare.get.parameters[0].description": "The ID of a project",
	"paths./v3/projects/{id}/repository/compare.get.parameters[0].in": "path",
	"paths./v3/projects/{id}/repository/compare.get.parameters[0].name": "id",
	"paths./v3/projects/{id}/repository/compare.get.parameters[0].required": true,
	"paths./v3/projects/{id}/repository/compare.get.parameters[0].type": "string",
	"paths./v3/projects/{id}/repository/compare.get.parameters[1].description": "The commit, branch name, or tag name to start comparison",
	"paths./v3/projects/{id}/repository/compare.get.parameters[1].in": "query",
	"paths./v3/projects/{id}/repository/compare.get.parameters[1].name": "from",
	"paths./v3/projects/{id}/repository/compare.get.parameters[1].required": true,
	"paths./v3/projects/{id}/repository/compare.get.parameters[1].type": "string",
	"paths./v3/projects/{id}/repository/compare.get.parameters[2].description": "The commit, branch name, or tag name to stop comparison",
	"paths./v3/projects/{id}/repository/compare.get.parameters[2].in": "query",
	"paths./v3/projects/{id}/repository/compare.get.parameters[2].name": "to",
	"paths./v3/projects/{id}/repository/compare.get.parameters[2].required": true,
	"paths./v3/projects/{id}/repository/compare.get.parameters[2].type": "string",
	"paths./v3/projects/{id}/repository/compare.get.produces.length": 1,
	"paths./v3/projects/{id}/repository/compare.get.produces[0]": "application/json",
	"paths./v3/projects/{id}/repository/compare.get.responses.200.description": "Compare two branches, tags, or commits",
	"paths./v3/projects/{id}/repository/compare.get.responses.200.schema.$ref": "#/definitions/Compare",
	"paths./v3/projects/{id}/repository/compare.get.summary": "Compare two branches, tags, or commits",
	"paths./v3/projects/{id}/repository/compare.get.tags.length": 1,
	"paths./v3/projects/{id}/repository/compare.get.tags[0]": "projects",
	"paths./v3/projects/{id}/repository/contributors.get.description": "Get repository contributors",
	"paths./v3/projects/{id}/repository/contributors.get.operationId": "getV3ProjectsIdRepositoryContributors",
	"paths./v3/projects/{id}/repository/contributors.get.parameters.length": 1,
	"paths./v3/projects/{id}/repository/contributors.get.parameters[0].description": "The ID of a project",
	"paths./v3/projects/{id}/repository/contributors.get.parameters[0].in": "path",
	"paths./v3/projects/{id}/repository/contributors.get.parameters[0].name": "id",
	"paths./v3/projects/{id}/repository/contributors.get.parameters[0].required": true,
	"paths./v3/projects/{id}/repository/contributors.get.parameters[0].type": "string",
	"paths./v3/projects/{id}/repository/contributors.get.produces.length": 1,
	"paths./v3/projects/{id}/repository/contributors.get.produces[0]": "application/json",
	"paths./v3/projects/{id}/repository/contributors.get.responses.200.description": "Get repository contributors",
	"paths./v3/projects/{id}/repository/contributors.get.responses.200.schema.$ref": "#/definitions/Contributor",
	"paths./v3/projects/{id}/repository/contributors.get.summary": "Get repository contributors",
	"paths./v3/projects/{id}/repository/contributors.get.tags.length": 1,
	"paths./v3/projects/{id}/repository/contributors.get.tags[0]": "projects",
	"paths./v3/projects/{id}/repository/files.delete.description": "Delete an existing file in repository",
	"paths./v3/projects/{id}/repository/files.delete.operationId": "deleteV3ProjectsIdRepositoryFiles",
	"paths./v3/projects/{id}/repository/files.delete.parameters.length": 6,
	"paths./v3/projects/{id}/repository/files.delete.parameters[0].description": "The project ID",
	"paths./v3/projects/{id}/repository/files.delete.parameters[0].in": "path",
	"paths./v3/projects/{id}/repository/files.delete.parameters[0].name": "id",
	"paths./v3/projects/{id}/repository/files.delete.parameters[0].required": true,
	"paths./v3/projects/{id}/repository/files.delete.parameters[0].type": "string",
	"paths./v3/projects/{id}/repository/files.delete.parameters[1].description": "The path to new file. Ex. lib/class.rb",
	"paths./v3/projects/{id}/repository/files.delete.parameters[1].in": "query",
	"paths./v3/projects/{id}/repository/files.delete.parameters[1].name": "file_path",
	"paths./v3/projects/{id}/repository/files.delete.parameters[1].required": true,
	"paths./v3/projects/{id}/repository/files.delete.parameters[1].type": "string",
	"paths./v3/projects/{id}/repository/files.delete.parameters[2].description": "The name of branch",
	"paths./v3/projects/{id}/repository/files.delete.parameters[2].in": "query",
	"paths./v3/projects/{id}/repository/files.delete.parameters[2].name": "branch_name",
	"paths./v3/projects/{id}/repository/files.delete.parameters[2].required": true,
	"paths./v3/projects/{id}/repository/files.delete.parameters[2].type": "string",
	"paths./v3/projects/{id}/repository/files.delete.parameters[3].description": "Commit Message",
	"paths./v3/projects/{id}/repository/files.delete.parameters[3].in": "query",
	"paths./v3/projects/{id}/repository/files.delete.parameters[3].name": "commit_message",
	"paths./v3/projects/{id}/repository/files.delete.parameters[3].required": true,
	"paths./v3/projects/{id}/repository/files.delete.parameters[3].type": "string",
	"paths./v3/projects/{id}/repository/files.delete.parameters[4].description": "The email of the author",
	"paths./v3/projects/{id}/repository/files.delete.parameters[4].in": "query",
	"paths./v3/projects/{id}/repository/files.delete.parameters[4].name": "author_email",
	"paths./v3/projects/{id}/repository/files.delete.parameters[4].required": false,
	"paths./v3/projects/{id}/repository/files.delete.parameters[4].type": "string",
	"paths./v3/projects/{id}/repository/files.delete.parameters[5].description": "The name of the author",
	"paths./v3/projects/{id}/repository/files.delete.parameters[5].in": "query",
	"paths./v3/projects/{id}/repository/files.delete.parameters[5].name": "author_name",
	"paths./v3/projects/{id}/repository/files.delete.parameters[5].required": false,
	"paths./v3/projects/{id}/repository/files.delete.parameters[5].type": "string",
	"paths./v3/projects/{id}/repository/files.delete.produces.length": 1,
	"paths./v3/projects/{id}/repository/files.delete.produces[0]": "application/json",
	"paths./v3/projects/{id}/repository/files.delete.responses.204.description": "Delete an existing file in repository",
	"paths./v3/projects/{id}/repository/files.delete.summary": "Delete an existing file in repository",
	"paths./v3/projects/{id}/repository/files.delete.tags.length": 1,
	"paths./v3/projects/{id}/repository/files.delete.tags[0]": "projects",
	"paths./v3/projects/{id}/repository/files.get.description": "Get a file from repository",
	"paths./v3/projects/{id}/repository/files.get.operationId": "getV3ProjectsIdRepositoryFiles",
	"paths./v3/projects/{id}/repository/files.get.parameters.length": 3,
	"paths./v3/projects/{id}/repository/files.get.parameters[0].description": "The project ID",
	"paths./v3/projects/{id}/repository/files.get.parameters[0].in": "path",
	"paths./v3/projects/{id}/repository/files.get.parameters[0].name": "id",
	"paths./v3/projects/{id}/repository/files.get.parameters[0].required": true,
	"paths./v3/projects/{id}/repository/files.get.parameters[0].type": "string",
	"paths./v3/projects/{id}/repository/files.get.parameters[1].description": "The path to the file. Ex. lib/class.rb",
	"paths./v3/projects/{id}/repository/files.get.parameters[1].in": "query",
	"paths./v3/projects/{id}/repository/files.get.parameters[1].name": "file_path",
	"paths./v3/projects/{id}/repository/files.get.parameters[1].required": true,
	"paths./v3/projects/{id}/repository/files.get.parameters[1].type": "string",
	"paths./v3/projects/{id}/repository/files.get.parameters[2].description": "The name of branch, tag, or commit",
	"paths./v3/projects/{id}/repository/files.get.parameters[2].in": "query",
	"paths./v3/projects/{id}/repository/files.get.parameters[2].name": "ref",
	"paths./v3/projects/{id}/repository/files.get.parameters[2].required": true,
	"paths./v3/projects/{id}/repository/files.get.parameters[2].type": "string",
	"paths./v3/projects/{id}/repository/files.get.produces.length": 1,
	"paths./v3/projects/{id}/repository/files.get.produces[0]": "application/json",
	"paths./v3/projects/{id}/repository/files.get.responses.200.description": "Get a file from repository",
	"paths./v3/projects/{id}/repository/files.get.summary": "Get a file from repository",
	"paths./v3/projects/{id}/repository/files.get.tags.length": 1,
	"paths./v3/projects/{id}/repository/files.get.tags[0]": "projects",
	"paths./v3/projects/{id}/repository/files.post.consumes.length": 1,
	"paths./v3/projects/{id}/repository/files.post.consumes[0]": "application/json",
	"paths./v3/projects/{id}/repository/files.post.description": "Create new file in repository",
	"paths./v3/projects/{id}/repository/files.post.operationId": "postV3ProjectsIdRepositoryFiles",
	"paths./v3/projects/{id}/repository/files.post.parameters.length": 8,
	"paths./v3/projects/{id}/repository/files.post.parameters[0].description": "The project ID",
	"paths./v3/projects/{id}/repository/files.post.parameters[0].in": "path",
	"paths./v3/projects/{id}/repository/files.post.parameters[0].name": "id",
	"paths./v3/projects/{id}/repository/files.post.parameters[0].required": true,
	"paths./v3/projects/{id}/repository/files.post.parameters[0].type": "string",
	"paths./v3/projects/{id}/repository/files.post.parameters[1].description": "The path to new file. Ex. lib/class.rb",
	"paths./v3/projects/{id}/repository/files.post.parameters[1].in": "formData",
	"paths./v3/projects/{id}/repository/files.post.parameters[1].name": "file_path",
	"paths./v3/projects/{id}/repository/files.post.parameters[1].required": true,
	"paths./v3/projects/{id}/repository/files.post.parameters[1].type": "string",
	"paths./v3/projects/{id}/repository/files.post.parameters[2].description": "The name of branch",
	"paths./v3/projects/{id}/repository/files.post.parameters[2].in": "formData",
	"paths./v3/projects/{id}/repository/files.post.parameters[2].name": "branch_name",
	"paths./v3/projects/{id}/repository/files.post.parameters[2].required": true,
	"paths./v3/projects/{id}/repository/files.post.parameters[2].type": "string",
	"paths./v3/projects/{id}/repository/files.post.parameters[3].description": "Commit Message",
	"paths./v3/projects/{id}/repository/files.post.parameters[3].in": "formData",
	"paths./v3/projects/{id}/repository/files.post.parameters[3].name": "commit_message",
	"paths./v3/projects/{id}/repository/files.post.parameters[3].required": true,
	"paths./v3/projects/{id}/repository/files.post.parameters[3].type": "string",
	"paths./v3/projects/{id}/repository/files.post.parameters[4].description": "The email of the author",
	"paths./v3/projects/{id}/repository/files.post.parameters[4].in": "formData",
	"paths./v3/projects/{id}/repository/files.post.parameters[4].name": "author_email",
	"paths./v3/projects/{id}/repository/files.post.parameters[4].required": false,
	"paths./v3/projects/{id}/repository/files.post.parameters[4].type": "string",
	"paths./v3/projects/{id}/repository/files.post.parameters[5].description": "The name of the author",
	"paths./v3/projects/{id}/repository/files.post.parameters[5].in": "formData",
	"paths./v3/projects/{id}/repository/files.post.parameters[5].name": "author_name",
	"paths./v3/projects/{id}/repository/files.post.parameters[5].required": false,
	"paths./v3/projects/{id}/repository/files.post.parameters[5].type": "string",
	"paths./v3/projects/{id}/repository/files.post.parameters[6].description": "File content",
	"paths./v3/projects/{id}/repository/files.post.parameters[6].in": "formData",
	"paths./v3/projects/{id}/repository/files.post.parameters[6].name": "content",
	"paths./v3/projects/{id}/repository/files.post.parameters[6].required": true,
	"paths./v3/projects/{id}/repository/files.post.parameters[6].type": "string",
	"paths./v3/projects/{id}/repository/files.post.parameters[7].description": "File encoding",
	"paths./v3/projects/{id}/repository/files.post.parameters[7].enum.length": 1,
	"paths./v3/projects/{id}/repository/files.post.parameters[7].enum[0]": "base64",
	"paths./v3/projects/{id}/repository/files.post.parameters[7].in": "formData",
	"paths./v3/projects/{id}/repository/files.post.parameters[7].name": "encoding",
	"paths./v3/projects/{id}/repository/files.post.parameters[7].required": false,
	"paths./v3/projects/{id}/repository/files.post.parameters[7].type": "string",
	"paths./v3/projects/{id}/repository/files.post.produces.length": 1,
	"paths./v3/projects/{id}/repository/files.post.produces[0]": "application/json",
	"paths./v3/projects/{id}/repository/files.post.responses.201.description": "Create new file in repository",
	"paths./v3/projects/{id}/repository/files.post.summary": "Create new file in repository",
	"paths./v3/projects/{id}/repository/files.post.tags.length": 1,
	"paths./v3/projects/{id}/repository/files.post.tags[0]": "projects",
	"paths./v3/projects/{id}/repository/files.put.consumes.length": 1,
	"paths./v3/projects/{id}/repository/files.put.consumes[0]": "application/json",
	"paths./v3/projects/{id}/repository/files.put.description": "Update existing file in repository",
	"paths./v3/projects/{id}/repository/files.put.operationId": "putV3ProjectsIdRepositoryFiles",
	"paths./v3/projects/{id}/repository/files.put.parameters.length": 8,
	"paths./v3/projects/{id}/repository/files.put.parameters[0].description": "The project ID",
	"paths./v3/projects/{id}/repository/files.put.parameters[0].in": "path",
	"paths./v3/projects/{id}/repository/files.put.parameters[0].name": "id",
	"paths./v3/projects/{id}/repository/files.put.parameters[0].required": true,
	"paths./v3/projects/{id}/repository/files.put.parameters[0].type": "string",
	"paths./v3/projects/{id}/repository/files.put.parameters[1].description": "The path to new file. Ex. lib/class.rb",
	"paths./v3/projects/{id}/repository/files.put.parameters[1].in": "formData",
	"paths./v3/projects/{id}/repository/files.put.parameters[1].name": "file_path",
	"paths./v3/projects/{id}/repository/files.put.parameters[1].required": true,
	"paths./v3/projects/{id}/repository/files.put.parameters[1].type": "string",
	"paths./v3/projects/{id}/repository/files.put.parameters[2].description": "The name of branch",
	"paths./v3/projects/{id}/repository/files.put.parameters[2].in": "formData",
	"paths./v3/projects/{id}/repository/files.put.parameters[2].name": "branch_name",
	"paths./v3/projects/{id}/repository/files.put.parameters[2].required": true,
	"paths./v3/projects/{id}/repository/files.put.parameters[2].type": "string",
	"paths./v3/projects/{id}/repository/files.put.parameters[3].description": "Commit Message",
	"paths./v3/projects/{id}/repository/files.put.parameters[3].in": "formData",
	"paths./v3/projects/{id}/repository/files.put.parameters[3].name": "commit_message",
	"paths./v3/projects/{id}/repository/files.put.parameters[3].required": true,
	"paths./v3/projects/{id}/repository/files.put.parameters[3].type": "string",
	"paths./v3/projects/{id}/repository/files.put.parameters[4].description": "The email of the author",
	"paths./v3/projects/{id}/repository/files.put.parameters[4].in": "formData",
	"paths./v3/projects/{id}/repository/files.put.parameters[4].name": "author_email",
	"paths./v3/projects/{id}/repository/files.put.parameters[4].required": false,
	"paths./v3/projects/{id}/repository/files.put.parameters[4].type": "string",
	"paths./v3/projects/{id}/repository/files.put.parameters[5].description": "The name of the author",
	"paths./v3/projects/{id}/repository/files.put.parameters[5].in": "formData",
	"paths./v3/projects/{id}/repository/files.put.parameters[5].name": "author_name",
	"paths./v3/projects/{id}/repository/files.put.parameters[5].required": false,
	"paths./v3/projects/{id}/repository/files.put.parameters[5].type": "string",
	"paths./v3/projects/{id}/repository/files.put.parameters[6].description": "File content",
	"paths./v3/projects/{id}/repository/files.put.parameters[6].in": "formData",
	"paths./v3/projects/{id}/repository/files.put.parameters[6].name": "content",
	"paths./v3/projects/{id}/repository/files.put.parameters[6].required": true,
	"paths./v3/projects/{id}/repository/files.put.parameters[6].type": "string",
	"paths./v3/projects/{id}/repository/files.put.parameters[7].description": "File encoding",
	"paths./v3/projects/{id}/repository/files.put.parameters[7].enum.length": 1,
	"paths./v3/projects/{id}/repository/files.put.parameters[7].enum[0]": "base64",
	"paths./v3/projects/{id}/repository/files.put.parameters[7].in": "formData",
	"paths./v3/projects/{id}/repository/files.put.parameters[7].name": "encoding",
	"paths./v3/projects/{id}/repository/files.put.parameters[7].required": false,
	"paths./v3/projects/{id}/repository/files.put.parameters[7].type": "string",
	"paths./v3/projects/{id}/repository/files.put.produces.length": 1,
	"paths./v3/projects/{id}/repository/files.put.produces[0]": "application/json",
	"paths./v3/projects/{id}/repository/files.put.responses.200.description": "Update existing file in repository",
	"paths./v3/projects/{id}/repository/files.put.summary": "Update existing file in repository",
	"paths./v3/projects/{id}/repository/files.put.tags.length": 1,
	"paths./v3/projects/{id}/repository/files.put.tags[0]": "projects",
	"paths./v3/projects/{id}/repository/merged_branches.delete.operationId": "deleteV3ProjectsIdRepositoryMergedBranches",
	"paths./v3/projects/{id}/repository/merged_branches.delete.parameters.length": 1,
	"paths./v3/projects/{id}/repository/merged_branches.delete.parameters[0].description": "The ID of a project",
	"paths./v3/projects/{id}/repository/merged_branches.delete.parameters[0].in": "path",
	"paths./v3/projects/{id}/repository/merged_branches.delete.parameters[0].name": "id",
	"paths./v3/projects/{id}/repository/merged_branches.delete.parameters[0].required": true,
	"paths./v3/projects/{id}/repository/merged_branches.delete.parameters[0].type": "string",
	"paths./v3/projects/{id}/repository/merged_branches.delete.produces.length": 1,
	"paths./v3/projects/{id}/repository/merged_branches.delete.produces[0]": "application/json",
	"paths./v3/projects/{id}/repository/merged_branches.delete.responses.204.description": "deleted MergedBranch",
	"paths./v3/projects/{id}/repository/merged_branches.delete.tags.length": 1,
	"paths./v3/projects/{id}/repository/merged_branches.delete.tags[0]": "projects",
	"paths./v3/projects/{id}/repository/raw_blobs/{sha}.get.description": "Get a raw blob contents by blob sha",
	"paths./v3/projects/{id}/repository/raw_blobs/{sha}.get.operationId": "getV3ProjectsIdRepositoryRawBlobsSha",
	"paths./v3/projects/{id}/repository/raw_blobs/{sha}.get.parameters.length": 2,
	"paths./v3/projects/{id}/repository/raw_blobs/{sha}.get.parameters[0].description": "The ID of a project",
	"paths./v3/projects/{id}/repository/raw_blobs/{sha}.get.parameters[0].in": "path",
	"paths./v3/projects/{id}/repository/raw_blobs/{sha}.get.parameters[0].name": "id",
	"paths./v3/projects/{id}/repository/raw_blobs/{sha}.get.parameters[0].required": true,
	"paths./v3/projects/{id}/repository/raw_blobs/{sha}.get.parameters[0].type": "string",
	"paths./v3/projects/{id}/repository/raw_blobs/{sha}.get.parameters[1].description": "The commit, branch name, or tag name",
	"paths./v3/projects/{id}/repository/raw_blobs/{sha}.get.parameters[1].in": "path",
	"paths./v3/projects/{id}/repository/raw_blobs/{sha}.get.parameters[1].name": "sha",
	"paths./v3/projects/{id}/repository/raw_blobs/{sha}.get.parameters[1].required": true,
	"paths./v3/projects/{id}/repository/raw_blobs/{sha}.get.parameters[1].type": "string",
	"paths./v3/projects/{id}/repository/raw_blobs/{sha}.get.produces.length": 1,
	"paths./v3/projects/{id}/repository/raw_blobs/{sha}.get.produces[0]": "application/json",
	"paths./v3/projects/{id}/repository/raw_blobs/{sha}.get.responses.200.description": "Get a raw blob contents by blob sha",
	"paths./v3/projects/{id}/repository/raw_blobs/{sha}.get.summary": "Get a raw blob contents by blob sha",
	"paths./v3/projects/{id}/repository/raw_blobs/{sha}.get.tags.length": 1,
	"paths./v3/projects/{id}/repository/raw_blobs/{sha}.get.tags[0]": "projects",
	"paths./v3/projects/{id}/repository/tags.get.description": "Get a project repository tags",
	"paths./v3/projects/{id}/repository/tags.get.operationId": "getV3ProjectsIdRepositoryTags",
	"paths./v3/projects/{id}/repository/tags.get.parameters.length": 1,
	"paths./v3/projects/{id}/repository/tags.get.parameters[0].description": "The ID of a project",
	"paths./v3/projects/{id}/repository/tags.get.parameters[0].in": "path",
	"paths./v3/projects/{id}/repository/tags.get.parameters[0].name": "id",
	"paths./v3/projects/{id}/repository/tags.get.parameters[0].required": true,
	"paths./v3/projects/{id}/repository/tags.get.parameters[0].type": "string",
	"paths./v3/projects/{id}/repository/tags.get.produces.length": 1,
	"paths./v3/projects/{id}/repository/tags.get.produces[0]": "application/json",
	"paths./v3/projects/{id}/repository/tags.get.responses.200.description": "Get a project repository tags",
	"paths./v3/projects/{id}/repository/tags.get.responses.200.schema.$ref": "#/definitions/RepoTag",
	"paths./v3/projects/{id}/repository/tags.get.summary": "Get a project repository tags",
	"paths./v3/projects/{id}/repository/tags.get.tags.length": 1,
	"paths./v3/projects/{id}/repository/tags.get.tags[0]": "projects",
	"paths./v3/projects/{id}/repository/tags.post.consumes.length": 1,
	"paths./v3/projects/{id}/repository/tags.post.consumes[0]": "application/json",
	"paths./v3/projects/{id}/repository/tags.post.description": "Create a new repository tag",
	"paths./v3/projects/{id}/repository/tags.post.operationId": "postV3ProjectsIdRepositoryTags",
	"paths./v3/projects/{id}/repository/tags.post.parameters.length": 5,
	"paths./v3/projects/{id}/repository/tags.post.parameters[0].description": "The ID of a project",
	"paths./v3/projects/{id}/repository/tags.post.parameters[0].in": "path",
	"paths./v3/projects/{id}/repository/tags.post.parameters[0].name": "id",
	"paths./v3/projects/{id}/repository/tags.post.parameters[0].required": true,
	"paths./v3/projects/{id}/repository/tags.post.parameters[0].type": "string",
	"paths./v3/projects/{id}/repository/tags.post.parameters[1].description": "The name of the tag",
	"paths./v3/projects/{id}/repository/tags.post.parameters[1].in": "formData",
	"paths./v3/projects/{id}/repository/tags.post.parameters[1].name": "tag_name",
	"paths./v3/projects/{id}/repository/tags.post.parameters[1].required": true,
	"paths./v3/projects/{id}/repository/tags.post.parameters[1].type": "string",
	"paths./v3/projects/{id}/repository/tags.post.parameters[2].description": "The commit sha or branch name",
	"paths./v3/projects/{id}/repository/tags.post.parameters[2].in": "formData",
	"paths./v3/projects/{id}/repository/tags.post.parameters[2].name": "ref",
	"paths./v3/projects/{id}/repository/tags.post.parameters[2].required": true,
	"paths./v3/projects/{id}/repository/tags.post.parameters[2].type": "string",
	"paths./v3/projects/{id}/repository/tags.post.parameters[3].description": "Specifying a message creates an annotated tag",
	"paths./v3/projects/{id}/repository/tags.post.parameters[3].in": "formData",
	"paths./v3/projects/{id}/repository/tags.post.parameters[3].name": "message",
	"paths./v3/projects/{id}/repository/tags.post.parameters[3].required": false,
	"paths./v3/projects/{id}/repository/tags.post.parameters[3].type": "string",
	"paths./v3/projects/{id}/repository/tags.post.parameters[4].description": "Specifying release notes stored in the GitLab database",
	"paths./v3/projects/{id}/repository/tags.post.parameters[4].in": "formData",
	"paths./v3/projects/{id}/repository/tags.post.parameters[4].name": "release_description",
	"paths./v3/projects/{id}/repository/tags.post.parameters[4].required": false,
	"paths./v3/projects/{id}/repository/tags.post.parameters[4].type": "string",
	"paths./v3/projects/{id}/repository/tags.post.produces.length": 1,
	"paths./v3/projects/{id}/repository/tags.post.produces[0]": "application/json",
	"paths./v3/projects/{id}/repository/tags.post.responses.201.description": "Create a new repository tag",
	"paths./v3/projects/{id}/repository/tags.post.responses.201.schema.$ref": "#/definitions/RepoTag",
	"paths./v3/projects/{id}/repository/tags.post.summary": "Create a new repository tag",
	"paths./v3/projects/{id}/repository/tags.post.tags.length": 1,
	"paths./v3/projects/{id}/repository/tags.post.tags[0]": "projects",
	"paths./v3/projects/{id}/repository/tags/{tag_name}.delete.description": "Delete a repository tag",
	"paths./v3/projects/{id}/repository/tags/{tag_name}.delete.operationId": "deleteV3ProjectsIdRepositoryTagsTagName",
	"paths./v3/projects/{id}/repository/tags/{tag_name}.delete.parameters.length": 2,
	"paths./v3/projects/{id}/repository/tags/{tag_name}.delete.parameters[0].description": "The ID of a project",
	"paths./v3/projects/{id}/repository/tags/{tag_name}.delete.parameters[0].in": "path",
	"paths./v3/projects/{id}/repository/tags/{tag_name}.delete.parameters[0].name": "id",
	"paths./v3/projects/{id}/repository/tags/{tag_name}.delete.parameters[0].required": true,
	"paths./v3/projects/{id}/repository/tags/{tag_name}.delete.parameters[0].type": "string",
	"paths./v3/projects/{id}/repository/tags/{tag_name}.delete.parameters[1].description": "The name of the tag",
	"paths./v3/projects/{id}/repository/tags/{tag_name}.delete.parameters[1].in": "path",
	"paths./v3/projects/{id}/repository/tags/{tag_name}.delete.parameters[1].name": "tag_name",
	"paths./v3/projects/{id}/repository/tags/{tag_name}.delete.parameters[1].required": true,
	"paths./v3/projects/{id}/repository/tags/{tag_name}.delete.parameters[1].type": "string",
	"paths./v3/projects/{id}/repository/tags/{tag_name}.delete.produces.length": 1,
	"paths./v3/projects/{id}/repository/tags/{tag_name}.delete.produces[0]": "application/json",
	"paths./v3/projects/{id}/repository/tags/{tag_name}.delete.responses.204.description": "Delete a repository tag",
	"paths./v3/projects/{id}/repository/tags/{tag_name}.delete.summary": "Delete a repository tag",
	"paths./v3/projects/{id}/repository/tags/{tag_name}.delete.tags.length": 1,
	"paths./v3/projects/{id}/repository/tags/{tag_name}.delete.tags[0]": "projects",
	"paths./v3/projects/{id}/repository/tags/{tag_name}.get.description": "Get a single repository tag",
	"paths./v3/projects/{id}/repository/tags/{tag_name}.get.operationId": "getV3ProjectsIdRepositoryTagsTagName",
	"paths./v3/projects/{id}/repository/tags/{tag_name}.get.parameters.length": 2,
	"paths./v3/projects/{id}/repository/tags/{tag_name}.get.parameters[0].description": "The ID of a project",
	"paths./v3/projects/{id}/repository/tags/{tag_name}.get.parameters[0].in": "path",
	"paths./v3/projects/{id}/repository/tags/{tag_name}.get.parameters[0].name": "id",
	"paths./v3/projects/{id}/repository/tags/{tag_name}.get.parameters[0].required": true,
	"paths./v3/projects/{id}/repository/tags/{tag_name}.get.parameters[0].type": "string",
	"paths./v3/projects/{id}/repository/tags/{tag_name}.get.parameters[1].description": "The name of the tag",
	"paths./v3/projects/{id}/repository/tags/{tag_name}.get.parameters[1].in": "path",
	"paths./v3/projects/{id}/repository/tags/{tag_name}.get.parameters[1].name": "tag_name",
	"paths./v3/projects/{id}/repository/tags/{tag_name}.get.parameters[1].required": true,
	"paths./v3/projects/{id}/repository/tags/{tag_name}.get.parameters[1].type": "string",
	"paths./v3/projects/{id}/repository/tags/{tag_name}.get.produces.length": 1,
	"paths./v3/projects/{id}/repository/tags/{tag_name}.get.produces[0]": "application/json",
	"paths./v3/projects/{id}/repository/tags/{tag_name}.get.responses.200.description": "Get a single repository tag",
	"paths./v3/projects/{id}/repository/tags/{tag_name}.get.responses.200.schema.$ref": "#/definitions/RepoTag",
	"paths./v3/projects/{id}/repository/tags/{tag_name}.get.summary": "Get a single repository tag",
	"paths./v3/projects/{id}/repository/tags/{tag_name}.get.tags.length": 1,
	"paths./v3/projects/{id}/repository/tags/{tag_name}.get.tags[0]": "projects",
	"paths./v3/projects/{id}/repository/tags/{tag_name}/release.post.consumes.length": 1,
	"paths./v3/projects/{id}/repository/tags/{tag_name}/release.post.consumes[0]": "application/json",
	"paths./v3/projects/{id}/repository/tags/{tag_name}/release.post.description": "Add a release note to a tag",
	"paths./v3/projects/{id}/repository/tags/{tag_name}/release.post.operationId": "postV3ProjectsIdRepositoryTagsTagNameRelease",
	"paths./v3/projects/{id}/repository/tags/{tag_name}/release.post.parameters.length": 3,
	"paths./v3/projects/{id}/repository/tags/{tag_name}/release.post.parameters[0].description": "The ID of a project",
	"paths./v3/projects/{id}/repository/tags/{tag_name}/release.post.parameters[0].in": "path",
	"paths./v3/projects/{id}/repository/tags/{tag_name}/release.post.parameters[0].name": "id",
	"paths./v3/projects/{id}/repository/tags/{tag_name}/release.post.parameters[0].required": true,
	"paths./v3/projects/{id}/repository/tags/{tag_name}/release.post.parameters[0].type": "string",
	"paths./v3/projects/{id}/repository/tags/{tag_name}/release.post.parameters[1].description": "The name of the tag",
	"paths./v3/projects/{id}/repository/tags/{tag_name}/release.post.parameters[1].in": "path",
	"paths./v3/projects/{id}/repository/tags/{tag_name}/release.post.parameters[1].name": "tag_name",
	"paths./v3/projects/{id}/repository/tags/{tag_name}/release.post.parameters[1].required": true,
	"paths./v3/projects/{id}/repository/tags/{tag_name}/release.post.parameters[1].type": "string",
	"paths./v3/projects/{id}/repository/tags/{tag_name}/release.post.parameters[2].description": "Release notes with markdown support",
	"paths./v3/projects/{id}/repository/tags/{tag_name}/release.post.parameters[2].in": "formData",
	"paths./v3/projects/{id}/repository/tags/{tag_name}/release.post.parameters[2].name": "description",
	"paths./v3/projects/{id}/repository/tags/{tag_name}/release.post.parameters[2].required": true,
	"paths./v3/projects/{id}/repository/tags/{tag_name}/release.post.parameters[2].type": "string",
	"paths./v3/projects/{id}/repository/tags/{tag_name}/release.post.produces.length": 1,
	"paths./v3/projects/{id}/repository/tags/{tag_name}/release.post.produces[0]": "application/json",
	"paths./v3/projects/{id}/repository/tags/{tag_name}/release.post.responses.201.description": "Add a release note to a tag",
	"paths./v3/projects/{id}/repository/tags/{tag_name}/release.post.responses.201.schema.$ref": "#/definitions/Release",
	"paths./v3/projects/{id}/repository/tags/{tag_name}/release.post.summary": "Add a release note to a tag",
	"paths./v3/projects/{id}/repository/tags/{tag_name}/release.post.tags.length": 1,
	"paths./v3/projects/{id}/repository/tags/{tag_name}/release.post.tags[0]": "projects",
	"paths./v3/projects/{id}/repository/tags/{tag_name}/release.put.consumes.length": 1,
	"paths./v3/projects/{id}/repository/tags/{tag_name}/release.put.consumes[0]": "application/json",
	"paths./v3/projects/{id}/repository/tags/{tag_name}/release.put.description": "Update a tag's release note",
	"paths./v3/projects/{id}/repository/tags/{tag_name}/release.put.operationId": "putV3ProjectsIdRepositoryTagsTagNameRelease",
	"paths./v3/projects/{id}/repository/tags/{tag_name}/release.put.parameters.length": 3,
	"paths./v3/projects/{id}/repository/tags/{tag_name}/release.put.parameters[0].description": "The ID of a project",
	"paths./v3/projects/{id}/repository/tags/{tag_name}/release.put.parameters[0].in": "path",
	"paths./v3/projects/{id}/repository/tags/{tag_name}/release.put.parameters[0].name": "id",
	"paths./v3/projects/{id}/repository/tags/{tag_name}/release.put.parameters[0].required": true,
	"paths./v3/projects/{id}/repository/tags/{tag_name}/release.put.parameters[0].type": "string",
	"paths./v3/projects/{id}/repository/tags/{tag_name}/release.put.parameters[1].description": "The name of the tag",
	"paths./v3/projects/{id}/repository/tags/{tag_name}/release.put.parameters[1].in": "path",
	"paths./v3/projects/{id}/repository/tags/{tag_name}/release.put.parameters[1].name": "tag_name",
	"paths./v3/projects/{id}/repository/tags/{tag_name}/release.put.parameters[1].required": true,
	"paths./v3/projects/{id}/repository/tags/{tag_name}/release.put.parameters[1].type": "string",
	"paths./v3/projects/{id}/repository/tags/{tag_name}/release.put.parameters[2].description": "Release notes with markdown support",
	"paths./v3/projects/{id}/repository/tags/{tag_name}/release.put.parameters[2].in": "formData",
	"paths./v3/projects/{id}/repository/tags/{tag_name}/release.put.parameters[2].name": "description",
	"paths./v3/projects/{id}/repository/tags/{tag_name}/release.put.parameters[2].required": true,
	"paths./v3/projects/{id}/repository/tags/{tag_name}/release.put.parameters[2].type": "string",
	"paths./v3/projects/{id}/repository/tags/{tag_name}/release.put.produces.length": 1,
	"paths./v3/projects/{id}/repository/tags/{tag_name}/release.put.produces[0]": "application/json",
	"paths./v3/projects/{id}/repository/tags/{tag_name}/release.put.responses.200.description": "Update a tag's release note",
	"paths./v3/projects/{id}/repository/tags/{tag_name}/release.put.responses.200.schema.$ref": "#/definitions/Release",
	"paths./v3/projects/{id}/repository/tags/{tag_name}/release.put.summary": "Update a tag's release note",
	"paths./v3/projects/{id}/repository/tags/{tag_name}/release.put.tags.length": 1,
	"paths./v3/projects/{id}/repository/tags/{tag_name}/release.put.tags[0]": "projects",
	"paths./v3/projects/{id}/repository/tree.get.description": "Get a project repository tree",
	"paths./v3/projects/{id}/repository/tree.get.operationId": "getV3ProjectsIdRepositoryTree",
	"paths./v3/projects/{id}/repository/tree.get.parameters.length": 4,
	"paths./v3/projects/{id}/repository/tree.get.parameters[0].description": "The ID of a project",
	"paths./v3/projects/{id}/repository/tree.get.parameters[0].in": "path",
	"paths./v3/projects/{id}/repository/tree.get.parameters[0].name": "id",
	"paths./v3/projects/{id}/repository/tree.get.parameters[0].required": true,
	"paths./v3/projects/{id}/repository/tree.get.parameters[0].type": "string",
	"paths./v3/projects/{id}/repository/tree.get.parameters[1].description": "The name of a repository branch or tag, if not given the default branch is used",
	"paths./v3/projects/{id}/repository/tree.get.parameters[1].in": "query",
	"paths./v3/projects/{id}/repository/tree.get.parameters[1].name": "ref_name",
	"paths./v3/projects/{id}/repository/tree.get.parameters[1].required": false,
	"paths./v3/projects/{id}/repository/tree.get.parameters[1].type": "string",
	"paths./v3/projects/{id}/repository/tree.get.parameters[2].description": "The path of the tree",
	"paths./v3/projects/{id}/repository/tree.get.parameters[2].in": "query",
	"paths./v3/projects/{id}/repository/tree.get.parameters[2].name": "path",
	"paths./v3/projects/{id}/repository/tree.get.parameters[2].required": false,
	"paths./v3/projects/{id}/repository/tree.get.parameters[2].type": "string",
	"paths./v3/projects/{id}/repository/tree.get.parameters[3].description": "Used to get a recursive tree",
	"paths./v3/projects/{id}/repository/tree.get.parameters[3].in": "query",
	"paths./v3/projects/{id}/repository/tree.get.parameters[3].name": "recursive",
	"paths./v3/projects/{id}/repository/tree.get.parameters[3].required": false,
	"paths./v3/projects/{id}/repository/tree.get.parameters[3].type": "boolean",
	"paths./v3/projects/{id}/repository/tree.get.produces.length": 1,
	"paths./v3/projects/{id}/repository/tree.get.produces[0]": "application/json",
	"paths./v3/projects/{id}/repository/tree.get.responses.200.description": "Get a project repository tree",
	"paths./v3/projects/{id}/repository/tree.get.responses.200.schema.$ref": "#/definitions/RepoTreeObject",
	"paths./v3/projects/{id}/repository/tree.get.summary": "Get a project repository tree",
	"paths./v3/projects/{id}/repository/tree.get.tags.length": 1,
	"paths./v3/projects/{id}/repository/tree.get.tags[0]": "projects",
	"paths./v3/projects/{id}/runners.get.description": "Get runners available for project",
	"paths./v3/projects/{id}/runners.get.operationId": "getV3ProjectsIdRunners",
	"paths./v3/projects/{id}/runners.get.parameters.length": 4,
	"paths./v3/projects/{id}/runners.get.parameters[0].description": "The ID of a project",
	"paths./v3/projects/{id}/runners.get.parameters[0].in": "path",
	"paths./v3/projects/{id}/runners.get.parameters[0].name": "id",
	"paths./v3/projects/{id}/runners.get.parameters[0].required": true,
	"paths./v3/projects/{id}/runners.get.parameters[0].type": "string",
	"paths./v3/projects/{id}/runners.get.parameters[1].description": "The scope of specific runners to show",
	"paths./v3/projects/{id}/runners.get.parameters[1].enum.length": 5,
	"paths./v3/projects/{id}/runners.get.parameters[1].enum[0]": "active",
	"paths./v3/projects/{id}/runners.get.parameters[1].enum[1]": "paused",
	"paths./v3/projects/{id}/runners.get.parameters[1].enum[2]": "online",
	"paths./v3/projects/{id}/runners.get.parameters[1].enum[3]": "specific",
	"paths./v3/projects/{id}/runners.get.parameters[1].enum[4]": "shared",
	"paths./v3/projects/{id}/runners.get.parameters[1].in": "query",
	"paths./v3/projects/{id}/runners.get.parameters[1].name": "scope",
	"paths./v3/projects/{id}/runners.get.parameters[1].required": false,
	"paths./v3/projects/{id}/runners.get.parameters[1].type": "string",
	"paths./v3/projects/{id}/runners.get.parameters[2].description": "Current page number",
	"paths./v3/projects/{id}/runners.get.parameters[2].format": "int32",
	"paths./v3/projects/{id}/runners.get.parameters[2].in": "query",
	"paths./v3/projects/{id}/runners.get.parameters[2].name": "page",
	"paths./v3/projects/{id}/runners.get.parameters[2].required": false,
	"paths./v3/projects/{id}/runners.get.parameters[2].type": "integer",
	"paths./v3/projects/{id}/runners.get.parameters[3].description": "Number of items per page",
	"paths./v3/projects/{id}/runners.get.parameters[3].format": "int32",
	"paths./v3/projects/{id}/runners.get.parameters[3].in": "query",
	"paths./v3/projects/{id}/runners.get.parameters[3].name": "per_page",
	"paths./v3/projects/{id}/runners.get.parameters[3].required": false,
	"paths./v3/projects/{id}/runners.get.parameters[3].type": "integer",
	"paths./v3/projects/{id}/runners.get.produces.length": 1,
	"paths./v3/projects/{id}/runners.get.produces[0]": "application/json",
	"paths./v3/projects/{id}/runners.get.responses.200.description": "Get runners available for project",
	"paths./v3/projects/{id}/runners.get.responses.200.schema.$ref": "#/definitions/Runner",
	"paths./v3/projects/{id}/runners.get.summary": "Get runners available for project",
	"paths./v3/projects/{id}/runners.get.tags.length": 1,
	"paths./v3/projects/{id}/runners.get.tags[0]": "projects",
	"paths./v3/projects/{id}/runners.post.consumes.length": 1,
	"paths./v3/projects/{id}/runners.post.consumes[0]": "application/json",
	"paths./v3/projects/{id}/runners.post.description": "Enable a runner for a project",
	"paths./v3/projects/{id}/runners.post.operationId": "postV3ProjectsIdRunners",
	"paths./v3/projects/{id}/runners.post.parameters.length": 2,
	"paths./v3/projects/{id}/runners.post.parameters[0].description": "The ID of a project",
	"paths./v3/projects/{id}/runners.post.parameters[0].in": "path",
	"paths./v3/projects/{id}/runners.post.parameters[0].name": "id",
	"paths./v3/projects/{id}/runners.post.parameters[0].required": true,
	"paths./v3/projects/{id}/runners.post.parameters[0].type": "string",
	"paths./v3/projects/{id}/runners.post.parameters[1].description": "The ID of the runner",
	"paths./v3/projects/{id}/runners.post.parameters[1].format": "int32",
	"paths./v3/projects/{id}/runners.post.parameters[1].in": "formData",
	"paths./v3/projects/{id}/runners.post.parameters[1].name": "runner_id",
	"paths./v3/projects/{id}/runners.post.parameters[1].required": true,
	"paths./v3/projects/{id}/runners.post.parameters[1].type": "integer",
	"paths./v3/projects/{id}/runners.post.produces.length": 1,
	"paths./v3/projects/{id}/runners.post.produces[0]": "application/json",
	"paths./v3/projects/{id}/runners.post.responses.201.description": "Enable a runner for a project",
	"paths./v3/projects/{id}/runners.post.responses.201.schema.$ref": "#/definitions/Runner",
	"paths./v3/projects/{id}/runners.post.summary": "Enable a runner for a project",
	"paths./v3/projects/{id}/runners.post.tags.length": 1,
	"paths./v3/projects/{id}/runners.post.tags[0]": "projects",
	"paths./v3/projects/{id}/runners/{runner_id}.delete.description": "Disable project's runner",
	"paths./v3/projects/{id}/runners/{runner_id}.delete.operationId": "deleteV3ProjectsIdRunnersRunnerId",
	"paths./v3/projects/{id}/runners/{runner_id}.delete.parameters.length": 2,
	"paths./v3/projects/{id}/runners/{runner_id}.delete.parameters[0].description": "The ID of a project",
	"paths./v3/projects/{id}/runners/{runner_id}.delete.parameters[0].in": "path",
	"paths./v3/projects/{id}/runners/{runner_id}.delete.parameters[0].name": "id",
	"paths./v3/projects/{id}/runners/{runner_id}.delete.parameters[0].required": true,
	"paths./v3/projects/{id}/runners/{runner_id}.delete.parameters[0].type": "string",
	"paths./v3/projects/{id}/runners/{runner_id}.delete.parameters[1].description": "The ID of the runner",
	"paths./v3/projects/{id}/runners/{runner_id}.delete.parameters[1].format": "int32",
	"paths./v3/projects/{id}/runners/{runner_id}.delete.parameters[1].in": "path",
	"paths./v3/projects/{id}/runners/{runner_id}.delete.parameters[1].name": "runner_id",
	"paths./v3/projects/{id}/runners/{runner_id}.delete.parameters[1].required": true,
	"paths./v3/projects/{id}/runners/{runner_id}.delete.parameters[1].type": "integer",
	"paths./v3/projects/{id}/runners/{runner_id}.delete.produces.length": 1,
	"paths./v3/projects/{id}/runners/{runner_id}.delete.produces[0]": "application/json",
	"paths./v3/projects/{id}/runners/{runner_id}.delete.responses.200.description": "Disable project's runner",
	"paths./v3/projects/{id}/runners/{runner_id}.delete.responses.200.schema.$ref": "#/definitions/Runner",
	"paths./v3/projects/{id}/runners/{runner_id}.delete.summary": "Disable project's runner",
	"paths./v3/projects/{id}/runners/{runner_id}.delete.tags.length": 1,
	"paths./v3/projects/{id}/runners/{runner_id}.delete.tags[0]": "projects",
	"paths./v3/projects/{id}/services/asana.put.consumes.length": 1,
	"paths./v3/projects/{id}/services/asana.put.consumes[0]": "application/json",
	"paths./v3/projects/{id}/services/asana.put.description": "Set asana service for project",
	"paths./v3/projects/{id}/services/asana.put.operationId": "putV3ProjectsIdServicesAsana",
	"paths./v3/projects/{id}/services/asana.put.parameters.length": 4,
	"paths./v3/projects/{id}/services/asana.put.parameters[0].description": "User API token",
	"paths./v3/projects/{id}/services/asana.put.parameters[0].in": "formData",
	"paths./v3/projects/{id}/services/asana.put.parameters[0].name": "api_key",
	"paths./v3/projects/{id}/services/asana.put.parameters[0].required": true,
	"paths./v3/projects/{id}/services/asana.put.parameters[0].type": "string",
	"paths./v3/projects/{id}/services/asana.put.parameters[1].description": "Comma-separated list of branches which will be automatically inspected. Leave blank to include all branches",
	"paths./v3/projects/{id}/services/asana.put.parameters[1].in": "formData",
	"paths./v3/projects/{id}/services/asana.put.parameters[1].name": "restrict_to_branch",
	"paths./v3/projects/{id}/services/asana.put.parameters[1].required": false,
	"paths./v3/projects/{id}/services/asana.put.parameters[1].type": "string",
	"paths./v3/projects/{id}/services/asana.put.parameters[2].description": "Event will be triggered by a push to the repository",
	"paths./v3/projects/{id}/services/asana.put.parameters[2].in": "formData",
	"paths./v3/projects/{id}/services/asana.put.parameters[2].name": "push_events",
	"paths./v3/projects/{id}/services/asana.put.parameters[2].required": false,
	"paths./v3/projects/{id}/services/asana.put.parameters[2].type": "string",
	"paths./v3/projects/{id}/services/asana.put.parameters[3].format": "int32",
	"paths./v3/projects/{id}/services/asana.put.parameters[3].in": "path",
	"paths./v3/projects/{id}/services/asana.put.parameters[3].name": "id",
	"paths./v3/projects/{id}/services/asana.put.parameters[3].required": true,
	"paths./v3/projects/{id}/services/asana.put.parameters[3].type": "integer",
	"paths./v3/projects/{id}/services/asana.put.produces.length": 1,
	"paths./v3/projects/{id}/services/asana.put.produces[0]": "application/json",
	"paths./v3/projects/{id}/services/asana.put.responses.200.description": "Set asana service for project",
	"paths./v3/projects/{id}/services/asana.put.summary": "Set asana service for project",
	"paths./v3/projects/{id}/services/asana.put.tags.length": 1,
	"paths./v3/projects/{id}/services/asana.put.tags[0]": "projects",
	"paths./v3/projects/{id}/services/assembla.put.consumes.length": 1,
	"paths./v3/projects/{id}/services/assembla.put.consumes[0]": "application/json",
	"paths./v3/projects/{id}/services/assembla.put.description": "Set assembla service for project",
	"paths./v3/projects/{id}/services/assembla.put.operationId": "putV3ProjectsIdServicesAssembla",
	"paths./v3/projects/{id}/services/assembla.put.parameters.length": 4,
	"paths./v3/projects/{id}/services/assembla.put.parameters[0].description": "The authentication token",
	"paths./v3/projects/{id}/services/assembla.put.parameters[0].in": "formData",
	"paths./v3/projects/{id}/services/assembla.put.parameters[0].name": "token",
	"paths./v3/projects/{id}/services/assembla.put.parameters[0].required": true,
	"paths./v3/projects/{id}/services/assembla.put.parameters[0].type": "string",
	"paths./v3/projects/{id}/services/assembla.put.parameters[1].description": "Subdomain setting",
	"paths./v3/projects/{id}/services/assembla.put.parameters[1].in": "formData",
	"paths./v3/projects/{id}/services/assembla.put.parameters[1].name": "subdomain",
	"paths./v3/projects/{id}/services/assembla.put.parameters[1].required": false,
	"paths./v3/projects/{id}/services/assembla.put.parameters[1].type": "string",
	"paths./v3/projects/{id}/services/assembla.put.parameters[2].description": "Event will be triggered by a push to the repository",
	"paths./v3/projects/{id}/services/assembla.put.parameters[2].in": "formData",
	"paths./v3/projects/{id}/services/assembla.put.parameters[2].name": "push_events",
	"paths./v3/projects/{id}/services/assembla.put.parameters[2].required": false,
	"paths./v3/projects/{id}/services/assembla.put.parameters[2].type": "string",
	"paths./v3/projects/{id}/services/assembla.put.parameters[3].format": "int32",
	"paths./v3/projects/{id}/services/assembla.put.parameters[3].in": "path",
	"paths./v3/projects/{id}/services/assembla.put.parameters[3].name": "id",
	"paths./v3/projects/{id}/services/assembla.put.parameters[3].required": true,
	"paths./v3/projects/{id}/services/assembla.put.parameters[3].type": "integer",
	"paths./v3/projects/{id}/services/assembla.put.produces.length": 1,
	"paths./v3/projects/{id}/services/assembla.put.produces[0]": "application/json",
	"paths./v3/projects/{id}/services/assembla.put.responses.200.description": "Set assembla service for project",
	"paths./v3/projects/{id}/services/assembla.put.summary": "Set assembla service for project",
	"paths./v3/projects/{id}/services/assembla.put.tags.length": 1,
	"paths./v3/projects/{id}/services/assembla.put.tags[0]": "projects",
	"paths./v3/projects/{id}/services/bamboo.put.consumes.length": 1,
	"paths./v3/projects/{id}/services/bamboo.put.consumes[0]": "application/json",
	"paths./v3/projects/{id}/services/bamboo.put.description": "Set bamboo service for project",
	"paths./v3/projects/{id}/services/bamboo.put.operationId": "putV3ProjectsIdServicesBamboo",
	"paths./v3/projects/{id}/services/bamboo.put.parameters.length": 6,
	"paths./v3/projects/{id}/services/bamboo.put.parameters[0].description": "Bamboo root URL like https://bamboo.example.com",
	"paths./v3/projects/{id}/services/bamboo.put.parameters[0].in": "formData",
	"paths./v3/projects/{id}/services/bamboo.put.parameters[0].name": "bamboo_url",
	"paths./v3/projects/{id}/services/bamboo.put.parameters[0].required": true,
	"paths./v3/projects/{id}/services/bamboo.put.parameters[0].type": "string",
	"paths./v3/projects/{id}/services/bamboo.put.parameters[1].description": "Bamboo build plan key like",
	"paths./v3/projects/{id}/services/bamboo.put.parameters[1].in": "formData",
	"paths./v3/projects/{id}/services/bamboo.put.parameters[1].name": "build_key",
	"paths./v3/projects/{id}/services/bamboo.put.parameters[1].required": true,
	"paths./v3/projects/{id}/services/bamboo.put.parameters[1].type": "string",
	"paths./v3/projects/{id}/services/bamboo.put.parameters[2].description": "A user with API access, if applicable",
	"paths./v3/projects/{id}/services/bamboo.put.parameters[2].in": "formData",
	"paths./v3/projects/{id}/services/bamboo.put.parameters[2].name": "username",
	"paths./v3/projects/{id}/services/bamboo.put.parameters[2].required": true,
	"paths./v3/projects/{id}/services/bamboo.put.parameters[2].type": "string",
	"paths./v3/projects/{id}/services/bamboo.put.parameters[3].description": "Passord of the user",
	"paths./v3/projects/{id}/services/bamboo.put.parameters[3].in": "formData",
	"paths./v3/projects/{id}/services/bamboo.put.parameters[3].name": "password",
	"paths./v3/projects/{id}/services/bamboo.put.parameters[3].required": true,
	"paths./v3/projects/{id}/services/bamboo.put.parameters[3].type": "string",
	"paths./v3/projects/{id}/services/bamboo.put.parameters[4].description": "Event will be triggered by a push to the repository",
	"paths./v3/projects/{id}/services/bamboo.put.parameters[4].in": "formData",
	"paths./v3/projects/{id}/services/bamboo.put.parameters[4].name": "push_events",
	"paths./v3/projects/{id}/services/bamboo.put.parameters[4].required": false,
	"paths./v3/projects/{id}/services/bamboo.put.parameters[4].type": "string",
	"paths./v3/projects/{id}/services/bamboo.put.parameters[5].format": "int32",
	"paths./v3/projects/{id}/services/bamboo.put.parameters[5].in": "path",
	"paths./v3/projects/{id}/services/bamboo.put.parameters[5].name": "id",
	"paths./v3/projects/{id}/services/bamboo.put.parameters[5].required": true,
	"paths./v3/projects/{id}/services/bamboo.put.parameters[5].type": "integer",
	"paths./v3/projects/{id}/services/bamboo.put.produces.length": 1,
	"paths./v3/projects/{id}/services/bamboo.put.produces[0]": "application/json",
	"paths./v3/projects/{id}/services/bamboo.put.responses.200.description": "Set bamboo service for project",
	"paths./v3/projects/{id}/services/bamboo.put.summary": "Set bamboo service for project",
	"paths./v3/projects/{id}/services/bamboo.put.tags.length": 1,
	"paths./v3/projects/{id}/services/bamboo.put.tags[0]": "projects",
	"paths./v3/projects/{id}/services/bugzilla.put.consumes.length": 1,
	"paths./v3/projects/{id}/services/bugzilla.put.consumes[0]": "application/json",
	"paths./v3/projects/{id}/services/bugzilla.put.description": "Set bugzilla service for project",
	"paths./v3/projects/{id}/services/bugzilla.put.operationId": "putV3ProjectsIdServicesBugzilla",
	"paths./v3/projects/{id}/services/bugzilla.put.parameters.length": 7,
	"paths./v3/projects/{id}/services/bugzilla.put.parameters[0].description": "New issue URL",
	"paths./v3/projects/{id}/services/bugzilla.put.parameters[0].in": "formData",
	"paths./v3/projects/{id}/services/bugzilla.put.parameters[0].name": "new_issue_url",
	"paths./v3/projects/{id}/services/bugzilla.put.parameters[0].required": true,
	"paths./v3/projects/{id}/services/bugzilla.put.parameters[0].type": "string",
	"paths./v3/projects/{id}/services/bugzilla.put.parameters[1].description": "Issues URL",
	"paths./v3/projects/{id}/services/bugzilla.put.parameters[1].in": "formData",
	"paths./v3/projects/{id}/services/bugzilla.put.parameters[1].name": "issues_url",
	"paths./v3/projects/{id}/services/bugzilla.put.parameters[1].required": true,
	"paths./v3/projects/{id}/services/bugzilla.put.parameters[1].type": "string",
	"paths./v3/projects/{id}/services/bugzilla.put.parameters[2].description": "Project URL",
	"paths./v3/projects/{id}/services/bugzilla.put.parameters[2].in": "formData",
	"paths./v3/projects/{id}/services/bugzilla.put.parameters[2].name": "project_url",
	"paths./v3/projects/{id}/services/bugzilla.put.parameters[2].required": true,
	"paths./v3/projects/{id}/services/bugzilla.put.parameters[2].type": "string",
	"paths./v3/projects/{id}/services/bugzilla.put.parameters[3].description": "Description",
	"paths./v3/projects/{id}/services/bugzilla.put.parameters[3].in": "formData",
	"paths./v3/projects/{id}/services/bugzilla.put.parameters[3].name": "description",
	"paths./v3/projects/{id}/services/bugzilla.put.parameters[3].required": false,
	"paths./v3/projects/{id}/services/bugzilla.put.parameters[3].type": "string",
	"paths./v3/projects/{id}/services/bugzilla.put.parameters[4].description": "Title",
	"paths./v3/projects/{id}/services/bugzilla.put.parameters[4].in": "formData",
	"paths./v3/projects/{id}/services/bugzilla.put.parameters[4].name": "title",
	"paths./v3/projects/{id}/services/bugzilla.put.parameters[4].required": false,
	"paths./v3/projects/{id}/services/bugzilla.put.parameters[4].type": "string",
	"paths./v3/projects/{id}/services/bugzilla.put.parameters[5].description": "Event will be triggered by a push to the repository",
	"paths./v3/projects/{id}/services/bugzilla.put.parameters[5].in": "formData",
	"paths./v3/projects/{id}/services/bugzilla.put.parameters[5].name": "push_events",
	"paths./v3/projects/{id}/services/bugzilla.put.parameters[5].required": false,
	"paths./v3/projects/{id}/services/bugzilla.put.parameters[5].type": "string",
	"paths./v3/projects/{id}/services/bugzilla.put.parameters[6].format": "int32",
	"paths./v3/projects/{id}/services/bugzilla.put.parameters[6].in": "path",
	"paths./v3/projects/{id}/services/bugzilla.put.parameters[6].name": "id",
	"paths./v3/projects/{id}/services/bugzilla.put.parameters[6].required": true,
	"paths./v3/projects/{id}/services/bugzilla.put.parameters[6].type": "integer",
	"paths./v3/projects/{id}/services/bugzilla.put.produces.length": 1,
	"paths./v3/projects/{id}/services/bugzilla.put.produces[0]": "application/json",
	"paths./v3/projects/{id}/services/bugzilla.put.responses.200.description": "Set bugzilla service for project",
	"paths./v3/projects/{id}/services/bugzilla.put.summary": "Set bugzilla service for project",
	"paths./v3/projects/{id}/services/bugzilla.put.tags.length": 1,
	"paths./v3/projects/{id}/services/bugzilla.put.tags[0]": "projects",
	"paths./v3/projects/{id}/services/buildkite.put.consumes.length": 1,
	"paths./v3/projects/{id}/services/buildkite.put.consumes[0]": "application/json",
	"paths./v3/projects/{id}/services/buildkite.put.description": "Set buildkite service for project",
	"paths./v3/projects/{id}/services/buildkite.put.operationId": "putV3ProjectsIdServicesBuildkite",
	"paths./v3/projects/{id}/services/buildkite.put.parameters.length": 5,
	"paths./v3/projects/{id}/services/buildkite.put.parameters[0].description": "Buildkite project GitLab token",
	"paths./v3/projects/{id}/services/buildkite.put.parameters[0].in": "formData",
	"paths./v3/projects/{id}/services/buildkite.put.parameters[0].name": "token",
	"paths./v3/projects/{id}/services/buildkite.put.parameters[0].required": true,
	"paths./v3/projects/{id}/services/buildkite.put.parameters[0].type": "string",
	"paths./v3/projects/{id}/services/buildkite.put.parameters[1].description": "The buildkite project URL",
	"paths./v3/projects/{id}/services/buildkite.put.parameters[1].in": "formData",
	"paths./v3/projects/{id}/services/buildkite.put.parameters[1].name": "project_url",
	"paths./v3/projects/{id}/services/buildkite.put.parameters[1].required": true,
	"paths./v3/projects/{id}/services/buildkite.put.parameters[1].type": "string",
	"paths./v3/projects/{id}/services/buildkite.put.parameters[2].description": "Enable SSL verification for communication",
	"paths./v3/projects/{id}/services/buildkite.put.parameters[2].in": "formData",
	"paths./v3/projects/{id}/services/buildkite.put.parameters[2].name": "enable_ssl_verification",
	"paths./v3/projects/{id}/services/buildkite.put.parameters[2].required": false,
	"paths./v3/projects/{id}/services/buildkite.put.parameters[2].type": "boolean",
	"paths./v3/projects/{id}/services/buildkite.put.parameters[3].description": "Event will be triggered by a push to the repository",
	"paths./v3/projects/{id}/services/buildkite.put.parameters[3].in": "formData",
	"paths./v3/projects/{id}/services/buildkite.put.parameters[3].name": "push_events",
	"paths./v3/projects/{id}/services/buildkite.put.parameters[3].required": false,
	"paths./v3/projects/{id}/services/buildkite.put.parameters[3].type": "string",
	"paths./v3/projects/{id}/services/buildkite.put.parameters[4].format": "int32",
	"paths./v3/projects/{id}/services/buildkite.put.parameters[4].in": "path",
	"paths./v3/projects/{id}/services/buildkite.put.parameters[4].name": "id",
	"paths./v3/projects/{id}/services/buildkite.put.parameters[4].required": true,
	"paths./v3/projects/{id}/services/buildkite.put.parameters[4].type": "integer",
	"paths./v3/projects/{id}/services/buildkite.put.produces.length": 1,
	"paths./v3/projects/{id}/services/buildkite.put.produces[0]": "application/json",
	"paths./v3/projects/{id}/services/buildkite.put.responses.200.description": "Set buildkite service for project",
	"paths./v3/projects/{id}/services/buildkite.put.summary": "Set buildkite service for project",
	"paths./v3/projects/{id}/services/buildkite.put.tags.length": 1,
	"paths./v3/projects/{id}/services/buildkite.put.tags[0]": "projects",
	"paths./v3/projects/{id}/services/builds-email.put.consumes.length": 1,
	"paths./v3/projects/{id}/services/builds-email.put.consumes[0]": "application/json",
	"paths./v3/projects/{id}/services/builds-email.put.description": "Set builds-email service for project",
	"paths./v3/projects/{id}/services/builds-email.put.operationId": "putV3ProjectsIdServicesBuildsEmail",
	"paths./v3/projects/{id}/services/builds-email.put.parameters.length": 5,
	"paths./v3/projects/{id}/services/builds-email.put.parameters[0].description": "Comma-separated list of recipient email addresses",
	"paths./v3/projects/{id}/services/builds-email.put.parameters[0].in": "formData",
	"paths./v3/projects/{id}/services/builds-email.put.parameters[0].name": "recipients",
	"paths./v3/projects/{id}/services/builds-email.put.parameters[0].required": true,
	"paths./v3/projects/{id}/services/builds-email.put.parameters[0].type": "string",
	"paths./v3/projects/{id}/services/builds-email.put.parameters[1].description": "Add pusher to recipients list",
	"paths./v3/projects/{id}/services/builds-email.put.parameters[1].in": "formData",
	"paths./v3/projects/{id}/services/builds-email.put.parameters[1].name": "add_pusher",
	"paths./v3/projects/{id}/services/builds-email.put.parameters[1].required": false,
	"paths./v3/projects/{id}/services/builds-email.put.parameters[1].type": "boolean",
	"paths./v3/projects/{id}/services/builds-email.put.parameters[2].description": "Notify only broken builds",
	"paths./v3/projects/{id}/services/builds-email.put.parameters[2].in": "formData",
	"paths./v3/projects/{id}/services/builds-email.put.parameters[2].name": "notify_only_broken_builds",
	"paths./v3/projects/{id}/services/builds-email.put.parameters[2].required": false,
	"paths./v3/projects/{id}/services/builds-email.put.parameters[2].type": "boolean",
	"paths./v3/projects/{id}/services/builds-email.put.parameters[3].description": "Event will be triggered when a build status changes",
	"paths./v3/projects/{id}/services/builds-email.put.parameters[3].in": "formData",
	"paths./v3/projects/{id}/services/builds-email.put.parameters[3].name": "build_events",
	"paths./v3/projects/{id}/services/builds-email.put.parameters[3].required": false,
	"paths./v3/projects/{id}/services/builds-email.put.parameters[3].type": "string",
	"paths./v3/projects/{id}/services/builds-email.put.parameters[4].format": "int32",
	"paths./v3/projects/{id}/services/builds-email.put.parameters[4].in": "path",
	"paths./v3/projects/{id}/services/builds-email.put.parameters[4].name": "id",
	"paths./v3/projects/{id}/services/builds-email.put.parameters[4].required": true,
	"paths./v3/projects/{id}/services/builds-email.put.parameters[4].type": "integer",
	"paths./v3/projects/{id}/services/builds-email.put.produces.length": 1,
	"paths./v3/projects/{id}/services/builds-email.put.produces[0]": "application/json",
	"paths./v3/projects/{id}/services/builds-email.put.responses.200.description": "Set builds-email service for project",
	"paths./v3/projects/{id}/services/builds-email.put.summary": "Set builds-email service for project",
	"paths./v3/projects/{id}/services/builds-email.put.tags.length": 1,
	"paths./v3/projects/{id}/services/builds-email.put.tags[0]": "projects",
	"paths./v3/projects/{id}/services/campfire.put.consumes.length": 1,
	"paths./v3/projects/{id}/services/campfire.put.consumes[0]": "application/json",
	"paths./v3/projects/{id}/services/campfire.put.description": "Set campfire service for project",
	"paths./v3/projects/{id}/services/campfire.put.operationId": "putV3ProjectsIdServicesCampfire",
	"paths./v3/projects/{id}/services/campfire.put.parameters.length": 5,
	"paths./v3/projects/{id}/services/campfire.put.parameters[0].description": "Campfire token",
	"paths./v3/projects/{id}/services/campfire.put.parameters[0].in": "formData",
	"paths./v3/projects/{id}/services/campfire.put.parameters[0].name": "token",
	"paths./v3/projects/{id}/services/campfire.put.parameters[0].required": true,
	"paths./v3/projects/{id}/services/campfire.put.parameters[0].type": "string",
	"paths./v3/projects/{id}/services/campfire.put.parameters[1].description": "Campfire subdomain",
	"paths./v3/projects/{id}/services/campfire.put.parameters[1].in": "formData",
	"paths./v3/projects/{id}/services/campfire.put.parameters[1].name": "subdomain",
	"paths./v3/projects/{id}/services/campfire.put.parameters[1].required": false,
	"paths./v3/projects/{id}/services/campfire.put.parameters[1].type": "string",
	"paths./v3/projects/{id}/services/campfire.put.parameters[2].description": "Campfire room",
	"paths./v3/projects/{id}/services/campfire.put.parameters[2].in": "formData",
	"paths./v3/projects/{id}/services/campfire.put.parameters[2].name": "room",
	"paths./v3/projects/{id}/services/campfire.put.parameters[2].required": false,
	"paths./v3/projects/{id}/services/campfire.put.parameters[2].type": "string",
	"paths./v3/projects/{id}/services/campfire.put.parameters[3].description": "Event will be triggered by a push to the repository",
	"paths./v3/projects/{id}/services/campfire.put.parameters[3].in": "formData",
	"paths./v3/projects/{id}/services/campfire.put.parameters[3].name": "push_events",
	"paths./v3/projects/{id}/services/campfire.put.parameters[3].required": false,
	"paths./v3/projects/{id}/services/campfire.put.parameters[3].type": "string",
	"paths./v3/projects/{id}/services/campfire.put.parameters[4].format": "int32",
	"paths./v3/projects/{id}/services/campfire.put.parameters[4].in": "path",
	"paths./v3/projects/{id}/services/campfire.put.parameters[4].name": "id",
	"paths./v3/projects/{id}/services/campfire.put.parameters[4].required": true,
	"paths./v3/projects/{id}/services/campfire.put.parameters[4].type": "integer",
	"paths./v3/projects/{id}/services/campfire.put.produces.length": 1,
	"paths./v3/projects/{id}/services/campfire.put.produces[0]": "application/json",
	"paths./v3/projects/{id}/services/campfire.put.responses.200.description": "Set campfire service for project",
	"paths./v3/projects/{id}/services/campfire.put.summary": "Set campfire service for project",
	"paths./v3/projects/{id}/services/campfire.put.tags.length": 1,
	"paths./v3/projects/{id}/services/campfire.put.tags[0]": "projects",
	"paths./v3/projects/{id}/services/custom-issue-tracker.put.consumes.length": 1,
	"paths./v3/projects/{id}/services/custom-issue-tracker.put.consumes[0]": "application/json",
	"paths./v3/projects/{id}/services/custom-issue-tracker.put.description": "Set custom-issue-tracker service for project",
	"paths./v3/projects/{id}/services/custom-issue-tracker.put.operationId": "putV3ProjectsIdServicesCustomIssueTracker",
	"paths./v3/projects/{id}/services/custom-issue-tracker.put.parameters.length": 7,
	"paths./v3/projects/{id}/services/custom-issue-tracker.put.parameters[0].description": "New issue URL",
	"paths./v3/projects/{id}/services/custom-issue-tracker.put.parameters[0].in": "formData",
	"paths./v3/projects/{id}/services/custom-issue-tracker.put.parameters[0].name": "new_issue_url",
	"paths./v3/projects/{id}/services/custom-issue-tracker.put.parameters[0].required": true,
	"paths./v3/projects/{id}/services/custom-issue-tracker.put.parameters[0].type": "string",
	"paths./v3/projects/{id}/services/custom-issue-tracker.put.parameters[1].description": "Issues URL",
	"paths./v3/projects/{id}/services/custom-issue-tracker.put.parameters[1].in": "formData",
	"paths./v3/projects/{id}/services/custom-issue-tracker.put.parameters[1].name": "issues_url",
	"paths./v3/projects/{id}/services/custom-issue-tracker.put.parameters[1].required": true,
	"paths./v3/projects/{id}/services/custom-issue-tracker.put.parameters[1].type": "string",
	"paths./v3/projects/{id}/services/custom-issue-tracker.put.parameters[2].description": "Project URL",
	"paths./v3/projects/{id}/services/custom-issue-tracker.put.parameters[2].in": "formData",
	"paths./v3/projects/{id}/services/custom-issue-tracker.put.parameters[2].name": "project_url",
	"paths./v3/projects/{id}/services/custom-issue-tracker.put.parameters[2].required": true,
	"paths./v3/projects/{id}/services/custom-issue-tracker.put.parameters[2].type": "string",
	"paths./v3/projects/{id}/services/custom-issue-tracker.put.parameters[3].description": "Description",
	"paths./v3/projects/{id}/services/custom-issue-tracker.put.parameters[3].in": "formData",
	"paths./v3/projects/{id}/services/custom-issue-tracker.put.parameters[3].name": "description",
	"paths./v3/projects/{id}/services/custom-issue-tracker.put.parameters[3].required": false,
	"paths./v3/projects/{id}/services/custom-issue-tracker.put.parameters[3].type": "string",
	"paths./v3/projects/{id}/services/custom-issue-tracker.put.parameters[4].description": "Title",
	"paths./v3/projects/{id}/services/custom-issue-tracker.put.parameters[4].in": "formData",
	"paths./v3/projects/{id}/services/custom-issue-tracker.put.parameters[4].name": "title",
	"paths./v3/projects/{id}/services/custom-issue-tracker.put.parameters[4].required": false,
	"paths./v3/projects/{id}/services/custom-issue-tracker.put.parameters[4].type": "string",
	"paths./v3/projects/{id}/services/custom-issue-tracker.put.parameters[5].description": "Event will be triggered by a push to the repository",
	"paths./v3/projects/{id}/services/custom-issue-tracker.put.parameters[5].in": "formData",
	"paths./v3/projects/{id}/services/custom-issue-tracker.put.parameters[5].name": "push_events",
	"paths./v3/projects/{id}/services/custom-issue-tracker.put.parameters[5].required": false,
	"paths./v3/projects/{id}/services/custom-issue-tracker.put.parameters[5].type": "string",
	"paths./v3/projects/{id}/services/custom-issue-tracker.put.parameters[6].format": "int32",
	"paths./v3/projects/{id}/services/custom-issue-tracker.put.parameters[6].in": "path",
	"paths./v3/projects/{id}/services/custom-issue-tracker.put.parameters[6].name": "id",
	"paths./v3/projects/{id}/services/custom-issue-tracker.put.parameters[6].required": true,
	"paths./v3/projects/{id}/services/custom-issue-tracker.put.parameters[6].type": "integer",
	"paths./v3/projects/{id}/services/custom-issue-tracker.put.produces.length": 1,
	"paths./v3/projects/{id}/services/custom-issue-tracker.put.produces[0]": "application/json",
	"paths./v3/projects/{id}/services/custom-issue-tracker.put.responses.200.description": "Set custom-issue-tracker service for project",
	"paths./v3/projects/{id}/services/custom-issue-tracker.put.summary": "Set custom-issue-tracker service for project",
	"paths./v3/projects/{id}/services/custom-issue-tracker.put.tags.length": 1,
	"paths./v3/projects/{id}/services/custom-issue-tracker.put.tags[0]": "projects",
	"paths./v3/projects/{id}/services/drone-ci.put.consumes.length": 1,
	"paths./v3/projects/{id}/services/drone-ci.put.consumes[0]": "application/json",
	"paths./v3/projects/{id}/services/drone-ci.put.description": "Set drone-ci service for project",
	"paths./v3/projects/{id}/services/drone-ci.put.operationId": "putV3ProjectsIdServicesDroneCi",
	"paths./v3/projects/{id}/services/drone-ci.put.parameters.length": 7,
	"paths./v3/projects/{id}/services/drone-ci.put.parameters[0].description": "Drone CI token",
	"paths./v3/projects/{id}/services/drone-ci.put.parameters[0].in": "formData",
	"paths./v3/projects/{id}/services/drone-ci.put.parameters[0].name": "token",
	"paths./v3/projects/{id}/services/drone-ci.put.parameters[0].required": true,
	"paths./v3/projects/{id}/services/drone-ci.put.parameters[0].type": "string",
	"paths./v3/projects/{id}/services/drone-ci.put.parameters[1].description": "Drone CI URL",
	"paths./v3/projects/{id}/services/drone-ci.put.parameters[1].in": "formData",
	"paths./v3/projects/{id}/services/drone-ci.put.parameters[1].name": "drone_url",
	"paths./v3/projects/{id}/services/drone-ci.put.parameters[1].required": true,
	"paths./v3/projects/{id}/services/drone-ci.put.parameters[1].type": "string",
	"paths./v3/projects/{id}/services/drone-ci.put.parameters[2].description": "Enable SSL verification for communication",
	"paths./v3/projects/{id}/services/drone-ci.put.parameters[2].in": "formData",
	"paths./v3/projects/{id}/services/drone-ci.put.parameters[2].name": "enable_ssl_verification",
	"paths./v3/projects/{id}/services/drone-ci.put.parameters[2].required": false,
	"paths./v3/projects/{id}/services/drone-ci.put.parameters[2].type": "boolean",
	"paths./v3/projects/{id}/services/drone-ci.put.parameters[3].description": "Event will be triggered by a push to the repository",
	"paths./v3/projects/{id}/services/drone-ci.put.parameters[3].in": "formData",
	"paths./v3/projects/{id}/services/drone-ci.put.parameters[3].name": "push_events",
	"paths./v3/projects/{id}/services/drone-ci.put.parameters[3].required": false,
	"paths./v3/projects/{id}/services/drone-ci.put.parameters[3].type": "string",
	"paths./v3/projects/{id}/services/drone-ci.put.parameters[4].description": "Event will be triggered when a merge request is created/updated/merged",
	"paths./v3/projects/{id}/services/drone-ci.put.parameters[4].in": "formData",
	"paths./v3/projects/{id}/services/drone-ci.put.parameters[4].name": "merge_request_events",
	"paths./v3/projects/{id}/services/drone-ci.put.parameters[4].required": false,
	"paths./v3/projects/{id}/services/drone-ci.put.parameters[4].type": "string",
	"paths./v3/projects/{id}/services/drone-ci.put.parameters[5].description": "Event will be triggered when a new tag is pushed to the repository",
	"paths./v3/projects/{id}/services/drone-ci.put.parameters[5].in": "formData",
	"paths./v3/projects/{id}/services/drone-ci.put.parameters[5].name": "tag_push_events",
	"paths./v3/projects/{id}/services/drone-ci.put.parameters[5].required": false,
	"paths./v3/projects/{id}/services/drone-ci.put.parameters[5].type": "string",
	"paths./v3/projects/{id}/services/drone-ci.put.parameters[6].format": "int32",
	"paths./v3/projects/{id}/services/drone-ci.put.parameters[6].in": "path",
	"paths./v3/projects/{id}/services/drone-ci.put.parameters[6].name": "id",
	"paths./v3/projects/{id}/services/drone-ci.put.parameters[6].required": true,
	"paths./v3/projects/{id}/services/drone-ci.put.parameters[6].type": "integer",
	"paths./v3/projects/{id}/services/drone-ci.put.produces.length": 1,
	"paths./v3/projects/{id}/services/drone-ci.put.produces[0]": "application/json",
	"paths./v3/projects/{id}/services/drone-ci.put.responses.200.description": "Set drone-ci service for project",
	"paths./v3/projects/{id}/services/drone-ci.put.summary": "Set drone-ci service for project",
	"paths./v3/projects/{id}/services/drone-ci.put.tags.length": 1,
	"paths./v3/projects/{id}/services/drone-ci.put.tags[0]": "projects",
	"paths./v3/projects/{id}/services/emails-on-push.put.consumes.length": 1,
	"paths./v3/projects/{id}/services/emails-on-push.put.consumes[0]": "application/json",
	"paths./v3/projects/{id}/services/emails-on-push.put.description": "Set emails-on-push service for project",
	"paths./v3/projects/{id}/services/emails-on-push.put.operationId": "putV3ProjectsIdServicesEmailsOnPush",
	"paths./v3/projects/{id}/services/emails-on-push.put.parameters.length": 6,
	"paths./v3/projects/{id}/services/emails-on-push.put.parameters[0].description": "Comma-separated list of recipient email addresses",
	"paths./v3/projects/{id}/services/emails-on-push.put.parameters[0].in": "formData",
	"paths./v3/projects/{id}/services/emails-on-push.put.parameters[0].name": "recipients",
	"paths./v3/projects/{id}/services/emails-on-push.put.parameters[0].required": true,
	"paths./v3/projects/{id}/services/emails-on-push.put.parameters[0].type": "string",
	"paths./v3/projects/{id}/services/emails-on-push.put.parameters[1].description": "Disable code diffs",
	"paths./v3/projects/{id}/services/emails-on-push.put.parameters[1].in": "formData",
	"paths./v3/projects/{id}/services/emails-on-push.put.parameters[1].name": "disable_diffs",
	"paths./v3/projects/{id}/services/emails-on-push.put.parameters[1].required": false,
	"paths./v3/projects/{id}/services/emails-on-push.put.parameters[1].type": "boolean",
	"paths./v3/projects/{id}/services/emails-on-push.put.parameters[2].description": "Send from committer",
	"paths./v3/projects/{id}/services/emails-on-push.put.parameters[2].in": "formData",
	"paths./v3/projects/{id}/services/emails-on-push.put.parameters[2].name": "send_from_committer_email",
	"paths./v3/projects/{id}/services/emails-on-push.put.parameters[2].required": false,
	"paths./v3/projects/{id}/services/emails-on-push.put.parameters[2].type": "boolean",
	"paths./v3/projects/{id}/services/emails-on-push.put.parameters[3].description": "Event will be triggered by a push to the repository",
	"paths./v3/projects/{id}/services/emails-on-push.put.parameters[3].in": "formData",
	"paths./v3/projects/{id}/services/emails-on-push.put.parameters[3].name": "push_events",
	"paths./v3/projects/{id}/services/emails-on-push.put.parameters[3].required": false,
	"paths./v3/projects/{id}/services/emails-on-push.put.parameters[3].type": "string",
	"paths./v3/projects/{id}/services/emails-on-push.put.parameters[4].description": "Event will be triggered when a new tag is pushed to the repository",
	"paths./v3/projects/{id}/services/emails-on-push.put.parameters[4].in": "formData",
	"paths./v3/projects/{id}/services/emails-on-push.put.parameters[4].name": "tag_push_events",
	"paths./v3/projects/{id}/services/emails-on-push.put.parameters[4].required": false,
	"paths./v3/projects/{id}/services/emails-on-push.put.parameters[4].type": "string",
	"paths./v3/projects/{id}/services/emails-on-push.put.parameters[5].format": "int32",
	"paths./v3/projects/{id}/services/emails-on-push.put.parameters[5].in": "path",
	"paths./v3/projects/{id}/services/emails-on-push.put.parameters[5].name": "id",
	"paths./v3/projects/{id}/services/emails-on-push.put.parameters[5].required": true,
	"paths./v3/projects/{id}/services/emails-on-push.put.parameters[5].type": "integer",
	"paths./v3/projects/{id}/services/emails-on-push.put.produces.length": 1,
	"paths./v3/projects/{id}/services/emails-on-push.put.produces[0]": "application/json",
	"paths./v3/projects/{id}/services/emails-on-push.put.responses.200.description": "Set emails-on-push service for project",
	"paths./v3/projects/{id}/services/emails-on-push.put.summary": "Set emails-on-push service for project",
	"paths./v3/projects/{id}/services/emails-on-push.put.tags.length": 1,
	"paths./v3/projects/{id}/services/emails-on-push.put.tags[0]": "projects",
	"paths./v3/projects/{id}/services/external-wiki.put.consumes.length": 1,
	"paths./v3/projects/{id}/services/external-wiki.put.consumes[0]": "application/json",
	"paths./v3/projects/{id}/services/external-wiki.put.description": "Set external-wiki service for project",
	"paths./v3/projects/{id}/services/external-wiki.put.operationId": "putV3ProjectsIdServicesExternalWiki",
	"paths./v3/projects/{id}/services/external-wiki.put.parameters.length": 2,
	"paths./v3/projects/{id}/services/external-wiki.put.parameters[0].description": "The URL of the external Wiki",
	"paths./v3/projects/{id}/services/external-wiki.put.parameters[0].in": "formData",
	"paths./v3/projects/{id}/services/external-wiki.put.parameters[0].name": "external_wiki_url",
	"paths./v3/projects/{id}/services/external-wiki.put.parameters[0].required": true,
	"paths./v3/projects/{id}/services/external-wiki.put.parameters[0].type": "string",
	"paths./v3/projects/{id}/services/external-wiki.put.parameters[1].format": "int32",
	"paths./v3/projects/{id}/services/external-wiki.put.parameters[1].in": "path",
	"paths./v3/projects/{id}/services/external-wiki.put.parameters[1].name": "id",
	"paths./v3/projects/{id}/services/external-wiki.put.parameters[1].required": true,
	"paths./v3/projects/{id}/services/external-wiki.put.parameters[1].type": "integer",
	"paths./v3/projects/{id}/services/external-wiki.put.produces.length": 1,
	"paths./v3/projects/{id}/services/external-wiki.put.produces[0]": "application/json",
	"paths./v3/projects/{id}/services/external-wiki.put.responses.200.description": "Set external-wiki service for project",
	"paths./v3/projects/{id}/services/external-wiki.put.summary": "Set external-wiki service for project",
	"paths./v3/projects/{id}/services/external-wiki.put.tags.length": 1,
	"paths./v3/projects/{id}/services/external-wiki.put.tags[0]": "projects",
	"paths./v3/projects/{id}/services/flowdock.put.consumes.length": 1,
	"paths./v3/projects/{id}/services/flowdock.put.consumes[0]": "application/json",
	"paths./v3/projects/{id}/services/flowdock.put.description": "Set flowdock service for project",
	"paths./v3/projects/{id}/services/flowdock.put.operationId": "putV3ProjectsIdServicesFlowdock",
	"paths./v3/projects/{id}/services/flowdock.put.parameters.length": 3,
	"paths./v3/projects/{id}/services/flowdock.put.parameters[0].description": "Flowdock token",
	"paths./v3/projects/{id}/services/flowdock.put.parameters[0].in": "formData",
	"paths./v3/projects/{id}/services/flowdock.put.parameters[0].name": "token",
	"paths./v3/projects/{id}/services/flowdock.put.parameters[0].required": true,
	"paths./v3/projects/{id}/services/flowdock.put.parameters[0].type": "string",
	"paths./v3/projects/{id}/services/flowdock.put.parameters[1].description": "Event will be triggered by a push to the repository",
	"paths./v3/projects/{id}/services/flowdock.put.parameters[1].in": "formData",
	"paths./v3/projects/{id}/services/flowdock.put.parameters[1].name": "push_events",
	"paths./v3/projects/{id}/services/flowdock.put.parameters[1].required": false,
	"paths./v3/projects/{id}/services/flowdock.put.parameters[1].type": "string",
	"paths./v3/projects/{id}/services/flowdock.put.parameters[2].format": "int32",
	"paths./v3/projects/{id}/services/flowdock.put.parameters[2].in": "path",
	"paths./v3/projects/{id}/services/flowdock.put.parameters[2].name": "id",
	"paths./v3/projects/{id}/services/flowdock.put.parameters[2].required": true,
	"paths./v3/projects/{id}/services/flowdock.put.parameters[2].type": "integer",
	"paths./v3/projects/{id}/services/flowdock.put.produces.length": 1,
	"paths./v3/projects/{id}/services/flowdock.put.produces[0]": "application/json",
	"paths./v3/projects/{id}/services/flowdock.put.responses.200.description": "Set flowdock service for project",
	"paths./v3/projects/{id}/services/flowdock.put.summary": "Set flowdock service for project",
	"paths./v3/projects/{id}/services/flowdock.put.tags.length": 1,
	"paths./v3/projects/{id}/services/flowdock.put.tags[0]": "projects",
	"paths./v3/projects/{id}/services/gemnasium.put.consumes.length": 1,
	"paths./v3/projects/{id}/services/gemnasium.put.consumes[0]": "application/json",
	"paths./v3/projects/{id}/services/gemnasium.put.description": "Set gemnasium service for project",
	"paths./v3/projects/{id}/services/gemnasium.put.operationId": "putV3ProjectsIdServicesGemnasium",
	"paths./v3/projects/{id}/services/gemnasium.put.parameters.length": 4,
	"paths./v3/projects/{id}/services/gemnasium.put.parameters[0].description": "Your personal API key on gemnasium.com",
	"paths./v3/projects/{id}/services/gemnasium.put.parameters[0].in": "formData",
	"paths./v3/projects/{id}/services/gemnasium.put.parameters[0].name": "api_key",
	"paths./v3/projects/{id}/services/gemnasium.put.parameters[0].required": true,
	"paths./v3/projects/{id}/services/gemnasium.put.parameters[0].type": "string",
	"paths./v3/projects/{id}/services/gemnasium.put.parameters[1].description": "The project's slug on gemnasium.com",
	"paths./v3/projects/{id}/services/gemnasium.put.parameters[1].in": "formData",
	"paths./v3/projects/{id}/services/gemnasium.put.parameters[1].name": "token",
	"paths./v3/projects/{id}/services/gemnasium.put.parameters[1].required": true,
	"paths./v3/projects/{id}/services/gemnasium.put.parameters[1].type": "string",
	"paths./v3/projects/{id}/services/gemnasium.put.parameters[2].description": "Event will be triggered by a push to the repository",
	"paths./v3/projects/{id}/services/gemnasium.put.parameters[2].in": "formData",
	"paths./v3/projects/{id}/services/gemnasium.put.parameters[2].name": "push_events",
	"paths./v3/projects/{id}/services/gemnasium.put.parameters[2].required": false,
	"paths./v3/projects/{id}/services/gemnasium.put.parameters[2].type": "string",
	"paths./v3/projects/{id}/services/gemnasium.put.parameters[3].format": "int32",
	"paths./v3/projects/{id}/services/gemnasium.put.parameters[3].in": "path",
	"paths./v3/projects/{id}/services/gemnasium.put.parameters[3].name": "id",
	"paths./v3/projects/{id}/services/gemnasium.put.parameters[3].required": true,
	"paths./v3/projects/{id}/services/gemnasium.put.parameters[3].type": "integer",
	"paths./v3/projects/{id}/services/gemnasium.put.produces.length": 1,
	"paths./v3/projects/{id}/services/gemnasium.put.produces[0]": "application/json",
	"paths./v3/projects/{id}/services/gemnasium.put.responses.200.description": "Set gemnasium service for project",
	"paths./v3/projects/{id}/services/gemnasium.put.summary": "Set gemnasium service for project",
	"paths./v3/projects/{id}/services/gemnasium.put.tags.length": 1,
	"paths./v3/projects/{id}/services/gemnasium.put.tags[0]": "projects",
	"paths./v3/projects/{id}/services/hipchat.put.consumes.length": 1,
	"paths./v3/projects/{id}/services/hipchat.put.consumes[0]": "application/json",
	"paths./v3/projects/{id}/services/hipchat.put.description": "Set hipchat service for project",
	"paths./v3/projects/{id}/services/hipchat.put.operationId": "putV3ProjectsIdServicesHipchat",
	"paths./v3/projects/{id}/services/hipchat.put.parameters.length": 14,
	"paths./v3/projects/{id}/services/hipchat.put.parameters[0].description": "The room token",
	"paths./v3/projects/{id}/services/hipchat.put.parameters[0].in": "formData",
	"paths./v3/projects/{id}/services/hipchat.put.parameters[0].name": "token",
	"paths./v3/projects/{id}/services/hipchat.put.parameters[0].required": true,
	"paths./v3/projects/{id}/services/hipchat.put.parameters[0].type": "string",
	"paths./v3/projects/{id}/services/hipchat.put.parameters[10].description": "Event will be triggered when someone adds a comment",
	"paths./v3/projects/{id}/services/hipchat.put.parameters[10].in": "formData",
	"paths./v3/projects/{id}/services/hipchat.put.parameters[10].name": "note_events",
	"paths./v3/projects/{id}/services/hipchat.put.parameters[10].required": false,
	"paths./v3/projects/{id}/services/hipchat.put.parameters[10].type": "string",
	"paths./v3/projects/{id}/services/hipchat.put.parameters[11].description": "Event will be triggered when a new tag is pushed to the repository",
	"paths./v3/projects/{id}/services/hipchat.put.parameters[11].in": "formData",
	"paths./v3/projects/{id}/services/hipchat.put.parameters[11].name": "tag_push_events",
	"paths./v3/projects/{id}/services/hipchat.put.parameters[11].required": false,
	"paths./v3/projects/{id}/services/hipchat.put.parameters[11].type": "string",
	"paths./v3/projects/{id}/services/hipchat.put.parameters[12].description": "Event will be triggered when a build status changes",
	"paths./v3/projects/{id}/services/hipchat.put.parameters[12].in": "formData",
	"paths./v3/projects/{id}/services/hipchat.put.parameters[12].name": "build_events",
	"paths./v3/projects/{id}/services/hipchat.put.parameters[12].required": false,
	"paths./v3/projects/{id}/services/hipchat.put.parameters[12].type": "string",
	"paths./v3/projects/{id}/services/hipchat.put.parameters[13].format": "int32",
	"paths./v3/projects/{id}/services/hipchat.put.parameters[13].in": "path",
	"paths./v3/projects/{id}/services/hipchat.put.parameters[13].name": "id",
	"paths./v3/projects/{id}/services/hipchat.put.parameters[13].required": true,
	"paths./v3/projects/{id}/services/hipchat.put.parameters[13].type": "integer",
	"paths./v3/projects/{id}/services/hipchat.put.parameters[1].description": "The room name or ID",
	"paths./v3/projects/{id}/services/hipchat.put.parameters[1].in": "formData",
	"paths./v3/projects/{id}/services/hipchat.put.parameters[1].name": "room",
	"paths./v3/projects/{id}/services/hipchat.put.parameters[1].required": false,
	"paths./v3/projects/{id}/services/hipchat.put.parameters[1].type": "string",
	"paths./v3/projects/{id}/services/hipchat.put.parameters[2].description": "The room color",
	"paths./v3/projects/{id}/services/hipchat.put.parameters[2].in": "formData",
	"paths./v3/projects/{id}/services/hipchat.put.parameters[2].name": "color",
	"paths./v3/projects/{id}/services/hipchat.put.parameters[2].required": false,
	"paths./v3/projects/{id}/services/hipchat.put.parameters[2].type": "string",
	"paths./v3/projects/{id}/services/hipchat.put.parameters[3].description": "Enable notifications",
	"paths./v3/projects/{id}/services/hipchat.put.parameters[3].in": "formData",
	"paths./v3/projects/{id}/services/hipchat.put.parameters[3].name": "notify",
	"paths./v3/projects/{id}/services/hipchat.put.parameters[3].required": false,
	"paths./v3/projects/{id}/services/hipchat.put.parameters[3].type": "boolean",
	"paths./v3/projects/{id}/services/hipchat.put.parameters[4].description": "Leave blank for default (v2)",
	"paths./v3/projects/{id}/services/hipchat.put.parameters[4].in": "formData",
	"paths./v3/projects/{id}/services/hipchat.put.parameters[4].name": "api_version",
	"paths./v3/projects/{id}/services/hipchat.put.parameters[4].required": false,
	"paths./v3/projects/{id}/services/hipchat.put.parameters[4].type": "string",
	"paths./v3/projects/{id}/services/hipchat.put.parameters[5].description": "Leave blank for default. https://hipchat.example.com",
	"paths./v3/projects/{id}/services/hipchat.put.parameters[5].in": "formData",
	"paths./v3/projects/{id}/services/hipchat.put.parameters[5].name": "server",
	"paths./v3/projects/{id}/services/hipchat.put.parameters[5].required": false,
	"paths./v3/projects/{id}/services/hipchat.put.parameters[5].type": "string",
	"paths./v3/projects/{id}/services/hipchat.put.parameters[6].description": "Event will be triggered by a push to the repository",
	"paths./v3/projects/{id}/services/hipchat.put.parameters[6].in": "formData",
	"paths./v3/projects/{id}/services/hipchat.put.parameters[6].name": "push_events",
	"paths./v3/projects/{id}/services/hipchat.put.parameters[6].required": false,
	"paths./v3/projects/{id}/services/hipchat.put.parameters[6].type": "string",
	"paths./v3/projects/{id}/services/hipchat.put.parameters[7].description": "Event will be triggered when an issue is created/updated/closed",
	"paths./v3/projects/{id}/services/hipchat.put.parameters[7].in": "formData",
	"paths./v3/projects/{id}/services/hipchat.put.parameters[7].name": "issue_events",
	"paths./v3/projects/{id}/services/hipchat.put.parameters[7].required": false,
	"paths./v3/projects/{id}/services/hipchat.put.parameters[7].type": "string",
	"paths./v3/projects/{id}/services/hipchat.put.parameters[8].description": "Event will be triggered when a confidential issue is created/updated/closed",
	"paths./v3/projects/{id}/services/hipchat.put.parameters[8].in": "formData",
	"paths./v3/projects/{id}/services/hipchat.put.parameters[8].name": "confidential_issue_events",
	"paths./v3/projects/{id}/services/hipchat.put.parameters[8].required": false,
	"paths./v3/projects/{id}/services/hipchat.put.parameters[8].type": "string",
	"paths./v3/projects/{id}/services/hipchat.put.parameters[9].description": "Event will be triggered when a merge request is created/updated/merged",
	"paths./v3/projects/{id}/services/hipchat.put.parameters[9].in": "formData",
	"paths./v3/projects/{id}/services/hipchat.put.parameters[9].name": "merge_request_events",
	"paths./v3/projects/{id}/services/hipchat.put.parameters[9].required": false,
	"paths./v3/projects/{id}/services/hipchat.put.parameters[9].type": "string",
	"paths./v3/projects/{id}/services/hipchat.put.produces.length": 1,
	"paths./v3/projects/{id}/services/hipchat.put.produces[0]": "application/json",
	"paths./v3/projects/{id}/services/hipchat.put.responses.200.description": "Set hipchat service for project",
	"paths./v3/projects/{id}/services/hipchat.put.summary": "Set hipchat service for project",
	"paths./v3/projects/{id}/services/hipchat.put.tags.length": 1,
	"paths./v3/projects/{id}/services/hipchat.put.tags[0]": "projects",
	"paths./v3/projects/{id}/services/irker.put.consumes.length": 1,
	"paths./v3/projects/{id}/services/irker.put.consumes[0]": "application/json",
	"paths./v3/projects/{id}/services/irker.put.description": "Set irker service for project",
	"paths./v3/projects/{id}/services/irker.put.operationId": "putV3ProjectsIdServicesIrker",
	"paths./v3/projects/{id}/services/irker.put.parameters.length": 7,
	"paths./v3/projects/{id}/services/irker.put.parameters[0].description": "Recipients/channels separated by whitespaces",
	"paths./v3/projects/{id}/services/irker.put.parameters[0].in": "formData",
	"paths./v3/projects/{id}/services/irker.put.parameters[0].name": "recipients",
	"paths./v3/projects/{id}/services/irker.put.parameters[0].required": true,
	"paths./v3/projects/{id}/services/irker.put.parameters[0].type": "string",
	"paths./v3/projects/{id}/services/irker.put.parameters[1].description": "Default: irc://irc.network.net:6697",
	"paths./v3/projects/{id}/services/irker.put.parameters[1].in": "formData",
	"paths./v3/projects/{id}/services/irker.put.parameters[1].name": "default_irc_uri",
	"paths./v3/projects/{id}/services/irker.put.parameters[1].required": false,
	"paths./v3/projects/{id}/services/irker.put.parameters[1].type": "string",
	"paths./v3/projects/{id}/services/irker.put.parameters[2].description": "Server host. Default localhost",
	"paths./v3/projects/{id}/services/irker.put.parameters[2].in": "formData",
	"paths./v3/projects/{id}/services/irker.put.parameters[2].name": "server_host",
	"paths./v3/projects/{id}/services/irker.put.parameters[2].required": false,
	"paths./v3/projects/{id}/services/irker.put.parameters[2].type": "string",
	"paths./v3/projects/{id}/services/irker.put.parameters[3].description": "Server port. Default 6659",
	"paths./v3/projects/{id}/services/irker.put.parameters[3].format": "int32",
	"paths./v3/projects/{id}/services/irker.put.parameters[3].in": "formData",
	"paths./v3/projects/{id}/services/irker.put.parameters[3].name": "server_port",
	"paths./v3/projects/{id}/services/irker.put.parameters[3].required": false,
	"paths./v3/projects/{id}/services/irker.put.parameters[3].type": "integer",
	"paths./v3/projects/{id}/services/irker.put.parameters[4].description": "Colorize messages",
	"paths./v3/projects/{id}/services/irker.put.parameters[4].in": "formData",
	"paths./v3/projects/{id}/services/irker.put.parameters[4].name": "colorize_messages",
	"paths./v3/projects/{id}/services/irker.put.parameters[4].required": false,
	"paths./v3/projects/{id}/services/irker.put.parameters[4].type": "boolean",
	"paths./v3/projects/{id}/services/irker.put.parameters[5].description": "Event will be triggered by a push to the repository",
	"paths./v3/projects/{id}/services/irker.put.parameters[5].in": "formData",
	"paths./v3/projects/{id}/services/irker.put.parameters[5].name": "push_events",
	"paths./v3/projects/{id}/services/irker.put.parameters[5].required": false,
	"paths./v3/projects/{id}/services/irker.put.parameters[5].type": "string",
	"paths./v3/projects/{id}/services/irker.put.parameters[6].format": "int32",
	"paths./v3/projects/{id}/services/irker.put.parameters[6].in": "path",
	"paths./v3/projects/{id}/services/irker.put.parameters[6].name": "id",
	"paths./v3/projects/{id}/services/irker.put.parameters[6].required": true,
	"paths./v3/projects/{id}/services/irker.put.parameters[6].type": "integer",
	"paths./v3/projects/{id}/services/irker.put.produces.length": 1,
	"paths./v3/projects/{id}/services/irker.put.produces[0]": "application/json",
	"paths./v3/projects/{id}/services/irker.put.responses.200.description": "Set irker service for project",
	"paths./v3/projects/{id}/services/irker.put.summary": "Set irker service for project",
	"paths./v3/projects/{id}/services/irker.put.tags.length": 1,
	"paths./v3/projects/{id}/services/irker.put.tags[0]": "projects",
	"paths./v3/projects/{id}/services/jira.put.consumes.length": 1,
	"paths./v3/projects/{id}/services/jira.put.consumes[0]": "application/json",
	"paths./v3/projects/{id}/services/jira.put.description": "Set jira service for project",
	"paths./v3/projects/{id}/services/jira.put.operationId": "putV3ProjectsIdServicesJira",
	"paths./v3/projects/{id}/services/jira.put.parameters.length": 8,
	"paths./v3/projects/{id}/services/jira.put.parameters[0].description": "The URL to the JIRA project which is being linked to this GitLab project, e.g., https://jira.example.com",
	"paths./v3/projects/{id}/services/jira.put.parameters[0].in": "formData",
	"paths./v3/projects/{id}/services/jira.put.parameters[0].name": "url",
	"paths./v3/projects/{id}/services/jira.put.parameters[0].required": true,
	"paths./v3/projects/{id}/services/jira.put.parameters[0].type": "string",
	"paths./v3/projects/{id}/services/jira.put.parameters[1].description": "The short identifier for your JIRA project, all uppercase, e.g., PROJ",
	"paths./v3/projects/{id}/services/jira.put.parameters[1].in": "formData",
	"paths./v3/projects/{id}/services/jira.put.parameters[1].name": "project_key",
	"paths./v3/projects/{id}/services/jira.put.parameters[1].required": true,
	"paths./v3/projects/{id}/services/jira.put.parameters[1].type": "string",
	"paths./v3/projects/{id}/services/jira.put.parameters[2].description": "The username of the user created to be used with GitLab/JIRA",
	"paths./v3/projects/{id}/services/jira.put.parameters[2].in": "formData",
	"paths./v3/projects/{id}/services/jira.put.parameters[2].name": "username",
	"paths./v3/projects/{id}/services/jira.put.parameters[2].required": false,
	"paths./v3/projects/{id}/services/jira.put.parameters[2].type": "string",
	"paths./v3/projects/{id}/services/jira.put.parameters[3].description": "The password of the user created to be used with GitLab/JIRA",
	"paths./v3/projects/{id}/services/jira.put.parameters[3].in": "formData",
	"paths./v3/projects/{id}/services/jira.put.parameters[3].name": "password",
	"paths./v3/projects/{id}/services/jira.put.parameters[3].required": false,
	"paths./v3/projects/{id}/services/jira.put.parameters[3].type": "string",
	"paths./v3/projects/{id}/services/jira.put.parameters[4].description": "The ID of a transition that moves issues to a closed state. You can find this number under the JIRA workflow administration (**Administration \u003e Issues \u003e Workflows**) by selecting **View** under **Operations** of the desired workflow of your project. The ID of each state can be found inside the parenthesis of each transition name under the **Transitions (id)** column ([see screenshot][trans]). By default, this ID is set to `2`",
	"paths./v3/projects/{id}/services/jira.put.parameters[4].format": "int32",
	"paths./v3/projects/{id}/services/jira.put.parameters[4].in": "formData",
	"paths./v3/projects/{id}/services/jira.put.parameters[4].name": "jira_issue_transition_id",
	"paths./v3/projects/{id}/services/jira.put.parameters[4].required": false,
	"paths./v3/projects/{id}/services/jira.put.parameters[4].type": "integer",
	"paths./v3/projects/{id}/services/jira.put.parameters[5].description": "Event will be triggered when a commit is created/updated",
	"paths./v3/projects/{id}/services/jira.put.parameters[5].in": "formData",
	"paths./v3/projects/{id}/services/jira.put.parameters[5].name": "commit_events",
	"paths./v3/projects/{id}/services/jira.put.parameters[5].required": false,
	"paths./v3/projects/{id}/services/jira.put.parameters[5].type": "string",
	"paths./v3/projects/{id}/services/jira.put.parameters[6].description": "Event will be triggered when a merge request is created/updated/merged",
	"paths./v3/projects/{id}/services/jira.put.parameters[6].in": "formData",
	"paths./v3/projects/{id}/services/jira.put.parameters[6].name": "merge_request_events",
	"paths./v3/projects/{id}/services/jira.put.parameters[6].required": false,
	"paths./v3/projects/{id}/services/jira.put.parameters[6].type": "string",
	"paths./v3/projects/{id}/services/jira.put.parameters[7].format": "int32",
	"paths./v3/projects/{id}/services/jira.put.parameters[7].in": "path",
	"paths./v3/projects/{id}/services/jira.put.parameters[7].name": "id",
	"paths./v3/projects/{id}/services/jira.put.parameters[7].required": true,
	"paths./v3/projects/{id}/services/jira.put.parameters[7].type": "integer",
	"paths./v3/projects/{id}/services/jira.put.produces.length": 1,
	"paths./v3/projects/{id}/services/jira.put.produces[0]": "application/json",
	"paths./v3/projects/{id}/services/jira.put.responses.200.description": "Set jira service for project",
	"paths./v3/projects/{id}/services/jira.put.summary": "Set jira service for project",
	"paths./v3/projects/{id}/services/jira.put.tags.length": 1,
	"paths./v3/projects/{id}/services/jira.put.tags[0]": "projects",
	"paths./v3/projects/{id}/services/kubernetes.put.consumes.length": 1,
	"paths./v3/projects/{id}/services/kubernetes.put.consumes[0]": "application/json",
	"paths./v3/projects/{id}/services/kubernetes.put.description": "Set kubernetes service for project",
	"paths./v3/projects/{id}/services/kubernetes.put.operationId": "putV3ProjectsIdServicesKubernetes",
	"paths./v3/projects/{id}/services/kubernetes.put.parameters.length": 5,
	"paths./v3/projects/{id}/services/kubernetes.put.parameters[0].description": "The Kubernetes namespace to use",
	"paths./v3/projects/{id}/services/kubernetes.put.parameters[0].in": "formData",
	"paths./v3/projects/{id}/services/kubernetes.put.parameters[0].name": "namespace",
	"paths./v3/projects/{id}/services/kubernetes.put.parameters[0].required": true,
	"paths./v3/projects/{id}/services/kubernetes.put.parameters[0].type": "string",
	"paths./v3/projects/{id}/services/kubernetes.put.parameters[1].description": "The URL to the Kubernetes cluster API, e.g., https://kubernetes.example.com",
	"paths./v3/projects/{id}/services/kubernetes.put.parameters[1].in": "formData",
	"paths./v3/projects/{id}/services/kubernetes.put.parameters[1].name": "api_url",
	"paths./v3/projects/{id}/services/kubernetes.put.parameters[1].required": true,
	"paths./v3/projects/{id}/services/kubernetes.put.parameters[1].type": "string",
	"paths./v3/projects/{id}/services/kubernetes.put.parameters[2].description": "The service token to authenticate against the Kubernetes cluster with",
	"paths./v3/projects/{id}/services/kubernetes.put.parameters[2].in": "formData",
	"paths./v3/projects/{id}/services/kubernetes.put.parameters[2].name": "token",
	"paths./v3/projects/{id}/services/kubernetes.put.parameters[2].required": true,
	"paths./v3/projects/{id}/services/kubernetes.put.parameters[2].type": "string",
	"paths./v3/projects/{id}/services/kubernetes.put.parameters[3].description": "A custom certificate authority bundle to verify the Kubernetes cluster with (PEM format)",
	"paths./v3/projects/{id}/services/kubernetes.put.parameters[3].in": "formData",
	"paths./v3/projects/{id}/services/kubernetes.put.parameters[3].name": "ca_pem",
	"paths./v3/projects/{id}/services/kubernetes.put.parameters[3].required": false,
	"paths./v3/projects/{id}/services/kubernetes.put.parameters[3].type": "string",
	"paths./v3/projects/{id}/services/kubernetes.put.parameters[4].format": "int32",
	"paths./v3/projects/{id}/services/kubernetes.put.parameters[4].in": "path",
	"paths./v3/projects/{id}/services/kubernetes.put.parameters[4].name": "id",
	"paths./v3/projects/{id}/services/kubernetes.put.parameters[4].required": true,
	"paths./v3/projects/{id}/services/kubernetes.put.parameters[4].type": "integer",
	"paths./v3/projects/{id}/services/kubernetes.put.produces.length": 1,
	"paths./v3/projects/{id}/services/kubernetes.put.produces[0]": "application/json",
	"paths./v3/projects/{id}/services/kubernetes.put.responses.200.description": "Set kubernetes service for project",
	"paths./v3/projects/{id}/services/kubernetes.put.summary": "Set kubernetes service for project",
	"paths./v3/projects/{id}/services/kubernetes.put.tags.length": 1,
	"paths./v3/projects/{id}/services/kubernetes.put.tags[0]": "projects",
	"paths./v3/projects/{id}/services/mattermost-slash-commands.put.consumes.length": 1,
	"paths./v3/projects/{id}/services/mattermost-slash-commands.put.consumes[0]": "application/json",
	"paths./v3/projects/{id}/services/mattermost-slash-commands.put.description": "Set mattermost-slash-commands service for project",
	"paths./v3/projects/{id}/services/mattermost-slash-commands.put.operationId": "putV3ProjectsIdServicesMattermostSlashCommands",
	"paths./v3/projects/{id}/services/mattermost-slash-commands.put.parameters.length": 2,
	"paths./v3/projects/{id}/services/mattermost-slash-commands.put.parameters[0].description": "The Mattermost token",
	"paths./v3/projects/{id}/services/mattermost-slash-commands.put.parameters[0].in": "formData",
	"paths./v3/projects/{id}/services/mattermost-slash-commands.put.parameters[0].name": "token",
	"paths./v3/projects/{id}/services/mattermost-slash-commands.put.parameters[0].required": true,
	"paths./v3/projects/{id}/services/mattermost-slash-commands.put.parameters[0].type": "string",
	"paths./v3/projects/{id}/services/mattermost-slash-commands.put.parameters[1].format": "int32",
	"paths./v3/projects/{id}/services/mattermost-slash-commands.put.parameters[1].in": "path",
	"paths./v3/projects/{id}/services/mattermost-slash-commands.put.parameters[1].name": "id",
	"paths./v3/projects/{id}/services/mattermost-slash-commands.put.parameters[1].required": true,
	"paths./v3/projects/{id}/services/mattermost-slash-commands.put.parameters[1].type": "integer",
	"paths./v3/projects/{id}/services/mattermost-slash-commands.put.produces.length": 1,
	"paths./v3/projects/{id}/services/mattermost-slash-commands.put.produces[0]": "application/json",
	"paths./v3/projects/{id}/services/mattermost-slash-commands.put.responses.200.description": "Set mattermost-slash-commands service for project",
	"paths./v3/projects/{id}/services/mattermost-slash-commands.put.summary": "Set mattermost-slash-commands service for project",
	"paths./v3/projects/{id}/services/mattermost-slash-commands.put.tags.length": 1,
	"paths./v3/projects/{id}/services/mattermost-slash-commands.put.tags[0]": "projects",
	"paths./v3/projects/{id}/services/mattermost.put.consumes.length": 1,
	"paths./v3/projects/{id}/services/mattermost.put.consumes[0]": "application/json",
	"paths./v3/projects/{id}/services/mattermost.put.description": "Set mattermost service for project",
	"paths./v3/projects/{id}/services/mattermost.put.operationId": "putV3ProjectsIdServicesMattermost",
	"paths./v3/projects/{id}/services/mattermost.put.parameters.length": 11,
	"paths./v3/projects/{id}/services/mattermost.put.parameters[0].description": "The Mattermost webhook. e.g. http://mattermost_host/hooks/...",
	"paths./v3/projects/{id}/services/mattermost.put.parameters[0].in": "formData",
	"paths./v3/projects/{id}/services/mattermost.put.parameters[0].name": "webhook",
	"paths./v3/projects/{id}/services/mattermost.put.parameters[0].required": true,
	"paths./v3/projects/{id}/services/mattermost.put.parameters[0].type": "string",
	"paths./v3/projects/{id}/services/mattermost.put.parameters[10].format": "int32",
	"paths./v3/projects/{id}/services/mattermost.put.parameters[10].in": "path",
	"paths./v3/projects/{id}/services/mattermost.put.parameters[10].name": "id",
	"paths./v3/projects/{id}/services/mattermost.put.parameters[10].required": true,
	"paths./v3/projects/{id}/services/mattermost.put.parameters[10].type": "integer",
	"paths./v3/projects/{id}/services/mattermost.put.parameters[1].description": "Event will be triggered by a push to the repository",
	"paths./v3/projects/{id}/services/mattermost.put.parameters[1].in": "formData",
	"paths./v3/projects/{id}/services/mattermost.put.parameters[1].name": "push_events",
	"paths./v3/projects/{id}/services/mattermost.put.parameters[1].required": false,
	"paths./v3/projects/{id}/services/mattermost.put.parameters[1].type": "string",
	"paths./v3/projects/{id}/services/mattermost.put.parameters[2].description": "Event will be triggered when an issue is created/updated/closed",
	"paths./v3/projects/{id}/services/mattermost.put.parameters[2].in": "formData",
	"paths./v3/projects/{id}/services/mattermost.put.parameters[2].name": "issue_events",
	"paths./v3/projects/{id}/services/mattermost.put.parameters[2].required": false,
	"paths./v3/projects/{id}/services/mattermost.put.parameters[2].type": "string",
	"paths./v3/projects/{id}/services/mattermost.put.parameters[3].description": "Event will be triggered when a confidential issue is created/updated/closed",
	"paths./v3/projects/{id}/services/mattermost.put.parameters[3].in": "formData",
	"paths./v3/projects/{id}/services/mattermost.put.parameters[3].name": "confidential_issue_events",
	"paths./v3/projects/{id}/services/mattermost.put.parameters[3].required": false,
	"paths./v3/projects/{id}/services/mattermost.put.parameters[3].type": "string",
	"paths./v3/projects/{id}/services/mattermost.put.parameters[4].description": "Event will be triggered when a merge request is created/updated/merged",
	"paths./v3/projects/{id}/services/mattermost.put.parameters[4].in": "formData",
	"paths./v3/projects/{id}/services/mattermost.put.parameters[4].name": "merge_request_events",
	"paths./v3/projects/{id}/services/mattermost.put.parameters[4].required": false,
	"paths./v3/projects/{id}/services/mattermost.put.parameters[4].type": "string",
	"paths./v3/projects/{id}/services/mattermost.put.parameters[5].description": "Event will be triggered when someone adds a comment",
	"paths./v3/projects/{id}/services/mattermost.put.parameters[5].in": "formData",
	"paths./v3/projects/{id}/services/mattermost.put.parameters[5].name": "note_events",
	"paths./v3/projects/{id}/services/mattermost.put.parameters[5].required": false,
	"paths./v3/projects/{id}/services/mattermost.put.parameters[5].type": "string",
	"paths./v3/projects/{id}/services/mattermost.put.parameters[6].description": "Event will be triggered when a new tag is pushed to the repository",
	"paths./v3/projects/{id}/services/mattermost.put.parameters[6].in": "formData",
	"paths./v3/projects/{id}/services/mattermost.put.parameters[6].name": "tag_push_events",
	"paths./v3/projects/{id}/services/mattermost.put.parameters[6].required": false,
	"paths./v3/projects/{id}/services/mattermost.put.parameters[6].type": "string",
	"paths./v3/projects/{id}/services/mattermost.put.parameters[7].description": "Event will be triggered when a build status changes",
	"paths./v3/projects/{id}/services/mattermost.put.parameters[7].in": "formData",
	"paths./v3/projects/{id}/services/mattermost.put.parameters[7].name": "build_events",
	"paths./v3/projects/{id}/services/mattermost.put.parameters[7].required": false,
	"paths./v3/projects/{id}/services/mattermost.put.parameters[7].type": "string",
	"paths./v3/projects/{id}/services/mattermost.put.parameters[8].in": "formData",
	"paths./v3/projects/{id}/services/mattermost.put.parameters[8].name": "pipeline_events",
	"paths./v3/projects/{id}/services/mattermost.put.parameters[8].required": false,
	"paths./v3/projects/{id}/services/mattermost.put.parameters[8].type": "string",
	"paths./v3/projects/{id}/services/mattermost.put.parameters[9].description": "Event will be triggered when a wiki page is created/updated",
	"paths./v3/projects/{id}/services/mattermost.put.parameters[9].in": "formData",
	"paths./v3/projects/{id}/services/mattermost.put.parameters[9].name": "wiki_page_events",
	"paths./v3/projects/{id}/services/mattermost.put.parameters[9].required": false,
	"paths./v3/projects/{id}/services/mattermost.put.parameters[9].type": "string",
	"paths./v3/projects/{id}/services/mattermost.put.produces.length": 1,
	"paths./v3/projects/{id}/services/mattermost.put.produces[0]": "application/json",
	"paths./v3/projects/{id}/services/mattermost.put.responses.200.description": "Set mattermost service for project",
	"paths./v3/projects/{id}/services/mattermost.put.summary": "Set mattermost service for project",
	"paths./v3/projects/{id}/services/mattermost.put.tags.length": 1,
	"paths./v3/projects/{id}/services/mattermost.put.tags[0]": "projects",
	"paths./v3/projects/{id}/services/mattermost_slash_commands/trigger.post.consumes.length": 1,
	"paths./v3/projects/{id}/services/mattermost_slash_commands/trigger.post.consumes[0]": "application/json",
	"paths./v3/projects/{id}/services/mattermost_slash_commands/trigger.post.description": "Added in GitLab 8.13",
	"paths./v3/projects/{id}/services/mattermost_slash_commands/trigger.post.operationId": "postV3ProjectsIdServicesMattermostSlashCommandsTrigger",
	"paths./v3/projects/{id}/services/mattermost_slash_commands/trigger.post.parameters.length": 2,
	"paths./v3/projects/{id}/services/mattermost_slash_commands/trigger.post.parameters[0].description": "The ID of a project",
	"paths./v3/projects/{id}/services/mattermost_slash_commands/trigger.post.parameters[0].in": "path",
	"paths./v3/projects/{id}/services/mattermost_slash_commands/trigger.post.parameters[0].name": "id",
	"paths./v3/projects/{id}/services/mattermost_slash_commands/trigger.post.parameters[0].required": true,
	"paths./v3/projects/{id}/services/mattermost_slash_commands/trigger.post.parameters[0].type": "string",
	"paths./v3/projects/{id}/services/mattermost_slash_commands/trigger.post.parameters[1].description": "The Mattermost token",
	"paths./v3/projects/{id}/services/mattermost_slash_commands/trigger.post.parameters[1].in": "formData",
	"paths./v3/projects/{id}/services/mattermost_slash_commands/trigger.post.parameters[1].name": "token",
	"paths./v3/projects/{id}/services/mattermost_slash_commands/trigger.post.parameters[1].required": true,
	"paths./v3/projects/{id}/services/mattermost_slash_commands/trigger.post.parameters[1].type": "string",
	"paths./v3/projects/{id}/services/mattermost_slash_commands/trigger.post.produces.length": 1,
	"paths./v3/projects/{id}/services/mattermost_slash_commands/trigger.post.produces[0]": "application/json",
	"paths./v3/projects/{id}/services/mattermost_slash_commands/trigger.post.responses.201.description": "Trigger a slash command for mattermost-slash-commands",
	"paths./v3/projects/{id}/services/mattermost_slash_commands/trigger.post.summary": "Trigger a slash command for mattermost-slash-commands",
	"paths./v3/projects/{id}/services/mattermost_slash_commands/trigger.post.tags.length": 1,
	"paths./v3/projects/{id}/services/mattermost_slash_commands/trigger.post.tags[0]": "projects",
	"paths./v3/projects/{id}/services/pipelines-email.put.consumes.length": 1,
	"paths./v3/projects/{id}/services/pipelines-email.put.consumes[0]": "application/json",
	"paths./v3/projects/{id}/services/pipelines-email.put.description": "Set pipelines-email service for project",
	"paths./v3/projects/{id}/services/pipelines-email.put.operationId": "putV3ProjectsIdServicesPipelinesEmail",
	"paths./v3/projects/{id}/services/pipelines-email.put.parameters.length": 4,
	"paths./v3/projects/{id}/services/pipelines-email.put.parameters[0].description": "Comma-separated list of recipient email addresses",
	"paths./v3/projects/{id}/services/pipelines-email.put.parameters[0].in": "formData",
	"paths./v3/projects/{id}/services/pipelines-email.put.parameters[0].name": "recipients",
	"paths./v3/projects/{id}/services/pipelines-email.put.parameters[0].required": true,
	"paths./v3/projects/{id}/services/pipelines-email.put.parameters[0].type": "string",
	"paths./v3/projects/{id}/services/pipelines-email.put.parameters[1].description": "Notify only broken builds",
	"paths./v3/projects/{id}/services/pipelines-email.put.parameters[1].in": "formData",
	"paths./v3/projects/{id}/services/pipelines-email.put.parameters[1].name": "notify_only_broken_builds",
	"paths./v3/projects/{id}/services/pipelines-email.put.parameters[1].required": false,
	"paths./v3/projects/{id}/services/pipelines-email.put.parameters[1].type": "boolean",
	"paths./v3/projects/{id}/services/pipelines-email.put.parameters[2].in": "formData",
	"paths./v3/projects/{id}/services/pipelines-email.put.parameters[2].name": "pipeline_events",
	"paths./v3/projects/{id}/services/pipelines-email.put.parameters[2].required": false,
	"paths./v3/projects/{id}/services/pipelines-email.put.parameters[2].type": "string",
	"paths./v3/projects/{id}/services/pipelines-email.put.parameters[3].format": "int32",
	"paths./v3/projects/{id}/services/pipelines-email.put.parameters[3].in": "path",
	"paths./v3/projects/{id}/services/pipelines-email.put.parameters[3].name": "id",
	"paths./v3/projects/{id}/services/pipelines-email.put.parameters[3].required": true,
	"paths./v3/projects/{id}/services/pipelines-email.put.parameters[3].type": "integer",
	"paths./v3/projects/{id}/services/pipelines-email.put.produces.length": 1,
	"paths./v3/projects/{id}/services/pipelines-email.put.produces[0]": "application/json",
	"paths./v3/projects/{id}/services/pipelines-email.put.responses.200.description": "Set pipelines-email service for project",
	"paths./v3/projects/{id}/services/pipelines-email.put.summary": "Set pipelines-email service for project",
	"paths./v3/projects/{id}/services/pipelines-email.put.tags.length": 1,
	"paths./v3/projects/{id}/services/pipelines-email.put.tags[0]": "projects",
	"paths./v3/projects/{id}/services/pivotaltracker.put.consumes.length": 1,
	"paths./v3/projects/{id}/services/pivotaltracker.put.consumes[0]": "application/json",
	"paths./v3/projects/{id}/services/pivotaltracker.put.description": "Set pivotaltracker service for project",
	"paths./v3/projects/{id}/services/pivotaltracker.put.operationId": "putV3ProjectsIdServicesPivotaltracker",
	"paths./v3/projects/{id}/services/pivotaltracker.put.parameters.length": 4,
	"paths./v3/projects/{id}/services/pivotaltracker.put.parameters[0].description": "The Pivotaltracker token",
	"paths./v3/projects/{id}/services/pivotaltracker.put.parameters[0].in": "formData",
	"paths./v3/projects/{id}/services/pivotaltracker.put.parameters[0].name": "token",
	"paths./v3/projects/{id}/services/pivotaltracker.put.parameters[0].required": true,
	"paths./v3/projects/{id}/services/pivotaltracker.put.parameters[0].type": "string",
	"paths./v3/projects/{id}/services/pivotaltracker.put.parameters[1].description": "Comma-separated list of branches which will be automatically inspected. Leave blank to include all branches.",
	"paths./v3/projects/{id}/services/pivotaltracker.put.parameters[1].in": "formData",
	"paths./v3/projects/{id}/services/pivotaltracker.put.parameters[1].name": "restrict_to_branch",
	"paths./v3/projects/{id}/services/pivotaltracker.put.parameters[1].required": false,
	"paths./v3/projects/{id}/services/pivotaltracker.put.parameters[1].type": "string",
	"paths./v3/projects/{id}/services/pivotaltracker.put.parameters[2].description": "Event will be triggered by a push to the repository",
	"paths./v3/projects/{id}/services/pivotaltracker.put.parameters[2].in": "formData",
	"paths./v3/projects/{id}/services/pivotaltracker.put.parameters[2].name": "push_events",
	"paths./v3/projects/{id}/services/pivotaltracker.put.parameters[2].required": false,
	"paths./v3/projects/{id}/services/pivotaltracker.put.parameters[2].type": "string",
	"paths./v3/projects/{id}/services/pivotaltracker.put.parameters[3].format": "int32",
	"paths./v3/projects/{id}/services/pivotaltracker.put.parameters[3].in": "path",
	"paths./v3/projects/{id}/services/pivotaltracker.put.parameters[3].name": "id",
	"paths./v3/projects/{id}/services/pivotaltracker.put.parameters[3].required": true,
	"paths./v3/projects/{id}/services/pivotaltracker.put.parameters[3].type": "integer",
	"paths./v3/projects/{id}/services/pivotaltracker.put.produces.length": 1,
	"paths./v3/projects/{id}/services/pivotaltracker.put.produces[0]": "application/json",
	"paths./v3/projects/{id}/services/pivotaltracker.put.responses.200.description": "Set pivotaltracker service for project",
	"paths./v3/projects/{id}/services/pivotaltracker.put.summary": "Set pivotaltracker service for project",
	"paths./v3/projects/{id}/services/pivotaltracker.put.tags.length": 1,
	"paths./v3/projects/{id}/services/pivotaltracker.put.tags[0]": "projects",
	"paths./v3/projects/{id}/services/pushover.put.consumes.length": 1,
	"paths./v3/projects/{id}/services/pushover.put.consumes[0]": "application/json",
	"paths./v3/projects/{id}/services/pushover.put.description": "Set pushover service for project",
	"paths./v3/projects/{id}/services/pushover.put.operationId": "putV3ProjectsIdServicesPushover",
	"paths./v3/projects/{id}/services/pushover.put.parameters.length": 7,
	"paths./v3/projects/{id}/services/pushover.put.parameters[0].description": "The application key",
	"paths./v3/projects/{id}/services/pushover.put.parameters[0].in": "formData",
	"paths./v3/projects/{id}/services/pushover.put.parameters[0].name": "api_key",
	"paths./v3/projects/{id}/services/pushover.put.parameters[0].required": true,
	"paths./v3/projects/{id}/services/pushover.put.parameters[0].type": "string",
	"paths./v3/projects/{id}/services/pushover.put.parameters[1].description": "The user key",
	"paths./v3/projects/{id}/services/pushover.put.parameters[1].in": "formData",
	"paths./v3/projects/{id}/services/pushover.put.parameters[1].name": "user_key",
	"paths./v3/projects/{id}/services/pushover.put.parameters[1].required": true,
	"paths./v3/projects/{id}/services/pushover.put.parameters[1].type": "string",
	"paths./v3/projects/{id}/services/pushover.put.parameters[2].description": "The priority",
	"paths./v3/projects/{id}/services/pushover.put.parameters[2].in": "formData",
	"paths./v3/projects/{id}/services/pushover.put.parameters[2].name": "priority",
	"paths./v3/projects/{id}/services/pushover.put.parameters[2].required": true,
	"paths./v3/projects/{id}/services/pushover.put.parameters[2].type": "string",
	"paths./v3/projects/{id}/services/pushover.put.parameters[3].description": "Leave blank for all active devices",
	"paths./v3/projects/{id}/services/pushover.put.parameters[3].in": "formData",
	"paths./v3/projects/{id}/services/pushover.put.parameters[3].name": "device",
	"paths./v3/projects/{id}/services/pushover.put.parameters[3].required": true,
	"paths./v3/projects/{id}/services/pushover.put.parameters[3].type": "string",
	"paths./v3/projects/{id}/services/pushover.put.parameters[4].description": "The sound of the notification",
	"paths./v3/projects/{id}/services/pushover.put.parameters[4].in": "formData",
	"paths./v3/projects/{id}/services/pushover.put.parameters[4].name": "sound",
	"paths./v3/projects/{id}/services/pushover.put.parameters[4].required": true,
	"paths./v3/projects/{id}/services/pushover.put.parameters[4].type": "string",
	"paths./v3/projects/{id}/services/pushover.put.parameters[5].description": "Event will be triggered by a push to the repository",
	"paths./v3/projects/{id}/services/pushover.put.parameters[5].in": "formData",
	"paths./v3/projects/{id}/services/pushover.put.parameters[5].name": "push_events",
	"paths./v3/projects/{id}/services/pushover.put.parameters[5].required": false,
	"paths./v3/projects/{id}/services/pushover.put.parameters[5].type": "string",
	"paths./v3/projects/{id}/services/pushover.put.parameters[6].format": "int32",
	"paths./v3/projects/{id}/services/pushover.put.parameters[6].in": "path",
	"paths./v3/projects/{id}/services/pushover.put.parameters[6].name": "id",
	"paths./v3/projects/{id}/services/pushover.put.parameters[6].required": true,
	"paths./v3/projects/{id}/services/pushover.put.parameters[6].type": "integer",
	"paths./v3/projects/{id}/services/pushover.put.produces.length": 1,
	"paths./v3/projects/{id}/services/pushover.put.produces[0]": "application/json",
	"paths./v3/projects/{id}/services/pushover.put.responses.200.description": "Set pushover service for project",
	"paths./v3/projects/{id}/services/pushover.put.summary": "Set pushover service for project",
	"paths./v3/projects/{id}/services/pushover.put.tags.length": 1,
	"paths./v3/projects/{id}/services/pushover.put.tags[0]": "projects",
	"paths./v3/projects/{id}/services/redmine.put.consumes.length": 1,
	"paths./v3/projects/{id}/services/redmine.put.consumes[0]": "application/json",
	"paths./v3/projects/{id}/services/redmine.put.description": "Set redmine service for project",
	"paths./v3/projects/{id}/services/redmine.put.operationId": "putV3ProjectsIdServicesRedmine",
	"paths./v3/projects/{id}/services/redmine.put.parameters.length": 6,
	"paths./v3/projects/{id}/services/redmine.put.parameters[0].description": "The new issue URL",
	"paths./v3/projects/{id}/services/redmine.put.parameters[0].in": "formData",
	"paths./v3/projects/{id}/services/redmine.put.parameters[0].name": "new_issue_url",
	"paths./v3/projects/{id}/services/redmine.put.parameters[0].required": true,
	"paths./v3/projects/{id}/services/redmine.put.parameters[0].type": "string",
	"paths./v3/projects/{id}/services/redmine.put.parameters[1].description": "The project URL",
	"paths./v3/projects/{id}/services/redmine.put.parameters[1].in": "formData",
	"paths./v3/projects/{id}/services/redmine.put.parameters[1].name": "project_url",
	"paths./v3/projects/{id}/services/redmine.put.parameters[1].required": true,
	"paths./v3/projects/{id}/services/redmine.put.parameters[1].type": "string",
	"paths./v3/projects/{id}/services/redmine.put.parameters[2].description": "The issues URL",
	"paths./v3/projects/{id}/services/redmine.put.parameters[2].in": "formData",
	"paths./v3/projects/{id}/services/redmine.put.parameters[2].name": "issues_url",
	"paths./v3/projects/{id}/services/redmine.put.parameters[2].required": true,
	"paths./v3/projects/{id}/services/redmine.put.parameters[2].type": "string",
	"paths./v3/projects/{id}/services/redmine.put.parameters[3].description": "The description of the tracker",
	"paths./v3/projects/{id}/services/redmine.put.parameters[3].in": "formData",
	"paths./v3/projects/{id}/services/redmine.put.parameters[3].name": "description",
	"paths./v3/projects/{id}/services/redmine.put.parameters[3].required": false,
	"paths./v3/projects/{id}/services/redmine.put.parameters[3].type": "string",
	"paths./v3/projects/{id}/services/redmine.put.parameters[4].description": "Event will be triggered by a push to the repository",
	"paths./v3/projects/{id}/services/redmine.put.parameters[4].in": "formData",
	"paths./v3/projects/{id}/services/redmine.put.parameters[4].name": "push_events",
	"paths./v3/projects/{id}/services/redmine.put.parameters[4].required": false,
	"paths./v3/projects/{id}/services/redmine.put.parameters[4].type": "string",
	"paths./v3/projects/{id}/services/redmine.put.parameters[5].format": "int32",
	"paths./v3/projects/{id}/services/redmine.put.parameters[5].in": "path",
	"paths./v3/projects/{id}/services/redmine.put.parameters[5].name": "id",
	"paths./v3/projects/{id}/services/redmine.put.parameters[5].required": true,
	"paths./v3/projects/{id}/services/redmine.put.parameters[5].type": "integer",
	"paths./v3/projects/{id}/services/redmine.put.produces.length": 1,
	"paths./v3/projects/{id}/services/redmine.put.produces[0]": "application/json",
	"paths./v3/projects/{id}/services/redmine.put.responses.200.description": "Set redmine service for project",
	"paths./v3/projects/{id}/services/redmine.put.summary": "Set redmine service for project",
	"paths./v3/projects/{id}/services/redmine.put.tags.length": 1,
	"paths./v3/projects/{id}/services/redmine.put.tags[0]": "projects",
	"paths./v3/projects/{id}/services/slack-slash-commands.put.consumes.length": 1,
	"paths./v3/projects/{id}/services/slack-slash-commands.put.consumes[0]": "application/json",
	"paths./v3/projects/{id}/services/slack-slash-commands.put.description": "Set slack-slash-commands service for project",
	"paths./v3/projects/{id}/services/slack-slash-commands.put.operationId": "putV3ProjectsIdServicesSlackSlashCommands",
	"paths./v3/projects/{id}/services/slack-slash-commands.put.parameters.length": 2,
	"paths./v3/projects/{id}/services/slack-slash-commands.put.parameters[0].description": "The Slack token",
	"paths./v3/projects/{id}/services/slack-slash-commands.put.parameters[0].in": "formData",
	"paths./v3/projects/{id}/services/slack-slash-commands.put.parameters[0].name": "token",
	"paths./v3/projects/{id}/services/slack-slash-commands.put.parameters[0].required": true,
	"paths./v3/projects/{id}/services/slack-slash-commands.put.parameters[0].type": "string",
	"paths./v3/projects/{id}/services/slack-slash-commands.put.parameters[1].format": "int32",
	"paths./v3/projects/{id}/services/slack-slash-commands.put.parameters[1].in": "path",
	"paths./v3/projects/{id}/services/slack-slash-commands.put.parameters[1].name": "id",
	"paths./v3/projects/{id}/services/slack-slash-commands.put.parameters[1].required": true,
	"paths./v3/projects/{id}/services/slack-slash-commands.put.parameters[1].type": "integer",
	"paths./v3/projects/{id}/services/slack-slash-commands.put.produces.length": 1,
	"paths./v3/projects/{id}/services/slack-slash-commands.put.produces[0]": "application/json",
	"paths./v3/projects/{id}/services/slack-slash-commands.put.responses.200.description": "Set slack-slash-commands service for project",
	"paths./v3/projects/{id}/services/slack-slash-commands.put.summary": "Set slack-slash-commands service for project",
	"paths./v3/projects/{id}/services/slack-slash-commands.put.tags.length": 1,
	"paths./v3/projects/{id}/services/slack-slash-commands.put.tags[0]": "projects",
	"paths./v3/projects/{id}/services/slack.put.consumes.length": 1,
	"paths./v3/projects/{id}/services/slack.put.consumes[0]": "application/json",
	"paths./v3/projects/{id}/services/slack.put.description": "Set slack service for project",
	"paths./v3/projects/{id}/services/slack.put.operationId": "putV3ProjectsIdServicesSlack",
	"paths./v3/projects/{id}/services/slack.put.parameters.length": 13,
	"paths./v3/projects/{id}/services/slack.put.parameters[0].description": "The Slack webhook. e.g. https://hooks.slack.com/services/...",
	"paths./v3/projects/{id}/services/slack.put.parameters[0].in": "formData",
	"paths./v3/projects/{id}/services/slack.put.parameters[0].name": "webhook",
	"paths./v3/projects/{id}/services/slack.put.parameters[0].required": true,
	"paths./v3/projects/{id}/services/slack.put.parameters[0].type": "string",
	"paths./v3/projects/{id}/services/slack.put.parameters[10].in": "formData",
	"paths./v3/projects/{id}/services/slack.put.parameters[10].name": "pipeline_events",
	"paths./v3/projects/{id}/services/slack.put.parameters[10].required": false,
	"paths./v3/projects/{id}/services/slack.put.parameters[10].type": "string",
	"paths./v3/projects/{id}/services/slack.put.parameters[11].description": "Event will be triggered when a wiki page is created/updated",
	"paths./v3/projects/{id}/services/slack.put.parameters[11].in": "formData",
	"paths./v3/projects/{id}/services/slack.put.parameters[11].name": "wiki_page_events",
	"paths./v3/projects/{id}/services/slack.put.parameters[11].required": false,
	"paths./v3/projects/{id}/services/slack.put.parameters[11].type": "string",
	"paths./v3/projects/{id}/services/slack.put.parameters[12].format": "int32",
	"paths./v3/projects/{id}/services/slack.put.parameters[12].in": "path",
	"paths./v3/projects/{id}/services/slack.put.parameters[12].name": "id",
	"paths./v3/projects/{id}/services/slack.put.parameters[12].required": true,
	"paths./v3/projects/{id}/services/slack.put.parameters[12].type": "integer",
	"paths./v3/projects/{id}/services/slack.put.parameters[1].description": "The user name",
	"paths./v3/projects/{id}/services/slack.put.parameters[1].in": "formData",
	"paths./v3/projects/{id}/services/slack.put.parameters[1].name": "new_issue_url",
	"paths./v3/projects/{id}/services/slack.put.parameters[1].required": false,
	"paths./v3/projects/{id}/services/slack.put.parameters[1].type": "string",
	"paths./v3/projects/{id}/services/slack.put.parameters[2].description": "The channel name",
	"paths./v3/projects/{id}/services/slack.put.parameters[2].in": "formData",
	"paths./v3/projects/{id}/services/slack.put.parameters[2].name": "channel",
	"paths./v3/projects/{id}/services/slack.put.parameters[2].required": false,
	"paths./v3/projects/{id}/services/slack.put.parameters[2].type": "string",
	"paths./v3/projects/{id}/services/slack.put.parameters[3].description": "Event will be triggered by a push to the repository",
	"paths./v3/projects/{id}/services/slack.put.parameters[3].in": "formData",
	"paths./v3/projects/{id}/services/slack.put.parameters[3].name": "push_events",
	"paths./v3/projects/{id}/services/slack.put.parameters[3].required": false,
	"paths./v3/projects/{id}/services/slack.put.parameters[3].type": "string",
	"paths./v3/projects/{id}/services/slack.put.parameters[4].description": "Event will be triggered when an issue is created/updated/closed",
	"paths./v3/projects/{id}/services/slack.put.parameters[4].in": "formData",
	"paths./v3/projects/{id}/services/slack.put.parameters[4].name": "issue_events",
	"paths./v3/projects/{id}/services/slack.put.parameters[4].required": false,
	"paths./v3/projects/{id}/services/slack.put.parameters[4].type": "string",
	"paths./v3/projects/{id}/services/slack.put.parameters[5].description": "Event will be triggered when a confidential issue is created/updated/closed",
	"paths./v3/projects/{id}/services/slack.put.parameters[5].in": "formData",
	"paths./v3/projects/{id}/services/slack.put.parameters[5].name": "confidential_issue_events",
	"paths./v3/projects/{id}/services/slack.put.parameters[5].required": false,
	"paths./v3/projects/{id}/services/slack.put.parameters[5].type": "string",
	"paths./v3/projects/{id}/services/slack.put.parameters[6].description": "Event will be triggered when a merge request is created/updated/merged",
	"paths./v3/projects/{id}/services/slack.put.parameters[6].in": "formData",
	"paths./v3/projects/{id}/services/slack.put.parameters[6].name": "merge_request_events",
	"paths./v3/projects/{id}/services/slack.put.parameters[6].required": false,
	"paths./v3/projects/{id}/services/slack.put.parameters[6].type": "string",
	"paths./v3/projects/{id}/services/slack.put.parameters[7].description": "Event will be triggered when someone adds a comment",
	"paths./v3/projects/{id}/services/slack.put.parameters[7].in": "formData",
	"paths./v3/projects/{id}/services/slack.put.parameters[7].name": "note_events",
	"paths./v3/projects/{id}/services/slack.put.parameters[7].required": false,
	"paths./v3/projects/{id}/services/slack.put.parameters[7].type": "string",
	"paths./v3/projects/{id}/services/slack.put.parameters[8].description": "Event will be triggered when a new tag is pushed to the repository",
	"paths./v3/projects/{id}/services/slack.put.parameters[8].in": "formData",
	"paths./v3/projects/{id}/services/slack.put.parameters[8].name": "tag_push_events",
	"paths./v3/projects/{id}/services/slack.put.parameters[8].required": false,
	"paths./v3/projects/{id}/services/slack.put.parameters[8].type": "string",
	"paths./v3/projects/{id}/services/slack.put.parameters[9].description": "Event will be triggered when a build status changes",
	"paths./v3/projects/{id}/services/slack.put.parameters[9].in": "formData",
	"paths./v3/projects/{id}/services/slack.put.parameters[9].name": "build_events",
	"paths./v3/projects/{id}/services/slack.put.parameters[9].required": false,
	"paths./v3/projects/{id}/services/slack.put.parameters[9].type": "string",
	"paths./v3/projects/{id}/services/slack.put.produces.length": 1,
	"paths./v3/projects/{id}/services/slack.put.produces[0]": "application/json",
	"paths./v3/projects/{id}/services/slack.put.responses.200.description": "Set slack service for project",
	"paths./v3/projects/{id}/services/slack.put.summary": "Set slack service for project",
	"paths./v3/projects/{id}/services/slack.put.tags.length": 1,
	"paths./v3/projects/{id}/services/slack.put.tags[0]": "projects",
	"paths./v3/projects/{id}/services/slack_slash_commands/trigger.post.consumes.length": 1,
	"paths./v3/projects/{id}/services/slack_slash_commands/trigger.post.consumes[0]": "application/json",
	"paths./v3/projects/{id}/services/slack_slash_commands/trigger.post.description": "Added in GitLab 8.13",
	"paths./v3/projects/{id}/services/slack_slash_commands/trigger.post.operationId": "postV3ProjectsIdServicesSlackSlashCommandsTrigger",
	"paths./v3/projects/{id}/services/slack_slash_commands/trigger.post.parameters.length": 2,
	"paths./v3/projects/{id}/services/slack_slash_commands/trigger.post.parameters[0].description": "The ID of a project",
	"paths./v3/projects/{id}/services/slack_slash_commands/trigger.post.parameters[0].in": "path",
	"paths./v3/projects/{id}/services/slack_slash_commands/trigger.post.parameters[0].name": "id",
	"paths./v3/projects/{id}/services/slack_slash_commands/trigger.post.parameters[0].required": true,
	"paths./v3/projects/{id}/services/slack_slash_commands/trigger.post.parameters[0].type": "string",
	"paths./v3/projects/{id}/services/slack_slash_commands/trigger.post.parameters[1].description": "The Slack token",
	"paths./v3/projects/{id}/services/slack_slash_commands/trigger.post.parameters[1].in": "formData",
	"paths./v3/projects/{id}/services/slack_slash_commands/trigger.post.parameters[1].name": "token",
	"paths./v3/projects/{id}/services/slack_slash_commands/trigger.post.parameters[1].required": true,
	"paths./v3/projects/{id}/services/slack_slash_commands/trigger.post.parameters[1].type": "string",
	"paths./v3/projects/{id}/services/slack_slash_commands/trigger.post.produces.length": 1,
	"paths./v3/projects/{id}/services/slack_slash_commands/trigger.post.produces[0]": "application/json",
	"paths./v3/projects/{id}/services/slack_slash_commands/trigger.post.responses.201.description": "Trigger a slash command for slack-slash-commands",
	"paths./v3/projects/{id}/services/slack_slash_commands/trigger.post.summary": "Trigger a slash command for slack-slash-commands",
	"paths./v3/projects/{id}/services/slack_slash_commands/trigger.post.tags.length": 1,
	"paths./v3/projects/{id}/services/slack_slash_commands/trigger.post.tags[0]": "projects",
	"paths./v3/projects/{id}/services/teamcity.put.consumes.length": 1,
	"paths./v3/projects/{id}/services/teamcity.put.consumes[0]": "application/json",
	"paths./v3/projects/{id}/services/teamcity.put.description": "Set teamcity service for project",
	"paths./v3/projects/{id}/services/teamcity.put.operationId": "putV3ProjectsIdServicesTeamcity",
	"paths./v3/projects/{id}/services/teamcity.put.parameters.length": 6,
	"paths./v3/projects/{id}/services/teamcity.put.parameters[0].description": "TeamCity root URL like https://teamcity.example.com",
	"paths./v3/projects/{id}/services/teamcity.put.parameters[0].in": "formData",
	"paths./v3/projects/{id}/services/teamcity.put.parameters[0].name": "teamcity_url",
	"paths./v3/projects/{id}/services/teamcity.put.parameters[0].required": true,
	"paths./v3/projects/{id}/services/teamcity.put.parameters[0].type": "string",
	"paths./v3/projects/{id}/services/teamcity.put.parameters[1].description": "Build configuration ID",
	"paths./v3/projects/{id}/services/teamcity.put.parameters[1].in": "formData",
	"paths./v3/projects/{id}/services/teamcity.put.parameters[1].name": "build_type",
	"paths./v3/projects/{id}/services/teamcity.put.parameters[1].required": true,
	"paths./v3/projects/{id}/services/teamcity.put.parameters[1].type": "string",
	"paths./v3/projects/{id}/services/teamcity.put.parameters[2].description": "A user with permissions to trigger a manual build",
	"paths./v3/projects/{id}/services/teamcity.put.parameters[2].in": "formData",
	"paths./v3/projects/{id}/services/teamcity.put.parameters[2].name": "username",
	"paths./v3/projects/{id}/services/teamcity.put.parameters[2].required": true,
	"paths./v3/projects/{id}/services/teamcity.put.parameters[2].type": "string",
	"paths./v3/projects/{id}/services/teamcity.put.parameters[3].description": "The password of the user",
	"paths./v3/projects/{id}/services/teamcity.put.parameters[3].in": "formData",
	"paths./v3/projects/{id}/services/teamcity.put.parameters[3].name": "password",
	"paths./v3/projects/{id}/services/teamcity.put.parameters[3].required": true,
	"paths./v3/projects/{id}/services/teamcity.put.parameters[3].type": "string",
	"paths./v3/projects/{id}/services/teamcity.put.parameters[4].description": "Event will be triggered by a push to the repository",
	"paths./v3/projects/{id}/services/teamcity.put.parameters[4].in": "formData",
	"paths./v3/projects/{id}/services/teamcity.put.parameters[4].name": "push_events",
	"paths./v3/projects/{id}/services/teamcity.put.parameters[4].required": false,
	"paths./v3/projects/{id}/services/teamcity.put.parameters[4].type": "string",
	"paths./v3/projects/{id}/services/teamcity.put.parameters[5].format": "int32",
	"paths./v3/projects/{id}/services/teamcity.put.parameters[5].in": "path",
	"paths./v3/projects/{id}/services/teamcity.put.parameters[5].name": "id",
	"paths./v3/projects/{id}/services/teamcity.put.parameters[5].required": true,
	"paths./v3/projects/{id}/services/teamcity.put.parameters[5].type": "integer",
	"paths./v3/projects/{id}/services/teamcity.put.produces.length": 1,
	"paths./v3/projects/{id}/services/teamcity.put.produces[0]": "application/json",
	"paths./v3/projects/{id}/services/teamcity.put.responses.200.description": "Set teamcity service for project",
	"paths./v3/projects/{id}/services/teamcity.put.summary": "Set teamcity service for project",
	"paths./v3/projects/{id}/services/teamcity.put.tags.length": 1,
	"paths./v3/projects/{id}/services/teamcity.put.tags[0]": "projects",
	"paths./v3/projects/{id}/services/{service_slug}.delete.description": "Delete a service for project",
	"paths./v3/projects/{id}/services/{service_slug}.delete.operationId": "deleteV3ProjectsIdServicesServiceSlug",
	"paths./v3/projects/{id}/services/{service_slug}.delete.parameters.length": 2,
	"paths./v3/projects/{id}/services/{service_slug}.delete.parameters[0].description": "The name of the service",
	"paths./v3/projects/{id}/services/{service_slug}.delete.parameters[0].enum.length": 26,
	"paths./v3/projects/{id}/services/{service_slug}.delete.parameters[0].enum[0]": "asana",
	"paths./v3/projects/{id}/services/{service_slug}.delete.parameters[0].enum[10]": "external-wiki",
	"paths./v3/projects/{id}/services/{service_slug}.delete.parameters[0].enum[11]": "flowdock",
	"paths./v3/projects/{id}/services/{service_slug}.delete.parameters[0].enum[12]": "gemnasium",
	"paths./v3/projects/{id}/services/{service_slug}.delete.parameters[0].enum[13]": "hipchat",
	"paths./v3/projects/{id}/services/{service_slug}.delete.parameters[0].enum[14]": "irker",
	"paths./v3/projects/{id}/services/{service_slug}.delete.parameters[0].enum[15]": "jira",
	"paths./v3/projects/{id}/services/{service_slug}.delete.parameters[0].enum[16]": "kubernetes",
	"paths./v3/projects/{id}/services/{service_slug}.delete.parameters[0].enum[17]": "mattermost-slash-commands",
	"paths./v3/projects/{id}/services/{service_slug}.delete.parameters[0].enum[18]": "slack-slash-commands",
	"paths./v3/projects/{id}/services/{service_slug}.delete.parameters[0].enum[19]": "pipelines-email",
	"paths./v3/projects/{id}/services/{service_slug}.delete.parameters[0].enum[1]": "assembla",
	"paths./v3/projects/{id}/services/{service_slug}.delete.parameters[0].enum[20]": "pivotaltracker",
	"paths./v3/projects/{id}/services/{service_slug}.delete.parameters[0].enum[21]": "pushover",
	"paths./v3/projects/{id}/services/{service_slug}.delete.parameters[0].enum[22]": "redmine",
	"paths./v3/projects/{id}/services/{service_slug}.delete.parameters[0].enum[23]": "slack",
	"paths./v3/projects/{id}/services/{service_slug}.delete.parameters[0].enum[24]": "mattermost",
	"paths./v3/projects/{id}/services/{service_slug}.delete.parameters[0].enum[25]": "teamcity",
	"paths./v3/projects/{id}/services/{service_slug}.delete.parameters[0].enum[2]": "bamboo",
	"paths./v3/projects/{id}/services/{service_slug}.delete.parameters[0].enum[3]": "bugzilla",
	"paths./v3/projects/{id}/services/{service_slug}.delete.parameters[0].enum[4]": "buildkite",
	"paths./v3/projects/{id}/services/{service_slug}.delete.parameters[0].enum[5]": "builds-email",
	"paths./v3/projects/{id}/services/{service_slug}.delete.parameters[0].enum[6]": "campfire",
	"paths./v3/projects/{id}/services/{service_slug}.delete.parameters[0].enum[7]": "custom-issue-tracker",
	"paths./v3/projects/{id}/services/{service_slug}.delete.parameters[0].enum[8]": "drone-ci",
	"paths./v3/projects/{id}/services/{service_slug}.delete.parameters[0].enum[9]": "emails-on-push",
	"paths./v3/projects/{id}/services/{service_slug}.delete.parameters[0].in": "path",
	"paths./v3/projects/{id}/services/{service_slug}.delete.parameters[0].name": "service_slug",
	"paths./v3/projects/{id}/services/{service_slug}.delete.parameters[0].required": true,
	"paths./v3/projects/{id}/services/{service_slug}.delete.parameters[0].type": "string",
	"paths./v3/projects/{id}/services/{service_slug}.delete.parameters[1].format": "int32",
	"paths./v3/projects/{id}/services/{service_slug}.delete.parameters[1].in": "path",
	"paths./v3/projects/{id}/services/{service_slug}.delete.parameters[1].name": "id",
	"paths./v3/projects/{id}/services/{service_slug}.delete.parameters[1].required": true,
	"paths./v3/projects/{id}/services/{service_slug}.delete.parameters[1].type": "integer",
	"paths./v3/projects/{id}/services/{service_slug}.delete.produces.length": 1,
	"paths./v3/projects/{id}/services/{service_slug}.delete.produces[0]": "application/json",
	"paths./v3/projects/{id}/services/{service_slug}.delete.responses.204.description": "Delete a service for project",
	"paths./v3/projects/{id}/services/{service_slug}.delete.summary": "Delete a service for project",
	"paths./v3/projects/{id}/services/{service_slug}.delete.tags.length": 1,
	"paths./v3/projects/{id}/services/{service_slug}.delete.tags[0]": "projects",
	"paths./v3/projects/{id}/services/{service_slug}.get.description": "Get the service settings for project",
	"paths./v3/projects/{id}/services/{service_slug}.get.operationId": "getV3ProjectsIdServicesServiceSlug",
	"paths./v3/projects/{id}/services/{service_slug}.get.parameters.length": 2,
	"paths./v3/projects/{id}/services/{service_slug}.get.parameters[0].description": "The name of the service",
	"paths./v3/projects/{id}/services/{service_slug}.get.parameters[0].enum.length": 26,
	"paths./v3/projects/{id}/services/{service_slug}.get.parameters[0].enum[0]": "asana",
	"paths./v3/projects/{id}/services/{service_slug}.get.parameters[0].enum[10]": "external-wiki",
	"paths./v3/projects/{id}/services/{service_slug}.get.parameters[0].enum[11]": "flowdock",
	"paths./v3/projects/{id}/services/{service_slug}.get.parameters[0].enum[12]": "gemnasium",
	"paths./v3/projects/{id}/services/{service_slug}.get.parameters[0].enum[13]": "hipchat",
	"paths./v3/projects/{id}/services/{service_slug}.get.parameters[0].enum[14]": "irker",
	"paths./v3/projects/{id}/services/{service_slug}.get.parameters[0].enum[15]": "jira",
	"paths./v3/projects/{id}/services/{service_slug}.get.parameters[0].enum[16]": "kubernetes",
	"paths./v3/projects/{id}/services/{service_slug}.get.parameters[0].enum[17]": "mattermost-slash-commands",
	"paths./v3/projects/{id}/services/{service_slug}.get.parameters[0].enum[18]": "slack-slash-commands",
	"paths./v3/projects/{id}/services/{service_slug}.get.parameters[0].enum[19]": "pipelines-email",
	"paths./v3/projects/{id}/services/{service_slug}.get.parameters[0].enum[1]": "assembla",
	"paths./v3/projects/{id}/services/{service_slug}.get.parameters[0].enum[20]": "pivotaltracker",
	"paths./v3/projects/{id}/services/{service_slug}.get.parameters[0].enum[21]": "pushover",
	"paths./v3/projects/{id}/services/{service_slug}.get.parameters[0].enum[22]": "redmine",
	"paths./v3/projects/{id}/services/{service_slug}.get.parameters[0].enum[23]": "slack",
	"paths./v3/projects/{id}/services/{service_slug}.get.parameters[0].enum[24]": "mattermost",
	"paths./v3/projects/{id}/services/{service_slug}.get.parameters[0].enum[25]": "teamcity",
	"paths./v3/projects/{id}/services/{service_slug}.get.parameters[0].enum[2]": "bamboo",
	"paths./v3/projects/{id}/services/{service_slug}.get.parameters[0].enum[3]": "bugzilla",
	"paths./v3/projects/{id}/services/{service_slug}.get.parameters[0].enum[4]": "buildkite",
	"paths./v3/projects/{id}/services/{service_slug}.get.parameters[0].enum[5]": "builds-email",
	"paths./v3/projects/{id}/services/{service_slug}.get.parameters[0].enum[6]": "campfire",
	"paths./v3/projects/{id}/services/{service_slug}.get.parameters[0].enum[7]": "custom-issue-tracker",
	"paths./v3/projects/{id}/services/{service_slug}.get.parameters[0].enum[8]": "drone-ci",
	"paths./v3/projects/{id}/services/{service_slug}.get.parameters[0].enum[9]": "emails-on-push",
	"paths./v3/projects/{id}/services/{service_slug}.get.parameters[0].in": "path",
	"paths./v3/projects/{id}/services/{service_slug}.get.parameters[0].name": "service_slug",
	"paths./v3/projects/{id}/services/{service_slug}.get.parameters[0].required": true,
	"paths./v3/projects/{id}/services/{service_slug}.get.parameters[0].type": "string",
	"paths./v3/projects/{id}/services/{service_slug}.get.parameters[1].format": "int32",
	"paths./v3/projects/{id}/services/{service_slug}.get.parameters[1].in": "path",
	"paths./v3/projects/{id}/services/{service_slug}.get.parameters[1].name": "id",
	"paths./v3/projects/{id}/services/{service_slug}.get.parameters[1].required": true,
	"paths./v3/projects/{id}/services/{service_slug}.get.parameters[1].type": "integer",
	"paths./v3/projects/{id}/services/{service_slug}.get.produces.length": 1,
	"paths./v3/projects/{id}/services/{service_slug}.get.produces[0]": "application/json",
	"paths./v3/projects/{id}/services/{service_slug}.get.responses.200.description": "Get the service settings for project",
	"paths./v3/projects/{id}/services/{service_slug}.get.responses.200.schema.$ref": "#/definitions/ProjectService",
	"paths./v3/projects/{id}/services/{service_slug}.get.summary": "Get the service settings for project",
	"paths./v3/projects/{id}/services/{service_slug}.get.tags.length": 1,
	"paths./v3/projects/{id}/services/{service_slug}.get.tags[0]": "projects",
	"paths./v3/projects/{id}/share.post.consumes.length": 1,
	"paths./v3/projects/{id}/share.post.consumes[0]": "application/json",
	"paths./v3/projects/{id}/share.post.description": "Share the project with a group",
	"paths./v3/projects/{id}/share.post.operationId": "postV3ProjectsIdShare",
	"paths./v3/projects/{id}/share.post.parameters.length": 4,
	"paths./v3/projects/{id}/share.post.parameters[0].description": "The ID of a project",
	"paths./v3/projects/{id}/share.post.parameters[0].in": "path",
	"paths./v3/projects/{id}/share.post.parameters[0].name": "id",
	"paths./v3/projects/{id}/share.post.parameters[0].required": true,
	"paths./v3/projects/{id}/share.post.parameters[0].type": "string",
	"paths./v3/projects/{id}/share.post.parameters[1].description": "The ID of a group",
	"paths./v3/projects/{id}/share.post.parameters[1].format": "int32",
	"paths./v3/projects/{id}/share.post.parameters[1].in": "formData",
	"paths./v3/projects/{id}/share.post.parameters[1].name": "group_id",
	"paths./v3/projects/{id}/share.post.parameters[1].required": true,
	"paths./v3/projects/{id}/share.post.parameters[1].type": "integer",
	"paths./v3/projects/{id}/share.post.parameters[2].description": "The group access level",
	"paths./v3/projects/{id}/share.post.parameters[2].enum.length": 4,
	"paths./v3/projects/{id}/share.post.parameters[2].enum[0]": 10,
	"paths./v3/projects/{id}/share.post.parameters[2].enum[1]": 20,
	"paths./v3/projects/{id}/share.post.parameters[2].enum[2]": 30,
	"paths./v3/projects/{id}/share.post.parameters[2].enum[3]": 40,
	"paths./v3/projects/{id}/share.post.parameters[2].format": "int32",
	"paths./v3/projects/{id}/share.post.parameters[2].in": "formData",
	"paths./v3/projects/{id}/share.post.parameters[2].name": "group_access",
	"paths./v3/projects/{id}/share.post.parameters[2].required": true,
	"paths./v3/projects/{id}/share.post.parameters[2].type": "integer",
	"paths./v3/projects/{id}/share.post.parameters[3].description": "Share expiration date",
	"paths./v3/projects/{id}/share.post.parameters[3].format": "date",
	"paths./v3/projects/{id}/share.post.parameters[3].in": "formData",
	"paths./v3/projects/{id}/share.post.parameters[3].name": "expires_at",
	"paths./v3/projects/{id}/share.post.parameters[3].required": false,
	"paths./v3/projects/{id}/share.post.parameters[3].type": "string",
	"paths./v3/projects/{id}/share.post.produces.length": 1,
	"paths./v3/projects/{id}/share.post.produces[0]": "application/json",
	"paths./v3/projects/{id}/share.post.responses.201.description": "Share the project with a group",
	"paths./v3/projects/{id}/share.post.responses.201.schema.$ref": "#/definitions/ProjectGroupLink",
	"paths./v3/projects/{id}/share.post.summary": "Share the project with a group",
	"paths./v3/projects/{id}/share.post.tags.length": 1,
	"paths./v3/projects/{id}/share.post.tags[0]": "projects",
	"paths./v3/projects/{id}/share/{group_id}.delete.operationId": "deleteV3ProjectsIdShareGroupId",
	"paths./v3/projects/{id}/share/{group_id}.delete.parameters.length": 2,
	"paths./v3/projects/{id}/share/{group_id}.delete.parameters[0].description": "The ID of a project",
	"paths./v3/projects/{id}/share/{group_id}.delete.parameters[0].in": "path",
	"paths./v3/projects/{id}/share/{group_id}.delete.parameters[0].name": "id",
	"paths./v3/projects/{id}/share/{group_id}.delete.parameters[0].required": true,
	"paths./v3/projects/{id}/share/{group_id}.delete.parameters[0].type": "string",
	"paths./v3/projects/{id}/share/{group_id}.delete.parameters[1].description": "The ID of the group",
	"paths./v3/projects/{id}/share/{group_id}.delete.parameters[1].format": "int32",
	"paths./v3/projects/{id}/share/{group_id}.delete.parameters[1].in": "path",
	"paths./v3/projects/{id}/share/{group_id}.delete.parameters[1].name": "group_id",
	"paths./v3/projects/{id}/share/{group_id}.delete.parameters[1].required": true,
	"paths./v3/projects/{id}/share/{group_id}.delete.parameters[1].type": "integer",
	"paths./v3/projects/{id}/share/{group_id}.delete.produces.length": 1,
	"paths./v3/projects/{id}/share/{group_id}.delete.produces[0]": "application/json",
	"paths./v3/projects/{id}/share/{group_id}.delete.responses.204.description": "deleted Share",
	"paths./v3/projects/{id}/share/{group_id}.delete.tags.length": 1,
	"paths./v3/projects/{id}/share/{group_id}.delete.tags[0]": "projects",
	"paths./v3/projects/{id}/snippets.get.description": "Get all project snippets",
	"paths./v3/projects/{id}/snippets.get.operationId": "getV3ProjectsIdSnippets",
	"paths./v3/projects/{id}/snippets.get.parameters.length": 3,
	"paths./v3/projects/{id}/snippets.get.parameters[0].description": "The ID of a project",
	"paths./v3/projects/{id}/snippets.get.parameters[0].in": "path",
	"paths./v3/projects/{id}/snippets.get.parameters[0].name": "id",
	"paths./v3/projects/{id}/snippets.get.parameters[0].required": true,
	"paths./v3/projects/{id}/snippets.get.parameters[0].type": "string",
	"paths./v3/projects/{id}/snippets.get.parameters[1].description": "Current page number",
	"paths./v3/projects/{id}/snippets.get.parameters[1].format": "int32",
	"paths./v3/projects/{id}/snippets.get.parameters[1].in": "query",
	"paths./v3/projects/{id}/snippets.get.parameters[1].name": "page",
	"paths./v3/projects/{id}/snippets.get.parameters[1].required": false,
	"paths./v3/projects/{id}/snippets.get.parameters[1].type": "integer",
	"paths./v3/projects/{id}/snippets.get.parameters[2].description": "Number of items per page",
	"paths./v3/projects/{id}/snippets.get.parameters[2].format": "int32",
	"paths./v3/projects/{id}/snippets.get.parameters[2].in": "query",
	"paths./v3/projects/{id}/snippets.get.parameters[2].name": "per_page",
	"paths./v3/projects/{id}/snippets.get.parameters[2].required": false,
	"paths./v3/projects/{id}/snippets.get.parameters[2].type": "integer",
	"paths./v3/projects/{id}/snippets.get.produces.length": 1,
	"paths./v3/projects/{id}/snippets.get.produces[0]": "application/json",
	"paths./v3/projects/{id}/snippets.get.responses.200.description": "Get all project snippets",
	"paths./v3/projects/{id}/snippets.get.responses.200.schema.$ref": "#/definitions/ProjectSnippet",
	"paths./v3/projects/{id}/snippets.get.summary": "Get all project snippets",
	"paths./v3/projects/{id}/snippets.get.tags.length": 1,
	"paths./v3/projects/{id}/snippets.get.tags[0]": "projects",
	"paths./v3/projects/{id}/snippets.post.consumes.length": 1,
	"paths./v3/projects/{id}/snippets.post.consumes[0]": "application/json",
	"paths./v3/projects/{id}/snippets.post.description": "Create a new project snippet",
	"paths./v3/projects/{id}/snippets.post.operationId": "postV3ProjectsIdSnippets",
	"paths./v3/projects/{id}/snippets.post.parameters.length": 5,
	"paths./v3/projects/{id}/snippets.post.parameters[0].description": "The ID of a project",
	"paths./v3/projects/{id}/snippets.post.parameters[0].in": "path",
	"paths./v3/projects/{id}/snippets.post.parameters[0].name": "id",
	"paths./v3/projects/{id}/snippets.post.parameters[0].required": true,
	"paths./v3/projects/{id}/snippets.post.parameters[0].type": "string",
	"paths./v3/projects/{id}/snippets.post.parameters[1].description": "The title of the snippet",
	"paths./v3/projects/{id}/snippets.post.parameters[1].in": "formData",
	"paths./v3/projects/{id}/snippets.post.parameters[1].name": "title",
	"paths./v3/projects/{id}/snippets.post.parameters[1].required": true,
	"paths./v3/projects/{id}/snippets.post.parameters[1].type": "string",
	"paths./v3/projects/{id}/snippets.post.parameters[2].description": "The file name of the snippet",
	"paths./v3/projects/{id}/snippets.post.parameters[2].in": "formData",
	"paths./v3/projects/{id}/snippets.post.parameters[2].name": "file_name",
	"paths./v3/projects/{id}/snippets.post.parameters[2].required": true,
	"paths./v3/projects/{id}/snippets.post.parameters[2].type": "string",
	"paths./v3/projects/{id}/snippets.post.parameters[3].description": "The content of the snippet",
	"paths./v3/projects/{id}/snippets.post.parameters[3].in": "formData",
	"paths./v3/projects/{id}/snippets.post.parameters[3].name": "code",
	"paths./v3/projects/{id}/snippets.post.parameters[3].required": true,
	"paths./v3/projects/{id}/snippets.post.parameters[3].type": "string",
	"paths./v3/projects/{id}/snippets.post.parameters[4].description": "The visibility level of the snippet",
	"paths./v3/projects/{id}/snippets.post.parameters[4].enum.length": 3,
	"paths./v3/projects/{id}/snippets.post.parameters[4].enum[0]": 0,
	"paths./v3/projects/{id}/snippets.post.parameters[4].enum[1]": 10,
	"paths./v3/projects/{id}/snippets.post.parameters[4].enum[2]": 20,
	"paths./v3/projects/{id}/snippets.post.parameters[4].format": "int32",
	"paths./v3/projects/{id}/snippets.post.parameters[4].in": "formData",
	"paths./v3/projects/{id}/snippets.post.parameters[4].name": "visibility_level",
	"paths./v3/projects/{id}/snippets.post.parameters[4].required": true,
	"paths./v3/projects/{id}/snippets.post.parameters[4].type": "integer",
	"paths./v3/projects/{id}/snippets.post.produces.length": 1,
	"paths./v3/projects/{id}/snippets.post.produces[0]": "application/json",
	"paths./v3/projects/{id}/snippets.post.responses.201.description": "Create a new project snippet",
	"paths./v3/projects/{id}/snippets.post.responses.201.schema.$ref": "#/definitions/ProjectSnippet",
	"paths./v3/projects/{id}/snippets.post.summary": "Create a new project snippet",
	"paths./v3/projects/{id}/snippets.post.tags.length": 1,
	"paths./v3/projects/{id}/snippets.post.tags[0]": "projects",
	"paths./v3/projects/{id}/snippets/{noteable_id}/notes.get.description": "Get a list of project +noteable+ notes",
	"paths./v3/projects/{id}/snippets/{noteable_id}/notes.get.operationId": "getV3ProjectsIdSnippetsNoteableIdNotes",
	"paths./v3/projects/{id}/snippets/{noteable_id}/notes.get.parameters.length": 4,
	"paths./v3/projects/{id}/snippets/{noteable_id}/notes.get.parameters[0].description": "The ID of a project",
	"paths./v3/projects/{id}/snippets/{noteable_id}/notes.get.parameters[0].in": "path",
	"paths./v3/projects/{id}/snippets/{noteable_id}/notes.get.parameters[0].name": "id",
	"paths./v3/projects/{id}/snippets/{noteable_id}/notes.get.parameters[0].required": true,
	"paths./v3/projects/{id}/snippets/{noteable_id}/notes.get.parameters[0].type": "string",
	"paths./v3/projects/{id}/snippets/{noteable_id}/notes.get.parameters[1].description": "The ID of the noteable",
	"paths./v3/projects/{id}/snippets/{noteable_id}/notes.get.parameters[1].format": "int32",
	"paths./v3/projects/{id}/snippets/{noteable_id}/notes.get.parameters[1].in": "path",
	"paths./v3/projects/{id}/snippets/{noteable_id}/notes.get.parameters[1].name": "noteable_id",
	"paths./v3/projects/{id}/snippets/{noteable_id}/notes.get.parameters[1].required": true,
	"paths./v3/projects/{id}/snippets/{noteable_id}/notes.get.parameters[1].type": "integer",
	"paths./v3/projects/{id}/snippets/{noteable_id}/notes.get.parameters[2].description": "Current page number",
	"paths./v3/projects/{id}/snippets/{noteable_id}/notes.get.parameters[2].format": "int32",
	"paths./v3/projects/{id}/snippets/{noteable_id}/notes.get.parameters[2].in": "query",
	"paths./v3/projects/{id}/snippets/{noteable_id}/notes.get.parameters[2].name": "page",
	"paths./v3/projects/{id}/snippets/{noteable_id}/notes.get.parameters[2].required": false,
	"paths./v3/projects/{id}/snippets/{noteable_id}/notes.get.parameters[2].type": "integer",
	"paths./v3/projects/{id}/snippets/{noteable_id}/notes.get.parameters[3].description": "Number of items per page",
	"paths./v3/projects/{id}/snippets/{noteable_id}/notes.get.parameters[3].format": "int32",
	"paths./v3/projects/{id}/snippets/{noteable_id}/notes.get.parameters[3].in": "query",
	"paths./v3/projects/{id}/snippets/{noteable_id}/notes.get.parameters[3].name": "per_page",
	"paths./v3/projects/{id}/snippets/{noteable_id}/notes.get.parameters[3].required": false,
	"paths./v3/projects/{id}/snippets/{noteable_id}/notes.get.parameters[3].type": "integer",
	"paths./v3/projects/{id}/snippets/{noteable_id}/notes.get.produces.length": 1,
	"paths./v3/projects/{id}/snippets/{noteable_id}/notes.get.produces[0]": "application/json",
	"paths./v3/projects/{id}/snippets/{noteable_id}/notes.get.responses.200.description": "Get a list of project +noteable+ notes",
	"paths./v3/projects/{id}/snippets/{noteable_id}/notes.get.responses.200.schema.$ref": "#/definitions/Note",
	"paths./v3/projects/{id}/snippets/{noteable_id}/notes.get.summary": "Get a list of project +noteable+ notes",
	"paths./v3/projects/{id}/snippets/{noteable_id}/notes.get.tags.length": 1,
	"paths./v3/projects/{id}/snippets/{noteable_id}/notes.get.tags[0]": "projects",
	"paths./v3/projects/{id}/snippets/{noteable_id}/notes.post.consumes.length": 1,
	"paths./v3/projects/{id}/snippets/{noteable_id}/notes.post.consumes[0]": "application/json",
	"paths./v3/projects/{id}/snippets/{noteable_id}/notes.post.description": "Create a new +noteable+ note",
	"paths./v3/projects/{id}/snippets/{noteable_id}/notes.post.operationId": "postV3ProjectsIdSnippetsNoteableIdNotes",
	"paths./v3/projects/{id}/snippets/{noteable_id}/notes.post.parameters.length": 4,
	"paths./v3/projects/{id}/snippets/{noteable_id}/notes.post.parameters[0].description": "The ID of a project",
	"paths./v3/projects/{id}/snippets/{noteable_id}/notes.post.parameters[0].in": "path",
	"paths./v3/projects/{id}/snippets/{noteable_id}/notes.post.parameters[0].name": "id",
	"paths./v3/projects/{id}/snippets/{noteable_id}/notes.post.parameters[0].required": true,
	"paths./v3/projects/{id}/snippets/{noteable_id}/notes.post.parameters[0].type": "string",
	"paths./v3/projects/{id}/snippets/{noteable_id}/notes.post.parameters[1].description": "The ID of the noteable",
	"paths./v3/projects/{id}/snippets/{noteable_id}/notes.post.parameters[1].format": "int32",
	"paths./v3/projects/{id}/snippets/{noteable_id}/notes.post.parameters[1].in": "path",
	"paths./v3/projects/{id}/snippets/{noteable_id}/notes.post.parameters[1].name": "noteable_id",
	"paths./v3/projects/{id}/snippets/{noteable_id}/notes.post.parameters[1].required": true,
	"paths./v3/projects/{id}/snippets/{noteable_id}/notes.post.parameters[1].type": "integer",
	"paths./v3/projects/{id}/snippets/{noteable_id}/notes.post.parameters[2].description": "The content of a note",
	"paths./v3/projects/{id}/snippets/{noteable_id}/notes.post.parameters[2].in": "formData",
	"paths./v3/projects/{id}/snippets/{noteable_id}/notes.post.parameters[2].name": "body",
	"paths./v3/projects/{id}/snippets/{noteable_id}/notes.post.parameters[2].required": true,
	"paths./v3/projects/{id}/snippets/{noteable_id}/notes.post.parameters[2].type": "string",
	"paths./v3/projects/{id}/snippets/{noteable_id}/notes.post.parameters[3].description": "The creation date of the note",
	"paths./v3/projects/{id}/snippets/{noteable_id}/notes.post.parameters[3].in": "formData",
	"paths./v3/projects/{id}/snippets/{noteable_id}/notes.post.parameters[3].name": "created_at",
	"paths./v3/projects/{id}/snippets/{noteable_id}/notes.post.parameters[3].required": false,
	"paths./v3/projects/{id}/snippets/{noteable_id}/notes.post.parameters[3].type": "string",
	"paths./v3/projects/{id}/snippets/{noteable_id}/notes.post.produces.length": 1,
	"paths./v3/projects/{id}/snippets/{noteable_id}/notes.post.produces[0]": "application/json",
	"paths./v3/projects/{id}/snippets/{noteable_id}/notes.post.responses.201.description": "Create a new +noteable+ note",
	"paths./v3/projects/{id}/snippets/{noteable_id}/notes.post.responses.201.schema.$ref": "#/definitions/Note",
	"paths./v3/projects/{id}/snippets/{noteable_id}/notes.post.summary": "Create a new +noteable+ note",
	"paths./v3/projects/{id}/snippets/{noteable_id}/notes.post.tags.length": 1,
	"paths./v3/projects/{id}/snippets/{noteable_id}/notes.post.tags[0]": "projects",
	"paths./v3/projects/{id}/snippets/{noteable_id}/notes/{note_id}.delete.description": "Delete a +noteable+ note",
	"paths./v3/projects/{id}/snippets/{noteable_id}/notes/{note_id}.delete.operationId": "deleteV3ProjectsIdSnippetsNoteableIdNotesNoteId",
	"paths./v3/projects/{id}/snippets/{noteable_id}/notes/{note_id}.delete.parameters.length": 3,
	"paths./v3/projects/{id}/snippets/{noteable_id}/notes/{note_id}.delete.parameters[0].description": "The ID of a project",
	"paths./v3/projects/{id}/snippets/{noteable_id}/notes/{note_id}.delete.parameters[0].in": "path",
	"paths./v3/projects/{id}/snippets/{noteable_id}/notes/{note_id}.delete.parameters[0].name": "id",
	"paths./v3/projects/{id}/snippets/{noteable_id}/notes/{note_id}.delete.parameters[0].required": true,
	"paths./v3/projects/{id}/snippets/{noteable_id}/notes/{note_id}.delete.parameters[0].type": "string",
	"paths./v3/projects/{id}/snippets/{noteable_id}/notes/{note_id}.delete.parameters[1].description": "The ID of the noteable",
	"paths./v3/projects/{id}/snippets/{noteable_id}/notes/{note_id}.delete.parameters[1].format": "int32",
	"paths./v3/projects/{id}/snippets/{noteable_id}/notes/{note_id}.delete.parameters[1].in": "path",
	"paths./v3/projects/{id}/snippets/{noteable_id}/notes/{note_id}.delete.parameters[1].name": "noteable_id",
	"paths./v3/projects/{id}/snippets/{noteable_id}/notes/{note_id}.delete.parameters[1].required": true,
	"paths./v3/projects/{id}/snippets/{noteable_id}/notes/{note_id}.delete.parameters[1].type": "integer",
	"paths./v3/projects/{id}/snippets/{noteable_id}/notes/{note_id}.delete.parameters[2].description": "The ID of a note",
	"paths./v3/projects/{id}/snippets/{noteable_id}/notes/{note_id}.delete.parameters[2].format": "int32",
	"paths./v3/projects/{id}/snippets/{noteable_id}/notes/{note_id}.delete.parameters[2].in": "path",
	"paths./v3/projects/{id}/snippets/{noteable_id}/notes/{note_id}.delete.parameters[2].name": "note_id",
	"paths./v3/projects/{id}/snippets/{noteable_id}/notes/{note_id}.delete.parameters[2].required": true,
	"paths./v3/projects/{id}/snippets/{noteable_id}/notes/{note_id}.delete.parameters[2].type": "integer",
	"paths./v3/projects/{id}/snippets/{noteable_id}/notes/{note_id}.delete.produces.length": 1,
	"paths./v3/projects/{id}/snippets/{noteable_id}/notes/{note_id}.delete.produces[0]": "application/json",
	"paths./v3/projects/{id}/snippets/{noteable_id}/notes/{note_id}.delete.responses.200.description": "Delete a +noteable+ note",
	"paths./v3/projects/{id}/snippets/{noteable_id}/notes/{note_id}.delete.responses.200.schema.$ref": "#/definitions/Note",
	"paths./v3/projects/{id}/snippets/{noteable_id}/notes/{note_id}.delete.summary": "Delete a +noteable+ note",
	"paths./v3/projects/{id}/snippets/{noteable_id}/notes/{note_id}.delete.tags.length": 1,
	"paths./v3/projects/{id}/snippets/{noteable_id}/notes/{note_id}.delete.tags[0]": "projects",
	"paths./v3/projects/{id}/snippets/{noteable_id}/notes/{note_id}.get.description": "Get a single +noteable+ note",
	"paths./v3/projects/{id}/snippets/{noteable_id}/notes/{note_id}.get.operationId": "getV3ProjectsIdSnippetsNoteableIdNotesNoteId",
	"paths./v3/projects/{id}/snippets/{noteable_id}/notes/{note_id}.get.parameters.length": 3,
	"paths./v3/projects/{id}/snippets/{noteable_id}/notes/{note_id}.get.parameters[0].description": "The ID of a project",
	"paths./v3/projects/{id}/snippets/{noteable_id}/notes/{note_id}.get.parameters[0].in": "path",
	"paths./v3/projects/{id}/snippets/{noteable_id}/notes/{note_id}.get.parameters[0].name": "id",
	"paths./v3/projects/{id}/snippets/{noteable_id}/notes/{note_id}.get.parameters[0].required": true,
	"paths./v3/projects/{id}/snippets/{noteable_id}/notes/{note_id}.get.parameters[0].type": "string",
	"paths./v3/projects/{id}/snippets/{noteable_id}/notes/{note_id}.get.parameters[1].description": "The ID of a note",
	"paths./v3/projects/{id}/snippets/{noteable_id}/notes/{note_id}.get.parameters[1].format": "int32",
	"paths./v3/projects/{id}/snippets/{noteable_id}/notes/{note_id}.get.parameters[1].in": "path",
	"paths./v3/projects/{id}/snippets/{noteable_id}/notes/{note_id}.get.parameters[1].name": "note_id",
	"paths./v3/projects/{id}/snippets/{noteable_id}/notes/{note_id}.get.parameters[1].required": true,
	"paths./v3/projects/{id}/snippets/{noteable_id}/notes/{note_id}.get.parameters[1].type": "integer",
	"paths./v3/projects/{id}/snippets/{noteable_id}/notes/{note_id}.get.parameters[2].description": "The ID of the noteable",
	"paths./v3/projects/{id}/snippets/{noteable_id}/notes/{note_id}.get.parameters[2].format": "int32",
	"paths./v3/projects/{id}/snippets/{noteable_id}/notes/{note_id}.get.parameters[2].in": "path",
	"paths./v3/projects/{id}/snippets/{noteable_id}/notes/{note_id}.get.parameters[2].name": "noteable_id",
	"paths./v3/projects/{id}/snippets/{noteable_id}/notes/{note_id}.get.parameters[2].required": true,
	"paths./v3/projects/{id}/snippets/{noteable_id}/notes/{note_id}.get.parameters[2].type": "integer",
	"paths./v3/projects/{id}/snippets/{noteable_id}/notes/{note_id}.get.produces.length": 1,
	"paths./v3/projects/{id}/snippets/{noteable_id}/notes/{note_id}.get.produces[0]": "application/json",
	"paths./v3/projects/{id}/snippets/{noteable_id}/notes/{note_id}.get.responses.200.description": "Get a single +noteable+ note",
	"paths./v3/projects/{id}/snippets/{noteable_id}/notes/{note_id}.get.responses.200.schema.$ref": "#/definitions/Note",
	"paths./v3/projects/{id}/snippets/{noteable_id}/notes/{note_id}.get.summary": "Get a single +noteable+ note",
	"paths./v3/projects/{id}/snippets/{noteable_id}/notes/{note_id}.get.tags.length": 1,
	"paths./v3/projects/{id}/snippets/{noteable_id}/notes/{note_id}.get.tags[0]": "projects",
	"paths./v3/projects/{id}/snippets/{noteable_id}/notes/{note_id}.put.consumes.length": 1,
	"paths./v3/projects/{id}/snippets/{noteable_id}/notes/{note_id}.put.consumes[0]": "application/json",
	"paths./v3/projects/{id}/snippets/{noteable_id}/notes/{note_id}.put.description": "Update an existing +noteable+ note",
	"paths./v3/projects/{id}/snippets/{noteable_id}/notes/{note_id}.put.operationId": "putV3ProjectsIdSnippetsNoteableIdNotesNoteId",
	"paths./v3/projects/{id}/snippets/{noteable_id}/notes/{note_id}.put.parameters.length": 4,
	"paths./v3/projects/{id}/snippets/{noteable_id}/notes/{note_id}.put.parameters[0].description": "The ID of a project",
	"paths./v3/projects/{id}/snippets/{noteable_id}/notes/{note_id}.put.parameters[0].in": "path",
	"paths./v3/projects/{id}/snippets/{noteable_id}/notes/{note_id}.put.parameters[0].name": "id",
	"paths./v3/projects/{id}/snippets/{noteable_id}/notes/{note_id}.put.parameters[0].required": true,
	"paths./v3/projects/{id}/snippets/{noteable_id}/notes/{note_id}.put.parameters[0].type": "string",
	"paths./v3/projects/{id}/snippets/{noteable_id}/notes/{note_id}.put.parameters[1].description": "The ID of the noteable",
	"paths./v3/projects/{id}/snippets/{noteable_id}/notes/{note_id}.put.parameters[1].format": "int32",
	"paths./v3/projects/{id}/snippets/{noteable_id}/notes/{note_id}.put.parameters[1].in": "path",
	"paths./v3/projects/{id}/snippets/{noteable_id}/notes/{note_id}.put.parameters[1].name": "noteable_id",
	"paths./v3/projects/{id}/snippets/{noteable_id}/notes/{note_id}.put.parameters[1].required": true,
	"paths./v3/projects/{id}/snippets/{noteable_id}/notes/{note_id}.put.parameters[1].type": "integer",
	"paths./v3/projects/{id}/snippets/{noteable_id}/notes/{note_id}.put.parameters[2].description": "The ID of a note",
	"paths./v3/projects/{id}/snippets/{noteable_id}/notes/{note_id}.put.parameters[2].format": "int32",
	"paths./v3/projects/{id}/snippets/{noteable_id}/notes/{note_id}.put.parameters[2].in": "path",
	"paths./v3/projects/{id}/snippets/{noteable_id}/notes/{note_id}.put.parameters[2].name": "note_id",
	"paths./v3/projects/{id}/snippets/{noteable_id}/notes/{note_id}.put.parameters[2].required": true,
	"paths./v3/projects/{id}/snippets/{noteable_id}/notes/{note_id}.put.parameters[2].type": "integer",
	"paths./v3/projects/{id}/snippets/{noteable_id}/notes/{note_id}.put.parameters[3].description": "The content of a note",
	"paths./v3/projects/{id}/snippets/{noteable_id}/notes/{note_id}.put.parameters[3].in": "formData",
	"paths./v3/projects/{id}/snippets/{noteable_id}/notes/{note_id}.put.parameters[3].name": "body",
	"paths./v3/projects/{id}/snippets/{noteable_id}/notes/{note_id}.put.parameters[3].required": true,
	"paths./v3/projects/{id}/snippets/{noteable_id}/notes/{note_id}.put.parameters[3].type": "string",
	"paths./v3/projects/{id}/snippets/{noteable_id}/notes/{note_id}.put.produces.length": 1,
	"paths./v3/projects/{id}/snippets/{noteable_id}/notes/{note_id}.put.produces[0]": "application/json",
	"paths./v3/projects/{id}/snippets/{noteable_id}/notes/{note_id}.put.responses.200.description": "Update an existing +noteable+ note",
	"paths./v3/projects/{id}/snippets/{noteable_id}/notes/{note_id}.put.responses.200.schema.$ref": "#/definitions/Note",
	"paths./v3/projects/{id}/snippets/{noteable_id}/notes/{note_id}.put.summary": "Update an existing +noteable+ note",
	"paths./v3/projects/{id}/snippets/{noteable_id}/notes/{note_id}.put.tags.length": 1,
	"paths./v3/projects/{id}/snippets/{noteable_id}/notes/{note_id}.put.tags[0]": "projects",
	"paths./v3/projects/{id}/snippets/{snippet_id}.delete.description": "Delete a project snippet",
	"paths./v3/projects/{id}/snippets/{snippet_id}.delete.operationId": "deleteV3ProjectsIdSnippetsSnippetId",
	"paths./v3/projects/{id}/snippets/{snippet_id}.delete.parameters.length": 2,
	"paths./v3/projects/{id}/snippets/{snippet_id}.delete.parameters[0].description": "The ID of a project",
	"paths./v3/projects/{id}/snippets/{snippet_id}.delete.parameters[0].in": "path",
	"paths./v3/projects/{id}/snippets/{snippet_id}.delete.parameters[0].name": "id",
	"paths./v3/projects/{id}/snippets/{snippet_id}.delete.parameters[0].required": true,
	"paths./v3/projects/{id}/snippets/{snippet_id}.delete.parameters[0].type": "string",
	"paths./v3/projects/{id}/snippets/{snippet_id}.delete.parameters[1].description": "The ID of a project snippet",
	"paths./v3/projects/{id}/snippets/{snippet_id}.delete.parameters[1].format": "int32",
	"paths./v3/projects/{id}/snippets/{snippet_id}.delete.parameters[1].in": "path",
	"paths./v3/projects/{id}/snippets/{snippet_id}.delete.parameters[1].name": "snippet_id",
	"paths./v3/projects/{id}/snippets/{snippet_id}.delete.parameters[1].required": true,
	"paths./v3/projects/{id}/snippets/{snippet_id}.delete.parameters[1].type": "integer",
	"paths./v3/projects/{id}/snippets/{snippet_id}.delete.produces.length": 1,
	"paths./v3/projects/{id}/snippets/{snippet_id}.delete.produces[0]": "application/json",
	"paths./v3/projects/{id}/snippets/{snippet_id}.delete.responses.204.description": "Delete a project snippet",
	"paths./v3/projects/{id}/snippets/{snippet_id}.delete.summary": "Delete a project snippet",
	"paths./v3/projects/{id}/snippets/{snippet_id}.delete.tags.length": 1,
	"paths./v3/projects/{id}/snippets/{snippet_id}.delete.tags[0]": "projects",
	"paths./v3/projects/{id}/snippets/{snippet_id}.get.description": "Get a single project snippet",
	"paths./v3/projects/{id}/snippets/{snippet_id}.get.operationId": "getV3ProjectsIdSnippetsSnippetId",
	"paths./v3/projects/{id}/snippets/{snippet_id}.get.parameters.length": 2,
	"paths./v3/projects/{id}/snippets/{snippet_id}.get.parameters[0].description": "The ID of a project",
	"paths./v3/projects/{id}/snippets/{snippet_id}.get.parameters[0].in": "path",
	"paths./v3/projects/{id}/snippets/{snippet_id}.get.parameters[0].name": "id",
	"paths./v3/projects/{id}/snippets/{snippet_id}.get.parameters[0].required": true,
	"paths./v3/projects/{id}/snippets/{snippet_id}.get.parameters[0].type": "string",
	"paths./v3/projects/{id}/snippets/{snippet_id}.get.parameters[1].description": "The ID of a project snippet",
	"paths./v3/projects/{id}/snippets/{snippet_id}.get.parameters[1].format": "int32",
	"paths./v3/projects/{id}/snippets/{snippet_id}.get.parameters[1].in": "path",
	"paths./v3/projects/{id}/snippets/{snippet_id}.get.parameters[1].name": "snippet_id",
	"paths./v3/projects/{id}/snippets/{snippet_id}.get.parameters[1].required": true,
	"paths./v3/projects/{id}/snippets/{snippet_id}.get.parameters[1].type": "integer",
	"paths./v3/projects/{id}/snippets/{snippet_id}.get.produces.length": 1,
	"paths./v3/projects/{id}/snippets/{snippet_id}.get.produces[0]": "application/json",
	"paths./v3/projects/{id}/snippets/{snippet_id}.get.responses.200.description": "Get a single project snippet",
	"paths./v3/projects/{id}/snippets/{snippet_id}.get.responses.200.schema.$ref": "#/definitions/ProjectSnippet",
	"paths./v3/projects/{id}/snippets/{snippet_id}.get.summary": "Get a single project snippet",
	"paths./v3/projects/{id}/snippets/{snippet_id}.get.tags.length": 1,
	"paths./v3/projects/{id}/snippets/{snippet_id}.get.tags[0]": "projects",
	"paths./v3/projects/{id}/snippets/{snippet_id}.put.consumes.length": 1,
	"paths./v3/projects/{id}/snippets/{snippet_id}.put.consumes[0]": "application/json",
	"paths./v3/projects/{id}/snippets/{snippet_id}.put.description": "Update an existing project snippet",
	"paths./v3/projects/{id}/snippets/{snippet_id}.put.operationId": "putV3ProjectsIdSnippetsSnippetId",
	"paths./v3/projects/{id}/snippets/{snippet_id}.put.parameters.length": 6,
	"paths./v3/projects/{id}/snippets/{snippet_id}.put.parameters[0].description": "The ID of a project",
	"paths./v3/projects/{id}/snippets/{snippet_id}.put.parameters[0].in": "path",
	"paths./v3/projects/{id}/snippets/{snippet_id}.put.parameters[0].name": "id",
	"paths./v3/projects/{id}/snippets/{snippet_id}.put.parameters[0].required": true,
	"paths./v3/projects/{id}/snippets/{snippet_id}.put.parameters[0].type": "string",
	"paths./v3/projects/{id}/snippets/{snippet_id}.put.parameters[1].description": "The ID of a project snippet",
	"paths./v3/projects/{id}/snippets/{snippet_id}.put.parameters[1].format": "int32",
	"paths./v3/projects/{id}/snippets/{snippet_id}.put.parameters[1].in": "path",
	"paths./v3/projects/{id}/snippets/{snippet_id}.put.parameters[1].name": "snippet_id",
	"paths./v3/projects/{id}/snippets/{snippet_id}.put.parameters[1].required": true,
	"paths./v3/projects/{id}/snippets/{snippet_id}.put.parameters[1].type": "integer",
	"paths./v3/projects/{id}/snippets/{snippet_id}.put.parameters[2].description": "The title of the snippet",
	"paths./v3/projects/{id}/snippets/{snippet_id}.put.parameters[2].in": "formData",
	"paths./v3/projects/{id}/snippets/{snippet_id}.put.parameters[2].name": "title",
	"paths./v3/projects/{id}/snippets/{snippet_id}.put.parameters[2].required": false,
	"paths./v3/projects/{id}/snippets/{snippet_id}.put.parameters[2].type": "string",
	"paths./v3/projects/{id}/snippets/{snippet_id}.put.parameters[3].description": "The file name of the snippet",
	"paths./v3/projects/{id}/snippets/{snippet_id}.put.parameters[3].in": "formData",
	"paths./v3/projects/{id}/snippets/{snippet_id}.put.parameters[3].name": "file_name",
	"paths./v3/projects/{id}/snippets/{snippet_id}.put.parameters[3].required": false,
	"paths./v3/projects/{id}/snippets/{snippet_id}.put.parameters[3].type": "string",
	"paths./v3/projects/{id}/snippets/{snippet_id}.put.parameters[4].description": "The content of the snippet",
	"paths./v3/projects/{id}/snippets/{snippet_id}.put.parameters[4].in": "formData",
	"paths./v3/projects/{id}/snippets/{snippet_id}.put.parameters[4].name": "code",
	"paths./v3/projects/{id}/snippets/{snippet_id}.put.parameters[4].required": false,
	"paths./v3/projects/{id}/snippets/{snippet_id}.put.parameters[4].type": "string",
	"paths./v3/projects/{id}/snippets/{snippet_id}.put.parameters[5].description": "The visibility level of the snippet",
	"paths./v3/projects/{id}/snippets/{snippet_id}.put.parameters[5].enum.length": 3,
	"paths./v3/projects/{id}/snippets/{snippet_id}.put.parameters[5].enum[0]": 0,
	"paths./v3/projects/{id}/snippets/{snippet_id}.put.parameters[5].enum[1]": 10,
	"paths./v3/projects/{id}/snippets/{snippet_id}.put.parameters[5].enum[2]": 20,
	"paths./v3/projects/{id}/snippets/{snippet_id}.put.parameters[5].format": "int32",
	"paths./v3/projects/{id}/snippets/{snippet_id}.put.parameters[5].in": "formData",
	"paths./v3/projects/{id}/snippets/{snippet_id}.put.parameters[5].name": "visibility_level",
	"paths./v3/projects/{id}/snippets/{snippet_id}.put.parameters[5].required": false,
	"paths./v3/projects/{id}/snippets/{snippet_id}.put.parameters[5].type": "integer",
	"paths./v3/projects/{id}/snippets/{snippet_id}.put.produces.length": 1,
	"paths./v3/projects/{id}/snippets/{snippet_id}.put.produces[0]": "application/json",
	"paths./v3/projects/{id}/snippets/{snippet_id}.put.responses.200.description": "Update an existing project snippet",
	"paths./v3/projects/{id}/snippets/{snippet_id}.put.responses.200.schema.$ref": "#/definitions/ProjectSnippet",
	"paths./v3/projects/{id}/snippets/{snippet_id}.put.summary": "Update an existing project snippet",
	"paths./v3/projects/{id}/snippets/{snippet_id}.put.tags.length": 1,
	"paths./v3/projects/{id}/snippets/{snippet_id}.put.tags[0]": "projects",
	"paths./v3/projects/{id}/snippets/{snippet_id}/award_emoji.get.description": "This feature was introduced in 8.9",
	"paths./v3/projects/{id}/snippets/{snippet_id}/award_emoji.get.operationId": "getV3ProjectsIdSnippetsSnippetIdAwardEmoji",
	"paths./v3/projects/{id}/snippets/{snippet_id}/award_emoji.get.parameters.length": 4,
	"paths./v3/projects/{id}/snippets/{snippet_id}/award_emoji.get.parameters[0].description": "The ID of a project",
	"paths./v3/projects/{id}/snippets/{snippet_id}/award_emoji.get.parameters[0].in": "path",
	"paths./v3/projects/{id}/snippets/{snippet_id}/award_emoji.get.parameters[0].name": "id",
	"paths./v3/projects/{id}/snippets/{snippet_id}/award_emoji.get.parameters[0].required": true,
	"paths./v3/projects/{id}/snippets/{snippet_id}/award_emoji.get.parameters[0].type": "string",
	"paths./v3/projects/{id}/snippets/{snippet_id}/award_emoji.get.parameters[1].description": "The ID of an Issue, Merge Request or Snippet",
	"paths./v3/projects/{id}/snippets/{snippet_id}/award_emoji.get.parameters[1].format": "int32",
	"paths./v3/projects/{id}/snippets/{snippet_id}/award_emoji.get.parameters[1].in": "path",
	"paths./v3/projects/{id}/snippets/{snippet_id}/award_emoji.get.parameters[1].name": "snippet_id",
	"paths./v3/projects/{id}/snippets/{snippet_id}/award_emoji.get.parameters[1].required": true,
	"paths./v3/projects/{id}/snippets/{snippet_id}/award_emoji.get.parameters[1].type": "integer",
	"paths./v3/projects/{id}/snippets/{snippet_id}/award_emoji.get.parameters[2].description": "Current page number",
	"paths./v3/projects/{id}/snippets/{snippet_id}/award_emoji.get.parameters[2].format": "int32",
	"paths./v3/projects/{id}/snippets/{snippet_id}/award_emoji.get.parameters[2].in": "query",
	"paths./v3/projects/{id}/snippets/{snippet_id}/award_emoji.get.parameters[2].name": "page",
	"paths./v3/projects/{id}/snippets/{snippet_id}/award_emoji.get.parameters[2].required": false,
	"paths./v3/projects/{id}/snippets/{snippet_id}/award_emoji.get.parameters[2].type": "integer",
	"paths./v3/projects/{id}/snippets/{snippet_id}/award_emoji.get.parameters[3].description": "Number of items per page",
	"paths./v3/projects/{id}/snippets/{snippet_id}/award_emoji.get.parameters[3].format": "int32",
	"paths./v3/projects/{id}/snippets/{snippet_id}/award_emoji.get.parameters[3].in": "query",
	"paths./v3/projects/{id}/snippets/{snippet_id}/award_emoji.get.parameters[3].name": "per_page",
	"paths./v3/projects/{id}/snippets/{snippet_id}/award_emoji.get.parameters[3].required": false,
	"paths./v3/projects/{id}/snippets/{snippet_id}/award_emoji.get.parameters[3].type": "integer",
	"paths./v3/projects/{id}/snippets/{snippet_id}/award_emoji.get.produces.length": 1,
	"paths./v3/projects/{id}/snippets/{snippet_id}/award_emoji.get.produces[0]": "application/json",
	"paths./v3/projects/{id}/snippets/{snippet_id}/award_emoji.get.responses.200.description": "Get a list of project +awardable+ award emoji",
	"paths./v3/projects/{id}/snippets/{snippet_id}/award_emoji.get.responses.200.schema.$ref": "#/definitions/AwardEmoji",
	"paths./v3/projects/{id}/snippets/{snippet_id}/award_emoji.get.summary": "Get a list of project +awardable+ award emoji",
	"paths./v3/projects/{id}/snippets/{snippet_id}/award_emoji.get.tags.length": 1,
	"paths./v3/projects/{id}/snippets/{snippet_id}/award_emoji.get.tags[0]": "projects",
	"paths./v3/projects/{id}/snippets/{snippet_id}/award_emoji.post.consumes.length": 1,
	"paths./v3/projects/{id}/snippets/{snippet_id}/award_emoji.post.consumes[0]": "application/json",
	"paths./v3/projects/{id}/snippets/{snippet_id}/award_emoji.post.description": "This feature was introduced in 8.9",
	"paths./v3/projects/{id}/snippets/{snippet_id}/award_emoji.post.operationId": "postV3ProjectsIdSnippetsSnippetIdAwardEmoji",
	"paths./v3/projects/{id}/snippets/{snippet_id}/award_emoji.post.parameters.length": 3,
	"paths./v3/projects/{id}/snippets/{snippet_id}/award_emoji.post.parameters[0].description": "The name of a award_emoji (without colons)",
	"paths./v3/projects/{id}/snippets/{snippet_id}/award_emoji.post.parameters[0].in": "formData",
	"paths./v3/projects/{id}/snippets/{snippet_id}/award_emoji.post.parameters[0].name": "name",
	"paths./v3/projects/{id}/snippets/{snippet_id}/award_emoji.post.parameters[0].required": true,
	"paths./v3/projects/{id}/snippets/{snippet_id}/award_emoji.post.parameters[0].type": "string",
	"paths./v3/projects/{id}/snippets/{snippet_id}/award_emoji.post.parameters[1].format": "int32",
	"paths./v3/projects/{id}/snippets/{snippet_id}/award_emoji.post.parameters[1].in": "path",
	"paths./v3/projects/{id}/snippets/{snippet_id}/award_emoji.post.parameters[1].name": "id",
	"paths./v3/projects/{id}/snippets/{snippet_id}/award_emoji.post.parameters[1].required": true,
	"paths./v3/projects/{id}/snippets/{snippet_id}/award_emoji.post.parameters[1].type": "integer",
	"paths./v3/projects/{id}/snippets/{snippet_id}/award_emoji.post.parameters[2].format": "int32",
	"paths./v3/projects/{id}/snippets/{snippet_id}/award_emoji.post.parameters[2].in": "path",
	"paths./v3/projects/{id}/snippets/{snippet_id}/award_emoji.post.parameters[2].name": "snippet_id",
	"paths./v3/projects/{id}/snippets/{snippet_id}/award_emoji.post.parameters[2].required": true,
	"paths./v3/projects/{id}/snippets/{snippet_id}/award_emoji.post.parameters[2].type": "integer",
	"paths./v3/projects/{id}/snippets/{snippet_id}/award_emoji.post.produces.length": 1,
	"paths./v3/projects/{id}/snippets/{snippet_id}/award_emoji.post.produces[0]": "application/json",
	"paths./v3/projects/{id}/snippets/{snippet_id}/award_emoji.post.responses.201.description": "Award a new Emoji",
	"paths./v3/projects/{id}/snippets/{snippet_id}/award_emoji.post.responses.201.schema.$ref": "#/definitions/AwardEmoji",
	"paths./v3/projects/{id}/snippets/{snippet_id}/award_emoji.post.summary": "Award a new Emoji",
	"paths./v3/projects/{id}/snippets/{snippet_id}/award_emoji.post.tags.length": 1,
	"paths./v3/projects/{id}/snippets/{snippet_id}/award_emoji.post.tags[0]": "projects",
	"paths./v3/projects/{id}/snippets/{snippet_id}/award_emoji/{award_id}.delete.description": "This feature was introduced in 8.9",
	"paths./v3/projects/{id}/snippets/{snippet_id}/award_emoji/{award_id}.delete.operationId": "deleteV3ProjectsIdSnippetsSnippetIdAwardEmojiAwardId",
	"paths./v3/projects/{id}/snippets/{snippet_id}/award_emoji/{award_id}.delete.parameters.length": 3,
	"paths./v3/projects/{id}/snippets/{snippet_id}/award_emoji/{award_id}.delete.parameters[0].description": "The ID of an award emoji",
	"paths./v3/projects/{id}/snippets/{snippet_id}/award_emoji/{award_id}.delete.parameters[0].format": "int32",
	"paths./v3/projects/{id}/snippets/{snippet_id}/award_emoji/{award_id}.delete.parameters[0].in": "path",
	"paths./v3/projects/{id}/snippets/{snippet_id}/award_emoji/{award_id}.delete.parameters[0].name": "award_id",
	"paths./v3/projects/{id}/snippets/{snippet_id}/award_emoji/{award_id}.delete.parameters[0].required": true,
	"paths./v3/projects/{id}/snippets/{snippet_id}/award_emoji/{award_id}.delete.parameters[0].type": "integer",
	"paths./v3/projects/{id}/snippets/{snippet_id}/award_emoji/{award_id}.delete.parameters[1].format": "int32",
	"paths./v3/projects/{id}/snippets/{snippet_id}/award_emoji/{award_id}.delete.parameters[1].in": "path",
	"paths./v3/projects/{id}/snippets/{snippet_id}/award_emoji/{award_id}.delete.parameters[1].name": "id",
	"paths./v3/projects/{id}/snippets/{snippet_id}/award_emoji/{award_id}.delete.parameters[1].required": true,
	"paths./v3/projects/{id}/snippets/{snippet_id}/award_emoji/{award_id}.delete.parameters[1].type": "integer",
	"paths./v3/projects/{id}/snippets/{snippet_id}/award_emoji/{award_id}.delete.parameters[2].format": "int32",
	"paths./v3/projects/{id}/snippets/{snippet_id}/award_emoji/{award_id}.delete.parameters[2].in": "path",
	"paths./v3/projects/{id}/snippets/{snippet_id}/award_emoji/{award_id}.delete.parameters[2].name": "snippet_id",
	"paths./v3/projects/{id}/snippets/{snippet_id}/award_emoji/{award_id}.delete.parameters[2].required": true,
	"paths./v3/projects/{id}/snippets/{snippet_id}/award_emoji/{award_id}.delete.parameters[2].type": "integer",
	"paths./v3/projects/{id}/snippets/{snippet_id}/award_emoji/{award_id}.delete.produces.length": 1,
	"paths./v3/projects/{id}/snippets/{snippet_id}/award_emoji/{award_id}.delete.produces[0]": "application/json",
	"paths./v3/projects/{id}/snippets/{snippet_id}/award_emoji/{award_id}.delete.responses.200.description": "Delete a +awardables+ award emoji",
	"paths./v3/projects/{id}/snippets/{snippet_id}/award_emoji/{award_id}.delete.responses.200.schema.$ref": "#/definitions/AwardEmoji",
	"paths./v3/projects/{id}/snippets/{snippet_id}/award_emoji/{award_id}.delete.summary": "Delete a +awardables+ award emoji",
	"paths./v3/projects/{id}/snippets/{snippet_id}/award_emoji/{award_id}.delete.tags.length": 1,
	"paths./v3/projects/{id}/snippets/{snippet_id}/award_emoji/{award_id}.delete.tags[0]": "projects",
	"paths./v3/projects/{id}/snippets/{snippet_id}/award_emoji/{award_id}.get.description": "This feature was introduced in 8.9",
	"paths./v3/projects/{id}/snippets/{snippet_id}/award_emoji/{award_id}.get.operationId": "getV3ProjectsIdSnippetsSnippetIdAwardEmojiAwardId",
	"paths./v3/projects/{id}/snippets/{snippet_id}/award_emoji/{award_id}.get.parameters.length": 3,
	"paths./v3/projects/{id}/snippets/{snippet_id}/award_emoji/{award_id}.get.parameters[0].description": "The ID of the award",
	"paths./v3/projects/{id}/snippets/{snippet_id}/award_emoji/{award_id}.get.parameters[0].format": "int32",
	"paths./v3/projects/{id}/snippets/{snippet_id}/award_emoji/{award_id}.get.parameters[0].in": "path",
	"paths./v3/projects/{id}/snippets/{snippet_id}/award_emoji/{award_id}.get.parameters[0].name": "award_id",
	"paths./v3/projects/{id}/snippets/{snippet_id}/award_emoji/{award_id}.get.parameters[0].required": true,
	"paths./v3/projects/{id}/snippets/{snippet_id}/award_emoji/{award_id}.get.parameters[0].type": "integer",
	"paths./v3/projects/{id}/snippets/{snippet_id}/award_emoji/{award_id}.get.parameters[1].format": "int32",
	"paths./v3/projects/{id}/snippets/{snippet_id}/award_emoji/{award_id}.get.parameters[1].in": "path",
	"paths./v3/projects/{id}/snippets/{snippet_id}/award_emoji/{award_id}.get.parameters[1].name": "id",
	"paths./v3/projects/{id}/snippets/{snippet_id}/award_emoji/{award_id}.get.parameters[1].required": true,
	"paths./v3/projects/{id}/snippets/{snippet_id}/award_emoji/{award_id}.get.parameters[1].type": "integer",
	"paths./v3/projects/{id}/snippets/{snippet_id}/award_emoji/{award_id}.get.parameters[2].format": "int32",
	"paths./v3/projects/{id}/snippets/{snippet_id}/award_emoji/{award_id}.get.parameters[2].in": "path",
	"paths./v3/projects/{id}/snippets/{snippet_id}/award_emoji/{award_id}.get.parameters[2].name": "snippet_id",
	"paths./v3/projects/{id}/snippets/{snippet_id}/award_emoji/{award_id}.get.parameters[2].required": true,
	"paths./v3/projects/{id}/snippets/{snippet_id}/award_emoji/{award_id}.get.parameters[2].type": "integer",
	"paths./v3/projects/{id}/snippets/{snippet_id}/award_emoji/{award_id}.get.produces.length": 1,
	"paths./v3/projects/{id}/snippets/{snippet_id}/award_emoji/{award_id}.get.produces[0]": "application/json",
	"paths./v3/projects/{id}/snippets/{snippet_id}/award_emoji/{award_id}.get.responses.200.description": "Get a specific award emoji",
	"paths./v3/projects/{id}/snippets/{snippet_id}/award_emoji/{award_id}.get.responses.200.schema.$ref": "#/definitions/AwardEmoji",
	"paths./v3/projects/{id}/snippets/{snippet_id}/award_emoji/{award_id}.get.summary": "Get a specific award emoji",
	"paths./v3/projects/{id}/snippets/{snippet_id}/award_emoji/{award_id}.get.tags.length": 1,
	"paths./v3/projects/{id}/snippets/{snippet_id}/award_emoji/{award_id}.get.tags[0]": "projects",
	"paths./v3/projects/{id}/snippets/{snippet_id}/notes/{note_id}/award_emoji.get.description": "This feature was introduced in 8.9",
	"paths./v3/projects/{id}/snippets/{snippet_id}/notes/{note_id}/award_emoji.get.operationId": "getV3ProjectsIdSnippetsSnippetIdNotesNoteIdAwardEmoji",
	"paths./v3/projects/{id}/snippets/{snippet_id}/notes/{note_id}/award_emoji.get.parameters.length": 5,
	"paths./v3/projects/{id}/snippets/{snippet_id}/notes/{note_id}/award_emoji.get.parameters[0].description": "Current page number",
	"paths./v3/projects/{id}/snippets/{snippet_id}/notes/{note_id}/award_emoji.get.parameters[0].format": "int32",
	"paths./v3/projects/{id}/snippets/{snippet_id}/notes/{note_id}/award_emoji.get.parameters[0].in": "query",
	"paths./v3/projects/{id}/snippets/{snippet_id}/notes/{note_id}/award_emoji.get.parameters[0].name": "page",
	"paths./v3/projects/{id}/snippets/{snippet_id}/notes/{note_id}/award_emoji.get.parameters[0].required": false,
	"paths./v3/projects/{id}/snippets/{snippet_id}/notes/{note_id}/award_emoji.get.parameters[0].type": "integer",
	"paths./v3/projects/{id}/snippets/{snippet_id}/notes/{note_id}/award_emoji.get.parameters[1].description": "Number of items per page",
	"paths./v3/projects/{id}/snippets/{snippet_id}/notes/{note_id}/award_emoji.get.parameters[1].format": "int32",
	"paths./v3/projects/{id}/snippets/{snippet_id}/notes/{note_id}/award_emoji.get.parameters[1].in": "query",
	"paths./v3/projects/{id}/snippets/{snippet_id}/notes/{note_id}/award_emoji.get.parameters[1].name": "per_page",
	"paths./v3/projects/{id}/snippets/{snippet_id}/notes/{note_id}/award_emoji.get.parameters[1].required": false,
	"paths./v3/projects/{id}/snippets/{snippet_id}/notes/{note_id}/award_emoji.get.parameters[1].type": "integer",
	"paths./v3/projects/{id}/snippets/{snippet_id}/notes/{note_id}/award_emoji.get.parameters[2].format": "int32",
	"paths./v3/projects/{id}/snippets/{snippet_id}/notes/{note_id}/award_emoji.get.parameters[2].in": "path",
	"paths./v3/projects/{id}/snippets/{snippet_id}/notes/{note_id}/award_emoji.get.parameters[2].name": "id",
	"paths./v3/projects/{id}/snippets/{snippet_id}/notes/{note_id}/award_emoji.get.parameters[2].required": true,
	"paths./v3/projects/{id}/snippets/{snippet_id}/notes/{note_id}/award_emoji.get.parameters[2].type": "integer",
	"paths./v3/projects/{id}/snippets/{snippet_id}/notes/{note_id}/award_emoji.get.parameters[3].format": "int32",
	"paths./v3/projects/{id}/snippets/{snippet_id}/notes/{note_id}/award_emoji.get.parameters[3].in": "path",
	"paths./v3/projects/{id}/snippets/{snippet_id}/notes/{note_id}/award_emoji.get.parameters[3].name": "snippet_id",
	"paths./v3/projects/{id}/snippets/{snippet_id}/notes/{note_id}/award_emoji.get.parameters[3].required": true,
	"paths./v3/projects/{id}/snippets/{snippet_id}/notes/{note_id}/award_emoji.get.parameters[3].type": "integer",
	"paths./v3/projects/{id}/snippets/{snippet_id}/notes/{note_id}/award_emoji.get.parameters[4].format": "int32",
	"paths./v3/projects/{id}/snippets/{snippet_id}/notes/{note_id}/award_emoji.get.parameters[4].in": "path",
	"paths./v3/projects/{id}/snippets/{snippet_id}/notes/{note_id}/award_emoji.get.parameters[4].name": "note_id",
	"paths./v3/projects/{id}/snippets/{snippet_id}/notes/{note_id}/award_emoji.get.parameters[4].required": true,
	"paths./v3/projects/{id}/snippets/{snippet_id}/notes/{note_id}/award_emoji.get.parameters[4].type": "integer",
	"paths./v3/projects/{id}/snippets/{snippet_id}/notes/{note_id}/award_emoji.get.produces.length": 1,
	"paths./v3/projects/{id}/snippets/{snippet_id}/notes/{note_id}/award_emoji.get.produces[0]": "application/json",
	"paths./v3/projects/{id}/snippets/{snippet_id}/notes/{note_id}/award_emoji.get.responses.200.description": "Get a list of project +awardable+ award emoji",
	"paths./v3/projects/{id}/snippets/{snippet_id}/notes/{note_id}/award_emoji.get.responses.200.schema.$ref": "#/definitions/AwardEmoji",
	"paths./v3/projects/{id}/snippets/{snippet_id}/notes/{note_id}/award_emoji.get.summary": "Get a list of project +awardable+ award emoji",
	"paths./v3/projects/{id}/snippets/{snippet_id}/notes/{note_id}/award_emoji.get.tags.length": 1,
	"paths./v3/projects/{id}/snippets/{snippet_id}/notes/{note_id}/award_emoji.get.tags[0]": "projects",
	"paths./v3/projects/{id}/snippets/{snippet_id}/notes/{note_id}/award_emoji.post.consumes.length": 1,
	"paths./v3/projects/{id}/snippets/{snippet_id}/notes/{note_id}/award_emoji.post.consumes[0]": "application/json",
	"paths./v3/projects/{id}/snippets/{snippet_id}/notes/{note_id}/award_emoji.post.description": "This feature was introduced in 8.9",
	"paths./v3/projects/{id}/snippets/{snippet_id}/notes/{note_id}/award_emoji.post.operationId": "postV3ProjectsIdSnippetsSnippetIdNotesNoteIdAwardEmoji",
	"paths./v3/projects/{id}/snippets/{snippet_id}/notes/{note_id}/award_emoji.post.parameters.length": 4,
	"paths./v3/projects/{id}/snippets/{snippet_id}/notes/{note_id}/award_emoji.post.parameters[0].description": "The name of a award_emoji (without colons)",
	"paths./v3/projects/{id}/snippets/{snippet_id}/notes/{note_id}/award_emoji.post.parameters[0].in": "formData",
	"paths./v3/projects/{id}/snippets/{snippet_id}/notes/{note_id}/award_emoji.post.parameters[0].name": "name",
	"paths./v3/projects/{id}/snippets/{snippet_id}/notes/{note_id}/award_emoji.post.parameters[0].required": true,
	"paths./v3/projects/{id}/snippets/{snippet_id}/notes/{note_id}/award_emoji.post.parameters[0].type": "string",
	"paths./v3/projects/{id}/snippets/{snippet_id}/notes/{note_id}/award_emoji.post.parameters[1].format": "int32",
	"paths./v3/projects/{id}/snippets/{snippet_id}/notes/{note_id}/award_emoji.post.parameters[1].in": "path",
	"paths./v3/projects/{id}/snippets/{snippet_id}/notes/{note_id}/award_emoji.post.parameters[1].name": "id",
	"paths./v3/projects/{id}/snippets/{snippet_id}/notes/{note_id}/award_emoji.post.parameters[1].required": true,
	"paths./v3/projects/{id}/snippets/{snippet_id}/notes/{note_id}/award_emoji.post.parameters[1].type": "integer",
	"paths./v3/projects/{id}/snippets/{snippet_id}/notes/{note_id}/award_emoji.post.parameters[2].format": "int32",
	"paths./v3/projects/{id}/snippets/{snippet_id}/notes/{note_id}/award_emoji.post.parameters[2].in": "path",
	"paths./v3/projects/{id}/snippets/{snippet_id}/notes/{note_id}/award_emoji.post.parameters[2].name": "snippet_id",
	"paths./v3/projects/{id}/snippets/{snippet_id}/notes/{note_id}/award_emoji.post.parameters[2].required": true,
	"paths./v3/projects/{id}/snippets/{snippet_id}/notes/{note_id}/award_emoji.post.parameters[2].type": "integer",
	"paths./v3/projects/{id}/snippets/{snippet_id}/notes/{note_id}/award_emoji.post.parameters[3].format": "int32",
	"paths./v3/projects/{id}/snippets/{snippet_id}/notes/{note_id}/award_emoji.post.parameters[3].in": "path",
	"paths./v3/projects/{id}/snippets/{snippet_id}/notes/{note_id}/award_emoji.post.parameters[3].name": "note_id",
	"paths./v3/projects/{id}/snippets/{snippet_id}/notes/{note_id}/award_emoji.post.parameters[3].required": true,
	"paths./v3/projects/{id}/snippets/{snippet_id}/notes/{note_id}/award_emoji.post.parameters[3].type": "integer",
	"paths./v3/projects/{id}/snippets/{snippet_id}/notes/{note_id}/award_emoji.post.produces.length": 1,
	"paths./v3/projects/{id}/snippets/{snippet_id}/notes/{note_id}/award_emoji.post.produces[0]": "application/json",
	"paths./v3/projects/{id}/snippets/{snippet_id}/notes/{note_id}/award_emoji.post.responses.201.description": "Award a new Emoji",
	"paths./v3/projects/{id}/snippets/{snippet_id}/notes/{note_id}/award_emoji.post.responses.201.schema.$ref": "#/definitions/AwardEmoji",
	"paths./v3/projects/{id}/snippets/{snippet_id}/notes/{note_id}/award_emoji.post.summary": "Award a new Emoji",
	"paths./v3/projects/{id}/snippets/{snippet_id}/notes/{note_id}/award_emoji.post.tags.length": 1,
	"paths./v3/projects/{id}/snippets/{snippet_id}/notes/{note_id}/award_emoji.post.tags[0]": "projects",
	"paths./v3/projects/{id}/snippets/{snippet_id}/notes/{note_id}/award_emoji/{award_id}.delete.description": "This feature was introduced in 8.9",
	"paths./v3/projects/{id}/snippets/{snippet_id}/notes/{note_id}/award_emoji/{award_id}.delete.operationId": "deleteV3ProjectsIdSnippetsSnippetIdNotesNoteIdAwardEmojiAwardId",
	"paths./v3/projects/{id}/snippets/{snippet_id}/notes/{note_id}/award_emoji/{award_id}.delete.parameters.length": 4,
	"paths./v3/projects/{id}/snippets/{snippet_id}/notes/{note_id}/award_emoji/{award_id}.delete.parameters[0].description": "The ID of an award emoji",
	"paths./v3/projects/{id}/snippets/{snippet_id}/notes/{note_id}/award_emoji/{award_id}.delete.parameters[0].format": "int32",
	"paths./v3/projects/{id}/snippets/{snippet_id}/notes/{note_id}/award_emoji/{award_id}.delete.parameters[0].in": "path",
	"paths./v3/projects/{id}/snippets/{snippet_id}/notes/{note_id}/award_emoji/{award_id}.delete.parameters[0].name": "award_id",
	"paths./v3/projects/{id}/snippets/{snippet_id}/notes/{note_id}/award_emoji/{award_id}.delete.parameters[0].required": true,
	"paths./v3/projects/{id}/snippets/{snippet_id}/notes/{note_id}/award_emoji/{award_id}.delete.parameters[0].type": "integer",
	"paths./v3/projects/{id}/snippets/{snippet_id}/notes/{note_id}/award_emoji/{award_id}.delete.parameters[1].format": "int32",
	"paths./v3/projects/{id}/snippets/{snippet_id}/notes/{note_id}/award_emoji/{award_id}.delete.parameters[1].in": "path",
	"paths./v3/projects/{id}/snippets/{snippet_id}/notes/{note_id}/award_emoji/{award_id}.delete.parameters[1].name": "id",
	"paths./v3/projects/{id}/snippets/{snippet_id}/notes/{note_id}/award_emoji/{award_id}.delete.parameters[1].required": true,
	"paths./v3/projects/{id}/snippets/{snippet_id}/notes/{note_id}/award_emoji/{award_id}.delete.parameters[1].type": "integer",
	"paths./v3/projects/{id}/snippets/{snippet_id}/notes/{note_id}/award_emoji/{award_id}.delete.parameters[2].format": "int32",
	"paths./v3/projects/{id}/snippets/{snippet_id}/notes/{note_id}/award_emoji/{award_id}.delete.parameters[2].in": "path",
	"paths./v3/projects/{id}/snippets/{snippet_id}/notes/{note_id}/award_emoji/{award_id}.delete.parameters[2].name": "snippet_id",
	"paths./v3/projects/{id}/snippets/{snippet_id}/notes/{note_id}/award_emoji/{award_id}.delete.parameters[2].required": true,
	"paths./v3/projects/{id}/snippets/{snippet_id}/notes/{note_id}/award_emoji/{award_id}.delete.parameters[2].type": "integer",
	"paths./v3/projects/{id}/snippets/{snippet_id}/notes/{note_id}/award_emoji/{award_id}.delete.parameters[3].format": "int32",
	"paths./v3/projects/{id}/snippets/{snippet_id}/notes/{note_id}/award_emoji/{award_id}.delete.parameters[3].in": "path",
	"paths./v3/projects/{id}/snippets/{snippet_id}/notes/{note_id}/award_emoji/{award_id}.delete.parameters[3].name": "note_id",
	"paths./v3/projects/{id}/snippets/{snippet_id}/notes/{note_id}/award_emoji/{award_id}.delete.parameters[3].required": true,
	"paths./v3/projects/{id}/snippets/{snippet_id}/notes/{note_id}/award_emoji/{award_id}.delete.parameters[3].type": "integer",
	"paths./v3/projects/{id}/snippets/{snippet_id}/notes/{note_id}/award_emoji/{award_id}.delete.produces.length": 1,
	"paths./v3/projects/{id}/snippets/{snippet_id}/notes/{note_id}/award_emoji/{award_id}.delete.produces[0]": "application/json",
	"paths./v3/projects/{id}/snippets/{snippet_id}/notes/{note_id}/award_emoji/{award_id}.delete.responses.200.description": "Delete a +awardables+ award emoji",
	"paths./v3/projects/{id}/snippets/{snippet_id}/notes/{note_id}/award_emoji/{award_id}.delete.responses.200.schema.$ref": "#/definitions/AwardEmoji",
	"paths./v3/projects/{id}/snippets/{snippet_id}/notes/{note_id}/award_emoji/{award_id}.delete.summary": "Delete a +awardables+ award emoji",
	"paths./v3/projects/{id}/snippets/{snippet_id}/notes/{note_id}/award_emoji/{award_id}.delete.tags.length": 1,
	"paths./v3/projects/{id}/snippets/{snippet_id}/notes/{note_id}/award_emoji/{award_id}.delete.tags[0]": "projects",
	"paths./v3/projects/{id}/snippets/{snippet_id}/notes/{note_id}/award_emoji/{award_id}.get.description": "This feature was introduced in 8.9",
	"paths./v3/projects/{id}/snippets/{snippet_id}/notes/{note_id}/award_emoji/{award_id}.get.operationId": "getV3ProjectsIdSnippetsSnippetIdNotesNoteIdAwardEmojiAwardId",
	"paths./v3/projects/{id}/snippets/{snippet_id}/notes/{note_id}/award_emoji/{award_id}.get.parameters.length": 4,
	"paths./v3/projects/{id}/snippets/{snippet_id}/notes/{note_id}/award_emoji/{award_id}.get.parameters[0].description": "The ID of the award",
	"paths./v3/projects/{id}/snippets/{snippet_id}/notes/{note_id}/award_emoji/{award_id}.get.parameters[0].format": "int32",
	"paths./v3/projects/{id}/snippets/{snippet_id}/notes/{note_id}/award_emoji/{award_id}.get.parameters[0].in": "path",
	"paths./v3/projects/{id}/snippets/{snippet_id}/notes/{note_id}/award_emoji/{award_id}.get.parameters[0].name": "award_id",
	"paths./v3/projects/{id}/snippets/{snippet_id}/notes/{note_id}/award_emoji/{award_id}.get.parameters[0].required": true,
	"paths./v3/projects/{id}/snippets/{snippet_id}/notes/{note_id}/award_emoji/{award_id}.get.parameters[0].type": "integer",
	"paths./v3/projects/{id}/snippets/{snippet_id}/notes/{note_id}/award_emoji/{award_id}.get.parameters[1].format": "int32",
	"paths./v3/projects/{id}/snippets/{snippet_id}/notes/{note_id}/award_emoji/{award_id}.get.parameters[1].in": "path",
	"paths./v3/projects/{id}/snippets/{snippet_id}/notes/{note_id}/award_emoji/{award_id}.get.parameters[1].name": "id",
	"paths./v3/projects/{id}/snippets/{snippet_id}/notes/{note_id}/award_emoji/{award_id}.get.parameters[1].required": true,
	"paths./v3/projects/{id}/snippets/{snippet_id}/notes/{note_id}/award_emoji/{award_id}.get.parameters[1].type": "integer",
	"paths./v3/projects/{id}/snippets/{snippet_id}/notes/{note_id}/award_emoji/{award_id}.get.parameters[2].format": "int32",
	"paths./v3/projects/{id}/snippets/{snippet_id}/notes/{note_id}/award_emoji/{award_id}.get.parameters[2].in": "path",
	"paths./v3/projects/{id}/snippets/{snippet_id}/notes/{note_id}/award_emoji/{award_id}.get.parameters[2].name": "snippet_id",
	"paths./v3/projects/{id}/snippets/{snippet_id}/notes/{note_id}/award_emoji/{award_id}.get.parameters[2].required": true,
	"paths./v3/projects/{id}/snippets/{snippet_id}/notes/{note_id}/award_emoji/{award_id}.get.parameters[2].type": "integer",
	"paths./v3/projects/{id}/snippets/{snippet_id}/notes/{note_id}/award_emoji/{award_id}.get.parameters[3].format": "int32",
	"paths./v3/projects/{id}/snippets/{snippet_id}/notes/{note_id}/award_emoji/{award_id}.get.parameters[3].in": "path",
	"paths./v3/projects/{id}/snippets/{snippet_id}/notes/{note_id}/award_emoji/{award_id}.get.parameters[3].name": "note_id",
	"paths./v3/projects/{id}/snippets/{snippet_id}/notes/{note_id}/award_emoji/{award_id}.get.parameters[3].required": true,
	"paths./v3/projects/{id}/snippets/{snippet_id}/notes/{note_id}/award_emoji/{award_id}.get.parameters[3].type": "integer",
	"paths./v3/projects/{id}/snippets/{snippet_id}/notes/{note_id}/award_emoji/{award_id}.get.produces.length": 1,
	"paths./v3/projects/{id}/snippets/{snippet_id}/notes/{note_id}/award_emoji/{award_id}.get.produces[0]": "application/json",
	"paths./v3/projects/{id}/snippets/{snippet_id}/notes/{note_id}/award_emoji/{award_id}.get.responses.200.description": "Get a specific award emoji",
	"paths./v3/projects/{id}/snippets/{snippet_id}/notes/{note_id}/award_emoji/{award_id}.get.responses.200.schema.$ref": "#/definitions/AwardEmoji",
	"paths./v3/projects/{id}/snippets/{snippet_id}/notes/{note_id}/award_emoji/{award_id}.get.summary": "Get a specific award emoji",
	"paths./v3/projects/{id}/snippets/{snippet_id}/notes/{note_id}/award_emoji/{award_id}.get.tags.length": 1,
	"paths./v3/projects/{id}/snippets/{snippet_id}/notes/{note_id}/award_emoji/{award_id}.get.tags[0]": "projects",
	"paths./v3/projects/{id}/snippets/{snippet_id}/raw.get.description": "Get a raw project snippet",
	"paths./v3/projects/{id}/snippets/{snippet_id}/raw.get.operationId": "getV3ProjectsIdSnippetsSnippetIdRaw",
	"paths./v3/projects/{id}/snippets/{snippet_id}/raw.get.parameters.length": 2,
	"paths./v3/projects/{id}/snippets/{snippet_id}/raw.get.parameters[0].description": "The ID of a project",
	"paths./v3/projects/{id}/snippets/{snippet_id}/raw.get.parameters[0].in": "path",
	"paths./v3/projects/{id}/snippets/{snippet_id}/raw.get.parameters[0].name": "id",
	"paths./v3/projects/{id}/snippets/{snippet_id}/raw.get.parameters[0].required": true,
	"paths./v3/projects/{id}/snippets/{snippet_id}/raw.get.parameters[0].type": "string",
	"paths./v3/projects/{id}/snippets/{snippet_id}/raw.get.parameters[1].description": "The ID of a project snippet",
	"paths./v3/projects/{id}/snippets/{snippet_id}/raw.get.parameters[1].format": "int32",
	"paths./v3/projects/{id}/snippets/{snippet_id}/raw.get.parameters[1].in": "path",
	"paths./v3/projects/{id}/snippets/{snippet_id}/raw.get.parameters[1].name": "snippet_id",
	"paths./v3/projects/{id}/snippets/{snippet_id}/raw.get.parameters[1].required": true,
	"paths./v3/projects/{id}/snippets/{snippet_id}/raw.get.parameters[1].type": "integer",
	"paths./v3/projects/{id}/snippets/{snippet_id}/raw.get.produces.length": 1,
	"paths./v3/projects/{id}/snippets/{snippet_id}/raw.get.produces[0]": "application/json",
	"paths./v3/projects/{id}/snippets/{snippet_id}/raw.get.responses.200.description": "Get a raw project snippet",
	"paths./v3/projects/{id}/snippets/{snippet_id}/raw.get.summary": "Get a raw project snippet",
	"paths./v3/projects/{id}/snippets/{snippet_id}/raw.get.tags.length": 1,
	"paths./v3/projects/{id}/snippets/{snippet_id}/raw.get.tags[0]": "projects",
	"paths./v3/projects/{id}/star.delete.description": "Unstar a project",
	"paths./v3/projects/{id}/star.delete.operationId": "deleteV3ProjectsIdStar",
	"paths./v3/projects/{id}/star.delete.parameters.length": 1,
	"paths./v3/projects/{id}/star.delete.parameters[0].description": "The ID of a project",
	"paths./v3/projects/{id}/star.delete.parameters[0].in": "path",
	"paths./v3/projects/{id}/star.delete.parameters[0].name": "id",
	"paths./v3/projects/{id}/star.delete.parameters[0].required": true,
	"paths./v3/projects/{id}/star.delete.parameters[0].type": "string",
	"paths./v3/projects/{id}/star.delete.produces.length": 1,
	"paths./v3/projects/{id}/star.delete.produces[0]": "application/json",
	"paths./v3/projects/{id}/star.delete.responses.200.description": "Unstar a project",
	"paths./v3/projects/{id}/star.delete.responses.200.schema.$ref": "#/definitions/Project",
	"paths./v3/projects/{id}/star.delete.summary": "Unstar a project",
	"paths./v3/projects/{id}/star.delete.tags.length": 1,
	"paths./v3/projects/{id}/star.delete.tags[0]": "projects",
	"paths./v3/projects/{id}/star.post.consumes.length": 1,
	"paths./v3/projects/{id}/star.post.consumes[0]": "application/json",
	"paths./v3/projects/{id}/star.post.description": "Star a project",
	"paths./v3/projects/{id}/star.post.operationId": "postV3ProjectsIdStar",
	"paths./v3/projects/{id}/star.post.parameters.length": 1,
	"paths./v3/projects/{id}/star.post.parameters[0].description": "The ID of a project",
	"paths./v3/projects/{id}/star.post.parameters[0].in": "path",
	"paths./v3/projects/{id}/star.post.parameters[0].name": "id",
	"paths./v3/projects/{id}/star.post.parameters[0].required": true,
	"paths./v3/projects/{id}/star.post.parameters[0].type": "string",
	"paths./v3/projects/{id}/star.post.produces.length": 1,
	"paths./v3/projects/{id}/star.post.produces[0]": "application/json",
	"paths./v3/projects/{id}/star.post.responses.201.description": "Star a project",
	"paths./v3/projects/{id}/star.post.responses.201.schema.$ref": "#/definitions/Project",
	"paths./v3/projects/{id}/star.post.summary": "Star a project",
	"paths./v3/projects/{id}/star.post.tags.length": 1,
	"paths./v3/projects/{id}/star.post.tags[0]": "projects",
	"paths./v3/projects/{id}/statuses/{sha}.post.consumes.length": 1,
	"paths./v3/projects/{id}/statuses/{sha}.post.consumes[0]": "application/json",
	"paths./v3/projects/{id}/statuses/{sha}.post.description": "Post status to a commit",
	"paths./v3/projects/{id}/statuses/{sha}.post.operationId": "postV3ProjectsIdStatusesSha",
	"paths./v3/projects/{id}/statuses/{sha}.post.parameters.length": 8,
	"paths./v3/projects/{id}/statuses/{sha}.post.parameters[0].description": "The ID of a project",
	"paths./v3/projects/{id}/statuses/{sha}.post.parameters[0].in": "path",
	"paths./v3/projects/{id}/statuses/{sha}.post.parameters[0].name": "id",
	"paths./v3/projects/{id}/statuses/{sha}.post.parameters[0].required": true,
	"paths./v3/projects/{id}/statuses/{sha}.post.parameters[0].type": "string",
	"paths./v3/projects/{id}/statuses/{sha}.post.parameters[1].description": "The commit hash",
	"paths./v3/projects/{id}/statuses/{sha}.post.parameters[1].in": "path",
	"paths./v3/projects/{id}/statuses/{sha}.post.parameters[1].name": "sha",
	"paths./v3/projects/{id}/statuses/{sha}.post.parameters[1].required": true,
	"paths./v3/projects/{id}/statuses/{sha}.post.parameters[1].type": "string",
	"paths./v3/projects/{id}/statuses/{sha}.post.parameters[2].description": "The state of the status",
	"paths./v3/projects/{id}/statuses/{sha}.post.parameters[2].enum.length": 5,
	"paths./v3/projects/{id}/statuses/{sha}.post.parameters[2].enum[0]": "pending",
	"paths./v3/projects/{id}/statuses/{sha}.post.parameters[2].enum[1]": "running",
	"paths./v3/projects/{id}/statuses/{sha}.post.parameters[2].enum[2]": "success",
	"paths./v3/projects/{id}/statuses/{sha}.post.parameters[2].enum[3]": "failed",
	"paths./v3/projects/{id}/statuses/{sha}.post.parameters[2].enum[4]": "canceled",
	"paths./v3/projects/{id}/statuses/{sha}.post.parameters[2].in": "formData",
	"paths./v3/projects/{id}/statuses/{sha}.post.parameters[2].name": "state",
	"paths./v3/projects/{id}/statuses/{sha}.post.parameters[2].required": true,
	"paths./v3/projects/{id}/statuses/{sha}.post.parameters[2].type": "string",
	"paths./v3/projects/{id}/statuses/{sha}.post.parameters[3].description": "The ref",
	"paths./v3/projects/{id}/statuses/{sha}.post.parameters[3].in": "formData",
	"paths./v3/projects/{id}/statuses/{sha}.post.parameters[3].name": "ref",
	"paths./v3/projects/{id}/statuses/{sha}.post.parameters[3].required": false,
	"paths./v3/projects/{id}/statuses/{sha}.post.parameters[3].type": "string",
	"paths./v3/projects/{id}/statuses/{sha}.post.parameters[4].description": "The target URL to associate with this status",
	"paths./v3/projects/{id}/statuses/{sha}.post.parameters[4].in": "formData",
	"paths./v3/projects/{id}/statuses/{sha}.post.parameters[4].name": "target_url",
	"paths./v3/projects/{id}/statuses/{sha}.post.parameters[4].required": false,
	"paths./v3/projects/{id}/statuses/{sha}.post.parameters[4].type": "string",
	"paths./v3/projects/{id}/statuses/{sha}.post.parameters[5].description": "A short description of the status",
	"paths./v3/projects/{id}/statuses/{sha}.post.parameters[5].in": "formData",
	"paths./v3/projects/{id}/statuses/{sha}.post.parameters[5].name": "description",
	"paths./v3/projects/{id}/statuses/{sha}.post.parameters[5].required": false,
	"paths./v3/projects/{id}/statuses/{sha}.post.parameters[5].type": "string",
	"paths./v3/projects/{id}/statuses/{sha}.post.parameters[6].description": "A string label to differentiate this status from the status of other systems. Default: \"default\"",
	"paths./v3/projects/{id}/statuses/{sha}.post.parameters[6].in": "formData",
	"paths./v3/projects/{id}/statuses/{sha}.post.parameters[6].name": "name",
	"paths./v3/projects/{id}/statuses/{sha}.post.parameters[6].required": false,
	"paths./v3/projects/{id}/statuses/{sha}.post.parameters[6].type": "string",
	"paths./v3/projects/{id}/statuses/{sha}.post.parameters[7].description": "A string label to differentiate this status from the status of other systems. Default: \"default\"",
	"paths./v3/projects/{id}/statuses/{sha}.post.parameters[7].in": "formData",
	"paths./v3/projects/{id}/statuses/{sha}.post.parameters[7].name": "context",
	"paths./v3/projects/{id}/statuses/{sha}.post.parameters[7].required": false,
	"paths./v3/projects/{id}/statuses/{sha}.post.parameters[7].type": "string",
	"paths./v3/projects/{id}/statuses/{sha}.post.produces.length": 1,
	"paths./v3/projects/{id}/statuses/{sha}.post.produces[0]": "application/json",
	"paths./v3/projects/{id}/statuses/{sha}.post.responses.201.description": "Post status to a commit",
	"paths./v3/projects/{id}/statuses/{sha}.post.responses.201.schema.$ref": "#/definitions/CommitStatus",
	"paths./v3/projects/{id}/statuses/{sha}.post.summary": "Post status to a commit",
	"paths./v3/projects/{id}/statuses/{sha}.post.tags.length": 1,
	"paths./v3/projects/{id}/statuses/{sha}.post.tags[0]": "projects",
	"paths./v3/projects/{id}/triggers.get.description": "Get triggers list",
	"paths./v3/projects/{id}/triggers.get.operationId": "getV3ProjectsIdTriggers",
	"paths./v3/projects/{id}/triggers.get.parameters.length": 3,
	"paths./v3/projects/{id}/triggers.get.parameters[0].description": "The ID of a project",
	"paths./v3/projects/{id}/triggers.get.parameters[0].in": "path",
	"paths./v3/projects/{id}/triggers.get.parameters[0].name": "id",
	"paths./v3/projects/{id}/triggers.get.parameters[0].required": true,
	"paths./v3/projects/{id}/triggers.get.parameters[0].type": "string",
	"paths./v3/projects/{id}/triggers.get.parameters[1].description": "Current page number",
	"paths./v3/projects/{id}/triggers.get.parameters[1].format": "int32",
	"paths./v3/projects/{id}/triggers.get.parameters[1].in": "query",
	"paths./v3/projects/{id}/triggers.get.parameters[1].name": "page",
	"paths./v3/projects/{id}/triggers.get.parameters[1].required": false,
	"paths./v3/projects/{id}/triggers.get.parameters[1].type": "integer",
	"paths./v3/projects/{id}/triggers.get.parameters[2].description": "Number of items per page",
	"paths./v3/projects/{id}/triggers.get.parameters[2].format": "int32",
	"paths./v3/projects/{id}/triggers.get.parameters[2].in": "query",
	"paths./v3/projects/{id}/triggers.get.parameters[2].name": "per_page",
	"paths./v3/projects/{id}/triggers.get.parameters[2].required": false,
	"paths./v3/projects/{id}/triggers.get.parameters[2].type": "integer",
	"paths./v3/projects/{id}/triggers.get.produces.length": 1,
	"paths./v3/projects/{id}/triggers.get.produces[0]": "application/json",
	"paths./v3/projects/{id}/triggers.get.responses.200.description": "Get triggers list",
	"paths./v3/projects/{id}/triggers.get.responses.200.schema.$ref": "#/definitions/Trigger",
	"paths./v3/projects/{id}/triggers.get.summary": "Get triggers list",
	"paths./v3/projects/{id}/triggers.get.tags.length": 1,
	"paths./v3/projects/{id}/triggers.get.tags[0]": "projects",
	"paths./v3/projects/{id}/triggers.post.consumes.length": 1,
	"paths./v3/projects/{id}/triggers.post.consumes[0]": "application/json",
	"paths./v3/projects/{id}/triggers.post.description": "Create a trigger",
	"paths./v3/projects/{id}/triggers.post.operationId": "postV3ProjectsIdTriggers",
	"paths./v3/projects/{id}/triggers.post.parameters.length": 1,
	"paths./v3/projects/{id}/triggers.post.parameters[0].description": "The ID of a project",
	"paths./v3/projects/{id}/triggers.post.parameters[0].in": "path",
	"paths./v3/projects/{id}/triggers.post.parameters[0].name": "id",
	"paths./v3/projects/{id}/triggers.post.parameters[0].required": true,
	"paths./v3/projects/{id}/triggers.post.parameters[0].type": "string",
	"paths./v3/projects/{id}/triggers.post.produces.length": 1,
	"paths./v3/projects/{id}/triggers.post.produces[0]": "application/json",
	"paths./v3/projects/{id}/triggers.post.responses.201.description": "Create a trigger",
	"paths./v3/projects/{id}/triggers.post.responses.201.schema.$ref": "#/definitions/Trigger",
	"paths./v3/projects/{id}/triggers.post.summary": "Create a trigger",
	"paths./v3/projects/{id}/triggers.post.tags.length": 1,
	"paths./v3/projects/{id}/triggers.post.tags[0]": "projects",
	"paths./v3/projects/{id}/triggers/{token}.delete.description": "Delete a trigger",
	"paths./v3/projects/{id}/triggers/{token}.delete.operationId": "deleteV3ProjectsIdTriggersToken",
	"paths./v3/projects/{id}/triggers/{token}.delete.parameters.length": 2,
	"paths./v3/projects/{id}/triggers/{token}.delete.parameters[0].description": "The ID of a project",
	"paths./v3/projects/{id}/triggers/{token}.delete.parameters[0].in": "path",
	"paths./v3/projects/{id}/triggers/{token}.delete.parameters[0].name": "id",
	"paths./v3/projects/{id}/triggers/{token}.delete.parameters[0].required": true,
	"paths./v3/projects/{id}/triggers/{token}.delete.parameters[0].type": "string",
	"paths./v3/projects/{id}/triggers/{token}.delete.parameters[1].description": "The unique token of trigger",
	"paths./v3/projects/{id}/triggers/{token}.delete.parameters[1].in": "path",
	"paths./v3/projects/{id}/triggers/{token}.delete.parameters[1].name": "token",
	"paths./v3/projects/{id}/triggers/{token}.delete.parameters[1].required": true,
	"paths./v3/projects/{id}/triggers/{token}.delete.parameters[1].type": "string",
	"paths./v3/projects/{id}/triggers/{token}.delete.produces.length": 1,
	"paths./v3/projects/{id}/triggers/{token}.delete.produces[0]": "application/json",
	"paths./v3/projects/{id}/triggers/{token}.delete.responses.200.description": "Delete a trigger",
	"paths./v3/projects/{id}/triggers/{token}.delete.responses.200.schema.$ref": "#/definitions/Trigger",
	"paths./v3/projects/{id}/triggers/{token}.delete.summary": "Delete a trigger",
	"paths./v3/projects/{id}/triggers/{token}.delete.tags.length": 1,
	"paths./v3/projects/{id}/triggers/{token}.delete.tags[0]": "projects",
	"paths./v3/projects/{id}/triggers/{token}.get.description": "Get specific trigger of a project",
	"paths./v3/projects/{id}/triggers/{token}.get.operationId": "getV3ProjectsIdTriggersToken",
	"paths./v3/projects/{id}/triggers/{token}.get.parameters.length": 2,
	"paths./v3/projects/{id}/triggers/{token}.get.parameters[0].description": "The ID of a project",
	"paths./v3/projects/{id}/triggers/{token}.get.parameters[0].in": "path",
	"paths./v3/projects/{id}/triggers/{token}.get.parameters[0].name": "id",
	"paths./v3/projects/{id}/triggers/{token}.get.parameters[0].required": true,
	"paths./v3/projects/{id}/triggers/{token}.get.parameters[0].type": "string",
	"paths./v3/projects/{id}/triggers/{token}.get.parameters[1].description": "The unique token of trigger",
	"paths./v3/projects/{id}/triggers/{token}.get.parameters[1].in": "path",
	"paths./v3/projects/{id}/triggers/{token}.get.parameters[1].name": "token",
	"paths./v3/projects/{id}/triggers/{token}.get.parameters[1].required": true,
	"paths./v3/projects/{id}/triggers/{token}.get.parameters[1].type": "string",
	"paths./v3/projects/{id}/triggers/{token}.get.produces.length": 1,
	"paths./v3/projects/{id}/triggers/{token}.get.produces[0]": "application/json",
	"paths./v3/projects/{id}/triggers/{token}.get.responses.200.description": "Get specific trigger of a project",
	"paths./v3/projects/{id}/triggers/{token}.get.responses.200.schema.$ref": "#/definitions/Trigger",
	"paths./v3/projects/{id}/triggers/{token}.get.summary": "Get specific trigger of a project",
	"paths./v3/projects/{id}/triggers/{token}.get.tags.length": 1,
	"paths./v3/projects/{id}/triggers/{token}.get.tags[0]": "projects",
	"paths./v3/projects/{id}/unarchive.post.consumes.length": 1,
	"paths./v3/projects/{id}/unarchive.post.consumes[0]": "application/json",
	"paths./v3/projects/{id}/unarchive.post.description": "Unarchive a project",
	"paths./v3/projects/{id}/unarchive.post.operationId": "postV3ProjectsIdUnarchive",
	"paths./v3/projects/{id}/unarchive.post.parameters.length": 1,
	"paths./v3/projects/{id}/unarchive.post.parameters[0].description": "The ID of a project",
	"paths./v3/projects/{id}/unarchive.post.parameters[0].in": "path",
	"paths./v3/projects/{id}/unarchive.post.parameters[0].name": "id",
	"paths./v3/projects/{id}/unarchive.post.parameters[0].required": true,
	"paths./v3/projects/{id}/unarchive.post.parameters[0].type": "string",
	"paths./v3/projects/{id}/unarchive.post.produces.length": 1,
	"paths./v3/projects/{id}/unarchive.post.produces[0]": "application/json",
	"paths./v3/projects/{id}/unarchive.post.responses.201.description": "Unarchive a project",
	"paths./v3/projects/{id}/unarchive.post.responses.201.schema.$ref": "#/definitions/Project",
	"paths./v3/projects/{id}/unarchive.post.summary": "Unarchive a project",
	"paths./v3/projects/{id}/unarchive.post.tags.length": 1,
	"paths./v3/projects/{id}/unarchive.post.tags[0]": "projects",
	"paths./v3/projects/{id}/uploads.post.consumes.length": 2,
	"paths./v3/projects/{id}/uploads.post.consumes[0]": "application/json",
	"paths./v3/projects/{id}/uploads.post.consumes[1]": "multipart/form-data",
	"paths./v3/projects/{id}/uploads.post.description": "Upload a file",
	"paths./v3/projects/{id}/uploads.post.operationId": "postV3ProjectsIdUploads",
	"paths./v3/projects/{id}/uploads.post.parameters.length": 2,
	"paths./v3/projects/{id}/uploads.post.parameters[0].description": "The ID of a project",
	"paths./v3/projects/{id}/uploads.post.parameters[0].in": "path",
	"paths./v3/projects/{id}/uploads.post.parameters[0].name": "id",
	"paths./v3/projects/{id}/uploads.post.parameters[0].required": true,
	"paths./v3/projects/{id}/uploads.post.parameters[0].type": "string",
	"paths./v3/projects/{id}/uploads.post.parameters[1].description": "The file to be uploaded",
	"paths./v3/projects/{id}/uploads.post.parameters[1].in": "formData",
	"paths./v3/projects/{id}/uploads.post.parameters[1].name": "file",
	"paths./v3/projects/{id}/uploads.post.parameters[1].required": true,
	"paths./v3/projects/{id}/uploads.post.parameters[1].type": "file",
	"paths./v3/projects/{id}/uploads.post.produces.length": 1,
	"paths./v3/projects/{id}/uploads.post.produces[0]": "application/json",
	"paths./v3/projects/{id}/uploads.post.responses.201.description": "Upload a file",
	"paths./v3/projects/{id}/uploads.post.summary": "Upload a file",
	"paths./v3/projects/{id}/uploads.post.tags.length": 1,
	"paths./v3/projects/{id}/uploads.post.tags[0]": "projects",
	"paths./v3/projects/{id}/users.get.description": "Get the users list of a project",
	"paths./v3/projects/{id}/users.get.operationId": "getV3ProjectsIdUsers",
	"paths./v3/projects/{id}/users.get.parameters.length": 4,
	"paths./v3/projects/{id}/users.get.parameters[0].description": "The ID of a project",
	"paths./v3/projects/{id}/users.get.parameters[0].in": "path",
	"paths./v3/projects/{id}/users.get.parameters[0].name": "id",
	"paths./v3/projects/{id}/users.get.parameters[0].required": true,
	"paths./v3/projects/{id}/users.get.parameters[0].type": "string",
	"paths./v3/projects/{id}/users.get.parameters[1].description": "Return list of users matching the search criteria",
	"paths./v3/projects/{id}/users.get.parameters[1].in": "query",
	"paths./v3/projects/{id}/users.get.parameters[1].name": "search",
	"paths./v3/projects/{id}/users.get.parameters[1].required": false,
	"paths./v3/projects/{id}/users.get.parameters[1].type": "string",
	"paths./v3/projects/{id}/users.get.parameters[2].description": "Current page number",
	"paths./v3/projects/{id}/users.get.parameters[2].format": "int32",
	"paths./v3/projects/{id}/users.get.parameters[2].in": "query",
	"paths./v3/projects/{id}/users.get.parameters[2].name": "page",
	"paths./v3/projects/{id}/users.get.parameters[2].required": false,
	"paths./v3/projects/{id}/users.get.parameters[2].type": "integer",
	"paths./v3/projects/{id}/users.get.parameters[3].description": "Number of items per page",
	"paths./v3/projects/{id}/users.get.parameters[3].format": "int32",
	"paths./v3/projects/{id}/users.get.parameters[3].in": "query",
	"paths./v3/projects/{id}/users.get.parameters[3].name": "per_page",
	"paths./v3/projects/{id}/users.get.parameters[3].required": false,
	"paths./v3/projects/{id}/users.get.parameters[3].type": "integer",
	"paths./v3/projects/{id}/users.get.produces.length": 1,
	"paths./v3/projects/{id}/users.get.produces[0]": "application/json",
	"paths./v3/projects/{id}/users.get.responses.200.description": "Get the users list of a project",
	"paths./v3/projects/{id}/users.get.responses.200.schema.$ref": "#/definitions/UserBasic",
	"paths./v3/projects/{id}/users.get.summary": "Get the users list of a project",
	"paths./v3/projects/{id}/users.get.tags.length": 1,
	"paths./v3/projects/{id}/users.get.tags[0]": "projects",
	"paths./v3/projects/{id}/variables.get.description": "Get project variables",
	"paths./v3/projects/{id}/variables.get.operationId": "getV3ProjectsIdVariables",
	"paths./v3/projects/{id}/variables.get.parameters.length": 3,
	"paths./v3/projects/{id}/variables.get.parameters[0].description": "The ID of a project",
	"paths./v3/projects/{id}/variables.get.parameters[0].in": "path",
	"paths./v3/projects/{id}/variables.get.parameters[0].name": "id",
	"paths./v3/projects/{id}/variables.get.parameters[0].required": true,
	"paths./v3/projects/{id}/variables.get.parameters[0].type": "string",
	"paths./v3/projects/{id}/variables.get.parameters[1].description": "Current page number",
	"paths./v3/projects/{id}/variables.get.parameters[1].format": "int32",
	"paths./v3/projects/{id}/variables.get.parameters[1].in": "query",
	"paths./v3/projects/{id}/variables.get.parameters[1].name": "page",
	"paths./v3/projects/{id}/variables.get.parameters[1].required": false,
	"paths./v3/projects/{id}/variables.get.parameters[1].type": "integer",
	"paths./v3/projects/{id}/variables.get.parameters[2].description": "Number of items per page",
	"paths./v3/projects/{id}/variables.get.parameters[2].format": "int32",
	"paths./v3/projects/{id}/variables.get.parameters[2].in": "query",
	"paths./v3/projects/{id}/variables.get.parameters[2].name": "per_page",
	"paths./v3/projects/{id}/variables.get.parameters[2].required": false,
	"paths./v3/projects/{id}/variables.get.parameters[2].type": "integer",
	"paths./v3/projects/{id}/variables.get.produces.length": 1,
	"paths./v3/projects/{id}/variables.get.produces[0]": "application/json",
	"paths./v3/projects/{id}/variables.get.responses.200.description": "Get project variables",
	"paths./v3/projects/{id}/variables.get.responses.200.schema.$ref": "#/definitions/Variable",
	"paths./v3/projects/{id}/variables.get.summary": "Get project variables",
	"paths./v3/projects/{id}/variables.get.tags.length": 1,
	"paths./v3/projects/{id}/variables.get.tags[0]": "projects",
	"paths./v3/projects/{id}/variables.post.consumes.length": 1,
	"paths./v3/projects/{id}/variables.post.consumes[0]": "application/json",
	"paths./v3/projects/{id}/variables.post.description": "Create a new variable in a project",
	"paths./v3/projects/{id}/variables.post.operationId": "postV3ProjectsIdVariables",
	"paths./v3/projects/{id}/variables.post.parameters.length": 3,
	"paths./v3/projects/{id}/variables.post.parameters[0].description": "The ID of a project",
	"paths./v3/projects/{id}/variables.post.parameters[0].in": "path",
	"paths./v3/projects/{id}/variables.post.parameters[0].name": "id",
	"paths./v3/projects/{id}/variables.post.parameters[0].required": true,
	"paths./v3/projects/{id}/variables.post.parameters[0].type": "string",
	"paths./v3/projects/{id}/variables.post.parameters[1].description": "The key of the variable",
	"paths./v3/projects/{id}/variables.post.parameters[1].in": "formData",
	"paths./v3/projects/{id}/variables.post.parameters[1].name": "key",
	"paths./v3/projects/{id}/variables.post.parameters[1].required": true,
	"paths./v3/projects/{id}/variables.post.parameters[1].type": "string",
	"paths./v3/projects/{id}/variables.post.parameters[2].description": "The value of the variable",
	"paths./v3/projects/{id}/variables.post.parameters[2].in": "formData",
	"paths./v3/projects/{id}/variables.post.parameters[2].name": "value",
	"paths./v3/projects/{id}/variables.post.parameters[2].required": true,
	"paths./v3/projects/{id}/variables.post.parameters[2].type": "string",
	"paths./v3/projects/{id}/variables.post.produces.length": 1,
	"paths./v3/projects/{id}/variables.post.produces[0]": "application/json",
	"paths./v3/projects/{id}/variables.post.responses.201.description": "Create a new variable in a project",
	"paths./v3/projects/{id}/variables.post.responses.201.schema.$ref": "#/definitions/Variable",
	"paths./v3/projects/{id}/variables.post.summary": "Create a new variable in a project",
	"paths./v3/projects/{id}/variables.post.tags.length": 1,
	"paths./v3/projects/{id}/variables.post.tags[0]": "projects",
	"paths./v3/projects/{id}/variables/{key}.delete.description": "Delete an existing variable from a project",
	"paths./v3/projects/{id}/variables/{key}.delete.operationId": "deleteV3ProjectsIdVariablesKey",
	"paths./v3/projects/{id}/variables/{key}.delete.parameters.length": 2,
	"paths./v3/projects/{id}/variables/{key}.delete.parameters[0].description": "The ID of a project",
	"paths./v3/projects/{id}/variables/{key}.delete.parameters[0].in": "path",
	"paths./v3/projects/{id}/variables/{key}.delete.parameters[0].name": "id",
	"paths./v3/projects/{id}/variables/{key}.delete.parameters[0].required": true,
	"paths./v3/projects/{id}/variables/{key}.delete.parameters[0].type": "string",
	"paths./v3/projects/{id}/variables/{key}.delete.parameters[1].description": "The key of the variable",
	"paths./v3/projects/{id}/variables/{key}.delete.parameters[1].in": "path",
	"paths./v3/projects/{id}/variables/{key}.delete.parameters[1].name": "key",
	"paths./v3/projects/{id}/variables/{key}.delete.parameters[1].required": true,
	"paths./v3/projects/{id}/variables/{key}.delete.parameters[1].type": "string",
	"paths./v3/projects/{id}/variables/{key}.delete.produces.length": 1,
	"paths./v3/projects/{id}/variables/{key}.delete.produces[0]": "application/json",
	"paths./v3/projects/{id}/variables/{key}.delete.responses.200.description": "Delete an existing variable from a project",
	"paths./v3/projects/{id}/variables/{key}.delete.responses.200.schema.$ref": "#/definitions/Variable",
	"paths./v3/projects/{id}/variables/{key}.delete.summary": "Delete an existing variable from a project",
	"paths./v3/projects/{id}/variables/{key}.delete.tags.length": 1,
	"paths./v3/projects/{id}/variables/{key}.delete.tags[0]": "projects",
	"paths./v3/projects/{id}/variables/{key}.get.description": "Get a specific variable from a project",
	"paths./v3/projects/{id}/variables/{key}.get.operationId": "getV3ProjectsIdVariablesKey",
	"paths./v3/projects/{id}/variables/{key}.get.parameters.length": 2,
	"paths./v3/projects/{id}/variables/{key}.get.parameters[0].description": "The ID of a project",
	"paths./v3/projects/{id}/variables/{key}.get.parameters[0].in": "path",
	"paths./v3/projects/{id}/variables/{key}.get.parameters[0].name": "id",
	"paths./v3/projects/{id}/variables/{key}.get.parameters[0].required": true,
	"paths./v3/projects/{id}/variables/{key}.get.parameters[0].type": "string",
	"paths./v3/projects/{id}/variables/{key}.get.parameters[1].description": "The key of the variable",
	"paths./v3/projects/{id}/variables/{key}.get.parameters[1].in": "path",
	"paths./v3/projects/{id}/variables/{key}.get.parameters[1].name": "key",
	"paths./v3/projects/{id}/variables/{key}.get.parameters[1].required": true,
	"paths./v3/projects/{id}/variables/{key}.get.parameters[1].type": "string",
	"paths./v3/projects/{id}/variables/{key}.get.produces.length": 1,
	"paths./v3/projects/{id}/variables/{key}.get.produces[0]": "application/json",
	"paths./v3/projects/{id}/variables/{key}.get.responses.200.description": "Get a specific variable from a project",
	"paths./v3/projects/{id}/variables/{key}.get.responses.200.schema.$ref": "#/definitions/Variable",
	"paths./v3/projects/{id}/variables/{key}.get.summary": "Get a specific variable from a project",
	"paths./v3/projects/{id}/variables/{key}.get.tags.length": 1,
	"paths./v3/projects/{id}/variables/{key}.get.tags[0]": "projects",
	"paths./v3/projects/{id}/variables/{key}.put.consumes.length": 1,
	"paths./v3/projects/{id}/variables/{key}.put.consumes[0]": "application/json",
	"paths./v3/projects/{id}/variables/{key}.put.description": "Update an existing variable from a project",
	"paths./v3/projects/{id}/variables/{key}.put.operationId": "putV3ProjectsIdVariablesKey",
	"paths./v3/projects/{id}/variables/{key}.put.parameters.length": 3,
	"paths./v3/projects/{id}/variables/{key}.put.parameters[0].description": "The ID of a project",
	"paths./v3/projects/{id}/variables/{key}.put.parameters[0].in": "path",
	"paths./v3/projects/{id}/variables/{key}.put.parameters[0].name": "id",
	"paths./v3/projects/{id}/variables/{key}.put.parameters[0].required": true,
	"paths./v3/projects/{id}/variables/{key}.put.parameters[0].type": "string",
	"paths./v3/projects/{id}/variables/{key}.put.parameters[1].description": "The key of the variable",
	"paths./v3/projects/{id}/variables/{key}.put.parameters[1].in": "path",
	"paths./v3/projects/{id}/variables/{key}.put.parameters[1].name": "key",
	"paths./v3/projects/{id}/variables/{key}.put.parameters[1].required": true,
	"paths./v3/projects/{id}/variables/{key}.put.parameters[1].type": "string",
	"paths./v3/projects/{id}/variables/{key}.put.parameters[2].description": "The value of the variable",
	"paths./v3/projects/{id}/variables/{key}.put.parameters[2].in": "formData",
	"paths./v3/projects/{id}/variables/{key}.put.parameters[2].name": "value",
	"paths./v3/projects/{id}/variables/{key}.put.parameters[2].required": false,
	"paths./v3/projects/{id}/variables/{key}.put.parameters[2].type": "string",
	"paths./v3/projects/{id}/variables/{key}.put.produces.length": 1,
	"paths./v3/projects/{id}/variables/{key}.put.produces[0]": "application/json",
	"paths./v3/projects/{id}/variables/{key}.put.responses.200.description": "Update an existing variable from a project",
	"paths./v3/projects/{id}/variables/{key}.put.responses.200.schema.$ref": "#/definitions/Variable",
	"paths./v3/projects/{id}/variables/{key}.put.summary": "Update an existing variable from a project",
	"paths./v3/projects/{id}/variables/{key}.put.tags.length": 1,
	"paths./v3/projects/{id}/variables/{key}.put.tags[0]": "projects",
	"paths./v3/runners.get.description": "Get runners available for user",
	"paths./v3/runners.get.operationId": "getV3Runners",
	"paths./v3/runners.get.parameters.length": 3,
	"paths./v3/runners.get.parameters[0].description": "The scope of specific runners to show",
	"paths./v3/runners.get.parameters[0].enum.length": 3,
	"paths./v3/runners.get.parameters[0].enum[0]": "active",
	"paths./v3/runners.get.parameters[0].enum[1]": "paused",
	"paths./v3/runners.get.parameters[0].enum[2]": "online",
	"paths./v3/runners.get.parameters[0].in": "query",
	"paths./v3/runners.get.parameters[0].name": "scope",
	"paths./v3/runners.get.parameters[0].required": false,
	"paths./v3/runners.get.parameters[0].type": "string",
	"paths./v3/runners.get.parameters[1].description": "Current page number",
	"paths./v3/runners.get.parameters[1].format": "int32",
	"paths./v3/runners.get.parameters[1].in": "query",
	"paths./v3/runners.get.parameters[1].name": "page",
	"paths./v3/runners.get.parameters[1].required": false,
	"paths./v3/runners.get.parameters[1].type": "integer",
	"paths./v3/runners.get.parameters[2].description": "Number of items per page",
	"paths./v3/runners.get.parameters[2].format": "int32",
	"paths./v3/runners.get.parameters[2].in": "query",
	"paths./v3/runners.get.parameters[2].name": "per_page",
	"paths./v3/runners.get.parameters[2].required": false,
	"paths./v3/runners.get.parameters[2].type": "integer",
	"paths./v3/runners.get.produces.length": 1,
	"paths./v3/runners.get.produces[0]": "application/json",
	"paths./v3/runners.get.responses.200.description": "Get runners available for user",
	"paths./v3/runners.get.responses.200.schema.$ref": "#/definitions/Runner",
	"paths./v3/runners.get.summary": "Get runners available for user",
	"paths./v3/runners.get.tags.length": 1,
	"paths./v3/runners.get.tags[0]": "runners",
	"paths./v3/runners/all.get.description": "Get all runners - shared and specific",
	"paths./v3/runners/all.get.operationId": "getV3RunnersAll",
	"paths./v3/runners/all.get.parameters.length": 3,
	"paths./v3/runners/all.get.parameters[0].description": "The scope of specific runners to show",
	"paths./v3/runners/all.get.parameters[0].enum.length": 5,
	"paths./v3/runners/all.get.parameters[0].enum[0]": "active",
	"paths./v3/runners/all.get.parameters[0].enum[1]": "paused",
	"paths./v3/runners/all.get.parameters[0].enum[2]": "online",
	"paths./v3/runners/all.get.parameters[0].enum[3]": "specific",
	"paths./v3/runners/all.get.parameters[0].enum[4]": "shared",
	"paths./v3/runners/all.get.parameters[0].in": "query",
	"paths./v3/runners/all.get.parameters[0].name": "scope",
	"paths./v3/runners/all.get.parameters[0].required": false,
	"paths./v3/runners/all.get.parameters[0].type": "string",
	"paths./v3/runners/all.get.parameters[1].description": "Current page number",
	"paths./v3/runners/all.get.parameters[1].format": "int32",
	"paths./v3/runners/all.get.parameters[1].in": "query",
	"paths./v3/runners/all.get.parameters[1].name": "page",
	"paths./v3/runners/all.get.parameters[1].required": false,
	"paths./v3/runners/all.get.parameters[1].type": "integer",
	"paths./v3/runners/all.get.parameters[2].description": "Number of items per page",
	"paths./v3/runners/all.get.parameters[2].format": "int32",
	"paths./v3/runners/all.get.parameters[2].in": "query",
	"paths./v3/runners/all.get.parameters[2].name": "per_page",
	"paths./v3/runners/all.get.parameters[2].required": false,
	"paths./v3/runners/all.get.parameters[2].type": "integer",
	"paths./v3/runners/all.get.produces.length": 1,
	"paths./v3/runners/all.get.produces[0]": "application/json",
	"paths./v3/runners/all.get.responses.200.description": "Get all runners - shared and specific",
	"paths./v3/runners/all.get.responses.200.schema.$ref": "#/definitions/Runner",
	"paths./v3/runners/all.get.summary": "Get all runners - shared and specific",
	"paths./v3/runners/all.get.tags.length": 1,
	"paths./v3/runners/all.get.tags[0]": "runners",
	"paths./v3/runners/{id}.delete.description": "Remove a runner",
	"paths./v3/runners/{id}.delete.operationId": "deleteV3RunnersId",
	"paths./v3/runners/{id}.delete.parameters.length": 1,
	"paths./v3/runners/{id}.delete.parameters[0].description": "The ID of the runner",
	"paths./v3/runners/{id}.delete.parameters[0].format": "int32",
	"paths./v3/runners/{id}.delete.parameters[0].in": "path",
	"paths./v3/runners/{id}.delete.parameters[0].name": "id",
	"paths./v3/runners/{id}.delete.parameters[0].required": true,
	"paths./v3/runners/{id}.delete.parameters[0].type": "integer",
	"paths./v3/runners/{id}.delete.produces.length": 1,
	"paths./v3/runners/{id}.delete.produces[0]": "application/json",
	"paths./v3/runners/{id}.delete.responses.200.description": "Remove a runner",
	"paths./v3/runners/{id}.delete.responses.200.schema.$ref": "#/definitions/Runner",
	"paths./v3/runners/{id}.delete.summary": "Remove a runner",
	"paths./v3/runners/{id}.delete.tags.length": 1,
	"paths./v3/runners/{id}.delete.tags[0]": "runners",
	"paths./v3/runners/{id}.get.description": "Get runner's details",
	"paths./v3/runners/{id}.get.operationId": "getV3RunnersId",
	"paths./v3/runners/{id}.get.parameters.length": 1,
	"paths./v3/runners/{id}.get.parameters[0].description": "The ID of the runner",
	"paths./v3/runners/{id}.get.parameters[0].format": "int32",
	"paths./v3/runners/{id}.get.parameters[0].in": "path",
	"paths./v3/runners/{id}.get.parameters[0].name": "id",
	"paths./v3/runners/{id}.get.parameters[0].required": true,
	"paths./v3/runners/{id}.get.parameters[0].type": "integer",
	"paths./v3/runners/{id}.get.produces.length": 1,
	"paths./v3/runners/{id}.get.produces[0]": "application/json",
	"paths./v3/runners/{id}.get.responses.200.description": "Get runner's details",
	"paths./v3/runners/{id}.get.responses.200.schema.$ref": "#/definitions/RunnerDetails",
	"paths./v3/runners/{id}.get.summary": "Get runner's details",
	"paths./v3/runners/{id}.get.tags.length": 1,
	"paths./v3/runners/{id}.get.tags[0]": "runners",
	"paths./v3/runners/{id}.put.consumes.length": 1,
	"paths./v3/runners/{id}.put.consumes[0]": "application/json",
	"paths./v3/runners/{id}.put.description": "Update runner's details",
	"paths./v3/runners/{id}.put.operationId": "putV3RunnersId",
	"paths./v3/runners/{id}.put.parameters.length": 6,
	"paths./v3/runners/{id}.put.parameters[0].description": "The ID of the runner",
	"paths./v3/runners/{id}.put.parameters[0].format": "int32",
	"paths./v3/runners/{id}.put.parameters[0].in": "path",
	"paths./v3/runners/{id}.put.parameters[0].name": "id",
	"paths./v3/runners/{id}.put.parameters[0].required": true,
	"paths./v3/runners/{id}.put.parameters[0].type": "integer",
	"paths./v3/runners/{id}.put.parameters[1].description": "The description of the runner",
	"paths./v3/runners/{id}.put.parameters[1].in": "formData",
	"paths./v3/runners/{id}.put.parameters[1].name": "description",
	"paths./v3/runners/{id}.put.parameters[1].required": false,
	"paths./v3/runners/{id}.put.parameters[1].type": "string",
	"paths./v3/runners/{id}.put.parameters[2].description": "The state of a runner",
	"paths./v3/runners/{id}.put.parameters[2].in": "formData",
	"paths./v3/runners/{id}.put.parameters[2].name": "active",
	"paths./v3/runners/{id}.put.parameters[2].required": false,
	"paths./v3/runners/{id}.put.parameters[2].type": "boolean",
	"paths./v3/runners/{id}.put.parameters[3].description": "The list of tags for a runner",
	"paths./v3/runners/{id}.put.parameters[3].in": "formData",
	"paths./v3/runners/{id}.put.parameters[3].items.type": "string",
	"paths./v3/runners/{id}.put.parameters[3].name": "tag_list",
	"paths./v3/runners/{id}.put.parameters[3].required": false,
	"paths./v3/runners/{id}.put.parameters[3].type": "array",
	"paths./v3/runners/{id}.put.parameters[4].description": "Flag indicating the runner can execute untagged jobs",
	"paths./v3/runners/{id}.put.parameters[4].in": "formData",
	"paths./v3/runners/{id}.put.parameters[4].name": "run_untagged",
	"paths./v3/runners/{id}.put.parameters[4].required": false,
	"paths./v3/runners/{id}.put.parameters[4].type": "boolean",
	"paths./v3/runners/{id}.put.parameters[5].description": "Flag indicating the runner is locked",
	"paths./v3/runners/{id}.put.parameters[5].in": "formData",
	"paths./v3/runners/{id}.put.parameters[5].name": "locked",
	"paths./v3/runners/{id}.put.parameters[5].required": false,
	"paths./v3/runners/{id}.put.parameters[5].type": "boolean",
	"paths./v3/runners/{id}.put.produces.length": 1,
	"paths./v3/runners/{id}.put.produces[0]": "application/json",
	"paths./v3/runners/{id}.put.responses.200.description": "Update runner's details",
	"paths./v3/runners/{id}.put.responses.200.schema.$ref": "#/definitions/RunnerDetails",
	"paths./v3/runners/{id}.put.summary": "Update runner's details",
	"paths./v3/runners/{id}.put.tags.length": 1,
	"paths./v3/runners/{id}.put.tags[0]": "runners",
	"paths./v3/session.post.consumes.length": 1,
	"paths./v3/session.post.consumes[0]": "application/json",
	"paths./v3/session.post.description": "Login to get token",
	"paths./v3/session.post.operationId": "postV3Session",
	"paths./v3/session.post.parameters.length": 3,
	"paths./v3/session.post.parameters[0].description": "The username",
	"paths./v3/session.post.parameters[0].in": "formData",
	"paths./v3/session.post.parameters[0].name": "login",
	"paths./v3/session.post.parameters[0].required": false,
	"paths./v3/session.post.parameters[0].type": "string",
	"paths./v3/session.post.parameters[1].description": "The email of the user",
	"paths./v3/session.post.parameters[1].in": "formData",
	"paths./v3/session.post.parameters[1].name": "email",
	"paths./v3/session.post.parameters[1].required": false,
	"paths./v3/session.post.parameters[1].type": "string",
	"paths./v3/session.post.parameters[2].description": "The password of the user",
	"paths./v3/session.post.parameters[2].in": "formData",
	"paths./v3/session.post.parameters[2].name": "password",
	"paths./v3/session.post.parameters[2].required": true,
	"paths./v3/session.post.parameters[2].type": "string",
	"paths./v3/session.post.produces.length": 1,
	"paths./v3/session.post.produces[0]": "application/json",
	"paths./v3/session.post.responses.201.description": "Login to get token",
	"paths./v3/session.post.responses.201.schema.$ref": "#/definitions/UserWithPrivateToken",
	"paths./v3/session.post.summary": "Login to get token",
	"paths./v3/session.post.tags.length": 1,
	"paths./v3/session.post.tags[0]": "session",
	"paths./v3/sidekiq/compound_metrics.get.description": "Get the Sidekiq Compound metrics. Includes queue, process, and job statistics",
	"paths./v3/sidekiq/compound_metrics.get.operationId": "getV3SidekiqCompoundMetrics",
	"paths./v3/sidekiq/compound_metrics.get.produces.length": 1,
	"paths./v3/sidekiq/compound_metrics.get.produces[0]": "application/json",
	"paths./v3/sidekiq/compound_metrics.get.responses.200.description": "Get the Sidekiq Compound metrics. Includes queue, process, and job statistics",
	"paths./v3/sidekiq/compound_metrics.get.summary": "Get the Sidekiq Compound metrics. Includes queue, process, and job statistics",
	"paths./v3/sidekiq/compound_metrics.get.tags.length": 1,
	"paths./v3/sidekiq/compound_metrics.get.tags[0]": "sidekiq",
	"paths./v3/sidekiq/job_stats.get.description": "Get the Sidekiq job statistics",
	"paths./v3/sidekiq/job_stats.get.operationId": "getV3SidekiqJobStats",
	"paths./v3/sidekiq/job_stats.get.produces.length": 1,
	"paths./v3/sidekiq/job_stats.get.produces[0]": "application/json",
	"paths./v3/sidekiq/job_stats.get.responses.200.description": "Get the Sidekiq job statistics",
	"paths./v3/sidekiq/job_stats.get.summary": "Get the Sidekiq job statistics",
	"paths./v3/sidekiq/job_stats.get.tags.length": 1,
	"paths./v3/sidekiq/job_stats.get.tags[0]": "sidekiq",
	"paths./v3/sidekiq/process_metrics.get.description": "Get the Sidekiq process metrics",
	"paths./v3/sidekiq/process_metrics.get.operationId": "getV3SidekiqProcessMetrics",
	"paths./v3/sidekiq/process_metrics.get.produces.length": 1,
	"paths./v3/sidekiq/process_metrics.get.produces[0]": "application/json",
	"paths./v3/sidekiq/process_metrics.get.responses.200.description": "Get the Sidekiq process metrics",
	"paths./v3/sidekiq/process_metrics.get.summary": "Get the Sidekiq process metrics",
	"paths./v3/sidekiq/process_metrics.get.tags.length": 1,
	"paths./v3/sidekiq/process_metrics.get.tags[0]": "sidekiq",
	"paths./v3/sidekiq/queue_metrics.get.description": "Get the Sidekiq queue metrics",
	"paths./v3/sidekiq/queue_metrics.get.operationId": "getV3SidekiqQueueMetrics",
	"paths./v3/sidekiq/queue_metrics.get.produces.length": 1,
	"paths./v3/sidekiq/queue_metrics.get.produces[0]": "application/json",
	"paths./v3/sidekiq/queue_metrics.get.responses.200.description": "Get the Sidekiq queue metrics",
	"paths./v3/sidekiq/queue_metrics.get.summary": "Get the Sidekiq queue metrics",
	"paths./v3/sidekiq/queue_metrics.get.tags.length": 1,
	"paths./v3/sidekiq/queue_metrics.get.tags[0]": "sidekiq",
	"paths./v3/snippets.get.description": "This feature was introduced in GitLab 8.15.",
	"paths./v3/snippets.get.operationId": "getV3Snippets",
	"paths./v3/snippets.get.parameters.length": 2,
	"paths./v3/snippets.get.parameters[0].description": "Current page number",
	"paths./v3/snippets.get.parameters[0].format": "int32",
	"paths./v3/snippets.get.parameters[0].in": "query",
	"paths./v3/snippets.get.parameters[0].name": "page",
	"paths./v3/snippets.get.parameters[0].required": false,
	"paths./v3/snippets.get.parameters[0].type": "integer",
	"paths./v3/snippets.get.parameters[1].description": "Number of items per page",
	"paths./v3/snippets.get.parameters[1].format": "int32",
	"paths./v3/snippets.get.parameters[1].in": "query",
	"paths./v3/snippets.get.parameters[1].name": "per_page",
	"paths./v3/snippets.get.parameters[1].required": false,
	"paths./v3/snippets.get.parameters[1].type": "integer",
	"paths./v3/snippets.get.produces.length": 1,
	"paths./v3/snippets.get.produces[0]": "application/json",
	"paths./v3/snippets.get.responses.200.description": "Get a snippets list for authenticated user",
	"paths./v3/snippets.get.responses.200.schema.$ref": "#/definitions/PersonalSnippet",
	"paths./v3/snippets.get.summary": "Get a snippets list for authenticated user",
	"paths./v3/snippets.get.tags.length": 1,
	"paths./v3/snippets.get.tags[0]": "snippets",
	"paths./v3/snippets.post.consumes.length": 1,
	"paths./v3/snippets.post.consumes[0]": "application/json",
	"paths./v3/snippets.post.description": "This feature was introduced in GitLab 8.15.",
	"paths./v3/snippets.post.operationId": "postV3Snippets",
	"paths./v3/snippets.post.parameters.length": 4,
	"paths./v3/snippets.post.parameters[0].description": "The title of a snippet",
	"paths./v3/snippets.post.parameters[0].in": "formData",
	"paths./v3/snippets.post.parameters[0].name": "title",
	"paths./v3/snippets.post.parameters[0].required": true,
	"paths./v3/snippets.post.parameters[0].type": "string",
	"paths./v3/snippets.post.parameters[1].description": "The name of a snippet file",
	"paths./v3/snippets.post.parameters[1].in": "formData",
	"paths./v3/snippets.post.parameters[1].name": "file_name",
	"paths./v3/snippets.post.parameters[1].required": true,
	"paths./v3/snippets.post.parameters[1].type": "string",
	"paths./v3/snippets.post.parameters[2].description": "The content of a snippet",
	"paths./v3/snippets.post.parameters[2].in": "formData",
	"paths./v3/snippets.post.parameters[2].name": "content",
	"paths./v3/snippets.post.parameters[2].required": true,
	"paths./v3/snippets.post.parameters[2].type": "string",
	"paths./v3/snippets.post.parameters[3].default": 10,
	"paths./v3/snippets.post.parameters[3].description": "The visibility level of the snippet",
	"paths./v3/snippets.post.parameters[3].enum.length": 3,
	"paths./v3/snippets.post.parameters[3].enum[0]": 0,
	"paths./v3/snippets.post.parameters[3].enum[1]": 10,
	"paths./v3/snippets.post.parameters[3].enum[2]": 20,
	"paths./v3/snippets.post.parameters[3].format": "int32",
	"paths./v3/snippets.post.parameters[3].in": "formData",
	"paths./v3/snippets.post.parameters[3].name": "visibility_level",
	"paths./v3/snippets.post.parameters[3].required": false,
	"paths./v3/snippets.post.parameters[3].type": "integer",
	"paths./v3/snippets.post.produces.length": 1,
	"paths./v3/snippets.post.produces[0]": "application/json",
	"paths./v3/snippets.post.responses.201.description": "Create new snippet",
	"paths./v3/snippets.post.responses.201.schema.$ref": "#/definitions/PersonalSnippet",
	"paths./v3/snippets.post.summary": "Create new snippet",
	"paths./v3/snippets.post.tags.length": 1,
	"paths./v3/snippets.post.tags[0]": "snippets",
	"paths./v3/snippets/public.get.description": "This feature was introduced in GitLab 8.15.",
	"paths./v3/snippets/public.get.operationId": "getV3SnippetsPublic",
	"paths./v3/snippets/public.get.parameters.length": 2,
	"paths./v3/snippets/public.get.parameters[0].description": "Current page number",
	"paths./v3/snippets/public.get.parameters[0].format": "int32",
	"paths./v3/snippets/public.get.parameters[0].in": "query",
	"paths./v3/snippets/public.get.parameters[0].name": "page",
	"paths./v3/snippets/public.get.parameters[0].required": false,
	"paths./v3/snippets/public.get.parameters[0].type": "integer",
	"paths./v3/snippets/public.get.parameters[1].description": "Number of items per page",
	"paths./v3/snippets/public.get.parameters[1].format": "int32",
	"paths./v3/snippets/public.get.parameters[1].in": "query",
	"paths./v3/snippets/public.get.parameters[1].name": "per_page",
	"paths./v3/snippets/public.get.parameters[1].required": false,
	"paths./v3/snippets/public.get.parameters[1].type": "integer",
	"paths./v3/snippets/public.get.produces.length": 1,
	"paths./v3/snippets/public.get.produces[0]": "application/json",
	"paths./v3/snippets/public.get.responses.200.description": "List all public snippets current_user has access to",
	"paths./v3/snippets/public.get.responses.200.schema.$ref": "#/definitions/PersonalSnippet",
	"paths./v3/snippets/public.get.summary": "List all public snippets current_user has access to",
	"paths./v3/snippets/public.get.tags.length": 1,
	"paths./v3/snippets/public.get.tags[0]": "snippets",
	"paths./v3/snippets/{id}.delete.description": "This feature was introduced in GitLab 8.15.",
	"paths./v3/snippets/{id}.delete.operationId": "deleteV3SnippetsId",
	"paths./v3/snippets/{id}.delete.parameters.length": 1,
	"paths./v3/snippets/{id}.delete.parameters[0].description": "The ID of a snippet",
	"paths./v3/snippets/{id}.delete.parameters[0].format": "int32",
	"paths./v3/snippets/{id}.delete.parameters[0].in": "path",
	"paths./v3/snippets/{id}.delete.parameters[0].name": "id",
	"paths./v3/snippets/{id}.delete.parameters[0].required": true,
	"paths./v3/snippets/{id}.delete.parameters[0].type": "integer",
	"paths./v3/snippets/{id}.delete.produces.length": 1,
	"paths./v3/snippets/{id}.delete.produces[0]": "application/json",
	"paths./v3/snippets/{id}.delete.responses.200.description": "Remove snippet",
	"paths./v3/snippets/{id}.delete.responses.200.schema.$ref": "#/definitions/PersonalSnippet",
	"paths./v3/snippets/{id}.delete.summary": "Remove snippet",
	"paths./v3/snippets/{id}.delete.tags.length": 1,
	"paths./v3/snippets/{id}.delete.tags[0]": "snippets",
	"paths./v3/snippets/{id}.get.description": "This feature was introduced in GitLab 8.15.",
	"paths./v3/snippets/{id}.get.operationId": "getV3SnippetsId",
	"paths./v3/snippets/{id}.get.parameters.length": 1,
	"paths./v3/snippets/{id}.get.parameters[0].description": "The ID of a snippet",
	"paths./v3/snippets/{id}.get.parameters[0].format": "int32",
	"paths./v3/snippets/{id}.get.parameters[0].in": "path",
	"paths./v3/snippets/{id}.get.parameters[0].name": "id",
	"paths./v3/snippets/{id}.get.parameters[0].required": true,
	"paths./v3/snippets/{id}.get.parameters[0].type": "integer",
	"paths./v3/snippets/{id}.get.produces.length": 1,
	"paths./v3/snippets/{id}.get.produces[0]": "application/json",
	"paths./v3/snippets/{id}.get.responses.200.description": "Get a single snippet",
	"paths./v3/snippets/{id}.get.responses.200.schema.$ref": "#/definitions/PersonalSnippet",
	"paths./v3/snippets/{id}.get.summary": "Get a single snippet",
	"paths./v3/snippets/{id}.get.tags.length": 1,
	"paths./v3/snippets/{id}.get.tags[0]": "snippets",
	"paths./v3/snippets/{id}.put.consumes.length": 1,
	"paths./v3/snippets/{id}.put.consumes[0]": "application/json",
	"paths./v3/snippets/{id}.put.description": "This feature was introduced in GitLab 8.15.",
	"paths./v3/snippets/{id}.put.operationId": "putV3SnippetsId",
	"paths./v3/snippets/{id}.put.parameters.length": 5,
	"paths./v3/snippets/{id}.put.parameters[0].description": "The ID of a snippet",
	"paths./v3/snippets/{id}.put.parameters[0].format": "int32",
	"paths./v3/snippets/{id}.put.parameters[0].in": "path",
	"paths./v3/snippets/{id}.put.parameters[0].name": "id",
	"paths./v3/snippets/{id}.put.parameters[0].required": true,
	"paths./v3/snippets/{id}.put.parameters[0].type": "integer",
	"paths./v3/snippets/{id}.put.parameters[1].description": "The title of a snippet",
	"paths./v3/snippets/{id}.put.parameters[1].in": "formData",
	"paths./v3/snippets/{id}.put.parameters[1].name": "title",
	"paths./v3/snippets/{id}.put.parameters[1].required": false,
	"paths./v3/snippets/{id}.put.parameters[1].type": "string",
	"paths./v3/snippets/{id}.put.parameters[2].description": "The name of a snippet file",
	"paths./v3/snippets/{id}.put.parameters[2].in": "formData",
	"paths./v3/snippets/{id}.put.parameters[2].name": "file_name",
	"paths./v3/snippets/{id}.put.parameters[2].required": false,
	"paths./v3/snippets/{id}.put.parameters[2].type": "string",
	"paths./v3/snippets/{id}.put.parameters[3].description": "The content of a snippet",
	"paths./v3/snippets/{id}.put.parameters[3].in": "formData",
	"paths./v3/snippets/{id}.put.parameters[3].name": "content",
	"paths./v3/snippets/{id}.put.parameters[3].required": false,
	"paths./v3/snippets/{id}.put.parameters[3].type": "string",
	"paths./v3/snippets/{id}.put.parameters[4].description": "The visibility level of the snippet",
	"paths./v3/snippets/{id}.put.parameters[4].enum.length": 3,
	"paths./v3/snippets/{id}.put.parameters[4].enum[0]": 0,
	"paths./v3/snippets/{id}.put.parameters[4].enum[1]": 10,
	"paths./v3/snippets/{id}.put.parameters[4].enum[2]": 20,
	"paths./v3/snippets/{id}.put.parameters[4].format": "int32",
	"paths./v3/snippets/{id}.put.parameters[4].in": "formData",
	"paths./v3/snippets/{id}.put.parameters[4].name": "visibility_level",
	"paths./v3/snippets/{id}.put.parameters[4].required": false,
	"paths./v3/snippets/{id}.put.parameters[4].type": "integer",
	"paths./v3/snippets/{id}.put.produces.length": 1,
	"paths./v3/snippets/{id}.put.produces[0]": "application/json",
	"paths./v3/snippets/{id}.put.responses.200.description": "Update an existing snippet",
	"paths./v3/snippets/{id}.put.responses.200.schema.$ref": "#/definitions/PersonalSnippet",
	"paths./v3/snippets/{id}.put.summary": "Update an existing snippet",
	"paths./v3/snippets/{id}.put.tags.length": 1,
	"paths./v3/snippets/{id}.put.tags[0]": "snippets",
	"paths./v3/snippets/{id}/raw.get.description": "This feature was introduced in GitLab 8.15.",
	"paths./v3/snippets/{id}/raw.get.operationId": "getV3SnippetsIdRaw",
	"paths./v3/snippets/{id}/raw.get.parameters.length": 1,
	"paths./v3/snippets/{id}/raw.get.parameters[0].description": "The ID of a snippet",
	"paths./v3/snippets/{id}/raw.get.parameters[0].format": "int32",
	"paths./v3/snippets/{id}/raw.get.parameters[0].in": "path",
	"paths./v3/snippets/{id}/raw.get.parameters[0].name": "id",
	"paths./v3/snippets/{id}/raw.get.parameters[0].required": true,
	"paths./v3/snippets/{id}/raw.get.parameters[0].type": "integer",
	"paths./v3/snippets/{id}/raw.get.produces.length": 1,
	"paths./v3/snippets/{id}/raw.get.produces[0]": "application/json",
	"paths./v3/snippets/{id}/raw.get.responses.200.description": "Get a raw snippet",
	"paths./v3/snippets/{id}/raw.get.summary": "Get a raw snippet",
	"paths./v3/snippets/{id}/raw.get.tags.length": 1,
	"paths./v3/snippets/{id}/raw.get.tags[0]": "snippets",
	"paths./v3/templates/dockerfiles.get.description": "This feature was introduced in GitLab 8.15.",
	"paths./v3/templates/dockerfiles.get.operationId": "getV3TemplatesDockerfiles",
	"paths./v3/templates/dockerfiles.get.produces.length": 1,
	"paths./v3/templates/dockerfiles.get.produces[0]": "application/json",
	"paths./v3/templates/dockerfiles.get.responses.200.description": "Get the list of the available template",
	"paths./v3/templates/dockerfiles.get.responses.200.schema.$ref": "#/definitions/TemplatesList",
	"paths./v3/templates/dockerfiles.get.summary": "Get the list of the available template",
	"paths./v3/templates/dockerfiles.get.tags.length": 1,
	"paths./v3/templates/dockerfiles.get.tags[0]": "templates",
	"paths./v3/templates/dockerfiles/{name}.get.description": "This feature was introduced in GitLab 8.15.",
	"paths./v3/templates/dockerfiles/{name}.get.operationId": "getV3TemplatesDockerfilesName",
	"paths./v3/templates/dockerfiles/{name}.get.parameters.length": 1,
	"paths./v3/templates/dockerfiles/{name}.get.parameters[0].description": "The name of the template",
	"paths./v3/templates/dockerfiles/{name}.get.parameters[0].in": "path",
	"paths./v3/templates/dockerfiles/{name}.get.parameters[0].name": "name",
	"paths./v3/templates/dockerfiles/{name}.get.parameters[0].required": true,
	"paths./v3/templates/dockerfiles/{name}.get.parameters[0].type": "string",
	"paths./v3/templates/dockerfiles/{name}.get.produces.length": 1,
	"paths./v3/templates/dockerfiles/{name}.get.produces[0]": "application/json",
	"paths./v3/templates/dockerfiles/{name}.get.responses.200.description": "Get the text for a specific template present in local filesystem",
	"paths./v3/templates/dockerfiles/{name}.get.responses.200.schema.$ref": "#/definitions/Template",
	"paths./v3/templates/dockerfiles/{name}.get.summary": "Get the text for a specific template present in local filesystem",
	"paths./v3/templates/dockerfiles/{name}.get.tags.length": 1,
	"paths./v3/templates/dockerfiles/{name}.get.tags[0]": "templates",
	"paths./v3/templates/gitignores.get.description": "This feature was introduced in GitLab 8.8.",
	"paths./v3/templates/gitignores.get.operationId": "getV3TemplatesGitignores",
	"paths./v3/templates/gitignores.get.produces.length": 1,
	"paths./v3/templates/gitignores.get.produces[0]": "application/json",
	"paths./v3/templates/gitignores.get.responses.200.description": "Get the list of the available template",
	"paths./v3/templates/gitignores.get.responses.200.schema.$ref": "#/definitions/TemplatesList",
	"paths./v3/templates/gitignores.get.summary": "Get the list of the available template",
	"paths./v3/templates/gitignores.get.tags.length": 1,
	"paths./v3/templates/gitignores.get.tags[0]": "templates",
	"paths./v3/templates/gitignores/{name}.get.description": "This feature was introduced in GitLab 8.8.",
	"paths./v3/templates/gitignores/{name}.get.operationId": "getV3TemplatesGitignoresName",
	"paths./v3/templates/gitignores/{name}.get.parameters.length": 1,
	"paths./v3/templates/gitignores/{name}.get.parameters[0].description": "The name of the template",
	"paths./v3/templates/gitignores/{name}.get.parameters[0].in": "path",
	"paths./v3/templates/gitignores/{name}.get.parameters[0].name": "name",
	"paths./v3/templates/gitignores/{name}.get.parameters[0].required": true,
	"paths./v3/templates/gitignores/{name}.get.parameters[0].type": "string",
	"paths./v3/templates/gitignores/{name}.get.produces.length": 1,
	"paths./v3/templates/gitignores/{name}.get.produces[0]": "application/json",
	"paths./v3/templates/gitignores/{name}.get.responses.200.description": "Get the text for a specific template present in local filesystem",
	"paths./v3/templates/gitignores/{name}.get.responses.200.schema.$ref": "#/definitions/Template",
	"paths./v3/templates/gitignores/{name}.get.summary": "Get the text for a specific template present in local filesystem",
	"paths./v3/templates/gitignores/{name}.get.tags.length": 1,
	"paths./v3/templates/gitignores/{name}.get.tags[0]": "templates",
	"paths./v3/templates/gitlab_ci_ymls.get.description": "This feature was introduced in GitLab 8.9.",
	"paths./v3/templates/gitlab_ci_ymls.get.operationId": "getV3TemplatesGitlabCiYmls",
	"paths./v3/templates/gitlab_ci_ymls.get.produces.length": 1,
	"paths./v3/templates/gitlab_ci_ymls.get.produces[0]": "application/json",
	"paths./v3/templates/gitlab_ci_ymls.get.responses.200.description": "Get the list of the available template",
	"paths./v3/templates/gitlab_ci_ymls.get.responses.200.schema.$ref": "#/definitions/TemplatesList",
	"paths./v3/templates/gitlab_ci_ymls.get.summary": "Get the list of the available template",
	"paths./v3/templates/gitlab_ci_ymls.get.tags.length": 1,
	"paths./v3/templates/gitlab_ci_ymls.get.tags[0]": "templates",
	"paths./v3/templates/gitlab_ci_ymls/{name}.get.description": "This feature was introduced in GitLab 8.9.",
	"paths./v3/templates/gitlab_ci_ymls/{name}.get.operationId": "getV3TemplatesGitlabCiYmlsName",
	"paths./v3/templates/gitlab_ci_ymls/{name}.get.parameters.length": 1,
	"paths./v3/templates/gitlab_ci_ymls/{name}.get.parameters[0].description": "The name of the template",
	"paths./v3/templates/gitlab_ci_ymls/{name}.get.parameters[0].in": "path",
	"paths./v3/templates/gitlab_ci_ymls/{name}.get.parameters[0].name": "name",
	"paths./v3/templates/gitlab_ci_ymls/{name}.get.parameters[0].required": true,
	"paths./v3/templates/gitlab_ci_ymls/{name}.get.parameters[0].type": "string",
	"paths./v3/templates/gitlab_ci_ymls/{name}.get.produces.length": 1,
	"paths./v3/templates/gitlab_ci_ymls/{name}.get.produces[0]": "application/json",
	"paths./v3/templates/gitlab_ci_ymls/{name}.get.responses.200.description": "Get the text for a specific template present in local filesystem",
	"paths./v3/templates/gitlab_ci_ymls/{name}.get.responses.200.schema.$ref": "#/definitions/Template",
	"paths./v3/templates/gitlab_ci_ymls/{name}.get.summary": "Get the text for a specific template present in local filesystem",
	"paths./v3/templates/gitlab_ci_ymls/{name}.get.tags.length": 1,
	"paths./v3/templates/gitlab_ci_ymls/{name}.get.tags[0]": "templates",
	"paths./v3/templates/licenses.get.description": "This feature was introduced in GitLab 8.7.",
	"paths./v3/templates/licenses.get.operationId": "getV3TemplatesLicenses",
	"paths./v3/templates/licenses.get.parameters.length": 1,
	"paths./v3/templates/licenses.get.parameters[0].description": "If passed, returns only popular licenses",
	"paths./v3/templates/licenses.get.parameters[0].in": "query",
	"paths./v3/templates/licenses.get.parameters[0].name": "popular",
	"paths./v3/templates/licenses.get.parameters[0].required": false,
	"paths./v3/templates/licenses.get.parameters[0].type": "boolean",
	"paths./v3/templates/licenses.get.produces.length": 1,
	"paths./v3/templates/licenses.get.produces[0]": "application/json",
	"paths./v3/templates/licenses.get.responses.200.description": "Get the list of the available license template",
	"paths./v3/templates/licenses.get.responses.200.schema.$ref": "#/definitions/RepoLicense",
	"paths./v3/templates/licenses.get.summary": "Get the list of the available license template",
	"paths./v3/templates/licenses.get.tags.length": 1,
	"paths./v3/templates/licenses.get.tags[0]": "templates",
	"paths./v3/templates/licenses/{name}.get.description": "This feature was introduced in GitLab 8.7.",
	"paths./v3/templates/licenses/{name}.get.operationId": "getV3TemplatesLicensesName",
	"paths./v3/templates/licenses/{name}.get.parameters.length": 1,
	"paths./v3/templates/licenses/{name}.get.parameters[0].description": "The name of the template",
	"paths./v3/templates/licenses/{name}.get.parameters[0].in": "path",
	"paths./v3/templates/licenses/{name}.get.parameters[0].name": "name",
	"paths./v3/templates/licenses/{name}.get.parameters[0].required": true,
	"paths./v3/templates/licenses/{name}.get.parameters[0].type": "string",
	"paths./v3/templates/licenses/{name}.get.produces.length": 1,
	"paths./v3/templates/licenses/{name}.get.produces[0]": "application/json",
	"paths./v3/templates/licenses/{name}.get.responses.200.description": "Get the text for a specific license",
	"paths./v3/templates/licenses/{name}.get.responses.200.schema.$ref": "#/definitions/RepoLicense",
	"paths./v3/templates/licenses/{name}.get.summary": "Get the text for a specific license",
	"paths./v3/templates/licenses/{name}.get.tags.length": 1,
	"paths./v3/templates/licenses/{name}.get.tags[0]": "templates",
	"paths./v3/todos.delete.description": "Mark all todos as done",
	"paths./v3/todos.delete.operationId": "deleteV3Todos",
	"paths./v3/todos.delete.produces.length": 1,
	"paths./v3/todos.delete.produces[0]": "application/json",
	"paths./v3/todos.delete.responses.204.description": "Mark all todos as done",
	"paths./v3/todos.delete.summary": "Mark all todos as done",
	"paths./v3/todos.delete.tags.length": 1,
	"paths./v3/todos.delete.tags[0]": "todos",
	"paths./v3/todos.get.description": "Get a todo list",
	"paths./v3/todos.get.operationId": "getV3Todos",
	"paths./v3/todos.get.parameters.length": 2,
	"paths./v3/todos.get.parameters[0].description": "Current page number",
	"paths./v3/todos.get.parameters[0].format": "int32",
	"paths./v3/todos.get.parameters[0].in": "query",
	"paths./v3/todos.get.parameters[0].name": "page",
	"paths./v3/todos.get.parameters[0].required": false,
	"paths./v3/todos.get.parameters[0].type": "integer",
	"paths./v3/todos.get.parameters[1].description": "Number of items per page",
	"paths./v3/todos.get.parameters[1].format": "int32",
	"paths./v3/todos.get.parameters[1].in": "query",
	"paths./v3/todos.get.parameters[1].name": "per_page",
	"paths./v3/todos.get.parameters[1].required": false,
	"paths./v3/todos.get.parameters[1].type": "integer",
	"paths./v3/todos.get.produces.length": 1,
	"paths./v3/todos.get.produces[0]": "application/json",
	"paths./v3/todos.get.responses.200.description": "Get a todo list",
	"paths./v3/todos.get.responses.200.schema.$ref": "#/definitions/Todo",
	"paths./v3/todos.get.summary": "Get a todo list",
	"paths./v3/todos.get.tags.length": 1,
	"paths./v3/todos.get.tags[0]": "todos",
	"paths./v3/todos/{id}.delete.description": "Mark a todo as done",
	"paths./v3/todos/{id}.delete.operationId": "deleteV3TodosId",
	"paths./v3/todos/{id}.delete.parameters.length": 1,
	"paths./v3/todos/{id}.delete.parameters[0].description": "The ID of the todo being marked as done",
	"paths./v3/todos/{id}.delete.parameters[0].format": "int32",
	"paths./v3/todos/{id}.delete.parameters[0].in": "path",
	"paths./v3/todos/{id}.delete.parameters[0].name": "id",
	"paths./v3/todos/{id}.delete.parameters[0].required": true,
	"paths./v3/todos/{id}.delete.parameters[0].type": "integer",
	"paths./v3/todos/{id}.delete.produces.length": 1,
	"paths./v3/todos/{id}.delete.produces[0]": "application/json",
	"paths./v3/todos/{id}.delete.responses.200.description": "Mark a todo as done",
	"paths./v3/todos/{id}.delete.responses.200.schema.$ref": "#/definitions/Todo",
	"paths./v3/todos/{id}.delete.summary": "Mark a todo as done",
	"paths./v3/todos/{id}.delete.tags.length": 1,
	"paths./v3/todos/{id}.delete.tags[0]": "todos",
	"paths./v3/user.get.description": "Get the currently authenticated user",
	"paths./v3/user.get.operationId": "getV3User",
	"paths./v3/user.get.produces.length": 1,
	"paths./v3/user.get.produces[0]": "application/json",
	"paths./v3/user.get.responses.200.description": "Get the currently authenticated user",
	"paths./v3/user.get.responses.200.schema.$ref": "#/definitions/UserPublic",
	"paths./v3/user.get.summary": "Get the currently authenticated user",
	"paths./v3/user.get.tags.length": 1,
	"paths./v3/user.get.tags[0]": "user",
	"paths./v3/user/emails.get.description": "Get the currently authenticated user's email addresses",
	"paths./v3/user/emails.get.operationId": "getV3UserEmails",
	"paths./v3/user/emails.get.produces.length": 1,
	"paths./v3/user/emails.get.produces[0]": "application/json",
	"paths./v3/user/emails.get.responses.200.description": "Get the currently authenticated user's email addresses",
	"paths./v3/user/emails.get.responses.200.schema.$ref": "#/definitions/Email",
	"paths./v3/user/emails.get.summary": "Get the currently authenticated user's email addresses",
	"paths./v3/user/emails.get.tags.length": 1,
	"paths./v3/user/emails.get.tags[0]": "user",
	"paths./v3/user/emails.post.consumes.length": 1,
	"paths./v3/user/emails.post.consumes[0]": "application/json",
	"paths./v3/user/emails.post.description": "Add new email address to the currently authenticated user",
	"paths./v3/user/emails.post.operationId": "postV3UserEmails",
	"paths./v3/user/emails.post.parameters.length": 1,
	"paths./v3/user/emails.post.parameters[0].description": "The new email",
	"paths./v3/user/emails.post.parameters[0].in": "formData",
	"paths./v3/user/emails.post.parameters[0].name": "email",
	"paths./v3/user/emails.post.parameters[0].required": true,
	"paths./v3/user/emails.post.parameters[0].type": "string",
	"paths./v3/user/emails.post.produces.length": 1,
	"paths./v3/user/emails.post.produces[0]": "application/json",
	"paths./v3/user/emails.post.responses.201.description": "Add new email address to the currently authenticated user",
	"paths./v3/user/emails.post.responses.201.schema.$ref": "#/definitions/Email",
	"paths./v3/user/emails.post.summary": "Add new email address to the currently authenticated user",
	"paths./v3/user/emails.post.tags.length": 1,
	"paths./v3/user/emails.post.tags[0]": "user",
	"paths./v3/user/emails/{email_id}.delete.description": "Delete an email address from the currently authenticated user",
	"paths./v3/user/emails/{email_id}.delete.operationId": "deleteV3UserEmailsEmailId",
	"paths./v3/user/emails/{email_id}.delete.parameters.length": 1,
	"paths./v3/user/emails/{email_id}.delete.parameters[0].description": "The ID of the email",
	"paths./v3/user/emails/{email_id}.delete.parameters[0].format": "int32",
	"paths./v3/user/emails/{email_id}.delete.parameters[0].in": "path",
	"paths./v3/user/emails/{email_id}.delete.parameters[0].name": "email_id",
	"paths./v3/user/emails/{email_id}.delete.parameters[0].required": true,
	"paths./v3/user/emails/{email_id}.delete.parameters[0].type": "integer",
	"paths./v3/user/emails/{email_id}.delete.produces.length": 1,
	"paths./v3/user/emails/{email_id}.delete.produces[0]": "application/json",
	"paths./v3/user/emails/{email_id}.delete.responses.204.description": "Delete an email address from the currently authenticated user",
	"paths./v3/user/emails/{email_id}.delete.summary": "Delete an email address from the currently authenticated user",
	"paths./v3/user/emails/{email_id}.delete.tags.length": 1,
	"paths./v3/user/emails/{email_id}.delete.tags[0]": "user",
	"paths./v3/user/emails/{email_id}.get.description": "Get a single email address owned by the currently authenticated user",
	"paths./v3/user/emails/{email_id}.get.operationId": "getV3UserEmailsEmailId",
	"paths./v3/user/emails/{email_id}.get.parameters.length": 1,
	"paths./v3/user/emails/{email_id}.get.parameters[0].description": "The ID of the email",
	"paths./v3/user/emails/{email_id}.get.parameters[0].format": "int32",
	"paths./v3/user/emails/{email_id}.get.parameters[0].in": "path",
	"paths./v3/user/emails/{email_id}.get.parameters[0].name": "email_id",
	"paths./v3/user/emails/{email_id}.get.parameters[0].required": true,
	"paths./v3/user/emails/{email_id}.get.parameters[0].type": "integer",
	"paths./v3/user/emails/{email_id}.get.produces.length": 1,
	"paths./v3/user/emails/{email_id}.get.produces[0]": "application/json",
	"paths./v3/user/emails/{email_id}.get.responses.200.description": "Get a single email address owned by the currently authenticated user",
	"paths./v3/user/emails/{email_id}.get.responses.200.schema.$ref": "#/definitions/Email",
	"paths./v3/user/emails/{email_id}.get.summary": "Get a single email address owned by the currently authenticated user",
	"paths./v3/user/emails/{email_id}.get.tags.length": 1,
	"paths./v3/user/emails/{email_id}.get.tags[0]": "user",
	"paths./v3/user/keys.get.description": "Get the currently authenticated user's SSH keys",
	"paths./v3/user/keys.get.operationId": "getV3UserKeys",
	"paths./v3/user/keys.get.produces.length": 1,
	"paths./v3/user/keys.get.produces[0]": "application/json",
	"paths./v3/user/keys.get.responses.200.description": "Get the currently authenticated user's SSH keys",
	"paths./v3/user/keys.get.responses.200.schema.$ref": "#/definitions/SSHKey",
	"paths./v3/user/keys.get.summary": "Get the currently authenticated user's SSH keys",
	"paths./v3/user/keys.get.tags.length": 1,
	"paths./v3/user/keys.get.tags[0]": "user",
	"paths./v3/user/keys.post.consumes.length": 1,
	"paths./v3/user/keys.post.consumes[0]": "application/json",
	"paths./v3/user/keys.post.description": "Add a new SSH key to the currently authenticated user",
	"paths./v3/user/keys.post.operationId": "postV3UserKeys",
	"paths./v3/user/keys.post.parameters.length": 2,
	"paths./v3/user/keys.post.parameters[0].description": "The new SSH key",
	"paths./v3/user/keys.post.parameters[0].in": "formData",
	"paths./v3/user/keys.post.parameters[0].name": "key",
	"paths./v3/user/keys.post.parameters[0].required": true,
	"paths./v3/user/keys.post.parameters[0].type": "string",
	"paths./v3/user/keys.post.parameters[1].description": "The title of the new SSH key",
	"paths./v3/user/keys.post.parameters[1].in": "formData",
	"paths./v3/user/keys.post.parameters[1].name": "title",
	"paths./v3/user/keys.post.parameters[1].required": true,
	"paths./v3/user/keys.post.parameters[1].type": "string",
	"paths./v3/user/keys.post.produces.length": 1,
	"paths./v3/user/keys.post.produces[0]": "application/json",
	"paths./v3/user/keys.post.responses.201.description": "Add a new SSH key to the currently authenticated user",
	"paths./v3/user/keys.post.responses.201.schema.$ref": "#/definitions/SSHKey",
	"paths./v3/user/keys.post.summary": "Add a new SSH key to the currently authenticated user",
	"paths./v3/user/keys.post.tags.length": 1,
	"paths./v3/user/keys.post.tags[0]": "user",
	"paths./v3/user/keys/{key_id}.delete.description": "Delete an SSH key from the currently authenticated user",
	"paths./v3/user/keys/{key_id}.delete.operationId": "deleteV3UserKeysKeyId",
	"paths./v3/user/keys/{key_id}.delete.parameters.length": 1,
	"paths./v3/user/keys/{key_id}.delete.parameters[0].description": "The ID of the SSH key",
	"paths./v3/user/keys/{key_id}.delete.parameters[0].format": "int32",
	"paths./v3/user/keys/{key_id}.delete.parameters[0].in": "path",
	"paths./v3/user/keys/{key_id}.delete.parameters[0].name": "key_id",
	"paths./v3/user/keys/{key_id}.delete.parameters[0].required": true,
	"paths./v3/user/keys/{key_id}.delete.parameters[0].type": "integer",
	"paths./v3/user/keys/{key_id}.delete.produces.length": 1,
	"paths./v3/user/keys/{key_id}.delete.produces[0]": "application/json",
	"paths./v3/user/keys/{key_id}.delete.responses.200.description": "Delete an SSH key from the currently authenticated user",
	"paths./v3/user/keys/{key_id}.delete.responses.200.schema.$ref": "#/definitions/SSHKey",
	"paths./v3/user/keys/{key_id}.delete.summary": "Delete an SSH key from the currently authenticated user",
	"paths./v3/user/keys/{key_id}.delete.tags.length": 1,
	"paths./v3/user/keys/{key_id}.delete.tags[0]": "user",
	"paths./v3/user/keys/{key_id}.get.description": "Get a single key owned by currently authenticated user",
	"paths./v3/user/keys/{key_id}.get.operationId": "getV3UserKeysKeyId",
	"paths./v3/user/keys/{key_id}.get.parameters.length": 1,
	"paths./v3/user/keys/{key_id}.get.parameters[0].description": "The ID of the SSH key",
	"paths./v3/user/keys/{key_id}.get.parameters[0].format": "int32",
	"paths./v3/user/keys/{key_id}.get.parameters[0].in": "path",
	"paths./v3/user/keys/{key_id}.get.parameters[0].name": "key_id",
	"paths./v3/user/keys/{key_id}.get.parameters[0].required": true,
	"paths./v3/user/keys/{key_id}.get.parameters[0].type": "integer",
	"paths./v3/user/keys/{key_id}.get.produces.length": 1,
	"paths./v3/user/keys/{key_id}.get.produces[0]": "application/json",
	"paths./v3/user/keys/{key_id}.get.responses.200.description": "Get a single key owned by currently authenticated user",
	"paths./v3/user/keys/{key_id}.get.responses.200.schema.$ref": "#/definitions/SSHKey",
	"paths./v3/user/keys/{key_id}.get.summary": "Get a single key owned by currently authenticated user",
	"paths./v3/user/keys/{key_id}.get.tags.length": 1,
	"paths./v3/user/keys/{key_id}.get.tags[0]": "user",
	"paths./v3/users.get.description": "Get the list of users",
	"paths./v3/users.get.operationId": "getV3Users",
	"paths./v3/users.get.parameters.length": 7,
	"paths./v3/users.get.parameters[0].description": "Get a single user with a specific username",
	"paths./v3/users.get.parameters[0].in": "query",
	"paths./v3/users.get.parameters[0].name": "username",
	"paths./v3/users.get.parameters[0].required": false,
	"paths./v3/users.get.parameters[0].type": "string",
	"paths./v3/users.get.parameters[1].description": "Search for a username",
	"paths./v3/users.get.parameters[1].in": "query",
	"paths./v3/users.get.parameters[1].name": "search",
	"paths./v3/users.get.parameters[1].required": false,
	"paths./v3/users.get.parameters[1].type": "string",
	"paths./v3/users.get.parameters[2].description": "Filters only active users",
	"paths./v3/users.get.parameters[2].in": "query",
	"paths./v3/users.get.parameters[2].name": "active",
	"paths./v3/users.get.parameters[2].required": false,
	"paths./v3/users.get.parameters[2].type": "boolean",
	"paths./v3/users.get.parameters[3].description": "Filters only external users",
	"paths./v3/users.get.parameters[3].in": "query",
	"paths./v3/users.get.parameters[3].name": "external",
	"paths./v3/users.get.parameters[3].required": false,
	"paths./v3/users.get.parameters[3].type": "boolean",
	"paths./v3/users.get.parameters[4].description": "Filters only blocked users",
	"paths./v3/users.get.parameters[4].in": "query",
	"paths./v3/users.get.parameters[4].name": "blocked",
	"paths./v3/users.get.parameters[4].required": false,
	"paths./v3/users.get.parameters[4].type": "boolean",
	"paths./v3/users.get.parameters[5].description": "Current page number",
	"paths./v3/users.get.parameters[5].format": "int32",
	"paths./v3/users.get.parameters[5].in": "query",
	"paths./v3/users.get.parameters[5].name": "page",
	"paths./v3/users.get.parameters[5].required": false,
	"paths./v3/users.get.parameters[5].type": "integer",
	"paths./v3/users.get.parameters[6].description": "Number of items per page",
	"paths./v3/users.get.parameters[6].format": "int32",
	"paths./v3/users.get.parameters[6].in": "query",
	"paths./v3/users.get.parameters[6].name": "per_page",
	"paths./v3/users.get.parameters[6].required": false,
	"paths./v3/users.get.parameters[6].type": "integer",
	"paths./v3/users.get.produces.length": 1,
	"paths./v3/users.get.produces[0]": "application/json",
	"paths./v3/users.get.responses.200.description": "Get the list of users",
	"paths./v3/users.get.responses.200.schema.$ref": "#/definitions/UserBasic",
	"paths./v3/users.get.summary": "Get the list of users",
	"paths./v3/users.get.tags.length": 1,
	"paths./v3/users.get.tags[0]": "users",
	"paths./v3/users.post.consumes.length": 1,
	"paths./v3/users.post.consumes[0]": "application/json",
	"paths./v3/users.post.description": "Create a user. Available only for admins.",
	"paths./v3/users.post.operationId": "postV3Users",
	"paths./v3/users.post.parameters.length": 18,
	"paths./v3/users.post.parameters[0].description": "The email of the user",
	"paths./v3/users.post.parameters[0].in": "formData",
	"paths./v3/users.post.parameters[0].name": "email",
	"paths./v3/users.post.parameters[0].required": true,
	"paths./v3/users.post.parameters[0].type": "string",
	"paths./v3/users.post.parameters[10].description": "The external authentication provider UID",
	"paths./v3/users.post.parameters[10].in": "formData",
	"paths./v3/users.post.parameters[10].name": "extern_uid",
	"paths./v3/users.post.parameters[10].required": false,
	"paths./v3/users.post.parameters[10].type": "string",
	"paths./v3/users.post.parameters[11].description": "The external provider",
	"paths./v3/users.post.parameters[11].in": "formData",
	"paths./v3/users.post.parameters[11].name": "provider",
	"paths./v3/users.post.parameters[11].required": false,
	"paths./v3/users.post.parameters[11].type": "string",
	"paths./v3/users.post.parameters[12].description": "The biography of the user",
	"paths./v3/users.post.parameters[12].in": "formData",
	"paths./v3/users.post.parameters[12].name": "bio",
	"paths./v3/users.post.parameters[12].required": false,
	"paths./v3/users.post.parameters[12].type": "string",
	"paths./v3/users.post.parameters[13].description": "The location of the user",
	"paths./v3/users.post.parameters[13].in": "formData",
	"paths./v3/users.post.parameters[13].name": "location",
	"paths./v3/users.post.parameters[13].required": false,
	"paths./v3/users.post.parameters[13].type": "string",
	"paths./v3/users.post.parameters[14].description": "Flag indicating the user is an administrator",
	"paths./v3/users.post.parameters[14].in": "formData",
	"paths./v3/users.post.parameters[14].name": "admin",
	"paths./v3/users.post.parameters[14].required": false,
	"paths./v3/users.post.parameters[14].type": "boolean",
	"paths./v3/users.post.parameters[15].description": "Flag indicating the user can create groups",
	"paths./v3/users.post.parameters[15].in": "formData",
	"paths./v3/users.post.parameters[15].name": "can_create_group",
	"paths./v3/users.post.parameters[15].required": false,
	"paths./v3/users.post.parameters[15].type": "boolean",
	"paths./v3/users.post.parameters[16].description": "Flag indicating the account needs to be confirmed",
	"paths./v3/users.post.parameters[16].in": "formData",
	"paths./v3/users.post.parameters[16].name": "confirm",
	"paths./v3/users.post.parameters[16].required": false,
	"paths./v3/users.post.parameters[16].type": "boolean",
	"paths./v3/users.post.parameters[17].description": "Flag indicating the user is an external user",
	"paths./v3/users.post.parameters[17].in": "formData",
	"paths./v3/users.post.parameters[17].name": "external",
	"paths./v3/users.post.parameters[17].required": false,
	"paths./v3/users.post.parameters[17].type": "boolean",
	"paths./v3/users.post.parameters[1].description": "The password of the new user",
	"paths./v3/users.post.parameters[1].in": "formData",
	"paths./v3/users.post.parameters[1].name": "password",
	"paths./v3/users.post.parameters[1].required": true,
	"paths./v3/users.post.parameters[1].type": "string",
	"paths./v3/users.post.parameters[2].description": "The name of the user",
	"paths./v3/users.post.parameters[2].in": "formData",
	"paths./v3/users.post.parameters[2].name": "name",
	"paths./v3/users.post.parameters[2].required": true,
	"paths./v3/users.post.parameters[2].type": "string",
	"paths./v3/users.post.parameters[3].description": "The username of the user",
	"paths./v3/users.post.parameters[3].in": "formData",
	"paths./v3/users.post.parameters[3].name": "username",
	"paths./v3/users.post.parameters[3].required": true,
	"paths./v3/users.post.parameters[3].type": "string",
	"paths./v3/users.post.parameters[4].description": "The Skype username",
	"paths./v3/users.post.parameters[4].in": "formData",
	"paths./v3/users.post.parameters[4].name": "skype",
	"paths./v3/users.post.parameters[4].required": false,
	"paths./v3/users.post.parameters[4].type": "string",
	"paths./v3/users.post.parameters[5].description": "The LinkedIn username",
	"paths./v3/users.post.parameters[5].in": "formData",
	"paths./v3/users.post.parameters[5].name": "linkedin",
	"paths./v3/users.post.parameters[5].required": false,
	"paths./v3/users.post.parameters[5].type": "string",
	"paths./v3/users.post.parameters[6].description": "The Twitter username",
	"paths./v3/users.post.parameters[6].in": "formData",
	"paths./v3/users.post.parameters[6].name": "twitter",
	"paths./v3/users.post.parameters[6].required": false,
	"paths./v3/users.post.parameters[6].type": "string",
	"paths./v3/users.post.parameters[7].description": "The website of the user",
	"paths./v3/users.post.parameters[7].in": "formData",
	"paths./v3/users.post.parameters[7].name": "website_url",
	"paths./v3/users.post.parameters[7].required": false,
	"paths./v3/users.post.parameters[7].type": "string",
	"paths./v3/users.post.parameters[8].description": "The organization of the user",
	"paths./v3/users.post.parameters[8].in": "formData",
	"paths./v3/users.post.parameters[8].name": "organization",
	"paths./v3/users.post.parameters[8].required": false,
	"paths./v3/users.post.parameters[8].type": "string",
	"paths./v3/users.post.parameters[9].description": "The number of projects a user can create",
	"paths./v3/users.post.parameters[9].format": "int32",
	"paths./v3/users.post.parameters[9].in": "formData",
	"paths./v3/users.post.parameters[9].name": "projects_limit",
	"paths./v3/users.post.parameters[9].required": false,
	"paths./v3/users.post.parameters[9].type": "integer",
	"paths./v3/users.post.produces.length": 1,
	"paths./v3/users.post.produces[0]": "application/json",
	"paths./v3/users.post.responses.201.description": "Create a user. Available only for admins.",
	"paths./v3/users.post.responses.201.schema.$ref": "#/definitions/UserPublic",
	"paths./v3/users.post.summary": "Create a user. Available only for admins.",
	"paths./v3/users.post.tags.length": 1,
	"paths./v3/users.post.tags[0]": "users",
	"paths./v3/users/{id}.delete.description": "Delete a user. Available only for admins.",
	"paths./v3/users/{id}.delete.operationId": "deleteV3UsersId",
	"paths./v3/users/{id}.delete.parameters.length": 1,
	"paths./v3/users/{id}.delete.parameters[0].description": "The ID of the user",
	"paths./v3/users/{id}.delete.parameters[0].format": "int32",
	"paths./v3/users/{id}.delete.parameters[0].in": "path",
	"paths./v3/users/{id}.delete.parameters[0].name": "id",
	"paths./v3/users/{id}.delete.parameters[0].required": true,
	"paths./v3/users/{id}.delete.parameters[0].type": "integer",
	"paths./v3/users/{id}.delete.produces.length": 1,
	"paths./v3/users/{id}.delete.produces[0]": "application/json",
	"paths./v3/users/{id}.delete.responses.200.description": "Delete a user. Available only for admins.",
	"paths./v3/users/{id}.delete.responses.200.schema.$ref": "#/definitions/Email",
	"paths./v3/users/{id}.delete.summary": "Delete a user. Available only for admins.",
	"paths./v3/users/{id}.delete.tags.length": 1,
	"paths./v3/users/{id}.delete.tags[0]": "users",
	"paths./v3/users/{id}.get.description": "Get a single user",
	"paths./v3/users/{id}.get.operationId": "getV3UsersId",
	"paths./v3/users/{id}.get.parameters.length": 1,
	"paths./v3/users/{id}.get.parameters[0].description": "The ID of the user",
	"paths./v3/users/{id}.get.parameters[0].format": "int32",
	"paths./v3/users/{id}.get.parameters[0].in": "path",
	"paths./v3/users/{id}.get.parameters[0].name": "id",
	"paths./v3/users/{id}.get.parameters[0].required": true,
	"paths./v3/users/{id}.get.parameters[0].type": "integer",
	"paths./v3/users/{id}.get.produces.length": 1,
	"paths./v3/users/{id}.get.produces[0]": "application/json",
	"paths./v3/users/{id}.get.responses.200.description": "Get a single user",
	"paths./v3/users/{id}.get.responses.200.schema.$ref": "#/definitions/UserBasic",
	"paths./v3/users/{id}.get.summary": "Get a single user",
	"paths./v3/users/{id}.get.tags.length": 1,
	"paths./v3/users/{id}.get.tags[0]": "users",
	"paths./v3/users/{id}.put.consumes.length": 1,
	"paths./v3/users/{id}.put.consumes[0]": "application/json",
	"paths./v3/users/{id}.put.description": "Update a user. Available only for admins.",
	"paths./v3/users/{id}.put.operationId": "putV3UsersId",
	"paths./v3/users/{id}.put.parameters.length": 19,
	"paths./v3/users/{id}.put.parameters[0].description": "The ID of the user",
	"paths./v3/users/{id}.put.parameters[0].format": "int32",
	"paths./v3/users/{id}.put.parameters[0].in": "path",
	"paths./v3/users/{id}.put.parameters[0].name": "id",
	"paths./v3/users/{id}.put.parameters[0].required": true,
	"paths./v3/users/{id}.put.parameters[0].type": "integer",
	"paths./v3/users/{id}.put.parameters[10].description": "The number of projects a user can create",
	"paths./v3/users/{id}.put.parameters[10].format": "int32",
	"paths./v3/users/{id}.put.parameters[10].in": "formData",
	"paths./v3/users/{id}.put.parameters[10].name": "projects_limit",
	"paths./v3/users/{id}.put.parameters[10].required": false,
	"paths./v3/users/{id}.put.parameters[10].type": "integer",
	"paths./v3/users/{id}.put.parameters[11].description": "The external authentication provider UID",
	"paths./v3/users/{id}.put.parameters[11].in": "formData",
	"paths./v3/users/{id}.put.parameters[11].name": "extern_uid",
	"paths./v3/users/{id}.put.parameters[11].required": false,
	"paths./v3/users/{id}.put.parameters[11].type": "string",
	"paths./v3/users/{id}.put.parameters[12].description": "The external provider",
	"paths./v3/users/{id}.put.parameters[12].in": "formData",
	"paths./v3/users/{id}.put.parameters[12].name": "provider",
	"paths./v3/users/{id}.put.parameters[12].required": false,
	"paths./v3/users/{id}.put.parameters[12].type": "string",
	"paths./v3/users/{id}.put.parameters[13].description": "The biography of the user",
	"paths./v3/users/{id}.put.parameters[13].in": "formData",
	"paths./v3/users/{id}.put.parameters[13].name": "bio",
	"paths./v3/users/{id}.put.parameters[13].required": false,
	"paths./v3/users/{id}.put.parameters[13].type": "string",
	"paths./v3/users/{id}.put.parameters[14].description": "The location of the user",
	"paths./v3/users/{id}.put.parameters[14].in": "formData",
	"paths./v3/users/{id}.put.parameters[14].name": "location",
	"paths./v3/users/{id}.put.parameters[14].required": false,
	"paths./v3/users/{id}.put.parameters[14].type": "string",
	"paths./v3/users/{id}.put.parameters[15].description": "Flag indicating the user is an administrator",
	"paths./v3/users/{id}.put.parameters[15].in": "formData",
	"paths./v3/users/{id}.put.parameters[15].name": "admin",
	"paths./v3/users/{id}.put.parameters[15].required": false,
	"paths./v3/users/{id}.put.parameters[15].type": "boolean",
	"paths./v3/users/{id}.put.parameters[16].description": "Flag indicating the user can create groups",
	"paths./v3/users/{id}.put.parameters[16].in": "formData",
	"paths./v3/users/{id}.put.parameters[16].name": "can_create_group",
	"paths./v3/users/{id}.put.parameters[16].required": false,
	"paths./v3/users/{id}.put.parameters[16].type": "boolean",
	"paths./v3/users/{id}.put.parameters[17].description": "Flag indicating the account needs to be confirmed",
	"paths./v3/users/{id}.put.parameters[17].in": "formData",
	"paths./v3/users/{id}.put.parameters[17].name": "confirm",
	"paths./v3/users/{id}.put.parameters[17].required": false,
	"paths./v3/users/{id}.put.parameters[17].type": "boolean",
	"paths./v3/users/{id}.put.parameters[18].description": "Flag indicating the user is an external user",
	"paths./v3/users/{id}.put.parameters[18].in": "formData",
	"paths./v3/users/{id}.put.parameters[18].name": "external",
	"paths./v3/users/{id}.put.parameters[18].required": false,
	"paths./v3/users/{id}.put.parameters[18].type": "boolean",
	"paths./v3/users/{id}.put.parameters[1].description": "The email of the user",
	"paths./v3/users/{id}.put.parameters[1].in": "formData",
	"paths./v3/users/{id}.put.parameters[1].name": "email",
	"paths./v3/users/{id}.put.parameters[1].required": false,
	"paths./v3/users/{id}.put.parameters[1].type": "string",
	"paths./v3/users/{id}.put.parameters[2].description": "The password of the new user",
	"paths./v3/users/{id}.put.parameters[2].in": "formData",
	"paths./v3/users/{id}.put.parameters[2].name": "password",
	"paths./v3/users/{id}.put.parameters[2].required": false,
	"paths./v3/users/{id}.put.parameters[2].type": "string",
	"paths./v3/users/{id}.put.parameters[3].description": "The name of the user",
	"paths./v3/users/{id}.put.parameters[3].in": "formData",
	"paths./v3/users/{id}.put.parameters[3].name": "name",
	"paths./v3/users/{id}.put.parameters[3].required": false,
	"paths./v3/users/{id}.put.parameters[3].type": "string",
	"paths./v3/users/{id}.put.parameters[4].description": "The username of the user",
	"paths./v3/users/{id}.put.parameters[4].in": "formData",
	"paths./v3/users/{id}.put.parameters[4].name": "username",
	"paths./v3/users/{id}.put.parameters[4].required": false,
	"paths./v3/users/{id}.put.parameters[4].type": "string",
	"paths./v3/users/{id}.put.parameters[5].description": "The Skype username",
	"paths./v3/users/{id}.put.parameters[5].in": "formData",
	"paths./v3/users/{id}.put.parameters[5].name": "skype",
	"paths./v3/users/{id}.put.parameters[5].required": false,
	"paths./v3/users/{id}.put.parameters[5].type": "string",
	"paths./v3/users/{id}.put.parameters[6].description": "The LinkedIn username",
	"paths./v3/users/{id}.put.parameters[6].in": "formData",
	"paths./v3/users/{id}.put.parameters[6].name": "linkedin",
	"paths./v3/users/{id}.put.parameters[6].required": false,
	"paths./v3/users/{id}.put.parameters[6].type": "string",
	"paths./v3/users/{id}.put.parameters[7].description": "The Twitter username",
	"paths./v3/users/{id}.put.parameters[7].in": "formData",
	"paths./v3/users/{id}.put.parameters[7].name": "twitter",
	"paths./v3/users/{id}.put.parameters[7].required": false,
	"paths./v3/users/{id}.put.parameters[7].type": "string",
	"paths./v3/users/{id}.put.parameters[8].description": "The website of the user",
	"paths./v3/users/{id}.put.parameters[8].in": "formData",
	"paths./v3/users/{id}.put.parameters[8].name": "website_url",
	"paths./v3/users/{id}.put.parameters[8].required": false,
	"paths./v3/users/{id}.put.parameters[8].type": "string",
	"paths./v3/users/{id}.put.parameters[9].description": "The organization of the user",
	"paths./v3/users/{id}.put.parameters[9].in": "formData",
	"paths./v3/users/{id}.put.parameters[9].name": "organization",
	"paths./v3/users/{id}.put.parameters[9].required": false,
	"paths./v3/users/{id}.put.parameters[9].type": "string",
	"paths./v3/users/{id}.put.produces.length": 1,
	"paths./v3/users/{id}.put.produces[0]": "application/json",
	"paths./v3/users/{id}.put.responses.200.description": "Update a user. Available only for admins.",
	"paths./v3/users/{id}.put.responses.200.schema.$ref": "#/definitions/UserPublic",
	"paths./v3/users/{id}.put.summary": "Update a user. Available only for admins.",
	"paths./v3/users/{id}.put.tags.length": 1,
	"paths./v3/users/{id}.put.tags[0]": "users",
	"paths./v3/users/{id}/block.put.consumes.length": 1,
	"paths./v3/users/{id}/block.put.consumes[0]": "application/json",
	"paths./v3/users/{id}/block.put.description": "Block a user. Available only for admins.",
	"paths./v3/users/{id}/block.put.operationId": "putV3UsersIdBlock",
	"paths./v3/users/{id}/block.put.parameters.length": 1,
	"paths./v3/users/{id}/block.put.parameters[0].description": "The ID of the user",
	"paths./v3/users/{id}/block.put.parameters[0].format": "int32",
	"paths./v3/users/{id}/block.put.parameters[0].in": "path",
	"paths./v3/users/{id}/block.put.parameters[0].name": "id",
	"paths./v3/users/{id}/block.put.parameters[0].required": true,
	"paths./v3/users/{id}/block.put.parameters[0].type": "integer",
	"paths./v3/users/{id}/block.put.produces.length": 1,
	"paths./v3/users/{id}/block.put.produces[0]": "application/json",
	"paths./v3/users/{id}/block.put.responses.200.description": "Block a user. Available only for admins.",
	"paths./v3/users/{id}/block.put.summary": "Block a user. Available only for admins.",
	"paths./v3/users/{id}/block.put.tags.length": 1,
	"paths./v3/users/{id}/block.put.tags[0]": "users",
	"paths./v3/users/{id}/emails.get.description": "Get the emails addresses of a specified user. Available only for admins.",
	"paths./v3/users/{id}/emails.get.operationId": "getV3UsersIdEmails",
	"paths./v3/users/{id}/emails.get.parameters.length": 1,
	"paths./v3/users/{id}/emails.get.parameters[0].description": "The ID of the user",
	"paths./v3/users/{id}/emails.get.parameters[0].format": "int32",
	"paths./v3/users/{id}/emails.get.parameters[0].in": "path",
	"paths./v3/users/{id}/emails.get.parameters[0].name": "id",
	"paths./v3/users/{id}/emails.get.parameters[0].required": true,
	"paths./v3/users/{id}/emails.get.parameters[0].type": "integer",
	"paths./v3/users/{id}/emails.get.produces.length": 1,
	"paths./v3/users/{id}/emails.get.produces[0]": "application/json",
	"paths./v3/users/{id}/emails.get.responses.200.description": "Get the emails addresses of a specified user. Available only for admins.",
	"paths./v3/users/{id}/emails.get.responses.200.schema.$ref": "#/definitions/Email",
	"paths./v3/users/{id}/emails.get.summary": "Get the emails addresses of a specified user. Available only for admins.",
	"paths./v3/users/{id}/emails.get.tags.length": 1,
	"paths./v3/users/{id}/emails.get.tags[0]": "users",
	"paths./v3/users/{id}/emails.post.consumes.length": 1,
	"paths./v3/users/{id}/emails.post.consumes[0]": "application/json",
	"paths./v3/users/{id}/emails.post.description": "Add an email address to a specified user. Available only for admins.",
	"paths./v3/users/{id}/emails.post.operationId": "postV3UsersIdEmails",
	"paths./v3/users/{id}/emails.post.parameters.length": 2,
	"paths./v3/users/{id}/emails.post.parameters[0].description": "The ID of the user",
	"paths./v3/users/{id}/emails.post.parameters[0].format": "int32",
	"paths./v3/users/{id}/emails.post.parameters[0].in": "path",
	"paths./v3/users/{id}/emails.post.parameters[0].name": "id",
	"paths./v3/users/{id}/emails.post.parameters[0].required": true,
	"paths./v3/users/{id}/emails.post.parameters[0].type": "integer",
	"paths./v3/users/{id}/emails.post.parameters[1].description": "The email of the user",
	"paths./v3/users/{id}/emails.post.parameters[1].in": "formData",
	"paths./v3/users/{id}/emails.post.parameters[1].name": "email",
	"paths./v3/users/{id}/emails.post.parameters[1].required": true,
	"paths./v3/users/{id}/emails.post.parameters[1].type": "string",
	"paths./v3/users/{id}/emails.post.produces.length": 1,
	"paths./v3/users/{id}/emails.post.produces[0]": "application/json",
	"paths./v3/users/{id}/emails.post.responses.201.description": "Add an email address to a specified user. Available only for admins.",
	"paths./v3/users/{id}/emails.post.responses.201.schema.$ref": "#/definitions/Email",
	"paths./v3/users/{id}/emails.post.summary": "Add an email address to a specified user. Available only for admins.",
	"paths./v3/users/{id}/emails.post.tags.length": 1,
	"paths./v3/users/{id}/emails.post.tags[0]": "users",
	"paths./v3/users/{id}/emails/{email_id}.delete.description": "Delete an email address of a specified user. Available only for admins.",
	"paths./v3/users/{id}/emails/{email_id}.delete.operationId": "deleteV3UsersIdEmailsEmailId",
	"paths./v3/users/{id}/emails/{email_id}.delete.parameters.length": 2,
	"paths./v3/users/{id}/emails/{email_id}.delete.parameters[0].description": "The ID of the user",
	"paths./v3/users/{id}/emails/{email_id}.delete.parameters[0].format": "int32",
	"paths./v3/users/{id}/emails/{email_id}.delete.parameters[0].in": "path",
	"paths./v3/users/{id}/emails/{email_id}.delete.parameters[0].name": "id",
	"paths./v3/users/{id}/emails/{email_id}.delete.parameters[0].required": true,
	"paths./v3/users/{id}/emails/{email_id}.delete.parameters[0].type": "integer",
	"paths./v3/users/{id}/emails/{email_id}.delete.parameters[1].description": "The ID of the email",
	"paths./v3/users/{id}/emails/{email_id}.delete.parameters[1].format": "int32",
	"paths./v3/users/{id}/emails/{email_id}.delete.parameters[1].in": "path",
	"paths./v3/users/{id}/emails/{email_id}.delete.parameters[1].name": "email_id",
	"paths./v3/users/{id}/emails/{email_id}.delete.parameters[1].required": true,
	"paths./v3/users/{id}/emails/{email_id}.delete.parameters[1].type": "integer",
	"paths./v3/users/{id}/emails/{email_id}.delete.produces.length": 1,
	"paths./v3/users/{id}/emails/{email_id}.delete.produces[0]": "application/json",
	"paths./v3/users/{id}/emails/{email_id}.delete.responses.200.description": "Delete an email address of a specified user. Available only for admins.",
	"paths./v3/users/{id}/emails/{email_id}.delete.responses.200.schema.$ref": "#/definitions/Email",
	"paths./v3/users/{id}/emails/{email_id}.delete.summary": "Delete an email address of a specified user. Available only for admins.",
	"paths./v3/users/{id}/emails/{email_id}.delete.tags.length": 1,
	"paths./v3/users/{id}/emails/{email_id}.delete.tags[0]": "users",
	"paths./v3/users/{id}/events.get.description": "This feature was introduced in GitLab 8.13.",
	"paths./v3/users/{id}/events.get.operationId": "getV3UsersIdEvents",
	"paths./v3/users/{id}/events.get.parameters.length": 3,
	"paths./v3/users/{id}/events.get.parameters[0].description": "The ID of the user",
	"paths./v3/users/{id}/events.get.parameters[0].format": "int32",
	"paths./v3/users/{id}/events.get.parameters[0].in": "path",
	"paths./v3/users/{id}/events.get.parameters[0].name": "id",
	"paths./v3/users/{id}/events.get.parameters[0].required": true,
	"paths./v3/users/{id}/events.get.parameters[0].type": "integer",
	"paths./v3/users/{id}/events.get.parameters[1].description": "Current page number",
	"paths./v3/users/{id}/events.get.parameters[1].format": "int32",
	"paths./v3/users/{id}/events.get.parameters[1].in": "query",
	"paths./v3/users/{id}/events.get.parameters[1].name": "page",
	"paths./v3/users/{id}/events.get.parameters[1].required": false,
	"paths./v3/users/{id}/events.get.parameters[1].type": "integer",
	"paths./v3/users/{id}/events.get.parameters[2].description": "Number of items per page",
	"paths./v3/users/{id}/events.get.parameters[2].format": "int32",
	"paths./v3/users/{id}/events.get.parameters[2].in": "query",
	"paths./v3/users/{id}/events.get.parameters[2].name": "per_page",
	"paths./v3/users/{id}/events.get.parameters[2].required": false,
	"paths./v3/users/{id}/events.get.parameters[2].type": "integer",
	"paths./v3/users/{id}/events.get.produces.length": 1,
	"paths./v3/users/{id}/events.get.produces[0]": "application/json",
	"paths./v3/users/{id}/events.get.responses.200.description": "Get the contribution events of a specified user",
	"paths./v3/users/{id}/events.get.responses.200.schema.$ref": "#/definitions/Event",
	"paths./v3/users/{id}/events.get.summary": "Get the contribution events of a specified user",
	"paths./v3/users/{id}/events.get.tags.length": 1,
	"paths./v3/users/{id}/events.get.tags[0]": "users",
	"paths./v3/users/{id}/keys.get.description": "Get the SSH keys of a specified user. Available only for admins.",
	"paths./v3/users/{id}/keys.get.operationId": "getV3UsersIdKeys",
	"paths./v3/users/{id}/keys.get.parameters.length": 1,
	"paths./v3/users/{id}/keys.get.parameters[0].description": "The ID of the user",
	"paths./v3/users/{id}/keys.get.parameters[0].format": "int32",
	"paths./v3/users/{id}/keys.get.parameters[0].in": "path",
	"paths./v3/users/{id}/keys.get.parameters[0].name": "id",
	"paths./v3/users/{id}/keys.get.parameters[0].required": true,
	"paths./v3/users/{id}/keys.get.parameters[0].type": "integer",
	"paths./v3/users/{id}/keys.get.produces.length": 1,
	"paths./v3/users/{id}/keys.get.produces[0]": "application/json",
	"paths./v3/users/{id}/keys.get.responses.200.description": "Get the SSH keys of a specified user. Available only for admins.",
	"paths./v3/users/{id}/keys.get.responses.200.schema.$ref": "#/definitions/SSHKey",
	"paths./v3/users/{id}/keys.get.summary": "Get the SSH keys of a specified user. Available only for admins.",
	"paths./v3/users/{id}/keys.get.tags.length": 1,
	"paths./v3/users/{id}/keys.get.tags[0]": "users",
	"paths./v3/users/{id}/keys.post.consumes.length": 1,
	"paths./v3/users/{id}/keys.post.consumes[0]": "application/json",
	"paths./v3/users/{id}/keys.post.description": "Add an SSH key to a specified user. Available only for admins.",
	"paths./v3/users/{id}/keys.post.operationId": "postV3UsersIdKeys",
	"paths./v3/users/{id}/keys.post.parameters.length": 3,
	"paths./v3/users/{id}/keys.post.parameters[0].description": "The ID of the user",
	"paths./v3/users/{id}/keys.post.parameters[0].format": "int32",
	"paths./v3/users/{id}/keys.post.parameters[0].in": "path",
	"paths./v3/users/{id}/keys.post.parameters[0].name": "id",
	"paths./v3/users/{id}/keys.post.parameters[0].required": true,
	"paths./v3/users/{id}/keys.post.parameters[0].type": "integer",
	"paths./v3/users/{id}/keys.post.parameters[1].description": "The new SSH key",
	"paths./v3/users/{id}/keys.post.parameters[1].in": "formData",
	"paths./v3/users/{id}/keys.post.parameters[1].name": "key",
	"paths./v3/users/{id}/keys.post.parameters[1].required": true,
	"paths./v3/users/{id}/keys.post.parameters[1].type": "string",
	"paths./v3/users/{id}/keys.post.parameters[2].description": "The title of the new SSH key",
	"paths./v3/users/{id}/keys.post.parameters[2].in": "formData",
	"paths./v3/users/{id}/keys.post.parameters[2].name": "title",
	"paths./v3/users/{id}/keys.post.parameters[2].required": true,
	"paths./v3/users/{id}/keys.post.parameters[2].type": "string",
	"paths./v3/users/{id}/keys.post.produces.length": 1,
	"paths./v3/users/{id}/keys.post.produces[0]": "application/json",
	"paths./v3/users/{id}/keys.post.responses.201.description": "Add an SSH key to a specified user. Available only for admins.",
	"paths./v3/users/{id}/keys.post.responses.201.schema.$ref": "#/definitions/SSHKey",
	"paths./v3/users/{id}/keys.post.summary": "Add an SSH key to a specified user. Available only for admins.",
	"paths./v3/users/{id}/keys.post.tags.length": 1,
	"paths./v3/users/{id}/keys.post.tags[0]": "users",
	"paths./v3/users/{id}/keys/{key_id}.delete.description": "Delete an existing SSH key from a specified user. Available only for admins.",
	"paths./v3/users/{id}/keys/{key_id}.delete.operationId": "deleteV3UsersIdKeysKeyId",
	"paths./v3/users/{id}/keys/{key_id}.delete.parameters.length": 2,
	"paths./v3/users/{id}/keys/{key_id}.delete.parameters[0].description": "The ID of the user",
	"paths./v3/users/{id}/keys/{key_id}.delete.parameters[0].format": "int32",
	"paths./v3/users/{id}/keys/{key_id}.delete.parameters[0].in": "path",
	"paths./v3/users/{id}/keys/{key_id}.delete.parameters[0].name": "id",
	"paths./v3/users/{id}/keys/{key_id}.delete.parameters[0].required": true,
	"paths./v3/users/{id}/keys/{key_id}.delete.parameters[0].type": "integer",
	"paths./v3/users/{id}/keys/{key_id}.delete.parameters[1].description": "The ID of the SSH key",
	"paths./v3/users/{id}/keys/{key_id}.delete.parameters[1].format": "int32",
	"paths./v3/users/{id}/keys/{key_id}.delete.parameters[1].in": "path",
	"paths./v3/users/{id}/keys/{key_id}.delete.parameters[1].name": "key_id",
	"paths./v3/users/{id}/keys/{key_id}.delete.parameters[1].required": true,
	"paths./v3/users/{id}/keys/{key_id}.delete.parameters[1].type": "integer",
	"paths./v3/users/{id}/keys/{key_id}.delete.produces.length": 1,
	"paths./v3/users/{id}/keys/{key_id}.delete.produces[0]": "application/json",
	"paths./v3/users/{id}/keys/{key_id}.delete.responses.200.description": "Delete an existing SSH key from a specified user. Available only for admins.",
	"paths./v3/users/{id}/keys/{key_id}.delete.responses.200.schema.$ref": "#/definitions/SSHKey",
	"paths./v3/users/{id}/keys/{key_id}.delete.summary": "Delete an existing SSH key from a specified user. Available only for admins.",
	"paths./v3/users/{id}/keys/{key_id}.delete.tags.length": 1,
	"paths./v3/users/{id}/keys/{key_id}.delete.tags[0]": "users",
	"paths./v3/users/{id}/unblock.put.consumes.length": 1,
	"paths./v3/users/{id}/unblock.put.consumes[0]": "application/json",
	"paths./v3/users/{id}/unblock.put.description": "Unblock a user. Available only for admins.",
	"paths./v3/users/{id}/unblock.put.operationId": "putV3UsersIdUnblock",
	"paths./v3/users/{id}/unblock.put.parameters.length": 1,
	"paths./v3/users/{id}/unblock.put.parameters[0].description": "The ID of the user",
	"paths./v3/users/{id}/unblock.put.parameters[0].format": "int32",
	"paths./v3/users/{id}/unblock.put.parameters[0].in": "path",
	"paths./v3/users/{id}/unblock.put.parameters[0].name": "id",
	"paths./v3/users/{id}/unblock.put.parameters[0].required": true,
	"paths./v3/users/{id}/unblock.put.parameters[0].type": "integer",
	"paths./v3/users/{id}/unblock.put.produces.length": 1,
	"paths./v3/users/{id}/unblock.put.produces[0]": "application/json",
	"paths./v3/users/{id}/unblock.put.responses.200.description": "Unblock a user. Available only for admins.",
	"paths./v3/users/{id}/unblock.put.summary": "Unblock a user. Available only for admins.",
	"paths./v3/users/{id}/unblock.put.tags.length": 1,
	"paths./v3/users/{id}/unblock.put.tags[0]": "users",
	"paths./v3/version.get.description": "This feature was introduced in GitLab 8.13.",
	"paths./v3/version.get.operationId": "getV3Version",
	"paths./v3/version.get.produces.length": 1,
	"paths./v3/version.get.produces[0]": "application/json",
	"paths./v3/version.get.responses.200.description": "Get the version information of the GitLab instance.",
	"paths./v3/version.get.summary": "Get the version information of the GitLab instance.",
	"paths./v3/version.get.tags.length": 1,
	"paths./v3/version.get.tags[0]": "version",
	"produces.length": 2,
	"produces[0]": "application/json",
	"produces[1]": "text/plain",
	"schemes.length": 1,
	"schemes[0]": "https",
	"security.length": 2,
	"securityDefinitions.private_token_header.in": "header",
	"securityDefinitions.private_token_header.name": "PRIVATE_HEADER",
	"securityDefinitions.private_token_header.type": "apiKey",
	"securityDefinitions.private_token_query.in": "query",
	"securityDefinitions.private_token_query.name": "private_token",
	"securityDefinitions.private_token_query.type": "apiKey",
	"security[0].private_token_header.length": 0,
	"security[1].private_token_query.length": 0,
	"swagger": "2.0",
	"tags.length": 24,
	"tags[0].description": "Operations about groups",
	"tags[0].name": "groups",
	"tags[10].description": "Operations about hooks",
	"tags[10].name": "hooks",
	"tags[11].description": "Operations about todos",
	"tags[11].name": "todos",
	"tags[12].description": "Operations about users",
	"tags[12].name": "users",
	"tags[13].description": "Operations about users",
	"tags[13].name": "user",
	"tags[14].description": "Operations about deploy_keys",
	"tags[14].name": "deploy_keys",
	"tags[15].description": "Operations about sessions",
	"tags[15].name": "session",
	"tags[16].description": "Operations about applications",
	"tags[16].name": "application",
	"tags[17].description": "Operations about sidekiqs",
	"tags[17].name": "sidekiq",
	"tags[18].description": "Operations about licenses",
	"tags[18].name": "licenses",
	"tags[19].description": "Operations about templates",
	"tags[19].name": "templates",
	"tags[1].description": "Operations about projects",
	"tags[1].name": "projects",
	"tags[20].description": "Operations about gitignores",
	"tags[20].name": "gitignores",
	"tags[21].description": "Operations about gitlab_ci_ymls",
	"tags[21].name": "gitlab_ci_ymls",
	"tags[22].description": "Operations about dockerfiles",
	"tags[22].name": "dockerfiles",
	"tags[23].description": "Operations about versions",
	"tags[23].name": "version",
	"tags[2].description": "Operations about internals",
	"tags[2].name": "internal",
	"tags[3].description": "Operations about issues",
	"tags[3].name": "issues",
	"tags[4].description": "Operations about keys",
	"tags[4].name": "keys",
	"tags[5].description": "Operations about cis",
	"tags[5].name": "ci",
	"tags[6].description": "Operations about namespaces",
	"tags[6].name": "namespaces",
	"tags[7].description": "Operations about notification_settings",
	"tags[7].name": "notification_settings",
	"tags[8].description": "Operations about runners",
	"tags[8].name": "runners",
	"tags[9].description": "Operations about snippets",
	"tags[9].name": "snippets"
}