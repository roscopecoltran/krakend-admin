{
	"host": "api.aucklandmuseum.com",
	"info.contact.name": "Auckland Museum API Team",
	"info.contact.url": "http://www.aucklandmuseum.com",
	"info.description": "This is technical documentation for the Auckland Museum API\n",
	"info.license.name": "Auckland Museum licence",
	"info.license.url": "http://www.aucklandmuseum.com",
	"info.termsOfService": "http://api.aucklandmuseum.com/terms/",
	"info.title": "Auckland Museum",
	"info.version": "2.0.0",
	"info.x-apisguru-categories.length": 1,
	"info.x-apisguru-categories[0]": "open_data",
	"info.x-logo.backgroundColor": "#FFFFFF",
	"info.x-logo.url": "https://api.apis.guru/v2/cache/logo/https_pbs.twimg.com_profile_images_3189440223_bdf15148765709ca93c66597839b5589_400x400.png",
	"info.x-origin.length": 1,
	"info.x-origin[0].format": "swagger",
	"info.x-origin[0].url": "http://api.aucklandmuseum.com/apidoc",
	"info.x-origin[0].version": "2.0",
	"info.x-preferred": true,
	"info.x-providerName": "aucklandmuseum.com",
	"paths./id/media/{path}.get.description": "Gets `media` at a given path\n",
	"paths./id/media/{path}.get.operationId": "get media",
	"paths./id/media/{path}.get.parameters.length": 2,
	"paths./id/media/{path}.get.parameters[0].description": "The media `identifier`\n",
	"paths./id/media/{path}.get.parameters[0].in": "path",
	"paths./id/media/{path}.get.parameters[0].name": "path",
	"paths./id/media/{path}.get.parameters[0].required": true,
	"paths./id/media/{path}.get.parameters[0].type": "string",
	"paths./id/media/{path}.get.parameters[1].description": "The desired media `rendering`\n\nPossible values:\n* `original.jpg`\n* `original.pdf`\n* `thumbnail.jpg` (fixed with 70px)\n* `standard.jpg` (fixed width 440px and height 440px)\n* `preview.jpg` (fixed height 100px)\n",
	"paths./id/media/{path}.get.parameters[1].in": "query",
	"paths./id/media/{path}.get.parameters[1].name": "rendering",
	"paths./id/media/{path}.get.parameters[1].required": false,
	"paths./id/media/{path}.get.parameters[1].type": "string",
	"paths./id/media/{path}.get.produces.length": 2,
	"paths./id/media/{path}.get.produces[0]": "image/jpeg",
	"paths./id/media/{path}.get.produces[1]": "application/pdf",
	"paths./id/media/{path}.get.responses.200.description": "`media` found\n",
	"paths./id/media/{path}.get.responses.404.description": "`media` not found\n",
	"paths./id/media/{path}.get.summary": "Retrieve media associated with Collections and Cenotaph subjects in Auckland Museum",
	"paths./id/media/{path}.get.tags.length": 1,
	"paths./id/media/{path}.get.tags[0]": "media",
	"paths./id/{identifier}.get.description": "Gets information about a `subject` identified by the `identifier`.\n\nThe response format depends upon the `Accept` header.\n  - `text/html` - the default response type. Returned data can be easily viewed in any modern Internet Browser\n  - `application/ld+json` - the response will be in [JSON-LD](http://json-ld.org/)\n  - `application/json` - the response will be a simple JSON Object with keys (predicates) and values (objects).\n",
	"paths./id/{identifier}.get.operationId": "get subject",
	"paths./id/{identifier}.get.parameters.length": 1,
	"paths./id/{identifier}.get.parameters[0].description": "The identifier path of the `subject` you're looking for\n",
	"paths./id/{identifier}.get.parameters[0].in": "path",
	"paths./id/{identifier}.get.parameters[0].name": "identifier",
	"paths./id/{identifier}.get.parameters[0].required": true,
	"paths./id/{identifier}.get.parameters[0].type": "string",
	"paths./id/{identifier}.get.produces.length": 3,
	"paths./id/{identifier}.get.produces[0]": "text/html",
	"paths./id/{identifier}.get.produces[1]": "application/ld+json",
	"paths./id/{identifier}.get.produces[2]": "application/json",
	"paths./id/{identifier}.get.responses.200.description": "`subject` found\n",
	"paths./id/{identifier}.get.responses.404.description": "`subject` not found\n",
	"paths./id/{identifier}.get.summary": "Explore details about a given subject node",
	"paths./id/{identifier}.get.tags.length": 1,
	"paths./id/{identifier}.get.tags[0]": "subject",
	"paths./search/{index}/{operation}.get.description": "Use this endpoint to perform simple search queries for finding information and subjects you may be interested in\n\nSearches performed via this endpoint run against an [Elastic](www.elastic.co) server. This endpoint mirrors the Elastic search API documented [here](https://www.elastic.co/guide/en/elasticsearch/reference/1.5/search-search.html)\n\nUse the\n  - `collectionsonline` index to perform searches over other all\nCollections data\n  - `cenotaph` index to perform searches over Cenotaph data\n",
	"paths./search/{index}/{operation}.get.operationId": "get search",
	"paths./search/{index}/{operation}.get.parameters.length": 3,
	"paths./search/{index}/{operation}.get.parameters[0].description": "search index name\nPossible values:\n* `collectionsonline`\n* `cenotaph`\n",
	"paths./search/{index}/{operation}.get.parameters[0].in": "path",
	"paths./search/{index}/{operation}.get.parameters[0].name": "index",
	"paths./search/{index}/{operation}.get.parameters[0].required": true,
	"paths./search/{index}/{operation}.get.parameters[0].type": "string",
	"paths./search/{index}/{operation}.get.parameters[1].description": "One of the supported elasticsearch operations like `_search` or `_suggest`",
	"paths./search/{index}/{operation}.get.parameters[1].in": "path",
	"paths./search/{index}/{operation}.get.parameters[1].name": "operation",
	"paths./search/{index}/{operation}.get.parameters[1].required": true,
	"paths./search/{index}/{operation}.get.parameters[1].type": "string",
	"paths./search/{index}/{operation}.get.parameters[2].description": "One of the supported elasticsearch query parameter values for key `q`",
	"paths./search/{index}/{operation}.get.parameters[2].in": "query",
	"paths./search/{index}/{operation}.get.parameters[2].name": "q",
	"paths./search/{index}/{operation}.get.parameters[2].required": false,
	"paths./search/{index}/{operation}.get.parameters[2].type": "string",
	"paths./search/{index}/{operation}.get.responses.200.description": "search results found",
	"paths./search/{index}/{operation}.get.responses.400.description": "bad request",
	"paths./search/{index}/{operation}.get.responses.404.description": "not found",
	"paths./search/{index}/{operation}.get.summary": "Perform simple search queries over Auckland Museum Collections and Cenotaph data",
	"paths./search/{index}/{operation}.get.tags.length": 1,
	"paths./search/{index}/{operation}.get.tags[0]": "search",
	"paths./search/{index}/{operation}.post.consumes.length": 1,
	"paths./search/{index}/{operation}.post.consumes[0]": "application/json",
	"paths./search/{index}/{operation}.post.description": "Searches performed via this endpoint run against an [Elastic](www.elastic.co) server. This endpoint mirrors the Elastic search API documented [here](https://www.elastic.co/guide/en/elasticsearch/reference/1.5/search-search.html)\n\nUse the\n  - `collectionsonline` index to perform searches over other all Collections data\n  - `cenotaph` index to perform searches over Cenotaph data\n",
	"paths./search/{index}/{operation}.post.operationId": "post search",
	"paths./search/{index}/{operation}.post.parameters.length": 3,
	"paths./search/{index}/{operation}.post.parameters[0].description": "search index name\nPossible values:\n* `collectionsonline`\n* `cenotaph`\n",
	"paths./search/{index}/{operation}.post.parameters[0].in": "path",
	"paths./search/{index}/{operation}.post.parameters[0].name": "index",
	"paths./search/{index}/{operation}.post.parameters[0].required": true,
	"paths./search/{index}/{operation}.post.parameters[0].type": "string",
	"paths./search/{index}/{operation}.post.parameters[1].description": "One of the supported elasticsearch operations like `_search` or `_suggest`",
	"paths./search/{index}/{operation}.post.parameters[1].in": "path",
	"paths./search/{index}/{operation}.post.parameters[1].name": "operation",
	"paths./search/{index}/{operation}.post.parameters[1].required": true,
	"paths./search/{index}/{operation}.post.parameters[1].type": "string",
	"paths./search/{index}/{operation}.post.parameters[2].description": "body",
	"paths./search/{index}/{operation}.post.parameters[2].in": "body",
	"paths./search/{index}/{operation}.post.parameters[2].name": "body",
	"paths./search/{index}/{operation}.post.parameters[2].required": false,
	"paths./search/{index}/{operation}.post.parameters[2].schema.format": "application/json",
	"paths./search/{index}/{operation}.post.parameters[2].schema.type": "object",
	"paths./search/{index}/{operation}.post.responses.200.description": "search results found",
	"paths./search/{index}/{operation}.post.responses.400.description": "bad request",
	"paths./search/{index}/{operation}.post.responses.404.description": "not found",
	"paths./search/{index}/{operation}.post.summary": "Perform complex search queries over Auckland Museum Collections and Cenotaph data",
	"paths./search/{index}/{operation}.post.tags.length": 1,
	"paths./search/{index}/{operation}.post.tags[0]": "search",
	"paths./sparql.get.description": "You can execute your [SPARQL](http://www.w3.org/TR/rdf-sparql-query/) queries against this endpoint.\n\nThe sparql query should be provided as the value of the request parameter `query`.\nSet the `Accept` header to `application/sparql-results+xml` to get results in XML. Set it to `application/sparql-results+json` to get results in JSON. \n\n**Note:** This endpoints supports [JSON-P](http://json-p.org/). In order to get a JSON-P response, set the query parameter `callback` to your preferred callback function name. The default function name is `callback()`. When using JSON-P, there is no need to set the `Accept` header because the response will always be in `application/javascript`.\n",
	"paths./sparql.get.operationId": "get sparql",
	"paths./sparql.get.parameters.length": 3,
	"paths./sparql.get.parameters[0].description": "sparql query",
	"paths./sparql.get.parameters[0].in": "query",
	"paths./sparql.get.parameters[0].name": "query",
	"paths./sparql.get.parameters[0].required": true,
	"paths./sparql.get.parameters[0].type": "string",
	"paths./sparql.get.parameters[1].default": "callback",
	"paths./sparql.get.parameters[1].description": "The [JSON-P](http://json-p.org/) callback parameter",
	"paths./sparql.get.parameters[1].in": "query",
	"paths./sparql.get.parameters[1].name": "callback",
	"paths./sparql.get.parameters[1].required": false,
	"paths./sparql.get.parameters[1].type": "string",
	"paths./sparql.get.parameters[2].default": true,
	"paths./sparql.get.parameters[2].description": "Whether to get inferred results in the response",
	"paths./sparql.get.parameters[2].in": "query",
	"paths./sparql.get.parameters[2].name": "infer",
	"paths./sparql.get.parameters[2].required": false,
	"paths./sparql.get.parameters[2].type": "boolean",
	"paths./sparql.get.produces.length": 3,
	"paths./sparql.get.produces[0]": "application/sparql-results+json",
	"paths./sparql.get.produces[1]": "application/sparql-results+xml",
	"paths./sparql.get.produces[2]": "application/javascript",
	"paths./sparql.get.responses.200.description": "success",
	"paths./sparql.get.responses.200.schema.title": "json",
	"paths./sparql.get.responses.200.schema.type": "object",
	"paths./sparql.get.summary": "Auckland Museum SPARQL endpoint",
	"paths./sparql.get.tags.length": 1,
	"paths./sparql.get.tags[0]": "sparql",
	"paths./sparql.post.consumes.length": 1,
	"paths./sparql.post.consumes[0]": "application/x-www-form-urlencoded",
	"paths./sparql.post.description": "You can execute your [SPARQL](http://www.w3.org/TR/rdf-sparql-query/) queries against this endpoint.\nThe sparql query should be provided as the value of the request parameter `query`.\nSet the `Accept` header to `application/sparql-results+xml` to get results in XML. Set it to `application/sparql-results+json` to get results in JSON. \n",
	"paths./sparql.post.operationId": "post sparql",
	"paths./sparql.post.parameters.length": 2,
	"paths./sparql.post.parameters[0].description": "sparql query",
	"paths./sparql.post.parameters[0].in": "formData",
	"paths./sparql.post.parameters[0].name": "query",
	"paths./sparql.post.parameters[0].required": true,
	"paths./sparql.post.parameters[0].type": "string",
	"paths./sparql.post.parameters[1].default": true,
	"paths./sparql.post.parameters[1].description": "Whether to get inferred results in the response",
	"paths./sparql.post.parameters[1].in": "formData",
	"paths./sparql.post.parameters[1].name": "infer",
	"paths./sparql.post.parameters[1].required": false,
	"paths./sparql.post.parameters[1].type": "boolean",
	"paths./sparql.post.produces.length": 2,
	"paths./sparql.post.produces[0]": "application/sparql-results+json",
	"paths./sparql.post.produces[1]": "application/sparql-results+xml",
	"paths./sparql.post.responses.200.description": "success",
	"paths./sparql.post.summary": "Auckland Museum SPARQL endpoint",
	"paths./sparql.post.tags.length": 1,
	"paths./sparql.post.tags[0]": "sparql",
	"schemes.length": 1,
	"schemes[0]": "http",
	"swagger": "2.0",
	"tags.length": 4,
	"tags[0].description": "media - images and documents",
	"tags[0].name": "media",
	"tags[1].description": "information about subjects",
	"tags[1].name": "subject",
	"tags[2].description": "search for interesting data",
	"tags[2].name": "search",
	"tags[3].description": "sparql queries",
	"tags[3].name": "sparql"
}