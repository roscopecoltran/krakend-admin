basePath = "/piwebapi"
"definitions.Analysis.properties.AnalysisRulePlugInName.example" = "PerformanceEquation"
"definitions.Analysis.properties.AnalysisRulePlugInName.type" = "string"
"definitions.Analysis.properties.AutoCreated.example" = false
"definitions.Analysis.properties.AutoCreated.type" = "boolean"
"definitions.Analysis.properties.AutoCreated.x-disallow-patch" = true
"definitions.Analysis.properties.AutoCreated.x-disallow-post" = true
"definitions.Analysis.properties.AutoCreated.x-disallow-put" = true
"definitions.Analysis.properties.CategoryNames.example.length" = 1
"definitions.Analysis.properties.CategoryNames.example[0]" = "MyAnalysisCategory"
"definitions.Analysis.properties.CategoryNames.items.type" = "string"
"definitions.Analysis.properties.CategoryNames.type" = "array"
"definitions.Analysis.properties.Description.example" = ""
"definitions.Analysis.properties.Description.type" = "string"
"definitions.Analysis.properties.GroupId.example" = 0.0
"definitions.Analysis.properties.GroupId.format" = "int32"
"definitions.Analysis.properties.GroupId.type" = "integer"
"definitions.Analysis.properties.HasNotification.example" = false
"definitions.Analysis.properties.HasNotification.type" = "boolean"
"definitions.Analysis.properties.HasNotification.x-disallow-patch" = true
"definitions.Analysis.properties.HasNotification.x-disallow-post" = true
"definitions.Analysis.properties.HasNotification.x-disallow-put" = true
"definitions.Analysis.properties.HasTarget.example" = true
"definitions.Analysis.properties.HasTarget.type" = "boolean"
"definitions.Analysis.properties.HasTarget.x-disallow-patch" = true
"definitions.Analysis.properties.HasTarget.x-disallow-post" = true
"definitions.Analysis.properties.HasTarget.x-disallow-put" = true
"definitions.Analysis.properties.HasTemplate.example" = false
"definitions.Analysis.properties.HasTemplate.type" = "boolean"
"definitions.Analysis.properties.HasTemplate.x-disallow-patch" = true
"definitions.Analysis.properties.HasTemplate.x-disallow-post" = true
"definitions.Analysis.properties.HasTemplate.x-disallow-put" = true
"definitions.Analysis.properties.Id.example" = "7077011a-2f17-11e6-80d8-00155d844304"
"definitions.Analysis.properties.Id.format" = "uuid"
"definitions.Analysis.properties.Id.type" = "string"
"definitions.Analysis.properties.Id.x-disallow-patch" = true
"definitions.Analysis.properties.Id.x-disallow-post" = true
"definitions.Analysis.properties.Id.x-disallow-put" = true
"definitions.Analysis.properties.IsConfigured.example" = false
"definitions.Analysis.properties.IsConfigured.type" = "boolean"
"definitions.Analysis.properties.IsConfigured.x-disallow-patch" = true
"definitions.Analysis.properties.IsConfigured.x-disallow-post" = true
"definitions.Analysis.properties.IsConfigured.x-disallow-put" = true
"definitions.Analysis.properties.IsTimeRuleDefinedByTemplate.example" = false
"definitions.Analysis.properties.IsTimeRuleDefinedByTemplate.type" = "boolean"
"definitions.Analysis.properties.IsTimeRuleDefinedByTemplate.x-disallow-patch" = true
"definitions.Analysis.properties.IsTimeRuleDefinedByTemplate.x-disallow-post" = true
"definitions.Analysis.properties.IsTimeRuleDefinedByTemplate.x-disallow-put" = true
"definitions.Analysis.properties.Links.properties.AnalysisRule.type" = "string"
"definitions.Analysis.properties.Links.properties.AnalysisRule.x-link-optional" = true
"definitions.Analysis.properties.Links.properties.AnalysisRule.x-link-path" = "analysisrules/{webId}"
"definitions.Analysis.properties.Links.properties.AnalysisRulePlugIn.type" = "string"
"definitions.Analysis.properties.Links.properties.AnalysisRulePlugIn.x-link-optional" = true
"definitions.Analysis.properties.Links.properties.AnalysisRulePlugIn.x-link-path" = "analysisruleplugins/{webId}"
"definitions.Analysis.properties.Links.properties.Categories.type" = "string"
"definitions.Analysis.properties.Links.properties.Categories.x-link-optional" = false
"definitions.Analysis.properties.Links.properties.Categories.x-link-path" = "analyses/{webId}/categories"
"definitions.Analysis.properties.Links.properties.Database.type" = "string"
"definitions.Analysis.properties.Links.properties.Database.x-link-optional" = true
"definitions.Analysis.properties.Links.properties.Database.x-link-path" = "assetdatabases/{webId}"
"definitions.Analysis.properties.Links.properties.Security.type" = "string"
"definitions.Analysis.properties.Links.properties.Security.x-link-optional" = false
"definitions.Analysis.properties.Links.properties.Security.x-link-path" = "analyses/{webId}/security"
"definitions.Analysis.properties.Links.properties.SecurityEntries.type" = "string"
"definitions.Analysis.properties.Links.properties.SecurityEntries.x-link-optional" = false
"definitions.Analysis.properties.Links.properties.SecurityEntries.x-link-path" = "analyses/{webId}/securityentries"
"definitions.Analysis.properties.Links.properties.Self.type" = "string"
"definitions.Analysis.properties.Links.properties.Self.x-link-optional" = false
"definitions.Analysis.properties.Links.properties.Self.x-link-path" = "analyses/{webId}"
"definitions.Analysis.properties.Links.properties.Target.type" = "string"
"definitions.Analysis.properties.Links.properties.Target.x-link-optional" = true
"definitions.Analysis.properties.Links.properties.Target.x-link-path" = "elements/{webId}"
"definitions.Analysis.properties.Links.properties.Template.type" = "string"
"definitions.Analysis.properties.Links.properties.Template.x-link-optional" = true
"definitions.Analysis.properties.Links.properties.Template.x-link-path" = "analysistemplates/{webId}"
"definitions.Analysis.properties.Links.properties.TimeRule.type" = "string"
"definitions.Analysis.properties.Links.properties.TimeRule.x-link-optional" = true
"definitions.Analysis.properties.Links.properties.TimeRule.x-link-path" = "timerules/{webId}"
"definitions.Analysis.properties.Links.properties.TimeRulePlugIn.type" = "string"
"definitions.Analysis.properties.Links.properties.TimeRulePlugIn.x-link-optional" = true
"definitions.Analysis.properties.Links.properties.TimeRulePlugIn.x-link-path" = "timeruleplugins/{webId}"
"definitions.Analysis.properties.Links.type" = "object"
"definitions.Analysis.properties.MaximumQueueSize.example" = 0.0
"definitions.Analysis.properties.MaximumQueueSize.format" = "int32"
"definitions.Analysis.properties.MaximumQueueSize.type" = "integer"
"definitions.Analysis.properties.Name.example" = "MyAnalysis"
"definitions.Analysis.properties.Name.type" = "string"
"definitions.Analysis.properties.Name.x-required-post" = true
"definitions.Analysis.properties.OutputTime.example" = ""
"definitions.Analysis.properties.OutputTime.type" = "string"
"definitions.Analysis.properties.Path.example" = "\\\\MYSERVER\\MyDatabase\\MyElement\\Analyses[MyAnalysis]"
"definitions.Analysis.properties.Path.format" = "path"
"definitions.Analysis.properties.Path.type" = "string"
"definitions.Analysis.properties.Path.x-disallow-patch" = true
"definitions.Analysis.properties.Path.x-disallow-post" = true
"definitions.Analysis.properties.Path.x-disallow-put" = true
"definitions.Analysis.properties.Priority.example" = "High"
"definitions.Analysis.properties.Priority.type" = "string"
"definitions.Analysis.properties.PublishResults.example" = false
"definitions.Analysis.properties.PublishResults.type" = "boolean"
"definitions.Analysis.properties.Status.example" = "Disabled"
"definitions.Analysis.properties.Status.type" = "string"
"definitions.Analysis.properties.TargetWebId.example" = "E0DqD5loBNH0erqeqJodtALAFwF3cBcv5hGA2AAVXYRDBAUkVTVFVOSVRcNkQwQjc2MDItOTYxMi00OTRBLUE4MEQtODQyRDMyOTZENTYxXDkyMjFGMDhGLUZCMTUtNDZFMy1BQzYzLURCNDkzRDhGNkJFQg"
"definitions.Analysis.properties.TargetWebId.format" = "webid"
"definitions.Analysis.properties.TargetWebId.type" = "string"
"definitions.Analysis.properties.TargetWebId.x-disallow-post" = true
"definitions.Analysis.properties.TemplateName.example" = ""
"definitions.Analysis.properties.TemplateName.type" = "string"
"definitions.Analysis.properties.TimeRulePlugInName.example" = "Periodic"
"definitions.Analysis.properties.TimeRulePlugInName.type" = "string"
"definitions.Analysis.properties.WebId.example" = "x0DqD5loBNH0erqeqJodtALAGgF3cBcv5hGA2AAVXYRDBAUkVTVFVOSVRcNkQwQjc2MDItOTYxMi00OTRBLUE4MEQtODQyRDMyOTZENTYxXDkyMjFGMDhGLUZCMTUtNDZFMy1BQzYzLURCNDkzRDhGNkJFQlxBTkFMWVNFU1swRUFFNDU3My0wMDY0LTQxMUUtODQwRC0wOEMwOTlEM0VGNTNd"
"definitions.Analysis.properties.WebId.format" = "webid"
"definitions.Analysis.properties.WebId.type" = "string"
"definitions.Analysis.properties.WebId.x-disallow-patch" = true
"definitions.Analysis.properties.WebId.x-disallow-post" = true
"definitions.Analysis.properties.WebId.x-disallow-put" = true
"definitions.Analysis.type" = "object"
"definitions.AnalysisCategory.properties.Description.example" = "Relative energy use per ton of process feed."
"definitions.AnalysisCategory.properties.Description.type" = "string"
"definitions.AnalysisCategory.properties.Id.example" = "f9364aa2-0e4a-4854-9b85-35900a4d4c0f"
"definitions.AnalysisCategory.properties.Id.format" = "uuid"
"definitions.AnalysisCategory.properties.Id.type" = "string"
"definitions.AnalysisCategory.properties.Id.x-disallow-patch" = true
"definitions.AnalysisCategory.properties.Id.x-disallow-post" = true
"definitions.AnalysisCategory.properties.Id.x-disallow-put" = true
"definitions.AnalysisCategory.properties.Links.properties.Database.type" = "string"
"definitions.AnalysisCategory.properties.Links.properties.Database.x-link-optional" = false
"definitions.AnalysisCategory.properties.Links.properties.Database.x-link-path" = "assetdatabases/{webId}"
"definitions.AnalysisCategory.properties.Links.properties.Security.type" = "string"
"definitions.AnalysisCategory.properties.Links.properties.Security.x-link-optional" = false
"definitions.AnalysisCategory.properties.Links.properties.Security.x-link-path" = "analysiscategories/{webId}/security"
"definitions.AnalysisCategory.properties.Links.properties.SecurityEntries.type" = "string"
"definitions.AnalysisCategory.properties.Links.properties.SecurityEntries.x-link-optional" = false
"definitions.AnalysisCategory.properties.Links.properties.SecurityEntries.x-link-path" = "analysiscategories/{webId}/securityentries"
"definitions.AnalysisCategory.properties.Links.properties.Self.type" = "string"
"definitions.AnalysisCategory.properties.Links.properties.Self.x-link-optional" = false
"definitions.AnalysisCategory.properties.Links.properties.Self.x-link-path" = "analysiscategories/{webId}"
"definitions.AnalysisCategory.properties.Links.type" = "object"
"definitions.AnalysisCategory.properties.Name.example" = "CategoryName"
"definitions.AnalysisCategory.properties.Name.type" = "string"
"definitions.AnalysisCategory.properties.Name.x-required-post" = true
"definitions.AnalysisCategory.properties.Path.example" = "\\\\MyServer\\Database\\CategoriesAnalysis[CategoryName]"
"definitions.AnalysisCategory.properties.Path.format" = "path"
"definitions.AnalysisCategory.properties.Path.type" = "string"
"definitions.AnalysisCategory.properties.Path.x-disallow-patch" = true
"definitions.AnalysisCategory.properties.Path.x-disallow-post" = true
"definitions.AnalysisCategory.properties.Path.x-disallow-put" = true
"definitions.AnalysisCategory.properties.WebId.example" = "n0DqD5loBNH0erqeqJodtALAoko2-UoOVEibhTWQCk1MDwUkVTVFVOSVRcUk9OR1xDQVRFR09SSUVTQU5BTFlTSVNbQ0FURUdPUlkxXQ"
"definitions.AnalysisCategory.properties.WebId.format" = "webid"
"definitions.AnalysisCategory.properties.WebId.type" = "string"
"definitions.AnalysisCategory.properties.WebId.x-disallow-patch" = true
"definitions.AnalysisCategory.properties.WebId.x-disallow-post" = true
"definitions.AnalysisCategory.properties.WebId.x-disallow-put" = true
"definitions.AnalysisCategory.type" = "object"
"definitions.AnalysisRule.properties.ConfigString.example" = "a := TagVal('sinusoid'); b := Pow(a, 2); c := a + b;"
"definitions.AnalysisRule.properties.ConfigString.type" = "string"
"definitions.AnalysisRule.properties.Description.example" = "Runs a performance equation."
"definitions.AnalysisRule.properties.Description.type" = "string"
"definitions.AnalysisRule.properties.Description.x-disallow-patch" = true
"definitions.AnalysisRule.properties.Description.x-disallow-post" = true
"definitions.AnalysisRule.properties.Description.x-disallow-put" = true
"definitions.AnalysisRule.properties.DisplayString.example" = "a := TagVal('sinusoid'); b := Pow(a, 2); c := a + b;"
"definitions.AnalysisRule.properties.DisplayString.type" = "string"
"definitions.AnalysisRule.properties.DisplayString.x-disallow-patch" = true
"definitions.AnalysisRule.properties.DisplayString.x-disallow-post" = true
"definitions.AnalysisRule.properties.DisplayString.x-disallow-put" = true
"definitions.AnalysisRule.properties.EditorType.example" = "OSIsoft.AF.Analysis.AnalysisRule.PEAnalysisRuleEditor"
"definitions.AnalysisRule.properties.EditorType.type" = "string"
"definitions.AnalysisRule.properties.EditorType.x-disallow-patch" = true
"definitions.AnalysisRule.properties.EditorType.x-disallow-post" = true
"definitions.AnalysisRule.properties.EditorType.x-disallow-put" = true
"definitions.AnalysisRule.properties.HasChildren.example" = false
"definitions.AnalysisRule.properties.HasChildren.type" = "boolean"
"definitions.AnalysisRule.properties.HasChildren.x-disallow-patch" = true
"definitions.AnalysisRule.properties.HasChildren.x-disallow-post" = true
"definitions.AnalysisRule.properties.HasChildren.x-disallow-put" = true
"definitions.AnalysisRule.properties.Id.example" = "392564fc-2f15-11e6-80d8-00155d844304"
"definitions.AnalysisRule.properties.Id.format" = "uuid"
"definitions.AnalysisRule.properties.Id.type" = "string"
"definitions.AnalysisRule.properties.Id.x-disallow-patch" = true
"definitions.AnalysisRule.properties.Id.x-disallow-post" = true
"definitions.AnalysisRule.properties.Id.x-disallow-put" = true
"definitions.AnalysisRule.properties.IsConfigured.example" = false
"definitions.AnalysisRule.properties.IsConfigured.type" = "boolean"
"definitions.AnalysisRule.properties.IsConfigured.x-disallow-patch" = true
"definitions.AnalysisRule.properties.IsConfigured.x-disallow-post" = true
"definitions.AnalysisRule.properties.IsConfigured.x-disallow-put" = true
"definitions.AnalysisRule.properties.IsInitializing.example" = false
"definitions.AnalysisRule.properties.IsInitializing.type" = "boolean"
"definitions.AnalysisRule.properties.IsInitializing.x-disallow-patch" = true
"definitions.AnalysisRule.properties.IsInitializing.x-disallow-post" = true
"definitions.AnalysisRule.properties.IsInitializing.x-disallow-put" = true
"definitions.AnalysisRule.properties.Links.properties.Analysis.type" = "string"
"definitions.AnalysisRule.properties.Links.properties.Analysis.x-link-optional" = true
"definitions.AnalysisRule.properties.Links.properties.Analysis.x-link-path" = "analyses/{webId}"
"definitions.AnalysisRule.properties.Links.properties.AnalysisRules.type" = "string"
"definitions.AnalysisRule.properties.Links.properties.AnalysisRules.x-link-optional" = false
"definitions.AnalysisRule.properties.Links.properties.AnalysisRules.x-link-path" = "analysisrules/{webId}/analysisrules"
"definitions.AnalysisRule.properties.Links.properties.AnalysisTemplate.type" = "string"
"definitions.AnalysisRule.properties.Links.properties.AnalysisTemplate.x-link-optional" = true
"definitions.AnalysisRule.properties.Links.properties.AnalysisTemplate.x-link-path" = "analysistemplates/{webId}"
"definitions.AnalysisRule.properties.Links.properties.Parent.type" = "string"
"definitions.AnalysisRule.properties.Links.properties.Parent.x-link-optional" = true
"definitions.AnalysisRule.properties.Links.properties.Parent.x-link-path" = "analysisrules/{webId}"
"definitions.AnalysisRule.properties.Links.properties.PlugIn.type" = "string"
"definitions.AnalysisRule.properties.Links.properties.PlugIn.x-link-optional" = true
"definitions.AnalysisRule.properties.Links.properties.PlugIn.x-link-path" = "analysisruleplugins/{webId}"
"definitions.AnalysisRule.properties.Links.properties.Self.type" = "string"
"definitions.AnalysisRule.properties.Links.properties.Self.x-link-optional" = false
"definitions.AnalysisRule.properties.Links.properties.Self.x-link-path" = "analysisrules/{webId}"
"definitions.AnalysisRule.properties.Links.type" = "object"
"definitions.AnalysisRule.properties.Name.example" = "PerformanceEquation"
"definitions.AnalysisRule.properties.Name.type" = "string"
"definitions.AnalysisRule.properties.Name.x-disallow-patch" = true
"definitions.AnalysisRule.properties.Name.x-disallow-post" = true
"definitions.AnalysisRule.properties.Name.x-disallow-put" = true
"definitions.AnalysisRule.properties.Path.example" = "\\\\MYSERVER\\MyDatabase\\MyElement\\Analyses[MyAnalysis]\\AnalysisRule"
"definitions.AnalysisRule.properties.Path.format" = "path"
"definitions.AnalysisRule.properties.Path.type" = "string"
"definitions.AnalysisRule.properties.Path.x-disallow-patch" = true
"definitions.AnalysisRule.properties.Path.x-disallow-post" = true
"definitions.AnalysisRule.properties.Path.x-disallow-put" = true
"definitions.AnalysisRule.properties.PlugInName.example" = "PerformanceEquation"
"definitions.AnalysisRule.properties.PlugInName.type" = "string"
"definitions.AnalysisRule.properties.PlugInName.x-disallow-patch" = true
"definitions.AnalysisRule.properties.PlugInName.x-required-post" = true
"definitions.AnalysisRule.properties.SupportedBehaviors.example.length" = 3
"definitions.AnalysisRule.properties.SupportedBehaviors.example[0]" = "SupportsRunningCase"
"definitions.AnalysisRule.properties.SupportedBehaviors.example[1]" = "SupportStatePassing"
"definitions.AnalysisRule.properties.SupportedBehaviors.example[2]" = "OutputCorrectAfterSkipping"
"definitions.AnalysisRule.properties.SupportedBehaviors.items.type" = "string"
"definitions.AnalysisRule.properties.SupportedBehaviors.type" = "array"
"definitions.AnalysisRule.properties.SupportedBehaviors.x-disallow-patch" = true
"definitions.AnalysisRule.properties.SupportedBehaviors.x-disallow-post" = true
"definitions.AnalysisRule.properties.SupportedBehaviors.x-disallow-put" = true
"definitions.AnalysisRule.properties.VariableMapping.example" = "b||Attribute1;c||Attribute2"
"definitions.AnalysisRule.properties.VariableMapping.type" = "string"
"definitions.AnalysisRule.properties.WebId.example" = "l0xDqD5loBNH0erqeqJodtALA_GQlORUv5hGA2AAVXYRDBA_GQlORUv5hGA2AAVXYRDBAUkVTVFVOSVRcNUIxQzg5REEtQTQ2Ri00NkVDLTlFMUYtRjI0NEI4OTQyRkVDXDkwQ0U0NURGLTYyODktNDgyMi04MTg2LTM3RTlBNEVENDA4RFxBTkFMWVNFU1s2QkZENjMzMS1FQTUwLTQ4OTctODcyMi0zRjc5RDFDMDNFMjNdXEFOQUxZU0lTUlVMRQ"
"definitions.AnalysisRule.properties.WebId.format" = "webid"
"definitions.AnalysisRule.properties.WebId.type" = "string"
"definitions.AnalysisRule.properties.WebId.x-disallow-patch" = true
"definitions.AnalysisRule.properties.WebId.x-disallow-post" = true
"definitions.AnalysisRule.properties.WebId.x-disallow-put" = true
"definitions.AnalysisRule.type" = "object"
"definitions.AnalysisRulePlugIn.properties.AssemblyFileName.example" = "OSIsoft.AF.Analysis.AnalysisRule.Imbalance.dll"
"definitions.AnalysisRulePlugIn.properties.AssemblyFileName.type" = "string"
"definitions.AnalysisRulePlugIn.properties.AssemblyFileName.x-disallow-patch" = true
"definitions.AnalysisRulePlugIn.properties.AssemblyFileName.x-disallow-post" = true
"definitions.AnalysisRulePlugIn.properties.AssemblyFileName.x-disallow-put" = true
"definitions.AnalysisRulePlugIn.properties.AssemblyID.example" = "1acd00c2-79d0-4818-a03c-0616c4513750"
"definitions.AnalysisRulePlugIn.properties.AssemblyID.format" = "uuid"
"definitions.AnalysisRulePlugIn.properties.AssemblyID.type" = "string"
"definitions.AnalysisRulePlugIn.properties.AssemblyID.x-disallow-patch" = true
"definitions.AnalysisRulePlugIn.properties.AssemblyID.x-disallow-post" = true
"definitions.AnalysisRulePlugIn.properties.AssemblyID.x-disallow-put" = true
"definitions.AnalysisRulePlugIn.properties.AssemblyLoadProperties.example.length" = 1
"definitions.AnalysisRulePlugIn.properties.AssemblyLoadProperties.example[0]" = "None"
"definitions.AnalysisRulePlugIn.properties.AssemblyLoadProperties.items.type" = "string"
"definitions.AnalysisRulePlugIn.properties.AssemblyLoadProperties.type" = "array"
"definitions.AnalysisRulePlugIn.properties.AssemblyLoadProperties.x-disallow-patch" = true
"definitions.AnalysisRulePlugIn.properties.AssemblyLoadProperties.x-disallow-post" = true
"definitions.AnalysisRulePlugIn.properties.AssemblyLoadProperties.x-disallow-put" = true
"definitions.AnalysisRulePlugIn.properties.AssemblyTime.example" = "2016-05-25T14:01:07Z"
"definitions.AnalysisRulePlugIn.properties.AssemblyTime.format" = "date-time"
"definitions.AnalysisRulePlugIn.properties.AssemblyTime.type" = "string"
"definitions.AnalysisRulePlugIn.properties.AssemblyTime.x-disallow-patch" = true
"definitions.AnalysisRulePlugIn.properties.AssemblyTime.x-disallow-post" = true
"definitions.AnalysisRulePlugIn.properties.AssemblyTime.x-disallow-put" = true
"definitions.AnalysisRulePlugIn.properties.CompatibilityVersion.example" = 2.0
"definitions.AnalysisRulePlugIn.properties.CompatibilityVersion.format" = "int32"
"definitions.AnalysisRulePlugIn.properties.CompatibilityVersion.type" = "integer"
"definitions.AnalysisRulePlugIn.properties.CompatibilityVersion.x-disallow-patch" = true
"definitions.AnalysisRulePlugIn.properties.CompatibilityVersion.x-disallow-post" = true
"definitions.AnalysisRulePlugIn.properties.CompatibilityVersion.x-disallow-put" = true
"definitions.AnalysisRulePlugIn.properties.Description.example" = "Calculates simple material imbalances on nodes of a model."
"definitions.AnalysisRulePlugIn.properties.Description.type" = "string"
"definitions.AnalysisRulePlugIn.properties.Description.x-disallow-patch" = true
"definitions.AnalysisRulePlugIn.properties.Description.x-disallow-post" = true
"definitions.AnalysisRulePlugIn.properties.Description.x-disallow-put" = true
"definitions.AnalysisRulePlugIn.properties.Id.example" = "c4ddce01-68f2-48c0-b164-33ba5fde30e0"
"definitions.AnalysisRulePlugIn.properties.Id.format" = "uuid"
"definitions.AnalysisRulePlugIn.properties.Id.type" = "string"
"definitions.AnalysisRulePlugIn.properties.Id.x-disallow-patch" = true
"definitions.AnalysisRulePlugIn.properties.Id.x-disallow-post" = true
"definitions.AnalysisRulePlugIn.properties.Id.x-disallow-put" = true
"definitions.AnalysisRulePlugIn.properties.IsBrowsable.example" = true
"definitions.AnalysisRulePlugIn.properties.IsBrowsable.type" = "boolean"
"definitions.AnalysisRulePlugIn.properties.IsBrowsable.x-disallow-patch" = true
"definitions.AnalysisRulePlugIn.properties.IsBrowsable.x-disallow-post" = true
"definitions.AnalysisRulePlugIn.properties.IsBrowsable.x-disallow-put" = true
"definitions.AnalysisRulePlugIn.properties.IsNonEditableConfig.example" = false
"definitions.AnalysisRulePlugIn.properties.IsNonEditableConfig.type" = "boolean"
"definitions.AnalysisRulePlugIn.properties.IsNonEditableConfig.x-disallow-patch" = true
"definitions.AnalysisRulePlugIn.properties.IsNonEditableConfig.x-disallow-post" = true
"definitions.AnalysisRulePlugIn.properties.IsNonEditableConfig.x-disallow-put" = true
"definitions.AnalysisRulePlugIn.properties.Links.properties.AssetServer.type" = "string"
"definitions.AnalysisRulePlugIn.properties.Links.properties.AssetServer.x-link-optional" = false
"definitions.AnalysisRulePlugIn.properties.Links.properties.AssetServer.x-link-path" = "assetservers/{webId}"
"definitions.AnalysisRulePlugIn.properties.Links.properties.Self.type" = "string"
"definitions.AnalysisRulePlugIn.properties.Links.properties.Self.x-link-optional" = false
"definitions.AnalysisRulePlugIn.properties.Links.properties.Self.x-link-path" = "analysisruleplugins/{webId}"
"definitions.AnalysisRulePlugIn.properties.Links.type" = "object"
"definitions.AnalysisRulePlugIn.properties.LoadedAssemblyTime.example" = "1970-01-01T00:00:00Z"
"definitions.AnalysisRulePlugIn.properties.LoadedAssemblyTime.format" = "date-time"
"definitions.AnalysisRulePlugIn.properties.LoadedAssemblyTime.type" = "string"
"definitions.AnalysisRulePlugIn.properties.LoadedAssemblyTime.x-disallow-patch" = true
"definitions.AnalysisRulePlugIn.properties.LoadedAssemblyTime.x-disallow-post" = true
"definitions.AnalysisRulePlugIn.properties.LoadedAssemblyTime.x-disallow-put" = true
"definitions.AnalysisRulePlugIn.properties.LoadedVersion.example" = ""
"definitions.AnalysisRulePlugIn.properties.LoadedVersion.type" = "string"
"definitions.AnalysisRulePlugIn.properties.LoadedVersion.x-disallow-patch" = true
"definitions.AnalysisRulePlugIn.properties.LoadedVersion.x-disallow-post" = true
"definitions.AnalysisRulePlugIn.properties.LoadedVersion.x-disallow-put" = true
"definitions.AnalysisRulePlugIn.properties.Name.example" = "Imbalance"
"definitions.AnalysisRulePlugIn.properties.Name.type" = "string"
"definitions.AnalysisRulePlugIn.properties.Name.x-disallow-patch" = true
"definitions.AnalysisRulePlugIn.properties.Name.x-disallow-post" = true
"definitions.AnalysisRulePlugIn.properties.Name.x-disallow-put" = true
"definitions.AnalysisRulePlugIn.properties.Path.example" = "\\\\MYSERVER\\PlugInsAnalysisRule[Imbalance]"
"definitions.AnalysisRulePlugIn.properties.Path.format" = "path"
"definitions.AnalysisRulePlugIn.properties.Path.type" = "string"
"definitions.AnalysisRulePlugIn.properties.Path.x-disallow-patch" = true
"definitions.AnalysisRulePlugIn.properties.Path.x-disallow-post" = true
"definitions.AnalysisRulePlugIn.properties.Path.x-disallow-put" = true
"definitions.AnalysisRulePlugIn.properties.Version.example" = "2.8.5.7552"
"definitions.AnalysisRulePlugIn.properties.Version.type" = "string"
"definitions.AnalysisRulePlugIn.properties.Version.x-disallow-patch" = true
"definitions.AnalysisRulePlugIn.properties.Version.x-disallow-post" = true
"definitions.AnalysisRulePlugIn.properties.Version.x-disallow-put" = true
"definitions.AnalysisRulePlugIn.properties.WebId.example" = "L0DqD5loBNH0erqeqJodtALAAc7dxPJowEixZDO6X94w4AUkVTVFVOSVRcUExVR0lOU0FOQUxZU0lTUlVMRVtJTUJBTEFOQ0Vd"
"definitions.AnalysisRulePlugIn.properties.WebId.format" = "webid"
"definitions.AnalysisRulePlugIn.properties.WebId.type" = "string"
"definitions.AnalysisRulePlugIn.properties.WebId.x-disallow-patch" = true
"definitions.AnalysisRulePlugIn.properties.WebId.x-disallow-post" = true
"definitions.AnalysisRulePlugIn.properties.WebId.x-disallow-put" = true
"definitions.AnalysisRulePlugIn.type" = "object"
"definitions.AnalysisTemplate.properties.AnalysisRulePlugInName.example" = "PerformanceEquation"
"definitions.AnalysisTemplate.properties.AnalysisRulePlugInName.type" = "string"
"definitions.AnalysisTemplate.properties.CategoryNames.example.length" = 1
"definitions.AnalysisTemplate.properties.CategoryNames.example[0]" = "MyAnalysisCategory"
"definitions.AnalysisTemplate.properties.CategoryNames.items.type" = "string"
"definitions.AnalysisTemplate.properties.CategoryNames.type" = "array"
"definitions.AnalysisTemplate.properties.CreateEnabled.example" = true
"definitions.AnalysisTemplate.properties.CreateEnabled.type" = "boolean"
"definitions.AnalysisTemplate.properties.Description.example" = ""
"definitions.AnalysisTemplate.properties.Description.type" = "string"
"definitions.AnalysisTemplate.properties.GroupId.example" = 0.0
"definitions.AnalysisTemplate.properties.GroupId.format" = "int32"
"definitions.AnalysisTemplate.properties.GroupId.type" = "integer"
"definitions.AnalysisTemplate.properties.HasNotificationTemplate.example" = false
"definitions.AnalysisTemplate.properties.HasNotificationTemplate.type" = "boolean"
"definitions.AnalysisTemplate.properties.HasNotificationTemplate.x-disallow-patch" = true
"definitions.AnalysisTemplate.properties.HasNotificationTemplate.x-disallow-post" = true
"definitions.AnalysisTemplate.properties.HasNotificationTemplate.x-disallow-put" = true
"definitions.AnalysisTemplate.properties.HasTarget.example" = false
"definitions.AnalysisTemplate.properties.HasTarget.type" = "boolean"
"definitions.AnalysisTemplate.properties.HasTarget.x-disallow-patch" = true
"definitions.AnalysisTemplate.properties.HasTarget.x-disallow-post" = true
"definitions.AnalysisTemplate.properties.HasTarget.x-disallow-put" = true
"definitions.AnalysisTemplate.properties.Id.example" = "c0b288d0-7b22-4c9a-8241-83504a5bd85b"
"definitions.AnalysisTemplate.properties.Id.format" = "uuid"
"definitions.AnalysisTemplate.properties.Id.type" = "string"
"definitions.AnalysisTemplate.properties.Id.x-disallow-patch" = true
"definitions.AnalysisTemplate.properties.Id.x-disallow-post" = true
"definitions.AnalysisTemplate.properties.Id.x-disallow-put" = true
"definitions.AnalysisTemplate.properties.Links.properties.AnalysisRule.type" = "string"
"definitions.AnalysisTemplate.properties.Links.properties.AnalysisRule.x-link-optional" = true
"definitions.AnalysisTemplate.properties.Links.properties.AnalysisRule.x-link-path" = "analysisrules/{webId}"
"definitions.AnalysisTemplate.properties.Links.properties.AnalysisRulePlugIn.type" = "string"
"definitions.AnalysisTemplate.properties.Links.properties.AnalysisRulePlugIn.x-link-optional" = true
"definitions.AnalysisTemplate.properties.Links.properties.AnalysisRulePlugIn.x-link-path" = "analysisruleplugins/{webId}"
"definitions.AnalysisTemplate.properties.Links.properties.Categories.type" = "string"
"definitions.AnalysisTemplate.properties.Links.properties.Categories.x-link-optional" = false
"definitions.AnalysisTemplate.properties.Links.properties.Categories.x-link-path" = "analysistemplates/{webId}/categories"
"definitions.AnalysisTemplate.properties.Links.properties.Database.type" = "string"
"definitions.AnalysisTemplate.properties.Links.properties.Database.x-link-optional" = false
"definitions.AnalysisTemplate.properties.Links.properties.Database.x-link-path" = "assetdatabases/{webId}"
"definitions.AnalysisTemplate.properties.Links.properties.Security.type" = "string"
"definitions.AnalysisTemplate.properties.Links.properties.Security.x-link-optional" = false
"definitions.AnalysisTemplate.properties.Links.properties.Security.x-link-path" = "analysistemplates/{webId}/security"
"definitions.AnalysisTemplate.properties.Links.properties.SecurityEntries.type" = "string"
"definitions.AnalysisTemplate.properties.Links.properties.SecurityEntries.x-link-optional" = false
"definitions.AnalysisTemplate.properties.Links.properties.SecurityEntries.x-link-path" = "analysistemplates/{webId}/securityentries"
"definitions.AnalysisTemplate.properties.Links.properties.Self.type" = "string"
"definitions.AnalysisTemplate.properties.Links.properties.Self.x-link-optional" = false
"definitions.AnalysisTemplate.properties.Links.properties.Self.x-link-path" = "analysistemplates/{webId}"
"definitions.AnalysisTemplate.properties.Links.properties.Target.type" = "string"
"definitions.AnalysisTemplate.properties.Links.properties.Target.x-link-optional" = true
"definitions.AnalysisTemplate.properties.Links.properties.Target.x-link-path" = "elementtemplates/{webId}"
"definitions.AnalysisTemplate.properties.Links.properties.TimeRule.type" = "string"
"definitions.AnalysisTemplate.properties.Links.properties.TimeRule.x-link-optional" = true
"definitions.AnalysisTemplate.properties.Links.properties.TimeRule.x-link-path" = "timerules/{webId}"
"definitions.AnalysisTemplate.properties.Links.properties.TimeRulePlugIn.type" = "string"
"definitions.AnalysisTemplate.properties.Links.properties.TimeRulePlugIn.x-link-optional" = true
"definitions.AnalysisTemplate.properties.Links.properties.TimeRulePlugIn.x-link-path" = "timeruleplugins/{webId}"
"definitions.AnalysisTemplate.properties.Links.type" = "object"
"definitions.AnalysisTemplate.properties.Name.example" = "MyAnalysisTemplate"
"definitions.AnalysisTemplate.properties.Name.type" = "string"
"definitions.AnalysisTemplate.properties.Name.x-required-post" = true
"definitions.AnalysisTemplate.properties.OutputTime.example" = ""
"definitions.AnalysisTemplate.properties.OutputTime.type" = "string"
"definitions.AnalysisTemplate.properties.Path.example" = "\\\\MYSERVER\\MyDatabase\\AnalysisTemplates[MyAnalysisTemplate]"
"definitions.AnalysisTemplate.properties.Path.format" = "path"
"definitions.AnalysisTemplate.properties.Path.type" = "string"
"definitions.AnalysisTemplate.properties.Path.x-disallow-patch" = true
"definitions.AnalysisTemplate.properties.Path.x-disallow-post" = true
"definitions.AnalysisTemplate.properties.Path.x-disallow-put" = true
"definitions.AnalysisTemplate.properties.TargetName.example" = "MyElementTemplate"
"definitions.AnalysisTemplate.properties.TargetName.type" = "string"
"definitions.AnalysisTemplate.properties.TimeRulePlugInName.example" = "Periodic"
"definitions.AnalysisTemplate.properties.TimeRulePlugInName.type" = "string"
"definitions.AnalysisTemplate.properties.WebId.example" = "Y0DqD5loBNH0erqeqJodtALA0IiywCJ7mkyCQYNQSlvYWwUkVTVFVOSVRcOTdCRjMyMzMtNDgyMi00OTYxLTg4M0YtQzU2REFERERDODUzXEFOQUxZU0lTVEVNUExBVEVTW0EzMjcwNzI2LTkzMDEtNDY5NS1BQTE1LTBCOEM0NUNCNDJDQ10"
"definitions.AnalysisTemplate.properties.WebId.format" = "webid"
"definitions.AnalysisTemplate.properties.WebId.type" = "string"
"definitions.AnalysisTemplate.properties.WebId.x-disallow-patch" = true
"definitions.AnalysisTemplate.properties.WebId.x-disallow-post" = true
"definitions.AnalysisTemplate.properties.WebId.x-disallow-put" = true
"definitions.AnalysisTemplate.type" = "object"
"definitions.Annotation.properties.CreationDate.example" = "2016-06-21T14:45:50.2988321Z"
"definitions.Annotation.properties.CreationDate.format" = "date-time"
"definitions.Annotation.properties.CreationDate.type" = "string"
"definitions.Annotation.properties.CreationDate.x-disallow-patch" = true
"definitions.Annotation.properties.CreationDate.x-disallow-post" = true
"definitions.Annotation.properties.CreationDate.x-disallow-put" = true
"definitions.Annotation.properties.Creator.example" = "MyDomain\\UserA"
"definitions.Annotation.properties.Creator.type" = "string"
"definitions.Annotation.properties.Creator.x-disallow-patch" = true
"definitions.Annotation.properties.Creator.x-disallow-post" = true
"definitions.Annotation.properties.Creator.x-disallow-put" = true
"definitions.Annotation.properties.Description.example" = "Signifies a spike in temperature."
"definitions.Annotation.properties.Description.type" = "string"
"definitions.Annotation.properties.Id.example" = "512B6616-CE39-4F70-9048-8C6A025FB592"
"definitions.Annotation.properties.Id.format" = "uuid"
"definitions.Annotation.properties.Id.type" = "string"
"definitions.Annotation.properties.Id.x-disallow-patch" = true
"definitions.Annotation.properties.Id.x-disallow-post" = true
"definitions.Annotation.properties.Id.x-disallow-put" = true
"definitions.Annotation.properties.Links.properties.Owner.type" = "string"
"definitions.Annotation.properties.Links.properties.Owner.x-link-optional" = false
"definitions.Annotation.properties.Links.properties.Self.type" = "string"
"definitions.Annotation.properties.Links.properties.Self.x-link-optional" = false
"definitions.Annotation.properties.Links.type" = "object"
"definitions.Annotation.properties.Modifier.example" = "MyDomain\\UserA"
"definitions.Annotation.properties.Modifier.type" = "string"
"definitions.Annotation.properties.Modifier.x-disallow-patch" = true
"definitions.Annotation.properties.Modifier.x-disallow-post" = true
"definitions.Annotation.properties.Modifier.x-disallow-put" = true
"definitions.Annotation.properties.ModifyDate.example" = "2016-06-21T14:45:50.2988321Z"
"definitions.Annotation.properties.ModifyDate.format" = "date-time"
"definitions.Annotation.properties.ModifyDate.type" = "string"
"definitions.Annotation.properties.ModifyDate.x-disallow-patch" = true
"definitions.Annotation.properties.ModifyDate.x-disallow-post" = true
"definitions.Annotation.properties.ModifyDate.x-disallow-put" = true
"definitions.Annotation.properties.Name.example" = "Temperature Annotation"
"definitions.Annotation.properties.Name.type" = "string"
"definitions.Annotation.properties.Name.x-required-post" = true
"definitions.Annotation.properties.Value.example" = "The temperature spiked because of a malfunction with a unit in our west plant."
"definitions.Annotation.properties.Value.type" = "object"
"definitions.Annotation.type" = "object"
"definitions.AssetDatabase.properties.Description.example" = "PI BI Project Asset Model"
"definitions.AssetDatabase.properties.Description.type" = "string"
"definitions.AssetDatabase.properties.ExtendedProperties.additionalProperties.$ref" = "#/definitions/Value"
"definitions.AssetDatabase.properties.ExtendedProperties.type" = "object"
"definitions.AssetDatabase.properties.Id.example" = "23913034-072C-41AC-BBBD-95FB6C4122D5"
"definitions.AssetDatabase.properties.Id.format" = "uuid"
"definitions.AssetDatabase.properties.Id.type" = "string"
"definitions.AssetDatabase.properties.Id.x-disallow-patch" = true
"definitions.AssetDatabase.properties.Id.x-disallow-post" = true
"definitions.AssetDatabase.properties.Id.x-disallow-put" = true
"definitions.AssetDatabase.properties.Links.properties.AnalysisCategories.type" = "string"
"definitions.AssetDatabase.properties.Links.properties.AnalysisCategories.x-link-optional" = false
"definitions.AssetDatabase.properties.Links.properties.AnalysisCategories.x-link-path" = "assetdatabases/{webId}/analysiscategories"
"definitions.AssetDatabase.properties.Links.properties.AnalysisTemplates.type" = "string"
"definitions.AssetDatabase.properties.Links.properties.AnalysisTemplates.x-link-optional" = false
"definitions.AssetDatabase.properties.Links.properties.AnalysisTemplates.x-link-path" = "assetdatabases/{webId}/analysistemplates"
"definitions.AssetDatabase.properties.Links.properties.AssetServer.type" = "string"
"definitions.AssetDatabase.properties.Links.properties.AssetServer.x-link-optional" = false
"definitions.AssetDatabase.properties.Links.properties.AssetServer.x-link-path" = "assetservers/{webId}"
"definitions.AssetDatabase.properties.Links.properties.AttributeCategories.type" = "string"
"definitions.AssetDatabase.properties.Links.properties.AttributeCategories.x-link-optional" = false
"definitions.AssetDatabase.properties.Links.properties.AttributeCategories.x-link-path" = "assetdatabases/{webId}/attributecategories"
"definitions.AssetDatabase.properties.Links.properties.ElementCategories.type" = "string"
"definitions.AssetDatabase.properties.Links.properties.ElementCategories.x-link-optional" = false
"definitions.AssetDatabase.properties.Links.properties.ElementCategories.x-link-path" = "assetdatabases/{webId}/elementcategories"
"definitions.AssetDatabase.properties.Links.properties.ElementTemplates.type" = "string"
"definitions.AssetDatabase.properties.Links.properties.ElementTemplates.x-link-optional" = false
"definitions.AssetDatabase.properties.Links.properties.ElementTemplates.x-link-path" = "assetdatabases/{webId}/elementtemplates"
"definitions.AssetDatabase.properties.Links.properties.Elements.type" = "string"
"definitions.AssetDatabase.properties.Links.properties.Elements.x-link-optional" = false
"definitions.AssetDatabase.properties.Links.properties.Elements.x-link-path" = "assetdatabases/{webId}/elements"
"definitions.AssetDatabase.properties.Links.properties.EnumerationSets.type" = "string"
"definitions.AssetDatabase.properties.Links.properties.EnumerationSets.x-link-optional" = false
"definitions.AssetDatabase.properties.Links.properties.EnumerationSets.x-link-path" = "assetdatabases/{webId}/enumerationsets"
"definitions.AssetDatabase.properties.Links.properties.EventFrames.type" = "string"
"definitions.AssetDatabase.properties.Links.properties.EventFrames.x-link-optional" = false
"definitions.AssetDatabase.properties.Links.properties.EventFrames.x-link-path" = "assetdatabases/{webId}/eventframes"
"definitions.AssetDatabase.properties.Links.properties.Security.type" = "string"
"definitions.AssetDatabase.properties.Links.properties.Security.x-link-optional" = false
"definitions.AssetDatabase.properties.Links.properties.Security.x-link-path" = "assetdatabases/{webId}/security"
"definitions.AssetDatabase.properties.Links.properties.SecurityEntries.type" = "string"
"definitions.AssetDatabase.properties.Links.properties.SecurityEntries.x-link-optional" = false
"definitions.AssetDatabase.properties.Links.properties.SecurityEntries.x-link-path" = "assetdatabases/{webId}/securityentries"
"definitions.AssetDatabase.properties.Links.properties.Self.type" = "string"
"definitions.AssetDatabase.properties.Links.properties.Self.x-link-optional" = false
"definitions.AssetDatabase.properties.Links.properties.Self.x-link-path" = "assetdatabases/{webId}"
"definitions.AssetDatabase.properties.Links.properties.TableCategories.type" = "string"
"definitions.AssetDatabase.properties.Links.properties.TableCategories.x-link-optional" = false
"definitions.AssetDatabase.properties.Links.properties.TableCategories.x-link-path" = "assetdatabases/{webId}/tablecategories"
"definitions.AssetDatabase.properties.Links.properties.Tables.type" = "string"
"definitions.AssetDatabase.properties.Links.properties.Tables.x-link-optional" = false
"definitions.AssetDatabase.properties.Links.properties.Tables.x-link-path" = "assetdatabases/{webId}/tables"
"definitions.AssetDatabase.properties.Links.type" = "object"
"definitions.AssetDatabase.properties.Name.example" = "NuGreen"
"definitions.AssetDatabase.properties.Name.type" = "string"
"definitions.AssetDatabase.properties.Name.x-required-post" = true
"definitions.AssetDatabase.properties.Path.example" = "\\\\MyServer\\NuGreen"
"definitions.AssetDatabase.properties.Path.format" = "path"
"definitions.AssetDatabase.properties.Path.type" = "string"
"definitions.AssetDatabase.properties.Path.x-disallow-patch" = true
"definitions.AssetDatabase.properties.Path.x-disallow-post" = true
"definitions.AssetDatabase.properties.Path.x-disallow-put" = true
"definitions.AssetDatabase.properties.WebId.example" = "D0NxzXSxtlKkGzAaZhKOB-KABJ2buwfWrkye3YhdL2FOUAUEhMQUZTMDRcQgYUUEVSRk9STUFOQ0UgVEVTVElORw"
"definitions.AssetDatabase.properties.WebId.format" = "webid"
"definitions.AssetDatabase.properties.WebId.type" = "string"
"definitions.AssetDatabase.properties.WebId.x-disallow-patch" = true
"definitions.AssetDatabase.properties.WebId.x-disallow-post" = true
"definitions.AssetDatabase.properties.WebId.x-disallow-put" = true
"definitions.AssetDatabase.type" = "object"
"definitions.AssetServer.properties.Description.example" = "Sample Description"
"definitions.AssetServer.properties.Description.type" = "string"
"definitions.AssetServer.properties.ExtendedProperties.additionalProperties.$ref" = "#/definitions/Value"
"definitions.AssetServer.properties.ExtendedProperties.type" = "object"
"definitions.AssetServer.properties.Id.example" = "88AC2613-6A25-43EE-8C72-11EA52AF9025"
"definitions.AssetServer.properties.Id.format" = "uuid"
"definitions.AssetServer.properties.Id.type" = "string"
"definitions.AssetServer.properties.Id.x-disallow-patch" = true
"definitions.AssetServer.properties.Id.x-disallow-post" = true
"definitions.AssetServer.properties.Id.x-disallow-put" = true
"definitions.AssetServer.properties.IsConnected.example" = true
"definitions.AssetServer.properties.IsConnected.type" = "boolean"
"definitions.AssetServer.properties.IsConnected.x-disallow-patch" = true
"definitions.AssetServer.properties.IsConnected.x-disallow-post" = true
"definitions.AssetServer.properties.IsConnected.x-disallow-put" = true
"definitions.AssetServer.properties.Links.properties.AnalysisRulePlugIns.type" = "string"
"definitions.AssetServer.properties.Links.properties.AnalysisRulePlugIns.x-link-optional" = false
"definitions.AssetServer.properties.Links.properties.AnalysisRulePlugIns.x-link-path" = "assetservers/{webId}/analysisruleplugins"
"definitions.AssetServer.properties.Links.properties.Databases.type" = "string"
"definitions.AssetServer.properties.Links.properties.Databases.x-link-optional" = false
"definitions.AssetServer.properties.Links.properties.Databases.x-link-path" = "assetservers/{webId}/assetdatabases"
"definitions.AssetServer.properties.Links.properties.Security.type" = "string"
"definitions.AssetServer.properties.Links.properties.Security.x-link-optional" = false
"definitions.AssetServer.properties.Links.properties.Security.x-link-path" = "assetservers/{webId}/security"
"definitions.AssetServer.properties.Links.properties.SecurityEntries.type" = "string"
"definitions.AssetServer.properties.Links.properties.SecurityEntries.x-link-optional" = false
"definitions.AssetServer.properties.Links.properties.SecurityEntries.x-link-path" = "assetservers/{webId}/securityentries"
"definitions.AssetServer.properties.Links.properties.SecurityIdentities.type" = "string"
"definitions.AssetServer.properties.Links.properties.SecurityIdentities.x-link-optional" = false
"definitions.AssetServer.properties.Links.properties.SecurityIdentities.x-link-path" = "assetservers/{webId}/securityidentities"
"definitions.AssetServer.properties.Links.properties.SecurityMappings.type" = "string"
"definitions.AssetServer.properties.Links.properties.SecurityMappings.x-link-optional" = false
"definitions.AssetServer.properties.Links.properties.SecurityMappings.x-link-path" = "assetservers/{webId}/securitymappings"
"definitions.AssetServer.properties.Links.properties.Self.type" = "string"
"definitions.AssetServer.properties.Links.properties.Self.x-link-optional" = false
"definitions.AssetServer.properties.Links.properties.Self.x-link-path" = "assetservers/{webId}"
"definitions.AssetServer.properties.Links.properties.TimeRulePlugIns.type" = "string"
"definitions.AssetServer.properties.Links.properties.TimeRulePlugIns.x-link-optional" = false
"definitions.AssetServer.properties.Links.properties.TimeRulePlugIns.x-link-path" = "assetservers/{webId}/timeruleplugins"
"definitions.AssetServer.properties.Links.properties.UnitClasses.type" = "string"
"definitions.AssetServer.properties.Links.properties.UnitClasses.x-link-optional" = false
"definitions.AssetServer.properties.Links.properties.UnitClasses.x-link-path" = "assetservers/{webId}/unitclasses"
"definitions.AssetServer.properties.Links.type" = "object"
"definitions.AssetServer.properties.Name.example" = "MyServer"
"definitions.AssetServer.properties.Name.type" = "string"
"definitions.AssetServer.properties.Name.x-disallow-patch" = true
"definitions.AssetServer.properties.Name.x-disallow-post" = true
"definitions.AssetServer.properties.Name.x-disallow-put" = true
"definitions.AssetServer.properties.Path.example" = "\\\\MyServer"
"definitions.AssetServer.properties.Path.format" = "path"
"definitions.AssetServer.properties.Path.type" = "string"
"definitions.AssetServer.properties.Path.x-disallow-patch" = true
"definitions.AssetServer.properties.Path.x-disallow-post" = true
"definitions.AssetServer.properties.Path.x-disallow-put" = true
"definitions.AssetServer.properties.ServerVersion.example" = "2.5.0.5039"
"definitions.AssetServer.properties.ServerVersion.type" = "string"
"definitions.AssetServer.properties.ServerVersion.x-disallow-patch" = true
"definitions.AssetServer.properties.ServerVersion.x-disallow-post" = true
"definitions.AssetServer.properties.ServerVersion.x-disallow-put" = true
"definitions.AssetServer.properties.WebId.example" = "S0DqD5loBNH0erqeqJodtBZxUkVTyRVOmNQ"
"definitions.AssetServer.properties.WebId.format" = "webid"
"definitions.AssetServer.properties.WebId.type" = "string"
"definitions.AssetServer.properties.WebId.x-disallow-patch" = true
"definitions.AssetServer.properties.WebId.x-disallow-post" = true
"definitions.AssetServer.properties.WebId.x-disallow-put" = true
"definitions.AssetServer.type" = "object"
"definitions.Attribute.properties.CategoryNames.example.length" = 1
"definitions.Attribute.properties.CategoryNames.example[0]" = "Energy Savings Targets"
"definitions.Attribute.properties.CategoryNames.items.type" = "string"
"definitions.Attribute.properties.CategoryNames.type" = "array"
"definitions.Attribute.properties.ConfigString.example" = "SELECT [Water Use] FROM [Energy Use 2008] WHERE [Asset ID] = '%Element%'"
"definitions.Attribute.properties.ConfigString.type" = "string"
"definitions.Attribute.properties.DataReferencePlugIn.example" = "Table Lookup"
"definitions.Attribute.properties.DataReferencePlugIn.type" = "string"
"definitions.Attribute.properties.DefaultUnitsName.example" = "liters"
"definitions.Attribute.properties.DefaultUnitsName.type" = "string"
"definitions.Attribute.properties.Description.example" = "2008 Water Use"
"definitions.Attribute.properties.Description.type" = "string"
"definitions.Attribute.properties.HasChildren.example" = false
"definitions.Attribute.properties.HasChildren.type" = "boolean"
"definitions.Attribute.properties.HasChildren.x-disallow-patch" = true
"definitions.Attribute.properties.HasChildren.x-disallow-post" = true
"definitions.Attribute.properties.HasChildren.x-disallow-put" = true
"definitions.Attribute.properties.Id.example" = "512B6616-CE39-4F70-9048-8C6A025FB592"
"definitions.Attribute.properties.Id.format" = "uuid"
"definitions.Attribute.properties.Id.type" = "string"
"definitions.Attribute.properties.Id.x-disallow-patch" = true
"definitions.Attribute.properties.Id.x-disallow-post" = true
"definitions.Attribute.properties.Id.x-disallow-put" = true
"definitions.Attribute.properties.IsConfigurationItem.example" = false
"definitions.Attribute.properties.IsConfigurationItem.type" = "boolean"
"definitions.Attribute.properties.IsExcluded.example" = false
"definitions.Attribute.properties.IsExcluded.type" = "boolean"
"definitions.Attribute.properties.IsExcluded.x-disallow-post" = true
"definitions.Attribute.properties.IsHidden.example" = false
"definitions.Attribute.properties.IsHidden.type" = "boolean"
"definitions.Attribute.properties.IsManualDataEntry.example" = false
"definitions.Attribute.properties.IsManualDataEntry.type" = "boolean"
"definitions.Attribute.properties.Links.properties.Attributes.type" = "string"
"definitions.Attribute.properties.Links.properties.Attributes.x-link-optional" = false
"definitions.Attribute.properties.Links.properties.Attributes.x-link-path" = "attributes/{webId}/attributes"
"definitions.Attribute.properties.Links.properties.Categories.type" = "string"
"definitions.Attribute.properties.Links.properties.Categories.x-link-optional" = false
"definitions.Attribute.properties.Links.properties.Categories.x-link-path" = "attributes/{webId}/categories"
"definitions.Attribute.properties.Links.properties.Element.type" = "string"
"definitions.Attribute.properties.Links.properties.Element.x-link-optional" = true
"definitions.Attribute.properties.Links.properties.Element.x-link-path" = "elements/{webId}"
"definitions.Attribute.properties.Links.properties.EndValue.type" = "string"
"definitions.Attribute.properties.Links.properties.EndValue.x-link-optional" = false
"definitions.Attribute.properties.Links.properties.EndValue.x-link-path" = "streams/{webId}/end"
"definitions.Attribute.properties.Links.properties.EnumerationSet.type" = "string"
"definitions.Attribute.properties.Links.properties.EnumerationSet.x-link-optional" = true
"definitions.Attribute.properties.Links.properties.EnumerationSet.x-link-path" = "enumerationsets/{webId}"
"definitions.Attribute.properties.Links.properties.EventFrame.type" = "string"
"definitions.Attribute.properties.Links.properties.EventFrame.x-link-optional" = true
"definitions.Attribute.properties.Links.properties.EventFrame.x-link-path" = "eventframes/{webId}"
"definitions.Attribute.properties.Links.properties.InterpolatedData.type" = "string"
"definitions.Attribute.properties.Links.properties.InterpolatedData.x-link-optional" = false
"definitions.Attribute.properties.Links.properties.InterpolatedData.x-link-path" = "streams/{webId}/interpolated"
"definitions.Attribute.properties.Links.properties.Parent.type" = "string"
"definitions.Attribute.properties.Links.properties.Parent.x-link-optional" = true
"definitions.Attribute.properties.Links.properties.Parent.x-link-path" = "attributes/{webId}"
"definitions.Attribute.properties.Links.properties.PlotData.type" = "string"
"definitions.Attribute.properties.Links.properties.PlotData.x-link-optional" = false
"definitions.Attribute.properties.Links.properties.PlotData.x-link-path" = "streams/{webId}/plot"
"definitions.Attribute.properties.Links.properties.Point.type" = "string"
"definitions.Attribute.properties.Links.properties.Point.x-link-optional" = true
"definitions.Attribute.properties.Links.properties.Point.x-link-path" = "points/{webId}"
"definitions.Attribute.properties.Links.properties.RecordedData.type" = "string"
"definitions.Attribute.properties.Links.properties.RecordedData.x-link-optional" = false
"definitions.Attribute.properties.Links.properties.RecordedData.x-link-path" = "streams/{webId}/recorded"
"definitions.Attribute.properties.Links.properties.Self.type" = "string"
"definitions.Attribute.properties.Links.properties.Self.x-link-optional" = false
"definitions.Attribute.properties.Links.properties.Self.x-link-path" = "attributes/{webId}"
"definitions.Attribute.properties.Links.properties.SummaryData.type" = "string"
"definitions.Attribute.properties.Links.properties.SummaryData.x-link-optional" = false
"definitions.Attribute.properties.Links.properties.SummaryData.x-link-path" = "streams/{webId}/summary"
"definitions.Attribute.properties.Links.properties.Template.type" = "string"
"definitions.Attribute.properties.Links.properties.Template.x-link-optional" = true
"definitions.Attribute.properties.Links.properties.Template.x-link-path" = "attributetemplates/{webId}"
"definitions.Attribute.properties.Links.properties.Trait.type" = "string"
"definitions.Attribute.properties.Links.properties.Trait.x-link-optional" = true
"definitions.Attribute.properties.Links.properties.Trait.x-link-path" = "attributetraits/{name}"
"definitions.Attribute.properties.Links.properties.Value.type" = "string"
"definitions.Attribute.properties.Links.properties.Value.x-link-optional" = false
"definitions.Attribute.properties.Links.type" = "object"
"definitions.Attribute.properties.Name.example" = "Water"
"definitions.Attribute.properties.Name.type" = "string"
"definitions.Attribute.properties.Name.x-required-post" = true
"definitions.Attribute.properties.Path.example" = "\\\\MyServer\\NuGreen\\NuGreen\\Houston\\Cracking Process\\Equipment\\B-210|Water(2008)"
"definitions.Attribute.properties.Path.format" = "path"
"definitions.Attribute.properties.Path.type" = "string"
"definitions.Attribute.properties.Path.x-disallow-patch" = true
"definitions.Attribute.properties.Path.x-disallow-post" = true
"definitions.Attribute.properties.Path.x-disallow-put" = true
"definitions.Attribute.properties.Step.example" = false
"definitions.Attribute.properties.Step.type" = "boolean"
"definitions.Attribute.properties.Step.x-disallow-patch" = true
"definitions.Attribute.properties.Step.x-disallow-post" = true
"definitions.Attribute.properties.Step.x-disallow-put" = true
"definitions.Attribute.properties.TraitName.example" = "LimitLoLo"
"definitions.Attribute.properties.TraitName.type" = "string"
"definitions.Attribute.properties.Type.example" = "Int32"
"definitions.Attribute.properties.Type.type" = "string"
"definitions.Attribute.properties.TypeQualifier.example" = ""
"definitions.Attribute.properties.TypeQualifier.type" = "string"
"definitions.Attribute.properties.WebId.example" = "A0EDqD5loBNH0erqeqJodtALAUvtkqIDl4xG-twAFmjx6AA79jxF7HiqFwpsgMBxwgWmgUkVTVFVOSVRcU1VNJQVHQU5cTlVHUkVZTlxIT1VTVE9f0FBMQU5UQ0lUWQ"
"definitions.Attribute.properties.WebId.format" = "webid"
"definitions.Attribute.properties.WebId.type" = "string"
"definitions.Attribute.properties.WebId.x-disallow-patch" = true
"definitions.Attribute.properties.WebId.x-disallow-post" = true
"definitions.Attribute.properties.WebId.x-disallow-put" = true
"definitions.Attribute.type" = "object"
"definitions.AttributeCategory.properties.Description.example" = "Relative energy use per ton of process feed."
"definitions.AttributeCategory.properties.Description.type" = "string"
"definitions.AttributeCategory.properties.Id.example" = "0520f4a1-4454-4fdc-b476-4d371ea6b59e"
"definitions.AttributeCategory.properties.Id.format" = "uuid"
"definitions.AttributeCategory.properties.Id.type" = "string"
"definitions.AttributeCategory.properties.Id.x-disallow-patch" = true
"definitions.AttributeCategory.properties.Id.x-disallow-post" = true
"definitions.AttributeCategory.properties.Id.x-disallow-put" = true
"definitions.AttributeCategory.properties.Links.properties.Database.type" = "string"
"definitions.AttributeCategory.properties.Links.properties.Database.x-link-optional" = false
"definitions.AttributeCategory.properties.Links.properties.Database.x-link-path" = "assetdatabases/{webId}"
"definitions.AttributeCategory.properties.Links.properties.Security.type" = "string"
"definitions.AttributeCategory.properties.Links.properties.Security.x-link-optional" = false
"definitions.AttributeCategory.properties.Links.properties.Security.x-link-path" = "attributecategories/{webId}/security"
"definitions.AttributeCategory.properties.Links.properties.SecurityEntries.type" = "string"
"definitions.AttributeCategory.properties.Links.properties.SecurityEntries.x-link-optional" = false
"definitions.AttributeCategory.properties.Links.properties.SecurityEntries.x-link-path" = "attributecategories/{webId}/securityentries"
"definitions.AttributeCategory.properties.Links.properties.Self.type" = "string"
"definitions.AttributeCategory.properties.Links.properties.Self.x-link-optional" = false
"definitions.AttributeCategory.properties.Links.properties.Self.x-link-path" = "attributecategories/{webId}"
"definitions.AttributeCategory.properties.Links.type" = "object"
"definitions.AttributeCategory.properties.Name.example" = "CategoryName"
"definitions.AttributeCategory.properties.Name.type" = "string"
"definitions.AttributeCategory.properties.Name.x-required-post" = true
"definitions.AttributeCategory.properties.Path.example" = "\\\\MyServer\\Database\\CategoriesAttribute[CategoryName]"
"definitions.AttributeCategory.properties.Path.format" = "path"
"definitions.AttributeCategory.properties.Path.type" = "string"
"definitions.AttributeCategory.properties.Path.x-disallow-patch" = true
"definitions.AttributeCategory.properties.Path.x-disallow-post" = true
"definitions.AttributeCategory.properties.Path.x-disallow-put" = true
"definitions.AttributeCategory.properties.WebId.example" = "c0DqD5loBNH0erqeqJodtALAofQgBVRE3E-0dk03Hqa1ngUkVTVFVOSVRcUk9OR1xDQVRFR09SSUVTQVRUUklCVVRFW0FDMF0"
"definitions.AttributeCategory.properties.WebId.format" = "webid"
"definitions.AttributeCategory.properties.WebId.type" = "string"
"definitions.AttributeCategory.properties.WebId.x-disallow-patch" = true
"definitions.AttributeCategory.properties.WebId.x-disallow-post" = true
"definitions.AttributeCategory.properties.WebId.x-disallow-put" = true
"definitions.AttributeCategory.type" = "object"
"definitions.AttributeTemplate.properties.CategoryNames.example.length" = 1
"definitions.AttributeTemplate.properties.CategoryNames.example[0]" = "Energy Savings Targets"
"definitions.AttributeTemplate.properties.CategoryNames.items.type" = "string"
"definitions.AttributeTemplate.properties.CategoryNames.type" = "array"
"definitions.AttributeTemplate.properties.ConfigString.example" = "SELECT [Water Use] FROM [Energy Use 2008] WHERE [Asset ID] = '%Element%'"
"definitions.AttributeTemplate.properties.ConfigString.type" = "string"
"definitions.AttributeTemplate.properties.DataReferencePlugIn.example" = "Table Lookup"
"definitions.AttributeTemplate.properties.DataReferencePlugIn.type" = "string"
"definitions.AttributeTemplate.properties.DefaultUnitsName.example" = "liters"
"definitions.AttributeTemplate.properties.DefaultUnitsName.type" = "string"
"definitions.AttributeTemplate.properties.DefaultValue.example" = 0.0
"definitions.AttributeTemplate.properties.DefaultValue.type" = "object"
"definitions.AttributeTemplate.properties.Description.example" = "2008 Water Use"
"definitions.AttributeTemplate.properties.Description.type" = "string"
"definitions.AttributeTemplate.properties.HasChildren.example" = false
"definitions.AttributeTemplate.properties.HasChildren.type" = "boolean"
"definitions.AttributeTemplate.properties.HasChildren.x-disallow-patch" = true
"definitions.AttributeTemplate.properties.HasChildren.x-disallow-post" = true
"definitions.AttributeTemplate.properties.HasChildren.x-disallow-put" = true
"definitions.AttributeTemplate.properties.Id.example" = "F82605BC-3A9C-4091-A57E-C0D9341BAD1A"
"definitions.AttributeTemplate.properties.Id.format" = "uuid"
"definitions.AttributeTemplate.properties.Id.type" = "string"
"definitions.AttributeTemplate.properties.Id.x-disallow-patch" = true
"definitions.AttributeTemplate.properties.Id.x-disallow-post" = true
"definitions.AttributeTemplate.properties.Id.x-disallow-put" = true
"definitions.AttributeTemplate.properties.IsConfigurationItem.example" = false
"definitions.AttributeTemplate.properties.IsConfigurationItem.type" = "boolean"
"definitions.AttributeTemplate.properties.IsExcluded.example" = false
"definitions.AttributeTemplate.properties.IsExcluded.type" = "boolean"
"definitions.AttributeTemplate.properties.IsHidden.example" = false
"definitions.AttributeTemplate.properties.IsHidden.type" = "boolean"
"definitions.AttributeTemplate.properties.IsManualDataEntry.example" = false
"definitions.AttributeTemplate.properties.IsManualDataEntry.type" = "boolean"
"definitions.AttributeTemplate.properties.Links.properties.AttributeTemplates.type" = "string"
"definitions.AttributeTemplate.properties.Links.properties.AttributeTemplates.x-link-optional" = false
"definitions.AttributeTemplate.properties.Links.properties.AttributeTemplates.x-link-path" = "attributetemplates/{webId}/attributetemplates"
"definitions.AttributeTemplate.properties.Links.properties.Categories.type" = "string"
"definitions.AttributeTemplate.properties.Links.properties.Categories.x-link-optional" = false
"definitions.AttributeTemplate.properties.Links.properties.Categories.x-link-path" = "attributetemplates/{webId}/categories"
"definitions.AttributeTemplate.properties.Links.properties.ElementTemplate.type" = "string"
"definitions.AttributeTemplate.properties.Links.properties.ElementTemplate.x-link-optional" = false
"definitions.AttributeTemplate.properties.Links.properties.ElementTemplate.x-link-path" = "elementtemplates/{webId}"
"definitions.AttributeTemplate.properties.Links.properties.Parent.type" = "string"
"definitions.AttributeTemplate.properties.Links.properties.Parent.x-link-optional" = true
"definitions.AttributeTemplate.properties.Links.properties.Parent.x-link-path" = "attributetemplates/{webId}"
"definitions.AttributeTemplate.properties.Links.properties.Self.type" = "string"
"definitions.AttributeTemplate.properties.Links.properties.Self.x-link-optional" = false
"definitions.AttributeTemplate.properties.Links.properties.Self.x-link-path" = "attributetemplates/{webId}"
"definitions.AttributeTemplate.properties.Links.properties.Trait.type" = "string"
"definitions.AttributeTemplate.properties.Links.properties.Trait.x-link-optional" = true
"definitions.AttributeTemplate.properties.Links.properties.Trait.x-link-path" = "attributetraits/{name}"
"definitions.AttributeTemplate.properties.Links.type" = "object"
"definitions.AttributeTemplate.properties.Name.example" = "Water(2008)"
"definitions.AttributeTemplate.properties.Name.type" = "string"
"definitions.AttributeTemplate.properties.Name.x-required-post" = true
"definitions.AttributeTemplate.properties.Path.example" = "\\\\MyServer\\NuGreen\\ElementTemplates[Boiler]|Water(2008)"
"definitions.AttributeTemplate.properties.Path.format" = "path"
"definitions.AttributeTemplate.properties.Path.type" = "string"
"definitions.AttributeTemplate.properties.Path.x-disallow-patch" = true
"definitions.AttributeTemplate.properties.Path.x-disallow-post" = true
"definitions.AttributeTemplate.properties.Path.x-disallow-put" = true
"definitions.AttributeTemplate.properties.TraitName.example" = "LimitLoLo"
"definitions.AttributeTemplate.properties.TraitName.type" = "string"
"definitions.AttributeTemplate.properties.Type.example" = "Int32"
"definitions.AttributeTemplate.properties.Type.type" = "string"
"definitions.AttributeTemplate.properties.TypeQualifier.example" = ""
"definitions.AttributeTemplate.properties.TypeQualifier.type" = "string"
"definitions.AttributeTemplate.properties.WebId.example" = "t0EDqD5loBNH0erqeqJodtALACd8tc2JnkUWeQ2KsKq30iA1W9lw3cYRkCQ5TRZsrkLQAUkVTVFVORVScU1VHQVJNQU5cRUxFTUVOVFRFTVBMQVRFUTQt1EFOVF18UExBTlRUUlVOQ0FURUROQU1F"
"definitions.AttributeTemplate.properties.WebId.format" = "webid"
"definitions.AttributeTemplate.properties.WebId.type" = "string"
"definitions.AttributeTemplate.properties.WebId.x-disallow-patch" = true
"definitions.AttributeTemplate.properties.WebId.x-disallow-post" = true
"definitions.AttributeTemplate.properties.WebId.x-disallow-put" = true
"definitions.AttributeTemplate.type" = "object"
"definitions.AttributeTrait.properties.Abbreviation.example" = "LoLo"
"definitions.AttributeTrait.properties.Abbreviation.type" = "string"
"definitions.AttributeTrait.properties.Abbreviation.x-disallow-patch" = true
"definitions.AttributeTrait.properties.Abbreviation.x-disallow-post" = true
"definitions.AttributeTrait.properties.Abbreviation.x-disallow-put" = true
"definitions.AttributeTrait.properties.AllowChildAttributes.example" = "false"
"definitions.AttributeTrait.properties.AllowChildAttributes.type" = "boolean"
"definitions.AttributeTrait.properties.AllowChildAttributes.x-disallow-patch" = true
"definitions.AttributeTrait.properties.AllowChildAttributes.x-disallow-post" = true
"definitions.AttributeTrait.properties.AllowChildAttributes.x-disallow-put" = true
"definitions.AttributeTrait.properties.AllowDuplicates.example" = "false"
"definitions.AttributeTrait.properties.AllowDuplicates.type" = "boolean"
"definitions.AttributeTrait.properties.AllowDuplicates.x-disallow-patch" = true
"definitions.AttributeTrait.properties.AllowDuplicates.x-disallow-post" = true
"definitions.AttributeTrait.properties.AllowDuplicates.x-disallow-put" = true
"definitions.AttributeTrait.properties.IsAllowedOnRootAttribute.example" = "false"
"definitions.AttributeTrait.properties.IsAllowedOnRootAttribute.type" = "boolean"
"definitions.AttributeTrait.properties.IsAllowedOnRootAttribute.x-disallow-patch" = true
"definitions.AttributeTrait.properties.IsAllowedOnRootAttribute.x-disallow-post" = true
"definitions.AttributeTrait.properties.IsAllowedOnRootAttribute.x-disallow-put" = true
"definitions.AttributeTrait.properties.IsTypeInherited.example" = "true"
"definitions.AttributeTrait.properties.IsTypeInherited.type" = "boolean"
"definitions.AttributeTrait.properties.IsTypeInherited.x-disallow-patch" = true
"definitions.AttributeTrait.properties.IsTypeInherited.x-disallow-post" = true
"definitions.AttributeTrait.properties.IsTypeInherited.x-disallow-put" = true
"definitions.AttributeTrait.properties.IsUOMInherited.example" = "true"
"definitions.AttributeTrait.properties.IsUOMInherited.type" = "boolean"
"definitions.AttributeTrait.properties.IsUOMInherited.x-disallow-patch" = true
"definitions.AttributeTrait.properties.IsUOMInherited.x-disallow-post" = true
"definitions.AttributeTrait.properties.IsUOMInherited.x-disallow-put" = true
"definitions.AttributeTrait.properties.Links.properties.Self.type" = "string"
"definitions.AttributeTrait.properties.Links.properties.Self.x-link-optional" = false
"definitions.AttributeTrait.properties.Links.properties.Self.x-link-path" = "attributetraits/{name}"
"definitions.AttributeTrait.properties.Links.type" = "object"
"definitions.AttributeTrait.properties.Name.example" = "LimitLoLo"
"definitions.AttributeTrait.properties.Name.type" = "string"
"definitions.AttributeTrait.properties.Name.x-disallow-patch" = true
"definitions.AttributeTrait.properties.Name.x-disallow-post" = true
"definitions.AttributeTrait.properties.Name.x-disallow-put" = true
"definitions.AttributeTrait.properties.RequireNumeric.example" = "true"
"definitions.AttributeTrait.properties.RequireNumeric.type" = "boolean"
"definitions.AttributeTrait.properties.RequireNumeric.x-disallow-patch" = true
"definitions.AttributeTrait.properties.RequireNumeric.x-disallow-post" = true
"definitions.AttributeTrait.properties.RequireNumeric.x-disallow-put" = true
"definitions.AttributeTrait.properties.RequireString.example" = "false"
"definitions.AttributeTrait.properties.RequireString.type" = "boolean"
"definitions.AttributeTrait.properties.RequireString.x-disallow-patch" = true
"definitions.AttributeTrait.properties.RequireString.x-disallow-post" = true
"definitions.AttributeTrait.properties.RequireString.x-disallow-put" = true
"definitions.AttributeTrait.type" = "object"
"definitions.CacheInstance.properties.Id.example" = "8a5033c9-b77f-431c-9820-c9f538d80dc6"
"definitions.CacheInstance.properties.Id.format" = "uuid"
"definitions.CacheInstance.properties.Id.type" = "string"
"definitions.CacheInstance.properties.Id.x-disallow-patch" = true
"definitions.CacheInstance.properties.Id.x-disallow-post" = true
"definitions.CacheInstance.properties.Id.x-disallow-put" = true
"definitions.CacheInstance.properties.LastRefreshTime.example" = "2014-07-20T14:08:00Z"
"definitions.CacheInstance.properties.LastRefreshTime.format" = "date-time"
"definitions.CacheInstance.properties.LastRefreshTime.type" = "string"
"definitions.CacheInstance.properties.LastRefreshTime.x-disallow-patch" = true
"definitions.CacheInstance.properties.LastRefreshTime.x-disallow-post" = true
"definitions.CacheInstance.properties.LastRefreshTime.x-disallow-put" = true
"definitions.CacheInstance.properties.ScheduledExpirationTime.example" = "2014-07-20T23:08:00Z"
"definitions.CacheInstance.properties.ScheduledExpirationTime.format" = "date-time"
"definitions.CacheInstance.properties.ScheduledExpirationTime.type" = "string"
"definitions.CacheInstance.properties.ScheduledExpirationTime.x-disallow-patch" = true
"definitions.CacheInstance.properties.ScheduledExpirationTime.x-disallow-post" = true
"definitions.CacheInstance.properties.ScheduledExpirationTime.x-disallow-put" = true
"definitions.CacheInstance.properties.User.example" = "MyDomain\\Username"
"definitions.CacheInstance.properties.User.type" = "string"
"definitions.CacheInstance.properties.User.x-disallow-patch" = true
"definitions.CacheInstance.properties.User.x-disallow-post" = true
"definitions.CacheInstance.properties.User.x-disallow-put" = true
"definitions.CacheInstance.properties.WillRefreshAfter.example" = "2014-07-20T18:08:00Z"
"definitions.CacheInstance.properties.WillRefreshAfter.format" = "date-time"
"definitions.CacheInstance.properties.WillRefreshAfter.type" = "string"
"definitions.CacheInstance.properties.WillRefreshAfter.x-disallow-patch" = true
"definitions.CacheInstance.properties.WillRefreshAfter.x-disallow-post" = true
"definitions.CacheInstance.properties.WillRefreshAfter.x-disallow-put" = true
"definitions.CacheInstance.type" = "object"
"definitions.DataServer.properties.Id.example" = "6F88ABE1-7F0B-421A-852F-A0AE50035888"
"definitions.DataServer.properties.Id.format" = "uuid"
"definitions.DataServer.properties.Id.type" = "string"
"definitions.DataServer.properties.Id.x-disallow-patch" = true
"definitions.DataServer.properties.Id.x-disallow-post" = true
"definitions.DataServer.properties.Id.x-disallow-put" = true
"definitions.DataServer.properties.IsConnected.example" = true
"definitions.DataServer.properties.IsConnected.type" = "boolean"
"definitions.DataServer.properties.IsConnected.x-disallow-patch" = true
"definitions.DataServer.properties.IsConnected.x-disallow-post" = true
"definitions.DataServer.properties.IsConnected.x-disallow-put" = true
"definitions.DataServer.properties.Links.properties.EnumerationSets.type" = "string"
"definitions.DataServer.properties.Links.properties.EnumerationSets.x-link-optional" = false
"definitions.DataServer.properties.Links.properties.EnumerationSets.x-link-path" = "dataservers/{webId}/enumerationsets"
"definitions.DataServer.properties.Links.properties.Points.type" = "string"
"definitions.DataServer.properties.Links.properties.Points.x-link-optional" = false
"definitions.DataServer.properties.Links.properties.Points.x-link-path" = "dataservers/{webId}/points"
"definitions.DataServer.properties.Links.properties.Self.type" = "string"
"definitions.DataServer.properties.Links.properties.Self.x-link-optional" = false
"definitions.DataServer.properties.Links.properties.Self.x-link-path" = "dataservers/{webId}"
"definitions.DataServer.properties.Links.type" = "object"
"definitions.DataServer.properties.Name.example" = "MyPIServer"
"definitions.DataServer.properties.Name.type" = "string"
"definitions.DataServer.properties.Name.x-disallow-patch" = true
"definitions.DataServer.properties.Name.x-disallow-post" = true
"definitions.DataServer.properties.Name.x-disallow-put" = true
"definitions.DataServer.properties.Path.example" = "\\\\PIServer[MyPIServer]"
"definitions.DataServer.properties.Path.format" = "path"
"definitions.DataServer.properties.Path.type" = "string"
"definitions.DataServer.properties.Path.x-disallow-patch" = true
"definitions.DataServer.properties.Path.x-disallow-post" = true
"definitions.DataServer.properties.Path.x-disallow-put" = true
"definitions.DataServer.properties.ServerVersion.example" = "3.4.390.18"
"definitions.DataServer.properties.ServerVersion.type" = "string"
"definitions.DataServer.properties.ServerVersion.x-disallow-patch" = true
"definitions.DataServer.properties.ServerVersion.x-disallow-post" = true
"definitions.DataServer.properties.ServerVersion.x-disallow-put" = true
"definitions.DataServer.properties.WebId.example" = "s0ZkdQM9wxoUCScZWmnpgoEwUEhMVlpO"
"definitions.DataServer.properties.WebId.format" = "webid"
"definitions.DataServer.properties.WebId.type" = "string"
"definitions.DataServer.properties.WebId.x-disallow-patch" = true
"definitions.DataServer.properties.WebId.x-disallow-post" = true
"definitions.DataServer.properties.WebId.x-disallow-put" = true
"definitions.DataServer.type" = "object"
"definitions.Element.properties.CategoryNames.example.length" = 1
"definitions.Element.properties.CategoryNames.example[0]" = "Equipment Assets"
"definitions.Element.properties.CategoryNames.items.type" = "string"
"definitions.Element.properties.CategoryNames.type" = "array"
"definitions.Element.properties.Description.example" = "Boiler B-210"
"definitions.Element.properties.Description.type" = "string"
"definitions.Element.properties.ExtendedProperties.additionalProperties.$ref" = "#/definitions/Value"
"definitions.Element.properties.ExtendedProperties.type" = "object"
"definitions.Element.properties.HasChildren.example" = false
"definitions.Element.properties.HasChildren.type" = "boolean"
"definitions.Element.properties.HasChildren.x-disallow-patch" = true
"definitions.Element.properties.HasChildren.x-disallow-post" = true
"definitions.Element.properties.HasChildren.x-disallow-put" = true
"definitions.Element.properties.Id.example" = "FCBC2D39-4085-491B-A0EE-E25767C85FA5"
"definitions.Element.properties.Id.format" = "uuid"
"definitions.Element.properties.Id.type" = "string"
"definitions.Element.properties.Id.x-disallow-patch" = true
"definitions.Element.properties.Id.x-disallow-post" = true
"definitions.Element.properties.Id.x-disallow-put" = true
"definitions.Element.properties.Links.properties.Analyses.type" = "string"
"definitions.Element.properties.Links.properties.Analyses.x-link-optional" = false
"definitions.Element.properties.Links.properties.Analyses.x-link-path" = "elements/{webId}/analyses"
"definitions.Element.properties.Links.properties.Attributes.type" = "string"
"definitions.Element.properties.Links.properties.Attributes.x-link-optional" = false
"definitions.Element.properties.Links.properties.Attributes.x-link-path" = "elements/{webId}/attributes"
"definitions.Element.properties.Links.properties.Categories.type" = "string"
"definitions.Element.properties.Links.properties.Categories.x-link-optional" = false
"definitions.Element.properties.Links.properties.Categories.x-link-path" = "elements/{webId}/categories"
"definitions.Element.properties.Links.properties.Database.type" = "string"
"definitions.Element.properties.Links.properties.Database.x-link-optional" = false
"definitions.Element.properties.Links.properties.Database.x-link-path" = "assetdatabases/{webId}"
"definitions.Element.properties.Links.properties.DefaultAttribute.type" = "string"
"definitions.Element.properties.Links.properties.DefaultAttribute.x-link-optional" = true
"definitions.Element.properties.Links.properties.DefaultAttribute.x-link-path" = "attributes/{webId}"
"definitions.Element.properties.Links.properties.Elements.type" = "string"
"definitions.Element.properties.Links.properties.Elements.x-link-optional" = false
"definitions.Element.properties.Links.properties.Elements.x-link-path" = "elements/{webId}/elements"
"definitions.Element.properties.Links.properties.EndValue.type" = "string"
"definitions.Element.properties.Links.properties.EndValue.x-link-optional" = false
"definitions.Element.properties.Links.properties.EndValue.x-link-path" = "streamsets/{webId}/end"
"definitions.Element.properties.Links.properties.EventFrames.type" = "string"
"definitions.Element.properties.Links.properties.EventFrames.x-link-optional" = false
"definitions.Element.properties.Links.properties.EventFrames.x-link-path" = "elements/{webId}/eventframes"
"definitions.Element.properties.Links.properties.InterpolatedData.type" = "string"
"definitions.Element.properties.Links.properties.InterpolatedData.x-link-optional" = false
"definitions.Element.properties.Links.properties.InterpolatedData.x-link-path" = "streamsets/{webId}/interpolated"
"definitions.Element.properties.Links.properties.Parent.type" = "string"
"definitions.Element.properties.Links.properties.Parent.x-link-optional" = true
"definitions.Element.properties.Links.properties.Parent.x-link-path" = "elements/{webId}"
"definitions.Element.properties.Links.properties.PlotData.type" = "string"
"definitions.Element.properties.Links.properties.PlotData.x-link-optional" = false
"definitions.Element.properties.Links.properties.PlotData.x-link-path" = "streamsets/{webId}/plot"
"definitions.Element.properties.Links.properties.RecordedData.type" = "string"
"definitions.Element.properties.Links.properties.RecordedData.x-link-optional" = false
"definitions.Element.properties.Links.properties.RecordedData.x-link-path" = "streamsets/{webId}/recorded"
"definitions.Element.properties.Links.properties.Security.type" = "string"
"definitions.Element.properties.Links.properties.Security.x-link-optional" = false
"definitions.Element.properties.Links.properties.Security.x-link-path" = "elements/{webId}/security"
"definitions.Element.properties.Links.properties.SecurityEntries.type" = "string"
"definitions.Element.properties.Links.properties.SecurityEntries.x-link-optional" = false
"definitions.Element.properties.Links.properties.SecurityEntries.x-link-path" = "elements/{webId}/securityentries"
"definitions.Element.properties.Links.properties.Self.type" = "string"
"definitions.Element.properties.Links.properties.Self.x-link-optional" = false
"definitions.Element.properties.Links.properties.Self.x-link-path" = "elements/{webId}"
"definitions.Element.properties.Links.properties.SummaryData.type" = "string"
"definitions.Element.properties.Links.properties.SummaryData.x-link-optional" = false
"definitions.Element.properties.Links.properties.SummaryData.x-link-path" = "streamsets/{webId}/summary"
"definitions.Element.properties.Links.properties.Template.type" = "string"
"definitions.Element.properties.Links.properties.Template.x-link-optional" = true
"definitions.Element.properties.Links.properties.Template.x-link-path" = "elementtemplates/{webId}"
"definitions.Element.properties.Links.properties.Value.type" = "string"
"definitions.Element.properties.Links.properties.Value.x-link-optional" = false
"definitions.Element.properties.Links.properties.Value.x-link-path" = "streamsets/{webId}/value"
"definitions.Element.properties.Links.type" = "object"
"definitions.Element.properties.Name.example" = "B-210"
"definitions.Element.properties.Name.type" = "string"
"definitions.Element.properties.Name.x-required-post" = true
"definitions.Element.properties.Path.example" = "\\\\MyServer\\NuGreen\\NuGreen\\Houston\\Cracking Process\\Equipment\\B-210"
"definitions.Element.properties.Path.format" = "path"
"definitions.Element.properties.Path.type" = "string"
"definitions.Element.properties.Path.x-disallow-patch" = true
"definitions.Element.properties.Path.x-disallow-post" = true
"definitions.Element.properties.Path.x-disallow-put" = true
"definitions.Element.properties.TemplateName.example" = "Boiler"
"definitions.Element.properties.TemplateName.type" = "string"
"definitions.Element.properties.WebId.example" = "E0DqD5loBNH0erqeqJodtALAvGEqktDl4xG-twAFmjx6UAUkVTVFVOSVRUc1VHQVJNQU5V1TcHUkVFTg"
"definitions.Element.properties.WebId.format" = "webid"
"definitions.Element.properties.WebId.type" = "string"
"definitions.Element.properties.WebId.x-disallow-patch" = true
"definitions.Element.properties.WebId.x-disallow-post" = true
"definitions.Element.properties.WebId.x-disallow-put" = true
"definitions.Element.type" = "object"
"definitions.ElementCategory.properties.Description.example" = "Relative energy use per ton of process feed."
"definitions.ElementCategory.properties.Description.type" = "string"
"definitions.ElementCategory.properties.Id.example" = "3051f943-7e4d-4241-ab9c-450a84c80450"
"definitions.ElementCategory.properties.Id.format" = "uuid"
"definitions.ElementCategory.properties.Id.type" = "string"
"definitions.ElementCategory.properties.Id.x-disallow-patch" = true
"definitions.ElementCategory.properties.Id.x-disallow-post" = true
"definitions.ElementCategory.properties.Id.x-disallow-put" = true
"definitions.ElementCategory.properties.Links.properties.Database.type" = "string"
"definitions.ElementCategory.properties.Links.properties.Database.x-link-optional" = false
"definitions.ElementCategory.properties.Links.properties.Database.x-link-path" = "assetdatabases/{webId}"
"definitions.ElementCategory.properties.Links.properties.Security.type" = "string"
"definitions.ElementCategory.properties.Links.properties.Security.x-link-optional" = false
"definitions.ElementCategory.properties.Links.properties.Security.x-link-path" = "elementcategories/{webId}/security"
"definitions.ElementCategory.properties.Links.properties.SecurityEntries.type" = "string"
"definitions.ElementCategory.properties.Links.properties.SecurityEntries.x-link-optional" = false
"definitions.ElementCategory.properties.Links.properties.SecurityEntries.x-link-path" = "elementcategories/{webId}/securityentries"
"definitions.ElementCategory.properties.Links.properties.Self.type" = "string"
"definitions.ElementCategory.properties.Links.properties.Self.x-link-optional" = false
"definitions.ElementCategory.properties.Links.properties.Self.x-link-path" = "elementcategories/{webId}"
"definitions.ElementCategory.properties.Links.type" = "object"
"definitions.ElementCategory.properties.Name.example" = "CategoryName"
"definitions.ElementCategory.properties.Name.type" = "string"
"definitions.ElementCategory.properties.Name.x-required-post" = true
"definitions.ElementCategory.properties.Path.example" = "\\\\MyServer\\Database\\CategoriesElement[CategoryName]"
"definitions.ElementCategory.properties.Path.format" = "path"
"definitions.ElementCategory.properties.Path.type" = "string"
"definitions.ElementCategory.properties.Path.x-disallow-patch" = true
"definitions.ElementCategory.properties.Path.x-disallow-post" = true
"definitions.ElementCategory.properties.Path.x-disallow-put" = true
"definitions.ElementCategory.properties.WebId.example" = "e0DqD5loBNH0erqeqJodtALAQ_lRME1-QUKrnEUKhMgEUAUkVTVFVOSVRcUk9OR1xDQVRFR09SSUVTRUxFTUVOVFtDQVRFR09SWTFd"
"definitions.ElementCategory.properties.WebId.format" = "webid"
"definitions.ElementCategory.properties.WebId.type" = "string"
"definitions.ElementCategory.properties.WebId.x-disallow-patch" = true
"definitions.ElementCategory.properties.WebId.x-disallow-post" = true
"definitions.ElementCategory.properties.WebId.x-disallow-put" = true
"definitions.ElementCategory.type" = "object"
"definitions.ElementTemplate.properties.AllowElementToExtend.example" = false
"definitions.ElementTemplate.properties.AllowElementToExtend.type" = "boolean"
"definitions.ElementTemplate.properties.BaseTemplate.example" = "Equipment"
"definitions.ElementTemplate.properties.BaseTemplate.type" = "string"
"definitions.ElementTemplate.properties.CanBeAcknowledged.example" = false
"definitions.ElementTemplate.properties.CanBeAcknowledged.type" = "boolean"
"definitions.ElementTemplate.properties.CategoryNames.example.length" = 1
"definitions.ElementTemplate.properties.CategoryNames.example[0]" = "Equipment Assets"
"definitions.ElementTemplate.properties.CategoryNames.items.type" = "string"
"definitions.ElementTemplate.properties.CategoryNames.type" = "array"
"definitions.ElementTemplate.properties.Description.example" = "Boiler"
"definitions.ElementTemplate.properties.Description.type" = "string"
"definitions.ElementTemplate.properties.ExtendedProperties.additionalProperties.$ref" = "#/definitions/Value"
"definitions.ElementTemplate.properties.ExtendedProperties.type" = "object"
"definitions.ElementTemplate.properties.Id.example" = "74646B96-A130-40A3-AA25-49396C9D6B3C"
"definitions.ElementTemplate.properties.Id.format" = "uuid"
"definitions.ElementTemplate.properties.Id.type" = "string"
"definitions.ElementTemplate.properties.Id.x-disallow-patch" = true
"definitions.ElementTemplate.properties.Id.x-disallow-post" = true
"definitions.ElementTemplate.properties.Id.x-disallow-put" = true
"definitions.ElementTemplate.properties.InstanceType.example" = "Element"
"definitions.ElementTemplate.properties.InstanceType.type" = "string"
"definitions.ElementTemplate.properties.Links.properties.AnalysisTemplates.type" = "string"
"definitions.ElementTemplate.properties.Links.properties.AnalysisTemplates.x-link-optional" = false
"definitions.ElementTemplate.properties.Links.properties.AnalysisTemplates.x-link-path" = "elementtemplates/{webId}/analysistemplates"
"definitions.ElementTemplate.properties.Links.properties.AttributeTemplates.type" = "string"
"definitions.ElementTemplate.properties.Links.properties.AttributeTemplates.x-link-optional" = false
"definitions.ElementTemplate.properties.Links.properties.AttributeTemplates.x-link-path" = "elementtemplates/{webId}/attributetemplates"
"definitions.ElementTemplate.properties.Links.properties.BaseTemplate.type" = "string"
"definitions.ElementTemplate.properties.Links.properties.BaseTemplate.x-link-optional" = true
"definitions.ElementTemplate.properties.Links.properties.BaseTemplate.x-link-path" = "elementtemplates/{webId}"
"definitions.ElementTemplate.properties.Links.properties.Categories.type" = "string"
"definitions.ElementTemplate.properties.Links.properties.Categories.x-link-optional" = false
"definitions.ElementTemplate.properties.Links.properties.Categories.x-link-path" = "elementtemplates/{webId}/categories"
"definitions.ElementTemplate.properties.Links.properties.Database.type" = "string"
"definitions.ElementTemplate.properties.Links.properties.Database.x-link-optional" = false
"definitions.ElementTemplate.properties.Links.properties.Database.x-link-path" = "assetdatabases/{webId}"
"definitions.ElementTemplate.properties.Links.properties.DefaultAttribute.type" = "string"
"definitions.ElementTemplate.properties.Links.properties.DefaultAttribute.x-link-optional" = true
"definitions.ElementTemplate.properties.Links.properties.DefaultAttribute.x-link-path" = "attributetemplates/{webId}"
"definitions.ElementTemplate.properties.Links.properties.Security.type" = "string"
"definitions.ElementTemplate.properties.Links.properties.Security.x-link-optional" = false
"definitions.ElementTemplate.properties.Links.properties.Security.x-link-path" = "elementtemplates/{webId}/security"
"definitions.ElementTemplate.properties.Links.properties.SecurityEntries.type" = "string"
"definitions.ElementTemplate.properties.Links.properties.SecurityEntries.x-link-optional" = false
"definitions.ElementTemplate.properties.Links.properties.SecurityEntries.x-link-path" = "elementtemplates/{webId}/securityentries"
"definitions.ElementTemplate.properties.Links.properties.Self.type" = "string"
"definitions.ElementTemplate.properties.Links.properties.Self.x-link-optional" = false
"definitions.ElementTemplate.properties.Links.properties.Self.x-link-path" = "elementtemplates/{webId}"
"definitions.ElementTemplate.properties.Links.type" = "object"
"definitions.ElementTemplate.properties.Name.example" = "Boiler"
"definitions.ElementTemplate.properties.Name.type" = "string"
"definitions.ElementTemplate.properties.Name.x-required-post" = true
"definitions.ElementTemplate.properties.NamingPattern.example" = "%TEMPLATE%"
"definitions.ElementTemplate.properties.NamingPattern.type" = "string"
"definitions.ElementTemplate.properties.Path.example" = "\\\\MyServer\\NuGreen\\ElementTemplates[Boiler]"
"definitions.ElementTemplate.properties.Path.format" = "path"
"definitions.ElementTemplate.properties.Path.type" = "string"
"definitions.ElementTemplate.properties.Path.x-disallow-patch" = true
"definitions.ElementTemplate.properties.Path.x-disallow-post" = true
"definitions.ElementTemplate.properties.Path.x-disallow-put" = true
"definitions.ElementTemplate.properties.Severity.example" = "None"
"definitions.ElementTemplate.properties.Severity.type" = "string"
"definitions.ElementTemplate.properties.WebId.example" = "T0DqD5loBNH0erqeqJodtALAvdrykzvWo0SXjjgcl9gTqAkUVTVFVOSVRcU1VHQVJ5UQNcRUxFTUVOVFRFTVBMQVRFU1t1TFRFUlBSSVNFXQ"
"definitions.ElementTemplate.properties.WebId.format" = "webid"
"definitions.ElementTemplate.properties.WebId.type" = "string"
"definitions.ElementTemplate.properties.WebId.x-disallow-patch" = true
"definitions.ElementTemplate.properties.WebId.x-disallow-post" = true
"definitions.ElementTemplate.properties.WebId.x-disallow-put" = true
"definitions.ElementTemplate.type" = "object"
"definitions.EnumerationSet.properties.Description.example" = "Model numbers by brand of vehicle"
"definitions.EnumerationSet.properties.Description.type" = "string"
"definitions.EnumerationSet.properties.Id.example" = "C186EF94-2028-4954-A136-FAEA79CEE9AA"
"definitions.EnumerationSet.properties.Id.format" = "uuid"
"definitions.EnumerationSet.properties.Id.type" = "string"
"definitions.EnumerationSet.properties.Id.x-disallow-patch" = true
"definitions.EnumerationSet.properties.Id.x-disallow-post" = true
"definitions.EnumerationSet.properties.Id.x-disallow-put" = true
"definitions.EnumerationSet.properties.Links.properties.DataServer.type" = "string"
"definitions.EnumerationSet.properties.Links.properties.DataServer.x-link-optional" = true
"definitions.EnumerationSet.properties.Links.properties.DataServer.x-link-path" = "dataservers/{webId}"
"definitions.EnumerationSet.properties.Links.properties.Database.type" = "string"
"definitions.EnumerationSet.properties.Links.properties.Database.x-link-optional" = true
"definitions.EnumerationSet.properties.Links.properties.Database.x-link-path" = "assetdatabases/{webId}"
"definitions.EnumerationSet.properties.Links.properties.Security.type" = "string"
"definitions.EnumerationSet.properties.Links.properties.Security.x-link-optional" = false
"definitions.EnumerationSet.properties.Links.properties.Security.x-link-path" = "enumerationsets/{webId}/security"
"definitions.EnumerationSet.properties.Links.properties.SecurityEntries.type" = "string"
"definitions.EnumerationSet.properties.Links.properties.SecurityEntries.x-link-optional" = false
"definitions.EnumerationSet.properties.Links.properties.SecurityEntries.x-link-path" = "enumerationsets/{webId}/securityentries"
"definitions.EnumerationSet.properties.Links.properties.Self.type" = "string"
"definitions.EnumerationSet.properties.Links.properties.Self.x-link-optional" = false
"definitions.EnumerationSet.properties.Links.properties.Self.x-link-path" = "enumerationsets/{webId}"
"definitions.EnumerationSet.properties.Links.properties.Values.type" = "string"
"definitions.EnumerationSet.properties.Links.properties.Values.x-link-optional" = false
"definitions.EnumerationSet.properties.Links.properties.Values.x-link-path" = "enumerationsets/{webId}/enumerationvalues"
"definitions.EnumerationSet.properties.Links.type" = "object"
"definitions.EnumerationSet.properties.Name.example" = "Model Number"
"definitions.EnumerationSet.properties.Name.type" = "string"
"definitions.EnumerationSet.properties.Name.x-required-post" = true
"definitions.EnumerationSet.properties.Path.example" = "\\\\MyServer\\NuGreen\\EnumerationSets[Model Number]"
"definitions.EnumerationSet.properties.Path.format" = "path"
"definitions.EnumerationSet.properties.Path.type" = "string"
"definitions.EnumerationSet.properties.Path.x-disallow-patch" = true
"definitions.EnumerationSet.properties.Path.x-disallow-post" = true
"definitions.EnumerationSet.properties.Path.x-disallow-put" = true
"definitions.EnumerationSet.properties.SerializeDescription.type" = "boolean"
"definitions.EnumerationSet.properties.WebId.example" = "U0qDSD5loBNH0erqeqJodtALAChs3W0xcXUG6x0ibnAnQdgUkVTVFVOScVRU1VHQVJNQU5cRX5VTUVSQVRJT05TRVRTW0VOVU1FUkFUSU9OIFNFVCAzXQ"
"definitions.EnumerationSet.properties.WebId.format" = "webid"
"definitions.EnumerationSet.properties.WebId.type" = "string"
"definitions.EnumerationSet.properties.WebId.x-disallow-patch" = true
"definitions.EnumerationSet.properties.WebId.x-disallow-post" = true
"definitions.EnumerationSet.properties.WebId.x-disallow-put" = true
"definitions.EnumerationSet.type" = "object"
"definitions.EnumerationValue.properties.Description.example" = "Model Number of BMW"
"definitions.EnumerationValue.properties.Description.type" = "string"
"definitions.EnumerationValue.properties.Id.example" = "7DC2449E-B31D-41AF-AA08-75A17AA32D6A"
"definitions.EnumerationValue.properties.Id.format" = "uuid"
"definitions.EnumerationValue.properties.Id.type" = "string"
"definitions.EnumerationValue.properties.Id.x-disallow-patch" = true
"definitions.EnumerationValue.properties.Id.x-disallow-post" = true
"definitions.EnumerationValue.properties.Id.x-disallow-put" = true
"definitions.EnumerationValue.properties.Links.properties.EnumerationSet.type" = "string"
"definitions.EnumerationValue.properties.Links.properties.EnumerationSet.x-link-optional" = false
"definitions.EnumerationValue.properties.Links.properties.EnumerationSet.x-link-path" = "enumerationsets/{webId}"
"definitions.EnumerationValue.properties.Links.properties.Self.type" = "string"
"definitions.EnumerationValue.properties.Links.properties.Self.x-link-optional" = false
"definitions.EnumerationValue.properties.Links.properties.Self.x-link-path" = "enumerationvalues/{webId}"
"definitions.EnumerationValue.properties.Links.type" = "object"
"definitions.EnumerationValue.properties.Name.example" = "BMW"
"definitions.EnumerationValue.properties.Name.type" = "string"
"definitions.EnumerationValue.properties.Name.x-required-post" = true
"definitions.EnumerationValue.properties.Path.example" = "\\\\MyServer\\NuGreen\\EnumerationSets[Model Number]\\BMW"
"definitions.EnumerationValue.properties.Path.format" = "path"
"definitions.EnumerationValue.properties.Path.type" = "string"
"definitions.EnumerationValue.properties.Path.x-disallow-patch" = true
"definitions.EnumerationValue.properties.Path.x-disallow-post" = true
"definitions.EnumerationValue.properties.Path.x-disallow-put" = true
"definitions.EnumerationValue.properties.SerializeDescription.type" = "boolean"
"definitions.EnumerationValue.properties.SerializeId.type" = "boolean"
"definitions.EnumerationValue.properties.SerializeLinks.type" = "boolean"
"definitions.EnumerationValue.properties.SerializePath.type" = "boolean"
"definitions.EnumerationValue.properties.SerializeWebId.type" = "boolean"
"definitions.EnumerationValue.properties.Value.example" = 2005.0
"definitions.EnumerationValue.properties.Value.format" = "int32"
"definitions.EnumerationValue.properties.Value.type" = "integer"
"definitions.EnumerationValue.properties.Value.x-required-post" = true
"definitions.EnumerationValue.properties.WebId.example" = "V0SDqD5loBNH0erqeqJodtALAChs3W0xcXUG6x0ibnAnQdgUN6jDehdLkWYmU1CkJMzgNUkTVVFVOSVR1CuVHQVJNQU5cRU5VTUVSQVRJT05TRVRTW0VOVU1FUkFUSU9OIFNFVCAzXVxB"
"definitions.EnumerationValue.properties.WebId.format" = "webid"
"definitions.EnumerationValue.properties.WebId.type" = "string"
"definitions.EnumerationValue.properties.WebId.x-disallow-patch" = true
"definitions.EnumerationValue.properties.WebId.x-disallow-post" = true
"definitions.EnumerationValue.properties.WebId.x-disallow-put" = true
"definitions.EnumerationValue.type" = "object"
"definitions.Errors.properties.Errors.items.type" = "string"
"definitions.Errors.properties.Errors.type" = "array"
"definitions.Errors.type" = "object"
"definitions.EventFrame.properties.AcknowledgedBy.example" = "MyDomain\\UserA"
"definitions.EventFrame.properties.AcknowledgedBy.type" = "string"
"definitions.EventFrame.properties.AcknowledgedBy.x-disallow-patch" = true
"definitions.EventFrame.properties.AcknowledgedBy.x-disallow-post" = true
"definitions.EventFrame.properties.AcknowledgedBy.x-disallow-put" = true
"definitions.EventFrame.properties.AcknowledgedDate.example" = "2014-07-30T11:04:23Z"
"definitions.EventFrame.properties.AcknowledgedDate.format" = "date-time"
"definitions.EventFrame.properties.AcknowledgedDate.type" = "string"
"definitions.EventFrame.properties.AcknowledgedDate.x-disallow-patch" = true
"definitions.EventFrame.properties.AcknowledgedDate.x-disallow-post" = true
"definitions.EventFrame.properties.AcknowledgedDate.x-disallow-put" = true
"definitions.EventFrame.properties.AreValuesCaptured.example" = false
"definitions.EventFrame.properties.AreValuesCaptured.type" = "boolean"
"definitions.EventFrame.properties.AreValuesCaptured.x-disallow-patch" = true
"definitions.EventFrame.properties.AreValuesCaptured.x-disallow-post" = true
"definitions.EventFrame.properties.AreValuesCaptured.x-disallow-put" = true
"definitions.EventFrame.properties.CanBeAcknowledged.example" = true
"definitions.EventFrame.properties.CanBeAcknowledged.type" = "boolean"
"definitions.EventFrame.properties.CanBeAcknowledged.x-disallow-patch" = true
"definitions.EventFrame.properties.CanBeAcknowledged.x-disallow-post" = true
"definitions.EventFrame.properties.CanBeAcknowledged.x-disallow-put" = true
"definitions.EventFrame.properties.CategoryNames.example.length" = 1
"definitions.EventFrame.properties.CategoryNames.example[0]" = "Processing Plant"
"definitions.EventFrame.properties.CategoryNames.items.type" = "string"
"definitions.EventFrame.properties.CategoryNames.type" = "array"
"definitions.EventFrame.properties.Description.example" = "Event Frame of Past Week"
"definitions.EventFrame.properties.Description.type" = "string"
"definitions.EventFrame.properties.EndTime.example" = "2014-07-25T14:45:29Z"
"definitions.EventFrame.properties.EndTime.format" = "date-time"
"definitions.EventFrame.properties.EndTime.type" = "string"
"definitions.EventFrame.properties.ExtendedProperties.additionalProperties.$ref" = "#/definitions/Value"
"definitions.EventFrame.properties.ExtendedProperties.type" = "object"
"definitions.EventFrame.properties.HasChildren.example" = false
"definitions.EventFrame.properties.HasChildren.type" = "boolean"
"definitions.EventFrame.properties.HasChildren.x-disallow-patch" = true
"definitions.EventFrame.properties.HasChildren.x-disallow-post" = true
"definitions.EventFrame.properties.HasChildren.x-disallow-put" = true
"definitions.EventFrame.properties.Id.example" = "6131900F-2FDD-4DD7-B082-8BB326E134F8"
"definitions.EventFrame.properties.Id.format" = "uuid"
"definitions.EventFrame.properties.Id.type" = "string"
"definitions.EventFrame.properties.Id.x-disallow-patch" = true
"definitions.EventFrame.properties.Id.x-disallow-post" = true
"definitions.EventFrame.properties.Id.x-disallow-put" = true
"definitions.EventFrame.properties.IsAcknowledged.example" = true
"definitions.EventFrame.properties.IsAcknowledged.type" = "boolean"
"definitions.EventFrame.properties.IsAcknowledged.x-disallow-patch" = true
"definitions.EventFrame.properties.IsAcknowledged.x-disallow-post" = true
"definitions.EventFrame.properties.IsAcknowledged.x-disallow-put" = true
"definitions.EventFrame.properties.IsAnnotated.example" = false
"definitions.EventFrame.properties.IsAnnotated.type" = "boolean"
"definitions.EventFrame.properties.IsAnnotated.x-disallow-patch" = true
"definitions.EventFrame.properties.IsAnnotated.x-disallow-post" = true
"definitions.EventFrame.properties.IsAnnotated.x-disallow-put" = true
"definitions.EventFrame.properties.IsLocked.example" = false
"definitions.EventFrame.properties.IsLocked.type" = "boolean"
"definitions.EventFrame.properties.IsLocked.x-disallow-patch" = true
"definitions.EventFrame.properties.IsLocked.x-disallow-post" = true
"definitions.EventFrame.properties.IsLocked.x-disallow-put" = true
"definitions.EventFrame.properties.Links.properties.Annotations.type" = "string"
"definitions.EventFrame.properties.Links.properties.Annotations.x-link-optional" = true
"definitions.EventFrame.properties.Links.properties.Annotations.x-link-path" = "eventframes/{webId}/annotations"
"definitions.EventFrame.properties.Links.properties.Attributes.type" = "string"
"definitions.EventFrame.properties.Links.properties.Attributes.x-link-optional" = false
"definitions.EventFrame.properties.Links.properties.Attributes.x-link-path" = "eventframes/{webId}/attributes"
"definitions.EventFrame.properties.Links.properties.Categories.type" = "string"
"definitions.EventFrame.properties.Links.properties.Categories.x-link-optional" = false
"definitions.EventFrame.properties.Links.properties.Categories.x-link-path" = "eventframes/{webId}/categories"
"definitions.EventFrame.properties.Links.properties.Database.type" = "string"
"definitions.EventFrame.properties.Links.properties.Database.x-link-optional" = false
"definitions.EventFrame.properties.Links.properties.Database.x-link-path" = "assetdatabases/{webId}"
"definitions.EventFrame.properties.Links.properties.DefaultAttribute.type" = "string"
"definitions.EventFrame.properties.Links.properties.DefaultAttribute.x-link-optional" = true
"definitions.EventFrame.properties.Links.properties.DefaultAttribute.x-link-path" = "attributes/{webId}"
"definitions.EventFrame.properties.Links.properties.EndValue.type" = "string"
"definitions.EventFrame.properties.Links.properties.EndValue.x-link-optional" = false
"definitions.EventFrame.properties.Links.properties.EndValue.x-link-path" = "streamsets/{webId}/end"
"definitions.EventFrame.properties.Links.properties.EventFrames.type" = "string"
"definitions.EventFrame.properties.Links.properties.EventFrames.x-link-optional" = false
"definitions.EventFrame.properties.Links.properties.EventFrames.x-link-path" = "eventframes/{webId}/eventframes"
"definitions.EventFrame.properties.Links.properties.InterpolatedData.type" = "string"
"definitions.EventFrame.properties.Links.properties.InterpolatedData.x-link-optional" = false
"definitions.EventFrame.properties.Links.properties.InterpolatedData.x-link-path" = "streamsets/{webId}/interpolated"
"definitions.EventFrame.properties.Links.properties.Parent.type" = "string"
"definitions.EventFrame.properties.Links.properties.Parent.x-link-optional" = true
"definitions.EventFrame.properties.Links.properties.Parent.x-link-path" = "eventframes/{webId}"
"definitions.EventFrame.properties.Links.properties.PlotData.type" = "string"
"definitions.EventFrame.properties.Links.properties.PlotData.x-link-optional" = false
"definitions.EventFrame.properties.Links.properties.PlotData.x-link-path" = "streamsets/{webId}/plot"
"definitions.EventFrame.properties.Links.properties.PrimaryReferencedElement.type" = "string"
"definitions.EventFrame.properties.Links.properties.PrimaryReferencedElement.x-link-optional" = true
"definitions.EventFrame.properties.Links.properties.PrimaryReferencedElement.x-link-path" = "elements/{webId}"
"definitions.EventFrame.properties.Links.properties.RecordedData.type" = "string"
"definitions.EventFrame.properties.Links.properties.RecordedData.x-link-optional" = false
"definitions.EventFrame.properties.Links.properties.RecordedData.x-link-path" = "streamsets/{webId}/recorded"
"definitions.EventFrame.properties.Links.properties.ReferencedElements.type" = "string"
"definitions.EventFrame.properties.Links.properties.ReferencedElements.x-link-optional" = false
"definitions.EventFrame.properties.Links.properties.ReferencedElements.x-link-path" = "eventframes/{webId}/referencedelements"
"definitions.EventFrame.properties.Links.properties.Security.type" = "string"
"definitions.EventFrame.properties.Links.properties.Security.x-link-optional" = false
"definitions.EventFrame.properties.Links.properties.Security.x-link-path" = "eventframes/{webId}/security"
"definitions.EventFrame.properties.Links.properties.SecurityEntries.type" = "string"
"definitions.EventFrame.properties.Links.properties.SecurityEntries.x-link-optional" = false
"definitions.EventFrame.properties.Links.properties.SecurityEntries.x-link-path" = "eventframes/{webId}/securityentries"
"definitions.EventFrame.properties.Links.properties.Self.type" = "string"
"definitions.EventFrame.properties.Links.properties.Self.x-link-optional" = false
"definitions.EventFrame.properties.Links.properties.Self.x-link-path" = "eventframes/{webId}"
"definitions.EventFrame.properties.Links.properties.SummaryData.type" = "string"
"definitions.EventFrame.properties.Links.properties.SummaryData.x-link-optional" = false
"definitions.EventFrame.properties.Links.properties.SummaryData.x-link-path" = "streamsets/{webId}/summary"
"definitions.EventFrame.properties.Links.properties.Template.type" = "string"
"definitions.EventFrame.properties.Links.properties.Template.x-link-optional" = true
"definitions.EventFrame.properties.Links.properties.Template.x-link-path" = "elementtemplates/{webId}"
"definitions.EventFrame.properties.Links.properties.Value.type" = "string"
"definitions.EventFrame.properties.Links.properties.Value.x-link-optional" = false
"definitions.EventFrame.properties.Links.properties.Value.x-link-path" = "streamsets/{webId}/value"
"definitions.EventFrame.properties.Links.type" = "object"
"definitions.EventFrame.properties.Name.example" = "EF20140725-001"
"definitions.EventFrame.properties.Name.type" = "string"
"definitions.EventFrame.properties.Name.x-required-post" = true
"definitions.EventFrame.properties.Path.example" = "\\\\MyServer\\NuGreen\\EventFrames[EF20140725-001]"
"definitions.EventFrame.properties.Path.format" = "path"
"definitions.EventFrame.properties.Path.type" = "string"
"definitions.EventFrame.properties.Path.x-disallow-patch" = true
"definitions.EventFrame.properties.Path.x-disallow-post" = true
"definitions.EventFrame.properties.Path.x-disallow-put" = true
"definitions.EventFrame.properties.RefElementWebIds.example.length" = 1
"definitions.EventFrame.properties.RefElementWebIds.example[0]" = "E0w9SBPTFjL0OKylZVbOOWQgp-bLbo5VGU2udzU6CQi8fgREVMTFQ1NTAwV0xJXFRFU1RcRUxFTTU"
"definitions.EventFrame.properties.RefElementWebIds.items.type" = "string"
"definitions.EventFrame.properties.RefElementWebIds.type" = "array"
"definitions.EventFrame.properties.Security.$ref" = "#/definitions/Security"
"definitions.EventFrame.properties.Security.x-disallow-patch" = true
"definitions.EventFrame.properties.Security.x-disallow-post" = true
"definitions.EventFrame.properties.Security.x-disallow-put" = true
"definitions.EventFrame.properties.Severity.example" = "None"
"definitions.EventFrame.properties.Severity.type" = "string"
"definitions.EventFrame.properties.StartTime.example" = "2014-07-18T14:45:29Z"
"definitions.EventFrame.properties.StartTime.format" = "date-time"
"definitions.EventFrame.properties.StartTime.type" = "string"
"definitions.EventFrame.properties.TemplateName.example" = "Template"
"definitions.EventFrame.properties.TemplateName.type" = "string"
"definitions.EventFrame.properties.WebId.example" = "F0DqD5loBNH0ereJqqodtALADqD5loBNH0cAAAAAAAOJeQVKUTVFVOSVRcU1VHQVJNQU5ZVRcFTlRGUkFNRVNbRUYyMDE0MDcyMS0wMDFd"
"definitions.EventFrame.properties.WebId.format" = "webid"
"definitions.EventFrame.properties.WebId.type" = "string"
"definitions.EventFrame.properties.WebId.x-disallow-patch" = true
"definitions.EventFrame.properties.WebId.x-disallow-post" = true
"definitions.EventFrame.properties.WebId.x-disallow-put" = true
"definitions.EventFrame.type" = "object"
"definitions.Item[Attribute].properties.Exception.$ref" = "#/definitions/Errors"
"definitions.Item[Attribute].properties.Identifier.example" = "\\\\server\\path"
"definitions.Item[Attribute].properties.Identifier.type" = "string"
"definitions.Item[Attribute].properties.IdentifierType.example" = "Path"
"definitions.Item[Attribute].properties.IdentifierType.type" = "string"
"definitions.Item[Attribute].properties.Object.$ref" = "#/definitions/Attribute"
"definitions.Item[Attribute].type" = "object"
"definitions.Item[Element].properties.Exception.$ref" = "#/definitions/Errors"
"definitions.Item[Element].properties.Identifier.example" = "\\\\server\\path"
"definitions.Item[Element].properties.Identifier.type" = "string"
"definitions.Item[Element].properties.IdentifierType.example" = "Path"
"definitions.Item[Element].properties.IdentifierType.type" = "string"
"definitions.Item[Element].properties.Object.$ref" = "#/definitions/Element"
"definitions.Item[Element].type" = "object"
"definitions.Item[EventFrame].properties.Exception.$ref" = "#/definitions/Errors"
"definitions.Item[EventFrame].properties.Identifier.example" = "\\\\server\\path"
"definitions.Item[EventFrame].properties.Identifier.type" = "string"
"definitions.Item[EventFrame].properties.IdentifierType.example" = "Path"
"definitions.Item[EventFrame].properties.IdentifierType.type" = "string"
"definitions.Item[EventFrame].properties.Object.$ref" = "#/definitions/EventFrame"
"definitions.Item[EventFrame].type" = "object"
"definitions.Item[Point].properties.Exception.$ref" = "#/definitions/Errors"
"definitions.Item[Point].properties.Identifier.example" = "\\\\server\\path"
"definitions.Item[Point].properties.Identifier.type" = "string"
"definitions.Item[Point].properties.IdentifierType.example" = "Path"
"definitions.Item[Point].properties.IdentifierType.type" = "string"
"definitions.Item[Point].properties.Object.$ref" = "#/definitions/Point"
"definitions.Item[Point].type" = "object"
"definitions.Items[AnalysisCategory].properties.Items.items.$ref" = "#/definitions/AnalysisCategory"
"definitions.Items[AnalysisCategory].properties.Items.type" = "array"
"definitions.Items[AnalysisCategory].properties.Links.properties.First.type" = "string"
"definitions.Items[AnalysisCategory].properties.Links.properties.First.x-link-optional" = true
"definitions.Items[AnalysisCategory].properties.Links.properties.Last.type" = "string"
"definitions.Items[AnalysisCategory].properties.Links.properties.Last.x-link-optional" = true
"definitions.Items[AnalysisCategory].properties.Links.properties.Next.type" = "string"
"definitions.Items[AnalysisCategory].properties.Links.properties.Next.x-link-optional" = true
"definitions.Items[AnalysisCategory].properties.Links.properties.Previous.type" = "string"
"definitions.Items[AnalysisCategory].properties.Links.properties.Previous.x-link-optional" = true
"definitions.Items[AnalysisCategory].properties.Links.type" = "object"
"definitions.Items[AnalysisCategory].type" = "object"
"definitions.Items[AnalysisRulePlugIn].properties.Items.items.$ref" = "#/definitions/AnalysisRulePlugIn"
"definitions.Items[AnalysisRulePlugIn].properties.Items.type" = "array"
"definitions.Items[AnalysisRulePlugIn].properties.Links.properties.First.type" = "string"
"definitions.Items[AnalysisRulePlugIn].properties.Links.properties.First.x-link-optional" = true
"definitions.Items[AnalysisRulePlugIn].properties.Links.properties.Last.type" = "string"
"definitions.Items[AnalysisRulePlugIn].properties.Links.properties.Last.x-link-optional" = true
"definitions.Items[AnalysisRulePlugIn].properties.Links.properties.Next.type" = "string"
"definitions.Items[AnalysisRulePlugIn].properties.Links.properties.Next.x-link-optional" = true
"definitions.Items[AnalysisRulePlugIn].properties.Links.properties.Previous.type" = "string"
"definitions.Items[AnalysisRulePlugIn].properties.Links.properties.Previous.x-link-optional" = true
"definitions.Items[AnalysisRulePlugIn].properties.Links.type" = "object"
"definitions.Items[AnalysisRulePlugIn].type" = "object"
"definitions.Items[AnalysisRule].properties.Items.items.$ref" = "#/definitions/AnalysisRule"
"definitions.Items[AnalysisRule].properties.Items.type" = "array"
"definitions.Items[AnalysisRule].properties.Links.properties.First.type" = "string"
"definitions.Items[AnalysisRule].properties.Links.properties.First.x-link-optional" = true
"definitions.Items[AnalysisRule].properties.Links.properties.Last.type" = "string"
"definitions.Items[AnalysisRule].properties.Links.properties.Last.x-link-optional" = true
"definitions.Items[AnalysisRule].properties.Links.properties.Next.type" = "string"
"definitions.Items[AnalysisRule].properties.Links.properties.Next.x-link-optional" = true
"definitions.Items[AnalysisRule].properties.Links.properties.Previous.type" = "string"
"definitions.Items[AnalysisRule].properties.Links.properties.Previous.x-link-optional" = true
"definitions.Items[AnalysisRule].properties.Links.type" = "object"
"definitions.Items[AnalysisRule].type" = "object"
"definitions.Items[AnalysisTemplate].properties.Items.items.$ref" = "#/definitions/AnalysisTemplate"
"definitions.Items[AnalysisTemplate].properties.Items.type" = "array"
"definitions.Items[AnalysisTemplate].properties.Links.properties.First.type" = "string"
"definitions.Items[AnalysisTemplate].properties.Links.properties.First.x-link-optional" = true
"definitions.Items[AnalysisTemplate].properties.Links.properties.Last.type" = "string"
"definitions.Items[AnalysisTemplate].properties.Links.properties.Last.x-link-optional" = true
"definitions.Items[AnalysisTemplate].properties.Links.properties.Next.type" = "string"
"definitions.Items[AnalysisTemplate].properties.Links.properties.Next.x-link-optional" = true
"definitions.Items[AnalysisTemplate].properties.Links.properties.Previous.type" = "string"
"definitions.Items[AnalysisTemplate].properties.Links.properties.Previous.x-link-optional" = true
"definitions.Items[AnalysisTemplate].properties.Links.type" = "object"
"definitions.Items[AnalysisTemplate].type" = "object"
"definitions.Items[Analysis].properties.Items.items.$ref" = "#/definitions/Analysis"
"definitions.Items[Analysis].properties.Items.type" = "array"
"definitions.Items[Analysis].properties.Links.properties.First.type" = "string"
"definitions.Items[Analysis].properties.Links.properties.First.x-link-optional" = true
"definitions.Items[Analysis].properties.Links.properties.Last.type" = "string"
"definitions.Items[Analysis].properties.Links.properties.Last.x-link-optional" = true
"definitions.Items[Analysis].properties.Links.properties.Next.type" = "string"
"definitions.Items[Analysis].properties.Links.properties.Next.x-link-optional" = true
"definitions.Items[Analysis].properties.Links.properties.Previous.type" = "string"
"definitions.Items[Analysis].properties.Links.properties.Previous.x-link-optional" = true
"definitions.Items[Analysis].properties.Links.type" = "object"
"definitions.Items[Analysis].type" = "object"
"definitions.Items[Annotation].properties.Items.items.$ref" = "#/definitions/Annotation"
"definitions.Items[Annotation].properties.Items.type" = "array"
"definitions.Items[Annotation].properties.Links.properties.First.type" = "string"
"definitions.Items[Annotation].properties.Links.properties.First.x-link-optional" = true
"definitions.Items[Annotation].properties.Links.properties.Last.type" = "string"
"definitions.Items[Annotation].properties.Links.properties.Last.x-link-optional" = true
"definitions.Items[Annotation].properties.Links.properties.Next.type" = "string"
"definitions.Items[Annotation].properties.Links.properties.Next.x-link-optional" = true
"definitions.Items[Annotation].properties.Links.properties.Previous.type" = "string"
"definitions.Items[Annotation].properties.Links.properties.Previous.x-link-optional" = true
"definitions.Items[Annotation].properties.Links.type" = "object"
"definitions.Items[Annotation].type" = "object"
"definitions.Items[AssetDatabase].properties.Items.items.$ref" = "#/definitions/AssetDatabase"
"definitions.Items[AssetDatabase].properties.Items.type" = "array"
"definitions.Items[AssetDatabase].properties.Links.properties.First.type" = "string"
"definitions.Items[AssetDatabase].properties.Links.properties.First.x-link-optional" = true
"definitions.Items[AssetDatabase].properties.Links.properties.Last.type" = "string"
"definitions.Items[AssetDatabase].properties.Links.properties.Last.x-link-optional" = true
"definitions.Items[AssetDatabase].properties.Links.properties.Next.type" = "string"
"definitions.Items[AssetDatabase].properties.Links.properties.Next.x-link-optional" = true
"definitions.Items[AssetDatabase].properties.Links.properties.Previous.type" = "string"
"definitions.Items[AssetDatabase].properties.Links.properties.Previous.x-link-optional" = true
"definitions.Items[AssetDatabase].properties.Links.type" = "object"
"definitions.Items[AssetDatabase].type" = "object"
"definitions.Items[AssetServer].properties.Items.items.$ref" = "#/definitions/AssetServer"
"definitions.Items[AssetServer].properties.Items.type" = "array"
"definitions.Items[AssetServer].properties.Links.properties.First.type" = "string"
"definitions.Items[AssetServer].properties.Links.properties.First.x-link-optional" = true
"definitions.Items[AssetServer].properties.Links.properties.Last.type" = "string"
"definitions.Items[AssetServer].properties.Links.properties.Last.x-link-optional" = true
"definitions.Items[AssetServer].properties.Links.properties.Next.type" = "string"
"definitions.Items[AssetServer].properties.Links.properties.Next.x-link-optional" = true
"definitions.Items[AssetServer].properties.Links.properties.Previous.type" = "string"
"definitions.Items[AssetServer].properties.Links.properties.Previous.x-link-optional" = true
"definitions.Items[AssetServer].properties.Links.type" = "object"
"definitions.Items[AssetServer].type" = "object"
"definitions.Items[AttributeCategory].properties.Items.items.$ref" = "#/definitions/AttributeCategory"
"definitions.Items[AttributeCategory].properties.Items.type" = "array"
"definitions.Items[AttributeCategory].properties.Links.properties.First.type" = "string"
"definitions.Items[AttributeCategory].properties.Links.properties.First.x-link-optional" = true
"definitions.Items[AttributeCategory].properties.Links.properties.Last.type" = "string"
"definitions.Items[AttributeCategory].properties.Links.properties.Last.x-link-optional" = true
"definitions.Items[AttributeCategory].properties.Links.properties.Next.type" = "string"
"definitions.Items[AttributeCategory].properties.Links.properties.Next.x-link-optional" = true
"definitions.Items[AttributeCategory].properties.Links.properties.Previous.type" = "string"
"definitions.Items[AttributeCategory].properties.Links.properties.Previous.x-link-optional" = true
"definitions.Items[AttributeCategory].properties.Links.type" = "object"
"definitions.Items[AttributeCategory].type" = "object"
"definitions.Items[AttributeTemplate].properties.Items.items.$ref" = "#/definitions/AttributeTemplate"
"definitions.Items[AttributeTemplate].properties.Items.type" = "array"
"definitions.Items[AttributeTemplate].properties.Links.properties.First.type" = "string"
"definitions.Items[AttributeTemplate].properties.Links.properties.First.x-link-optional" = true
"definitions.Items[AttributeTemplate].properties.Links.properties.Last.type" = "string"
"definitions.Items[AttributeTemplate].properties.Links.properties.Last.x-link-optional" = true
"definitions.Items[AttributeTemplate].properties.Links.properties.Next.type" = "string"
"definitions.Items[AttributeTemplate].properties.Links.properties.Next.x-link-optional" = true
"definitions.Items[AttributeTemplate].properties.Links.properties.Previous.type" = "string"
"definitions.Items[AttributeTemplate].properties.Links.properties.Previous.x-link-optional" = true
"definitions.Items[AttributeTemplate].properties.Links.type" = "object"
"definitions.Items[AttributeTemplate].type" = "object"
"definitions.Items[AttributeTrait].properties.Items.items.$ref" = "#/definitions/AttributeTrait"
"definitions.Items[AttributeTrait].properties.Items.type" = "array"
"definitions.Items[AttributeTrait].properties.Links.properties.First.type" = "string"
"definitions.Items[AttributeTrait].properties.Links.properties.First.x-link-optional" = true
"definitions.Items[AttributeTrait].properties.Links.properties.Last.type" = "string"
"definitions.Items[AttributeTrait].properties.Links.properties.Last.x-link-optional" = true
"definitions.Items[AttributeTrait].properties.Links.properties.Next.type" = "string"
"definitions.Items[AttributeTrait].properties.Links.properties.Next.x-link-optional" = true
"definitions.Items[AttributeTrait].properties.Links.properties.Previous.type" = "string"
"definitions.Items[AttributeTrait].properties.Links.properties.Previous.x-link-optional" = true
"definitions.Items[AttributeTrait].properties.Links.type" = "object"
"definitions.Items[AttributeTrait].type" = "object"
"definitions.Items[Attribute].properties.Items.items.$ref" = "#/definitions/Attribute"
"definitions.Items[Attribute].properties.Items.type" = "array"
"definitions.Items[Attribute].properties.Links.properties.First.type" = "string"
"definitions.Items[Attribute].properties.Links.properties.First.x-link-optional" = true
"definitions.Items[Attribute].properties.Links.properties.Last.type" = "string"
"definitions.Items[Attribute].properties.Links.properties.Last.x-link-optional" = true
"definitions.Items[Attribute].properties.Links.properties.Next.type" = "string"
"definitions.Items[Attribute].properties.Links.properties.Next.x-link-optional" = true
"definitions.Items[Attribute].properties.Links.properties.Previous.type" = "string"
"definitions.Items[Attribute].properties.Links.properties.Previous.x-link-optional" = true
"definitions.Items[Attribute].properties.Links.type" = "object"
"definitions.Items[Attribute].type" = "object"
"definitions.Items[CacheInstance].properties.Items.items.$ref" = "#/definitions/CacheInstance"
"definitions.Items[CacheInstance].properties.Items.type" = "array"
"definitions.Items[CacheInstance].properties.Links.properties.First.type" = "string"
"definitions.Items[CacheInstance].properties.Links.properties.First.x-link-optional" = true
"definitions.Items[CacheInstance].properties.Links.properties.Last.type" = "string"
"definitions.Items[CacheInstance].properties.Links.properties.Last.x-link-optional" = true
"definitions.Items[CacheInstance].properties.Links.properties.Next.type" = "string"
"definitions.Items[CacheInstance].properties.Links.properties.Next.x-link-optional" = true
"definitions.Items[CacheInstance].properties.Links.properties.Previous.type" = "string"
"definitions.Items[CacheInstance].properties.Links.properties.Previous.x-link-optional" = true
"definitions.Items[CacheInstance].properties.Links.type" = "object"
"definitions.Items[CacheInstance].type" = "object"
"definitions.Items[DataServer].properties.Items.items.$ref" = "#/definitions/DataServer"
"definitions.Items[DataServer].properties.Items.type" = "array"
"definitions.Items[DataServer].properties.Links.properties.First.type" = "string"
"definitions.Items[DataServer].properties.Links.properties.First.x-link-optional" = true
"definitions.Items[DataServer].properties.Links.properties.Last.type" = "string"
"definitions.Items[DataServer].properties.Links.properties.Last.x-link-optional" = true
"definitions.Items[DataServer].properties.Links.properties.Next.type" = "string"
"definitions.Items[DataServer].properties.Links.properties.Next.x-link-optional" = true
"definitions.Items[DataServer].properties.Links.properties.Previous.type" = "string"
"definitions.Items[DataServer].properties.Links.properties.Previous.x-link-optional" = true
"definitions.Items[DataServer].properties.Links.type" = "object"
"definitions.Items[DataServer].type" = "object"
"definitions.Items[ElementCategory].properties.Items.items.$ref" = "#/definitions/ElementCategory"
"definitions.Items[ElementCategory].properties.Items.type" = "array"
"definitions.Items[ElementCategory].properties.Links.properties.First.type" = "string"
"definitions.Items[ElementCategory].properties.Links.properties.First.x-link-optional" = true
"definitions.Items[ElementCategory].properties.Links.properties.Last.type" = "string"
"definitions.Items[ElementCategory].properties.Links.properties.Last.x-link-optional" = true
"definitions.Items[ElementCategory].properties.Links.properties.Next.type" = "string"
"definitions.Items[ElementCategory].properties.Links.properties.Next.x-link-optional" = true
"definitions.Items[ElementCategory].properties.Links.properties.Previous.type" = "string"
"definitions.Items[ElementCategory].properties.Links.properties.Previous.x-link-optional" = true
"definitions.Items[ElementCategory].properties.Links.type" = "object"
"definitions.Items[ElementCategory].type" = "object"
"definitions.Items[ElementTemplate].properties.Items.items.$ref" = "#/definitions/ElementTemplate"
"definitions.Items[ElementTemplate].properties.Items.type" = "array"
"definitions.Items[ElementTemplate].properties.Links.properties.First.type" = "string"
"definitions.Items[ElementTemplate].properties.Links.properties.First.x-link-optional" = true
"definitions.Items[ElementTemplate].properties.Links.properties.Last.type" = "string"
"definitions.Items[ElementTemplate].properties.Links.properties.Last.x-link-optional" = true
"definitions.Items[ElementTemplate].properties.Links.properties.Next.type" = "string"
"definitions.Items[ElementTemplate].properties.Links.properties.Next.x-link-optional" = true
"definitions.Items[ElementTemplate].properties.Links.properties.Previous.type" = "string"
"definitions.Items[ElementTemplate].properties.Links.properties.Previous.x-link-optional" = true
"definitions.Items[ElementTemplate].properties.Links.type" = "object"
"definitions.Items[ElementTemplate].type" = "object"
"definitions.Items[Element].properties.Items.items.$ref" = "#/definitions/Element"
"definitions.Items[Element].properties.Items.type" = "array"
"definitions.Items[Element].properties.Links.properties.First.type" = "string"
"definitions.Items[Element].properties.Links.properties.First.x-link-optional" = true
"definitions.Items[Element].properties.Links.properties.Last.type" = "string"
"definitions.Items[Element].properties.Links.properties.Last.x-link-optional" = true
"definitions.Items[Element].properties.Links.properties.Next.type" = "string"
"definitions.Items[Element].properties.Links.properties.Next.x-link-optional" = true
"definitions.Items[Element].properties.Links.properties.Previous.type" = "string"
"definitions.Items[Element].properties.Links.properties.Previous.x-link-optional" = true
"definitions.Items[Element].properties.Links.type" = "object"
"definitions.Items[Element].type" = "object"
"definitions.Items[EnumerationSet].properties.Items.items.$ref" = "#/definitions/EnumerationSet"
"definitions.Items[EnumerationSet].properties.Items.type" = "array"
"definitions.Items[EnumerationSet].properties.Links.properties.First.type" = "string"
"definitions.Items[EnumerationSet].properties.Links.properties.First.x-link-optional" = true
"definitions.Items[EnumerationSet].properties.Links.properties.Last.type" = "string"
"definitions.Items[EnumerationSet].properties.Links.properties.Last.x-link-optional" = true
"definitions.Items[EnumerationSet].properties.Links.properties.Next.type" = "string"
"definitions.Items[EnumerationSet].properties.Links.properties.Next.x-link-optional" = true
"definitions.Items[EnumerationSet].properties.Links.properties.Previous.type" = "string"
"definitions.Items[EnumerationSet].properties.Links.properties.Previous.x-link-optional" = true
"definitions.Items[EnumerationSet].properties.Links.type" = "object"
"definitions.Items[EnumerationSet].type" = "object"
"definitions.Items[EnumerationValue].properties.Items.items.$ref" = "#/definitions/EnumerationValue"
"definitions.Items[EnumerationValue].properties.Items.type" = "array"
"definitions.Items[EnumerationValue].properties.Links.properties.First.type" = "string"
"definitions.Items[EnumerationValue].properties.Links.properties.First.x-link-optional" = true
"definitions.Items[EnumerationValue].properties.Links.properties.Last.type" = "string"
"definitions.Items[EnumerationValue].properties.Links.properties.Last.x-link-optional" = true
"definitions.Items[EnumerationValue].properties.Links.properties.Next.type" = "string"
"definitions.Items[EnumerationValue].properties.Links.properties.Next.x-link-optional" = true
"definitions.Items[EnumerationValue].properties.Links.properties.Previous.type" = "string"
"definitions.Items[EnumerationValue].properties.Links.properties.Previous.x-link-optional" = true
"definitions.Items[EnumerationValue].properties.Links.type" = "object"
"definitions.Items[EnumerationValue].type" = "object"
"definitions.Items[EventFrame].properties.Items.items.$ref" = "#/definitions/EventFrame"
"definitions.Items[EventFrame].properties.Items.type" = "array"
"definitions.Items[EventFrame].properties.Links.properties.First.type" = "string"
"definitions.Items[EventFrame].properties.Links.properties.First.x-link-optional" = true
"definitions.Items[EventFrame].properties.Links.properties.Last.type" = "string"
"definitions.Items[EventFrame].properties.Links.properties.Last.x-link-optional" = true
"definitions.Items[EventFrame].properties.Links.properties.Next.type" = "string"
"definitions.Items[EventFrame].properties.Links.properties.Next.x-link-optional" = true
"definitions.Items[EventFrame].properties.Links.properties.Previous.type" = "string"
"definitions.Items[EventFrame].properties.Links.properties.Previous.x-link-optional" = true
"definitions.Items[EventFrame].properties.Links.type" = "object"
"definitions.Items[EventFrame].type" = "object"
"definitions.Items[Item[Attribute]].properties.Items.items.$ref" = "#/definitions/Item[Attribute]"
"definitions.Items[Item[Attribute]].properties.Items.type" = "array"
"definitions.Items[Item[Attribute]].properties.Links.properties.First.type" = "string"
"definitions.Items[Item[Attribute]].properties.Links.properties.First.x-link-optional" = true
"definitions.Items[Item[Attribute]].properties.Links.properties.Last.type" = "string"
"definitions.Items[Item[Attribute]].properties.Links.properties.Last.x-link-optional" = true
"definitions.Items[Item[Attribute]].properties.Links.properties.Next.type" = "string"
"definitions.Items[Item[Attribute]].properties.Links.properties.Next.x-link-optional" = true
"definitions.Items[Item[Attribute]].properties.Links.properties.Previous.type" = "string"
"definitions.Items[Item[Attribute]].properties.Links.properties.Previous.x-link-optional" = true
"definitions.Items[Item[Attribute]].properties.Links.type" = "object"
"definitions.Items[Item[Attribute]].type" = "object"
"definitions.Items[Item[Element]].properties.Items.items.$ref" = "#/definitions/Item[Element]"
"definitions.Items[Item[Element]].properties.Items.type" = "array"
"definitions.Items[Item[Element]].properties.Links.properties.First.type" = "string"
"definitions.Items[Item[Element]].properties.Links.properties.First.x-link-optional" = true
"definitions.Items[Item[Element]].properties.Links.properties.Last.type" = "string"
"definitions.Items[Item[Element]].properties.Links.properties.Last.x-link-optional" = true
"definitions.Items[Item[Element]].properties.Links.properties.Next.type" = "string"
"definitions.Items[Item[Element]].properties.Links.properties.Next.x-link-optional" = true
"definitions.Items[Item[Element]].properties.Links.properties.Previous.type" = "string"
"definitions.Items[Item[Element]].properties.Links.properties.Previous.x-link-optional" = true
"definitions.Items[Item[Element]].properties.Links.type" = "object"
"definitions.Items[Item[Element]].type" = "object"
"definitions.Items[Item[EventFrame]].properties.Items.items.$ref" = "#/definitions/Item[EventFrame]"
"definitions.Items[Item[EventFrame]].properties.Items.type" = "array"
"definitions.Items[Item[EventFrame]].properties.Links.properties.First.type" = "string"
"definitions.Items[Item[EventFrame]].properties.Links.properties.First.x-link-optional" = true
"definitions.Items[Item[EventFrame]].properties.Links.properties.Last.type" = "string"
"definitions.Items[Item[EventFrame]].properties.Links.properties.Last.x-link-optional" = true
"definitions.Items[Item[EventFrame]].properties.Links.properties.Next.type" = "string"
"definitions.Items[Item[EventFrame]].properties.Links.properties.Next.x-link-optional" = true
"definitions.Items[Item[EventFrame]].properties.Links.properties.Previous.type" = "string"
"definitions.Items[Item[EventFrame]].properties.Links.properties.Previous.x-link-optional" = true
"definitions.Items[Item[EventFrame]].properties.Links.type" = "object"
"definitions.Items[Item[EventFrame]].type" = "object"
"definitions.Items[Item[Point]].properties.Items.items.$ref" = "#/definitions/Item[Point]"
"definitions.Items[Item[Point]].properties.Items.type" = "array"
"definitions.Items[Item[Point]].properties.Links.properties.First.type" = "string"
"definitions.Items[Item[Point]].properties.Links.properties.First.x-link-optional" = true
"definitions.Items[Item[Point]].properties.Links.properties.Last.type" = "string"
"definitions.Items[Item[Point]].properties.Links.properties.Last.x-link-optional" = true
"definitions.Items[Item[Point]].properties.Links.properties.Next.type" = "string"
"definitions.Items[Item[Point]].properties.Links.properties.Next.x-link-optional" = true
"definitions.Items[Item[Point]].properties.Links.properties.Previous.type" = "string"
"definitions.Items[Item[Point]].properties.Links.properties.Previous.x-link-optional" = true
"definitions.Items[Item[Point]].properties.Links.type" = "object"
"definitions.Items[Item[Point]].type" = "object"
"definitions.Items[Items[Substatus]].properties.Items.items.$ref" = "#/definitions/Items[Substatus]"
"definitions.Items[Items[Substatus]].properties.Items.type" = "array"
"definitions.Items[Items[Substatus]].properties.Links.properties.First.type" = "string"
"definitions.Items[Items[Substatus]].properties.Links.properties.First.x-link-optional" = true
"definitions.Items[Items[Substatus]].properties.Links.properties.Last.type" = "string"
"definitions.Items[Items[Substatus]].properties.Links.properties.Last.x-link-optional" = true
"definitions.Items[Items[Substatus]].properties.Links.properties.Next.type" = "string"
"definitions.Items[Items[Substatus]].properties.Links.properties.Next.x-link-optional" = true
"definitions.Items[Items[Substatus]].properties.Links.properties.Previous.type" = "string"
"definitions.Items[Items[Substatus]].properties.Links.properties.Previous.x-link-optional" = true
"definitions.Items[Items[Substatus]].properties.Links.type" = "object"
"definitions.Items[Items[Substatus]].type" = "object"
"definitions.Items[PointAttribute].properties.Items.items.$ref" = "#/definitions/PointAttribute"
"definitions.Items[PointAttribute].properties.Items.type" = "array"
"definitions.Items[PointAttribute].properties.Links.properties.First.type" = "string"
"definitions.Items[PointAttribute].properties.Links.properties.First.x-link-optional" = true
"definitions.Items[PointAttribute].properties.Links.properties.Last.type" = "string"
"definitions.Items[PointAttribute].properties.Links.properties.Last.x-link-optional" = true
"definitions.Items[PointAttribute].properties.Links.properties.Next.type" = "string"
"definitions.Items[PointAttribute].properties.Links.properties.Next.x-link-optional" = true
"definitions.Items[PointAttribute].properties.Links.properties.Previous.type" = "string"
"definitions.Items[PointAttribute].properties.Links.properties.Previous.x-link-optional" = true
"definitions.Items[PointAttribute].properties.Links.type" = "object"
"definitions.Items[PointAttribute].type" = "object"
"definitions.Items[Point].properties.Items.items.$ref" = "#/definitions/Point"
"definitions.Items[Point].properties.Items.type" = "array"
"definitions.Items[Point].properties.Links.properties.First.type" = "string"
"definitions.Items[Point].properties.Links.properties.First.x-link-optional" = true
"definitions.Items[Point].properties.Links.properties.Last.type" = "string"
"definitions.Items[Point].properties.Links.properties.Last.x-link-optional" = true
"definitions.Items[Point].properties.Links.properties.Next.type" = "string"
"definitions.Items[Point].properties.Links.properties.Next.x-link-optional" = true
"definitions.Items[Point].properties.Links.properties.Previous.type" = "string"
"definitions.Items[Point].properties.Links.properties.Previous.x-link-optional" = true
"definitions.Items[Point].properties.Links.type" = "object"
"definitions.Items[Point].type" = "object"
"definitions.Items[SecurityEntry].properties.Items.items.$ref" = "#/definitions/SecurityEntry"
"definitions.Items[SecurityEntry].properties.Items.type" = "array"
"definitions.Items[SecurityEntry].properties.Links.properties.First.type" = "string"
"definitions.Items[SecurityEntry].properties.Links.properties.First.x-link-optional" = true
"definitions.Items[SecurityEntry].properties.Links.properties.Last.type" = "string"
"definitions.Items[SecurityEntry].properties.Links.properties.Last.x-link-optional" = true
"definitions.Items[SecurityEntry].properties.Links.properties.Next.type" = "string"
"definitions.Items[SecurityEntry].properties.Links.properties.Next.x-link-optional" = true
"definitions.Items[SecurityEntry].properties.Links.properties.Previous.type" = "string"
"definitions.Items[SecurityEntry].properties.Links.properties.Previous.x-link-optional" = true
"definitions.Items[SecurityEntry].properties.Links.type" = "object"
"definitions.Items[SecurityEntry].type" = "object"
"definitions.Items[SecurityIdentity].properties.Items.items.$ref" = "#/definitions/SecurityIdentity"
"definitions.Items[SecurityIdentity].properties.Items.type" = "array"
"definitions.Items[SecurityIdentity].properties.Links.properties.First.type" = "string"
"definitions.Items[SecurityIdentity].properties.Links.properties.First.x-link-optional" = true
"definitions.Items[SecurityIdentity].properties.Links.properties.Last.type" = "string"
"definitions.Items[SecurityIdentity].properties.Links.properties.Last.x-link-optional" = true
"definitions.Items[SecurityIdentity].properties.Links.properties.Next.type" = "string"
"definitions.Items[SecurityIdentity].properties.Links.properties.Next.x-link-optional" = true
"definitions.Items[SecurityIdentity].properties.Links.properties.Previous.type" = "string"
"definitions.Items[SecurityIdentity].properties.Links.properties.Previous.x-link-optional" = true
"definitions.Items[SecurityIdentity].properties.Links.type" = "object"
"definitions.Items[SecurityIdentity].type" = "object"
"definitions.Items[SecurityMapping].properties.Items.items.$ref" = "#/definitions/SecurityMapping"
"definitions.Items[SecurityMapping].properties.Items.type" = "array"
"definitions.Items[SecurityMapping].properties.Links.properties.First.type" = "string"
"definitions.Items[SecurityMapping].properties.Links.properties.First.x-link-optional" = true
"definitions.Items[SecurityMapping].properties.Links.properties.Last.type" = "string"
"definitions.Items[SecurityMapping].properties.Links.properties.Last.x-link-optional" = true
"definitions.Items[SecurityMapping].properties.Links.properties.Next.type" = "string"
"definitions.Items[SecurityMapping].properties.Links.properties.Next.x-link-optional" = true
"definitions.Items[SecurityMapping].properties.Links.properties.Previous.type" = "string"
"definitions.Items[SecurityMapping].properties.Links.properties.Previous.x-link-optional" = true
"definitions.Items[SecurityMapping].properties.Links.type" = "object"
"definitions.Items[SecurityMapping].type" = "object"
"definitions.Items[SecurityRights].properties.Items.items.$ref" = "#/definitions/SecurityRights"
"definitions.Items[SecurityRights].properties.Items.type" = "array"
"definitions.Items[SecurityRights].properties.Links.properties.First.type" = "string"
"definitions.Items[SecurityRights].properties.Links.properties.First.x-link-optional" = true
"definitions.Items[SecurityRights].properties.Links.properties.Last.type" = "string"
"definitions.Items[SecurityRights].properties.Links.properties.Last.x-link-optional" = true
"definitions.Items[SecurityRights].properties.Links.properties.Next.type" = "string"
"definitions.Items[SecurityRights].properties.Links.properties.Next.x-link-optional" = true
"definitions.Items[SecurityRights].properties.Links.properties.Previous.type" = "string"
"definitions.Items[SecurityRights].properties.Links.properties.Previous.x-link-optional" = true
"definitions.Items[SecurityRights].properties.Links.type" = "object"
"definitions.Items[SecurityRights].type" = "object"
"definitions.Items[StreamSummaries].properties.Items.items.$ref" = "#/definitions/StreamSummaries"
"definitions.Items[StreamSummaries].properties.Items.type" = "array"
"definitions.Items[StreamSummaries].properties.Links.properties.First.type" = "string"
"definitions.Items[StreamSummaries].properties.Links.properties.First.x-link-optional" = true
"definitions.Items[StreamSummaries].properties.Links.properties.Last.type" = "string"
"definitions.Items[StreamSummaries].properties.Links.properties.Last.x-link-optional" = true
"definitions.Items[StreamSummaries].properties.Links.properties.Next.type" = "string"
"definitions.Items[StreamSummaries].properties.Links.properties.Next.x-link-optional" = true
"definitions.Items[StreamSummaries].properties.Links.properties.Previous.type" = "string"
"definitions.Items[StreamSummaries].properties.Links.properties.Previous.x-link-optional" = true
"definitions.Items[StreamSummaries].properties.Links.type" = "object"
"definitions.Items[StreamSummaries].type" = "object"
"definitions.Items[StreamValue].properties.Items.items.$ref" = "#/definitions/StreamValue"
"definitions.Items[StreamValue].properties.Items.type" = "array"
"definitions.Items[StreamValue].properties.Links.properties.First.type" = "string"
"definitions.Items[StreamValue].properties.Links.properties.First.x-link-optional" = true
"definitions.Items[StreamValue].properties.Links.properties.Last.type" = "string"
"definitions.Items[StreamValue].properties.Links.properties.Last.x-link-optional" = true
"definitions.Items[StreamValue].properties.Links.properties.Next.type" = "string"
"definitions.Items[StreamValue].properties.Links.properties.Next.x-link-optional" = true
"definitions.Items[StreamValue].properties.Links.properties.Previous.type" = "string"
"definitions.Items[StreamValue].properties.Links.properties.Previous.x-link-optional" = true
"definitions.Items[StreamValue].properties.Links.type" = "object"
"definitions.Items[StreamValue].type" = "object"
"definitions.Items[StreamValues].properties.Items.items.$ref" = "#/definitions/StreamValues"
"definitions.Items[StreamValues].properties.Items.type" = "array"
"definitions.Items[StreamValues].properties.Links.properties.First.type" = "string"
"definitions.Items[StreamValues].properties.Links.properties.First.x-link-optional" = true
"definitions.Items[StreamValues].properties.Links.properties.Last.type" = "string"
"definitions.Items[StreamValues].properties.Links.properties.Last.x-link-optional" = true
"definitions.Items[StreamValues].properties.Links.properties.Next.type" = "string"
"definitions.Items[StreamValues].properties.Links.properties.Next.x-link-optional" = true
"definitions.Items[StreamValues].properties.Links.properties.Previous.type" = "string"
"definitions.Items[StreamValues].properties.Links.properties.Previous.x-link-optional" = true
"definitions.Items[StreamValues].properties.Links.type" = "object"
"definitions.Items[StreamValues].type" = "object"
"definitions.Items[Substatus].properties.Items.items.$ref" = "#/definitions/Substatus"
"definitions.Items[Substatus].properties.Items.type" = "array"
"definitions.Items[Substatus].properties.Links.properties.First.type" = "string"
"definitions.Items[Substatus].properties.Links.properties.First.x-link-optional" = true
"definitions.Items[Substatus].properties.Links.properties.Last.type" = "string"
"definitions.Items[Substatus].properties.Links.properties.Last.x-link-optional" = true
"definitions.Items[Substatus].properties.Links.properties.Next.type" = "string"
"definitions.Items[Substatus].properties.Links.properties.Next.x-link-optional" = true
"definitions.Items[Substatus].properties.Links.properties.Previous.type" = "string"
"definitions.Items[Substatus].properties.Links.properties.Previous.x-link-optional" = true
"definitions.Items[Substatus].properties.Links.type" = "object"
"definitions.Items[Substatus].type" = "object"
"definitions.Items[SummaryValue].properties.Items.items.$ref" = "#/definitions/SummaryValue"
"definitions.Items[SummaryValue].properties.Items.type" = "array"
"definitions.Items[SummaryValue].properties.Links.properties.First.type" = "string"
"definitions.Items[SummaryValue].properties.Links.properties.First.x-link-optional" = true
"definitions.Items[SummaryValue].properties.Links.properties.Last.type" = "string"
"definitions.Items[SummaryValue].properties.Links.properties.Last.x-link-optional" = true
"definitions.Items[SummaryValue].properties.Links.properties.Next.type" = "string"
"definitions.Items[SummaryValue].properties.Links.properties.Next.x-link-optional" = true
"definitions.Items[SummaryValue].properties.Links.properties.Previous.type" = "string"
"definitions.Items[SummaryValue].properties.Links.properties.Previous.x-link-optional" = true
"definitions.Items[SummaryValue].properties.Links.type" = "object"
"definitions.Items[SummaryValue].type" = "object"
"definitions.Items[TableCategory].properties.Items.items.$ref" = "#/definitions/TableCategory"
"definitions.Items[TableCategory].properties.Items.type" = "array"
"definitions.Items[TableCategory].properties.Links.properties.First.type" = "string"
"definitions.Items[TableCategory].properties.Links.properties.First.x-link-optional" = true
"definitions.Items[TableCategory].properties.Links.properties.Last.type" = "string"
"definitions.Items[TableCategory].properties.Links.properties.Last.x-link-optional" = true
"definitions.Items[TableCategory].properties.Links.properties.Next.type" = "string"
"definitions.Items[TableCategory].properties.Links.properties.Next.x-link-optional" = true
"definitions.Items[TableCategory].properties.Links.properties.Previous.type" = "string"
"definitions.Items[TableCategory].properties.Links.properties.Previous.x-link-optional" = true
"definitions.Items[TableCategory].properties.Links.type" = "object"
"definitions.Items[TableCategory].type" = "object"
"definitions.Items[Table].properties.Items.items.$ref" = "#/definitions/Table"
"definitions.Items[Table].properties.Items.type" = "array"
"definitions.Items[Table].properties.Links.properties.First.type" = "string"
"definitions.Items[Table].properties.Links.properties.First.x-link-optional" = true
"definitions.Items[Table].properties.Links.properties.Last.type" = "string"
"definitions.Items[Table].properties.Links.properties.Last.x-link-optional" = true
"definitions.Items[Table].properties.Links.properties.Next.type" = "string"
"definitions.Items[Table].properties.Links.properties.Next.x-link-optional" = true
"definitions.Items[Table].properties.Links.properties.Previous.type" = "string"
"definitions.Items[Table].properties.Links.properties.Previous.x-link-optional" = true
"definitions.Items[Table].properties.Links.type" = "object"
"definitions.Items[Table].type" = "object"
"definitions.Items[TimeRulePlugIn].properties.Items.items.$ref" = "#/definitions/TimeRulePlugIn"
"definitions.Items[TimeRulePlugIn].properties.Items.type" = "array"
"definitions.Items[TimeRulePlugIn].properties.Links.properties.First.type" = "string"
"definitions.Items[TimeRulePlugIn].properties.Links.properties.First.x-link-optional" = true
"definitions.Items[TimeRulePlugIn].properties.Links.properties.Last.type" = "string"
"definitions.Items[TimeRulePlugIn].properties.Links.properties.Last.x-link-optional" = true
"definitions.Items[TimeRulePlugIn].properties.Links.properties.Next.type" = "string"
"definitions.Items[TimeRulePlugIn].properties.Links.properties.Next.x-link-optional" = true
"definitions.Items[TimeRulePlugIn].properties.Links.properties.Previous.type" = "string"
"definitions.Items[TimeRulePlugIn].properties.Links.properties.Previous.x-link-optional" = true
"definitions.Items[TimeRulePlugIn].properties.Links.type" = "object"
"definitions.Items[TimeRulePlugIn].type" = "object"
"definitions.Items[UnitClass].properties.Items.items.$ref" = "#/definitions/UnitClass"
"definitions.Items[UnitClass].properties.Items.type" = "array"
"definitions.Items[UnitClass].properties.Links.properties.First.type" = "string"
"definitions.Items[UnitClass].properties.Links.properties.First.x-link-optional" = true
"definitions.Items[UnitClass].properties.Links.properties.Last.type" = "string"
"definitions.Items[UnitClass].properties.Links.properties.Last.x-link-optional" = true
"definitions.Items[UnitClass].properties.Links.properties.Next.type" = "string"
"definitions.Items[UnitClass].properties.Links.properties.Next.x-link-optional" = true
"definitions.Items[UnitClass].properties.Links.properties.Previous.type" = "string"
"definitions.Items[UnitClass].properties.Links.properties.Previous.x-link-optional" = true
"definitions.Items[UnitClass].properties.Links.type" = "object"
"definitions.Items[UnitClass].type" = "object"
"definitions.Landing.properties.Links.properties.AssetServers.type" = "string"
"definitions.Landing.properties.Links.properties.AssetServers.x-link-optional" = false
"definitions.Landing.properties.Links.properties.AssetServers.x-link-path" = "assetservers"
"definitions.Landing.properties.Links.properties.DataServers.type" = "string"
"definitions.Landing.properties.Links.properties.DataServers.x-link-optional" = false
"definitions.Landing.properties.Links.properties.DataServers.x-link-path" = "dataservers"
"definitions.Landing.properties.Links.properties.Search.type" = "string"
"definitions.Landing.properties.Links.properties.Search.x-link-optional" = false
"definitions.Landing.properties.Links.properties.Search.x-link-path" = "search"
"definitions.Landing.properties.Links.properties.Self.type" = "string"
"definitions.Landing.properties.Links.properties.Self.x-link-optional" = false
"definitions.Landing.properties.Links.properties.Self.x-link-path" = ""
"definitions.Landing.properties.Links.properties.System.type" = "string"
"definitions.Landing.properties.Links.properties.System.x-link-optional" = false
"definitions.Landing.properties.Links.properties.System.x-link-path" = "system"
"definitions.Landing.properties.Links.type" = "object"
"definitions.Landing.type" = "object"
"definitions.Point.properties.Descriptor.example" = "12 Hour Sine Wave"
"definitions.Point.properties.Descriptor.type" = "string"
"definitions.Point.properties.DigitalSetName.example" = ""
"definitions.Point.properties.DigitalSetName.type" = "string"
"definitions.Point.properties.DigitalSetName.x-disallow-patch" = true
"definitions.Point.properties.EngineeringUnits.example" = ""
"definitions.Point.properties.EngineeringUnits.type" = "string"
"definitions.Point.properties.Future.example" = false
"definitions.Point.properties.Future.type" = "boolean"
"definitions.Point.properties.Future.x-disallow-patch" = true
"definitions.Point.properties.Id.example" = 8012.0
"definitions.Point.properties.Id.format" = "int32"
"definitions.Point.properties.Id.type" = "integer"
"definitions.Point.properties.Id.x-disallow-patch" = true
"definitions.Point.properties.Id.x-disallow-post" = true
"definitions.Point.properties.Id.x-disallow-put" = true
"definitions.Point.properties.Links.properties.Attributes.type" = "string"
"definitions.Point.properties.Links.properties.Attributes.x-link-optional" = false
"definitions.Point.properties.Links.properties.Attributes.x-link-path" = "points/{webId}/attributes"
"definitions.Point.properties.Links.properties.DataServer.type" = "string"
"definitions.Point.properties.Links.properties.DataServer.x-link-optional" = false
"definitions.Point.properties.Links.properties.DataServer.x-link-path" = "dataservers/{webId}"
"definitions.Point.properties.Links.properties.EndValue.type" = "string"
"definitions.Point.properties.Links.properties.EndValue.x-link-optional" = false
"definitions.Point.properties.Links.properties.EndValue.x-link-path" = "streams/{webId}/end"
"definitions.Point.properties.Links.properties.InterpolatedData.type" = "string"
"definitions.Point.properties.Links.properties.InterpolatedData.x-link-optional" = false
"definitions.Point.properties.Links.properties.InterpolatedData.x-link-path" = "streams/{webId}/interpolated"
"definitions.Point.properties.Links.properties.PlotData.type" = "string"
"definitions.Point.properties.Links.properties.PlotData.x-link-optional" = false
"definitions.Point.properties.Links.properties.PlotData.x-link-path" = "streams/{webId}/plot"
"definitions.Point.properties.Links.properties.RecordedData.type" = "string"
"definitions.Point.properties.Links.properties.RecordedData.x-link-optional" = false
"definitions.Point.properties.Links.properties.RecordedData.x-link-path" = "streams/{webId}/recorded"
"definitions.Point.properties.Links.properties.Self.type" = "string"
"definitions.Point.properties.Links.properties.Self.x-link-optional" = false
"definitions.Point.properties.Links.properties.Self.x-link-path" = "points/{webId}"
"definitions.Point.properties.Links.properties.SummaryData.type" = "string"
"definitions.Point.properties.Links.properties.SummaryData.x-link-optional" = false
"definitions.Point.properties.Links.properties.SummaryData.x-link-path" = "streams/{webId}/summary"
"definitions.Point.properties.Links.properties.Value.type" = "string"
"definitions.Point.properties.Links.properties.Value.x-link-optional" = false
"definitions.Point.properties.Links.properties.Value.x-link-path" = "streams/{webId}/value"
"definitions.Point.properties.Links.type" = "object"
"definitions.Point.properties.Name.example" = "PointName"
"definitions.Point.properties.Name.type" = "string"
"definitions.Point.properties.Name.x-required-post" = true
"definitions.Point.properties.Path.example" = "\\\\MyPIServer\\PointName"
"definitions.Point.properties.Path.format" = "path"
"definitions.Point.properties.Path.type" = "string"
"definitions.Point.properties.Path.x-disallow-patch" = true
"definitions.Point.properties.Path.x-disallow-post" = true
"definitions.Point.properties.Path.x-disallow-put" = true
"definitions.Point.properties.PointClass.example" = "classic"
"definitions.Point.properties.PointClass.type" = "string"
"definitions.Point.properties.PointClass.x-disallow-patch" = true
"definitions.Point.properties.PointClass.x-required-post" = true
"definitions.Point.properties.PointType.example" = "Float32"
"definitions.Point.properties.PointType.type" = "string"
"definitions.Point.properties.PointType.x-disallow-patch" = true
"definitions.Point.properties.PointType.x-required-post" = true
"definitions.Point.properties.Step.example" = false
"definitions.Point.properties.Step.type" = "boolean"
"definitions.Point.properties.WebId.example" = "P0ZkdQMwx9oUCCzSWmnpgoEwTB8AAAUEhMVlpOXDAwR0FMDjBDRjAwMV9YUTAx"
"definitions.Point.properties.WebId.format" = "webid"
"definitions.Point.properties.WebId.type" = "string"
"definitions.Point.properties.WebId.x-disallow-patch" = true
"definitions.Point.properties.WebId.x-disallow-post" = true
"definitions.Point.properties.WebId.x-disallow-put" = true
"definitions.Point.type" = "object"
"definitions.PointAttribute.properties.Links.properties.Point.type" = "string"
"definitions.PointAttribute.properties.Links.properties.Point.x-link-optional" = false
"definitions.PointAttribute.properties.Links.properties.Point.x-link-path" = "points/{webId}"
"definitions.PointAttribute.properties.Links.properties.Self.type" = "string"
"definitions.PointAttribute.properties.Links.properties.Self.x-link-optional" = false
"definitions.PointAttribute.properties.Links.properties.Self.x-link-path" = "points/{webId}/attributes/{name}"
"definitions.PointAttribute.properties.Links.type" = "object"
"definitions.PointAttribute.properties.Name.example" = "typicalvalue"
"definitions.PointAttribute.properties.Name.type" = "string"
"definitions.PointAttribute.properties.Name.x-required-put" = true
"definitions.PointAttribute.properties.Value.example" = 50.0
"definitions.PointAttribute.properties.Value.type" = "object"
"definitions.PointAttribute.properties.Value.x-required-put" = true
"definitions.PointAttribute.type" = "object"
"definitions.Request.properties.Content.type" = "string"
"definitions.Request.properties.Headers.additionalProperties.type" = "string"
"definitions.Request.properties.Headers.type" = "object"
"definitions.Request.properties.Method.example" = "GET"
"definitions.Request.properties.Method.type" = "string"
"definitions.Request.properties.Method.x-required-post" = true
"definitions.Request.properties.Parameters.items.type" = "string"
"definitions.Request.properties.Parameters.type" = "array"
"definitions.Request.properties.ParentIds.items.type" = "string"
"definitions.Request.properties.ParentIds.type" = "array"
"definitions.Request.properties.RequestTemplate.$ref" = "#/definitions/RequestTemplate"
"definitions.Request.properties.Resource.type" = "string"
"definitions.Request.type" = "object"
"definitions.RequestTemplate.properties.Resource.type" = "string"
"definitions.RequestTemplate.properties.Resource.x-required-post" = true
"definitions.RequestTemplate.type" = "object"
"definitions.Response.properties.Content.type" = "object"
"definitions.Response.properties.Headers.additionalProperties.type" = "string"
"definitions.Response.properties.Headers.type" = "object"
"definitions.Response.properties.Status.enum.length" = 42
"definitions.Response.properties.Status.enum[0]" = 100.0
"definitions.Response.properties.Status.enum[10]" = 301.0
"definitions.Response.properties.Status.enum[11]" = 302.0
"definitions.Response.properties.Status.enum[12]" = 303.0
"definitions.Response.properties.Status.enum[13]" = 304.0
"definitions.Response.properties.Status.enum[14]" = 305.0
"definitions.Response.properties.Status.enum[15]" = 306.0
"definitions.Response.properties.Status.enum[16]" = 307.0
"definitions.Response.properties.Status.enum[17]" = 400.0
"definitions.Response.properties.Status.enum[18]" = 401.0
"definitions.Response.properties.Status.enum[19]" = 402.0
"definitions.Response.properties.Status.enum[1]" = 101.0
"definitions.Response.properties.Status.enum[20]" = 403.0
"definitions.Response.properties.Status.enum[21]" = 404.0
"definitions.Response.properties.Status.enum[22]" = 405.0
"definitions.Response.properties.Status.enum[23]" = 406.0
"definitions.Response.properties.Status.enum[24]" = 407.0
"definitions.Response.properties.Status.enum[25]" = 408.0
"definitions.Response.properties.Status.enum[26]" = 409.0
"definitions.Response.properties.Status.enum[27]" = 410.0
"definitions.Response.properties.Status.enum[28]" = 411.0
"definitions.Response.properties.Status.enum[29]" = 412.0
"definitions.Response.properties.Status.enum[2]" = 200.0
"definitions.Response.properties.Status.enum[30]" = 413.0
"definitions.Response.properties.Status.enum[31]" = 414.0
"definitions.Response.properties.Status.enum[32]" = 415.0
"definitions.Response.properties.Status.enum[33]" = 416.0
"definitions.Response.properties.Status.enum[34]" = 417.0
"definitions.Response.properties.Status.enum[35]" = 426.0
"definitions.Response.properties.Status.enum[36]" = 500.0
"definitions.Response.properties.Status.enum[37]" = 501.0
"definitions.Response.properties.Status.enum[38]" = 502.0
"definitions.Response.properties.Status.enum[39]" = 503.0
"definitions.Response.properties.Status.enum[3]" = 201.0
"definitions.Response.properties.Status.enum[40]" = 504.0
"definitions.Response.properties.Status.enum[41]" = 505.0
"definitions.Response.properties.Status.enum[4]" = 202.0
"definitions.Response.properties.Status.enum[5]" = 203.0
"definitions.Response.properties.Status.enum[6]" = 204.0
"definitions.Response.properties.Status.enum[7]" = 205.0
"definitions.Response.properties.Status.enum[8]" = 206.0
"definitions.Response.properties.Status.enum[9]" = 300.0
"definitions.Response.properties.Status.example" = 200.0
"definitions.Response.properties.Status.format" = "int32"
"definitions.Response.properties.Status.type" = "integer"
"definitions.Response.type" = "object"
"definitions.Security.properties.CanAnnotate.example" = true
"definitions.Security.properties.CanAnnotate.type" = "boolean"
"definitions.Security.properties.CanAnnotate.x-disallow-patch" = true
"definitions.Security.properties.CanAnnotate.x-disallow-post" = true
"definitions.Security.properties.CanAnnotate.x-disallow-put" = true
"definitions.Security.properties.CanDelete.example" = true
"definitions.Security.properties.CanDelete.type" = "boolean"
"definitions.Security.properties.CanDelete.x-disallow-patch" = true
"definitions.Security.properties.CanDelete.x-disallow-post" = true
"definitions.Security.properties.CanDelete.x-disallow-put" = true
"definitions.Security.properties.CanExecute.example" = true
"definitions.Security.properties.CanExecute.type" = "boolean"
"definitions.Security.properties.CanExecute.x-disallow-patch" = true
"definitions.Security.properties.CanExecute.x-disallow-post" = true
"definitions.Security.properties.CanExecute.x-disallow-put" = true
"definitions.Security.properties.CanRead.example" = true
"definitions.Security.properties.CanRead.type" = "boolean"
"definitions.Security.properties.CanRead.x-disallow-patch" = true
"definitions.Security.properties.CanRead.x-disallow-post" = true
"definitions.Security.properties.CanRead.x-disallow-put" = true
"definitions.Security.properties.CanReadData.example" = true
"definitions.Security.properties.CanReadData.type" = "boolean"
"definitions.Security.properties.CanReadData.x-disallow-patch" = true
"definitions.Security.properties.CanReadData.x-disallow-post" = true
"definitions.Security.properties.CanReadData.x-disallow-put" = true
"definitions.Security.properties.CanSubscribe.example" = true
"definitions.Security.properties.CanSubscribe.type" = "boolean"
"definitions.Security.properties.CanSubscribe.x-disallow-patch" = true
"definitions.Security.properties.CanSubscribe.x-disallow-post" = true
"definitions.Security.properties.CanSubscribe.x-disallow-put" = true
"definitions.Security.properties.CanSubscribeOthers.example" = true
"definitions.Security.properties.CanSubscribeOthers.type" = "boolean"
"definitions.Security.properties.CanSubscribeOthers.x-disallow-patch" = true
"definitions.Security.properties.CanSubscribeOthers.x-disallow-post" = true
"definitions.Security.properties.CanSubscribeOthers.x-disallow-put" = true
"definitions.Security.properties.CanWrite.example" = true
"definitions.Security.properties.CanWrite.type" = "boolean"
"definitions.Security.properties.CanWrite.x-disallow-patch" = true
"definitions.Security.properties.CanWrite.x-disallow-post" = true
"definitions.Security.properties.CanWrite.x-disallow-put" = true
"definitions.Security.properties.CanWriteData.example" = true
"definitions.Security.properties.CanWriteData.type" = "boolean"
"definitions.Security.properties.CanWriteData.x-disallow-patch" = true
"definitions.Security.properties.CanWriteData.x-disallow-post" = true
"definitions.Security.properties.CanWriteData.x-disallow-put" = true
"definitions.Security.properties.HasAdmin.example" = true
"definitions.Security.properties.HasAdmin.type" = "boolean"
"definitions.Security.properties.HasAdmin.x-disallow-patch" = true
"definitions.Security.properties.HasAdmin.x-disallow-post" = true
"definitions.Security.properties.HasAdmin.x-disallow-put" = true
"definitions.Security.properties.Rights.example.length" = 2
"definitions.Security.properties.Rights.example[0]" = "Read"
"definitions.Security.properties.Rights.example[1]" = "WriteData"
"definitions.Security.properties.Rights.items.type" = "string"
"definitions.Security.properties.Rights.type" = "array"
"definitions.Security.type" = "object"
"definitions.SecurityEntry.properties.AllowRights.example.length" = 2
"definitions.SecurityEntry.properties.AllowRights.example[0]" = "Read"
"definitions.SecurityEntry.properties.AllowRights.example[1]" = "ReadData"
"definitions.SecurityEntry.properties.AllowRights.items.type" = "string"
"definitions.SecurityEntry.properties.AllowRights.type" = "array"
"definitions.SecurityEntry.properties.DenyRights.example.length" = 3
"definitions.SecurityEntry.properties.DenyRights.example[0]" = "Write"
"definitions.SecurityEntry.properties.DenyRights.example[1]" = "Execute"
"definitions.SecurityEntry.properties.DenyRights.example[2]" = "Admin"
"definitions.SecurityEntry.properties.DenyRights.items.type" = "string"
"definitions.SecurityEntry.properties.DenyRights.type" = "array"
"definitions.SecurityEntry.properties.Links.properties.SecurableObject.type" = "string"
"definitions.SecurityEntry.properties.Links.properties.SecurableObject.x-link-optional" = false
"definitions.SecurityEntry.properties.Links.properties.SecurityIdentity.type" = "string"
"definitions.SecurityEntry.properties.Links.properties.SecurityIdentity.x-link-optional" = false
"definitions.SecurityEntry.properties.Links.properties.SecurityIdentity.x-link-path" = "securityidentities/{webId}"
"definitions.SecurityEntry.properties.Links.properties.Self.type" = "string"
"definitions.SecurityEntry.properties.Links.properties.Self.x-link-optional" = false
"definitions.SecurityEntry.properties.Links.type" = "object"
"definitions.SecurityEntry.properties.Name.example" = "domain\\user1"
"definitions.SecurityEntry.properties.Name.type" = "string"
"definitions.SecurityEntry.properties.Name.x-disallow-patch" = true
"definitions.SecurityEntry.properties.Name.x-disallow-post" = true
"definitions.SecurityEntry.properties.Name.x-disallow-put" = true
"definitions.SecurityEntry.properties.SecurityIdentityName.example" = "domain\\user1"
"definitions.SecurityEntry.properties.SecurityIdentityName.type" = "string"
"definitions.SecurityEntry.properties.SecurityIdentityName.x-disallow-put" = true
"definitions.SecurityEntry.properties.SecurityIdentityName.x-required-post" = true
"definitions.SecurityEntry.type" = "object"
"definitions.SecurityIdentity.properties.Description.example" = ""
"definitions.SecurityIdentity.properties.Description.type" = "string"
"definitions.SecurityIdentity.properties.Id.example" = "a353feee-3145-4bec-acda-c8ccb1daaafc"
"definitions.SecurityIdentity.properties.Id.format" = "uuid"
"definitions.SecurityIdentity.properties.Id.type" = "string"
"definitions.SecurityIdentity.properties.Id.x-disallow-patch" = true
"definitions.SecurityIdentity.properties.Id.x-disallow-post" = true
"definitions.SecurityIdentity.properties.Id.x-disallow-put" = true
"definitions.SecurityIdentity.properties.IsEnabled.example" = true
"definitions.SecurityIdentity.properties.IsEnabled.type" = "boolean"
"definitions.SecurityIdentity.properties.Links.properties.AssetServer.type" = "string"
"definitions.SecurityIdentity.properties.Links.properties.AssetServer.x-link-optional" = false
"definitions.SecurityIdentity.properties.Links.properties.AssetServer.x-link-path" = "assetservers/{webId}"
"definitions.SecurityIdentity.properties.Links.properties.Security.type" = "string"
"definitions.SecurityIdentity.properties.Links.properties.Security.x-link-optional" = false
"definitions.SecurityIdentity.properties.Links.properties.Security.x-link-path" = "securityidentities/{webId}/security"
"definitions.SecurityIdentity.properties.Links.properties.SecurityEntries.type" = "string"
"definitions.SecurityIdentity.properties.Links.properties.SecurityEntries.x-link-optional" = false
"definitions.SecurityIdentity.properties.Links.properties.SecurityEntries.x-link-path" = "securityidentities/{webId}/securityentries"
"definitions.SecurityIdentity.properties.Links.properties.SecurityMappings.type" = "string"
"definitions.SecurityIdentity.properties.Links.properties.SecurityMappings.x-link-optional" = false
"definitions.SecurityIdentity.properties.Links.properties.SecurityMappings.x-link-path" = "securityidentities/{webId}/securitymappings"
"definitions.SecurityIdentity.properties.Links.properties.Self.type" = "string"
"definitions.SecurityIdentity.properties.Links.properties.Self.x-link-optional" = false
"definitions.SecurityIdentity.properties.Links.properties.Self.x-link-path" = "securityidentities/{webId}"
"definitions.SecurityIdentity.properties.Links.type" = "object"
"definitions.SecurityIdentity.properties.Name.example" = "MySecurityIdentity"
"definitions.SecurityIdentity.properties.Name.type" = "string"
"definitions.SecurityIdentity.properties.Name.x-required-post" = true
"definitions.SecurityIdentity.properties.Path.example" = "\\\\RESTUNIT\\SecurityIdentities[MySecurityIdentity]"
"definitions.SecurityIdentity.properties.Path.format" = "path"
"definitions.SecurityIdentity.properties.Path.type" = "string"
"definitions.SecurityIdentity.properties.Path.x-disallow-patch" = true
"definitions.SecurityIdentity.properties.Path.x-disallow-post" = true
"definitions.SecurityIdentity.properties.Path.x-disallow-put" = true
"definitions.SecurityIdentity.properties.WebId.example" = "I07v5To0Ux7Eus2sjMsdqq_AUEhMQUZTMDU"
"definitions.SecurityIdentity.properties.WebId.format" = "webid"
"definitions.SecurityIdentity.properties.WebId.type" = "string"
"definitions.SecurityIdentity.properties.WebId.x-disallow-patch" = true
"definitions.SecurityIdentity.properties.WebId.x-disallow-post" = true
"definitions.SecurityIdentity.properties.WebId.x-disallow-put" = true
"definitions.SecurityIdentity.type" = "object"
"definitions.SecurityMapping.properties.Account.example" = "domain\\user"
"definitions.SecurityMapping.properties.Account.type" = "string"
"definitions.SecurityMapping.properties.Account.x-disallow-patch" = true
"definitions.SecurityMapping.properties.Account.x-required-post" = true
"definitions.SecurityMapping.properties.Description.example" = ""
"definitions.SecurityMapping.properties.Description.type" = "string"
"definitions.SecurityMapping.properties.Id.example" = "a353feee-3145-4bec-acda-c8ccb1daaafc"
"definitions.SecurityMapping.properties.Id.format" = "uuid"
"definitions.SecurityMapping.properties.Id.type" = "string"
"definitions.SecurityMapping.properties.Id.x-disallow-patch" = true
"definitions.SecurityMapping.properties.Id.x-disallow-post" = true
"definitions.SecurityMapping.properties.Id.x-disallow-put" = true
"definitions.SecurityMapping.properties.Links.properties.AssetServer.type" = "string"
"definitions.SecurityMapping.properties.Links.properties.AssetServer.x-link-optional" = false
"definitions.SecurityMapping.properties.Links.properties.AssetServer.x-link-path" = "assetservers/{webId}"
"definitions.SecurityMapping.properties.Links.properties.Security.type" = "string"
"definitions.SecurityMapping.properties.Links.properties.Security.x-link-optional" = false
"definitions.SecurityMapping.properties.Links.properties.Security.x-link-path" = "securitymappings/{webId}/security"
"definitions.SecurityMapping.properties.Links.properties.SecurityEntries.type" = "string"
"definitions.SecurityMapping.properties.Links.properties.SecurityEntries.x-link-optional" = false
"definitions.SecurityMapping.properties.Links.properties.SecurityEntries.x-link-path" = "securitymappings/{webId}/securityentries"
"definitions.SecurityMapping.properties.Links.properties.SecurityIdentity.type" = "string"
"definitions.SecurityMapping.properties.Links.properties.SecurityIdentity.x-link-optional" = false
"definitions.SecurityMapping.properties.Links.properties.SecurityIdentity.x-link-path" = "securityidentities/{webId}"
"definitions.SecurityMapping.properties.Links.properties.Self.type" = "string"
"definitions.SecurityMapping.properties.Links.properties.Self.x-link-optional" = false
"definitions.SecurityMapping.properties.Links.properties.Self.x-link-path" = "securitymappings/{webId}"
"definitions.SecurityMapping.properties.Links.type" = "object"
"definitions.SecurityMapping.properties.Name.example" = "MySecurityMapping"
"definitions.SecurityMapping.properties.Name.type" = "string"
"definitions.SecurityMapping.properties.Path.example" = "\\\\RESTUNIT\\SecurityMappings[MySecurityMapping]"
"definitions.SecurityMapping.properties.Path.format" = "path"
"definitions.SecurityMapping.properties.Path.type" = "string"
"definitions.SecurityMapping.properties.Path.x-disallow-patch" = true
"definitions.SecurityMapping.properties.Path.x-disallow-post" = true
"definitions.SecurityMapping.properties.Path.x-disallow-put" = true
"definitions.SecurityMapping.properties.SecurityIdentityWebId.example" = "I07v5To0Ux7Eus2sjMsdqq_AUEhMQUZTMDU"
"definitions.SecurityMapping.properties.SecurityIdentityWebId.type" = "string"
"definitions.SecurityMapping.properties.SecurityIdentityWebId.x-required-post" = true
"definitions.SecurityMapping.properties.WebId.example" = "M07v5To0Ux7Eus2sjMsdqq_AUEhMQUZTMDU"
"definitions.SecurityMapping.properties.WebId.format" = "webid"
"definitions.SecurityMapping.properties.WebId.type" = "string"
"definitions.SecurityMapping.properties.WebId.x-disallow-patch" = true
"definitions.SecurityMapping.properties.WebId.x-disallow-post" = true
"definitions.SecurityMapping.properties.WebId.x-disallow-put" = true
"definitions.SecurityMapping.type" = "object"
"definitions.SecurityRights.properties.Links.properties.Owner.type" = "string"
"definitions.SecurityRights.properties.Links.properties.Owner.x-link-optional" = false
"definitions.SecurityRights.properties.Links.properties.Self.type" = "string"
"definitions.SecurityRights.properties.Links.properties.Self.x-link-optional" = false
"definitions.SecurityRights.properties.Links.type" = "object"
"definitions.SecurityRights.properties.OwnerWebId.example" = "E0DqD5loBNH0erqeqJodtALAvGEqktDl4xG-twAFmjx6UAUkVTVFVOSVRUc1VHQVJNQU5V1TcHUkVFTg"
"definitions.SecurityRights.properties.OwnerWebId.type" = "string"
"definitions.SecurityRights.properties.SecurityItem.example" = "Default"
"definitions.SecurityRights.properties.SecurityItem.type" = "string"
"definitions.SecurityRights.properties.UserIdentity.example" = "domain\\user"
"definitions.SecurityRights.properties.UserIdentity.type" = "string"
"definitions.SecurityRights.type" = "object"
"definitions.StreamSummaries.properties.Items.items.$ref" = "#/definitions/SummaryValue"
"definitions.StreamSummaries.properties.Items.type" = "array"
"definitions.StreamSummaries.properties.Items.x-disallow-patch" = true
"definitions.StreamSummaries.properties.Items.x-disallow-post" = true
"definitions.StreamSummaries.properties.Items.x-disallow-put" = true
"definitions.StreamSummaries.properties.Links.properties.Source.type" = "string"
"definitions.StreamSummaries.properties.Links.properties.Source.x-link-optional" = false
"definitions.StreamSummaries.properties.Links.type" = "object"
"definitions.StreamSummaries.properties.Name.example" = "Water"
"definitions.StreamSummaries.properties.Name.type" = "string"
"definitions.StreamSummaries.properties.Name.x-disallow-patch" = true
"definitions.StreamSummaries.properties.Name.x-disallow-post" = true
"definitions.StreamSummaries.properties.Name.x-disallow-put" = true
"definitions.StreamSummaries.properties.Path.example" = "\\\\MYSERVER\\MyDatabase\\MyElement|Water"
"definitions.StreamSummaries.properties.Path.format" = "path"
"definitions.StreamSummaries.properties.Path.type" = "string"
"definitions.StreamSummaries.properties.Path.x-disallow-patch" = true
"definitions.StreamSummaries.properties.Path.x-disallow-post" = true
"definitions.StreamSummaries.properties.Path.x-disallow-put" = true
"definitions.StreamSummaries.properties.WebId.example" = "A0EDqD5loBNH0erqeqJodtALAUvtkqIDl4xG-twAFmjx6AA79jxF7HiqFwpsgMBxwgWmgUkVTVFVOSVRcU1VNJQVHQU5cTlVHUkVZTlxIT1VTVE9f0FBMQU5UQ0lUWQ"
"definitions.StreamSummaries.properties.WebId.format" = "webid"
"definitions.StreamSummaries.properties.WebId.type" = "string"
"definitions.StreamSummaries.properties.WebId.x-disallow-patch" = true
"definitions.StreamSummaries.properties.WebId.x-disallow-post" = true
"definitions.StreamSummaries.properties.WebId.x-disallow-put" = true
"definitions.StreamSummaries.type" = "object"
"definitions.StreamValue.properties.Links.properties.Source.type" = "string"
"definitions.StreamValue.properties.Links.properties.Source.x-link-optional" = false
"definitions.StreamValue.properties.Links.type" = "object"
"definitions.StreamValue.properties.Name.example" = "Water"
"definitions.StreamValue.properties.Name.type" = "string"
"definitions.StreamValue.properties.Name.x-disallow-post" = true
"definitions.StreamValue.properties.Path.example" = "\\\\MYSERVER\\MyDatabase\\MyElement|Water"
"definitions.StreamValue.properties.Path.format" = "path"
"definitions.StreamValue.properties.Path.type" = "string"
"definitions.StreamValue.properties.Path.x-disallow-post" = true
"definitions.StreamValue.properties.Value.$ref" = "#/definitions/TimedValue"
"definitions.StreamValue.properties.Value.x-required-post" = true
"definitions.StreamValue.properties.WebId.example" = "A0EDqD5loBNH0erqeqJodtALAUvtkqIDl4xG-twAFmjx6AA79jxF7HiqFwpsgMBxwgWmgUkVTVFVOSVRcU1VNJQVHQU5cTlVHUkVZTlxIT1VTVE9f0FBMQU5UQ0lUWQ"
"definitions.StreamValue.properties.WebId.format" = "webid"
"definitions.StreamValue.properties.WebId.type" = "string"
"definitions.StreamValue.properties.WebId.x-required-post" = true
"definitions.StreamValue.type" = "object"
"definitions.StreamValues.properties.Items.items.$ref" = "#/definitions/TimedValue"
"definitions.StreamValues.properties.Items.type" = "array"
"definitions.StreamValues.properties.Items.x-required-post" = true
"definitions.StreamValues.properties.Links.properties.Source.type" = "string"
"definitions.StreamValues.properties.Links.properties.Source.x-link-optional" = false
"definitions.StreamValues.properties.Links.type" = "object"
"definitions.StreamValues.properties.Name.example" = "Water"
"definitions.StreamValues.properties.Name.type" = "string"
"definitions.StreamValues.properties.Name.x-disallow-post" = true
"definitions.StreamValues.properties.Path.example" = "\\\\MYSERVER\\MyDatabase\\MyElement|Water"
"definitions.StreamValues.properties.Path.format" = "path"
"definitions.StreamValues.properties.Path.type" = "string"
"definitions.StreamValues.properties.Path.x-disallow-post" = true
"definitions.StreamValues.properties.UnitsAbbreviation.example" = "m"
"definitions.StreamValues.properties.UnitsAbbreviation.type" = "string"
"definitions.StreamValues.properties.UnitsAbbreviation.x-disallow-patch" = true
"definitions.StreamValues.properties.UnitsAbbreviation.x-disallow-post" = true
"definitions.StreamValues.properties.UnitsAbbreviation.x-disallow-put" = true
"definitions.StreamValues.properties.WebId.example" = "A0EDqD5loBNH0erqeqJodtALAUvtkqIDl4xG-twAFmjx6AA79jxF7HiqFwpsgMBxwgWmgUkVTVFVOSVRcU1VNJQVHQU5cTlVHUkVZTlxIT1VTVE9f0FBMQU5UQ0lUWQ"
"definitions.StreamValues.properties.WebId.format" = "webid"
"definitions.StreamValues.properties.WebId.type" = "string"
"definitions.StreamValues.properties.WebId.x-required-post" = true
"definitions.StreamValues.type" = "object"
"definitions.Substatus.properties.Message.type" = "string"
"definitions.Substatus.properties.Substatus.enum.length" = 42
"definitions.Substatus.properties.Substatus.enum[0]" = 100.0
"definitions.Substatus.properties.Substatus.enum[10]" = 301.0
"definitions.Substatus.properties.Substatus.enum[11]" = 302.0
"definitions.Substatus.properties.Substatus.enum[12]" = 303.0
"definitions.Substatus.properties.Substatus.enum[13]" = 304.0
"definitions.Substatus.properties.Substatus.enum[14]" = 305.0
"definitions.Substatus.properties.Substatus.enum[15]" = 306.0
"definitions.Substatus.properties.Substatus.enum[16]" = 307.0
"definitions.Substatus.properties.Substatus.enum[17]" = 400.0
"definitions.Substatus.properties.Substatus.enum[18]" = 401.0
"definitions.Substatus.properties.Substatus.enum[19]" = 402.0
"definitions.Substatus.properties.Substatus.enum[1]" = 101.0
"definitions.Substatus.properties.Substatus.enum[20]" = 403.0
"definitions.Substatus.properties.Substatus.enum[21]" = 404.0
"definitions.Substatus.properties.Substatus.enum[22]" = 405.0
"definitions.Substatus.properties.Substatus.enum[23]" = 406.0
"definitions.Substatus.properties.Substatus.enum[24]" = 407.0
"definitions.Substatus.properties.Substatus.enum[25]" = 408.0
"definitions.Substatus.properties.Substatus.enum[26]" = 409.0
"definitions.Substatus.properties.Substatus.enum[27]" = 410.0
"definitions.Substatus.properties.Substatus.enum[28]" = 411.0
"definitions.Substatus.properties.Substatus.enum[29]" = 412.0
"definitions.Substatus.properties.Substatus.enum[2]" = 200.0
"definitions.Substatus.properties.Substatus.enum[30]" = 413.0
"definitions.Substatus.properties.Substatus.enum[31]" = 414.0
"definitions.Substatus.properties.Substatus.enum[32]" = 415.0
"definitions.Substatus.properties.Substatus.enum[33]" = 416.0
"definitions.Substatus.properties.Substatus.enum[34]" = 417.0
"definitions.Substatus.properties.Substatus.enum[35]" = 426.0
"definitions.Substatus.properties.Substatus.enum[36]" = 500.0
"definitions.Substatus.properties.Substatus.enum[37]" = 501.0
"definitions.Substatus.properties.Substatus.enum[38]" = 502.0
"definitions.Substatus.properties.Substatus.enum[39]" = 503.0
"definitions.Substatus.properties.Substatus.enum[3]" = 201.0
"definitions.Substatus.properties.Substatus.enum[40]" = 504.0
"definitions.Substatus.properties.Substatus.enum[41]" = 505.0
"definitions.Substatus.properties.Substatus.enum[4]" = 202.0
"definitions.Substatus.properties.Substatus.enum[5]" = 203.0
"definitions.Substatus.properties.Substatus.enum[6]" = 204.0
"definitions.Substatus.properties.Substatus.enum[7]" = 205.0
"definitions.Substatus.properties.Substatus.enum[8]" = 206.0
"definitions.Substatus.properties.Substatus.enum[9]" = 300.0
"definitions.Substatus.properties.Substatus.example" = "200"
"definitions.Substatus.properties.Substatus.format" = "int32"
"definitions.Substatus.properties.Substatus.type" = "integer"
"definitions.Substatus.type" = "object"
"definitions.SummaryValue.properties.Type.example" = "Total"
"definitions.SummaryValue.properties.Type.type" = "string"
"definitions.SummaryValue.properties.Value.$ref" = "#/definitions/TimedValue"
"definitions.SummaryValue.type" = "object"
"definitions.SystemLanding.properties.Links.properties.CacheInstances.type" = "string"
"definitions.SystemLanding.properties.Links.properties.CacheInstances.x-link-optional" = false
"definitions.SystemLanding.properties.Links.properties.CacheInstances.x-link-path" = "system/cacheinstances"
"definitions.SystemLanding.properties.Links.properties.Configuration.type" = "string"
"definitions.SystemLanding.properties.Links.properties.Configuration.x-link-optional" = false
"definitions.SystemLanding.properties.Links.properties.Configuration.x-link-path" = "system/configuration"
"definitions.SystemLanding.properties.Links.properties.Self.type" = "string"
"definitions.SystemLanding.properties.Links.properties.Self.x-link-optional" = false
"definitions.SystemLanding.properties.Links.properties.Self.x-link-path" = "system"
"definitions.SystemLanding.properties.Links.properties.Status.type" = "string"
"definitions.SystemLanding.properties.Links.properties.Status.x-link-optional" = false
"definitions.SystemLanding.properties.Links.properties.Status.x-link-path" = "system/status"
"definitions.SystemLanding.properties.Links.properties.UserInfo.type" = "string"
"definitions.SystemLanding.properties.Links.properties.UserInfo.x-link-optional" = false
"definitions.SystemLanding.properties.Links.properties.UserInfo.x-link-path" = "system/userinfo"
"definitions.SystemLanding.properties.Links.properties.Versions.type" = "string"
"definitions.SystemLanding.properties.Links.properties.Versions.x-link-optional" = false
"definitions.SystemLanding.properties.Links.properties.Versions.x-link-path" = "system/versions"
"definitions.SystemLanding.properties.Links.type" = "object"
"definitions.SystemLanding.properties.ProductTitle.example" = "PI Web API 2016 R2"
"definitions.SystemLanding.properties.ProductTitle.type" = "string"
"definitions.SystemLanding.properties.ProductTitle.x-disallow-patch" = true
"definitions.SystemLanding.properties.ProductTitle.x-disallow-post" = true
"definitions.SystemLanding.properties.ProductTitle.x-disallow-put" = true
"definitions.SystemLanding.properties.ProductVersion.example" = "1.8.0.201"
"definitions.SystemLanding.properties.ProductVersion.type" = "string"
"definitions.SystemLanding.properties.ProductVersion.x-disallow-patch" = true
"definitions.SystemLanding.properties.ProductVersion.x-disallow-post" = true
"definitions.SystemLanding.properties.ProductVersion.x-disallow-put" = true
"definitions.SystemLanding.type" = "object"
"definitions.SystemStatus.properties.CacheInstances.example" = 0.0
"definitions.SystemStatus.properties.CacheInstances.format" = "int32"
"definitions.SystemStatus.properties.CacheInstances.type" = "integer"
"definitions.SystemStatus.properties.CacheInstances.x-disallow-patch" = true
"definitions.SystemStatus.properties.CacheInstances.x-disallow-post" = true
"definitions.SystemStatus.properties.CacheInstances.x-disallow-put" = true
"definitions.SystemStatus.properties.State.example" = "Running"
"definitions.SystemStatus.properties.State.type" = "string"
"definitions.SystemStatus.properties.State.x-disallow-patch" = true
"definitions.SystemStatus.properties.State.x-disallow-post" = true
"definitions.SystemStatus.properties.State.x-disallow-put" = true
"definitions.SystemStatus.properties.UpTimeInMinutes.example" = 32345.6
"definitions.SystemStatus.properties.UpTimeInMinutes.format" = "double"
"definitions.SystemStatus.properties.UpTimeInMinutes.type" = "number"
"definitions.SystemStatus.properties.UpTimeInMinutes.x-disallow-patch" = true
"definitions.SystemStatus.properties.UpTimeInMinutes.x-disallow-post" = true
"definitions.SystemStatus.properties.UpTimeInMinutes.x-disallow-put" = true
"definitions.SystemStatus.type" = "object"
"definitions.Table.properties.CategoryNames.example.length" = 1
"definitions.Table.properties.CategoryNames.example[0]" = "Table Category"
"definitions.Table.properties.CategoryNames.items.type" = "string"
"definitions.Table.properties.CategoryNames.type" = "array"
"definitions.Table.properties.ConvertToLocalTime.example" = "false"
"definitions.Table.properties.ConvertToLocalTime.type" = "boolean"
"definitions.Table.properties.Description.example" = "Table of car info."
"definitions.Table.properties.Description.type" = "string"
"definitions.Table.properties.Id.example" = "e71a0380-230b-4603-9c3c-cf8c272b6b3c"
"definitions.Table.properties.Id.format" = "uuid"
"definitions.Table.properties.Id.type" = "string"
"definitions.Table.properties.Id.x-disallow-patch" = true
"definitions.Table.properties.Id.x-disallow-post" = true
"definitions.Table.properties.Id.x-disallow-put" = true
"definitions.Table.properties.Links.properties.Categories.type" = "string"
"definitions.Table.properties.Links.properties.Categories.x-link-optional" = false
"definitions.Table.properties.Links.properties.Categories.x-link-path" = "tables/{webId}/categories"
"definitions.Table.properties.Links.properties.Data.type" = "string"
"definitions.Table.properties.Links.properties.Data.x-link-optional" = false
"definitions.Table.properties.Links.properties.Data.x-link-path" = "tables/{webId}/data"
"definitions.Table.properties.Links.properties.Database.type" = "string"
"definitions.Table.properties.Links.properties.Database.x-link-optional" = false
"definitions.Table.properties.Links.properties.Database.x-link-path" = "assetdatabases/{webId}"
"definitions.Table.properties.Links.properties.Security.type" = "string"
"definitions.Table.properties.Links.properties.Security.x-link-optional" = false
"definitions.Table.properties.Links.properties.Security.x-link-path" = "tables/{webId}/security"
"definitions.Table.properties.Links.properties.SecurityEntries.type" = "string"
"definitions.Table.properties.Links.properties.SecurityEntries.x-link-optional" = false
"definitions.Table.properties.Links.properties.SecurityEntries.x-link-path" = "tables/{webId}/securityentries"
"definitions.Table.properties.Links.properties.Self.type" = "string"
"definitions.Table.properties.Links.properties.Self.x-link-optional" = false
"definitions.Table.properties.Links.properties.Self.x-link-path" = "tables/{webId}"
"definitions.Table.properties.Links.type" = "object"
"definitions.Table.properties.Name.example" = "CarInfo"
"definitions.Table.properties.Name.type" = "string"
"definitions.Table.properties.Name.x-required-post" = true
"definitions.Table.properties.Path.example" = "\\\\MyServer\\MyDatabase\\Tables[CarInfo]"
"definitions.Table.properties.Path.format" = "path"
"definitions.Table.properties.Path.type" = "string"
"definitions.Table.properties.Path.x-disallow-patch" = true
"definitions.Table.properties.Path.x-disallow-post" = true
"definitions.Table.properties.Path.x-disallow-put" = true
"definitions.Table.properties.TimeZone.example" = "Eastern Standard Time"
"definitions.Table.properties.TimeZone.type" = "string"
"definitions.Table.properties.WebId.example" = "B0DqD5loBNH0erqeqJodtALAgAMa5wsjA0acPM-MJytrPAUkVTVFVOSVRcTUFSS1xUQUJMRVNbVEVTVFRBQkxFXQ"
"definitions.Table.properties.WebId.format" = "webid"
"definitions.Table.properties.WebId.type" = "string"
"definitions.Table.properties.WebId.x-disallow-patch" = true
"definitions.Table.properties.WebId.x-disallow-post" = true
"definitions.Table.properties.WebId.x-disallow-put" = true
"definitions.Table.type" = "object"
"definitions.TableCategory.properties.Description.example" = "Relative energy use per ton of process feed."
"definitions.TableCategory.properties.Description.type" = "string"
"definitions.TableCategory.properties.Id.example" = "89c70cc2-5221-4e77-873f-894a3ea61e7d"
"definitions.TableCategory.properties.Id.format" = "uuid"
"definitions.TableCategory.properties.Id.type" = "string"
"definitions.TableCategory.properties.Id.x-disallow-patch" = true
"definitions.TableCategory.properties.Id.x-disallow-post" = true
"definitions.TableCategory.properties.Id.x-disallow-put" = true
"definitions.TableCategory.properties.Links.properties.Database.type" = "string"
"definitions.TableCategory.properties.Links.properties.Database.x-link-optional" = false
"definitions.TableCategory.properties.Links.properties.Database.x-link-path" = "assetdatabases/{webId}"
"definitions.TableCategory.properties.Links.properties.Security.type" = "string"
"definitions.TableCategory.properties.Links.properties.Security.x-link-optional" = false
"definitions.TableCategory.properties.Links.properties.Security.x-link-path" = "tablecategories/{webId}/security"
"definitions.TableCategory.properties.Links.properties.SecurityEntries.type" = "string"
"definitions.TableCategory.properties.Links.properties.SecurityEntries.x-link-optional" = false
"definitions.TableCategory.properties.Links.properties.SecurityEntries.x-link-path" = "tablecategories/{webId}/securityentries"
"definitions.TableCategory.properties.Links.properties.Self.type" = "string"
"definitions.TableCategory.properties.Links.properties.Self.x-link-optional" = false
"definitions.TableCategory.properties.Links.properties.Self.x-link-path" = "tablecategories/{webId}"
"definitions.TableCategory.properties.Links.type" = "object"
"definitions.TableCategory.properties.Name.example" = "CategoryName"
"definitions.TableCategory.properties.Name.type" = "string"
"definitions.TableCategory.properties.Name.x-required-post" = true
"definitions.TableCategory.properties.Path.example" = "\\\\MyServer\\Database\\CategoriesTable[CategoryName]"
"definitions.TableCategory.properties.Path.format" = "path"
"definitions.TableCategory.properties.Path.type" = "string"
"definitions.TableCategory.properties.Path.x-disallow-patch" = true
"definitions.TableCategory.properties.Path.x-disallow-post" = true
"definitions.TableCategory.properties.Path.x-disallow-put" = true
"definitions.TableCategory.properties.WebId.example" = "a0DqD5loBNH0erqeqJodtALAwgzHiSFSd06HP4lKPqYefQUkVTVFVOSVRcUk9OR1xDQVRFR09SSUVTVEFCTEVbQ0FURUdPUlkxXQ"
"definitions.TableCategory.properties.WebId.format" = "webid"
"definitions.TableCategory.properties.WebId.type" = "string"
"definitions.TableCategory.properties.WebId.x-disallow-patch" = true
"definitions.TableCategory.properties.WebId.x-disallow-post" = true
"definitions.TableCategory.properties.WebId.x-disallow-put" = true
"definitions.TableCategory.type" = "object"
"definitions.TableData.properties.Columns.additionalProperties.type" = "string"
"definitions.TableData.properties.Columns.type" = "object"
"definitions.TableData.properties.Columns.x-required-put" = true
"definitions.TableData.properties.Rows.items.additionalProperties.type" = "object"
"definitions.TableData.properties.Rows.items.type" = "object"
"definitions.TableData.properties.Rows.type" = "array"
"definitions.TableData.properties.Rows.x-required-put" = true
"definitions.TableData.type" = "object"
"definitions.TimeRule.properties.ConfigString.example" = "Frequency=300"
"definitions.TimeRule.properties.ConfigString.type" = "string"
"definitions.TimeRule.properties.ConfigStringStored.example" = ""
"definitions.TimeRule.properties.ConfigStringStored.type" = "string"
"definitions.TimeRule.properties.ConfigStringStored.x-disallow-patch" = true
"definitions.TimeRule.properties.ConfigStringStored.x-disallow-post" = true
"definitions.TimeRule.properties.ConfigStringStored.x-disallow-put" = true
"definitions.TimeRule.properties.Description.example" = "Creates regular periodic time periods."
"definitions.TimeRule.properties.Description.type" = "string"
"definitions.TimeRule.properties.Description.x-disallow-patch" = true
"definitions.TimeRule.properties.Description.x-disallow-post" = true
"definitions.TimeRule.properties.Description.x-disallow-put" = true
"definitions.TimeRule.properties.DisplayString.example" = "Frequency=300"
"definitions.TimeRule.properties.DisplayString.type" = "string"
"definitions.TimeRule.properties.DisplayString.x-disallow-patch" = true
"definitions.TimeRule.properties.DisplayString.x-disallow-post" = true
"definitions.TimeRule.properties.DisplayString.x-disallow-put" = true
"definitions.TimeRule.properties.EditorType.example" = "OSIsoft.AF.Time.TimeRule.PeriodicConfig"
"definitions.TimeRule.properties.EditorType.type" = "string"
"definitions.TimeRule.properties.EditorType.x-disallow-patch" = true
"definitions.TimeRule.properties.EditorType.x-disallow-post" = true
"definitions.TimeRule.properties.EditorType.x-disallow-put" = true
"definitions.TimeRule.properties.Id.example" = "4dd0b53c-2f18-11e6-80d8-00155d844304"
"definitions.TimeRule.properties.Id.format" = "uuid"
"definitions.TimeRule.properties.Id.type" = "string"
"definitions.TimeRule.properties.Id.x-disallow-patch" = true
"definitions.TimeRule.properties.Id.x-disallow-post" = true
"definitions.TimeRule.properties.Id.x-disallow-put" = true
"definitions.TimeRule.properties.IsConfigured.example" = true
"definitions.TimeRule.properties.IsConfigured.type" = "boolean"
"definitions.TimeRule.properties.IsConfigured.x-disallow-patch" = true
"definitions.TimeRule.properties.IsConfigured.x-disallow-post" = true
"definitions.TimeRule.properties.IsConfigured.x-disallow-put" = true
"definitions.TimeRule.properties.IsInitializing.example" = false
"definitions.TimeRule.properties.IsInitializing.type" = "boolean"
"definitions.TimeRule.properties.IsInitializing.x-disallow-patch" = true
"definitions.TimeRule.properties.IsInitializing.x-disallow-post" = true
"definitions.TimeRule.properties.IsInitializing.x-disallow-put" = true
"definitions.TimeRule.properties.Links.properties.Analysis.type" = "string"
"definitions.TimeRule.properties.Links.properties.Analysis.x-link-optional" = true
"definitions.TimeRule.properties.Links.properties.Analysis.x-link-path" = "analyses/{webId}"
"definitions.TimeRule.properties.Links.properties.AnalysisTemplate.type" = "string"
"definitions.TimeRule.properties.Links.properties.AnalysisTemplate.x-link-optional" = true
"definitions.TimeRule.properties.Links.properties.AnalysisTemplate.x-link-path" = "analysistemplates/{webId}"
"definitions.TimeRule.properties.Links.properties.PlugIn.type" = "string"
"definitions.TimeRule.properties.Links.properties.PlugIn.x-link-optional" = true
"definitions.TimeRule.properties.Links.properties.PlugIn.x-link-path" = "timeruleplugins/{webId}"
"definitions.TimeRule.properties.Links.properties.Self.type" = "string"
"definitions.TimeRule.properties.Links.properties.Self.x-link-optional" = false
"definitions.TimeRule.properties.Links.properties.Self.x-link-path" = "timerules/{webId}"
"definitions.TimeRule.properties.Links.type" = "object"
"definitions.TimeRule.properties.MergeDuplicatedItems.example" = false
"definitions.TimeRule.properties.MergeDuplicatedItems.type" = "boolean"
"definitions.TimeRule.properties.Name.example" = "Periodic"
"definitions.TimeRule.properties.Name.type" = "string"
"definitions.TimeRule.properties.Name.x-disallow-patch" = true
"definitions.TimeRule.properties.Name.x-disallow-post" = true
"definitions.TimeRule.properties.Name.x-disallow-put" = true
"definitions.TimeRule.properties.Path.example" = "\\\\MYSERVER\\MyDatabase\\MyElement\\Analyses[MyAnalysis]\\TimeRule"
"definitions.TimeRule.properties.Path.format" = "path"
"definitions.TimeRule.properties.Path.type" = "string"
"definitions.TimeRule.properties.Path.x-disallow-patch" = true
"definitions.TimeRule.properties.Path.x-disallow-post" = true
"definitions.TimeRule.properties.Path.x-disallow-put" = true
"definitions.TimeRule.properties.PlugInName.example" = "Periodic"
"definitions.TimeRule.properties.PlugInName.type" = "string"
"definitions.TimeRule.properties.PlugInName.x-disallow-patch" = true
"definitions.TimeRule.properties.PlugInName.x-disallow-post" = true
"definitions.TimeRule.properties.PlugInName.x-disallow-put" = true
"definitions.TimeRule.properties.WebId.example" = "w0xDqD5loBNH0erqeqJodtALAPLXQTRgv5hGA2AAVXYRDBAPLXQTRgv5hGA2AAVXYRDBAUkVTVFVOSVRcMEMzQjczQkYtMzc2NS00QkYyLTg3N0EtRjlENTE4MDFCNkQ0XEM5NzZDOTFDLUEyOEEtNENDMS05MTQ4LUFBRTNFRTM0RERFM1xBTkFMWVNFU1syRDNCODI1NS02OTZGLTQ1MUQtQjUwRC05REJBOEQ3RDFGODBdXFRJTUVSVUxF"
"definitions.TimeRule.properties.WebId.format" = "webid"
"definitions.TimeRule.properties.WebId.type" = "string"
"definitions.TimeRule.properties.WebId.x-disallow-patch" = true
"definitions.TimeRule.properties.WebId.x-disallow-post" = true
"definitions.TimeRule.properties.WebId.x-disallow-put" = true
"definitions.TimeRule.type" = "object"
"definitions.TimeRulePlugIn.properties.AssemblyFileName.example" = "OSIsoft.AF.Time.TimeRule.Periodic.dll"
"definitions.TimeRulePlugIn.properties.AssemblyFileName.type" = "string"
"definitions.TimeRulePlugIn.properties.AssemblyFileName.x-disallow-patch" = true
"definitions.TimeRulePlugIn.properties.AssemblyFileName.x-disallow-post" = true
"definitions.TimeRulePlugIn.properties.AssemblyFileName.x-disallow-put" = true
"definitions.TimeRulePlugIn.properties.AssemblyID.example" = "7a635b27-3c3c-4a5f-bba9-01f06e9e525b"
"definitions.TimeRulePlugIn.properties.AssemblyID.format" = "uuid"
"definitions.TimeRulePlugIn.properties.AssemblyID.type" = "string"
"definitions.TimeRulePlugIn.properties.AssemblyID.x-disallow-patch" = true
"definitions.TimeRulePlugIn.properties.AssemblyID.x-disallow-post" = true
"definitions.TimeRulePlugIn.properties.AssemblyID.x-disallow-put" = true
"definitions.TimeRulePlugIn.properties.AssemblyLoadProperties.example.length" = 1
"definitions.TimeRulePlugIn.properties.AssemblyLoadProperties.example[0]" = "None"
"definitions.TimeRulePlugIn.properties.AssemblyLoadProperties.items.type" = "string"
"definitions.TimeRulePlugIn.properties.AssemblyLoadProperties.type" = "array"
"definitions.TimeRulePlugIn.properties.AssemblyLoadProperties.x-disallow-patch" = true
"definitions.TimeRulePlugIn.properties.AssemblyLoadProperties.x-disallow-post" = true
"definitions.TimeRulePlugIn.properties.AssemblyLoadProperties.x-disallow-put" = true
"definitions.TimeRulePlugIn.properties.AssemblyTime.example" = "2016-05-25T14:01:07Z"
"definitions.TimeRulePlugIn.properties.AssemblyTime.format" = "date-time"
"definitions.TimeRulePlugIn.properties.AssemblyTime.type" = "string"
"definitions.TimeRulePlugIn.properties.AssemblyTime.x-disallow-patch" = true
"definitions.TimeRulePlugIn.properties.AssemblyTime.x-disallow-post" = true
"definitions.TimeRulePlugIn.properties.AssemblyTime.x-disallow-put" = true
"definitions.TimeRulePlugIn.properties.CompatibilityVersion.example" = 2.0
"definitions.TimeRulePlugIn.properties.CompatibilityVersion.format" = "int32"
"definitions.TimeRulePlugIn.properties.CompatibilityVersion.type" = "integer"
"definitions.TimeRulePlugIn.properties.CompatibilityVersion.x-disallow-patch" = true
"definitions.TimeRulePlugIn.properties.CompatibilityVersion.x-disallow-post" = true
"definitions.TimeRulePlugIn.properties.CompatibilityVersion.x-disallow-put" = true
"definitions.TimeRulePlugIn.properties.Description.example" = "Creates regular periodic time periods."
"definitions.TimeRulePlugIn.properties.Description.type" = "string"
"definitions.TimeRulePlugIn.properties.Description.x-disallow-patch" = true
"definitions.TimeRulePlugIn.properties.Description.x-disallow-post" = true
"definitions.TimeRulePlugIn.properties.Description.x-disallow-put" = true
"definitions.TimeRulePlugIn.properties.Id.example" = "adc23b8f-0657-4799-8f09-c4e0937fc7cc"
"definitions.TimeRulePlugIn.properties.Id.format" = "uuid"
"definitions.TimeRulePlugIn.properties.Id.type" = "string"
"definitions.TimeRulePlugIn.properties.Id.x-disallow-patch" = true
"definitions.TimeRulePlugIn.properties.Id.x-disallow-post" = true
"definitions.TimeRulePlugIn.properties.Id.x-disallow-put" = true
"definitions.TimeRulePlugIn.properties.IsBrowsable.example" = true
"definitions.TimeRulePlugIn.properties.IsBrowsable.type" = "boolean"
"definitions.TimeRulePlugIn.properties.IsBrowsable.x-disallow-patch" = true
"definitions.TimeRulePlugIn.properties.IsBrowsable.x-disallow-post" = true
"definitions.TimeRulePlugIn.properties.IsBrowsable.x-disallow-put" = true
"definitions.TimeRulePlugIn.properties.IsNonEditableConfig.example" = false
"definitions.TimeRulePlugIn.properties.IsNonEditableConfig.type" = "boolean"
"definitions.TimeRulePlugIn.properties.IsNonEditableConfig.x-disallow-patch" = true
"definitions.TimeRulePlugIn.properties.IsNonEditableConfig.x-disallow-post" = true
"definitions.TimeRulePlugIn.properties.IsNonEditableConfig.x-disallow-put" = true
"definitions.TimeRulePlugIn.properties.Links.properties.AssetServer.type" = "string"
"definitions.TimeRulePlugIn.properties.Links.properties.AssetServer.x-link-optional" = false
"definitions.TimeRulePlugIn.properties.Links.properties.AssetServer.x-link-path" = "assetservers/{webId}"
"definitions.TimeRulePlugIn.properties.Links.properties.Self.type" = "string"
"definitions.TimeRulePlugIn.properties.Links.properties.Self.x-link-optional" = false
"definitions.TimeRulePlugIn.properties.Links.properties.Self.x-link-path" = "timeruleplugins/{webId}"
"definitions.TimeRulePlugIn.properties.Links.type" = "object"
"definitions.TimeRulePlugIn.properties.LoadedAssemblyTime.example" = "1970-01-01T00:00:00Z"
"definitions.TimeRulePlugIn.properties.LoadedAssemblyTime.format" = "date-time"
"definitions.TimeRulePlugIn.properties.LoadedAssemblyTime.type" = "string"
"definitions.TimeRulePlugIn.properties.LoadedAssemblyTime.x-disallow-patch" = true
"definitions.TimeRulePlugIn.properties.LoadedAssemblyTime.x-disallow-post" = true
"definitions.TimeRulePlugIn.properties.LoadedAssemblyTime.x-disallow-put" = true
"definitions.TimeRulePlugIn.properties.LoadedVersion.example" = ""
"definitions.TimeRulePlugIn.properties.LoadedVersion.type" = "string"
"definitions.TimeRulePlugIn.properties.LoadedVersion.x-disallow-patch" = true
"definitions.TimeRulePlugIn.properties.LoadedVersion.x-disallow-post" = true
"definitions.TimeRulePlugIn.properties.LoadedVersion.x-disallow-put" = true
"definitions.TimeRulePlugIn.properties.Name.example" = "Periodic"
"definitions.TimeRulePlugIn.properties.Name.type" = "string"
"definitions.TimeRulePlugIn.properties.Name.x-disallow-patch" = true
"definitions.TimeRulePlugIn.properties.Name.x-disallow-post" = true
"definitions.TimeRulePlugIn.properties.Name.x-disallow-put" = true
"definitions.TimeRulePlugIn.properties.Path.example" = "\\\\MYSERVER\\PlugInsTimeRule[Periodic]"
"definitions.TimeRulePlugIn.properties.Path.format" = "path"
"definitions.TimeRulePlugIn.properties.Path.type" = "string"
"definitions.TimeRulePlugIn.properties.Path.x-disallow-patch" = true
"definitions.TimeRulePlugIn.properties.Path.x-disallow-post" = true
"definitions.TimeRulePlugIn.properties.Path.x-disallow-put" = true
"definitions.TimeRulePlugIn.properties.Version.example" = "2.8.5.7552"
"definitions.TimeRulePlugIn.properties.Version.type" = "string"
"definitions.TimeRulePlugIn.properties.Version.x-disallow-patch" = true
"definitions.TimeRulePlugIn.properties.Version.x-disallow-post" = true
"definitions.TimeRulePlugIn.properties.Version.x-disallow-put" = true
"definitions.TimeRulePlugIn.properties.WebId.example" = "W0NxzXSxtlKkGzAhZfHOB-KAjzvCrVcGmUePCcTgk3_HzAUEhMQUZTMDRcUExVR0lOU1RJTUVSVUxFW1BFUklPRElDXQ"
"definitions.TimeRulePlugIn.properties.WebId.format" = "webid"
"definitions.TimeRulePlugIn.properties.WebId.type" = "string"
"definitions.TimeRulePlugIn.properties.WebId.x-disallow-patch" = true
"definitions.TimeRulePlugIn.properties.WebId.x-disallow-post" = true
"definitions.TimeRulePlugIn.properties.WebId.x-disallow-put" = true
"definitions.TimeRulePlugIn.type" = "object"
"definitions.TimedValue.properties.Exception.$ref" = "#/definitions/Errors"
"definitions.TimedValue.properties.Exception.x-disallow-patch" = true
"definitions.TimedValue.properties.Exception.x-disallow-post" = true
"definitions.TimedValue.properties.Exception.x-disallow-put" = true
"definitions.TimedValue.properties.Good.example" = true
"definitions.TimedValue.properties.Good.type" = "boolean"
"definitions.TimedValue.properties.Questionable.example" = false
"definitions.TimedValue.properties.Questionable.type" = "boolean"
"definitions.TimedValue.properties.Substituted.example" = false
"definitions.TimedValue.properties.Substituted.type" = "boolean"
"definitions.TimedValue.properties.Substituted.x-disallow-post" = true
"definitions.TimedValue.properties.Timestamp.example" = "2014-07-22T14:00:00Z"
"definitions.TimedValue.properties.Timestamp.format" = "date-time"
"definitions.TimedValue.properties.Timestamp.type" = "string"
"definitions.TimedValue.properties.UnitsAbbreviation.example" = "m"
"definitions.TimedValue.properties.UnitsAbbreviation.type" = "string"
"definitions.TimedValue.properties.Value.example" = 12.3
"definitions.TimedValue.properties.Value.type" = "object"
"definitions.TimedValue.type" = "object"
"definitions.TimedValues.properties.Items.items.$ref" = "#/definitions/TimedValue"
"definitions.TimedValues.properties.Items.type" = "array"
"definitions.TimedValues.properties.Items.x-required-post" = true
"definitions.TimedValues.properties.UnitsAbbreviation.type" = "string"
"definitions.TimedValues.properties.UnitsAbbreviation.x-disallow-post" = true
"definitions.TimedValues.type" = "object"
"definitions.Unit.properties.Abbreviation.example" = "Hz"
"definitions.Unit.properties.Abbreviation.type" = "string"
"definitions.Unit.properties.Abbreviation.x-required-post" = true
"definitions.Unit.properties.Description.example" = "Hertz Unit"
"definitions.Unit.properties.Description.type" = "string"
"definitions.Unit.properties.Factor.example" = 1.0
"definitions.Unit.properties.Factor.format" = "double"
"definitions.Unit.properties.Factor.type" = "number"
"definitions.Unit.properties.Factor.x-disallow-patch" = true
"definitions.Unit.properties.Factor.x-disallow-post" = true
"definitions.Unit.properties.Factor.x-disallow-put" = true
"definitions.Unit.properties.Id.example" = "609049B3-108A-4A9A-94B3-359AA092C5A0"
"definitions.Unit.properties.Id.format" = "uuid"
"definitions.Unit.properties.Id.type" = "string"
"definitions.Unit.properties.Id.x-disallow-patch" = true
"definitions.Unit.properties.Id.x-disallow-post" = true
"definitions.Unit.properties.Id.x-disallow-put" = true
"definitions.Unit.properties.Links.properties.Class.type" = "string"
"definitions.Unit.properties.Links.properties.Class.x-link-optional" = false
"definitions.Unit.properties.Links.properties.Class.x-link-path" = "unitclasses/{webId}"
"definitions.Unit.properties.Links.properties.ReferenceUnit.type" = "string"
"definitions.Unit.properties.Links.properties.ReferenceUnit.x-link-optional" = true
"definitions.Unit.properties.Links.properties.ReferenceUnit.x-link-path" = "units/{webId}"
"definitions.Unit.properties.Links.properties.Self.type" = "string"
"definitions.Unit.properties.Links.properties.Self.x-link-optional" = false
"definitions.Unit.properties.Links.properties.Self.x-link-path" = "units/{webId}"
"definitions.Unit.properties.Links.type" = "object"
"definitions.Unit.properties.Name.example" = "Hertz"
"definitions.Unit.properties.Name.type" = "string"
"definitions.Unit.properties.Name.x-required-post" = true
"definitions.Unit.properties.Offset.example" = 0.0
"definitions.Unit.properties.Offset.format" = "double"
"definitions.Unit.properties.Offset.type" = "number"
"definitions.Unit.properties.Offset.x-disallow-patch" = true
"definitions.Unit.properties.Offset.x-disallow-post" = true
"definitions.Unit.properties.Offset.x-disallow-put" = true
"definitions.Unit.properties.Path.example" = "\\\\MyServer\\UOMDatabase\\Hertz"
"definitions.Unit.properties.Path.format" = "path"
"definitions.Unit.properties.Path.type" = "string"
"definitions.Unit.properties.Path.x-disallow-patch" = true
"definitions.Unit.properties.Path.x-disallow-post" = true
"definitions.Unit.properties.Path.x-disallow-put" = true
"definitions.Unit.properties.ReferenceFactor.example" = 1.0
"definitions.Unit.properties.ReferenceFactor.format" = "double"
"definitions.Unit.properties.ReferenceFactor.type" = "number"
"definitions.Unit.properties.ReferenceOffset.example" = 0.0
"definitions.Unit.properties.ReferenceOffset.format" = "double"
"definitions.Unit.properties.ReferenceOffset.type" = "number"
"definitions.Unit.properties.ReferenceUnitAbbreviation.example" = ""
"definitions.Unit.properties.ReferenceUnitAbbreviation.type" = "string"
"definitions.Unit.properties.WebId.example" = "u0DqD5loBNH0eqreqJodtALAR5X5Ku22eUqbeawQJoWIdAUkVVTFVOSVRcVU9NFREUQUJBU0VcZEVSVFo"
"definitions.Unit.properties.WebId.format" = "webid"
"definitions.Unit.properties.WebId.type" = "string"
"definitions.Unit.properties.WebId.x-disallow-patch" = true
"definitions.Unit.properties.WebId.x-disallow-post" = true
"definitions.Unit.properties.WebId.x-disallow-put" = true
"definitions.Unit.type" = "object"
"definitions.UnitClass.properties.CanonicalUnitAbbreviation.example" = "W"
"definitions.UnitClass.properties.CanonicalUnitAbbreviation.type" = "string"
"definitions.UnitClass.properties.CanonicalUnitAbbreviation.x-required-post" = true
"definitions.UnitClass.properties.CanonicalUnitName.example" = "watt"
"definitions.UnitClass.properties.CanonicalUnitName.type" = "string"
"definitions.UnitClass.properties.CanonicalUnitName.x-required-post" = true
"definitions.UnitClass.properties.Description.example" = "Power Unit Class"
"definitions.UnitClass.properties.Description.type" = "string"
"definitions.UnitClass.properties.Id.example" = "09FBCC8A-796D-4568-9287-C8B7BC5EA129"
"definitions.UnitClass.properties.Id.format" = "uuid"
"definitions.UnitClass.properties.Id.type" = "string"
"definitions.UnitClass.properties.Id.x-disallow-patch" = true
"definitions.UnitClass.properties.Id.x-disallow-post" = true
"definitions.UnitClass.properties.Id.x-disallow-put" = true
"definitions.UnitClass.properties.Links.properties.AssetServer.type" = "string"
"definitions.UnitClass.properties.Links.properties.AssetServer.x-link-optional" = false
"definitions.UnitClass.properties.Links.properties.AssetServer.x-link-path" = "assetservers/{webId}"
"definitions.UnitClass.properties.Links.properties.CanonicalUnit.type" = "string"
"definitions.UnitClass.properties.Links.properties.CanonicalUnit.x-link-optional" = false
"definitions.UnitClass.properties.Links.properties.CanonicalUnit.x-link-path" = "unitclasses/{webId}/canonicalunit"
"definitions.UnitClass.properties.Links.properties.Self.type" = "string"
"definitions.UnitClass.properties.Links.properties.Self.x-link-optional" = false
"definitions.UnitClass.properties.Links.properties.Self.x-link-path" = "unitclasses/{webId}"
"definitions.UnitClass.properties.Links.properties.Units.type" = "string"
"definitions.UnitClass.properties.Links.properties.Units.x-link-optional" = false
"definitions.UnitClass.properties.Links.properties.Units.x-link-path" = "unitclasses/{webId}/units"
"definitions.UnitClass.properties.Links.type" = "object"
"definitions.UnitClass.properties.Name.example" = "Power"
"definitions.UnitClass.properties.Name.type" = "string"
"definitions.UnitClass.properties.Name.x-required-post" = true
"definitions.UnitClass.properties.Path.example" = "\\\\MyServer\\UOMDatabase\\UOMClasses[Power]"
"definitions.UnitClass.properties.Path.format" = "path"
"definitions.UnitClass.properties.Path.type" = "string"
"definitions.UnitClass.properties.Path.x-disallow-patch" = true
"definitions.UnitClass.properties.Path.x-disallow-post" = true
"definitions.UnitClass.properties.Path.x-disallow-put" = true
"definitions.UnitClass.properties.WebId.example" = "K0DqD5loBNH0erqeqJodtALAEYKC2hx4DU2jygG2_AT33gVUkTVFVOSVRcVU9NREFUQUJUB0VcVU9NQ0xBU1NFU1tRVFUOVElUWV2"
"definitions.UnitClass.properties.WebId.format" = "webid"
"definitions.UnitClass.properties.WebId.type" = "string"
"definitions.UnitClass.properties.WebId.x-disallow-patch" = true
"definitions.UnitClass.properties.WebId.x-disallow-post" = true
"definitions.UnitClass.properties.WebId.x-disallow-put" = true
"definitions.UnitClass.type" = "object"
"definitions.UserInfo.properties.IdentityType.example" = "WindowsIdentity"
"definitions.UserInfo.properties.IdentityType.type" = "string"
"definitions.UserInfo.properties.IdentityType.x-disallow-patch" = true
"definitions.UserInfo.properties.IdentityType.x-disallow-post" = true
"definitions.UserInfo.properties.IdentityType.x-disallow-put" = true
"definitions.UserInfo.properties.ImpersonationLevel.example" = "None"
"definitions.UserInfo.properties.ImpersonationLevel.type" = "string"
"definitions.UserInfo.properties.ImpersonationLevel.x-disallow-patch" = true
"definitions.UserInfo.properties.ImpersonationLevel.x-disallow-post" = true
"definitions.UserInfo.properties.ImpersonationLevel.x-disallow-put" = true
"definitions.UserInfo.properties.IsAuthenticated.example" = true
"definitions.UserInfo.properties.IsAuthenticated.type" = "boolean"
"definitions.UserInfo.properties.IsAuthenticated.x-disallow-patch" = true
"definitions.UserInfo.properties.IsAuthenticated.x-disallow-post" = true
"definitions.UserInfo.properties.IsAuthenticated.x-disallow-put" = true
"definitions.UserInfo.properties.Name.example" = "MyDomain\\Username"
"definitions.UserInfo.properties.Name.type" = "string"
"definitions.UserInfo.properties.Name.x-disallow-patch" = true
"definitions.UserInfo.properties.Name.x-disallow-post" = true
"definitions.UserInfo.properties.Name.x-disallow-put" = true
"definitions.UserInfo.properties.SID.example" = "S-1-5-21-2083424470-1893017325-1469799231-71366"
"definitions.UserInfo.properties.SID.format" = "sid"
"definitions.UserInfo.properties.SID.type" = "string"
"definitions.UserInfo.properties.SID.x-disallow-patch" = true
"definitions.UserInfo.properties.SID.x-disallow-post" = true
"definitions.UserInfo.properties.SID.x-disallow-put" = true
"definitions.UserInfo.type" = "object"
"definitions.Value.properties.Exception.$ref" = "#/definitions/Errors"
"definitions.Value.properties.Exception.x-disallow-patch" = true
"definitions.Value.properties.Exception.x-disallow-post" = true
"definitions.Value.properties.Exception.x-disallow-put" = true
"definitions.Value.properties.Value.example" = 12.3
"definitions.Value.properties.Value.type" = "object"
"definitions.Value.type" = "object"
"definitions.Version.properties.Build.example" = "201"
"definitions.Version.properties.Build.type" = "string"
"definitions.Version.properties.Build.x-disallow-patch" = true
"definitions.Version.properties.Build.x-disallow-post" = true
"definitions.Version.properties.Build.x-disallow-put" = true
"definitions.Version.properties.FullVersion.example" = "1.8.0.201"
"definitions.Version.properties.FullVersion.type" = "string"
"definitions.Version.properties.FullVersion.x-disallow-patch" = true
"definitions.Version.properties.FullVersion.x-disallow-post" = true
"definitions.Version.properties.FullVersion.x-disallow-put" = true
"definitions.Version.properties.MajorMinorRevision.example" = "1.8.0"
"definitions.Version.properties.MajorMinorRevision.type" = "string"
"definitions.Version.properties.MajorMinorRevision.x-disallow-patch" = true
"definitions.Version.properties.MajorMinorRevision.x-disallow-post" = true
"definitions.Version.properties.MajorMinorRevision.x-disallow-put" = true
"definitions.Version.type" = "object"
host = "devdata.osisoft.com"
"info.contact.email" = "techsupport@osisoft.com"
"info.contact.name" = "OSIsoft, LLC."
"info.contact.url" = "https://techsupport.osisoft.com/"
"info.description" = "Swagger Spec file that describes PI Web API"
"info.license.name" = "Apache 2.0 License"
"info.license.url" = "http://tempuri.org/license"
"info.termsOfService" = "https://pisquare.osisoft.com/docs/DOC-1105"
"info.title" = "PI Web API 2017 Swagger Spec"
"info.version" = "1.9.0.266"
"info.x-apisguru-categories.length" = 1
"info.x-apisguru-categories[0]" = "enterprise"
"info.x-logo.backgroundColor" = "#FFFFFF"
"info.x-logo.url" = "https://api.apis.guru/v2/cache/logo/https_pbs.twimg.com_profile_images_530511270303129600_zaaVnH1U_400x400.jpeg"
"info.x-origin.length" = 1
"info.x-origin[0].format" = "swagger"
"info.x-origin[0].url" = "https://devdata.osisoft.com/piwebapi/help/specification"
"info.x-origin[0].version" = "2.0"
"info.x-preferred" = true
"info.x-providerName" = "osisoft.com"
"paths./.get.consumes.length" = 0
"paths./.get.deprecated" = false
"paths./.get.operationId" = "Home_Get"
"paths./.get.parameters.length" = 0
"paths./.get.responses.200.description" = "Links to top level collections and system information."
"paths./.get.responses.200.schema.$ref" = "#/definitions/Landing"
"paths./.get.summary" = "Get top level links for this PI System Web API instance."
"paths./.get.tags.length" = 1
"paths./.get.tags[0]" = "Home"
"paths./analyses.get.consumes.length" = 0
"paths./analyses.get.deprecated" = false
"paths./analyses.get.description" = "This method returns an Analysis based on the hierarchical path associated with it, and should be used when a path has been received from a separate part of the PI System for use in the PI Web API. Users should primarily search with the WebID when available."
"paths./analyses.get.operationId" = "Analysis_GetByPath"
"paths./analyses.get.parameters.length" = 2
"paths./analyses.get.parameters[0].description" = "The path to the Analysis."
"paths./analyses.get.parameters[0].in" = "query"
"paths./analyses.get.parameters[0].name" = "path"
"paths./analyses.get.parameters[0].required" = true
"paths./analyses.get.parameters[0].type" = "string"
"paths./analyses.get.parameters[1].description" = "List of fields to be returned in the response, separated by semicolons (;). If this parameter is not specified, all available fields will be returned."
"paths./analyses.get.parameters[1].in" = "query"
"paths./analyses.get.parameters[1].name" = "selectedFields"
"paths./analyses.get.parameters[1].required" = false
"paths./analyses.get.parameters[1].type" = "string"
"paths./analyses.get.responses.200.description" = "The specified Analysis."
"paths./analyses.get.responses.200.schema.$ref" = "#/definitions/Analysis"
"paths./analyses.get.summary" = "Retrieve an Analysis by path."
"paths./analyses.get.tags.length" = 1
"paths./analyses.get.tags[0]" = "Analysis"
"paths./analyses/{webId}.delete.consumes.length" = 0
"paths./analyses/{webId}.delete.deprecated" = false
"paths./analyses/{webId}.delete.operationId" = "Analysis_Delete"
"paths./analyses/{webId}.delete.parameters.length" = 1
"paths./analyses/{webId}.delete.parameters[0].description" = "The ID of the Analysis to delete."
"paths./analyses/{webId}.delete.parameters[0].in" = "path"
"paths./analyses/{webId}.delete.parameters[0].name" = "webId"
"paths./analyses/{webId}.delete.parameters[0].required" = true
"paths./analyses/{webId}.delete.parameters[0].type" = "string"
"paths./analyses/{webId}.delete.responses.204.description" = "The Analysis was deleted."
"paths./analyses/{webId}.delete.summary" = "Delete an Analysis."
"paths./analyses/{webId}.delete.tags.length" = 1
"paths./analyses/{webId}.delete.tags[0]" = "Analysis"
"paths./analyses/{webId}.get.consumes.length" = 0
"paths./analyses/{webId}.get.deprecated" = false
"paths./analyses/{webId}.get.operationId" = "Analysis_Get"
"paths./analyses/{webId}.get.parameters.length" = 2
"paths./analyses/{webId}.get.parameters[0].description" = "The ID of the Analysis."
"paths./analyses/{webId}.get.parameters[0].in" = "path"
"paths./analyses/{webId}.get.parameters[0].name" = "webId"
"paths./analyses/{webId}.get.parameters[0].required" = true
"paths./analyses/{webId}.get.parameters[0].type" = "string"
"paths./analyses/{webId}.get.parameters[1].description" = "List of fields to be returned in the response, separated by semicolons (;). If this parameter is not specified, all available fields will be returned."
"paths./analyses/{webId}.get.parameters[1].in" = "query"
"paths./analyses/{webId}.get.parameters[1].name" = "selectedFields"
"paths./analyses/{webId}.get.parameters[1].required" = false
"paths./analyses/{webId}.get.parameters[1].type" = "string"
"paths./analyses/{webId}.get.responses.200.description" = "The specified Analysis."
"paths./analyses/{webId}.get.responses.200.schema.$ref" = "#/definitions/Analysis"
"paths./analyses/{webId}.get.summary" = "Retrieve an Analysis."
"paths./analyses/{webId}.get.tags.length" = 1
"paths./analyses/{webId}.get.tags[0]" = "Analysis"
"paths./analyses/{webId}.patch.consumes.length" = 2
"paths./analyses/{webId}.patch.consumes[0]" = "application/json"
"paths./analyses/{webId}.patch.consumes[1]" = "text/json"
"paths./analyses/{webId}.patch.deprecated" = false
"paths./analyses/{webId}.patch.operationId" = "Analysis_Update"
"paths./analyses/{webId}.patch.parameters.length" = 2
"paths./analyses/{webId}.patch.parameters[0].description" = "The ID of the Analysis to update."
"paths./analyses/{webId}.patch.parameters[0].in" = "path"
"paths./analyses/{webId}.patch.parameters[0].name" = "webId"
"paths./analyses/{webId}.patch.parameters[0].required" = true
"paths./analyses/{webId}.patch.parameters[0].type" = "string"
"paths./analyses/{webId}.patch.parameters[1].description" = "A partial Analysis containing the desired changes."
"paths./analyses/{webId}.patch.parameters[1].in" = "body"
"paths./analyses/{webId}.patch.parameters[1].name" = "analysis"
"paths./analyses/{webId}.patch.parameters[1].required" = true
"paths./analyses/{webId}.patch.parameters[1].schema.$ref" = "#/definitions/Analysis"
"paths./analyses/{webId}.patch.responses.204.description" = "The Analysis was updated."
"paths./analyses/{webId}.patch.summary" = "Update an Analysis."
"paths./analyses/{webId}.patch.tags.length" = 1
"paths./analyses/{webId}.patch.tags[0]" = "Analysis"
"paths./analyses/{webId}/categories.get.consumes.length" = 0
"paths./analyses/{webId}/categories.get.deprecated" = false
"paths./analyses/{webId}/categories.get.operationId" = "Analysis_GetCategories"
"paths./analyses/{webId}/categories.get.parameters.length" = 2
"paths./analyses/{webId}/categories.get.parameters[0].description" = "The ID of the Analysis."
"paths./analyses/{webId}/categories.get.parameters[0].in" = "path"
"paths./analyses/{webId}/categories.get.parameters[0].name" = "webId"
"paths./analyses/{webId}/categories.get.parameters[0].required" = true
"paths./analyses/{webId}/categories.get.parameters[0].type" = "string"
"paths./analyses/{webId}/categories.get.parameters[1].description" = "List of fields to be returned in the response, separated by semicolons (;). If this parameter is not specified, all available fields will be returned."
"paths./analyses/{webId}/categories.get.parameters[1].in" = "query"
"paths./analyses/{webId}/categories.get.parameters[1].name" = "selectedFields"
"paths./analyses/{webId}/categories.get.parameters[1].required" = false
"paths./analyses/{webId}/categories.get.parameters[1].type" = "string"
"paths./analyses/{webId}/categories.get.responses.200.description" = "A list of categories."
"paths./analyses/{webId}/categories.get.responses.200.schema.$ref" = "#/definitions/Items[AnalysisCategory]"
"paths./analyses/{webId}/categories.get.summary" = "Get an Analysis' categories."
"paths./analyses/{webId}/categories.get.tags.length" = 1
"paths./analyses/{webId}/categories.get.tags[0]" = "Analysis"
"paths./analyses/{webId}/security.get.consumes.length" = 0
"paths./analyses/{webId}/security.get.deprecated" = false
"paths./analyses/{webId}/security.get.operationId" = "Analysis_GetSecurity"
"paths./analyses/{webId}/security.get.parameters.length" = 4
"paths./analyses/{webId}/security.get.parameters[0].description" = "The ID of the Analysis for the security to be checked."
"paths./analyses/{webId}/security.get.parameters[0].in" = "path"
"paths./analyses/{webId}/security.get.parameters[0].name" = "webId"
"paths./analyses/{webId}/security.get.parameters[0].required" = true
"paths./analyses/{webId}/security.get.parameters[0].type" = "string"
"paths./analyses/{webId}/security.get.parameters[1].collectionFormat" = "multi"
"paths./analyses/{webId}/security.get.parameters[1].description" = "The user identity for the security information to be checked. Multiple security identities may be specified with multiple instances of the parameter. If the parameter is not specified, only the current user's security rights will be returned."
"paths./analyses/{webId}/security.get.parameters[1].in" = "query"
"paths./analyses/{webId}/security.get.parameters[1].items.type" = "string"
"paths./analyses/{webId}/security.get.parameters[1].name" = "userIdentity"
"paths./analyses/{webId}/security.get.parameters[1].required" = true
"paths./analyses/{webId}/security.get.parameters[1].type" = "array"
"paths./analyses/{webId}/security.get.parameters[2].description" = "Indicates if the security cache should be refreshed before getting security information. The default is 'false'."
"paths./analyses/{webId}/security.get.parameters[2].in" = "query"
"paths./analyses/{webId}/security.get.parameters[2].name" = "forceRefresh"
"paths./analyses/{webId}/security.get.parameters[2].required" = false
"paths./analyses/{webId}/security.get.parameters[2].type" = "boolean"
"paths./analyses/{webId}/security.get.parameters[3].description" = "List of fields to be returned in the response, separated by semicolons (;). If this parameter is not specified, all available fields will be returned."
"paths./analyses/{webId}/security.get.parameters[3].in" = "query"
"paths./analyses/{webId}/security.get.parameters[3].name" = "selectedFields"
"paths./analyses/{webId}/security.get.parameters[3].required" = false
"paths./analyses/{webId}/security.get.parameters[3].type" = "string"
"paths./analyses/{webId}/security.get.responses.200.description" = "Security rights."
"paths./analyses/{webId}/security.get.responses.200.schema.$ref" = "#/definitions/Items[SecurityRights]"
"paths./analyses/{webId}/security.get.responses.400.description" = "An invalid or local account is specified as the user identity."
"paths./analyses/{webId}/security.get.responses.400.schema.$ref" = "#/definitions/Errors"
"paths./analyses/{webId}/security.get.responses.401.description" = "Access denied for the specified user identity."
"paths./analyses/{webId}/security.get.responses.401.schema.$ref" = "#/definitions/Errors"
"paths./analyses/{webId}/security.get.responses.409.description" = "Unsupported when using Anonymous authentication method."
"paths./analyses/{webId}/security.get.responses.409.schema.$ref" = "#/definitions/Errors"
"paths./analyses/{webId}/security.get.responses.502.description" = "Failed to retrieve the specified user identity."
"paths./analyses/{webId}/security.get.responses.502.schema.$ref" = "#/definitions/Errors"
"paths./analyses/{webId}/security.get.summary" = "Get the security information of the specified security item associated with the Analysis for a specified user."
"paths./analyses/{webId}/security.get.tags.length" = 1
"paths./analyses/{webId}/security.get.tags[0]" = "Analysis"
"paths./analyses/{webId}/securityentries.get.consumes.length" = 0
"paths./analyses/{webId}/securityentries.get.deprecated" = false
"paths./analyses/{webId}/securityentries.get.operationId" = "Analysis_GetSecurityEntries"
"paths./analyses/{webId}/securityentries.get.parameters.length" = 3
"paths./analyses/{webId}/securityentries.get.parameters[0].description" = "The ID of the analysis."
"paths./analyses/{webId}/securityentries.get.parameters[0].in" = "path"
"paths./analyses/{webId}/securityentries.get.parameters[0].name" = "webId"
"paths./analyses/{webId}/securityentries.get.parameters[0].required" = true
"paths./analyses/{webId}/securityentries.get.parameters[0].type" = "string"
"paths./analyses/{webId}/securityentries.get.parameters[1].description" = "The name query string used for filtering security entries. The default is no filter."
"paths./analyses/{webId}/securityentries.get.parameters[1].in" = "query"
"paths./analyses/{webId}/securityentries.get.parameters[1].name" = "nameFilter"
"paths./analyses/{webId}/securityentries.get.parameters[1].required" = false
"paths./analyses/{webId}/securityentries.get.parameters[1].type" = "string"
"paths./analyses/{webId}/securityentries.get.parameters[2].description" = "List of fields to be returned in the response, separated by semicolons (;). If this parameter is not specified, all available fields will be returned."
"paths./analyses/{webId}/securityentries.get.parameters[2].in" = "query"
"paths./analyses/{webId}/securityentries.get.parameters[2].name" = "selectedFields"
"paths./analyses/{webId}/securityentries.get.parameters[2].required" = false
"paths./analyses/{webId}/securityentries.get.parameters[2].type" = "string"
"paths./analyses/{webId}/securityentries.get.responses.200.description" = "A list of security entries matching the specified condition."
"paths./analyses/{webId}/securityentries.get.responses.200.schema.$ref" = "#/definitions/Items[SecurityEntry]"
"paths./analyses/{webId}/securityentries.get.summary" = "Retrieve the security entries associated with the analysis based on the specified criteria. By default, all security entries for this analysis are returned."
"paths./analyses/{webId}/securityentries.get.tags.length" = 1
"paths./analyses/{webId}/securityentries.get.tags[0]" = "Analysis"
"paths./analyses/{webId}/securityentries.post.consumes.length" = 2
"paths./analyses/{webId}/securityentries.post.consumes[0]" = "application/json"
"paths./analyses/{webId}/securityentries.post.consumes[1]" = "text/json"
"paths./analyses/{webId}/securityentries.post.deprecated" = false
"paths./analyses/{webId}/securityentries.post.operationId" = "Analysis_CreateSecurityEntry"
"paths./analyses/{webId}/securityentries.post.parameters.length" = 3
"paths./analyses/{webId}/securityentries.post.parameters[0].description" = "The ID of the analysis, where the security entry will be created."
"paths./analyses/{webId}/securityentries.post.parameters[0].in" = "path"
"paths./analyses/{webId}/securityentries.post.parameters[0].name" = "webId"
"paths./analyses/{webId}/securityentries.post.parameters[0].required" = true
"paths./analyses/{webId}/securityentries.post.parameters[0].type" = "string"
"paths./analyses/{webId}/securityentries.post.parameters[1].description" = "The new security entry definition. The full list of allow and deny rights must be supplied."
"paths./analyses/{webId}/securityentries.post.parameters[1].in" = "body"
"paths./analyses/{webId}/securityentries.post.parameters[1].name" = "securityEntry"
"paths./analyses/{webId}/securityentries.post.parameters[1].required" = true
"paths./analyses/{webId}/securityentries.post.parameters[1].schema.$ref" = "#/definitions/SecurityEntry"
"paths./analyses/{webId}/securityentries.post.parameters[2].description" = "If false, the new access permissions are only applied to the associated object. If true, the access permissions of children with any parent-child reference types will change when the permissions on the primary parent change."
"paths./analyses/{webId}/securityentries.post.parameters[2].in" = "query"
"paths./analyses/{webId}/securityentries.post.parameters[2].name" = "applyToChildren"
"paths./analyses/{webId}/securityentries.post.parameters[2].required" = false
"paths./analyses/{webId}/securityentries.post.parameters[2].type" = "boolean"
"paths./analyses/{webId}/securityentries.post.responses.201.description" = "The security entry was created. The response's Location header is a link to the security entry."
"paths./analyses/{webId}/securityentries.post.summary" = "Create a security entry owned by the analysis."
"paths./analyses/{webId}/securityentries.post.tags.length" = 1
"paths./analyses/{webId}/securityentries.post.tags[0]" = "Analysis"
"paths./analyses/{webId}/securityentries/{name}.delete.consumes.length" = 0
"paths./analyses/{webId}/securityentries/{name}.delete.deprecated" = false
"paths./analyses/{webId}/securityentries/{name}.delete.operationId" = "Analysis_DeleteSecurityEntry"
"paths./analyses/{webId}/securityentries/{name}.delete.parameters.length" = 3
"paths./analyses/{webId}/securityentries/{name}.delete.parameters[0].description" = "The name of the security entry. For every backslash character (\\) in the security entry name, replace with asterisk (*). As an example, use domain*username instead of domain\\username."
"paths./analyses/{webId}/securityentries/{name}.delete.parameters[0].in" = "path"
"paths./analyses/{webId}/securityentries/{name}.delete.parameters[0].name" = "name"
"paths./analyses/{webId}/securityentries/{name}.delete.parameters[0].required" = true
"paths./analyses/{webId}/securityentries/{name}.delete.parameters[0].type" = "string"
"paths./analyses/{webId}/securityentries/{name}.delete.parameters[1].description" = "The ID of the analysis, where the security entry will be deleted."
"paths./analyses/{webId}/securityentries/{name}.delete.parameters[1].in" = "path"
"paths./analyses/{webId}/securityentries/{name}.delete.parameters[1].name" = "webId"
"paths./analyses/{webId}/securityentries/{name}.delete.parameters[1].required" = true
"paths./analyses/{webId}/securityentries/{name}.delete.parameters[1].type" = "string"
"paths./analyses/{webId}/securityentries/{name}.delete.parameters[2].description" = "If false, the new access permissions are only applied to the associated object. If true, the access permissions of children with any parent-child reference types will change when the permissions on the primary parent change."
"paths./analyses/{webId}/securityentries/{name}.delete.parameters[2].in" = "query"
"paths./analyses/{webId}/securityentries/{name}.delete.parameters[2].name" = "applyToChildren"
"paths./analyses/{webId}/securityentries/{name}.delete.parameters[2].required" = false
"paths./analyses/{webId}/securityentries/{name}.delete.parameters[2].type" = "boolean"
"paths./analyses/{webId}/securityentries/{name}.delete.responses.204.description" = "The security entry was deleted."
"paths./analyses/{webId}/securityentries/{name}.delete.summary" = "Delete a security entry owned by the analysis."
"paths./analyses/{webId}/securityentries/{name}.delete.tags.length" = 1
"paths./analyses/{webId}/securityentries/{name}.delete.tags[0]" = "Analysis"
"paths./analyses/{webId}/securityentries/{name}.get.consumes.length" = 0
"paths./analyses/{webId}/securityentries/{name}.get.deprecated" = false
"paths./analyses/{webId}/securityentries/{name}.get.operationId" = "Analysis_GetSecurityEntryByName"
"paths./analyses/{webId}/securityentries/{name}.get.parameters.length" = 3
"paths./analyses/{webId}/securityentries/{name}.get.parameters[0].description" = "The name of the security entry. For every backslash character (\\) in the security entry name, replace with asterisk (*). As an example, use domain*username instead of domain\\username."
"paths./analyses/{webId}/securityentries/{name}.get.parameters[0].in" = "path"
"paths./analyses/{webId}/securityentries/{name}.get.parameters[0].name" = "name"
"paths./analyses/{webId}/securityentries/{name}.get.parameters[0].required" = true
"paths./analyses/{webId}/securityentries/{name}.get.parameters[0].type" = "string"
"paths./analyses/{webId}/securityentries/{name}.get.parameters[1].description" = "The ID of the analysis."
"paths./analyses/{webId}/securityentries/{name}.get.parameters[1].in" = "path"
"paths./analyses/{webId}/securityentries/{name}.get.parameters[1].name" = "webId"
"paths./analyses/{webId}/securityentries/{name}.get.parameters[1].required" = true
"paths./analyses/{webId}/securityentries/{name}.get.parameters[1].type" = "string"
"paths./analyses/{webId}/securityentries/{name}.get.parameters[2].description" = "List of fields to be returned in the response, separated by semicolons (;). If this parameter is not specified, all available fields will be returned."
"paths./analyses/{webId}/securityentries/{name}.get.parameters[2].in" = "query"
"paths./analyses/{webId}/securityentries/{name}.get.parameters[2].name" = "selectedFields"
"paths./analyses/{webId}/securityentries/{name}.get.parameters[2].required" = false
"paths./analyses/{webId}/securityentries/{name}.get.parameters[2].type" = "string"
"paths./analyses/{webId}/securityentries/{name}.get.responses.200.description" = "The security entry matching the specified condition."
"paths./analyses/{webId}/securityentries/{name}.get.responses.200.schema.$ref" = "#/definitions/SecurityEntry"
"paths./analyses/{webId}/securityentries/{name}.get.responses.404.description" = "The security entry with the specified name is not found."
"paths./analyses/{webId}/securityentries/{name}.get.responses.404.schema.$ref" = "#/definitions/Errors"
"paths./analyses/{webId}/securityentries/{name}.get.summary" = "Retrieve the security entry associated with the analysis with the specified name."
"paths./analyses/{webId}/securityentries/{name}.get.tags.length" = 1
"paths./analyses/{webId}/securityentries/{name}.get.tags[0]" = "Analysis"
"paths./analyses/{webId}/securityentries/{name}.put.consumes.length" = 2
"paths./analyses/{webId}/securityentries/{name}.put.consumes[0]" = "application/json"
"paths./analyses/{webId}/securityentries/{name}.put.consumes[1]" = "text/json"
"paths./analyses/{webId}/securityentries/{name}.put.deprecated" = false
"paths./analyses/{webId}/securityentries/{name}.put.operationId" = "Analysis_UpdateSecurityEntry"
"paths./analyses/{webId}/securityentries/{name}.put.parameters.length" = 4
"paths./analyses/{webId}/securityentries/{name}.put.parameters[0].description" = "The name of the security entry."
"paths./analyses/{webId}/securityentries/{name}.put.parameters[0].in" = "path"
"paths./analyses/{webId}/securityentries/{name}.put.parameters[0].name" = "name"
"paths./analyses/{webId}/securityentries/{name}.put.parameters[0].required" = true
"paths./analyses/{webId}/securityentries/{name}.put.parameters[0].type" = "string"
"paths./analyses/{webId}/securityentries/{name}.put.parameters[1].description" = "The ID of the analysis, where the security entry will be updated."
"paths./analyses/{webId}/securityentries/{name}.put.parameters[1].in" = "path"
"paths./analyses/{webId}/securityentries/{name}.put.parameters[1].name" = "webId"
"paths./analyses/{webId}/securityentries/{name}.put.parameters[1].required" = true
"paths./analyses/{webId}/securityentries/{name}.put.parameters[1].type" = "string"
"paths./analyses/{webId}/securityentries/{name}.put.parameters[2].description" = "The new security entry definition. The full list of allow and deny rights must be supplied or they will be removed."
"paths./analyses/{webId}/securityentries/{name}.put.parameters[2].in" = "body"
"paths./analyses/{webId}/securityentries/{name}.put.parameters[2].name" = "securityEntry"
"paths./analyses/{webId}/securityentries/{name}.put.parameters[2].required" = true
"paths./analyses/{webId}/securityentries/{name}.put.parameters[2].schema.$ref" = "#/definitions/SecurityEntry"
"paths./analyses/{webId}/securityentries/{name}.put.parameters[3].description" = "If false, the new access permissions are only applied to the associated object. If true, the access permissions of children with any parent-child reference types will change when the permissions on the primary parent change."
"paths./analyses/{webId}/securityentries/{name}.put.parameters[3].in" = "query"
"paths./analyses/{webId}/securityentries/{name}.put.parameters[3].name" = "applyToChildren"
"paths./analyses/{webId}/securityentries/{name}.put.parameters[3].required" = false
"paths./analyses/{webId}/securityentries/{name}.put.parameters[3].type" = "boolean"
"paths./analyses/{webId}/securityentries/{name}.put.responses.204.description" = "The security entry was updated."
"paths./analyses/{webId}/securityentries/{name}.put.summary" = "Update a security entry owned by the analysis."
"paths./analyses/{webId}/securityentries/{name}.put.tags.length" = 1
"paths./analyses/{webId}/securityentries/{name}.put.tags[0]" = "Analysis"
"paths./analysiscategories.get.consumes.length" = 0
"paths./analysiscategories.get.deprecated" = false
"paths./analysiscategories.get.operationId" = "AnalysisCategory_GetByPath"
"paths./analysiscategories.get.parameters.length" = 2
"paths./analysiscategories.get.parameters[0].description" = "The path to the target analysis category."
"paths./analysiscategories.get.parameters[0].in" = "query"
"paths./analysiscategories.get.parameters[0].name" = "path"
"paths./analysiscategories.get.parameters[0].required" = true
"paths./analysiscategories.get.parameters[0].type" = "string"
"paths./analysiscategories.get.parameters[1].description" = "List of fields to be returned in the response, separated by semicolons (;). If this parameter is not specified, all available fields will be returned."
"paths./analysiscategories.get.parameters[1].in" = "query"
"paths./analysiscategories.get.parameters[1].name" = "selectedFields"
"paths./analysiscategories.get.parameters[1].required" = false
"paths./analysiscategories.get.parameters[1].type" = "string"
"paths./analysiscategories.get.responses.200.description" = "The specified analysis category."
"paths./analysiscategories.get.responses.200.schema.$ref" = "#/definitions/AnalysisCategory"
"paths./analysiscategories.get.summary" = "Retrieve an analysis category by path."
"paths./analysiscategories.get.tags.length" = 1
"paths./analysiscategories.get.tags[0]" = "AnalysisCategory"
"paths./analysiscategories/{webId}.delete.consumes.length" = 0
"paths./analysiscategories/{webId}.delete.deprecated" = false
"paths./analysiscategories/{webId}.delete.operationId" = "AnalysisCategory_Delete"
"paths./analysiscategories/{webId}.delete.parameters.length" = 1
"paths./analysiscategories/{webId}.delete.parameters[0].description" = "The ID of the analysis category to delete."
"paths./analysiscategories/{webId}.delete.parameters[0].in" = "path"
"paths./analysiscategories/{webId}.delete.parameters[0].name" = "webId"
"paths./analysiscategories/{webId}.delete.parameters[0].required" = true
"paths./analysiscategories/{webId}.delete.parameters[0].type" = "string"
"paths./analysiscategories/{webId}.delete.responses.204.description" = "The analysis category was deleted."
"paths./analysiscategories/{webId}.delete.summary" = "Delete an analysis category."
"paths./analysiscategories/{webId}.delete.tags.length" = 1
"paths./analysiscategories/{webId}.delete.tags[0]" = "AnalysisCategory"
"paths./analysiscategories/{webId}.get.consumes.length" = 0
"paths./analysiscategories/{webId}.get.deprecated" = false
"paths./analysiscategories/{webId}.get.operationId" = "AnalysisCategory_Get"
"paths./analysiscategories/{webId}.get.parameters.length" = 2
"paths./analysiscategories/{webId}.get.parameters[0].description" = "The ID of the analysis category."
"paths./analysiscategories/{webId}.get.parameters[0].in" = "path"
"paths./analysiscategories/{webId}.get.parameters[0].name" = "webId"
"paths./analysiscategories/{webId}.get.parameters[0].required" = true
"paths./analysiscategories/{webId}.get.parameters[0].type" = "string"
"paths./analysiscategories/{webId}.get.parameters[1].description" = "List of fields to be returned in the response, separated by semicolons (;). If this parameter is not specified, all available fields will be returned."
"paths./analysiscategories/{webId}.get.parameters[1].in" = "query"
"paths./analysiscategories/{webId}.get.parameters[1].name" = "selectedFields"
"paths./analysiscategories/{webId}.get.parameters[1].required" = false
"paths./analysiscategories/{webId}.get.parameters[1].type" = "string"
"paths./analysiscategories/{webId}.get.responses.200.description" = "The specified analysis category."
"paths./analysiscategories/{webId}.get.responses.200.schema.$ref" = "#/definitions/AnalysisCategory"
"paths./analysiscategories/{webId}.get.summary" = "Retrieve an analysis category."
"paths./analysiscategories/{webId}.get.tags.length" = 1
"paths./analysiscategories/{webId}.get.tags[0]" = "AnalysisCategory"
"paths./analysiscategories/{webId}.patch.consumes.length" = 2
"paths./analysiscategories/{webId}.patch.consumes[0]" = "application/json"
"paths./analysiscategories/{webId}.patch.consumes[1]" = "text/json"
"paths./analysiscategories/{webId}.patch.deprecated" = false
"paths./analysiscategories/{webId}.patch.operationId" = "AnalysisCategory_Update"
"paths./analysiscategories/{webId}.patch.parameters.length" = 2
"paths./analysiscategories/{webId}.patch.parameters[0].description" = "The ID of the analysis category to update."
"paths./analysiscategories/{webId}.patch.parameters[0].in" = "path"
"paths./analysiscategories/{webId}.patch.parameters[0].name" = "webId"
"paths./analysiscategories/{webId}.patch.parameters[0].required" = true
"paths./analysiscategories/{webId}.patch.parameters[0].type" = "string"
"paths./analysiscategories/{webId}.patch.parameters[1].description" = "A partial analysis category containing the desired changes."
"paths./analysiscategories/{webId}.patch.parameters[1].in" = "body"
"paths./analysiscategories/{webId}.patch.parameters[1].name" = "category"
"paths./analysiscategories/{webId}.patch.parameters[1].required" = true
"paths./analysiscategories/{webId}.patch.parameters[1].schema.$ref" = "#/definitions/AnalysisCategory"
"paths./analysiscategories/{webId}.patch.responses.204.description" = "The analysis category was updated."
"paths./analysiscategories/{webId}.patch.summary" = "Update an analysis category by replacing items in its definition."
"paths./analysiscategories/{webId}.patch.tags.length" = 1
"paths./analysiscategories/{webId}.patch.tags[0]" = "AnalysisCategory"
"paths./analysiscategories/{webId}/security.get.consumes.length" = 0
"paths./analysiscategories/{webId}/security.get.deprecated" = false
"paths./analysiscategories/{webId}/security.get.operationId" = "AnalysisCategory_GetSecurity"
"paths./analysiscategories/{webId}/security.get.parameters.length" = 4
"paths./analysiscategories/{webId}/security.get.parameters[0].description" = "The ID of the analysis category for the security to be checked."
"paths./analysiscategories/{webId}/security.get.parameters[0].in" = "path"
"paths./analysiscategories/{webId}/security.get.parameters[0].name" = "webId"
"paths./analysiscategories/{webId}/security.get.parameters[0].required" = true
"paths./analysiscategories/{webId}/security.get.parameters[0].type" = "string"
"paths./analysiscategories/{webId}/security.get.parameters[1].collectionFormat" = "multi"
"paths./analysiscategories/{webId}/security.get.parameters[1].description" = "The user identity for the security information to be checked. Multiple security identities may be specified with multiple instances of the parameter. If the parameter is not specified, only the current user's security rights will be returned."
"paths./analysiscategories/{webId}/security.get.parameters[1].in" = "query"
"paths./analysiscategories/{webId}/security.get.parameters[1].items.type" = "string"
"paths./analysiscategories/{webId}/security.get.parameters[1].name" = "userIdentity"
"paths./analysiscategories/{webId}/security.get.parameters[1].required" = true
"paths./analysiscategories/{webId}/security.get.parameters[1].type" = "array"
"paths./analysiscategories/{webId}/security.get.parameters[2].description" = "Indicates if the security cache should be refreshed before getting security information. The default is 'false'."
"paths./analysiscategories/{webId}/security.get.parameters[2].in" = "query"
"paths./analysiscategories/{webId}/security.get.parameters[2].name" = "forceRefresh"
"paths./analysiscategories/{webId}/security.get.parameters[2].required" = false
"paths./analysiscategories/{webId}/security.get.parameters[2].type" = "boolean"
"paths./analysiscategories/{webId}/security.get.parameters[3].description" = "List of fields to be returned in the response, separated by semicolons (;). If this parameter is not specified, all available fields will be returned."
"paths./analysiscategories/{webId}/security.get.parameters[3].in" = "query"
"paths./analysiscategories/{webId}/security.get.parameters[3].name" = "selectedFields"
"paths./analysiscategories/{webId}/security.get.parameters[3].required" = false
"paths./analysiscategories/{webId}/security.get.parameters[3].type" = "string"
"paths./analysiscategories/{webId}/security.get.responses.200.description" = "Security rights."
"paths./analysiscategories/{webId}/security.get.responses.200.schema.$ref" = "#/definitions/Items[SecurityRights]"
"paths./analysiscategories/{webId}/security.get.responses.400.description" = "An invalid or local account is specified as the user identity."
"paths./analysiscategories/{webId}/security.get.responses.400.schema.$ref" = "#/definitions/Errors"
"paths./analysiscategories/{webId}/security.get.responses.401.description" = "Access denied for the specified user identity."
"paths./analysiscategories/{webId}/security.get.responses.401.schema.$ref" = "#/definitions/Errors"
"paths./analysiscategories/{webId}/security.get.responses.409.description" = "Unsupported when using Anonymous authentication method."
"paths./analysiscategories/{webId}/security.get.responses.409.schema.$ref" = "#/definitions/Errors"
"paths./analysiscategories/{webId}/security.get.responses.502.description" = "Failed to retrieve the specified user identity."
"paths./analysiscategories/{webId}/security.get.responses.502.schema.$ref" = "#/definitions/Errors"
"paths./analysiscategories/{webId}/security.get.summary" = "Get the security information of the specified security item associated with the analysis category for a specified user."
"paths./analysiscategories/{webId}/security.get.tags.length" = 1
"paths./analysiscategories/{webId}/security.get.tags[0]" = "AnalysisCategory"
"paths./analysiscategories/{webId}/securityentries.get.consumes.length" = 0
"paths./analysiscategories/{webId}/securityentries.get.deprecated" = false
"paths./analysiscategories/{webId}/securityentries.get.operationId" = "AnalysisCategory_GetSecurityEntries"
"paths./analysiscategories/{webId}/securityentries.get.parameters.length" = 3
"paths./analysiscategories/{webId}/securityentries.get.parameters[0].description" = "The ID of the analysis category."
"paths./analysiscategories/{webId}/securityentries.get.parameters[0].in" = "path"
"paths./analysiscategories/{webId}/securityentries.get.parameters[0].name" = "webId"
"paths./analysiscategories/{webId}/securityentries.get.parameters[0].required" = true
"paths./analysiscategories/{webId}/securityentries.get.parameters[0].type" = "string"
"paths./analysiscategories/{webId}/securityentries.get.parameters[1].description" = "The name query string used for filtering security entries. The default is no filter."
"paths./analysiscategories/{webId}/securityentries.get.parameters[1].in" = "query"
"paths./analysiscategories/{webId}/securityentries.get.parameters[1].name" = "nameFilter"
"paths./analysiscategories/{webId}/securityentries.get.parameters[1].required" = false
"paths./analysiscategories/{webId}/securityentries.get.parameters[1].type" = "string"
"paths./analysiscategories/{webId}/securityentries.get.parameters[2].description" = "List of fields to be returned in the response, separated by semicolons (;). If this parameter is not specified, all available fields will be returned."
"paths./analysiscategories/{webId}/securityentries.get.parameters[2].in" = "query"
"paths./analysiscategories/{webId}/securityentries.get.parameters[2].name" = "selectedFields"
"paths./analysiscategories/{webId}/securityentries.get.parameters[2].required" = false
"paths./analysiscategories/{webId}/securityentries.get.parameters[2].type" = "string"
"paths./analysiscategories/{webId}/securityentries.get.responses.200.description" = "A list of security entries matching the specified condition."
"paths./analysiscategories/{webId}/securityentries.get.responses.200.schema.$ref" = "#/definitions/Items[SecurityEntry]"
"paths./analysiscategories/{webId}/securityentries.get.summary" = "Retrieve the security entries associated with the analysis category based on the specified criteria. By default, all security entries for this analysis category are returned."
"paths./analysiscategories/{webId}/securityentries.get.tags.length" = 1
"paths./analysiscategories/{webId}/securityentries.get.tags[0]" = "AnalysisCategory"
"paths./analysiscategories/{webId}/securityentries.post.consumes.length" = 2
"paths./analysiscategories/{webId}/securityentries.post.consumes[0]" = "application/json"
"paths./analysiscategories/{webId}/securityentries.post.consumes[1]" = "text/json"
"paths./analysiscategories/{webId}/securityentries.post.deprecated" = false
"paths./analysiscategories/{webId}/securityentries.post.operationId" = "AnalysisCategory_CreateSecurityEntry"
"paths./analysiscategories/{webId}/securityentries.post.parameters.length" = 3
"paths./analysiscategories/{webId}/securityentries.post.parameters[0].description" = "The ID of the analysis category, where the security entry will be created."
"paths./analysiscategories/{webId}/securityentries.post.parameters[0].in" = "path"
"paths./analysiscategories/{webId}/securityentries.post.parameters[0].name" = "webId"
"paths./analysiscategories/{webId}/securityentries.post.parameters[0].required" = true
"paths./analysiscategories/{webId}/securityentries.post.parameters[0].type" = "string"
"paths./analysiscategories/{webId}/securityentries.post.parameters[1].description" = "The new security entry definition. The full list of allow and deny rights must be supplied."
"paths./analysiscategories/{webId}/securityentries.post.parameters[1].in" = "body"
"paths./analysiscategories/{webId}/securityentries.post.parameters[1].name" = "securityEntry"
"paths./analysiscategories/{webId}/securityentries.post.parameters[1].required" = true
"paths./analysiscategories/{webId}/securityentries.post.parameters[1].schema.$ref" = "#/definitions/SecurityEntry"
"paths./analysiscategories/{webId}/securityentries.post.parameters[2].description" = "If false, the new access permissions are only applied to the associated object. If true, the access permissions of children with any parent-child reference types will change when the permissions on the primary parent change."
"paths./analysiscategories/{webId}/securityentries.post.parameters[2].in" = "query"
"paths./analysiscategories/{webId}/securityentries.post.parameters[2].name" = "applyToChildren"
"paths./analysiscategories/{webId}/securityentries.post.parameters[2].required" = false
"paths./analysiscategories/{webId}/securityentries.post.parameters[2].type" = "boolean"
"paths./analysiscategories/{webId}/securityentries.post.responses.201.description" = "The security entry was created. The response's Location header is a link to the security entry."
"paths./analysiscategories/{webId}/securityentries.post.summary" = "Create a security entry owned by the analysis category."
"paths./analysiscategories/{webId}/securityentries.post.tags.length" = 1
"paths./analysiscategories/{webId}/securityentries.post.tags[0]" = "AnalysisCategory"
"paths./analysiscategories/{webId}/securityentries/{name}.delete.consumes.length" = 0
"paths./analysiscategories/{webId}/securityentries/{name}.delete.deprecated" = false
"paths./analysiscategories/{webId}/securityentries/{name}.delete.operationId" = "AnalysisCategory_DeleteSecurityEntry"
"paths./analysiscategories/{webId}/securityentries/{name}.delete.parameters.length" = 3
"paths./analysiscategories/{webId}/securityentries/{name}.delete.parameters[0].description" = "The name of the security entry. For every backslash character (\\) in the security entry name, replace with asterisk (*). As an example, use domain*username instead of domain\\username."
"paths./analysiscategories/{webId}/securityentries/{name}.delete.parameters[0].in" = "path"
"paths./analysiscategories/{webId}/securityentries/{name}.delete.parameters[0].name" = "name"
"paths./analysiscategories/{webId}/securityentries/{name}.delete.parameters[0].required" = true
"paths./analysiscategories/{webId}/securityentries/{name}.delete.parameters[0].type" = "string"
"paths./analysiscategories/{webId}/securityentries/{name}.delete.parameters[1].description" = "The ID of the analysis category, where the security entry will be deleted."
"paths./analysiscategories/{webId}/securityentries/{name}.delete.parameters[1].in" = "path"
"paths./analysiscategories/{webId}/securityentries/{name}.delete.parameters[1].name" = "webId"
"paths./analysiscategories/{webId}/securityentries/{name}.delete.parameters[1].required" = true
"paths./analysiscategories/{webId}/securityentries/{name}.delete.parameters[1].type" = "string"
"paths./analysiscategories/{webId}/securityentries/{name}.delete.parameters[2].description" = "If false, the new access permissions are only applied to the associated object. If true, the access permissions of children with any parent-child reference types will change when the permissions on the primary parent change."
"paths./analysiscategories/{webId}/securityentries/{name}.delete.parameters[2].in" = "query"
"paths./analysiscategories/{webId}/securityentries/{name}.delete.parameters[2].name" = "applyToChildren"
"paths./analysiscategories/{webId}/securityentries/{name}.delete.parameters[2].required" = false
"paths./analysiscategories/{webId}/securityentries/{name}.delete.parameters[2].type" = "boolean"
"paths./analysiscategories/{webId}/securityentries/{name}.delete.responses.204.description" = "The security entry was deleted."
"paths./analysiscategories/{webId}/securityentries/{name}.delete.summary" = "Delete a security entry owned by the analysis category."
"paths./analysiscategories/{webId}/securityentries/{name}.delete.tags.length" = 1
"paths./analysiscategories/{webId}/securityentries/{name}.delete.tags[0]" = "AnalysisCategory"
"paths./analysiscategories/{webId}/securityentries/{name}.get.consumes.length" = 0
"paths./analysiscategories/{webId}/securityentries/{name}.get.deprecated" = false
"paths./analysiscategories/{webId}/securityentries/{name}.get.operationId" = "AnalysisCategory_GetSecurityEntryByName"
"paths./analysiscategories/{webId}/securityentries/{name}.get.parameters.length" = 3
"paths./analysiscategories/{webId}/securityentries/{name}.get.parameters[0].description" = "The name of the security entry. For every backslash character (\\) in the security entry name, replace with asterisk (*). As an example, use domain*username instead of domain\\username."
"paths./analysiscategories/{webId}/securityentries/{name}.get.parameters[0].in" = "path"
"paths./analysiscategories/{webId}/securityentries/{name}.get.parameters[0].name" = "name"
"paths./analysiscategories/{webId}/securityentries/{name}.get.parameters[0].required" = true
"paths./analysiscategories/{webId}/securityentries/{name}.get.parameters[0].type" = "string"
"paths./analysiscategories/{webId}/securityentries/{name}.get.parameters[1].description" = "The ID of the analysis category."
"paths./analysiscategories/{webId}/securityentries/{name}.get.parameters[1].in" = "path"
"paths./analysiscategories/{webId}/securityentries/{name}.get.parameters[1].name" = "webId"
"paths./analysiscategories/{webId}/securityentries/{name}.get.parameters[1].required" = true
"paths./analysiscategories/{webId}/securityentries/{name}.get.parameters[1].type" = "string"
"paths./analysiscategories/{webId}/securityentries/{name}.get.parameters[2].description" = "List of fields to be returned in the response, separated by semicolons (;). If this parameter is not specified, all available fields will be returned."
"paths./analysiscategories/{webId}/securityentries/{name}.get.parameters[2].in" = "query"
"paths./analysiscategories/{webId}/securityentries/{name}.get.parameters[2].name" = "selectedFields"
"paths./analysiscategories/{webId}/securityentries/{name}.get.parameters[2].required" = false
"paths./analysiscategories/{webId}/securityentries/{name}.get.parameters[2].type" = "string"
"paths./analysiscategories/{webId}/securityentries/{name}.get.responses.200.description" = "The security entry matching the specified condition."
"paths./analysiscategories/{webId}/securityentries/{name}.get.responses.200.schema.$ref" = "#/definitions/SecurityEntry"
"paths./analysiscategories/{webId}/securityentries/{name}.get.responses.404.description" = "The security entry with the specified name is not found."
"paths./analysiscategories/{webId}/securityentries/{name}.get.responses.404.schema.$ref" = "#/definitions/Errors"
"paths./analysiscategories/{webId}/securityentries/{name}.get.summary" = "Retrieve the security entry associated with the analysis category with the specified name."
"paths./analysiscategories/{webId}/securityentries/{name}.get.tags.length" = 1
"paths./analysiscategories/{webId}/securityentries/{name}.get.tags[0]" = "AnalysisCategory"
"paths./analysiscategories/{webId}/securityentries/{name}.put.consumes.length" = 2
"paths./analysiscategories/{webId}/securityentries/{name}.put.consumes[0]" = "application/json"
"paths./analysiscategories/{webId}/securityentries/{name}.put.consumes[1]" = "text/json"
"paths./analysiscategories/{webId}/securityentries/{name}.put.deprecated" = false
"paths./analysiscategories/{webId}/securityentries/{name}.put.operationId" = "AnalysisCategory_UpdateSecurityEntry"
"paths./analysiscategories/{webId}/securityentries/{name}.put.parameters.length" = 4
"paths./analysiscategories/{webId}/securityentries/{name}.put.parameters[0].description" = "The name of the security entry."
"paths./analysiscategories/{webId}/securityentries/{name}.put.parameters[0].in" = "path"
"paths./analysiscategories/{webId}/securityentries/{name}.put.parameters[0].name" = "name"
"paths./analysiscategories/{webId}/securityentries/{name}.put.parameters[0].required" = true
"paths./analysiscategories/{webId}/securityentries/{name}.put.parameters[0].type" = "string"
"paths./analysiscategories/{webId}/securityentries/{name}.put.parameters[1].description" = "The ID of the analysis category, where the security entry will be updated."
"paths./analysiscategories/{webId}/securityentries/{name}.put.parameters[1].in" = "path"
"paths./analysiscategories/{webId}/securityentries/{name}.put.parameters[1].name" = "webId"
"paths./analysiscategories/{webId}/securityentries/{name}.put.parameters[1].required" = true
"paths./analysiscategories/{webId}/securityentries/{name}.put.parameters[1].type" = "string"
"paths./analysiscategories/{webId}/securityentries/{name}.put.parameters[2].description" = "The new security entry definition. The full list of allow and deny rights must be supplied or they will be removed."
"paths./analysiscategories/{webId}/securityentries/{name}.put.parameters[2].in" = "body"
"paths./analysiscategories/{webId}/securityentries/{name}.put.parameters[2].name" = "securityEntry"
"paths./analysiscategories/{webId}/securityentries/{name}.put.parameters[2].required" = true
"paths./analysiscategories/{webId}/securityentries/{name}.put.parameters[2].schema.$ref" = "#/definitions/SecurityEntry"
"paths./analysiscategories/{webId}/securityentries/{name}.put.parameters[3].description" = "If false, the new access permissions are only applied to the associated object. If true, the access permissions of children with any parent-child reference types will change when the permissions on the primary parent change."
"paths./analysiscategories/{webId}/securityentries/{name}.put.parameters[3].in" = "query"
"paths./analysiscategories/{webId}/securityentries/{name}.put.parameters[3].name" = "applyToChildren"
"paths./analysiscategories/{webId}/securityentries/{name}.put.parameters[3].required" = false
"paths./analysiscategories/{webId}/securityentries/{name}.put.parameters[3].type" = "boolean"
"paths./analysiscategories/{webId}/securityentries/{name}.put.responses.204.description" = "The security entry was updated."
"paths./analysiscategories/{webId}/securityentries/{name}.put.summary" = "Update a security entry owned by the analysis category."
"paths./analysiscategories/{webId}/securityentries/{name}.put.tags.length" = 1
"paths./analysiscategories/{webId}/securityentries/{name}.put.tags[0]" = "AnalysisCategory"
"paths./analysisruleplugins.get.consumes.length" = 0
"paths./analysisruleplugins.get.deprecated" = false
"paths./analysisruleplugins.get.description" = "This method returns an Analysis Rule Plug-in based on the hierarchical path associated with it, and should be used when a path has been received from a separate part of the PI System for use in the PI Web API. Users should primarily search with the WebID when available."
"paths./analysisruleplugins.get.operationId" = "AnalysisRulePlugIn_GetByPath"
"paths./analysisruleplugins.get.parameters.length" = 2
"paths./analysisruleplugins.get.parameters[0].description" = "The path to the Analysis Rule Plug-in."
"paths./analysisruleplugins.get.parameters[0].in" = "query"
"paths./analysisruleplugins.get.parameters[0].name" = "path"
"paths./analysisruleplugins.get.parameters[0].required" = true
"paths./analysisruleplugins.get.parameters[0].type" = "string"
"paths./analysisruleplugins.get.parameters[1].description" = "List of fields to be returned in the response, separated by semicolons (;). If this parameter is not specified, all available fields will be returned."
"paths./analysisruleplugins.get.parameters[1].in" = "query"
"paths./analysisruleplugins.get.parameters[1].name" = "selectedFields"
"paths./analysisruleplugins.get.parameters[1].required" = false
"paths./analysisruleplugins.get.parameters[1].type" = "string"
"paths./analysisruleplugins.get.responses.200.description" = "The specified Analysis Rule Plug-in."
"paths./analysisruleplugins.get.responses.200.schema.$ref" = "#/definitions/AnalysisRulePlugIn"
"paths./analysisruleplugins.get.summary" = "Retrieve an Analysis Rule Plug-in by path."
"paths./analysisruleplugins.get.tags.length" = 1
"paths./analysisruleplugins.get.tags[0]" = "AnalysisRulePlugIn"
"paths./analysisruleplugins/{webId}.get.consumes.length" = 0
"paths./analysisruleplugins/{webId}.get.deprecated" = false
"paths./analysisruleplugins/{webId}.get.operationId" = "AnalysisRulePlugIn_Get"
"paths./analysisruleplugins/{webId}.get.parameters.length" = 2
"paths./analysisruleplugins/{webId}.get.parameters[0].description" = "The ID of the Analysis Rule Plug-in."
"paths./analysisruleplugins/{webId}.get.parameters[0].in" = "path"
"paths./analysisruleplugins/{webId}.get.parameters[0].name" = "webId"
"paths./analysisruleplugins/{webId}.get.parameters[0].required" = true
"paths./analysisruleplugins/{webId}.get.parameters[0].type" = "string"
"paths./analysisruleplugins/{webId}.get.parameters[1].description" = "List of fields to be returned in the response, separated by semicolons (;). If this parameter is not specified, all available fields will be returned."
"paths./analysisruleplugins/{webId}.get.parameters[1].in" = "query"
"paths./analysisruleplugins/{webId}.get.parameters[1].name" = "selectedFields"
"paths./analysisruleplugins/{webId}.get.parameters[1].required" = false
"paths./analysisruleplugins/{webId}.get.parameters[1].type" = "string"
"paths./analysisruleplugins/{webId}.get.responses.200.description" = "The specified Analysis Rule Plug-in."
"paths./analysisruleplugins/{webId}.get.responses.200.schema.$ref" = "#/definitions/AnalysisRulePlugIn"
"paths./analysisruleplugins/{webId}.get.summary" = "Retrieve an Analysis Rule Plug-in."
"paths./analysisruleplugins/{webId}.get.tags.length" = 1
"paths./analysisruleplugins/{webId}.get.tags[0]" = "AnalysisRulePlugIn"
"paths./analysisrules.get.consumes.length" = 0
"paths./analysisrules.get.deprecated" = false
"paths./analysisrules.get.description" = "This method returns an Analysis Rule based on the hierarchical path associated with it, and should be used when a path has been received from a separate part of the PI System for use in the PI Web API. Users should primarily search with the WebID when available."
"paths./analysisrules.get.operationId" = "AnalysisRule_GetByPath"
"paths./analysisrules.get.parameters.length" = 2
"paths./analysisrules.get.parameters[0].description" = "The path to the Analysis Rule."
"paths./analysisrules.get.parameters[0].in" = "query"
"paths./analysisrules.get.parameters[0].name" = "path"
"paths./analysisrules.get.parameters[0].required" = true
"paths./analysisrules.get.parameters[0].type" = "string"
"paths./analysisrules.get.parameters[1].description" = "List of fields to be returned in the response, separated by semicolons (;). If this parameter is not specified, all available fields will be returned."
"paths./analysisrules.get.parameters[1].in" = "query"
"paths./analysisrules.get.parameters[1].name" = "selectedFields"
"paths./analysisrules.get.parameters[1].required" = false
"paths./analysisrules.get.parameters[1].type" = "string"
"paths./analysisrules.get.responses.200.description" = "The requested Analysis Rule."
"paths./analysisrules.get.responses.200.schema.$ref" = "#/definitions/AnalysisRule"
"paths./analysisrules.get.summary" = "Retrieve an Analysis Rule by path."
"paths./analysisrules.get.tags.length" = 1
"paths./analysisrules.get.tags[0]" = "AnalysisRule"
"paths./analysisrules/{webId}.delete.consumes.length" = 0
"paths./analysisrules/{webId}.delete.deprecated" = false
"paths./analysisrules/{webId}.delete.operationId" = "AnalysisRule_Delete"
"paths./analysisrules/{webId}.delete.parameters.length" = 1
"paths./analysisrules/{webId}.delete.parameters[0].description" = "The ID of the Analysis Rule."
"paths./analysisrules/{webId}.delete.parameters[0].in" = "path"
"paths./analysisrules/{webId}.delete.parameters[0].name" = "webId"
"paths./analysisrules/{webId}.delete.parameters[0].required" = true
"paths./analysisrules/{webId}.delete.parameters[0].type" = "string"
"paths./analysisrules/{webId}.delete.responses.204.description" = "The Analysis Rule was deleted."
"paths./analysisrules/{webId}.delete.summary" = "Delete an Analysis Rule."
"paths./analysisrules/{webId}.delete.tags.length" = 1
"paths./analysisrules/{webId}.delete.tags[0]" = "AnalysisRule"
"paths./analysisrules/{webId}.get.consumes.length" = 0
"paths./analysisrules/{webId}.get.deprecated" = false
"paths./analysisrules/{webId}.get.operationId" = "AnalysisRule_Get"
"paths./analysisrules/{webId}.get.parameters.length" = 2
"paths./analysisrules/{webId}.get.parameters[0].description" = "The ID of the Analysis Rule."
"paths./analysisrules/{webId}.get.parameters[0].in" = "path"
"paths./analysisrules/{webId}.get.parameters[0].name" = "webId"
"paths./analysisrules/{webId}.get.parameters[0].required" = true
"paths./analysisrules/{webId}.get.parameters[0].type" = "string"
"paths./analysisrules/{webId}.get.parameters[1].description" = "List of fields to be returned in the response, separated by semicolons (;). If this parameter is not specified, all available fields will be returned."
"paths./analysisrules/{webId}.get.parameters[1].in" = "query"
"paths./analysisrules/{webId}.get.parameters[1].name" = "selectedFields"
"paths./analysisrules/{webId}.get.parameters[1].required" = false
"paths./analysisrules/{webId}.get.parameters[1].type" = "string"
"paths./analysisrules/{webId}.get.responses.200.description" = "The requested Analysis Rule."
"paths./analysisrules/{webId}.get.responses.200.schema.$ref" = "#/definitions/AnalysisRule"
"paths./analysisrules/{webId}.get.summary" = "Retrieve an Analysis Rule."
"paths./analysisrules/{webId}.get.tags.length" = 1
"paths./analysisrules/{webId}.get.tags[0]" = "AnalysisRule"
"paths./analysisrules/{webId}.patch.consumes.length" = 2
"paths./analysisrules/{webId}.patch.consumes[0]" = "application/json"
"paths./analysisrules/{webId}.patch.consumes[1]" = "text/json"
"paths./analysisrules/{webId}.patch.deprecated" = false
"paths./analysisrules/{webId}.patch.operationId" = "AnalysisRule_Update"
"paths./analysisrules/{webId}.patch.parameters.length" = 2
"paths./analysisrules/{webId}.patch.parameters[0].description" = "The ID of the Analysis Rule."
"paths./analysisrules/{webId}.patch.parameters[0].in" = "path"
"paths./analysisrules/{webId}.patch.parameters[0].name" = "webId"
"paths./analysisrules/{webId}.patch.parameters[0].required" = true
"paths./analysisrules/{webId}.patch.parameters[0].type" = "string"
"paths./analysisrules/{webId}.patch.parameters[1].description" = "A partial Analysis Rule containing the desired changes."
"paths./analysisrules/{webId}.patch.parameters[1].in" = "body"
"paths./analysisrules/{webId}.patch.parameters[1].name" = "analysisRule"
"paths./analysisrules/{webId}.patch.parameters[1].required" = true
"paths./analysisrules/{webId}.patch.parameters[1].schema.$ref" = "#/definitions/AnalysisRule"
"paths./analysisrules/{webId}.patch.responses.204.description" = "The Analysis Rule was updated."
"paths./analysisrules/{webId}.patch.summary" = "Update an Analysis Rule by replacing items in its definition."
"paths./analysisrules/{webId}.patch.tags.length" = 1
"paths./analysisrules/{webId}.patch.tags[0]" = "AnalysisRule"
"paths./analysisrules/{webId}/analysisrules.get.consumes.length" = 0
"paths./analysisrules/{webId}/analysisrules.get.deprecated" = false
"paths./analysisrules/{webId}/analysisrules.get.operationId" = "AnalysisRule_GetAnalysisRules"
"paths./analysisrules/{webId}/analysisrules.get.parameters.length" = 8
"paths./analysisrules/{webId}/analysisrules.get.parameters[0].description" = "The ID of the parent Analysis Rule."
"paths./analysisrules/{webId}/analysisrules.get.parameters[0].in" = "path"
"paths./analysisrules/{webId}/analysisrules.get.parameters[0].name" = "webId"
"paths./analysisrules/{webId}/analysisrules.get.parameters[0].required" = true
"paths./analysisrules/{webId}/analysisrules.get.parameters[0].type" = "string"
"paths./analysisrules/{webId}/analysisrules.get.parameters[1].description" = "The maximum number of objects to be returned per call (page size). The default is 1000."
"paths./analysisrules/{webId}/analysisrules.get.parameters[1].in" = "query"
"paths./analysisrules/{webId}/analysisrules.get.parameters[1].name" = "maxCount"
"paths./analysisrules/{webId}/analysisrules.get.parameters[1].required" = false
"paths./analysisrules/{webId}/analysisrules.get.parameters[1].type" = "integer"
"paths./analysisrules/{webId}/analysisrules.get.parameters[2].description" = "The name query string used for finding Analysis Rules. The default is no filter."
"paths./analysisrules/{webId}/analysisrules.get.parameters[2].in" = "query"
"paths./analysisrules/{webId}/analysisrules.get.parameters[2].name" = "nameFilter"
"paths./analysisrules/{webId}/analysisrules.get.parameters[2].required" = false
"paths./analysisrules/{webId}/analysisrules.get.parameters[2].type" = "string"
"paths./analysisrules/{webId}/analysisrules.get.parameters[3].description" = "Specifies if the search should include Analysis Rules nested further than the immediate children of the searchRoot. The default is 'false'."
"paths./analysisrules/{webId}/analysisrules.get.parameters[3].in" = "query"
"paths./analysisrules/{webId}/analysisrules.get.parameters[3].name" = "searchFullHierarchy"
"paths./analysisrules/{webId}/analysisrules.get.parameters[3].required" = false
"paths./analysisrules/{webId}/analysisrules.get.parameters[3].type" = "boolean"
"paths./analysisrules/{webId}/analysisrules.get.parameters[4].description" = "List of fields to be returned in the response, separated by semicolons (;). If this parameter is not specified, all available fields will be returned."
"paths./analysisrules/{webId}/analysisrules.get.parameters[4].in" = "query"
"paths./analysisrules/{webId}/analysisrules.get.parameters[4].name" = "selectedFields"
"paths./analysisrules/{webId}/analysisrules.get.parameters[4].required" = false
"paths./analysisrules/{webId}/analysisrules.get.parameters[4].type" = "string"
"paths./analysisrules/{webId}/analysisrules.get.parameters[5].description" = "The field or property of the object used to sort the returned collection. The default is 'Name'."
"paths./analysisrules/{webId}/analysisrules.get.parameters[5].in" = "query"
"paths./analysisrules/{webId}/analysisrules.get.parameters[5].name" = "sortField"
"paths./analysisrules/{webId}/analysisrules.get.parameters[5].required" = false
"paths./analysisrules/{webId}/analysisrules.get.parameters[5].type" = "string"
"paths./analysisrules/{webId}/analysisrules.get.parameters[6].description" = "The order that the returned collection is sorted. The default is 'Ascending'."
"paths./analysisrules/{webId}/analysisrules.get.parameters[6].in" = "query"
"paths./analysisrules/{webId}/analysisrules.get.parameters[6].name" = "sortOrder"
"paths./analysisrules/{webId}/analysisrules.get.parameters[6].required" = false
"paths./analysisrules/{webId}/analysisrules.get.parameters[6].type" = "string"
"paths./analysisrules/{webId}/analysisrules.get.parameters[7].description" = "The starting index (zero based) of the items to be returned. The default is 0."
"paths./analysisrules/{webId}/analysisrules.get.parameters[7].in" = "query"
"paths./analysisrules/{webId}/analysisrules.get.parameters[7].name" = "startIndex"
"paths./analysisrules/{webId}/analysisrules.get.parameters[7].required" = false
"paths./analysisrules/{webId}/analysisrules.get.parameters[7].type" = "integer"
"paths./analysisrules/{webId}/analysisrules.get.responses.200.description" = "A list of child Analysis Rules."
"paths./analysisrules/{webId}/analysisrules.get.responses.200.schema.$ref" = "#/definitions/Items[AnalysisRule]"
"paths./analysisrules/{webId}/analysisrules.get.summary" = "Get the child Analysis Rules of the Analysis Rule."
"paths./analysisrules/{webId}/analysisrules.get.tags.length" = 1
"paths./analysisrules/{webId}/analysisrules.get.tags[0]" = "AnalysisRule"
"paths./analysisrules/{webId}/analysisrules.post.consumes.length" = 2
"paths./analysisrules/{webId}/analysisrules.post.consumes[0]" = "application/json"
"paths./analysisrules/{webId}/analysisrules.post.consumes[1]" = "text/json"
"paths./analysisrules/{webId}/analysisrules.post.deprecated" = false
"paths./analysisrules/{webId}/analysisrules.post.operationId" = "AnalysisRule_CreateAnalysisRule"
"paths./analysisrules/{webId}/analysisrules.post.parameters.length" = 2
"paths./analysisrules/{webId}/analysisrules.post.parameters[0].description" = "The ID of the parent Analysis Rule, on which to create the child Analysis Rule."
"paths./analysisrules/{webId}/analysisrules.post.parameters[0].in" = "path"
"paths./analysisrules/{webId}/analysisrules.post.parameters[0].name" = "webId"
"paths./analysisrules/{webId}/analysisrules.post.parameters[0].required" = true
"paths./analysisrules/{webId}/analysisrules.post.parameters[0].type" = "string"
"paths./analysisrules/{webId}/analysisrules.post.parameters[1].description" = "The definition of the new Analysis Rule."
"paths./analysisrules/{webId}/analysisrules.post.parameters[1].in" = "body"
"paths./analysisrules/{webId}/analysisrules.post.parameters[1].name" = "analysisRule"
"paths./analysisrules/{webId}/analysisrules.post.parameters[1].required" = true
"paths./analysisrules/{webId}/analysisrules.post.parameters[1].schema.$ref" = "#/definitions/AnalysisRule"
"paths./analysisrules/{webId}/analysisrules.post.responses.201.description" = "The Analysis Rule was created. The response's Location header is a link to the created Analysis Rule."
"paths./analysisrules/{webId}/analysisrules.post.summary" = "Create a new Analysis Rule as a child of an existing Analysis Rule."
"paths./analysisrules/{webId}/analysisrules.post.tags.length" = 1
"paths./analysisrules/{webId}/analysisrules.post.tags[0]" = "AnalysisRule"
"paths./analysistemplates.get.consumes.length" = 0
"paths./analysistemplates.get.deprecated" = false
"paths./analysistemplates.get.description" = "This method returns an analysis template based on the hierarchical path associated with it, and should be used when a path has been received from a separate part of the PI System for use in the PI Web API. Users should primarily search with the WebID when available."
"paths./analysistemplates.get.operationId" = "AnalysisTemplate_GetByPath"
"paths./analysistemplates.get.parameters.length" = 2
"paths./analysistemplates.get.parameters[0].description" = "The path to the analysis template."
"paths./analysistemplates.get.parameters[0].in" = "query"
"paths./analysistemplates.get.parameters[0].name" = "path"
"paths./analysistemplates.get.parameters[0].required" = true
"paths./analysistemplates.get.parameters[0].type" = "string"
"paths./analysistemplates.get.parameters[1].description" = "List of fields to be returned in the response, separated by semicolons (;). If this parameter is not specified, all available fields will be returned."
"paths./analysistemplates.get.parameters[1].in" = "query"
"paths./analysistemplates.get.parameters[1].name" = "selectedFields"
"paths./analysistemplates.get.parameters[1].required" = false
"paths./analysistemplates.get.parameters[1].type" = "string"
"paths./analysistemplates.get.responses.200.description" = "The specified analysis template."
"paths./analysistemplates.get.responses.200.schema.$ref" = "#/definitions/AnalysisTemplate"
"paths./analysistemplates.get.summary" = "Retrieve an analysis template by path."
"paths./analysistemplates.get.tags.length" = 1
"paths./analysistemplates.get.tags[0]" = "AnalysisTemplate"
"paths./analysistemplates.post.consumes.length" = 2
"paths./analysistemplates.post.consumes[0]" = "application/json"
"paths./analysistemplates.post.consumes[1]" = "text/json"
"paths./analysistemplates.post.deprecated" = false
"paths./analysistemplates.post.operationId" = "AnalysisTemplate_CreateFromAnalysis"
"paths./analysistemplates.post.parameters.length" = 2
"paths./analysistemplates.post.parameters[0].description" = "The ID of the Analysis, on which the template is created."
"paths./analysistemplates.post.parameters[0].in" = "query"
"paths./analysistemplates.post.parameters[0].name" = "analysisWebId"
"paths./analysistemplates.post.parameters[0].required" = true
"paths./analysistemplates.post.parameters[0].type" = "string"
"paths./analysistemplates.post.parameters[1].description" = "The name for the created template, which must be unique within the database's AnalysisTemplate collection. If the name ends with an asterisk (*), then a unique name will be generated based on the supplied name. The default is the specified Analysis' name suffixed with an asterisk (*)."
"paths./analysistemplates.post.parameters[1].in" = "query"
"paths./analysistemplates.post.parameters[1].name" = "name"
"paths./analysistemplates.post.parameters[1].required" = false
"paths./analysistemplates.post.parameters[1].type" = "string"
"paths./analysistemplates.post.responses.201.description" = "The Analysis Template was created. The response's Location header is a link to the created Analysis Template."
"paths./analysistemplates.post.summary" = "Create an Analysis template based upon a specified Analysis."
"paths./analysistemplates.post.tags.length" = 1
"paths./analysistemplates.post.tags[0]" = "AnalysisTemplate"
"paths./analysistemplates/{webId}.delete.consumes.length" = 0
"paths./analysistemplates/{webId}.delete.deprecated" = false
"paths./analysistemplates/{webId}.delete.description" = "Deleting an analysis template will delete any anlysis which was created from it, unless the analysis is tied to a notification."
"paths./analysistemplates/{webId}.delete.operationId" = "AnalysisTemplate_Delete"
"paths./analysistemplates/{webId}.delete.parameters.length" = 1
"paths./analysistemplates/{webId}.delete.parameters[0].description" = "The ID of the analysis template to update."
"paths./analysistemplates/{webId}.delete.parameters[0].in" = "path"
"paths./analysistemplates/{webId}.delete.parameters[0].name" = "webId"
"paths./analysistemplates/{webId}.delete.parameters[0].required" = true
"paths./analysistemplates/{webId}.delete.parameters[0].type" = "string"
"paths./analysistemplates/{webId}.delete.responses.204.description" = "The analysis template was deleted."
"paths./analysistemplates/{webId}.delete.summary" = "Delete an analysis template."
"paths./analysistemplates/{webId}.delete.tags.length" = 1
"paths./analysistemplates/{webId}.delete.tags[0]" = "AnalysisTemplate"
"paths./analysistemplates/{webId}.get.consumes.length" = 0
"paths./analysistemplates/{webId}.get.deprecated" = false
"paths./analysistemplates/{webId}.get.operationId" = "AnalysisTemplate_Get"
"paths./analysistemplates/{webId}.get.parameters.length" = 2
"paths./analysistemplates/{webId}.get.parameters[0].description" = "The ID of the analysis template."
"paths./analysistemplates/{webId}.get.parameters[0].in" = "path"
"paths./analysistemplates/{webId}.get.parameters[0].name" = "webId"
"paths./analysistemplates/{webId}.get.parameters[0].required" = true
"paths./analysistemplates/{webId}.get.parameters[0].type" = "string"
"paths./analysistemplates/{webId}.get.parameters[1].description" = "List of fields to be returned in the response, separated by semicolons (;). If this parameter is not specified, all available fields will be returned."
"paths./analysistemplates/{webId}.get.parameters[1].in" = "query"
"paths./analysistemplates/{webId}.get.parameters[1].name" = "selectedFields"
"paths./analysistemplates/{webId}.get.parameters[1].required" = false
"paths./analysistemplates/{webId}.get.parameters[1].type" = "string"
"paths./analysistemplates/{webId}.get.responses.200.description" = "The specified analysis template."
"paths./analysistemplates/{webId}.get.responses.200.schema.$ref" = "#/definitions/AnalysisTemplate"
"paths./analysistemplates/{webId}.get.summary" = "Retrieve an analysis template."
"paths./analysistemplates/{webId}.get.tags.length" = 1
"paths./analysistemplates/{webId}.get.tags[0]" = "AnalysisTemplate"
"paths./analysistemplates/{webId}.patch.consumes.length" = 2
"paths./analysistemplates/{webId}.patch.consumes[0]" = "application/json"
"paths./analysistemplates/{webId}.patch.consumes[1]" = "text/json"
"paths./analysistemplates/{webId}.patch.deprecated" = false
"paths./analysistemplates/{webId}.patch.operationId" = "AnalysisTemplate_Update"
"paths./analysistemplates/{webId}.patch.parameters.length" = 2
"paths./analysistemplates/{webId}.patch.parameters[0].description" = "The ID of the analysis template to update."
"paths./analysistemplates/{webId}.patch.parameters[0].in" = "path"
"paths./analysistemplates/{webId}.patch.parameters[0].name" = "webId"
"paths./analysistemplates/{webId}.patch.parameters[0].required" = true
"paths./analysistemplates/{webId}.patch.parameters[0].type" = "string"
"paths./analysistemplates/{webId}.patch.parameters[1].description" = "A partial analysis template containing the desired changes."
"paths./analysistemplates/{webId}.patch.parameters[1].in" = "body"
"paths./analysistemplates/{webId}.patch.parameters[1].name" = "template"
"paths./analysistemplates/{webId}.patch.parameters[1].required" = true
"paths./analysistemplates/{webId}.patch.parameters[1].schema.$ref" = "#/definitions/AnalysisTemplate"
"paths./analysistemplates/{webId}.patch.responses.204.description" = "The analysis template was updated."
"paths./analysistemplates/{webId}.patch.summary" = "Update an analysis template by replacing items in its definition."
"paths./analysistemplates/{webId}.patch.tags.length" = 1
"paths./analysistemplates/{webId}.patch.tags[0]" = "AnalysisTemplate"
"paths./analysistemplates/{webId}/categories.get.consumes.length" = 0
"paths./analysistemplates/{webId}/categories.get.deprecated" = false
"paths./analysistemplates/{webId}/categories.get.operationId" = "AnalysisTemplate_GetCategories"
"paths./analysistemplates/{webId}/categories.get.parameters.length" = 2
"paths./analysistemplates/{webId}/categories.get.parameters[0].description" = "The ID of the analysis template."
"paths./analysistemplates/{webId}/categories.get.parameters[0].in" = "path"
"paths./analysistemplates/{webId}/categories.get.parameters[0].name" = "webId"
"paths./analysistemplates/{webId}/categories.get.parameters[0].required" = true
"paths./analysistemplates/{webId}/categories.get.parameters[0].type" = "string"
"paths./analysistemplates/{webId}/categories.get.parameters[1].description" = "List of fields to be returned in the response, separated by semicolons (;). If this parameter is not specified, all available fields will be returned."
"paths./analysistemplates/{webId}/categories.get.parameters[1].in" = "query"
"paths./analysistemplates/{webId}/categories.get.parameters[1].name" = "selectedFields"
"paths./analysistemplates/{webId}/categories.get.parameters[1].required" = false
"paths./analysistemplates/{webId}/categories.get.parameters[1].type" = "string"
"paths./analysistemplates/{webId}/categories.get.responses.200.description" = "A list of categories."
"paths./analysistemplates/{webId}/categories.get.responses.200.schema.$ref" = "#/definitions/Items[AnalysisCategory]"
"paths./analysistemplates/{webId}/categories.get.summary" = "Get an analysis template's categories."
"paths./analysistemplates/{webId}/categories.get.tags.length" = 1
"paths./analysistemplates/{webId}/categories.get.tags[0]" = "AnalysisTemplate"
"paths./analysistemplates/{webId}/security.get.consumes.length" = 0
"paths./analysistemplates/{webId}/security.get.deprecated" = false
"paths./analysistemplates/{webId}/security.get.operationId" = "AnalysisTemplate_GetSecurity"
"paths./analysistemplates/{webId}/security.get.parameters.length" = 4
"paths./analysistemplates/{webId}/security.get.parameters[0].description" = "The ID of the analysis template for the security to be checked."
"paths./analysistemplates/{webId}/security.get.parameters[0].in" = "path"
"paths./analysistemplates/{webId}/security.get.parameters[0].name" = "webId"
"paths./analysistemplates/{webId}/security.get.parameters[0].required" = true
"paths./analysistemplates/{webId}/security.get.parameters[0].type" = "string"
"paths./analysistemplates/{webId}/security.get.parameters[1].collectionFormat" = "multi"
"paths./analysistemplates/{webId}/security.get.parameters[1].description" = "The user identity for the security information to be checked. Multiple security identities may be specified with multiple instances of the parameter. If the parameter is not specified, only the current user's security rights will be returned."
"paths./analysistemplates/{webId}/security.get.parameters[1].in" = "query"
"paths./analysistemplates/{webId}/security.get.parameters[1].items.type" = "string"
"paths./analysistemplates/{webId}/security.get.parameters[1].name" = "userIdentity"
"paths./analysistemplates/{webId}/security.get.parameters[1].required" = true
"paths./analysistemplates/{webId}/security.get.parameters[1].type" = "array"
"paths./analysistemplates/{webId}/security.get.parameters[2].description" = "Indicates if the security cache should be refreshed before getting security information. The default is 'false'."
"paths./analysistemplates/{webId}/security.get.parameters[2].in" = "query"
"paths./analysistemplates/{webId}/security.get.parameters[2].name" = "forceRefresh"
"paths./analysistemplates/{webId}/security.get.parameters[2].required" = false
"paths./analysistemplates/{webId}/security.get.parameters[2].type" = "boolean"
"paths./analysistemplates/{webId}/security.get.parameters[3].description" = "List of fields to be returned in the response, separated by semicolons (;). If this parameter is not specified, all available fields will be returned."
"paths./analysistemplates/{webId}/security.get.parameters[3].in" = "query"
"paths./analysistemplates/{webId}/security.get.parameters[3].name" = "selectedFields"
"paths./analysistemplates/{webId}/security.get.parameters[3].required" = false
"paths./analysistemplates/{webId}/security.get.parameters[3].type" = "string"
"paths./analysistemplates/{webId}/security.get.responses.200.description" = "Security rights."
"paths./analysistemplates/{webId}/security.get.responses.200.schema.$ref" = "#/definitions/Items[SecurityRights]"
"paths./analysistemplates/{webId}/security.get.responses.400.description" = "An invalid or local account is specified as the user identity."
"paths./analysistemplates/{webId}/security.get.responses.400.schema.$ref" = "#/definitions/Errors"
"paths./analysistemplates/{webId}/security.get.responses.401.description" = "Access denied for the specified user identity."
"paths./analysistemplates/{webId}/security.get.responses.401.schema.$ref" = "#/definitions/Errors"
"paths./analysistemplates/{webId}/security.get.responses.409.description" = "Unsupported when using Anonymous authentication method."
"paths./analysistemplates/{webId}/security.get.responses.409.schema.$ref" = "#/definitions/Errors"
"paths./analysistemplates/{webId}/security.get.responses.502.description" = "Failed to retrieve the specified user identity."
"paths./analysistemplates/{webId}/security.get.responses.502.schema.$ref" = "#/definitions/Errors"
"paths./analysistemplates/{webId}/security.get.summary" = "Get the security information of the specified security item associated with the analysis template for a specified user."
"paths./analysistemplates/{webId}/security.get.tags.length" = 1
"paths./analysistemplates/{webId}/security.get.tags[0]" = "AnalysisTemplate"
"paths./analysistemplates/{webId}/securityentries.get.consumes.length" = 0
"paths./analysistemplates/{webId}/securityentries.get.deprecated" = false
"paths./analysistemplates/{webId}/securityentries.get.operationId" = "AnalysisTemplate_GetSecurityEntries"
"paths./analysistemplates/{webId}/securityentries.get.parameters.length" = 3
"paths./analysistemplates/{webId}/securityentries.get.parameters[0].description" = "The ID of the analysis template."
"paths./analysistemplates/{webId}/securityentries.get.parameters[0].in" = "path"
"paths./analysistemplates/{webId}/securityentries.get.parameters[0].name" = "webId"
"paths./analysistemplates/{webId}/securityentries.get.parameters[0].required" = true
"paths./analysistemplates/{webId}/securityentries.get.parameters[0].type" = "string"
"paths./analysistemplates/{webId}/securityentries.get.parameters[1].description" = "The name query string used for filtering security entries. The default is no filter."
"paths./analysistemplates/{webId}/securityentries.get.parameters[1].in" = "query"
"paths./analysistemplates/{webId}/securityentries.get.parameters[1].name" = "nameFilter"
"paths./analysistemplates/{webId}/securityentries.get.parameters[1].required" = false
"paths./analysistemplates/{webId}/securityentries.get.parameters[1].type" = "string"
"paths./analysistemplates/{webId}/securityentries.get.parameters[2].description" = "List of fields to be returned in the response, separated by semicolons (;). If this parameter is not specified, all available fields will be returned."
"paths./analysistemplates/{webId}/securityentries.get.parameters[2].in" = "query"
"paths./analysistemplates/{webId}/securityentries.get.parameters[2].name" = "selectedFields"
"paths./analysistemplates/{webId}/securityentries.get.parameters[2].required" = false
"paths./analysistemplates/{webId}/securityentries.get.parameters[2].type" = "string"
"paths./analysistemplates/{webId}/securityentries.get.responses.200.description" = "A list of security entries matching the specified condition."
"paths./analysistemplates/{webId}/securityentries.get.responses.200.schema.$ref" = "#/definitions/Items[SecurityEntry]"
"paths./analysistemplates/{webId}/securityentries.get.summary" = "Retrieve the security entries associated with the analysis template based on the specified criteria. By default, all security entries for this analysis template are returned."
"paths./analysistemplates/{webId}/securityentries.get.tags.length" = 1
"paths./analysistemplates/{webId}/securityentries.get.tags[0]" = "AnalysisTemplate"
"paths./analysistemplates/{webId}/securityentries.post.consumes.length" = 2
"paths./analysistemplates/{webId}/securityentries.post.consumes[0]" = "application/json"
"paths./analysistemplates/{webId}/securityentries.post.consumes[1]" = "text/json"
"paths./analysistemplates/{webId}/securityentries.post.deprecated" = false
"paths./analysistemplates/{webId}/securityentries.post.operationId" = "AnalysisTemplate_CreateSecurityEntry"
"paths./analysistemplates/{webId}/securityentries.post.parameters.length" = 3
"paths./analysistemplates/{webId}/securityentries.post.parameters[0].description" = "The ID of the analysis template, where the security entry will be created."
"paths./analysistemplates/{webId}/securityentries.post.parameters[0].in" = "path"
"paths./analysistemplates/{webId}/securityentries.post.parameters[0].name" = "webId"
"paths./analysistemplates/{webId}/securityentries.post.parameters[0].required" = true
"paths./analysistemplates/{webId}/securityentries.post.parameters[0].type" = "string"
"paths./analysistemplates/{webId}/securityentries.post.parameters[1].description" = "The new security entry definition. The full list of allow and deny rights must be supplied."
"paths./analysistemplates/{webId}/securityentries.post.parameters[1].in" = "body"
"paths./analysistemplates/{webId}/securityentries.post.parameters[1].name" = "securityEntry"
"paths./analysistemplates/{webId}/securityentries.post.parameters[1].required" = true
"paths./analysistemplates/{webId}/securityentries.post.parameters[1].schema.$ref" = "#/definitions/SecurityEntry"
"paths./analysistemplates/{webId}/securityentries.post.parameters[2].description" = "If false, the new access permissions are only applied to the associated object. If true, the access permissions of children with any parent-child reference types will change when the permissions on the primary parent change."
"paths./analysistemplates/{webId}/securityentries.post.parameters[2].in" = "query"
"paths./analysistemplates/{webId}/securityentries.post.parameters[2].name" = "applyToChildren"
"paths./analysistemplates/{webId}/securityentries.post.parameters[2].required" = false
"paths./analysistemplates/{webId}/securityentries.post.parameters[2].type" = "boolean"
"paths./analysistemplates/{webId}/securityentries.post.responses.201.description" = "The security entry was created. The response's Location header is a link to the security entry."
"paths./analysistemplates/{webId}/securityentries.post.summary" = "Create a security entry owned by the analysis template."
"paths./analysistemplates/{webId}/securityentries.post.tags.length" = 1
"paths./analysistemplates/{webId}/securityentries.post.tags[0]" = "AnalysisTemplate"
"paths./analysistemplates/{webId}/securityentries/{name}.delete.consumes.length" = 0
"paths./analysistemplates/{webId}/securityentries/{name}.delete.deprecated" = false
"paths./analysistemplates/{webId}/securityentries/{name}.delete.operationId" = "AnalysisTemplate_DeleteSecurityEntry"
"paths./analysistemplates/{webId}/securityentries/{name}.delete.parameters.length" = 3
"paths./analysistemplates/{webId}/securityentries/{name}.delete.parameters[0].description" = "The name of the security entry. For every backslash character (\\) in the security entry name, replace with asterisk (*). As an example, use domain*username instead of domain\\username."
"paths./analysistemplates/{webId}/securityentries/{name}.delete.parameters[0].in" = "path"
"paths./analysistemplates/{webId}/securityentries/{name}.delete.parameters[0].name" = "name"
"paths./analysistemplates/{webId}/securityentries/{name}.delete.parameters[0].required" = true
"paths./analysistemplates/{webId}/securityentries/{name}.delete.parameters[0].type" = "string"
"paths./analysistemplates/{webId}/securityentries/{name}.delete.parameters[1].description" = "The ID of the analysis template, where the security entry will be deleted."
"paths./analysistemplates/{webId}/securityentries/{name}.delete.parameters[1].in" = "path"
"paths./analysistemplates/{webId}/securityentries/{name}.delete.parameters[1].name" = "webId"
"paths./analysistemplates/{webId}/securityentries/{name}.delete.parameters[1].required" = true
"paths./analysistemplates/{webId}/securityentries/{name}.delete.parameters[1].type" = "string"
"paths./analysistemplates/{webId}/securityentries/{name}.delete.parameters[2].description" = "If false, the new access permissions are only applied to the associated object. If true, the access permissions of children with any parent-child reference types will change when the permissions on the primary parent change."
"paths./analysistemplates/{webId}/securityentries/{name}.delete.parameters[2].in" = "query"
"paths./analysistemplates/{webId}/securityentries/{name}.delete.parameters[2].name" = "applyToChildren"
"paths./analysistemplates/{webId}/securityentries/{name}.delete.parameters[2].required" = false
"paths./analysistemplates/{webId}/securityentries/{name}.delete.parameters[2].type" = "boolean"
"paths./analysistemplates/{webId}/securityentries/{name}.delete.responses.204.description" = "The security entry was deleted."
"paths./analysistemplates/{webId}/securityentries/{name}.delete.summary" = "Delete a security entry owned by the analysis template."
"paths./analysistemplates/{webId}/securityentries/{name}.delete.tags.length" = 1
"paths./analysistemplates/{webId}/securityentries/{name}.delete.tags[0]" = "AnalysisTemplate"
"paths./analysistemplates/{webId}/securityentries/{name}.get.consumes.length" = 0
"paths./analysistemplates/{webId}/securityentries/{name}.get.deprecated" = false
"paths./analysistemplates/{webId}/securityentries/{name}.get.operationId" = "AnalysisTemplate_GetSecurityEntryByName"
"paths./analysistemplates/{webId}/securityentries/{name}.get.parameters.length" = 3
"paths./analysistemplates/{webId}/securityentries/{name}.get.parameters[0].description" = "The name of the security entry. For every backslash character (\\) in the security entry name, replace with asterisk (*). As an example, use domain*username instead of domain\\username."
"paths./analysistemplates/{webId}/securityentries/{name}.get.parameters[0].in" = "path"
"paths./analysistemplates/{webId}/securityentries/{name}.get.parameters[0].name" = "name"
"paths./analysistemplates/{webId}/securityentries/{name}.get.parameters[0].required" = true
"paths./analysistemplates/{webId}/securityentries/{name}.get.parameters[0].type" = "string"
"paths./analysistemplates/{webId}/securityentries/{name}.get.parameters[1].description" = "The ID of the analysis template."
"paths./analysistemplates/{webId}/securityentries/{name}.get.parameters[1].in" = "path"
"paths./analysistemplates/{webId}/securityentries/{name}.get.parameters[1].name" = "webId"
"paths./analysistemplates/{webId}/securityentries/{name}.get.parameters[1].required" = true
"paths./analysistemplates/{webId}/securityentries/{name}.get.parameters[1].type" = "string"
"paths./analysistemplates/{webId}/securityentries/{name}.get.parameters[2].description" = "List of fields to be returned in the response, separated by semicolons (;). If this parameter is not specified, all available fields will be returned."
"paths./analysistemplates/{webId}/securityentries/{name}.get.parameters[2].in" = "query"
"paths./analysistemplates/{webId}/securityentries/{name}.get.parameters[2].name" = "selectedFields"
"paths./analysistemplates/{webId}/securityentries/{name}.get.parameters[2].required" = false
"paths./analysistemplates/{webId}/securityentries/{name}.get.parameters[2].type" = "string"
"paths./analysistemplates/{webId}/securityentries/{name}.get.responses.200.description" = "The security entry matching the specified condition."
"paths./analysistemplates/{webId}/securityentries/{name}.get.responses.200.schema.$ref" = "#/definitions/SecurityEntry"
"paths./analysistemplates/{webId}/securityentries/{name}.get.responses.404.description" = "The security entry with the specified name is not found."
"paths./analysistemplates/{webId}/securityentries/{name}.get.responses.404.schema.$ref" = "#/definitions/Errors"
"paths./analysistemplates/{webId}/securityentries/{name}.get.summary" = "Retrieve the security entry associated with the analysis template with the specified name."
"paths./analysistemplates/{webId}/securityentries/{name}.get.tags.length" = 1
"paths./analysistemplates/{webId}/securityentries/{name}.get.tags[0]" = "AnalysisTemplate"
"paths./analysistemplates/{webId}/securityentries/{name}.put.consumes.length" = 2
"paths./analysistemplates/{webId}/securityentries/{name}.put.consumes[0]" = "application/json"
"paths./analysistemplates/{webId}/securityentries/{name}.put.consumes[1]" = "text/json"
"paths./analysistemplates/{webId}/securityentries/{name}.put.deprecated" = false
"paths./analysistemplates/{webId}/securityentries/{name}.put.operationId" = "AnalysisTemplate_UpdateSecurityEntry"
"paths./analysistemplates/{webId}/securityentries/{name}.put.parameters.length" = 4
"paths./analysistemplates/{webId}/securityentries/{name}.put.parameters[0].description" = "The name of the security entry."
"paths./analysistemplates/{webId}/securityentries/{name}.put.parameters[0].in" = "path"
"paths./analysistemplates/{webId}/securityentries/{name}.put.parameters[0].name" = "name"
"paths./analysistemplates/{webId}/securityentries/{name}.put.parameters[0].required" = true
"paths./analysistemplates/{webId}/securityentries/{name}.put.parameters[0].type" = "string"
"paths./analysistemplates/{webId}/securityentries/{name}.put.parameters[1].description" = "The ID of the analysis template, where the security entry will be updated."
"paths./analysistemplates/{webId}/securityentries/{name}.put.parameters[1].in" = "path"
"paths./analysistemplates/{webId}/securityentries/{name}.put.parameters[1].name" = "webId"
"paths./analysistemplates/{webId}/securityentries/{name}.put.parameters[1].required" = true
"paths./analysistemplates/{webId}/securityentries/{name}.put.parameters[1].type" = "string"
"paths./analysistemplates/{webId}/securityentries/{name}.put.parameters[2].description" = "The new security entry definition. The full list of allow and deny rights must be supplied or they will be removed."
"paths./analysistemplates/{webId}/securityentries/{name}.put.parameters[2].in" = "body"
"paths./analysistemplates/{webId}/securityentries/{name}.put.parameters[2].name" = "securityEntry"
"paths./analysistemplates/{webId}/securityentries/{name}.put.parameters[2].required" = true
"paths./analysistemplates/{webId}/securityentries/{name}.put.parameters[2].schema.$ref" = "#/definitions/SecurityEntry"
"paths./analysistemplates/{webId}/securityentries/{name}.put.parameters[3].description" = "If false, the new access permissions are only applied to the associated object. If true, the access permissions of children with any parent-child reference types will change when the permissions on the primary parent change."
"paths./analysistemplates/{webId}/securityentries/{name}.put.parameters[3].in" = "query"
"paths./analysistemplates/{webId}/securityentries/{name}.put.parameters[3].name" = "applyToChildren"
"paths./analysistemplates/{webId}/securityentries/{name}.put.parameters[3].required" = false
"paths./analysistemplates/{webId}/securityentries/{name}.put.parameters[3].type" = "boolean"
"paths./analysistemplates/{webId}/securityentries/{name}.put.responses.204.description" = "The security entry was updated."
"paths./analysistemplates/{webId}/securityentries/{name}.put.summary" = "Update a security entry owned by the analysis template."
"paths./analysistemplates/{webId}/securityentries/{name}.put.tags.length" = 1
"paths./analysistemplates/{webId}/securityentries/{name}.put.tags[0]" = "AnalysisTemplate"
"paths./assetdatabases.get.consumes.length" = 0
"paths./assetdatabases.get.deprecated" = false
"paths./assetdatabases.get.description" = "This method returns an asset database based on the hierarchical path associated with it, and should be used when a path has been received from a separate part of the PI System for use in the PI Web API. Users should primarily search with the WebID when available."
"paths./assetdatabases.get.operationId" = "AssetDatabase_GetByPath"
"paths./assetdatabases.get.parameters.length" = 2
"paths./assetdatabases.get.parameters[0].description" = "The path to the database."
"paths./assetdatabases.get.parameters[0].in" = "query"
"paths./assetdatabases.get.parameters[0].name" = "path"
"paths./assetdatabases.get.parameters[0].required" = true
"paths./assetdatabases.get.parameters[0].type" = "string"
"paths./assetdatabases.get.parameters[1].description" = "List of fields to be returned in the response, separated by semicolons (;). If this parameter is not specified, all available fields will be returned."
"paths./assetdatabases.get.parameters[1].in" = "query"
"paths./assetdatabases.get.parameters[1].name" = "selectedFields"
"paths./assetdatabases.get.parameters[1].required" = false
"paths./assetdatabases.get.parameters[1].type" = "string"
"paths./assetdatabases.get.responses.200.description" = "The specified database."
"paths./assetdatabases.get.responses.200.schema.$ref" = "#/definitions/AssetDatabase"
"paths./assetdatabases.get.summary" = "Retrieve an Asset Database by path."
"paths./assetdatabases.get.tags.length" = 1
"paths./assetdatabases.get.tags[0]" = "AssetDatabase"
"paths./assetdatabases/{webId}.delete.consumes.length" = 0
"paths./assetdatabases/{webId}.delete.deprecated" = false
"paths./assetdatabases/{webId}.delete.operationId" = "AssetDatabase_Delete"
"paths./assetdatabases/{webId}.delete.parameters.length" = 1
"paths./assetdatabases/{webId}.delete.parameters[0].description" = "The ID of the database."
"paths./assetdatabases/{webId}.delete.parameters[0].in" = "path"
"paths./assetdatabases/{webId}.delete.parameters[0].name" = "webId"
"paths./assetdatabases/{webId}.delete.parameters[0].required" = true
"paths./assetdatabases/{webId}.delete.parameters[0].type" = "string"
"paths./assetdatabases/{webId}.delete.responses.204.description" = "The database was deleted."
"paths./assetdatabases/{webId}.delete.summary" = "Delete an asset database."
"paths./assetdatabases/{webId}.delete.tags.length" = 1
"paths./assetdatabases/{webId}.delete.tags[0]" = "AssetDatabase"
"paths./assetdatabases/{webId}.get.consumes.length" = 0
"paths./assetdatabases/{webId}.get.deprecated" = false
"paths./assetdatabases/{webId}.get.operationId" = "AssetDatabase_Get"
"paths./assetdatabases/{webId}.get.parameters.length" = 2
"paths./assetdatabases/{webId}.get.parameters[0].description" = "The ID of the database."
"paths./assetdatabases/{webId}.get.parameters[0].in" = "path"
"paths./assetdatabases/{webId}.get.parameters[0].name" = "webId"
"paths./assetdatabases/{webId}.get.parameters[0].required" = true
"paths./assetdatabases/{webId}.get.parameters[0].type" = "string"
"paths./assetdatabases/{webId}.get.parameters[1].description" = "List of fields to be returned in the response, separated by semicolons (;). If this parameter is not specified, all available fields will be returned."
"paths./assetdatabases/{webId}.get.parameters[1].in" = "query"
"paths./assetdatabases/{webId}.get.parameters[1].name" = "selectedFields"
"paths./assetdatabases/{webId}.get.parameters[1].required" = false
"paths./assetdatabases/{webId}.get.parameters[1].type" = "string"
"paths./assetdatabases/{webId}.get.responses.200.description" = "The specified database."
"paths./assetdatabases/{webId}.get.responses.200.schema.$ref" = "#/definitions/AssetDatabase"
"paths./assetdatabases/{webId}.get.summary" = "Retrieve an Asset Database."
"paths./assetdatabases/{webId}.get.tags.length" = 1
"paths./assetdatabases/{webId}.get.tags[0]" = "AssetDatabase"
"paths./assetdatabases/{webId}.patch.consumes.length" = 2
"paths./assetdatabases/{webId}.patch.consumes[0]" = "application/json"
"paths./assetdatabases/{webId}.patch.consumes[1]" = "text/json"
"paths./assetdatabases/{webId}.patch.deprecated" = false
"paths./assetdatabases/{webId}.patch.operationId" = "AssetDatabase_Update"
"paths./assetdatabases/{webId}.patch.parameters.length" = 2
"paths./assetdatabases/{webId}.patch.parameters[0].description" = "The ID of the database."
"paths./assetdatabases/{webId}.patch.parameters[0].in" = "path"
"paths./assetdatabases/{webId}.patch.parameters[0].name" = "webId"
"paths./assetdatabases/{webId}.patch.parameters[0].required" = true
"paths./assetdatabases/{webId}.patch.parameters[0].type" = "string"
"paths./assetdatabases/{webId}.patch.parameters[1].description" = "A partial database containing the desired changes."
"paths./assetdatabases/{webId}.patch.parameters[1].in" = "body"
"paths./assetdatabases/{webId}.patch.parameters[1].name" = "database"
"paths./assetdatabases/{webId}.patch.parameters[1].required" = true
"paths./assetdatabases/{webId}.patch.parameters[1].schema.$ref" = "#/definitions/AssetDatabase"
"paths./assetdatabases/{webId}.patch.responses.204.description" = "The database was updated."
"paths./assetdatabases/{webId}.patch.summary" = "Update an asset database by replacing items in its definition."
"paths./assetdatabases/{webId}.patch.tags.length" = 1
"paths./assetdatabases/{webId}.patch.tags[0]" = "AssetDatabase"
"paths./assetdatabases/{webId}/analyses.get.consumes.length" = 0
"paths./assetdatabases/{webId}/analyses.get.deprecated" = false
"paths./assetdatabases/{webId}/analyses.get.description" = "Users can search for the analyses based on specific search parameters. If no parameters are specified in the search, the default values for each parameter will be used and will return the analyses that match the default search."
"paths./assetdatabases/{webId}/analyses.get.operationId" = "AssetDatabase_FindAnalyses"
"paths./assetdatabases/{webId}/analyses.get.parameters.length" = 8
"paths./assetdatabases/{webId}/analyses.get.parameters[0].description" = "The ID of the database to search for the analyses."
"paths./assetdatabases/{webId}/analyses.get.parameters[0].in" = "path"
"paths./assetdatabases/{webId}/analyses.get.parameters[0].name" = "webId"
"paths./assetdatabases/{webId}/analyses.get.parameters[0].required" = true
"paths./assetdatabases/{webId}/analyses.get.parameters[0].type" = "string"
"paths./assetdatabases/{webId}/analyses.get.parameters[1].collectionFormat" = "multi"
"paths./assetdatabases/{webId}/analyses.get.parameters[1].description" = "Specifies which of the object's properties are searched. Multiple search fields may be specified with multiple instances of the parameter. The default is 'Name'."
"paths./assetdatabases/{webId}/analyses.get.parameters[1].in" = "query"
"paths./assetdatabases/{webId}/analyses.get.parameters[1].items.type" = "string"
"paths./assetdatabases/{webId}/analyses.get.parameters[1].name" = "field"
"paths./assetdatabases/{webId}/analyses.get.parameters[1].required" = true
"paths./assetdatabases/{webId}/analyses.get.parameters[1].type" = "array"
"paths./assetdatabases/{webId}/analyses.get.parameters[2].description" = "The maximum number of objects to be returned per call (page size). The default is 1000."
"paths./assetdatabases/{webId}/analyses.get.parameters[2].in" = "query"
"paths./assetdatabases/{webId}/analyses.get.parameters[2].name" = "maxCount"
"paths./assetdatabases/{webId}/analyses.get.parameters[2].required" = false
"paths./assetdatabases/{webId}/analyses.get.parameters[2].type" = "integer"
"paths./assetdatabases/{webId}/analyses.get.parameters[3].description" = "The query string used for finding analyses. The default is null."
"paths./assetdatabases/{webId}/analyses.get.parameters[3].in" = "query"
"paths./assetdatabases/{webId}/analyses.get.parameters[3].name" = "query"
"paths./assetdatabases/{webId}/analyses.get.parameters[3].required" = false
"paths./assetdatabases/{webId}/analyses.get.parameters[3].type" = "string"
"paths./assetdatabases/{webId}/analyses.get.parameters[4].description" = "List of fields to be returned in the response, separated by semicolons (;). If this parameter is not specified, all available fields will be returned."
"paths./assetdatabases/{webId}/analyses.get.parameters[4].in" = "query"
"paths./assetdatabases/{webId}/analyses.get.parameters[4].name" = "selectedFields"
"paths./assetdatabases/{webId}/analyses.get.parameters[4].required" = false
"paths./assetdatabases/{webId}/analyses.get.parameters[4].type" = "string"
"paths./assetdatabases/{webId}/analyses.get.parameters[5].description" = "The field or property of the object used to sort the returned collection. The default is 'Name'."
"paths./assetdatabases/{webId}/analyses.get.parameters[5].in" = "query"
"paths./assetdatabases/{webId}/analyses.get.parameters[5].name" = "sortField"
"paths./assetdatabases/{webId}/analyses.get.parameters[5].required" = false
"paths./assetdatabases/{webId}/analyses.get.parameters[5].type" = "string"
"paths./assetdatabases/{webId}/analyses.get.parameters[6].description" = "The order that the returned collection is sorted. The default is 'Ascending'."
"paths./assetdatabases/{webId}/analyses.get.parameters[6].in" = "query"
"paths./assetdatabases/{webId}/analyses.get.parameters[6].name" = "sortOrder"
"paths./assetdatabases/{webId}/analyses.get.parameters[6].required" = false
"paths./assetdatabases/{webId}/analyses.get.parameters[6].type" = "string"
"paths./assetdatabases/{webId}/analyses.get.parameters[7].description" = "The starting index (zero based) of the items to be returned. The default is 0."
"paths./assetdatabases/{webId}/analyses.get.parameters[7].in" = "query"
"paths./assetdatabases/{webId}/analyses.get.parameters[7].name" = "startIndex"
"paths./assetdatabases/{webId}/analyses.get.parameters[7].required" = false
"paths./assetdatabases/{webId}/analyses.get.parameters[7].type" = "integer"
"paths./assetdatabases/{webId}/analyses.get.responses.200.description" = "A list of analyses matching the specified conditions."
"paths./assetdatabases/{webId}/analyses.get.responses.200.schema.$ref" = "#/definitions/Items[Analysis]"
"paths./assetdatabases/{webId}/analyses.get.summary" = "Retrieve analyses based on the specified conditions."
"paths./assetdatabases/{webId}/analyses.get.tags.length" = 1
"paths./assetdatabases/{webId}/analyses.get.tags[0]" = "AssetDatabase"
"paths./assetdatabases/{webId}/analysiscategories.get.consumes.length" = 0
"paths./assetdatabases/{webId}/analysiscategories.get.deprecated" = false
"paths./assetdatabases/{webId}/analysiscategories.get.operationId" = "AssetDatabase_GetAnalysisCategories"
"paths./assetdatabases/{webId}/analysiscategories.get.parameters.length" = 2
"paths./assetdatabases/{webId}/analysiscategories.get.parameters[0].description" = "The ID of the database."
"paths./assetdatabases/{webId}/analysiscategories.get.parameters[0].in" = "path"
"paths./assetdatabases/{webId}/analysiscategories.get.parameters[0].name" = "webId"
"paths./assetdatabases/{webId}/analysiscategories.get.parameters[0].required" = true
"paths./assetdatabases/{webId}/analysiscategories.get.parameters[0].type" = "string"
"paths./assetdatabases/{webId}/analysiscategories.get.parameters[1].description" = "List of fields to be returned in the response, separated by semicolons (;). If this parameter is not specified, all available fields will be returned."
"paths./assetdatabases/{webId}/analysiscategories.get.parameters[1].in" = "query"
"paths./assetdatabases/{webId}/analysiscategories.get.parameters[1].name" = "selectedFields"
"paths./assetdatabases/{webId}/analysiscategories.get.parameters[1].required" = false
"paths./assetdatabases/{webId}/analysiscategories.get.parameters[1].type" = "string"
"paths./assetdatabases/{webId}/analysiscategories.get.responses.200.description" = "The analysis categories that exist in the database."
"paths./assetdatabases/{webId}/analysiscategories.get.responses.200.schema.$ref" = "#/definitions/Items[AnalysisCategory]"
"paths./assetdatabases/{webId}/analysiscategories.get.summary" = "Retrieve analysis categories for a given Asset Database."
"paths./assetdatabases/{webId}/analysiscategories.get.tags.length" = 1
"paths./assetdatabases/{webId}/analysiscategories.get.tags[0]" = "AssetDatabase"
"paths./assetdatabases/{webId}/analysiscategories.post.consumes.length" = 2
"paths./assetdatabases/{webId}/analysiscategories.post.consumes[0]" = "application/json"
"paths./assetdatabases/{webId}/analysiscategories.post.consumes[1]" = "text/json"
"paths./assetdatabases/{webId}/analysiscategories.post.deprecated" = false
"paths./assetdatabases/{webId}/analysiscategories.post.operationId" = "AssetDatabase_CreateAnalysisCategory"
"paths./assetdatabases/{webId}/analysiscategories.post.parameters.length" = 2
"paths./assetdatabases/{webId}/analysiscategories.post.parameters[0].description" = "The ID of the database in which to create the analysis category."
"paths./assetdatabases/{webId}/analysiscategories.post.parameters[0].in" = "path"
"paths./assetdatabases/{webId}/analysiscategories.post.parameters[0].name" = "webId"
"paths./assetdatabases/{webId}/analysiscategories.post.parameters[0].required" = true
"paths./assetdatabases/{webId}/analysiscategories.post.parameters[0].type" = "string"
"paths./assetdatabases/{webId}/analysiscategories.post.parameters[1].description" = "The new analysis category definition."
"paths./assetdatabases/{webId}/analysiscategories.post.parameters[1].in" = "body"
"paths./assetdatabases/{webId}/analysiscategories.post.parameters[1].name" = "analysisCategory"
"paths./assetdatabases/{webId}/analysiscategories.post.parameters[1].required" = true
"paths./assetdatabases/{webId}/analysiscategories.post.parameters[1].schema.$ref" = "#/definitions/AnalysisCategory"
"paths./assetdatabases/{webId}/analysiscategories.post.responses.201.description" = "The analysis category was created. The response's Location header is a link to the analysis category."
"paths./assetdatabases/{webId}/analysiscategories.post.summary" = "Create an analysis category at the Asset Database root."
"paths./assetdatabases/{webId}/analysiscategories.post.tags.length" = 1
"paths./assetdatabases/{webId}/analysiscategories.post.tags[0]" = "AssetDatabase"
"paths./assetdatabases/{webId}/analysistemplates.get.consumes.length" = 0
"paths./assetdatabases/{webId}/analysistemplates.get.deprecated" = false
"paths./assetdatabases/{webId}/analysistemplates.get.description" = "Users can search for the analysis templates based on specific search parameters. If no parameters are specified in the search, the default values for each parameter will be used and will return the templates that match the default search."
"paths./assetdatabases/{webId}/analysistemplates.get.operationId" = "AssetDatabase_GetAnalysisTemplates"
"paths./assetdatabases/{webId}/analysistemplates.get.parameters.length" = 7
"paths./assetdatabases/{webId}/analysistemplates.get.parameters[0].description" = "The ID of the database to search."
"paths./assetdatabases/{webId}/analysistemplates.get.parameters[0].in" = "path"
"paths./assetdatabases/{webId}/analysistemplates.get.parameters[0].name" = "webId"
"paths./assetdatabases/{webId}/analysistemplates.get.parameters[0].required" = true
"paths./assetdatabases/{webId}/analysistemplates.get.parameters[0].type" = "string"
"paths./assetdatabases/{webId}/analysistemplates.get.parameters[1].collectionFormat" = "multi"
"paths./assetdatabases/{webId}/analysistemplates.get.parameters[1].description" = "Specifies which of the object's properties are searched. Multiple search fields may be specified with multiple instances of the parameter. The default is 'Name'."
"paths./assetdatabases/{webId}/analysistemplates.get.parameters[1].in" = "query"
"paths./assetdatabases/{webId}/analysistemplates.get.parameters[1].items.type" = "string"
"paths./assetdatabases/{webId}/analysistemplates.get.parameters[1].name" = "field"
"paths./assetdatabases/{webId}/analysistemplates.get.parameters[1].required" = true
"paths./assetdatabases/{webId}/analysistemplates.get.parameters[1].type" = "array"
"paths./assetdatabases/{webId}/analysistemplates.get.parameters[2].description" = "The maximum number of objects to be returned per call (page size). The default is 1000."
"paths./assetdatabases/{webId}/analysistemplates.get.parameters[2].in" = "query"
"paths./assetdatabases/{webId}/analysistemplates.get.parameters[2].name" = "maxCount"
"paths./assetdatabases/{webId}/analysistemplates.get.parameters[2].required" = false
"paths./assetdatabases/{webId}/analysistemplates.get.parameters[2].type" = "integer"
"paths./assetdatabases/{webId}/analysistemplates.get.parameters[3].description" = "The query string used for finding objects. The default is no query string."
"paths./assetdatabases/{webId}/analysistemplates.get.parameters[3].in" = "query"
"paths./assetdatabases/{webId}/analysistemplates.get.parameters[3].name" = "query"
"paths./assetdatabases/{webId}/analysistemplates.get.parameters[3].required" = false
"paths./assetdatabases/{webId}/analysistemplates.get.parameters[3].type" = "string"
"paths./assetdatabases/{webId}/analysistemplates.get.parameters[4].description" = "List of fields to be returned in the response, separated by semicolons (;). If this parameter is not specified, all available fields will be returned."
"paths./assetdatabases/{webId}/analysistemplates.get.parameters[4].in" = "query"
"paths./assetdatabases/{webId}/analysistemplates.get.parameters[4].name" = "selectedFields"
"paths./assetdatabases/{webId}/analysistemplates.get.parameters[4].required" = false
"paths./assetdatabases/{webId}/analysistemplates.get.parameters[4].type" = "string"
"paths./assetdatabases/{webId}/analysistemplates.get.parameters[5].description" = "The field or property of the object used to sort the returned collection. The default is 'Name'."
"paths./assetdatabases/{webId}/analysistemplates.get.parameters[5].in" = "query"
"paths./assetdatabases/{webId}/analysistemplates.get.parameters[5].name" = "sortField"
"paths./assetdatabases/{webId}/analysistemplates.get.parameters[5].required" = false
"paths./assetdatabases/{webId}/analysistemplates.get.parameters[5].type" = "string"
"paths./assetdatabases/{webId}/analysistemplates.get.parameters[6].description" = "The order that the returned collection is sorted. The default is 'Ascending'."
"paths./assetdatabases/{webId}/analysistemplates.get.parameters[6].in" = "query"
"paths./assetdatabases/{webId}/analysistemplates.get.parameters[6].name" = "sortOrder"
"paths./assetdatabases/{webId}/analysistemplates.get.parameters[6].required" = false
"paths./assetdatabases/{webId}/analysistemplates.get.parameters[6].type" = "string"
"paths./assetdatabases/{webId}/analysistemplates.get.responses.200.description" = "A list of analysis templates matching the specified condition."
"paths./assetdatabases/{webId}/analysistemplates.get.responses.200.schema.$ref" = "#/definitions/Items[AnalysisTemplate]"
"paths./assetdatabases/{webId}/analysistemplates.get.summary" = "Retrieve analysis templates based on the specified criteria. By default, all analysis templates in the specified Asset Database are returned."
"paths./assetdatabases/{webId}/analysistemplates.get.tags.length" = 1
"paths./assetdatabases/{webId}/analysistemplates.get.tags[0]" = "AssetDatabase"
"paths./assetdatabases/{webId}/analysistemplates.post.consumes.length" = 2
"paths./assetdatabases/{webId}/analysistemplates.post.consumes[0]" = "application/json"
"paths./assetdatabases/{webId}/analysistemplates.post.consumes[1]" = "text/json"
"paths./assetdatabases/{webId}/analysistemplates.post.deprecated" = false
"paths./assetdatabases/{webId}/analysistemplates.post.description" = "Analyses that are based on an analysis template will inherit characteristics defined in the template."
"paths./assetdatabases/{webId}/analysistemplates.post.operationId" = "AssetDatabase_CreateAnalysisTemplate"
"paths./assetdatabases/{webId}/analysistemplates.post.parameters.length" = 2
"paths./assetdatabases/{webId}/analysistemplates.post.parameters[0].description" = "The ID of the database in which to create the analysis template."
"paths./assetdatabases/{webId}/analysistemplates.post.parameters[0].in" = "path"
"paths./assetdatabases/{webId}/analysistemplates.post.parameters[0].name" = "webId"
"paths./assetdatabases/{webId}/analysistemplates.post.parameters[0].required" = true
"paths./assetdatabases/{webId}/analysistemplates.post.parameters[0].type" = "string"
"paths./assetdatabases/{webId}/analysistemplates.post.parameters[1].description" = "The new analysis template definition."
"paths./assetdatabases/{webId}/analysistemplates.post.parameters[1].in" = "body"
"paths./assetdatabases/{webId}/analysistemplates.post.parameters[1].name" = "template"
"paths./assetdatabases/{webId}/analysistemplates.post.parameters[1].required" = true
"paths./assetdatabases/{webId}/analysistemplates.post.parameters[1].schema.$ref" = "#/definitions/AnalysisTemplate"
"paths./assetdatabases/{webId}/analysistemplates.post.responses.201.description" = "The analysis template was created. The response's Location header is a link to the created template."
"paths./assetdatabases/{webId}/analysistemplates.post.summary" = "Create an analysis template at the Asset Database root."
"paths./assetdatabases/{webId}/analysistemplates.post.tags.length" = 1
"paths./assetdatabases/{webId}/analysistemplates.post.tags[0]" = "AssetDatabase"
"paths./assetdatabases/{webId}/attributecategories.get.consumes.length" = 0
"paths./assetdatabases/{webId}/attributecategories.get.deprecated" = false
"paths./assetdatabases/{webId}/attributecategories.get.operationId" = "AssetDatabase_GetAttributeCategories"
"paths./assetdatabases/{webId}/attributecategories.get.parameters.length" = 2
"paths./assetdatabases/{webId}/attributecategories.get.parameters[0].description" = "The ID of the database."
"paths./assetdatabases/{webId}/attributecategories.get.parameters[0].in" = "path"
"paths./assetdatabases/{webId}/attributecategories.get.parameters[0].name" = "webId"
"paths./assetdatabases/{webId}/attributecategories.get.parameters[0].required" = true
"paths./assetdatabases/{webId}/attributecategories.get.parameters[0].type" = "string"
"paths./assetdatabases/{webId}/attributecategories.get.parameters[1].description" = "List of fields to be returned in the response, separated by semicolons (;). If this parameter is not specified, all available fields will be returned."
"paths./assetdatabases/{webId}/attributecategories.get.parameters[1].in" = "query"
"paths./assetdatabases/{webId}/attributecategories.get.parameters[1].name" = "selectedFields"
"paths./assetdatabases/{webId}/attributecategories.get.parameters[1].required" = false
"paths./assetdatabases/{webId}/attributecategories.get.parameters[1].type" = "string"
"paths./assetdatabases/{webId}/attributecategories.get.responses.200.description" = "The attribute categories that exist in the database."
"paths./assetdatabases/{webId}/attributecategories.get.responses.200.schema.$ref" = "#/definitions/Items[AttributeCategory]"
"paths./assetdatabases/{webId}/attributecategories.get.summary" = "Retrieve attribute categories for a given Asset Database."
"paths./assetdatabases/{webId}/attributecategories.get.tags.length" = 1
"paths./assetdatabases/{webId}/attributecategories.get.tags[0]" = "AssetDatabase"
"paths./assetdatabases/{webId}/attributecategories.post.consumes.length" = 2
"paths./assetdatabases/{webId}/attributecategories.post.consumes[0]" = "application/json"
"paths./assetdatabases/{webId}/attributecategories.post.consumes[1]" = "text/json"
"paths./assetdatabases/{webId}/attributecategories.post.deprecated" = false
"paths./assetdatabases/{webId}/attributecategories.post.operationId" = "AssetDatabase_CreateAttributeCategory"
"paths./assetdatabases/{webId}/attributecategories.post.parameters.length" = 2
"paths./assetdatabases/{webId}/attributecategories.post.parameters[0].description" = "The ID of the database in which to create the attribute category."
"paths./assetdatabases/{webId}/attributecategories.post.parameters[0].in" = "path"
"paths./assetdatabases/{webId}/attributecategories.post.parameters[0].name" = "webId"
"paths./assetdatabases/{webId}/attributecategories.post.parameters[0].required" = true
"paths./assetdatabases/{webId}/attributecategories.post.parameters[0].type" = "string"
"paths./assetdatabases/{webId}/attributecategories.post.parameters[1].description" = "The new attribute category definition."
"paths./assetdatabases/{webId}/attributecategories.post.parameters[1].in" = "body"
"paths./assetdatabases/{webId}/attributecategories.post.parameters[1].name" = "attributeCategory"
"paths./assetdatabases/{webId}/attributecategories.post.parameters[1].required" = true
"paths./assetdatabases/{webId}/attributecategories.post.parameters[1].schema.$ref" = "#/definitions/AttributeCategory"
"paths./assetdatabases/{webId}/attributecategories.post.responses.201.description" = "The attribute category was created. The response's Location header is a link to the attribute category."
"paths./assetdatabases/{webId}/attributecategories.post.summary" = "Create an attribute category at the Asset Database root."
"paths./assetdatabases/{webId}/attributecategories.post.tags.length" = 1
"paths./assetdatabases/{webId}/attributecategories.post.tags[0]" = "AssetDatabase"
"paths./assetdatabases/{webId}/elementattributes.get.consumes.length" = 0
"paths./assetdatabases/{webId}/elementattributes.get.deprecated" = false
"paths./assetdatabases/{webId}/elementattributes.get.operationId" = "AssetDatabase_FindElementAttributes"
"paths./assetdatabases/{webId}/elementattributes.get.parameters.length" = 16
"paths./assetdatabases/{webId}/elementattributes.get.parameters[0].description" = "The ID of the asset database to use as the root of the search."
"paths./assetdatabases/{webId}/elementattributes.get.parameters[0].in" = "path"
"paths./assetdatabases/{webId}/elementattributes.get.parameters[0].name" = "webId"
"paths./assetdatabases/{webId}/elementattributes.get.parameters[0].required" = true
"paths./assetdatabases/{webId}/elementattributes.get.parameters[0].type" = "string"
"paths./assetdatabases/{webId}/elementattributes.get.parameters[10].description" = "The maximum number of objects to be returned (the page size). The default is 1000."
"paths./assetdatabases/{webId}/elementattributes.get.parameters[10].in" = "query"
"paths./assetdatabases/{webId}/elementattributes.get.parameters[10].name" = "maxCount"
"paths./assetdatabases/{webId}/elementattributes.get.parameters[10].required" = false
"paths./assetdatabases/{webId}/elementattributes.get.parameters[10].type" = "integer"
"paths./assetdatabases/{webId}/elementattributes.get.parameters[11].description" = "Specifies if the search should include objects nested further than immediate children of the given resource. The default is 'false'."
"paths./assetdatabases/{webId}/elementattributes.get.parameters[11].in" = "query"
"paths./assetdatabases/{webId}/elementattributes.get.parameters[11].name" = "searchFullHierarchy"
"paths./assetdatabases/{webId}/elementattributes.get.parameters[11].required" = false
"paths./assetdatabases/{webId}/elementattributes.get.parameters[11].type" = "boolean"
"paths./assetdatabases/{webId}/elementattributes.get.parameters[12].description" = "List of fields to be returned in the response, separated by semicolons (;). If this parameter is not specified, all available fields will be returned."
"paths./assetdatabases/{webId}/elementattributes.get.parameters[12].in" = "query"
"paths./assetdatabases/{webId}/elementattributes.get.parameters[12].name" = "selectedFields"
"paths./assetdatabases/{webId}/elementattributes.get.parameters[12].required" = false
"paths./assetdatabases/{webId}/elementattributes.get.parameters[12].type" = "string"
"paths./assetdatabases/{webId}/elementattributes.get.parameters[13].description" = "The field or property of the object used to sort the returned collection. The default is 'Name'."
"paths./assetdatabases/{webId}/elementattributes.get.parameters[13].in" = "query"
"paths./assetdatabases/{webId}/elementattributes.get.parameters[13].name" = "sortField"
"paths./assetdatabases/{webId}/elementattributes.get.parameters[13].required" = false
"paths./assetdatabases/{webId}/elementattributes.get.parameters[13].type" = "string"
"paths./assetdatabases/{webId}/elementattributes.get.parameters[14].description" = "The order that the returned collection is sorted. The default is 'Ascending'."
"paths./assetdatabases/{webId}/elementattributes.get.parameters[14].in" = "query"
"paths./assetdatabases/{webId}/elementattributes.get.parameters[14].name" = "sortOrder"
"paths./assetdatabases/{webId}/elementattributes.get.parameters[14].required" = false
"paths./assetdatabases/{webId}/elementattributes.get.parameters[14].type" = "string"
"paths./assetdatabases/{webId}/elementattributes.get.parameters[15].description" = "The starting index (zero based) of the items to be returned. The default is 0."
"paths./assetdatabases/{webId}/elementattributes.get.parameters[15].in" = "query"
"paths./assetdatabases/{webId}/elementattributes.get.parameters[15].name" = "startIndex"
"paths./assetdatabases/{webId}/elementattributes.get.parameters[15].required" = false
"paths./assetdatabases/{webId}/elementattributes.get.parameters[15].type" = "integer"
"paths./assetdatabases/{webId}/elementattributes.get.parameters[1].description" = "Specify that returned attributes must have this category. The default is no filter."
"paths./assetdatabases/{webId}/elementattributes.get.parameters[1].in" = "query"
"paths./assetdatabases/{webId}/elementattributes.get.parameters[1].name" = "attributeCategory"
"paths./assetdatabases/{webId}/elementattributes.get.parameters[1].required" = false
"paths./assetdatabases/{webId}/elementattributes.get.parameters[1].type" = "string"
"paths./assetdatabases/{webId}/elementattributes.get.parameters[2].description" = "The attribute description filter string used for finding objects. Only the first 440 characters of the description will be searched. For Asset Servers older than 2.7, a 400 status code (Bad Request) will be returned if this parameter is specified. The default is no filter."
"paths./assetdatabases/{webId}/elementattributes.get.parameters[2].in" = "query"
"paths./assetdatabases/{webId}/elementattributes.get.parameters[2].name" = "attributeDescriptionFilter"
"paths./assetdatabases/{webId}/elementattributes.get.parameters[2].required" = false
"paths./assetdatabases/{webId}/elementattributes.get.parameters[2].type" = "string"
"paths./assetdatabases/{webId}/elementattributes.get.parameters[3].description" = "The attribute name filter string used for finding objects. The default is no filter."
"paths./assetdatabases/{webId}/elementattributes.get.parameters[3].in" = "query"
"paths./assetdatabases/{webId}/elementattributes.get.parameters[3].name" = "attributeNameFilter"
"paths./assetdatabases/{webId}/elementattributes.get.parameters[3].required" = false
"paths./assetdatabases/{webId}/elementattributes.get.parameters[3].type" = "string"
"paths./assetdatabases/{webId}/elementattributes.get.parameters[4].description" = "Specify that returned attributes' value type must be this value type. The default is no filter."
"paths./assetdatabases/{webId}/elementattributes.get.parameters[4].in" = "query"
"paths./assetdatabases/{webId}/elementattributes.get.parameters[4].name" = "attributeType"
"paths./assetdatabases/{webId}/elementattributes.get.parameters[4].required" = false
"paths./assetdatabases/{webId}/elementattributes.get.parameters[4].type" = "string"
"paths./assetdatabases/{webId}/elementattributes.get.parameters[5].description" = "Specify that the owner of the returned attributes must have this category. The default is no filter."
"paths./assetdatabases/{webId}/elementattributes.get.parameters[5].in" = "query"
"paths./assetdatabases/{webId}/elementattributes.get.parameters[5].name" = "elementCategory"
"paths./assetdatabases/{webId}/elementattributes.get.parameters[5].required" = false
"paths./assetdatabases/{webId}/elementattributes.get.parameters[5].type" = "string"
"paths./assetdatabases/{webId}/elementattributes.get.parameters[6].description" = "The element description filter string used for finding objects. Only the first 440 characters of the description will be searched. For Asset Servers older than 2.7, a 400 status code (Bad Request) will be returned if this parameter is specified. The default is no filter."
"paths./assetdatabases/{webId}/elementattributes.get.parameters[6].in" = "query"
"paths./assetdatabases/{webId}/elementattributes.get.parameters[6].name" = "elementDescriptionFilter"
"paths./assetdatabases/{webId}/elementattributes.get.parameters[6].required" = false
"paths./assetdatabases/{webId}/elementattributes.get.parameters[6].type" = "string"
"paths./assetdatabases/{webId}/elementattributes.get.parameters[7].description" = "The element name filter string used for finding objects. The default is no filter."
"paths./assetdatabases/{webId}/elementattributes.get.parameters[7].in" = "query"
"paths./assetdatabases/{webId}/elementattributes.get.parameters[7].name" = "elementNameFilter"
"paths./assetdatabases/{webId}/elementattributes.get.parameters[7].required" = false
"paths./assetdatabases/{webId}/elementattributes.get.parameters[7].type" = "string"
"paths./assetdatabases/{webId}/elementattributes.get.parameters[8].description" = "Specify that the owner of the returned attributes must have this template or a template derived from this template. The default is no filter."
"paths./assetdatabases/{webId}/elementattributes.get.parameters[8].in" = "query"
"paths./assetdatabases/{webId}/elementattributes.get.parameters[8].name" = "elementTemplate"
"paths./assetdatabases/{webId}/elementattributes.get.parameters[8].required" = false
"paths./assetdatabases/{webId}/elementattributes.get.parameters[8].type" = "string"
"paths./assetdatabases/{webId}/elementattributes.get.parameters[9].description" = "Specify that the element of the returned attributes must have this AFElementType. The default is no filter."
"paths./assetdatabases/{webId}/elementattributes.get.parameters[9].in" = "query"
"paths./assetdatabases/{webId}/elementattributes.get.parameters[9].name" = "elementType"
"paths./assetdatabases/{webId}/elementattributes.get.parameters[9].required" = false
"paths./assetdatabases/{webId}/elementattributes.get.parameters[9].type" = "string"
"paths./assetdatabases/{webId}/elementattributes.get.responses.200.description" = "a list of matching attributes."
"paths./assetdatabases/{webId}/elementattributes.get.responses.200.schema.$ref" = "#/definitions/Items[Attribute]"
"paths./assetdatabases/{webId}/elementattributes.get.summary" = "Retrieves a list of element attributes matching the specified filters from the specified asset database."
"paths./assetdatabases/{webId}/elementattributes.get.tags.length" = 1
"paths./assetdatabases/{webId}/elementattributes.get.tags[0]" = "AssetDatabase"
"paths./assetdatabases/{webId}/elementcategories.get.consumes.length" = 0
"paths./assetdatabases/{webId}/elementcategories.get.deprecated" = false
"paths./assetdatabases/{webId}/elementcategories.get.operationId" = "AssetDatabase_GetElementCategories"
"paths./assetdatabases/{webId}/elementcategories.get.parameters.length" = 2
"paths./assetdatabases/{webId}/elementcategories.get.parameters[0].description" = "The ID of the database."
"paths./assetdatabases/{webId}/elementcategories.get.parameters[0].in" = "path"
"paths./assetdatabases/{webId}/elementcategories.get.parameters[0].name" = "webId"
"paths./assetdatabases/{webId}/elementcategories.get.parameters[0].required" = true
"paths./assetdatabases/{webId}/elementcategories.get.parameters[0].type" = "string"
"paths./assetdatabases/{webId}/elementcategories.get.parameters[1].description" = "List of fields to be returned in the response, separated by semicolons (;). If this parameter is not specified, all available fields will be returned."
"paths./assetdatabases/{webId}/elementcategories.get.parameters[1].in" = "query"
"paths./assetdatabases/{webId}/elementcategories.get.parameters[1].name" = "selectedFields"
"paths./assetdatabases/{webId}/elementcategories.get.parameters[1].required" = false
"paths./assetdatabases/{webId}/elementcategories.get.parameters[1].type" = "string"
"paths./assetdatabases/{webId}/elementcategories.get.responses.200.description" = "The element categories that exist in the datbase."
"paths./assetdatabases/{webId}/elementcategories.get.responses.200.schema.$ref" = "#/definitions/Items[ElementCategory]"
"paths./assetdatabases/{webId}/elementcategories.get.summary" = "Retrieve element categories for a given Asset Database."
"paths./assetdatabases/{webId}/elementcategories.get.tags.length" = 1
"paths./assetdatabases/{webId}/elementcategories.get.tags[0]" = "AssetDatabase"
"paths./assetdatabases/{webId}/elementcategories.post.consumes.length" = 2
"paths./assetdatabases/{webId}/elementcategories.post.consumes[0]" = "application/json"
"paths./assetdatabases/{webId}/elementcategories.post.consumes[1]" = "text/json"
"paths./assetdatabases/{webId}/elementcategories.post.deprecated" = false
"paths./assetdatabases/{webId}/elementcategories.post.operationId" = "AssetDatabase_CreateElementCategory"
"paths./assetdatabases/{webId}/elementcategories.post.parameters.length" = 2
"paths./assetdatabases/{webId}/elementcategories.post.parameters[0].description" = "The ID of the database in which to create the element category."
"paths./assetdatabases/{webId}/elementcategories.post.parameters[0].in" = "path"
"paths./assetdatabases/{webId}/elementcategories.post.parameters[0].name" = "webId"
"paths./assetdatabases/{webId}/elementcategories.post.parameters[0].required" = true
"paths./assetdatabases/{webId}/elementcategories.post.parameters[0].type" = "string"
"paths./assetdatabases/{webId}/elementcategories.post.parameters[1].description" = "The new element category definition."
"paths./assetdatabases/{webId}/elementcategories.post.parameters[1].in" = "body"
"paths./assetdatabases/{webId}/elementcategories.post.parameters[1].name" = "elementCategory"
"paths./assetdatabases/{webId}/elementcategories.post.parameters[1].required" = true
"paths./assetdatabases/{webId}/elementcategories.post.parameters[1].schema.$ref" = "#/definitions/ElementCategory"
"paths./assetdatabases/{webId}/elementcategories.post.responses.201.description" = "The element category was created. The response's Location header is a link to the element category."
"paths./assetdatabases/{webId}/elementcategories.post.summary" = "Create an element category at the Asset Database root."
"paths./assetdatabases/{webId}/elementcategories.post.tags.length" = 1
"paths./assetdatabases/{webId}/elementcategories.post.tags[0]" = "AssetDatabase"
"paths./assetdatabases/{webId}/elements.get.consumes.length" = 0
"paths./assetdatabases/{webId}/elements.get.deprecated" = false
"paths./assetdatabases/{webId}/elements.get.description" = "Users can search for the elements based on specific search parameters. If no parameters are specified in the search, the default values for each parameter will be used and will return the elements that match the default search."
"paths./assetdatabases/{webId}/elements.get.operationId" = "AssetDatabase_GetElements"
"paths./assetdatabases/{webId}/elements.get.parameters.length" = 12
"paths./assetdatabases/{webId}/elements.get.parameters[0].description" = "The ID of the database to use as the root of the search."
"paths./assetdatabases/{webId}/elements.get.parameters[0].in" = "path"
"paths./assetdatabases/{webId}/elements.get.parameters[0].name" = "webId"
"paths./assetdatabases/{webId}/elements.get.parameters[0].required" = true
"paths./assetdatabases/{webId}/elements.get.parameters[0].type" = "string"
"paths./assetdatabases/{webId}/elements.get.parameters[10].description" = "The starting index (zero based) of the items to be returned. The default is 0."
"paths./assetdatabases/{webId}/elements.get.parameters[10].in" = "query"
"paths./assetdatabases/{webId}/elements.get.parameters[10].name" = "startIndex"
"paths./assetdatabases/{webId}/elements.get.parameters[10].required" = false
"paths./assetdatabases/{webId}/elements.get.parameters[10].type" = "integer"
"paths./assetdatabases/{webId}/elements.get.parameters[11].description" = "Specify that returned elements must have this template or a template derived from this template. The default is no template filter."
"paths./assetdatabases/{webId}/elements.get.parameters[11].in" = "query"
"paths./assetdatabases/{webId}/elements.get.parameters[11].name" = "templateName"
"paths./assetdatabases/{webId}/elements.get.parameters[11].required" = false
"paths./assetdatabases/{webId}/elements.get.parameters[11].type" = "string"
"paths./assetdatabases/{webId}/elements.get.parameters[1].description" = "Specify that returned elements must have this category. The default is no category filter."
"paths./assetdatabases/{webId}/elements.get.parameters[1].in" = "query"
"paths./assetdatabases/{webId}/elements.get.parameters[1].name" = "categoryName"
"paths./assetdatabases/{webId}/elements.get.parameters[1].required" = false
"paths./assetdatabases/{webId}/elements.get.parameters[1].type" = "string"
"paths./assetdatabases/{webId}/elements.get.parameters[2].description" = "Specify that returned elements must have this description. The default is no description filter."
"paths./assetdatabases/{webId}/elements.get.parameters[2].in" = "query"
"paths./assetdatabases/{webId}/elements.get.parameters[2].name" = "descriptionFilter"
"paths./assetdatabases/{webId}/elements.get.parameters[2].required" = false
"paths./assetdatabases/{webId}/elements.get.parameters[2].type" = "string"
"paths./assetdatabases/{webId}/elements.get.parameters[3].description" = "Specify that returned elements must have this type. The default type is 'Any'."
"paths./assetdatabases/{webId}/elements.get.parameters[3].in" = "query"
"paths./assetdatabases/{webId}/elements.get.parameters[3].name" = "elementType"
"paths./assetdatabases/{webId}/elements.get.parameters[3].required" = false
"paths./assetdatabases/{webId}/elements.get.parameters[3].type" = "string"
"paths./assetdatabases/{webId}/elements.get.parameters[4].description" = "The maximum number of objects to be returned per call (page size). The default is 1000."
"paths./assetdatabases/{webId}/elements.get.parameters[4].in" = "query"
"paths./assetdatabases/{webId}/elements.get.parameters[4].name" = "maxCount"
"paths./assetdatabases/{webId}/elements.get.parameters[4].required" = false
"paths./assetdatabases/{webId}/elements.get.parameters[4].type" = "integer"
"paths./assetdatabases/{webId}/elements.get.parameters[5].description" = "The name query string used for finding objects. The default is no filter."
"paths./assetdatabases/{webId}/elements.get.parameters[5].in" = "query"
"paths./assetdatabases/{webId}/elements.get.parameters[5].name" = "nameFilter"
"paths./assetdatabases/{webId}/elements.get.parameters[5].required" = false
"paths./assetdatabases/{webId}/elements.get.parameters[5].type" = "string"
"paths./assetdatabases/{webId}/elements.get.parameters[6].description" = "Specifies if the search should include objects nested further than the immediate children of the searchRoot. The default is 'false'."
"paths./assetdatabases/{webId}/elements.get.parameters[6].in" = "query"
"paths./assetdatabases/{webId}/elements.get.parameters[6].name" = "searchFullHierarchy"
"paths./assetdatabases/{webId}/elements.get.parameters[6].required" = false
"paths./assetdatabases/{webId}/elements.get.parameters[6].type" = "boolean"
"paths./assetdatabases/{webId}/elements.get.parameters[7].description" = "List of fields to be returned in the response, separated by semicolons (;). If this parameter is not specified, all available fields will be returned."
"paths./assetdatabases/{webId}/elements.get.parameters[7].in" = "query"
"paths./assetdatabases/{webId}/elements.get.parameters[7].name" = "selectedFields"
"paths./assetdatabases/{webId}/elements.get.parameters[7].required" = false
"paths./assetdatabases/{webId}/elements.get.parameters[7].type" = "string"
"paths./assetdatabases/{webId}/elements.get.parameters[8].description" = "The field or property of the object used to sort the returned collection. The default is 'Name'."
"paths./assetdatabases/{webId}/elements.get.parameters[8].in" = "query"
"paths./assetdatabases/{webId}/elements.get.parameters[8].name" = "sortField"
"paths./assetdatabases/{webId}/elements.get.parameters[8].required" = false
"paths./assetdatabases/{webId}/elements.get.parameters[8].type" = "string"
"paths./assetdatabases/{webId}/elements.get.parameters[9].description" = "The order that the returned collection is sorted. The default is 'Ascending'."
"paths./assetdatabases/{webId}/elements.get.parameters[9].in" = "query"
"paths./assetdatabases/{webId}/elements.get.parameters[9].name" = "sortOrder"
"paths./assetdatabases/{webId}/elements.get.parameters[9].required" = false
"paths./assetdatabases/{webId}/elements.get.parameters[9].type" = "string"
"paths./assetdatabases/{webId}/elements.get.responses.200.description" = "A list of elements matching the specified conditions."
"paths./assetdatabases/{webId}/elements.get.responses.200.schema.$ref" = "#/definitions/Items[Element]"
"paths./assetdatabases/{webId}/elements.get.summary" = "Retrieve elements based on the specified conditions. By default, this method selects immediate children of the specified asset database."
"paths./assetdatabases/{webId}/elements.get.tags.length" = 1
"paths./assetdatabases/{webId}/elements.get.tags[0]" = "AssetDatabase"
"paths./assetdatabases/{webId}/elements.post.consumes.length" = 2
"paths./assetdatabases/{webId}/elements.post.consumes[0]" = "application/json"
"paths./assetdatabases/{webId}/elements.post.consumes[1]" = "text/json"
"paths./assetdatabases/{webId}/elements.post.deprecated" = false
"paths./assetdatabases/{webId}/elements.post.operationId" = "AssetDatabase_CreateElement"
"paths./assetdatabases/{webId}/elements.post.parameters.length" = 2
"paths./assetdatabases/{webId}/elements.post.parameters[0].description" = "The ID of the asset database on which to create the element."
"paths./assetdatabases/{webId}/elements.post.parameters[0].in" = "path"
"paths./assetdatabases/{webId}/elements.post.parameters[0].name" = "webId"
"paths./assetdatabases/{webId}/elements.post.parameters[0].required" = true
"paths./assetdatabases/{webId}/elements.post.parameters[0].type" = "string"
"paths./assetdatabases/{webId}/elements.post.parameters[1].description" = "The new element definition."
"paths./assetdatabases/{webId}/elements.post.parameters[1].in" = "body"
"paths./assetdatabases/{webId}/elements.post.parameters[1].name" = "element"
"paths./assetdatabases/{webId}/elements.post.parameters[1].required" = true
"paths./assetdatabases/{webId}/elements.post.parameters[1].schema.$ref" = "#/definitions/Element"
"paths./assetdatabases/{webId}/elements.post.responses.201.description" = "The element was created. The response's Location header is a link to the element."
"paths./assetdatabases/{webId}/elements.post.summary" = "Create a child element."
"paths./assetdatabases/{webId}/elements.post.tags.length" = 1
"paths./assetdatabases/{webId}/elements.post.tags[0]" = "AssetDatabase"
"paths./assetdatabases/{webId}/elementtemplates.get.consumes.length" = 0
"paths./assetdatabases/{webId}/elementtemplates.get.deprecated" = false
"paths./assetdatabases/{webId}/elementtemplates.get.description" = "Users can search for the element and event frame template based on specific search parameters. If no parameters are specified in the search, the default values for each parameter will be used and will return the templates that match the default search."
"paths./assetdatabases/{webId}/elementtemplates.get.operationId" = "AssetDatabase_GetElementTemplates"
"paths./assetdatabases/{webId}/elementtemplates.get.parameters.length" = 7
"paths./assetdatabases/{webId}/elementtemplates.get.parameters[0].description" = "The ID of the database to search."
"paths./assetdatabases/{webId}/elementtemplates.get.parameters[0].in" = "path"
"paths./assetdatabases/{webId}/elementtemplates.get.parameters[0].name" = "webId"
"paths./assetdatabases/{webId}/elementtemplates.get.parameters[0].required" = true
"paths./assetdatabases/{webId}/elementtemplates.get.parameters[0].type" = "string"
"paths./assetdatabases/{webId}/elementtemplates.get.parameters[1].collectionFormat" = "multi"
"paths./assetdatabases/{webId}/elementtemplates.get.parameters[1].description" = "Specifies which of the object's properties are searched. Multiple search fields may be specified with multiple instances of the parameter. The default is 'Name'."
"paths./assetdatabases/{webId}/elementtemplates.get.parameters[1].in" = "query"
"paths./assetdatabases/{webId}/elementtemplates.get.parameters[1].items.type" = "string"
"paths./assetdatabases/{webId}/elementtemplates.get.parameters[1].name" = "field"
"paths./assetdatabases/{webId}/elementtemplates.get.parameters[1].required" = true
"paths./assetdatabases/{webId}/elementtemplates.get.parameters[1].type" = "array"
"paths./assetdatabases/{webId}/elementtemplates.get.parameters[2].description" = "The maximum number of objects to be returned per call (page size). The default is 1000."
"paths./assetdatabases/{webId}/elementtemplates.get.parameters[2].in" = "query"
"paths./assetdatabases/{webId}/elementtemplates.get.parameters[2].name" = "maxCount"
"paths./assetdatabases/{webId}/elementtemplates.get.parameters[2].required" = false
"paths./assetdatabases/{webId}/elementtemplates.get.parameters[2].type" = "integer"
"paths./assetdatabases/{webId}/elementtemplates.get.parameters[3].description" = "The query string used for finding objects. The default is no query string."
"paths./assetdatabases/{webId}/elementtemplates.get.parameters[3].in" = "query"
"paths./assetdatabases/{webId}/elementtemplates.get.parameters[3].name" = "query"
"paths./assetdatabases/{webId}/elementtemplates.get.parameters[3].required" = false
"paths./assetdatabases/{webId}/elementtemplates.get.parameters[3].type" = "string"
"paths./assetdatabases/{webId}/elementtemplates.get.parameters[4].description" = "List of fields to be returned in the response, separated by semicolons (;). If this parameter is not specified, all available fields will be returned."
"paths./assetdatabases/{webId}/elementtemplates.get.parameters[4].in" = "query"
"paths./assetdatabases/{webId}/elementtemplates.get.parameters[4].name" = "selectedFields"
"paths./assetdatabases/{webId}/elementtemplates.get.parameters[4].required" = false
"paths./assetdatabases/{webId}/elementtemplates.get.parameters[4].type" = "string"
"paths./assetdatabases/{webId}/elementtemplates.get.parameters[5].description" = "The field or property of the object used to sort the returned collection. The default is 'Name'."
"paths./assetdatabases/{webId}/elementtemplates.get.parameters[5].in" = "query"
"paths./assetdatabases/{webId}/elementtemplates.get.parameters[5].name" = "sortField"
"paths./assetdatabases/{webId}/elementtemplates.get.parameters[5].required" = false
"paths./assetdatabases/{webId}/elementtemplates.get.parameters[5].type" = "string"
"paths./assetdatabases/{webId}/elementtemplates.get.parameters[6].description" = "The order that the returned collection is sorted. The default is 'Ascending'."
"paths./assetdatabases/{webId}/elementtemplates.get.parameters[6].in" = "query"
"paths./assetdatabases/{webId}/elementtemplates.get.parameters[6].name" = "sortOrder"
"paths./assetdatabases/{webId}/elementtemplates.get.parameters[6].required" = false
"paths./assetdatabases/{webId}/elementtemplates.get.parameters[6].type" = "string"
"paths./assetdatabases/{webId}/elementtemplates.get.responses.200.description" = "A list of element templates matching the specified condition."
"paths./assetdatabases/{webId}/elementtemplates.get.responses.200.schema.$ref" = "#/definitions/Items[ElementTemplate]"
"paths./assetdatabases/{webId}/elementtemplates.get.summary" = "Retrieve element templates based on the specified criteria. Only templates of instance type \"Element\" and \"EventFrame\" are returned. By default, all element and event frame templates in the specified Asset Database are returned."
"paths./assetdatabases/{webId}/elementtemplates.get.tags.length" = 1
"paths./assetdatabases/{webId}/elementtemplates.get.tags[0]" = "AssetDatabase"
"paths./assetdatabases/{webId}/elementtemplates.post.consumes.length" = 2
"paths./assetdatabases/{webId}/elementtemplates.post.consumes[0]" = "application/json"
"paths./assetdatabases/{webId}/elementtemplates.post.consumes[1]" = "text/json"
"paths./assetdatabases/{webId}/elementtemplates.post.deprecated" = false
"paths./assetdatabases/{webId}/elementtemplates.post.description" = "Elements and event frames that are based on an element template will inherit characteristics defined in the template."
"paths./assetdatabases/{webId}/elementtemplates.post.operationId" = "AssetDatabase_CreateElementTemplate"
"paths./assetdatabases/{webId}/elementtemplates.post.parameters.length" = 2
"paths./assetdatabases/{webId}/elementtemplates.post.parameters[0].description" = "The ID of the database in which to create the element template."
"paths./assetdatabases/{webId}/elementtemplates.post.parameters[0].in" = "path"
"paths./assetdatabases/{webId}/elementtemplates.post.parameters[0].name" = "webId"
"paths./assetdatabases/{webId}/elementtemplates.post.parameters[0].required" = true
"paths./assetdatabases/{webId}/elementtemplates.post.parameters[0].type" = "string"
"paths./assetdatabases/{webId}/elementtemplates.post.parameters[1].description" = "The new element template definition."
"paths./assetdatabases/{webId}/elementtemplates.post.parameters[1].in" = "body"
"paths./assetdatabases/{webId}/elementtemplates.post.parameters[1].name" = "template"
"paths./assetdatabases/{webId}/elementtemplates.post.parameters[1].required" = true
"paths./assetdatabases/{webId}/elementtemplates.post.parameters[1].schema.$ref" = "#/definitions/ElementTemplate"
"paths./assetdatabases/{webId}/elementtemplates.post.responses.201.description" = "The element template was created. The response's Location header is a link to the created template."
"paths./assetdatabases/{webId}/elementtemplates.post.summary" = "Create a template at the Asset Database root. Specify InstanceType of \"Element\" or \"EventFrame\" to create element or event frame template respectively. Only these two types of templates can be created."
"paths./assetdatabases/{webId}/elementtemplates.post.tags.length" = 1
"paths./assetdatabases/{webId}/elementtemplates.post.tags[0]" = "AssetDatabase"
"paths./assetdatabases/{webId}/enumerationsets.get.consumes.length" = 0
"paths./assetdatabases/{webId}/enumerationsets.get.deprecated" = false
"paths./assetdatabases/{webId}/enumerationsets.get.operationId" = "AssetDatabase_GetEnumerationSets"
"paths./assetdatabases/{webId}/enumerationsets.get.parameters.length" = 2
"paths./assetdatabases/{webId}/enumerationsets.get.parameters[0].description" = "The ID of the database."
"paths./assetdatabases/{webId}/enumerationsets.get.parameters[0].in" = "path"
"paths./assetdatabases/{webId}/enumerationsets.get.parameters[0].name" = "webId"
"paths./assetdatabases/{webId}/enumerationsets.get.parameters[0].required" = true
"paths./assetdatabases/{webId}/enumerationsets.get.parameters[0].type" = "string"
"paths./assetdatabases/{webId}/enumerationsets.get.parameters[1].description" = "List of fields to be returned in the response, separated by semicolons (;). If this parameter is not specified, all available fields will be returned."
"paths./assetdatabases/{webId}/enumerationsets.get.parameters[1].in" = "query"
"paths./assetdatabases/{webId}/enumerationsets.get.parameters[1].name" = "selectedFields"
"paths./assetdatabases/{webId}/enumerationsets.get.parameters[1].required" = false
"paths./assetdatabases/{webId}/enumerationsets.get.parameters[1].type" = "string"
"paths./assetdatabases/{webId}/enumerationsets.get.responses.200.description" = "The specified enumeration sets."
"paths./assetdatabases/{webId}/enumerationsets.get.responses.200.schema.$ref" = "#/definitions/Items[EnumerationSet]"
"paths./assetdatabases/{webId}/enumerationsets.get.summary" = "Retrieve enumeration sets for given asset database."
"paths./assetdatabases/{webId}/enumerationsets.get.tags.length" = 1
"paths./assetdatabases/{webId}/enumerationsets.get.tags[0]" = "AssetDatabase"
"paths./assetdatabases/{webId}/enumerationsets.post.consumes.length" = 2
"paths./assetdatabases/{webId}/enumerationsets.post.consumes[0]" = "application/json"
"paths./assetdatabases/{webId}/enumerationsets.post.consumes[1]" = "text/json"
"paths./assetdatabases/{webId}/enumerationsets.post.deprecated" = false
"paths./assetdatabases/{webId}/enumerationsets.post.operationId" = "AssetDatabase_CreateEnumerationSet"
"paths./assetdatabases/{webId}/enumerationsets.post.parameters.length" = 2
"paths./assetdatabases/{webId}/enumerationsets.post.parameters[0].description" = "The ID of the database in which to create the enumeration set."
"paths./assetdatabases/{webId}/enumerationsets.post.parameters[0].in" = "path"
"paths./assetdatabases/{webId}/enumerationsets.post.parameters[0].name" = "webId"
"paths./assetdatabases/{webId}/enumerationsets.post.parameters[0].required" = true
"paths./assetdatabases/{webId}/enumerationsets.post.parameters[0].type" = "string"
"paths./assetdatabases/{webId}/enumerationsets.post.parameters[1].description" = "The new enumeration set definition."
"paths./assetdatabases/{webId}/enumerationsets.post.parameters[1].in" = "body"
"paths./assetdatabases/{webId}/enumerationsets.post.parameters[1].name" = "enumerationSet"
"paths./assetdatabases/{webId}/enumerationsets.post.parameters[1].required" = true
"paths./assetdatabases/{webId}/enumerationsets.post.parameters[1].schema.$ref" = "#/definitions/EnumerationSet"
"paths./assetdatabases/{webId}/enumerationsets.post.responses.201.description" = "The enumeration set was created. The response's Location header is a link to the created enumeration set."
"paths./assetdatabases/{webId}/enumerationsets.post.summary" = "Create an enumeration set at the Asset Database."
"paths./assetdatabases/{webId}/enumerationsets.post.tags.length" = 1
"paths./assetdatabases/{webId}/enumerationsets.post.tags[0]" = "AssetDatabase"
"paths./assetdatabases/{webId}/eventframeattributes.get.consumes.length" = 0
"paths./assetdatabases/{webId}/eventframeattributes.get.deprecated" = false
"paths./assetdatabases/{webId}/eventframeattributes.get.operationId" = "AssetDatabase_FindEventFrameAttributes"
"paths./assetdatabases/{webId}/eventframeattributes.get.parameters.length" = 19
"paths./assetdatabases/{webId}/eventframeattributes.get.parameters[0].description" = "The ID of the asset database to use as the root of the search."
"paths./assetdatabases/{webId}/eventframeattributes.get.parameters[0].in" = "path"
"paths./assetdatabases/{webId}/eventframeattributes.get.parameters[0].name" = "webId"
"paths./assetdatabases/{webId}/eventframeattributes.get.parameters[0].required" = true
"paths./assetdatabases/{webId}/eventframeattributes.get.parameters[0].type" = "string"
"paths./assetdatabases/{webId}/eventframeattributes.get.parameters[10].description" = "The maximum number of objects to be returned (the page size). The default is 1000."
"paths./assetdatabases/{webId}/eventframeattributes.get.parameters[10].in" = "query"
"paths./assetdatabases/{webId}/eventframeattributes.get.parameters[10].name" = "maxCount"
"paths./assetdatabases/{webId}/eventframeattributes.get.parameters[10].required" = false
"paths./assetdatabases/{webId}/eventframeattributes.get.parameters[10].type" = "integer"
"paths./assetdatabases/{webId}/eventframeattributes.get.parameters[11].description" = "The name query string which must match the name of a referenced element. The default is no filter."
"paths./assetdatabases/{webId}/eventframeattributes.get.parameters[11].in" = "query"
"paths./assetdatabases/{webId}/eventframeattributes.get.parameters[11].name" = "referencedElementNameFilter"
"paths./assetdatabases/{webId}/eventframeattributes.get.parameters[11].required" = false
"paths./assetdatabases/{webId}/eventframeattributes.get.parameters[11].type" = "string"
"paths./assetdatabases/{webId}/eventframeattributes.get.parameters[12].description" = "Specifies if the search should include objects nested further than immediate children of the given resource. The default is 'false'."
"paths./assetdatabases/{webId}/eventframeattributes.get.parameters[12].in" = "query"
"paths./assetdatabases/{webId}/eventframeattributes.get.parameters[12].name" = "searchFullHierarchy"
"paths./assetdatabases/{webId}/eventframeattributes.get.parameters[12].required" = false
"paths./assetdatabases/{webId}/eventframeattributes.get.parameters[12].type" = "boolean"
"paths./assetdatabases/{webId}/eventframeattributes.get.parameters[13].description" = "Determines how the startTime and endTime parameters are treated when searching for event frames.     The default is 'Overlapped'."
"paths./assetdatabases/{webId}/eventframeattributes.get.parameters[13].in" = "query"
"paths./assetdatabases/{webId}/eventframeattributes.get.parameters[13].name" = "searchMode"
"paths./assetdatabases/{webId}/eventframeattributes.get.parameters[13].required" = false
"paths./assetdatabases/{webId}/eventframeattributes.get.parameters[13].type" = "string"
"paths./assetdatabases/{webId}/eventframeattributes.get.parameters[14].description" = "List of fields to be returned in the response, separated by semicolons (;). If this parameter is not specified, all available fields will be returned."
"paths./assetdatabases/{webId}/eventframeattributes.get.parameters[14].in" = "query"
"paths./assetdatabases/{webId}/eventframeattributes.get.parameters[14].name" = "selectedFields"
"paths./assetdatabases/{webId}/eventframeattributes.get.parameters[14].required" = false
"paths./assetdatabases/{webId}/eventframeattributes.get.parameters[14].type" = "string"
"paths./assetdatabases/{webId}/eventframeattributes.get.parameters[15].description" = "The field or property of the object used to sort the returned collection. The default is 'Name'."
"paths./assetdatabases/{webId}/eventframeattributes.get.parameters[15].in" = "query"
"paths./assetdatabases/{webId}/eventframeattributes.get.parameters[15].name" = "sortField"
"paths./assetdatabases/{webId}/eventframeattributes.get.parameters[15].required" = false
"paths./assetdatabases/{webId}/eventframeattributes.get.parameters[15].type" = "string"
"paths./assetdatabases/{webId}/eventframeattributes.get.parameters[16].description" = "The order that the returned collection is sorted. The default is 'Ascending'."
"paths./assetdatabases/{webId}/eventframeattributes.get.parameters[16].in" = "query"
"paths./assetdatabases/{webId}/eventframeattributes.get.parameters[16].name" = "sortOrder"
"paths./assetdatabases/{webId}/eventframeattributes.get.parameters[16].required" = false
"paths./assetdatabases/{webId}/eventframeattributes.get.parameters[16].type" = "string"
"paths./assetdatabases/{webId}/eventframeattributes.get.parameters[17].description" = "The starting index (zero based) of the items to be returned. The default is 0."
"paths./assetdatabases/{webId}/eventframeattributes.get.parameters[17].in" = "query"
"paths./assetdatabases/{webId}/eventframeattributes.get.parameters[17].name" = "startIndex"
"paths./assetdatabases/{webId}/eventframeattributes.get.parameters[17].required" = false
"paths./assetdatabases/{webId}/eventframeattributes.get.parameters[17].type" = "integer"
"paths./assetdatabases/{webId}/eventframeattributes.get.parameters[18].description" = "A string representing the earliest starting time for the event frames to be matched. startTime must be less than or equal to the endTime. The default is '*-8h'."
"paths./assetdatabases/{webId}/eventframeattributes.get.parameters[18].in" = "query"
"paths./assetdatabases/{webId}/eventframeattributes.get.parameters[18].name" = "startTime"
"paths./assetdatabases/{webId}/eventframeattributes.get.parameters[18].required" = false
"paths./assetdatabases/{webId}/eventframeattributes.get.parameters[18].type" = "string"
"paths./assetdatabases/{webId}/eventframeattributes.get.parameters[1].description" = "Specify that returned attributes must have this category. The default is no filter."
"paths./assetdatabases/{webId}/eventframeattributes.get.parameters[1].in" = "query"
"paths./assetdatabases/{webId}/eventframeattributes.get.parameters[1].name" = "attributeCategory"
"paths./assetdatabases/{webId}/eventframeattributes.get.parameters[1].required" = false
"paths./assetdatabases/{webId}/eventframeattributes.get.parameters[1].type" = "string"
"paths./assetdatabases/{webId}/eventframeattributes.get.parameters[2].description" = "The attribute description filter string used for finding objects. Only the first 440 characters of the description will be searched. For Asset Servers older than 2.7, a 400 status code (Bad Request) will be returned if this parameter is specified. The default is no filter."
"paths./assetdatabases/{webId}/eventframeattributes.get.parameters[2].in" = "query"
"paths./assetdatabases/{webId}/eventframeattributes.get.parameters[2].name" = "attributeDescriptionFilter"
"paths./assetdatabases/{webId}/eventframeattributes.get.parameters[2].required" = false
"paths./assetdatabases/{webId}/eventframeattributes.get.parameters[2].type" = "string"
"paths./assetdatabases/{webId}/eventframeattributes.get.parameters[3].description" = "The attribute name filter string used for finding objects. The default is no filter."
"paths./assetdatabases/{webId}/eventframeattributes.get.parameters[3].in" = "query"
"paths./assetdatabases/{webId}/eventframeattributes.get.parameters[3].name" = "attributeNameFilter"
"paths./assetdatabases/{webId}/eventframeattributes.get.parameters[3].required" = false
"paths./assetdatabases/{webId}/eventframeattributes.get.parameters[3].type" = "string"
"paths./assetdatabases/{webId}/eventframeattributes.get.parameters[4].description" = "Specify that returned attributes' value type must be this value type. The default is no filter."
"paths./assetdatabases/{webId}/eventframeattributes.get.parameters[4].in" = "query"
"paths./assetdatabases/{webId}/eventframeattributes.get.parameters[4].name" = "attributeType"
"paths./assetdatabases/{webId}/eventframeattributes.get.parameters[4].required" = false
"paths./assetdatabases/{webId}/eventframeattributes.get.parameters[4].type" = "string"
"paths./assetdatabases/{webId}/eventframeattributes.get.parameters[5].description" = "A string representing the latest ending time for the event frames to be matched. The endTime must be greater than or equal to the startTime. The default is '*'."
"paths./assetdatabases/{webId}/eventframeattributes.get.parameters[5].in" = "query"
"paths./assetdatabases/{webId}/eventframeattributes.get.parameters[5].name" = "endTime"
"paths./assetdatabases/{webId}/eventframeattributes.get.parameters[5].required" = false
"paths./assetdatabases/{webId}/eventframeattributes.get.parameters[5].type" = "string"
"paths./assetdatabases/{webId}/eventframeattributes.get.parameters[6].description" = "Specify that the owner of the returned attributes must have this category. The default is no filter."
"paths./assetdatabases/{webId}/eventframeattributes.get.parameters[6].in" = "query"
"paths./assetdatabases/{webId}/eventframeattributes.get.parameters[6].name" = "eventFrameCategory"
"paths./assetdatabases/{webId}/eventframeattributes.get.parameters[6].required" = false
"paths./assetdatabases/{webId}/eventframeattributes.get.parameters[6].type" = "string"
"paths./assetdatabases/{webId}/eventframeattributes.get.parameters[7].description" = "The event frame description filter string used for finding objects. Only the first 440 characters of the description will be searched. For Asset Servers older than 2.7, a 400 status code (Bad Request) will be returned if this parameter is specified. The default is no filter."
"paths./assetdatabases/{webId}/eventframeattributes.get.parameters[7].in" = "query"
"paths./assetdatabases/{webId}/eventframeattributes.get.parameters[7].name" = "eventFrameDescriptionFilter"
"paths./assetdatabases/{webId}/eventframeattributes.get.parameters[7].required" = false
"paths./assetdatabases/{webId}/eventframeattributes.get.parameters[7].type" = "string"
"paths./assetdatabases/{webId}/eventframeattributes.get.parameters[8].description" = "The event frame name filter string used for finding objects. The default is no filter."
"paths./assetdatabases/{webId}/eventframeattributes.get.parameters[8].in" = "query"
"paths./assetdatabases/{webId}/eventframeattributes.get.parameters[8].name" = "eventFrameNameFilter"
"paths./assetdatabases/{webId}/eventframeattributes.get.parameters[8].required" = false
"paths./assetdatabases/{webId}/eventframeattributes.get.parameters[8].type" = "string"
"paths./assetdatabases/{webId}/eventframeattributes.get.parameters[9].description" = "Specify that the owner of the returned attributes must have this template or a template derived from this template. The default is no filter."
"paths./assetdatabases/{webId}/eventframeattributes.get.parameters[9].in" = "query"
"paths./assetdatabases/{webId}/eventframeattributes.get.parameters[9].name" = "eventFrameTemplate"
"paths./assetdatabases/{webId}/eventframeattributes.get.parameters[9].required" = false
"paths./assetdatabases/{webId}/eventframeattributes.get.parameters[9].type" = "string"
"paths./assetdatabases/{webId}/eventframeattributes.get.responses.200.description" = "a list of matching attributes."
"paths./assetdatabases/{webId}/eventframeattributes.get.responses.200.schema.$ref" = "#/definitions/Items[Attribute]"
"paths./assetdatabases/{webId}/eventframeattributes.get.summary" = "Retrieves a list of event frame attributes matching the specified filters from the specified asset database."
"paths./assetdatabases/{webId}/eventframeattributes.get.tags.length" = 1
"paths./assetdatabases/{webId}/eventframeattributes.get.tags[0]" = "AssetDatabase"
"paths./assetdatabases/{webId}/eventframes.get.consumes.length" = 0
"paths./assetdatabases/{webId}/eventframes.get.deprecated" = false
"paths./assetdatabases/{webId}/eventframes.get.operationId" = "AssetDatabase_GetEventFrames"
"paths./assetdatabases/{webId}/eventframes.get.parameters.length" = 18
"paths./assetdatabases/{webId}/eventframes.get.parameters[0].description" = "The ID of the asset database to use as the root of the search."
"paths./assetdatabases/{webId}/eventframes.get.parameters[0].in" = "path"
"paths./assetdatabases/{webId}/eventframes.get.parameters[0].name" = "webId"
"paths./assetdatabases/{webId}/eventframes.get.parameters[0].required" = true
"paths./assetdatabases/{webId}/eventframes.get.parameters[0].type" = "string"
"paths./assetdatabases/{webId}/eventframes.get.parameters[10].description" = "Determines how the startTime and endTime parameters are treated when searching for event frame objects to be included in the returned collection. If this parameter is one of the 'Backward*' or 'Forward*' values, none of endTime, sortField, or sortOrder may be specified. The default is 'Overlapped'."
"paths./assetdatabases/{webId}/eventframes.get.parameters[10].in" = "query"
"paths./assetdatabases/{webId}/eventframes.get.parameters[10].name" = "searchMode"
"paths./assetdatabases/{webId}/eventframes.get.parameters[10].required" = false
"paths./assetdatabases/{webId}/eventframes.get.parameters[10].type" = "string"
"paths./assetdatabases/{webId}/eventframes.get.parameters[11].description" = "List of fields to be returned in the response, separated by semicolons (;). If this parameter is not specified, all available fields will be returned."
"paths./assetdatabases/{webId}/eventframes.get.parameters[11].in" = "query"
"paths./assetdatabases/{webId}/eventframes.get.parameters[11].name" = "selectedFields"
"paths./assetdatabases/{webId}/eventframes.get.parameters[11].required" = false
"paths./assetdatabases/{webId}/eventframes.get.parameters[11].type" = "string"
"paths./assetdatabases/{webId}/eventframes.get.parameters[12].collectionFormat" = "multi"
"paths./assetdatabases/{webId}/eventframes.get.parameters[12].description" = "Specify that returned event frames must have this severity. Multiple severity values may be specified with multiple instances of the parameter. The default is no severity filter."
"paths./assetdatabases/{webId}/eventframes.get.parameters[12].in" = "query"
"paths./assetdatabases/{webId}/eventframes.get.parameters[12].items.type" = "string"
"paths./assetdatabases/{webId}/eventframes.get.parameters[12].name" = "severity"
"paths./assetdatabases/{webId}/eventframes.get.parameters[12].required" = false
"paths./assetdatabases/{webId}/eventframes.get.parameters[12].type" = "array"
"paths./assetdatabases/{webId}/eventframes.get.parameters[13].description" = "The field or property of the object used to sort the returned collection. The default is 'Name' if searchMode is not one of the 'Backward*' or 'Forward*' values."
"paths./assetdatabases/{webId}/eventframes.get.parameters[13].in" = "query"
"paths./assetdatabases/{webId}/eventframes.get.parameters[13].name" = "sortField"
"paths./assetdatabases/{webId}/eventframes.get.parameters[13].required" = false
"paths./assetdatabases/{webId}/eventframes.get.parameters[13].type" = "string"
"paths./assetdatabases/{webId}/eventframes.get.parameters[14].description" = "The order that the returned collection is sorted. The default is 'Ascending' if searchMode is not one of the 'Backward*' or 'Forward*' values."
"paths./assetdatabases/{webId}/eventframes.get.parameters[14].in" = "query"
"paths./assetdatabases/{webId}/eventframes.get.parameters[14].name" = "sortOrder"
"paths./assetdatabases/{webId}/eventframes.get.parameters[14].required" = false
"paths./assetdatabases/{webId}/eventframes.get.parameters[14].type" = "string"
"paths./assetdatabases/{webId}/eventframes.get.parameters[15].description" = "The starting index (zero based) of the items to be returned. The default is 0."
"paths./assetdatabases/{webId}/eventframes.get.parameters[15].in" = "query"
"paths./assetdatabases/{webId}/eventframes.get.parameters[15].name" = "startIndex"
"paths./assetdatabases/{webId}/eventframes.get.parameters[15].required" = false
"paths./assetdatabases/{webId}/eventframes.get.parameters[15].type" = "integer"
"paths./assetdatabases/{webId}/eventframes.get.parameters[16].description" = "The starting time for the search. startTime must be less than or equal to the endTime. The searchMode parameter will control whether the comparison will be performed against the event frame's startTime or endTime. The default is '*-8h'."
"paths./assetdatabases/{webId}/eventframes.get.parameters[16].in" = "query"
"paths./assetdatabases/{webId}/eventframes.get.parameters[16].name" = "startTime"
"paths./assetdatabases/{webId}/eventframes.get.parameters[16].required" = false
"paths./assetdatabases/{webId}/eventframes.get.parameters[16].type" = "string"
"paths./assetdatabases/{webId}/eventframes.get.parameters[17].description" = "Specify that returned event frames must have this template or a template derived from this template. The default is no template filter. Specify this parameter by name."
"paths./assetdatabases/{webId}/eventframes.get.parameters[17].in" = "query"
"paths./assetdatabases/{webId}/eventframes.get.parameters[17].name" = "templateName"
"paths./assetdatabases/{webId}/eventframes.get.parameters[17].required" = false
"paths./assetdatabases/{webId}/eventframes.get.parameters[17].type" = "string"
"paths./assetdatabases/{webId}/eventframes.get.parameters[1].description" = "Specify the returned event frames' canBeAcknowledged property. The default is no canBeAcknowledged filter."
"paths./assetdatabases/{webId}/eventframes.get.parameters[1].in" = "query"
"paths./assetdatabases/{webId}/eventframes.get.parameters[1].name" = "canBeAcknowledged"
"paths./assetdatabases/{webId}/eventframes.get.parameters[1].required" = false
"paths./assetdatabases/{webId}/eventframes.get.parameters[1].type" = "boolean"
"paths./assetdatabases/{webId}/eventframes.get.parameters[2].description" = "Specify that returned event frames must have this category. The default is no category filter."
"paths./assetdatabases/{webId}/eventframes.get.parameters[2].in" = "query"
"paths./assetdatabases/{webId}/eventframes.get.parameters[2].name" = "categoryName"
"paths./assetdatabases/{webId}/eventframes.get.parameters[2].required" = false
"paths./assetdatabases/{webId}/eventframes.get.parameters[2].type" = "string"
"paths./assetdatabases/{webId}/eventframes.get.parameters[3].description" = "The ending time for the search. The endTime must be greater than or equal to the startTime. The searchMode parameter will control whether the comparison will be performed against the event frame's startTime or endTime. The default is '*' if searchMode is not one of the 'Backward*' or 'Forward*' values."
"paths./assetdatabases/{webId}/eventframes.get.parameters[3].in" = "query"
"paths./assetdatabases/{webId}/eventframes.get.parameters[3].name" = "endTime"
"paths./assetdatabases/{webId}/eventframes.get.parameters[3].required" = false
"paths./assetdatabases/{webId}/eventframes.get.parameters[3].type" = "string"
"paths./assetdatabases/{webId}/eventframes.get.parameters[4].description" = "Specify the returned event frames' isAcknowledged property. The default no isAcknowledged filter."
"paths./assetdatabases/{webId}/eventframes.get.parameters[4].in" = "query"
"paths./assetdatabases/{webId}/eventframes.get.parameters[4].name" = "isAcknowledged"
"paths./assetdatabases/{webId}/eventframes.get.parameters[4].required" = false
"paths./assetdatabases/{webId}/eventframes.get.parameters[4].type" = "boolean"
"paths./assetdatabases/{webId}/eventframes.get.parameters[5].description" = "The maximum number of objects to be returned per call (page size). The default is 1000."
"paths./assetdatabases/{webId}/eventframes.get.parameters[5].in" = "query"
"paths./assetdatabases/{webId}/eventframes.get.parameters[5].name" = "maxCount"
"paths./assetdatabases/{webId}/eventframes.get.parameters[5].required" = false
"paths./assetdatabases/{webId}/eventframes.get.parameters[5].type" = "integer"
"paths./assetdatabases/{webId}/eventframes.get.parameters[6].description" = "The name query string used for finding event frames. The default is no filter."
"paths./assetdatabases/{webId}/eventframes.get.parameters[6].in" = "query"
"paths./assetdatabases/{webId}/eventframes.get.parameters[6].name" = "nameFilter"
"paths./assetdatabases/{webId}/eventframes.get.parameters[6].required" = false
"paths./assetdatabases/{webId}/eventframes.get.parameters[6].type" = "string"
"paths./assetdatabases/{webId}/eventframes.get.parameters[7].description" = "The name query string which must match the name of a referenced element. The default is no filter."
"paths./assetdatabases/{webId}/eventframes.get.parameters[7].in" = "query"
"paths./assetdatabases/{webId}/eventframes.get.parameters[7].name" = "referencedElementNameFilter"
"paths./assetdatabases/{webId}/eventframes.get.parameters[7].required" = false
"paths./assetdatabases/{webId}/eventframes.get.parameters[7].type" = "string"
"paths./assetdatabases/{webId}/eventframes.get.parameters[8].description" = "Specify that returned event frames must have an element in the event frame's referenced elements collection that derives from the template. Specify this parameter by name."
"paths./assetdatabases/{webId}/eventframes.get.parameters[8].in" = "query"
"paths./assetdatabases/{webId}/eventframes.get.parameters[8].name" = "referencedElementTemplateName"
"paths./assetdatabases/{webId}/eventframes.get.parameters[8].required" = false
"paths./assetdatabases/{webId}/eventframes.get.parameters[8].type" = "string"
"paths./assetdatabases/{webId}/eventframes.get.parameters[9].description" = "Specifies whether the search should include objects nested further than the immediate children of the search root. The default is 'false'."
"paths./assetdatabases/{webId}/eventframes.get.parameters[9].in" = "query"
"paths./assetdatabases/{webId}/eventframes.get.parameters[9].name" = "searchFullHierarchy"
"paths./assetdatabases/{webId}/eventframes.get.parameters[9].required" = false
"paths./assetdatabases/{webId}/eventframes.get.parameters[9].type" = "boolean"
"paths./assetdatabases/{webId}/eventframes.get.responses.200.description" = "A list of event frames matching the specified conditions."
"paths./assetdatabases/{webId}/eventframes.get.responses.200.schema.$ref" = "#/definitions/Items[EventFrame]"
"paths./assetdatabases/{webId}/eventframes.get.summary" = "Retrieve event frames based on the specified conditions. By default, returns all children of the specified root resource with a start time in the past 8 hours."
"paths./assetdatabases/{webId}/eventframes.get.tags.length" = 1
"paths./assetdatabases/{webId}/eventframes.get.tags[0]" = "AssetDatabase"
"paths./assetdatabases/{webId}/eventframes.post.consumes.length" = 2
"paths./assetdatabases/{webId}/eventframes.post.consumes[0]" = "application/json"
"paths./assetdatabases/{webId}/eventframes.post.consumes[1]" = "text/json"
"paths./assetdatabases/{webId}/eventframes.post.deprecated" = false
"paths./assetdatabases/{webId}/eventframes.post.operationId" = "AssetDatabase_CreateEventFrame"
"paths./assetdatabases/{webId}/eventframes.post.parameters.length" = 2
"paths./assetdatabases/{webId}/eventframes.post.parameters[0].description" = "The ID of the database on which to create the event frame."
"paths./assetdatabases/{webId}/eventframes.post.parameters[0].in" = "path"
"paths./assetdatabases/{webId}/eventframes.post.parameters[0].name" = "webId"
"paths./assetdatabases/{webId}/eventframes.post.parameters[0].required" = true
"paths./assetdatabases/{webId}/eventframes.post.parameters[0].type" = "string"
"paths./assetdatabases/{webId}/eventframes.post.parameters[1].description" = "The new event frame definition."
"paths./assetdatabases/{webId}/eventframes.post.parameters[1].in" = "body"
"paths./assetdatabases/{webId}/eventframes.post.parameters[1].name" = "eventFrame"
"paths./assetdatabases/{webId}/eventframes.post.parameters[1].required" = true
"paths./assetdatabases/{webId}/eventframes.post.parameters[1].schema.$ref" = "#/definitions/EventFrame"
"paths./assetdatabases/{webId}/eventframes.post.responses.201.description" = "The event frame was created. The response's Location header is a link to the event frame."
"paths./assetdatabases/{webId}/eventframes.post.summary" = "Create an event frame."
"paths./assetdatabases/{webId}/eventframes.post.tags.length" = 1
"paths./assetdatabases/{webId}/eventframes.post.tags[0]" = "AssetDatabase"
"paths./assetdatabases/{webId}/export.get.consumes.length" = 0
"paths./assetdatabases/{webId}/export.get.deprecated" = false
"paths./assetdatabases/{webId}/export.get.operationId" = "AssetDatabase_Export"
"paths./assetdatabases/{webId}/export.get.parameters.length" = 4
"paths./assetdatabases/{webId}/export.get.parameters[0].description" = "The ID of the database."
"paths./assetdatabases/{webId}/export.get.parameters[0].in" = "path"
"paths./assetdatabases/{webId}/export.get.parameters[0].name" = "webId"
"paths./assetdatabases/{webId}/export.get.parameters[0].required" = true
"paths./assetdatabases/{webId}/export.get.parameters[0].type" = "string"
"paths./assetdatabases/{webId}/export.get.parameters[1].description" = "The latest ending time for AFEventFrame, AFTransfer, and AFCase objects that may be part of the export. The default is '*'."
"paths./assetdatabases/{webId}/export.get.parameters[1].in" = "query"
"paths./assetdatabases/{webId}/export.get.parameters[1].name" = "endTime"
"paths./assetdatabases/{webId}/export.get.parameters[1].required" = false
"paths./assetdatabases/{webId}/export.get.parameters[1].type" = "string"
"paths./assetdatabases/{webId}/export.get.parameters[2].collectionFormat" = "multi"
"paths./assetdatabases/{webId}/export.get.parameters[2].description" = "Indicates the type of export to perform. The default is 'StrongReferences'. Multiple export modes may be specified by using multiple instances of exportMode."
"paths./assetdatabases/{webId}/export.get.parameters[2].in" = "query"
"paths./assetdatabases/{webId}/export.get.parameters[2].items.type" = "string"
"paths./assetdatabases/{webId}/export.get.parameters[2].name" = "exportMode"
"paths./assetdatabases/{webId}/export.get.parameters[2].required" = false
"paths./assetdatabases/{webId}/export.get.parameters[2].type" = "array"
"paths./assetdatabases/{webId}/export.get.parameters[3].description" = "The earliest starting time for AFEventFrame, AFTransfer, and AFCase objects that may be part of the export. The default is '*-30d'."
"paths./assetdatabases/{webId}/export.get.parameters[3].in" = "query"
"paths./assetdatabases/{webId}/export.get.parameters[3].name" = "startTime"
"paths./assetdatabases/{webId}/export.get.parameters[3].required" = false
"paths./assetdatabases/{webId}/export.get.parameters[3].type" = "string"
"paths./assetdatabases/{webId}/export.get.responses.200.description" = "Database exported. The response body contains the serialized database."
"paths./assetdatabases/{webId}/export.get.summary" = "Export the asset database."
"paths./assetdatabases/{webId}/export.get.tags.length" = 1
"paths./assetdatabases/{webId}/export.get.tags[0]" = "AssetDatabase"
"paths./assetdatabases/{webId}/import.post.consumes.length" = 2
"paths./assetdatabases/{webId}/import.post.consumes[0]" = "application/json"
"paths./assetdatabases/{webId}/import.post.consumes[1]" = "text/json"
"paths./assetdatabases/{webId}/import.post.deprecated" = false
"paths./assetdatabases/{webId}/import.post.operationId" = "AssetDatabase_Import"
"paths./assetdatabases/{webId}/import.post.parameters.length" = 2
"paths./assetdatabases/{webId}/import.post.parameters[0].description" = "The ID of the asset database."
"paths./assetdatabases/{webId}/import.post.parameters[0].in" = "path"
"paths./assetdatabases/{webId}/import.post.parameters[0].name" = "webId"
"paths./assetdatabases/{webId}/import.post.parameters[0].required" = true
"paths./assetdatabases/{webId}/import.post.parameters[0].type" = "string"
"paths./assetdatabases/{webId}/import.post.parameters[1].collectionFormat" = "multi"
"paths./assetdatabases/{webId}/import.post.parameters[1].description" = "Indicates the type of import to perform. The default is 'AllowCreate | AllowUpdate | AutoCheckIn'. Multiple import modes may be specified by using multiple instances of importMode."
"paths./assetdatabases/{webId}/import.post.parameters[1].in" = "query"
"paths./assetdatabases/{webId}/import.post.parameters[1].items.type" = "string"
"paths./assetdatabases/{webId}/import.post.parameters[1].name" = "importMode"
"paths./assetdatabases/{webId}/import.post.parameters[1].required" = false
"paths./assetdatabases/{webId}/import.post.parameters[1].type" = "array"
"paths./assetdatabases/{webId}/import.post.responses.200.description" = "Database imported."
"paths./assetdatabases/{webId}/import.post.summary" = "Import an asset database."
"paths./assetdatabases/{webId}/import.post.tags.length" = 1
"paths./assetdatabases/{webId}/import.post.tags[0]" = "AssetDatabase"
"paths./assetdatabases/{webId}/referencedelements.delete.consumes.length" = 0
"paths./assetdatabases/{webId}/referencedelements.delete.deprecated" = false
"paths./assetdatabases/{webId}/referencedelements.delete.operationId" = "AssetDatabase_RemoveReferencedElement"
"paths./assetdatabases/{webId}/referencedelements.delete.parameters.length" = 2
"paths./assetdatabases/{webId}/referencedelements.delete.parameters[0].description" = "The ID of the database which the referenced element will be removed from."
"paths./assetdatabases/{webId}/referencedelements.delete.parameters[0].in" = "path"
"paths./assetdatabases/{webId}/referencedelements.delete.parameters[0].name" = "webId"
"paths./assetdatabases/{webId}/referencedelements.delete.parameters[0].required" = true
"paths./assetdatabases/{webId}/referencedelements.delete.parameters[0].type" = "string"
"paths./assetdatabases/{webId}/referencedelements.delete.parameters[1].collectionFormat" = "multi"
"paths./assetdatabases/{webId}/referencedelements.delete.parameters[1].description" = "The ID of the referenced element. Multiple referenced elements may be specified with multiple instances of the parameter."
"paths./assetdatabases/{webId}/referencedelements.delete.parameters[1].in" = "query"
"paths./assetdatabases/{webId}/referencedelements.delete.parameters[1].items.type" = "string"
"paths./assetdatabases/{webId}/referencedelements.delete.parameters[1].name" = "referencedElementWebId"
"paths./assetdatabases/{webId}/referencedelements.delete.parameters[1].required" = true
"paths./assetdatabases/{webId}/referencedelements.delete.parameters[1].type" = "array"
"paths./assetdatabases/{webId}/referencedelements.delete.responses.204.description" = "The referenced element was successfully removed."
"paths./assetdatabases/{webId}/referencedelements.delete.summary" = "Remove a reference to an existing element from the specified database."
"paths./assetdatabases/{webId}/referencedelements.delete.tags.length" = 1
"paths./assetdatabases/{webId}/referencedelements.delete.tags[0]" = "AssetDatabase"
"paths./assetdatabases/{webId}/referencedelements.get.consumes.length" = 0
"paths./assetdatabases/{webId}/referencedelements.get.deprecated" = false
"paths./assetdatabases/{webId}/referencedelements.get.description" = "Users can search for the referenced elements based on specific search parameters. If no parameters are specified in the search, the default values for each parameter will be used and will return the elements that match the default search."
"paths./assetdatabases/{webId}/referencedelements.get.operationId" = "AssetDatabase_GetReferencedElements"
"paths./assetdatabases/{webId}/referencedelements.get.parameters.length" = 11
"paths./assetdatabases/{webId}/referencedelements.get.parameters[0].description" = "The ID of the resource to use as the root of the search."
"paths./assetdatabases/{webId}/referencedelements.get.parameters[0].in" = "path"
"paths./assetdatabases/{webId}/referencedelements.get.parameters[0].name" = "webId"
"paths./assetdatabases/{webId}/referencedelements.get.parameters[0].required" = true
"paths./assetdatabases/{webId}/referencedelements.get.parameters[0].type" = "string"
"paths./assetdatabases/{webId}/referencedelements.get.parameters[10].description" = "Specify that returned elements must have this template or a template derived from this template. The default is no template filter."
"paths./assetdatabases/{webId}/referencedelements.get.parameters[10].in" = "query"
"paths./assetdatabases/{webId}/referencedelements.get.parameters[10].name" = "templateName"
"paths./assetdatabases/{webId}/referencedelements.get.parameters[10].required" = false
"paths./assetdatabases/{webId}/referencedelements.get.parameters[10].type" = "string"
"paths./assetdatabases/{webId}/referencedelements.get.parameters[1].description" = "Specify that returned elements must have this category. The default is no category filter."
"paths./assetdatabases/{webId}/referencedelements.get.parameters[1].in" = "query"
"paths./assetdatabases/{webId}/referencedelements.get.parameters[1].name" = "categoryName"
"paths./assetdatabases/{webId}/referencedelements.get.parameters[1].required" = false
"paths./assetdatabases/{webId}/referencedelements.get.parameters[1].type" = "string"
"paths./assetdatabases/{webId}/referencedelements.get.parameters[2].description" = "Specify that returned elements must have this description. The default is no description filter."
"paths./assetdatabases/{webId}/referencedelements.get.parameters[2].in" = "query"
"paths./assetdatabases/{webId}/referencedelements.get.parameters[2].name" = "descriptionFilter"
"paths./assetdatabases/{webId}/referencedelements.get.parameters[2].required" = false
"paths./assetdatabases/{webId}/referencedelements.get.parameters[2].type" = "string"
"paths./assetdatabases/{webId}/referencedelements.get.parameters[3].description" = "Specify that returned elements must have this type. The default type is 'Any'."
"paths./assetdatabases/{webId}/referencedelements.get.parameters[3].in" = "query"
"paths./assetdatabases/{webId}/referencedelements.get.parameters[3].name" = "elementType"
"paths./assetdatabases/{webId}/referencedelements.get.parameters[3].required" = false
"paths./assetdatabases/{webId}/referencedelements.get.parameters[3].type" = "string"
"paths./assetdatabases/{webId}/referencedelements.get.parameters[4].description" = "The maximum number of objects to be returned per call (page size). The default is 1000."
"paths./assetdatabases/{webId}/referencedelements.get.parameters[4].in" = "query"
"paths./assetdatabases/{webId}/referencedelements.get.parameters[4].name" = "maxCount"
"paths./assetdatabases/{webId}/referencedelements.get.parameters[4].required" = false
"paths./assetdatabases/{webId}/referencedelements.get.parameters[4].type" = "integer"
"paths./assetdatabases/{webId}/referencedelements.get.parameters[5].description" = "The name query string used for finding objects. The default is no filter."
"paths./assetdatabases/{webId}/referencedelements.get.parameters[5].in" = "query"
"paths./assetdatabases/{webId}/referencedelements.get.parameters[5].name" = "nameFilter"
"paths./assetdatabases/{webId}/referencedelements.get.parameters[5].required" = false
"paths./assetdatabases/{webId}/referencedelements.get.parameters[5].type" = "string"
"paths./assetdatabases/{webId}/referencedelements.get.parameters[6].description" = "List of fields to be returned in the response, separated by semicolons (;). If this parameter is not specified, all available fields will be returned."
"paths./assetdatabases/{webId}/referencedelements.get.parameters[6].in" = "query"
"paths./assetdatabases/{webId}/referencedelements.get.parameters[6].name" = "selectedFields"
"paths./assetdatabases/{webId}/referencedelements.get.parameters[6].required" = false
"paths./assetdatabases/{webId}/referencedelements.get.parameters[6].type" = "string"
"paths./assetdatabases/{webId}/referencedelements.get.parameters[7].description" = "The field or property of the object used to sort the returned collection. The default is 'Name'."
"paths./assetdatabases/{webId}/referencedelements.get.parameters[7].in" = "query"
"paths./assetdatabases/{webId}/referencedelements.get.parameters[7].name" = "sortField"
"paths./assetdatabases/{webId}/referencedelements.get.parameters[7].required" = false
"paths./assetdatabases/{webId}/referencedelements.get.parameters[7].type" = "string"
"paths./assetdatabases/{webId}/referencedelements.get.parameters[8].description" = "The order that the returned collection is sorted. The default is 'Ascending'."
"paths./assetdatabases/{webId}/referencedelements.get.parameters[8].in" = "query"
"paths./assetdatabases/{webId}/referencedelements.get.parameters[8].name" = "sortOrder"
"paths./assetdatabases/{webId}/referencedelements.get.parameters[8].required" = false
"paths./assetdatabases/{webId}/referencedelements.get.parameters[8].type" = "string"
"paths./assetdatabases/{webId}/referencedelements.get.parameters[9].description" = "The starting index (zero based) of the items to be returned. The default is 0."
"paths./assetdatabases/{webId}/referencedelements.get.parameters[9].in" = "query"
"paths./assetdatabases/{webId}/referencedelements.get.parameters[9].name" = "startIndex"
"paths./assetdatabases/{webId}/referencedelements.get.parameters[9].required" = false
"paths./assetdatabases/{webId}/referencedelements.get.parameters[9].type" = "integer"
"paths./assetdatabases/{webId}/referencedelements.get.responses.200.description" = "A list of referenced elements matching the specified conditions."
"paths./assetdatabases/{webId}/referencedelements.get.responses.200.schema.$ref" = "#/definitions/Items[Element]"
"paths./assetdatabases/{webId}/referencedelements.get.summary" = "Retrieve referenced elements based on the specified conditions. By default, this method selects all referenced elements at the root level of the asset database."
"paths./assetdatabases/{webId}/referencedelements.get.tags.length" = 1
"paths./assetdatabases/{webId}/referencedelements.get.tags[0]" = "AssetDatabase"
"paths./assetdatabases/{webId}/referencedelements.post.consumes.length" = 2
"paths./assetdatabases/{webId}/referencedelements.post.consumes[0]" = "application/json"
"paths./assetdatabases/{webId}/referencedelements.post.consumes[1]" = "text/json"
"paths./assetdatabases/{webId}/referencedelements.post.deprecated" = false
"paths./assetdatabases/{webId}/referencedelements.post.operationId" = "AssetDatabase_AddReferencedElement"
"paths./assetdatabases/{webId}/referencedelements.post.parameters.length" = 3
"paths./assetdatabases/{webId}/referencedelements.post.parameters[0].description" = "The ID of the database which the referenced element will be added to."
"paths./assetdatabases/{webId}/referencedelements.post.parameters[0].in" = "path"
"paths./assetdatabases/{webId}/referencedelements.post.parameters[0].name" = "webId"
"paths./assetdatabases/{webId}/referencedelements.post.parameters[0].required" = true
"paths./assetdatabases/{webId}/referencedelements.post.parameters[0].type" = "string"
"paths./assetdatabases/{webId}/referencedelements.post.parameters[1].collectionFormat" = "multi"
"paths./assetdatabases/{webId}/referencedelements.post.parameters[1].description" = "The ID of the referenced element. Multiple referenced elements may be specified with multiple instances of the parameter."
"paths./assetdatabases/{webId}/referencedelements.post.parameters[1].in" = "query"
"paths./assetdatabases/{webId}/referencedelements.post.parameters[1].items.type" = "string"
"paths./assetdatabases/{webId}/referencedelements.post.parameters[1].name" = "referencedElementWebId"
"paths./assetdatabases/{webId}/referencedelements.post.parameters[1].required" = true
"paths./assetdatabases/{webId}/referencedelements.post.parameters[1].type" = "array"
"paths./assetdatabases/{webId}/referencedelements.post.parameters[2].description" = "The name of the reference type between the parent and the referenced element. This must be a \"strong\" reference type. The default is \"parent-child\"."
"paths./assetdatabases/{webId}/referencedelements.post.parameters[2].in" = "query"
"paths./assetdatabases/{webId}/referencedelements.post.parameters[2].name" = "referenceType"
"paths./assetdatabases/{webId}/referencedelements.post.parameters[2].required" = false
"paths./assetdatabases/{webId}/referencedelements.post.parameters[2].type" = "string"
"paths./assetdatabases/{webId}/referencedelements.post.responses.204.description" = "The referenced element was successfully added."
"paths./assetdatabases/{webId}/referencedelements.post.responses.409.description" = "The referenced element already exists in the collection."
"paths./assetdatabases/{webId}/referencedelements.post.responses.409.schema.$ref" = "#/definitions/Errors"
"paths./assetdatabases/{webId}/referencedelements.post.summary" = "Add a reference to an existing element to the specified database."
"paths./assetdatabases/{webId}/referencedelements.post.tags.length" = 1
"paths./assetdatabases/{webId}/referencedelements.post.tags[0]" = "AssetDatabase"
"paths./assetdatabases/{webId}/security.get.consumes.length" = 0
"paths./assetdatabases/{webId}/security.get.deprecated" = false
"paths./assetdatabases/{webId}/security.get.operationId" = "AssetDatabase_GetSecurity"
"paths./assetdatabases/{webId}/security.get.parameters.length" = 5
"paths./assetdatabases/{webId}/security.get.parameters[0].description" = "The ID of the asset database for the security to be checked."
"paths./assetdatabases/{webId}/security.get.parameters[0].in" = "path"
"paths./assetdatabases/{webId}/security.get.parameters[0].name" = "webId"
"paths./assetdatabases/{webId}/security.get.parameters[0].required" = true
"paths./assetdatabases/{webId}/security.get.parameters[0].type" = "string"
"paths./assetdatabases/{webId}/security.get.parameters[1].collectionFormat" = "multi"
"paths./assetdatabases/{webId}/security.get.parameters[1].description" = "The security item of the desired security information to be returned. Multiple security items may be specified with multiple instances of the parameter. If the parameter is not specified, only 'Default' security item of the security information will be returned."
"paths./assetdatabases/{webId}/security.get.parameters[1].in" = "query"
"paths./assetdatabases/{webId}/security.get.parameters[1].items.type" = "string"
"paths./assetdatabases/{webId}/security.get.parameters[1].name" = "securityItem"
"paths./assetdatabases/{webId}/security.get.parameters[1].required" = true
"paths./assetdatabases/{webId}/security.get.parameters[1].type" = "array"
"paths./assetdatabases/{webId}/security.get.parameters[2].collectionFormat" = "multi"
"paths./assetdatabases/{webId}/security.get.parameters[2].description" = "The user identity for the security information to be checked. Multiple security identities may be specified with multiple instances of the parameter. If the parameter is not specified, only the current user's security rights will be returned."
"paths./assetdatabases/{webId}/security.get.parameters[2].in" = "query"
"paths./assetdatabases/{webId}/security.get.parameters[2].items.type" = "string"
"paths./assetdatabases/{webId}/security.get.parameters[2].name" = "userIdentity"
"paths./assetdatabases/{webId}/security.get.parameters[2].required" = true
"paths./assetdatabases/{webId}/security.get.parameters[2].type" = "array"
"paths./assetdatabases/{webId}/security.get.parameters[3].description" = "Indicates if the security cache should be refreshed before getting security information. The default is 'false'."
"paths./assetdatabases/{webId}/security.get.parameters[3].in" = "query"
"paths./assetdatabases/{webId}/security.get.parameters[3].name" = "forceRefresh"
"paths./assetdatabases/{webId}/security.get.parameters[3].required" = false
"paths./assetdatabases/{webId}/security.get.parameters[3].type" = "boolean"
"paths./assetdatabases/{webId}/security.get.parameters[4].description" = "List of fields to be returned in the response, separated by semicolons (;). If this parameter is not specified, all available fields will be returned."
"paths./assetdatabases/{webId}/security.get.parameters[4].in" = "query"
"paths./assetdatabases/{webId}/security.get.parameters[4].name" = "selectedFields"
"paths./assetdatabases/{webId}/security.get.parameters[4].required" = false
"paths./assetdatabases/{webId}/security.get.parameters[4].type" = "string"
"paths./assetdatabases/{webId}/security.get.responses.200.description" = "Security rights."
"paths./assetdatabases/{webId}/security.get.responses.200.schema.$ref" = "#/definitions/Items[SecurityRights]"
"paths./assetdatabases/{webId}/security.get.responses.400.description" = "Unsupported security item; an invalid or local account is specified as the user identity."
"paths./assetdatabases/{webId}/security.get.responses.400.schema.$ref" = "#/definitions/Errors"
"paths./assetdatabases/{webId}/security.get.responses.401.description" = "Access denied for the specified user identity."
"paths./assetdatabases/{webId}/security.get.responses.401.schema.$ref" = "#/definitions/Errors"
"paths./assetdatabases/{webId}/security.get.responses.409.description" = "Unsupported when using Anonymous authentication method."
"paths./assetdatabases/{webId}/security.get.responses.409.schema.$ref" = "#/definitions/Errors"
"paths./assetdatabases/{webId}/security.get.responses.502.description" = "Failed to retrieve the specified user identity."
"paths./assetdatabases/{webId}/security.get.responses.502.schema.$ref" = "#/definitions/Errors"
"paths./assetdatabases/{webId}/security.get.summary" = "Get the security information of the specified security item associated with the asset database for a specified user."
"paths./assetdatabases/{webId}/security.get.tags.length" = 1
"paths./assetdatabases/{webId}/security.get.tags[0]" = "AssetDatabase"
"paths./assetdatabases/{webId}/securityentries.get.consumes.length" = 0
"paths./assetdatabases/{webId}/securityentries.get.deprecated" = false
"paths./assetdatabases/{webId}/securityentries.get.operationId" = "AssetDatabase_GetSecurityEntries"
"paths./assetdatabases/{webId}/securityentries.get.parameters.length" = 4
"paths./assetdatabases/{webId}/securityentries.get.parameters[0].description" = "The ID of the asset database."
"paths./assetdatabases/{webId}/securityentries.get.parameters[0].in" = "path"
"paths./assetdatabases/{webId}/securityentries.get.parameters[0].name" = "webId"
"paths./assetdatabases/{webId}/securityentries.get.parameters[0].required" = true
"paths./assetdatabases/{webId}/securityentries.get.parameters[0].type" = "string"
"paths./assetdatabases/{webId}/securityentries.get.parameters[1].description" = "The name query string used for filtering security entries. The default is no filter."
"paths./assetdatabases/{webId}/securityentries.get.parameters[1].in" = "query"
"paths./assetdatabases/{webId}/securityentries.get.parameters[1].name" = "nameFilter"
"paths./assetdatabases/{webId}/securityentries.get.parameters[1].required" = false
"paths./assetdatabases/{webId}/securityentries.get.parameters[1].type" = "string"
"paths./assetdatabases/{webId}/securityentries.get.parameters[2].description" = "The security item of the desired security entries information to be returned. If the parameter is not specified, security entries of the 'Default' security item will be returned."
"paths./assetdatabases/{webId}/securityentries.get.parameters[2].in" = "query"
"paths./assetdatabases/{webId}/securityentries.get.parameters[2].name" = "securityItem"
"paths./assetdatabases/{webId}/securityentries.get.parameters[2].required" = false
"paths./assetdatabases/{webId}/securityentries.get.parameters[2].type" = "string"
"paths./assetdatabases/{webId}/securityentries.get.parameters[3].description" = "List of fields to be returned in the response, separated by semicolons (;). If this parameter is not specified, all available fields will be returned."
"paths./assetdatabases/{webId}/securityentries.get.parameters[3].in" = "query"
"paths./assetdatabases/{webId}/securityentries.get.parameters[3].name" = "selectedFields"
"paths./assetdatabases/{webId}/securityentries.get.parameters[3].required" = false
"paths./assetdatabases/{webId}/securityentries.get.parameters[3].type" = "string"
"paths./assetdatabases/{webId}/securityentries.get.responses.200.description" = "A list of security entries matching the specified condition."
"paths./assetdatabases/{webId}/securityentries.get.responses.200.schema.$ref" = "#/definitions/Items[SecurityEntry]"
"paths./assetdatabases/{webId}/securityentries.get.summary" = "Retrieve the security entries of the specified security item associated with the asset database based on the specified criteria. By default, all security entries for this asset database are returned."
"paths./assetdatabases/{webId}/securityentries.get.tags.length" = 1
"paths./assetdatabases/{webId}/securityentries.get.tags[0]" = "AssetDatabase"
"paths./assetdatabases/{webId}/securityentries.post.consumes.length" = 2
"paths./assetdatabases/{webId}/securityentries.post.consumes[0]" = "application/json"
"paths./assetdatabases/{webId}/securityentries.post.consumes[1]" = "text/json"
"paths./assetdatabases/{webId}/securityentries.post.deprecated" = false
"paths./assetdatabases/{webId}/securityentries.post.operationId" = "AssetDatabase_CreateSecurityEntry"
"paths./assetdatabases/{webId}/securityentries.post.parameters.length" = 4
"paths./assetdatabases/{webId}/securityentries.post.parameters[0].description" = "The ID of the asset database where the security entry will be created."
"paths./assetdatabases/{webId}/securityentries.post.parameters[0].in" = "path"
"paths./assetdatabases/{webId}/securityentries.post.parameters[0].name" = "webId"
"paths./assetdatabases/{webId}/securityentries.post.parameters[0].required" = true
"paths./assetdatabases/{webId}/securityentries.post.parameters[0].type" = "string"
"paths./assetdatabases/{webId}/securityentries.post.parameters[1].description" = "The new security entry definition. The full list of allow and deny rights must be supplied."
"paths./assetdatabases/{webId}/securityentries.post.parameters[1].in" = "body"
"paths./assetdatabases/{webId}/securityentries.post.parameters[1].name" = "securityEntry"
"paths./assetdatabases/{webId}/securityentries.post.parameters[1].required" = true
"paths./assetdatabases/{webId}/securityentries.post.parameters[1].schema.$ref" = "#/definitions/SecurityEntry"
"paths./assetdatabases/{webId}/securityentries.post.parameters[2].description" = "If false, the new access permissions are only applied to the associated object. If true, the access permissions of children with any parent-child reference types will change when the permissions on the primary parent change."
"paths./assetdatabases/{webId}/securityentries.post.parameters[2].in" = "query"
"paths./assetdatabases/{webId}/securityentries.post.parameters[2].name" = "applyToChildren"
"paths./assetdatabases/{webId}/securityentries.post.parameters[2].required" = false
"paths./assetdatabases/{webId}/securityentries.post.parameters[2].type" = "boolean"
"paths./assetdatabases/{webId}/securityentries.post.parameters[3].description" = "The security item of the desired security entries to be created. If the parameter is not specified, security entries of the 'Default' security item will be created."
"paths./assetdatabases/{webId}/securityentries.post.parameters[3].in" = "query"
"paths./assetdatabases/{webId}/securityentries.post.parameters[3].name" = "securityItem"
"paths./assetdatabases/{webId}/securityentries.post.parameters[3].required" = false
"paths./assetdatabases/{webId}/securityentries.post.parameters[3].type" = "string"
"paths./assetdatabases/{webId}/securityentries.post.responses.201.description" = "The security entry was created. The response's Location header is a link to the security entry."
"paths./assetdatabases/{webId}/securityentries.post.summary" = "Create a security entry owned by the asset database."
"paths./assetdatabases/{webId}/securityentries.post.tags.length" = 1
"paths./assetdatabases/{webId}/securityentries.post.tags[0]" = "AssetDatabase"
"paths./assetdatabases/{webId}/securityentries/{name}.delete.consumes.length" = 0
"paths./assetdatabases/{webId}/securityentries/{name}.delete.deprecated" = false
"paths./assetdatabases/{webId}/securityentries/{name}.delete.operationId" = "AssetDatabase_DeleteSecurityEntry"
"paths./assetdatabases/{webId}/securityentries/{name}.delete.parameters.length" = 4
"paths./assetdatabases/{webId}/securityentries/{name}.delete.parameters[0].description" = "The name of the security entry. For every backslash character (\\) in the security entry name, replace with asterisk (*). As an example, use domain*username instead of domain\\username."
"paths./assetdatabases/{webId}/securityentries/{name}.delete.parameters[0].in" = "path"
"paths./assetdatabases/{webId}/securityentries/{name}.delete.parameters[0].name" = "name"
"paths./assetdatabases/{webId}/securityentries/{name}.delete.parameters[0].required" = true
"paths./assetdatabases/{webId}/securityentries/{name}.delete.parameters[0].type" = "string"
"paths./assetdatabases/{webId}/securityentries/{name}.delete.parameters[1].description" = "The ID of the asset database where the security entry will be deleted."
"paths./assetdatabases/{webId}/securityentries/{name}.delete.parameters[1].in" = "path"
"paths./assetdatabases/{webId}/securityentries/{name}.delete.parameters[1].name" = "webId"
"paths./assetdatabases/{webId}/securityentries/{name}.delete.parameters[1].required" = true
"paths./assetdatabases/{webId}/securityentries/{name}.delete.parameters[1].type" = "string"
"paths./assetdatabases/{webId}/securityentries/{name}.delete.parameters[2].description" = "If false, the new access permissions are only applied to the associated object. If true, the access permissions of children with any parent-child reference types will change when the permissions on the primary parent change."
"paths./assetdatabases/{webId}/securityentries/{name}.delete.parameters[2].in" = "query"
"paths./assetdatabases/{webId}/securityentries/{name}.delete.parameters[2].name" = "applyToChildren"
"paths./assetdatabases/{webId}/securityentries/{name}.delete.parameters[2].required" = false
"paths./assetdatabases/{webId}/securityentries/{name}.delete.parameters[2].type" = "boolean"
"paths./assetdatabases/{webId}/securityentries/{name}.delete.parameters[3].description" = "The security item of the desired security entries to be deleted. If the parameter is not specified, security entries of the 'Default' security item will be deleted."
"paths./assetdatabases/{webId}/securityentries/{name}.delete.parameters[3].in" = "query"
"paths./assetdatabases/{webId}/securityentries/{name}.delete.parameters[3].name" = "securityItem"
"paths./assetdatabases/{webId}/securityentries/{name}.delete.parameters[3].required" = false
"paths./assetdatabases/{webId}/securityentries/{name}.delete.parameters[3].type" = "string"
"paths./assetdatabases/{webId}/securityentries/{name}.delete.responses.204.description" = "The security entry was deleted."
"paths./assetdatabases/{webId}/securityentries/{name}.delete.summary" = "Delete a security entry owned by the asset database."
"paths./assetdatabases/{webId}/securityentries/{name}.delete.tags.length" = 1
"paths./assetdatabases/{webId}/securityentries/{name}.delete.tags[0]" = "AssetDatabase"
"paths./assetdatabases/{webId}/securityentries/{name}.get.consumes.length" = 0
"paths./assetdatabases/{webId}/securityentries/{name}.get.deprecated" = false
"paths./assetdatabases/{webId}/securityentries/{name}.get.operationId" = "AssetDatabase_GetSecurityEntryByName"
"paths./assetdatabases/{webId}/securityentries/{name}.get.parameters.length" = 4
"paths./assetdatabases/{webId}/securityentries/{name}.get.parameters[0].description" = "The name of the security entry. For every backslash character (\\) in the security entry name, replace with asterisk (*). As an example, use domain*username instead of domain\\username."
"paths./assetdatabases/{webId}/securityentries/{name}.get.parameters[0].in" = "path"
"paths./assetdatabases/{webId}/securityentries/{name}.get.parameters[0].name" = "name"
"paths./assetdatabases/{webId}/securityentries/{name}.get.parameters[0].required" = true
"paths./assetdatabases/{webId}/securityentries/{name}.get.parameters[0].type" = "string"
"paths./assetdatabases/{webId}/securityentries/{name}.get.parameters[1].description" = "The ID of the asset database."
"paths./assetdatabases/{webId}/securityentries/{name}.get.parameters[1].in" = "path"
"paths./assetdatabases/{webId}/securityentries/{name}.get.parameters[1].name" = "webId"
"paths./assetdatabases/{webId}/securityentries/{name}.get.parameters[1].required" = true
"paths./assetdatabases/{webId}/securityentries/{name}.get.parameters[1].type" = "string"
"paths./assetdatabases/{webId}/securityentries/{name}.get.parameters[2].description" = "The security item of the desired security entries information to be returned. If the parameter is not specified, security entries of the 'Default' security item will be returned."
"paths./assetdatabases/{webId}/securityentries/{name}.get.parameters[2].in" = "query"
"paths./assetdatabases/{webId}/securityentries/{name}.get.parameters[2].name" = "securityItem"
"paths./assetdatabases/{webId}/securityentries/{name}.get.parameters[2].required" = false
"paths./assetdatabases/{webId}/securityentries/{name}.get.parameters[2].type" = "string"
"paths./assetdatabases/{webId}/securityentries/{name}.get.parameters[3].description" = "List of fields to be returned in the response, separated by semicolons (;). If this parameter is not specified, all available fields will be returned."
"paths./assetdatabases/{webId}/securityentries/{name}.get.parameters[3].in" = "query"
"paths./assetdatabases/{webId}/securityentries/{name}.get.parameters[3].name" = "selectedFields"
"paths./assetdatabases/{webId}/securityentries/{name}.get.parameters[3].required" = false
"paths./assetdatabases/{webId}/securityentries/{name}.get.parameters[3].type" = "string"
"paths./assetdatabases/{webId}/securityentries/{name}.get.responses.200.description" = "The security entry matching the specified condition."
"paths./assetdatabases/{webId}/securityentries/{name}.get.responses.200.schema.$ref" = "#/definitions/SecurityEntry"
"paths./assetdatabases/{webId}/securityentries/{name}.get.responses.404.description" = "The security entry with the specified name is not found."
"paths./assetdatabases/{webId}/securityentries/{name}.get.responses.404.schema.$ref" = "#/definitions/Errors"
"paths./assetdatabases/{webId}/securityentries/{name}.get.summary" = "Retrieve the security entry of the specified security item associated with the asset database with the specified name."
"paths./assetdatabases/{webId}/securityentries/{name}.get.tags.length" = 1
"paths./assetdatabases/{webId}/securityentries/{name}.get.tags[0]" = "AssetDatabase"
"paths./assetdatabases/{webId}/securityentries/{name}.put.consumes.length" = 2
"paths./assetdatabases/{webId}/securityentries/{name}.put.consumes[0]" = "application/json"
"paths./assetdatabases/{webId}/securityentries/{name}.put.consumes[1]" = "text/json"
"paths./assetdatabases/{webId}/securityentries/{name}.put.deprecated" = false
"paths./assetdatabases/{webId}/securityentries/{name}.put.operationId" = "AssetDatabase_UpdateSecurityEntry"
"paths./assetdatabases/{webId}/securityentries/{name}.put.parameters.length" = 5
"paths./assetdatabases/{webId}/securityentries/{name}.put.parameters[0].description" = "The name of the security entry."
"paths./assetdatabases/{webId}/securityentries/{name}.put.parameters[0].in" = "path"
"paths./assetdatabases/{webId}/securityentries/{name}.put.parameters[0].name" = "name"
"paths./assetdatabases/{webId}/securityentries/{name}.put.parameters[0].required" = true
"paths./assetdatabases/{webId}/securityentries/{name}.put.parameters[0].type" = "string"
"paths./assetdatabases/{webId}/securityentries/{name}.put.parameters[1].description" = "The ID of the asset database where the security entry will be updated."
"paths./assetdatabases/{webId}/securityentries/{name}.put.parameters[1].in" = "path"
"paths./assetdatabases/{webId}/securityentries/{name}.put.parameters[1].name" = "webId"
"paths./assetdatabases/{webId}/securityentries/{name}.put.parameters[1].required" = true
"paths./assetdatabases/{webId}/securityentries/{name}.put.parameters[1].type" = "string"
"paths./assetdatabases/{webId}/securityentries/{name}.put.parameters[2].description" = "The new security entry definition. The full list of allow and deny rights must be supplied or they will be removed."
"paths./assetdatabases/{webId}/securityentries/{name}.put.parameters[2].in" = "body"
"paths./assetdatabases/{webId}/securityentries/{name}.put.parameters[2].name" = "securityEntry"
"paths./assetdatabases/{webId}/securityentries/{name}.put.parameters[2].required" = true
"paths./assetdatabases/{webId}/securityentries/{name}.put.parameters[2].schema.$ref" = "#/definitions/SecurityEntry"
"paths./assetdatabases/{webId}/securityentries/{name}.put.parameters[3].description" = "If false, the new access permissions are only applied to the associated object. If true, the access permissions of children with any parent-child reference types will change when the permissions on the primary parent change."
"paths./assetdatabases/{webId}/securityentries/{name}.put.parameters[3].in" = "query"
"paths./assetdatabases/{webId}/securityentries/{name}.put.parameters[3].name" = "applyToChildren"
"paths./assetdatabases/{webId}/securityentries/{name}.put.parameters[3].required" = false
"paths./assetdatabases/{webId}/securityentries/{name}.put.parameters[3].type" = "boolean"
"paths./assetdatabases/{webId}/securityentries/{name}.put.parameters[4].description" = "The security item of the desired security entries to be updated. If the parameter is not specified, security entries of the 'Default' security item will be updated."
"paths./assetdatabases/{webId}/securityentries/{name}.put.parameters[4].in" = "query"
"paths./assetdatabases/{webId}/securityentries/{name}.put.parameters[4].name" = "securityItem"
"paths./assetdatabases/{webId}/securityentries/{name}.put.parameters[4].required" = false
"paths./assetdatabases/{webId}/securityentries/{name}.put.parameters[4].type" = "string"
"paths./assetdatabases/{webId}/securityentries/{name}.put.responses.204.description" = "The security entry was updated."
"paths./assetdatabases/{webId}/securityentries/{name}.put.summary" = "Update a security entry owned by the asset database."
"paths./assetdatabases/{webId}/securityentries/{name}.put.tags.length" = 1
"paths./assetdatabases/{webId}/securityentries/{name}.put.tags[0]" = "AssetDatabase"
"paths./assetdatabases/{webId}/tablecategories.get.consumes.length" = 0
"paths./assetdatabases/{webId}/tablecategories.get.deprecated" = false
"paths./assetdatabases/{webId}/tablecategories.get.operationId" = "AssetDatabase_GetTableCategories"
"paths./assetdatabases/{webId}/tablecategories.get.parameters.length" = 2
"paths./assetdatabases/{webId}/tablecategories.get.parameters[0].description" = "The ID of the database."
"paths./assetdatabases/{webId}/tablecategories.get.parameters[0].in" = "path"
"paths./assetdatabases/{webId}/tablecategories.get.parameters[0].name" = "webId"
"paths./assetdatabases/{webId}/tablecategories.get.parameters[0].required" = true
"paths./assetdatabases/{webId}/tablecategories.get.parameters[0].type" = "string"
"paths./assetdatabases/{webId}/tablecategories.get.parameters[1].description" = "List of fields to be returned in the response, separated by semicolons (;). If this parameter is not specified, all available fields will be returned."
"paths./assetdatabases/{webId}/tablecategories.get.parameters[1].in" = "query"
"paths./assetdatabases/{webId}/tablecategories.get.parameters[1].name" = "selectedFields"
"paths./assetdatabases/{webId}/tablecategories.get.parameters[1].required" = false
"paths./assetdatabases/{webId}/tablecategories.get.parameters[1].type" = "string"
"paths./assetdatabases/{webId}/tablecategories.get.responses.200.description" = "The table categories on the specified database."
"paths./assetdatabases/{webId}/tablecategories.get.responses.200.schema.$ref" = "#/definitions/Items[TableCategory]"
"paths./assetdatabases/{webId}/tablecategories.get.summary" = "Retrieve table categories for a given Asset Database."
"paths./assetdatabases/{webId}/tablecategories.get.tags.length" = 1
"paths./assetdatabases/{webId}/tablecategories.get.tags[0]" = "AssetDatabase"
"paths./assetdatabases/{webId}/tablecategories.post.consumes.length" = 2
"paths./assetdatabases/{webId}/tablecategories.post.consumes[0]" = "application/json"
"paths./assetdatabases/{webId}/tablecategories.post.consumes[1]" = "text/json"
"paths./assetdatabases/{webId}/tablecategories.post.deprecated" = false
"paths./assetdatabases/{webId}/tablecategories.post.operationId" = "AssetDatabase_CreateTableCategory"
"paths./assetdatabases/{webId}/tablecategories.post.parameters.length" = 2
"paths./assetdatabases/{webId}/tablecategories.post.parameters[0].description" = "The ID of the database in which to create the table category."
"paths./assetdatabases/{webId}/tablecategories.post.parameters[0].in" = "path"
"paths./assetdatabases/{webId}/tablecategories.post.parameters[0].name" = "webId"
"paths./assetdatabases/{webId}/tablecategories.post.parameters[0].required" = true
"paths./assetdatabases/{webId}/tablecategories.post.parameters[0].type" = "string"
"paths./assetdatabases/{webId}/tablecategories.post.parameters[1].description" = "The new table category definition."
"paths./assetdatabases/{webId}/tablecategories.post.parameters[1].in" = "body"
"paths./assetdatabases/{webId}/tablecategories.post.parameters[1].name" = "tableCategory"
"paths./assetdatabases/{webId}/tablecategories.post.parameters[1].required" = true
"paths./assetdatabases/{webId}/tablecategories.post.parameters[1].schema.$ref" = "#/definitions/TableCategory"
"paths./assetdatabases/{webId}/tablecategories.post.responses.201.description" = "The table category was created. The response's Location header is a link to the table category."
"paths./assetdatabases/{webId}/tablecategories.post.summary" = "Create a table category on the Asset Database."
"paths./assetdatabases/{webId}/tablecategories.post.tags.length" = 1
"paths./assetdatabases/{webId}/tablecategories.post.tags[0]" = "AssetDatabase"
"paths./assetdatabases/{webId}/tables.get.consumes.length" = 0
"paths./assetdatabases/{webId}/tables.get.deprecated" = false
"paths./assetdatabases/{webId}/tables.get.operationId" = "AssetDatabase_GetTables"
"paths./assetdatabases/{webId}/tables.get.parameters.length" = 2
"paths./assetdatabases/{webId}/tables.get.parameters[0].description" = "The ID of the database."
"paths./assetdatabases/{webId}/tables.get.parameters[0].in" = "path"
"paths./assetdatabases/{webId}/tables.get.parameters[0].name" = "webId"
"paths./assetdatabases/{webId}/tables.get.parameters[0].required" = true
"paths./assetdatabases/{webId}/tables.get.parameters[0].type" = "string"
"paths./assetdatabases/{webId}/tables.get.parameters[1].description" = "List of fields to be returned in the response, separated by semicolons (;). If this parameter is not specified, all available fields will be returned."
"paths./assetdatabases/{webId}/tables.get.parameters[1].in" = "query"
"paths./assetdatabases/{webId}/tables.get.parameters[1].name" = "selectedFields"
"paths./assetdatabases/{webId}/tables.get.parameters[1].required" = false
"paths./assetdatabases/{webId}/tables.get.parameters[1].type" = "string"
"paths./assetdatabases/{webId}/tables.get.responses.200.description" = "The tables on the specified database."
"paths./assetdatabases/{webId}/tables.get.responses.200.schema.$ref" = "#/definitions/Items[Table]"
"paths./assetdatabases/{webId}/tables.get.summary" = "Retrieve tables for given Asset Database."
"paths./assetdatabases/{webId}/tables.get.tags.length" = 1
"paths./assetdatabases/{webId}/tables.get.tags[0]" = "AssetDatabase"
"paths./assetdatabases/{webId}/tables.post.consumes.length" = 2
"paths./assetdatabases/{webId}/tables.post.consumes[0]" = "application/json"
"paths./assetdatabases/{webId}/tables.post.consumes[1]" = "text/json"
"paths./assetdatabases/{webId}/tables.post.deprecated" = false
"paths./assetdatabases/{webId}/tables.post.operationId" = "AssetDatabase_CreateTable"
"paths./assetdatabases/{webId}/tables.post.parameters.length" = 2
"paths./assetdatabases/{webId}/tables.post.parameters[0].description" = "The ID of the database in which to create the table."
"paths./assetdatabases/{webId}/tables.post.parameters[0].in" = "path"
"paths./assetdatabases/{webId}/tables.post.parameters[0].name" = "webId"
"paths./assetdatabases/{webId}/tables.post.parameters[0].required" = true
"paths./assetdatabases/{webId}/tables.post.parameters[0].type" = "string"
"paths./assetdatabases/{webId}/tables.post.parameters[1].description" = "The new table definition."
"paths./assetdatabases/{webId}/tables.post.parameters[1].in" = "body"
"paths./assetdatabases/{webId}/tables.post.parameters[1].name" = "table"
"paths./assetdatabases/{webId}/tables.post.parameters[1].required" = true
"paths./assetdatabases/{webId}/tables.post.parameters[1].schema.$ref" = "#/definitions/Table"
"paths./assetdatabases/{webId}/tables.post.responses.201.description" = "The table was created. The response's Location header is a link to the created table."
"paths./assetdatabases/{webId}/tables.post.summary" = "Create a table on the Asset Database."
"paths./assetdatabases/{webId}/tables.post.tags.length" = 1
"paths./assetdatabases/{webId}/tables.post.tags[0]" = "AssetDatabase"
"paths./assetservers#name.get.consumes.length" = 0
"paths./assetservers#name.get.deprecated" = false
"paths./assetservers#name.get.description" = "This method returns an asset server based on the name associated with it. Users should primarily search with the WebID when available."
"paths./assetservers#name.get.operationId" = "AssetServer_GetByName"
"paths./assetservers#name.get.parameters.length" = 2
"paths./assetservers#name.get.parameters[0].description" = "The name of the server."
"paths./assetservers#name.get.parameters[0].in" = "query"
"paths./assetservers#name.get.parameters[0].name" = "name"
"paths./assetservers#name.get.parameters[0].required" = true
"paths./assetservers#name.get.parameters[0].type" = "string"
"paths./assetservers#name.get.parameters[1].description" = "List of fields to be returned in the response, separated by semicolons (;). If this parameter is not specified, all available fields will be returned."
"paths./assetservers#name.get.parameters[1].in" = "query"
"paths./assetservers#name.get.parameters[1].name" = "selectedFields"
"paths./assetservers#name.get.parameters[1].required" = false
"paths./assetservers#name.get.parameters[1].type" = "string"
"paths./assetservers#name.get.responses.200.description" = "The requested server."
"paths./assetservers#name.get.responses.200.schema.$ref" = "#/definitions/AssetServer"
"paths./assetservers#name.get.summary" = "Retrieve an Asset Server by name."
"paths./assetservers#name.get.tags.length" = 1
"paths./assetservers#name.get.tags[0]" = "AssetServer"
"paths./assetservers#path.get.consumes.length" = 0
"paths./assetservers#path.get.deprecated" = false
"paths./assetservers#path.get.description" = "This method returns an asset server based on the hierarchical path associated with it, and should be used when a path has been received from a separate part of the PI System for use in the PI Web API. Users should primarily search with the WebID when available."
"paths./assetservers#path.get.operationId" = "AssetServer_GetByPath"
"paths./assetservers#path.get.parameters.length" = 2
"paths./assetservers#path.get.parameters[0].description" = "The path to the server."
"paths./assetservers#path.get.parameters[0].in" = "query"
"paths./assetservers#path.get.parameters[0].name" = "path"
"paths./assetservers#path.get.parameters[0].required" = true
"paths./assetservers#path.get.parameters[0].type" = "string"
"paths./assetservers#path.get.parameters[1].description" = "List of fields to be returned in the response, separated by semicolons (;). If this parameter is not specified, all available fields will be returned."
"paths./assetservers#path.get.parameters[1].in" = "query"
"paths./assetservers#path.get.parameters[1].name" = "selectedFields"
"paths./assetservers#path.get.parameters[1].required" = false
"paths./assetservers#path.get.parameters[1].type" = "string"
"paths./assetservers#path.get.responses.200.description" = "The requested server."
"paths./assetservers#path.get.responses.200.schema.$ref" = "#/definitions/AssetServer"
"paths./assetservers#path.get.summary" = "Retrieve an Asset Server by path."
"paths./assetservers#path.get.tags.length" = 1
"paths./assetservers#path.get.tags[0]" = "AssetServer"
"paths./assetservers.get.consumes.length" = 0
"paths./assetservers.get.deprecated" = false
"paths./assetservers.get.operationId" = "AssetServer_List"
"paths./assetservers.get.parameters.length" = 1
"paths./assetservers.get.parameters[0].description" = "List of fields to be returned in the response, separated by semicolons (;). If this parameter is not specified, all available fields will be returned."
"paths./assetservers.get.parameters[0].in" = "query"
"paths./assetservers.get.parameters[0].name" = "selectedFields"
"paths./assetservers.get.parameters[0].required" = false
"paths./assetservers.get.parameters[0].type" = "string"
"paths./assetservers.get.responses.200.description" = "A list of servers."
"paths./assetservers.get.responses.200.schema.$ref" = "#/definitions/Items[AssetServer]"
"paths./assetservers.get.summary" = "Retrieve a list of all Asset Servers known to this service."
"paths./assetservers.get.tags.length" = 1
"paths./assetservers.get.tags[0]" = "AssetServer"
"paths./assetservers/{webId}.get.consumes.length" = 0
"paths./assetservers/{webId}.get.deprecated" = false
"paths./assetservers/{webId}.get.operationId" = "AssetServer_Get"
"paths./assetservers/{webId}.get.parameters.length" = 2
"paths./assetservers/{webId}.get.parameters[0].description" = "The ID of the server."
"paths./assetservers/{webId}.get.parameters[0].in" = "path"
"paths./assetservers/{webId}.get.parameters[0].name" = "webId"
"paths./assetservers/{webId}.get.parameters[0].required" = true
"paths./assetservers/{webId}.get.parameters[0].type" = "string"
"paths./assetservers/{webId}.get.parameters[1].description" = "List of fields to be returned in the response, separated by semicolons (;). If this parameter is not specified, all available fields will be returned."
"paths./assetservers/{webId}.get.parameters[1].in" = "query"
"paths./assetservers/{webId}.get.parameters[1].name" = "selectedFields"
"paths./assetservers/{webId}.get.parameters[1].required" = false
"paths./assetservers/{webId}.get.parameters[1].type" = "string"
"paths./assetservers/{webId}.get.responses.200.description" = "The requested server."
"paths./assetservers/{webId}.get.responses.200.schema.$ref" = "#/definitions/AssetServer"
"paths./assetservers/{webId}.get.summary" = "Retrieve an Asset Server."
"paths./assetservers/{webId}.get.tags.length" = 1
"paths./assetservers/{webId}.get.tags[0]" = "AssetServer"
"paths./assetservers/{webId}/analysisruleplugins.get.consumes.length" = 0
"paths./assetservers/{webId}/analysisruleplugins.get.deprecated" = false
"paths./assetservers/{webId}/analysisruleplugins.get.operationId" = "AssetServer_GetAnalysisRulePlugIns"
"paths./assetservers/{webId}/analysisruleplugins.get.parameters.length" = 2
"paths./assetservers/{webId}/analysisruleplugins.get.parameters[0].description" = "The ID of the asset server, where the Analysis Rule Plug-in's are installed."
"paths./assetservers/{webId}/analysisruleplugins.get.parameters[0].in" = "path"
"paths./assetservers/{webId}/analysisruleplugins.get.parameters[0].name" = "webId"
"paths./assetservers/{webId}/analysisruleplugins.get.parameters[0].required" = true
"paths./assetservers/{webId}/analysisruleplugins.get.parameters[0].type" = "string"
"paths./assetservers/{webId}/analysisruleplugins.get.parameters[1].description" = "List of fields to be returned in the response, separated by semicolons (;). If this parameter is not specified, all available fields will be returned."
"paths./assetservers/{webId}/analysisruleplugins.get.parameters[1].in" = "query"
"paths./assetservers/{webId}/analysisruleplugins.get.parameters[1].name" = "selectedFields"
"paths./assetservers/{webId}/analysisruleplugins.get.parameters[1].required" = false
"paths./assetservers/{webId}/analysisruleplugins.get.parameters[1].type" = "string"
"paths./assetservers/{webId}/analysisruleplugins.get.responses.200.description" = "A list of Analysis Rule Plug-in's."
"paths./assetservers/{webId}/analysisruleplugins.get.responses.200.schema.$ref" = "#/definitions/Items[AnalysisRulePlugIn]"
"paths./assetservers/{webId}/analysisruleplugins.get.summary" = "Retrieve a list of all Analysis Rule Plug-in's."
"paths./assetservers/{webId}/analysisruleplugins.get.tags.length" = 1
"paths./assetservers/{webId}/analysisruleplugins.get.tags[0]" = "AssetServer"
"paths./assetservers/{webId}/assetdatabases.get.consumes.length" = 0
"paths./assetservers/{webId}/assetdatabases.get.deprecated" = false
"paths./assetservers/{webId}/assetdatabases.get.operationId" = "AssetServer_GetDatabases"
"paths./assetservers/{webId}/assetdatabases.get.parameters.length" = 2
"paths./assetservers/{webId}/assetdatabases.get.parameters[0].description" = "The ID of the server."
"paths./assetservers/{webId}/assetdatabases.get.parameters[0].in" = "path"
"paths./assetservers/{webId}/assetdatabases.get.parameters[0].name" = "webId"
"paths./assetservers/{webId}/assetdatabases.get.parameters[0].required" = true
"paths./assetservers/{webId}/assetdatabases.get.parameters[0].type" = "string"
"paths./assetservers/{webId}/assetdatabases.get.parameters[1].description" = "List of fields to be returned in the response, separated by semicolons (;). If this parameter is not specified, all available fields will be returned."
"paths./assetservers/{webId}/assetdatabases.get.parameters[1].in" = "query"
"paths./assetservers/{webId}/assetdatabases.get.parameters[1].name" = "selectedFields"
"paths./assetservers/{webId}/assetdatabases.get.parameters[1].required" = false
"paths./assetservers/{webId}/assetdatabases.get.parameters[1].type" = "string"
"paths./assetservers/{webId}/assetdatabases.get.responses.200.description" = "A list of databases."
"paths./assetservers/{webId}/assetdatabases.get.responses.200.schema.$ref" = "#/definitions/Items[AssetDatabase]"
"paths./assetservers/{webId}/assetdatabases.get.summary" = "Retrieve a list of all Asset Databases on the specified Asset Server."
"paths./assetservers/{webId}/assetdatabases.get.tags.length" = 1
"paths./assetservers/{webId}/assetdatabases.get.tags[0]" = "AssetServer"
"paths./assetservers/{webId}/assetdatabases.post.consumes.length" = 2
"paths./assetservers/{webId}/assetdatabases.post.consumes[0]" = "application/json"
"paths./assetservers/{webId}/assetdatabases.post.consumes[1]" = "text/json"
"paths./assetservers/{webId}/assetdatabases.post.deprecated" = false
"paths./assetservers/{webId}/assetdatabases.post.operationId" = "AssetServer_CreateAssetDatabase"
"paths./assetservers/{webId}/assetdatabases.post.parameters.length" = 2
"paths./assetservers/{webId}/assetdatabases.post.parameters[0].description" = "The ID of the asset server on which to create the database."
"paths./assetservers/{webId}/assetdatabases.post.parameters[0].in" = "path"
"paths./assetservers/{webId}/assetdatabases.post.parameters[0].name" = "webId"
"paths./assetservers/{webId}/assetdatabases.post.parameters[0].required" = true
"paths./assetservers/{webId}/assetdatabases.post.parameters[0].type" = "string"
"paths./assetservers/{webId}/assetdatabases.post.parameters[1].description" = "The new database definition."
"paths./assetservers/{webId}/assetdatabases.post.parameters[1].in" = "body"
"paths./assetservers/{webId}/assetdatabases.post.parameters[1].name" = "database"
"paths./assetservers/{webId}/assetdatabases.post.parameters[1].required" = true
"paths./assetservers/{webId}/assetdatabases.post.parameters[1].schema.$ref" = "#/definitions/AssetDatabase"
"paths./assetservers/{webId}/assetdatabases.post.responses.201.description" = "The database was created. The response's Location header is a link to the database."
"paths./assetservers/{webId}/assetdatabases.post.summary" = "Create an asset database."
"paths./assetservers/{webId}/assetdatabases.post.tags.length" = 1
"paths./assetservers/{webId}/assetdatabases.post.tags[0]" = "AssetServer"
"paths./assetservers/{webId}/security.get.consumes.length" = 0
"paths./assetservers/{webId}/security.get.deprecated" = false
"paths./assetservers/{webId}/security.get.operationId" = "AssetServer_GetSecurity"
"paths./assetservers/{webId}/security.get.parameters.length" = 5
"paths./assetservers/{webId}/security.get.parameters[0].description" = "The ID of the asset server for the security to be checked."
"paths./assetservers/{webId}/security.get.parameters[0].in" = "path"
"paths./assetservers/{webId}/security.get.parameters[0].name" = "webId"
"paths./assetservers/{webId}/security.get.parameters[0].required" = true
"paths./assetservers/{webId}/security.get.parameters[0].type" = "string"
"paths./assetservers/{webId}/security.get.parameters[1].collectionFormat" = "multi"
"paths./assetservers/{webId}/security.get.parameters[1].description" = "The security item of the desired security information to be returned. Multiple security items may be specified with multiple instances of the parameter. If the parameter is not specified, only 'Default' security item of the security information will be returned."
"paths./assetservers/{webId}/security.get.parameters[1].in" = "query"
"paths./assetservers/{webId}/security.get.parameters[1].items.type" = "string"
"paths./assetservers/{webId}/security.get.parameters[1].name" = "securityItem"
"paths./assetservers/{webId}/security.get.parameters[1].required" = true
"paths./assetservers/{webId}/security.get.parameters[1].type" = "array"
"paths./assetservers/{webId}/security.get.parameters[2].collectionFormat" = "multi"
"paths./assetservers/{webId}/security.get.parameters[2].description" = "The user identity for the security information to be checked. Multiple security identities may be specified with multiple instances of the parameter. If the parameter is not specified, only the current user's security rights will be returned."
"paths./assetservers/{webId}/security.get.parameters[2].in" = "query"
"paths./assetservers/{webId}/security.get.parameters[2].items.type" = "string"
"paths./assetservers/{webId}/security.get.parameters[2].name" = "userIdentity"
"paths./assetservers/{webId}/security.get.parameters[2].required" = true
"paths./assetservers/{webId}/security.get.parameters[2].type" = "array"
"paths./assetservers/{webId}/security.get.parameters[3].description" = "Indicates if the security cache should be refreshed before getting security information. The default is 'false'."
"paths./assetservers/{webId}/security.get.parameters[3].in" = "query"
"paths./assetservers/{webId}/security.get.parameters[3].name" = "forceRefresh"
"paths./assetservers/{webId}/security.get.parameters[3].required" = false
"paths./assetservers/{webId}/security.get.parameters[3].type" = "boolean"
"paths./assetservers/{webId}/security.get.parameters[4].description" = "List of fields to be returned in the response, separated by semicolons (;). If this parameter is not specified, all available fields will be returned."
"paths./assetservers/{webId}/security.get.parameters[4].in" = "query"
"paths./assetservers/{webId}/security.get.parameters[4].name" = "selectedFields"
"paths./assetservers/{webId}/security.get.parameters[4].required" = false
"paths./assetservers/{webId}/security.get.parameters[4].type" = "string"
"paths./assetservers/{webId}/security.get.responses.200.description" = "Security rights."
"paths./assetservers/{webId}/security.get.responses.200.schema.$ref" = "#/definitions/Items[SecurityRights]"
"paths./assetservers/{webId}/security.get.responses.400.description" = "Unsupported security item; an invalid or local account is specified as the user identity."
"paths./assetservers/{webId}/security.get.responses.400.schema.$ref" = "#/definitions/Errors"
"paths./assetservers/{webId}/security.get.responses.401.description" = "Access denied for the specified user identity."
"paths./assetservers/{webId}/security.get.responses.401.schema.$ref" = "#/definitions/Errors"
"paths./assetservers/{webId}/security.get.responses.409.description" = "Unsupported when using Anonymous authentication method."
"paths./assetservers/{webId}/security.get.responses.409.schema.$ref" = "#/definitions/Errors"
"paths./assetservers/{webId}/security.get.responses.502.description" = "Failed to retrieve the specified user identity."
"paths./assetservers/{webId}/security.get.responses.502.schema.$ref" = "#/definitions/Errors"
"paths./assetservers/{webId}/security.get.summary" = "Get the security information of the specified security item associated with the asset server for a specified user."
"paths./assetservers/{webId}/security.get.tags.length" = 1
"paths./assetservers/{webId}/security.get.tags[0]" = "AssetServer"
"paths./assetservers/{webId}/securityentries.get.consumes.length" = 0
"paths./assetservers/{webId}/securityentries.get.deprecated" = false
"paths./assetservers/{webId}/securityentries.get.operationId" = "AssetServer_GetSecurityEntries"
"paths./assetservers/{webId}/securityentries.get.parameters.length" = 4
"paths./assetservers/{webId}/securityentries.get.parameters[0].description" = "The ID of the asset server."
"paths./assetservers/{webId}/securityentries.get.parameters[0].in" = "path"
"paths./assetservers/{webId}/securityentries.get.parameters[0].name" = "webId"
"paths./assetservers/{webId}/securityentries.get.parameters[0].required" = true
"paths./assetservers/{webId}/securityentries.get.parameters[0].type" = "string"
"paths./assetservers/{webId}/securityentries.get.parameters[1].description" = "The name query string used for filtering security entries. The default is no filter."
"paths./assetservers/{webId}/securityentries.get.parameters[1].in" = "query"
"paths./assetservers/{webId}/securityentries.get.parameters[1].name" = "nameFilter"
"paths./assetservers/{webId}/securityentries.get.parameters[1].required" = false
"paths./assetservers/{webId}/securityentries.get.parameters[1].type" = "string"
"paths./assetservers/{webId}/securityentries.get.parameters[2].description" = "The security item of the desired security entries information to be returned. If the parameter is not specified, security entries of the 'Default' security item will be returned."
"paths./assetservers/{webId}/securityentries.get.parameters[2].in" = "query"
"paths./assetservers/{webId}/securityentries.get.parameters[2].name" = "securityItem"
"paths./assetservers/{webId}/securityentries.get.parameters[2].required" = false
"paths./assetservers/{webId}/securityentries.get.parameters[2].type" = "string"
"paths./assetservers/{webId}/securityentries.get.parameters[3].description" = "List of fields to be returned in the response, separated by semicolons (;). If this parameter is not specified, all available fields will be returned."
"paths./assetservers/{webId}/securityentries.get.parameters[3].in" = "query"
"paths./assetservers/{webId}/securityentries.get.parameters[3].name" = "selectedFields"
"paths./assetservers/{webId}/securityentries.get.parameters[3].required" = false
"paths./assetservers/{webId}/securityentries.get.parameters[3].type" = "string"
"paths./assetservers/{webId}/securityentries.get.responses.200.description" = "A list of security entries matching the specified condition."
"paths./assetservers/{webId}/securityentries.get.responses.200.schema.$ref" = "#/definitions/Items[SecurityEntry]"
"paths./assetservers/{webId}/securityentries.get.summary" = "Retrieve the security entries of the specified security item associated with the asset server based on the specified criteria. By default, all security entries for this asset server are returned."
"paths./assetservers/{webId}/securityentries.get.tags.length" = 1
"paths./assetservers/{webId}/securityentries.get.tags[0]" = "AssetServer"
"paths./assetservers/{webId}/securityentries.post.consumes.length" = 2
"paths./assetservers/{webId}/securityentries.post.consumes[0]" = "application/json"
"paths./assetservers/{webId}/securityentries.post.consumes[1]" = "text/json"
"paths./assetservers/{webId}/securityentries.post.deprecated" = false
"paths./assetservers/{webId}/securityentries.post.operationId" = "AssetServer_CreateSecurityEntry"
"paths./assetservers/{webId}/securityentries.post.parameters.length" = 4
"paths./assetservers/{webId}/securityentries.post.parameters[0].description" = "The ID of the asset server where the security entry will be created."
"paths./assetservers/{webId}/securityentries.post.parameters[0].in" = "path"
"paths./assetservers/{webId}/securityentries.post.parameters[0].name" = "webId"
"paths./assetservers/{webId}/securityentries.post.parameters[0].required" = true
"paths./assetservers/{webId}/securityentries.post.parameters[0].type" = "string"
"paths./assetservers/{webId}/securityentries.post.parameters[1].description" = "The new security entry definition. The full list of allow and deny rights must be supplied."
"paths./assetservers/{webId}/securityentries.post.parameters[1].in" = "body"
"paths./assetservers/{webId}/securityentries.post.parameters[1].name" = "securityEntry"
"paths./assetservers/{webId}/securityentries.post.parameters[1].required" = true
"paths./assetservers/{webId}/securityentries.post.parameters[1].schema.$ref" = "#/definitions/SecurityEntry"
"paths./assetservers/{webId}/securityentries.post.parameters[2].description" = "If false, the new access permissions are only applied to the associated object. If true, the access permissions of children with any parent-child reference types will change when the permissions on the primary parent change."
"paths./assetservers/{webId}/securityentries.post.parameters[2].in" = "query"
"paths./assetservers/{webId}/securityentries.post.parameters[2].name" = "applyToChildren"
"paths./assetservers/{webId}/securityentries.post.parameters[2].required" = false
"paths./assetservers/{webId}/securityentries.post.parameters[2].type" = "boolean"
"paths./assetservers/{webId}/securityentries.post.parameters[3].description" = "The security item of the desired security entries to be created. If the parameter is not specified, security entries of the 'Default' security item will be created."
"paths./assetservers/{webId}/securityentries.post.parameters[3].in" = "query"
"paths./assetservers/{webId}/securityentries.post.parameters[3].name" = "securityItem"
"paths./assetservers/{webId}/securityentries.post.parameters[3].required" = false
"paths./assetservers/{webId}/securityentries.post.parameters[3].type" = "string"
"paths./assetservers/{webId}/securityentries.post.responses.201.description" = "The security entry was created. The response's Location header is a link to the security entry."
"paths./assetservers/{webId}/securityentries.post.summary" = "Create a security entry owned by the asset server."
"paths./assetservers/{webId}/securityentries.post.tags.length" = 1
"paths./assetservers/{webId}/securityentries.post.tags[0]" = "AssetServer"
"paths./assetservers/{webId}/securityentries/{name}.delete.consumes.length" = 0
"paths./assetservers/{webId}/securityentries/{name}.delete.deprecated" = false
"paths./assetservers/{webId}/securityentries/{name}.delete.operationId" = "AssetServer_DeleteSecurityEntry"
"paths./assetservers/{webId}/securityentries/{name}.delete.parameters.length" = 4
"paths./assetservers/{webId}/securityentries/{name}.delete.parameters[0].description" = "The name of the security entry. For every backslash character (\\) in the security entry name, replace with asterisk (*). As an example, use domain*username instead of domain\\username."
"paths./assetservers/{webId}/securityentries/{name}.delete.parameters[0].in" = "path"
"paths./assetservers/{webId}/securityentries/{name}.delete.parameters[0].name" = "name"
"paths./assetservers/{webId}/securityentries/{name}.delete.parameters[0].required" = true
"paths./assetservers/{webId}/securityentries/{name}.delete.parameters[0].type" = "string"
"paths./assetservers/{webId}/securityentries/{name}.delete.parameters[1].description" = "The ID of the asset server where the security entry will be deleted."
"paths./assetservers/{webId}/securityentries/{name}.delete.parameters[1].in" = "path"
"paths./assetservers/{webId}/securityentries/{name}.delete.parameters[1].name" = "webId"
"paths./assetservers/{webId}/securityentries/{name}.delete.parameters[1].required" = true
"paths./assetservers/{webId}/securityentries/{name}.delete.parameters[1].type" = "string"
"paths./assetservers/{webId}/securityentries/{name}.delete.parameters[2].description" = "If false, the new access permissions are only applied to the associated object. If true, the access permissions of children with any parent-child reference types will change when the permissions on the primary parent change."
"paths./assetservers/{webId}/securityentries/{name}.delete.parameters[2].in" = "query"
"paths./assetservers/{webId}/securityentries/{name}.delete.parameters[2].name" = "applyToChildren"
"paths./assetservers/{webId}/securityentries/{name}.delete.parameters[2].required" = false
"paths./assetservers/{webId}/securityentries/{name}.delete.parameters[2].type" = "boolean"
"paths./assetservers/{webId}/securityentries/{name}.delete.parameters[3].description" = "The security item of the desired security entries to be deleted. If the parameter is not specified, security entries of the 'Default' security item will be deleted."
"paths./assetservers/{webId}/securityentries/{name}.delete.parameters[3].in" = "query"
"paths./assetservers/{webId}/securityentries/{name}.delete.parameters[3].name" = "securityItem"
"paths./assetservers/{webId}/securityentries/{name}.delete.parameters[3].required" = false
"paths./assetservers/{webId}/securityentries/{name}.delete.parameters[3].type" = "string"
"paths./assetservers/{webId}/securityentries/{name}.delete.responses.204.description" = "The security entry was deleted."
"paths./assetservers/{webId}/securityentries/{name}.delete.summary" = "Delete a security entry owned by the asset server."
"paths./assetservers/{webId}/securityentries/{name}.delete.tags.length" = 1
"paths./assetservers/{webId}/securityentries/{name}.delete.tags[0]" = "AssetServer"
"paths./assetservers/{webId}/securityentries/{name}.get.consumes.length" = 0
"paths./assetservers/{webId}/securityentries/{name}.get.deprecated" = false
"paths./assetservers/{webId}/securityentries/{name}.get.operationId" = "AssetServer_GetSecurityEntryByName"
"paths./assetservers/{webId}/securityentries/{name}.get.parameters.length" = 4
"paths./assetservers/{webId}/securityentries/{name}.get.parameters[0].description" = "The name of the security entry. For every backslash character (\\) in the security entry name, replace with asterisk (*). As an example, use domain*username instead of domain\\username."
"paths./assetservers/{webId}/securityentries/{name}.get.parameters[0].in" = "path"
"paths./assetservers/{webId}/securityentries/{name}.get.parameters[0].name" = "name"
"paths./assetservers/{webId}/securityentries/{name}.get.parameters[0].required" = true
"paths./assetservers/{webId}/securityentries/{name}.get.parameters[0].type" = "string"
"paths./assetservers/{webId}/securityentries/{name}.get.parameters[1].description" = "The ID of the asset server."
"paths./assetservers/{webId}/securityentries/{name}.get.parameters[1].in" = "path"
"paths./assetservers/{webId}/securityentries/{name}.get.parameters[1].name" = "webId"
"paths./assetservers/{webId}/securityentries/{name}.get.parameters[1].required" = true
"paths./assetservers/{webId}/securityentries/{name}.get.parameters[1].type" = "string"
"paths./assetservers/{webId}/securityentries/{name}.get.parameters[2].description" = "The security item of the desired security entries information to be returned. If the parameter is not specified, security entries of the 'Default' security item will be returned."
"paths./assetservers/{webId}/securityentries/{name}.get.parameters[2].in" = "query"
"paths./assetservers/{webId}/securityentries/{name}.get.parameters[2].name" = "securityItem"
"paths./assetservers/{webId}/securityentries/{name}.get.parameters[2].required" = false
"paths./assetservers/{webId}/securityentries/{name}.get.parameters[2].type" = "string"
"paths./assetservers/{webId}/securityentries/{name}.get.parameters[3].description" = "List of fields to be returned in the response, separated by semicolons (;). If this parameter is not specified, all available fields will be returned."
"paths./assetservers/{webId}/securityentries/{name}.get.parameters[3].in" = "query"
"paths./assetservers/{webId}/securityentries/{name}.get.parameters[3].name" = "selectedFields"
"paths./assetservers/{webId}/securityentries/{name}.get.parameters[3].required" = false
"paths./assetservers/{webId}/securityentries/{name}.get.parameters[3].type" = "string"
"paths./assetservers/{webId}/securityentries/{name}.get.responses.200.description" = "The security entry matching the specified condition."
"paths./assetservers/{webId}/securityentries/{name}.get.responses.200.schema.$ref" = "#/definitions/SecurityEntry"
"paths./assetservers/{webId}/securityentries/{name}.get.responses.404.description" = "The security entry with the specified name is not found."
"paths./assetservers/{webId}/securityentries/{name}.get.responses.404.schema.$ref" = "#/definitions/Errors"
"paths./assetservers/{webId}/securityentries/{name}.get.summary" = "Retrieve the security entry of the specified security item associated with the asset server with the specified name."
"paths./assetservers/{webId}/securityentries/{name}.get.tags.length" = 1
"paths./assetservers/{webId}/securityentries/{name}.get.tags[0]" = "AssetServer"
"paths./assetservers/{webId}/securityentries/{name}.put.consumes.length" = 2
"paths./assetservers/{webId}/securityentries/{name}.put.consumes[0]" = "application/json"
"paths./assetservers/{webId}/securityentries/{name}.put.consumes[1]" = "text/json"
"paths./assetservers/{webId}/securityentries/{name}.put.deprecated" = false
"paths./assetservers/{webId}/securityentries/{name}.put.operationId" = "AssetServer_UpdateSecurityEntry"
"paths./assetservers/{webId}/securityentries/{name}.put.parameters.length" = 5
"paths./assetservers/{webId}/securityentries/{name}.put.parameters[0].description" = "The name of the security entry."
"paths./assetservers/{webId}/securityentries/{name}.put.parameters[0].in" = "path"
"paths./assetservers/{webId}/securityentries/{name}.put.parameters[0].name" = "name"
"paths./assetservers/{webId}/securityentries/{name}.put.parameters[0].required" = true
"paths./assetservers/{webId}/securityentries/{name}.put.parameters[0].type" = "string"
"paths./assetservers/{webId}/securityentries/{name}.put.parameters[1].description" = "The ID of the asset server where the security entry will be updated."
"paths./assetservers/{webId}/securityentries/{name}.put.parameters[1].in" = "path"
"paths./assetservers/{webId}/securityentries/{name}.put.parameters[1].name" = "webId"
"paths./assetservers/{webId}/securityentries/{name}.put.parameters[1].required" = true
"paths./assetservers/{webId}/securityentries/{name}.put.parameters[1].type" = "string"
"paths./assetservers/{webId}/securityentries/{name}.put.parameters[2].description" = "The new security entry definition. The full list of allow and deny rights must be supplied or they will be removed."
"paths./assetservers/{webId}/securityentries/{name}.put.parameters[2].in" = "body"
"paths./assetservers/{webId}/securityentries/{name}.put.parameters[2].name" = "securityEntry"
"paths./assetservers/{webId}/securityentries/{name}.put.parameters[2].required" = true
"paths./assetservers/{webId}/securityentries/{name}.put.parameters[2].schema.$ref" = "#/definitions/SecurityEntry"
"paths./assetservers/{webId}/securityentries/{name}.put.parameters[3].description" = "If false, the new access permissions are only applied to the associated object. If true, the access permissions of children with any parent-child reference types will change when the permissions on the primary parent change."
"paths./assetservers/{webId}/securityentries/{name}.put.parameters[3].in" = "query"
"paths./assetservers/{webId}/securityentries/{name}.put.parameters[3].name" = "applyToChildren"
"paths./assetservers/{webId}/securityentries/{name}.put.parameters[3].required" = false
"paths./assetservers/{webId}/securityentries/{name}.put.parameters[3].type" = "boolean"
"paths./assetservers/{webId}/securityentries/{name}.put.parameters[4].description" = "The security item of the desired security entries to be updated. If the parameter is not specified, security entries of the 'Default' security item will be updated."
"paths./assetservers/{webId}/securityentries/{name}.put.parameters[4].in" = "query"
"paths./assetservers/{webId}/securityentries/{name}.put.parameters[4].name" = "securityItem"
"paths./assetservers/{webId}/securityentries/{name}.put.parameters[4].required" = false
"paths./assetservers/{webId}/securityentries/{name}.put.parameters[4].type" = "string"
"paths./assetservers/{webId}/securityentries/{name}.put.responses.204.description" = "The security entry was updated."
"paths./assetservers/{webId}/securityentries/{name}.put.summary" = "Update a security entry owned by the asset server."
"paths./assetservers/{webId}/securityentries/{name}.put.tags.length" = 1
"paths./assetservers/{webId}/securityentries/{name}.put.tags[0]" = "AssetServer"
"paths./assetservers/{webId}/securityidentities#userIdentity.get.consumes.length" = 0
"paths./assetservers/{webId}/securityidentities#userIdentity.get.deprecated" = false
"paths./assetservers/{webId}/securityidentities#userIdentity.get.operationId" = "AssetServer_GetSecurityIdentitiesForUser"
"paths./assetservers/{webId}/securityidentities#userIdentity.get.parameters.length" = 3
"paths./assetservers/{webId}/securityidentities#userIdentity.get.parameters[0].description" = "The ID of the server."
"paths./assetservers/{webId}/securityidentities#userIdentity.get.parameters[0].in" = "path"
"paths./assetservers/{webId}/securityidentities#userIdentity.get.parameters[0].name" = "webId"
"paths./assetservers/{webId}/securityidentities#userIdentity.get.parameters[0].required" = true
"paths./assetservers/{webId}/securityidentities#userIdentity.get.parameters[0].type" = "string"
"paths./assetservers/{webId}/securityidentities#userIdentity.get.parameters[1].description" = "The user identity to search for."
"paths./assetservers/{webId}/securityidentities#userIdentity.get.parameters[1].in" = "query"
"paths./assetservers/{webId}/securityidentities#userIdentity.get.parameters[1].name" = "userIdentity"
"paths./assetservers/{webId}/securityidentities#userIdentity.get.parameters[1].required" = true
"paths./assetservers/{webId}/securityidentities#userIdentity.get.parameters[1].type" = "string"
"paths./assetservers/{webId}/securityidentities#userIdentity.get.parameters[2].description" = "List of fields to be returned in the response, separated by semicolons (;). If this parameter is not specified, all available fields will be returned."
"paths./assetservers/{webId}/securityidentities#userIdentity.get.parameters[2].in" = "query"
"paths./assetservers/{webId}/securityidentities#userIdentity.get.parameters[2].name" = "selectedFields"
"paths./assetservers/{webId}/securityidentities#userIdentity.get.parameters[2].required" = false
"paths./assetservers/{webId}/securityidentities#userIdentity.get.parameters[2].type" = "string"
"paths./assetservers/{webId}/securityidentities#userIdentity.get.responses.200.description" = "A list of security identities for the specified user."
"paths./assetservers/{webId}/securityidentities#userIdentity.get.responses.200.schema.$ref" = "#/definitions/Items[SecurityIdentity]"
"paths./assetservers/{webId}/securityidentities#userIdentity.get.responses.400.description" = "Unsupported security item; an invalid or local account is specified as the user identity."
"paths./assetservers/{webId}/securityidentities#userIdentity.get.responses.400.schema.$ref" = "#/definitions/Errors"
"paths./assetservers/{webId}/securityidentities#userIdentity.get.responses.401.description" = "Access denied for the specified user identity."
"paths./assetservers/{webId}/securityidentities#userIdentity.get.responses.401.schema.$ref" = "#/definitions/Errors"
"paths./assetservers/{webId}/securityidentities#userIdentity.get.responses.502.description" = "Failed to retrieve the specified user identity."
"paths./assetservers/{webId}/securityidentities#userIdentity.get.responses.502.schema.$ref" = "#/definitions/Errors"
"paths./assetservers/{webId}/securityidentities#userIdentity.get.summary" = "Retrieve security identities for a specific user."
"paths./assetservers/{webId}/securityidentities#userIdentity.get.tags.length" = 1
"paths./assetservers/{webId}/securityidentities#userIdentity.get.tags[0]" = "AssetServer"
"paths./assetservers/{webId}/securityidentities.get.consumes.length" = 0
"paths./assetservers/{webId}/securityidentities.get.deprecated" = false
"paths./assetservers/{webId}/securityidentities.get.operationId" = "AssetServer_GetSecurityIdentities"
"paths./assetservers/{webId}/securityidentities.get.parameters.length" = 7
"paths./assetservers/{webId}/securityidentities.get.parameters[0].description" = "The ID of the asset server to search."
"paths./assetservers/{webId}/securityidentities.get.parameters[0].in" = "path"
"paths./assetservers/{webId}/securityidentities.get.parameters[0].name" = "webId"
"paths./assetservers/{webId}/securityidentities.get.parameters[0].required" = true
"paths./assetservers/{webId}/securityidentities.get.parameters[0].type" = "string"
"paths./assetservers/{webId}/securityidentities.get.parameters[1].description" = "Specifies which of the object's properties are searched. The default is 'Name'."
"paths./assetservers/{webId}/securityidentities.get.parameters[1].in" = "query"
"paths./assetservers/{webId}/securityidentities.get.parameters[1].name" = "field"
"paths./assetservers/{webId}/securityidentities.get.parameters[1].required" = false
"paths./assetservers/{webId}/securityidentities.get.parameters[1].type" = "string"
"paths./assetservers/{webId}/securityidentities.get.parameters[2].description" = "The maximum number of objects to be returned. The default is 1000."
"paths./assetservers/{webId}/securityidentities.get.parameters[2].in" = "query"
"paths./assetservers/{webId}/securityidentities.get.parameters[2].name" = "maxCount"
"paths./assetservers/{webId}/securityidentities.get.parameters[2].required" = false
"paths./assetservers/{webId}/securityidentities.get.parameters[2].type" = "integer"
"paths./assetservers/{webId}/securityidentities.get.parameters[3].description" = "The query string used for finding objects. The default is no query string."
"paths./assetservers/{webId}/securityidentities.get.parameters[3].in" = "query"
"paths./assetservers/{webId}/securityidentities.get.parameters[3].name" = "query"
"paths./assetservers/{webId}/securityidentities.get.parameters[3].required" = false
"paths./assetservers/{webId}/securityidentities.get.parameters[3].type" = "string"
"paths./assetservers/{webId}/securityidentities.get.parameters[4].description" = "List of fields to be returned in the response, separated by semicolons (;). If this parameter is not specified, all available fields will be returned."
"paths./assetservers/{webId}/securityidentities.get.parameters[4].in" = "query"
"paths./assetservers/{webId}/securityidentities.get.parameters[4].name" = "selectedFields"
"paths./assetservers/{webId}/securityidentities.get.parameters[4].required" = false
"paths./assetservers/{webId}/securityidentities.get.parameters[4].type" = "string"
"paths./assetservers/{webId}/securityidentities.get.parameters[5].description" = "The field or property of the object used to sort the returned collection. The default is 'Name'."
"paths./assetservers/{webId}/securityidentities.get.parameters[5].in" = "query"
"paths./assetservers/{webId}/securityidentities.get.parameters[5].name" = "sortField"
"paths./assetservers/{webId}/securityidentities.get.parameters[5].required" = false
"paths./assetservers/{webId}/securityidentities.get.parameters[5].type" = "string"
"paths./assetservers/{webId}/securityidentities.get.parameters[6].description" = "The order that the returned collection is sorted. The default is 'Ascending'."
"paths./assetservers/{webId}/securityidentities.get.parameters[6].in" = "query"
"paths./assetservers/{webId}/securityidentities.get.parameters[6].name" = "sortOrder"
"paths./assetservers/{webId}/securityidentities.get.parameters[6].required" = false
"paths./assetservers/{webId}/securityidentities.get.parameters[6].type" = "string"
"paths./assetservers/{webId}/securityidentities.get.responses.200.description" = "A list of security identities matching the specified condition."
"paths./assetservers/{webId}/securityidentities.get.responses.200.schema.$ref" = "#/definitions/Items[SecurityIdentity]"
"paths./assetservers/{webId}/securityidentities.get.summary" = "Retrieve security identities based on the specified criteria. By default, all security identities in the specified Asset Server are returned."
"paths./assetservers/{webId}/securityidentities.get.tags.length" = 1
"paths./assetservers/{webId}/securityidentities.get.tags[0]" = "AssetServer"
"paths./assetservers/{webId}/securityidentities.post.consumes.length" = 2
"paths./assetservers/{webId}/securityidentities.post.consumes[0]" = "application/json"
"paths./assetservers/{webId}/securityidentities.post.consumes[1]" = "text/json"
"paths./assetservers/{webId}/securityidentities.post.deprecated" = false
"paths./assetservers/{webId}/securityidentities.post.operationId" = "AssetServer_CreateSecurityIdentity"
"paths./assetservers/{webId}/securityidentities.post.parameters.length" = 2
"paths./assetservers/{webId}/securityidentities.post.parameters[0].description" = "The ID of the asset server on which to create the security identity."
"paths./assetservers/{webId}/securityidentities.post.parameters[0].in" = "path"
"paths./assetservers/{webId}/securityidentities.post.parameters[0].name" = "webId"
"paths./assetservers/{webId}/securityidentities.post.parameters[0].required" = true
"paths./assetservers/{webId}/securityidentities.post.parameters[0].type" = "string"
"paths./assetservers/{webId}/securityidentities.post.parameters[1].description" = "The new security identity definition."
"paths./assetservers/{webId}/securityidentities.post.parameters[1].in" = "body"
"paths./assetservers/{webId}/securityidentities.post.parameters[1].name" = "securityIdentity"
"paths./assetservers/{webId}/securityidentities.post.parameters[1].required" = true
"paths./assetservers/{webId}/securityidentities.post.parameters[1].schema.$ref" = "#/definitions/SecurityIdentity"
"paths./assetservers/{webId}/securityidentities.post.responses.201.description" = "The security identity was created. The response's Location header is a link to the security identity."
"paths./assetservers/{webId}/securityidentities.post.summary" = "Create a security identity."
"paths./assetservers/{webId}/securityidentities.post.tags.length" = 1
"paths./assetservers/{webId}/securityidentities.post.tags[0]" = "AssetServer"
"paths./assetservers/{webId}/securitymappings.get.consumes.length" = 0
"paths./assetservers/{webId}/securitymappings.get.deprecated" = false
"paths./assetservers/{webId}/securitymappings.get.operationId" = "AssetServer_GetSecurityMappings"
"paths./assetservers/{webId}/securitymappings.get.parameters.length" = 7
"paths./assetservers/{webId}/securitymappings.get.parameters[0].description" = "The ID of the asset server to search."
"paths./assetservers/{webId}/securitymappings.get.parameters[0].in" = "path"
"paths./assetservers/{webId}/securitymappings.get.parameters[0].name" = "webId"
"paths./assetservers/{webId}/securitymappings.get.parameters[0].required" = true
"paths./assetservers/{webId}/securitymappings.get.parameters[0].type" = "string"
"paths./assetservers/{webId}/securitymappings.get.parameters[1].description" = "Specifies which of the object's properties are searched. The default is 'Name'."
"paths./assetservers/{webId}/securitymappings.get.parameters[1].in" = "query"
"paths./assetservers/{webId}/securitymappings.get.parameters[1].name" = "field"
"paths./assetservers/{webId}/securitymappings.get.parameters[1].required" = false
"paths./assetservers/{webId}/securitymappings.get.parameters[1].type" = "string"
"paths./assetservers/{webId}/securitymappings.get.parameters[2].description" = "The maximum number of objects to be returned. The default is 1000."
"paths./assetservers/{webId}/securitymappings.get.parameters[2].in" = "query"
"paths./assetservers/{webId}/securitymappings.get.parameters[2].name" = "maxCount"
"paths./assetservers/{webId}/securitymappings.get.parameters[2].required" = false
"paths./assetservers/{webId}/securitymappings.get.parameters[2].type" = "integer"
"paths./assetservers/{webId}/securitymappings.get.parameters[3].description" = "The query string used for finding objects. The default is no query string."
"paths./assetservers/{webId}/securitymappings.get.parameters[3].in" = "query"
"paths./assetservers/{webId}/securitymappings.get.parameters[3].name" = "query"
"paths./assetservers/{webId}/securitymappings.get.parameters[3].required" = false
"paths./assetservers/{webId}/securitymappings.get.parameters[3].type" = "string"
"paths./assetservers/{webId}/securitymappings.get.parameters[4].description" = "List of fields to be returned in the response, separated by semicolons (;). If this parameter is not specified, all available fields will be returned."
"paths./assetservers/{webId}/securitymappings.get.parameters[4].in" = "query"
"paths./assetservers/{webId}/securitymappings.get.parameters[4].name" = "selectedFields"
"paths./assetservers/{webId}/securitymappings.get.parameters[4].required" = false
"paths./assetservers/{webId}/securitymappings.get.parameters[4].type" = "string"
"paths./assetservers/{webId}/securitymappings.get.parameters[5].description" = "The field or property of the object used to sort the returned collection. The default is 'Name'."
"paths./assetservers/{webId}/securitymappings.get.parameters[5].in" = "query"
"paths./assetservers/{webId}/securitymappings.get.parameters[5].name" = "sortField"
"paths./assetservers/{webId}/securitymappings.get.parameters[5].required" = false
"paths./assetservers/{webId}/securitymappings.get.parameters[5].type" = "string"
"paths./assetservers/{webId}/securitymappings.get.parameters[6].description" = "The order that the returned collection is sorted. The default is 'Ascending'."
"paths./assetservers/{webId}/securitymappings.get.parameters[6].in" = "query"
"paths./assetservers/{webId}/securitymappings.get.parameters[6].name" = "sortOrder"
"paths./assetservers/{webId}/securitymappings.get.parameters[6].required" = false
"paths./assetservers/{webId}/securitymappings.get.parameters[6].type" = "string"
"paths./assetservers/{webId}/securitymappings.get.responses.200.description" = "A list of security mappings matching the specified condition."
"paths./assetservers/{webId}/securitymappings.get.responses.200.schema.$ref" = "#/definitions/Items[SecurityMapping]"
"paths./assetservers/{webId}/securitymappings.get.summary" = "Retrieve security mappings based on the specified criteria. By default, all security mappings in the specified Asset Server are returned."
"paths./assetservers/{webId}/securitymappings.get.tags.length" = 1
"paths./assetservers/{webId}/securitymappings.get.tags[0]" = "AssetServer"
"paths./assetservers/{webId}/securitymappings.post.consumes.length" = 2
"paths./assetservers/{webId}/securitymappings.post.consumes[0]" = "application/json"
"paths./assetservers/{webId}/securitymappings.post.consumes[1]" = "text/json"
"paths./assetservers/{webId}/securitymappings.post.deprecated" = false
"paths./assetservers/{webId}/securitymappings.post.operationId" = "AssetServer_CreateSecurityMapping"
"paths./assetservers/{webId}/securitymappings.post.parameters.length" = 2
"paths./assetservers/{webId}/securitymappings.post.parameters[0].description" = "The ID of the asset server on which to create the security mapping."
"paths./assetservers/{webId}/securitymappings.post.parameters[0].in" = "path"
"paths./assetservers/{webId}/securitymappings.post.parameters[0].name" = "webId"
"paths./assetservers/{webId}/securitymappings.post.parameters[0].required" = true
"paths./assetservers/{webId}/securitymappings.post.parameters[0].type" = "string"
"paths./assetservers/{webId}/securitymappings.post.parameters[1].description" = "The new security mapping definition."
"paths./assetservers/{webId}/securitymappings.post.parameters[1].in" = "body"
"paths./assetservers/{webId}/securitymappings.post.parameters[1].name" = "securityMapping"
"paths./assetservers/{webId}/securitymappings.post.parameters[1].required" = true
"paths./assetservers/{webId}/securitymappings.post.parameters[1].schema.$ref" = "#/definitions/SecurityMapping"
"paths./assetservers/{webId}/securitymappings.post.responses.201.description" = "The security mapping was created. The response's Location header is a link to the security mapping."
"paths./assetservers/{webId}/securitymappings.post.summary" = "Create a security mapping."
"paths./assetservers/{webId}/securitymappings.post.tags.length" = 1
"paths./assetservers/{webId}/securitymappings.post.tags[0]" = "AssetServer"
"paths./assetservers/{webId}/timeruleplugins.get.consumes.length" = 0
"paths./assetservers/{webId}/timeruleplugins.get.deprecated" = false
"paths./assetservers/{webId}/timeruleplugins.get.operationId" = "AssetServer_GetTimeRulePlugIns"
"paths./assetservers/{webId}/timeruleplugins.get.parameters.length" = 2
"paths./assetservers/{webId}/timeruleplugins.get.parameters[0].description" = "The ID of the asset server, where the Time Rule Plug-in's are installed."
"paths./assetservers/{webId}/timeruleplugins.get.parameters[0].in" = "path"
"paths./assetservers/{webId}/timeruleplugins.get.parameters[0].name" = "webId"
"paths./assetservers/{webId}/timeruleplugins.get.parameters[0].required" = true
"paths./assetservers/{webId}/timeruleplugins.get.parameters[0].type" = "string"
"paths./assetservers/{webId}/timeruleplugins.get.parameters[1].description" = "List of fields to be returned in the response, separated by semicolons (;). If this parameter is not specified, all available fields will be returned."
"paths./assetservers/{webId}/timeruleplugins.get.parameters[1].in" = "query"
"paths./assetservers/{webId}/timeruleplugins.get.parameters[1].name" = "selectedFields"
"paths./assetservers/{webId}/timeruleplugins.get.parameters[1].required" = false
"paths./assetservers/{webId}/timeruleplugins.get.parameters[1].type" = "string"
"paths./assetservers/{webId}/timeruleplugins.get.responses.200.description" = "A list of Time Rule Plug-in's."
"paths./assetservers/{webId}/timeruleplugins.get.responses.200.schema.$ref" = "#/definitions/Items[TimeRulePlugIn]"
"paths./assetservers/{webId}/timeruleplugins.get.summary" = "Retrieve a list of all Time Rule Plug-in's."
"paths./assetservers/{webId}/timeruleplugins.get.tags.length" = 1
"paths./assetservers/{webId}/timeruleplugins.get.tags[0]" = "AssetServer"
"paths./assetservers/{webId}/unitclasses.get.consumes.length" = 0
"paths./assetservers/{webId}/unitclasses.get.deprecated" = false
"paths./assetservers/{webId}/unitclasses.get.operationId" = "AssetServer_GetUnitClasses"
"paths./assetservers/{webId}/unitclasses.get.parameters.length" = 2
"paths./assetservers/{webId}/unitclasses.get.parameters[0].description" = "The ID of the server."
"paths./assetservers/{webId}/unitclasses.get.parameters[0].in" = "path"
"paths./assetservers/{webId}/unitclasses.get.parameters[0].name" = "webId"
"paths./assetservers/{webId}/unitclasses.get.parameters[0].required" = true
"paths./assetservers/{webId}/unitclasses.get.parameters[0].type" = "string"
"paths./assetservers/{webId}/unitclasses.get.parameters[1].description" = "List of fields to be returned in the response, separated by semicolons (;). If this parameter is not specified, all available fields will be returned."
"paths./assetservers/{webId}/unitclasses.get.parameters[1].in" = "query"
"paths./assetservers/{webId}/unitclasses.get.parameters[1].name" = "selectedFields"
"paths./assetservers/{webId}/unitclasses.get.parameters[1].required" = false
"paths./assetservers/{webId}/unitclasses.get.parameters[1].type" = "string"
"paths./assetservers/{webId}/unitclasses.get.responses.200.description" = "A list of unit classes."
"paths./assetservers/{webId}/unitclasses.get.responses.200.schema.$ref" = "#/definitions/Items[UnitClass]"
"paths./assetservers/{webId}/unitclasses.get.summary" = "Retrieve a list of all unit classes on the specified Asset Server."
"paths./assetservers/{webId}/unitclasses.get.tags.length" = 1
"paths./assetservers/{webId}/unitclasses.get.tags[0]" = "AssetServer"
"paths./assetservers/{webId}/unitclasses.post.consumes.length" = 2
"paths./assetservers/{webId}/unitclasses.post.consumes[0]" = "application/json"
"paths./assetservers/{webId}/unitclasses.post.consumes[1]" = "text/json"
"paths./assetservers/{webId}/unitclasses.post.deprecated" = false
"paths./assetservers/{webId}/unitclasses.post.operationId" = "AssetServer_CreateUnitClass"
"paths./assetservers/{webId}/unitclasses.post.parameters.length" = 2
"paths./assetservers/{webId}/unitclasses.post.parameters[0].description" = "The ID of the server."
"paths./assetservers/{webId}/unitclasses.post.parameters[0].in" = "path"
"paths./assetservers/{webId}/unitclasses.post.parameters[0].name" = "webId"
"paths./assetservers/{webId}/unitclasses.post.parameters[0].required" = true
"paths./assetservers/{webId}/unitclasses.post.parameters[0].type" = "string"
"paths./assetservers/{webId}/unitclasses.post.parameters[1].description" = "The new unit class definition."
"paths./assetservers/{webId}/unitclasses.post.parameters[1].in" = "body"
"paths./assetservers/{webId}/unitclasses.post.parameters[1].name" = "unitClass"
"paths./assetservers/{webId}/unitclasses.post.parameters[1].required" = true
"paths./assetservers/{webId}/unitclasses.post.parameters[1].schema.$ref" = "#/definitions/UnitClass"
"paths./assetservers/{webId}/unitclasses.post.responses.201.description" = "The unit class was created. The response's Location header is a link to the unit class."
"paths./assetservers/{webId}/unitclasses.post.summary" = "Create a unit class in the specified Asset Server."
"paths./assetservers/{webId}/unitclasses.post.tags.length" = 1
"paths./assetservers/{webId}/unitclasses.post.tags[0]" = "AssetServer"
"paths./attributecategories.get.consumes.length" = 0
"paths./attributecategories.get.deprecated" = false
"paths./attributecategories.get.operationId" = "AttributeCategory_GetByPath"
"paths./attributecategories.get.parameters.length" = 2
"paths./attributecategories.get.parameters[0].description" = "The path to the target attribute category."
"paths./attributecategories.get.parameters[0].in" = "query"
"paths./attributecategories.get.parameters[0].name" = "path"
"paths./attributecategories.get.parameters[0].required" = true
"paths./attributecategories.get.parameters[0].type" = "string"
"paths./attributecategories.get.parameters[1].description" = "List of fields to be returned in the response, separated by semicolons (;). If this parameter is not specified, all available fields will be returned."
"paths./attributecategories.get.parameters[1].in" = "query"
"paths./attributecategories.get.parameters[1].name" = "selectedFields"
"paths./attributecategories.get.parameters[1].required" = false
"paths./attributecategories.get.parameters[1].type" = "string"
"paths./attributecategories.get.responses.200.description" = "The specified attribute category."
"paths./attributecategories.get.responses.200.schema.$ref" = "#/definitions/AttributeCategory"
"paths./attributecategories.get.summary" = "Retrieve an attribute category by path."
"paths./attributecategories.get.tags.length" = 1
"paths./attributecategories.get.tags[0]" = "AttributeCategory"
"paths./attributecategories/{webId}.delete.consumes.length" = 0
"paths./attributecategories/{webId}.delete.deprecated" = false
"paths./attributecategories/{webId}.delete.operationId" = "AttributeCategory_Delete"
"paths./attributecategories/{webId}.delete.parameters.length" = 1
"paths./attributecategories/{webId}.delete.parameters[0].description" = "The ID of the attribute category to delete."
"paths./attributecategories/{webId}.delete.parameters[0].in" = "path"
"paths./attributecategories/{webId}.delete.parameters[0].name" = "webId"
"paths./attributecategories/{webId}.delete.parameters[0].required" = true
"paths./attributecategories/{webId}.delete.parameters[0].type" = "string"
"paths./attributecategories/{webId}.delete.responses.204.description" = "The attribute category was deleted."
"paths./attributecategories/{webId}.delete.summary" = "Delete an attribute category."
"paths./attributecategories/{webId}.delete.tags.length" = 1
"paths./attributecategories/{webId}.delete.tags[0]" = "AttributeCategory"
"paths./attributecategories/{webId}.get.consumes.length" = 0
"paths./attributecategories/{webId}.get.deprecated" = false
"paths./attributecategories/{webId}.get.operationId" = "AttributeCategory_Get"
"paths./attributecategories/{webId}.get.parameters.length" = 2
"paths./attributecategories/{webId}.get.parameters[0].description" = "The id of the attribute category."
"paths./attributecategories/{webId}.get.parameters[0].in" = "path"
"paths./attributecategories/{webId}.get.parameters[0].name" = "webId"
"paths./attributecategories/{webId}.get.parameters[0].required" = true
"paths./attributecategories/{webId}.get.parameters[0].type" = "string"
"paths./attributecategories/{webId}.get.parameters[1].description" = "List of fields to be returned in the response, separated by semicolons (;). If this parameter is not specified, all available fields will be returned."
"paths./attributecategories/{webId}.get.parameters[1].in" = "query"
"paths./attributecategories/{webId}.get.parameters[1].name" = "selectedFields"
"paths./attributecategories/{webId}.get.parameters[1].required" = false
"paths./attributecategories/{webId}.get.parameters[1].type" = "string"
"paths./attributecategories/{webId}.get.responses.200.description" = "The specified attribute category."
"paths./attributecategories/{webId}.get.responses.200.schema.$ref" = "#/definitions/AttributeCategory"
"paths./attributecategories/{webId}.get.summary" = "Retrieve an attribute category."
"paths./attributecategories/{webId}.get.tags.length" = 1
"paths./attributecategories/{webId}.get.tags[0]" = "AttributeCategory"
"paths./attributecategories/{webId}.patch.consumes.length" = 2
"paths./attributecategories/{webId}.patch.consumes[0]" = "application/json"
"paths./attributecategories/{webId}.patch.consumes[1]" = "text/json"
"paths./attributecategories/{webId}.patch.deprecated" = false
"paths./attributecategories/{webId}.patch.operationId" = "AttributeCategory_Update"
"paths./attributecategories/{webId}.patch.parameters.length" = 2
"paths./attributecategories/{webId}.patch.parameters[0].description" = "The ID of the attribute category to update."
"paths./attributecategories/{webId}.patch.parameters[0].in" = "path"
"paths./attributecategories/{webId}.patch.parameters[0].name" = "webId"
"paths./attributecategories/{webId}.patch.parameters[0].required" = true
"paths./attributecategories/{webId}.patch.parameters[0].type" = "string"
"paths./attributecategories/{webId}.patch.parameters[1].description" = "A partial attribute category containing the desired changes."
"paths./attributecategories/{webId}.patch.parameters[1].in" = "body"
"paths./attributecategories/{webId}.patch.parameters[1].name" = "category"
"paths./attributecategories/{webId}.patch.parameters[1].required" = true
"paths./attributecategories/{webId}.patch.parameters[1].schema.$ref" = "#/definitions/AttributeCategory"
"paths./attributecategories/{webId}.patch.responses.204.description" = "The attribute category was updated."
"paths./attributecategories/{webId}.patch.summary" = "Update an attribute category by replacing items in its definition."
"paths./attributecategories/{webId}.patch.tags.length" = 1
"paths./attributecategories/{webId}.patch.tags[0]" = "AttributeCategory"
"paths./attributecategories/{webId}/security.get.consumes.length" = 0
"paths./attributecategories/{webId}/security.get.deprecated" = false
"paths./attributecategories/{webId}/security.get.operationId" = "AttributeCategory_GetSecurity"
"paths./attributecategories/{webId}/security.get.parameters.length" = 4
"paths./attributecategories/{webId}/security.get.parameters[0].description" = "The ID of the attribute category for the security to be checked."
"paths./attributecategories/{webId}/security.get.parameters[0].in" = "path"
"paths./attributecategories/{webId}/security.get.parameters[0].name" = "webId"
"paths./attributecategories/{webId}/security.get.parameters[0].required" = true
"paths./attributecategories/{webId}/security.get.parameters[0].type" = "string"
"paths./attributecategories/{webId}/security.get.parameters[1].collectionFormat" = "multi"
"paths./attributecategories/{webId}/security.get.parameters[1].description" = "The user identity for the security information to be checked. Multiple security identities may be specified with multiple instances of the parameter. If the parameter is not specified, only the current user's security rights will be returned."
"paths./attributecategories/{webId}/security.get.parameters[1].in" = "query"
"paths./attributecategories/{webId}/security.get.parameters[1].items.type" = "string"
"paths./attributecategories/{webId}/security.get.parameters[1].name" = "userIdentity"
"paths./attributecategories/{webId}/security.get.parameters[1].required" = true
"paths./attributecategories/{webId}/security.get.parameters[1].type" = "array"
"paths./attributecategories/{webId}/security.get.parameters[2].description" = "Indicates if the security cache should be refreshed before getting security information. The default is 'false'."
"paths./attributecategories/{webId}/security.get.parameters[2].in" = "query"
"paths./attributecategories/{webId}/security.get.parameters[2].name" = "forceRefresh"
"paths./attributecategories/{webId}/security.get.parameters[2].required" = false
"paths./attributecategories/{webId}/security.get.parameters[2].type" = "boolean"
"paths./attributecategories/{webId}/security.get.parameters[3].description" = "List of fields to be returned in the response, separated by semicolons (;). If this parameter is not specified, all available fields will be returned."
"paths./attributecategories/{webId}/security.get.parameters[3].in" = "query"
"paths./attributecategories/{webId}/security.get.parameters[3].name" = "selectedFields"
"paths./attributecategories/{webId}/security.get.parameters[3].required" = false
"paths./attributecategories/{webId}/security.get.parameters[3].type" = "string"
"paths./attributecategories/{webId}/security.get.responses.200.description" = "Security rights."
"paths./attributecategories/{webId}/security.get.responses.200.schema.$ref" = "#/definitions/Items[SecurityRights]"
"paths./attributecategories/{webId}/security.get.responses.400.description" = "An invalid or local account is specified as the user identity."
"paths./attributecategories/{webId}/security.get.responses.400.schema.$ref" = "#/definitions/Errors"
"paths./attributecategories/{webId}/security.get.responses.401.description" = "Access denied for the specified user identity."
"paths./attributecategories/{webId}/security.get.responses.401.schema.$ref" = "#/definitions/Errors"
"paths./attributecategories/{webId}/security.get.responses.409.description" = "Unsupported when using Anonymous authentication method."
"paths./attributecategories/{webId}/security.get.responses.409.schema.$ref" = "#/definitions/Errors"
"paths./attributecategories/{webId}/security.get.responses.502.description" = "Failed to retrieve the specified user identity."
"paths./attributecategories/{webId}/security.get.responses.502.schema.$ref" = "#/definitions/Errors"
"paths./attributecategories/{webId}/security.get.summary" = "Get the security information of the specified security item associated with the attribute category for a specified user."
"paths./attributecategories/{webId}/security.get.tags.length" = 1
"paths./attributecategories/{webId}/security.get.tags[0]" = "AttributeCategory"
"paths./attributecategories/{webId}/securityentries.get.consumes.length" = 0
"paths./attributecategories/{webId}/securityentries.get.deprecated" = false
"paths./attributecategories/{webId}/securityentries.get.operationId" = "AttributeCategory_GetSecurityEntries"
"paths./attributecategories/{webId}/securityentries.get.parameters.length" = 3
"paths./attributecategories/{webId}/securityentries.get.parameters[0].description" = "The ID of the attribute category."
"paths./attributecategories/{webId}/securityentries.get.parameters[0].in" = "path"
"paths./attributecategories/{webId}/securityentries.get.parameters[0].name" = "webId"
"paths./attributecategories/{webId}/securityentries.get.parameters[0].required" = true
"paths./attributecategories/{webId}/securityentries.get.parameters[0].type" = "string"
"paths./attributecategories/{webId}/securityentries.get.parameters[1].description" = "The name query string used for filtering security entries. The default is no filter."
"paths./attributecategories/{webId}/securityentries.get.parameters[1].in" = "query"
"paths./attributecategories/{webId}/securityentries.get.parameters[1].name" = "nameFilter"
"paths./attributecategories/{webId}/securityentries.get.parameters[1].required" = false
"paths./attributecategories/{webId}/securityentries.get.parameters[1].type" = "string"
"paths./attributecategories/{webId}/securityentries.get.parameters[2].description" = "List of fields to be returned in the response, separated by semicolons (;). If this parameter is not specified, all available fields will be returned."
"paths./attributecategories/{webId}/securityentries.get.parameters[2].in" = "query"
"paths./attributecategories/{webId}/securityentries.get.parameters[2].name" = "selectedFields"
"paths./attributecategories/{webId}/securityentries.get.parameters[2].required" = false
"paths./attributecategories/{webId}/securityentries.get.parameters[2].type" = "string"
"paths./attributecategories/{webId}/securityentries.get.responses.200.description" = "A list of security entries matching the specified condition."
"paths./attributecategories/{webId}/securityentries.get.responses.200.schema.$ref" = "#/definitions/Items[SecurityEntry]"
"paths./attributecategories/{webId}/securityentries.get.summary" = "Retrieve the security entries associated with the attribute category based on the specified criteria. By default, all security entries for this attribute category are returned."
"paths./attributecategories/{webId}/securityentries.get.tags.length" = 1
"paths./attributecategories/{webId}/securityentries.get.tags[0]" = "AttributeCategory"
"paths./attributecategories/{webId}/securityentries.post.consumes.length" = 2
"paths./attributecategories/{webId}/securityentries.post.consumes[0]" = "application/json"
"paths./attributecategories/{webId}/securityentries.post.consumes[1]" = "text/json"
"paths./attributecategories/{webId}/securityentries.post.deprecated" = false
"paths./attributecategories/{webId}/securityentries.post.operationId" = "AttributeCategory_CreateSecurityEntry"
"paths./attributecategories/{webId}/securityentries.post.parameters.length" = 3
"paths./attributecategories/{webId}/securityentries.post.parameters[0].description" = "The ID of the attribute category where the security entry will be created."
"paths./attributecategories/{webId}/securityentries.post.parameters[0].in" = "path"
"paths./attributecategories/{webId}/securityentries.post.parameters[0].name" = "webId"
"paths./attributecategories/{webId}/securityentries.post.parameters[0].required" = true
"paths./attributecategories/{webId}/securityentries.post.parameters[0].type" = "string"
"paths./attributecategories/{webId}/securityentries.post.parameters[1].description" = "The new security entry definition. The full list of allow and deny rights must be supplied."
"paths./attributecategories/{webId}/securityentries.post.parameters[1].in" = "body"
"paths./attributecategories/{webId}/securityentries.post.parameters[1].name" = "securityEntry"
"paths./attributecategories/{webId}/securityentries.post.parameters[1].required" = true
"paths./attributecategories/{webId}/securityentries.post.parameters[1].schema.$ref" = "#/definitions/SecurityEntry"
"paths./attributecategories/{webId}/securityentries.post.parameters[2].description" = "If false, the new access permissions are only applied to the associated object. If true, the access permissions of children with any parent-child reference types will change when the permissions on the primary parent change."
"paths./attributecategories/{webId}/securityentries.post.parameters[2].in" = "query"
"paths./attributecategories/{webId}/securityentries.post.parameters[2].name" = "applyToChildren"
"paths./attributecategories/{webId}/securityentries.post.parameters[2].required" = false
"paths./attributecategories/{webId}/securityentries.post.parameters[2].type" = "boolean"
"paths./attributecategories/{webId}/securityentries.post.responses.201.description" = "The security entry was created. The response's Location header is a link to the security entry."
"paths./attributecategories/{webId}/securityentries.post.summary" = "Create a security entry owned by the attribute category."
"paths./attributecategories/{webId}/securityentries.post.tags.length" = 1
"paths./attributecategories/{webId}/securityentries.post.tags[0]" = "AttributeCategory"
"paths./attributecategories/{webId}/securityentries/{name}.delete.consumes.length" = 0
"paths./attributecategories/{webId}/securityentries/{name}.delete.deprecated" = false
"paths./attributecategories/{webId}/securityentries/{name}.delete.operationId" = "AttributeCategory_DeleteSecurityEntry"
"paths./attributecategories/{webId}/securityentries/{name}.delete.parameters.length" = 3
"paths./attributecategories/{webId}/securityentries/{name}.delete.parameters[0].description" = "The name of the security entry. For every backslash character (\\) in the security entry name, replace with asterisk (*). As an example, use domain*username instead of domain\\username."
"paths./attributecategories/{webId}/securityentries/{name}.delete.parameters[0].in" = "path"
"paths./attributecategories/{webId}/securityentries/{name}.delete.parameters[0].name" = "name"
"paths./attributecategories/{webId}/securityentries/{name}.delete.parameters[0].required" = true
"paths./attributecategories/{webId}/securityentries/{name}.delete.parameters[0].type" = "string"
"paths./attributecategories/{webId}/securityentries/{name}.delete.parameters[1].description" = "The ID of the attribute category where the security entry will be deleted."
"paths./attributecategories/{webId}/securityentries/{name}.delete.parameters[1].in" = "path"
"paths./attributecategories/{webId}/securityentries/{name}.delete.parameters[1].name" = "webId"
"paths./attributecategories/{webId}/securityentries/{name}.delete.parameters[1].required" = true
"paths./attributecategories/{webId}/securityentries/{name}.delete.parameters[1].type" = "string"
"paths./attributecategories/{webId}/securityentries/{name}.delete.parameters[2].description" = "If false, the new access permissions are only applied to the associated object. If true, the access permissions of children with any parent-child reference types will change when the permissions on the primary parent change."
"paths./attributecategories/{webId}/securityentries/{name}.delete.parameters[2].in" = "query"
"paths./attributecategories/{webId}/securityentries/{name}.delete.parameters[2].name" = "applyToChildren"
"paths./attributecategories/{webId}/securityentries/{name}.delete.parameters[2].required" = false
"paths./attributecategories/{webId}/securityentries/{name}.delete.parameters[2].type" = "boolean"
"paths./attributecategories/{webId}/securityentries/{name}.delete.responses.204.description" = "The security entry was deleted."
"paths./attributecategories/{webId}/securityentries/{name}.delete.summary" = "Delete a security entry owned by the attribute category."
"paths./attributecategories/{webId}/securityentries/{name}.delete.tags.length" = 1
"paths./attributecategories/{webId}/securityentries/{name}.delete.tags[0]" = "AttributeCategory"
"paths./attributecategories/{webId}/securityentries/{name}.get.consumes.length" = 0
"paths./attributecategories/{webId}/securityentries/{name}.get.deprecated" = false
"paths./attributecategories/{webId}/securityentries/{name}.get.operationId" = "AttributeCategory_GetSecurityEntryByName"
"paths./attributecategories/{webId}/securityentries/{name}.get.parameters.length" = 3
"paths./attributecategories/{webId}/securityentries/{name}.get.parameters[0].description" = "The name of the security entry. For every backslash character (\\) in the security entry name, replace with asterisk (*). As an example, use domain*username instead of domain\\username."
"paths./attributecategories/{webId}/securityentries/{name}.get.parameters[0].in" = "path"
"paths./attributecategories/{webId}/securityentries/{name}.get.parameters[0].name" = "name"
"paths./attributecategories/{webId}/securityentries/{name}.get.parameters[0].required" = true
"paths./attributecategories/{webId}/securityentries/{name}.get.parameters[0].type" = "string"
"paths./attributecategories/{webId}/securityentries/{name}.get.parameters[1].description" = "The ID of the attribute category."
"paths./attributecategories/{webId}/securityentries/{name}.get.parameters[1].in" = "path"
"paths./attributecategories/{webId}/securityentries/{name}.get.parameters[1].name" = "webId"
"paths./attributecategories/{webId}/securityentries/{name}.get.parameters[1].required" = true
"paths./attributecategories/{webId}/securityentries/{name}.get.parameters[1].type" = "string"
"paths./attributecategories/{webId}/securityentries/{name}.get.parameters[2].description" = "List of fields to be returned in the response, separated by semicolons (;). If this parameter is not specified, all available fields will be returned."
"paths./attributecategories/{webId}/securityentries/{name}.get.parameters[2].in" = "query"
"paths./attributecategories/{webId}/securityentries/{name}.get.parameters[2].name" = "selectedFields"
"paths./attributecategories/{webId}/securityentries/{name}.get.parameters[2].required" = false
"paths./attributecategories/{webId}/securityentries/{name}.get.parameters[2].type" = "string"
"paths./attributecategories/{webId}/securityentries/{name}.get.responses.200.description" = "The security entry matching the specified condition."
"paths./attributecategories/{webId}/securityentries/{name}.get.responses.200.schema.$ref" = "#/definitions/SecurityEntry"
"paths./attributecategories/{webId}/securityentries/{name}.get.responses.404.description" = "The security entry with the specified name is not found."
"paths./attributecategories/{webId}/securityentries/{name}.get.responses.404.schema.$ref" = "#/definitions/Errors"
"paths./attributecategories/{webId}/securityentries/{name}.get.summary" = "Retrieve the security entry associated with the attribute category with the specified name."
"paths./attributecategories/{webId}/securityentries/{name}.get.tags.length" = 1
"paths./attributecategories/{webId}/securityentries/{name}.get.tags[0]" = "AttributeCategory"
"paths./attributecategories/{webId}/securityentries/{name}.put.consumes.length" = 2
"paths./attributecategories/{webId}/securityentries/{name}.put.consumes[0]" = "application/json"
"paths./attributecategories/{webId}/securityentries/{name}.put.consumes[1]" = "text/json"
"paths./attributecategories/{webId}/securityentries/{name}.put.deprecated" = false
"paths./attributecategories/{webId}/securityentries/{name}.put.operationId" = "AttributeCategory_UpdateSecurityEntry"
"paths./attributecategories/{webId}/securityentries/{name}.put.parameters.length" = 4
"paths./attributecategories/{webId}/securityentries/{name}.put.parameters[0].description" = "The name of the security entry."
"paths./attributecategories/{webId}/securityentries/{name}.put.parameters[0].in" = "path"
"paths./attributecategories/{webId}/securityentries/{name}.put.parameters[0].name" = "name"
"paths./attributecategories/{webId}/securityentries/{name}.put.parameters[0].required" = true
"paths./attributecategories/{webId}/securityentries/{name}.put.parameters[0].type" = "string"
"paths./attributecategories/{webId}/securityentries/{name}.put.parameters[1].description" = "The ID of the attribute category where the security entry will be updated."
"paths./attributecategories/{webId}/securityentries/{name}.put.parameters[1].in" = "path"
"paths./attributecategories/{webId}/securityentries/{name}.put.parameters[1].name" = "webId"
"paths./attributecategories/{webId}/securityentries/{name}.put.parameters[1].required" = true
"paths./attributecategories/{webId}/securityentries/{name}.put.parameters[1].type" = "string"
"paths./attributecategories/{webId}/securityentries/{name}.put.parameters[2].description" = "The new security entry definition. The full list of allow and deny rights must be supplied or they will be removed."
"paths./attributecategories/{webId}/securityentries/{name}.put.parameters[2].in" = "body"
"paths./attributecategories/{webId}/securityentries/{name}.put.parameters[2].name" = "securityEntry"
"paths./attributecategories/{webId}/securityentries/{name}.put.parameters[2].required" = true
"paths./attributecategories/{webId}/securityentries/{name}.put.parameters[2].schema.$ref" = "#/definitions/SecurityEntry"
"paths./attributecategories/{webId}/securityentries/{name}.put.parameters[3].description" = "If false, the new access permissions are only applied to the associated object. If true, the access permissions of children with any parent-child reference types will change when the permissions on the primary parent change."
"paths./attributecategories/{webId}/securityentries/{name}.put.parameters[3].in" = "query"
"paths./attributecategories/{webId}/securityentries/{name}.put.parameters[3].name" = "applyToChildren"
"paths./attributecategories/{webId}/securityentries/{name}.put.parameters[3].required" = false
"paths./attributecategories/{webId}/securityentries/{name}.put.parameters[3].type" = "boolean"
"paths./attributecategories/{webId}/securityentries/{name}.put.responses.204.description" = "The security entry was updated."
"paths./attributecategories/{webId}/securityentries/{name}.put.summary" = "Update a security entry owned by the attribute category."
"paths./attributecategories/{webId}/securityentries/{name}.put.tags.length" = 1
"paths./attributecategories/{webId}/securityentries/{name}.put.tags[0]" = "AttributeCategory"
"paths./attributes.get.consumes.length" = 0
"paths./attributes.get.deprecated" = false
"paths./attributes.get.description" = "This method returns an attribute based on the hierarchical path associated with it, and should be used when a path has been received from a separate part of the PI System for use in the PI Web API. Users should primarily search with the WebID when available."
"paths./attributes.get.operationId" = "Attribute_GetByPath"
"paths./attributes.get.parameters.length" = 2
"paths./attributes.get.parameters[0].description" = "The path to the attribute."
"paths./attributes.get.parameters[0].in" = "query"
"paths./attributes.get.parameters[0].name" = "path"
"paths./attributes.get.parameters[0].required" = true
"paths./attributes.get.parameters[0].type" = "string"
"paths./attributes.get.parameters[1].description" = "List of fields to be returned in the response, separated by semicolons (;). If this parameter is not specified, all available fields will be returned."
"paths./attributes.get.parameters[1].in" = "query"
"paths./attributes.get.parameters[1].name" = "selectedFields"
"paths./attributes.get.parameters[1].required" = false
"paths./attributes.get.parameters[1].type" = "string"
"paths./attributes.get.responses.200.description" = "The requested attribute."
"paths./attributes.get.responses.200.schema.$ref" = "#/definitions/Attribute"
"paths./attributes.get.summary" = "Retrieve an attribute by path."
"paths./attributes.get.tags.length" = 1
"paths./attributes.get.tags[0]" = "Attribute"
"paths./attributes/multiple.get.consumes.length" = 0
"paths./attributes/multiple.get.deprecated" = false
"paths./attributes/multiple.get.operationId" = "Attribute_GetMultiple"
"paths./attributes/multiple.get.parameters.length" = 5
"paths./attributes/multiple.get.parameters[0].description" = "Specifies if the retrieval processes should be run in parallel on the server. This may improve the response time for large amounts of requested attributes. The default is 'false'."
"paths./attributes/multiple.get.parameters[0].in" = "query"
"paths./attributes/multiple.get.parameters[0].name" = "asParallel"
"paths./attributes/multiple.get.parameters[0].required" = false
"paths./attributes/multiple.get.parameters[0].type" = "boolean"
"paths./attributes/multiple.get.parameters[1].description" = "The include mode for the return list. The default is 'All'."
"paths./attributes/multiple.get.parameters[1].in" = "query"
"paths./attributes/multiple.get.parameters[1].name" = "includeMode"
"paths./attributes/multiple.get.parameters[1].required" = false
"paths./attributes/multiple.get.parameters[1].type" = "string"
"paths./attributes/multiple.get.parameters[2].collectionFormat" = "multi"
"paths./attributes/multiple.get.parameters[2].description" = "The path of an attribute. Multiple attributes may be specified with multiple instances of the parameter."
"paths./attributes/multiple.get.parameters[2].in" = "query"
"paths./attributes/multiple.get.parameters[2].items.type" = "string"
"paths./attributes/multiple.get.parameters[2].name" = "path"
"paths./attributes/multiple.get.parameters[2].required" = false
"paths./attributes/multiple.get.parameters[2].type" = "array"
"paths./attributes/multiple.get.parameters[3].description" = "List of fields to be returned in the response, separated by semicolons (;). If this parameter is not specified, all available fields will be returned."
"paths./attributes/multiple.get.parameters[3].in" = "query"
"paths./attributes/multiple.get.parameters[3].name" = "selectedFields"
"paths./attributes/multiple.get.parameters[3].required" = false
"paths./attributes/multiple.get.parameters[3].type" = "string"
"paths./attributes/multiple.get.parameters[4].collectionFormat" = "multi"
"paths./attributes/multiple.get.parameters[4].description" = "The ID of an attribute. Multiple attributes may be specified with multiple instances of the parameter."
"paths./attributes/multiple.get.parameters[4].in" = "query"
"paths./attributes/multiple.get.parameters[4].items.type" = "string"
"paths./attributes/multiple.get.parameters[4].name" = "webId"
"paths./attributes/multiple.get.parameters[4].required" = false
"paths./attributes/multiple.get.parameters[4].type" = "array"
"paths./attributes/multiple.get.responses.200.description" = "The requested attributes"
"paths./attributes/multiple.get.responses.200.schema.$ref" = "#/definitions/Items[Item[Attribute]]"
"paths./attributes/multiple.get.responses.207.description" = "Some or all items contain exceptions."
"paths./attributes/multiple.get.responses.207.schema.$ref" = "#/definitions/Items[Item[Attribute]]"
"paths./attributes/multiple.get.summary" = "Retrieve multiple attributes by web id or path."
"paths./attributes/multiple.get.tags.length" = 1
"paths./attributes/multiple.get.tags[0]" = "Attribute"
"paths./attributes/{webId}.delete.consumes.length" = 0
"paths./attributes/{webId}.delete.deprecated" = false
"paths./attributes/{webId}.delete.operationId" = "Attribute_Delete"
"paths./attributes/{webId}.delete.parameters.length" = 1
"paths./attributes/{webId}.delete.parameters[0].description" = "The ID of the attribute."
"paths./attributes/{webId}.delete.parameters[0].in" = "path"
"paths./attributes/{webId}.delete.parameters[0].name" = "webId"
"paths./attributes/{webId}.delete.parameters[0].required" = true
"paths./attributes/{webId}.delete.parameters[0].type" = "string"
"paths./attributes/{webId}.delete.responses.204.description" = "The attribute was deleted."
"paths./attributes/{webId}.delete.summary" = "Delete an attribute."
"paths./attributes/{webId}.delete.tags.length" = 1
"paths./attributes/{webId}.delete.tags[0]" = "Attribute"
"paths./attributes/{webId}.get.consumes.length" = 0
"paths./attributes/{webId}.get.deprecated" = false
"paths./attributes/{webId}.get.operationId" = "Attribute_Get"
"paths./attributes/{webId}.get.parameters.length" = 2
"paths./attributes/{webId}.get.parameters[0].description" = "The ID of the attribute."
"paths./attributes/{webId}.get.parameters[0].in" = "path"
"paths./attributes/{webId}.get.parameters[0].name" = "webId"
"paths./attributes/{webId}.get.parameters[0].required" = true
"paths./attributes/{webId}.get.parameters[0].type" = "string"
"paths./attributes/{webId}.get.parameters[1].description" = "List of fields to be returned in the response, separated by semicolons (;). If this parameter is not specified, all available fields will be returned."
"paths./attributes/{webId}.get.parameters[1].in" = "query"
"paths./attributes/{webId}.get.parameters[1].name" = "selectedFields"
"paths./attributes/{webId}.get.parameters[1].required" = false
"paths./attributes/{webId}.get.parameters[1].type" = "string"
"paths./attributes/{webId}.get.responses.200.description" = "The requested attribute."
"paths./attributes/{webId}.get.responses.200.schema.$ref" = "#/definitions/Attribute"
"paths./attributes/{webId}.get.summary" = "Retrieve an attribute."
"paths./attributes/{webId}.get.tags.length" = 1
"paths./attributes/{webId}.get.tags[0]" = "Attribute"
"paths./attributes/{webId}.patch.consumes.length" = 2
"paths./attributes/{webId}.patch.consumes[0]" = "application/json"
"paths./attributes/{webId}.patch.consumes[1]" = "text/json"
"paths./attributes/{webId}.patch.deprecated" = false
"paths./attributes/{webId}.patch.description" = "If an attribute is based on a template, the user must make sure to update the attribute appropriately so that it does not conflict with the template's design. Once a template is applied to an attribute, it can not be changed."
"paths./attributes/{webId}.patch.operationId" = "Attribute_Update"
"paths./attributes/{webId}.patch.parameters.length" = 2
"paths./attributes/{webId}.patch.parameters[0].description" = "The ID of the attribute."
"paths./attributes/{webId}.patch.parameters[0].in" = "path"
"paths./attributes/{webId}.patch.parameters[0].name" = "webId"
"paths./attributes/{webId}.patch.parameters[0].required" = true
"paths./attributes/{webId}.patch.parameters[0].type" = "string"
"paths./attributes/{webId}.patch.parameters[1].description" = "A partial attribute containing the desired changes."
"paths./attributes/{webId}.patch.parameters[1].in" = "body"
"paths./attributes/{webId}.patch.parameters[1].name" = "attribute"
"paths./attributes/{webId}.patch.parameters[1].required" = true
"paths./attributes/{webId}.patch.parameters[1].schema.$ref" = "#/definitions/Attribute"
"paths./attributes/{webId}.patch.responses.204.description" = "The attribute was updated."
"paths./attributes/{webId}.patch.summary" = "Update an attribute by replacing items in its definition."
"paths./attributes/{webId}.patch.tags.length" = 1
"paths./attributes/{webId}.patch.tags[0]" = "Attribute"
"paths./attributes/{webId}/attributes.get.consumes.length" = 0
"paths./attributes/{webId}/attributes.get.deprecated" = false
"paths./attributes/{webId}/attributes.get.operationId" = "Attribute_GetAttributes"
"paths./attributes/{webId}/attributes.get.parameters.length" = 13
"paths./attributes/{webId}/attributes.get.parameters[0].description" = "The ID of the parent attribute."
"paths./attributes/{webId}/attributes.get.parameters[0].in" = "path"
"paths./attributes/{webId}/attributes.get.parameters[0].name" = "webId"
"paths./attributes/{webId}/attributes.get.parameters[0].required" = true
"paths./attributes/{webId}/attributes.get.parameters[0].type" = "string"
"paths./attributes/{webId}/attributes.get.parameters[10].description" = "The starting index (zero based) of the items to be returned. The default is 0."
"paths./attributes/{webId}/attributes.get.parameters[10].in" = "query"
"paths./attributes/{webId}/attributes.get.parameters[10].name" = "startIndex"
"paths./attributes/{webId}/attributes.get.parameters[10].required" = false
"paths./attributes/{webId}/attributes.get.parameters[10].type" = "integer"
"paths./attributes/{webId}/attributes.get.parameters[11].description" = "Specify that returned attributes must be members of this template. The default is no template filter."
"paths./attributes/{webId}/attributes.get.parameters[11].in" = "query"
"paths./attributes/{webId}/attributes.get.parameters[11].name" = "templateName"
"paths./attributes/{webId}/attributes.get.parameters[11].required" = false
"paths./attributes/{webId}/attributes.get.parameters[11].type" = "string"
"paths./attributes/{webId}/attributes.get.parameters[12].description" = "Specify that returned attributes' value type must be the given value type. The default is no value type filter."
"paths./attributes/{webId}/attributes.get.parameters[12].in" = "query"
"paths./attributes/{webId}/attributes.get.parameters[12].name" = "valueType"
"paths./attributes/{webId}/attributes.get.parameters[12].required" = false
"paths./attributes/{webId}/attributes.get.parameters[12].type" = "string"
"paths./attributes/{webId}/attributes.get.parameters[1].description" = "Specify that returned attributes must have this category. The default is no category filter."
"paths./attributes/{webId}/attributes.get.parameters[1].in" = "query"
"paths./attributes/{webId}/attributes.get.parameters[1].name" = "categoryName"
"paths./attributes/{webId}/attributes.get.parameters[1].required" = false
"paths./attributes/{webId}/attributes.get.parameters[1].type" = "string"
"paths./attributes/{webId}/attributes.get.parameters[2].description" = "The maximum number of objects to be returned per call (page size). The default is 1000."
"paths./attributes/{webId}/attributes.get.parameters[2].in" = "query"
"paths./attributes/{webId}/attributes.get.parameters[2].name" = "maxCount"
"paths./attributes/{webId}/attributes.get.parameters[2].required" = false
"paths./attributes/{webId}/attributes.get.parameters[2].type" = "integer"
"paths./attributes/{webId}/attributes.get.parameters[3].description" = "The name query string used for finding attributes. The default is no filter."
"paths./attributes/{webId}/attributes.get.parameters[3].in" = "query"
"paths./attributes/{webId}/attributes.get.parameters[3].name" = "nameFilter"
"paths./attributes/{webId}/attributes.get.parameters[3].required" = false
"paths./attributes/{webId}/attributes.get.parameters[3].type" = "string"
"paths./attributes/{webId}/attributes.get.parameters[4].description" = "Specifies if the search should include attributes nested further than the immediate attributes of the searchRoot. The default is 'false'."
"paths./attributes/{webId}/attributes.get.parameters[4].in" = "query"
"paths./attributes/{webId}/attributes.get.parameters[4].name" = "searchFullHierarchy"
"paths./attributes/{webId}/attributes.get.parameters[4].required" = false
"paths./attributes/{webId}/attributes.get.parameters[4].type" = "boolean"
"paths./attributes/{webId}/attributes.get.parameters[5].description" = "List of fields to be returned in the response, separated by semicolons (;). If this parameter is not specified, all available fields will be returned."
"paths./attributes/{webId}/attributes.get.parameters[5].in" = "query"
"paths./attributes/{webId}/attributes.get.parameters[5].name" = "selectedFields"
"paths./attributes/{webId}/attributes.get.parameters[5].required" = false
"paths./attributes/{webId}/attributes.get.parameters[5].type" = "string"
"paths./attributes/{webId}/attributes.get.parameters[6].description" = "Specified if the search should include attributes with the Excluded property set. The default is 'false'."
"paths./attributes/{webId}/attributes.get.parameters[6].in" = "query"
"paths./attributes/{webId}/attributes.get.parameters[6].name" = "showExcluded"
"paths./attributes/{webId}/attributes.get.parameters[6].required" = false
"paths./attributes/{webId}/attributes.get.parameters[6].type" = "boolean"
"paths./attributes/{webId}/attributes.get.parameters[7].description" = "Specified if the search should include attributes with the Hidden property set. The default is 'false'."
"paths./attributes/{webId}/attributes.get.parameters[7].in" = "query"
"paths./attributes/{webId}/attributes.get.parameters[7].name" = "showHidden"
"paths./attributes/{webId}/attributes.get.parameters[7].required" = false
"paths./attributes/{webId}/attributes.get.parameters[7].type" = "boolean"
"paths./attributes/{webId}/attributes.get.parameters[8].description" = "The field or property of the object used to sort the returned collection. The default is 'Name'."
"paths./attributes/{webId}/attributes.get.parameters[8].in" = "query"
"paths./attributes/{webId}/attributes.get.parameters[8].name" = "sortField"
"paths./attributes/{webId}/attributes.get.parameters[8].required" = false
"paths./attributes/{webId}/attributes.get.parameters[8].type" = "string"
"paths./attributes/{webId}/attributes.get.parameters[9].description" = "The order that the returned collection is sorted. The default is 'Ascending'."
"paths./attributes/{webId}/attributes.get.parameters[9].in" = "query"
"paths./attributes/{webId}/attributes.get.parameters[9].name" = "sortOrder"
"paths./attributes/{webId}/attributes.get.parameters[9].required" = false
"paths./attributes/{webId}/attributes.get.parameters[9].type" = "string"
"paths./attributes/{webId}/attributes.get.responses.200.description" = "A list of child attributes."
"paths./attributes/{webId}/attributes.get.responses.200.schema.$ref" = "#/definitions/Items[Attribute]"
"paths./attributes/{webId}/attributes.get.summary" = "Get the child attributes of the specified attribute."
"paths./attributes/{webId}/attributes.get.tags.length" = 1
"paths./attributes/{webId}/attributes.get.tags[0]" = "Attribute"
"paths./attributes/{webId}/attributes.post.consumes.length" = 2
"paths./attributes/{webId}/attributes.post.consumes[0]" = "application/json"
"paths./attributes/{webId}/attributes.post.consumes[1]" = "text/json"
"paths./attributes/{webId}/attributes.post.deprecated" = false
"paths./attributes/{webId}/attributes.post.operationId" = "Attribute_CreateAttribute"
"paths./attributes/{webId}/attributes.post.parameters.length" = 2
"paths./attributes/{webId}/attributes.post.parameters[0].description" = "The ID of the parent attribute on which to create the attribute."
"paths./attributes/{webId}/attributes.post.parameters[0].in" = "path"
"paths./attributes/{webId}/attributes.post.parameters[0].name" = "webId"
"paths./attributes/{webId}/attributes.post.parameters[0].required" = true
"paths./attributes/{webId}/attributes.post.parameters[0].type" = "string"
"paths./attributes/{webId}/attributes.post.parameters[1].description" = "The definition of the new attribute."
"paths./attributes/{webId}/attributes.post.parameters[1].in" = "body"
"paths./attributes/{webId}/attributes.post.parameters[1].name" = "attribute"
"paths./attributes/{webId}/attributes.post.parameters[1].required" = true
"paths./attributes/{webId}/attributes.post.parameters[1].schema.$ref" = "#/definitions/Attribute"
"paths./attributes/{webId}/attributes.post.responses.201.description" = "The attribute was created. The response's Location header is a link to the created attribute."
"paths./attributes/{webId}/attributes.post.summary" = "Create a new attribute as a child of the specified attribute."
"paths./attributes/{webId}/attributes.post.tags.length" = 1
"paths./attributes/{webId}/attributes.post.tags[0]" = "Attribute"
"paths./attributes/{webId}/categories.get.consumes.length" = 0
"paths./attributes/{webId}/categories.get.deprecated" = false
"paths./attributes/{webId}/categories.get.operationId" = "Attribute_GetCategories"
"paths./attributes/{webId}/categories.get.parameters.length" = 2
"paths./attributes/{webId}/categories.get.parameters[0].description" = "The ID of the attribute."
"paths./attributes/{webId}/categories.get.parameters[0].in" = "path"
"paths./attributes/{webId}/categories.get.parameters[0].name" = "webId"
"paths./attributes/{webId}/categories.get.parameters[0].required" = true
"paths./attributes/{webId}/categories.get.parameters[0].type" = "string"
"paths./attributes/{webId}/categories.get.parameters[1].description" = "List of fields to be returned in the response, separated by semicolons (;). If this parameter is not specified, all available fields will be returned."
"paths./attributes/{webId}/categories.get.parameters[1].in" = "query"
"paths./attributes/{webId}/categories.get.parameters[1].name" = "selectedFields"
"paths./attributes/{webId}/categories.get.parameters[1].required" = false
"paths./attributes/{webId}/categories.get.parameters[1].type" = "string"
"paths./attributes/{webId}/categories.get.responses.200.description" = "A list of categories."
"paths./attributes/{webId}/categories.get.responses.200.schema.$ref" = "#/definitions/Items[AttributeCategory]"
"paths./attributes/{webId}/categories.get.summary" = "Get an attribute's categories."
"paths./attributes/{webId}/categories.get.tags.length" = 1
"paths./attributes/{webId}/categories.get.tags[0]" = "Attribute"
"paths./attributes/{webId}/config.post.consumes.length" = 2
"paths./attributes/{webId}/config.post.consumes[0]" = "application/json"
"paths./attributes/{webId}/config.post.consumes[1]" = "text/json"
"paths./attributes/{webId}/config.post.deprecated" = false
"paths./attributes/{webId}/config.post.operationId" = "Attribute_CreateConfig"
"paths./attributes/{webId}/config.post.parameters.length" = 1
"paths./attributes/{webId}/config.post.parameters[0].description" = "The ID of the attribute."
"paths./attributes/{webId}/config.post.parameters[0].in" = "path"
"paths./attributes/{webId}/config.post.parameters[0].name" = "webId"
"paths./attributes/{webId}/config.post.parameters[0].required" = true
"paths./attributes/{webId}/config.post.parameters[0].type" = "string"
"paths./attributes/{webId}/config.post.responses.201.description" = "The attribute's DataReference configuration was created or updated."
"paths./attributes/{webId}/config.post.summary" = "Create or update an attribute's DataReference configuration (Create/Update PI point for PI Point DataReference)."
"paths./attributes/{webId}/config.post.tags.length" = 1
"paths./attributes/{webId}/config.post.tags[0]" = "Attribute"
"paths./attributes/{webId}/value.get.consumes.length" = 0
"paths./attributes/{webId}/value.get.deprecated" = false
"paths./attributes/{webId}/value.get.operationId" = "Attribute_GetValue"
"paths./attributes/{webId}/value.get.parameters.length" = 2
"paths./attributes/{webId}/value.get.parameters[0].description" = "The ID of the attribute."
"paths./attributes/{webId}/value.get.parameters[0].in" = "path"
"paths./attributes/{webId}/value.get.parameters[0].name" = "webId"
"paths./attributes/{webId}/value.get.parameters[0].required" = true
"paths./attributes/{webId}/value.get.parameters[0].type" = "string"
"paths./attributes/{webId}/value.get.parameters[1].description" = "List of fields to be returned in the response, separated by semicolons (;). If this parameter is not specified, all available fields will be returned."
"paths./attributes/{webId}/value.get.parameters[1].in" = "query"
"paths./attributes/{webId}/value.get.parameters[1].name" = "selectedFields"
"paths./attributes/{webId}/value.get.parameters[1].required" = false
"paths./attributes/{webId}/value.get.parameters[1].type" = "string"
"paths./attributes/{webId}/value.get.responses.200.description" = "The attribute's value."
"paths./attributes/{webId}/value.get.responses.200.schema.$ref" = "#/definitions/TimedValue"
"paths./attributes/{webId}/value.get.summary" = "Get the attribute's value. This call is intended for use with attributes that have no data reference only. For attributes with a data reference, consult the documentation for Streams."
"paths./attributes/{webId}/value.get.tags.length" = 1
"paths./attributes/{webId}/value.get.tags[0]" = "Attribute"
"paths./attributes/{webId}/value.put.consumes.length" = 2
"paths./attributes/{webId}/value.put.consumes[0]" = "application/json"
"paths./attributes/{webId}/value.put.consumes[1]" = "text/json"
"paths./attributes/{webId}/value.put.deprecated" = false
"paths./attributes/{webId}/value.put.description" = "Users must be aware of the value type that the attribute takes before changing the value. If a value entered by the user does not match the value type expressed in the attribute, it will not work or it will return an error. Users should also be careful of what the value type means, for instance, if a value type accepts strings and the user enters a number, the attribute will interpret it as a string of characters and not as the integer value that the user may have wanted."
"paths./attributes/{webId}/value.put.operationId" = "Attribute_SetValue"
"paths./attributes/{webId}/value.put.parameters.length" = 2
"paths./attributes/{webId}/value.put.parameters[0].description" = "The ID of the attribute."
"paths./attributes/{webId}/value.put.parameters[0].in" = "path"
"paths./attributes/{webId}/value.put.parameters[0].name" = "webId"
"paths./attributes/{webId}/value.put.parameters[0].required" = true
"paths./attributes/{webId}/value.put.parameters[0].type" = "string"
"paths./attributes/{webId}/value.put.parameters[1].description" = "The value to write."
"paths./attributes/{webId}/value.put.parameters[1].in" = "body"
"paths./attributes/{webId}/value.put.parameters[1].name" = "value"
"paths./attributes/{webId}/value.put.parameters[1].required" = true
"paths./attributes/{webId}/value.put.parameters[1].schema.$ref" = "#/definitions/TimedValue"
"paths./attributes/{webId}/value.put.responses.204.description" = "The value was set successfully."
"paths./attributes/{webId}/value.put.summary" = "Set the value of a configuration item attribute. For attributes with a data reference or non-configuration item attributes, consult the documentation for streams."
"paths./attributes/{webId}/value.put.tags.length" = 1
"paths./attributes/{webId}/value.put.tags[0]" = "Attribute"
"paths./attributetemplates.get.consumes.length" = 0
"paths./attributetemplates.get.deprecated" = false
"paths./attributetemplates.get.description" = "This method returns an attribute template based on the hierarchical path associated with it, and should be used when a path has been received from a separate part of the PI System for use in the PI Web API. Users should primarily search with the WebID when available."
"paths./attributetemplates.get.operationId" = "AttributeTemplate_GetByPath"
"paths./attributetemplates.get.parameters.length" = 2
"paths./attributetemplates.get.parameters[0].description" = "The path to the attribute template."
"paths./attributetemplates.get.parameters[0].in" = "query"
"paths./attributetemplates.get.parameters[0].name" = "path"
"paths./attributetemplates.get.parameters[0].required" = true
"paths./attributetemplates.get.parameters[0].type" = "string"
"paths./attributetemplates.get.parameters[1].description" = "List of fields to be returned in the response, separated by semicolons (;). If this parameter is not specified, all available fields will be returned."
"paths./attributetemplates.get.parameters[1].in" = "query"
"paths./attributetemplates.get.parameters[1].name" = "selectedFields"
"paths./attributetemplates.get.parameters[1].required" = false
"paths./attributetemplates.get.parameters[1].type" = "string"
"paths./attributetemplates.get.responses.200.description" = "The specified attribute template."
"paths./attributetemplates.get.responses.200.schema.$ref" = "#/definitions/AttributeTemplate"
"paths./attributetemplates.get.summary" = "Retrieve an attribute template by path."
"paths./attributetemplates.get.tags.length" = 1
"paths./attributetemplates.get.tags[0]" = "AttributeTemplate"
"paths./attributetemplates/{webId}.delete.consumes.length" = 0
"paths./attributetemplates/{webId}.delete.deprecated" = false
"paths./attributetemplates/{webId}.delete.description" = "Deleting an attribute template will delete the attributes that were created based on the template"
"paths./attributetemplates/{webId}.delete.operationId" = "AttributeTemplate_Delete"
"paths./attributetemplates/{webId}.delete.parameters.length" = 1
"paths./attributetemplates/{webId}.delete.parameters[0].description" = "The ID of the attribute template."
"paths./attributetemplates/{webId}.delete.parameters[0].in" = "path"
"paths./attributetemplates/{webId}.delete.parameters[0].name" = "webId"
"paths./attributetemplates/{webId}.delete.parameters[0].required" = true
"paths./attributetemplates/{webId}.delete.parameters[0].type" = "string"
"paths./attributetemplates/{webId}.delete.responses.204.description" = "The attribute template was deleted."
"paths./attributetemplates/{webId}.delete.summary" = "Delete an attribute template."
"paths./attributetemplates/{webId}.delete.tags.length" = 1
"paths./attributetemplates/{webId}.delete.tags[0]" = "AttributeTemplate"
"paths./attributetemplates/{webId}.get.consumes.length" = 0
"paths./attributetemplates/{webId}.get.deprecated" = false
"paths./attributetemplates/{webId}.get.operationId" = "AttributeTemplate_Get"
"paths./attributetemplates/{webId}.get.parameters.length" = 2
"paths./attributetemplates/{webId}.get.parameters[0].description" = "The ID of the attribute template."
"paths./attributetemplates/{webId}.get.parameters[0].in" = "path"
"paths./attributetemplates/{webId}.get.parameters[0].name" = "webId"
"paths./attributetemplates/{webId}.get.parameters[0].required" = true
"paths./attributetemplates/{webId}.get.parameters[0].type" = "string"
"paths./attributetemplates/{webId}.get.parameters[1].description" = "List of fields to be returned in the response, separated by semicolons (;). If this parameter is not specified, all available fields will be returned."
"paths./attributetemplates/{webId}.get.parameters[1].in" = "query"
"paths./attributetemplates/{webId}.get.parameters[1].name" = "selectedFields"
"paths./attributetemplates/{webId}.get.parameters[1].required" = false
"paths./attributetemplates/{webId}.get.parameters[1].type" = "string"
"paths./attributetemplates/{webId}.get.responses.200.description" = "The specified attribute template."
"paths./attributetemplates/{webId}.get.responses.200.schema.$ref" = "#/definitions/AttributeTemplate"
"paths./attributetemplates/{webId}.get.summary" = "Retrieve an attribute template."
"paths./attributetemplates/{webId}.get.tags.length" = 1
"paths./attributetemplates/{webId}.get.tags[0]" = "AttributeTemplate"
"paths./attributetemplates/{webId}.patch.consumes.length" = 2
"paths./attributetemplates/{webId}.patch.consumes[0]" = "application/json"
"paths./attributetemplates/{webId}.patch.consumes[1]" = "text/json"
"paths./attributetemplates/{webId}.patch.deprecated" = false
"paths./attributetemplates/{webId}.patch.description" = "Updating an attribute template will propagate changes to the attributes that were created based on the template"
"paths./attributetemplates/{webId}.patch.operationId" = "AttributeTemplate_Update"
"paths./attributetemplates/{webId}.patch.parameters.length" = 2
"paths./attributetemplates/{webId}.patch.parameters[0].description" = "The ID of the attribute template."
"paths./attributetemplates/{webId}.patch.parameters[0].in" = "path"
"paths./attributetemplates/{webId}.patch.parameters[0].name" = "webId"
"paths./attributetemplates/{webId}.patch.parameters[0].required" = true
"paths./attributetemplates/{webId}.patch.parameters[0].type" = "string"
"paths./attributetemplates/{webId}.patch.parameters[1].description" = "A partial attribute template containing the desired changes."
"paths./attributetemplates/{webId}.patch.parameters[1].in" = "body"
"paths./attributetemplates/{webId}.patch.parameters[1].name" = "template"
"paths./attributetemplates/{webId}.patch.parameters[1].required" = true
"paths./attributetemplates/{webId}.patch.parameters[1].schema.$ref" = "#/definitions/AttributeTemplate"
"paths./attributetemplates/{webId}.patch.responses.204.description" = "The attribute template was updated."
"paths./attributetemplates/{webId}.patch.summary" = "Update an existing attribute template by replacing items in its definition."
"paths./attributetemplates/{webId}.patch.tags.length" = 1
"paths./attributetemplates/{webId}.patch.tags[0]" = "AttributeTemplate"
"paths./attributetemplates/{webId}/attributetemplates.get.consumes.length" = 0
"paths./attributetemplates/{webId}/attributetemplates.get.deprecated" = false
"paths./attributetemplates/{webId}/attributetemplates.get.operationId" = "AttributeTemplate_GetAttributeTemplates"
"paths./attributetemplates/{webId}/attributetemplates.get.parameters.length" = 2
"paths./attributetemplates/{webId}/attributetemplates.get.parameters[0].description" = "The ID of the attribute template."
"paths./attributetemplates/{webId}/attributetemplates.get.parameters[0].in" = "path"
"paths./attributetemplates/{webId}/attributetemplates.get.parameters[0].name" = "webId"
"paths./attributetemplates/{webId}/attributetemplates.get.parameters[0].required" = true
"paths./attributetemplates/{webId}/attributetemplates.get.parameters[0].type" = "string"
"paths./attributetemplates/{webId}/attributetemplates.get.parameters[1].description" = "List of fields to be returned in the response, separated by semicolons (;). If this parameter is not specified, all available fields will be returned."
"paths./attributetemplates/{webId}/attributetemplates.get.parameters[1].in" = "query"
"paths./attributetemplates/{webId}/attributetemplates.get.parameters[1].name" = "selectedFields"
"paths./attributetemplates/{webId}/attributetemplates.get.parameters[1].required" = false
"paths./attributetemplates/{webId}/attributetemplates.get.parameters[1].type" = "string"
"paths./attributetemplates/{webId}/attributetemplates.get.responses.200.description" = "A list of child attribute templates."
"paths./attributetemplates/{webId}/attributetemplates.get.responses.200.schema.$ref" = "#/definitions/Items[AttributeTemplate]"
"paths./attributetemplates/{webId}/attributetemplates.get.summary" = "Retrieve an attribute template's child attribute templates."
"paths./attributetemplates/{webId}/attributetemplates.get.tags.length" = 1
"paths./attributetemplates/{webId}/attributetemplates.get.tags[0]" = "AttributeTemplate"
"paths./attributetemplates/{webId}/attributetemplates.post.consumes.length" = 2
"paths./attributetemplates/{webId}/attributetemplates.post.consumes[0]" = "application/json"
"paths./attributetemplates/{webId}/attributetemplates.post.consumes[1]" = "text/json"
"paths./attributetemplates/{webId}/attributetemplates.post.deprecated" = false
"paths./attributetemplates/{webId}/attributetemplates.post.operationId" = "AttributeTemplate_CreateAttributeTemplate"
"paths./attributetemplates/{webId}/attributetemplates.post.parameters.length" = 2
"paths./attributetemplates/{webId}/attributetemplates.post.parameters[0].description" = "The ID of the parent attribute template on which to create the attribute template."
"paths./attributetemplates/{webId}/attributetemplates.post.parameters[0].in" = "path"
"paths./attributetemplates/{webId}/attributetemplates.post.parameters[0].name" = "webId"
"paths./attributetemplates/{webId}/attributetemplates.post.parameters[0].required" = true
"paths./attributetemplates/{webId}/attributetemplates.post.parameters[0].type" = "string"
"paths./attributetemplates/{webId}/attributetemplates.post.parameters[1].description" = "The attribute template definition."
"paths./attributetemplates/{webId}/attributetemplates.post.parameters[1].in" = "body"
"paths./attributetemplates/{webId}/attributetemplates.post.parameters[1].name" = "template"
"paths./attributetemplates/{webId}/attributetemplates.post.parameters[1].required" = true
"paths./attributetemplates/{webId}/attributetemplates.post.parameters[1].schema.$ref" = "#/definitions/AttributeTemplate"
"paths./attributetemplates/{webId}/attributetemplates.post.responses.201.description" = "The attribute template was created. The response's Location header is a link to the created resource."
"paths./attributetemplates/{webId}/attributetemplates.post.summary" = "Create an attribute template as a child of another attribute template."
"paths./attributetemplates/{webId}/attributetemplates.post.tags.length" = 1
"paths./attributetemplates/{webId}/attributetemplates.post.tags[0]" = "AttributeTemplate"
"paths./attributetemplates/{webId}/categories.get.consumes.length" = 0
"paths./attributetemplates/{webId}/categories.get.deprecated" = false
"paths./attributetemplates/{webId}/categories.get.operationId" = "AttributeTemplate_GetCategories"
"paths./attributetemplates/{webId}/categories.get.parameters.length" = 2
"paths./attributetemplates/{webId}/categories.get.parameters[0].description" = "The ID of the attribute template."
"paths./attributetemplates/{webId}/categories.get.parameters[0].in" = "path"
"paths./attributetemplates/{webId}/categories.get.parameters[0].name" = "webId"
"paths./attributetemplates/{webId}/categories.get.parameters[0].required" = true
"paths./attributetemplates/{webId}/categories.get.parameters[0].type" = "string"
"paths./attributetemplates/{webId}/categories.get.parameters[1].description" = "List of fields to be returned in the response, separated by semicolons (;). If this parameter is not specified, all available fields will be returned."
"paths./attributetemplates/{webId}/categories.get.parameters[1].in" = "query"
"paths./attributetemplates/{webId}/categories.get.parameters[1].name" = "selectedFields"
"paths./attributetemplates/{webId}/categories.get.parameters[1].required" = false
"paths./attributetemplates/{webId}/categories.get.parameters[1].type" = "string"
"paths./attributetemplates/{webId}/categories.get.responses.200.description" = "A list of categories."
"paths./attributetemplates/{webId}/categories.get.responses.200.schema.$ref" = "#/definitions/Items[AttributeCategory]"
"paths./attributetemplates/{webId}/categories.get.summary" = "Get an attribute template's categories."
"paths./attributetemplates/{webId}/categories.get.tags.length" = 1
"paths./attributetemplates/{webId}/categories.get.tags[0]" = "AttributeTemplate"
"paths./attributetraits.get.consumes.length" = 0
"paths./attributetraits.get.deprecated" = false
"paths./attributetraits.get.operationId" = "AttributeTrait_GetByCategory"
"paths./attributetraits.get.parameters.length" = 2
"paths./attributetraits.get.parameters[0].collectionFormat" = "multi"
"paths./attributetraits.get.parameters[0].description" = "The category of the attribute traits. Multiple categories may be specified with multiple instances of the parameter. If the parameter is not specified, or if its value is \"all\", then all attribute traits of all categories will be returned."
"paths./attributetraits.get.parameters[0].in" = "query"
"paths./attributetraits.get.parameters[0].items.type" = "string"
"paths./attributetraits.get.parameters[0].name" = "category"
"paths./attributetraits.get.parameters[0].required" = true
"paths./attributetraits.get.parameters[0].type" = "array"
"paths./attributetraits.get.parameters[1].description" = "List of fields to be returned in the response, separated by semicolons (;). If this parameter is not specified, all available fields will be returned."
"paths./attributetraits.get.parameters[1].in" = "query"
"paths./attributetraits.get.parameters[1].name" = "selectedFields"
"paths./attributetraits.get.parameters[1].required" = false
"paths./attributetraits.get.parameters[1].type" = "string"
"paths./attributetraits.get.responses.200.description" = "A list of attribute traits."
"paths./attributetraits.get.responses.200.schema.$ref" = "#/definitions/Items[AttributeTrait]"
"paths./attributetraits.get.summary" = "Retrieve all attribute traits of the specified category/categories."
"paths./attributetraits.get.tags.length" = 1
"paths./attributetraits.get.tags[0]" = "AttributeTrait"
"paths./attributetraits/{name}.get.consumes.length" = 0
"paths./attributetraits/{name}.get.deprecated" = false
"paths./attributetraits/{name}.get.operationId" = "AttributeTrait_Get"
"paths./attributetraits/{name}.get.parameters.length" = 2
"paths./attributetraits/{name}.get.parameters[0].description" = "The name or abbreviation of the attribute trait."
"paths./attributetraits/{name}.get.parameters[0].in" = "path"
"paths./attributetraits/{name}.get.parameters[0].name" = "name"
"paths./attributetraits/{name}.get.parameters[0].required" = true
"paths./attributetraits/{name}.get.parameters[0].type" = "string"
"paths./attributetraits/{name}.get.parameters[1].description" = "List of fields to be returned in the response, separated by semicolons (;). If this parameter is not specified, all available fields will be returned."
"paths./attributetraits/{name}.get.parameters[1].in" = "query"
"paths./attributetraits/{name}.get.parameters[1].name" = "selectedFields"
"paths./attributetraits/{name}.get.parameters[1].required" = false
"paths./attributetraits/{name}.get.parameters[1].type" = "string"
"paths./attributetraits/{name}.get.responses.200.description" = "The requested attribute trait."
"paths./attributetraits/{name}.get.responses.200.schema.$ref" = "#/definitions/AttributeTrait"
"paths./attributetraits/{name}.get.summary" = "Retrieve an attribute trait."
"paths./attributetraits/{name}.get.tags.length" = 1
"paths./attributetraits/{name}.get.tags[0]" = "AttributeTrait"
"paths./batch.post.consumes.length" = 2
"paths./batch.post.consumes[0]" = "application/json"
"paths./batch.post.consumes[1]" = "text/json"
"paths./batch.post.deprecated" = false
"paths./batch.post.operationId" = "Batch_Execute"
"paths./batch.post.parameters.length" = 1
"paths./batch.post.parameters[0].description" = "The batch of requests."
"paths./batch.post.parameters[0].in" = "body"
"paths./batch.post.parameters[0].name" = "batch"
"paths./batch.post.parameters[0].required" = true
"paths./batch.post.parameters[0].schema.additionalProperties.$ref" = "#/definitions/Request"
"paths./batch.post.parameters[0].schema.type" = "object"
"paths./batch.post.responses.207.description" = "A dictionary of response information corresponding to the batched requests."
"paths./batch.post.responses.207.schema.additionalProperties.$ref" = "#/definitions/Response"
"paths./batch.post.responses.207.schema.type" = "object"
"paths./batch.post.summary" = "Execute a batch of requests against the service. As shown in the Sample Request, the input is a dictionary with IDs as keys and request objects as values. Each request object specifies the HTTP method and the resource and, optionally, the content and a list of parent IDs. The list of parent IDs specifies which other requests must complete before the given request will be executed. The example first creates an element, then gets the element by the response's Location header, then creates an attribute for the element. Note that the resource can be an absolute URL or a JsonPath that references the response to the parent request. The batch's response is a dictionary uses keys corresponding those provided in the request, with response objects containing a status code, response headers, and the response body. A request can alternatively specify a request template in place of a resource. In this case, a single JsonPath may select multiple tokens, and a separate subrequest will be made from the template for each token. The responses of these subrequests will returned as the content of a single outer response."
"paths./batch.post.tags.length" = 1
"paths./batch.post.tags[0]" = "Batch"
"paths./calculation/intervals.get.consumes.length" = 0
"paths./calculation/intervals.get.deprecated" = false
"paths./calculation/intervals.get.operationId" = "Calculation_GetAtIntervals"
"paths./calculation/intervals.get.parameters.length" = 6
"paths./calculation/intervals.get.parameters[0].description" = "An optional end time. The default is '*' for element attributes and points. For event frame attributes, the default is the event frame's end time, or '*' if that is not set. Note that if endTime is earlier than startTime, the resulting values will be in time-descending order."
"paths./calculation/intervals.get.parameters[0].in" = "query"
"paths./calculation/intervals.get.parameters[0].name" = "endTime"
"paths./calculation/intervals.get.parameters[0].required" = false
"paths./calculation/intervals.get.parameters[0].type" = "string"
"paths./calculation/intervals.get.parameters[1].description" = "A string containing the expression to be evaluated. The syntax for the expression generally follows the Performance Equation syntax as described in the PI Server documentation, with the exception that expressions which target AF objects use attribute names in place of tag names in the equation."
"paths./calculation/intervals.get.parameters[1].in" = "query"
"paths./calculation/intervals.get.parameters[1].name" = "expression"
"paths./calculation/intervals.get.parameters[1].required" = false
"paths./calculation/intervals.get.parameters[1].type" = "string"
"paths./calculation/intervals.get.parameters[2].description" = "A time span specifies how often the filter expression is evaluated when computing the summary for an interval."
"paths./calculation/intervals.get.parameters[2].in" = "query"
"paths./calculation/intervals.get.parameters[2].name" = "sampleInterval"
"paths./calculation/intervals.get.parameters[2].required" = false
"paths./calculation/intervals.get.parameters[2].type" = "string"
"paths./calculation/intervals.get.parameters[3].description" = "List of fields to be returned in the response, separated by semicolons (;). If this parameter is not specified, all available fields will be returned."
"paths./calculation/intervals.get.parameters[3].in" = "query"
"paths./calculation/intervals.get.parameters[3].name" = "selectedFields"
"paths./calculation/intervals.get.parameters[3].required" = false
"paths./calculation/intervals.get.parameters[3].type" = "string"
"paths./calculation/intervals.get.parameters[4].description" = "An optional start time. The default is '*-1d' for element attributes and points. For event frame attributes, the default is the event frame's start time, or '*-1d' if that is not set."
"paths./calculation/intervals.get.parameters[4].in" = "query"
"paths./calculation/intervals.get.parameters[4].name" = "startTime"
"paths./calculation/intervals.get.parameters[4].required" = false
"paths./calculation/intervals.get.parameters[4].type" = "string"
"paths./calculation/intervals.get.parameters[5].description" = "The ID of the target object of the expression. A target object can be a Data Server, a database, an element, an event frame or an attribute. References to attributes or points are based on the target. If this parameter is not provided, the target object is set to null."
"paths./calculation/intervals.get.parameters[5].in" = "query"
"paths./calculation/intervals.get.parameters[5].name" = "webId"
"paths./calculation/intervals.get.parameters[5].required" = false
"paths./calculation/intervals.get.parameters[5].type" = "string"
"paths./calculation/intervals.get.responses.200.description" = "The calculated values."
"paths./calculation/intervals.get.responses.200.schema.$ref" = "#/definitions/TimedValues"
"paths./calculation/intervals.get.responses.409.description" = "The targeted object does not support the calculation."
"paths./calculation/intervals.get.responses.409.schema.$ref" = "#/definitions/Errors"
"paths./calculation/intervals.get.summary" = "Returns results of evaluating the expression over the time range from the start time to the end time at a defined interval."
"paths./calculation/intervals.get.tags.length" = 1
"paths./calculation/intervals.get.tags[0]" = "Calculation"
"paths./calculation/recorded.get.consumes.length" = 0
"paths./calculation/recorded.get.deprecated" = false
"paths./calculation/recorded.get.operationId" = "Calculation_GetAtRecorded"
"paths./calculation/recorded.get.parameters.length" = 5
"paths./calculation/recorded.get.parameters[0].description" = "An optional end time. The default is '*' for element attributes and points. For event frame attributes, the default is the event frame's end time, or '*' if that is not set. Note that if endTime is earlier than startTime, the resulting values will be in time-descending order."
"paths./calculation/recorded.get.parameters[0].in" = "query"
"paths./calculation/recorded.get.parameters[0].name" = "endTime"
"paths./calculation/recorded.get.parameters[0].required" = false
"paths./calculation/recorded.get.parameters[0].type" = "string"
"paths./calculation/recorded.get.parameters[1].description" = "A string containing the expression to be evaluated. The syntax for the expression generally follows the Performance Equation syntax as described in the PI Server documentation, with the exception that expressions which target AF objects use attribute names in place of tag names in the equation."
"paths./calculation/recorded.get.parameters[1].in" = "query"
"paths./calculation/recorded.get.parameters[1].name" = "expression"
"paths./calculation/recorded.get.parameters[1].required" = false
"paths./calculation/recorded.get.parameters[1].type" = "string"
"paths./calculation/recorded.get.parameters[2].description" = "List of fields to be returned in the response, separated by semicolons (;). If this parameter is not specified, all available fields will be returned."
"paths./calculation/recorded.get.parameters[2].in" = "query"
"paths./calculation/recorded.get.parameters[2].name" = "selectedFields"
"paths./calculation/recorded.get.parameters[2].required" = false
"paths./calculation/recorded.get.parameters[2].type" = "string"
"paths./calculation/recorded.get.parameters[3].description" = "An optional start time. The default is '*-1d' for element attributes and points. For event frame attributes, the default is the event frame's start time, or '*-1d' if that is not set."
"paths./calculation/recorded.get.parameters[3].in" = "query"
"paths./calculation/recorded.get.parameters[3].name" = "startTime"
"paths./calculation/recorded.get.parameters[3].required" = false
"paths./calculation/recorded.get.parameters[3].type" = "string"
"paths./calculation/recorded.get.parameters[4].description" = "The ID of the target object of the expression. A target object can be a Data Server, a database, an element, an event frame or an attribute. References to attributes or points are based on the target. If this parameter is not provided, the target object is set to null."
"paths./calculation/recorded.get.parameters[4].in" = "query"
"paths./calculation/recorded.get.parameters[4].name" = "webId"
"paths./calculation/recorded.get.parameters[4].required" = false
"paths./calculation/recorded.get.parameters[4].type" = "string"
"paths./calculation/recorded.get.responses.200.description" = "The calculated values."
"paths./calculation/recorded.get.responses.200.schema.$ref" = "#/definitions/TimedValues"
"paths./calculation/recorded.get.responses.409.description" = "The targeted object does not support the calculation."
"paths./calculation/recorded.get.responses.409.schema.$ref" = "#/definitions/Errors"
"paths./calculation/recorded.get.summary" = "Returns the result of evaluating the expression at each point in time over the time range from the start time to the end time where a recorded value exists for a member of the expression."
"paths./calculation/recorded.get.tags.length" = 1
"paths./calculation/recorded.get.tags[0]" = "Calculation"
"paths./calculation/summary.get.consumes.length" = 0
"paths./calculation/summary.get.deprecated" = false
"paths./calculation/summary.get.operationId" = "Calculation_GetSummary"
"paths./calculation/summary.get.parameters.length" = 11
"paths./calculation/summary.get.parameters[0].description" = "Specifies the method of evaluating the data over the time range. The default is 'TimeWeighted'."
"paths./calculation/summary.get.parameters[0].in" = "query"
"paths./calculation/summary.get.parameters[0].name" = "calculationBasis"
"paths./calculation/summary.get.parameters[0].required" = false
"paths./calculation/summary.get.parameters[0].type" = "string"
"paths./calculation/summary.get.parameters[10].description" = "The ID of the target object of the expression. A target object can be a Data Server, a database, an element, an event frame or an attribute. References to attributes or points are based on the target. If this parameter is not provided, the target object is set to null."
"paths./calculation/summary.get.parameters[10].in" = "query"
"paths./calculation/summary.get.parameters[10].name" = "webId"
"paths./calculation/summary.get.parameters[10].required" = false
"paths./calculation/summary.get.parameters[10].type" = "string"
"paths./calculation/summary.get.parameters[1].description" = "An optional end time. The default is '*' for element attributes and points. For event frame attributes, the default is the event frame's end time, or '*' if that is not set. Note that if endTime is earlier than startTime, the resulting values will be in time-descending order."
"paths./calculation/summary.get.parameters[1].in" = "query"
"paths./calculation/summary.get.parameters[1].name" = "endTime"
"paths./calculation/summary.get.parameters[1].required" = false
"paths./calculation/summary.get.parameters[1].type" = "string"
"paths./calculation/summary.get.parameters[2].description" = "A string containing the expression to be evaluated. The syntax for the expression generally follows the Performance Equation syntax as described in the PI Server documentation, with the exception that expressions which target AF objects use attribute names in place of tag names in the equation."
"paths./calculation/summary.get.parameters[2].in" = "query"
"paths./calculation/summary.get.parameters[2].name" = "expression"
"paths./calculation/summary.get.parameters[2].required" = false
"paths./calculation/summary.get.parameters[2].type" = "string"
"paths./calculation/summary.get.parameters[3].description" = "A time span specifies how often the filter expression is evaluated when computing the summary for an interval, if the sampleType is 'Interval'."
"paths./calculation/summary.get.parameters[3].in" = "query"
"paths./calculation/summary.get.parameters[3].name" = "sampleInterval"
"paths./calculation/summary.get.parameters[3].required" = false
"paths./calculation/summary.get.parameters[3].type" = "string"
"paths./calculation/summary.get.parameters[4].description" = "A flag which specifies one or more summaries to compute for each interval over the time range. The default is 'ExpressionRecordedValues'."
"paths./calculation/summary.get.parameters[4].in" = "query"
"paths./calculation/summary.get.parameters[4].name" = "sampleType"
"paths./calculation/summary.get.parameters[4].required" = false
"paths./calculation/summary.get.parameters[4].type" = "string"
"paths./calculation/summary.get.parameters[5].description" = "List of fields to be returned in the response, separated by semicolons (;). If this parameter is not specified, all available fields will be returned."
"paths./calculation/summary.get.parameters[5].in" = "query"
"paths./calculation/summary.get.parameters[5].name" = "selectedFields"
"paths./calculation/summary.get.parameters[5].required" = false
"paths./calculation/summary.get.parameters[5].type" = "string"
"paths./calculation/summary.get.parameters[6].description" = "An optional start time. The default is '*-1d' for element attributes and points. For event frame attributes, the default is the event frame's start time, or '*-1d' if that is not set."
"paths./calculation/summary.get.parameters[6].in" = "query"
"paths./calculation/summary.get.parameters[6].name" = "startTime"
"paths./calculation/summary.get.parameters[6].required" = false
"paths./calculation/summary.get.parameters[6].type" = "string"
"paths./calculation/summary.get.parameters[7].description" = "The duration of each summary interval."
"paths./calculation/summary.get.parameters[7].in" = "query"
"paths./calculation/summary.get.parameters[7].name" = "summaryDuration"
"paths./calculation/summary.get.parameters[7].required" = false
"paths./calculation/summary.get.parameters[7].type" = "string"
"paths./calculation/summary.get.parameters[8].collectionFormat" = "multi"
"paths./calculation/summary.get.parameters[8].description" = "Specifies the kinds of summaries to produce over the range. The default is 'Total'. Multiple summary types may be specified by using multiple instances of summaryType."
"paths./calculation/summary.get.parameters[8].in" = "query"
"paths./calculation/summary.get.parameters[8].items.type" = "string"
"paths./calculation/summary.get.parameters[8].name" = "summaryType"
"paths./calculation/summary.get.parameters[8].required" = false
"paths./calculation/summary.get.parameters[8].type" = "array"
"paths./calculation/summary.get.parameters[9].description" = "Specifies how to calculate the timestamp for each interval. The default is 'Auto'."
"paths./calculation/summary.get.parameters[9].in" = "query"
"paths./calculation/summary.get.parameters[9].name" = "timeType"
"paths./calculation/summary.get.parameters[9].required" = false
"paths./calculation/summary.get.parameters[9].type" = "string"
"paths./calculation/summary.get.responses.200.description" = "The calculated values."
"paths./calculation/summary.get.responses.200.schema.$ref" = "#/definitions/Items[SummaryValue]"
"paths./calculation/summary.get.responses.409.description" = "The targeted object does not support the calculation."
"paths./calculation/summary.get.responses.409.schema.$ref" = "#/definitions/Errors"
"paths./calculation/summary.get.summary" = "Returns the result of evaluating the expression over the time range from the start time to the end time. The time range is first divided into a number of summary intervals. Then the calculation is performed for the specified summaries over each interval."
"paths./calculation/summary.get.tags.length" = 1
"paths./calculation/summary.get.tags[0]" = "Calculation"
"paths./calculation/times.get.consumes.length" = 0
"paths./calculation/times.get.deprecated" = false
"paths./calculation/times.get.operationId" = "Calculation_GetAtTimes"
"paths./calculation/times.get.parameters.length" = 5
"paths./calculation/times.get.parameters[0].description" = "A string containing the expression to be evaluated. The syntax for the expression generally follows the Performance Equation syntax as described in the PI Server documentation, with the exception that expressions which target AF objects use attribute names in place of tag names in the equation."
"paths./calculation/times.get.parameters[0].in" = "query"
"paths./calculation/times.get.parameters[0].name" = "expression"
"paths./calculation/times.get.parameters[0].required" = false
"paths./calculation/times.get.parameters[0].type" = "string"
"paths./calculation/times.get.parameters[1].description" = "List of fields to be returned in the response, separated by semicolons (;). If this parameter is not specified, all available fields will be returned."
"paths./calculation/times.get.parameters[1].in" = "query"
"paths./calculation/times.get.parameters[1].name" = "selectedFields"
"paths./calculation/times.get.parameters[1].required" = false
"paths./calculation/times.get.parameters[1].type" = "string"
"paths./calculation/times.get.parameters[2].description" = "The order that the returned collection is sorted. The default is 'Ascending'."
"paths./calculation/times.get.parameters[2].in" = "query"
"paths./calculation/times.get.parameters[2].name" = "sortOrder"
"paths./calculation/times.get.parameters[2].required" = false
"paths./calculation/times.get.parameters[2].type" = "string"
"paths./calculation/times.get.parameters[3].collectionFormat" = "multi"
"paths./calculation/times.get.parameters[3].description" = "A list of timestamps at which to calculate the expression."
"paths./calculation/times.get.parameters[3].in" = "query"
"paths./calculation/times.get.parameters[3].items.type" = "string"
"paths./calculation/times.get.parameters[3].name" = "time"
"paths./calculation/times.get.parameters[3].required" = false
"paths./calculation/times.get.parameters[3].type" = "array"
"paths./calculation/times.get.parameters[4].description" = "The ID of the target object of the expression. A target object can be a Data Server, a database, an element, an event frame or an attribute. References to attributes or points are based on the target. If this parameter is not provided, the target object is set to null."
"paths./calculation/times.get.parameters[4].in" = "query"
"paths./calculation/times.get.parameters[4].name" = "webId"
"paths./calculation/times.get.parameters[4].required" = false
"paths./calculation/times.get.parameters[4].type" = "string"
"paths./calculation/times.get.responses.200.description" = "The calculated values."
"paths./calculation/times.get.responses.200.schema.$ref" = "#/definitions/TimedValues"
"paths./calculation/times.get.responses.409.description" = "The targeted object does not support the calculation."
"paths./calculation/times.get.responses.409.schema.$ref" = "#/definitions/Errors"
"paths./calculation/times.get.summary" = "Returns the result of evaluating the expression at the specified timestamps."
"paths./calculation/times.get.tags.length" = 1
"paths./calculation/times.get.tags[0]" = "Calculation"
"paths./channels/instances.get.consumes.length" = 0
"paths./channels/instances.get.deprecated" = false
"paths./channels/instances.get.operationId" = "Channel_Instances"
"paths./channels/instances.get.parameters.length" = 0
"paths./channels/instances.get.responses.200.description" = "A list of currently running channel instances."
"paths./channels/instances.get.summary" = "Retrieves a list of currently running channel instances."
"paths./channels/instances.get.tags.length" = 1
"paths./channels/instances.get.tags[0]" = "Channel"
"paths./dataservers#name.get.consumes.length" = 0
"paths./dataservers#name.get.deprecated" = false
"paths./dataservers#name.get.description" = "This method returns a data server based on the name. Users should primarily search with the WebID when available."
"paths./dataservers#name.get.operationId" = "DataServer_GetByName"
"paths./dataservers#name.get.parameters.length" = 2
"paths./dataservers#name.get.parameters[0].description" = "The name of the server."
"paths./dataservers#name.get.parameters[0].in" = "query"
"paths./dataservers#name.get.parameters[0].name" = "name"
"paths./dataservers#name.get.parameters[0].required" = true
"paths./dataservers#name.get.parameters[0].type" = "string"
"paths./dataservers#name.get.parameters[1].description" = "List of fields to be returned in the response, separated by semicolons (;). If this parameter is not specified, all available fields will be returned."
"paths./dataservers#name.get.parameters[1].in" = "query"
"paths./dataservers#name.get.parameters[1].name" = "selectedFields"
"paths./dataservers#name.get.parameters[1].required" = false
"paths./dataservers#name.get.parameters[1].type" = "string"
"paths./dataservers#name.get.responses.200.description" = "The requested server."
"paths./dataservers#name.get.responses.200.schema.$ref" = "#/definitions/DataServer"
"paths./dataservers#name.get.summary" = "Retrieve a Data Server by name."
"paths./dataservers#name.get.tags.length" = 1
"paths./dataservers#name.get.tags[0]" = "DataServer"
"paths./dataservers#path.get.consumes.length" = 0
"paths./dataservers#path.get.deprecated" = false
"paths./dataservers#path.get.description" = "This method returns a data server based on the hierarchical path associated with it, and should be used when a path has been received from a separate part of the PI System for use in the PI Web API. Users should primarily search with the WebID when available."
"paths./dataservers#path.get.operationId" = "DataServer_GetByPath"
"paths./dataservers#path.get.parameters.length" = 2
"paths./dataservers#path.get.parameters[0].description" = "The path to the server. Note that the path supplied to this method must be of the form '\\\\servername'."
"paths./dataservers#path.get.parameters[0].in" = "query"
"paths./dataservers#path.get.parameters[0].name" = "path"
"paths./dataservers#path.get.parameters[0].required" = true
"paths./dataservers#path.get.parameters[0].type" = "string"
"paths./dataservers#path.get.parameters[1].description" = "List of fields to be returned in the response, separated by semicolons (;). If this parameter is not specified, all available fields will be returned."
"paths./dataservers#path.get.parameters[1].in" = "query"
"paths./dataservers#path.get.parameters[1].name" = "selectedFields"
"paths./dataservers#path.get.parameters[1].required" = false
"paths./dataservers#path.get.parameters[1].type" = "string"
"paths./dataservers#path.get.responses.200.description" = "The requested server."
"paths./dataservers#path.get.responses.200.schema.$ref" = "#/definitions/DataServer"
"paths./dataservers#path.get.summary" = "Retrieve a Data Server by path."
"paths./dataservers#path.get.tags.length" = 1
"paths./dataservers#path.get.tags[0]" = "DataServer"
"paths./dataservers.get.consumes.length" = 0
"paths./dataservers.get.deprecated" = false
"paths./dataservers.get.description" = "This method returns a list of all available known Data Servers that the user can connect to. Even though a server may be returned in the list, the user may not have permission to access it."
"paths./dataservers.get.operationId" = "DataServer_List"
"paths./dataservers.get.parameters.length" = 1
"paths./dataservers.get.parameters[0].description" = "List of fields to be returned in the response, separated by semicolons (;). If this parameter is not specified, all available fields will be returned."
"paths./dataservers.get.parameters[0].in" = "query"
"paths./dataservers.get.parameters[0].name" = "selectedFields"
"paths./dataservers.get.parameters[0].required" = false
"paths./dataservers.get.parameters[0].type" = "string"
"paths./dataservers.get.responses.200.description" = "A list of all known servers."
"paths./dataservers.get.responses.200.schema.$ref" = "#/definitions/Items[DataServer]"
"paths./dataservers.get.summary" = "Retrieve a list of Data Servers known to this service."
"paths./dataservers.get.tags.length" = 1
"paths./dataservers.get.tags[0]" = "DataServer"
"paths./dataservers/{webId}.get.consumes.length" = 0
"paths./dataservers/{webId}.get.deprecated" = false
"paths./dataservers/{webId}.get.operationId" = "DataServer_Get"
"paths./dataservers/{webId}.get.parameters.length" = 2
"paths./dataservers/{webId}.get.parameters[0].description" = "The ID of the server."
"paths./dataservers/{webId}.get.parameters[0].in" = "path"
"paths./dataservers/{webId}.get.parameters[0].name" = "webId"
"paths./dataservers/{webId}.get.parameters[0].required" = true
"paths./dataservers/{webId}.get.parameters[0].type" = "string"
"paths./dataservers/{webId}.get.parameters[1].description" = "List of fields to be returned in the response, separated by semicolons (;). If this parameter is not specified, all available fields will be returned."
"paths./dataservers/{webId}.get.parameters[1].in" = "query"
"paths./dataservers/{webId}.get.parameters[1].name" = "selectedFields"
"paths./dataservers/{webId}.get.parameters[1].required" = false
"paths./dataservers/{webId}.get.parameters[1].type" = "string"
"paths./dataservers/{webId}.get.responses.200.description" = "The requested server."
"paths./dataservers/{webId}.get.responses.200.schema.$ref" = "#/definitions/DataServer"
"paths./dataservers/{webId}.get.summary" = "Retrieve a Data Server."
"paths./dataservers/{webId}.get.tags.length" = 1
"paths./dataservers/{webId}.get.tags[0]" = "DataServer"
"paths./dataservers/{webId}/enumerationsets.get.consumes.length" = 0
"paths./dataservers/{webId}/enumerationsets.get.deprecated" = false
"paths./dataservers/{webId}/enumerationsets.get.operationId" = "DataServer_GetEnumerationSets"
"paths./dataservers/{webId}/enumerationsets.get.parameters.length" = 2
"paths./dataservers/{webId}/enumerationsets.get.parameters[0].description" = "The ID of the server."
"paths./dataservers/{webId}/enumerationsets.get.parameters[0].in" = "path"
"paths./dataservers/{webId}/enumerationsets.get.parameters[0].name" = "webId"
"paths./dataservers/{webId}/enumerationsets.get.parameters[0].required" = true
"paths./dataservers/{webId}/enumerationsets.get.parameters[0].type" = "string"
"paths./dataservers/{webId}/enumerationsets.get.parameters[1].description" = "List of fields to be returned in the response, separated by semicolons (;). If this parameter is not specified, all available fields will be returned."
"paths./dataservers/{webId}/enumerationsets.get.parameters[1].in" = "query"
"paths./dataservers/{webId}/enumerationsets.get.parameters[1].name" = "selectedFields"
"paths./dataservers/{webId}/enumerationsets.get.parameters[1].required" = false
"paths./dataservers/{webId}/enumerationsets.get.parameters[1].type" = "string"
"paths./dataservers/{webId}/enumerationsets.get.responses.200.description" = "The specified enumeration sets."
"paths./dataservers/{webId}/enumerationsets.get.responses.200.schema.$ref" = "#/definitions/Items[EnumerationSet]"
"paths./dataservers/{webId}/enumerationsets.get.summary" = "Retrieve enumeration sets for given Data Server."
"paths./dataservers/{webId}/enumerationsets.get.tags.length" = 1
"paths./dataservers/{webId}/enumerationsets.get.tags[0]" = "DataServer"
"paths./dataservers/{webId}/enumerationsets.post.consumes.length" = 2
"paths./dataservers/{webId}/enumerationsets.post.consumes[0]" = "application/json"
"paths./dataservers/{webId}/enumerationsets.post.consumes[1]" = "text/json"
"paths./dataservers/{webId}/enumerationsets.post.deprecated" = false
"paths./dataservers/{webId}/enumerationsets.post.operationId" = "DataServer_CreateEnumerationSet"
"paths./dataservers/{webId}/enumerationsets.post.parameters.length" = 2
"paths./dataservers/{webId}/enumerationsets.post.parameters[0].description" = "The ID of the server on which to create the enumeration set."
"paths./dataservers/{webId}/enumerationsets.post.parameters[0].in" = "path"
"paths./dataservers/{webId}/enumerationsets.post.parameters[0].name" = "webId"
"paths./dataservers/{webId}/enumerationsets.post.parameters[0].required" = true
"paths./dataservers/{webId}/enumerationsets.post.parameters[0].type" = "string"
"paths./dataservers/{webId}/enumerationsets.post.parameters[1].description" = "The new enumeration set definition."
"paths./dataservers/{webId}/enumerationsets.post.parameters[1].in" = "body"
"paths./dataservers/{webId}/enumerationsets.post.parameters[1].name" = "enumerationSet"
"paths./dataservers/{webId}/enumerationsets.post.parameters[1].required" = true
"paths./dataservers/{webId}/enumerationsets.post.parameters[1].schema.$ref" = "#/definitions/EnumerationSet"
"paths./dataservers/{webId}/enumerationsets.post.responses.201.description" = "The enumeration was created. The response's Location header is a link to the created enumeration set."
"paths./dataservers/{webId}/enumerationsets.post.summary" = "Create an enumeration set on the Data Server."
"paths./dataservers/{webId}/enumerationsets.post.tags.length" = 1
"paths./dataservers/{webId}/enumerationsets.post.tags[0]" = "DataServer"
"paths./dataservers/{webId}/points.get.consumes.length" = 0
"paths./dataservers/{webId}/points.get.deprecated" = false
"paths./dataservers/{webId}/points.get.description" = "Users can search for the data servers based on specific search parameters. If no parameters are specified in the search, the default values for each parameter will be used and will return the data servers that match the default search."
"paths./dataservers/{webId}/points.get.operationId" = "DataServer_GetPoints"
"paths./dataservers/{webId}/points.get.parameters.length" = 5
"paths./dataservers/{webId}/points.get.parameters[0].description" = "The ID of the server."
"paths./dataservers/{webId}/points.get.parameters[0].in" = "path"
"paths./dataservers/{webId}/points.get.parameters[0].name" = "webId"
"paths./dataservers/{webId}/points.get.parameters[0].required" = true
"paths./dataservers/{webId}/points.get.parameters[0].type" = "string"
"paths./dataservers/{webId}/points.get.parameters[1].description" = "The maximum number of objects to be returned per call (page size). The default is 1000."
"paths./dataservers/{webId}/points.get.parameters[1].in" = "query"
"paths./dataservers/{webId}/points.get.parameters[1].name" = "maxCount"
"paths./dataservers/{webId}/points.get.parameters[1].required" = false
"paths./dataservers/{webId}/points.get.parameters[1].type" = "integer"
"paths./dataservers/{webId}/points.get.parameters[2].description" = "A query string for filtering by point name. The default is no filter."
"paths./dataservers/{webId}/points.get.parameters[2].in" = "query"
"paths./dataservers/{webId}/points.get.parameters[2].name" = "nameFilter"
"paths./dataservers/{webId}/points.get.parameters[2].required" = false
"paths./dataservers/{webId}/points.get.parameters[2].type" = "string"
"paths./dataservers/{webId}/points.get.parameters[3].description" = "List of fields to be returned in the response, separated by semicolons (;). If this parameter is not specified, all available fields will be returned."
"paths./dataservers/{webId}/points.get.parameters[3].in" = "query"
"paths./dataservers/{webId}/points.get.parameters[3].name" = "selectedFields"
"paths./dataservers/{webId}/points.get.parameters[3].required" = false
"paths./dataservers/{webId}/points.get.parameters[3].type" = "string"
"paths./dataservers/{webId}/points.get.parameters[4].description" = "The starting index (zero based) of the items to be returned. The default is '0'."
"paths./dataservers/{webId}/points.get.parameters[4].in" = "query"
"paths./dataservers/{webId}/points.get.parameters[4].name" = "startIndex"
"paths./dataservers/{webId}/points.get.parameters[4].required" = false
"paths./dataservers/{webId}/points.get.parameters[4].type" = "integer"
"paths./dataservers/{webId}/points.get.responses.200.description" = "A list of matching points."
"paths./dataservers/{webId}/points.get.responses.200.schema.$ref" = "#/definitions/Items[Point]"
"paths./dataservers/{webId}/points.get.summary" = "Retrieve a list of points on a specified Data Server."
"paths./dataservers/{webId}/points.get.tags.length" = 1
"paths./dataservers/{webId}/points.get.tags[0]" = "DataServer"
"paths./dataservers/{webId}/points.post.consumes.length" = 2
"paths./dataservers/{webId}/points.post.consumes[0]" = "application/json"
"paths./dataservers/{webId}/points.post.consumes[1]" = "text/json"
"paths./dataservers/{webId}/points.post.deprecated" = false
"paths./dataservers/{webId}/points.post.operationId" = "DataServer_CreatePoint"
"paths./dataservers/{webId}/points.post.parameters.length" = 2
"paths./dataservers/{webId}/points.post.parameters[0].description" = "The ID of the server."
"paths./dataservers/{webId}/points.post.parameters[0].in" = "path"
"paths./dataservers/{webId}/points.post.parameters[0].name" = "webId"
"paths./dataservers/{webId}/points.post.parameters[0].required" = true
"paths./dataservers/{webId}/points.post.parameters[0].type" = "string"
"paths./dataservers/{webId}/points.post.parameters[1].description" = "The new point definition."
"paths./dataservers/{webId}/points.post.parameters[1].in" = "body"
"paths./dataservers/{webId}/points.post.parameters[1].name" = "pointDTO"
"paths./dataservers/{webId}/points.post.parameters[1].required" = true
"paths./dataservers/{webId}/points.post.parameters[1].schema.$ref" = "#/definitions/Point"
"paths./dataservers/{webId}/points.post.responses.201.description" = "The point was created. The response's Location header is a link to the point."
"paths./dataservers/{webId}/points.post.summary" = "Create a point in the specified Data Server."
"paths./dataservers/{webId}/points.post.tags.length" = 1
"paths./dataservers/{webId}/points.post.tags[0]" = "DataServer"
"paths./elementcategories.get.consumes.length" = 0
"paths./elementcategories.get.deprecated" = false
"paths./elementcategories.get.operationId" = "ElementCategory_GetByPath"
"paths./elementcategories.get.parameters.length" = 2
"paths./elementcategories.get.parameters[0].description" = "The path to the target element category."
"paths./elementcategories.get.parameters[0].in" = "query"
"paths./elementcategories.get.parameters[0].name" = "path"
"paths./elementcategories.get.parameters[0].required" = true
"paths./elementcategories.get.parameters[0].type" = "string"
"paths./elementcategories.get.parameters[1].description" = "List of fields to be returned in the response, separated by semicolons (;). If this parameter is not specified, all available fields will be returned."
"paths./elementcategories.get.parameters[1].in" = "query"
"paths./elementcategories.get.parameters[1].name" = "selectedFields"
"paths./elementcategories.get.parameters[1].required" = false
"paths./elementcategories.get.parameters[1].type" = "string"
"paths./elementcategories.get.responses.200.description" = "The specified element category."
"paths./elementcategories.get.responses.200.schema.$ref" = "#/definitions/ElementCategory"
"paths./elementcategories.get.summary" = "Retrieve an element category by path."
"paths./elementcategories.get.tags.length" = 1
"paths./elementcategories.get.tags[0]" = "ElementCategory"
"paths./elementcategories/{webId}.delete.consumes.length" = 0
"paths./elementcategories/{webId}.delete.deprecated" = false
"paths./elementcategories/{webId}.delete.operationId" = "ElementCategory_Delete"
"paths./elementcategories/{webId}.delete.parameters.length" = 1
"paths./elementcategories/{webId}.delete.parameters[0].description" = "The ID of the element category to delete."
"paths./elementcategories/{webId}.delete.parameters[0].in" = "path"
"paths./elementcategories/{webId}.delete.parameters[0].name" = "webId"
"paths./elementcategories/{webId}.delete.parameters[0].required" = true
"paths./elementcategories/{webId}.delete.parameters[0].type" = "string"
"paths./elementcategories/{webId}.delete.responses.204.description" = "The element category was deleted."
"paths./elementcategories/{webId}.delete.summary" = "Delete an element category."
"paths./elementcategories/{webId}.delete.tags.length" = 1
"paths./elementcategories/{webId}.delete.tags[0]" = "ElementCategory"
"paths./elementcategories/{webId}.get.consumes.length" = 0
"paths./elementcategories/{webId}.get.deprecated" = false
"paths./elementcategories/{webId}.get.operationId" = "ElementCategory_Get"
"paths./elementcategories/{webId}.get.parameters.length" = 2
"paths./elementcategories/{webId}.get.parameters[0].description" = "The id of the element category."
"paths./elementcategories/{webId}.get.parameters[0].in" = "path"
"paths./elementcategories/{webId}.get.parameters[0].name" = "webId"
"paths./elementcategories/{webId}.get.parameters[0].required" = true
"paths./elementcategories/{webId}.get.parameters[0].type" = "string"
"paths./elementcategories/{webId}.get.parameters[1].description" = "List of fields to be returned in the response, separated by semicolons (;). If this parameter is not specified, all available fields will be returned."
"paths./elementcategories/{webId}.get.parameters[1].in" = "query"
"paths./elementcategories/{webId}.get.parameters[1].name" = "selectedFields"
"paths./elementcategories/{webId}.get.parameters[1].required" = false
"paths./elementcategories/{webId}.get.parameters[1].type" = "string"
"paths./elementcategories/{webId}.get.responses.200.description" = "The specified element category."
"paths./elementcategories/{webId}.get.responses.200.schema.$ref" = "#/definitions/ElementCategory"
"paths./elementcategories/{webId}.get.summary" = "Retrieve an element category."
"paths./elementcategories/{webId}.get.tags.length" = 1
"paths./elementcategories/{webId}.get.tags[0]" = "ElementCategory"
"paths./elementcategories/{webId}.patch.consumes.length" = 2
"paths./elementcategories/{webId}.patch.consumes[0]" = "application/json"
"paths./elementcategories/{webId}.patch.consumes[1]" = "text/json"
"paths./elementcategories/{webId}.patch.deprecated" = false
"paths./elementcategories/{webId}.patch.operationId" = "ElementCategory_Update"
"paths./elementcategories/{webId}.patch.parameters.length" = 2
"paths./elementcategories/{webId}.patch.parameters[0].description" = "The ID of the element category to update."
"paths./elementcategories/{webId}.patch.parameters[0].in" = "path"
"paths./elementcategories/{webId}.patch.parameters[0].name" = "webId"
"paths./elementcategories/{webId}.patch.parameters[0].required" = true
"paths./elementcategories/{webId}.patch.parameters[0].type" = "string"
"paths./elementcategories/{webId}.patch.parameters[1].description" = "A partial element category containing the desired changes."
"paths./elementcategories/{webId}.patch.parameters[1].in" = "body"
"paths./elementcategories/{webId}.patch.parameters[1].name" = "elementCategory"
"paths./elementcategories/{webId}.patch.parameters[1].required" = true
"paths./elementcategories/{webId}.patch.parameters[1].schema.$ref" = "#/definitions/ElementCategory"
"paths./elementcategories/{webId}.patch.responses.204.description" = "The element category was updated."
"paths./elementcategories/{webId}.patch.summary" = "Update an element category by replacing items in its definition."
"paths./elementcategories/{webId}.patch.tags.length" = 1
"paths./elementcategories/{webId}.patch.tags[0]" = "ElementCategory"
"paths./elementcategories/{webId}/security.get.consumes.length" = 0
"paths./elementcategories/{webId}/security.get.deprecated" = false
"paths./elementcategories/{webId}/security.get.operationId" = "ElementCategory_GetSecurity"
"paths./elementcategories/{webId}/security.get.parameters.length" = 4
"paths./elementcategories/{webId}/security.get.parameters[0].description" = "The ID of the element category for the security to be checked."
"paths./elementcategories/{webId}/security.get.parameters[0].in" = "path"
"paths./elementcategories/{webId}/security.get.parameters[0].name" = "webId"
"paths./elementcategories/{webId}/security.get.parameters[0].required" = true
"paths./elementcategories/{webId}/security.get.parameters[0].type" = "string"
"paths./elementcategories/{webId}/security.get.parameters[1].collectionFormat" = "multi"
"paths./elementcategories/{webId}/security.get.parameters[1].description" = "The user identity for the security information to be checked. Multiple security identities may be specified with multiple instances of the parameter. If the parameter is not specified, only the current user's security rights will be returned."
"paths./elementcategories/{webId}/security.get.parameters[1].in" = "query"
"paths./elementcategories/{webId}/security.get.parameters[1].items.type" = "string"
"paths./elementcategories/{webId}/security.get.parameters[1].name" = "userIdentity"
"paths./elementcategories/{webId}/security.get.parameters[1].required" = true
"paths./elementcategories/{webId}/security.get.parameters[1].type" = "array"
"paths./elementcategories/{webId}/security.get.parameters[2].description" = "Indicates if the security cache should be refreshed before getting security information. The default is 'false'."
"paths./elementcategories/{webId}/security.get.parameters[2].in" = "query"
"paths./elementcategories/{webId}/security.get.parameters[2].name" = "forceRefresh"
"paths./elementcategories/{webId}/security.get.parameters[2].required" = false
"paths./elementcategories/{webId}/security.get.parameters[2].type" = "boolean"
"paths./elementcategories/{webId}/security.get.parameters[3].description" = "List of fields to be returned in the response, separated by semicolons (;). If this parameter is not specified, all available fields will be returned."
"paths./elementcategories/{webId}/security.get.parameters[3].in" = "query"
"paths./elementcategories/{webId}/security.get.parameters[3].name" = "selectedFields"
"paths./elementcategories/{webId}/security.get.parameters[3].required" = false
"paths./elementcategories/{webId}/security.get.parameters[3].type" = "string"
"paths./elementcategories/{webId}/security.get.responses.200.description" = "Security rights."
"paths./elementcategories/{webId}/security.get.responses.200.schema.$ref" = "#/definitions/Items[SecurityRights]"
"paths./elementcategories/{webId}/security.get.responses.400.description" = "An invalid or local account is specified as the user identity."
"paths./elementcategories/{webId}/security.get.responses.400.schema.$ref" = "#/definitions/Errors"
"paths./elementcategories/{webId}/security.get.responses.401.description" = "Access denied for the specified user identity."
"paths./elementcategories/{webId}/security.get.responses.401.schema.$ref" = "#/definitions/Errors"
"paths./elementcategories/{webId}/security.get.responses.409.description" = "Unsupported when using Anonymous authentication method."
"paths./elementcategories/{webId}/security.get.responses.409.schema.$ref" = "#/definitions/Errors"
"paths./elementcategories/{webId}/security.get.responses.502.description" = "Failed to retrieve the specified user identity."
"paths./elementcategories/{webId}/security.get.responses.502.schema.$ref" = "#/definitions/Errors"
"paths./elementcategories/{webId}/security.get.summary" = "Get the security information of the specified security item associated with the element category for a specified user."
"paths./elementcategories/{webId}/security.get.tags.length" = 1
"paths./elementcategories/{webId}/security.get.tags[0]" = "ElementCategory"
"paths./elementcategories/{webId}/securityentries.get.consumes.length" = 0
"paths./elementcategories/{webId}/securityentries.get.deprecated" = false
"paths./elementcategories/{webId}/securityentries.get.operationId" = "ElementCategory_GetSecurityEntries"
"paths./elementcategories/{webId}/securityentries.get.parameters.length" = 3
"paths./elementcategories/{webId}/securityentries.get.parameters[0].description" = "The ID of the element category."
"paths./elementcategories/{webId}/securityentries.get.parameters[0].in" = "path"
"paths./elementcategories/{webId}/securityentries.get.parameters[0].name" = "webId"
"paths./elementcategories/{webId}/securityentries.get.parameters[0].required" = true
"paths./elementcategories/{webId}/securityentries.get.parameters[0].type" = "string"
"paths./elementcategories/{webId}/securityentries.get.parameters[1].description" = "The name query string used for filtering security entries. The default is no filter."
"paths./elementcategories/{webId}/securityentries.get.parameters[1].in" = "query"
"paths./elementcategories/{webId}/securityentries.get.parameters[1].name" = "nameFilter"
"paths./elementcategories/{webId}/securityentries.get.parameters[1].required" = false
"paths./elementcategories/{webId}/securityentries.get.parameters[1].type" = "string"
"paths./elementcategories/{webId}/securityentries.get.parameters[2].description" = "List of fields to be returned in the response, separated by semicolons (;). If this parameter is not specified, all available fields will be returned."
"paths./elementcategories/{webId}/securityentries.get.parameters[2].in" = "query"
"paths./elementcategories/{webId}/securityentries.get.parameters[2].name" = "selectedFields"
"paths./elementcategories/{webId}/securityentries.get.parameters[2].required" = false
"paths./elementcategories/{webId}/securityentries.get.parameters[2].type" = "string"
"paths./elementcategories/{webId}/securityentries.get.responses.200.description" = "A list of security entries matching the specified condition."
"paths./elementcategories/{webId}/securityentries.get.responses.200.schema.$ref" = "#/definitions/Items[SecurityEntry]"
"paths./elementcategories/{webId}/securityentries.get.summary" = "Retrieve the security entries associated with the element category based on the specified criteria. By default, all security entries for this element category are returned."
"paths./elementcategories/{webId}/securityentries.get.tags.length" = 1
"paths./elementcategories/{webId}/securityentries.get.tags[0]" = "ElementCategory"
"paths./elementcategories/{webId}/securityentries.post.consumes.length" = 2
"paths./elementcategories/{webId}/securityentries.post.consumes[0]" = "application/json"
"paths./elementcategories/{webId}/securityentries.post.consumes[1]" = "text/json"
"paths./elementcategories/{webId}/securityentries.post.deprecated" = false
"paths./elementcategories/{webId}/securityentries.post.operationId" = "ElementCategory_CreateSecurityEntry"
"paths./elementcategories/{webId}/securityentries.post.parameters.length" = 3
"paths./elementcategories/{webId}/securityentries.post.parameters[0].description" = "The ID of the element category where the security entry will be created."
"paths./elementcategories/{webId}/securityentries.post.parameters[0].in" = "path"
"paths./elementcategories/{webId}/securityentries.post.parameters[0].name" = "webId"
"paths./elementcategories/{webId}/securityentries.post.parameters[0].required" = true
"paths./elementcategories/{webId}/securityentries.post.parameters[0].type" = "string"
"paths./elementcategories/{webId}/securityentries.post.parameters[1].description" = "The new security entry definition. The full list of allow and deny rights must be supplied."
"paths./elementcategories/{webId}/securityentries.post.parameters[1].in" = "body"
"paths./elementcategories/{webId}/securityentries.post.parameters[1].name" = "securityEntry"
"paths./elementcategories/{webId}/securityentries.post.parameters[1].required" = true
"paths./elementcategories/{webId}/securityentries.post.parameters[1].schema.$ref" = "#/definitions/SecurityEntry"
"paths./elementcategories/{webId}/securityentries.post.parameters[2].description" = "If false, the new access permissions are only applied to the associated object. If true, the access permissions of children with any parent-child reference types will change when the permissions on the primary parent change."
"paths./elementcategories/{webId}/securityentries.post.parameters[2].in" = "query"
"paths./elementcategories/{webId}/securityentries.post.parameters[2].name" = "applyToChildren"
"paths./elementcategories/{webId}/securityentries.post.parameters[2].required" = false
"paths./elementcategories/{webId}/securityentries.post.parameters[2].type" = "boolean"
"paths./elementcategories/{webId}/securityentries.post.responses.201.description" = "The security entry was created. The response's Location header is a link to the security entry."
"paths./elementcategories/{webId}/securityentries.post.summary" = "Create a security entry owned by the element category."
"paths./elementcategories/{webId}/securityentries.post.tags.length" = 1
"paths./elementcategories/{webId}/securityentries.post.tags[0]" = "ElementCategory"
"paths./elementcategories/{webId}/securityentries/{name}.delete.consumes.length" = 0
"paths./elementcategories/{webId}/securityentries/{name}.delete.deprecated" = false
"paths./elementcategories/{webId}/securityentries/{name}.delete.operationId" = "ElementCategory_DeleteSecurityEntry"
"paths./elementcategories/{webId}/securityentries/{name}.delete.parameters.length" = 3
"paths./elementcategories/{webId}/securityentries/{name}.delete.parameters[0].description" = "The name of the security entry. For every backslash character (\\) in the security entry name, replace with asterisk (*). As an example, use domain*username instead of domain\\username."
"paths./elementcategories/{webId}/securityentries/{name}.delete.parameters[0].in" = "path"
"paths./elementcategories/{webId}/securityentries/{name}.delete.parameters[0].name" = "name"
"paths./elementcategories/{webId}/securityentries/{name}.delete.parameters[0].required" = true
"paths./elementcategories/{webId}/securityentries/{name}.delete.parameters[0].type" = "string"
"paths./elementcategories/{webId}/securityentries/{name}.delete.parameters[1].description" = "The ID of the element category where the security entry will be deleted."
"paths./elementcategories/{webId}/securityentries/{name}.delete.parameters[1].in" = "path"
"paths./elementcategories/{webId}/securityentries/{name}.delete.parameters[1].name" = "webId"
"paths./elementcategories/{webId}/securityentries/{name}.delete.parameters[1].required" = true
"paths./elementcategories/{webId}/securityentries/{name}.delete.parameters[1].type" = "string"
"paths./elementcategories/{webId}/securityentries/{name}.delete.parameters[2].description" = "If false, the new access permissions are only applied to the associated object. If true, the access permissions of children with any parent-child reference types will change when the permissions on the primary parent change."
"paths./elementcategories/{webId}/securityentries/{name}.delete.parameters[2].in" = "query"
"paths./elementcategories/{webId}/securityentries/{name}.delete.parameters[2].name" = "applyToChildren"
"paths./elementcategories/{webId}/securityentries/{name}.delete.parameters[2].required" = false
"paths./elementcategories/{webId}/securityentries/{name}.delete.parameters[2].type" = "boolean"
"paths./elementcategories/{webId}/securityentries/{name}.delete.responses.204.description" = "The security entry was deleted."
"paths./elementcategories/{webId}/securityentries/{name}.delete.summary" = "Delete a security entry owned by the element category."
"paths./elementcategories/{webId}/securityentries/{name}.delete.tags.length" = 1
"paths./elementcategories/{webId}/securityentries/{name}.delete.tags[0]" = "ElementCategory"
"paths./elementcategories/{webId}/securityentries/{name}.get.consumes.length" = 0
"paths./elementcategories/{webId}/securityentries/{name}.get.deprecated" = false
"paths./elementcategories/{webId}/securityentries/{name}.get.operationId" = "ElementCategory_GetSecurityEntryByName"
"paths./elementcategories/{webId}/securityentries/{name}.get.parameters.length" = 3
"paths./elementcategories/{webId}/securityentries/{name}.get.parameters[0].description" = "The name of the security entry. For every backslash character (\\) in the security entry name, replace with asterisk (*). As an example, use domain*username instead of domain\\username."
"paths./elementcategories/{webId}/securityentries/{name}.get.parameters[0].in" = "path"
"paths./elementcategories/{webId}/securityentries/{name}.get.parameters[0].name" = "name"
"paths./elementcategories/{webId}/securityentries/{name}.get.parameters[0].required" = true
"paths./elementcategories/{webId}/securityentries/{name}.get.parameters[0].type" = "string"
"paths./elementcategories/{webId}/securityentries/{name}.get.parameters[1].description" = "The ID of the element category."
"paths./elementcategories/{webId}/securityentries/{name}.get.parameters[1].in" = "path"
"paths./elementcategories/{webId}/securityentries/{name}.get.parameters[1].name" = "webId"
"paths./elementcategories/{webId}/securityentries/{name}.get.parameters[1].required" = true
"paths./elementcategories/{webId}/securityentries/{name}.get.parameters[1].type" = "string"
"paths./elementcategories/{webId}/securityentries/{name}.get.parameters[2].description" = "List of fields to be returned in the response, separated by semicolons (;). If this parameter is not specified, all available fields will be returned."
"paths./elementcategories/{webId}/securityentries/{name}.get.parameters[2].in" = "query"
"paths./elementcategories/{webId}/securityentries/{name}.get.parameters[2].name" = "selectedFields"
"paths./elementcategories/{webId}/securityentries/{name}.get.parameters[2].required" = false
"paths./elementcategories/{webId}/securityentries/{name}.get.parameters[2].type" = "string"
"paths./elementcategories/{webId}/securityentries/{name}.get.responses.200.description" = "The security entry matching the specified condition."
"paths./elementcategories/{webId}/securityentries/{name}.get.responses.200.schema.$ref" = "#/definitions/SecurityEntry"
"paths./elementcategories/{webId}/securityentries/{name}.get.responses.404.description" = "The security entry with the specified name is not found."
"paths./elementcategories/{webId}/securityentries/{name}.get.responses.404.schema.$ref" = "#/definitions/Errors"
"paths./elementcategories/{webId}/securityentries/{name}.get.summary" = "Retrieve the security entry associated with the element category with the specified name."
"paths./elementcategories/{webId}/securityentries/{name}.get.tags.length" = 1
"paths./elementcategories/{webId}/securityentries/{name}.get.tags[0]" = "ElementCategory"
"paths./elementcategories/{webId}/securityentries/{name}.put.consumes.length" = 2
"paths./elementcategories/{webId}/securityentries/{name}.put.consumes[0]" = "application/json"
"paths./elementcategories/{webId}/securityentries/{name}.put.consumes[1]" = "text/json"
"paths./elementcategories/{webId}/securityentries/{name}.put.deprecated" = false
"paths./elementcategories/{webId}/securityentries/{name}.put.operationId" = "ElementCategory_UpdateSecurityEntry"
"paths./elementcategories/{webId}/securityentries/{name}.put.parameters.length" = 4
"paths./elementcategories/{webId}/securityentries/{name}.put.parameters[0].description" = "The name of the security entry."
"paths./elementcategories/{webId}/securityentries/{name}.put.parameters[0].in" = "path"
"paths./elementcategories/{webId}/securityentries/{name}.put.parameters[0].name" = "name"
"paths./elementcategories/{webId}/securityentries/{name}.put.parameters[0].required" = true
"paths./elementcategories/{webId}/securityentries/{name}.put.parameters[0].type" = "string"
"paths./elementcategories/{webId}/securityentries/{name}.put.parameters[1].description" = "The ID of the element category where the security entry will be updated."
"paths./elementcategories/{webId}/securityentries/{name}.put.parameters[1].in" = "path"
"paths./elementcategories/{webId}/securityentries/{name}.put.parameters[1].name" = "webId"
"paths./elementcategories/{webId}/securityentries/{name}.put.parameters[1].required" = true
"paths./elementcategories/{webId}/securityentries/{name}.put.parameters[1].type" = "string"
"paths./elementcategories/{webId}/securityentries/{name}.put.parameters[2].description" = "The new security entry definition. The full list of allow and deny rights must be supplied or they will be removed."
"paths./elementcategories/{webId}/securityentries/{name}.put.parameters[2].in" = "body"
"paths./elementcategories/{webId}/securityentries/{name}.put.parameters[2].name" = "securityEntry"
"paths./elementcategories/{webId}/securityentries/{name}.put.parameters[2].required" = true
"paths./elementcategories/{webId}/securityentries/{name}.put.parameters[2].schema.$ref" = "#/definitions/SecurityEntry"
"paths./elementcategories/{webId}/securityentries/{name}.put.parameters[3].description" = "If false, the new access permissions are only applied to the associated object. If true, the access permissions of children with any parent-child reference types will change when the permissions on the primary parent change."
"paths./elementcategories/{webId}/securityentries/{name}.put.parameters[3].in" = "query"
"paths./elementcategories/{webId}/securityentries/{name}.put.parameters[3].name" = "applyToChildren"
"paths./elementcategories/{webId}/securityentries/{name}.put.parameters[3].required" = false
"paths./elementcategories/{webId}/securityentries/{name}.put.parameters[3].type" = "boolean"
"paths./elementcategories/{webId}/securityentries/{name}.put.responses.204.description" = "The security entry was updated."
"paths./elementcategories/{webId}/securityentries/{name}.put.summary" = "Update a security entry owned by the element category."
"paths./elementcategories/{webId}/securityentries/{name}.put.tags.length" = 1
"paths./elementcategories/{webId}/securityentries/{name}.put.tags[0]" = "ElementCategory"
"paths./elements.get.consumes.length" = 0
"paths./elements.get.deprecated" = false
"paths./elements.get.description" = "This method returns an element based on the hierarchical path associated with it, and should be used when a path has been received from a separate part of the PI System for use in the PI Web API. Users should primarily search with the WebID when available."
"paths./elements.get.operationId" = "Element_GetByPath"
"paths./elements.get.parameters.length" = 2
"paths./elements.get.parameters[0].description" = "The path to the element."
"paths./elements.get.parameters[0].in" = "query"
"paths./elements.get.parameters[0].name" = "path"
"paths./elements.get.parameters[0].required" = true
"paths./elements.get.parameters[0].type" = "string"
"paths./elements.get.parameters[1].description" = "List of fields to be returned in the response, separated by semicolons (;). If this parameter is not specified, all available fields will be returned."
"paths./elements.get.parameters[1].in" = "query"
"paths./elements.get.parameters[1].name" = "selectedFields"
"paths./elements.get.parameters[1].required" = false
"paths./elements.get.parameters[1].type" = "string"
"paths./elements.get.responses.200.description" = "The specified element."
"paths./elements.get.responses.200.schema.$ref" = "#/definitions/Element"
"paths./elements.get.summary" = "Retrieve an element by path."
"paths./elements.get.tags.length" = 1
"paths./elements.get.tags[0]" = "Element"
"paths./elements/multiple.get.consumes.length" = 0
"paths./elements/multiple.get.deprecated" = false
"paths./elements/multiple.get.operationId" = "Element_GetMultiple"
"paths./elements/multiple.get.parameters.length" = 5
"paths./elements/multiple.get.parameters[0].description" = "Specifies if the retrieval processes should be run in parallel on the server. This may improve the response time for large amounts of requested attributes. The default is 'false'."
"paths./elements/multiple.get.parameters[0].in" = "query"
"paths./elements/multiple.get.parameters[0].name" = "asParallel"
"paths./elements/multiple.get.parameters[0].required" = false
"paths./elements/multiple.get.parameters[0].type" = "boolean"
"paths./elements/multiple.get.parameters[1].description" = "The include mode for the return list. The default is 'All'."
"paths./elements/multiple.get.parameters[1].in" = "query"
"paths./elements/multiple.get.parameters[1].name" = "includeMode"
"paths./elements/multiple.get.parameters[1].required" = false
"paths./elements/multiple.get.parameters[1].type" = "string"
"paths./elements/multiple.get.parameters[2].collectionFormat" = "multi"
"paths./elements/multiple.get.parameters[2].description" = "The path of an element. Multiple elements may be specified with multiple instances of the parameter."
"paths./elements/multiple.get.parameters[2].in" = "query"
"paths./elements/multiple.get.parameters[2].items.type" = "string"
"paths./elements/multiple.get.parameters[2].name" = "path"
"paths./elements/multiple.get.parameters[2].required" = false
"paths./elements/multiple.get.parameters[2].type" = "array"
"paths./elements/multiple.get.parameters[3].description" = "List of fields to be returned in the response, separated by semicolons (;). If this parameter is not specified, all available fields will be returned."
"paths./elements/multiple.get.parameters[3].in" = "query"
"paths./elements/multiple.get.parameters[3].name" = "selectedFields"
"paths./elements/multiple.get.parameters[3].required" = false
"paths./elements/multiple.get.parameters[3].type" = "string"
"paths./elements/multiple.get.parameters[4].collectionFormat" = "multi"
"paths./elements/multiple.get.parameters[4].description" = "The ID of an element. Multiple elements may be specified with multiple instances of the parameter."
"paths./elements/multiple.get.parameters[4].in" = "query"
"paths./elements/multiple.get.parameters[4].items.type" = "string"
"paths./elements/multiple.get.parameters[4].name" = "webId"
"paths./elements/multiple.get.parameters[4].required" = false
"paths./elements/multiple.get.parameters[4].type" = "array"
"paths./elements/multiple.get.responses.200.description" = "The requested elements"
"paths./elements/multiple.get.responses.200.schema.$ref" = "#/definitions/Items[Item[Element]]"
"paths./elements/multiple.get.responses.207.description" = "Some or all items contain exceptions."
"paths./elements/multiple.get.responses.207.schema.$ref" = "#/definitions/Items[Item[Element]]"
"paths./elements/multiple.get.summary" = "Retrieve multiple elements by web id or path."
"paths./elements/multiple.get.tags.length" = 1
"paths./elements/multiple.get.tags[0]" = "Element"
"paths./elements/searchbyattribute.post.consumes.length" = 2
"paths./elements/searchbyattribute.post.consumes[0]" = "application/json"
"paths./elements/searchbyattribute.post.consumes[1]" = "text/json"
"paths./elements/searchbyattribute.post.deprecated" = false
"paths./elements/searchbyattribute.post.operationId" = "Element_CreateSearchByAttribute"
"paths./elements/searchbyattribute.post.parameters.length" = 0
"paths./elements/searchbyattribute.post.responses.201.description" = "The link is stored in the response's \"Location\" header. The response content is the first page of the search result by the default parameters."
"paths./elements/searchbyattribute.post.responses.400.description" = "Empty or invalid request content."
"paths./elements/searchbyattribute.post.responses.400.schema.$ref" = "#/definitions/Errors"
"paths./elements/searchbyattribute.post.responses.413.description" = "Request content is too large."
"paths./elements/searchbyattribute.post.responses.413.schema.$ref" = "#/definitions/Errors"
"paths./elements/searchbyattribute.post.summary" = "Create a link for a \"Search Elements By Attribute Value\" operation, whose queries are specified in the request content. The SearchRoot is specified by the Web Id of the root Element. If the SearchRoot is not specified, then the search starts at the Asset Database. ElementTemplate must be provided as the Web ID of the ElementTemplate, which are used to create the Elements. All the attributes in the queries must be defined as AttributeTemplates on the ElementTemplate. An array of attribute value queries are ANDed together to find the desired Element objects. At least one value query must be specified. There are limitations on SearchOperators."
"paths./elements/searchbyattribute.post.tags.length" = 1
"paths./elements/searchbyattribute.post.tags[0]" = "Element"
"paths./elements/searchbyattribute/{searchId}.get.consumes.length" = 0
"paths./elements/searchbyattribute/{searchId}.get.deprecated" = false
"paths./elements/searchbyattribute/{searchId}.get.operationId" = "Element_ExecuteSearchByAttribute"
"paths./elements/searchbyattribute/{searchId}.get.parameters.length" = 10
"paths./elements/searchbyattribute/{searchId}.get.parameters[0].description" = "The encoded search Id of the \"Search Elements By Attribute Value\" operation."
"paths./elements/searchbyattribute/{searchId}.get.parameters[0].in" = "path"
"paths./elements/searchbyattribute/{searchId}.get.parameters[0].name" = "searchId"
"paths./elements/searchbyattribute/{searchId}.get.parameters[0].required" = true
"paths./elements/searchbyattribute/{searchId}.get.parameters[0].type" = "string"
"paths./elements/searchbyattribute/{searchId}.get.parameters[1].description" = "Specify that the owner of the returned attributes must have this category. For Asset Servers older than 2.7, a 400 status code (Bad Request) will be returned if this parameter is specified. The default is no filter."
"paths./elements/searchbyattribute/{searchId}.get.parameters[1].in" = "query"
"paths./elements/searchbyattribute/{searchId}.get.parameters[1].name" = "categoryName"
"paths./elements/searchbyattribute/{searchId}.get.parameters[1].required" = false
"paths./elements/searchbyattribute/{searchId}.get.parameters[1].type" = "string"
"paths./elements/searchbyattribute/{searchId}.get.parameters[2].description" = "The element description filter string used for finding objects. Only the first 440 characters of the description will be searched. For Asset Servers older than 2.7, a 400 status code (Bad Request) will be returned if this parameter is specified. The default is no filter."
"paths./elements/searchbyattribute/{searchId}.get.parameters[2].in" = "query"
"paths./elements/searchbyattribute/{searchId}.get.parameters[2].name" = "descriptionFilter"
"paths./elements/searchbyattribute/{searchId}.get.parameters[2].required" = false
"paths./elements/searchbyattribute/{searchId}.get.parameters[2].type" = "string"
"paths./elements/searchbyattribute/{searchId}.get.parameters[3].description" = "The maximum number of objects to be returned. The default is 1000."
"paths./elements/searchbyattribute/{searchId}.get.parameters[3].in" = "query"
"paths./elements/searchbyattribute/{searchId}.get.parameters[3].name" = "maxCount"
"paths./elements/searchbyattribute/{searchId}.get.parameters[3].required" = false
"paths./elements/searchbyattribute/{searchId}.get.parameters[3].type" = "integer"
"paths./elements/searchbyattribute/{searchId}.get.parameters[4].description" = "The name query string used for finding objects. The default is no filter."
"paths./elements/searchbyattribute/{searchId}.get.parameters[4].in" = "query"
"paths./elements/searchbyattribute/{searchId}.get.parameters[4].name" = "nameFilter"
"paths./elements/searchbyattribute/{searchId}.get.parameters[4].required" = false
"paths./elements/searchbyattribute/{searchId}.get.parameters[4].type" = "string"
"paths./elements/searchbyattribute/{searchId}.get.parameters[5].description" = "Specifies if the search should include objects nested further than the immediate children of the searchRoot. The default is 'false'."
"paths./elements/searchbyattribute/{searchId}.get.parameters[5].in" = "query"
"paths./elements/searchbyattribute/{searchId}.get.parameters[5].name" = "searchFullHierarchy"
"paths./elements/searchbyattribute/{searchId}.get.parameters[5].required" = false
"paths./elements/searchbyattribute/{searchId}.get.parameters[5].type" = "boolean"
"paths./elements/searchbyattribute/{searchId}.get.parameters[6].description" = "List of fields to be returned in the response, separated by semicolons (;). If this parameter is not specified, all available fields will be returned."
"paths./elements/searchbyattribute/{searchId}.get.parameters[6].in" = "query"
"paths./elements/searchbyattribute/{searchId}.get.parameters[6].name" = "selectedFields"
"paths./elements/searchbyattribute/{searchId}.get.parameters[6].required" = false
"paths./elements/searchbyattribute/{searchId}.get.parameters[6].type" = "string"
"paths./elements/searchbyattribute/{searchId}.get.parameters[7].description" = "The field or property of the object used to sort the returned collection. The default is 'Name'."
"paths./elements/searchbyattribute/{searchId}.get.parameters[7].in" = "query"
"paths./elements/searchbyattribute/{searchId}.get.parameters[7].name" = "sortField"
"paths./elements/searchbyattribute/{searchId}.get.parameters[7].required" = false
"paths./elements/searchbyattribute/{searchId}.get.parameters[7].type" = "string"
"paths./elements/searchbyattribute/{searchId}.get.parameters[8].description" = "The order that the returned collection is sorted. The default is 'Ascending'."
"paths./elements/searchbyattribute/{searchId}.get.parameters[8].in" = "query"
"paths./elements/searchbyattribute/{searchId}.get.parameters[8].name" = "sortOrder"
"paths./elements/searchbyattribute/{searchId}.get.parameters[8].required" = false
"paths./elements/searchbyattribute/{searchId}.get.parameters[8].type" = "string"
"paths./elements/searchbyattribute/{searchId}.get.parameters[9].description" = "The starting index (zero based) of the items to be returned. The default is 0."
"paths./elements/searchbyattribute/{searchId}.get.parameters[9].in" = "query"
"paths./elements/searchbyattribute/{searchId}.get.parameters[9].name" = "startIndex"
"paths./elements/searchbyattribute/{searchId}.get.parameters[9].required" = false
"paths./elements/searchbyattribute/{searchId}.get.parameters[9].type" = "integer"
"paths./elements/searchbyattribute/{searchId}.get.responses.200.description" = "a list of matching Elements."
"paths./elements/searchbyattribute/{searchId}.get.responses.400.description" = "Invalid search Id or search parameters."
"paths./elements/searchbyattribute/{searchId}.get.responses.400.schema.$ref" = "#/definitions/Errors"
"paths./elements/searchbyattribute/{searchId}.get.summary" = "Execute a \"Search Elements By Attribute Value\" operation."
"paths./elements/searchbyattribute/{searchId}.get.tags.length" = 1
"paths./elements/searchbyattribute/{searchId}.get.tags[0]" = "Element"
"paths./elements/{webId}.delete.consumes.length" = 0
"paths./elements/{webId}.delete.deprecated" = false
"paths./elements/{webId}.delete.operationId" = "Element_Delete"
"paths./elements/{webId}.delete.parameters.length" = 1
"paths./elements/{webId}.delete.parameters[0].description" = "The ID of the element."
"paths./elements/{webId}.delete.parameters[0].in" = "path"
"paths./elements/{webId}.delete.parameters[0].name" = "webId"
"paths./elements/{webId}.delete.parameters[0].required" = true
"paths./elements/{webId}.delete.parameters[0].type" = "string"
"paths./elements/{webId}.delete.responses.204.description" = "The element was deleted."
"paths./elements/{webId}.delete.summary" = "Delete an element."
"paths./elements/{webId}.delete.tags.length" = 1
"paths./elements/{webId}.delete.tags[0]" = "Element"
"paths./elements/{webId}.get.consumes.length" = 0
"paths./elements/{webId}.get.deprecated" = false
"paths./elements/{webId}.get.operationId" = "Element_Get"
"paths./elements/{webId}.get.parameters.length" = 2
"paths./elements/{webId}.get.parameters[0].description" = "The ID of the element."
"paths./elements/{webId}.get.parameters[0].in" = "path"
"paths./elements/{webId}.get.parameters[0].name" = "webId"
"paths./elements/{webId}.get.parameters[0].required" = true
"paths./elements/{webId}.get.parameters[0].type" = "string"
"paths./elements/{webId}.get.parameters[1].description" = "List of fields to be returned in the response, separated by semicolons (;). If this parameter is not specified, all available fields will be returned."
"paths./elements/{webId}.get.parameters[1].in" = "query"
"paths./elements/{webId}.get.parameters[1].name" = "selectedFields"
"paths./elements/{webId}.get.parameters[1].required" = false
"paths./elements/{webId}.get.parameters[1].type" = "string"
"paths./elements/{webId}.get.responses.200.description" = "The specified element."
"paths./elements/{webId}.get.responses.200.schema.$ref" = "#/definitions/Element"
"paths./elements/{webId}.get.summary" = "Retrieve an element."
"paths./elements/{webId}.get.tags.length" = 1
"paths./elements/{webId}.get.tags[0]" = "Element"
"paths./elements/{webId}.patch.consumes.length" = 2
"paths./elements/{webId}.patch.consumes[0]" = "application/json"
"paths./elements/{webId}.patch.consumes[1]" = "text/json"
"paths./elements/{webId}.patch.deprecated" = false
"paths./elements/{webId}.patch.operationId" = "Element_Update"
"paths./elements/{webId}.patch.parameters.length" = 2
"paths./elements/{webId}.patch.parameters[0].description" = "The ID of the element."
"paths./elements/{webId}.patch.parameters[0].in" = "path"
"paths./elements/{webId}.patch.parameters[0].name" = "webId"
"paths./elements/{webId}.patch.parameters[0].required" = true
"paths./elements/{webId}.patch.parameters[0].type" = "string"
"paths./elements/{webId}.patch.parameters[1].description" = "A partial element containing the desired changes."
"paths./elements/{webId}.patch.parameters[1].in" = "body"
"paths./elements/{webId}.patch.parameters[1].name" = "element"
"paths./elements/{webId}.patch.parameters[1].required" = true
"paths./elements/{webId}.patch.parameters[1].schema.$ref" = "#/definitions/Element"
"paths./elements/{webId}.patch.responses.204.description" = "The element was updated."
"paths./elements/{webId}.patch.summary" = "Update an element by replacing items in its definition."
"paths./elements/{webId}.patch.tags.length" = 1
"paths./elements/{webId}.patch.tags[0]" = "Element"
"paths./elements/{webId}/analyses.get.consumes.length" = 0
"paths./elements/{webId}/analyses.get.deprecated" = false
"paths./elements/{webId}/analyses.get.description" = "Users can search for the analyses based on specific search parameters. If no parameters are specified in the search, the default values for each parameter will be used and will return the analyses that match the default search."
"paths./elements/{webId}/analyses.get.operationId" = "Element_GetAnalyses"
"paths./elements/{webId}/analyses.get.parameters.length" = 6
"paths./elements/{webId}/analyses.get.parameters[0].description" = "The ID of the element, which is the Target of the analyses."
"paths./elements/{webId}/analyses.get.parameters[0].in" = "path"
"paths./elements/{webId}/analyses.get.parameters[0].name" = "webId"
"paths./elements/{webId}/analyses.get.parameters[0].required" = true
"paths./elements/{webId}/analyses.get.parameters[0].type" = "string"
"paths./elements/{webId}/analyses.get.parameters[1].description" = "The maximum number of objects to be returned per call (page size). The default is 1000."
"paths./elements/{webId}/analyses.get.parameters[1].in" = "query"
"paths./elements/{webId}/analyses.get.parameters[1].name" = "maxCount"
"paths./elements/{webId}/analyses.get.parameters[1].required" = false
"paths./elements/{webId}/analyses.get.parameters[1].type" = "integer"
"paths./elements/{webId}/analyses.get.parameters[2].description" = "List of fields to be returned in the response, separated by semicolons (;). If this parameter is not specified, all available fields will be returned."
"paths./elements/{webId}/analyses.get.parameters[2].in" = "query"
"paths./elements/{webId}/analyses.get.parameters[2].name" = "selectedFields"
"paths./elements/{webId}/analyses.get.parameters[2].required" = false
"paths./elements/{webId}/analyses.get.parameters[2].type" = "string"
"paths./elements/{webId}/analyses.get.parameters[3].description" = "The field or property of the object used to sort the returned collection. The default is 'Name'."
"paths./elements/{webId}/analyses.get.parameters[3].in" = "query"
"paths./elements/{webId}/analyses.get.parameters[3].name" = "sortField"
"paths./elements/{webId}/analyses.get.parameters[3].required" = false
"paths./elements/{webId}/analyses.get.parameters[3].type" = "string"
"paths./elements/{webId}/analyses.get.parameters[4].description" = "The order that the returned collection is sorted. The default is 'Ascending'."
"paths./elements/{webId}/analyses.get.parameters[4].in" = "query"
"paths./elements/{webId}/analyses.get.parameters[4].name" = "sortOrder"
"paths./elements/{webId}/analyses.get.parameters[4].required" = false
"paths./elements/{webId}/analyses.get.parameters[4].type" = "string"
"paths./elements/{webId}/analyses.get.parameters[5].description" = "The starting index (zero based) of the items to be returned. The default is 0."
"paths./elements/{webId}/analyses.get.parameters[5].in" = "query"
"paths./elements/{webId}/analyses.get.parameters[5].name" = "startIndex"
"paths./elements/{webId}/analyses.get.parameters[5].required" = false
"paths./elements/{webId}/analyses.get.parameters[5].type" = "integer"
"paths./elements/{webId}/analyses.get.responses.200.description" = "A list of analyses matching the specified conditions."
"paths./elements/{webId}/analyses.get.responses.200.schema.$ref" = "#/definitions/Items[Analysis]"
"paths./elements/{webId}/analyses.get.summary" = "Retrieve analyses based on the specified conditions."
"paths./elements/{webId}/analyses.get.tags.length" = 1
"paths./elements/{webId}/analyses.get.tags[0]" = "Element"
"paths./elements/{webId}/analyses.post.consumes.length" = 2
"paths./elements/{webId}/analyses.post.consumes[0]" = "application/json"
"paths./elements/{webId}/analyses.post.consumes[1]" = "text/json"
"paths./elements/{webId}/analyses.post.deprecated" = false
"paths./elements/{webId}/analyses.post.operationId" = "Element_CreateAnalysis"
"paths./elements/{webId}/analyses.post.parameters.length" = 2
"paths./elements/{webId}/analyses.post.parameters[0].description" = "The ID of the element on which to create the Analysis."
"paths./elements/{webId}/analyses.post.parameters[0].in" = "path"
"paths./elements/{webId}/analyses.post.parameters[0].name" = "webId"
"paths./elements/{webId}/analyses.post.parameters[0].required" = true
"paths./elements/{webId}/analyses.post.parameters[0].type" = "string"
"paths./elements/{webId}/analyses.post.parameters[1].description" = "The new Analysis definition."
"paths./elements/{webId}/analyses.post.parameters[1].in" = "body"
"paths./elements/{webId}/analyses.post.parameters[1].name" = "analysis"
"paths./elements/{webId}/analyses.post.parameters[1].required" = true
"paths./elements/{webId}/analyses.post.parameters[1].schema.$ref" = "#/definitions/Analysis"
"paths./elements/{webId}/analyses.post.responses.201.description" = "The Analysis was created. The response's Location header is a link to the Analysis."
"paths./elements/{webId}/analyses.post.summary" = "Create an Analysis."
"paths./elements/{webId}/analyses.post.tags.length" = 1
"paths./elements/{webId}/analyses.post.tags[0]" = "Element"
"paths./elements/{webId}/attributes.get.consumes.length" = 0
"paths./elements/{webId}/attributes.get.deprecated" = false
"paths./elements/{webId}/attributes.get.operationId" = "Element_GetAttributes"
"paths./elements/{webId}/attributes.get.parameters.length" = 13
"paths./elements/{webId}/attributes.get.parameters[0].description" = "The ID of the element."
"paths./elements/{webId}/attributes.get.parameters[0].in" = "path"
"paths./elements/{webId}/attributes.get.parameters[0].name" = "webId"
"paths./elements/{webId}/attributes.get.parameters[0].required" = true
"paths./elements/{webId}/attributes.get.parameters[0].type" = "string"
"paths./elements/{webId}/attributes.get.parameters[10].description" = "The starting index (zero based) of the items to be returned. The default is 0."
"paths./elements/{webId}/attributes.get.parameters[10].in" = "query"
"paths./elements/{webId}/attributes.get.parameters[10].name" = "startIndex"
"paths./elements/{webId}/attributes.get.parameters[10].required" = false
"paths./elements/{webId}/attributes.get.parameters[10].type" = "integer"
"paths./elements/{webId}/attributes.get.parameters[11].description" = "Specify that returned attributes must be members of this template. The default is no template filter."
"paths./elements/{webId}/attributes.get.parameters[11].in" = "query"
"paths./elements/{webId}/attributes.get.parameters[11].name" = "templateName"
"paths./elements/{webId}/attributes.get.parameters[11].required" = false
"paths./elements/{webId}/attributes.get.parameters[11].type" = "string"
"paths./elements/{webId}/attributes.get.parameters[12].description" = "Specify that returned attributes' value type must be the given value type. The default is no value type filter."
"paths./elements/{webId}/attributes.get.parameters[12].in" = "query"
"paths./elements/{webId}/attributes.get.parameters[12].name" = "valueType"
"paths./elements/{webId}/attributes.get.parameters[12].required" = false
"paths./elements/{webId}/attributes.get.parameters[12].type" = "string"
"paths./elements/{webId}/attributes.get.parameters[1].description" = "Specify that returned attributes must have this category. The default is no category filter."
"paths./elements/{webId}/attributes.get.parameters[1].in" = "query"
"paths./elements/{webId}/attributes.get.parameters[1].name" = "categoryName"
"paths./elements/{webId}/attributes.get.parameters[1].required" = false
"paths./elements/{webId}/attributes.get.parameters[1].type" = "string"
"paths./elements/{webId}/attributes.get.parameters[2].description" = "The maximum number of objects to be returned per call (page size). The default is 1000."
"paths./elements/{webId}/attributes.get.parameters[2].in" = "query"
"paths./elements/{webId}/attributes.get.parameters[2].name" = "maxCount"
"paths./elements/{webId}/attributes.get.parameters[2].required" = false
"paths./elements/{webId}/attributes.get.parameters[2].type" = "integer"
"paths./elements/{webId}/attributes.get.parameters[3].description" = "The name query string used for finding attributes. The default is no filter."
"paths./elements/{webId}/attributes.get.parameters[3].in" = "query"
"paths./elements/{webId}/attributes.get.parameters[3].name" = "nameFilter"
"paths./elements/{webId}/attributes.get.parameters[3].required" = false
"paths./elements/{webId}/attributes.get.parameters[3].type" = "string"
"paths./elements/{webId}/attributes.get.parameters[4].description" = "Specifies if the search should include attributes nested further than the immediate attributes of the searchRoot. The default is 'false'."
"paths./elements/{webId}/attributes.get.parameters[4].in" = "query"
"paths./elements/{webId}/attributes.get.parameters[4].name" = "searchFullHierarchy"
"paths./elements/{webId}/attributes.get.parameters[4].required" = false
"paths./elements/{webId}/attributes.get.parameters[4].type" = "boolean"
"paths./elements/{webId}/attributes.get.parameters[5].description" = "List of fields to be returned in the response, separated by semicolons (;). If this parameter is not specified, all available fields will be returned."
"paths./elements/{webId}/attributes.get.parameters[5].in" = "query"
"paths./elements/{webId}/attributes.get.parameters[5].name" = "selectedFields"
"paths./elements/{webId}/attributes.get.parameters[5].required" = false
"paths./elements/{webId}/attributes.get.parameters[5].type" = "string"
"paths./elements/{webId}/attributes.get.parameters[6].description" = "Specified if the search should include attributes with the Excluded property set. The default is 'false'."
"paths./elements/{webId}/attributes.get.parameters[6].in" = "query"
"paths./elements/{webId}/attributes.get.parameters[6].name" = "showExcluded"
"paths./elements/{webId}/attributes.get.parameters[6].required" = false
"paths./elements/{webId}/attributes.get.parameters[6].type" = "boolean"
"paths./elements/{webId}/attributes.get.parameters[7].description" = "Specified if the search should include attributes with the Hidden property set. The default is 'false'."
"paths./elements/{webId}/attributes.get.parameters[7].in" = "query"
"paths./elements/{webId}/attributes.get.parameters[7].name" = "showHidden"
"paths./elements/{webId}/attributes.get.parameters[7].required" = false
"paths./elements/{webId}/attributes.get.parameters[7].type" = "boolean"
"paths./elements/{webId}/attributes.get.parameters[8].description" = "The field or property of the object used to sort the returned collection. The default is 'Name'."
"paths./elements/{webId}/attributes.get.parameters[8].in" = "query"
"paths./elements/{webId}/attributes.get.parameters[8].name" = "sortField"
"paths./elements/{webId}/attributes.get.parameters[8].required" = false
"paths./elements/{webId}/attributes.get.parameters[8].type" = "string"
"paths./elements/{webId}/attributes.get.parameters[9].description" = "The order that the returned collection is sorted. The default is 'Ascending'."
"paths./elements/{webId}/attributes.get.parameters[9].in" = "query"
"paths./elements/{webId}/attributes.get.parameters[9].name" = "sortOrder"
"paths./elements/{webId}/attributes.get.parameters[9].required" = false
"paths./elements/{webId}/attributes.get.parameters[9].type" = "string"
"paths./elements/{webId}/attributes.get.responses.200.description" = "A list of child attributes."
"paths./elements/{webId}/attributes.get.responses.200.schema.$ref" = "#/definitions/Items[Attribute]"
"paths./elements/{webId}/attributes.get.summary" = "Get the attributes of the specified element."
"paths./elements/{webId}/attributes.get.tags.length" = 1
"paths./elements/{webId}/attributes.get.tags[0]" = "Element"
"paths./elements/{webId}/attributes.post.consumes.length" = 2
"paths./elements/{webId}/attributes.post.consumes[0]" = "application/json"
"paths./elements/{webId}/attributes.post.consumes[1]" = "text/json"
"paths./elements/{webId}/attributes.post.deprecated" = false
"paths./elements/{webId}/attributes.post.operationId" = "Element_CreateAttribute"
"paths./elements/{webId}/attributes.post.parameters.length" = 2
"paths./elements/{webId}/attributes.post.parameters[0].description" = "The ID of the element on which to create the attribute."
"paths./elements/{webId}/attributes.post.parameters[0].in" = "path"
"paths./elements/{webId}/attributes.post.parameters[0].name" = "webId"
"paths./elements/{webId}/attributes.post.parameters[0].required" = true
"paths./elements/{webId}/attributes.post.parameters[0].type" = "string"
"paths./elements/{webId}/attributes.post.parameters[1].description" = "The definition of the new attribute."
"paths./elements/{webId}/attributes.post.parameters[1].in" = "body"
"paths./elements/{webId}/attributes.post.parameters[1].name" = "attribute"
"paths./elements/{webId}/attributes.post.parameters[1].required" = true
"paths./elements/{webId}/attributes.post.parameters[1].schema.$ref" = "#/definitions/Attribute"
"paths./elements/{webId}/attributes.post.responses.201.description" = "The attribute was created. The response's Location header is a link to the created attribute."
"paths./elements/{webId}/attributes.post.summary" = "Create a new attribute of the specified element."
"paths./elements/{webId}/attributes.post.tags.length" = 1
"paths./elements/{webId}/attributes.post.tags[0]" = "Element"
"paths./elements/{webId}/categories.get.consumes.length" = 0
"paths./elements/{webId}/categories.get.deprecated" = false
"paths./elements/{webId}/categories.get.operationId" = "Element_GetCategories"
"paths./elements/{webId}/categories.get.parameters.length" = 2
"paths./elements/{webId}/categories.get.parameters[0].description" = "The ID of the element."
"paths./elements/{webId}/categories.get.parameters[0].in" = "path"
"paths./elements/{webId}/categories.get.parameters[0].name" = "webId"
"paths./elements/{webId}/categories.get.parameters[0].required" = true
"paths./elements/{webId}/categories.get.parameters[0].type" = "string"
"paths./elements/{webId}/categories.get.parameters[1].description" = "List of fields to be returned in the response, separated by semicolons (;). If this parameter is not specified, all available fields will be returned."
"paths./elements/{webId}/categories.get.parameters[1].in" = "query"
"paths./elements/{webId}/categories.get.parameters[1].name" = "selectedFields"
"paths./elements/{webId}/categories.get.parameters[1].required" = false
"paths./elements/{webId}/categories.get.parameters[1].type" = "string"
"paths./elements/{webId}/categories.get.responses.200.description" = "A list of categories."
"paths./elements/{webId}/categories.get.responses.200.schema.$ref" = "#/definitions/Items[ElementCategory]"
"paths./elements/{webId}/categories.get.summary" = "Get an element's categories."
"paths./elements/{webId}/categories.get.tags.length" = 1
"paths./elements/{webId}/categories.get.tags[0]" = "Element"
"paths./elements/{webId}/config.post.consumes.length" = 2
"paths./elements/{webId}/config.post.consumes[0]" = "application/json"
"paths./elements/{webId}/config.post.consumes[1]" = "text/json"
"paths./elements/{webId}/config.post.deprecated" = false
"paths./elements/{webId}/config.post.operationId" = "Element_CreateConfig"
"paths./elements/{webId}/config.post.parameters.length" = 2
"paths./elements/{webId}/config.post.parameters[0].description" = "The ID of the element."
"paths./elements/{webId}/config.post.parameters[0].in" = "path"
"paths./elements/{webId}/config.post.parameters[0].name" = "webId"
"paths./elements/{webId}/config.post.parameters[0].required" = true
"paths./elements/{webId}/config.post.parameters[0].type" = "string"
"paths./elements/{webId}/config.post.parameters[1].description" = "If true, includes the child elements of the specified element."
"paths./elements/{webId}/config.post.parameters[1].in" = "query"
"paths./elements/{webId}/config.post.parameters[1].name" = "includeChildElements"
"paths./elements/{webId}/config.post.parameters[1].required" = false
"paths./elements/{webId}/config.post.parameters[1].type" = "boolean"
"paths./elements/{webId}/config.post.responses.200.description" = "Process log of operations. Operations completed with no errors."
"paths./elements/{webId}/config.post.responses.207.description" = "Process log of operations. Operations completed with errors."
"paths./elements/{webId}/config.post.summary" = "Executes the create configuration function of the data references found within the attributes of the element, and optionally, its children."
"paths./elements/{webId}/config.post.tags.length" = 1
"paths./elements/{webId}/config.post.tags[0]" = "Element"
"paths./elements/{webId}/elementattributes.get.consumes.length" = 0
"paths./elements/{webId}/elementattributes.get.deprecated" = false
"paths./elements/{webId}/elementattributes.get.operationId" = "Element_FindElementAttributes"
"paths./elements/{webId}/elementattributes.get.parameters.length" = 16
"paths./elements/{webId}/elementattributes.get.parameters[0].description" = "The ID of the element to use as the root of the search."
"paths./elements/{webId}/elementattributes.get.parameters[0].in" = "path"
"paths./elements/{webId}/elementattributes.get.parameters[0].name" = "webId"
"paths./elements/{webId}/elementattributes.get.parameters[0].required" = true
"paths./elements/{webId}/elementattributes.get.parameters[0].type" = "string"
"paths./elements/{webId}/elementattributes.get.parameters[10].description" = "The maximum number of objects to be returned (the page size). The default is 1000."
"paths./elements/{webId}/elementattributes.get.parameters[10].in" = "query"
"paths./elements/{webId}/elementattributes.get.parameters[10].name" = "maxCount"
"paths./elements/{webId}/elementattributes.get.parameters[10].required" = false
"paths./elements/{webId}/elementattributes.get.parameters[10].type" = "integer"
"paths./elements/{webId}/elementattributes.get.parameters[11].description" = "Specifies if the search should include objects nested further than immediate children of the given resource. The default is 'false'."
"paths./elements/{webId}/elementattributes.get.parameters[11].in" = "query"
"paths./elements/{webId}/elementattributes.get.parameters[11].name" = "searchFullHierarchy"
"paths./elements/{webId}/elementattributes.get.parameters[11].required" = false
"paths./elements/{webId}/elementattributes.get.parameters[11].type" = "boolean"
"paths./elements/{webId}/elementattributes.get.parameters[12].description" = "List of fields to be returned in the response, separated by semicolons (;). If this parameter is not specified, all available fields will be returned."
"paths./elements/{webId}/elementattributes.get.parameters[12].in" = "query"
"paths./elements/{webId}/elementattributes.get.parameters[12].name" = "selectedFields"
"paths./elements/{webId}/elementattributes.get.parameters[12].required" = false
"paths./elements/{webId}/elementattributes.get.parameters[12].type" = "string"
"paths./elements/{webId}/elementattributes.get.parameters[13].description" = "The field or property of the object used to sort the returned collection. The default is 'Name'."
"paths./elements/{webId}/elementattributes.get.parameters[13].in" = "query"
"paths./elements/{webId}/elementattributes.get.parameters[13].name" = "sortField"
"paths./elements/{webId}/elementattributes.get.parameters[13].required" = false
"paths./elements/{webId}/elementattributes.get.parameters[13].type" = "string"
"paths./elements/{webId}/elementattributes.get.parameters[14].description" = "The order that the returned collection is sorted. The default is 'Ascending'."
"paths./elements/{webId}/elementattributes.get.parameters[14].in" = "query"
"paths./elements/{webId}/elementattributes.get.parameters[14].name" = "sortOrder"
"paths./elements/{webId}/elementattributes.get.parameters[14].required" = false
"paths./elements/{webId}/elementattributes.get.parameters[14].type" = "string"
"paths./elements/{webId}/elementattributes.get.parameters[15].description" = "The starting index (zero based) of the items to be returned. The default is 0."
"paths./elements/{webId}/elementattributes.get.parameters[15].in" = "query"
"paths./elements/{webId}/elementattributes.get.parameters[15].name" = "startIndex"
"paths./elements/{webId}/elementattributes.get.parameters[15].required" = false
"paths./elements/{webId}/elementattributes.get.parameters[15].type" = "integer"
"paths./elements/{webId}/elementattributes.get.parameters[1].description" = "Specify that returned attributes must have this category. The default is no filter."
"paths./elements/{webId}/elementattributes.get.parameters[1].in" = "query"
"paths./elements/{webId}/elementattributes.get.parameters[1].name" = "attributeCategory"
"paths./elements/{webId}/elementattributes.get.parameters[1].required" = false
"paths./elements/{webId}/elementattributes.get.parameters[1].type" = "string"
"paths./elements/{webId}/elementattributes.get.parameters[2].description" = "The attribute description filter string used for finding objects. Only the first 440 characters of the description will be searched. For Asset Servers older than 2.7, a 400 status code (Bad Request) will be returned if this parameter is specified. The default is no filter."
"paths./elements/{webId}/elementattributes.get.parameters[2].in" = "query"
"paths./elements/{webId}/elementattributes.get.parameters[2].name" = "attributeDescriptionFilter"
"paths./elements/{webId}/elementattributes.get.parameters[2].required" = false
"paths./elements/{webId}/elementattributes.get.parameters[2].type" = "string"
"paths./elements/{webId}/elementattributes.get.parameters[3].description" = "The attribute name filter string used for finding objects. The default is no filter."
"paths./elements/{webId}/elementattributes.get.parameters[3].in" = "query"
"paths./elements/{webId}/elementattributes.get.parameters[3].name" = "attributeNameFilter"
"paths./elements/{webId}/elementattributes.get.parameters[3].required" = false
"paths./elements/{webId}/elementattributes.get.parameters[3].type" = "string"
"paths./elements/{webId}/elementattributes.get.parameters[4].description" = "Specify that returned attributes' value type must be this value type. The default is no filter."
"paths./elements/{webId}/elementattributes.get.parameters[4].in" = "query"
"paths./elements/{webId}/elementattributes.get.parameters[4].name" = "attributeType"
"paths./elements/{webId}/elementattributes.get.parameters[4].required" = false
"paths./elements/{webId}/elementattributes.get.parameters[4].type" = "string"
"paths./elements/{webId}/elementattributes.get.parameters[5].description" = "Specify that the owner of the returned attributes must have this category. The default is no filter."
"paths./elements/{webId}/elementattributes.get.parameters[5].in" = "query"
"paths./elements/{webId}/elementattributes.get.parameters[5].name" = "elementCategory"
"paths./elements/{webId}/elementattributes.get.parameters[5].required" = false
"paths./elements/{webId}/elementattributes.get.parameters[5].type" = "string"
"paths./elements/{webId}/elementattributes.get.parameters[6].description" = "The element description filter string used for finding objects. Only the first 440 characters of the description will be searched. For Asset Servers older than 2.7, a 400 status code (Bad Request) will be returned if this parameter is specified. The default is no filter."
"paths./elements/{webId}/elementattributes.get.parameters[6].in" = "query"
"paths./elements/{webId}/elementattributes.get.parameters[6].name" = "elementDescriptionFilter"
"paths./elements/{webId}/elementattributes.get.parameters[6].required" = false
"paths./elements/{webId}/elementattributes.get.parameters[6].type" = "string"
"paths./elements/{webId}/elementattributes.get.parameters[7].description" = "The element name filter string used for finding objects. The default is no filter."
"paths./elements/{webId}/elementattributes.get.parameters[7].in" = "query"
"paths./elements/{webId}/elementattributes.get.parameters[7].name" = "elementNameFilter"
"paths./elements/{webId}/elementattributes.get.parameters[7].required" = false
"paths./elements/{webId}/elementattributes.get.parameters[7].type" = "string"
"paths./elements/{webId}/elementattributes.get.parameters[8].description" = "Specify that the owner of the returned attributes must have this template or a template derived from this template. The default is no filter."
"paths./elements/{webId}/elementattributes.get.parameters[8].in" = "query"
"paths./elements/{webId}/elementattributes.get.parameters[8].name" = "elementTemplate"
"paths./elements/{webId}/elementattributes.get.parameters[8].required" = false
"paths./elements/{webId}/elementattributes.get.parameters[8].type" = "string"
"paths./elements/{webId}/elementattributes.get.parameters[9].description" = "Specify that the element of the returned attributes must have this AFElementType. The default is no filter."
"paths./elements/{webId}/elementattributes.get.parameters[9].in" = "query"
"paths./elements/{webId}/elementattributes.get.parameters[9].name" = "elementType"
"paths./elements/{webId}/elementattributes.get.parameters[9].required" = false
"paths./elements/{webId}/elementattributes.get.parameters[9].type" = "string"
"paths./elements/{webId}/elementattributes.get.responses.200.description" = "a list of matching attributes."
"paths./elements/{webId}/elementattributes.get.responses.200.schema.$ref" = "#/definitions/Items[Attribute]"
"paths./elements/{webId}/elementattributes.get.summary" = "Retrieves a list of element attributes matching the specified filters from the specified element."
"paths./elements/{webId}/elementattributes.get.tags.length" = 1
"paths./elements/{webId}/elementattributes.get.tags[0]" = "Element"
"paths./elements/{webId}/elements.get.consumes.length" = 0
"paths./elements/{webId}/elements.get.deprecated" = false
"paths./elements/{webId}/elements.get.description" = "Users can search for the elements based on specific search parameters. If no parameters are specified in the search, the default values for each parameter will be used and will return the elements that match the default search."
"paths./elements/{webId}/elements.get.operationId" = "Element_GetElements"
"paths./elements/{webId}/elements.get.parameters.length" = 12
"paths./elements/{webId}/elements.get.parameters[0].description" = "The ID of the element to use as the root of the search."
"paths./elements/{webId}/elements.get.parameters[0].in" = "path"
"paths./elements/{webId}/elements.get.parameters[0].name" = "webId"
"paths./elements/{webId}/elements.get.parameters[0].required" = true
"paths./elements/{webId}/elements.get.parameters[0].type" = "string"
"paths./elements/{webId}/elements.get.parameters[10].description" = "The starting index (zero based) of the items to be returned. The default is 0."
"paths./elements/{webId}/elements.get.parameters[10].in" = "query"
"paths./elements/{webId}/elements.get.parameters[10].name" = "startIndex"
"paths./elements/{webId}/elements.get.parameters[10].required" = false
"paths./elements/{webId}/elements.get.parameters[10].type" = "integer"
"paths./elements/{webId}/elements.get.parameters[11].description" = "Specify that returned elements must have this template or a template derived from this template. The default is no template filter."
"paths./elements/{webId}/elements.get.parameters[11].in" = "query"
"paths./elements/{webId}/elements.get.parameters[11].name" = "templateName"
"paths./elements/{webId}/elements.get.parameters[11].required" = false
"paths./elements/{webId}/elements.get.parameters[11].type" = "string"
"paths./elements/{webId}/elements.get.parameters[1].description" = "Specify that returned elements must have this category. The default is no category filter."
"paths./elements/{webId}/elements.get.parameters[1].in" = "query"
"paths./elements/{webId}/elements.get.parameters[1].name" = "categoryName"
"paths./elements/{webId}/elements.get.parameters[1].required" = false
"paths./elements/{webId}/elements.get.parameters[1].type" = "string"
"paths./elements/{webId}/elements.get.parameters[2].description" = "Specify that returned elements must have this description. The default is no description filter."
"paths./elements/{webId}/elements.get.parameters[2].in" = "query"
"paths./elements/{webId}/elements.get.parameters[2].name" = "descriptionFilter"
"paths./elements/{webId}/elements.get.parameters[2].required" = false
"paths./elements/{webId}/elements.get.parameters[2].type" = "string"
"paths./elements/{webId}/elements.get.parameters[3].description" = "Specify that returned elements must have this type. The default type is 'Any'."
"paths./elements/{webId}/elements.get.parameters[3].in" = "query"
"paths./elements/{webId}/elements.get.parameters[3].name" = "elementType"
"paths./elements/{webId}/elements.get.parameters[3].required" = false
"paths./elements/{webId}/elements.get.parameters[3].type" = "string"
"paths./elements/{webId}/elements.get.parameters[4].description" = "The maximum number of objects to be returned per call (page size). The default is 1000."
"paths./elements/{webId}/elements.get.parameters[4].in" = "query"
"paths./elements/{webId}/elements.get.parameters[4].name" = "maxCount"
"paths./elements/{webId}/elements.get.parameters[4].required" = false
"paths./elements/{webId}/elements.get.parameters[4].type" = "integer"
"paths./elements/{webId}/elements.get.parameters[5].description" = "The name query string used for finding objects. The default is no filter."
"paths./elements/{webId}/elements.get.parameters[5].in" = "query"
"paths./elements/{webId}/elements.get.parameters[5].name" = "nameFilter"
"paths./elements/{webId}/elements.get.parameters[5].required" = false
"paths./elements/{webId}/elements.get.parameters[5].type" = "string"
"paths./elements/{webId}/elements.get.parameters[6].description" = "Specifies if the search should include objects nested further than the immediate children of the searchRoot. The default is 'false'."
"paths./elements/{webId}/elements.get.parameters[6].in" = "query"
"paths./elements/{webId}/elements.get.parameters[6].name" = "searchFullHierarchy"
"paths./elements/{webId}/elements.get.parameters[6].required" = false
"paths./elements/{webId}/elements.get.parameters[6].type" = "boolean"
"paths./elements/{webId}/elements.get.parameters[7].description" = "List of fields to be returned in the response, separated by semicolons (;). If this parameter is not specified, all available fields will be returned."
"paths./elements/{webId}/elements.get.parameters[7].in" = "query"
"paths./elements/{webId}/elements.get.parameters[7].name" = "selectedFields"
"paths./elements/{webId}/elements.get.parameters[7].required" = false
"paths./elements/{webId}/elements.get.parameters[7].type" = "string"
"paths./elements/{webId}/elements.get.parameters[8].description" = "The field or property of the object used to sort the returned collection. The default is 'Name'."
"paths./elements/{webId}/elements.get.parameters[8].in" = "query"
"paths./elements/{webId}/elements.get.parameters[8].name" = "sortField"
"paths./elements/{webId}/elements.get.parameters[8].required" = false
"paths./elements/{webId}/elements.get.parameters[8].type" = "string"
"paths./elements/{webId}/elements.get.parameters[9].description" = "The order that the returned collection is sorted. The default is 'Ascending'."
"paths./elements/{webId}/elements.get.parameters[9].in" = "query"
"paths./elements/{webId}/elements.get.parameters[9].name" = "sortOrder"
"paths./elements/{webId}/elements.get.parameters[9].required" = false
"paths./elements/{webId}/elements.get.parameters[9].type" = "string"
"paths./elements/{webId}/elements.get.responses.200.description" = "A list of elements matching the specified conditions."
"paths./elements/{webId}/elements.get.responses.200.schema.$ref" = "#/definitions/Items[Element]"
"paths./elements/{webId}/elements.get.summary" = "Retrieve elements based on the specified conditions. By default, this method selects immediate children of the specified element."
"paths./elements/{webId}/elements.get.tags.length" = 1
"paths./elements/{webId}/elements.get.tags[0]" = "Element"
"paths./elements/{webId}/elements.post.consumes.length" = 2
"paths./elements/{webId}/elements.post.consumes[0]" = "application/json"
"paths./elements/{webId}/elements.post.consumes[1]" = "text/json"
"paths./elements/{webId}/elements.post.deprecated" = false
"paths./elements/{webId}/elements.post.operationId" = "Element_CreateElement"
"paths./elements/{webId}/elements.post.parameters.length" = 2
"paths./elements/{webId}/elements.post.parameters[0].description" = "The ID of the parent element on which to create the element."
"paths./elements/{webId}/elements.post.parameters[0].in" = "path"
"paths./elements/{webId}/elements.post.parameters[0].name" = "webId"
"paths./elements/{webId}/elements.post.parameters[0].required" = true
"paths./elements/{webId}/elements.post.parameters[0].type" = "string"
"paths./elements/{webId}/elements.post.parameters[1].description" = "The new element definition."
"paths./elements/{webId}/elements.post.parameters[1].in" = "body"
"paths./elements/{webId}/elements.post.parameters[1].name" = "element"
"paths./elements/{webId}/elements.post.parameters[1].required" = true
"paths./elements/{webId}/elements.post.parameters[1].schema.$ref" = "#/definitions/Element"
"paths./elements/{webId}/elements.post.responses.201.description" = "The element was created. The response's Location header is a link to the element."
"paths./elements/{webId}/elements.post.summary" = "Create a child element."
"paths./elements/{webId}/elements.post.tags.length" = 1
"paths./elements/{webId}/elements.post.tags[0]" = "Element"
"paths./elements/{webId}/eventframes.get.consumes.length" = 0
"paths./elements/{webId}/eventframes.get.deprecated" = false
"paths./elements/{webId}/eventframes.get.operationId" = "Element_GetEventFrames"
"paths./elements/{webId}/eventframes.get.parameters.length" = 15
"paths./elements/{webId}/eventframes.get.parameters[0].description" = "The ID of the element whose related event frames are sought."
"paths./elements/{webId}/eventframes.get.parameters[0].in" = "path"
"paths./elements/{webId}/eventframes.get.parameters[0].name" = "webId"
"paths./elements/{webId}/eventframes.get.parameters[0].required" = true
"paths./elements/{webId}/eventframes.get.parameters[0].type" = "string"
"paths./elements/{webId}/eventframes.get.parameters[10].description" = "The field or property of the object used to sort the returned collection. The default is 'Name' if searchMode is not one of the 'Backward*' or 'Forward*' values."
"paths./elements/{webId}/eventframes.get.parameters[10].in" = "query"
"paths./elements/{webId}/eventframes.get.parameters[10].name" = "sortField"
"paths./elements/{webId}/eventframes.get.parameters[10].required" = false
"paths./elements/{webId}/eventframes.get.parameters[10].type" = "string"
"paths./elements/{webId}/eventframes.get.parameters[11].description" = "The order that the returned collection is sorted. The default is 'Ascending' if searchMode is not one of the 'Backward*' or 'Forward*' values."
"paths./elements/{webId}/eventframes.get.parameters[11].in" = "query"
"paths./elements/{webId}/eventframes.get.parameters[11].name" = "sortOrder"
"paths./elements/{webId}/eventframes.get.parameters[11].required" = false
"paths./elements/{webId}/eventframes.get.parameters[11].type" = "string"
"paths./elements/{webId}/eventframes.get.parameters[12].description" = "The starting index (zero based) of the items to be returned. The default is 0."
"paths./elements/{webId}/eventframes.get.parameters[12].in" = "query"
"paths./elements/{webId}/eventframes.get.parameters[12].name" = "startIndex"
"paths./elements/{webId}/eventframes.get.parameters[12].required" = false
"paths./elements/{webId}/eventframes.get.parameters[12].type" = "integer"
"paths./elements/{webId}/eventframes.get.parameters[13].description" = "The starting time for the search. startTime must be less than or equal to the endTime. The searchMode parameter will control whether the comparison will be performed against the event frame's startTime or endTime. The default is '*-8h'."
"paths./elements/{webId}/eventframes.get.parameters[13].in" = "query"
"paths./elements/{webId}/eventframes.get.parameters[13].name" = "startTime"
"paths./elements/{webId}/eventframes.get.parameters[13].required" = false
"paths./elements/{webId}/eventframes.get.parameters[13].type" = "string"
"paths./elements/{webId}/eventframes.get.parameters[14].description" = "Specify that returned event frames must have this template or a template derived from this template. The default is no template filter. Specify this parameter by name."
"paths./elements/{webId}/eventframes.get.parameters[14].in" = "query"
"paths./elements/{webId}/eventframes.get.parameters[14].name" = "templateName"
"paths./elements/{webId}/eventframes.get.parameters[14].required" = false
"paths./elements/{webId}/eventframes.get.parameters[14].type" = "string"
"paths./elements/{webId}/eventframes.get.parameters[1].description" = "Specify the returned event frames' canBeAcknowledged property. The default is no canBeAcknowledged filter."
"paths./elements/{webId}/eventframes.get.parameters[1].in" = "query"
"paths./elements/{webId}/eventframes.get.parameters[1].name" = "canBeAcknowledged"
"paths./elements/{webId}/eventframes.get.parameters[1].required" = false
"paths./elements/{webId}/eventframes.get.parameters[1].type" = "boolean"
"paths./elements/{webId}/eventframes.get.parameters[2].description" = "Specify that returned event frames must have this category. The default is no category filter."
"paths./elements/{webId}/eventframes.get.parameters[2].in" = "query"
"paths./elements/{webId}/eventframes.get.parameters[2].name" = "categoryName"
"paths./elements/{webId}/eventframes.get.parameters[2].required" = false
"paths./elements/{webId}/eventframes.get.parameters[2].type" = "string"
"paths./elements/{webId}/eventframes.get.parameters[3].description" = "The ending time for the search. The endTime must be greater than or equal to the startTime. The searchMode parameter will control whether the comparison will be performed against the event frame's startTime or endTime. The default is '*' if searchMode is not one of the 'Backward*' or 'Forward*' values."
"paths./elements/{webId}/eventframes.get.parameters[3].in" = "query"
"paths./elements/{webId}/eventframes.get.parameters[3].name" = "endTime"
"paths./elements/{webId}/eventframes.get.parameters[3].required" = false
"paths./elements/{webId}/eventframes.get.parameters[3].type" = "string"
"paths./elements/{webId}/eventframes.get.parameters[4].description" = "Specify the returned event frames' isAcknowledged property. The default no isAcknowledged filter."
"paths./elements/{webId}/eventframes.get.parameters[4].in" = "query"
"paths./elements/{webId}/eventframes.get.parameters[4].name" = "isAcknowledged"
"paths./elements/{webId}/eventframes.get.parameters[4].required" = false
"paths./elements/{webId}/eventframes.get.parameters[4].type" = "boolean"
"paths./elements/{webId}/eventframes.get.parameters[5].description" = "The maximum number of objects to be returned per call (page size). The default is 1000."
"paths./elements/{webId}/eventframes.get.parameters[5].in" = "query"
"paths./elements/{webId}/eventframes.get.parameters[5].name" = "maxCount"
"paths./elements/{webId}/eventframes.get.parameters[5].required" = false
"paths./elements/{webId}/eventframes.get.parameters[5].type" = "integer"
"paths./elements/{webId}/eventframes.get.parameters[6].description" = "The name query string used for finding event frames. The default is no filter."
"paths./elements/{webId}/eventframes.get.parameters[6].in" = "query"
"paths./elements/{webId}/eventframes.get.parameters[6].name" = "nameFilter"
"paths./elements/{webId}/eventframes.get.parameters[6].required" = false
"paths./elements/{webId}/eventframes.get.parameters[6].type" = "string"
"paths./elements/{webId}/eventframes.get.parameters[7].description" = "Determines how the startTime and endTime parameters are treated when searching for event frame objects to be included in the returned collection. If this parameter is one of the 'Backward*' or 'Forward*' values, none of endTime, sortField, or sortOrder may be specified. The default is 'Overlapped'."
"paths./elements/{webId}/eventframes.get.parameters[7].in" = "query"
"paths./elements/{webId}/eventframes.get.parameters[7].name" = "searchMode"
"paths./elements/{webId}/eventframes.get.parameters[7].required" = false
"paths./elements/{webId}/eventframes.get.parameters[7].type" = "string"
"paths./elements/{webId}/eventframes.get.parameters[8].description" = "List of fields to be returned in the response, separated by semicolons (;). If this parameter is not specified, all available fields will be returned."
"paths./elements/{webId}/eventframes.get.parameters[8].in" = "query"
"paths./elements/{webId}/eventframes.get.parameters[8].name" = "selectedFields"
"paths./elements/{webId}/eventframes.get.parameters[8].required" = false
"paths./elements/{webId}/eventframes.get.parameters[8].type" = "string"
"paths./elements/{webId}/eventframes.get.parameters[9].collectionFormat" = "multi"
"paths./elements/{webId}/eventframes.get.parameters[9].description" = "Specify that returned event frames must have this severity. Multiple severity values may be specified with multiple instances of the parameter. The default is no severity filter."
"paths./elements/{webId}/eventframes.get.parameters[9].in" = "query"
"paths./elements/{webId}/eventframes.get.parameters[9].items.type" = "string"
"paths./elements/{webId}/eventframes.get.parameters[9].name" = "severity"
"paths./elements/{webId}/eventframes.get.parameters[9].required" = false
"paths./elements/{webId}/eventframes.get.parameters[9].type" = "array"
"paths./elements/{webId}/eventframes.get.responses.200.description" = "A list of event frames matching the specified conditions."
"paths./elements/{webId}/eventframes.get.responses.200.schema.$ref" = "#/definitions/Items[EventFrame]"
"paths./elements/{webId}/eventframes.get.summary" = "Retrieve event frames that reference this element based on the specified conditions. By default, returns all event frames that reference this element with a start time in the past 8 hours."
"paths./elements/{webId}/eventframes.get.tags.length" = 1
"paths./elements/{webId}/eventframes.get.tags[0]" = "Element"
"paths./elements/{webId}/referencedelements.delete.consumes.length" = 0
"paths./elements/{webId}/referencedelements.delete.deprecated" = false
"paths./elements/{webId}/referencedelements.delete.operationId" = "Element_RemoveReferencedElement"
"paths./elements/{webId}/referencedelements.delete.parameters.length" = 2
"paths./elements/{webId}/referencedelements.delete.parameters[0].description" = "The ID of the element which the referenced element will be removed from."
"paths./elements/{webId}/referencedelements.delete.parameters[0].in" = "path"
"paths./elements/{webId}/referencedelements.delete.parameters[0].name" = "webId"
"paths./elements/{webId}/referencedelements.delete.parameters[0].required" = true
"paths./elements/{webId}/referencedelements.delete.parameters[0].type" = "string"
"paths./elements/{webId}/referencedelements.delete.parameters[1].collectionFormat" = "multi"
"paths./elements/{webId}/referencedelements.delete.parameters[1].description" = "The ID of the referenced element. Multiple referenced elements may be specified with multiple instances of the parameter."
"paths./elements/{webId}/referencedelements.delete.parameters[1].in" = "query"
"paths./elements/{webId}/referencedelements.delete.parameters[1].items.type" = "string"
"paths./elements/{webId}/referencedelements.delete.parameters[1].name" = "referencedElementWebId"
"paths./elements/{webId}/referencedelements.delete.parameters[1].required" = true
"paths./elements/{webId}/referencedelements.delete.parameters[1].type" = "array"
"paths./elements/{webId}/referencedelements.delete.responses.204.description" = "The referenced element was successfully removed."
"paths./elements/{webId}/referencedelements.delete.summary" = "Remove a reference to an existing element from the child elements collection."
"paths./elements/{webId}/referencedelements.delete.tags.length" = 1
"paths./elements/{webId}/referencedelements.delete.tags[0]" = "Element"
"paths./elements/{webId}/referencedelements.get.consumes.length" = 0
"paths./elements/{webId}/referencedelements.get.deprecated" = false
"paths./elements/{webId}/referencedelements.get.description" = "Users can search for the referenced elements based on specific search parameters. If no parameters are specified in the search, the default values for each parameter will be used and will return the elements that match the default search."
"paths./elements/{webId}/referencedelements.get.operationId" = "Element_GetReferencedElements"
"paths./elements/{webId}/referencedelements.get.parameters.length" = 11
"paths./elements/{webId}/referencedelements.get.parameters[0].description" = "The ID of the resource to use as the root of the search."
"paths./elements/{webId}/referencedelements.get.parameters[0].in" = "path"
"paths./elements/{webId}/referencedelements.get.parameters[0].name" = "webId"
"paths./elements/{webId}/referencedelements.get.parameters[0].required" = true
"paths./elements/{webId}/referencedelements.get.parameters[0].type" = "string"
"paths./elements/{webId}/referencedelements.get.parameters[10].description" = "Specify that returned elements must have this template or a template derived from this template. The default is no template filter."
"paths./elements/{webId}/referencedelements.get.parameters[10].in" = "query"
"paths./elements/{webId}/referencedelements.get.parameters[10].name" = "templateName"
"paths./elements/{webId}/referencedelements.get.parameters[10].required" = false
"paths./elements/{webId}/referencedelements.get.parameters[10].type" = "string"
"paths./elements/{webId}/referencedelements.get.parameters[1].description" = "Specify that returned elements must have this category. The default is no category filter."
"paths./elements/{webId}/referencedelements.get.parameters[1].in" = "query"
"paths./elements/{webId}/referencedelements.get.parameters[1].name" = "categoryName"
"paths./elements/{webId}/referencedelements.get.parameters[1].required" = false
"paths./elements/{webId}/referencedelements.get.parameters[1].type" = "string"
"paths./elements/{webId}/referencedelements.get.parameters[2].description" = "Specify that returned elements must have this description. The default is no description filter."
"paths./elements/{webId}/referencedelements.get.parameters[2].in" = "query"
"paths./elements/{webId}/referencedelements.get.parameters[2].name" = "descriptionFilter"
"paths./elements/{webId}/referencedelements.get.parameters[2].required" = false
"paths./elements/{webId}/referencedelements.get.parameters[2].type" = "string"
"paths./elements/{webId}/referencedelements.get.parameters[3].description" = "Specify that returned elements must have this type. The default type is 'Any'."
"paths./elements/{webId}/referencedelements.get.parameters[3].in" = "query"
"paths./elements/{webId}/referencedelements.get.parameters[3].name" = "elementType"
"paths./elements/{webId}/referencedelements.get.parameters[3].required" = false
"paths./elements/{webId}/referencedelements.get.parameters[3].type" = "string"
"paths./elements/{webId}/referencedelements.get.parameters[4].description" = "The maximum number of objects to be returned per call (page size). The default is 1000."
"paths./elements/{webId}/referencedelements.get.parameters[4].in" = "query"
"paths./elements/{webId}/referencedelements.get.parameters[4].name" = "maxCount"
"paths./elements/{webId}/referencedelements.get.parameters[4].required" = false
"paths./elements/{webId}/referencedelements.get.parameters[4].type" = "integer"
"paths./elements/{webId}/referencedelements.get.parameters[5].description" = "The name query string used for finding objects. The default is no filter."
"paths./elements/{webId}/referencedelements.get.parameters[5].in" = "query"
"paths./elements/{webId}/referencedelements.get.parameters[5].name" = "nameFilter"
"paths./elements/{webId}/referencedelements.get.parameters[5].required" = false
"paths./elements/{webId}/referencedelements.get.parameters[5].type" = "string"
"paths./elements/{webId}/referencedelements.get.parameters[6].description" = "List of fields to be returned in the response, separated by semicolons (;). If this parameter is not specified, all available fields will be returned."
"paths./elements/{webId}/referencedelements.get.parameters[6].in" = "query"
"paths./elements/{webId}/referencedelements.get.parameters[6].name" = "selectedFields"
"paths./elements/{webId}/referencedelements.get.parameters[6].required" = false
"paths./elements/{webId}/referencedelements.get.parameters[6].type" = "string"
"paths./elements/{webId}/referencedelements.get.parameters[7].description" = "The field or property of the object used to sort the returned collection. The default is 'Name'."
"paths./elements/{webId}/referencedelements.get.parameters[7].in" = "query"
"paths./elements/{webId}/referencedelements.get.parameters[7].name" = "sortField"
"paths./elements/{webId}/referencedelements.get.parameters[7].required" = false
"paths./elements/{webId}/referencedelements.get.parameters[7].type" = "string"
"paths./elements/{webId}/referencedelements.get.parameters[8].description" = "The order that the returned collection is sorted. The default is 'Ascending'."
"paths./elements/{webId}/referencedelements.get.parameters[8].in" = "query"
"paths./elements/{webId}/referencedelements.get.parameters[8].name" = "sortOrder"
"paths./elements/{webId}/referencedelements.get.parameters[8].required" = false
"paths./elements/{webId}/referencedelements.get.parameters[8].type" = "string"
"paths./elements/{webId}/referencedelements.get.parameters[9].description" = "The starting index (zero based) of the items to be returned. The default is 0."
"paths./elements/{webId}/referencedelements.get.parameters[9].in" = "query"
"paths./elements/{webId}/referencedelements.get.parameters[9].name" = "startIndex"
"paths./elements/{webId}/referencedelements.get.parameters[9].required" = false
"paths./elements/{webId}/referencedelements.get.parameters[9].type" = "integer"
"paths./elements/{webId}/referencedelements.get.responses.200.description" = "A list of referenced elements matching the specified conditions."
"paths./elements/{webId}/referencedelements.get.responses.200.schema.$ref" = "#/definitions/Items[Element]"
"paths./elements/{webId}/referencedelements.get.summary" = "Retrieve referenced elements based on the specified conditions. By default, this method selects all referenced elements of the current resource."
"paths./elements/{webId}/referencedelements.get.tags.length" = 1
"paths./elements/{webId}/referencedelements.get.tags[0]" = "Element"
"paths./elements/{webId}/referencedelements.post.consumes.length" = 2
"paths./elements/{webId}/referencedelements.post.consumes[0]" = "application/json"
"paths./elements/{webId}/referencedelements.post.consumes[1]" = "text/json"
"paths./elements/{webId}/referencedelements.post.deprecated" = false
"paths./elements/{webId}/referencedelements.post.operationId" = "Element_AddReferencedElement"
"paths./elements/{webId}/referencedelements.post.parameters.length" = 3
"paths./elements/{webId}/referencedelements.post.parameters[0].description" = "The ID of the element which the referenced element will be added to."
"paths./elements/{webId}/referencedelements.post.parameters[0].in" = "path"
"paths./elements/{webId}/referencedelements.post.parameters[0].name" = "webId"
"paths./elements/{webId}/referencedelements.post.parameters[0].required" = true
"paths./elements/{webId}/referencedelements.post.parameters[0].type" = "string"
"paths./elements/{webId}/referencedelements.post.parameters[1].collectionFormat" = "multi"
"paths./elements/{webId}/referencedelements.post.parameters[1].description" = "The ID of the referenced element. Multiple referenced elements may be specified with multiple instances of the parameter."
"paths./elements/{webId}/referencedelements.post.parameters[1].in" = "query"
"paths./elements/{webId}/referencedelements.post.parameters[1].items.type" = "string"
"paths./elements/{webId}/referencedelements.post.parameters[1].name" = "referencedElementWebId"
"paths./elements/{webId}/referencedelements.post.parameters[1].required" = true
"paths./elements/{webId}/referencedelements.post.parameters[1].type" = "array"
"paths./elements/{webId}/referencedelements.post.parameters[2].description" = "The name of the reference type between the parent and the referenced element. The default is \"parent-child\"."
"paths./elements/{webId}/referencedelements.post.parameters[2].in" = "query"
"paths./elements/{webId}/referencedelements.post.parameters[2].name" = "referenceType"
"paths./elements/{webId}/referencedelements.post.parameters[2].required" = false
"paths./elements/{webId}/referencedelements.post.parameters[2].type" = "string"
"paths./elements/{webId}/referencedelements.post.responses.204.description" = "The referenced element was successfully added."
"paths./elements/{webId}/referencedelements.post.responses.409.description" = "The referenced element already exists in the collection."
"paths./elements/{webId}/referencedelements.post.responses.409.schema.$ref" = "#/definitions/Errors"
"paths./elements/{webId}/referencedelements.post.summary" = "Add a reference to an existing element to the child elements collection."
"paths./elements/{webId}/referencedelements.post.tags.length" = 1
"paths./elements/{webId}/referencedelements.post.tags[0]" = "Element"
"paths./elements/{webId}/security.get.consumes.length" = 0
"paths./elements/{webId}/security.get.deprecated" = false
"paths./elements/{webId}/security.get.operationId" = "Element_GetSecurity"
"paths./elements/{webId}/security.get.parameters.length" = 4
"paths./elements/{webId}/security.get.parameters[0].description" = "The ID of the element for the security to be checked."
"paths./elements/{webId}/security.get.parameters[0].in" = "path"
"paths./elements/{webId}/security.get.parameters[0].name" = "webId"
"paths./elements/{webId}/security.get.parameters[0].required" = true
"paths./elements/{webId}/security.get.parameters[0].type" = "string"
"paths./elements/{webId}/security.get.parameters[1].collectionFormat" = "multi"
"paths./elements/{webId}/security.get.parameters[1].description" = "The user identity for the security information to be checked. Multiple security identities may be specified with multiple instances of the parameter. If the parameter is not specified, only the current user's security rights will be returned."
"paths./elements/{webId}/security.get.parameters[1].in" = "query"
"paths./elements/{webId}/security.get.parameters[1].items.type" = "string"
"paths./elements/{webId}/security.get.parameters[1].name" = "userIdentity"
"paths./elements/{webId}/security.get.parameters[1].required" = true
"paths./elements/{webId}/security.get.parameters[1].type" = "array"
"paths./elements/{webId}/security.get.parameters[2].description" = "Indicates if the security cache should be refreshed before getting security information. The default is 'false'."
"paths./elements/{webId}/security.get.parameters[2].in" = "query"
"paths./elements/{webId}/security.get.parameters[2].name" = "forceRefresh"
"paths./elements/{webId}/security.get.parameters[2].required" = false
"paths./elements/{webId}/security.get.parameters[2].type" = "boolean"
"paths./elements/{webId}/security.get.parameters[3].description" = "List of fields to be returned in the response, separated by semicolons (;). If this parameter is not specified, all available fields will be returned."
"paths./elements/{webId}/security.get.parameters[3].in" = "query"
"paths./elements/{webId}/security.get.parameters[3].name" = "selectedFields"
"paths./elements/{webId}/security.get.parameters[3].required" = false
"paths./elements/{webId}/security.get.parameters[3].type" = "string"
"paths./elements/{webId}/security.get.responses.200.description" = "Security rights."
"paths./elements/{webId}/security.get.responses.200.schema.$ref" = "#/definitions/Items[SecurityRights]"
"paths./elements/{webId}/security.get.responses.400.description" = "An invalid or local account is specified as the user identity."
"paths./elements/{webId}/security.get.responses.400.schema.$ref" = "#/definitions/Errors"
"paths./elements/{webId}/security.get.responses.401.description" = "Access denied for the specified user identity."
"paths./elements/{webId}/security.get.responses.401.schema.$ref" = "#/definitions/Errors"
"paths./elements/{webId}/security.get.responses.409.description" = "Unsupported when using Anonymous authentication method."
"paths./elements/{webId}/security.get.responses.409.schema.$ref" = "#/definitions/Errors"
"paths./elements/{webId}/security.get.responses.502.description" = "Failed to retrieve the specified user identity."
"paths./elements/{webId}/security.get.responses.502.schema.$ref" = "#/definitions/Errors"
"paths./elements/{webId}/security.get.summary" = "Get the security information of the specified security item associated with the element for a specified user."
"paths./elements/{webId}/security.get.tags.length" = 1
"paths./elements/{webId}/security.get.tags[0]" = "Element"
"paths./elements/{webId}/securityentries.get.consumes.length" = 0
"paths./elements/{webId}/securityentries.get.deprecated" = false
"paths./elements/{webId}/securityentries.get.operationId" = "Element_GetSecurityEntries"
"paths./elements/{webId}/securityentries.get.parameters.length" = 3
"paths./elements/{webId}/securityentries.get.parameters[0].description" = "The ID of the element."
"paths./elements/{webId}/securityentries.get.parameters[0].in" = "path"
"paths./elements/{webId}/securityentries.get.parameters[0].name" = "webId"
"paths./elements/{webId}/securityentries.get.parameters[0].required" = true
"paths./elements/{webId}/securityentries.get.parameters[0].type" = "string"
"paths./elements/{webId}/securityentries.get.parameters[1].description" = "The name query string used for filtering security entries. The default is no filter."
"paths./elements/{webId}/securityentries.get.parameters[1].in" = "query"
"paths./elements/{webId}/securityentries.get.parameters[1].name" = "nameFilter"
"paths./elements/{webId}/securityentries.get.parameters[1].required" = false
"paths./elements/{webId}/securityentries.get.parameters[1].type" = "string"
"paths./elements/{webId}/securityentries.get.parameters[2].description" = "List of fields to be returned in the response, separated by semicolons (;). If this parameter is not specified, all available fields will be returned."
"paths./elements/{webId}/securityentries.get.parameters[2].in" = "query"
"paths./elements/{webId}/securityentries.get.parameters[2].name" = "selectedFields"
"paths./elements/{webId}/securityentries.get.parameters[2].required" = false
"paths./elements/{webId}/securityentries.get.parameters[2].type" = "string"
"paths./elements/{webId}/securityentries.get.responses.200.description" = "A list of security entries matching the specified condition."
"paths./elements/{webId}/securityentries.get.responses.200.schema.$ref" = "#/definitions/Items[SecurityEntry]"
"paths./elements/{webId}/securityentries.get.summary" = "Retrieve the security entries associated with the element based on the specified criteria. By default, all security entries for this element are returned."
"paths./elements/{webId}/securityentries.get.tags.length" = 1
"paths./elements/{webId}/securityentries.get.tags[0]" = "Element"
"paths./elements/{webId}/securityentries.post.consumes.length" = 2
"paths./elements/{webId}/securityentries.post.consumes[0]" = "application/json"
"paths./elements/{webId}/securityentries.post.consumes[1]" = "text/json"
"paths./elements/{webId}/securityentries.post.deprecated" = false
"paths./elements/{webId}/securityentries.post.operationId" = "Element_CreateSecurityEntry"
"paths./elements/{webId}/securityentries.post.parameters.length" = 3
"paths./elements/{webId}/securityentries.post.parameters[0].description" = "The ID of the element where the security entry will be created."
"paths./elements/{webId}/securityentries.post.parameters[0].in" = "path"
"paths./elements/{webId}/securityentries.post.parameters[0].name" = "webId"
"paths./elements/{webId}/securityentries.post.parameters[0].required" = true
"paths./elements/{webId}/securityentries.post.parameters[0].type" = "string"
"paths./elements/{webId}/securityentries.post.parameters[1].description" = "The new security entry definition. The full list of allow and deny rights must be supplied."
"paths./elements/{webId}/securityentries.post.parameters[1].in" = "body"
"paths./elements/{webId}/securityentries.post.parameters[1].name" = "securityEntry"
"paths./elements/{webId}/securityentries.post.parameters[1].required" = true
"paths./elements/{webId}/securityentries.post.parameters[1].schema.$ref" = "#/definitions/SecurityEntry"
"paths./elements/{webId}/securityentries.post.parameters[2].description" = "If false, the new access permissions are only applied to the associated object. If true, the access permissions of children with any parent-child reference types will change when the permissions on the primary parent change."
"paths./elements/{webId}/securityentries.post.parameters[2].in" = "query"
"paths./elements/{webId}/securityentries.post.parameters[2].name" = "applyToChildren"
"paths./elements/{webId}/securityentries.post.parameters[2].required" = false
"paths./elements/{webId}/securityentries.post.parameters[2].type" = "boolean"
"paths./elements/{webId}/securityentries.post.responses.201.description" = "The security entry was created. The response's Location header is a link to the security entry."
"paths./elements/{webId}/securityentries.post.summary" = "Create a security entry owned by the element."
"paths./elements/{webId}/securityentries.post.tags.length" = 1
"paths./elements/{webId}/securityentries.post.tags[0]" = "Element"
"paths./elements/{webId}/securityentries/{name}.delete.consumes.length" = 0
"paths./elements/{webId}/securityentries/{name}.delete.deprecated" = false
"paths./elements/{webId}/securityentries/{name}.delete.operationId" = "Element_DeleteSecurityEntry"
"paths./elements/{webId}/securityentries/{name}.delete.parameters.length" = 3
"paths./elements/{webId}/securityentries/{name}.delete.parameters[0].description" = "The name of the security entry. For every backslash character (\\) in the security entry name, replace with asterisk (*). As an example, use domain*username instead of domain\\username."
"paths./elements/{webId}/securityentries/{name}.delete.parameters[0].in" = "path"
"paths./elements/{webId}/securityentries/{name}.delete.parameters[0].name" = "name"
"paths./elements/{webId}/securityentries/{name}.delete.parameters[0].required" = true
"paths./elements/{webId}/securityentries/{name}.delete.parameters[0].type" = "string"
"paths./elements/{webId}/securityentries/{name}.delete.parameters[1].description" = "The ID of the element where the security entry will be deleted."
"paths./elements/{webId}/securityentries/{name}.delete.parameters[1].in" = "path"
"paths./elements/{webId}/securityentries/{name}.delete.parameters[1].name" = "webId"
"paths./elements/{webId}/securityentries/{name}.delete.parameters[1].required" = true
"paths./elements/{webId}/securityentries/{name}.delete.parameters[1].type" = "string"
"paths./elements/{webId}/securityentries/{name}.delete.parameters[2].description" = "If false, the new access permissions are only applied to the associated object. If true, the access permissions of children with any parent-child reference types will change when the permissions on the primary parent change."
"paths./elements/{webId}/securityentries/{name}.delete.parameters[2].in" = "query"
"paths./elements/{webId}/securityentries/{name}.delete.parameters[2].name" = "applyToChildren"
"paths./elements/{webId}/securityentries/{name}.delete.parameters[2].required" = false
"paths./elements/{webId}/securityentries/{name}.delete.parameters[2].type" = "boolean"
"paths./elements/{webId}/securityentries/{name}.delete.responses.204.description" = "The security entry was deleted."
"paths./elements/{webId}/securityentries/{name}.delete.summary" = "Delete a security entry owned by the element."
"paths./elements/{webId}/securityentries/{name}.delete.tags.length" = 1
"paths./elements/{webId}/securityentries/{name}.delete.tags[0]" = "Element"
"paths./elements/{webId}/securityentries/{name}.get.consumes.length" = 0
"paths./elements/{webId}/securityentries/{name}.get.deprecated" = false
"paths./elements/{webId}/securityentries/{name}.get.operationId" = "Element_GetSecurityEntryByName"
"paths./elements/{webId}/securityentries/{name}.get.parameters.length" = 3
"paths./elements/{webId}/securityentries/{name}.get.parameters[0].description" = "The name of the security entry. For every backslash character (\\) in the security entry name, replace with asterisk (*). As an example, use domain*username instead of domain\\username."
"paths./elements/{webId}/securityentries/{name}.get.parameters[0].in" = "path"
"paths./elements/{webId}/securityentries/{name}.get.parameters[0].name" = "name"
"paths./elements/{webId}/securityentries/{name}.get.parameters[0].required" = true
"paths./elements/{webId}/securityentries/{name}.get.parameters[0].type" = "string"
"paths./elements/{webId}/securityentries/{name}.get.parameters[1].description" = "The ID of the element."
"paths./elements/{webId}/securityentries/{name}.get.parameters[1].in" = "path"
"paths./elements/{webId}/securityentries/{name}.get.parameters[1].name" = "webId"
"paths./elements/{webId}/securityentries/{name}.get.parameters[1].required" = true
"paths./elements/{webId}/securityentries/{name}.get.parameters[1].type" = "string"
"paths./elements/{webId}/securityentries/{name}.get.parameters[2].description" = "List of fields to be returned in the response, separated by semicolons (;). If this parameter is not specified, all available fields will be returned."
"paths./elements/{webId}/securityentries/{name}.get.parameters[2].in" = "query"
"paths./elements/{webId}/securityentries/{name}.get.parameters[2].name" = "selectedFields"
"paths./elements/{webId}/securityentries/{name}.get.parameters[2].required" = false
"paths./elements/{webId}/securityentries/{name}.get.parameters[2].type" = "string"
"paths./elements/{webId}/securityentries/{name}.get.responses.200.description" = "The security entry matching the specified condition."
"paths./elements/{webId}/securityentries/{name}.get.responses.200.schema.$ref" = "#/definitions/SecurityEntry"
"paths./elements/{webId}/securityentries/{name}.get.responses.404.description" = "The security entry with the specified name is not found."
"paths./elements/{webId}/securityentries/{name}.get.responses.404.schema.$ref" = "#/definitions/Errors"
"paths./elements/{webId}/securityentries/{name}.get.summary" = "Retrieve the security entry associated with the element with the specified name."
"paths./elements/{webId}/securityentries/{name}.get.tags.length" = 1
"paths./elements/{webId}/securityentries/{name}.get.tags[0]" = "Element"
"paths./elements/{webId}/securityentries/{name}.put.consumes.length" = 2
"paths./elements/{webId}/securityentries/{name}.put.consumes[0]" = "application/json"
"paths./elements/{webId}/securityentries/{name}.put.consumes[1]" = "text/json"
"paths./elements/{webId}/securityentries/{name}.put.deprecated" = false
"paths./elements/{webId}/securityentries/{name}.put.operationId" = "Element_UpdateSecurityEntry"
"paths./elements/{webId}/securityentries/{name}.put.parameters.length" = 4
"paths./elements/{webId}/securityentries/{name}.put.parameters[0].description" = "The name of the security entry."
"paths./elements/{webId}/securityentries/{name}.put.parameters[0].in" = "path"
"paths./elements/{webId}/securityentries/{name}.put.parameters[0].name" = "name"
"paths./elements/{webId}/securityentries/{name}.put.parameters[0].required" = true
"paths./elements/{webId}/securityentries/{name}.put.parameters[0].type" = "string"
"paths./elements/{webId}/securityentries/{name}.put.parameters[1].description" = "The ID of the element where the security entry will be updated."
"paths./elements/{webId}/securityentries/{name}.put.parameters[1].in" = "path"
"paths./elements/{webId}/securityentries/{name}.put.parameters[1].name" = "webId"
"paths./elements/{webId}/securityentries/{name}.put.parameters[1].required" = true
"paths./elements/{webId}/securityentries/{name}.put.parameters[1].type" = "string"
"paths./elements/{webId}/securityentries/{name}.put.parameters[2].description" = "The new security entry definition. The full list of allow and deny rights must be supplied or they will be removed."
"paths./elements/{webId}/securityentries/{name}.put.parameters[2].in" = "body"
"paths./elements/{webId}/securityentries/{name}.put.parameters[2].name" = "securityEntry"
"paths./elements/{webId}/securityentries/{name}.put.parameters[2].required" = true
"paths./elements/{webId}/securityentries/{name}.put.parameters[2].schema.$ref" = "#/definitions/SecurityEntry"
"paths./elements/{webId}/securityentries/{name}.put.parameters[3].description" = "If false, the new access permissions are only applied to the associated object. If true, the access permissions of children with any parent-child reference types will change when the permissions on the primary parent change."
"paths./elements/{webId}/securityentries/{name}.put.parameters[3].in" = "query"
"paths./elements/{webId}/securityentries/{name}.put.parameters[3].name" = "applyToChildren"
"paths./elements/{webId}/securityentries/{name}.put.parameters[3].required" = false
"paths./elements/{webId}/securityentries/{name}.put.parameters[3].type" = "boolean"
"paths./elements/{webId}/securityentries/{name}.put.responses.204.description" = "The security entry was updated."
"paths./elements/{webId}/securityentries/{name}.put.summary" = "Update a security entry owned by the element."
"paths./elements/{webId}/securityentries/{name}.put.tags.length" = 1
"paths./elements/{webId}/securityentries/{name}.put.tags[0]" = "Element"
"paths./elementtemplates.get.consumes.length" = 0
"paths./elementtemplates.get.deprecated" = false
"paths./elementtemplates.get.description" = "This method returns an element template based on the hierarchical path associated with it, and should be used when a path has been received from a separate part of the PI System for use in the PI Web API. Users should primarily search with the WebID when available."
"paths./elementtemplates.get.operationId" = "ElementTemplate_GetByPath"
"paths./elementtemplates.get.parameters.length" = 2
"paths./elementtemplates.get.parameters[0].description" = "The path to the element template."
"paths./elementtemplates.get.parameters[0].in" = "query"
"paths./elementtemplates.get.parameters[0].name" = "path"
"paths./elementtemplates.get.parameters[0].required" = true
"paths./elementtemplates.get.parameters[0].type" = "string"
"paths./elementtemplates.get.parameters[1].description" = "List of fields to be returned in the response, separated by semicolons (;). If this parameter is not specified, all available fields will be returned."
"paths./elementtemplates.get.parameters[1].in" = "query"
"paths./elementtemplates.get.parameters[1].name" = "selectedFields"
"paths./elementtemplates.get.parameters[1].required" = false
"paths./elementtemplates.get.parameters[1].type" = "string"
"paths./elementtemplates.get.responses.200.description" = "The specified element template."
"paths./elementtemplates.get.responses.200.schema.$ref" = "#/definitions/ElementTemplate"
"paths./elementtemplates.get.summary" = "Retrieve an element template by path."
"paths./elementtemplates.get.tags.length" = 1
"paths./elementtemplates.get.tags[0]" = "ElementTemplate"
"paths./elementtemplates/{webId}.delete.consumes.length" = 0
"paths./elementtemplates/{webId}.delete.deprecated" = false
"paths./elementtemplates/{webId}.delete.description" = "Deleting an element template will delete all associated templated data from elements which were created from it."
"paths./elementtemplates/{webId}.delete.operationId" = "ElementTemplate_Delete"
"paths./elementtemplates/{webId}.delete.parameters.length" = 1
"paths./elementtemplates/{webId}.delete.parameters[0].description" = "The ID of the element template to update."
"paths./elementtemplates/{webId}.delete.parameters[0].in" = "path"
"paths./elementtemplates/{webId}.delete.parameters[0].name" = "webId"
"paths./elementtemplates/{webId}.delete.parameters[0].required" = true
"paths./elementtemplates/{webId}.delete.parameters[0].type" = "string"
"paths./elementtemplates/{webId}.delete.responses.204.description" = "The element template was deleted."
"paths./elementtemplates/{webId}.delete.summary" = "Delete an element template."
"paths./elementtemplates/{webId}.delete.tags.length" = 1
"paths./elementtemplates/{webId}.delete.tags[0]" = "ElementTemplate"
"paths./elementtemplates/{webId}.get.consumes.length" = 0
"paths./elementtemplates/{webId}.get.deprecated" = false
"paths./elementtemplates/{webId}.get.operationId" = "ElementTemplate_Get"
"paths./elementtemplates/{webId}.get.parameters.length" = 2
"paths./elementtemplates/{webId}.get.parameters[0].description" = "The ID of the element template."
"paths./elementtemplates/{webId}.get.parameters[0].in" = "path"
"paths./elementtemplates/{webId}.get.parameters[0].name" = "webId"
"paths./elementtemplates/{webId}.get.parameters[0].required" = true
"paths./elementtemplates/{webId}.get.parameters[0].type" = "string"
"paths./elementtemplates/{webId}.get.parameters[1].description" = "List of fields to be returned in the response, separated by semicolons (;). If this parameter is not specified, all available fields will be returned."
"paths./elementtemplates/{webId}.get.parameters[1].in" = "query"
"paths./elementtemplates/{webId}.get.parameters[1].name" = "selectedFields"
"paths./elementtemplates/{webId}.get.parameters[1].required" = false
"paths./elementtemplates/{webId}.get.parameters[1].type" = "string"
"paths./elementtemplates/{webId}.get.responses.200.description" = "The specified element template."
"paths./elementtemplates/{webId}.get.responses.200.schema.$ref" = "#/definitions/ElementTemplate"
"paths./elementtemplates/{webId}.get.summary" = "Retrieve an element template."
"paths./elementtemplates/{webId}.get.tags.length" = 1
"paths./elementtemplates/{webId}.get.tags[0]" = "ElementTemplate"
"paths./elementtemplates/{webId}.patch.consumes.length" = 2
"paths./elementtemplates/{webId}.patch.consumes[0]" = "application/json"
"paths./elementtemplates/{webId}.patch.consumes[1]" = "text/json"
"paths./elementtemplates/{webId}.patch.deprecated" = false
"paths./elementtemplates/{webId}.patch.description" = "Updating the InstanceType property of an element template will not affect any elements that have already been created from this template; it will only affect any future elements created from this template. All other changes will be propagated to elements based on this template."
"paths./elementtemplates/{webId}.patch.operationId" = "ElementTemplate_Update"
"paths./elementtemplates/{webId}.patch.parameters.length" = 2
"paths./elementtemplates/{webId}.patch.parameters[0].description" = "The ID of the element template to update."
"paths./elementtemplates/{webId}.patch.parameters[0].in" = "path"
"paths./elementtemplates/{webId}.patch.parameters[0].name" = "webId"
"paths./elementtemplates/{webId}.patch.parameters[0].required" = true
"paths./elementtemplates/{webId}.patch.parameters[0].type" = "string"
"paths./elementtemplates/{webId}.patch.parameters[1].description" = "A partial element template containing the desired changes."
"paths./elementtemplates/{webId}.patch.parameters[1].in" = "body"
"paths./elementtemplates/{webId}.patch.parameters[1].name" = "template"
"paths./elementtemplates/{webId}.patch.parameters[1].required" = true
"paths./elementtemplates/{webId}.patch.parameters[1].schema.$ref" = "#/definitions/ElementTemplate"
"paths./elementtemplates/{webId}.patch.responses.204.description" = "The element template was updated."
"paths./elementtemplates/{webId}.patch.summary" = "Update an element template by replacing items in its definition."
"paths./elementtemplates/{webId}.patch.tags.length" = 1
"paths./elementtemplates/{webId}.patch.tags[0]" = "ElementTemplate"
"paths./elementtemplates/{webId}/analysistemplates.get.consumes.length" = 0
"paths./elementtemplates/{webId}/analysistemplates.get.deprecated" = false
"paths./elementtemplates/{webId}/analysistemplates.get.operationId" = "ElementTemplate_GetAnalysisTemplates"
"paths./elementtemplates/{webId}/analysistemplates.get.parameters.length" = 2
"paths./elementtemplates/{webId}/analysistemplates.get.parameters[0].description" = "The ID of the element template."
"paths./elementtemplates/{webId}/analysistemplates.get.parameters[0].in" = "path"
"paths./elementtemplates/{webId}/analysistemplates.get.parameters[0].name" = "webId"
"paths./elementtemplates/{webId}/analysistemplates.get.parameters[0].required" = true
"paths./elementtemplates/{webId}/analysistemplates.get.parameters[0].type" = "string"
"paths./elementtemplates/{webId}/analysistemplates.get.parameters[1].description" = "List of fields to be returned in the response, separated by semicolons (;). If this parameter is not specified, all available fields will be returned."
"paths./elementtemplates/{webId}/analysistemplates.get.parameters[1].in" = "query"
"paths./elementtemplates/{webId}/analysistemplates.get.parameters[1].name" = "selectedFields"
"paths./elementtemplates/{webId}/analysistemplates.get.parameters[1].required" = false
"paths./elementtemplates/{webId}/analysistemplates.get.parameters[1].type" = "string"
"paths./elementtemplates/{webId}/analysistemplates.get.responses.200.description" = "A list of analysis templates for the specified element template."
"paths./elementtemplates/{webId}/analysistemplates.get.responses.200.schema.$ref" = "#/definitions/Items[AnalysisTemplate]"
"paths./elementtemplates/{webId}/analysistemplates.get.summary" = "Get analysis templates for an element template."
"paths./elementtemplates/{webId}/analysistemplates.get.tags.length" = 1
"paths./elementtemplates/{webId}/analysistemplates.get.tags[0]" = "ElementTemplate"
"paths./elementtemplates/{webId}/attributetemplates.get.consumes.length" = 0
"paths./elementtemplates/{webId}/attributetemplates.get.deprecated" = false
"paths./elementtemplates/{webId}/attributetemplates.get.operationId" = "ElementTemplate_GetAttributeTemplates"
"paths./elementtemplates/{webId}/attributetemplates.get.parameters.length" = 3
"paths./elementtemplates/{webId}/attributetemplates.get.parameters[0].description" = "The ID of the element template."
"paths./elementtemplates/{webId}/attributetemplates.get.parameters[0].in" = "path"
"paths./elementtemplates/{webId}/attributetemplates.get.parameters[0].name" = "webId"
"paths./elementtemplates/{webId}/attributetemplates.get.parameters[0].required" = true
"paths./elementtemplates/{webId}/attributetemplates.get.parameters[0].type" = "string"
"paths./elementtemplates/{webId}/attributetemplates.get.parameters[1].description" = "List of fields to be returned in the response, separated by semicolons (;). If this parameter is not specified, all available fields will be returned."
"paths./elementtemplates/{webId}/attributetemplates.get.parameters[1].in" = "query"
"paths./elementtemplates/{webId}/attributetemplates.get.parameters[1].name" = "selectedFields"
"paths./elementtemplates/{webId}/attributetemplates.get.parameters[1].required" = false
"paths./elementtemplates/{webId}/attributetemplates.get.parameters[1].type" = "string"
"paths./elementtemplates/{webId}/attributetemplates.get.parameters[2].description" = "Specifies if the result should include attribute templates inherited from base element templates. The default is 'false'."
"paths./elementtemplates/{webId}/attributetemplates.get.parameters[2].in" = "query"
"paths./elementtemplates/{webId}/attributetemplates.get.parameters[2].name" = "showInherited"
"paths./elementtemplates/{webId}/attributetemplates.get.parameters[2].required" = false
"paths./elementtemplates/{webId}/attributetemplates.get.parameters[2].type" = "boolean"
"paths./elementtemplates/{webId}/attributetemplates.get.responses.200.description" = "A list of attribute templates for the specified element template."
"paths./elementtemplates/{webId}/attributetemplates.get.responses.200.schema.$ref" = "#/definitions/Items[AttributeTemplate]"
"paths./elementtemplates/{webId}/attributetemplates.get.summary" = "Get child attribute templates for an element template."
"paths./elementtemplates/{webId}/attributetemplates.get.tags.length" = 1
"paths./elementtemplates/{webId}/attributetemplates.get.tags[0]" = "ElementTemplate"
"paths./elementtemplates/{webId}/attributetemplates.post.consumes.length" = 2
"paths./elementtemplates/{webId}/attributetemplates.post.consumes[0]" = "application/json"
"paths./elementtemplates/{webId}/attributetemplates.post.consumes[1]" = "text/json"
"paths./elementtemplates/{webId}/attributetemplates.post.deprecated" = false
"paths./elementtemplates/{webId}/attributetemplates.post.operationId" = "ElementTemplate_CreateAttributeTemplate"
"paths./elementtemplates/{webId}/attributetemplates.post.parameters.length" = 2
"paths./elementtemplates/{webId}/attributetemplates.post.parameters[0].description" = "The ID of the element template on which to create the attribute template."
"paths./elementtemplates/{webId}/attributetemplates.post.parameters[0].in" = "path"
"paths./elementtemplates/{webId}/attributetemplates.post.parameters[0].name" = "webId"
"paths./elementtemplates/{webId}/attributetemplates.post.parameters[0].required" = true
"paths./elementtemplates/{webId}/attributetemplates.post.parameters[0].type" = "string"
"paths./elementtemplates/{webId}/attributetemplates.post.parameters[1].description" = "The attribute template definition."
"paths./elementtemplates/{webId}/attributetemplates.post.parameters[1].in" = "body"
"paths./elementtemplates/{webId}/attributetemplates.post.parameters[1].name" = "template"
"paths./elementtemplates/{webId}/attributetemplates.post.parameters[1].required" = true
"paths./elementtemplates/{webId}/attributetemplates.post.parameters[1].schema.$ref" = "#/definitions/AttributeTemplate"
"paths./elementtemplates/{webId}/attributetemplates.post.responses.201.description" = "The attribute template was created. The response's Location header is a link to the created resource."
"paths./elementtemplates/{webId}/attributetemplates.post.summary" = "Create an attribute template."
"paths./elementtemplates/{webId}/attributetemplates.post.tags.length" = 1
"paths./elementtemplates/{webId}/attributetemplates.post.tags[0]" = "ElementTemplate"
"paths./elementtemplates/{webId}/categories.get.consumes.length" = 0
"paths./elementtemplates/{webId}/categories.get.deprecated" = false
"paths./elementtemplates/{webId}/categories.get.operationId" = "ElementTemplate_GetCategories"
"paths./elementtemplates/{webId}/categories.get.parameters.length" = 3
"paths./elementtemplates/{webId}/categories.get.parameters[0].description" = "The ID of the element template."
"paths./elementtemplates/{webId}/categories.get.parameters[0].in" = "path"
"paths./elementtemplates/{webId}/categories.get.parameters[0].name" = "webId"
"paths./elementtemplates/{webId}/categories.get.parameters[0].required" = true
"paths./elementtemplates/{webId}/categories.get.parameters[0].type" = "string"
"paths./elementtemplates/{webId}/categories.get.parameters[1].description" = "List of fields to be returned in the response, separated by semicolons (;). If this parameter is not specified, all available fields will be returned."
"paths./elementtemplates/{webId}/categories.get.parameters[1].in" = "query"
"paths./elementtemplates/{webId}/categories.get.parameters[1].name" = "selectedFields"
"paths./elementtemplates/{webId}/categories.get.parameters[1].required" = false
"paths./elementtemplates/{webId}/categories.get.parameters[1].type" = "string"
"paths./elementtemplates/{webId}/categories.get.parameters[2].description" = "Specifies if the result should include categories inherited from base element templates. The default is 'false'."
"paths./elementtemplates/{webId}/categories.get.parameters[2].in" = "query"
"paths./elementtemplates/{webId}/categories.get.parameters[2].name" = "showInherited"
"paths./elementtemplates/{webId}/categories.get.parameters[2].required" = false
"paths./elementtemplates/{webId}/categories.get.parameters[2].type" = "boolean"
"paths./elementtemplates/{webId}/categories.get.responses.200.description" = "A list of categories."
"paths./elementtemplates/{webId}/categories.get.responses.200.schema.$ref" = "#/definitions/Items[ElementCategory]"
"paths./elementtemplates/{webId}/categories.get.summary" = "Get an element template's categories."
"paths./elementtemplates/{webId}/categories.get.tags.length" = 1
"paths./elementtemplates/{webId}/categories.get.tags[0]" = "ElementTemplate"
"paths./elementtemplates/{webId}/security.get.consumes.length" = 0
"paths./elementtemplates/{webId}/security.get.deprecated" = false
"paths./elementtemplates/{webId}/security.get.operationId" = "ElementTemplate_GetSecurity"
"paths./elementtemplates/{webId}/security.get.parameters.length" = 4
"paths./elementtemplates/{webId}/security.get.parameters[0].description" = "The ID of the element template for the security to be checked."
"paths./elementtemplates/{webId}/security.get.parameters[0].in" = "path"
"paths./elementtemplates/{webId}/security.get.parameters[0].name" = "webId"
"paths./elementtemplates/{webId}/security.get.parameters[0].required" = true
"paths./elementtemplates/{webId}/security.get.parameters[0].type" = "string"
"paths./elementtemplates/{webId}/security.get.parameters[1].collectionFormat" = "multi"
"paths./elementtemplates/{webId}/security.get.parameters[1].description" = "The user identity for the security information to be checked. Multiple security identities may be specified with multiple instances of the parameter. If the parameter is not specified, only the current user's security rights will be returned."
"paths./elementtemplates/{webId}/security.get.parameters[1].in" = "query"
"paths./elementtemplates/{webId}/security.get.parameters[1].items.type" = "string"
"paths./elementtemplates/{webId}/security.get.parameters[1].name" = "userIdentity"
"paths./elementtemplates/{webId}/security.get.parameters[1].required" = true
"paths./elementtemplates/{webId}/security.get.parameters[1].type" = "array"
"paths./elementtemplates/{webId}/security.get.parameters[2].description" = "Indicates if the security cache should be refreshed before getting security information. The default is 'false'."
"paths./elementtemplates/{webId}/security.get.parameters[2].in" = "query"
"paths./elementtemplates/{webId}/security.get.parameters[2].name" = "forceRefresh"
"paths./elementtemplates/{webId}/security.get.parameters[2].required" = false
"paths./elementtemplates/{webId}/security.get.parameters[2].type" = "boolean"
"paths./elementtemplates/{webId}/security.get.parameters[3].description" = "List of fields to be returned in the response, separated by semicolons (;). If this parameter is not specified, all available fields will be returned."
"paths./elementtemplates/{webId}/security.get.parameters[3].in" = "query"
"paths./elementtemplates/{webId}/security.get.parameters[3].name" = "selectedFields"
"paths./elementtemplates/{webId}/security.get.parameters[3].required" = false
"paths./elementtemplates/{webId}/security.get.parameters[3].type" = "string"
"paths./elementtemplates/{webId}/security.get.responses.200.description" = "Security rights."
"paths./elementtemplates/{webId}/security.get.responses.200.schema.$ref" = "#/definitions/Items[SecurityRights]"
"paths./elementtemplates/{webId}/security.get.responses.400.description" = "An invalid or local account is specified as the user identity."
"paths./elementtemplates/{webId}/security.get.responses.400.schema.$ref" = "#/definitions/Errors"
"paths./elementtemplates/{webId}/security.get.responses.401.description" = "Access denied for the specified user identity."
"paths./elementtemplates/{webId}/security.get.responses.401.schema.$ref" = "#/definitions/Errors"
"paths./elementtemplates/{webId}/security.get.responses.409.description" = "Unsupported when using Anonymous authentication method."
"paths./elementtemplates/{webId}/security.get.responses.409.schema.$ref" = "#/definitions/Errors"
"paths./elementtemplates/{webId}/security.get.responses.502.description" = "Failed to retrieve the specified user identity."
"paths./elementtemplates/{webId}/security.get.responses.502.schema.$ref" = "#/definitions/Errors"
"paths./elementtemplates/{webId}/security.get.summary" = "Get the security information of the specified security item associated with the element template for a specified user."
"paths./elementtemplates/{webId}/security.get.tags.length" = 1
"paths./elementtemplates/{webId}/security.get.tags[0]" = "ElementTemplate"
"paths./elementtemplates/{webId}/securityentries.get.consumes.length" = 0
"paths./elementtemplates/{webId}/securityentries.get.deprecated" = false
"paths./elementtemplates/{webId}/securityentries.get.operationId" = "ElementTemplate_GetSecurityEntries"
"paths./elementtemplates/{webId}/securityentries.get.parameters.length" = 3
"paths./elementtemplates/{webId}/securityentries.get.parameters[0].description" = "The ID of the element template."
"paths./elementtemplates/{webId}/securityentries.get.parameters[0].in" = "path"
"paths./elementtemplates/{webId}/securityentries.get.parameters[0].name" = "webId"
"paths./elementtemplates/{webId}/securityentries.get.parameters[0].required" = true
"paths./elementtemplates/{webId}/securityentries.get.parameters[0].type" = "string"
"paths./elementtemplates/{webId}/securityentries.get.parameters[1].description" = "The name query string used for filtering security entries. The default is no filter."
"paths./elementtemplates/{webId}/securityentries.get.parameters[1].in" = "query"
"paths./elementtemplates/{webId}/securityentries.get.parameters[1].name" = "nameFilter"
"paths./elementtemplates/{webId}/securityentries.get.parameters[1].required" = false
"paths./elementtemplates/{webId}/securityentries.get.parameters[1].type" = "string"
"paths./elementtemplates/{webId}/securityentries.get.parameters[2].description" = "List of fields to be returned in the response, separated by semicolons (;). If this parameter is not specified, all available fields will be returned."
"paths./elementtemplates/{webId}/securityentries.get.parameters[2].in" = "query"
"paths./elementtemplates/{webId}/securityentries.get.parameters[2].name" = "selectedFields"
"paths./elementtemplates/{webId}/securityentries.get.parameters[2].required" = false
"paths./elementtemplates/{webId}/securityentries.get.parameters[2].type" = "string"
"paths./elementtemplates/{webId}/securityentries.get.responses.200.description" = "A list of security entries matching the specified condition."
"paths./elementtemplates/{webId}/securityentries.get.responses.200.schema.$ref" = "#/definitions/Items[SecurityEntry]"
"paths./elementtemplates/{webId}/securityentries.get.summary" = "Retrieve the security entries associated with the element template based on the specified criteria. By default, all security entries for this element template are returned."
"paths./elementtemplates/{webId}/securityentries.get.tags.length" = 1
"paths./elementtemplates/{webId}/securityentries.get.tags[0]" = "ElementTemplate"
"paths./elementtemplates/{webId}/securityentries.post.consumes.length" = 2
"paths./elementtemplates/{webId}/securityentries.post.consumes[0]" = "application/json"
"paths./elementtemplates/{webId}/securityentries.post.consumes[1]" = "text/json"
"paths./elementtemplates/{webId}/securityentries.post.deprecated" = false
"paths./elementtemplates/{webId}/securityentries.post.operationId" = "ElementTemplate_CreateSecurityEntry"
"paths./elementtemplates/{webId}/securityentries.post.parameters.length" = 3
"paths./elementtemplates/{webId}/securityentries.post.parameters[0].description" = "The ID of the element template where the security entry will be created."
"paths./elementtemplates/{webId}/securityentries.post.parameters[0].in" = "path"
"paths./elementtemplates/{webId}/securityentries.post.parameters[0].name" = "webId"
"paths./elementtemplates/{webId}/securityentries.post.parameters[0].required" = true
"paths./elementtemplates/{webId}/securityentries.post.parameters[0].type" = "string"
"paths./elementtemplates/{webId}/securityentries.post.parameters[1].description" = "The new security entry definition. The full list of allow and deny rights must be supplied."
"paths./elementtemplates/{webId}/securityentries.post.parameters[1].in" = "body"
"paths./elementtemplates/{webId}/securityentries.post.parameters[1].name" = "securityEntry"
"paths./elementtemplates/{webId}/securityentries.post.parameters[1].required" = true
"paths./elementtemplates/{webId}/securityentries.post.parameters[1].schema.$ref" = "#/definitions/SecurityEntry"
"paths./elementtemplates/{webId}/securityentries.post.parameters[2].description" = "If false, the new access permissions are only applied to the associated object. If true, the access permissions of children with any parent-child reference types will change when the permissions on the primary parent change."
"paths./elementtemplates/{webId}/securityentries.post.parameters[2].in" = "query"
"paths./elementtemplates/{webId}/securityentries.post.parameters[2].name" = "applyToChildren"
"paths./elementtemplates/{webId}/securityentries.post.parameters[2].required" = false
"paths./elementtemplates/{webId}/securityentries.post.parameters[2].type" = "boolean"
"paths./elementtemplates/{webId}/securityentries.post.responses.201.description" = "The security entry was created. The response's Location header is a link to the security entry."
"paths./elementtemplates/{webId}/securityentries.post.summary" = "Create a security entry owned by the element template."
"paths./elementtemplates/{webId}/securityentries.post.tags.length" = 1
"paths./elementtemplates/{webId}/securityentries.post.tags[0]" = "ElementTemplate"
"paths./elementtemplates/{webId}/securityentries/{name}.delete.consumes.length" = 0
"paths./elementtemplates/{webId}/securityentries/{name}.delete.deprecated" = false
"paths./elementtemplates/{webId}/securityentries/{name}.delete.operationId" = "ElementTemplate_DeleteSecurityEntry"
"paths./elementtemplates/{webId}/securityentries/{name}.delete.parameters.length" = 3
"paths./elementtemplates/{webId}/securityentries/{name}.delete.parameters[0].description" = "The name of the security entry. For every backslash character (\\) in the security entry name, replace with asterisk (*). As an example, use domain*username instead of domain\\username."
"paths./elementtemplates/{webId}/securityentries/{name}.delete.parameters[0].in" = "path"
"paths./elementtemplates/{webId}/securityentries/{name}.delete.parameters[0].name" = "name"
"paths./elementtemplates/{webId}/securityentries/{name}.delete.parameters[0].required" = true
"paths./elementtemplates/{webId}/securityentries/{name}.delete.parameters[0].type" = "string"
"paths./elementtemplates/{webId}/securityentries/{name}.delete.parameters[1].description" = "The ID of the element template where the security entry will be deleted."
"paths./elementtemplates/{webId}/securityentries/{name}.delete.parameters[1].in" = "path"
"paths./elementtemplates/{webId}/securityentries/{name}.delete.parameters[1].name" = "webId"
"paths./elementtemplates/{webId}/securityentries/{name}.delete.parameters[1].required" = true
"paths./elementtemplates/{webId}/securityentries/{name}.delete.parameters[1].type" = "string"
"paths./elementtemplates/{webId}/securityentries/{name}.delete.parameters[2].description" = "If false, the new access permissions are only applied to the associated object. If true, the access permissions of children with any parent-child reference types will change when the permissions on the primary parent change."
"paths./elementtemplates/{webId}/securityentries/{name}.delete.parameters[2].in" = "query"
"paths./elementtemplates/{webId}/securityentries/{name}.delete.parameters[2].name" = "applyToChildren"
"paths./elementtemplates/{webId}/securityentries/{name}.delete.parameters[2].required" = false
"paths./elementtemplates/{webId}/securityentries/{name}.delete.parameters[2].type" = "boolean"
"paths./elementtemplates/{webId}/securityentries/{name}.delete.responses.204.description" = "The security entry was deleted."
"paths./elementtemplates/{webId}/securityentries/{name}.delete.summary" = "Delete a security entry owned by the element template."
"paths./elementtemplates/{webId}/securityentries/{name}.delete.tags.length" = 1
"paths./elementtemplates/{webId}/securityentries/{name}.delete.tags[0]" = "ElementTemplate"
"paths./elementtemplates/{webId}/securityentries/{name}.get.consumes.length" = 0
"paths./elementtemplates/{webId}/securityentries/{name}.get.deprecated" = false
"paths./elementtemplates/{webId}/securityentries/{name}.get.operationId" = "ElementTemplate_GetSecurityEntryByName"
"paths./elementtemplates/{webId}/securityentries/{name}.get.parameters.length" = 3
"paths./elementtemplates/{webId}/securityentries/{name}.get.parameters[0].description" = "The name of the security entry. For every backslash character (\\) in the security entry name, replace with asterisk (*). As an example, use domain*username instead of domain\\username."
"paths./elementtemplates/{webId}/securityentries/{name}.get.parameters[0].in" = "path"
"paths./elementtemplates/{webId}/securityentries/{name}.get.parameters[0].name" = "name"
"paths./elementtemplates/{webId}/securityentries/{name}.get.parameters[0].required" = true
"paths./elementtemplates/{webId}/securityentries/{name}.get.parameters[0].type" = "string"
"paths./elementtemplates/{webId}/securityentries/{name}.get.parameters[1].description" = "The ID of the element template."
"paths./elementtemplates/{webId}/securityentries/{name}.get.parameters[1].in" = "path"
"paths./elementtemplates/{webId}/securityentries/{name}.get.parameters[1].name" = "webId"
"paths./elementtemplates/{webId}/securityentries/{name}.get.parameters[1].required" = true
"paths./elementtemplates/{webId}/securityentries/{name}.get.parameters[1].type" = "string"
"paths./elementtemplates/{webId}/securityentries/{name}.get.parameters[2].description" = "List of fields to be returned in the response, separated by semicolons (;). If this parameter is not specified, all available fields will be returned."
"paths./elementtemplates/{webId}/securityentries/{name}.get.parameters[2].in" = "query"
"paths./elementtemplates/{webId}/securityentries/{name}.get.parameters[2].name" = "selectedFields"
"paths./elementtemplates/{webId}/securityentries/{name}.get.parameters[2].required" = false
"paths./elementtemplates/{webId}/securityentries/{name}.get.parameters[2].type" = "string"
"paths./elementtemplates/{webId}/securityentries/{name}.get.responses.200.description" = "The security entry matching the specified condition."
"paths./elementtemplates/{webId}/securityentries/{name}.get.responses.200.schema.$ref" = "#/definitions/Items[SecurityEntry]"
"paths./elementtemplates/{webId}/securityentries/{name}.get.responses.404.description" = "The security entry with the specified name is not found."
"paths./elementtemplates/{webId}/securityentries/{name}.get.responses.404.schema.$ref" = "#/definitions/Errors"
"paths./elementtemplates/{webId}/securityentries/{name}.get.summary" = "Retrieve the security entry associated with the element template with the specified name."
"paths./elementtemplates/{webId}/securityentries/{name}.get.tags.length" = 1
"paths./elementtemplates/{webId}/securityentries/{name}.get.tags[0]" = "ElementTemplate"
"paths./elementtemplates/{webId}/securityentries/{name}.put.consumes.length" = 2
"paths./elementtemplates/{webId}/securityentries/{name}.put.consumes[0]" = "application/json"
"paths./elementtemplates/{webId}/securityentries/{name}.put.consumes[1]" = "text/json"
"paths./elementtemplates/{webId}/securityentries/{name}.put.deprecated" = false
"paths./elementtemplates/{webId}/securityentries/{name}.put.operationId" = "ElementTemplate_UpdateSecurityEntry"
"paths./elementtemplates/{webId}/securityentries/{name}.put.parameters.length" = 4
"paths./elementtemplates/{webId}/securityentries/{name}.put.parameters[0].description" = "The name of the security entry."
"paths./elementtemplates/{webId}/securityentries/{name}.put.parameters[0].in" = "path"
"paths./elementtemplates/{webId}/securityentries/{name}.put.parameters[0].name" = "name"
"paths./elementtemplates/{webId}/securityentries/{name}.put.parameters[0].required" = true
"paths./elementtemplates/{webId}/securityentries/{name}.put.parameters[0].type" = "string"
"paths./elementtemplates/{webId}/securityentries/{name}.put.parameters[1].description" = "The ID of the element template where the security entry will be updated."
"paths./elementtemplates/{webId}/securityentries/{name}.put.parameters[1].in" = "path"
"paths./elementtemplates/{webId}/securityentries/{name}.put.parameters[1].name" = "webId"
"paths./elementtemplates/{webId}/securityentries/{name}.put.parameters[1].required" = true
"paths./elementtemplates/{webId}/securityentries/{name}.put.parameters[1].type" = "string"
"paths./elementtemplates/{webId}/securityentries/{name}.put.parameters[2].description" = "The new security entry definition. The full list of allow and deny rights must be supplied or they will be removed."
"paths./elementtemplates/{webId}/securityentries/{name}.put.parameters[2].in" = "body"
"paths./elementtemplates/{webId}/securityentries/{name}.put.parameters[2].name" = "securityEntry"
"paths./elementtemplates/{webId}/securityentries/{name}.put.parameters[2].required" = true
"paths./elementtemplates/{webId}/securityentries/{name}.put.parameters[2].schema.$ref" = "#/definitions/SecurityEntry"
"paths./elementtemplates/{webId}/securityentries/{name}.put.parameters[3].description" = "If false, the new access permissions are only applied to the associated object. If true, the access permissions of children with any parent-child reference types will change when the permissions on the primary parent change."
"paths./elementtemplates/{webId}/securityentries/{name}.put.parameters[3].in" = "query"
"paths./elementtemplates/{webId}/securityentries/{name}.put.parameters[3].name" = "applyToChildren"
"paths./elementtemplates/{webId}/securityentries/{name}.put.parameters[3].required" = false
"paths./elementtemplates/{webId}/securityentries/{name}.put.parameters[3].type" = "boolean"
"paths./elementtemplates/{webId}/securityentries/{name}.put.responses.204.description" = "The security entry was updated."
"paths./elementtemplates/{webId}/securityentries/{name}.put.summary" = "Update a security entry owned by the element template."
"paths./elementtemplates/{webId}/securityentries/{name}.put.tags.length" = 1
"paths./elementtemplates/{webId}/securityentries/{name}.put.tags[0]" = "ElementTemplate"
"paths./enumerationsets.get.consumes.length" = 0
"paths./enumerationsets.get.deprecated" = false
"paths./enumerationsets.get.description" = "This method returns an enumeration set based on the hierarchical path associated with it, and should be used when a path has been received from a separate part of the PI System for use in the PI Web API. Users should primarily search with the WebID when available."
"paths./enumerationsets.get.operationId" = "EnumerationSet_GetByPath"
"paths./enumerationsets.get.parameters.length" = 2
"paths./enumerationsets.get.parameters[0].description" = "The path to the target enumeration set."
"paths./enumerationsets.get.parameters[0].in" = "query"
"paths./enumerationsets.get.parameters[0].name" = "path"
"paths./enumerationsets.get.parameters[0].required" = true
"paths./enumerationsets.get.parameters[0].type" = "string"
"paths./enumerationsets.get.parameters[1].description" = "List of fields to be returned in the response, separated by semicolons (;). If this parameter is not specified, all available fields will be returned."
"paths./enumerationsets.get.parameters[1].in" = "query"
"paths./enumerationsets.get.parameters[1].name" = "selectedFields"
"paths./enumerationsets.get.parameters[1].required" = false
"paths./enumerationsets.get.parameters[1].type" = "string"
"paths./enumerationsets.get.responses.200.description" = "The specified enumeration set."
"paths./enumerationsets.get.responses.200.schema.$ref" = "#/definitions/EnumerationSet"
"paths./enumerationsets.get.summary" = "Retrieve an enumeration set by path."
"paths./enumerationsets.get.tags.length" = 1
"paths./enumerationsets.get.tags[0]" = "EnumerationSet"
"paths./enumerationsets/{webId}.delete.consumes.length" = 0
"paths./enumerationsets/{webId}.delete.deprecated" = false
"paths./enumerationsets/{webId}.delete.operationId" = "EnumerationSet_Delete"
"paths./enumerationsets/{webId}.delete.parameters.length" = 1
"paths./enumerationsets/{webId}.delete.parameters[0].description" = "The ID of the enumeration set to delete."
"paths./enumerationsets/{webId}.delete.parameters[0].in" = "path"
"paths./enumerationsets/{webId}.delete.parameters[0].name" = "webId"
"paths./enumerationsets/{webId}.delete.parameters[0].required" = true
"paths./enumerationsets/{webId}.delete.parameters[0].type" = "string"
"paths./enumerationsets/{webId}.delete.responses.204.description" = "The enumeration set was deleted."
"paths./enumerationsets/{webId}.delete.summary" = "Delete an enumeration set."
"paths./enumerationsets/{webId}.delete.tags.length" = 1
"paths./enumerationsets/{webId}.delete.tags[0]" = "EnumerationSet"
"paths./enumerationsets/{webId}.get.consumes.length" = 0
"paths./enumerationsets/{webId}.get.deprecated" = false
"paths./enumerationsets/{webId}.get.operationId" = "EnumerationSet_Get"
"paths./enumerationsets/{webId}.get.parameters.length" = 2
"paths./enumerationsets/{webId}.get.parameters[0].description" = "The ID of the enumeration set."
"paths./enumerationsets/{webId}.get.parameters[0].in" = "path"
"paths./enumerationsets/{webId}.get.parameters[0].name" = "webId"
"paths./enumerationsets/{webId}.get.parameters[0].required" = true
"paths./enumerationsets/{webId}.get.parameters[0].type" = "string"
"paths./enumerationsets/{webId}.get.parameters[1].description" = "List of fields to be returned in the response, separated by semicolons (;). If this parameter is not specified, all available fields will be returned."
"paths./enumerationsets/{webId}.get.parameters[1].in" = "query"
"paths./enumerationsets/{webId}.get.parameters[1].name" = "selectedFields"
"paths./enumerationsets/{webId}.get.parameters[1].required" = false
"paths./enumerationsets/{webId}.get.parameters[1].type" = "string"
"paths./enumerationsets/{webId}.get.responses.200.description" = "The specified enumeration sets."
"paths./enumerationsets/{webId}.get.responses.200.schema.$ref" = "#/definitions/EnumerationSet"
"paths./enumerationsets/{webId}.get.summary" = "Retrieve an enumeration set."
"paths./enumerationsets/{webId}.get.tags.length" = 1
"paths./enumerationsets/{webId}.get.tags[0]" = "EnumerationSet"
"paths./enumerationsets/{webId}.patch.consumes.length" = 2
"paths./enumerationsets/{webId}.patch.consumes[0]" = "application/json"
"paths./enumerationsets/{webId}.patch.consumes[1]" = "text/json"
"paths./enumerationsets/{webId}.patch.deprecated" = false
"paths./enumerationsets/{webId}.patch.operationId" = "EnumerationSet_Update"
"paths./enumerationsets/{webId}.patch.parameters.length" = 2
"paths./enumerationsets/{webId}.patch.parameters[0].description" = "The ID of the enumeration set to update."
"paths./enumerationsets/{webId}.patch.parameters[0].in" = "path"
"paths./enumerationsets/{webId}.patch.parameters[0].name" = "webId"
"paths./enumerationsets/{webId}.patch.parameters[0].required" = true
"paths./enumerationsets/{webId}.patch.parameters[0].type" = "string"
"paths./enumerationsets/{webId}.patch.parameters[1].description" = "A partial enumeration set containing the desired changes."
"paths./enumerationsets/{webId}.patch.parameters[1].in" = "body"
"paths./enumerationsets/{webId}.patch.parameters[1].name" = "enumerationSet"
"paths./enumerationsets/{webId}.patch.parameters[1].required" = true
"paths./enumerationsets/{webId}.patch.parameters[1].schema.$ref" = "#/definitions/EnumerationSet"
"paths./enumerationsets/{webId}.patch.responses.204.description" = "The enumeration set was updated."
"paths./enumerationsets/{webId}.patch.summary" = "Update an enumeration set by replacing items in its definition."
"paths./enumerationsets/{webId}.patch.tags.length" = 1
"paths./enumerationsets/{webId}.patch.tags[0]" = "EnumerationSet"
"paths./enumerationsets/{webId}/enumerationvalues.get.consumes.length" = 0
"paths./enumerationsets/{webId}/enumerationvalues.get.deprecated" = false
"paths./enumerationsets/{webId}/enumerationvalues.get.operationId" = "EnumerationSet_GetValues"
"paths./enumerationsets/{webId}/enumerationvalues.get.parameters.length" = 2
"paths./enumerationsets/{webId}/enumerationvalues.get.parameters[0].description" = "The ID of the enumeration set."
"paths./enumerationsets/{webId}/enumerationvalues.get.parameters[0].in" = "path"
"paths./enumerationsets/{webId}/enumerationvalues.get.parameters[0].name" = "webId"
"paths./enumerationsets/{webId}/enumerationvalues.get.parameters[0].required" = true
"paths./enumerationsets/{webId}/enumerationvalues.get.parameters[0].type" = "string"
"paths./enumerationsets/{webId}/enumerationvalues.get.parameters[1].description" = "List of fields to be returned in the response, separated by semicolons (;). If this parameter is not specified, all available fields will be returned."
"paths./enumerationsets/{webId}/enumerationvalues.get.parameters[1].in" = "query"
"paths./enumerationsets/{webId}/enumerationvalues.get.parameters[1].name" = "selectedFields"
"paths./enumerationsets/{webId}/enumerationvalues.get.parameters[1].required" = false
"paths./enumerationsets/{webId}/enumerationvalues.get.parameters[1].type" = "string"
"paths./enumerationsets/{webId}/enumerationvalues.get.responses.200.description" = "The specified enumeration set's values"
"paths./enumerationsets/{webId}/enumerationvalues.get.responses.200.schema.$ref" = "#/definitions/Items[EnumerationValue]"
"paths./enumerationsets/{webId}/enumerationvalues.get.summary" = "Retrieve an enumeration set's values."
"paths./enumerationsets/{webId}/enumerationvalues.get.tags.length" = 1
"paths./enumerationsets/{webId}/enumerationvalues.get.tags[0]" = "EnumerationSet"
"paths./enumerationsets/{webId}/enumerationvalues.post.consumes.length" = 2
"paths./enumerationsets/{webId}/enumerationvalues.post.consumes[0]" = "application/json"
"paths./enumerationsets/{webId}/enumerationvalues.post.consumes[1]" = "text/json"
"paths./enumerationsets/{webId}/enumerationvalues.post.deprecated" = false
"paths./enumerationsets/{webId}/enumerationvalues.post.operationId" = "EnumerationSet_CreateValue"
"paths./enumerationsets/{webId}/enumerationvalues.post.parameters.length" = 2
"paths./enumerationsets/{webId}/enumerationvalues.post.parameters[0].description" = "The ID of the enumeration set on which to create the enumeration value."
"paths./enumerationsets/{webId}/enumerationvalues.post.parameters[0].in" = "path"
"paths./enumerationsets/{webId}/enumerationvalues.post.parameters[0].name" = "webId"
"paths./enumerationsets/{webId}/enumerationvalues.post.parameters[0].required" = true
"paths./enumerationsets/{webId}/enumerationvalues.post.parameters[0].type" = "string"
"paths./enumerationsets/{webId}/enumerationvalues.post.parameters[1].description" = "The new enumeration value definition."
"paths./enumerationsets/{webId}/enumerationvalues.post.parameters[1].in" = "body"
"paths./enumerationsets/{webId}/enumerationvalues.post.parameters[1].name" = "enumerationValue"
"paths./enumerationsets/{webId}/enumerationvalues.post.parameters[1].required" = true
"paths./enumerationsets/{webId}/enumerationvalues.post.parameters[1].schema.$ref" = "#/definitions/EnumerationValue"
"paths./enumerationsets/{webId}/enumerationvalues.post.responses.201.description" = "The enumeration value was created. The response's Location header is a link to the enumeration value."
"paths./enumerationsets/{webId}/enumerationvalues.post.summary" = "Create an enumeration value for a enumeration set."
"paths./enumerationsets/{webId}/enumerationvalues.post.tags.length" = 1
"paths./enumerationsets/{webId}/enumerationvalues.post.tags[0]" = "EnumerationSet"
"paths./enumerationsets/{webId}/security.get.consumes.length" = 0
"paths./enumerationsets/{webId}/security.get.deprecated" = false
"paths./enumerationsets/{webId}/security.get.operationId" = "EnumerationSet_GetSecurity"
"paths./enumerationsets/{webId}/security.get.parameters.length" = 4
"paths./enumerationsets/{webId}/security.get.parameters[0].description" = "The ID of the enumeration set for the security to be checked."
"paths./enumerationsets/{webId}/security.get.parameters[0].in" = "path"
"paths./enumerationsets/{webId}/security.get.parameters[0].name" = "webId"
"paths./enumerationsets/{webId}/security.get.parameters[0].required" = true
"paths./enumerationsets/{webId}/security.get.parameters[0].type" = "string"
"paths./enumerationsets/{webId}/security.get.parameters[1].collectionFormat" = "multi"
"paths./enumerationsets/{webId}/security.get.parameters[1].description" = "The user identity for the security information to be checked. Multiple security identities may be specified with multiple instances of the parameter. If the parameter is not specified, only the current user's security rights will be returned."
"paths./enumerationsets/{webId}/security.get.parameters[1].in" = "query"
"paths./enumerationsets/{webId}/security.get.parameters[1].items.type" = "string"
"paths./enumerationsets/{webId}/security.get.parameters[1].name" = "userIdentity"
"paths./enumerationsets/{webId}/security.get.parameters[1].required" = true
"paths./enumerationsets/{webId}/security.get.parameters[1].type" = "array"
"paths./enumerationsets/{webId}/security.get.parameters[2].description" = "Indicates if the security cache should be refreshed before getting security information. The default is 'false'."
"paths./enumerationsets/{webId}/security.get.parameters[2].in" = "query"
"paths./enumerationsets/{webId}/security.get.parameters[2].name" = "forceRefresh"
"paths./enumerationsets/{webId}/security.get.parameters[2].required" = false
"paths./enumerationsets/{webId}/security.get.parameters[2].type" = "boolean"
"paths./enumerationsets/{webId}/security.get.parameters[3].description" = "List of fields to be returned in the response, separated by semicolons (;). If this parameter is not specified, all available fields will be returned."
"paths./enumerationsets/{webId}/security.get.parameters[3].in" = "query"
"paths./enumerationsets/{webId}/security.get.parameters[3].name" = "selectedFields"
"paths./enumerationsets/{webId}/security.get.parameters[3].required" = false
"paths./enumerationsets/{webId}/security.get.parameters[3].type" = "string"
"paths./enumerationsets/{webId}/security.get.responses.200.description" = "Security rights."
"paths./enumerationsets/{webId}/security.get.responses.200.schema.$ref" = "#/definitions/Items[SecurityRights]"
"paths./enumerationsets/{webId}/security.get.responses.400.description" = "An invalid or local account is specified as the user identity."
"paths./enumerationsets/{webId}/security.get.responses.400.schema.$ref" = "#/definitions/Errors"
"paths./enumerationsets/{webId}/security.get.responses.401.description" = "Access denied for the specified user identity."
"paths./enumerationsets/{webId}/security.get.responses.401.schema.$ref" = "#/definitions/Errors"
"paths./enumerationsets/{webId}/security.get.responses.409.description" = "Unsupported when using Anonymous authentication method."
"paths./enumerationsets/{webId}/security.get.responses.409.schema.$ref" = "#/definitions/Errors"
"paths./enumerationsets/{webId}/security.get.responses.502.description" = "Failed to retrieve the specified user identity."
"paths./enumerationsets/{webId}/security.get.responses.502.schema.$ref" = "#/definitions/Errors"
"paths./enumerationsets/{webId}/security.get.summary" = "Get the security information of the specified security item associated with the enumeration set for a specified user."
"paths./enumerationsets/{webId}/security.get.tags.length" = 1
"paths./enumerationsets/{webId}/security.get.tags[0]" = "EnumerationSet"
"paths./enumerationsets/{webId}/securityentries.get.consumes.length" = 0
"paths./enumerationsets/{webId}/securityentries.get.deprecated" = false
"paths./enumerationsets/{webId}/securityentries.get.operationId" = "EnumerationSet_GetSecurityEntries"
"paths./enumerationsets/{webId}/securityentries.get.parameters.length" = 3
"paths./enumerationsets/{webId}/securityentries.get.parameters[0].description" = "The ID of the enumeration set."
"paths./enumerationsets/{webId}/securityentries.get.parameters[0].in" = "path"
"paths./enumerationsets/{webId}/securityentries.get.parameters[0].name" = "webId"
"paths./enumerationsets/{webId}/securityentries.get.parameters[0].required" = true
"paths./enumerationsets/{webId}/securityentries.get.parameters[0].type" = "string"
"paths./enumerationsets/{webId}/securityentries.get.parameters[1].description" = "The name query string used for filtering security entries. The default is no filter."
"paths./enumerationsets/{webId}/securityentries.get.parameters[1].in" = "query"
"paths./enumerationsets/{webId}/securityentries.get.parameters[1].name" = "nameFilter"
"paths./enumerationsets/{webId}/securityentries.get.parameters[1].required" = false
"paths./enumerationsets/{webId}/securityentries.get.parameters[1].type" = "string"
"paths./enumerationsets/{webId}/securityentries.get.parameters[2].description" = "List of fields to be returned in the response, separated by semicolons (;). If this parameter is not specified, all available fields will be returned."
"paths./enumerationsets/{webId}/securityentries.get.parameters[2].in" = "query"
"paths./enumerationsets/{webId}/securityentries.get.parameters[2].name" = "selectedFields"
"paths./enumerationsets/{webId}/securityentries.get.parameters[2].required" = false
"paths./enumerationsets/{webId}/securityentries.get.parameters[2].type" = "string"
"paths./enumerationsets/{webId}/securityentries.get.responses.200.description" = "A list of security entries matching the specified condition."
"paths./enumerationsets/{webId}/securityentries.get.responses.200.schema.$ref" = "#/definitions/Items[SecurityEntry]"
"paths./enumerationsets/{webId}/securityentries.get.summary" = "Retrieve the security entries associated with the enumeration set based on the specified criteria. By default, all security entries for this enumeration set are returned."
"paths./enumerationsets/{webId}/securityentries.get.tags.length" = 1
"paths./enumerationsets/{webId}/securityentries.get.tags[0]" = "EnumerationSet"
"paths./enumerationsets/{webId}/securityentries.post.consumes.length" = 2
"paths./enumerationsets/{webId}/securityentries.post.consumes[0]" = "application/json"
"paths./enumerationsets/{webId}/securityentries.post.consumes[1]" = "text/json"
"paths./enumerationsets/{webId}/securityentries.post.deprecated" = false
"paths./enumerationsets/{webId}/securityentries.post.operationId" = "EnumerationSet_CreateSecurityEntry"
"paths./enumerationsets/{webId}/securityentries.post.parameters.length" = 3
"paths./enumerationsets/{webId}/securityentries.post.parameters[0].description" = "The ID of the enumeration set where the security entry will be created."
"paths./enumerationsets/{webId}/securityentries.post.parameters[0].in" = "path"
"paths./enumerationsets/{webId}/securityentries.post.parameters[0].name" = "webId"
"paths./enumerationsets/{webId}/securityentries.post.parameters[0].required" = true
"paths./enumerationsets/{webId}/securityentries.post.parameters[0].type" = "string"
"paths./enumerationsets/{webId}/securityentries.post.parameters[1].description" = "The new security entry definition. The full list of allow and deny rights must be supplied."
"paths./enumerationsets/{webId}/securityentries.post.parameters[1].in" = "body"
"paths./enumerationsets/{webId}/securityentries.post.parameters[1].name" = "securityEntry"
"paths./enumerationsets/{webId}/securityentries.post.parameters[1].required" = true
"paths./enumerationsets/{webId}/securityentries.post.parameters[1].schema.$ref" = "#/definitions/SecurityEntry"
"paths./enumerationsets/{webId}/securityentries.post.parameters[2].description" = "If false, the new access permissions are only applied to the associated object. If true, the access permissions of children with any parent-child reference types will change when the permissions on the primary parent change."
"paths./enumerationsets/{webId}/securityentries.post.parameters[2].in" = "query"
"paths./enumerationsets/{webId}/securityentries.post.parameters[2].name" = "applyToChildren"
"paths./enumerationsets/{webId}/securityentries.post.parameters[2].required" = false
"paths./enumerationsets/{webId}/securityentries.post.parameters[2].type" = "boolean"
"paths./enumerationsets/{webId}/securityentries.post.responses.201.description" = "The security entry was created. The response's Location header is a link to the security entry."
"paths./enumerationsets/{webId}/securityentries.post.summary" = "Create a security entry owned by the enumeration set."
"paths./enumerationsets/{webId}/securityentries.post.tags.length" = 1
"paths./enumerationsets/{webId}/securityentries.post.tags[0]" = "EnumerationSet"
"paths./enumerationsets/{webId}/securityentries/{name}.delete.consumes.length" = 0
"paths./enumerationsets/{webId}/securityentries/{name}.delete.deprecated" = false
"paths./enumerationsets/{webId}/securityentries/{name}.delete.operationId" = "EnumerationSet_DeleteSecurityEntry"
"paths./enumerationsets/{webId}/securityentries/{name}.delete.parameters.length" = 3
"paths./enumerationsets/{webId}/securityentries/{name}.delete.parameters[0].description" = "The name of the security entry. For every backslash character (\\) in the security entry name, replace with asterisk (*). As an example, use domain*username instead of domain\\username."
"paths./enumerationsets/{webId}/securityentries/{name}.delete.parameters[0].in" = "path"
"paths./enumerationsets/{webId}/securityentries/{name}.delete.parameters[0].name" = "name"
"paths./enumerationsets/{webId}/securityentries/{name}.delete.parameters[0].required" = true
"paths./enumerationsets/{webId}/securityentries/{name}.delete.parameters[0].type" = "string"
"paths./enumerationsets/{webId}/securityentries/{name}.delete.parameters[1].description" = "The ID of the enumeration set where the security entry will be deleted."
"paths./enumerationsets/{webId}/securityentries/{name}.delete.parameters[1].in" = "path"
"paths./enumerationsets/{webId}/securityentries/{name}.delete.parameters[1].name" = "webId"
"paths./enumerationsets/{webId}/securityentries/{name}.delete.parameters[1].required" = true
"paths./enumerationsets/{webId}/securityentries/{name}.delete.parameters[1].type" = "string"
"paths./enumerationsets/{webId}/securityentries/{name}.delete.parameters[2].description" = "If false, the new access permissions are only applied to the associated object. If true, the access permissions of children with any parent-child reference types will change when the permissions on the primary parent change."
"paths./enumerationsets/{webId}/securityentries/{name}.delete.parameters[2].in" = "query"
"paths./enumerationsets/{webId}/securityentries/{name}.delete.parameters[2].name" = "applyToChildren"
"paths./enumerationsets/{webId}/securityentries/{name}.delete.parameters[2].required" = false
"paths./enumerationsets/{webId}/securityentries/{name}.delete.parameters[2].type" = "boolean"
"paths./enumerationsets/{webId}/securityentries/{name}.delete.responses.204.description" = "The security entry was deleted."
"paths./enumerationsets/{webId}/securityentries/{name}.delete.summary" = "Delete a security entry owned by the enumeration set."
"paths./enumerationsets/{webId}/securityentries/{name}.delete.tags.length" = 1
"paths./enumerationsets/{webId}/securityentries/{name}.delete.tags[0]" = "EnumerationSet"
"paths./enumerationsets/{webId}/securityentries/{name}.get.consumes.length" = 0
"paths./enumerationsets/{webId}/securityentries/{name}.get.deprecated" = false
"paths./enumerationsets/{webId}/securityentries/{name}.get.operationId" = "EnumerationSet_GetSecurityEntryByName"
"paths./enumerationsets/{webId}/securityentries/{name}.get.parameters.length" = 3
"paths./enumerationsets/{webId}/securityentries/{name}.get.parameters[0].description" = "The name of the security entry. For every backslash character (\\) in the security entry name, replace with asterisk (*). As an example, use domain*username instead of domain\\username."
"paths./enumerationsets/{webId}/securityentries/{name}.get.parameters[0].in" = "path"
"paths./enumerationsets/{webId}/securityentries/{name}.get.parameters[0].name" = "name"
"paths./enumerationsets/{webId}/securityentries/{name}.get.parameters[0].required" = true
"paths./enumerationsets/{webId}/securityentries/{name}.get.parameters[0].type" = "string"
"paths./enumerationsets/{webId}/securityentries/{name}.get.parameters[1].description" = "The ID of the enumeration set."
"paths./enumerationsets/{webId}/securityentries/{name}.get.parameters[1].in" = "path"
"paths./enumerationsets/{webId}/securityentries/{name}.get.parameters[1].name" = "webId"
"paths./enumerationsets/{webId}/securityentries/{name}.get.parameters[1].required" = true
"paths./enumerationsets/{webId}/securityentries/{name}.get.parameters[1].type" = "string"
"paths./enumerationsets/{webId}/securityentries/{name}.get.parameters[2].description" = "List of fields to be returned in the response, separated by semicolons (;). If this parameter is not specified, all available fields will be returned."
"paths./enumerationsets/{webId}/securityentries/{name}.get.parameters[2].in" = "query"
"paths./enumerationsets/{webId}/securityentries/{name}.get.parameters[2].name" = "selectedFields"
"paths./enumerationsets/{webId}/securityentries/{name}.get.parameters[2].required" = false
"paths./enumerationsets/{webId}/securityentries/{name}.get.parameters[2].type" = "string"
"paths./enumerationsets/{webId}/securityentries/{name}.get.responses.200.description" = "The security entry matching the specified condition."
"paths./enumerationsets/{webId}/securityentries/{name}.get.responses.200.schema.$ref" = "#/definitions/SecurityEntry"
"paths./enumerationsets/{webId}/securityentries/{name}.get.responses.404.description" = "The security entry with the specified name is not found."
"paths./enumerationsets/{webId}/securityentries/{name}.get.responses.404.schema.$ref" = "#/definitions/Errors"
"paths./enumerationsets/{webId}/securityentries/{name}.get.summary" = "Retrieve the security entry associated with the enumeration set with the specified name."
"paths./enumerationsets/{webId}/securityentries/{name}.get.tags.length" = 1
"paths./enumerationsets/{webId}/securityentries/{name}.get.tags[0]" = "EnumerationSet"
"paths./enumerationsets/{webId}/securityentries/{name}.put.consumes.length" = 2
"paths./enumerationsets/{webId}/securityentries/{name}.put.consumes[0]" = "application/json"
"paths./enumerationsets/{webId}/securityentries/{name}.put.consumes[1]" = "text/json"
"paths./enumerationsets/{webId}/securityentries/{name}.put.deprecated" = false
"paths./enumerationsets/{webId}/securityentries/{name}.put.operationId" = "EnumerationSet_UpdateSecurityEntry"
"paths./enumerationsets/{webId}/securityentries/{name}.put.parameters.length" = 4
"paths./enumerationsets/{webId}/securityentries/{name}.put.parameters[0].description" = "The name of the security entry."
"paths./enumerationsets/{webId}/securityentries/{name}.put.parameters[0].in" = "path"
"paths./enumerationsets/{webId}/securityentries/{name}.put.parameters[0].name" = "name"
"paths./enumerationsets/{webId}/securityentries/{name}.put.parameters[0].required" = true
"paths./enumerationsets/{webId}/securityentries/{name}.put.parameters[0].type" = "string"
"paths./enumerationsets/{webId}/securityentries/{name}.put.parameters[1].description" = "The ID of the enumeration set where the security entry will be updated."
"paths./enumerationsets/{webId}/securityentries/{name}.put.parameters[1].in" = "path"
"paths./enumerationsets/{webId}/securityentries/{name}.put.parameters[1].name" = "webId"
"paths./enumerationsets/{webId}/securityentries/{name}.put.parameters[1].required" = true
"paths./enumerationsets/{webId}/securityentries/{name}.put.parameters[1].type" = "string"
"paths./enumerationsets/{webId}/securityentries/{name}.put.parameters[2].description" = "The new security entry definition. The full list of allow and deny rights must be supplied or they will be removed."
"paths./enumerationsets/{webId}/securityentries/{name}.put.parameters[2].in" = "body"
"paths./enumerationsets/{webId}/securityentries/{name}.put.parameters[2].name" = "securityEntry"
"paths./enumerationsets/{webId}/securityentries/{name}.put.parameters[2].required" = true
"paths./enumerationsets/{webId}/securityentries/{name}.put.parameters[2].schema.$ref" = "#/definitions/SecurityEntry"
"paths./enumerationsets/{webId}/securityentries/{name}.put.parameters[3].description" = "If false, the new access permissions are only applied to the associated object. If true, the access permissions of children with any parent-child reference types will change when the permissions on the primary parent change."
"paths./enumerationsets/{webId}/securityentries/{name}.put.parameters[3].in" = "query"
"paths./enumerationsets/{webId}/securityentries/{name}.put.parameters[3].name" = "applyToChildren"
"paths./enumerationsets/{webId}/securityentries/{name}.put.parameters[3].required" = false
"paths./enumerationsets/{webId}/securityentries/{name}.put.parameters[3].type" = "boolean"
"paths./enumerationsets/{webId}/securityentries/{name}.put.responses.204.description" = "The security entry was updated."
"paths./enumerationsets/{webId}/securityentries/{name}.put.summary" = "Update a security entry owned by the enumeration set."
"paths./enumerationsets/{webId}/securityentries/{name}.put.tags.length" = 1
"paths./enumerationsets/{webId}/securityentries/{name}.put.tags[0]" = "EnumerationSet"
"paths./enumerationvalues.get.consumes.length" = 0
"paths./enumerationvalues.get.deprecated" = false
"paths./enumerationvalues.get.description" = "This method returns a enumeration value based on the hierarchical path associated with it, and should be used when a path has been received from a separate part of the PI System for use in the PI Web API. Users should primarily search with the WebID when available."
"paths./enumerationvalues.get.operationId" = "EnumerationValue_GetByPath"
"paths./enumerationvalues.get.parameters.length" = 2
"paths./enumerationvalues.get.parameters[0].description" = "The path to the target enumeration value."
"paths./enumerationvalues.get.parameters[0].in" = "query"
"paths./enumerationvalues.get.parameters[0].name" = "path"
"paths./enumerationvalues.get.parameters[0].required" = true
"paths./enumerationvalues.get.parameters[0].type" = "string"
"paths./enumerationvalues.get.parameters[1].description" = "List of fields to be returned in the response, separated by semicolons (;). If this parameter is not specified, all available fields will be returned."
"paths./enumerationvalues.get.parameters[1].in" = "query"
"paths./enumerationvalues.get.parameters[1].name" = "selectedFields"
"paths./enumerationvalues.get.parameters[1].required" = false
"paths./enumerationvalues.get.parameters[1].type" = "string"
"paths./enumerationvalues.get.responses.200.description" = "The specified enumeration set."
"paths./enumerationvalues.get.responses.200.schema.$ref" = "#/definitions/EnumerationValue"
"paths./enumerationvalues.get.summary" = "Retrieve an enumeration value by path."
"paths./enumerationvalues.get.tags.length" = 1
"paths./enumerationvalues.get.tags[0]" = "EnumerationValue"
"paths./enumerationvalues/{webId}.delete.consumes.length" = 0
"paths./enumerationvalues/{webId}.delete.deprecated" = false
"paths./enumerationvalues/{webId}.delete.description" = "Deleting a value will remove it from the enumeration set along with any value references within the PI Web API system."
"paths./enumerationvalues/{webId}.delete.operationId" = "EnumerationValue_DeleteEnumerationValue"
"paths./enumerationvalues/{webId}.delete.parameters.length" = 1
"paths./enumerationvalues/{webId}.delete.parameters[0].description" = "The ID of the enumeration value."
"paths./enumerationvalues/{webId}.delete.parameters[0].in" = "path"
"paths./enumerationvalues/{webId}.delete.parameters[0].name" = "webId"
"paths./enumerationvalues/{webId}.delete.parameters[0].required" = true
"paths./enumerationvalues/{webId}.delete.parameters[0].type" = "string"
"paths./enumerationvalues/{webId}.delete.responses.204.description" = "The enumeration value was deleted."
"paths./enumerationvalues/{webId}.delete.summary" = "Delete an enumeration value from an enumeration set."
"paths./enumerationvalues/{webId}.delete.tags.length" = 1
"paths./enumerationvalues/{webId}.delete.tags[0]" = "EnumerationValue"
"paths./enumerationvalues/{webId}.get.consumes.length" = 0
"paths./enumerationvalues/{webId}.get.deprecated" = false
"paths./enumerationvalues/{webId}.get.operationId" = "EnumerationValue_Get"
"paths./enumerationvalues/{webId}.get.parameters.length" = 2
"paths./enumerationvalues/{webId}.get.parameters[0].description" = "The ID of the enumeration value."
"paths./enumerationvalues/{webId}.get.parameters[0].in" = "path"
"paths./enumerationvalues/{webId}.get.parameters[0].name" = "webId"
"paths./enumerationvalues/{webId}.get.parameters[0].required" = true
"paths./enumerationvalues/{webId}.get.parameters[0].type" = "string"
"paths./enumerationvalues/{webId}.get.parameters[1].description" = "List of fields to be returned in the response, separated by semicolons (;). If this parameter is not specified, all available fields will be returned."
"paths./enumerationvalues/{webId}.get.parameters[1].in" = "query"
"paths./enumerationvalues/{webId}.get.parameters[1].name" = "selectedFields"
"paths./enumerationvalues/{webId}.get.parameters[1].required" = false
"paths./enumerationvalues/{webId}.get.parameters[1].type" = "string"
"paths./enumerationvalues/{webId}.get.responses.200.description" = "The specified enumeration value mapping"
"paths./enumerationvalues/{webId}.get.responses.200.schema.$ref" = "#/definitions/EnumerationValue"
"paths./enumerationvalues/{webId}.get.summary" = "Retrieve an enumeration value mapping"
"paths./enumerationvalues/{webId}.get.tags.length" = 1
"paths./enumerationvalues/{webId}.get.tags[0]" = "EnumerationValue"
"paths./enumerationvalues/{webId}.patch.consumes.length" = 2
"paths./enumerationvalues/{webId}.patch.consumes[0]" = "application/json"
"paths./enumerationvalues/{webId}.patch.consumes[1]" = "text/json"
"paths./enumerationvalues/{webId}.patch.deprecated" = false
"paths./enumerationvalues/{webId}.patch.operationId" = "EnumerationValue_UpdateEnumerationValue"
"paths./enumerationvalues/{webId}.patch.parameters.length" = 2
"paths./enumerationvalues/{webId}.patch.parameters[0].description" = "The ID of the enumeration value to update."
"paths./enumerationvalues/{webId}.patch.parameters[0].in" = "path"
"paths./enumerationvalues/{webId}.patch.parameters[0].name" = "webId"
"paths./enumerationvalues/{webId}.patch.parameters[0].required" = true
"paths./enumerationvalues/{webId}.patch.parameters[0].type" = "string"
"paths./enumerationvalues/{webId}.patch.parameters[1].description" = "A partial enumeration value containing the desired changes."
"paths./enumerationvalues/{webId}.patch.parameters[1].in" = "body"
"paths./enumerationvalues/{webId}.patch.parameters[1].name" = "enumerationValue"
"paths./enumerationvalues/{webId}.patch.parameters[1].required" = true
"paths./enumerationvalues/{webId}.patch.parameters[1].schema.$ref" = "#/definitions/EnumerationValue"
"paths./enumerationvalues/{webId}.patch.responses.204.description" = "The enumeration set was updated."
"paths./enumerationvalues/{webId}.patch.summary" = "Update an enumeration value by replacing items in its definition."
"paths./enumerationvalues/{webId}.patch.tags.length" = 1
"paths./enumerationvalues/{webId}.patch.tags[0]" = "EnumerationValue"
"paths./eventframes.get.consumes.length" = 0
"paths./eventframes.get.deprecated" = false
"paths./eventframes.get.description" = "This method returns an event frame based on the hierarchical path associated with it, and should be used when a path has been received from a separate part of the PI System for use in the PI Web API. Users should primarily search with the WebID when available."
"paths./eventframes.get.operationId" = "EventFrame_GetByPath"
"paths./eventframes.get.parameters.length" = 2
"paths./eventframes.get.parameters[0].description" = "The path to the event frame."
"paths./eventframes.get.parameters[0].in" = "query"
"paths./eventframes.get.parameters[0].name" = "path"
"paths./eventframes.get.parameters[0].required" = true
"paths./eventframes.get.parameters[0].type" = "string"
"paths./eventframes.get.parameters[1].description" = "List of fields to be returned in the response, separated by semicolons (;). If this parameter is not specified, all available fields will be returned."
"paths./eventframes.get.parameters[1].in" = "query"
"paths./eventframes.get.parameters[1].name" = "selectedFields"
"paths./eventframes.get.parameters[1].required" = false
"paths./eventframes.get.parameters[1].type" = "string"
"paths./eventframes.get.responses.200.description" = "The specified event frame."
"paths./eventframes.get.responses.200.schema.$ref" = "#/definitions/EventFrame"
"paths./eventframes.get.summary" = "Retrieve an event frame by path."
"paths./eventframes.get.tags.length" = 1
"paths./eventframes.get.tags[0]" = "EventFrame"
"paths./eventframes/multiple.get.consumes.length" = 0
"paths./eventframes/multiple.get.deprecated" = false
"paths./eventframes/multiple.get.operationId" = "EventFrame_GetMultiple"
"paths./eventframes/multiple.get.parameters.length" = 5
"paths./eventframes/multiple.get.parameters[0].description" = "Specifies if the retrieval processes should be run in parallel on the server. This may improve the response time for large amounts of requested attributes. The default is 'false'."
"paths./eventframes/multiple.get.parameters[0].in" = "query"
"paths./eventframes/multiple.get.parameters[0].name" = "asParallel"
"paths./eventframes/multiple.get.parameters[0].required" = false
"paths./eventframes/multiple.get.parameters[0].type" = "boolean"
"paths./eventframes/multiple.get.parameters[1].description" = "The include mode for the return list. The default is 'All'."
"paths./eventframes/multiple.get.parameters[1].in" = "query"
"paths./eventframes/multiple.get.parameters[1].name" = "includeMode"
"paths./eventframes/multiple.get.parameters[1].required" = false
"paths./eventframes/multiple.get.parameters[1].type" = "string"
"paths./eventframes/multiple.get.parameters[2].collectionFormat" = "multi"
"paths./eventframes/multiple.get.parameters[2].description" = "The path of an event frame. Multiple event frames may be specified with multiple instances of the parameter."
"paths./eventframes/multiple.get.parameters[2].in" = "query"
"paths./eventframes/multiple.get.parameters[2].items.type" = "string"
"paths./eventframes/multiple.get.parameters[2].name" = "path"
"paths./eventframes/multiple.get.parameters[2].required" = false
"paths./eventframes/multiple.get.parameters[2].type" = "array"
"paths./eventframes/multiple.get.parameters[3].description" = "List of fields to be returned in the response, separated by semicolons (;). If this parameter is not specified, all available fields will be returned."
"paths./eventframes/multiple.get.parameters[3].in" = "query"
"paths./eventframes/multiple.get.parameters[3].name" = "selectedFields"
"paths./eventframes/multiple.get.parameters[3].required" = false
"paths./eventframes/multiple.get.parameters[3].type" = "string"
"paths./eventframes/multiple.get.parameters[4].collectionFormat" = "multi"
"paths./eventframes/multiple.get.parameters[4].description" = "The ID of an event frame. Multiple event frames may be specified with multiple instances of the parameter."
"paths./eventframes/multiple.get.parameters[4].in" = "query"
"paths./eventframes/multiple.get.parameters[4].items.type" = "string"
"paths./eventframes/multiple.get.parameters[4].name" = "webId"
"paths./eventframes/multiple.get.parameters[4].required" = false
"paths./eventframes/multiple.get.parameters[4].type" = "array"
"paths./eventframes/multiple.get.responses.200.description" = "The requested event frames"
"paths./eventframes/multiple.get.responses.200.schema.$ref" = "#/definitions/Items[Item[EventFrame]]"
"paths./eventframes/multiple.get.responses.207.description" = "Some or all items contain exceptions."
"paths./eventframes/multiple.get.responses.207.schema.$ref" = "#/definitions/Items[Item[EventFrame]]"
"paths./eventframes/multiple.get.summary" = "Retrieve multiple event frames by web ids or paths."
"paths./eventframes/multiple.get.tags.length" = 1
"paths./eventframes/multiple.get.tags[0]" = "EventFrame"
"paths./eventframes/searchbyattribute.post.consumes.length" = 2
"paths./eventframes/searchbyattribute.post.consumes[0]" = "application/json"
"paths./eventframes/searchbyattribute.post.consumes[1]" = "text/json"
"paths./eventframes/searchbyattribute.post.deprecated" = false
"paths./eventframes/searchbyattribute.post.operationId" = "EventFrame_CreateSearchByAttribute"
"paths./eventframes/searchbyattribute.post.parameters.length" = 0
"paths./eventframes/searchbyattribute.post.responses.201.description" = "The link is stored in the response's \"Location\" header. The response content is the first page of the search result by the default parameters."
"paths./eventframes/searchbyattribute.post.responses.400.description" = "Empty or invalid request content."
"paths./eventframes/searchbyattribute.post.responses.400.schema.$ref" = "#/definitions/Errors"
"paths./eventframes/searchbyattribute.post.responses.413.description" = "Request content is too large."
"paths./eventframes/searchbyattribute.post.responses.413.schema.$ref" = "#/definitions/Errors"
"paths./eventframes/searchbyattribute.post.summary" = "Create a link for a \"Search EventFrames By Attribute Value\" operation, whose queries are specified in the request content. The SearchRoot is specified by the Web Id of the root EventFrame. If the SearchRoot is not specified, then the search starts at the Asset Database. ElementTemplate must be provided as the Web ID of the ElementTemplate, which are used to create the EventFrames. All the attributes in the queries must be defined as AttributeTemplates on the ElementTemplate. An array of attribute value queries are ANDed together to find the desired Element objects. At least one value query must be specified. There are limitations on SearchOperators."
"paths./eventframes/searchbyattribute.post.tags.length" = 1
"paths./eventframes/searchbyattribute.post.tags[0]" = "EventFrame"
"paths./eventframes/searchbyattribute/{searchId}.get.consumes.length" = 0
"paths./eventframes/searchbyattribute/{searchId}.get.deprecated" = false
"paths./eventframes/searchbyattribute/{searchId}.get.operationId" = "EventFrame_ExecuteSearchByAttribute"
"paths./eventframes/searchbyattribute/{searchId}.get.parameters.length" = 15
"paths./eventframes/searchbyattribute/{searchId}.get.parameters[0].description" = "The encoded search Id of the \"Search EventFrames By Attribute Value\" operation."
"paths./eventframes/searchbyattribute/{searchId}.get.parameters[0].in" = "path"
"paths./eventframes/searchbyattribute/{searchId}.get.parameters[0].name" = "searchId"
"paths./eventframes/searchbyattribute/{searchId}.get.parameters[0].required" = true
"paths./eventframes/searchbyattribute/{searchId}.get.parameters[0].type" = "string"
"paths./eventframes/searchbyattribute/{searchId}.get.parameters[10].collectionFormat" = "multi"
"paths./eventframes/searchbyattribute/{searchId}.get.parameters[10].description" = "Specify that returned event frames must have this severity. Multiple severity values may be specified with multiple instances of the parameter. The default is no severity filter."
"paths./eventframes/searchbyattribute/{searchId}.get.parameters[10].in" = "query"
"paths./eventframes/searchbyattribute/{searchId}.get.parameters[10].items.type" = "string"
"paths./eventframes/searchbyattribute/{searchId}.get.parameters[10].name" = "severity"
"paths./eventframes/searchbyattribute/{searchId}.get.parameters[10].required" = false
"paths./eventframes/searchbyattribute/{searchId}.get.parameters[10].type" = "array"
"paths./eventframes/searchbyattribute/{searchId}.get.parameters[11].description" = "The field or property of the object used to sort the returned collection. The default is 'Name'."
"paths./eventframes/searchbyattribute/{searchId}.get.parameters[11].in" = "query"
"paths./eventframes/searchbyattribute/{searchId}.get.parameters[11].name" = "sortField"
"paths./eventframes/searchbyattribute/{searchId}.get.parameters[11].required" = false
"paths./eventframes/searchbyattribute/{searchId}.get.parameters[11].type" = "string"
"paths./eventframes/searchbyattribute/{searchId}.get.parameters[12].description" = "The order that the returned collection is sorted. The default is 'Ascending'."
"paths./eventframes/searchbyattribute/{searchId}.get.parameters[12].in" = "query"
"paths./eventframes/searchbyattribute/{searchId}.get.parameters[12].name" = "sortOrder"
"paths./eventframes/searchbyattribute/{searchId}.get.parameters[12].required" = false
"paths./eventframes/searchbyattribute/{searchId}.get.parameters[12].type" = "string"
"paths./eventframes/searchbyattribute/{searchId}.get.parameters[13].description" = "The starting index (zero based) of the items to be returned. The default is 0."
"paths./eventframes/searchbyattribute/{searchId}.get.parameters[13].in" = "query"
"paths./eventframes/searchbyattribute/{searchId}.get.parameters[13].name" = "startIndex"
"paths./eventframes/searchbyattribute/{searchId}.get.parameters[13].required" = false
"paths./eventframes/searchbyattribute/{searchId}.get.parameters[13].type" = "integer"
"paths./eventframes/searchbyattribute/{searchId}.get.parameters[14].description" = "The starting time for the search. startTime must be less than or equal to the endTime. The searchMode parameter will control whether the comparison will be performed against the event frame's startTime or endTime. The default is '*-8h'."
"paths./eventframes/searchbyattribute/{searchId}.get.parameters[14].in" = "query"
"paths./eventframes/searchbyattribute/{searchId}.get.parameters[14].name" = "startTime"
"paths./eventframes/searchbyattribute/{searchId}.get.parameters[14].required" = false
"paths./eventframes/searchbyattribute/{searchId}.get.parameters[14].type" = "string"
"paths./eventframes/searchbyattribute/{searchId}.get.parameters[1].description" = "Specify the returned event frames' canBeAcknowledged property. The default is no canBeAcknowledged filter."
"paths./eventframes/searchbyattribute/{searchId}.get.parameters[1].in" = "query"
"paths./eventframes/searchbyattribute/{searchId}.get.parameters[1].name" = "canBeAcknowledged"
"paths./eventframes/searchbyattribute/{searchId}.get.parameters[1].required" = false
"paths./eventframes/searchbyattribute/{searchId}.get.parameters[1].type" = "boolean"
"paths./eventframes/searchbyattribute/{searchId}.get.parameters[2].description" = "The ending time for the search. endTime must be greater than or equal to the startTime. The searchMode parameter will control whether the comparison will be performed against the event frame's startTime or endTime. The default is '*'."
"paths./eventframes/searchbyattribute/{searchId}.get.parameters[2].in" = "query"
"paths./eventframes/searchbyattribute/{searchId}.get.parameters[2].name" = "endTime"
"paths./eventframes/searchbyattribute/{searchId}.get.parameters[2].required" = false
"paths./eventframes/searchbyattribute/{searchId}.get.parameters[2].type" = "string"
"paths./eventframes/searchbyattribute/{searchId}.get.parameters[3].description" = "Specify the returned event frames' isAcknowledged property. The default no isAcknowledged filter."
"paths./eventframes/searchbyattribute/{searchId}.get.parameters[3].in" = "query"
"paths./eventframes/searchbyattribute/{searchId}.get.parameters[3].name" = "isAcknowledged"
"paths./eventframes/searchbyattribute/{searchId}.get.parameters[3].required" = false
"paths./eventframes/searchbyattribute/{searchId}.get.parameters[3].type" = "boolean"
"paths./eventframes/searchbyattribute/{searchId}.get.parameters[4].description" = "The maximum number of objects to be returned per call (page size). The default is 1000."
"paths./eventframes/searchbyattribute/{searchId}.get.parameters[4].in" = "query"
"paths./eventframes/searchbyattribute/{searchId}.get.parameters[4].name" = "maxCount"
"paths./eventframes/searchbyattribute/{searchId}.get.parameters[4].required" = false
"paths./eventframes/searchbyattribute/{searchId}.get.parameters[4].type" = "integer"
"paths./eventframes/searchbyattribute/{searchId}.get.parameters[5].description" = "The name query string used for finding event frames. The default is no filter."
"paths./eventframes/searchbyattribute/{searchId}.get.parameters[5].in" = "query"
"paths./eventframes/searchbyattribute/{searchId}.get.parameters[5].name" = "nameFilter"
"paths./eventframes/searchbyattribute/{searchId}.get.parameters[5].required" = false
"paths./eventframes/searchbyattribute/{searchId}.get.parameters[5].type" = "string"
"paths./eventframes/searchbyattribute/{searchId}.get.parameters[6].description" = "The name query string which must match the name of a referenced element. The default is no filter."
"paths./eventframes/searchbyattribute/{searchId}.get.parameters[6].in" = "query"
"paths./eventframes/searchbyattribute/{searchId}.get.parameters[6].name" = "referencedElementNameFilter"
"paths./eventframes/searchbyattribute/{searchId}.get.parameters[6].required" = false
"paths./eventframes/searchbyattribute/{searchId}.get.parameters[6].type" = "string"
"paths./eventframes/searchbyattribute/{searchId}.get.parameters[7].description" = "Specifies whether the search should include objects nested further than the immediate children of the search root. The default is 'false'."
"paths./eventframes/searchbyattribute/{searchId}.get.parameters[7].in" = "query"
"paths./eventframes/searchbyattribute/{searchId}.get.parameters[7].name" = "searchFullHierarchy"
"paths./eventframes/searchbyattribute/{searchId}.get.parameters[7].required" = false
"paths./eventframes/searchbyattribute/{searchId}.get.parameters[7].type" = "boolean"
"paths./eventframes/searchbyattribute/{searchId}.get.parameters[8].description" = "Determines how the startTime and endTime parameters are treated when searching for event frame objects to be included in the returned collection. The default is 'Overlapped'."
"paths./eventframes/searchbyattribute/{searchId}.get.parameters[8].in" = "query"
"paths./eventframes/searchbyattribute/{searchId}.get.parameters[8].name" = "searchMode"
"paths./eventframes/searchbyattribute/{searchId}.get.parameters[8].required" = false
"paths./eventframes/searchbyattribute/{searchId}.get.parameters[8].type" = "string"
"paths./eventframes/searchbyattribute/{searchId}.get.parameters[9].description" = "List of fields to be returned in the response, separated by semicolons (;). If this parameter is not specified, all available fields will be returned."
"paths./eventframes/searchbyattribute/{searchId}.get.parameters[9].in" = "query"
"paths./eventframes/searchbyattribute/{searchId}.get.parameters[9].name" = "selectedFields"
"paths./eventframes/searchbyattribute/{searchId}.get.parameters[9].required" = false
"paths./eventframes/searchbyattribute/{searchId}.get.parameters[9].type" = "string"
"paths./eventframes/searchbyattribute/{searchId}.get.responses.200.description" = "a list of matching EventFrames."
"paths./eventframes/searchbyattribute/{searchId}.get.responses.400.description" = "Invalid search Id or search parameters."
"paths./eventframes/searchbyattribute/{searchId}.get.responses.400.schema.$ref" = "#/definitions/Errors"
"paths./eventframes/searchbyattribute/{searchId}.get.summary" = "Execute a \"Search EventFrames By Attribute Value\" operation."
"paths./eventframes/searchbyattribute/{searchId}.get.tags.length" = 1
"paths./eventframes/searchbyattribute/{searchId}.get.tags[0]" = "EventFrame"
"paths./eventframes/{webId}.delete.consumes.length" = 0
"paths./eventframes/{webId}.delete.deprecated" = false
"paths./eventframes/{webId}.delete.operationId" = "EventFrame_Delete"
"paths./eventframes/{webId}.delete.parameters.length" = 1
"paths./eventframes/{webId}.delete.parameters[0].description" = "The ID of the event frame to delete."
"paths./eventframes/{webId}.delete.parameters[0].in" = "path"
"paths./eventframes/{webId}.delete.parameters[0].name" = "webId"
"paths./eventframes/{webId}.delete.parameters[0].required" = true
"paths./eventframes/{webId}.delete.parameters[0].type" = "string"
"paths./eventframes/{webId}.delete.responses.204.description" = "The event frame was deleted."
"paths./eventframes/{webId}.delete.summary" = "Delete an event frame."
"paths./eventframes/{webId}.delete.tags.length" = 1
"paths./eventframes/{webId}.delete.tags[0]" = "EventFrame"
"paths./eventframes/{webId}.get.consumes.length" = 0
"paths./eventframes/{webId}.get.deprecated" = false
"paths./eventframes/{webId}.get.operationId" = "EventFrame_Get"
"paths./eventframes/{webId}.get.parameters.length" = 2
"paths./eventframes/{webId}.get.parameters[0].description" = "The ID of the event frame."
"paths./eventframes/{webId}.get.parameters[0].in" = "path"
"paths./eventframes/{webId}.get.parameters[0].name" = "webId"
"paths./eventframes/{webId}.get.parameters[0].required" = true
"paths./eventframes/{webId}.get.parameters[0].type" = "string"
"paths./eventframes/{webId}.get.parameters[1].description" = "List of fields to be returned in the response, separated by semicolons (;). If this parameter is not specified, all available fields will be returned."
"paths./eventframes/{webId}.get.parameters[1].in" = "query"
"paths./eventframes/{webId}.get.parameters[1].name" = "selectedFields"
"paths./eventframes/{webId}.get.parameters[1].required" = false
"paths./eventframes/{webId}.get.parameters[1].type" = "string"
"paths./eventframes/{webId}.get.responses.200.description" = "The specified event frame."
"paths./eventframes/{webId}.get.responses.200.schema.$ref" = "#/definitions/EventFrame"
"paths./eventframes/{webId}.get.summary" = "Retrieve an event frame."
"paths./eventframes/{webId}.get.tags.length" = 1
"paths./eventframes/{webId}.get.tags[0]" = "EventFrame"
"paths./eventframes/{webId}.patch.consumes.length" = 2
"paths./eventframes/{webId}.patch.consumes[0]" = "application/json"
"paths./eventframes/{webId}.patch.consumes[1]" = "text/json"
"paths./eventframes/{webId}.patch.deprecated" = false
"paths./eventframes/{webId}.patch.operationId" = "EventFrame_Update"
"paths./eventframes/{webId}.patch.parameters.length" = 2
"paths./eventframes/{webId}.patch.parameters[0].description" = "The ID of the event frame to update."
"paths./eventframes/{webId}.patch.parameters[0].in" = "path"
"paths./eventframes/{webId}.patch.parameters[0].name" = "webId"
"paths./eventframes/{webId}.patch.parameters[0].required" = true
"paths./eventframes/{webId}.patch.parameters[0].type" = "string"
"paths./eventframes/{webId}.patch.parameters[1].description" = "A partial event frame containing the desired changes."
"paths./eventframes/{webId}.patch.parameters[1].in" = "body"
"paths./eventframes/{webId}.patch.parameters[1].name" = "eventFrame"
"paths./eventframes/{webId}.patch.parameters[1].required" = true
"paths./eventframes/{webId}.patch.parameters[1].schema.$ref" = "#/definitions/EventFrame"
"paths./eventframes/{webId}.patch.responses.204.description" = "The event frame was updated."
"paths./eventframes/{webId}.patch.summary" = "Update an event frame by replacing items in its definition."
"paths./eventframes/{webId}.patch.tags.length" = 1
"paths./eventframes/{webId}.patch.tags[0]" = "EventFrame"
"paths./eventframes/{webId}/acknowledge.patch.consumes.length" = 2
"paths./eventframes/{webId}/acknowledge.patch.consumes[0]" = "application/json"
"paths./eventframes/{webId}/acknowledge.patch.consumes[1]" = "text/json"
"paths./eventframes/{webId}/acknowledge.patch.deprecated" = false
"paths./eventframes/{webId}/acknowledge.patch.operationId" = "EventFrame_Acknowledge"
"paths./eventframes/{webId}/acknowledge.patch.parameters.length" = 1
"paths./eventframes/{webId}/acknowledge.patch.parameters[0].description" = "The ID of the event frame."
"paths./eventframes/{webId}/acknowledge.patch.parameters[0].in" = "path"
"paths./eventframes/{webId}/acknowledge.patch.parameters[0].name" = "webId"
"paths./eventframes/{webId}/acknowledge.patch.parameters[0].required" = true
"paths./eventframes/{webId}/acknowledge.patch.parameters[0].type" = "string"
"paths./eventframes/{webId}/acknowledge.patch.responses.204.description" = "The event frame has been acknowledged."
"paths./eventframes/{webId}/acknowledge.patch.summary" = "Calls the EventFrame's Acknowledge method."
"paths./eventframes/{webId}/acknowledge.patch.tags.length" = 1
"paths./eventframes/{webId}/acknowledge.patch.tags[0]" = "EventFrame"
"paths./eventframes/{webId}/annotations.get.consumes.length" = 0
"paths./eventframes/{webId}/annotations.get.deprecated" = false
"paths./eventframes/{webId}/annotations.get.operationId" = "EventFrame_GetAnnotations"
"paths./eventframes/{webId}/annotations.get.parameters.length" = 2
"paths./eventframes/{webId}/annotations.get.parameters[0].description" = "The ID of the owner event frame."
"paths./eventframes/{webId}/annotations.get.parameters[0].in" = "path"
"paths./eventframes/{webId}/annotations.get.parameters[0].name" = "webId"
"paths./eventframes/{webId}/annotations.get.parameters[0].required" = true
"paths./eventframes/{webId}/annotations.get.parameters[0].type" = "string"
"paths./eventframes/{webId}/annotations.get.parameters[1].description" = "List of fields to be returned in the response, separated by semicolons (;). If this parameter is not specified, all available fields will be returned."
"paths./eventframes/{webId}/annotations.get.parameters[1].in" = "query"
"paths./eventframes/{webId}/annotations.get.parameters[1].name" = "selectedFields"
"paths./eventframes/{webId}/annotations.get.parameters[1].required" = false
"paths./eventframes/{webId}/annotations.get.parameters[1].type" = "string"
"paths./eventframes/{webId}/annotations.get.responses.200.description" = "A list of annotations."
"paths./eventframes/{webId}/annotations.get.responses.200.schema.$ref" = "#/definitions/Items[Annotation]"
"paths./eventframes/{webId}/annotations.get.summary" = "Get an event frame's annotations."
"paths./eventframes/{webId}/annotations.get.tags.length" = 1
"paths./eventframes/{webId}/annotations.get.tags[0]" = "EventFrame"
"paths./eventframes/{webId}/annotations.post.consumes.length" = 2
"paths./eventframes/{webId}/annotations.post.consumes[0]" = "application/json"
"paths./eventframes/{webId}/annotations.post.consumes[1]" = "text/json"
"paths./eventframes/{webId}/annotations.post.deprecated" = false
"paths./eventframes/{webId}/annotations.post.operationId" = "EventFrame_CreateAnnotation"
"paths./eventframes/{webId}/annotations.post.parameters.length" = 2
"paths./eventframes/{webId}/annotations.post.parameters[0].description" = "The ID of the owner event frame on which to create the annotation."
"paths./eventframes/{webId}/annotations.post.parameters[0].in" = "path"
"paths./eventframes/{webId}/annotations.post.parameters[0].name" = "webId"
"paths./eventframes/{webId}/annotations.post.parameters[0].required" = true
"paths./eventframes/{webId}/annotations.post.parameters[0].type" = "string"
"paths./eventframes/{webId}/annotations.post.parameters[1].description" = "The new annotation definition."
"paths./eventframes/{webId}/annotations.post.parameters[1].in" = "body"
"paths./eventframes/{webId}/annotations.post.parameters[1].name" = "annotation"
"paths./eventframes/{webId}/annotations.post.parameters[1].required" = true
"paths./eventframes/{webId}/annotations.post.parameters[1].schema.$ref" = "#/definitions/Annotation"
"paths./eventframes/{webId}/annotations.post.responses.201.description" = "The annotation was created. The response's Location header is a link to the annotation."
"paths./eventframes/{webId}/annotations.post.summary" = "Create an annotation on an event frame."
"paths./eventframes/{webId}/annotations.post.tags.length" = 1
"paths./eventframes/{webId}/annotations.post.tags[0]" = "EventFrame"
"paths./eventframes/{webId}/annotations/{id}.delete.consumes.length" = 0
"paths./eventframes/{webId}/annotations/{id}.delete.deprecated" = false
"paths./eventframes/{webId}/annotations/{id}.delete.operationId" = "EventFrame_DeleteAnnotation"
"paths./eventframes/{webId}/annotations/{id}.delete.parameters.length" = 2
"paths./eventframes/{webId}/annotations/{id}.delete.parameters[0].description" = "The Annotation identifier of the annotation to be deleted."
"paths./eventframes/{webId}/annotations/{id}.delete.parameters[0].in" = "path"
"paths./eventframes/{webId}/annotations/{id}.delete.parameters[0].name" = "id"
"paths./eventframes/{webId}/annotations/{id}.delete.parameters[0].required" = true
"paths./eventframes/{webId}/annotations/{id}.delete.parameters[0].type" = "string"
"paths./eventframes/{webId}/annotations/{id}.delete.parameters[1].description" = "The ID of the owner event frame of the annotation to delete."
"paths./eventframes/{webId}/annotations/{id}.delete.parameters[1].in" = "path"
"paths./eventframes/{webId}/annotations/{id}.delete.parameters[1].name" = "webId"
"paths./eventframes/{webId}/annotations/{id}.delete.parameters[1].required" = true
"paths./eventframes/{webId}/annotations/{id}.delete.parameters[1].type" = "string"
"paths./eventframes/{webId}/annotations/{id}.delete.responses.204.description" = "The annotation was deleted."
"paths./eventframes/{webId}/annotations/{id}.delete.summary" = "Delete an annotation on an event frame."
"paths./eventframes/{webId}/annotations/{id}.delete.tags.length" = 1
"paths./eventframes/{webId}/annotations/{id}.delete.tags[0]" = "EventFrame"
"paths./eventframes/{webId}/annotations/{id}.get.consumes.length" = 0
"paths./eventframes/{webId}/annotations/{id}.get.deprecated" = false
"paths./eventframes/{webId}/annotations/{id}.get.operationId" = "EventFrame_GetAnnotationById"
"paths./eventframes/{webId}/annotations/{id}.get.parameters.length" = 3
"paths./eventframes/{webId}/annotations/{id}.get.parameters[0].description" = "The Annotation identifier of the specific annotation."
"paths./eventframes/{webId}/annotations/{id}.get.parameters[0].in" = "path"
"paths./eventframes/{webId}/annotations/{id}.get.parameters[0].name" = "id"
"paths./eventframes/{webId}/annotations/{id}.get.parameters[0].required" = true
"paths./eventframes/{webId}/annotations/{id}.get.parameters[0].type" = "string"
"paths./eventframes/{webId}/annotations/{id}.get.parameters[1].description" = "The ID of the owner event frame."
"paths./eventframes/{webId}/annotations/{id}.get.parameters[1].in" = "path"
"paths./eventframes/{webId}/annotations/{id}.get.parameters[1].name" = "webId"
"paths./eventframes/{webId}/annotations/{id}.get.parameters[1].required" = true
"paths./eventframes/{webId}/annotations/{id}.get.parameters[1].type" = "string"
"paths./eventframes/{webId}/annotations/{id}.get.parameters[2].description" = "List of fields to be returned in the response, separated by semicolons (;). If this parameter is not specified, all available fields will be returned."
"paths./eventframes/{webId}/annotations/{id}.get.parameters[2].in" = "query"
"paths./eventframes/{webId}/annotations/{id}.get.parameters[2].name" = "selectedFields"
"paths./eventframes/{webId}/annotations/{id}.get.parameters[2].required" = false
"paths./eventframes/{webId}/annotations/{id}.get.parameters[2].type" = "string"
"paths./eventframes/{webId}/annotations/{id}.get.responses.200.description" = "The requested annotation."
"paths./eventframes/{webId}/annotations/{id}.get.responses.200.schema.$ref" = "#/definitions/Annotation"
"paths./eventframes/{webId}/annotations/{id}.get.summary" = "Get a specific annotation on an event frame."
"paths./eventframes/{webId}/annotations/{id}.get.tags.length" = 1
"paths./eventframes/{webId}/annotations/{id}.get.tags[0]" = "EventFrame"
"paths./eventframes/{webId}/annotations/{id}.patch.consumes.length" = 2
"paths./eventframes/{webId}/annotations/{id}.patch.consumes[0]" = "application/json"
"paths./eventframes/{webId}/annotations/{id}.patch.consumes[1]" = "text/json"
"paths./eventframes/{webId}/annotations/{id}.patch.deprecated" = false
"paths./eventframes/{webId}/annotations/{id}.patch.operationId" = "EventFrame_UpdateAnnotation"
"paths./eventframes/{webId}/annotations/{id}.patch.parameters.length" = 3
"paths./eventframes/{webId}/annotations/{id}.patch.parameters[0].description" = "The Annotation identifier of the annotation to be updated."
"paths./eventframes/{webId}/annotations/{id}.patch.parameters[0].in" = "path"
"paths./eventframes/{webId}/annotations/{id}.patch.parameters[0].name" = "id"
"paths./eventframes/{webId}/annotations/{id}.patch.parameters[0].required" = true
"paths./eventframes/{webId}/annotations/{id}.patch.parameters[0].type" = "string"
"paths./eventframes/{webId}/annotations/{id}.patch.parameters[1].description" = "The ID of the owner event frame of the annotation to update."
"paths./eventframes/{webId}/annotations/{id}.patch.parameters[1].in" = "path"
"paths./eventframes/{webId}/annotations/{id}.patch.parameters[1].name" = "webId"
"paths./eventframes/{webId}/annotations/{id}.patch.parameters[1].required" = true
"paths./eventframes/{webId}/annotations/{id}.patch.parameters[1].type" = "string"
"paths./eventframes/{webId}/annotations/{id}.patch.parameters[2].description" = "A partial annotation containing the desired changes."
"paths./eventframes/{webId}/annotations/{id}.patch.parameters[2].in" = "body"
"paths./eventframes/{webId}/annotations/{id}.patch.parameters[2].name" = "annotation"
"paths./eventframes/{webId}/annotations/{id}.patch.parameters[2].required" = true
"paths./eventframes/{webId}/annotations/{id}.patch.parameters[2].schema.$ref" = "#/definitions/Annotation"
"paths./eventframes/{webId}/annotations/{id}.patch.responses.204.description" = "The annotation was updated."
"paths./eventframes/{webId}/annotations/{id}.patch.summary" = "Update an annotation on an event frame by replacing items in its definition."
"paths./eventframes/{webId}/annotations/{id}.patch.tags.length" = 1
"paths./eventframes/{webId}/annotations/{id}.patch.tags[0]" = "EventFrame"
"paths./eventframes/{webId}/attributes.get.consumes.length" = 0
"paths./eventframes/{webId}/attributes.get.deprecated" = false
"paths./eventframes/{webId}/attributes.get.operationId" = "EventFrame_GetAttributes"
"paths./eventframes/{webId}/attributes.get.parameters.length" = 13
"paths./eventframes/{webId}/attributes.get.parameters[0].description" = "The ID of the event frame."
"paths./eventframes/{webId}/attributes.get.parameters[0].in" = "path"
"paths./eventframes/{webId}/attributes.get.parameters[0].name" = "webId"
"paths./eventframes/{webId}/attributes.get.parameters[0].required" = true
"paths./eventframes/{webId}/attributes.get.parameters[0].type" = "string"
"paths./eventframes/{webId}/attributes.get.parameters[10].description" = "The starting index (zero based) of the items to be returned. The default is 0."
"paths./eventframes/{webId}/attributes.get.parameters[10].in" = "query"
"paths./eventframes/{webId}/attributes.get.parameters[10].name" = "startIndex"
"paths./eventframes/{webId}/attributes.get.parameters[10].required" = false
"paths./eventframes/{webId}/attributes.get.parameters[10].type" = "integer"
"paths./eventframes/{webId}/attributes.get.parameters[11].description" = "Specify that returned attributes must be members of this template. The default is no template filter."
"paths./eventframes/{webId}/attributes.get.parameters[11].in" = "query"
"paths./eventframes/{webId}/attributes.get.parameters[11].name" = "templateName"
"paths./eventframes/{webId}/attributes.get.parameters[11].required" = false
"paths./eventframes/{webId}/attributes.get.parameters[11].type" = "string"
"paths./eventframes/{webId}/attributes.get.parameters[12].description" = "Specify that returned attributes' value type must be the given value type. The default is no value type filter."
"paths./eventframes/{webId}/attributes.get.parameters[12].in" = "query"
"paths./eventframes/{webId}/attributes.get.parameters[12].name" = "valueType"
"paths./eventframes/{webId}/attributes.get.parameters[12].required" = false
"paths./eventframes/{webId}/attributes.get.parameters[12].type" = "string"
"paths./eventframes/{webId}/attributes.get.parameters[1].description" = "Specify that returned attributes must have this category. The default is no category filter."
"paths./eventframes/{webId}/attributes.get.parameters[1].in" = "query"
"paths./eventframes/{webId}/attributes.get.parameters[1].name" = "categoryName"
"paths./eventframes/{webId}/attributes.get.parameters[1].required" = false
"paths./eventframes/{webId}/attributes.get.parameters[1].type" = "string"
"paths./eventframes/{webId}/attributes.get.parameters[2].description" = "The maximum number of objects to be returned per call (page size). The default is 1000."
"paths./eventframes/{webId}/attributes.get.parameters[2].in" = "query"
"paths./eventframes/{webId}/attributes.get.parameters[2].name" = "maxCount"
"paths./eventframes/{webId}/attributes.get.parameters[2].required" = false
"paths./eventframes/{webId}/attributes.get.parameters[2].type" = "integer"
"paths./eventframes/{webId}/attributes.get.parameters[3].description" = "The name query string used for finding attributes. The default is no filter."
"paths./eventframes/{webId}/attributes.get.parameters[3].in" = "query"
"paths./eventframes/{webId}/attributes.get.parameters[3].name" = "nameFilter"
"paths./eventframes/{webId}/attributes.get.parameters[3].required" = false
"paths./eventframes/{webId}/attributes.get.parameters[3].type" = "string"
"paths./eventframes/{webId}/attributes.get.parameters[4].description" = "Specifies if the search should include attributes nested further than the immediate attributes of the searchRoot. The default is 'false'."
"paths./eventframes/{webId}/attributes.get.parameters[4].in" = "query"
"paths./eventframes/{webId}/attributes.get.parameters[4].name" = "searchFullHierarchy"
"paths./eventframes/{webId}/attributes.get.parameters[4].required" = false
"paths./eventframes/{webId}/attributes.get.parameters[4].type" = "boolean"
"paths./eventframes/{webId}/attributes.get.parameters[5].description" = "List of fields to be returned in the response, separated by semicolons (;). If this parameter is not specified, all available fields will be returned."
"paths./eventframes/{webId}/attributes.get.parameters[5].in" = "query"
"paths./eventframes/{webId}/attributes.get.parameters[5].name" = "selectedFields"
"paths./eventframes/{webId}/attributes.get.parameters[5].required" = false
"paths./eventframes/{webId}/attributes.get.parameters[5].type" = "string"
"paths./eventframes/{webId}/attributes.get.parameters[6].description" = "Specified if the search should include attributes with the Excluded property set. The default is 'false'."
"paths./eventframes/{webId}/attributes.get.parameters[6].in" = "query"
"paths./eventframes/{webId}/attributes.get.parameters[6].name" = "showExcluded"
"paths./eventframes/{webId}/attributes.get.parameters[6].required" = false
"paths./eventframes/{webId}/attributes.get.parameters[6].type" = "boolean"
"paths./eventframes/{webId}/attributes.get.parameters[7].description" = "Specified if the search should include attributes with the Hidden property set. The default is 'false'."
"paths./eventframes/{webId}/attributes.get.parameters[7].in" = "query"
"paths./eventframes/{webId}/attributes.get.parameters[7].name" = "showHidden"
"paths./eventframes/{webId}/attributes.get.parameters[7].required" = false
"paths./eventframes/{webId}/attributes.get.parameters[7].type" = "boolean"
"paths./eventframes/{webId}/attributes.get.parameters[8].description" = "The field or property of the object used to sort the returned collection. The default is 'Name'."
"paths./eventframes/{webId}/attributes.get.parameters[8].in" = "query"
"paths./eventframes/{webId}/attributes.get.parameters[8].name" = "sortField"
"paths./eventframes/{webId}/attributes.get.parameters[8].required" = false
"paths./eventframes/{webId}/attributes.get.parameters[8].type" = "string"
"paths./eventframes/{webId}/attributes.get.parameters[9].description" = "The order that the returned collection is sorted. The default is 'Ascending'."
"paths./eventframes/{webId}/attributes.get.parameters[9].in" = "query"
"paths./eventframes/{webId}/attributes.get.parameters[9].name" = "sortOrder"
"paths./eventframes/{webId}/attributes.get.parameters[9].required" = false
"paths./eventframes/{webId}/attributes.get.parameters[9].type" = "string"
"paths./eventframes/{webId}/attributes.get.responses.200.description" = "A list of child attributes."
"paths./eventframes/{webId}/attributes.get.responses.200.schema.$ref" = "#/definitions/Items[Attribute]"
"paths./eventframes/{webId}/attributes.get.summary" = "Get the attributes of the specified event frame."
"paths./eventframes/{webId}/attributes.get.tags.length" = 1
"paths./eventframes/{webId}/attributes.get.tags[0]" = "EventFrame"
"paths./eventframes/{webId}/attributes.post.consumes.length" = 2
"paths./eventframes/{webId}/attributes.post.consumes[0]" = "application/json"
"paths./eventframes/{webId}/attributes.post.consumes[1]" = "text/json"
"paths./eventframes/{webId}/attributes.post.deprecated" = false
"paths./eventframes/{webId}/attributes.post.operationId" = "EventFrame_CreateAttribute"
"paths./eventframes/{webId}/attributes.post.parameters.length" = 2
"paths./eventframes/{webId}/attributes.post.parameters[0].description" = "The ID of the event frame on which to create the attribute."
"paths./eventframes/{webId}/attributes.post.parameters[0].in" = "path"
"paths./eventframes/{webId}/attributes.post.parameters[0].name" = "webId"
"paths./eventframes/{webId}/attributes.post.parameters[0].required" = true
"paths./eventframes/{webId}/attributes.post.parameters[0].type" = "string"
"paths./eventframes/{webId}/attributes.post.parameters[1].description" = "The definition of the new attribute."
"paths./eventframes/{webId}/attributes.post.parameters[1].in" = "body"
"paths./eventframes/{webId}/attributes.post.parameters[1].name" = "attribute"
"paths./eventframes/{webId}/attributes.post.parameters[1].required" = true
"paths./eventframes/{webId}/attributes.post.parameters[1].schema.$ref" = "#/definitions/Attribute"
"paths./eventframes/{webId}/attributes.post.responses.201.description" = "The attribute was created. The response's Location header is a link to the created attribute."
"paths./eventframes/{webId}/attributes.post.summary" = "Create a new attribute of the specified event frame."
"paths./eventframes/{webId}/attributes.post.tags.length" = 1
"paths./eventframes/{webId}/attributes.post.tags[0]" = "EventFrame"
"paths./eventframes/{webId}/attributes/capture.post.consumes.length" = 2
"paths./eventframes/{webId}/attributes/capture.post.consumes[0]" = "application/json"
"paths./eventframes/{webId}/attributes/capture.post.consumes[1]" = "text/json"
"paths./eventframes/{webId}/attributes/capture.post.deprecated" = false
"paths./eventframes/{webId}/attributes/capture.post.operationId" = "EventFrame_CaptureValues"
"paths./eventframes/{webId}/attributes/capture.post.parameters.length" = 1
"paths./eventframes/{webId}/attributes/capture.post.parameters[0].description" = "The ID of the event frame."
"paths./eventframes/{webId}/attributes/capture.post.parameters[0].in" = "path"
"paths./eventframes/{webId}/attributes/capture.post.parameters[0].name" = "webId"
"paths./eventframes/{webId}/attributes/capture.post.parameters[0].required" = true
"paths./eventframes/{webId}/attributes/capture.post.parameters[0].type" = "string"
"paths./eventframes/{webId}/attributes/capture.post.responses.204.description" = "The event frame attribute's values were captured."
"paths./eventframes/{webId}/attributes/capture.post.summary" = "Calls the EventFrame's CaptureValues method."
"paths./eventframes/{webId}/attributes/capture.post.tags.length" = 1
"paths./eventframes/{webId}/attributes/capture.post.tags[0]" = "EventFrame"
"paths./eventframes/{webId}/categories.get.consumes.length" = 0
"paths./eventframes/{webId}/categories.get.deprecated" = false
"paths./eventframes/{webId}/categories.get.operationId" = "EventFrame_GetCategories"
"paths./eventframes/{webId}/categories.get.parameters.length" = 2
"paths./eventframes/{webId}/categories.get.parameters[0].description" = "The ID of the event frame."
"paths./eventframes/{webId}/categories.get.parameters[0].in" = "path"
"paths./eventframes/{webId}/categories.get.parameters[0].name" = "webId"
"paths./eventframes/{webId}/categories.get.parameters[0].required" = true
"paths./eventframes/{webId}/categories.get.parameters[0].type" = "string"
"paths./eventframes/{webId}/categories.get.parameters[1].description" = "List of fields to be returned in the response, separated by semicolons (;). If this parameter is not specified, all available fields will be returned."
"paths./eventframes/{webId}/categories.get.parameters[1].in" = "query"
"paths./eventframes/{webId}/categories.get.parameters[1].name" = "selectedFields"
"paths./eventframes/{webId}/categories.get.parameters[1].required" = false
"paths./eventframes/{webId}/categories.get.parameters[1].type" = "string"
"paths./eventframes/{webId}/categories.get.responses.200.description" = "A list of categories."
"paths./eventframes/{webId}/categories.get.responses.200.schema.$ref" = "#/definitions/Items[ElementCategory]"
"paths./eventframes/{webId}/categories.get.summary" = "Get an event frame's categories."
"paths./eventframes/{webId}/categories.get.tags.length" = 1
"paths./eventframes/{webId}/categories.get.tags[0]" = "EventFrame"
"paths./eventframes/{webId}/config.post.consumes.length" = 2
"paths./eventframes/{webId}/config.post.consumes[0]" = "application/json"
"paths./eventframes/{webId}/config.post.consumes[1]" = "text/json"
"paths./eventframes/{webId}/config.post.deprecated" = false
"paths./eventframes/{webId}/config.post.operationId" = "EventFrame_CreateConfig"
"paths./eventframes/{webId}/config.post.parameters.length" = 2
"paths./eventframes/{webId}/config.post.parameters[0].description" = "The ID of the event frame."
"paths./eventframes/{webId}/config.post.parameters[0].in" = "path"
"paths./eventframes/{webId}/config.post.parameters[0].name" = "webId"
"paths./eventframes/{webId}/config.post.parameters[0].required" = true
"paths./eventframes/{webId}/config.post.parameters[0].type" = "string"
"paths./eventframes/{webId}/config.post.parameters[1].description" = "If true, includes the child event frames of the specified event frame."
"paths./eventframes/{webId}/config.post.parameters[1].in" = "query"
"paths./eventframes/{webId}/config.post.parameters[1].name" = "includeChildElements"
"paths./eventframes/{webId}/config.post.parameters[1].required" = false
"paths./eventframes/{webId}/config.post.parameters[1].type" = "boolean"
"paths./eventframes/{webId}/config.post.responses.200.description" = "Process log of operations. Operations completed with no errors."
"paths./eventframes/{webId}/config.post.responses.207.description" = "Process log of operations. Operations completed with errors."
"paths./eventframes/{webId}/config.post.summary" = "Executes the create configuration function of the data references found within the attributes of the event frame, and optionally, its children."
"paths./eventframes/{webId}/config.post.tags.length" = 1
"paths./eventframes/{webId}/config.post.tags[0]" = "EventFrame"
"paths./eventframes/{webId}/eventframeattributes.get.consumes.length" = 0
"paths./eventframes/{webId}/eventframeattributes.get.deprecated" = false
"paths./eventframes/{webId}/eventframeattributes.get.operationId" = "EventFrame_FindEventFrameAttributes"
"paths./eventframes/{webId}/eventframeattributes.get.parameters.length" = 19
"paths./eventframes/{webId}/eventframeattributes.get.parameters[0].description" = "The ID of the event frame to use as the root of the search."
"paths./eventframes/{webId}/eventframeattributes.get.parameters[0].in" = "path"
"paths./eventframes/{webId}/eventframeattributes.get.parameters[0].name" = "webId"
"paths./eventframes/{webId}/eventframeattributes.get.parameters[0].required" = true
"paths./eventframes/{webId}/eventframeattributes.get.parameters[0].type" = "string"
"paths./eventframes/{webId}/eventframeattributes.get.parameters[10].description" = "The maximum number of objects to be returned (the page size). The default is 1000."
"paths./eventframes/{webId}/eventframeattributes.get.parameters[10].in" = "query"
"paths./eventframes/{webId}/eventframeattributes.get.parameters[10].name" = "maxCount"
"paths./eventframes/{webId}/eventframeattributes.get.parameters[10].required" = false
"paths./eventframes/{webId}/eventframeattributes.get.parameters[10].type" = "integer"
"paths./eventframes/{webId}/eventframeattributes.get.parameters[11].description" = "The name query string which must match the name of a referenced element. The default is no filter."
"paths./eventframes/{webId}/eventframeattributes.get.parameters[11].in" = "query"
"paths./eventframes/{webId}/eventframeattributes.get.parameters[11].name" = "referencedElementNameFilter"
"paths./eventframes/{webId}/eventframeattributes.get.parameters[11].required" = false
"paths./eventframes/{webId}/eventframeattributes.get.parameters[11].type" = "string"
"paths./eventframes/{webId}/eventframeattributes.get.parameters[12].description" = "Specifies if the search should include objects nested further than immediate children of the given resource. The default is 'false'."
"paths./eventframes/{webId}/eventframeattributes.get.parameters[12].in" = "query"
"paths./eventframes/{webId}/eventframeattributes.get.parameters[12].name" = "searchFullHierarchy"
"paths./eventframes/{webId}/eventframeattributes.get.parameters[12].required" = false
"paths./eventframes/{webId}/eventframeattributes.get.parameters[12].type" = "boolean"
"paths./eventframes/{webId}/eventframeattributes.get.parameters[13].description" = "Determines how the startTime and endTime parameters are treated when searching for event frames.     The default is 'Overlapped'."
"paths./eventframes/{webId}/eventframeattributes.get.parameters[13].in" = "query"
"paths./eventframes/{webId}/eventframeattributes.get.parameters[13].name" = "searchMode"
"paths./eventframes/{webId}/eventframeattributes.get.parameters[13].required" = false
"paths./eventframes/{webId}/eventframeattributes.get.parameters[13].type" = "string"
"paths./eventframes/{webId}/eventframeattributes.get.parameters[14].description" = "List of fields to be returned in the response, separated by semicolons (;). If this parameter is not specified, all available fields will be returned."
"paths./eventframes/{webId}/eventframeattributes.get.parameters[14].in" = "query"
"paths./eventframes/{webId}/eventframeattributes.get.parameters[14].name" = "selectedFields"
"paths./eventframes/{webId}/eventframeattributes.get.parameters[14].required" = false
"paths./eventframes/{webId}/eventframeattributes.get.parameters[14].type" = "string"
"paths./eventframes/{webId}/eventframeattributes.get.parameters[15].description" = "The field or property of the object used to sort the returned collection. The default is 'Name'."
"paths./eventframes/{webId}/eventframeattributes.get.parameters[15].in" = "query"
"paths./eventframes/{webId}/eventframeattributes.get.parameters[15].name" = "sortField"
"paths./eventframes/{webId}/eventframeattributes.get.parameters[15].required" = false
"paths./eventframes/{webId}/eventframeattributes.get.parameters[15].type" = "string"
"paths./eventframes/{webId}/eventframeattributes.get.parameters[16].description" = "The order that the returned collection is sorted. The default is 'Ascending'."
"paths./eventframes/{webId}/eventframeattributes.get.parameters[16].in" = "query"
"paths./eventframes/{webId}/eventframeattributes.get.parameters[16].name" = "sortOrder"
"paths./eventframes/{webId}/eventframeattributes.get.parameters[16].required" = false
"paths./eventframes/{webId}/eventframeattributes.get.parameters[16].type" = "string"
"paths./eventframes/{webId}/eventframeattributes.get.parameters[17].description" = "The starting index (zero based) of the items to be returned. The default is 0."
"paths./eventframes/{webId}/eventframeattributes.get.parameters[17].in" = "query"
"paths./eventframes/{webId}/eventframeattributes.get.parameters[17].name" = "startIndex"
"paths./eventframes/{webId}/eventframeattributes.get.parameters[17].required" = false
"paths./eventframes/{webId}/eventframeattributes.get.parameters[17].type" = "integer"
"paths./eventframes/{webId}/eventframeattributes.get.parameters[18].description" = "A string representing the earliest starting time for the event frames to be matched. startTime must be less than or equal to the endTime. The default is '*-8h'."
"paths./eventframes/{webId}/eventframeattributes.get.parameters[18].in" = "query"
"paths./eventframes/{webId}/eventframeattributes.get.parameters[18].name" = "startTime"
"paths./eventframes/{webId}/eventframeattributes.get.parameters[18].required" = false
"paths./eventframes/{webId}/eventframeattributes.get.parameters[18].type" = "string"
"paths./eventframes/{webId}/eventframeattributes.get.parameters[1].description" = "Specify that returned attributes must have this category. The default is no filter."
"paths./eventframes/{webId}/eventframeattributes.get.parameters[1].in" = "query"
"paths./eventframes/{webId}/eventframeattributes.get.parameters[1].name" = "attributeCategory"
"paths./eventframes/{webId}/eventframeattributes.get.parameters[1].required" = false
"paths./eventframes/{webId}/eventframeattributes.get.parameters[1].type" = "string"
"paths./eventframes/{webId}/eventframeattributes.get.parameters[2].description" = "The attribute description filter string used for finding objects. Only the first 440 characters of the description will be searched. For Asset Servers older than 2.7, a 400 status code (Bad Request) will be returned if this parameter is specified. The default is no filter."
"paths./eventframes/{webId}/eventframeattributes.get.parameters[2].in" = "query"
"paths./eventframes/{webId}/eventframeattributes.get.parameters[2].name" = "attributeDescriptionFilter"
"paths./eventframes/{webId}/eventframeattributes.get.parameters[2].required" = false
"paths./eventframes/{webId}/eventframeattributes.get.parameters[2].type" = "string"
"paths./eventframes/{webId}/eventframeattributes.get.parameters[3].description" = "The attribute name filter string used for finding objects. The default is no filter."
"paths./eventframes/{webId}/eventframeattributes.get.parameters[3].in" = "query"
"paths./eventframes/{webId}/eventframeattributes.get.parameters[3].name" = "attributeNameFilter"
"paths./eventframes/{webId}/eventframeattributes.get.parameters[3].required" = false
"paths./eventframes/{webId}/eventframeattributes.get.parameters[3].type" = "string"
"paths./eventframes/{webId}/eventframeattributes.get.parameters[4].description" = "Specify that returned attributes' value type must be this value type. The default is no filter."
"paths./eventframes/{webId}/eventframeattributes.get.parameters[4].in" = "query"
"paths./eventframes/{webId}/eventframeattributes.get.parameters[4].name" = "attributeType"
"paths./eventframes/{webId}/eventframeattributes.get.parameters[4].required" = false
"paths./eventframes/{webId}/eventframeattributes.get.parameters[4].type" = "string"
"paths./eventframes/{webId}/eventframeattributes.get.parameters[5].description" = "A string representing the latest ending time for the event frames to be matched. The endTime must be greater than or equal to the startTime. The default is '*'."
"paths./eventframes/{webId}/eventframeattributes.get.parameters[5].in" = "query"
"paths./eventframes/{webId}/eventframeattributes.get.parameters[5].name" = "endTime"
"paths./eventframes/{webId}/eventframeattributes.get.parameters[5].required" = false
"paths./eventframes/{webId}/eventframeattributes.get.parameters[5].type" = "string"
"paths./eventframes/{webId}/eventframeattributes.get.parameters[6].description" = "Specify that the owner of the returned attributes must have this category. The default is no filter."
"paths./eventframes/{webId}/eventframeattributes.get.parameters[6].in" = "query"
"paths./eventframes/{webId}/eventframeattributes.get.parameters[6].name" = "eventFrameCategory"
"paths./eventframes/{webId}/eventframeattributes.get.parameters[6].required" = false
"paths./eventframes/{webId}/eventframeattributes.get.parameters[6].type" = "string"
"paths./eventframes/{webId}/eventframeattributes.get.parameters[7].description" = "The event frame description filter string used for finding objects. Only the first 440 characters of the description will be searched. For Asset Servers older than 2.7, a 400 status code (Bad Request) will be returned if this parameter is specified. The default is no filter."
"paths./eventframes/{webId}/eventframeattributes.get.parameters[7].in" = "query"
"paths./eventframes/{webId}/eventframeattributes.get.parameters[7].name" = "eventFrameDescriptionFilter"
"paths./eventframes/{webId}/eventframeattributes.get.parameters[7].required" = false
"paths./eventframes/{webId}/eventframeattributes.get.parameters[7].type" = "string"
"paths./eventframes/{webId}/eventframeattributes.get.parameters[8].description" = "The event frame name filter string used for finding objects. The default is no filter."
"paths./eventframes/{webId}/eventframeattributes.get.parameters[8].in" = "query"
"paths./eventframes/{webId}/eventframeattributes.get.parameters[8].name" = "eventFrameNameFilter"
"paths./eventframes/{webId}/eventframeattributes.get.parameters[8].required" = false
"paths./eventframes/{webId}/eventframeattributes.get.parameters[8].type" = "string"
"paths./eventframes/{webId}/eventframeattributes.get.parameters[9].description" = "Specify that the owner of the returned attributes must have this template or a template derived from this template. The default is no filter."
"paths./eventframes/{webId}/eventframeattributes.get.parameters[9].in" = "query"
"paths./eventframes/{webId}/eventframeattributes.get.parameters[9].name" = "eventFrameTemplate"
"paths./eventframes/{webId}/eventframeattributes.get.parameters[9].required" = false
"paths./eventframes/{webId}/eventframeattributes.get.parameters[9].type" = "string"
"paths./eventframes/{webId}/eventframeattributes.get.responses.200.description" = "a list of matching attributes."
"paths./eventframes/{webId}/eventframeattributes.get.responses.200.schema.$ref" = "#/definitions/Items[Attribute]"
"paths./eventframes/{webId}/eventframeattributes.get.summary" = "Retrieves a list of event frame attributes matching the specified filters from the specified event frame."
"paths./eventframes/{webId}/eventframeattributes.get.tags.length" = 1
"paths./eventframes/{webId}/eventframeattributes.get.tags[0]" = "EventFrame"
"paths./eventframes/{webId}/eventframes.get.consumes.length" = 0
"paths./eventframes/{webId}/eventframes.get.deprecated" = false
"paths./eventframes/{webId}/eventframes.get.operationId" = "EventFrame_GetEventFrames"
"paths./eventframes/{webId}/eventframes.get.parameters.length" = 18
"paths./eventframes/{webId}/eventframes.get.parameters[0].description" = "The ID of the event frame to use as the root of the search."
"paths./eventframes/{webId}/eventframes.get.parameters[0].in" = "path"
"paths./eventframes/{webId}/eventframes.get.parameters[0].name" = "webId"
"paths./eventframes/{webId}/eventframes.get.parameters[0].required" = true
"paths./eventframes/{webId}/eventframes.get.parameters[0].type" = "string"
"paths./eventframes/{webId}/eventframes.get.parameters[10].description" = "Determines how the startTime and endTime parameters are treated when searching for event frame objects to be included in the returned collection. If this parameter is one of the 'Backward*' or 'Forward*' values, none of endTime, sortField, or sortOrder may be specified. The default is 'Overlapped'."
"paths./eventframes/{webId}/eventframes.get.parameters[10].in" = "query"
"paths./eventframes/{webId}/eventframes.get.parameters[10].name" = "searchMode"
"paths./eventframes/{webId}/eventframes.get.parameters[10].required" = false
"paths./eventframes/{webId}/eventframes.get.parameters[10].type" = "string"
"paths./eventframes/{webId}/eventframes.get.parameters[11].description" = "List of fields to be returned in the response, separated by semicolons (;). If this parameter is not specified, all available fields will be returned."
"paths./eventframes/{webId}/eventframes.get.parameters[11].in" = "query"
"paths./eventframes/{webId}/eventframes.get.parameters[11].name" = "selectedFields"
"paths./eventframes/{webId}/eventframes.get.parameters[11].required" = false
"paths./eventframes/{webId}/eventframes.get.parameters[11].type" = "string"
"paths./eventframes/{webId}/eventframes.get.parameters[12].collectionFormat" = "multi"
"paths./eventframes/{webId}/eventframes.get.parameters[12].description" = "Specify that returned event frames must have this severity. Multiple severity values may be specified with multiple instances of the parameter. The default is no severity filter."
"paths./eventframes/{webId}/eventframes.get.parameters[12].in" = "query"
"paths./eventframes/{webId}/eventframes.get.parameters[12].items.type" = "string"
"paths./eventframes/{webId}/eventframes.get.parameters[12].name" = "severity"
"paths./eventframes/{webId}/eventframes.get.parameters[12].required" = false
"paths./eventframes/{webId}/eventframes.get.parameters[12].type" = "array"
"paths./eventframes/{webId}/eventframes.get.parameters[13].description" = "The field or property of the object used to sort the returned collection. The default is 'Name' if searchMode is not one of the 'Backward*' or 'Forward*' values."
"paths./eventframes/{webId}/eventframes.get.parameters[13].in" = "query"
"paths./eventframes/{webId}/eventframes.get.parameters[13].name" = "sortField"
"paths./eventframes/{webId}/eventframes.get.parameters[13].required" = false
"paths./eventframes/{webId}/eventframes.get.parameters[13].type" = "string"
"paths./eventframes/{webId}/eventframes.get.parameters[14].description" = "The order that the returned collection is sorted. The default is 'Ascending' if searchMode is not one of the 'Backward*' or 'Forward*' values."
"paths./eventframes/{webId}/eventframes.get.parameters[14].in" = "query"
"paths./eventframes/{webId}/eventframes.get.parameters[14].name" = "sortOrder"
"paths./eventframes/{webId}/eventframes.get.parameters[14].required" = false
"paths./eventframes/{webId}/eventframes.get.parameters[14].type" = "string"
"paths./eventframes/{webId}/eventframes.get.parameters[15].description" = "The starting index (zero based) of the items to be returned. The default is 0."
"paths./eventframes/{webId}/eventframes.get.parameters[15].in" = "query"
"paths./eventframes/{webId}/eventframes.get.parameters[15].name" = "startIndex"
"paths./eventframes/{webId}/eventframes.get.parameters[15].required" = false
"paths./eventframes/{webId}/eventframes.get.parameters[15].type" = "integer"
"paths./eventframes/{webId}/eventframes.get.parameters[16].description" = "The starting time for the search. startTime must be less than or equal to the endTime. The searchMode parameter will control whether the comparison will be performed against the event frame's startTime or endTime. The default is '*-8h'."
"paths./eventframes/{webId}/eventframes.get.parameters[16].in" = "query"
"paths./eventframes/{webId}/eventframes.get.parameters[16].name" = "startTime"
"paths./eventframes/{webId}/eventframes.get.parameters[16].required" = false
"paths./eventframes/{webId}/eventframes.get.parameters[16].type" = "string"
"paths./eventframes/{webId}/eventframes.get.parameters[17].description" = "Specify that returned event frames must have this template or a template derived from this template. The default is no template filter. Specify this parameter by name."
"paths./eventframes/{webId}/eventframes.get.parameters[17].in" = "query"
"paths./eventframes/{webId}/eventframes.get.parameters[17].name" = "templateName"
"paths./eventframes/{webId}/eventframes.get.parameters[17].required" = false
"paths./eventframes/{webId}/eventframes.get.parameters[17].type" = "string"
"paths./eventframes/{webId}/eventframes.get.parameters[1].description" = "Specify the returned event frames' canBeAcknowledged property. The default is no canBeAcknowledged filter."
"paths./eventframes/{webId}/eventframes.get.parameters[1].in" = "query"
"paths./eventframes/{webId}/eventframes.get.parameters[1].name" = "canBeAcknowledged"
"paths./eventframes/{webId}/eventframes.get.parameters[1].required" = false
"paths./eventframes/{webId}/eventframes.get.parameters[1].type" = "boolean"
"paths./eventframes/{webId}/eventframes.get.parameters[2].description" = "Specify that returned event frames must have this category. The default is no category filter."
"paths./eventframes/{webId}/eventframes.get.parameters[2].in" = "query"
"paths./eventframes/{webId}/eventframes.get.parameters[2].name" = "categoryName"
"paths./eventframes/{webId}/eventframes.get.parameters[2].required" = false
"paths./eventframes/{webId}/eventframes.get.parameters[2].type" = "string"
"paths./eventframes/{webId}/eventframes.get.parameters[3].description" = "The ending time for the search. The endTime must be greater than or equal to the startTime. The searchMode parameter will control whether the comparison will be performed against the event frame's startTime or endTime. The default is '*' if searchMode is not one of the 'Backward*' or 'Forward*' values."
"paths./eventframes/{webId}/eventframes.get.parameters[3].in" = "query"
"paths./eventframes/{webId}/eventframes.get.parameters[3].name" = "endTime"
"paths./eventframes/{webId}/eventframes.get.parameters[3].required" = false
"paths./eventframes/{webId}/eventframes.get.parameters[3].type" = "string"
"paths./eventframes/{webId}/eventframes.get.parameters[4].description" = "Specify the returned event frames' isAcknowledged property. The default no isAcknowledged filter."
"paths./eventframes/{webId}/eventframes.get.parameters[4].in" = "query"
"paths./eventframes/{webId}/eventframes.get.parameters[4].name" = "isAcknowledged"
"paths./eventframes/{webId}/eventframes.get.parameters[4].required" = false
"paths./eventframes/{webId}/eventframes.get.parameters[4].type" = "boolean"
"paths./eventframes/{webId}/eventframes.get.parameters[5].description" = "The maximum number of objects to be returned per call (page size). The default is 1000."
"paths./eventframes/{webId}/eventframes.get.parameters[5].in" = "query"
"paths./eventframes/{webId}/eventframes.get.parameters[5].name" = "maxCount"
"paths./eventframes/{webId}/eventframes.get.parameters[5].required" = false
"paths./eventframes/{webId}/eventframes.get.parameters[5].type" = "integer"
"paths./eventframes/{webId}/eventframes.get.parameters[6].description" = "The name query string used for finding event frames. The default is no filter."
"paths./eventframes/{webId}/eventframes.get.parameters[6].in" = "query"
"paths./eventframes/{webId}/eventframes.get.parameters[6].name" = "nameFilter"
"paths./eventframes/{webId}/eventframes.get.parameters[6].required" = false
"paths./eventframes/{webId}/eventframes.get.parameters[6].type" = "string"
"paths./eventframes/{webId}/eventframes.get.parameters[7].description" = "The name query string which must match the name of a referenced element. The default is no filter."
"paths./eventframes/{webId}/eventframes.get.parameters[7].in" = "query"
"paths./eventframes/{webId}/eventframes.get.parameters[7].name" = "referencedElementNameFilter"
"paths./eventframes/{webId}/eventframes.get.parameters[7].required" = false
"paths./eventframes/{webId}/eventframes.get.parameters[7].type" = "string"
"paths./eventframes/{webId}/eventframes.get.parameters[8].description" = "Specify that returned event frames must have an element in the event frame's referenced elements collection that derives from the template. Specify this parameter by name."
"paths./eventframes/{webId}/eventframes.get.parameters[8].in" = "query"
"paths./eventframes/{webId}/eventframes.get.parameters[8].name" = "referencedElementTemplateName"
"paths./eventframes/{webId}/eventframes.get.parameters[8].required" = false
"paths./eventframes/{webId}/eventframes.get.parameters[8].type" = "string"
"paths./eventframes/{webId}/eventframes.get.parameters[9].description" = "Specifies whether the search should include objects nested further than the immediate children of the search root. The default is 'false'."
"paths./eventframes/{webId}/eventframes.get.parameters[9].in" = "query"
"paths./eventframes/{webId}/eventframes.get.parameters[9].name" = "searchFullHierarchy"
"paths./eventframes/{webId}/eventframes.get.parameters[9].required" = false
"paths./eventframes/{webId}/eventframes.get.parameters[9].type" = "boolean"
"paths./eventframes/{webId}/eventframes.get.responses.200.description" = "A list of event frames matching the specified conditions."
"paths./eventframes/{webId}/eventframes.get.responses.200.schema.$ref" = "#/definitions/Items[EventFrame]"
"paths./eventframes/{webId}/eventframes.get.summary" = "Retrieve event frames based on the specified conditions. By default, returns all children of the specified root event frame with a start time in the past 8 hours."
"paths./eventframes/{webId}/eventframes.get.tags.length" = 1
"paths./eventframes/{webId}/eventframes.get.tags[0]" = "EventFrame"
"paths./eventframes/{webId}/eventframes.post.consumes.length" = 2
"paths./eventframes/{webId}/eventframes.post.consumes[0]" = "application/json"
"paths./eventframes/{webId}/eventframes.post.consumes[1]" = "text/json"
"paths./eventframes/{webId}/eventframes.post.deprecated" = false
"paths./eventframes/{webId}/eventframes.post.operationId" = "EventFrame_CreateEventFrame"
"paths./eventframes/{webId}/eventframes.post.parameters.length" = 2
"paths./eventframes/{webId}/eventframes.post.parameters[0].description" = "The ID of the parent event frame on which to create the event frame."
"paths./eventframes/{webId}/eventframes.post.parameters[0].in" = "path"
"paths./eventframes/{webId}/eventframes.post.parameters[0].name" = "webId"
"paths./eventframes/{webId}/eventframes.post.parameters[0].required" = true
"paths./eventframes/{webId}/eventframes.post.parameters[0].type" = "string"
"paths./eventframes/{webId}/eventframes.post.parameters[1].description" = "The new event frame definition."
"paths./eventframes/{webId}/eventframes.post.parameters[1].in" = "body"
"paths./eventframes/{webId}/eventframes.post.parameters[1].name" = "eventFrame"
"paths./eventframes/{webId}/eventframes.post.parameters[1].required" = true
"paths./eventframes/{webId}/eventframes.post.parameters[1].schema.$ref" = "#/definitions/EventFrame"
"paths./eventframes/{webId}/eventframes.post.responses.201.description" = "The event frame was created. The response's Location header is a link to the event frame."
"paths./eventframes/{webId}/eventframes.post.summary" = "Create an event frame as a child of the specified event frame."
"paths./eventframes/{webId}/eventframes.post.tags.length" = 1
"paths./eventframes/{webId}/eventframes.post.tags[0]" = "EventFrame"
"paths./eventframes/{webId}/referencedelements.get.consumes.length" = 0
"paths./eventframes/{webId}/referencedelements.get.deprecated" = false
"paths./eventframes/{webId}/referencedelements.get.operationId" = "EventFrame_GetReferencedElements"
"paths./eventframes/{webId}/referencedelements.get.parameters.length" = 2
"paths./eventframes/{webId}/referencedelements.get.parameters[0].description" = "The ID of the event frame whose referenced elements should be retrieved."
"paths./eventframes/{webId}/referencedelements.get.parameters[0].in" = "path"
"paths./eventframes/{webId}/referencedelements.get.parameters[0].name" = "webId"
"paths./eventframes/{webId}/referencedelements.get.parameters[0].required" = true
"paths./eventframes/{webId}/referencedelements.get.parameters[0].type" = "string"
"paths./eventframes/{webId}/referencedelements.get.parameters[1].description" = "List of fields to be returned in the response, separated by semicolons (;). If this parameter is not specified, all available fields will be returned."
"paths./eventframes/{webId}/referencedelements.get.parameters[1].in" = "query"
"paths./eventframes/{webId}/referencedelements.get.parameters[1].name" = "selectedFields"
"paths./eventframes/{webId}/referencedelements.get.parameters[1].required" = false
"paths./eventframes/{webId}/referencedelements.get.parameters[1].type" = "string"
"paths./eventframes/{webId}/referencedelements.get.responses.200.description" = "A list of referenced elements."
"paths./eventframes/{webId}/referencedelements.get.responses.200.schema.$ref" = "#/definitions/Items[Element]"
"paths./eventframes/{webId}/referencedelements.get.summary" = "Retrieve the event frame's referenced elements."
"paths./eventframes/{webId}/referencedelements.get.tags.length" = 1
"paths./eventframes/{webId}/referencedelements.get.tags[0]" = "EventFrame"
"paths./eventframes/{webId}/security.get.consumes.length" = 0
"paths./eventframes/{webId}/security.get.deprecated" = false
"paths./eventframes/{webId}/security.get.operationId" = "EventFrame_GetSecurity"
"paths./eventframes/{webId}/security.get.parameters.length" = 4
"paths./eventframes/{webId}/security.get.parameters[0].description" = "The ID of the event frame for the security to be checked."
"paths./eventframes/{webId}/security.get.parameters[0].in" = "path"
"paths./eventframes/{webId}/security.get.parameters[0].name" = "webId"
"paths./eventframes/{webId}/security.get.parameters[0].required" = true
"paths./eventframes/{webId}/security.get.parameters[0].type" = "string"
"paths./eventframes/{webId}/security.get.parameters[1].collectionFormat" = "multi"
"paths./eventframes/{webId}/security.get.parameters[1].description" = "The user identity for the security information to be checked. Multiple security identities may be specified with multiple instances of the parameter. If the parameter is not specified, only the current user's security rights will be returned."
"paths./eventframes/{webId}/security.get.parameters[1].in" = "query"
"paths./eventframes/{webId}/security.get.parameters[1].items.type" = "string"
"paths./eventframes/{webId}/security.get.parameters[1].name" = "userIdentity"
"paths./eventframes/{webId}/security.get.parameters[1].required" = true
"paths./eventframes/{webId}/security.get.parameters[1].type" = "array"
"paths./eventframes/{webId}/security.get.parameters[2].description" = "Indicates if the security cache should be refreshed before getting security information. The default is 'false'."
"paths./eventframes/{webId}/security.get.parameters[2].in" = "query"
"paths./eventframes/{webId}/security.get.parameters[2].name" = "forceRefresh"
"paths./eventframes/{webId}/security.get.parameters[2].required" = false
"paths./eventframes/{webId}/security.get.parameters[2].type" = "boolean"
"paths./eventframes/{webId}/security.get.parameters[3].description" = "List of fields to be returned in the response, separated by semicolons (;). If this parameter is not specified, all available fields will be returned."
"paths./eventframes/{webId}/security.get.parameters[3].in" = "query"
"paths./eventframes/{webId}/security.get.parameters[3].name" = "selectedFields"
"paths./eventframes/{webId}/security.get.parameters[3].required" = false
"paths./eventframes/{webId}/security.get.parameters[3].type" = "string"
"paths./eventframes/{webId}/security.get.responses.200.description" = "Security rights."
"paths./eventframes/{webId}/security.get.responses.200.schema.$ref" = "#/definitions/Items[SecurityRights]"
"paths./eventframes/{webId}/security.get.responses.400.description" = "An invalid or local account is specified as the user identity."
"paths./eventframes/{webId}/security.get.responses.400.schema.$ref" = "#/definitions/Errors"
"paths./eventframes/{webId}/security.get.responses.401.description" = "Access denied for the specified user identity."
"paths./eventframes/{webId}/security.get.responses.401.schema.$ref" = "#/definitions/Errors"
"paths./eventframes/{webId}/security.get.responses.409.description" = "Unsupported when using Anonymous authentication method."
"paths./eventframes/{webId}/security.get.responses.409.schema.$ref" = "#/definitions/Errors"
"paths./eventframes/{webId}/security.get.responses.502.description" = "Failed to retrieve the specified user identity."
"paths./eventframes/{webId}/security.get.responses.502.schema.$ref" = "#/definitions/Errors"
"paths./eventframes/{webId}/security.get.summary" = "Get the security information of the specified security item associated with the event frame for a specified user."
"paths./eventframes/{webId}/security.get.tags.length" = 1
"paths./eventframes/{webId}/security.get.tags[0]" = "EventFrame"
"paths./eventframes/{webId}/securityentries.get.consumes.length" = 0
"paths./eventframes/{webId}/securityentries.get.deprecated" = false
"paths./eventframes/{webId}/securityentries.get.operationId" = "EventFrame_GetSecurityEntries"
"paths./eventframes/{webId}/securityentries.get.parameters.length" = 3
"paths./eventframes/{webId}/securityentries.get.parameters[0].description" = "The ID of the event frame."
"paths./eventframes/{webId}/securityentries.get.parameters[0].in" = "path"
"paths./eventframes/{webId}/securityentries.get.parameters[0].name" = "webId"
"paths./eventframes/{webId}/securityentries.get.parameters[0].required" = true
"paths./eventframes/{webId}/securityentries.get.parameters[0].type" = "string"
"paths./eventframes/{webId}/securityentries.get.parameters[1].description" = "The name query string used for filtering security entries. The default is no filter."
"paths./eventframes/{webId}/securityentries.get.parameters[1].in" = "query"
"paths./eventframes/{webId}/securityentries.get.parameters[1].name" = "nameFilter"
"paths./eventframes/{webId}/securityentries.get.parameters[1].required" = false
"paths./eventframes/{webId}/securityentries.get.parameters[1].type" = "string"
"paths./eventframes/{webId}/securityentries.get.parameters[2].description" = "List of fields to be returned in the response, separated by semicolons (;). If this parameter is not specified, all available fields will be returned."
"paths./eventframes/{webId}/securityentries.get.parameters[2].in" = "query"
"paths./eventframes/{webId}/securityentries.get.parameters[2].name" = "selectedFields"
"paths./eventframes/{webId}/securityentries.get.parameters[2].required" = false
"paths./eventframes/{webId}/securityentries.get.parameters[2].type" = "string"
"paths./eventframes/{webId}/securityentries.get.responses.200.description" = "A list of security entries matching the specified condition."
"paths./eventframes/{webId}/securityentries.get.responses.200.schema.$ref" = "#/definitions/Items[SecurityEntry]"
"paths./eventframes/{webId}/securityentries.get.summary" = "Retrieve the security entries associated with the event frame based on the specified criteria. By default, all security entries for this event frame are returned."
"paths./eventframes/{webId}/securityentries.get.tags.length" = 1
"paths./eventframes/{webId}/securityentries.get.tags[0]" = "EventFrame"
"paths./eventframes/{webId}/securityentries.post.consumes.length" = 2
"paths./eventframes/{webId}/securityentries.post.consumes[0]" = "application/json"
"paths./eventframes/{webId}/securityentries.post.consumes[1]" = "text/json"
"paths./eventframes/{webId}/securityentries.post.deprecated" = false
"paths./eventframes/{webId}/securityentries.post.operationId" = "EventFrame_CreateSecurityEntry"
"paths./eventframes/{webId}/securityentries.post.parameters.length" = 3
"paths./eventframes/{webId}/securityentries.post.parameters[0].description" = "The ID of the event frame where the security entry will be created."
"paths./eventframes/{webId}/securityentries.post.parameters[0].in" = "path"
"paths./eventframes/{webId}/securityentries.post.parameters[0].name" = "webId"
"paths./eventframes/{webId}/securityentries.post.parameters[0].required" = true
"paths./eventframes/{webId}/securityentries.post.parameters[0].type" = "string"
"paths./eventframes/{webId}/securityentries.post.parameters[1].description" = "The new security entry definition. The full list of allow and deny rights must be supplied."
"paths./eventframes/{webId}/securityentries.post.parameters[1].in" = "body"
"paths./eventframes/{webId}/securityentries.post.parameters[1].name" = "securityEntry"
"paths./eventframes/{webId}/securityentries.post.parameters[1].required" = true
"paths./eventframes/{webId}/securityentries.post.parameters[1].schema.$ref" = "#/definitions/SecurityEntry"
"paths./eventframes/{webId}/securityentries.post.parameters[2].description" = "If false, the new access permissions are only applied to the associated object. If true, the access permissions of children with any parent-child reference types will change when the permissions on the primary parent change."
"paths./eventframes/{webId}/securityentries.post.parameters[2].in" = "query"
"paths./eventframes/{webId}/securityentries.post.parameters[2].name" = "applyToChildren"
"paths./eventframes/{webId}/securityentries.post.parameters[2].required" = false
"paths./eventframes/{webId}/securityentries.post.parameters[2].type" = "boolean"
"paths./eventframes/{webId}/securityentries.post.responses.201.description" = "The security entry was created. The response's Location header is a link to the security entry."
"paths./eventframes/{webId}/securityentries.post.summary" = "Create a security entry owned by the event frame."
"paths./eventframes/{webId}/securityentries.post.tags.length" = 1
"paths./eventframes/{webId}/securityentries.post.tags[0]" = "EventFrame"
"paths./eventframes/{webId}/securityentries/{name}.delete.consumes.length" = 0
"paths./eventframes/{webId}/securityentries/{name}.delete.deprecated" = false
"paths./eventframes/{webId}/securityentries/{name}.delete.operationId" = "EventFrame_DeleteSecurityEntry"
"paths./eventframes/{webId}/securityentries/{name}.delete.parameters.length" = 3
"paths./eventframes/{webId}/securityentries/{name}.delete.parameters[0].description" = "The name of the security entry. For every backslash character (\\) in the security entry name, replace with asterisk (*). As an example, use domain*username instead of domain\\username."
"paths./eventframes/{webId}/securityentries/{name}.delete.parameters[0].in" = "path"
"paths./eventframes/{webId}/securityentries/{name}.delete.parameters[0].name" = "name"
"paths./eventframes/{webId}/securityentries/{name}.delete.parameters[0].required" = true
"paths./eventframes/{webId}/securityentries/{name}.delete.parameters[0].type" = "string"
"paths./eventframes/{webId}/securityentries/{name}.delete.parameters[1].description" = "The ID of the event frame where the security entry will be deleted."
"paths./eventframes/{webId}/securityentries/{name}.delete.parameters[1].in" = "path"
"paths./eventframes/{webId}/securityentries/{name}.delete.parameters[1].name" = "webId"
"paths./eventframes/{webId}/securityentries/{name}.delete.parameters[1].required" = true
"paths./eventframes/{webId}/securityentries/{name}.delete.parameters[1].type" = "string"
"paths./eventframes/{webId}/securityentries/{name}.delete.parameters[2].description" = "If false, the new access permissions are only applied to the associated object. If true, the access permissions of children with any parent-child reference types will change when the permissions on the primary parent change."
"paths./eventframes/{webId}/securityentries/{name}.delete.parameters[2].in" = "query"
"paths./eventframes/{webId}/securityentries/{name}.delete.parameters[2].name" = "applyToChildren"
"paths./eventframes/{webId}/securityentries/{name}.delete.parameters[2].required" = false
"paths./eventframes/{webId}/securityentries/{name}.delete.parameters[2].type" = "boolean"
"paths./eventframes/{webId}/securityentries/{name}.delete.responses.204.description" = "The security entry was deleted."
"paths./eventframes/{webId}/securityentries/{name}.delete.summary" = "Delete a security entry owned by the event frame."
"paths./eventframes/{webId}/securityentries/{name}.delete.tags.length" = 1
"paths./eventframes/{webId}/securityentries/{name}.delete.tags[0]" = "EventFrame"
"paths./eventframes/{webId}/securityentries/{name}.get.consumes.length" = 0
"paths./eventframes/{webId}/securityentries/{name}.get.deprecated" = false
"paths./eventframes/{webId}/securityentries/{name}.get.operationId" = "EventFrame_GetSecurityEntryByName"
"paths./eventframes/{webId}/securityentries/{name}.get.parameters.length" = 3
"paths./eventframes/{webId}/securityentries/{name}.get.parameters[0].description" = "The name of the security entry. For every backslash character (\\) in the security entry name, replace with asterisk (*). As an example, use domain*username instead of domain\\username."
"paths./eventframes/{webId}/securityentries/{name}.get.parameters[0].in" = "path"
"paths./eventframes/{webId}/securityentries/{name}.get.parameters[0].name" = "name"
"paths./eventframes/{webId}/securityentries/{name}.get.parameters[0].required" = true
"paths./eventframes/{webId}/securityentries/{name}.get.parameters[0].type" = "string"
"paths./eventframes/{webId}/securityentries/{name}.get.parameters[1].description" = "The ID of the event frame."
"paths./eventframes/{webId}/securityentries/{name}.get.parameters[1].in" = "path"
"paths./eventframes/{webId}/securityentries/{name}.get.parameters[1].name" = "webId"
"paths./eventframes/{webId}/securityentries/{name}.get.parameters[1].required" = true
"paths./eventframes/{webId}/securityentries/{name}.get.parameters[1].type" = "string"
"paths./eventframes/{webId}/securityentries/{name}.get.parameters[2].description" = "List of fields to be returned in the response, separated by semicolons (;). If this parameter is not specified, all available fields will be returned."
"paths./eventframes/{webId}/securityentries/{name}.get.parameters[2].in" = "query"
"paths./eventframes/{webId}/securityentries/{name}.get.parameters[2].name" = "selectedFields"
"paths./eventframes/{webId}/securityentries/{name}.get.parameters[2].required" = false
"paths./eventframes/{webId}/securityentries/{name}.get.parameters[2].type" = "string"
"paths./eventframes/{webId}/securityentries/{name}.get.responses.200.description" = "The security entry matching the specified condition."
"paths./eventframes/{webId}/securityentries/{name}.get.responses.200.schema.$ref" = "#/definitions/SecurityEntry"
"paths./eventframes/{webId}/securityentries/{name}.get.responses.404.description" = "The security entry with the specified name is not found."
"paths./eventframes/{webId}/securityentries/{name}.get.responses.404.schema.$ref" = "#/definitions/Errors"
"paths./eventframes/{webId}/securityentries/{name}.get.summary" = "Retrieve the security entry associated with the event frame with the specified name."
"paths./eventframes/{webId}/securityentries/{name}.get.tags.length" = 1
"paths./eventframes/{webId}/securityentries/{name}.get.tags[0]" = "EventFrame"
"paths./eventframes/{webId}/securityentries/{name}.put.consumes.length" = 2
"paths./eventframes/{webId}/securityentries/{name}.put.consumes[0]" = "application/json"
"paths./eventframes/{webId}/securityentries/{name}.put.consumes[1]" = "text/json"
"paths./eventframes/{webId}/securityentries/{name}.put.deprecated" = false
"paths./eventframes/{webId}/securityentries/{name}.put.operationId" = "EventFrame_UpdateSecurityEntry"
"paths./eventframes/{webId}/securityentries/{name}.put.parameters.length" = 4
"paths./eventframes/{webId}/securityentries/{name}.put.parameters[0].description" = "The name of the security entry."
"paths./eventframes/{webId}/securityentries/{name}.put.parameters[0].in" = "path"
"paths./eventframes/{webId}/securityentries/{name}.put.parameters[0].name" = "name"
"paths./eventframes/{webId}/securityentries/{name}.put.parameters[0].required" = true
"paths./eventframes/{webId}/securityentries/{name}.put.parameters[0].type" = "string"
"paths./eventframes/{webId}/securityentries/{name}.put.parameters[1].description" = "The ID of the event frame where the security entry will be updated."
"paths./eventframes/{webId}/securityentries/{name}.put.parameters[1].in" = "path"
"paths./eventframes/{webId}/securityentries/{name}.put.parameters[1].name" = "webId"
"paths./eventframes/{webId}/securityentries/{name}.put.parameters[1].required" = true
"paths./eventframes/{webId}/securityentries/{name}.put.parameters[1].type" = "string"
"paths./eventframes/{webId}/securityentries/{name}.put.parameters[2].description" = "The new security entry definition. The full list of allow and deny rights must be supplied or they will be removed."
"paths./eventframes/{webId}/securityentries/{name}.put.parameters[2].in" = "body"
"paths./eventframes/{webId}/securityentries/{name}.put.parameters[2].name" = "securityEntry"
"paths./eventframes/{webId}/securityentries/{name}.put.parameters[2].required" = true
"paths./eventframes/{webId}/securityentries/{name}.put.parameters[2].schema.$ref" = "#/definitions/SecurityEntry"
"paths./eventframes/{webId}/securityentries/{name}.put.parameters[3].description" = "If false, the new access permissions are only applied to the associated object. If true, the access permissions of children with any parent-child reference types will change when the permissions on the primary parent change."
"paths./eventframes/{webId}/securityentries/{name}.put.parameters[3].in" = "query"
"paths./eventframes/{webId}/securityentries/{name}.put.parameters[3].name" = "applyToChildren"
"paths./eventframes/{webId}/securityentries/{name}.put.parameters[3].required" = false
"paths./eventframes/{webId}/securityentries/{name}.put.parameters[3].type" = "boolean"
"paths./eventframes/{webId}/securityentries/{name}.put.responses.204.description" = "The security entry was updated."
"paths./eventframes/{webId}/securityentries/{name}.put.summary" = "Update a security entry owned by the event frame."
"paths./eventframes/{webId}/securityentries/{name}.put.tags.length" = 1
"paths./eventframes/{webId}/securityentries/{name}.put.tags[0]" = "EventFrame"
"paths./points.get.consumes.length" = 0
"paths./points.get.deprecated" = false
"paths./points.get.description" = "This method returns a PI Point based on the hierarchical path associated with it, and should be used when a path has been received from a separate part of the PI System for use in the PI Web API. Users should primarily search with the WebID when available."
"paths./points.get.operationId" = "Point_GetByPath"
"paths./points.get.parameters.length" = 2
"paths./points.get.parameters[0].description" = "The path to the point."
"paths./points.get.parameters[0].in" = "query"
"paths./points.get.parameters[0].name" = "path"
"paths./points.get.parameters[0].required" = true
"paths./points.get.parameters[0].type" = "string"
"paths./points.get.parameters[1].description" = "List of fields to be returned in the response, separated by semicolons (;). If this parameter is not specified, all available fields will be returned."
"paths./points.get.parameters[1].in" = "query"
"paths./points.get.parameters[1].name" = "selectedFields"
"paths./points.get.parameters[1].required" = false
"paths./points.get.parameters[1].type" = "string"
"paths./points.get.responses.200.description" = "The specified point."
"paths./points.get.responses.200.schema.$ref" = "#/definitions/Point"
"paths./points.get.summary" = "Get a point by path."
"paths./points.get.tags.length" = 1
"paths./points.get.tags[0]" = "Point"
"paths./points/multiple.get.consumes.length" = 0
"paths./points/multiple.get.deprecated" = false
"paths./points/multiple.get.operationId" = "Point_GetMultiple"
"paths./points/multiple.get.parameters.length" = 5
"paths./points/multiple.get.parameters[0].description" = "Specifies if the retrieval processes should be run in parallel on the server. This may improve the response time for large amounts of requested points. The default is 'false'."
"paths./points/multiple.get.parameters[0].in" = "query"
"paths./points/multiple.get.parameters[0].name" = "asParallel"
"paths./points/multiple.get.parameters[0].required" = false
"paths./points/multiple.get.parameters[0].type" = "boolean"
"paths./points/multiple.get.parameters[1].description" = "The include mode for the return list. The default is 'All'."
"paths./points/multiple.get.parameters[1].in" = "query"
"paths./points/multiple.get.parameters[1].name" = "includeMode"
"paths./points/multiple.get.parameters[1].required" = false
"paths./points/multiple.get.parameters[1].type" = "string"
"paths./points/multiple.get.parameters[2].collectionFormat" = "multi"
"paths./points/multiple.get.parameters[2].description" = "The path of a point. Multiple points may be specified with multiple instances of the parameter."
"paths./points/multiple.get.parameters[2].in" = "query"
"paths./points/multiple.get.parameters[2].items.type" = "string"
"paths./points/multiple.get.parameters[2].name" = "path"
"paths./points/multiple.get.parameters[2].required" = false
"paths./points/multiple.get.parameters[2].type" = "array"
"paths./points/multiple.get.parameters[3].description" = "List of fields to be returned in the response, separated by semicolons (;). If this parameter is not specified, all available fields will be returned."
"paths./points/multiple.get.parameters[3].in" = "query"
"paths./points/multiple.get.parameters[3].name" = "selectedFields"
"paths./points/multiple.get.parameters[3].required" = false
"paths./points/multiple.get.parameters[3].type" = "string"
"paths./points/multiple.get.parameters[4].collectionFormat" = "multi"
"paths./points/multiple.get.parameters[4].description" = "The ID of a point. Multiple points may be specified with multiple instances of the parameter."
"paths./points/multiple.get.parameters[4].in" = "query"
"paths./points/multiple.get.parameters[4].items.type" = "string"
"paths./points/multiple.get.parameters[4].name" = "webId"
"paths./points/multiple.get.parameters[4].required" = false
"paths./points/multiple.get.parameters[4].type" = "array"
"paths./points/multiple.get.responses.200.description" = "The requested points"
"paths./points/multiple.get.responses.200.schema.$ref" = "#/definitions/Items[Item[Point]]"
"paths./points/multiple.get.responses.207.description" = "Some or all items contain exceptions."
"paths./points/multiple.get.responses.207.schema.$ref" = "#/definitions/Items[Item[Point]]"
"paths./points/multiple.get.summary" = "Retrieve multiple points by web id or path."
"paths./points/multiple.get.tags.length" = 1
"paths./points/multiple.get.tags[0]" = "Point"
"paths./points/{webId}.delete.consumes.length" = 0
"paths./points/{webId}.delete.deprecated" = false
"paths./points/{webId}.delete.operationId" = "Point_Delete"
"paths./points/{webId}.delete.parameters.length" = 1
"paths./points/{webId}.delete.parameters[0].description" = "The ID of the point."
"paths./points/{webId}.delete.parameters[0].in" = "path"
"paths./points/{webId}.delete.parameters[0].name" = "webId"
"paths./points/{webId}.delete.parameters[0].required" = true
"paths./points/{webId}.delete.parameters[0].type" = "string"
"paths./points/{webId}.delete.responses.204.description" = "The point was deleted."
"paths./points/{webId}.delete.summary" = "Delete a point."
"paths./points/{webId}.delete.tags.length" = 1
"paths./points/{webId}.delete.tags[0]" = "Point"
"paths./points/{webId}.get.consumes.length" = 0
"paths./points/{webId}.get.deprecated" = false
"paths./points/{webId}.get.operationId" = "Point_Get"
"paths./points/{webId}.get.parameters.length" = 2
"paths./points/{webId}.get.parameters[0].description" = "The ID of the point."
"paths./points/{webId}.get.parameters[0].in" = "path"
"paths./points/{webId}.get.parameters[0].name" = "webId"
"paths./points/{webId}.get.parameters[0].required" = true
"paths./points/{webId}.get.parameters[0].type" = "string"
"paths./points/{webId}.get.parameters[1].description" = "List of fields to be returned in the response, separated by semicolons (;). If this parameter is not specified, all available fields will be returned."
"paths./points/{webId}.get.parameters[1].in" = "query"
"paths./points/{webId}.get.parameters[1].name" = "selectedFields"
"paths./points/{webId}.get.parameters[1].required" = false
"paths./points/{webId}.get.parameters[1].type" = "string"
"paths./points/{webId}.get.responses.200.description" = "The specified point."
"paths./points/{webId}.get.responses.200.schema.$ref" = "#/definitions/Point"
"paths./points/{webId}.get.summary" = "Get a point."
"paths./points/{webId}.get.tags.length" = 1
"paths./points/{webId}.get.tags[0]" = "Point"
"paths./points/{webId}.patch.consumes.length" = 2
"paths./points/{webId}.patch.consumes[0]" = "application/json"
"paths./points/{webId}.patch.consumes[1]" = "text/json"
"paths./points/{webId}.patch.deprecated" = false
"paths./points/{webId}.patch.operationId" = "Point_Update"
"paths./points/{webId}.patch.parameters.length" = 2
"paths./points/{webId}.patch.parameters[0].description" = "The ID of the point."
"paths./points/{webId}.patch.parameters[0].in" = "path"
"paths./points/{webId}.patch.parameters[0].name" = "webId"
"paths./points/{webId}.patch.parameters[0].required" = true
"paths./points/{webId}.patch.parameters[0].type" = "string"
"paths./points/{webId}.patch.parameters[1].description" = "A partial point containing the desired changes."
"paths./points/{webId}.patch.parameters[1].in" = "body"
"paths./points/{webId}.patch.parameters[1].name" = "pointDTO"
"paths./points/{webId}.patch.parameters[1].required" = true
"paths./points/{webId}.patch.parameters[1].schema.$ref" = "#/definitions/Point"
"paths./points/{webId}.patch.responses.204.description" = "The point was updated."
"paths./points/{webId}.patch.summary" = "Update a point."
"paths./points/{webId}.patch.tags.length" = 1
"paths./points/{webId}.patch.tags[0]" = "Point"
"paths./points/{webId}/attributes.get.consumes.length" = 0
"paths./points/{webId}/attributes.get.deprecated" = false
"paths./points/{webId}/attributes.get.operationId" = "Point_GetAttributes"
"paths./points/{webId}/attributes.get.parameters.length" = 4
"paths./points/{webId}/attributes.get.parameters[0].description" = "The ID of the point."
"paths./points/{webId}/attributes.get.parameters[0].in" = "path"
"paths./points/{webId}/attributes.get.parameters[0].name" = "webId"
"paths./points/{webId}/attributes.get.parameters[0].required" = true
"paths./points/{webId}/attributes.get.parameters[0].type" = "string"
"paths./points/{webId}/attributes.get.parameters[1].collectionFormat" = "multi"
"paths./points/{webId}/attributes.get.parameters[1].description" = "The name of a point attribute to be returned. Multiple attributes may be specified with multiple instances of the parameter."
"paths./points/{webId}/attributes.get.parameters[1].in" = "query"
"paths./points/{webId}/attributes.get.parameters[1].items.type" = "string"
"paths./points/{webId}/attributes.get.parameters[1].name" = "name"
"paths./points/{webId}/attributes.get.parameters[1].required" = false
"paths./points/{webId}/attributes.get.parameters[1].type" = "array"
"paths./points/{webId}/attributes.get.parameters[2].description" = "The filter to the names of the list of point attributes to be returned. The default is no filter."
"paths./points/{webId}/attributes.get.parameters[2].in" = "query"
"paths./points/{webId}/attributes.get.parameters[2].name" = "nameFilter"
"paths./points/{webId}/attributes.get.parameters[2].required" = false
"paths./points/{webId}/attributes.get.parameters[2].type" = "string"
"paths./points/{webId}/attributes.get.parameters[3].description" = "List of fields to be returned in the response, separated by semicolons (;). If this parameter is not specified, all available fields will be returned."
"paths./points/{webId}/attributes.get.parameters[3].in" = "query"
"paths./points/{webId}/attributes.get.parameters[3].name" = "selectedFields"
"paths./points/{webId}/attributes.get.parameters[3].required" = false
"paths./points/{webId}/attributes.get.parameters[3].type" = "string"
"paths./points/{webId}/attributes.get.responses.200.description" = "A list of point attributes based on the specified names and name filter."
"paths./points/{webId}/attributes.get.responses.200.schema.$ref" = "#/definitions/Items[PointAttribute]"
"paths./points/{webId}/attributes.get.responses.400.description" = "Some or all of the point attribute names could not be found."
"paths./points/{webId}/attributes.get.responses.400.schema.$ref" = "#/definitions/Errors"
"paths./points/{webId}/attributes.get.summary" = "Get point attributes."
"paths./points/{webId}/attributes.get.tags.length" = 1
"paths./points/{webId}/attributes.get.tags[0]" = "Point"
"paths./points/{webId}/attributes/{name}.get.consumes.length" = 0
"paths./points/{webId}/attributes/{name}.get.deprecated" = false
"paths./points/{webId}/attributes/{name}.get.operationId" = "Point_GetAttributeByName"
"paths./points/{webId}/attributes/{name}.get.parameters.length" = 3
"paths./points/{webId}/attributes/{name}.get.parameters[0].description" = "The name of the attribute."
"paths./points/{webId}/attributes/{name}.get.parameters[0].in" = "path"
"paths./points/{webId}/attributes/{name}.get.parameters[0].name" = "name"
"paths./points/{webId}/attributes/{name}.get.parameters[0].required" = true
"paths./points/{webId}/attributes/{name}.get.parameters[0].type" = "string"
"paths./points/{webId}/attributes/{name}.get.parameters[1].description" = "The ID of the point."
"paths./points/{webId}/attributes/{name}.get.parameters[1].in" = "path"
"paths./points/{webId}/attributes/{name}.get.parameters[1].name" = "webId"
"paths./points/{webId}/attributes/{name}.get.parameters[1].required" = true
"paths./points/{webId}/attributes/{name}.get.parameters[1].type" = "string"
"paths./points/{webId}/attributes/{name}.get.parameters[2].description" = "List of fields to be returned in the response, separated by semicolons (;). If this parameter is not specified, all available fields will be returned."
"paths./points/{webId}/attributes/{name}.get.parameters[2].in" = "query"
"paths./points/{webId}/attributes/{name}.get.parameters[2].name" = "selectedFields"
"paths./points/{webId}/attributes/{name}.get.parameters[2].required" = false
"paths./points/{webId}/attributes/{name}.get.parameters[2].type" = "string"
"paths./points/{webId}/attributes/{name}.get.responses.200.description" = "A point attribute specified by its name."
"paths./points/{webId}/attributes/{name}.get.responses.200.schema.$ref" = "#/definitions/PointAttribute"
"paths./points/{webId}/attributes/{name}.get.summary" = "Get a point attribute by name."
"paths./points/{webId}/attributes/{name}.get.tags.length" = 1
"paths./points/{webId}/attributes/{name}.get.tags[0]" = "Point"
"paths./securityidentities.get.consumes.length" = 0
"paths./securityidentities.get.deprecated" = false
"paths./securityidentities.get.description" = "This method returns a security identity based on the path associated with it, and should be used when a path has been received from a separate part of the PI System for use in the PI Web API. Users should primarily search with the WebID when available."
"paths./securityidentities.get.operationId" = "SecurityIdentity_GetByPath"
"paths./securityidentities.get.parameters.length" = 2
"paths./securityidentities.get.parameters[0].description" = "The path to the security identity."
"paths./securityidentities.get.parameters[0].in" = "query"
"paths./securityidentities.get.parameters[0].name" = "path"
"paths./securityidentities.get.parameters[0].required" = true
"paths./securityidentities.get.parameters[0].type" = "string"
"paths./securityidentities.get.parameters[1].description" = "List of fields to be returned in the response, separated by semicolons (;). If this parameter is not specified, all available fields will be returned."
"paths./securityidentities.get.parameters[1].in" = "query"
"paths./securityidentities.get.parameters[1].name" = "selectedFields"
"paths./securityidentities.get.parameters[1].required" = false
"paths./securityidentities.get.parameters[1].type" = "string"
"paths./securityidentities.get.responses.200.description" = "The specified security identity."
"paths./securityidentities.get.responses.200.schema.$ref" = "#/definitions/SecurityIdentity"
"paths./securityidentities.get.summary" = "Retrieve a security identity by path."
"paths./securityidentities.get.tags.length" = 1
"paths./securityidentities.get.tags[0]" = "SecurityIdentity"
"paths./securityidentities/{webId}.delete.consumes.length" = 0
"paths./securityidentities/{webId}.delete.deprecated" = false
"paths./securityidentities/{webId}.delete.operationId" = "SecurityIdentity_Delete"
"paths./securityidentities/{webId}.delete.parameters.length" = 1
"paths./securityidentities/{webId}.delete.parameters[0].description" = "The ID of the security identity."
"paths./securityidentities/{webId}.delete.parameters[0].in" = "path"
"paths./securityidentities/{webId}.delete.parameters[0].name" = "webId"
"paths./securityidentities/{webId}.delete.parameters[0].required" = true
"paths./securityidentities/{webId}.delete.parameters[0].type" = "string"
"paths./securityidentities/{webId}.delete.responses.204.description" = "The security identity was deleted."
"paths./securityidentities/{webId}.delete.summary" = "Delete a security identity."
"paths./securityidentities/{webId}.delete.tags.length" = 1
"paths./securityidentities/{webId}.delete.tags[0]" = "SecurityIdentity"
"paths./securityidentities/{webId}.get.consumes.length" = 0
"paths./securityidentities/{webId}.get.deprecated" = false
"paths./securityidentities/{webId}.get.operationId" = "SecurityIdentity_Get"
"paths./securityidentities/{webId}.get.parameters.length" = 2
"paths./securityidentities/{webId}.get.parameters[0].description" = "The ID of the security identity."
"paths./securityidentities/{webId}.get.parameters[0].in" = "path"
"paths./securityidentities/{webId}.get.parameters[0].name" = "webId"
"paths./securityidentities/{webId}.get.parameters[0].required" = true
"paths./securityidentities/{webId}.get.parameters[0].type" = "string"
"paths./securityidentities/{webId}.get.parameters[1].description" = "List of fields to be returned in the response, separated by semicolons (;). If this parameter is not specified, all available fields will be returned."
"paths./securityidentities/{webId}.get.parameters[1].in" = "query"
"paths./securityidentities/{webId}.get.parameters[1].name" = "selectedFields"
"paths./securityidentities/{webId}.get.parameters[1].required" = false
"paths./securityidentities/{webId}.get.parameters[1].type" = "string"
"paths./securityidentities/{webId}.get.responses.200.description" = "The specified security identity."
"paths./securityidentities/{webId}.get.responses.200.schema.$ref" = "#/definitions/SecurityIdentity"
"paths./securityidentities/{webId}.get.summary" = "Retrieve a security identity."
"paths./securityidentities/{webId}.get.tags.length" = 1
"paths./securityidentities/{webId}.get.tags[0]" = "SecurityIdentity"
"paths./securityidentities/{webId}.patch.consumes.length" = 2
"paths./securityidentities/{webId}.patch.consumes[0]" = "application/json"
"paths./securityidentities/{webId}.patch.consumes[1]" = "text/json"
"paths./securityidentities/{webId}.patch.deprecated" = false
"paths./securityidentities/{webId}.patch.operationId" = "SecurityIdentity_Update"
"paths./securityidentities/{webId}.patch.parameters.length" = 2
"paths./securityidentities/{webId}.patch.parameters[0].description" = "The ID of the security identity."
"paths./securityidentities/{webId}.patch.parameters[0].in" = "path"
"paths./securityidentities/{webId}.patch.parameters[0].name" = "webId"
"paths./securityidentities/{webId}.patch.parameters[0].required" = true
"paths./securityidentities/{webId}.patch.parameters[0].type" = "string"
"paths./securityidentities/{webId}.patch.parameters[1].description" = "A partial security identity containing the desired changes."
"paths./securityidentities/{webId}.patch.parameters[1].in" = "body"
"paths./securityidentities/{webId}.patch.parameters[1].name" = "securityIdentity"
"paths./securityidentities/{webId}.patch.parameters[1].required" = true
"paths./securityidentities/{webId}.patch.parameters[1].schema.$ref" = "#/definitions/SecurityIdentity"
"paths./securityidentities/{webId}.patch.responses.204.description" = "The security identity was updated."
"paths./securityidentities/{webId}.patch.summary" = "Update a security identity by replacing items in its definition."
"paths./securityidentities/{webId}.patch.tags.length" = 1
"paths./securityidentities/{webId}.patch.tags[0]" = "SecurityIdentity"
"paths./securityidentities/{webId}/security.get.consumes.length" = 0
"paths./securityidentities/{webId}/security.get.deprecated" = false
"paths./securityidentities/{webId}/security.get.operationId" = "SecurityIdentity_GetSecurity"
"paths./securityidentities/{webId}/security.get.parameters.length" = 4
"paths./securityidentities/{webId}/security.get.parameters[0].description" = "The ID of the security identity for the security to be checked."
"paths./securityidentities/{webId}/security.get.parameters[0].in" = "path"
"paths./securityidentities/{webId}/security.get.parameters[0].name" = "webId"
"paths./securityidentities/{webId}/security.get.parameters[0].required" = true
"paths./securityidentities/{webId}/security.get.parameters[0].type" = "string"
"paths./securityidentities/{webId}/security.get.parameters[1].collectionFormat" = "multi"
"paths./securityidentities/{webId}/security.get.parameters[1].description" = "The user identity for the security information to be checked. Multiple security identities may be specified with multiple instances of the parameter. If the parameter is not specified, only the current user's security rights will be returned."
"paths./securityidentities/{webId}/security.get.parameters[1].in" = "query"
"paths./securityidentities/{webId}/security.get.parameters[1].items.type" = "string"
"paths./securityidentities/{webId}/security.get.parameters[1].name" = "userIdentity"
"paths./securityidentities/{webId}/security.get.parameters[1].required" = true
"paths./securityidentities/{webId}/security.get.parameters[1].type" = "array"
"paths./securityidentities/{webId}/security.get.parameters[2].description" = "Indicates if the security cache should be refreshed before getting security information. The default is 'false'."
"paths./securityidentities/{webId}/security.get.parameters[2].in" = "query"
"paths./securityidentities/{webId}/security.get.parameters[2].name" = "forceRefresh"
"paths./securityidentities/{webId}/security.get.parameters[2].required" = false
"paths./securityidentities/{webId}/security.get.parameters[2].type" = "boolean"
"paths./securityidentities/{webId}/security.get.parameters[3].description" = "List of fields to be returned in the response, separated by semicolons (;). If this parameter is not specified, all available fields will be returned."
"paths./securityidentities/{webId}/security.get.parameters[3].in" = "query"
"paths./securityidentities/{webId}/security.get.parameters[3].name" = "selectedFields"
"paths./securityidentities/{webId}/security.get.parameters[3].required" = false
"paths./securityidentities/{webId}/security.get.parameters[3].type" = "string"
"paths./securityidentities/{webId}/security.get.responses.200.description" = "Security rights."
"paths./securityidentities/{webId}/security.get.responses.200.schema.$ref" = "#/definitions/Items[SecurityRights]"
"paths./securityidentities/{webId}/security.get.responses.400.description" = "An invalid or local account is specified as the user identity."
"paths./securityidentities/{webId}/security.get.responses.400.schema.$ref" = "#/definitions/Errors"
"paths./securityidentities/{webId}/security.get.responses.401.description" = "Access denied for the specified user identity."
"paths./securityidentities/{webId}/security.get.responses.401.schema.$ref" = "#/definitions/Errors"
"paths./securityidentities/{webId}/security.get.responses.409.description" = "Unsupported when using Anonymous authentication method."
"paths./securityidentities/{webId}/security.get.responses.409.schema.$ref" = "#/definitions/Errors"
"paths./securityidentities/{webId}/security.get.responses.502.description" = "Failed to retrieve the specified user identity."
"paths./securityidentities/{webId}/security.get.responses.502.schema.$ref" = "#/definitions/Errors"
"paths./securityidentities/{webId}/security.get.summary" = "Get the security information of the specified security item associated with the security identity for a specified user."
"paths./securityidentities/{webId}/security.get.tags.length" = 1
"paths./securityidentities/{webId}/security.get.tags[0]" = "SecurityIdentity"
"paths./securityidentities/{webId}/securityentries.get.consumes.length" = 0
"paths./securityidentities/{webId}/securityentries.get.deprecated" = false
"paths./securityidentities/{webId}/securityentries.get.operationId" = "SecurityIdentity_GetSecurityEntries"
"paths./securityidentities/{webId}/securityentries.get.parameters.length" = 3
"paths./securityidentities/{webId}/securityentries.get.parameters[0].description" = "The ID of the security identity."
"paths./securityidentities/{webId}/securityentries.get.parameters[0].in" = "path"
"paths./securityidentities/{webId}/securityentries.get.parameters[0].name" = "webId"
"paths./securityidentities/{webId}/securityentries.get.parameters[0].required" = true
"paths./securityidentities/{webId}/securityentries.get.parameters[0].type" = "string"
"paths./securityidentities/{webId}/securityentries.get.parameters[1].description" = "The name query string used for filtering security entries. The default is no filter."
"paths./securityidentities/{webId}/securityentries.get.parameters[1].in" = "query"
"paths./securityidentities/{webId}/securityentries.get.parameters[1].name" = "nameFilter"
"paths./securityidentities/{webId}/securityentries.get.parameters[1].required" = false
"paths./securityidentities/{webId}/securityentries.get.parameters[1].type" = "string"
"paths./securityidentities/{webId}/securityentries.get.parameters[2].description" = "List of fields to be returned in the response, separated by semicolons (;). If this parameter is not specified, all available fields will be returned."
"paths./securityidentities/{webId}/securityentries.get.parameters[2].in" = "query"
"paths./securityidentities/{webId}/securityentries.get.parameters[2].name" = "selectedFields"
"paths./securityidentities/{webId}/securityentries.get.parameters[2].required" = false
"paths./securityidentities/{webId}/securityentries.get.parameters[2].type" = "string"
"paths./securityidentities/{webId}/securityentries.get.responses.200.description" = "A list of security entries matching the specified condition."
"paths./securityidentities/{webId}/securityentries.get.responses.200.schema.$ref" = "#/definitions/Items[SecurityEntry]"
"paths./securityidentities/{webId}/securityentries.get.summary" = "Retrieve the security entries associated with the security identity based on the specified criteria. By default, all security entries for this security identity are returned."
"paths./securityidentities/{webId}/securityentries.get.tags.length" = 1
"paths./securityidentities/{webId}/securityentries.get.tags[0]" = "SecurityIdentity"
"paths./securityidentities/{webId}/securityentries/{name}.get.consumes.length" = 0
"paths./securityidentities/{webId}/securityentries/{name}.get.deprecated" = false
"paths./securityidentities/{webId}/securityentries/{name}.get.operationId" = "SecurityIdentity_GetSecurityEntryByName"
"paths./securityidentities/{webId}/securityentries/{name}.get.parameters.length" = 3
"paths./securityidentities/{webId}/securityentries/{name}.get.parameters[0].description" = "The name of the security entry. For every backslash character (\\) in the security entry name, replace with asterisk (*). As an example, use domain*username instead of domain\\username."
"paths./securityidentities/{webId}/securityentries/{name}.get.parameters[0].in" = "path"
"paths./securityidentities/{webId}/securityentries/{name}.get.parameters[0].name" = "name"
"paths./securityidentities/{webId}/securityentries/{name}.get.parameters[0].required" = true
"paths./securityidentities/{webId}/securityentries/{name}.get.parameters[0].type" = "string"
"paths./securityidentities/{webId}/securityentries/{name}.get.parameters[1].description" = "The ID of the security identity."
"paths./securityidentities/{webId}/securityentries/{name}.get.parameters[1].in" = "path"
"paths./securityidentities/{webId}/securityentries/{name}.get.parameters[1].name" = "webId"
"paths./securityidentities/{webId}/securityentries/{name}.get.parameters[1].required" = true
"paths./securityidentities/{webId}/securityentries/{name}.get.parameters[1].type" = "string"
"paths./securityidentities/{webId}/securityentries/{name}.get.parameters[2].description" = "List of fields to be returned in the response, separated by semicolons (;). If this parameter is not specified, all available fields will be returned."
"paths./securityidentities/{webId}/securityentries/{name}.get.parameters[2].in" = "query"
"paths./securityidentities/{webId}/securityentries/{name}.get.parameters[2].name" = "selectedFields"
"paths./securityidentities/{webId}/securityentries/{name}.get.parameters[2].required" = false
"paths./securityidentities/{webId}/securityentries/{name}.get.parameters[2].type" = "string"
"paths./securityidentities/{webId}/securityentries/{name}.get.responses.200.description" = "The security entry matching the specified condition."
"paths./securityidentities/{webId}/securityentries/{name}.get.responses.200.schema.$ref" = "#/definitions/SecurityEntry"
"paths./securityidentities/{webId}/securityentries/{name}.get.responses.404.description" = "The security entry with the specified name is not found."
"paths./securityidentities/{webId}/securityentries/{name}.get.responses.404.schema.$ref" = "#/definitions/Errors"
"paths./securityidentities/{webId}/securityentries/{name}.get.summary" = "Retrieve the security entry associated with the security identity with the specified name."
"paths./securityidentities/{webId}/securityentries/{name}.get.tags.length" = 1
"paths./securityidentities/{webId}/securityentries/{name}.get.tags[0]" = "SecurityIdentity"
"paths./securityidentities/{webId}/securitymappings.get.consumes.length" = 0
"paths./securityidentities/{webId}/securitymappings.get.deprecated" = false
"paths./securityidentities/{webId}/securitymappings.get.operationId" = "SecurityIdentity_GetSecurityMappings"
"paths./securityidentities/{webId}/securitymappings.get.parameters.length" = 2
"paths./securityidentities/{webId}/securitymappings.get.parameters[0].description" = "The ID of the security identity."
"paths./securityidentities/{webId}/securitymappings.get.parameters[0].in" = "path"
"paths./securityidentities/{webId}/securitymappings.get.parameters[0].name" = "webId"
"paths./securityidentities/{webId}/securitymappings.get.parameters[0].required" = true
"paths./securityidentities/{webId}/securitymappings.get.parameters[0].type" = "string"
"paths./securityidentities/{webId}/securitymappings.get.parameters[1].description" = "List of fields to be returned in the response, separated by semicolons (;). If this parameter is not specified, all available fields will be returned."
"paths./securityidentities/{webId}/securitymappings.get.parameters[1].in" = "query"
"paths./securityidentities/{webId}/securitymappings.get.parameters[1].name" = "selectedFields"
"paths./securityidentities/{webId}/securitymappings.get.parameters[1].required" = false
"paths./securityidentities/{webId}/securitymappings.get.parameters[1].type" = "string"
"paths./securityidentities/{webId}/securitymappings.get.responses.200.description" = "A list of security mappings for the specified security identity."
"paths./securityidentities/{webId}/securitymappings.get.responses.200.schema.$ref" = "#/definitions/Items[SecurityMapping]"
"paths./securityidentities/{webId}/securitymappings.get.summary" = "Get security mappings for the specified security identity."
"paths./securityidentities/{webId}/securitymappings.get.tags.length" = 1
"paths./securityidentities/{webId}/securitymappings.get.tags[0]" = "SecurityIdentity"
"paths./securitymappings.get.consumes.length" = 0
"paths./securitymappings.get.deprecated" = false
"paths./securitymappings.get.description" = "This method returns a security mapping based on the path associated with it, and should be used when a path has been received from a separate part of the PI System for use in the PI Web API. Users should primarily search with the WebID when available."
"paths./securitymappings.get.operationId" = "SecurityMapping_GetByPath"
"paths./securitymappings.get.parameters.length" = 2
"paths./securitymappings.get.parameters[0].description" = "The path to the security mapping."
"paths./securitymappings.get.parameters[0].in" = "query"
"paths./securitymappings.get.parameters[0].name" = "path"
"paths./securitymappings.get.parameters[0].required" = true
"paths./securitymappings.get.parameters[0].type" = "string"
"paths./securitymappings.get.parameters[1].description" = "List of fields to be returned in the response, separated by semicolons (;). If this parameter is not specified, all available fields will be returned."
"paths./securitymappings.get.parameters[1].in" = "query"
"paths./securitymappings.get.parameters[1].name" = "selectedFields"
"paths./securitymappings.get.parameters[1].required" = false
"paths./securitymappings.get.parameters[1].type" = "string"
"paths./securitymappings.get.responses.200.description" = "The specified security mapping."
"paths./securitymappings.get.responses.200.schema.$ref" = "#/definitions/SecurityMapping"
"paths./securitymappings.get.summary" = "Retrieve a security mapping by path."
"paths./securitymappings.get.tags.length" = 1
"paths./securitymappings.get.tags[0]" = "SecurityMapping"
"paths./securitymappings/{webId}.delete.consumes.length" = 0
"paths./securitymappings/{webId}.delete.deprecated" = false
"paths./securitymappings/{webId}.delete.operationId" = "SecurityMapping_Delete"
"paths./securitymappings/{webId}.delete.parameters.length" = 1
"paths./securitymappings/{webId}.delete.parameters[0].description" = "The ID of the security mapping."
"paths./securitymappings/{webId}.delete.parameters[0].in" = "path"
"paths./securitymappings/{webId}.delete.parameters[0].name" = "webId"
"paths./securitymappings/{webId}.delete.parameters[0].required" = true
"paths./securitymappings/{webId}.delete.parameters[0].type" = "string"
"paths./securitymappings/{webId}.delete.responses.204.description" = "The security mapping was deleted."
"paths./securitymappings/{webId}.delete.summary" = "Delete a security mapping."
"paths./securitymappings/{webId}.delete.tags.length" = 1
"paths./securitymappings/{webId}.delete.tags[0]" = "SecurityMapping"
"paths./securitymappings/{webId}.get.consumes.length" = 0
"paths./securitymappings/{webId}.get.deprecated" = false
"paths./securitymappings/{webId}.get.operationId" = "SecurityMapping_Get"
"paths./securitymappings/{webId}.get.parameters.length" = 2
"paths./securitymappings/{webId}.get.parameters[0].description" = "The ID of the security mapping."
"paths./securitymappings/{webId}.get.parameters[0].in" = "path"
"paths./securitymappings/{webId}.get.parameters[0].name" = "webId"
"paths./securitymappings/{webId}.get.parameters[0].required" = true
"paths./securitymappings/{webId}.get.parameters[0].type" = "string"
"paths./securitymappings/{webId}.get.parameters[1].description" = "List of fields to be returned in the response, separated by semicolons (;). If this parameter is not specified, all available fields will be returned."
"paths./securitymappings/{webId}.get.parameters[1].in" = "query"
"paths./securitymappings/{webId}.get.parameters[1].name" = "selectedFields"
"paths./securitymappings/{webId}.get.parameters[1].required" = false
"paths./securitymappings/{webId}.get.parameters[1].type" = "string"
"paths./securitymappings/{webId}.get.responses.200.description" = "The specified security mapping."
"paths./securitymappings/{webId}.get.responses.200.schema.$ref" = "#/definitions/SecurityMapping"
"paths./securitymappings/{webId}.get.summary" = "Retrieve a security mapping."
"paths./securitymappings/{webId}.get.tags.length" = 1
"paths./securitymappings/{webId}.get.tags[0]" = "SecurityMapping"
"paths./securitymappings/{webId}.patch.consumes.length" = 2
"paths./securitymappings/{webId}.patch.consumes[0]" = "application/json"
"paths./securitymappings/{webId}.patch.consumes[1]" = "text/json"
"paths./securitymappings/{webId}.patch.deprecated" = false
"paths./securitymappings/{webId}.patch.operationId" = "SecurityMapping_Update"
"paths./securitymappings/{webId}.patch.parameters.length" = 2
"paths./securitymappings/{webId}.patch.parameters[0].description" = "The ID of the security mapping."
"paths./securitymappings/{webId}.patch.parameters[0].in" = "path"
"paths./securitymappings/{webId}.patch.parameters[0].name" = "webId"
"paths./securitymappings/{webId}.patch.parameters[0].required" = true
"paths./securitymappings/{webId}.patch.parameters[0].type" = "string"
"paths./securitymappings/{webId}.patch.parameters[1].description" = "A partial security mapping containing the desired changes."
"paths./securitymappings/{webId}.patch.parameters[1].in" = "body"
"paths./securitymappings/{webId}.patch.parameters[1].name" = "securityMapping"
"paths./securitymappings/{webId}.patch.parameters[1].required" = true
"paths./securitymappings/{webId}.patch.parameters[1].schema.$ref" = "#/definitions/SecurityMapping"
"paths./securitymappings/{webId}.patch.responses.204.description" = "The security mapping was updated."
"paths./securitymappings/{webId}.patch.summary" = "Update a security mapping by replacing items in its definition."
"paths./securitymappings/{webId}.patch.tags.length" = 1
"paths./securitymappings/{webId}.patch.tags[0]" = "SecurityMapping"
"paths./securitymappings/{webId}/security.get.consumes.length" = 0
"paths./securitymappings/{webId}/security.get.deprecated" = false
"paths./securitymappings/{webId}/security.get.operationId" = "SecurityMapping_GetSecurity"
"paths./securitymappings/{webId}/security.get.parameters.length" = 4
"paths./securitymappings/{webId}/security.get.parameters[0].description" = "The ID of the security mapping for the security to be checked."
"paths./securitymappings/{webId}/security.get.parameters[0].in" = "path"
"paths./securitymappings/{webId}/security.get.parameters[0].name" = "webId"
"paths./securitymappings/{webId}/security.get.parameters[0].required" = true
"paths./securitymappings/{webId}/security.get.parameters[0].type" = "string"
"paths./securitymappings/{webId}/security.get.parameters[1].collectionFormat" = "multi"
"paths./securitymappings/{webId}/security.get.parameters[1].description" = "The user identity for the security information to be checked. Multiple security identities may be specified with multiple instances of the parameter. If the parameter is not specified, only the current user's security rights will be returned."
"paths./securitymappings/{webId}/security.get.parameters[1].in" = "query"
"paths./securitymappings/{webId}/security.get.parameters[1].items.type" = "string"
"paths./securitymappings/{webId}/security.get.parameters[1].name" = "userIdentity"
"paths./securitymappings/{webId}/security.get.parameters[1].required" = true
"paths./securitymappings/{webId}/security.get.parameters[1].type" = "array"
"paths./securitymappings/{webId}/security.get.parameters[2].description" = "Indicates if the security cache should be refreshed before getting security information. The default is 'false'."
"paths./securitymappings/{webId}/security.get.parameters[2].in" = "query"
"paths./securitymappings/{webId}/security.get.parameters[2].name" = "forceRefresh"
"paths./securitymappings/{webId}/security.get.parameters[2].required" = false
"paths./securitymappings/{webId}/security.get.parameters[2].type" = "boolean"
"paths./securitymappings/{webId}/security.get.parameters[3].description" = "List of fields to be returned in the response, separated by semicolons (;). If this parameter is not specified, all available fields will be returned."
"paths./securitymappings/{webId}/security.get.parameters[3].in" = "query"
"paths./securitymappings/{webId}/security.get.parameters[3].name" = "selectedFields"
"paths./securitymappings/{webId}/security.get.parameters[3].required" = false
"paths./securitymappings/{webId}/security.get.parameters[3].type" = "string"
"paths./securitymappings/{webId}/security.get.responses.200.description" = "Security rights."
"paths./securitymappings/{webId}/security.get.responses.200.schema.$ref" = "#/definitions/Items[SecurityRights]"
"paths./securitymappings/{webId}/security.get.responses.400.description" = "An invalid or local account is specified as the user mapping."
"paths./securitymappings/{webId}/security.get.responses.400.schema.$ref" = "#/definitions/Errors"
"paths./securitymappings/{webId}/security.get.responses.401.description" = "Access denied for the specified user mapping."
"paths./securitymappings/{webId}/security.get.responses.401.schema.$ref" = "#/definitions/Errors"
"paths./securitymappings/{webId}/security.get.responses.409.description" = "Unsupported when using Anonymous authentication method."
"paths./securitymappings/{webId}/security.get.responses.409.schema.$ref" = "#/definitions/Errors"
"paths./securitymappings/{webId}/security.get.responses.502.description" = "Failed to retrieve the specified user mapping."
"paths./securitymappings/{webId}/security.get.responses.502.schema.$ref" = "#/definitions/Errors"
"paths./securitymappings/{webId}/security.get.summary" = "Get the security information of the specified security item associated with the security mapping for a specified user."
"paths./securitymappings/{webId}/security.get.tags.length" = 1
"paths./securitymappings/{webId}/security.get.tags[0]" = "SecurityMapping"
"paths./securitymappings/{webId}/securityentries.get.consumes.length" = 0
"paths./securitymappings/{webId}/securityentries.get.deprecated" = false
"paths./securitymappings/{webId}/securityentries.get.operationId" = "SecurityMapping_GetSecurityEntries"
"paths./securitymappings/{webId}/securityentries.get.parameters.length" = 3
"paths./securitymappings/{webId}/securityentries.get.parameters[0].description" = "The ID of the security mapping."
"paths./securitymappings/{webId}/securityentries.get.parameters[0].in" = "path"
"paths./securitymappings/{webId}/securityentries.get.parameters[0].name" = "webId"
"paths./securitymappings/{webId}/securityentries.get.parameters[0].required" = true
"paths./securitymappings/{webId}/securityentries.get.parameters[0].type" = "string"
"paths./securitymappings/{webId}/securityentries.get.parameters[1].description" = "The name query string used for filtering security entries. The default is no filter."
"paths./securitymappings/{webId}/securityentries.get.parameters[1].in" = "query"
"paths./securitymappings/{webId}/securityentries.get.parameters[1].name" = "nameFilter"
"paths./securitymappings/{webId}/securityentries.get.parameters[1].required" = false
"paths./securitymappings/{webId}/securityentries.get.parameters[1].type" = "string"
"paths./securitymappings/{webId}/securityentries.get.parameters[2].description" = "List of fields to be returned in the response, separated by semicolons (;). If this parameter is not specified, all available fields will be returned."
"paths./securitymappings/{webId}/securityentries.get.parameters[2].in" = "query"
"paths./securitymappings/{webId}/securityentries.get.parameters[2].name" = "selectedFields"
"paths./securitymappings/{webId}/securityentries.get.parameters[2].required" = false
"paths./securitymappings/{webId}/securityentries.get.parameters[2].type" = "string"
"paths./securitymappings/{webId}/securityentries.get.responses.200.description" = "A list of security entries matching the specified condition."
"paths./securitymappings/{webId}/securityentries.get.responses.200.schema.$ref" = "#/definitions/Items[SecurityEntry]"
"paths./securitymappings/{webId}/securityentries.get.summary" = "Retrieve the security entries associated with the security mapping based on the specified criteria. By default, all security entries for this security mapping are returned."
"paths./securitymappings/{webId}/securityentries.get.tags.length" = 1
"paths./securitymappings/{webId}/securityentries.get.tags[0]" = "SecurityMapping"
"paths./securitymappings/{webId}/securityentries/{name}.get.consumes.length" = 0
"paths./securitymappings/{webId}/securityentries/{name}.get.deprecated" = false
"paths./securitymappings/{webId}/securityentries/{name}.get.operationId" = "SecurityMapping_GetSecurityEntryByName"
"paths./securitymappings/{webId}/securityentries/{name}.get.parameters.length" = 3
"paths./securitymappings/{webId}/securityentries/{name}.get.parameters[0].description" = "The name of the security entry. For every backslash character (\\) in the security entry name, replace with asterisk (*). As an example, use domain*username instead of domain\\username."
"paths./securitymappings/{webId}/securityentries/{name}.get.parameters[0].in" = "path"
"paths./securitymappings/{webId}/securityentries/{name}.get.parameters[0].name" = "name"
"paths./securitymappings/{webId}/securityentries/{name}.get.parameters[0].required" = true
"paths./securitymappings/{webId}/securityentries/{name}.get.parameters[0].type" = "string"
"paths./securitymappings/{webId}/securityentries/{name}.get.parameters[1].description" = "The ID of the security mapping."
"paths./securitymappings/{webId}/securityentries/{name}.get.parameters[1].in" = "path"
"paths./securitymappings/{webId}/securityentries/{name}.get.parameters[1].name" = "webId"
"paths./securitymappings/{webId}/securityentries/{name}.get.parameters[1].required" = true
"paths./securitymappings/{webId}/securityentries/{name}.get.parameters[1].type" = "string"
"paths./securitymappings/{webId}/securityentries/{name}.get.parameters[2].description" = "List of fields to be returned in the response, separated by semicolons (;). If this parameter is not specified, all available fields will be returned."
"paths./securitymappings/{webId}/securityentries/{name}.get.parameters[2].in" = "query"
"paths./securitymappings/{webId}/securityentries/{name}.get.parameters[2].name" = "selectedFields"
"paths./securitymappings/{webId}/securityentries/{name}.get.parameters[2].required" = false
"paths./securitymappings/{webId}/securityentries/{name}.get.parameters[2].type" = "string"
"paths./securitymappings/{webId}/securityentries/{name}.get.responses.200.description" = "The security entry matching the specified condition."
"paths./securitymappings/{webId}/securityentries/{name}.get.responses.200.schema.$ref" = "#/definitions/SecurityEntry"
"paths./securitymappings/{webId}/securityentries/{name}.get.responses.404.description" = "The security entry with the specified name is not found."
"paths./securitymappings/{webId}/securityentries/{name}.get.responses.404.schema.$ref" = "#/definitions/Errors"
"paths./securitymappings/{webId}/securityentries/{name}.get.summary" = "Retrieve the security entry associated with the security mapping with the specified name."
"paths./securitymappings/{webId}/securityentries/{name}.get.tags.length" = 1
"paths./securitymappings/{webId}/securityentries/{name}.get.tags[0]" = "SecurityMapping"
"paths./streams/{webId}/channel.get.consumes.length" = 0
"paths./streams/{webId}/channel.get.deprecated" = false
"paths./streams/{webId}/channel.get.operationId" = "Stream_GetChannel"
"paths./streams/{webId}/channel.get.parameters.length" = 2
"paths./streams/{webId}/channel.get.parameters[0].description" = "The ID of the stream."
"paths./streams/{webId}/channel.get.parameters[0].in" = "path"
"paths./streams/{webId}/channel.get.parameters[0].name" = "webId"
"paths./streams/{webId}/channel.get.parameters[0].required" = true
"paths./streams/{webId}/channel.get.parameters[0].type" = "string"
"paths./streams/{webId}/channel.get.parameters[1].description" = "Specified if the channel should send a message with the current value of the stream after the connection is opened. The default is 'false'."
"paths./streams/{webId}/channel.get.parameters[1].in" = "query"
"paths./streams/{webId}/channel.get.parameters[1].name" = "includeInitialValues"
"paths./streams/{webId}/channel.get.parameters[1].required" = false
"paths./streams/{webId}/channel.get.parameters[1].type" = "boolean"
"paths./streams/{webId}/channel.get.responses.101.description" = "Switches to the Web Socket protocol."
"paths./streams/{webId}/channel.get.responses.101.schema.$ref" = "#/definitions/Items[StreamValues]"
"paths./streams/{webId}/channel.get.summary" = "Opens a channel that will send messages about any value changes for the specified stream."
"paths./streams/{webId}/channel.get.tags.length" = 1
"paths./streams/{webId}/channel.get.tags[0]" = "Stream"
"paths./streams/{webId}/end.get.consumes.length" = 0
"paths./streams/{webId}/end.get.deprecated" = false
"paths./streams/{webId}/end.get.operationId" = "Stream_GetEnd"
"paths./streams/{webId}/end.get.parameters.length" = 3
"paths./streams/{webId}/end.get.parameters[0].description" = "The ID of the stream."
"paths./streams/{webId}/end.get.parameters[0].in" = "path"
"paths./streams/{webId}/end.get.parameters[0].name" = "webId"
"paths./streams/{webId}/end.get.parameters[0].required" = true
"paths./streams/{webId}/end.get.parameters[0].type" = "string"
"paths./streams/{webId}/end.get.parameters[1].description" = "The name or abbreviation of the desired units of measure for the returned value, as found in the UOM database associated with the attribute. If not specified for an attribute, the attribute's default unit of measure is used. If the underlying stream is a point, this value may not be specified, as points are not associated with a unit of measure."
"paths./streams/{webId}/end.get.parameters[1].in" = "query"
"paths./streams/{webId}/end.get.parameters[1].name" = "desiredUnits"
"paths./streams/{webId}/end.get.parameters[1].required" = false
"paths./streams/{webId}/end.get.parameters[1].type" = "string"
"paths./streams/{webId}/end.get.parameters[2].description" = "List of fields to be returned in the response, separated by semicolons (;). If this parameter is not specified, all available fields will be returned."
"paths./streams/{webId}/end.get.parameters[2].in" = "query"
"paths./streams/{webId}/end.get.parameters[2].name" = "selectedFields"
"paths./streams/{webId}/end.get.parameters[2].required" = false
"paths./streams/{webId}/end.get.parameters[2].type" = "string"
"paths./streams/{webId}/end.get.responses.200.description" = "The value at the specified time value."
"paths./streams/{webId}/end.get.responses.200.schema.$ref" = "#/definitions/TimedValue"
"paths./streams/{webId}/end.get.summary" = "Returns the end-of-stream value of the stream."
"paths./streams/{webId}/end.get.tags.length" = 1
"paths./streams/{webId}/end.get.tags[0]" = "Stream"
"paths./streams/{webId}/interpolated.get.consumes.length" = 0
"paths./streams/{webId}/interpolated.get.deprecated" = false
"paths./streams/{webId}/interpolated.get.operationId" = "Stream_GetInterpolated"
"paths./streams/{webId}/interpolated.get.parameters.length" = 9
"paths./streams/{webId}/interpolated.get.parameters[0].description" = "The ID of the stream."
"paths./streams/{webId}/interpolated.get.parameters[0].in" = "path"
"paths./streams/{webId}/interpolated.get.parameters[0].name" = "webId"
"paths./streams/{webId}/interpolated.get.parameters[0].required" = true
"paths./streams/{webId}/interpolated.get.parameters[0].type" = "string"
"paths./streams/{webId}/interpolated.get.parameters[1].description" = "The name or abbreviation of the desired units of measure for the returned value, as found in the UOM database associated with the attribute. If not specified for an attribute, the attribute's default unit of measure is used. If the underlying stream is a point, this value may not be specified, as points are not associated with a unit of measure."
"paths./streams/{webId}/interpolated.get.parameters[1].in" = "query"
"paths./streams/{webId}/interpolated.get.parameters[1].name" = "desiredUnits"
"paths./streams/{webId}/interpolated.get.parameters[1].required" = false
"paths./streams/{webId}/interpolated.get.parameters[1].type" = "string"
"paths./streams/{webId}/interpolated.get.parameters[2].description" = "An optional end time. The default is '*' for element attributes and points. For event frame attributes, the default is the event frame's end time, or '*' if that is not set. Note that if endTime is earlier than startTime, the resulting values will be in time-descending order."
"paths./streams/{webId}/interpolated.get.parameters[2].in" = "query"
"paths./streams/{webId}/interpolated.get.parameters[2].name" = "endTime"
"paths./streams/{webId}/interpolated.get.parameters[2].required" = false
"paths./streams/{webId}/interpolated.get.parameters[2].type" = "string"
"paths./streams/{webId}/interpolated.get.parameters[3].description" = "An optional string containing a filter expression. Expression variables are relative to the data point. Use '.' to reference the containing attribute. If the attribute does not support filtering, the filter will be ignored. The default is no filtering."
"paths./streams/{webId}/interpolated.get.parameters[3].in" = "query"
"paths./streams/{webId}/interpolated.get.parameters[3].name" = "filterExpression"
"paths./streams/{webId}/interpolated.get.parameters[3].required" = false
"paths./streams/{webId}/interpolated.get.parameters[3].type" = "string"
"paths./streams/{webId}/interpolated.get.parameters[4].description" = "Specify 'true' to indicate that values which fail the filter criteria are present in the returned data at the times where they occurred with a value set to a 'Filtered' enumeration value with bad status. Repeated consecutive failures are omitted."
"paths./streams/{webId}/interpolated.get.parameters[4].in" = "query"
"paths./streams/{webId}/interpolated.get.parameters[4].name" = "includeFilteredValues"
"paths./streams/{webId}/interpolated.get.parameters[4].required" = false
"paths./streams/{webId}/interpolated.get.parameters[4].type" = "boolean"
"paths./streams/{webId}/interpolated.get.parameters[5].description" = "The sampling interval, in AFTimeSpan format."
"paths./streams/{webId}/interpolated.get.parameters[5].in" = "query"
"paths./streams/{webId}/interpolated.get.parameters[5].name" = "interval"
"paths./streams/{webId}/interpolated.get.parameters[5].required" = false
"paths./streams/{webId}/interpolated.get.parameters[5].type" = "string"
"paths./streams/{webId}/interpolated.get.parameters[6].description" = "List of fields to be returned in the response, separated by semicolons (;). If this parameter is not specified, all available fields will be returned."
"paths./streams/{webId}/interpolated.get.parameters[6].in" = "query"
"paths./streams/{webId}/interpolated.get.parameters[6].name" = "selectedFields"
"paths./streams/{webId}/interpolated.get.parameters[6].required" = false
"paths./streams/{webId}/interpolated.get.parameters[6].type" = "string"
"paths./streams/{webId}/interpolated.get.parameters[7].description" = "An optional start time. The default is '*-1d' for element attributes and points. For event frame attributes, the default is the event frame's start time, or '*-1d' if that is not set."
"paths./streams/{webId}/interpolated.get.parameters[7].in" = "query"
"paths./streams/{webId}/interpolated.get.parameters[7].name" = "startTime"
"paths./streams/{webId}/interpolated.get.parameters[7].required" = false
"paths./streams/{webId}/interpolated.get.parameters[7].type" = "string"
"paths./streams/{webId}/interpolated.get.parameters[8].description" = "The time zone in which the time string will be interpreted. This parameter will be ignored if a time zone is specified in the time string. If no time zone is specified in either places, the PI Web API server time zone will be used."
"paths./streams/{webId}/interpolated.get.parameters[8].in" = "query"
"paths./streams/{webId}/interpolated.get.parameters[8].name" = "timeZone"
"paths./streams/{webId}/interpolated.get.parameters[8].required" = false
"paths./streams/{webId}/interpolated.get.parameters[8].type" = "string"
"paths./streams/{webId}/interpolated.get.responses.200.description" = "The values that meet the specified conditions."
"paths./streams/{webId}/interpolated.get.responses.200.schema.$ref" = "#/definitions/TimedValues"
"paths./streams/{webId}/interpolated.get.responses.400.description" = "The request was malformed."
"paths./streams/{webId}/interpolated.get.responses.400.schema.$ref" = "#/definitions/Errors"
"paths./streams/{webId}/interpolated.get.responses.409.description" = "The data reference does not support this method, or the supplied filter expression is unsupported, or the desired units of measure are incompatible."
"paths./streams/{webId}/interpolated.get.responses.409.schema.$ref" = "#/definitions/Errors"
"paths./streams/{webId}/interpolated.get.summary" = "Retrieves interpolated values over the specified time range at the specified sampling interval."
"paths./streams/{webId}/interpolated.get.tags.length" = 1
"paths./streams/{webId}/interpolated.get.tags[0]" = "Stream"
"paths./streams/{webId}/interpolatedattimes.get.consumes.length" = 0
"paths./streams/{webId}/interpolatedattimes.get.deprecated" = false
"paths./streams/{webId}/interpolatedattimes.get.operationId" = "Stream_GetInterpolatedAtTimes"
"paths./streams/{webId}/interpolatedattimes.get.parameters.length" = 8
"paths./streams/{webId}/interpolatedattimes.get.parameters[0].description" = "The ID of the stream."
"paths./streams/{webId}/interpolatedattimes.get.parameters[0].in" = "path"
"paths./streams/{webId}/interpolatedattimes.get.parameters[0].name" = "webId"
"paths./streams/{webId}/interpolatedattimes.get.parameters[0].required" = true
"paths./streams/{webId}/interpolatedattimes.get.parameters[0].type" = "string"
"paths./streams/{webId}/interpolatedattimes.get.parameters[1].description" = "The name or abbreviation of the desired units of measure for the returned value, as found in the UOM database associated with the attribute. If not specified for an attribute, the attribute's default unit of measure is used. If the underlying stream is a point, this value may not be specified, as points are not associated with a unit of measure."
"paths./streams/{webId}/interpolatedattimes.get.parameters[1].in" = "query"
"paths./streams/{webId}/interpolatedattimes.get.parameters[1].name" = "desiredUnits"
"paths./streams/{webId}/interpolatedattimes.get.parameters[1].required" = false
"paths./streams/{webId}/interpolatedattimes.get.parameters[1].type" = "string"
"paths./streams/{webId}/interpolatedattimes.get.parameters[2].description" = "An optional string containing a filter expression. Expression variables are relative to the data point. Use '.' to reference the containing attribute. If the attribute does not support filtering, the filter will be ignored. The default is no filtering."
"paths./streams/{webId}/interpolatedattimes.get.parameters[2].in" = "query"
"paths./streams/{webId}/interpolatedattimes.get.parameters[2].name" = "filterExpression"
"paths./streams/{webId}/interpolatedattimes.get.parameters[2].required" = false
"paths./streams/{webId}/interpolatedattimes.get.parameters[2].type" = "string"
"paths./streams/{webId}/interpolatedattimes.get.parameters[3].description" = "Specify 'true' to indicate that values which fail the filter criteria are present in the returned data at the times where they occurred with a value set to a 'Filtered' enumeration value with bad status. Repeated consecutive failures are omitted."
"paths./streams/{webId}/interpolatedattimes.get.parameters[3].in" = "query"
"paths./streams/{webId}/interpolatedattimes.get.parameters[3].name" = "includeFilteredValues"
"paths./streams/{webId}/interpolatedattimes.get.parameters[3].required" = false
"paths./streams/{webId}/interpolatedattimes.get.parameters[3].type" = "boolean"
"paths./streams/{webId}/interpolatedattimes.get.parameters[4].description" = "List of fields to be returned in the response, separated by semicolons (;). If this parameter is not specified, all available fields will be returned."
"paths./streams/{webId}/interpolatedattimes.get.parameters[4].in" = "query"
"paths./streams/{webId}/interpolatedattimes.get.parameters[4].name" = "selectedFields"
"paths./streams/{webId}/interpolatedattimes.get.parameters[4].required" = false
"paths./streams/{webId}/interpolatedattimes.get.parameters[4].type" = "string"
"paths./streams/{webId}/interpolatedattimes.get.parameters[5].description" = "The order that the returned collection is sorted. The default is 'Ascending'."
"paths./streams/{webId}/interpolatedattimes.get.parameters[5].in" = "query"
"paths./streams/{webId}/interpolatedattimes.get.parameters[5].name" = "sortOrder"
"paths./streams/{webId}/interpolatedattimes.get.parameters[5].required" = false
"paths./streams/{webId}/interpolatedattimes.get.parameters[5].type" = "string"
"paths./streams/{webId}/interpolatedattimes.get.parameters[6].collectionFormat" = "multi"
"paths./streams/{webId}/interpolatedattimes.get.parameters[6].description" = "The timestamp at which to retrieve an interpolated value. Multiple timestamps may be specified with multiple instances of the parameter."
"paths./streams/{webId}/interpolatedattimes.get.parameters[6].in" = "query"
"paths./streams/{webId}/interpolatedattimes.get.parameters[6].items.type" = "string"
"paths./streams/{webId}/interpolatedattimes.get.parameters[6].name" = "time"
"paths./streams/{webId}/interpolatedattimes.get.parameters[6].required" = false
"paths./streams/{webId}/interpolatedattimes.get.parameters[6].type" = "array"
"paths./streams/{webId}/interpolatedattimes.get.parameters[7].description" = "The time zone in which the time string will be interpreted. This parameter will be ignored if a time zone is specified in the time string. If no time zone is specified in either places, the PI Web API server time zone will be used."
"paths./streams/{webId}/interpolatedattimes.get.parameters[7].in" = "query"
"paths./streams/{webId}/interpolatedattimes.get.parameters[7].name" = "timeZone"
"paths./streams/{webId}/interpolatedattimes.get.parameters[7].required" = false
"paths./streams/{webId}/interpolatedattimes.get.parameters[7].type" = "string"
"paths./streams/{webId}/interpolatedattimes.get.responses.200.description" = "The values that meet the specified conditions."
"paths./streams/{webId}/interpolatedattimes.get.responses.200.schema.$ref" = "#/definitions/TimedValues"
"paths./streams/{webId}/interpolatedattimes.get.responses.400.description" = "The request was malformed."
"paths./streams/{webId}/interpolatedattimes.get.responses.400.schema.$ref" = "#/definitions/Errors"
"paths./streams/{webId}/interpolatedattimes.get.responses.409.description" = "The data reference does not support this method, or the supplied filter expression is unsupported, or the desired units of measure are incompatible."
"paths./streams/{webId}/interpolatedattimes.get.responses.409.schema.$ref" = "#/definitions/Errors"
"paths./streams/{webId}/interpolatedattimes.get.summary" = "Retrieves interpolated values over the specified time range at the specified sampling interval."
"paths./streams/{webId}/interpolatedattimes.get.tags.length" = 1
"paths./streams/{webId}/interpolatedattimes.get.tags[0]" = "Stream"
"paths./streams/{webId}/plot.get.consumes.length" = 0
"paths./streams/{webId}/plot.get.deprecated" = false
"paths./streams/{webId}/plot.get.description" = "For each interval, the data available is examined and significant values are returned. Each interval can produce up to 5 values if they are unique, the first value in the interval, the last value, the highest value, the lowest value and at most one exceptional point (bad status or digital state)."
"paths./streams/{webId}/plot.get.operationId" = "Stream_GetPlot"
"paths./streams/{webId}/plot.get.parameters.length" = 7
"paths./streams/{webId}/plot.get.parameters[0].description" = "The ID of the stream."
"paths./streams/{webId}/plot.get.parameters[0].in" = "path"
"paths./streams/{webId}/plot.get.parameters[0].name" = "webId"
"paths./streams/{webId}/plot.get.parameters[0].required" = true
"paths./streams/{webId}/plot.get.parameters[0].type" = "string"
"paths./streams/{webId}/plot.get.parameters[1].description" = "The name or abbreviation of the desired units of measure for the returned value, as found in the UOM database associated with the attribute. If not specified for an attribute, the attribute's default unit of measure is used. If the underlying stream is a point, this value may not be specified, as points are not associated with a unit of measure."
"paths./streams/{webId}/plot.get.parameters[1].in" = "query"
"paths./streams/{webId}/plot.get.parameters[1].name" = "desiredUnits"
"paths./streams/{webId}/plot.get.parameters[1].required" = false
"paths./streams/{webId}/plot.get.parameters[1].type" = "string"
"paths./streams/{webId}/plot.get.parameters[2].description" = "An optional end time. The default is '*' for element attributes and points. For event frame attributes, the default is the event frame's end time, or '*' if that is not set. Note that if endTime is earlier than startTime, the resulting values will be in time-descending order."
"paths./streams/{webId}/plot.get.parameters[2].in" = "query"
"paths./streams/{webId}/plot.get.parameters[2].name" = "endTime"
"paths./streams/{webId}/plot.get.parameters[2].required" = false
"paths./streams/{webId}/plot.get.parameters[2].type" = "string"
"paths./streams/{webId}/plot.get.parameters[3].description" = "The number of intervals to plot over. Typically, this would be the number of horizontal pixels in the trend. The default is '24'. For each interval, the data available is examined and significant values are returned. Each interval can produce up to 5 values if they are unique, the first value in the interval, the last value, the highest value, the lowest value and at most one exceptional point (bad status or digital state)."
"paths./streams/{webId}/plot.get.parameters[3].in" = "query"
"paths./streams/{webId}/plot.get.parameters[3].name" = "intervals"
"paths./streams/{webId}/plot.get.parameters[3].required" = false
"paths./streams/{webId}/plot.get.parameters[3].type" = "integer"
"paths./streams/{webId}/plot.get.parameters[4].description" = "List of fields to be returned in the response, separated by semicolons (;). If this parameter is not specified, all available fields will be returned."
"paths./streams/{webId}/plot.get.parameters[4].in" = "query"
"paths./streams/{webId}/plot.get.parameters[4].name" = "selectedFields"
"paths./streams/{webId}/plot.get.parameters[4].required" = false
"paths./streams/{webId}/plot.get.parameters[4].type" = "string"
"paths./streams/{webId}/plot.get.parameters[5].description" = "An optional start time. The default is '*-1d' for element attributes and points. For event frame attributes, the default is the event frame's start time, or '*-1d' if that is not set."
"paths./streams/{webId}/plot.get.parameters[5].in" = "query"
"paths./streams/{webId}/plot.get.parameters[5].name" = "startTime"
"paths./streams/{webId}/plot.get.parameters[5].required" = false
"paths./streams/{webId}/plot.get.parameters[5].type" = "string"
"paths./streams/{webId}/plot.get.parameters[6].description" = "The time zone in which the time string will be interpreted. This parameter will be ignored if a time zone is specified in the time string. If no time zone is specified in either places, the PI Web API server time zone will be used."
"paths./streams/{webId}/plot.get.parameters[6].in" = "query"
"paths./streams/{webId}/plot.get.parameters[6].name" = "timeZone"
"paths./streams/{webId}/plot.get.parameters[6].required" = false
"paths./streams/{webId}/plot.get.parameters[6].type" = "string"
"paths./streams/{webId}/plot.get.responses.200.description" = "The values that meet the specified conditions"
"paths./streams/{webId}/plot.get.responses.200.schema.$ref" = "#/definitions/TimedValues"
"paths./streams/{webId}/plot.get.responses.400.description" = "The request was malformed."
"paths./streams/{webId}/plot.get.responses.400.schema.$ref" = "#/definitions/Errors"
"paths./streams/{webId}/plot.get.responses.409.description" = "The data reference does not support this method, or the desired units of measure are incompatible."
"paths./streams/{webId}/plot.get.responses.409.schema.$ref" = "#/definitions/Errors"
"paths./streams/{webId}/plot.get.summary" = "Retrieves values over the specified time range suitable for plotting over the number of intervals (typically represents pixels)."
"paths./streams/{webId}/plot.get.tags.length" = 1
"paths./streams/{webId}/plot.get.tags[0]" = "Stream"
"paths./streams/{webId}/recorded.get.consumes.length" = 0
"paths./streams/{webId}/recorded.get.deprecated" = false
"paths./streams/{webId}/recorded.get.description" = "Returned times are affected by the specified boundary type. If no values are found for the time range and conditions specified then the HTTP response will be success, with a body containing an empty array of Items. When specifying true for the includeFilteredValues parameter, consecutive filtered events are not returned. The first value that would be filtered out is returned with its time and the enumeration value \"Filtered\". The next value in the collection will be the next compressed value in the specified direction that passes the filter criteria - if any. When both boundaryType and a filterExpression are specified, the events returned for the boundary condition specified are passed through the filter. If the includeFilteredValues parameter is true, the boundary values will be reported at the proper timestamps with the enumeration value \"Filtered\" when the filter conditions are not met at the boundary time. If the includeFilteredValues parameter is false for this case, no event is returned for the boundary time."
"paths./streams/{webId}/recorded.get.operationId" = "Stream_GetRecorded"
"paths./streams/{webId}/recorded.get.parameters.length" = 10
"paths./streams/{webId}/recorded.get.parameters[0].description" = "The ID of the stream."
"paths./streams/{webId}/recorded.get.parameters[0].in" = "path"
"paths./streams/{webId}/recorded.get.parameters[0].name" = "webId"
"paths./streams/{webId}/recorded.get.parameters[0].required" = true
"paths./streams/{webId}/recorded.get.parameters[0].type" = "string"
"paths./streams/{webId}/recorded.get.parameters[1].description" = "An optional value that determines how the times and values of the returned end points are determined. The default is 'Inside'."
"paths./streams/{webId}/recorded.get.parameters[1].in" = "query"
"paths./streams/{webId}/recorded.get.parameters[1].name" = "boundaryType"
"paths./streams/{webId}/recorded.get.parameters[1].required" = false
"paths./streams/{webId}/recorded.get.parameters[1].type" = "string"
"paths./streams/{webId}/recorded.get.parameters[2].description" = "The name or abbreviation of the desired units of measure for the returned value, as found in the UOM database associated with the attribute. If not specified for an attribute, the attribute's default unit of measure is used. If the underlying stream is a point, this value may not be specified, as points are not associated with a unit of measure."
"paths./streams/{webId}/recorded.get.parameters[2].in" = "query"
"paths./streams/{webId}/recorded.get.parameters[2].name" = "desiredUnits"
"paths./streams/{webId}/recorded.get.parameters[2].required" = false
"paths./streams/{webId}/recorded.get.parameters[2].type" = "string"
"paths./streams/{webId}/recorded.get.parameters[3].description" = "An optional end time. The default is '*' for element attributes and points. For event frame attributes, the default is the event frame's end time, or '*' if that is not set. Note that if endTime is earlier than startTime, the resulting values will be in time-descending order."
"paths./streams/{webId}/recorded.get.parameters[3].in" = "query"
"paths./streams/{webId}/recorded.get.parameters[3].name" = "endTime"
"paths./streams/{webId}/recorded.get.parameters[3].required" = false
"paths./streams/{webId}/recorded.get.parameters[3].type" = "string"
"paths./streams/{webId}/recorded.get.parameters[4].description" = "An optional string containing a filter expression. Expression variables are relative to the data point. Use '.' to reference the containing attribute. The default is no filtering."
"paths./streams/{webId}/recorded.get.parameters[4].in" = "query"
"paths./streams/{webId}/recorded.get.parameters[4].name" = "filterExpression"
"paths./streams/{webId}/recorded.get.parameters[4].required" = false
"paths./streams/{webId}/recorded.get.parameters[4].type" = "string"
"paths./streams/{webId}/recorded.get.parameters[5].description" = "Specify 'true' to indicate that values which fail the filter criteria are present in the returned data at the times where they occurred with a value set to a 'Filtered' enumeration value with bad status. Repeated consecutive failures are omitted."
"paths./streams/{webId}/recorded.get.parameters[5].in" = "query"
"paths./streams/{webId}/recorded.get.parameters[5].name" = "includeFilteredValues"
"paths./streams/{webId}/recorded.get.parameters[5].required" = false
"paths./streams/{webId}/recorded.get.parameters[5].type" = "boolean"
"paths./streams/{webId}/recorded.get.parameters[6].description" = "The maximum number of values to be returned. The default is 1000."
"paths./streams/{webId}/recorded.get.parameters[6].in" = "query"
"paths./streams/{webId}/recorded.get.parameters[6].name" = "maxCount"
"paths./streams/{webId}/recorded.get.parameters[6].required" = false
"paths./streams/{webId}/recorded.get.parameters[6].type" = "integer"
"paths./streams/{webId}/recorded.get.parameters[7].description" = "List of fields to be returned in the response, separated by semicolons (;). If this parameter is not specified, all available fields will be returned."
"paths./streams/{webId}/recorded.get.parameters[7].in" = "query"
"paths./streams/{webId}/recorded.get.parameters[7].name" = "selectedFields"
"paths./streams/{webId}/recorded.get.parameters[7].required" = false
"paths./streams/{webId}/recorded.get.parameters[7].type" = "string"
"paths./streams/{webId}/recorded.get.parameters[8].description" = "An optional start time. The default is '*-1d' for element attributes and points. For event frame attributes, the default is the event frame's start time, or '*-1d' if that is not set."
"paths./streams/{webId}/recorded.get.parameters[8].in" = "query"
"paths./streams/{webId}/recorded.get.parameters[8].name" = "startTime"
"paths./streams/{webId}/recorded.get.parameters[8].required" = false
"paths./streams/{webId}/recorded.get.parameters[8].type" = "string"
"paths./streams/{webId}/recorded.get.parameters[9].description" = "The time zone in which the time string will be interpreted. This parameter will be ignored if a time zone is specified in the time string. If no time zone is specified in either places, the PI Web API server time zone will be used."
"paths./streams/{webId}/recorded.get.parameters[9].in" = "query"
"paths./streams/{webId}/recorded.get.parameters[9].name" = "timeZone"
"paths./streams/{webId}/recorded.get.parameters[9].required" = false
"paths./streams/{webId}/recorded.get.parameters[9].type" = "string"
"paths./streams/{webId}/recorded.get.responses.200.description" = "The values that meet the specified conditions."
"paths./streams/{webId}/recorded.get.responses.200.schema.$ref" = "#/definitions/TimedValues"
"paths./streams/{webId}/recorded.get.responses.400.description" = "The request was malformed."
"paths./streams/{webId}/recorded.get.responses.400.schema.$ref" = "#/definitions/Errors"
"paths./streams/{webId}/recorded.get.responses.409.description" = "The data reference does not support the method, or the supplied filter expression is unsupported, or the desired units of measure are incompatible."
"paths./streams/{webId}/recorded.get.responses.409.schema.$ref" = "#/definitions/Errors"
"paths./streams/{webId}/recorded.get.summary" = "Returns a list of compressed values for the requested time range from the source provider."
"paths./streams/{webId}/recorded.get.tags.length" = 1
"paths./streams/{webId}/recorded.get.tags[0]" = "Stream"
"paths./streams/{webId}/recorded.post.consumes.length" = 2
"paths./streams/{webId}/recorded.post.consumes[0]" = "application/json"
"paths./streams/{webId}/recorded.post.consumes[1]" = "text/json"
"paths./streams/{webId}/recorded.post.deprecated" = false
"paths./streams/{webId}/recorded.post.operationId" = "Stream_UpdateValues"
"paths./streams/{webId}/recorded.post.parameters.length" = 4
"paths./streams/{webId}/recorded.post.parameters[0].description" = "The ID of the stream."
"paths./streams/{webId}/recorded.post.parameters[0].in" = "path"
"paths./streams/{webId}/recorded.post.parameters[0].name" = "webId"
"paths./streams/{webId}/recorded.post.parameters[0].required" = true
"paths./streams/{webId}/recorded.post.parameters[0].type" = "string"
"paths./streams/{webId}/recorded.post.parameters[1].description" = "The values to add or update."
"paths./streams/{webId}/recorded.post.parameters[1].in" = "body"
"paths./streams/{webId}/recorded.post.parameters[1].name" = "values"
"paths./streams/{webId}/recorded.post.parameters[1].required" = true
"paths./streams/{webId}/recorded.post.parameters[1].schema.items.$ref" = "#/definitions/TimedValue"
"paths./streams/{webId}/recorded.post.parameters[1].schema.type" = "array"
"paths./streams/{webId}/recorded.post.parameters[2].description" = "The desired AFBufferOption. The default is 'BufferIfPossible'."
"paths./streams/{webId}/recorded.post.parameters[2].in" = "query"
"paths./streams/{webId}/recorded.post.parameters[2].name" = "bufferOption"
"paths./streams/{webId}/recorded.post.parameters[2].required" = false
"paths./streams/{webId}/recorded.post.parameters[2].type" = "string"
"paths./streams/{webId}/recorded.post.parameters[3].description" = "The desired AFUpdateOption. The default is 'Replace'."
"paths./streams/{webId}/recorded.post.parameters[3].in" = "query"
"paths./streams/{webId}/recorded.post.parameters[3].name" = "updateOption"
"paths./streams/{webId}/recorded.post.parameters[3].required" = false
"paths./streams/{webId}/recorded.post.parameters[3].type" = "string"
"paths./streams/{webId}/recorded.post.responses.204.description" = "All updates executed successfully."
"paths./streams/{webId}/recorded.post.responses.204.schema.$ref" = "#/definitions/Items[Substatus]"
"paths./streams/{webId}/recorded.post.responses.207.description" = "The operation was a partial success. The response body contains substatuses and errors in the same order as the supplied values."
"paths./streams/{webId}/recorded.post.responses.207.schema.$ref" = "#/definitions/Items[Substatus]"
"paths./streams/{webId}/recorded.post.responses.409.description" = "The data reference does not support this operation."
"paths./streams/{webId}/recorded.post.responses.409.schema.$ref" = "#/definitions/Errors"
"paths./streams/{webId}/recorded.post.summary" = "Updates multiple values for the specified stream."
"paths./streams/{webId}/recorded.post.tags.length" = 1
"paths./streams/{webId}/recorded.post.tags[0]" = "Stream"
"paths./streams/{webId}/recordedattime.get.consumes.length" = 0
"paths./streams/{webId}/recordedattime.get.deprecated" = false
"paths./streams/{webId}/recordedattime.get.operationId" = "Stream_GetRecordedAtTime"
"paths./streams/{webId}/recordedattime.get.parameters.length" = 6
"paths./streams/{webId}/recordedattime.get.parameters[0].description" = "The ID of the stream."
"paths./streams/{webId}/recordedattime.get.parameters[0].in" = "path"
"paths./streams/{webId}/recordedattime.get.parameters[0].name" = "webId"
"paths./streams/{webId}/recordedattime.get.parameters[0].required" = true
"paths./streams/{webId}/recordedattime.get.parameters[0].type" = "string"
"paths./streams/{webId}/recordedattime.get.parameters[1].description" = "The timestamp at which the value is desired."
"paths./streams/{webId}/recordedattime.get.parameters[1].in" = "query"
"paths./streams/{webId}/recordedattime.get.parameters[1].name" = "time"
"paths./streams/{webId}/recordedattime.get.parameters[1].required" = true
"paths./streams/{webId}/recordedattime.get.parameters[1].type" = "string"
"paths./streams/{webId}/recordedattime.get.parameters[2].description" = "The name or abbreviation of the desired units of measure for the returned value, as found in the UOM database associated with the attribute. If not specified for an attribute, the attribute's default unit of measure is used. If the underlying stream is a point, this value may not be specified, as points are not associated with a unit of measure."
"paths./streams/{webId}/recordedattime.get.parameters[2].in" = "query"
"paths./streams/{webId}/recordedattime.get.parameters[2].name" = "desiredUnits"
"paths./streams/{webId}/recordedattime.get.parameters[2].required" = false
"paths./streams/{webId}/recordedattime.get.parameters[2].type" = "string"
"paths./streams/{webId}/recordedattime.get.parameters[3].description" = "An optional value that determines the value to return when a value doesn't exist at the exact time specified. The default is 'Auto'."
"paths./streams/{webId}/recordedattime.get.parameters[3].in" = "query"
"paths./streams/{webId}/recordedattime.get.parameters[3].name" = "retrievalMode"
"paths./streams/{webId}/recordedattime.get.parameters[3].required" = false
"paths./streams/{webId}/recordedattime.get.parameters[3].type" = "string"
"paths./streams/{webId}/recordedattime.get.parameters[4].description" = "List of fields to be returned in the response, separated by semicolons (;). If this parameter is not specified, all available fields will be returned."
"paths./streams/{webId}/recordedattime.get.parameters[4].in" = "query"
"paths./streams/{webId}/recordedattime.get.parameters[4].name" = "selectedFields"
"paths./streams/{webId}/recordedattime.get.parameters[4].required" = false
"paths./streams/{webId}/recordedattime.get.parameters[4].type" = "string"
"paths./streams/{webId}/recordedattime.get.parameters[5].description" = "The time zone in which the time string will be interpreted. This parameter will be ignored if a time zone is specified in the time string. If no time zone is specified in either places, the PI Web API server time zone will be used."
"paths./streams/{webId}/recordedattime.get.parameters[5].in" = "query"
"paths./streams/{webId}/recordedattime.get.parameters[5].name" = "timeZone"
"paths./streams/{webId}/recordedattime.get.parameters[5].required" = false
"paths./streams/{webId}/recordedattime.get.parameters[5].type" = "string"
"paths./streams/{webId}/recordedattime.get.responses.200.description" = "The value that meet the specified conditions."
"paths./streams/{webId}/recordedattime.get.responses.200.schema.$ref" = "#/definitions/TimedValue"
"paths./streams/{webId}/recordedattime.get.responses.400.description" = "The request was malformed."
"paths./streams/{webId}/recordedattime.get.responses.400.schema.$ref" = "#/definitions/Errors"
"paths./streams/{webId}/recordedattime.get.responses.409.description" = "The data reference does not support the method, or the desired units of measure are incompatible."
"paths./streams/{webId}/recordedattime.get.responses.409.schema.$ref" = "#/definitions/Errors"
"paths./streams/{webId}/recordedattime.get.summary" = "Returns a single recorded value based on the passed time and retrieval mode from the stream."
"paths./streams/{webId}/recordedattime.get.tags.length" = 1
"paths./streams/{webId}/recordedattime.get.tags[0]" = "Stream"
"paths./streams/{webId}/recordedattimes.get.consumes.length" = 0
"paths./streams/{webId}/recordedattimes.get.deprecated" = false
"paths./streams/{webId}/recordedattimes.get.operationId" = "Stream_GetRecordedAtTimes"
"paths./streams/{webId}/recordedattimes.get.parameters.length" = 7
"paths./streams/{webId}/recordedattimes.get.parameters[0].description" = "The ID of the stream."
"paths./streams/{webId}/recordedattimes.get.parameters[0].in" = "path"
"paths./streams/{webId}/recordedattimes.get.parameters[0].name" = "webId"
"paths./streams/{webId}/recordedattimes.get.parameters[0].required" = true
"paths./streams/{webId}/recordedattimes.get.parameters[0].type" = "string"
"paths./streams/{webId}/recordedattimes.get.parameters[1].description" = "The name or abbreviation of the desired units of measure for the returned value, as found in the UOM database associated with the attribute. If not specified for an attribute, the attribute's default unit of measure is used. If the underlying stream is a point, this value may not be specified, as points are not associated with a unit of measure."
"paths./streams/{webId}/recordedattimes.get.parameters[1].in" = "query"
"paths./streams/{webId}/recordedattimes.get.parameters[1].name" = "desiredUnits"
"paths./streams/{webId}/recordedattimes.get.parameters[1].required" = false
"paths./streams/{webId}/recordedattimes.get.parameters[1].type" = "string"
"paths./streams/{webId}/recordedattimes.get.parameters[2].description" = "An optional value that determines the value to return when a value doesn't exist at the exact time specified. The default is 'Auto'."
"paths./streams/{webId}/recordedattimes.get.parameters[2].in" = "query"
"paths./streams/{webId}/recordedattimes.get.parameters[2].name" = "retrievalMode"
"paths./streams/{webId}/recordedattimes.get.parameters[2].required" = false
"paths./streams/{webId}/recordedattimes.get.parameters[2].type" = "string"
"paths./streams/{webId}/recordedattimes.get.parameters[3].description" = "List of fields to be returned in the response, separated by semicolons (;). If this parameter is not specified, all available fields will be returned."
"paths./streams/{webId}/recordedattimes.get.parameters[3].in" = "query"
"paths./streams/{webId}/recordedattimes.get.parameters[3].name" = "selectedFields"
"paths./streams/{webId}/recordedattimes.get.parameters[3].required" = false
"paths./streams/{webId}/recordedattimes.get.parameters[3].type" = "string"
"paths./streams/{webId}/recordedattimes.get.parameters[4].description" = "The order that the returned collection is sorted. The default is 'Ascending'."
"paths./streams/{webId}/recordedattimes.get.parameters[4].in" = "query"
"paths./streams/{webId}/recordedattimes.get.parameters[4].name" = "sortOrder"
"paths./streams/{webId}/recordedattimes.get.parameters[4].required" = false
"paths./streams/{webId}/recordedattimes.get.parameters[4].type" = "string"
"paths./streams/{webId}/recordedattimes.get.parameters[5].collectionFormat" = "multi"
"paths./streams/{webId}/recordedattimes.get.parameters[5].description" = "The timestamp at which to retrieve a recorded value. Multiple timestamps may be specified with multiple instances of the parameter."
"paths./streams/{webId}/recordedattimes.get.parameters[5].in" = "query"
"paths./streams/{webId}/recordedattimes.get.parameters[5].items.type" = "string"
"paths./streams/{webId}/recordedattimes.get.parameters[5].name" = "time"
"paths./streams/{webId}/recordedattimes.get.parameters[5].required" = false
"paths./streams/{webId}/recordedattimes.get.parameters[5].type" = "array"
"paths./streams/{webId}/recordedattimes.get.parameters[6].description" = "The time zone in which the time string will be interpreted. This parameter will be ignored if a time zone is specified in the time string. If no time zone is specified in either places, the PI Web API server time zone will be used."
"paths./streams/{webId}/recordedattimes.get.parameters[6].in" = "query"
"paths./streams/{webId}/recordedattimes.get.parameters[6].name" = "timeZone"
"paths./streams/{webId}/recordedattimes.get.parameters[6].required" = false
"paths./streams/{webId}/recordedattimes.get.parameters[6].type" = "string"
"paths./streams/{webId}/recordedattimes.get.responses.200.description" = "The values that meet the specified conditions."
"paths./streams/{webId}/recordedattimes.get.responses.200.schema.$ref" = "#/definitions/TimedValues"
"paths./streams/{webId}/recordedattimes.get.responses.400.description" = "The request was malformed."
"paths./streams/{webId}/recordedattimes.get.responses.400.schema.$ref" = "#/definitions/Errors"
"paths./streams/{webId}/recordedattimes.get.responses.409.description" = "The data reference does not support this method, or the desired units of measure are incompatible."
"paths./streams/{webId}/recordedattimes.get.responses.409.schema.$ref" = "#/definitions/Errors"
"paths./streams/{webId}/recordedattimes.get.summary" = "Retrieves recorded values at the specified times."
"paths./streams/{webId}/recordedattimes.get.tags.length" = 1
"paths./streams/{webId}/recordedattimes.get.tags[0]" = "Stream"
"paths./streams/{webId}/summary.get.consumes.length" = 0
"paths./streams/{webId}/summary.get.deprecated" = false
"paths./streams/{webId}/summary.get.description" = "Count is the only summary type supported on non-numeric streams. Requesting a summary for any other type will generate an error. Time-weighted totals are computed by integrating the rate tag values over the requested time range. If some of the data are bad in the time range, the calculated total is divided by the fraction of the time period for which there are good values. This approach is equivalent to assuming that during the period of bad data, the tag takes on the average values for the entire calculation time range. The PercentGood summary may be used to determine if the calculation results are suitable for the application's purposes. For time-weighted totals, if the time unit rate of the stream cannot be determined, then the value will be totaled assuming a unit of \"per day\" and no unit of measure will be assigned to the value. If the measured time component of the tag is not based on a day, the user of the data must convert the totalized value to the correct units."
"paths./streams/{webId}/summary.get.operationId" = "Stream_GetSummary"
"paths./streams/{webId}/summary.get.parameters.length" = 12
"paths./streams/{webId}/summary.get.parameters[0].description" = "The ID of the stream."
"paths./streams/{webId}/summary.get.parameters[0].in" = "path"
"paths./streams/{webId}/summary.get.parameters[0].name" = "webId"
"paths./streams/{webId}/summary.get.parameters[0].required" = true
"paths./streams/{webId}/summary.get.parameters[0].type" = "string"
"paths./streams/{webId}/summary.get.parameters[10].description" = "Specifies how to calculate the timestamp for each interval. The default is 'Auto'."
"paths./streams/{webId}/summary.get.parameters[10].in" = "query"
"paths./streams/{webId}/summary.get.parameters[10].name" = "timeType"
"paths./streams/{webId}/summary.get.parameters[10].required" = false
"paths./streams/{webId}/summary.get.parameters[10].type" = "string"
"paths./streams/{webId}/summary.get.parameters[11].description" = "The time zone in which the time string will be interpreted. This parameter will be ignored if a time zone is specified in the time string. If no time zone is specified in either places, the PI Web API server time zone will be used."
"paths./streams/{webId}/summary.get.parameters[11].in" = "query"
"paths./streams/{webId}/summary.get.parameters[11].name" = "timeZone"
"paths./streams/{webId}/summary.get.parameters[11].required" = false
"paths./streams/{webId}/summary.get.parameters[11].type" = "string"
"paths./streams/{webId}/summary.get.parameters[1].description" = "Specifies the method of evaluating the data over the time range. The default is 'TimeWeighted'."
"paths./streams/{webId}/summary.get.parameters[1].in" = "query"
"paths./streams/{webId}/summary.get.parameters[1].name" = "calculationBasis"
"paths./streams/{webId}/summary.get.parameters[1].required" = false
"paths./streams/{webId}/summary.get.parameters[1].type" = "string"
"paths./streams/{webId}/summary.get.parameters[2].description" = "An optional end time. The default is '*' for element attributes and points. For event frame attributes, the default is the event frame's end time, or '*' if that is not set. Note that if endTime is earlier than startTime, the resulting values will be in time-descending order."
"paths./streams/{webId}/summary.get.parameters[2].in" = "query"
"paths./streams/{webId}/summary.get.parameters[2].name" = "endTime"
"paths./streams/{webId}/summary.get.parameters[2].required" = false
"paths./streams/{webId}/summary.get.parameters[2].type" = "string"
"paths./streams/{webId}/summary.get.parameters[3].description" = "A string containing a filter expression. Expression variables are relative to the attribute. Use '.' to reference the containing attribute."
"paths./streams/{webId}/summary.get.parameters[3].in" = "query"
"paths./streams/{webId}/summary.get.parameters[3].name" = "filterExpression"
"paths./streams/{webId}/summary.get.parameters[3].required" = false
"paths./streams/{webId}/summary.get.parameters[3].type" = "string"
"paths./streams/{webId}/summary.get.parameters[4].description" = "When the sampleType is Interval, sampleInterval specifies how often the filter expression is evaluated when computing the summary for an interval."
"paths./streams/{webId}/summary.get.parameters[4].in" = "query"
"paths./streams/{webId}/summary.get.parameters[4].name" = "sampleInterval"
"paths./streams/{webId}/summary.get.parameters[4].required" = false
"paths./streams/{webId}/summary.get.parameters[4].type" = "string"
"paths./streams/{webId}/summary.get.parameters[5].description" = "Defines the evaluation of an expression over a time range. The default is 'ExpressionRecordedValues'."
"paths./streams/{webId}/summary.get.parameters[5].in" = "query"
"paths./streams/{webId}/summary.get.parameters[5].name" = "sampleType"
"paths./streams/{webId}/summary.get.parameters[5].required" = false
"paths./streams/{webId}/summary.get.parameters[5].type" = "string"
"paths./streams/{webId}/summary.get.parameters[6].description" = "List of fields to be returned in the response, separated by semicolons (;). If this parameter is not specified, all available fields will be returned."
"paths./streams/{webId}/summary.get.parameters[6].in" = "query"
"paths./streams/{webId}/summary.get.parameters[6].name" = "selectedFields"
"paths./streams/{webId}/summary.get.parameters[6].required" = false
"paths./streams/{webId}/summary.get.parameters[6].type" = "string"
"paths./streams/{webId}/summary.get.parameters[7].description" = "An optional start time. The default is '*-1d' for element attributes and points. For event frame attributes, the default is the event frame's start time, or '*-1d' if that is not set."
"paths./streams/{webId}/summary.get.parameters[7].in" = "query"
"paths./streams/{webId}/summary.get.parameters[7].name" = "startTime"
"paths./streams/{webId}/summary.get.parameters[7].required" = false
"paths./streams/{webId}/summary.get.parameters[7].type" = "string"
"paths./streams/{webId}/summary.get.parameters[8].description" = "The duration of each summary interval. If specified in hours, minutes, seconds, or milliseconds, the summary durations will be evenly spaced UTC time intervals. Longer interval types are interpreted using wall clock rules and are time zone dependent."
"paths./streams/{webId}/summary.get.parameters[8].in" = "query"
"paths./streams/{webId}/summary.get.parameters[8].name" = "summaryDuration"
"paths./streams/{webId}/summary.get.parameters[8].required" = false
"paths./streams/{webId}/summary.get.parameters[8].type" = "string"
"paths./streams/{webId}/summary.get.parameters[9].collectionFormat" = "multi"
"paths./streams/{webId}/summary.get.parameters[9].description" = "Specifies the kinds of summaries to produce over the range. The default is 'Total'. Multiple summary types may be specified by using multiple instances of summaryType."
"paths./streams/{webId}/summary.get.parameters[9].in" = "query"
"paths./streams/{webId}/summary.get.parameters[9].items.type" = "string"
"paths./streams/{webId}/summary.get.parameters[9].name" = "summaryType"
"paths./streams/{webId}/summary.get.parameters[9].required" = false
"paths./streams/{webId}/summary.get.parameters[9].type" = "array"
"paths./streams/{webId}/summary.get.responses.200.description" = "The summaries that meet the specified conditions."
"paths./streams/{webId}/summary.get.responses.200.schema.$ref" = "#/definitions/Items[SummaryValue]"
"paths./streams/{webId}/summary.get.responses.409.description" = "The data reference does not support this method."
"paths./streams/{webId}/summary.get.responses.409.schema.$ref" = "#/definitions/Errors"
"paths./streams/{webId}/summary.get.summary" = "Returns a summary over the specified time range for the stream."
"paths./streams/{webId}/summary.get.tags.length" = 1
"paths./streams/{webId}/summary.get.tags[0]" = "Stream"
"paths./streams/{webId}/value.get.consumes.length" = 0
"paths./streams/{webId}/value.get.deprecated" = false
"paths./streams/{webId}/value.get.operationId" = "Stream_GetValue"
"paths./streams/{webId}/value.get.parameters.length" = 5
"paths./streams/{webId}/value.get.parameters[0].description" = "The ID of the stream."
"paths./streams/{webId}/value.get.parameters[0].in" = "path"
"paths./streams/{webId}/value.get.parameters[0].name" = "webId"
"paths./streams/{webId}/value.get.parameters[0].required" = true
"paths./streams/{webId}/value.get.parameters[0].type" = "string"
"paths./streams/{webId}/value.get.parameters[1].description" = "The name or abbreviation of the desired units of measure for the returned value, as found in the UOM database associated with the attribute. If not specified for an attribute, the attribute's default unit of measure is used. If the underlying stream is a point, this value may not be specified, as points are not associated with a unit of measure."
"paths./streams/{webId}/value.get.parameters[1].in" = "query"
"paths./streams/{webId}/value.get.parameters[1].name" = "desiredUnits"
"paths./streams/{webId}/value.get.parameters[1].required" = false
"paths./streams/{webId}/value.get.parameters[1].type" = "string"
"paths./streams/{webId}/value.get.parameters[2].description" = "List of fields to be returned in the response, separated by semicolons (;). If this parameter is not specified, all available fields will be returned."
"paths./streams/{webId}/value.get.parameters[2].in" = "query"
"paths./streams/{webId}/value.get.parameters[2].name" = "selectedFields"
"paths./streams/{webId}/value.get.parameters[2].required" = false
"paths./streams/{webId}/value.get.parameters[2].type" = "string"
"paths./streams/{webId}/value.get.parameters[3].description" = "An optional time. The default time context is determined from the owning object - for example, the time range of the event frame or transfer which holds this attribute. Otherwise, the implementation of the Data Reference determines the meaning of no context. For Points or simply configured PI Point Data References, this means the snapshot value of the PI Point on the Data Server."
"paths./streams/{webId}/value.get.parameters[3].in" = "query"
"paths./streams/{webId}/value.get.parameters[3].name" = "time"
"paths./streams/{webId}/value.get.parameters[3].required" = false
"paths./streams/{webId}/value.get.parameters[3].type" = "string"
"paths./streams/{webId}/value.get.parameters[4].description" = "The time zone in which the time string will be interpreted. This parameter will be ignored if a time zone is specified in the time string. If no time zone is specified in either places, the PI Web API server time zone will be used."
"paths./streams/{webId}/value.get.parameters[4].in" = "query"
"paths./streams/{webId}/value.get.parameters[4].name" = "timeZone"
"paths./streams/{webId}/value.get.parameters[4].required" = false
"paths./streams/{webId}/value.get.parameters[4].type" = "string"
"paths./streams/{webId}/value.get.responses.200.description" = "The value at the specified time value."
"paths./streams/{webId}/value.get.responses.200.schema.$ref" = "#/definitions/TimedValue"
"paths./streams/{webId}/value.get.summary" = "Returns the value of the stream at the specified time. By default, this is usually the current value."
"paths./streams/{webId}/value.get.tags.length" = 1
"paths./streams/{webId}/value.get.tags[0]" = "Stream"
"paths./streams/{webId}/value.post.consumes.length" = 2
"paths./streams/{webId}/value.post.consumes[0]" = "application/json"
"paths./streams/{webId}/value.post.consumes[1]" = "text/json"
"paths./streams/{webId}/value.post.deprecated" = false
"paths./streams/{webId}/value.post.operationId" = "Stream_UpdateValue"
"paths./streams/{webId}/value.post.parameters.length" = 4
"paths./streams/{webId}/value.post.parameters[0].description" = "The ID of the stream."
"paths./streams/{webId}/value.post.parameters[0].in" = "path"
"paths./streams/{webId}/value.post.parameters[0].name" = "webId"
"paths./streams/{webId}/value.post.parameters[0].required" = true
"paths./streams/{webId}/value.post.parameters[0].type" = "string"
"paths./streams/{webId}/value.post.parameters[1].description" = "The value to add or update."
"paths./streams/{webId}/value.post.parameters[1].in" = "body"
"paths./streams/{webId}/value.post.parameters[1].name" = "value"
"paths./streams/{webId}/value.post.parameters[1].required" = true
"paths./streams/{webId}/value.post.parameters[1].schema.$ref" = "#/definitions/TimedValue"
"paths./streams/{webId}/value.post.parameters[2].description" = "The desired AFBufferOption. The default is 'BufferIfPossible'."
"paths./streams/{webId}/value.post.parameters[2].in" = "query"
"paths./streams/{webId}/value.post.parameters[2].name" = "bufferOption"
"paths./streams/{webId}/value.post.parameters[2].required" = false
"paths./streams/{webId}/value.post.parameters[2].type" = "string"
"paths./streams/{webId}/value.post.parameters[3].description" = "The desired AFUpdateOption. The default is 'Replace'. This parameter is ignored if the attribute is a configuration item."
"paths./streams/{webId}/value.post.parameters[3].in" = "query"
"paths./streams/{webId}/value.post.parameters[3].name" = "updateOption"
"paths./streams/{webId}/value.post.parameters[3].required" = false
"paths./streams/{webId}/value.post.parameters[3].type" = "string"
"paths./streams/{webId}/value.post.responses.202.description" = "The value was accepted for a potential buffered update. The response's Location header is a link that can be used to examine the result."
"paths./streams/{webId}/value.post.responses.204.description" = "The update operation was successfully applied. The response's Location header is a link that can be used to examine the result."
"paths./streams/{webId}/value.post.responses.400.description" = "The request was malformed."
"paths./streams/{webId}/value.post.responses.400.schema.$ref" = "#/definitions/Errors"
"paths./streams/{webId}/value.post.responses.409.description" = "The attribute or data reference does not support this operation, or the specified units are incompatible."
"paths./streams/{webId}/value.post.responses.409.schema.$ref" = "#/definitions/Errors"
"paths./streams/{webId}/value.post.summary" = "Updates a value for the specified stream."
"paths./streams/{webId}/value.post.tags.length" = 1
"paths./streams/{webId}/value.post.tags[0]" = "Stream"
"paths./streamsets/channel.get.consumes.length" = 0
"paths./streamsets/channel.get.deprecated" = false
"paths./streamsets/channel.get.operationId" = "StreamSet_GetChannelAdHoc"
"paths./streamsets/channel.get.parameters.length" = 2
"paths./streamsets/channel.get.parameters[0].collectionFormat" = "multi"
"paths./streamsets/channel.get.parameters[0].description" = "The ID of a stream.  Multiple streams may be specified with multiple instances of the parameter."
"paths./streamsets/channel.get.parameters[0].in" = "query"
"paths./streamsets/channel.get.parameters[0].items.type" = "string"
"paths./streamsets/channel.get.parameters[0].name" = "webId"
"paths./streamsets/channel.get.parameters[0].required" = true
"paths./streamsets/channel.get.parameters[0].type" = "array"
"paths./streamsets/channel.get.parameters[1].description" = "Specified if the channel should send a message with the current values of all the streams after the connection is opened. The default is 'false'."
"paths./streamsets/channel.get.parameters[1].in" = "query"
"paths./streamsets/channel.get.parameters[1].name" = "includeInitialValues"
"paths./streamsets/channel.get.parameters[1].required" = false
"paths./streamsets/channel.get.parameters[1].type" = "boolean"
"paths./streamsets/channel.get.responses.101.description" = "Switches to the Web Socket protocol."
"paths./streamsets/channel.get.responses.101.schema.$ref" = "#/definitions/Items[StreamValue]"
"paths./streamsets/channel.get.summary" = "Opens a channel that will send messages about any value changes for the specified streams."
"paths./streamsets/channel.get.tags.length" = 1
"paths./streamsets/channel.get.tags[0]" = "StreamSet"
"paths./streamsets/end.get.consumes.length" = 0
"paths./streamsets/end.get.deprecated" = false
"paths./streamsets/end.get.operationId" = "StreamSet_GetEndAdHoc"
"paths./streamsets/end.get.parameters.length" = 2
"paths./streamsets/end.get.parameters[0].collectionFormat" = "multi"
"paths./streamsets/end.get.parameters[0].description" = "The ID of a stream.  Multiple streams may be specified with multiple instances of the parameter."
"paths./streamsets/end.get.parameters[0].in" = "query"
"paths./streamsets/end.get.parameters[0].items.type" = "string"
"paths./streamsets/end.get.parameters[0].name" = "webId"
"paths./streamsets/end.get.parameters[0].required" = true
"paths./streamsets/end.get.parameters[0].type" = "array"
"paths./streamsets/end.get.parameters[1].description" = "List of fields to be returned in the response, separated by semicolons (;). If this parameter is not specified, all available fields will be returned."
"paths./streamsets/end.get.parameters[1].in" = "query"
"paths./streamsets/end.get.parameters[1].name" = "selectedFields"
"paths./streamsets/end.get.parameters[1].required" = false
"paths./streamsets/end.get.parameters[1].type" = "string"
"paths./streamsets/end.get.responses.200.description" = "End of stream values of the streams that meet the specified conditions."
"paths./streamsets/end.get.responses.200.schema.$ref" = "#/definitions/Items[StreamValues]"
"paths./streamsets/end.get.summary" = "Returns End Of Stream values for attributes of the specified streams"
"paths./streamsets/end.get.tags.length" = 1
"paths./streamsets/end.get.tags[0]" = "StreamSet"
"paths./streamsets/interpolated.get.consumes.length" = 0
"paths./streamsets/interpolated.get.deprecated" = false
"paths./streamsets/interpolated.get.operationId" = "StreamSet_GetInterpolatedAdHoc"
"paths./streamsets/interpolated.get.parameters.length" = 8
"paths./streamsets/interpolated.get.parameters[0].collectionFormat" = "multi"
"paths./streamsets/interpolated.get.parameters[0].description" = "The ID of a stream. Multiple streams may be specified with multiple instances of the parameter."
"paths./streamsets/interpolated.get.parameters[0].in" = "query"
"paths./streamsets/interpolated.get.parameters[0].items.type" = "string"
"paths./streamsets/interpolated.get.parameters[0].name" = "webId"
"paths./streamsets/interpolated.get.parameters[0].required" = true
"paths./streamsets/interpolated.get.parameters[0].type" = "array"
"paths./streamsets/interpolated.get.parameters[1].description" = "An optional end time. The default is '*'. Note that if endTime is earlier than startTime, the resulting values will be in time-descending order."
"paths./streamsets/interpolated.get.parameters[1].in" = "query"
"paths./streamsets/interpolated.get.parameters[1].name" = "endTime"
"paths./streamsets/interpolated.get.parameters[1].required" = false
"paths./streamsets/interpolated.get.parameters[1].type" = "string"
"paths./streamsets/interpolated.get.parameters[2].description" = "An optional string containing a filter expression. Expression variables are relative to the data point. Use '.' to reference the containing attribute. If the attribute does not support filtering, the filter will be ignored. The default is no filtering."
"paths./streamsets/interpolated.get.parameters[2].in" = "query"
"paths./streamsets/interpolated.get.parameters[2].name" = "filterExpression"
"paths./streamsets/interpolated.get.parameters[2].required" = false
"paths./streamsets/interpolated.get.parameters[2].type" = "string"
"paths./streamsets/interpolated.get.parameters[3].description" = "Specify 'true' to indicate that values which fail the filter criteria are present in the returned data at the times where they occurred with a value set to a 'Filtered' enumeration value with bad status. Repeated consecutive failures are omitted."
"paths./streamsets/interpolated.get.parameters[3].in" = "query"
"paths./streamsets/interpolated.get.parameters[3].name" = "includeFilteredValues"
"paths./streamsets/interpolated.get.parameters[3].required" = false
"paths./streamsets/interpolated.get.parameters[3].type" = "boolean"
"paths./streamsets/interpolated.get.parameters[4].description" = "The sampling interval, in AFTimeSpan format."
"paths./streamsets/interpolated.get.parameters[4].in" = "query"
"paths./streamsets/interpolated.get.parameters[4].name" = "interval"
"paths./streamsets/interpolated.get.parameters[4].required" = false
"paths./streamsets/interpolated.get.parameters[4].type" = "string"
"paths./streamsets/interpolated.get.parameters[5].description" = "List of fields to be returned in the response, separated by semicolons (;). If this parameter is not specified, all available fields will be returned."
"paths./streamsets/interpolated.get.parameters[5].in" = "query"
"paths./streamsets/interpolated.get.parameters[5].name" = "selectedFields"
"paths./streamsets/interpolated.get.parameters[5].required" = false
"paths./streamsets/interpolated.get.parameters[5].type" = "string"
"paths./streamsets/interpolated.get.parameters[6].description" = "An optional start time. The default is '*-1d'."
"paths./streamsets/interpolated.get.parameters[6].in" = "query"
"paths./streamsets/interpolated.get.parameters[6].name" = "startTime"
"paths./streamsets/interpolated.get.parameters[6].required" = false
"paths./streamsets/interpolated.get.parameters[6].type" = "string"
"paths./streamsets/interpolated.get.parameters[7].description" = "The time zone in which the time string will be interpreted. This parameter will be ignored if a time zone is specified in the time string. If no time zone is specified in either places, the PI Web API server time zone will be used."
"paths./streamsets/interpolated.get.parameters[7].in" = "query"
"paths./streamsets/interpolated.get.parameters[7].name" = "timeZone"
"paths./streamsets/interpolated.get.parameters[7].required" = false
"paths./streamsets/interpolated.get.parameters[7].type" = "string"
"paths./streamsets/interpolated.get.responses.200.description" = "Interpolated values of the streams that meet the specified conditions."
"paths./streamsets/interpolated.get.responses.200.schema.$ref" = "#/definitions/Items[StreamValues]"
"paths./streamsets/interpolated.get.summary" = "Returns interpolated values of the specified streams over the specified time range at the specified sampling interval."
"paths./streamsets/interpolated.get.tags.length" = 1
"paths./streamsets/interpolated.get.tags[0]" = "StreamSet"
"paths./streamsets/interpolatedattimes.get.consumes.length" = 0
"paths./streamsets/interpolatedattimes.get.deprecated" = false
"paths./streamsets/interpolatedattimes.get.operationId" = "StreamSet_GetInterpolatedAtTimesAdHoc"
"paths./streamsets/interpolatedattimes.get.parameters.length" = 7
"paths./streamsets/interpolatedattimes.get.parameters[0].collectionFormat" = "multi"
"paths./streamsets/interpolatedattimes.get.parameters[0].description" = "The timestamp at which to retrieve a interpolated value. Multiple timestamps may be specified with multiple instances of the parameter."
"paths./streamsets/interpolatedattimes.get.parameters[0].in" = "query"
"paths./streamsets/interpolatedattimes.get.parameters[0].items.type" = "string"
"paths./streamsets/interpolatedattimes.get.parameters[0].name" = "time"
"paths./streamsets/interpolatedattimes.get.parameters[0].required" = true
"paths./streamsets/interpolatedattimes.get.parameters[0].type" = "array"
"paths./streamsets/interpolatedattimes.get.parameters[1].collectionFormat" = "multi"
"paths./streamsets/interpolatedattimes.get.parameters[1].description" = "The ID of a stream. Multiple streams may be specified with multiple instances of the parameter."
"paths./streamsets/interpolatedattimes.get.parameters[1].in" = "query"
"paths./streamsets/interpolatedattimes.get.parameters[1].items.type" = "string"
"paths./streamsets/interpolatedattimes.get.parameters[1].name" = "webId"
"paths./streamsets/interpolatedattimes.get.parameters[1].required" = true
"paths./streamsets/interpolatedattimes.get.parameters[1].type" = "array"
"paths./streamsets/interpolatedattimes.get.parameters[2].description" = "An optional string containing a filter expression. Expression variables are relative to the data point. Use '.' to reference the containing attribute. If the attribute does not support filtering, the filter will be ignored. The default is no filtering."
"paths./streamsets/interpolatedattimes.get.parameters[2].in" = "query"
"paths./streamsets/interpolatedattimes.get.parameters[2].name" = "filterExpression"
"paths./streamsets/interpolatedattimes.get.parameters[2].required" = false
"paths./streamsets/interpolatedattimes.get.parameters[2].type" = "string"
"paths./streamsets/interpolatedattimes.get.parameters[3].description" = "Specify 'true' to indicate that values which fail the filter criteria are present in the returned data at the times where they occurred with a value set to a 'Filtered' enumeration value with bad status. Repeated consecutive failures are omitted."
"paths./streamsets/interpolatedattimes.get.parameters[3].in" = "query"
"paths./streamsets/interpolatedattimes.get.parameters[3].name" = "includeFilteredValues"
"paths./streamsets/interpolatedattimes.get.parameters[3].required" = false
"paths./streamsets/interpolatedattimes.get.parameters[3].type" = "boolean"
"paths./streamsets/interpolatedattimes.get.parameters[4].description" = "List of fields to be returned in the response, separated by semicolons (;). If this parameter is not specified, all available fields will be returned."
"paths./streamsets/interpolatedattimes.get.parameters[4].in" = "query"
"paths./streamsets/interpolatedattimes.get.parameters[4].name" = "selectedFields"
"paths./streamsets/interpolatedattimes.get.parameters[4].required" = false
"paths./streamsets/interpolatedattimes.get.parameters[4].type" = "string"
"paths./streamsets/interpolatedattimes.get.parameters[5].description" = "The order that the returned collection is sorted. The default is 'Ascending'."
"paths./streamsets/interpolatedattimes.get.parameters[5].in" = "query"
"paths./streamsets/interpolatedattimes.get.parameters[5].name" = "sortOrder"
"paths./streamsets/interpolatedattimes.get.parameters[5].required" = false
"paths./streamsets/interpolatedattimes.get.parameters[5].type" = "string"
"paths./streamsets/interpolatedattimes.get.parameters[6].description" = "The time zone in which the time string will be interpreted. This parameter will be ignored if a time zone is specified in the time string. If no time zone is specified in either places, the PI Web API server time zone will be used."
"paths./streamsets/interpolatedattimes.get.parameters[6].in" = "query"
"paths./streamsets/interpolatedattimes.get.parameters[6].name" = "timeZone"
"paths./streamsets/interpolatedattimes.get.parameters[6].required" = false
"paths./streamsets/interpolatedattimes.get.parameters[6].type" = "string"
"paths./streamsets/interpolatedattimes.get.responses.200.description" = "Interpolated values of the streams that meet the specified conditions."
"paths./streamsets/interpolatedattimes.get.responses.200.schema.$ref" = "#/definitions/Items[StreamValues]"
"paths./streamsets/interpolatedattimes.get.responses.400.description" = "The request was malformed."
"paths./streamsets/interpolatedattimes.get.responses.400.schema.$ref" = "#/definitions/Errors"
"paths./streamsets/interpolatedattimes.get.responses.502.description" = "The request was cancelled."
"paths./streamsets/interpolatedattimes.get.responses.502.schema.$ref" = "#/definitions/Errors"
"paths./streamsets/interpolatedattimes.get.summary" = "Returns interpolated values of the specified streams at the specified times."
"paths./streamsets/interpolatedattimes.get.tags.length" = 1
"paths./streamsets/interpolatedattimes.get.tags[0]" = "StreamSet"
"paths./streamsets/plot.get.consumes.length" = 0
"paths./streamsets/plot.get.deprecated" = false
"paths./streamsets/plot.get.description" = "For each interval, the data available is examined and significant values are returned. Each interval can produce up to 5 values if they are unique, the first value in the interval, the last value, the highest value, the lowest value and at most one exceptional point (bad status or digital state)."
"paths./streamsets/plot.get.operationId" = "StreamSet_GetPlotAdHoc"
"paths./streamsets/plot.get.parameters.length" = 6
"paths./streamsets/plot.get.parameters[0].collectionFormat" = "multi"
"paths./streamsets/plot.get.parameters[0].description" = "The ID of a stream.  Multiple streams may be specified with multiple instances of the parameter."
"paths./streamsets/plot.get.parameters[0].in" = "query"
"paths./streamsets/plot.get.parameters[0].items.type" = "string"
"paths./streamsets/plot.get.parameters[0].name" = "webId"
"paths./streamsets/plot.get.parameters[0].required" = true
"paths./streamsets/plot.get.parameters[0].type" = "array"
"paths./streamsets/plot.get.parameters[1].description" = "An optional end time. The default is '*'. Note that if endTime is earlier than startTime, the resulting values will be in time-descending order."
"paths./streamsets/plot.get.parameters[1].in" = "query"
"paths./streamsets/plot.get.parameters[1].name" = "endTime"
"paths./streamsets/plot.get.parameters[1].required" = false
"paths./streamsets/plot.get.parameters[1].type" = "string"
"paths./streamsets/plot.get.parameters[2].description" = "The number of intervals to plot over. Typically, this would be the number of horizontal pixels in the trend. The default is '24'. For each interval, the data available is examined and significant values are returned. Each interval can produce up to 5 values if they are unique, the first value in the interval, the last value, the highest value, the lowest value and at most one exceptional point (bad status or digital state)."
"paths./streamsets/plot.get.parameters[2].in" = "query"
"paths./streamsets/plot.get.parameters[2].name" = "intervals"
"paths./streamsets/plot.get.parameters[2].required" = false
"paths./streamsets/plot.get.parameters[2].type" = "integer"
"paths./streamsets/plot.get.parameters[3].description" = "List of fields to be returned in the response, separated by semicolons (;). If this parameter is not specified, all available fields will be returned."
"paths./streamsets/plot.get.parameters[3].in" = "query"
"paths./streamsets/plot.get.parameters[3].name" = "selectedFields"
"paths./streamsets/plot.get.parameters[3].required" = false
"paths./streamsets/plot.get.parameters[3].type" = "string"
"paths./streamsets/plot.get.parameters[4].description" = "An optional start time. The default is '*-1d'."
"paths./streamsets/plot.get.parameters[4].in" = "query"
"paths./streamsets/plot.get.parameters[4].name" = "startTime"
"paths./streamsets/plot.get.parameters[4].required" = false
"paths./streamsets/plot.get.parameters[4].type" = "string"
"paths./streamsets/plot.get.parameters[5].description" = "The time zone in which the time string will be interpreted. This parameter will be ignored if a time zone is specified in the time string. If no time zone is specified in either places, the PI Web API server time zone will be used."
"paths./streamsets/plot.get.parameters[5].in" = "query"
"paths./streamsets/plot.get.parameters[5].name" = "timeZone"
"paths./streamsets/plot.get.parameters[5].required" = false
"paths./streamsets/plot.get.parameters[5].type" = "string"
"paths./streamsets/plot.get.responses.200.description" = "Plot values of the streams that meet the specified conditions."
"paths./streamsets/plot.get.responses.200.schema.$ref" = "#/definitions/Items[StreamValues]"
"paths./streamsets/plot.get.responses.409.description" = "Unsupported operation on the given AF object."
"paths./streamsets/plot.get.responses.409.schema.$ref" = "#/definitions/Errors"
"paths./streamsets/plot.get.summary" = "Returns values of attributes for the specified streams over the specified time range suitable for plotting over the number of intervals (typically represents pixels)."
"paths./streamsets/plot.get.tags.length" = 1
"paths./streamsets/plot.get.tags[0]" = "StreamSet"
"paths./streamsets/recorded.get.consumes.length" = 0
"paths./streamsets/recorded.get.deprecated" = false
"paths./streamsets/recorded.get.operationId" = "StreamSet_GetRecordedAdHoc"
"paths./streamsets/recorded.get.parameters.length" = 9
"paths./streamsets/recorded.get.parameters[0].collectionFormat" = "multi"
"paths./streamsets/recorded.get.parameters[0].description" = "The ID of a stream.  Multiple streams may be specified with multiple instances of the parameter."
"paths./streamsets/recorded.get.parameters[0].in" = "query"
"paths./streamsets/recorded.get.parameters[0].items.type" = "string"
"paths./streamsets/recorded.get.parameters[0].name" = "webId"
"paths./streamsets/recorded.get.parameters[0].required" = true
"paths./streamsets/recorded.get.parameters[0].type" = "array"
"paths./streamsets/recorded.get.parameters[1].description" = "An optional value that determines how the times and values of the returned end points are determined. The default is 'Inside'."
"paths./streamsets/recorded.get.parameters[1].in" = "query"
"paths./streamsets/recorded.get.parameters[1].name" = "boundaryType"
"paths./streamsets/recorded.get.parameters[1].required" = false
"paths./streamsets/recorded.get.parameters[1].type" = "string"
"paths./streamsets/recorded.get.parameters[2].description" = "An optional end time. The default is '*'. Note that if endTime is earlier than startTime, the resulting values will be in time-descending order."
"paths./streamsets/recorded.get.parameters[2].in" = "query"
"paths./streamsets/recorded.get.parameters[2].name" = "endTime"
"paths./streamsets/recorded.get.parameters[2].required" = false
"paths./streamsets/recorded.get.parameters[2].type" = "string"
"paths./streamsets/recorded.get.parameters[3].description" = "An optional string containing a filter expression. Expression variables are relative to the data point. Use '.' to reference the containing attribute. The default is no filtering."
"paths./streamsets/recorded.get.parameters[3].in" = "query"
"paths./streamsets/recorded.get.parameters[3].name" = "filterExpression"
"paths./streamsets/recorded.get.parameters[3].required" = false
"paths./streamsets/recorded.get.parameters[3].type" = "string"
"paths./streamsets/recorded.get.parameters[4].description" = "Specify 'true' to indicate that values which fail the filter criteria are present in the returned data at the times where they occurred with a value set to a 'Filtered' enumeration value with bad status. Repeated consecutive failures are omitted."
"paths./streamsets/recorded.get.parameters[4].in" = "query"
"paths./streamsets/recorded.get.parameters[4].name" = "includeFilteredValues"
"paths./streamsets/recorded.get.parameters[4].required" = false
"paths./streamsets/recorded.get.parameters[4].type" = "boolean"
"paths./streamsets/recorded.get.parameters[5].description" = "The maximum number of values to be returned. The default is 1000."
"paths./streamsets/recorded.get.parameters[5].in" = "query"
"paths./streamsets/recorded.get.parameters[5].name" = "maxCount"
"paths./streamsets/recorded.get.parameters[5].required" = false
"paths./streamsets/recorded.get.parameters[5].type" = "integer"
"paths./streamsets/recorded.get.parameters[6].description" = "List of fields to be returned in the response, separated by semicolons (;). If this parameter is not specified, all available fields will be returned."
"paths./streamsets/recorded.get.parameters[6].in" = "query"
"paths./streamsets/recorded.get.parameters[6].name" = "selectedFields"
"paths./streamsets/recorded.get.parameters[6].required" = false
"paths./streamsets/recorded.get.parameters[6].type" = "string"
"paths./streamsets/recorded.get.parameters[7].description" = "An optional start time. The default is '*-1d'."
"paths./streamsets/recorded.get.parameters[7].in" = "query"
"paths./streamsets/recorded.get.parameters[7].name" = "startTime"
"paths./streamsets/recorded.get.parameters[7].required" = false
"paths./streamsets/recorded.get.parameters[7].type" = "string"
"paths./streamsets/recorded.get.parameters[8].description" = "The time zone in which the time string will be interpreted. This parameter will be ignored if a time zone is specified in the time string. If no time zone is specified in either places, the PI Web API server time zone will be used."
"paths./streamsets/recorded.get.parameters[8].in" = "query"
"paths./streamsets/recorded.get.parameters[8].name" = "timeZone"
"paths./streamsets/recorded.get.parameters[8].required" = false
"paths./streamsets/recorded.get.parameters[8].type" = "string"
"paths./streamsets/recorded.get.responses.200.description" = "Recorded values of the streams that meet the specified conditions."
"paths./streamsets/recorded.get.responses.200.schema.$ref" = "#/definitions/Items[StreamValues]"
"paths./streamsets/recorded.get.responses.409.description" = "Unsupported operation on the given AF object."
"paths./streamsets/recorded.get.responses.409.schema.$ref" = "#/definitions/Errors"
"paths./streamsets/recorded.get.summary" = "Returns recorded values of the specified streams."
"paths./streamsets/recorded.get.tags.length" = 1
"paths./streamsets/recorded.get.tags[0]" = "StreamSet"
"paths./streamsets/recorded.post.consumes.length" = 2
"paths./streamsets/recorded.post.consumes[0]" = "application/json"
"paths./streamsets/recorded.post.consumes[1]" = "text/json"
"paths./streamsets/recorded.post.deprecated" = false
"paths./streamsets/recorded.post.operationId" = "StreamSet_UpdateValuesAdHoc"
"paths./streamsets/recorded.post.parameters.length" = 3
"paths./streamsets/recorded.post.parameters[0].description" = "The values to add or update."
"paths./streamsets/recorded.post.parameters[0].in" = "body"
"paths./streamsets/recorded.post.parameters[0].name" = "values"
"paths./streamsets/recorded.post.parameters[0].required" = true
"paths./streamsets/recorded.post.parameters[0].schema.items.$ref" = "#/definitions/StreamValues"
"paths./streamsets/recorded.post.parameters[0].schema.type" = "array"
"paths./streamsets/recorded.post.parameters[1].description" = "The desired AFBufferOption. The default is 'BufferIfPossible'."
"paths./streamsets/recorded.post.parameters[1].in" = "query"
"paths./streamsets/recorded.post.parameters[1].name" = "bufferOption"
"paths./streamsets/recorded.post.parameters[1].required" = false
"paths./streamsets/recorded.post.parameters[1].type" = "string"
"paths./streamsets/recorded.post.parameters[2].description" = "The desired AFUpdateOption. The default is 'Replace'."
"paths./streamsets/recorded.post.parameters[2].in" = "query"
"paths./streamsets/recorded.post.parameters[2].name" = "updateOption"
"paths./streamsets/recorded.post.parameters[2].required" = false
"paths./streamsets/recorded.post.parameters[2].type" = "string"
"paths./streamsets/recorded.post.responses.200.description" = "All updates executed successfully."
"paths./streamsets/recorded.post.responses.200.schema.$ref" = "#/definitions/Items[Items[Substatus]]"
"paths./streamsets/recorded.post.responses.207.description" = "The operation was a partial success. The response body contains substatuses and errors in the same order as the supplied values."
"paths./streamsets/recorded.post.responses.207.schema.$ref" = "#/definitions/Items[Items[Substatus]]"
"paths./streamsets/recorded.post.responses.409.description" = "Unsupported operation on the given AF object."
"paths./streamsets/recorded.post.responses.409.schema.$ref" = "#/definitions/Errors"
"paths./streamsets/recorded.post.summary" = "Updates multiple values for the specified streams."
"paths./streamsets/recorded.post.tags.length" = 1
"paths./streamsets/recorded.post.tags[0]" = "StreamSet"
"paths./streamsets/recordedattime.get.consumes.length" = 0
"paths./streamsets/recordedattime.get.deprecated" = false
"paths./streamsets/recordedattime.get.operationId" = "StreamSet_GetRecordedAtTimeAdHoc"
"paths./streamsets/recordedattime.get.parameters.length" = 5
"paths./streamsets/recordedattime.get.parameters[0].description" = "The timestamp at which the values are desired."
"paths./streamsets/recordedattime.get.parameters[0].in" = "query"
"paths./streamsets/recordedattime.get.parameters[0].name" = "time"
"paths./streamsets/recordedattime.get.parameters[0].required" = true
"paths./streamsets/recordedattime.get.parameters[0].type" = "string"
"paths./streamsets/recordedattime.get.parameters[1].collectionFormat" = "multi"
"paths./streamsets/recordedattime.get.parameters[1].description" = "The ID of a stream.  Multiple streams may be specified with multiple instances of the parameter."
"paths./streamsets/recordedattime.get.parameters[1].in" = "query"
"paths./streamsets/recordedattime.get.parameters[1].items.type" = "string"
"paths./streamsets/recordedattime.get.parameters[1].name" = "webId"
"paths./streamsets/recordedattime.get.parameters[1].required" = true
"paths./streamsets/recordedattime.get.parameters[1].type" = "array"
"paths./streamsets/recordedattime.get.parameters[2].description" = "An optional value that determines the values to return when values don't exist at the exact time specified. The default is 'Auto'."
"paths./streamsets/recordedattime.get.parameters[2].in" = "query"
"paths./streamsets/recordedattime.get.parameters[2].name" = "retrievalMode"
"paths./streamsets/recordedattime.get.parameters[2].required" = false
"paths./streamsets/recordedattime.get.parameters[2].type" = "string"
"paths./streamsets/recordedattime.get.parameters[3].description" = "List of fields to be returned in the response, separated by semicolons (;). If this parameter is not specified, all available fields will be returned."
"paths./streamsets/recordedattime.get.parameters[3].in" = "query"
"paths./streamsets/recordedattime.get.parameters[3].name" = "selectedFields"
"paths./streamsets/recordedattime.get.parameters[3].required" = false
"paths./streamsets/recordedattime.get.parameters[3].type" = "string"
"paths./streamsets/recordedattime.get.parameters[4].description" = "The time zone in which the time string will be interpreted. This parameter will be ignored if a time zone is specified in the time string. If no time zone is specified in either places, the PI Web API server time zone will be used."
"paths./streamsets/recordedattime.get.parameters[4].in" = "query"
"paths./streamsets/recordedattime.get.parameters[4].name" = "timeZone"
"paths./streamsets/recordedattime.get.parameters[4].required" = false
"paths./streamsets/recordedattime.get.parameters[4].type" = "string"
"paths./streamsets/recordedattime.get.responses.200.description" = "Recorded values of the streams that meet the specified conditions."
"paths./streamsets/recordedattime.get.responses.200.schema.$ref" = "#/definitions/Items[StreamValue]"
"paths./streamsets/recordedattime.get.responses.409.description" = "Unsupported operation on the given AF object."
"paths./streamsets/recordedattime.get.responses.409.schema.$ref" = "#/definitions/Errors"
"paths./streamsets/recordedattime.get.summary" = "Returns recorded values based on the passed time and retrieval mode."
"paths./streamsets/recordedattime.get.tags.length" = 1
"paths./streamsets/recordedattime.get.tags[0]" = "StreamSet"
"paths./streamsets/recordedattimes.get.consumes.length" = 0
"paths./streamsets/recordedattimes.get.deprecated" = false
"paths./streamsets/recordedattimes.get.operationId" = "StreamSet_GetRecordedAtTimesAdHoc"
"paths./streamsets/recordedattimes.get.parameters.length" = 6
"paths./streamsets/recordedattimes.get.parameters[0].collectionFormat" = "multi"
"paths./streamsets/recordedattimes.get.parameters[0].description" = "The timestamp at which to retrieve a recorded value. Multiple timestamps may be specified with multiple instances of the parameter."
"paths./streamsets/recordedattimes.get.parameters[0].in" = "query"
"paths./streamsets/recordedattimes.get.parameters[0].items.type" = "string"
"paths./streamsets/recordedattimes.get.parameters[0].name" = "time"
"paths./streamsets/recordedattimes.get.parameters[0].required" = true
"paths./streamsets/recordedattimes.get.parameters[0].type" = "array"
"paths./streamsets/recordedattimes.get.parameters[1].collectionFormat" = "multi"
"paths./streamsets/recordedattimes.get.parameters[1].description" = "The ID of a stream. Multiple streams may be specified with multiple instances of the parameter."
"paths./streamsets/recordedattimes.get.parameters[1].in" = "query"
"paths./streamsets/recordedattimes.get.parameters[1].items.type" = "string"
"paths./streamsets/recordedattimes.get.parameters[1].name" = "webId"
"paths./streamsets/recordedattimes.get.parameters[1].required" = true
"paths./streamsets/recordedattimes.get.parameters[1].type" = "array"
"paths./streamsets/recordedattimes.get.parameters[2].description" = "An optional value that determines the values to return when values don't exist at the exact time specified. The default is 'Auto'."
"paths./streamsets/recordedattimes.get.parameters[2].in" = "query"
"paths./streamsets/recordedattimes.get.parameters[2].name" = "retrievalMode"
"paths./streamsets/recordedattimes.get.parameters[2].required" = false
"paths./streamsets/recordedattimes.get.parameters[2].type" = "string"
"paths./streamsets/recordedattimes.get.parameters[3].description" = "List of fields to be returned in the response, separated by semicolons (;). If this parameter is not specified, all available fields will be returned."
"paths./streamsets/recordedattimes.get.parameters[3].in" = "query"
"paths./streamsets/recordedattimes.get.parameters[3].name" = "selectedFields"
"paths./streamsets/recordedattimes.get.parameters[3].required" = false
"paths./streamsets/recordedattimes.get.parameters[3].type" = "string"
"paths./streamsets/recordedattimes.get.parameters[4].description" = "The order that the returned collection is sorted. The default is 'Ascending'."
"paths./streamsets/recordedattimes.get.parameters[4].in" = "query"
"paths./streamsets/recordedattimes.get.parameters[4].name" = "sortOrder"
"paths./streamsets/recordedattimes.get.parameters[4].required" = false
"paths./streamsets/recordedattimes.get.parameters[4].type" = "string"
"paths./streamsets/recordedattimes.get.parameters[5].description" = "The time zone in which the time string will be interpreted. This parameter will be ignored if a time zone is specified in the time string. If no time zone is specified in either places, the PI Web API server time zone will be used."
"paths./streamsets/recordedattimes.get.parameters[5].in" = "query"
"paths./streamsets/recordedattimes.get.parameters[5].name" = "timeZone"
"paths./streamsets/recordedattimes.get.parameters[5].required" = false
"paths./streamsets/recordedattimes.get.parameters[5].type" = "string"
"paths./streamsets/recordedattimes.get.responses.200.description" = "Recorded values of the streams that meet the specified conditions."
"paths./streamsets/recordedattimes.get.responses.200.schema.$ref" = "#/definitions/Items[StreamValues]"
"paths./streamsets/recordedattimes.get.responses.400.description" = "The request was malformed."
"paths./streamsets/recordedattimes.get.responses.400.schema.$ref" = "#/definitions/Errors"
"paths./streamsets/recordedattimes.get.responses.502.description" = "The request was cancelled."
"paths./streamsets/recordedattimes.get.responses.502.schema.$ref" = "#/definitions/Errors"
"paths./streamsets/recordedattimes.get.summary" = "Returns recorded values of the specified streams at the specified times."
"paths./streamsets/recordedattimes.get.tags.length" = 1
"paths./streamsets/recordedattimes.get.tags[0]" = "StreamSet"
"paths./streamsets/summary.get.consumes.length" = 0
"paths./streamsets/summary.get.deprecated" = false
"paths./streamsets/summary.get.operationId" = "StreamSet_GetSummariesAdHoc"
"paths./streamsets/summary.get.parameters.length" = 12
"paths./streamsets/summary.get.parameters[0].collectionFormat" = "multi"
"paths./streamsets/summary.get.parameters[0].description" = "The ID of a stream.  Multiple streams may be specified with multiple instances of the parameter."
"paths./streamsets/summary.get.parameters[0].in" = "query"
"paths./streamsets/summary.get.parameters[0].items.type" = "string"
"paths./streamsets/summary.get.parameters[0].name" = "webId"
"paths./streamsets/summary.get.parameters[0].required" = true
"paths./streamsets/summary.get.parameters[0].type" = "array"
"paths./streamsets/summary.get.parameters[10].description" = "Specifies how to calculate the timestamp for each interval. The default is 'Auto'."
"paths./streamsets/summary.get.parameters[10].in" = "query"
"paths./streamsets/summary.get.parameters[10].name" = "timeType"
"paths./streamsets/summary.get.parameters[10].required" = false
"paths./streamsets/summary.get.parameters[10].type" = "string"
"paths./streamsets/summary.get.parameters[11].description" = "The time zone in which the time string will be interpreted. This parameter will be ignored if a time zone is specified in the time string. If no time zone is specified in either places, the PI Web API server time zone will be used."
"paths./streamsets/summary.get.parameters[11].in" = "query"
"paths./streamsets/summary.get.parameters[11].name" = "timeZone"
"paths./streamsets/summary.get.parameters[11].required" = false
"paths./streamsets/summary.get.parameters[11].type" = "string"
"paths./streamsets/summary.get.parameters[1].description" = "Specifies the method of evaluating the data over the time range. The default is 'TimeWeighted'."
"paths./streamsets/summary.get.parameters[1].in" = "query"
"paths./streamsets/summary.get.parameters[1].name" = "calculationBasis"
"paths./streamsets/summary.get.parameters[1].required" = false
"paths./streamsets/summary.get.parameters[1].type" = "string"
"paths./streamsets/summary.get.parameters[2].description" = "An optional end time. The default is '*'. Note that if endTime is earlier than startTime, the resulting values will be in time-descending order."
"paths./streamsets/summary.get.parameters[2].in" = "query"
"paths./streamsets/summary.get.parameters[2].name" = "endTime"
"paths./streamsets/summary.get.parameters[2].required" = false
"paths./streamsets/summary.get.parameters[2].type" = "string"
"paths./streamsets/summary.get.parameters[3].description" = "A string containing a filter expression. Expression variables are relative to the attribute. Use '.' to reference the containing attribute. The default is no filtering."
"paths./streamsets/summary.get.parameters[3].in" = "query"
"paths./streamsets/summary.get.parameters[3].name" = "filterExpression"
"paths./streamsets/summary.get.parameters[3].required" = false
"paths./streamsets/summary.get.parameters[3].type" = "string"
"paths./streamsets/summary.get.parameters[4].description" = "A time span specifies how often the filter expression is evaluated when computing the summary for an interval, if the sampleType is 'Interval'."
"paths./streamsets/summary.get.parameters[4].in" = "query"
"paths./streamsets/summary.get.parameters[4].name" = "sampleInterval"
"paths./streamsets/summary.get.parameters[4].required" = false
"paths./streamsets/summary.get.parameters[4].type" = "string"
"paths./streamsets/summary.get.parameters[5].description" = "A flag which specifies one or more summaries to compute for each interval over the time range. The default is 'ExpressionRecordedValues'."
"paths./streamsets/summary.get.parameters[5].in" = "query"
"paths./streamsets/summary.get.parameters[5].name" = "sampleType"
"paths./streamsets/summary.get.parameters[5].required" = false
"paths./streamsets/summary.get.parameters[5].type" = "string"
"paths./streamsets/summary.get.parameters[6].description" = "List of fields to be returned in the response, separated by semicolons (;). If this parameter is not specified, all available fields will be returned."
"paths./streamsets/summary.get.parameters[6].in" = "query"
"paths./streamsets/summary.get.parameters[6].name" = "selectedFields"
"paths./streamsets/summary.get.parameters[6].required" = false
"paths./streamsets/summary.get.parameters[6].type" = "string"
"paths./streamsets/summary.get.parameters[7].description" = "An optional start time. The default is '*-1d'."
"paths./streamsets/summary.get.parameters[7].in" = "query"
"paths./streamsets/summary.get.parameters[7].name" = "startTime"
"paths./streamsets/summary.get.parameters[7].required" = false
"paths./streamsets/summary.get.parameters[7].type" = "string"
"paths./streamsets/summary.get.parameters[8].description" = "The duration of each summary interval."
"paths./streamsets/summary.get.parameters[8].in" = "query"
"paths./streamsets/summary.get.parameters[8].name" = "summaryDuration"
"paths./streamsets/summary.get.parameters[8].required" = false
"paths./streamsets/summary.get.parameters[8].type" = "string"
"paths./streamsets/summary.get.parameters[9].collectionFormat" = "multi"
"paths./streamsets/summary.get.parameters[9].description" = "Specifies the kinds of summaries to produce over the range. The default is 'Total'. Multiple summary types may be specified by using multiple instances of summaryType."
"paths./streamsets/summary.get.parameters[9].in" = "query"
"paths./streamsets/summary.get.parameters[9].items.type" = "string"
"paths./streamsets/summary.get.parameters[9].name" = "summaryType"
"paths./streamsets/summary.get.parameters[9].required" = false
"paths./streamsets/summary.get.parameters[9].type" = "array"
"paths./streamsets/summary.get.responses.200.description" = "Summary values of the streams that meet the specified conditions."
"paths./streamsets/summary.get.responses.200.schema.$ref" = "#/definitions/Items[StreamSummaries]"
"paths./streamsets/summary.get.responses.409.description" = "Unsupported operation on the given AF object."
"paths./streamsets/summary.get.responses.409.schema.$ref" = "#/definitions/Errors"
"paths./streamsets/summary.get.summary" = "Returns summary values of the specified streams."
"paths./streamsets/summary.get.tags.length" = 1
"paths./streamsets/summary.get.tags[0]" = "StreamSet"
"paths./streamsets/value.get.consumes.length" = 0
"paths./streamsets/value.get.deprecated" = false
"paths./streamsets/value.get.operationId" = "StreamSet_GetValuesAdHoc"
"paths./streamsets/value.get.parameters.length" = 4
"paths./streamsets/value.get.parameters[0].collectionFormat" = "multi"
"paths./streamsets/value.get.parameters[0].description" = "The ID of a stream.  Multiple streams may be specified with multiple instances of the parameter."
"paths./streamsets/value.get.parameters[0].in" = "query"
"paths./streamsets/value.get.parameters[0].items.type" = "string"
"paths./streamsets/value.get.parameters[0].name" = "webId"
"paths./streamsets/value.get.parameters[0].required" = true
"paths./streamsets/value.get.parameters[0].type" = "array"
"paths./streamsets/value.get.parameters[1].description" = "List of fields to be returned in the response, separated by semicolons (;). If this parameter is not specified, all available fields will be returned."
"paths./streamsets/value.get.parameters[1].in" = "query"
"paths./streamsets/value.get.parameters[1].name" = "selectedFields"
"paths./streamsets/value.get.parameters[1].required" = false
"paths./streamsets/value.get.parameters[1].type" = "string"
"paths./streamsets/value.get.parameters[2].description" = "An AF time string, which is used as the time context to get stream values if it is provided. By default, it is not specified, and the default time context of the AF object will be used."
"paths./streamsets/value.get.parameters[2].in" = "query"
"paths./streamsets/value.get.parameters[2].name" = "time"
"paths./streamsets/value.get.parameters[2].required" = false
"paths./streamsets/value.get.parameters[2].type" = "string"
"paths./streamsets/value.get.parameters[3].description" = "The time zone in which the time string will be interpreted. This parameter will be ignored if a time zone is specified in the time string. If no time zone is specified in either places, the PI Web API server time zone will be used."
"paths./streamsets/value.get.parameters[3].in" = "query"
"paths./streamsets/value.get.parameters[3].name" = "timeZone"
"paths./streamsets/value.get.parameters[3].required" = false
"paths./streamsets/value.get.parameters[3].type" = "string"
"paths./streamsets/value.get.responses.200.description" = "Summary values of the streams that meet the specified conditions."
"paths./streamsets/value.get.responses.200.schema.$ref" = "#/definitions/Items[StreamValue]"
"paths./streamsets/value.get.responses.409.description" = "Unsupported operation on the given AF object."
"paths./streamsets/value.get.responses.409.schema.$ref" = "#/definitions/Errors"
"paths./streamsets/value.get.summary" = "Returns values of the specified streams."
"paths./streamsets/value.get.tags.length" = 1
"paths./streamsets/value.get.tags[0]" = "StreamSet"
"paths./streamsets/value.post.consumes.length" = 2
"paths./streamsets/value.post.consumes[0]" = "application/json"
"paths./streamsets/value.post.consumes[1]" = "text/json"
"paths./streamsets/value.post.deprecated" = false
"paths./streamsets/value.post.operationId" = "StreamSet_UpdateValueAdHoc"
"paths./streamsets/value.post.parameters.length" = 3
"paths./streamsets/value.post.parameters[0].description" = "The values to add or update."
"paths./streamsets/value.post.parameters[0].in" = "body"
"paths./streamsets/value.post.parameters[0].name" = "values"
"paths./streamsets/value.post.parameters[0].required" = true
"paths./streamsets/value.post.parameters[0].schema.items.$ref" = "#/definitions/StreamValues"
"paths./streamsets/value.post.parameters[0].schema.type" = "array"
"paths./streamsets/value.post.parameters[1].description" = "The desired AFBufferOption. The default is 'BufferIfPossible'."
"paths./streamsets/value.post.parameters[1].in" = "query"
"paths./streamsets/value.post.parameters[1].name" = "bufferOption"
"paths./streamsets/value.post.parameters[1].required" = false
"paths./streamsets/value.post.parameters[1].type" = "string"
"paths./streamsets/value.post.parameters[2].description" = "The desired AFUpdateOption. The default is 'Replace'."
"paths./streamsets/value.post.parameters[2].in" = "query"
"paths./streamsets/value.post.parameters[2].name" = "updateOption"
"paths./streamsets/value.post.parameters[2].required" = false
"paths./streamsets/value.post.parameters[2].type" = "string"
"paths./streamsets/value.post.responses.200.description" = "All updates executed successfully."
"paths./streamsets/value.post.responses.200.schema.$ref" = "#/definitions/Items[Substatus]"
"paths./streamsets/value.post.responses.207.description" = "The operation was a partial success. The response body contains substatuses and errors in the same order as the supplied values."
"paths./streamsets/value.post.responses.207.schema.$ref" = "#/definitions/Items[Substatus]"
"paths./streamsets/value.post.responses.409.description" = "Unsupported operation on the given AF object."
"paths./streamsets/value.post.responses.409.schema.$ref" = "#/definitions/Errors"
"paths./streamsets/value.post.summary" = "Updates a single value for the specified streams."
"paths./streamsets/value.post.tags.length" = 1
"paths./streamsets/value.post.tags[0]" = "StreamSet"
"paths./streamsets/{webId}/channel.get.consumes.length" = 0
"paths./streamsets/{webId}/channel.get.deprecated" = false
"paths./streamsets/{webId}/channel.get.operationId" = "StreamSet_GetChannel"
"paths./streamsets/{webId}/channel.get.parameters.length" = 8
"paths./streamsets/{webId}/channel.get.parameters[0].description" = "The ID of an Element, Event Frame or Attribute, which is the base element or parent of all the stream attributes."
"paths./streamsets/{webId}/channel.get.parameters[0].in" = "path"
"paths./streamsets/{webId}/channel.get.parameters[0].name" = "webId"
"paths./streamsets/{webId}/channel.get.parameters[0].required" = true
"paths./streamsets/{webId}/channel.get.parameters[0].type" = "string"
"paths./streamsets/{webId}/channel.get.parameters[1].description" = "Specify that included attributes must have this category. The default is no category filter."
"paths./streamsets/{webId}/channel.get.parameters[1].in" = "query"
"paths./streamsets/{webId}/channel.get.parameters[1].name" = "categoryName"
"paths./streamsets/{webId}/channel.get.parameters[1].required" = false
"paths./streamsets/{webId}/channel.get.parameters[1].type" = "string"
"paths./streamsets/{webId}/channel.get.parameters[2].description" = "Specified if the channel should send a message with the current values of all the streams after the connection is opened. The default is 'false'."
"paths./streamsets/{webId}/channel.get.parameters[2].in" = "query"
"paths./streamsets/{webId}/channel.get.parameters[2].name" = "includeInitialValues"
"paths./streamsets/{webId}/channel.get.parameters[2].required" = false
"paths./streamsets/{webId}/channel.get.parameters[2].type" = "boolean"
"paths./streamsets/{webId}/channel.get.parameters[3].description" = "The name query string used for filtering attributes. The default is no filter."
"paths./streamsets/{webId}/channel.get.parameters[3].in" = "query"
"paths./streamsets/{webId}/channel.get.parameters[3].name" = "nameFilter"
"paths./streamsets/{webId}/channel.get.parameters[3].required" = false
"paths./streamsets/{webId}/channel.get.parameters[3].type" = "string"
"paths./streamsets/{webId}/channel.get.parameters[4].description" = "Specifies if the search should include attributes nested further than the immediate attributes of the searchRoot. The default is 'false'."
"paths./streamsets/{webId}/channel.get.parameters[4].in" = "query"
"paths./streamsets/{webId}/channel.get.parameters[4].name" = "searchFullHierarchy"
"paths./streamsets/{webId}/channel.get.parameters[4].required" = false
"paths./streamsets/{webId}/channel.get.parameters[4].type" = "boolean"
"paths./streamsets/{webId}/channel.get.parameters[5].description" = "Specified if the search should include attributes with the Excluded property set. The default is 'false'."
"paths./streamsets/{webId}/channel.get.parameters[5].in" = "query"
"paths./streamsets/{webId}/channel.get.parameters[5].name" = "showExcluded"
"paths./streamsets/{webId}/channel.get.parameters[5].required" = false
"paths./streamsets/{webId}/channel.get.parameters[5].type" = "boolean"
"paths./streamsets/{webId}/channel.get.parameters[6].description" = "Specified if the search should include attributes with the Hidden property set. The default is 'false'."
"paths./streamsets/{webId}/channel.get.parameters[6].in" = "query"
"paths./streamsets/{webId}/channel.get.parameters[6].name" = "showHidden"
"paths./streamsets/{webId}/channel.get.parameters[6].required" = false
"paths./streamsets/{webId}/channel.get.parameters[6].type" = "boolean"
"paths./streamsets/{webId}/channel.get.parameters[7].description" = "Specify that included attributes must be members of this template. The default is no template filter."
"paths./streamsets/{webId}/channel.get.parameters[7].in" = "query"
"paths./streamsets/{webId}/channel.get.parameters[7].name" = "templateName"
"paths./streamsets/{webId}/channel.get.parameters[7].required" = false
"paths./streamsets/{webId}/channel.get.parameters[7].type" = "string"
"paths./streamsets/{webId}/channel.get.responses.101.description" = "Switches to the Web Socket protocol."
"paths./streamsets/{webId}/channel.get.responses.101.schema.$ref" = "#/definitions/Items[StreamValue]"
"paths./streamsets/{webId}/channel.get.responses.409.description" = "Unsupported operation on the given AF object."
"paths./streamsets/{webId}/channel.get.responses.409.schema.$ref" = "#/definitions/Errors"
"paths./streamsets/{webId}/channel.get.summary" = "Opens a channel that will send messages about any value changes for the attributes of an Element, Event Frame, or Attribute."
"paths./streamsets/{webId}/channel.get.tags.length" = 1
"paths./streamsets/{webId}/channel.get.tags[0]" = "StreamSet"
"paths./streamsets/{webId}/end.get.consumes.length" = 0
"paths./streamsets/{webId}/end.get.deprecated" = false
"paths./streamsets/{webId}/end.get.operationId" = "StreamSet_GetEnd"
"paths./streamsets/{webId}/end.get.parameters.length" = 8
"paths./streamsets/{webId}/end.get.parameters[0].description" = "The ID of an Element, Event Frame or Attribute, which is the base element or parent of all the stream attributes."
"paths./streamsets/{webId}/end.get.parameters[0].in" = "path"
"paths./streamsets/{webId}/end.get.parameters[0].name" = "webId"
"paths./streamsets/{webId}/end.get.parameters[0].required" = true
"paths./streamsets/{webId}/end.get.parameters[0].type" = "string"
"paths./streamsets/{webId}/end.get.parameters[1].description" = "Specify that included attributes must have this category. The default is no category filter."
"paths./streamsets/{webId}/end.get.parameters[1].in" = "query"
"paths./streamsets/{webId}/end.get.parameters[1].name" = "categoryName"
"paths./streamsets/{webId}/end.get.parameters[1].required" = false
"paths./streamsets/{webId}/end.get.parameters[1].type" = "string"
"paths./streamsets/{webId}/end.get.parameters[2].description" = "The name query string used for filtering attributes. The default is no filter."
"paths./streamsets/{webId}/end.get.parameters[2].in" = "query"
"paths./streamsets/{webId}/end.get.parameters[2].name" = "nameFilter"
"paths./streamsets/{webId}/end.get.parameters[2].required" = false
"paths./streamsets/{webId}/end.get.parameters[2].type" = "string"
"paths./streamsets/{webId}/end.get.parameters[3].description" = "Specifies if the search should include attributes nested further than the immediate attributes of the searchRoot. The default is 'false'."
"paths./streamsets/{webId}/end.get.parameters[3].in" = "query"
"paths./streamsets/{webId}/end.get.parameters[3].name" = "searchFullHierarchy"
"paths./streamsets/{webId}/end.get.parameters[3].required" = false
"paths./streamsets/{webId}/end.get.parameters[3].type" = "boolean"
"paths./streamsets/{webId}/end.get.parameters[4].description" = "List of fields to be returned in the response, separated by semicolons (;). If this parameter is not specified, all available fields will be returned."
"paths./streamsets/{webId}/end.get.parameters[4].in" = "query"
"paths./streamsets/{webId}/end.get.parameters[4].name" = "selectedFields"
"paths./streamsets/{webId}/end.get.parameters[4].required" = false
"paths./streamsets/{webId}/end.get.parameters[4].type" = "string"
"paths./streamsets/{webId}/end.get.parameters[5].description" = "Specified if the search should include attributes with the Excluded property set. The default is 'false'."
"paths./streamsets/{webId}/end.get.parameters[5].in" = "query"
"paths./streamsets/{webId}/end.get.parameters[5].name" = "showExcluded"
"paths./streamsets/{webId}/end.get.parameters[5].required" = false
"paths./streamsets/{webId}/end.get.parameters[5].type" = "boolean"
"paths./streamsets/{webId}/end.get.parameters[6].description" = "Specified if the search should include attributes with the Hidden property set. The default is 'false'."
"paths./streamsets/{webId}/end.get.parameters[6].in" = "query"
"paths./streamsets/{webId}/end.get.parameters[6].name" = "showHidden"
"paths./streamsets/{webId}/end.get.parameters[6].required" = false
"paths./streamsets/{webId}/end.get.parameters[6].type" = "boolean"
"paths./streamsets/{webId}/end.get.parameters[7].description" = "Specify that included attributes must be members of this template. The default is no template filter."
"paths./streamsets/{webId}/end.get.parameters[7].in" = "query"
"paths./streamsets/{webId}/end.get.parameters[7].name" = "templateName"
"paths./streamsets/{webId}/end.get.parameters[7].required" = false
"paths./streamsets/{webId}/end.get.parameters[7].type" = "string"
"paths./streamsets/{webId}/end.get.responses.200.description" = "Summary values of the streams that meet the specified conditions."
"paths./streamsets/{webId}/end.get.responses.200.schema.$ref" = "#/definitions/Items[StreamValue]"
"paths./streamsets/{webId}/end.get.responses.409.description" = "Unsupported operation on the given AF object."
"paths./streamsets/{webId}/end.get.responses.409.schema.$ref" = "#/definitions/Errors"
"paths./streamsets/{webId}/end.get.summary" = "Returns End of stream values of the attributes for an Element, Event Frame or Attribute"
"paths./streamsets/{webId}/end.get.tags.length" = 1
"paths./streamsets/{webId}/end.get.tags[0]" = "StreamSet"
"paths./streamsets/{webId}/interpolated.get.consumes.length" = 0
"paths./streamsets/{webId}/interpolated.get.deprecated" = false
"paths./streamsets/{webId}/interpolated.get.operationId" = "StreamSet_GetInterpolated"
"paths./streamsets/{webId}/interpolated.get.parameters.length" = 14
"paths./streamsets/{webId}/interpolated.get.parameters[0].description" = "The ID of an element, event frame or attribute, which is the base element or parent of all the stream attributes."
"paths./streamsets/{webId}/interpolated.get.parameters[0].in" = "path"
"paths./streamsets/{webId}/interpolated.get.parameters[0].name" = "webId"
"paths./streamsets/{webId}/interpolated.get.parameters[0].required" = true
"paths./streamsets/{webId}/interpolated.get.parameters[0].type" = "string"
"paths./streamsets/{webId}/interpolated.get.parameters[10].description" = "Specified if the search should include attributes with the Hidden property set. The default is 'false'."
"paths./streamsets/{webId}/interpolated.get.parameters[10].in" = "query"
"paths./streamsets/{webId}/interpolated.get.parameters[10].name" = "showHidden"
"paths./streamsets/{webId}/interpolated.get.parameters[10].required" = false
"paths./streamsets/{webId}/interpolated.get.parameters[10].type" = "boolean"
"paths./streamsets/{webId}/interpolated.get.parameters[11].description" = "An optional start time. The default is '*-1d' for element attributes and points. For event frame attributes, the default is the event frame's start time, or '*-1d' if that is not set."
"paths./streamsets/{webId}/interpolated.get.parameters[11].in" = "query"
"paths./streamsets/{webId}/interpolated.get.parameters[11].name" = "startTime"
"paths./streamsets/{webId}/interpolated.get.parameters[11].required" = false
"paths./streamsets/{webId}/interpolated.get.parameters[11].type" = "string"
"paths./streamsets/{webId}/interpolated.get.parameters[12].description" = "Specify that included attributes must be members of this template. The default is no template filter."
"paths./streamsets/{webId}/interpolated.get.parameters[12].in" = "query"
"paths./streamsets/{webId}/interpolated.get.parameters[12].name" = "templateName"
"paths./streamsets/{webId}/interpolated.get.parameters[12].required" = false
"paths./streamsets/{webId}/interpolated.get.parameters[12].type" = "string"
"paths./streamsets/{webId}/interpolated.get.parameters[13].description" = "The time zone in which the time string will be interpreted. This parameter will be ignored if a time zone is specified in the time string. If no time zone is specified in either places, the PI Web API server time zone will be used."
"paths./streamsets/{webId}/interpolated.get.parameters[13].in" = "query"
"paths./streamsets/{webId}/interpolated.get.parameters[13].name" = "timeZone"
"paths./streamsets/{webId}/interpolated.get.parameters[13].required" = false
"paths./streamsets/{webId}/interpolated.get.parameters[13].type" = "string"
"paths./streamsets/{webId}/interpolated.get.parameters[1].description" = "Specify that included attributes must have this category. The default is no category filter."
"paths./streamsets/{webId}/interpolated.get.parameters[1].in" = "query"
"paths./streamsets/{webId}/interpolated.get.parameters[1].name" = "categoryName"
"paths./streamsets/{webId}/interpolated.get.parameters[1].required" = false
"paths./streamsets/{webId}/interpolated.get.parameters[1].type" = "string"
"paths./streamsets/{webId}/interpolated.get.parameters[2].description" = "An optional end time. The default is '*' for element attributes and points. For event frame attributes, the default is the event frame's end time, or '*' if that is not set. Note that if endTime is earlier than startTime, the resulting values will be in time-descending order."
"paths./streamsets/{webId}/interpolated.get.parameters[2].in" = "query"
"paths./streamsets/{webId}/interpolated.get.parameters[2].name" = "endTime"
"paths./streamsets/{webId}/interpolated.get.parameters[2].required" = false
"paths./streamsets/{webId}/interpolated.get.parameters[2].type" = "string"
"paths./streamsets/{webId}/interpolated.get.parameters[3].description" = "An optional string containing a filter expression. Expression variables are relative to the data point. Use '.' to reference the containing attribute. If the attribute does not support filtering, the filter will be ignored. The default is no filtering."
"paths./streamsets/{webId}/interpolated.get.parameters[3].in" = "query"
"paths./streamsets/{webId}/interpolated.get.parameters[3].name" = "filterExpression"
"paths./streamsets/{webId}/interpolated.get.parameters[3].required" = false
"paths./streamsets/{webId}/interpolated.get.parameters[3].type" = "string"
"paths./streamsets/{webId}/interpolated.get.parameters[4].description" = "Specify 'true' to indicate that values which fail the filter criteria are present in the returned data at the times where they occurred with a value set to a 'Filtered' enumeration value with bad status. Repeated consecutive failures are omitted."
"paths./streamsets/{webId}/interpolated.get.parameters[4].in" = "query"
"paths./streamsets/{webId}/interpolated.get.parameters[4].name" = "includeFilteredValues"
"paths./streamsets/{webId}/interpolated.get.parameters[4].required" = false
"paths./streamsets/{webId}/interpolated.get.parameters[4].type" = "boolean"
"paths./streamsets/{webId}/interpolated.get.parameters[5].description" = "The sampling interval, in AFTimeSpan format."
"paths./streamsets/{webId}/interpolated.get.parameters[5].in" = "query"
"paths./streamsets/{webId}/interpolated.get.parameters[5].name" = "interval"
"paths./streamsets/{webId}/interpolated.get.parameters[5].required" = false
"paths./streamsets/{webId}/interpolated.get.parameters[5].type" = "string"
"paths./streamsets/{webId}/interpolated.get.parameters[6].description" = "The name query string used for filtering attributes. The default is no filter."
"paths./streamsets/{webId}/interpolated.get.parameters[6].in" = "query"
"paths./streamsets/{webId}/interpolated.get.parameters[6].name" = "nameFilter"
"paths./streamsets/{webId}/interpolated.get.parameters[6].required" = false
"paths./streamsets/{webId}/interpolated.get.parameters[6].type" = "string"
"paths./streamsets/{webId}/interpolated.get.parameters[7].description" = "Specifies if the search should include attributes nested further than the immediate attributes of the searchRoot. The default is 'false'."
"paths./streamsets/{webId}/interpolated.get.parameters[7].in" = "query"
"paths./streamsets/{webId}/interpolated.get.parameters[7].name" = "searchFullHierarchy"
"paths./streamsets/{webId}/interpolated.get.parameters[7].required" = false
"paths./streamsets/{webId}/interpolated.get.parameters[7].type" = "boolean"
"paths./streamsets/{webId}/interpolated.get.parameters[8].description" = "List of fields to be returned in the response, separated by semicolons (;). If this parameter is not specified, all available fields will be returned."
"paths./streamsets/{webId}/interpolated.get.parameters[8].in" = "query"
"paths./streamsets/{webId}/interpolated.get.parameters[8].name" = "selectedFields"
"paths./streamsets/{webId}/interpolated.get.parameters[8].required" = false
"paths./streamsets/{webId}/interpolated.get.parameters[8].type" = "string"
"paths./streamsets/{webId}/interpolated.get.parameters[9].description" = "Specified if the search should include attributes with the Excluded property set. The default is 'false'."
"paths./streamsets/{webId}/interpolated.get.parameters[9].in" = "query"
"paths./streamsets/{webId}/interpolated.get.parameters[9].name" = "showExcluded"
"paths./streamsets/{webId}/interpolated.get.parameters[9].required" = false
"paths./streamsets/{webId}/interpolated.get.parameters[9].type" = "boolean"
"paths./streamsets/{webId}/interpolated.get.responses.200.description" = "Interpolated values of the streams that meet the specified conditions."
"paths./streamsets/{webId}/interpolated.get.responses.200.schema.$ref" = "#/definitions/Items[StreamValues]"
"paths./streamsets/{webId}/interpolated.get.summary" = "Returns interpolated values of attributes for an element, event frame or attribute over the specified time range at the specified sampling interval."
"paths./streamsets/{webId}/interpolated.get.tags.length" = 1
"paths./streamsets/{webId}/interpolated.get.tags[0]" = "StreamSet"
"paths./streamsets/{webId}/interpolatedattimes.get.consumes.length" = 0
"paths./streamsets/{webId}/interpolatedattimes.get.deprecated" = false
"paths./streamsets/{webId}/interpolatedattimes.get.operationId" = "StreamSet_GetInterpolatedAtTimes"
"paths./streamsets/{webId}/interpolatedattimes.get.parameters.length" = 13
"paths./streamsets/{webId}/interpolatedattimes.get.parameters[0].description" = "The ID of an element, event frame or attribute, which is the base element or parent of all the stream attributes."
"paths./streamsets/{webId}/interpolatedattimes.get.parameters[0].in" = "path"
"paths./streamsets/{webId}/interpolatedattimes.get.parameters[0].name" = "webId"
"paths./streamsets/{webId}/interpolatedattimes.get.parameters[0].required" = true
"paths./streamsets/{webId}/interpolatedattimes.get.parameters[0].type" = "string"
"paths./streamsets/{webId}/interpolatedattimes.get.parameters[10].description" = "The order that the returned collection is sorted. The default is 'Ascending'."
"paths./streamsets/{webId}/interpolatedattimes.get.parameters[10].in" = "query"
"paths./streamsets/{webId}/interpolatedattimes.get.parameters[10].name" = "sortOrder"
"paths./streamsets/{webId}/interpolatedattimes.get.parameters[10].required" = false
"paths./streamsets/{webId}/interpolatedattimes.get.parameters[10].type" = "string"
"paths./streamsets/{webId}/interpolatedattimes.get.parameters[11].description" = "Specify that included attributes must be members of this template. The default is no template filter."
"paths./streamsets/{webId}/interpolatedattimes.get.parameters[11].in" = "query"
"paths./streamsets/{webId}/interpolatedattimes.get.parameters[11].name" = "templateName"
"paths./streamsets/{webId}/interpolatedattimes.get.parameters[11].required" = false
"paths./streamsets/{webId}/interpolatedattimes.get.parameters[11].type" = "string"
"paths./streamsets/{webId}/interpolatedattimes.get.parameters[12].description" = "The time zone in which the time string will be interpreted. This parameter will be ignored if a time zone is specified in the time string. If no time zone is specified in either places, the PI Web API server time zone will be used."
"paths./streamsets/{webId}/interpolatedattimes.get.parameters[12].in" = "query"
"paths./streamsets/{webId}/interpolatedattimes.get.parameters[12].name" = "timeZone"
"paths./streamsets/{webId}/interpolatedattimes.get.parameters[12].required" = false
"paths./streamsets/{webId}/interpolatedattimes.get.parameters[12].type" = "string"
"paths./streamsets/{webId}/interpolatedattimes.get.parameters[1].collectionFormat" = "multi"
"paths./streamsets/{webId}/interpolatedattimes.get.parameters[1].description" = "The timestamp at which to retrieve a interpolated value. Multiple timestamps may be specified with multiple instances of the parameter."
"paths./streamsets/{webId}/interpolatedattimes.get.parameters[1].in" = "query"
"paths./streamsets/{webId}/interpolatedattimes.get.parameters[1].items.type" = "string"
"paths./streamsets/{webId}/interpolatedattimes.get.parameters[1].name" = "time"
"paths./streamsets/{webId}/interpolatedattimes.get.parameters[1].required" = true
"paths./streamsets/{webId}/interpolatedattimes.get.parameters[1].type" = "array"
"paths./streamsets/{webId}/interpolatedattimes.get.parameters[2].description" = "Specify that included attributes must have this category. The default is no category filter."
"paths./streamsets/{webId}/interpolatedattimes.get.parameters[2].in" = "query"
"paths./streamsets/{webId}/interpolatedattimes.get.parameters[2].name" = "categoryName"
"paths./streamsets/{webId}/interpolatedattimes.get.parameters[2].required" = false
"paths./streamsets/{webId}/interpolatedattimes.get.parameters[2].type" = "string"
"paths./streamsets/{webId}/interpolatedattimes.get.parameters[3].description" = "An optional string containing a filter expression. Expression variables are relative to the data point. Use '.' to reference the containing attribute. If the attribute does not support filtering, the filter will be ignored. The default is no filtering."
"paths./streamsets/{webId}/interpolatedattimes.get.parameters[3].in" = "query"
"paths./streamsets/{webId}/interpolatedattimes.get.parameters[3].name" = "filterExpression"
"paths./streamsets/{webId}/interpolatedattimes.get.parameters[3].required" = false
"paths./streamsets/{webId}/interpolatedattimes.get.parameters[3].type" = "string"
"paths./streamsets/{webId}/interpolatedattimes.get.parameters[4].description" = "Specify 'true' to indicate that values which fail the filter criteria are present in the returned data at the times where they occurred with a value set to a 'Filtered' enumeration value with bad status. Repeated consecutive failures are omitted."
"paths./streamsets/{webId}/interpolatedattimes.get.parameters[4].in" = "query"
"paths./streamsets/{webId}/interpolatedattimes.get.parameters[4].name" = "includeFilteredValues"
"paths./streamsets/{webId}/interpolatedattimes.get.parameters[4].required" = false
"paths./streamsets/{webId}/interpolatedattimes.get.parameters[4].type" = "boolean"
"paths./streamsets/{webId}/interpolatedattimes.get.parameters[5].description" = "The name query string used for filtering attributes. The default is no filter."
"paths./streamsets/{webId}/interpolatedattimes.get.parameters[5].in" = "query"
"paths./streamsets/{webId}/interpolatedattimes.get.parameters[5].name" = "nameFilter"
"paths./streamsets/{webId}/interpolatedattimes.get.parameters[5].required" = false
"paths./streamsets/{webId}/interpolatedattimes.get.parameters[5].type" = "string"
"paths./streamsets/{webId}/interpolatedattimes.get.parameters[6].description" = "Specifies if the search should include attributes nested further than the immediate attributes of the searchRoot. The default is 'false'."
"paths./streamsets/{webId}/interpolatedattimes.get.parameters[6].in" = "query"
"paths./streamsets/{webId}/interpolatedattimes.get.parameters[6].name" = "searchFullHierarchy"
"paths./streamsets/{webId}/interpolatedattimes.get.parameters[6].required" = false
"paths./streamsets/{webId}/interpolatedattimes.get.parameters[6].type" = "boolean"
"paths./streamsets/{webId}/interpolatedattimes.get.parameters[7].description" = "List of fields to be returned in the response, separated by semicolons (;). If this parameter is not specified, all available fields will be returned."
"paths./streamsets/{webId}/interpolatedattimes.get.parameters[7].in" = "query"
"paths./streamsets/{webId}/interpolatedattimes.get.parameters[7].name" = "selectedFields"
"paths./streamsets/{webId}/interpolatedattimes.get.parameters[7].required" = false
"paths./streamsets/{webId}/interpolatedattimes.get.parameters[7].type" = "string"
"paths./streamsets/{webId}/interpolatedattimes.get.parameters[8].description" = "Specified if the search should include attributes with the Excluded property set. The default is 'false'."
"paths./streamsets/{webId}/interpolatedattimes.get.parameters[8].in" = "query"
"paths./streamsets/{webId}/interpolatedattimes.get.parameters[8].name" = "showExcluded"
"paths./streamsets/{webId}/interpolatedattimes.get.parameters[8].required" = false
"paths./streamsets/{webId}/interpolatedattimes.get.parameters[8].type" = "boolean"
"paths./streamsets/{webId}/interpolatedattimes.get.parameters[9].description" = "Specified if the search should include attributes with the Hidden property set. The default is 'false'."
"paths./streamsets/{webId}/interpolatedattimes.get.parameters[9].in" = "query"
"paths./streamsets/{webId}/interpolatedattimes.get.parameters[9].name" = "showHidden"
"paths./streamsets/{webId}/interpolatedattimes.get.parameters[9].required" = false
"paths./streamsets/{webId}/interpolatedattimes.get.parameters[9].type" = "boolean"
"paths./streamsets/{webId}/interpolatedattimes.get.responses.200.description" = "Interpolated values of the streams that meet the specified conditions."
"paths./streamsets/{webId}/interpolatedattimes.get.responses.200.schema.$ref" = "#/definitions/Items[StreamValues]"
"paths./streamsets/{webId}/interpolatedattimes.get.responses.400.description" = "The request was malformed."
"paths./streamsets/{webId}/interpolatedattimes.get.responses.400.schema.$ref" = "#/definitions/Errors"
"paths./streamsets/{webId}/interpolatedattimes.get.responses.502.description" = "The request was cancelled."
"paths./streamsets/{webId}/interpolatedattimes.get.responses.502.schema.$ref" = "#/definitions/Errors"
"paths./streamsets/{webId}/interpolatedattimes.get.summary" = "Returns interpolated values of attributes for an element, event frame or attribute at the specified times."
"paths./streamsets/{webId}/interpolatedattimes.get.tags.length" = 1
"paths./streamsets/{webId}/interpolatedattimes.get.tags[0]" = "StreamSet"
"paths./streamsets/{webId}/plot.get.consumes.length" = 0
"paths./streamsets/{webId}/plot.get.deprecated" = false
"paths./streamsets/{webId}/plot.get.description" = "For each interval, the data available is examined and significant values are returned. Each interval can produce up to 5 values if they are unique, the first value in the interval, the last value, the highest value, the lowest value and at most one exceptional point (bad status or digital state)."
"paths./streamsets/{webId}/plot.get.operationId" = "StreamSet_GetPlot"
"paths./streamsets/{webId}/plot.get.parameters.length" = 12
"paths./streamsets/{webId}/plot.get.parameters[0].description" = "The ID of an element, event frame or attribute, which is the base element or parent of all the stream attributes."
"paths./streamsets/{webId}/plot.get.parameters[0].in" = "path"
"paths./streamsets/{webId}/plot.get.parameters[0].name" = "webId"
"paths./streamsets/{webId}/plot.get.parameters[0].required" = true
"paths./streamsets/{webId}/plot.get.parameters[0].type" = "string"
"paths./streamsets/{webId}/plot.get.parameters[10].description" = "Specify that included attributes must be members of this template. The default is no template filter."
"paths./streamsets/{webId}/plot.get.parameters[10].in" = "query"
"paths./streamsets/{webId}/plot.get.parameters[10].name" = "templateName"
"paths./streamsets/{webId}/plot.get.parameters[10].required" = false
"paths./streamsets/{webId}/plot.get.parameters[10].type" = "string"
"paths./streamsets/{webId}/plot.get.parameters[11].description" = "The time zone in which the time string will be interpreted. This parameter will be ignored if a time zone is specified in the time string. If no time zone is specified in either places, the PI Web API server time zone will be used."
"paths./streamsets/{webId}/plot.get.parameters[11].in" = "query"
"paths./streamsets/{webId}/plot.get.parameters[11].name" = "timeZone"
"paths./streamsets/{webId}/plot.get.parameters[11].required" = false
"paths./streamsets/{webId}/plot.get.parameters[11].type" = "string"
"paths./streamsets/{webId}/plot.get.parameters[1].description" = "Specify that included attributes must have this category. The default is no category filter."
"paths./streamsets/{webId}/plot.get.parameters[1].in" = "query"
"paths./streamsets/{webId}/plot.get.parameters[1].name" = "categoryName"
"paths./streamsets/{webId}/plot.get.parameters[1].required" = false
"paths./streamsets/{webId}/plot.get.parameters[1].type" = "string"
"paths./streamsets/{webId}/plot.get.parameters[2].description" = "An optional end time. The default is '*' for element attributes and points. For event frame attributes, the default is the event frame's end time, or '*' if that is not set. Note that if endTime is earlier than startTime, the resulting values will be in time-descending order."
"paths./streamsets/{webId}/plot.get.parameters[2].in" = "query"
"paths./streamsets/{webId}/plot.get.parameters[2].name" = "endTime"
"paths./streamsets/{webId}/plot.get.parameters[2].required" = false
"paths./streamsets/{webId}/plot.get.parameters[2].type" = "string"
"paths./streamsets/{webId}/plot.get.parameters[3].description" = "The number of intervals to plot over. Typically, this would be the number of horizontal pixels in the trend. The default is '24'. For each interval, the data available is examined and significant values are returned. Each interval can produce up to 5 values if they are unique, the first value in the interval, the last value, the highest value, the lowest value and at most one exceptional point (bad status or digital state)."
"paths./streamsets/{webId}/plot.get.parameters[3].in" = "query"
"paths./streamsets/{webId}/plot.get.parameters[3].name" = "intervals"
"paths./streamsets/{webId}/plot.get.parameters[3].required" = false
"paths./streamsets/{webId}/plot.get.parameters[3].type" = "integer"
"paths./streamsets/{webId}/plot.get.parameters[4].description" = "The name query string used for filtering attributes. The default is no filter."
"paths./streamsets/{webId}/plot.get.parameters[4].in" = "query"
"paths./streamsets/{webId}/plot.get.parameters[4].name" = "nameFilter"
"paths./streamsets/{webId}/plot.get.parameters[4].required" = false
"paths./streamsets/{webId}/plot.get.parameters[4].type" = "string"
"paths./streamsets/{webId}/plot.get.parameters[5].description" = "Specifies if the search should include attributes nested further than the immediate attributes of the searchRoot. The default is 'false'."
"paths./streamsets/{webId}/plot.get.parameters[5].in" = "query"
"paths./streamsets/{webId}/plot.get.parameters[5].name" = "searchFullHierarchy"
"paths./streamsets/{webId}/plot.get.parameters[5].required" = false
"paths./streamsets/{webId}/plot.get.parameters[5].type" = "boolean"
"paths./streamsets/{webId}/plot.get.parameters[6].description" = "List of fields to be returned in the response, separated by semicolons (;). If this parameter is not specified, all available fields will be returned."
"paths./streamsets/{webId}/plot.get.parameters[6].in" = "query"
"paths./streamsets/{webId}/plot.get.parameters[6].name" = "selectedFields"
"paths./streamsets/{webId}/plot.get.parameters[6].required" = false
"paths./streamsets/{webId}/plot.get.parameters[6].type" = "string"
"paths./streamsets/{webId}/plot.get.parameters[7].description" = "Specified if the search should include attributes with the Excluded property set. The default is 'false'."
"paths./streamsets/{webId}/plot.get.parameters[7].in" = "query"
"paths./streamsets/{webId}/plot.get.parameters[7].name" = "showExcluded"
"paths./streamsets/{webId}/plot.get.parameters[7].required" = false
"paths./streamsets/{webId}/plot.get.parameters[7].type" = "boolean"
"paths./streamsets/{webId}/plot.get.parameters[8].description" = "Specified if the search should include attributes with the Hidden property set. The default is 'false'."
"paths./streamsets/{webId}/plot.get.parameters[8].in" = "query"
"paths./streamsets/{webId}/plot.get.parameters[8].name" = "showHidden"
"paths./streamsets/{webId}/plot.get.parameters[8].required" = false
"paths./streamsets/{webId}/plot.get.parameters[8].type" = "boolean"
"paths./streamsets/{webId}/plot.get.parameters[9].description" = "An optional start time. The default is '*-1d' for element attributes and points. For event frame attributes, the default is the event frame's start time, or '*-1d' if that is not set."
"paths./streamsets/{webId}/plot.get.parameters[9].in" = "query"
"paths./streamsets/{webId}/plot.get.parameters[9].name" = "startTime"
"paths./streamsets/{webId}/plot.get.parameters[9].required" = false
"paths./streamsets/{webId}/plot.get.parameters[9].type" = "string"
"paths./streamsets/{webId}/plot.get.responses.200.description" = "Plot values of the streams that meet the specified conditions."
"paths./streamsets/{webId}/plot.get.responses.200.schema.$ref" = "#/definitions/Items[StreamValues]"
"paths./streamsets/{webId}/plot.get.responses.409.description" = "Unsupported operation on the given AF object."
"paths./streamsets/{webId}/plot.get.responses.409.schema.$ref" = "#/definitions/Errors"
"paths./streamsets/{webId}/plot.get.summary" = "Returns values of attributes for an element, event frame or attribute over the specified time range suitable for plotting over the number of intervals (typically represents pixels)."
"paths./streamsets/{webId}/plot.get.tags.length" = 1
"paths./streamsets/{webId}/plot.get.tags[0]" = "StreamSet"
"paths./streamsets/{webId}/recorded.get.consumes.length" = 0
"paths./streamsets/{webId}/recorded.get.deprecated" = false
"paths./streamsets/{webId}/recorded.get.operationId" = "StreamSet_GetRecorded"
"paths./streamsets/{webId}/recorded.get.parameters.length" = 15
"paths./streamsets/{webId}/recorded.get.parameters[0].description" = "The ID of an element, event frame or attribute, which is the base element or parent of all the stream attributes."
"paths./streamsets/{webId}/recorded.get.parameters[0].in" = "path"
"paths./streamsets/{webId}/recorded.get.parameters[0].name" = "webId"
"paths./streamsets/{webId}/recorded.get.parameters[0].required" = true
"paths./streamsets/{webId}/recorded.get.parameters[0].type" = "string"
"paths./streamsets/{webId}/recorded.get.parameters[10].description" = "Specified if the search should include attributes with the Excluded property set. The default is 'false'."
"paths./streamsets/{webId}/recorded.get.parameters[10].in" = "query"
"paths./streamsets/{webId}/recorded.get.parameters[10].name" = "showExcluded"
"paths./streamsets/{webId}/recorded.get.parameters[10].required" = false
"paths./streamsets/{webId}/recorded.get.parameters[10].type" = "boolean"
"paths./streamsets/{webId}/recorded.get.parameters[11].description" = "Specified if the search should include attributes with the Hidden property set. The default is 'false'."
"paths./streamsets/{webId}/recorded.get.parameters[11].in" = "query"
"paths./streamsets/{webId}/recorded.get.parameters[11].name" = "showHidden"
"paths./streamsets/{webId}/recorded.get.parameters[11].required" = false
"paths./streamsets/{webId}/recorded.get.parameters[11].type" = "boolean"
"paths./streamsets/{webId}/recorded.get.parameters[12].description" = "An optional start time. The default is '*-1d' for element attributes and points. For event frame attributes, the default is the event frame's start time, or '*-1d' if that is not set."
"paths./streamsets/{webId}/recorded.get.parameters[12].in" = "query"
"paths./streamsets/{webId}/recorded.get.parameters[12].name" = "startTime"
"paths./streamsets/{webId}/recorded.get.parameters[12].required" = false
"paths./streamsets/{webId}/recorded.get.parameters[12].type" = "string"
"paths./streamsets/{webId}/recorded.get.parameters[13].description" = "Specify that included attributes must be members of this template. The default is no template filter."
"paths./streamsets/{webId}/recorded.get.parameters[13].in" = "query"
"paths./streamsets/{webId}/recorded.get.parameters[13].name" = "templateName"
"paths./streamsets/{webId}/recorded.get.parameters[13].required" = false
"paths./streamsets/{webId}/recorded.get.parameters[13].type" = "string"
"paths./streamsets/{webId}/recorded.get.parameters[14].description" = "The time zone in which the time string will be interpreted. This parameter will be ignored if a time zone is specified in the time string. If no time zone is specified in either places, the PI Web API server time zone will be used."
"paths./streamsets/{webId}/recorded.get.parameters[14].in" = "query"
"paths./streamsets/{webId}/recorded.get.parameters[14].name" = "timeZone"
"paths./streamsets/{webId}/recorded.get.parameters[14].required" = false
"paths./streamsets/{webId}/recorded.get.parameters[14].type" = "string"
"paths./streamsets/{webId}/recorded.get.parameters[1].description" = "An optional value that determines how the times and values of the returned end points are determined. The default is 'Inside'."
"paths./streamsets/{webId}/recorded.get.parameters[1].in" = "query"
"paths./streamsets/{webId}/recorded.get.parameters[1].name" = "boundaryType"
"paths./streamsets/{webId}/recorded.get.parameters[1].required" = false
"paths./streamsets/{webId}/recorded.get.parameters[1].type" = "string"
"paths./streamsets/{webId}/recorded.get.parameters[2].description" = "Specify that included attributes must have this category. The default is no category filter."
"paths./streamsets/{webId}/recorded.get.parameters[2].in" = "query"
"paths./streamsets/{webId}/recorded.get.parameters[2].name" = "categoryName"
"paths./streamsets/{webId}/recorded.get.parameters[2].required" = false
"paths./streamsets/{webId}/recorded.get.parameters[2].type" = "string"
"paths./streamsets/{webId}/recorded.get.parameters[3].description" = "An optional end time. The default is '*' for element attributes and points. For event frame attributes, the default is the event frame's end time, or '*' if that is not set. Note that if endTime is earlier than startTime, the resulting values will be in time-descending order."
"paths./streamsets/{webId}/recorded.get.parameters[3].in" = "query"
"paths./streamsets/{webId}/recorded.get.parameters[3].name" = "endTime"
"paths./streamsets/{webId}/recorded.get.parameters[3].required" = false
"paths./streamsets/{webId}/recorded.get.parameters[3].type" = "string"
"paths./streamsets/{webId}/recorded.get.parameters[4].description" = "An optional string containing a filter expression. Expression variables are relative to the data point. Use '.' to reference the containing attribute. The default is no filtering."
"paths./streamsets/{webId}/recorded.get.parameters[4].in" = "query"
"paths./streamsets/{webId}/recorded.get.parameters[4].name" = "filterExpression"
"paths./streamsets/{webId}/recorded.get.parameters[4].required" = false
"paths./streamsets/{webId}/recorded.get.parameters[4].type" = "string"
"paths./streamsets/{webId}/recorded.get.parameters[5].description" = "Specify 'true' to indicate that values which fail the filter criteria are present in the returned data at the times where they occurred with a value set to a 'Filtered' enumeration value with bad status. Repeated consecutive failures are omitted."
"paths./streamsets/{webId}/recorded.get.parameters[5].in" = "query"
"paths./streamsets/{webId}/recorded.get.parameters[5].name" = "includeFilteredValues"
"paths./streamsets/{webId}/recorded.get.parameters[5].required" = false
"paths./streamsets/{webId}/recorded.get.parameters[5].type" = "boolean"
"paths./streamsets/{webId}/recorded.get.parameters[6].description" = "The maximum number of values to be returned. The default is 1000."
"paths./streamsets/{webId}/recorded.get.parameters[6].in" = "query"
"paths./streamsets/{webId}/recorded.get.parameters[6].name" = "maxCount"
"paths./streamsets/{webId}/recorded.get.parameters[6].required" = false
"paths./streamsets/{webId}/recorded.get.parameters[6].type" = "integer"
"paths./streamsets/{webId}/recorded.get.parameters[7].description" = "The name query string used for filtering attributes. The default is no filter."
"paths./streamsets/{webId}/recorded.get.parameters[7].in" = "query"
"paths./streamsets/{webId}/recorded.get.parameters[7].name" = "nameFilter"
"paths./streamsets/{webId}/recorded.get.parameters[7].required" = false
"paths./streamsets/{webId}/recorded.get.parameters[7].type" = "string"
"paths./streamsets/{webId}/recorded.get.parameters[8].description" = "Specifies if the search should include attributes nested further than the immediate attributes of the searchRoot. The default is 'false'."
"paths./streamsets/{webId}/recorded.get.parameters[8].in" = "query"
"paths./streamsets/{webId}/recorded.get.parameters[8].name" = "searchFullHierarchy"
"paths./streamsets/{webId}/recorded.get.parameters[8].required" = false
"paths./streamsets/{webId}/recorded.get.parameters[8].type" = "boolean"
"paths./streamsets/{webId}/recorded.get.parameters[9].description" = "List of fields to be returned in the response, separated by semicolons (;). If this parameter is not specified, all available fields will be returned."
"paths./streamsets/{webId}/recorded.get.parameters[9].in" = "query"
"paths./streamsets/{webId}/recorded.get.parameters[9].name" = "selectedFields"
"paths./streamsets/{webId}/recorded.get.parameters[9].required" = false
"paths./streamsets/{webId}/recorded.get.parameters[9].type" = "string"
"paths./streamsets/{webId}/recorded.get.responses.200.description" = "Recorded values of the streams that meet the specified conditions."
"paths./streamsets/{webId}/recorded.get.responses.200.schema.$ref" = "#/definitions/Items[StreamValues]"
"paths./streamsets/{webId}/recorded.get.responses.409.description" = "Unsupported operation on the given AF object."
"paths./streamsets/{webId}/recorded.get.responses.409.schema.$ref" = "#/definitions/Errors"
"paths./streamsets/{webId}/recorded.get.summary" = "Returns recorded values of the attributes for an element, event frame, or attribute."
"paths./streamsets/{webId}/recorded.get.tags.length" = 1
"paths./streamsets/{webId}/recorded.get.tags[0]" = "StreamSet"
"paths./streamsets/{webId}/recorded.post.consumes.length" = 2
"paths./streamsets/{webId}/recorded.post.consumes[0]" = "application/json"
"paths./streamsets/{webId}/recorded.post.consumes[1]" = "text/json"
"paths./streamsets/{webId}/recorded.post.deprecated" = false
"paths./streamsets/{webId}/recorded.post.operationId" = "StreamSet_UpdateValues"
"paths./streamsets/{webId}/recorded.post.parameters.length" = 4
"paths./streamsets/{webId}/recorded.post.parameters[0].description" = "The ID of the parent element, event frame, or attribute. Attributes specified in the body must be descendants of the specified object."
"paths./streamsets/{webId}/recorded.post.parameters[0].in" = "path"
"paths./streamsets/{webId}/recorded.post.parameters[0].name" = "webId"
"paths./streamsets/{webId}/recorded.post.parameters[0].required" = true
"paths./streamsets/{webId}/recorded.post.parameters[0].type" = "string"
"paths./streamsets/{webId}/recorded.post.parameters[1].description" = "The values to add or update."
"paths./streamsets/{webId}/recorded.post.parameters[1].in" = "body"
"paths./streamsets/{webId}/recorded.post.parameters[1].name" = "values"
"paths./streamsets/{webId}/recorded.post.parameters[1].required" = true
"paths./streamsets/{webId}/recorded.post.parameters[1].schema.items.$ref" = "#/definitions/StreamValues"
"paths./streamsets/{webId}/recorded.post.parameters[1].schema.type" = "array"
"paths./streamsets/{webId}/recorded.post.parameters[2].description" = "The desired AFBufferOption. The default is 'BufferIfPossible'."
"paths./streamsets/{webId}/recorded.post.parameters[2].in" = "query"
"paths./streamsets/{webId}/recorded.post.parameters[2].name" = "bufferOption"
"paths./streamsets/{webId}/recorded.post.parameters[2].required" = false
"paths./streamsets/{webId}/recorded.post.parameters[2].type" = "string"
"paths./streamsets/{webId}/recorded.post.parameters[3].description" = "The desired AFUpdateOption. The default is 'Replace'."
"paths./streamsets/{webId}/recorded.post.parameters[3].in" = "query"
"paths./streamsets/{webId}/recorded.post.parameters[3].name" = "updateOption"
"paths./streamsets/{webId}/recorded.post.parameters[3].required" = false
"paths./streamsets/{webId}/recorded.post.parameters[3].type" = "string"
"paths./streamsets/{webId}/recorded.post.responses.200.description" = "All updates executed successfully."
"paths./streamsets/{webId}/recorded.post.responses.200.schema.$ref" = "#/definitions/Items[Items[Substatus]]"
"paths./streamsets/{webId}/recorded.post.responses.207.description" = "The operation was a partial success. The response body contains substatuses and errors in the same order as the supplied values."
"paths./streamsets/{webId}/recorded.post.responses.207.schema.$ref" = "#/definitions/Items[Items[Substatus]]"
"paths./streamsets/{webId}/recorded.post.responses.409.description" = "Unsupported operation on the given AF object."
"paths./streamsets/{webId}/recorded.post.responses.409.schema.$ref" = "#/definitions/Errors"
"paths./streamsets/{webId}/recorded.post.summary" = "Updates multiple values for the specified streams."
"paths./streamsets/{webId}/recorded.post.tags.length" = 1
"paths./streamsets/{webId}/recorded.post.tags[0]" = "StreamSet"
"paths./streamsets/{webId}/recordedattime.get.consumes.length" = 0
"paths./streamsets/{webId}/recordedattime.get.deprecated" = false
"paths./streamsets/{webId}/recordedattime.get.operationId" = "StreamSet_GetRecordedAtTime"
"paths./streamsets/{webId}/recordedattime.get.parameters.length" = 11
"paths./streamsets/{webId}/recordedattime.get.parameters[0].description" = "The ID of an element, event frame or attribute, which is the base element or parent of all the stream attributes."
"paths./streamsets/{webId}/recordedattime.get.parameters[0].in" = "path"
"paths./streamsets/{webId}/recordedattime.get.parameters[0].name" = "webId"
"paths./streamsets/{webId}/recordedattime.get.parameters[0].required" = true
"paths./streamsets/{webId}/recordedattime.get.parameters[0].type" = "string"
"paths./streamsets/{webId}/recordedattime.get.parameters[10].description" = "The time zone in which the time string will be interpreted. This parameter will be ignored if a time zone is specified in the time string. If no time zone is specified in either places, the PI Web API server time zone will be used."
"paths./streamsets/{webId}/recordedattime.get.parameters[10].in" = "query"
"paths./streamsets/{webId}/recordedattime.get.parameters[10].name" = "timeZone"
"paths./streamsets/{webId}/recordedattime.get.parameters[10].required" = false
"paths./streamsets/{webId}/recordedattime.get.parameters[10].type" = "string"
"paths./streamsets/{webId}/recordedattime.get.parameters[1].description" = "The timestamp at which the values are desired."
"paths./streamsets/{webId}/recordedattime.get.parameters[1].in" = "query"
"paths./streamsets/{webId}/recordedattime.get.parameters[1].name" = "time"
"paths./streamsets/{webId}/recordedattime.get.parameters[1].required" = true
"paths./streamsets/{webId}/recordedattime.get.parameters[1].type" = "string"
"paths./streamsets/{webId}/recordedattime.get.parameters[2].description" = "Specify that included attributes must have this category. The default is no category filter."
"paths./streamsets/{webId}/recordedattime.get.parameters[2].in" = "query"
"paths./streamsets/{webId}/recordedattime.get.parameters[2].name" = "categoryName"
"paths./streamsets/{webId}/recordedattime.get.parameters[2].required" = false
"paths./streamsets/{webId}/recordedattime.get.parameters[2].type" = "string"
"paths./streamsets/{webId}/recordedattime.get.parameters[3].description" = "The name query string used for filtering attributes. The default is no filter."
"paths./streamsets/{webId}/recordedattime.get.parameters[3].in" = "query"
"paths./streamsets/{webId}/recordedattime.get.parameters[3].name" = "nameFilter"
"paths./streamsets/{webId}/recordedattime.get.parameters[3].required" = false
"paths./streamsets/{webId}/recordedattime.get.parameters[3].type" = "string"
"paths./streamsets/{webId}/recordedattime.get.parameters[4].description" = "An optional value that determines the values to return when values don't exist at the exact time specified. The default is 'Auto'."
"paths./streamsets/{webId}/recordedattime.get.parameters[4].in" = "query"
"paths./streamsets/{webId}/recordedattime.get.parameters[4].name" = "retrievalMode"
"paths./streamsets/{webId}/recordedattime.get.parameters[4].required" = false
"paths./streamsets/{webId}/recordedattime.get.parameters[4].type" = "string"
"paths./streamsets/{webId}/recordedattime.get.parameters[5].description" = "Specifies if the search should include attributes nested further than the immediate attributes of the searchRoot. The default is 'false'."
"paths./streamsets/{webId}/recordedattime.get.parameters[5].in" = "query"
"paths./streamsets/{webId}/recordedattime.get.parameters[5].name" = "searchFullHierarchy"
"paths./streamsets/{webId}/recordedattime.get.parameters[5].required" = false
"paths./streamsets/{webId}/recordedattime.get.parameters[5].type" = "boolean"
"paths./streamsets/{webId}/recordedattime.get.parameters[6].description" = "List of fields to be returned in the response, separated by semicolons (;). If this parameter is not specified, all available fields will be returned."
"paths./streamsets/{webId}/recordedattime.get.parameters[6].in" = "query"
"paths./streamsets/{webId}/recordedattime.get.parameters[6].name" = "selectedFields"
"paths./streamsets/{webId}/recordedattime.get.parameters[6].required" = false
"paths./streamsets/{webId}/recordedattime.get.parameters[6].type" = "string"
"paths./streamsets/{webId}/recordedattime.get.parameters[7].description" = "Specified if the search should include attributes with the Excluded property set. The default is 'false'."
"paths./streamsets/{webId}/recordedattime.get.parameters[7].in" = "query"
"paths./streamsets/{webId}/recordedattime.get.parameters[7].name" = "showExcluded"
"paths./streamsets/{webId}/recordedattime.get.parameters[7].required" = false
"paths./streamsets/{webId}/recordedattime.get.parameters[7].type" = "boolean"
"paths./streamsets/{webId}/recordedattime.get.parameters[8].description" = "Specified if the search should include attributes with the Hidden property set. The default is 'false'."
"paths./streamsets/{webId}/recordedattime.get.parameters[8].in" = "query"
"paths./streamsets/{webId}/recordedattime.get.parameters[8].name" = "showHidden"
"paths./streamsets/{webId}/recordedattime.get.parameters[8].required" = false
"paths./streamsets/{webId}/recordedattime.get.parameters[8].type" = "boolean"
"paths./streamsets/{webId}/recordedattime.get.parameters[9].description" = "Specify that included attributes must be members of this template. The default is no template filter."
"paths./streamsets/{webId}/recordedattime.get.parameters[9].in" = "query"
"paths./streamsets/{webId}/recordedattime.get.parameters[9].name" = "templateName"
"paths./streamsets/{webId}/recordedattime.get.parameters[9].required" = false
"paths./streamsets/{webId}/recordedattime.get.parameters[9].type" = "string"
"paths./streamsets/{webId}/recordedattime.get.responses.200.description" = "Recorded values of the streams that meet the specified conditions."
"paths./streamsets/{webId}/recordedattime.get.responses.200.schema.$ref" = "#/definitions/Items[StreamValues]"
"paths./streamsets/{webId}/recordedattime.get.responses.409.description" = "Unsupported operation on the given AF object."
"paths./streamsets/{webId}/recordedattime.get.responses.409.schema.$ref" = "#/definitions/Errors"
"paths./streamsets/{webId}/recordedattime.get.summary" = "Returns recorded values of the attributes for an element, event frame, or attribute."
"paths./streamsets/{webId}/recordedattime.get.tags.length" = 1
"paths./streamsets/{webId}/recordedattime.get.tags[0]" = "StreamSet"
"paths./streamsets/{webId}/recordedattimes.get.consumes.length" = 0
"paths./streamsets/{webId}/recordedattimes.get.deprecated" = false
"paths./streamsets/{webId}/recordedattimes.get.operationId" = "StreamSet_GetRecordedAtTimes"
"paths./streamsets/{webId}/recordedattimes.get.parameters.length" = 12
"paths./streamsets/{webId}/recordedattimes.get.parameters[0].description" = "The ID of an element, event frame or attribute, which is the base element or parent of all the stream attributes."
"paths./streamsets/{webId}/recordedattimes.get.parameters[0].in" = "path"
"paths./streamsets/{webId}/recordedattimes.get.parameters[0].name" = "webId"
"paths./streamsets/{webId}/recordedattimes.get.parameters[0].required" = true
"paths./streamsets/{webId}/recordedattimes.get.parameters[0].type" = "string"
"paths./streamsets/{webId}/recordedattimes.get.parameters[10].description" = "Specify that included attributes must be members of this template. The default is no template filter."
"paths./streamsets/{webId}/recordedattimes.get.parameters[10].in" = "query"
"paths./streamsets/{webId}/recordedattimes.get.parameters[10].name" = "templateName"
"paths./streamsets/{webId}/recordedattimes.get.parameters[10].required" = false
"paths./streamsets/{webId}/recordedattimes.get.parameters[10].type" = "string"
"paths./streamsets/{webId}/recordedattimes.get.parameters[11].description" = "The time zone in which the time string will be interpreted. This parameter will be ignored if a time zone is specified in the time string. If no time zone is specified in either places, the PI Web API server time zone will be used."
"paths./streamsets/{webId}/recordedattimes.get.parameters[11].in" = "query"
"paths./streamsets/{webId}/recordedattimes.get.parameters[11].name" = "timeZone"
"paths./streamsets/{webId}/recordedattimes.get.parameters[11].required" = false
"paths./streamsets/{webId}/recordedattimes.get.parameters[11].type" = "string"
"paths./streamsets/{webId}/recordedattimes.get.parameters[1].collectionFormat" = "multi"
"paths./streamsets/{webId}/recordedattimes.get.parameters[1].description" = "The timestamp at which to retrieve a recorded value. Multiple timestamps may be specified with multiple instances of the parameter."
"paths./streamsets/{webId}/recordedattimes.get.parameters[1].in" = "query"
"paths./streamsets/{webId}/recordedattimes.get.parameters[1].items.type" = "string"
"paths./streamsets/{webId}/recordedattimes.get.parameters[1].name" = "time"
"paths./streamsets/{webId}/recordedattimes.get.parameters[1].required" = true
"paths./streamsets/{webId}/recordedattimes.get.parameters[1].type" = "array"
"paths./streamsets/{webId}/recordedattimes.get.parameters[2].description" = "Specify that included attributes must have this category. The default is no category filter."
"paths./streamsets/{webId}/recordedattimes.get.parameters[2].in" = "query"
"paths./streamsets/{webId}/recordedattimes.get.parameters[2].name" = "categoryName"
"paths./streamsets/{webId}/recordedattimes.get.parameters[2].required" = false
"paths./streamsets/{webId}/recordedattimes.get.parameters[2].type" = "string"
"paths./streamsets/{webId}/recordedattimes.get.parameters[3].description" = "The name query string used for filtering attributes. The default is no filter."
"paths./streamsets/{webId}/recordedattimes.get.parameters[3].in" = "query"
"paths./streamsets/{webId}/recordedattimes.get.parameters[3].name" = "nameFilter"
"paths./streamsets/{webId}/recordedattimes.get.parameters[3].required" = false
"paths./streamsets/{webId}/recordedattimes.get.parameters[3].type" = "string"
"paths./streamsets/{webId}/recordedattimes.get.parameters[4].description" = "An optional value that determines the values to return when values don't exist at the exact time specified. The default is 'Auto'."
"paths./streamsets/{webId}/recordedattimes.get.parameters[4].in" = "query"
"paths./streamsets/{webId}/recordedattimes.get.parameters[4].name" = "retrievalMode"
"paths./streamsets/{webId}/recordedattimes.get.parameters[4].required" = false
"paths./streamsets/{webId}/recordedattimes.get.parameters[4].type" = "string"
"paths./streamsets/{webId}/recordedattimes.get.parameters[5].description" = "Specifies if the search should include attributes nested further than the immediate attributes of the searchRoot. The default is 'false'."
"paths./streamsets/{webId}/recordedattimes.get.parameters[5].in" = "query"
"paths./streamsets/{webId}/recordedattimes.get.parameters[5].name" = "searchFullHierarchy"
"paths./streamsets/{webId}/recordedattimes.get.parameters[5].required" = false
"paths./streamsets/{webId}/recordedattimes.get.parameters[5].type" = "boolean"
"paths./streamsets/{webId}/recordedattimes.get.parameters[6].description" = "List of fields to be returned in the response, separated by semicolons (;). If this parameter is not specified, all available fields will be returned."
"paths./streamsets/{webId}/recordedattimes.get.parameters[6].in" = "query"
"paths./streamsets/{webId}/recordedattimes.get.parameters[6].name" = "selectedFields"
"paths./streamsets/{webId}/recordedattimes.get.parameters[6].required" = false
"paths./streamsets/{webId}/recordedattimes.get.parameters[6].type" = "string"
"paths./streamsets/{webId}/recordedattimes.get.parameters[7].description" = "Specified if the search should include attributes with the Excluded property set. The default is 'false'."
"paths./streamsets/{webId}/recordedattimes.get.parameters[7].in" = "query"
"paths./streamsets/{webId}/recordedattimes.get.parameters[7].name" = "showExcluded"
"paths./streamsets/{webId}/recordedattimes.get.parameters[7].required" = false
"paths./streamsets/{webId}/recordedattimes.get.parameters[7].type" = "boolean"
"paths./streamsets/{webId}/recordedattimes.get.parameters[8].description" = "Specified if the search should include attributes with the Hidden property set. The default is 'false'."
"paths./streamsets/{webId}/recordedattimes.get.parameters[8].in" = "query"
"paths./streamsets/{webId}/recordedattimes.get.parameters[8].name" = "showHidden"
"paths./streamsets/{webId}/recordedattimes.get.parameters[8].required" = false
"paths./streamsets/{webId}/recordedattimes.get.parameters[8].type" = "boolean"
"paths./streamsets/{webId}/recordedattimes.get.parameters[9].description" = "The order that the returned collection is sorted. The default is 'Ascending'."
"paths./streamsets/{webId}/recordedattimes.get.parameters[9].in" = "query"
"paths./streamsets/{webId}/recordedattimes.get.parameters[9].name" = "sortOrder"
"paths./streamsets/{webId}/recordedattimes.get.parameters[9].required" = false
"paths./streamsets/{webId}/recordedattimes.get.parameters[9].type" = "string"
"paths./streamsets/{webId}/recordedattimes.get.responses.200.description" = "Recorded values of the streams that meet the specified conditions."
"paths./streamsets/{webId}/recordedattimes.get.responses.200.schema.$ref" = "#/definitions/Items[StreamValues]"
"paths./streamsets/{webId}/recordedattimes.get.responses.400.description" = "The request was malformed."
"paths./streamsets/{webId}/recordedattimes.get.responses.400.schema.$ref" = "#/definitions/Errors"
"paths./streamsets/{webId}/recordedattimes.get.responses.502.description" = "The request was cancelled."
"paths./streamsets/{webId}/recordedattimes.get.responses.502.schema.$ref" = "#/definitions/Errors"
"paths./streamsets/{webId}/recordedattimes.get.summary" = "Returns recorded values of attributes for an element, event frame or attribute at the specified times."
"paths./streamsets/{webId}/recordedattimes.get.tags.length" = 1
"paths./streamsets/{webId}/recordedattimes.get.tags[0]" = "StreamSet"
"paths./streamsets/{webId}/summary.get.consumes.length" = 0
"paths./streamsets/{webId}/summary.get.deprecated" = false
"paths./streamsets/{webId}/summary.get.operationId" = "StreamSet_GetSummaries"
"paths./streamsets/{webId}/summary.get.parameters.length" = 18
"paths./streamsets/{webId}/summary.get.parameters[0].description" = "The ID of an element, event frame or attribute, which is the base element or parent of all the stream attributes."
"paths./streamsets/{webId}/summary.get.parameters[0].in" = "path"
"paths./streamsets/{webId}/summary.get.parameters[0].name" = "webId"
"paths./streamsets/{webId}/summary.get.parameters[0].required" = true
"paths./streamsets/{webId}/summary.get.parameters[0].type" = "string"
"paths./streamsets/{webId}/summary.get.parameters[10].description" = "Specified if the search should include attributes with the Excluded property set. The default is 'false'."
"paths./streamsets/{webId}/summary.get.parameters[10].in" = "query"
"paths./streamsets/{webId}/summary.get.parameters[10].name" = "showExcluded"
"paths./streamsets/{webId}/summary.get.parameters[10].required" = false
"paths./streamsets/{webId}/summary.get.parameters[10].type" = "boolean"
"paths./streamsets/{webId}/summary.get.parameters[11].description" = "Specified if the search should include attributes with the Hidden property set. The default is 'false'."
"paths./streamsets/{webId}/summary.get.parameters[11].in" = "query"
"paths./streamsets/{webId}/summary.get.parameters[11].name" = "showHidden"
"paths./streamsets/{webId}/summary.get.parameters[11].required" = false
"paths./streamsets/{webId}/summary.get.parameters[11].type" = "boolean"
"paths./streamsets/{webId}/summary.get.parameters[12].description" = "An optional start time. The default is '*-1d' for element attributes and points. For event frame attributes, the default is the event frame's start time, or '*-1d' if that is not set."
"paths./streamsets/{webId}/summary.get.parameters[12].in" = "query"
"paths./streamsets/{webId}/summary.get.parameters[12].name" = "startTime"
"paths./streamsets/{webId}/summary.get.parameters[12].required" = false
"paths./streamsets/{webId}/summary.get.parameters[12].type" = "string"
"paths./streamsets/{webId}/summary.get.parameters[13].description" = "The duration of each summary interval."
"paths./streamsets/{webId}/summary.get.parameters[13].in" = "query"
"paths./streamsets/{webId}/summary.get.parameters[13].name" = "summaryDuration"
"paths./streamsets/{webId}/summary.get.parameters[13].required" = false
"paths./streamsets/{webId}/summary.get.parameters[13].type" = "string"
"paths./streamsets/{webId}/summary.get.parameters[14].collectionFormat" = "multi"
"paths./streamsets/{webId}/summary.get.parameters[14].description" = "Specifies the kinds of summaries to produce over the range. The default is 'Total'. Multiple summary types may be specified by using multiple instances of summaryType."
"paths./streamsets/{webId}/summary.get.parameters[14].in" = "query"
"paths./streamsets/{webId}/summary.get.parameters[14].items.type" = "string"
"paths./streamsets/{webId}/summary.get.parameters[14].name" = "summaryType"
"paths./streamsets/{webId}/summary.get.parameters[14].required" = false
"paths./streamsets/{webId}/summary.get.parameters[14].type" = "array"
"paths./streamsets/{webId}/summary.get.parameters[15].description" = "Specify that included attributes must be members of this template. The default is no template filter."
"paths./streamsets/{webId}/summary.get.parameters[15].in" = "query"
"paths./streamsets/{webId}/summary.get.parameters[15].name" = "templateName"
"paths./streamsets/{webId}/summary.get.parameters[15].required" = false
"paths./streamsets/{webId}/summary.get.parameters[15].type" = "string"
"paths./streamsets/{webId}/summary.get.parameters[16].description" = "Specifies how to calculate the timestamp for each interval. The default is 'Auto'."
"paths./streamsets/{webId}/summary.get.parameters[16].in" = "query"
"paths./streamsets/{webId}/summary.get.parameters[16].name" = "timeType"
"paths./streamsets/{webId}/summary.get.parameters[16].required" = false
"paths./streamsets/{webId}/summary.get.parameters[16].type" = "string"
"paths./streamsets/{webId}/summary.get.parameters[17].description" = "The time zone in which the time string will be interpreted. This parameter will be ignored if a time zone is specified in the time string. If no time zone is specified in either places, the PI Web API server time zone will be used."
"paths./streamsets/{webId}/summary.get.parameters[17].in" = "query"
"paths./streamsets/{webId}/summary.get.parameters[17].name" = "timeZone"
"paths./streamsets/{webId}/summary.get.parameters[17].required" = false
"paths./streamsets/{webId}/summary.get.parameters[17].type" = "string"
"paths./streamsets/{webId}/summary.get.parameters[1].description" = "Specifies the method of evaluating the data over the time range. The default is 'TimeWeighted'."
"paths./streamsets/{webId}/summary.get.parameters[1].in" = "query"
"paths./streamsets/{webId}/summary.get.parameters[1].name" = "calculationBasis"
"paths./streamsets/{webId}/summary.get.parameters[1].required" = false
"paths./streamsets/{webId}/summary.get.parameters[1].type" = "string"
"paths./streamsets/{webId}/summary.get.parameters[2].description" = "Specify that included attributes must have this category. The default is no category filter."
"paths./streamsets/{webId}/summary.get.parameters[2].in" = "query"
"paths./streamsets/{webId}/summary.get.parameters[2].name" = "categoryName"
"paths./streamsets/{webId}/summary.get.parameters[2].required" = false
"paths./streamsets/{webId}/summary.get.parameters[2].type" = "string"
"paths./streamsets/{webId}/summary.get.parameters[3].description" = "An optional end time. The default is '*' for element attributes and points. For event frame attributes, the default is the event frame's end time, or '*' if that is not set. Note that if endTime is earlier than startTime, the resulting values will be in time-descending order."
"paths./streamsets/{webId}/summary.get.parameters[3].in" = "query"
"paths./streamsets/{webId}/summary.get.parameters[3].name" = "endTime"
"paths./streamsets/{webId}/summary.get.parameters[3].required" = false
"paths./streamsets/{webId}/summary.get.parameters[3].type" = "string"
"paths./streamsets/{webId}/summary.get.parameters[4].description" = "A string containing a filter expression. Expression variables are relative to the attribute. Use '.' to reference the containing attribute. The default is no filtering."
"paths./streamsets/{webId}/summary.get.parameters[4].in" = "query"
"paths./streamsets/{webId}/summary.get.parameters[4].name" = "filterExpression"
"paths./streamsets/{webId}/summary.get.parameters[4].required" = false
"paths./streamsets/{webId}/summary.get.parameters[4].type" = "string"
"paths./streamsets/{webId}/summary.get.parameters[5].description" = "The name query string used for filtering attributes. The default is no filter."
"paths./streamsets/{webId}/summary.get.parameters[5].in" = "query"
"paths./streamsets/{webId}/summary.get.parameters[5].name" = "nameFilter"
"paths./streamsets/{webId}/summary.get.parameters[5].required" = false
"paths./streamsets/{webId}/summary.get.parameters[5].type" = "string"
"paths./streamsets/{webId}/summary.get.parameters[6].description" = "A time span specifies how often the filter expression is evaluated when computing the summary for an interval, if the sampleType is 'Interval'."
"paths./streamsets/{webId}/summary.get.parameters[6].in" = "query"
"paths./streamsets/{webId}/summary.get.parameters[6].name" = "sampleInterval"
"paths./streamsets/{webId}/summary.get.parameters[6].required" = false
"paths./streamsets/{webId}/summary.get.parameters[6].type" = "string"
"paths./streamsets/{webId}/summary.get.parameters[7].description" = "A flag which specifies one or more summaries to compute for each interval over the time range. The default is 'ExpressionRecordedValues'."
"paths./streamsets/{webId}/summary.get.parameters[7].in" = "query"
"paths./streamsets/{webId}/summary.get.parameters[7].name" = "sampleType"
"paths./streamsets/{webId}/summary.get.parameters[7].required" = false
"paths./streamsets/{webId}/summary.get.parameters[7].type" = "string"
"paths./streamsets/{webId}/summary.get.parameters[8].description" = "Specifies if the search should include attributes nested further than the immediate attributes of the searchRoot. The default is 'false'."
"paths./streamsets/{webId}/summary.get.parameters[8].in" = "query"
"paths./streamsets/{webId}/summary.get.parameters[8].name" = "searchFullHierarchy"
"paths./streamsets/{webId}/summary.get.parameters[8].required" = false
"paths./streamsets/{webId}/summary.get.parameters[8].type" = "boolean"
"paths./streamsets/{webId}/summary.get.parameters[9].description" = "List of fields to be returned in the response, separated by semicolons (;). If this parameter is not specified, all available fields will be returned."
"paths./streamsets/{webId}/summary.get.parameters[9].in" = "query"
"paths./streamsets/{webId}/summary.get.parameters[9].name" = "selectedFields"
"paths./streamsets/{webId}/summary.get.parameters[9].required" = false
"paths./streamsets/{webId}/summary.get.parameters[9].type" = "string"
"paths./streamsets/{webId}/summary.get.responses.200.description" = "Summary values of the streams that meet the specified conditions."
"paths./streamsets/{webId}/summary.get.responses.200.schema.$ref" = "#/definitions/Items[StreamSummaries]"
"paths./streamsets/{webId}/summary.get.responses.409.description" = "Unsupported operation on the given AF object."
"paths./streamsets/{webId}/summary.get.responses.409.schema.$ref" = "#/definitions/Errors"
"paths./streamsets/{webId}/summary.get.summary" = "Returns summary values of the attributes for an element, event frame or attribute."
"paths./streamsets/{webId}/summary.get.tags.length" = 1
"paths./streamsets/{webId}/summary.get.tags[0]" = "StreamSet"
"paths./streamsets/{webId}/value.get.consumes.length" = 0
"paths./streamsets/{webId}/value.get.deprecated" = false
"paths./streamsets/{webId}/value.get.operationId" = "StreamSet_GetValues"
"paths./streamsets/{webId}/value.get.parameters.length" = 10
"paths./streamsets/{webId}/value.get.parameters[0].description" = "The ID of an Element, Event Frame or Attribute, which is the base element or parent of all the stream attributes."
"paths./streamsets/{webId}/value.get.parameters[0].in" = "path"
"paths./streamsets/{webId}/value.get.parameters[0].name" = "webId"
"paths./streamsets/{webId}/value.get.parameters[0].required" = true
"paths./streamsets/{webId}/value.get.parameters[0].type" = "string"
"paths./streamsets/{webId}/value.get.parameters[1].description" = "Specify that included attributes must have this category. The default is no category filter."
"paths./streamsets/{webId}/value.get.parameters[1].in" = "query"
"paths./streamsets/{webId}/value.get.parameters[1].name" = "categoryName"
"paths./streamsets/{webId}/value.get.parameters[1].required" = false
"paths./streamsets/{webId}/value.get.parameters[1].type" = "string"
"paths./streamsets/{webId}/value.get.parameters[2].description" = "The name query string used for filtering attributes. The default is no filter."
"paths./streamsets/{webId}/value.get.parameters[2].in" = "query"
"paths./streamsets/{webId}/value.get.parameters[2].name" = "nameFilter"
"paths./streamsets/{webId}/value.get.parameters[2].required" = false
"paths./streamsets/{webId}/value.get.parameters[2].type" = "string"
"paths./streamsets/{webId}/value.get.parameters[3].description" = "Specifies if the search should include attributes nested further than the immediate attributes of the searchRoot. The default is 'false'."
"paths./streamsets/{webId}/value.get.parameters[3].in" = "query"
"paths./streamsets/{webId}/value.get.parameters[3].name" = "searchFullHierarchy"
"paths./streamsets/{webId}/value.get.parameters[3].required" = false
"paths./streamsets/{webId}/value.get.parameters[3].type" = "boolean"
"paths./streamsets/{webId}/value.get.parameters[4].description" = "List of fields to be returned in the response, separated by semicolons (;). If this parameter is not specified, all available fields will be returned."
"paths./streamsets/{webId}/value.get.parameters[4].in" = "query"
"paths./streamsets/{webId}/value.get.parameters[4].name" = "selectedFields"
"paths./streamsets/{webId}/value.get.parameters[4].required" = false
"paths./streamsets/{webId}/value.get.parameters[4].type" = "string"
"paths./streamsets/{webId}/value.get.parameters[5].description" = "Specified if the search should include attributes with the Excluded property set. The default is 'false'."
"paths./streamsets/{webId}/value.get.parameters[5].in" = "query"
"paths./streamsets/{webId}/value.get.parameters[5].name" = "showExcluded"
"paths./streamsets/{webId}/value.get.parameters[5].required" = false
"paths./streamsets/{webId}/value.get.parameters[5].type" = "boolean"
"paths./streamsets/{webId}/value.get.parameters[6].description" = "Specified if the search should include attributes with the Hidden property set. The default is 'false'."
"paths./streamsets/{webId}/value.get.parameters[6].in" = "query"
"paths./streamsets/{webId}/value.get.parameters[6].name" = "showHidden"
"paths./streamsets/{webId}/value.get.parameters[6].required" = false
"paths./streamsets/{webId}/value.get.parameters[6].type" = "boolean"
"paths./streamsets/{webId}/value.get.parameters[7].description" = "Specify that included attributes must be members of this template. The default is no template filter."
"paths./streamsets/{webId}/value.get.parameters[7].in" = "query"
"paths./streamsets/{webId}/value.get.parameters[7].name" = "templateName"
"paths./streamsets/{webId}/value.get.parameters[7].required" = false
"paths./streamsets/{webId}/value.get.parameters[7].type" = "string"
"paths./streamsets/{webId}/value.get.parameters[8].description" = "An AF time string, which is used as the time context to get stream values if it is provided. By default, it is not specified, and the default time context of the AF object will be used."
"paths./streamsets/{webId}/value.get.parameters[8].in" = "query"
"paths./streamsets/{webId}/value.get.parameters[8].name" = "time"
"paths./streamsets/{webId}/value.get.parameters[8].required" = false
"paths./streamsets/{webId}/value.get.parameters[8].type" = "string"
"paths./streamsets/{webId}/value.get.parameters[9].description" = "The time zone in which the time string will be interpreted. This parameter will be ignored if a time zone is specified in the time string. If no time zone is specified in either places, the PI Web API server time zone will be used."
"paths./streamsets/{webId}/value.get.parameters[9].in" = "query"
"paths./streamsets/{webId}/value.get.parameters[9].name" = "timeZone"
"paths./streamsets/{webId}/value.get.parameters[9].required" = false
"paths./streamsets/{webId}/value.get.parameters[9].type" = "string"
"paths./streamsets/{webId}/value.get.responses.200.description" = "Summary values of the streams that meet the specified conditions."
"paths./streamsets/{webId}/value.get.responses.200.schema.$ref" = "#/definitions/Items[StreamValue]"
"paths./streamsets/{webId}/value.get.responses.409.description" = "Unsupported operation on the given AF object."
"paths./streamsets/{webId}/value.get.responses.409.schema.$ref" = "#/definitions/Errors"
"paths./streamsets/{webId}/value.get.summary" = "Returns values of the attributes for an Element, Event Frame or Attribute at the specified time."
"paths./streamsets/{webId}/value.get.tags.length" = 1
"paths./streamsets/{webId}/value.get.tags[0]" = "StreamSet"
"paths./streamsets/{webId}/value.post.consumes.length" = 2
"paths./streamsets/{webId}/value.post.consumes[0]" = "application/json"
"paths./streamsets/{webId}/value.post.consumes[1]" = "text/json"
"paths./streamsets/{webId}/value.post.deprecated" = false
"paths./streamsets/{webId}/value.post.operationId" = "StreamSet_UpdateValue"
"paths./streamsets/{webId}/value.post.parameters.length" = 4
"paths./streamsets/{webId}/value.post.parameters[0].description" = "The ID of the parent element, event frame, or attribute. Attributes specified in the body must be descendants of the specified object."
"paths./streamsets/{webId}/value.post.parameters[0].in" = "path"
"paths./streamsets/{webId}/value.post.parameters[0].name" = "webId"
"paths./streamsets/{webId}/value.post.parameters[0].required" = true
"paths./streamsets/{webId}/value.post.parameters[0].type" = "string"
"paths./streamsets/{webId}/value.post.parameters[1].description" = "The values to add or update."
"paths./streamsets/{webId}/value.post.parameters[1].in" = "body"
"paths./streamsets/{webId}/value.post.parameters[1].name" = "values"
"paths./streamsets/{webId}/value.post.parameters[1].required" = true
"paths./streamsets/{webId}/value.post.parameters[1].schema.items.$ref" = "#/definitions/StreamValue"
"paths./streamsets/{webId}/value.post.parameters[1].schema.type" = "array"
"paths./streamsets/{webId}/value.post.parameters[2].description" = "The desired AFBufferOption. The default is 'BufferIfPossible'."
"paths./streamsets/{webId}/value.post.parameters[2].in" = "query"
"paths./streamsets/{webId}/value.post.parameters[2].name" = "bufferOption"
"paths./streamsets/{webId}/value.post.parameters[2].required" = false
"paths./streamsets/{webId}/value.post.parameters[2].type" = "string"
"paths./streamsets/{webId}/value.post.parameters[3].description" = "The desired AFUpdateOption. The default is 'Replace'."
"paths./streamsets/{webId}/value.post.parameters[3].in" = "query"
"paths./streamsets/{webId}/value.post.parameters[3].name" = "updateOption"
"paths./streamsets/{webId}/value.post.parameters[3].required" = false
"paths./streamsets/{webId}/value.post.parameters[3].type" = "string"
"paths./streamsets/{webId}/value.post.responses.200.description" = "All updates executed successfully."
"paths./streamsets/{webId}/value.post.responses.200.schema.$ref" = "#/definitions/Items[Substatus]"
"paths./streamsets/{webId}/value.post.responses.207.description" = "The operation was a partial success. The response body contains substatuses and errors in the same order as the supplied values."
"paths./streamsets/{webId}/value.post.responses.207.schema.$ref" = "#/definitions/Items[Substatus]"
"paths./streamsets/{webId}/value.post.responses.409.description" = "Unsupported operation on the given AF object."
"paths./streamsets/{webId}/value.post.responses.409.schema.$ref" = "#/definitions/Errors"
"paths./streamsets/{webId}/value.post.summary" = "Updates a single value for the specified streams."
"paths./streamsets/{webId}/value.post.tags.length" = 1
"paths./streamsets/{webId}/value.post.tags[0]" = "StreamSet"
"paths./system.get.consumes.length" = 0
"paths./system.get.deprecated" = false
"paths./system.get.operationId" = "System_Landing"
"paths./system.get.parameters.length" = 0
"paths./system.get.responses.200.description" = "Links to top level collections and system information."
"paths./system.get.responses.200.schema.$ref" = "#/definitions/SystemLanding"
"paths./system.get.summary" = "Get system links for this PI System Web API instance."
"paths./system.get.tags.length" = 1
"paths./system.get.tags[0]" = "System"
"paths./system/cacheinstances.get.consumes.length" = 0
"paths./system/cacheinstances.get.deprecated" = false
"paths./system/cacheinstances.get.operationId" = "System_CacheInstances"
"paths./system/cacheinstances.get.parameters.length" = 0
"paths./system/cacheinstances.get.responses.200.description" = "Cache instance information."
"paths./system/cacheinstances.get.responses.200.schema.$ref" = "#/definitions/Items[CacheInstance]"
"paths./system/cacheinstances.get.summary" = "Get AF cache instances currently in use by the system. These are caches from which user requests are serviced. The number of instances depends on the number of users connected to the service, the service's authentication method, and the cache instance configuration."
"paths./system/cacheinstances.get.tags.length" = 1
"paths./system/cacheinstances.get.tags[0]" = "System"
"paths./system/configuration.get.consumes.length" = 0
"paths./system/configuration.get.deprecated" = false
"paths./system/configuration.get.operationId" = "Configuration_List"
"paths./system/configuration.get.parameters.length" = 0
"paths./system/configuration.get.responses.200.description" = "The current system configuration."
"paths./system/configuration.get.responses.200.schema.additionalProperties.type" = "object"
"paths./system/configuration.get.responses.200.schema.type" = "object"
"paths./system/configuration.get.summary" = "Get the current system configuration."
"paths./system/configuration.get.tags.length" = 1
"paths./system/configuration.get.tags[0]" = "Configuration"
"paths./system/configuration/{key}.delete.consumes.length" = 0
"paths./system/configuration/{key}.delete.deprecated" = false
"paths./system/configuration/{key}.delete.operationId" = "Configuration_Delete"
"paths./system/configuration/{key}.delete.parameters.length" = 1
"paths./system/configuration/{key}.delete.parameters[0].description" = "The key of the configuration item to remove."
"paths./system/configuration/{key}.delete.parameters[0].in" = "path"
"paths./system/configuration/{key}.delete.parameters[0].name" = "key"
"paths./system/configuration/{key}.delete.parameters[0].required" = true
"paths./system/configuration/{key}.delete.parameters[0].type" = "string"
"paths./system/configuration/{key}.delete.responses.202.description" = "The change has been accepted, and will take effect when the service can cleanly restart."
"paths./system/configuration/{key}.delete.responses.404.description" = "The configuration item does not exist."
"paths./system/configuration/{key}.delete.responses.404.schema.$ref" = "#/definitions/Errors"
"paths./system/configuration/{key}.delete.responses.500.description" = "An internal error is preventing deletion of the configuration item."
"paths./system/configuration/{key}.delete.responses.500.schema.$ref" = "#/definitions/Errors"
"paths./system/configuration/{key}.delete.summary" = "Delete a configuration item."
"paths./system/configuration/{key}.delete.tags.length" = 1
"paths./system/configuration/{key}.delete.tags[0]" = "Configuration"
"paths./system/configuration/{key}.get.consumes.length" = 0
"paths./system/configuration/{key}.get.deprecated" = false
"paths./system/configuration/{key}.get.operationId" = "Configuration_Get"
"paths./system/configuration/{key}.get.parameters.length" = 1
"paths./system/configuration/{key}.get.parameters[0].description" = "The key of the configuration item."
"paths./system/configuration/{key}.get.parameters[0].in" = "path"
"paths./system/configuration/{key}.get.parameters[0].name" = "key"
"paths./system/configuration/{key}.get.parameters[0].required" = true
"paths./system/configuration/{key}.get.parameters[0].type" = "string"
"paths./system/configuration/{key}.get.responses.200.description" = "The value of the configuration item."
"paths./system/configuration/{key}.get.responses.200.schema.type" = "object"
"paths./system/configuration/{key}.get.responses.404.description" = "The configuration item does not exist."
"paths./system/configuration/{key}.get.responses.404.schema.$ref" = "#/definitions/Errors"
"paths./system/configuration/{key}.get.summary" = "Get the value of a configuration item."
"paths./system/configuration/{key}.get.tags.length" = 1
"paths./system/configuration/{key}.get.tags[0]" = "Configuration"
"paths./system/status.get.consumes.length" = 0
"paths./system/status.get.deprecated" = false
"paths./system/status.get.operationId" = "System_Status"
"paths./system/status.get.parameters.length" = 0
"paths./system/status.get.responses.200.description" = "System Status."
"paths./system/status.get.responses.200.schema.$ref" = "#/definitions/SystemStatus"
"paths./system/status.get.summary" = "Get the system uptime, the system state and the number of cache instances for this PI System Web API instance."
"paths./system/status.get.tags.length" = 1
"paths./system/status.get.tags[0]" = "System"
"paths./system/userinfo.get.consumes.length" = 0
"paths./system/userinfo.get.deprecated" = false
"paths./system/userinfo.get.operationId" = "System_UserInfo"
"paths./system/userinfo.get.parameters.length" = 0
"paths./system/userinfo.get.responses.200.description" = "Information about the current user."
"paths./system/userinfo.get.responses.200.schema.$ref" = "#/definitions/UserInfo"
"paths./system/userinfo.get.responses.204.description" = "No identity is present."
"paths./system/userinfo.get.responses.204.schema.$ref" = "#/definitions/UserInfo"
"paths./system/userinfo.get.summary" = "Get information about the Windows identity used to fulfill the request. This depends on the service's authentication method and the credentials passed by the client. The impersonation level of the Windows identity is included."
"paths./system/userinfo.get.tags.length" = 1
"paths./system/userinfo.get.tags[0]" = "System"
"paths./system/versions.get.consumes.length" = 0
"paths./system/versions.get.deprecated" = false
"paths./system/versions.get.operationId" = "System_Versions"
"paths./system/versions.get.parameters.length" = 0
"paths./system/versions.get.responses.200.description" = "A dictionary of assembly name-version information pairs."
"paths./system/versions.get.responses.200.schema.additionalProperties.$ref" = "#/definitions/Version"
"paths./system/versions.get.responses.200.schema.type" = "object"
"paths./system/versions.get.summary" = "Get the current versions of the PI Web API instance and all external plugins."
"paths./system/versions.get.tags.length" = 1
"paths./system/versions.get.tags[0]" = "System"
"paths./tablecategories.get.consumes.length" = 0
"paths./tablecategories.get.deprecated" = false
"paths./tablecategories.get.description" = "This method returns a Table Category based on the hierarchical path associated with it, and should be used when a path has been received from a separate part of the PI System for use in the PI Web API. Users should primarily search with the WebID when available."
"paths./tablecategories.get.operationId" = "TableCategory_GetByPath"
"paths./tablecategories.get.parameters.length" = 2
"paths./tablecategories.get.parameters[0].description" = "The path to the target table category."
"paths./tablecategories.get.parameters[0].in" = "query"
"paths./tablecategories.get.parameters[0].name" = "path"
"paths./tablecategories.get.parameters[0].required" = true
"paths./tablecategories.get.parameters[0].type" = "string"
"paths./tablecategories.get.parameters[1].description" = "List of fields to be returned in the response, separated by semicolons (;). If this parameter is not specified, all available fields will be returned."
"paths./tablecategories.get.parameters[1].in" = "query"
"paths./tablecategories.get.parameters[1].name" = "selectedFields"
"paths./tablecategories.get.parameters[1].required" = false
"paths./tablecategories.get.parameters[1].type" = "string"
"paths./tablecategories.get.responses.200.description" = "The specified table category."
"paths./tablecategories.get.responses.200.schema.$ref" = "#/definitions/TableCategory"
"paths./tablecategories.get.summary" = "Retrieve a table category by path."
"paths./tablecategories.get.tags.length" = 1
"paths./tablecategories.get.tags[0]" = "TableCategory"
"paths./tablecategories/{webId}.delete.consumes.length" = 0
"paths./tablecategories/{webId}.delete.deprecated" = false
"paths./tablecategories/{webId}.delete.operationId" = "TableCategory_Delete"
"paths./tablecategories/{webId}.delete.parameters.length" = 1
"paths./tablecategories/{webId}.delete.parameters[0].description" = "The ID of the table category to delete."
"paths./tablecategories/{webId}.delete.parameters[0].in" = "path"
"paths./tablecategories/{webId}.delete.parameters[0].name" = "webId"
"paths./tablecategories/{webId}.delete.parameters[0].required" = true
"paths./tablecategories/{webId}.delete.parameters[0].type" = "string"
"paths./tablecategories/{webId}.delete.responses.204.description" = "The table category was deleted."
"paths./tablecategories/{webId}.delete.summary" = "Delete a table category."
"paths./tablecategories/{webId}.delete.tags.length" = 1
"paths./tablecategories/{webId}.delete.tags[0]" = "TableCategory"
"paths./tablecategories/{webId}.get.consumes.length" = 0
"paths./tablecategories/{webId}.get.deprecated" = false
"paths./tablecategories/{webId}.get.operationId" = "TableCategory_Get"
"paths./tablecategories/{webId}.get.parameters.length" = 2
"paths./tablecategories/{webId}.get.parameters[0].description" = "The id of the table category."
"paths./tablecategories/{webId}.get.parameters[0].in" = "path"
"paths./tablecategories/{webId}.get.parameters[0].name" = "webId"
"paths./tablecategories/{webId}.get.parameters[0].required" = true
"paths./tablecategories/{webId}.get.parameters[0].type" = "string"
"paths./tablecategories/{webId}.get.parameters[1].description" = "List of fields to be returned in the response, separated by semicolons (;). If this parameter is not specified, all available fields will be returned."
"paths./tablecategories/{webId}.get.parameters[1].in" = "query"
"paths./tablecategories/{webId}.get.parameters[1].name" = "selectedFields"
"paths./tablecategories/{webId}.get.parameters[1].required" = false
"paths./tablecategories/{webId}.get.parameters[1].type" = "string"
"paths./tablecategories/{webId}.get.responses.200.description" = "The specified table category."
"paths./tablecategories/{webId}.get.responses.200.schema.$ref" = "#/definitions/TableCategory"
"paths./tablecategories/{webId}.get.summary" = "Retrieve a table category."
"paths./tablecategories/{webId}.get.tags.length" = 1
"paths./tablecategories/{webId}.get.tags[0]" = "TableCategory"
"paths./tablecategories/{webId}.patch.consumes.length" = 2
"paths./tablecategories/{webId}.patch.consumes[0]" = "application/json"
"paths./tablecategories/{webId}.patch.consumes[1]" = "text/json"
"paths./tablecategories/{webId}.patch.deprecated" = false
"paths./tablecategories/{webId}.patch.operationId" = "TableCategory_Update"
"paths./tablecategories/{webId}.patch.parameters.length" = 2
"paths./tablecategories/{webId}.patch.parameters[0].description" = "The ID of the table category to update."
"paths./tablecategories/{webId}.patch.parameters[0].in" = "path"
"paths./tablecategories/{webId}.patch.parameters[0].name" = "webId"
"paths./tablecategories/{webId}.patch.parameters[0].required" = true
"paths./tablecategories/{webId}.patch.parameters[0].type" = "string"
"paths./tablecategories/{webId}.patch.parameters[1].description" = "A partial table category containing the desired changes."
"paths./tablecategories/{webId}.patch.parameters[1].in" = "body"
"paths./tablecategories/{webId}.patch.parameters[1].name" = "tableCategory"
"paths./tablecategories/{webId}.patch.parameters[1].required" = true
"paths./tablecategories/{webId}.patch.parameters[1].schema.$ref" = "#/definitions/TableCategory"
"paths./tablecategories/{webId}.patch.responses.204.description" = "The table category was updated."
"paths./tablecategories/{webId}.patch.summary" = "Update a table category by replacing items in its definition."
"paths./tablecategories/{webId}.patch.tags.length" = 1
"paths./tablecategories/{webId}.patch.tags[0]" = "TableCategory"
"paths./tablecategories/{webId}/security.get.consumes.length" = 0
"paths./tablecategories/{webId}/security.get.deprecated" = false
"paths./tablecategories/{webId}/security.get.operationId" = "TableCategory_GetSecurity"
"paths./tablecategories/{webId}/security.get.parameters.length" = 4
"paths./tablecategories/{webId}/security.get.parameters[0].description" = "The ID of the table category for the security to be checked."
"paths./tablecategories/{webId}/security.get.parameters[0].in" = "path"
"paths./tablecategories/{webId}/security.get.parameters[0].name" = "webId"
"paths./tablecategories/{webId}/security.get.parameters[0].required" = true
"paths./tablecategories/{webId}/security.get.parameters[0].type" = "string"
"paths./tablecategories/{webId}/security.get.parameters[1].collectionFormat" = "multi"
"paths./tablecategories/{webId}/security.get.parameters[1].description" = "The user identity for the security information to be checked. Multiple security identities may be specified with multiple instances of the parameter. If the parameter is not specified, only the current user's security rights will be returned."
"paths./tablecategories/{webId}/security.get.parameters[1].in" = "query"
"paths./tablecategories/{webId}/security.get.parameters[1].items.type" = "string"
"paths./tablecategories/{webId}/security.get.parameters[1].name" = "userIdentity"
"paths./tablecategories/{webId}/security.get.parameters[1].required" = true
"paths./tablecategories/{webId}/security.get.parameters[1].type" = "array"
"paths./tablecategories/{webId}/security.get.parameters[2].description" = "Indicates if the security cache should be refreshed before getting security information. The default is 'false'."
"paths./tablecategories/{webId}/security.get.parameters[2].in" = "query"
"paths./tablecategories/{webId}/security.get.parameters[2].name" = "forceRefresh"
"paths./tablecategories/{webId}/security.get.parameters[2].required" = false
"paths./tablecategories/{webId}/security.get.parameters[2].type" = "boolean"
"paths./tablecategories/{webId}/security.get.parameters[3].description" = "List of fields to be returned in the response, separated by semicolons (;). If this parameter is not specified, all available fields will be returned."
"paths./tablecategories/{webId}/security.get.parameters[3].in" = "query"
"paths./tablecategories/{webId}/security.get.parameters[3].name" = "selectedFields"
"paths./tablecategories/{webId}/security.get.parameters[3].required" = false
"paths./tablecategories/{webId}/security.get.parameters[3].type" = "string"
"paths./tablecategories/{webId}/security.get.responses.200.description" = "Security rights."
"paths./tablecategories/{webId}/security.get.responses.200.schema.$ref" = "#/definitions/Items[SecurityRights]"
"paths./tablecategories/{webId}/security.get.responses.400.description" = "An invalid or local account is specified as the user identity."
"paths./tablecategories/{webId}/security.get.responses.400.schema.$ref" = "#/definitions/Errors"
"paths./tablecategories/{webId}/security.get.responses.401.description" = "Access denied for the specified user identity."
"paths./tablecategories/{webId}/security.get.responses.401.schema.$ref" = "#/definitions/Errors"
"paths./tablecategories/{webId}/security.get.responses.409.description" = "Unsupported when using Anonymous authentication method."
"paths./tablecategories/{webId}/security.get.responses.409.schema.$ref" = "#/definitions/Errors"
"paths./tablecategories/{webId}/security.get.responses.502.description" = "Failed to retrieve the specified user identity."
"paths./tablecategories/{webId}/security.get.responses.502.schema.$ref" = "#/definitions/Errors"
"paths./tablecategories/{webId}/security.get.summary" = "Get the security information of the specified security item associated with the table category for a specified user."
"paths./tablecategories/{webId}/security.get.tags.length" = 1
"paths./tablecategories/{webId}/security.get.tags[0]" = "TableCategory"
"paths./tablecategories/{webId}/securityentries.get.consumes.length" = 0
"paths./tablecategories/{webId}/securityentries.get.deprecated" = false
"paths./tablecategories/{webId}/securityentries.get.operationId" = "TableCategory_GetSecurityEntries"
"paths./tablecategories/{webId}/securityentries.get.parameters.length" = 3
"paths./tablecategories/{webId}/securityentries.get.parameters[0].description" = "The ID of the table category."
"paths./tablecategories/{webId}/securityentries.get.parameters[0].in" = "path"
"paths./tablecategories/{webId}/securityentries.get.parameters[0].name" = "webId"
"paths./tablecategories/{webId}/securityentries.get.parameters[0].required" = true
"paths./tablecategories/{webId}/securityentries.get.parameters[0].type" = "string"
"paths./tablecategories/{webId}/securityentries.get.parameters[1].description" = "The name query string used for filtering security entries. The default is no filter."
"paths./tablecategories/{webId}/securityentries.get.parameters[1].in" = "query"
"paths./tablecategories/{webId}/securityentries.get.parameters[1].name" = "nameFilter"
"paths./tablecategories/{webId}/securityentries.get.parameters[1].required" = false
"paths./tablecategories/{webId}/securityentries.get.parameters[1].type" = "string"
"paths./tablecategories/{webId}/securityentries.get.parameters[2].description" = "List of fields to be returned in the response, separated by semicolons (;). If this parameter is not specified, all available fields will be returned."
"paths./tablecategories/{webId}/securityentries.get.parameters[2].in" = "query"
"paths./tablecategories/{webId}/securityentries.get.parameters[2].name" = "selectedFields"
"paths./tablecategories/{webId}/securityentries.get.parameters[2].required" = false
"paths./tablecategories/{webId}/securityentries.get.parameters[2].type" = "string"
"paths./tablecategories/{webId}/securityentries.get.responses.200.description" = "A list of security entries matching the specified condition."
"paths./tablecategories/{webId}/securityentries.get.responses.200.schema.$ref" = "#/definitions/Items[SecurityEntry]"
"paths./tablecategories/{webId}/securityentries.get.summary" = "Retrieve the security entries associated with the table category based on the specified criteria. By default, all security entries for this table category are returned."
"paths./tablecategories/{webId}/securityentries.get.tags.length" = 1
"paths./tablecategories/{webId}/securityentries.get.tags[0]" = "TableCategory"
"paths./tablecategories/{webId}/securityentries.post.consumes.length" = 2
"paths./tablecategories/{webId}/securityentries.post.consumes[0]" = "application/json"
"paths./tablecategories/{webId}/securityentries.post.consumes[1]" = "text/json"
"paths./tablecategories/{webId}/securityentries.post.deprecated" = false
"paths./tablecategories/{webId}/securityentries.post.operationId" = "TableCategory_CreateSecurityEntry"
"paths./tablecategories/{webId}/securityentries.post.parameters.length" = 3
"paths./tablecategories/{webId}/securityentries.post.parameters[0].description" = "The ID of the table category where the security entry will be created."
"paths./tablecategories/{webId}/securityentries.post.parameters[0].in" = "path"
"paths./tablecategories/{webId}/securityentries.post.parameters[0].name" = "webId"
"paths./tablecategories/{webId}/securityentries.post.parameters[0].required" = true
"paths./tablecategories/{webId}/securityentries.post.parameters[0].type" = "string"
"paths./tablecategories/{webId}/securityentries.post.parameters[1].description" = "The new security entry definition. The full list of allow and deny rights must be supplied."
"paths./tablecategories/{webId}/securityentries.post.parameters[1].in" = "body"
"paths./tablecategories/{webId}/securityentries.post.parameters[1].name" = "securityEntry"
"paths./tablecategories/{webId}/securityentries.post.parameters[1].required" = true
"paths./tablecategories/{webId}/securityentries.post.parameters[1].schema.$ref" = "#/definitions/SecurityEntry"
"paths./tablecategories/{webId}/securityentries.post.parameters[2].description" = "If false, the new access permissions are only applied to the associated object. If true, the access permissions of children with any parent-child reference types will change when the permissions on the primary parent change."
"paths./tablecategories/{webId}/securityentries.post.parameters[2].in" = "query"
"paths./tablecategories/{webId}/securityentries.post.parameters[2].name" = "applyToChildren"
"paths./tablecategories/{webId}/securityentries.post.parameters[2].required" = false
"paths./tablecategories/{webId}/securityentries.post.parameters[2].type" = "boolean"
"paths./tablecategories/{webId}/securityentries.post.responses.201.description" = "The security entry was created. The response's Location header is a link to the security entry."
"paths./tablecategories/{webId}/securityentries.post.summary" = "Create a security entry owned by the table category."
"paths./tablecategories/{webId}/securityentries.post.tags.length" = 1
"paths./tablecategories/{webId}/securityentries.post.tags[0]" = "TableCategory"
"paths./tablecategories/{webId}/securityentries/{name}.delete.consumes.length" = 0
"paths./tablecategories/{webId}/securityentries/{name}.delete.deprecated" = false
"paths./tablecategories/{webId}/securityentries/{name}.delete.operationId" = "TableCategory_DeleteSecurityEntry"
"paths./tablecategories/{webId}/securityentries/{name}.delete.parameters.length" = 3
"paths./tablecategories/{webId}/securityentries/{name}.delete.parameters[0].description" = "The name of the security entry. For every backslash character (\\) in the security entry name, replace with asterisk (*). As an example, use domain*username instead of domain\\username."
"paths./tablecategories/{webId}/securityentries/{name}.delete.parameters[0].in" = "path"
"paths./tablecategories/{webId}/securityentries/{name}.delete.parameters[0].name" = "name"
"paths./tablecategories/{webId}/securityentries/{name}.delete.parameters[0].required" = true
"paths./tablecategories/{webId}/securityentries/{name}.delete.parameters[0].type" = "string"
"paths./tablecategories/{webId}/securityentries/{name}.delete.parameters[1].description" = "The ID of the table category where the security entry will be deleted."
"paths./tablecategories/{webId}/securityentries/{name}.delete.parameters[1].in" = "path"
"paths./tablecategories/{webId}/securityentries/{name}.delete.parameters[1].name" = "webId"
"paths./tablecategories/{webId}/securityentries/{name}.delete.parameters[1].required" = true
"paths./tablecategories/{webId}/securityentries/{name}.delete.parameters[1].type" = "string"
"paths./tablecategories/{webId}/securityentries/{name}.delete.parameters[2].description" = "If false, the new access permissions are only applied to the associated object. If true, the access permissions of children with any parent-child reference types will change when the permissions on the primary parent change."
"paths./tablecategories/{webId}/securityentries/{name}.delete.parameters[2].in" = "query"
"paths./tablecategories/{webId}/securityentries/{name}.delete.parameters[2].name" = "applyToChildren"
"paths./tablecategories/{webId}/securityentries/{name}.delete.parameters[2].required" = false
"paths./tablecategories/{webId}/securityentries/{name}.delete.parameters[2].type" = "boolean"
"paths./tablecategories/{webId}/securityentries/{name}.delete.responses.204.description" = "The security entry was deleted."
"paths./tablecategories/{webId}/securityentries/{name}.delete.summary" = "Delete a security entry owned by the table category."
"paths./tablecategories/{webId}/securityentries/{name}.delete.tags.length" = 1
"paths./tablecategories/{webId}/securityentries/{name}.delete.tags[0]" = "TableCategory"
"paths./tablecategories/{webId}/securityentries/{name}.get.consumes.length" = 0
"paths./tablecategories/{webId}/securityentries/{name}.get.deprecated" = false
"paths./tablecategories/{webId}/securityentries/{name}.get.operationId" = "TableCategory_GetSecurityEntryByName"
"paths./tablecategories/{webId}/securityentries/{name}.get.parameters.length" = 3
"paths./tablecategories/{webId}/securityentries/{name}.get.parameters[0].description" = "The name of the security entry. For every backslash character (\\) in the security entry name, replace with asterisk (*). As an example, use domain*username instead of domain\\username."
"paths./tablecategories/{webId}/securityentries/{name}.get.parameters[0].in" = "path"
"paths./tablecategories/{webId}/securityentries/{name}.get.parameters[0].name" = "name"
"paths./tablecategories/{webId}/securityentries/{name}.get.parameters[0].required" = true
"paths./tablecategories/{webId}/securityentries/{name}.get.parameters[0].type" = "string"
"paths./tablecategories/{webId}/securityentries/{name}.get.parameters[1].description" = "The ID of the table category."
"paths./tablecategories/{webId}/securityentries/{name}.get.parameters[1].in" = "path"
"paths./tablecategories/{webId}/securityentries/{name}.get.parameters[1].name" = "webId"
"paths./tablecategories/{webId}/securityentries/{name}.get.parameters[1].required" = true
"paths./tablecategories/{webId}/securityentries/{name}.get.parameters[1].type" = "string"
"paths./tablecategories/{webId}/securityentries/{name}.get.parameters[2].description" = "List of fields to be returned in the response, separated by semicolons (;). If this parameter is not specified, all available fields will be returned."
"paths./tablecategories/{webId}/securityentries/{name}.get.parameters[2].in" = "query"
"paths./tablecategories/{webId}/securityentries/{name}.get.parameters[2].name" = "selectedFields"
"paths./tablecategories/{webId}/securityentries/{name}.get.parameters[2].required" = false
"paths./tablecategories/{webId}/securityentries/{name}.get.parameters[2].type" = "string"
"paths./tablecategories/{webId}/securityentries/{name}.get.responses.200.description" = "The security entry matching the specified condition."
"paths./tablecategories/{webId}/securityentries/{name}.get.responses.200.schema.$ref" = "#/definitions/SecurityEntry"
"paths./tablecategories/{webId}/securityentries/{name}.get.responses.404.description" = "The security entry with the specified name is not found."
"paths./tablecategories/{webId}/securityentries/{name}.get.responses.404.schema.$ref" = "#/definitions/Errors"
"paths./tablecategories/{webId}/securityentries/{name}.get.summary" = "Retrieve the security entry associated with the table category with the specified name."
"paths./tablecategories/{webId}/securityentries/{name}.get.tags.length" = 1
"paths./tablecategories/{webId}/securityentries/{name}.get.tags[0]" = "TableCategory"
"paths./tablecategories/{webId}/securityentries/{name}.put.consumes.length" = 2
"paths./tablecategories/{webId}/securityentries/{name}.put.consumes[0]" = "application/json"
"paths./tablecategories/{webId}/securityentries/{name}.put.consumes[1]" = "text/json"
"paths./tablecategories/{webId}/securityentries/{name}.put.deprecated" = false
"paths./tablecategories/{webId}/securityentries/{name}.put.operationId" = "TableCategory_UpdateSecurityEntry"
"paths./tablecategories/{webId}/securityentries/{name}.put.parameters.length" = 4
"paths./tablecategories/{webId}/securityentries/{name}.put.parameters[0].description" = "The name of the security entry."
"paths./tablecategories/{webId}/securityentries/{name}.put.parameters[0].in" = "path"
"paths./tablecategories/{webId}/securityentries/{name}.put.parameters[0].name" = "name"
"paths./tablecategories/{webId}/securityentries/{name}.put.parameters[0].required" = true
"paths./tablecategories/{webId}/securityentries/{name}.put.parameters[0].type" = "string"
"paths./tablecategories/{webId}/securityentries/{name}.put.parameters[1].description" = "The ID of the table category where the security entry will be updated."
"paths./tablecategories/{webId}/securityentries/{name}.put.parameters[1].in" = "path"
"paths./tablecategories/{webId}/securityentries/{name}.put.parameters[1].name" = "webId"
"paths./tablecategories/{webId}/securityentries/{name}.put.parameters[1].required" = true
"paths./tablecategories/{webId}/securityentries/{name}.put.parameters[1].type" = "string"
"paths./tablecategories/{webId}/securityentries/{name}.put.parameters[2].description" = "The new security entry definition. The full list of allow and deny rights must be supplied or they will be removed."
"paths./tablecategories/{webId}/securityentries/{name}.put.parameters[2].in" = "body"
"paths./tablecategories/{webId}/securityentries/{name}.put.parameters[2].name" = "securityEntry"
"paths./tablecategories/{webId}/securityentries/{name}.put.parameters[2].required" = true
"paths./tablecategories/{webId}/securityentries/{name}.put.parameters[2].schema.$ref" = "#/definitions/SecurityEntry"
"paths./tablecategories/{webId}/securityentries/{name}.put.parameters[3].description" = "If false, the new access permissions are only applied to the associated object. If true, the access permissions of children with any parent-child reference types will change when the permissions on the primary parent change."
"paths./tablecategories/{webId}/securityentries/{name}.put.parameters[3].in" = "query"
"paths./tablecategories/{webId}/securityentries/{name}.put.parameters[3].name" = "applyToChildren"
"paths./tablecategories/{webId}/securityentries/{name}.put.parameters[3].required" = false
"paths./tablecategories/{webId}/securityentries/{name}.put.parameters[3].type" = "boolean"
"paths./tablecategories/{webId}/securityentries/{name}.put.responses.204.description" = "The security entry was updated."
"paths./tablecategories/{webId}/securityentries/{name}.put.summary" = "Update a security entry owned by the table category."
"paths./tablecategories/{webId}/securityentries/{name}.put.tags.length" = 1
"paths./tablecategories/{webId}/securityentries/{name}.put.tags[0]" = "TableCategory"
"paths./tables.get.consumes.length" = 0
"paths./tables.get.deprecated" = false
"paths./tables.get.operationId" = "Table_GetByPath"
"paths./tables.get.parameters.length" = 2
"paths./tables.get.parameters[0].description" = "The path to the table."
"paths./tables.get.parameters[0].in" = "query"
"paths./tables.get.parameters[0].name" = "path"
"paths./tables.get.parameters[0].required" = true
"paths./tables.get.parameters[0].type" = "string"
"paths./tables.get.parameters[1].description" = "List of fields to be returned in the response, separated by semicolons (;). If this parameter is not specified, all available fields will be returned."
"paths./tables.get.parameters[1].in" = "query"
"paths./tables.get.parameters[1].name" = "selectedFields"
"paths./tables.get.parameters[1].required" = false
"paths./tables.get.parameters[1].type" = "string"
"paths./tables.get.responses.200.description" = "The specified table."
"paths./tables.get.responses.200.schema.$ref" = "#/definitions/Table"
"paths./tables.get.summary" = "Retrieve a table by path."
"paths./tables.get.tags.length" = 1
"paths./tables.get.tags[0]" = "Table"
"paths./tables/{webId}.delete.consumes.length" = 0
"paths./tables/{webId}.delete.deprecated" = false
"paths./tables/{webId}.delete.operationId" = "Table_Delete"
"paths./tables/{webId}.delete.parameters.length" = 1
"paths./tables/{webId}.delete.parameters[0].description" = "The ID of the table to delete."
"paths./tables/{webId}.delete.parameters[0].in" = "path"
"paths./tables/{webId}.delete.parameters[0].name" = "webId"
"paths./tables/{webId}.delete.parameters[0].required" = true
"paths./tables/{webId}.delete.parameters[0].type" = "string"
"paths./tables/{webId}.delete.responses.204.description" = "The table was deleted."
"paths./tables/{webId}.delete.summary" = "Delete a table."
"paths./tables/{webId}.delete.tags.length" = 1
"paths./tables/{webId}.delete.tags[0]" = "Table"
"paths./tables/{webId}.get.consumes.length" = 0
"paths./tables/{webId}.get.deprecated" = false
"paths./tables/{webId}.get.operationId" = "Table_Get"
"paths./tables/{webId}.get.parameters.length" = 2
"paths./tables/{webId}.get.parameters[0].description" = "The ID of the table."
"paths./tables/{webId}.get.parameters[0].in" = "path"
"paths./tables/{webId}.get.parameters[0].name" = "webId"
"paths./tables/{webId}.get.parameters[0].required" = true
"paths./tables/{webId}.get.parameters[0].type" = "string"
"paths./tables/{webId}.get.parameters[1].description" = "List of fields to be returned in the response, separated by semicolons (;). If this parameter is not specified, all available fields will be returned."
"paths./tables/{webId}.get.parameters[1].in" = "query"
"paths./tables/{webId}.get.parameters[1].name" = "selectedFields"
"paths./tables/{webId}.get.parameters[1].required" = false
"paths./tables/{webId}.get.parameters[1].type" = "string"
"paths./tables/{webId}.get.responses.200.description" = "The specified table."
"paths./tables/{webId}.get.responses.200.schema.$ref" = "#/definitions/Table"
"paths./tables/{webId}.get.summary" = "Retrieve a table."
"paths./tables/{webId}.get.tags.length" = 1
"paths./tables/{webId}.get.tags[0]" = "Table"
"paths./tables/{webId}.patch.consumes.length" = 2
"paths./tables/{webId}.patch.consumes[0]" = "application/json"
"paths./tables/{webId}.patch.consumes[1]" = "text/json"
"paths./tables/{webId}.patch.deprecated" = false
"paths./tables/{webId}.patch.operationId" = "Table_Update"
"paths./tables/{webId}.patch.parameters.length" = 2
"paths./tables/{webId}.patch.parameters[0].description" = "The ID of the table to update."
"paths./tables/{webId}.patch.parameters[0].in" = "path"
"paths./tables/{webId}.patch.parameters[0].name" = "webId"
"paths./tables/{webId}.patch.parameters[0].required" = true
"paths./tables/{webId}.patch.parameters[0].type" = "string"
"paths./tables/{webId}.patch.parameters[1].description" = "A partial table containing the desired changes."
"paths./tables/{webId}.patch.parameters[1].in" = "body"
"paths./tables/{webId}.patch.parameters[1].name" = "table"
"paths./tables/{webId}.patch.parameters[1].required" = true
"paths./tables/{webId}.patch.parameters[1].schema.$ref" = "#/definitions/Table"
"paths./tables/{webId}.patch.responses.204.description" = "The table was updated."
"paths./tables/{webId}.patch.summary" = "Update a table by replacing items in its definition."
"paths./tables/{webId}.patch.tags.length" = 1
"paths./tables/{webId}.patch.tags[0]" = "Table"
"paths./tables/{webId}/categories.get.consumes.length" = 0
"paths./tables/{webId}/categories.get.deprecated" = false
"paths./tables/{webId}/categories.get.operationId" = "Table_GetCategories"
"paths./tables/{webId}/categories.get.parameters.length" = 2
"paths./tables/{webId}/categories.get.parameters[0].description" = "The ID of the table."
"paths./tables/{webId}/categories.get.parameters[0].in" = "path"
"paths./tables/{webId}/categories.get.parameters[0].name" = "webId"
"paths./tables/{webId}/categories.get.parameters[0].required" = true
"paths./tables/{webId}/categories.get.parameters[0].type" = "string"
"paths./tables/{webId}/categories.get.parameters[1].description" = "List of fields to be returned in the response, separated by semicolons (;). If this parameter is not specified, all available fields will be returned."
"paths./tables/{webId}/categories.get.parameters[1].in" = "query"
"paths./tables/{webId}/categories.get.parameters[1].name" = "selectedFields"
"paths./tables/{webId}/categories.get.parameters[1].required" = false
"paths./tables/{webId}/categories.get.parameters[1].type" = "string"
"paths./tables/{webId}/categories.get.responses.200.description" = "A list of categories."
"paths./tables/{webId}/categories.get.responses.200.schema.$ref" = "#/definitions/Items[TableCategory]"
"paths./tables/{webId}/categories.get.summary" = "Get a table's categories."
"paths./tables/{webId}/categories.get.tags.length" = 1
"paths./tables/{webId}/categories.get.tags[0]" = "Table"
"paths./tables/{webId}/data.get.consumes.length" = 0
"paths./tables/{webId}/data.get.deprecated" = false
"paths./tables/{webId}/data.get.operationId" = "Table_GetData"
"paths./tables/{webId}/data.get.parameters.length" = 2
"paths./tables/{webId}/data.get.parameters[0].description" = "The ID of the table."
"paths./tables/{webId}/data.get.parameters[0].in" = "path"
"paths./tables/{webId}/data.get.parameters[0].name" = "webId"
"paths./tables/{webId}/data.get.parameters[0].required" = true
"paths./tables/{webId}/data.get.parameters[0].type" = "string"
"paths./tables/{webId}/data.get.parameters[1].description" = "List of fields to be returned in the response, separated by semicolons (;). If this parameter is not specified, all available fields will be returned."
"paths./tables/{webId}/data.get.parameters[1].in" = "query"
"paths./tables/{webId}/data.get.parameters[1].name" = "selectedFields"
"paths./tables/{webId}/data.get.parameters[1].required" = false
"paths./tables/{webId}/data.get.parameters[1].type" = "string"
"paths./tables/{webId}/data.get.responses.200.description" = "The data for the specified table."
"paths./tables/{webId}/data.get.summary" = "Get the table's data."
"paths./tables/{webId}/data.get.tags.length" = 1
"paths./tables/{webId}/data.get.tags[0]" = "Table"
"paths./tables/{webId}/data.put.consumes.length" = 2
"paths./tables/{webId}/data.put.consumes[0]" = "application/json"
"paths./tables/{webId}/data.put.consumes[1]" = "text/json"
"paths./tables/{webId}/data.put.deprecated" = false
"paths./tables/{webId}/data.put.operationId" = "Table_UpdateData"
"paths./tables/{webId}/data.put.parameters.length" = 2
"paths./tables/{webId}/data.put.parameters[0].description" = "The ID of the table on which to update the data."
"paths./tables/{webId}/data.put.parameters[0].in" = "path"
"paths./tables/{webId}/data.put.parameters[0].name" = "webId"
"paths./tables/{webId}/data.put.parameters[0].required" = true
"paths./tables/{webId}/data.put.parameters[0].type" = "string"
"paths./tables/{webId}/data.put.parameters[1].description" = "The new table data definition."
"paths./tables/{webId}/data.put.parameters[1].in" = "body"
"paths./tables/{webId}/data.put.parameters[1].name" = "data"
"paths./tables/{webId}/data.put.parameters[1].required" = true
"paths./tables/{webId}/data.put.parameters[1].schema.$ref" = "#/definitions/TableData"
"paths./tables/{webId}/data.put.responses.201.description" = "The table data was updated."
"paths./tables/{webId}/data.put.summary" = "Update the table's data."
"paths./tables/{webId}/data.put.tags.length" = 1
"paths./tables/{webId}/data.put.tags[0]" = "Table"
"paths./tables/{webId}/security.get.consumes.length" = 0
"paths./tables/{webId}/security.get.deprecated" = false
"paths./tables/{webId}/security.get.operationId" = "Table_GetSecurity"
"paths./tables/{webId}/security.get.parameters.length" = 4
"paths./tables/{webId}/security.get.parameters[0].description" = "The ID of the table for the security to be checked."
"paths./tables/{webId}/security.get.parameters[0].in" = "path"
"paths./tables/{webId}/security.get.parameters[0].name" = "webId"
"paths./tables/{webId}/security.get.parameters[0].required" = true
"paths./tables/{webId}/security.get.parameters[0].type" = "string"
"paths./tables/{webId}/security.get.parameters[1].collectionFormat" = "multi"
"paths./tables/{webId}/security.get.parameters[1].description" = "The user identity for the security information to be checked. Multiple security identities may be specified with multiple instances of the parameter. If the parameter is not specified, only the current user's security rights will be returned."
"paths./tables/{webId}/security.get.parameters[1].in" = "query"
"paths./tables/{webId}/security.get.parameters[1].items.type" = "string"
"paths./tables/{webId}/security.get.parameters[1].name" = "userIdentity"
"paths./tables/{webId}/security.get.parameters[1].required" = true
"paths./tables/{webId}/security.get.parameters[1].type" = "array"
"paths./tables/{webId}/security.get.parameters[2].description" = "Indicates if the security cache should be refreshed before getting security information. The default is 'false'."
"paths./tables/{webId}/security.get.parameters[2].in" = "query"
"paths./tables/{webId}/security.get.parameters[2].name" = "forceRefresh"
"paths./tables/{webId}/security.get.parameters[2].required" = false
"paths./tables/{webId}/security.get.parameters[2].type" = "boolean"
"paths./tables/{webId}/security.get.parameters[3].description" = "List of fields to be returned in the response, separated by semicolons (;). If this parameter is not specified, all available fields will be returned."
"paths./tables/{webId}/security.get.parameters[3].in" = "query"
"paths./tables/{webId}/security.get.parameters[3].name" = "selectedFields"
"paths./tables/{webId}/security.get.parameters[3].required" = false
"paths./tables/{webId}/security.get.parameters[3].type" = "string"
"paths./tables/{webId}/security.get.responses.200.description" = "Security rights."
"paths./tables/{webId}/security.get.responses.200.schema.$ref" = "#/definitions/Items[SecurityRights]"
"paths./tables/{webId}/security.get.responses.400.description" = "An invalid or local account is specified as the user identity."
"paths./tables/{webId}/security.get.responses.400.schema.$ref" = "#/definitions/Errors"
"paths./tables/{webId}/security.get.responses.401.description" = "Access denied for the specified user identity."
"paths./tables/{webId}/security.get.responses.401.schema.$ref" = "#/definitions/Errors"
"paths./tables/{webId}/security.get.responses.409.description" = "Unsupported when using Anonymous authentication method."
"paths./tables/{webId}/security.get.responses.409.schema.$ref" = "#/definitions/Errors"
"paths./tables/{webId}/security.get.responses.502.description" = "Failed to retrieve the specified user identity."
"paths./tables/{webId}/security.get.responses.502.schema.$ref" = "#/definitions/Errors"
"paths./tables/{webId}/security.get.summary" = "Get the security information of the specified security item associated with the table for a specified user."
"paths./tables/{webId}/security.get.tags.length" = 1
"paths./tables/{webId}/security.get.tags[0]" = "Table"
"paths./tables/{webId}/securityentries.get.consumes.length" = 0
"paths./tables/{webId}/securityentries.get.deprecated" = false
"paths./tables/{webId}/securityentries.get.operationId" = "Table_GetSecurityEntries"
"paths./tables/{webId}/securityentries.get.parameters.length" = 3
"paths./tables/{webId}/securityentries.get.parameters[0].description" = "The ID of the table."
"paths./tables/{webId}/securityentries.get.parameters[0].in" = "path"
"paths./tables/{webId}/securityentries.get.parameters[0].name" = "webId"
"paths./tables/{webId}/securityentries.get.parameters[0].required" = true
"paths./tables/{webId}/securityentries.get.parameters[0].type" = "string"
"paths./tables/{webId}/securityentries.get.parameters[1].description" = "The name query string used for filtering security entries. The default is no filter."
"paths./tables/{webId}/securityentries.get.parameters[1].in" = "query"
"paths./tables/{webId}/securityentries.get.parameters[1].name" = "nameFilter"
"paths./tables/{webId}/securityentries.get.parameters[1].required" = false
"paths./tables/{webId}/securityentries.get.parameters[1].type" = "string"
"paths./tables/{webId}/securityentries.get.parameters[2].description" = "List of fields to be returned in the response, separated by semicolons (;). If this parameter is not specified, all available fields will be returned."
"paths./tables/{webId}/securityentries.get.parameters[2].in" = "query"
"paths./tables/{webId}/securityentries.get.parameters[2].name" = "selectedFields"
"paths./tables/{webId}/securityentries.get.parameters[2].required" = false
"paths./tables/{webId}/securityentries.get.parameters[2].type" = "string"
"paths./tables/{webId}/securityentries.get.responses.200.description" = "A list of security entries matching the specified condition."
"paths./tables/{webId}/securityentries.get.responses.200.schema.$ref" = "#/definitions/Items[SecurityEntry]"
"paths./tables/{webId}/securityentries.get.summary" = "Retrieve the security entries associated with the table based on the specified criteria. By default, all security entries for this table are returned."
"paths./tables/{webId}/securityentries.get.tags.length" = 1
"paths./tables/{webId}/securityentries.get.tags[0]" = "Table"
"paths./tables/{webId}/securityentries.post.consumes.length" = 2
"paths./tables/{webId}/securityentries.post.consumes[0]" = "application/json"
"paths./tables/{webId}/securityentries.post.consumes[1]" = "text/json"
"paths./tables/{webId}/securityentries.post.deprecated" = false
"paths./tables/{webId}/securityentries.post.operationId" = "Table_CreateSecurityEntry"
"paths./tables/{webId}/securityentries.post.parameters.length" = 3
"paths./tables/{webId}/securityentries.post.parameters[0].description" = "The ID of the table where the security entry will be created."
"paths./tables/{webId}/securityentries.post.parameters[0].in" = "path"
"paths./tables/{webId}/securityentries.post.parameters[0].name" = "webId"
"paths./tables/{webId}/securityentries.post.parameters[0].required" = true
"paths./tables/{webId}/securityentries.post.parameters[0].type" = "string"
"paths./tables/{webId}/securityentries.post.parameters[1].description" = "The new security entry definition. The full list of allow and deny rights must be supplied."
"paths./tables/{webId}/securityentries.post.parameters[1].in" = "body"
"paths./tables/{webId}/securityentries.post.parameters[1].name" = "securityEntry"
"paths./tables/{webId}/securityentries.post.parameters[1].required" = true
"paths./tables/{webId}/securityentries.post.parameters[1].schema.$ref" = "#/definitions/SecurityEntry"
"paths./tables/{webId}/securityentries.post.parameters[2].description" = "If false, the new access permissions are only applied to the associated object. If true, the access permissions of children with any parent-child reference types will change when the permissions on the primary parent change."
"paths./tables/{webId}/securityentries.post.parameters[2].in" = "query"
"paths./tables/{webId}/securityentries.post.parameters[2].name" = "applyToChildren"
"paths./tables/{webId}/securityentries.post.parameters[2].required" = false
"paths./tables/{webId}/securityentries.post.parameters[2].type" = "boolean"
"paths./tables/{webId}/securityentries.post.responses.201.description" = "The security entry was created. The response's Location header is a link to the security entry."
"paths./tables/{webId}/securityentries.post.summary" = "Create a security entry owned by the table."
"paths./tables/{webId}/securityentries.post.tags.length" = 1
"paths./tables/{webId}/securityentries.post.tags[0]" = "Table"
"paths./tables/{webId}/securityentries/{name}.delete.consumes.length" = 0
"paths./tables/{webId}/securityentries/{name}.delete.deprecated" = false
"paths./tables/{webId}/securityentries/{name}.delete.operationId" = "Table_DeleteSecurityEntry"
"paths./tables/{webId}/securityentries/{name}.delete.parameters.length" = 3
"paths./tables/{webId}/securityentries/{name}.delete.parameters[0].description" = "The name of the security entry. For every backslash character (\\) in the security entry name, replace with asterisk (*). As an example, use domain*username instead of domain\\username."
"paths./tables/{webId}/securityentries/{name}.delete.parameters[0].in" = "path"
"paths./tables/{webId}/securityentries/{name}.delete.parameters[0].name" = "name"
"paths./tables/{webId}/securityentries/{name}.delete.parameters[0].required" = true
"paths./tables/{webId}/securityentries/{name}.delete.parameters[0].type" = "string"
"paths./tables/{webId}/securityentries/{name}.delete.parameters[1].description" = "The ID of the table where the security entry will be deleted."
"paths./tables/{webId}/securityentries/{name}.delete.parameters[1].in" = "path"
"paths./tables/{webId}/securityentries/{name}.delete.parameters[1].name" = "webId"
"paths./tables/{webId}/securityentries/{name}.delete.parameters[1].required" = true
"paths./tables/{webId}/securityentries/{name}.delete.parameters[1].type" = "string"
"paths./tables/{webId}/securityentries/{name}.delete.parameters[2].description" = "If false, the new access permissions are only applied to the associated object. If true, the access permissions of children with any parent-child reference types will change when the permissions on the primary parent change."
"paths./tables/{webId}/securityentries/{name}.delete.parameters[2].in" = "query"
"paths./tables/{webId}/securityentries/{name}.delete.parameters[2].name" = "applyToChildren"
"paths./tables/{webId}/securityentries/{name}.delete.parameters[2].required" = false
"paths./tables/{webId}/securityentries/{name}.delete.parameters[2].type" = "boolean"
"paths./tables/{webId}/securityentries/{name}.delete.responses.204.description" = "The security entry was deleted."
"paths./tables/{webId}/securityentries/{name}.delete.summary" = "Delete a security entry owned by the table."
"paths./tables/{webId}/securityentries/{name}.delete.tags.length" = 1
"paths./tables/{webId}/securityentries/{name}.delete.tags[0]" = "Table"
"paths./tables/{webId}/securityentries/{name}.get.consumes.length" = 0
"paths./tables/{webId}/securityentries/{name}.get.deprecated" = false
"paths./tables/{webId}/securityentries/{name}.get.operationId" = "Table_GetSecurityEntryByName"
"paths./tables/{webId}/securityentries/{name}.get.parameters.length" = 3
"paths./tables/{webId}/securityentries/{name}.get.parameters[0].description" = "The name of the security entry. For every backslash character (\\) in the security entry name, replace with asterisk (*). As an example, use domain*username instead of domain\\username."
"paths./tables/{webId}/securityentries/{name}.get.parameters[0].in" = "path"
"paths./tables/{webId}/securityentries/{name}.get.parameters[0].name" = "name"
"paths./tables/{webId}/securityentries/{name}.get.parameters[0].required" = true
"paths./tables/{webId}/securityentries/{name}.get.parameters[0].type" = "string"
"paths./tables/{webId}/securityentries/{name}.get.parameters[1].description" = "The ID of the table."
"paths./tables/{webId}/securityentries/{name}.get.parameters[1].in" = "path"
"paths./tables/{webId}/securityentries/{name}.get.parameters[1].name" = "webId"
"paths./tables/{webId}/securityentries/{name}.get.parameters[1].required" = true
"paths./tables/{webId}/securityentries/{name}.get.parameters[1].type" = "string"
"paths./tables/{webId}/securityentries/{name}.get.parameters[2].description" = "List of fields to be returned in the response, separated by semicolons (;). If this parameter is not specified, all available fields will be returned."
"paths./tables/{webId}/securityentries/{name}.get.parameters[2].in" = "query"
"paths./tables/{webId}/securityentries/{name}.get.parameters[2].name" = "selectedFields"
"paths./tables/{webId}/securityentries/{name}.get.parameters[2].required" = false
"paths./tables/{webId}/securityentries/{name}.get.parameters[2].type" = "string"
"paths./tables/{webId}/securityentries/{name}.get.responses.200.description" = "The security entry matching the specified condition."
"paths./tables/{webId}/securityentries/{name}.get.responses.200.schema.$ref" = "#/definitions/SecurityEntry"
"paths./tables/{webId}/securityentries/{name}.get.responses.404.description" = "The security entry with the specified name is not found."
"paths./tables/{webId}/securityentries/{name}.get.responses.404.schema.$ref" = "#/definitions/Errors"
"paths./tables/{webId}/securityentries/{name}.get.summary" = "Retrieve the security entry associated with the table with the specified name."
"paths./tables/{webId}/securityentries/{name}.get.tags.length" = 1
"paths./tables/{webId}/securityentries/{name}.get.tags[0]" = "Table"
"paths./tables/{webId}/securityentries/{name}.put.consumes.length" = 2
"paths./tables/{webId}/securityentries/{name}.put.consumes[0]" = "application/json"
"paths./tables/{webId}/securityentries/{name}.put.consumes[1]" = "text/json"
"paths./tables/{webId}/securityentries/{name}.put.deprecated" = false
"paths./tables/{webId}/securityentries/{name}.put.operationId" = "Table_UpdateSecurityEntry"
"paths./tables/{webId}/securityentries/{name}.put.parameters.length" = 4
"paths./tables/{webId}/securityentries/{name}.put.parameters[0].description" = "The name of the security entry."
"paths./tables/{webId}/securityentries/{name}.put.parameters[0].in" = "path"
"paths./tables/{webId}/securityentries/{name}.put.parameters[0].name" = "name"
"paths./tables/{webId}/securityentries/{name}.put.parameters[0].required" = true
"paths./tables/{webId}/securityentries/{name}.put.parameters[0].type" = "string"
"paths./tables/{webId}/securityentries/{name}.put.parameters[1].description" = "The ID of the table where the security entry will be updated."
"paths./tables/{webId}/securityentries/{name}.put.parameters[1].in" = "path"
"paths./tables/{webId}/securityentries/{name}.put.parameters[1].name" = "webId"
"paths./tables/{webId}/securityentries/{name}.put.parameters[1].required" = true
"paths./tables/{webId}/securityentries/{name}.put.parameters[1].type" = "string"
"paths./tables/{webId}/securityentries/{name}.put.parameters[2].description" = "The new security entry definition. The full list of allow and deny rights must be supplied or they will be removed."
"paths./tables/{webId}/securityentries/{name}.put.parameters[2].in" = "body"
"paths./tables/{webId}/securityentries/{name}.put.parameters[2].name" = "securityEntry"
"paths./tables/{webId}/securityentries/{name}.put.parameters[2].required" = true
"paths./tables/{webId}/securityentries/{name}.put.parameters[2].schema.$ref" = "#/definitions/SecurityEntry"
"paths./tables/{webId}/securityentries/{name}.put.parameters[3].description" = "If false, the new access permissions are only applied to the associated object. If true, the access permissions of children with any parent-child reference types will change when the permissions on the primary parent change."
"paths./tables/{webId}/securityentries/{name}.put.parameters[3].in" = "query"
"paths./tables/{webId}/securityentries/{name}.put.parameters[3].name" = "applyToChildren"
"paths./tables/{webId}/securityentries/{name}.put.parameters[3].required" = false
"paths./tables/{webId}/securityentries/{name}.put.parameters[3].type" = "boolean"
"paths./tables/{webId}/securityentries/{name}.put.responses.204.description" = "The security entry was updated."
"paths./tables/{webId}/securityentries/{name}.put.summary" = "Update a security entry owned by the table."
"paths./tables/{webId}/securityentries/{name}.put.tags.length" = 1
"paths./tables/{webId}/securityentries/{name}.put.tags[0]" = "Table"
"paths./timeruleplugins.get.consumes.length" = 0
"paths./timeruleplugins.get.deprecated" = false
"paths./timeruleplugins.get.description" = "This method returns a Time Rule Plug-in based on the hierarchical path associated with it, and should be used when a path has been received from a separate part of the PI System for use in the PI Web API. Users should primarily search with the WebID when available."
"paths./timeruleplugins.get.operationId" = "TimeRulePlugIn_GetByPath"
"paths./timeruleplugins.get.parameters.length" = 2
"paths./timeruleplugins.get.parameters[0].description" = "The path to the Time Rule Plug-in."
"paths./timeruleplugins.get.parameters[0].in" = "query"
"paths./timeruleplugins.get.parameters[0].name" = "path"
"paths./timeruleplugins.get.parameters[0].required" = true
"paths./timeruleplugins.get.parameters[0].type" = "string"
"paths./timeruleplugins.get.parameters[1].description" = "List of fields to be returned in the response, separated by semicolons (;). If this parameter is not specified, all available fields will be returned."
"paths./timeruleplugins.get.parameters[1].in" = "query"
"paths./timeruleplugins.get.parameters[1].name" = "selectedFields"
"paths./timeruleplugins.get.parameters[1].required" = false
"paths./timeruleplugins.get.parameters[1].type" = "string"
"paths./timeruleplugins.get.responses.200.description" = "The specified Time Rule Plug-in."
"paths./timeruleplugins.get.responses.200.schema.$ref" = "#/definitions/TimeRulePlugIn"
"paths./timeruleplugins.get.summary" = "Retrieve a Time Rule Plug-in by path."
"paths./timeruleplugins.get.tags.length" = 1
"paths./timeruleplugins.get.tags[0]" = "TimeRulePlugIn"
"paths./timeruleplugins/{webId}.get.consumes.length" = 0
"paths./timeruleplugins/{webId}.get.deprecated" = false
"paths./timeruleplugins/{webId}.get.operationId" = "TimeRulePlugIn_Get"
"paths./timeruleplugins/{webId}.get.parameters.length" = 2
"paths./timeruleplugins/{webId}.get.parameters[0].description" = "The ID of the Time Rule Plug-in."
"paths./timeruleplugins/{webId}.get.parameters[0].in" = "path"
"paths./timeruleplugins/{webId}.get.parameters[0].name" = "webId"
"paths./timeruleplugins/{webId}.get.parameters[0].required" = true
"paths./timeruleplugins/{webId}.get.parameters[0].type" = "string"
"paths./timeruleplugins/{webId}.get.parameters[1].description" = "List of fields to be returned in the response, separated by semicolons (;). If this parameter is not specified, all available fields will be returned."
"paths./timeruleplugins/{webId}.get.parameters[1].in" = "query"
"paths./timeruleplugins/{webId}.get.parameters[1].name" = "selectedFields"
"paths./timeruleplugins/{webId}.get.parameters[1].required" = false
"paths./timeruleplugins/{webId}.get.parameters[1].type" = "string"
"paths./timeruleplugins/{webId}.get.responses.200.description" = "The specified Time Rule Plug-in."
"paths./timeruleplugins/{webId}.get.responses.200.schema.$ref" = "#/definitions/TimeRulePlugIn"
"paths./timeruleplugins/{webId}.get.summary" = "Retrieve a Time Rule Plug-in."
"paths./timeruleplugins/{webId}.get.tags.length" = 1
"paths./timeruleplugins/{webId}.get.tags[0]" = "TimeRulePlugIn"
"paths./timerules.get.consumes.length" = 0
"paths./timerules.get.deprecated" = false
"paths./timerules.get.description" = "This method returns a Time Rule based on the hierarchical path associated with it, and should be used when a path has been received from a separate part of the PI System for use in the PI Web API. Users should primarily search with the WebID when available."
"paths./timerules.get.operationId" = "TimeRule_GetByPath"
"paths./timerules.get.parameters.length" = 2
"paths./timerules.get.parameters[0].description" = "The path to the Time Rule."
"paths./timerules.get.parameters[0].in" = "query"
"paths./timerules.get.parameters[0].name" = "path"
"paths./timerules.get.parameters[0].required" = true
"paths./timerules.get.parameters[0].type" = "string"
"paths./timerules.get.parameters[1].description" = "List of fields to be returned in the response, separated by semicolons (;). If this parameter is not specified, all available fields will be returned."
"paths./timerules.get.parameters[1].in" = "query"
"paths./timerules.get.parameters[1].name" = "selectedFields"
"paths./timerules.get.parameters[1].required" = false
"paths./timerules.get.parameters[1].type" = "string"
"paths./timerules.get.responses.200.description" = "The requested Time Rule."
"paths./timerules.get.responses.200.schema.$ref" = "#/definitions/TimeRule"
"paths./timerules.get.summary" = "Retrieve a Time Rule by path."
"paths./timerules.get.tags.length" = 1
"paths./timerules.get.tags[0]" = "TimeRule"
"paths./timerules/{webId}.delete.consumes.length" = 0
"paths./timerules/{webId}.delete.deprecated" = false
"paths./timerules/{webId}.delete.operationId" = "TimeRule_Delete"
"paths./timerules/{webId}.delete.parameters.length" = 1
"paths./timerules/{webId}.delete.parameters[0].description" = "The ID of the Time Rule."
"paths./timerules/{webId}.delete.parameters[0].in" = "path"
"paths./timerules/{webId}.delete.parameters[0].name" = "webId"
"paths./timerules/{webId}.delete.parameters[0].required" = true
"paths./timerules/{webId}.delete.parameters[0].type" = "string"
"paths./timerules/{webId}.delete.responses.204.description" = "The Time Rule was deleted."
"paths./timerules/{webId}.delete.summary" = "Delete a Time Rule."
"paths./timerules/{webId}.delete.tags.length" = 1
"paths./timerules/{webId}.delete.tags[0]" = "TimeRule"
"paths./timerules/{webId}.get.consumes.length" = 0
"paths./timerules/{webId}.get.deprecated" = false
"paths./timerules/{webId}.get.operationId" = "TimeRule_Get"
"paths./timerules/{webId}.get.parameters.length" = 2
"paths./timerules/{webId}.get.parameters[0].description" = "The ID of the Time Rule."
"paths./timerules/{webId}.get.parameters[0].in" = "path"
"paths./timerules/{webId}.get.parameters[0].name" = "webId"
"paths./timerules/{webId}.get.parameters[0].required" = true
"paths./timerules/{webId}.get.parameters[0].type" = "string"
"paths./timerules/{webId}.get.parameters[1].description" = "List of fields to be returned in the response, separated by semicolons (;). If this parameter is not specified, all available fields will be returned."
"paths./timerules/{webId}.get.parameters[1].in" = "query"
"paths./timerules/{webId}.get.parameters[1].name" = "selectedFields"
"paths./timerules/{webId}.get.parameters[1].required" = false
"paths./timerules/{webId}.get.parameters[1].type" = "string"
"paths./timerules/{webId}.get.responses.200.description" = "The requested Time Rule."
"paths./timerules/{webId}.get.responses.200.schema.$ref" = "#/definitions/TimeRule"
"paths./timerules/{webId}.get.summary" = "Retrieve a Time Rule."
"paths./timerules/{webId}.get.tags.length" = 1
"paths./timerules/{webId}.get.tags[0]" = "TimeRule"
"paths./timerules/{webId}.patch.consumes.length" = 2
"paths./timerules/{webId}.patch.consumes[0]" = "application/json"
"paths./timerules/{webId}.patch.consumes[1]" = "text/json"
"paths./timerules/{webId}.patch.deprecated" = false
"paths./timerules/{webId}.patch.operationId" = "TimeRule_Update"
"paths./timerules/{webId}.patch.parameters.length" = 2
"paths./timerules/{webId}.patch.parameters[0].description" = "The ID of the Time Rule."
"paths./timerules/{webId}.patch.parameters[0].in" = "path"
"paths./timerules/{webId}.patch.parameters[0].name" = "webId"
"paths./timerules/{webId}.patch.parameters[0].required" = true
"paths./timerules/{webId}.patch.parameters[0].type" = "string"
"paths./timerules/{webId}.patch.parameters[1].description" = "A partial Time Rule containing the desired changes."
"paths./timerules/{webId}.patch.parameters[1].in" = "body"
"paths./timerules/{webId}.patch.parameters[1].name" = "timeRule"
"paths./timerules/{webId}.patch.parameters[1].required" = true
"paths./timerules/{webId}.patch.parameters[1].schema.$ref" = "#/definitions/TimeRule"
"paths./timerules/{webId}.patch.responses.204.description" = "The Time Rule was updated."
"paths./timerules/{webId}.patch.summary" = "Update a Time Rule by replacing items in its definition."
"paths./timerules/{webId}.patch.tags.length" = 1
"paths./timerules/{webId}.patch.tags[0]" = "TimeRule"
"paths./unitclasses.get.consumes.length" = 0
"paths./unitclasses.get.deprecated" = false
"paths./unitclasses.get.operationId" = "UnitClass_GetByPath"
"paths./unitclasses.get.parameters.length" = 2
"paths./unitclasses.get.parameters[0].description" = "The path to the unit class."
"paths./unitclasses.get.parameters[0].in" = "query"
"paths./unitclasses.get.parameters[0].name" = "path"
"paths./unitclasses.get.parameters[0].required" = true
"paths./unitclasses.get.parameters[0].type" = "string"
"paths./unitclasses.get.parameters[1].description" = "List of fields to be returned in the response, separated by semicolons (;). If this parameter is not specified, all available fields will be returned."
"paths./unitclasses.get.parameters[1].in" = "query"
"paths./unitclasses.get.parameters[1].name" = "selectedFields"
"paths./unitclasses.get.parameters[1].required" = false
"paths./unitclasses.get.parameters[1].type" = "string"
"paths./unitclasses.get.responses.200.description" = "The specified unit class."
"paths./unitclasses.get.responses.200.schema.$ref" = "#/definitions/UnitClass"
"paths./unitclasses.get.summary" = "Retrieve a unit class by path."
"paths./unitclasses.get.tags.length" = 1
"paths./unitclasses.get.tags[0]" = "UnitClass"
"paths./unitclasses/{webId}.delete.consumes.length" = 0
"paths./unitclasses/{webId}.delete.deprecated" = false
"paths./unitclasses/{webId}.delete.operationId" = "UnitClass_Delete"
"paths./unitclasses/{webId}.delete.parameters.length" = 1
"paths./unitclasses/{webId}.delete.parameters[0].description" = "The ID of the unit class."
"paths./unitclasses/{webId}.delete.parameters[0].in" = "path"
"paths./unitclasses/{webId}.delete.parameters[0].name" = "webId"
"paths./unitclasses/{webId}.delete.parameters[0].required" = true
"paths./unitclasses/{webId}.delete.parameters[0].type" = "string"
"paths./unitclasses/{webId}.delete.responses.204.description" = "The unit class was deleted."
"paths./unitclasses/{webId}.delete.summary" = "Delete a unit class."
"paths./unitclasses/{webId}.delete.tags.length" = 1
"paths./unitclasses/{webId}.delete.tags[0]" = "UnitClass"
"paths./unitclasses/{webId}.get.consumes.length" = 0
"paths./unitclasses/{webId}.get.deprecated" = false
"paths./unitclasses/{webId}.get.operationId" = "UnitClass_Get"
"paths./unitclasses/{webId}.get.parameters.length" = 2
"paths./unitclasses/{webId}.get.parameters[0].description" = "The ID of the unit class."
"paths./unitclasses/{webId}.get.parameters[0].in" = "path"
"paths./unitclasses/{webId}.get.parameters[0].name" = "webId"
"paths./unitclasses/{webId}.get.parameters[0].required" = true
"paths./unitclasses/{webId}.get.parameters[0].type" = "string"
"paths./unitclasses/{webId}.get.parameters[1].description" = "List of fields to be returned in the response, separated by semicolons (;). If this parameter is not specified, all available fields will be returned."
"paths./unitclasses/{webId}.get.parameters[1].in" = "query"
"paths./unitclasses/{webId}.get.parameters[1].name" = "selectedFields"
"paths./unitclasses/{webId}.get.parameters[1].required" = false
"paths./unitclasses/{webId}.get.parameters[1].type" = "string"
"paths./unitclasses/{webId}.get.responses.200.description" = "The specified unit class."
"paths./unitclasses/{webId}.get.responses.200.schema.$ref" = "#/definitions/UnitClass"
"paths./unitclasses/{webId}.get.summary" = "Retrieve a unit class."
"paths./unitclasses/{webId}.get.tags.length" = 1
"paths./unitclasses/{webId}.get.tags[0]" = "UnitClass"
"paths./unitclasses/{webId}.patch.consumes.length" = 2
"paths./unitclasses/{webId}.patch.consumes[0]" = "application/json"
"paths./unitclasses/{webId}.patch.consumes[1]" = "text/json"
"paths./unitclasses/{webId}.patch.deprecated" = false
"paths./unitclasses/{webId}.patch.operationId" = "UnitClass_Update"
"paths./unitclasses/{webId}.patch.parameters.length" = 2
"paths./unitclasses/{webId}.patch.parameters[0].description" = "The ID of the unit class."
"paths./unitclasses/{webId}.patch.parameters[0].in" = "path"
"paths./unitclasses/{webId}.patch.parameters[0].name" = "webId"
"paths./unitclasses/{webId}.patch.parameters[0].required" = true
"paths./unitclasses/{webId}.patch.parameters[0].type" = "string"
"paths./unitclasses/{webId}.patch.parameters[1].description" = "A partial unit class containing the desired changes."
"paths./unitclasses/{webId}.patch.parameters[1].in" = "body"
"paths./unitclasses/{webId}.patch.parameters[1].name" = "unitClassDTO"
"paths./unitclasses/{webId}.patch.parameters[1].required" = true
"paths./unitclasses/{webId}.patch.parameters[1].schema.$ref" = "#/definitions/UnitClass"
"paths./unitclasses/{webId}.patch.responses.204.description" = "The unit class was updated."
"paths./unitclasses/{webId}.patch.summary" = "Update a unit class."
"paths./unitclasses/{webId}.patch.tags.length" = 1
"paths./unitclasses/{webId}.patch.tags[0]" = "UnitClass"
"paths./unitclasses/{webId}/canonicalunit.get.consumes.length" = 0
"paths./unitclasses/{webId}/canonicalunit.get.deprecated" = false
"paths./unitclasses/{webId}/canonicalunit.get.operationId" = "UnitClass_GetCanonicalUnit"
"paths./unitclasses/{webId}/canonicalunit.get.parameters.length" = 2
"paths./unitclasses/{webId}/canonicalunit.get.parameters[0].description" = "The ID of unit class."
"paths./unitclasses/{webId}/canonicalunit.get.parameters[0].in" = "path"
"paths./unitclasses/{webId}/canonicalunit.get.parameters[0].name" = "webId"
"paths./unitclasses/{webId}/canonicalunit.get.parameters[0].required" = true
"paths./unitclasses/{webId}/canonicalunit.get.parameters[0].type" = "string"
"paths./unitclasses/{webId}/canonicalunit.get.parameters[1].description" = "List of fields to be returned in the response, separated by semicolons (;). If this parameter is not specified, all available fields will be returned."
"paths./unitclasses/{webId}/canonicalunit.get.parameters[1].in" = "query"
"paths./unitclasses/{webId}/canonicalunit.get.parameters[1].name" = "selectedFields"
"paths./unitclasses/{webId}/canonicalunit.get.parameters[1].required" = false
"paths./unitclasses/{webId}/canonicalunit.get.parameters[1].type" = "string"
"paths./unitclasses/{webId}/canonicalunit.get.responses.200.description" = "the canonical unit of the specified unit class."
"paths./unitclasses/{webId}/canonicalunit.get.responses.200.schema.$ref" = "#/definitions/Unit"
"paths./unitclasses/{webId}/canonicalunit.get.summary" = "Get the canonical unit of a unit class."
"paths./unitclasses/{webId}/canonicalunit.get.tags.length" = 1
"paths./unitclasses/{webId}/canonicalunit.get.tags[0]" = "UnitClass"
"paths./unitclasses/{webId}/units.get.consumes.length" = 0
"paths./unitclasses/{webId}/units.get.deprecated" = false
"paths./unitclasses/{webId}/units.get.operationId" = "UnitClass_GetUnits"
"paths./unitclasses/{webId}/units.get.parameters.length" = 2
"paths./unitclasses/{webId}/units.get.parameters[0].description" = "The ID of unit class."
"paths./unitclasses/{webId}/units.get.parameters[0].in" = "path"
"paths./unitclasses/{webId}/units.get.parameters[0].name" = "webId"
"paths./unitclasses/{webId}/units.get.parameters[0].required" = true
"paths./unitclasses/{webId}/units.get.parameters[0].type" = "string"
"paths./unitclasses/{webId}/units.get.parameters[1].description" = "List of fields to be returned in the response, separated by semicolons (;). If this parameter is not specified, all available fields will be returned."
"paths./unitclasses/{webId}/units.get.parameters[1].in" = "query"
"paths./unitclasses/{webId}/units.get.parameters[1].name" = "selectedFields"
"paths./unitclasses/{webId}/units.get.parameters[1].required" = false
"paths./unitclasses/{webId}/units.get.parameters[1].type" = "string"
"paths./unitclasses/{webId}/units.get.responses.200.description" = "The list of units in the unit class."
"paths./unitclasses/{webId}/units.get.responses.200.schema.$ref" = "#/definitions/Unit"
"paths./unitclasses/{webId}/units.get.summary" = "Get a list of all units belonging to the unit class."
"paths./unitclasses/{webId}/units.get.tags.length" = 1
"paths./unitclasses/{webId}/units.get.tags[0]" = "UnitClass"
"paths./unitclasses/{webId}/units.post.consumes.length" = 2
"paths./unitclasses/{webId}/units.post.consumes[0]" = "application/json"
"paths./unitclasses/{webId}/units.post.consumes[1]" = "text/json"
"paths./unitclasses/{webId}/units.post.deprecated" = false
"paths./unitclasses/{webId}/units.post.operationId" = "UnitClass_CreateUnit"
"paths./unitclasses/{webId}/units.post.parameters.length" = 2
"paths./unitclasses/{webId}/units.post.parameters[0].description" = "The ID of the server."
"paths./unitclasses/{webId}/units.post.parameters[0].in" = "path"
"paths./unitclasses/{webId}/units.post.parameters[0].name" = "webId"
"paths./unitclasses/{webId}/units.post.parameters[0].required" = true
"paths./unitclasses/{webId}/units.post.parameters[0].type" = "string"
"paths./unitclasses/{webId}/units.post.parameters[1].description" = "The new unit definition."
"paths./unitclasses/{webId}/units.post.parameters[1].in" = "body"
"paths./unitclasses/{webId}/units.post.parameters[1].name" = "unitDTO"
"paths./unitclasses/{webId}/units.post.parameters[1].required" = true
"paths./unitclasses/{webId}/units.post.parameters[1].schema.$ref" = "#/definitions/Unit"
"paths./unitclasses/{webId}/units.post.responses.201.description" = "The unit was created. The response's Location header is a link to the unit."
"paths./unitclasses/{webId}/units.post.summary" = "Create a unit in the specified Unit Class."
"paths./unitclasses/{webId}/units.post.tags.length" = 1
"paths./unitclasses/{webId}/units.post.tags[0]" = "UnitClass"
"paths./units.get.consumes.length" = 0
"paths./units.get.deprecated" = false
"paths./units.get.operationId" = "Unit_GetByPath"
"paths./units.get.parameters.length" = 2
"paths./units.get.parameters[0].description" = "The path to the unit."
"paths./units.get.parameters[0].in" = "query"
"paths./units.get.parameters[0].name" = "path"
"paths./units.get.parameters[0].required" = true
"paths./units.get.parameters[0].type" = "string"
"paths./units.get.parameters[1].description" = "List of fields to be returned in the response, separated by semicolons (;). If this parameter is not specified, all available fields will be returned."
"paths./units.get.parameters[1].in" = "query"
"paths./units.get.parameters[1].name" = "selectedFields"
"paths./units.get.parameters[1].required" = false
"paths./units.get.parameters[1].type" = "string"
"paths./units.get.responses.200.description" = "The specified unit."
"paths./units.get.responses.200.schema.$ref" = "#/definitions/Unit"
"paths./units.get.summary" = "Retrieve a unit by path."
"paths./units.get.tags.length" = 1
"paths./units.get.tags[0]" = "Unit"
"paths./units/{webId}.delete.consumes.length" = 0
"paths./units/{webId}.delete.deprecated" = false
"paths./units/{webId}.delete.operationId" = "Unit_Delete"
"paths./units/{webId}.delete.parameters.length" = 1
"paths./units/{webId}.delete.parameters[0].description" = "The ID of the unit."
"paths./units/{webId}.delete.parameters[0].in" = "path"
"paths./units/{webId}.delete.parameters[0].name" = "webId"
"paths./units/{webId}.delete.parameters[0].required" = true
"paths./units/{webId}.delete.parameters[0].type" = "string"
"paths./units/{webId}.delete.responses.204.description" = "The unit was deleted."
"paths./units/{webId}.delete.summary" = "Delete a unit."
"paths./units/{webId}.delete.tags.length" = 1
"paths./units/{webId}.delete.tags[0]" = "Unit"
"paths./units/{webId}.get.consumes.length" = 0
"paths./units/{webId}.get.deprecated" = false
"paths./units/{webId}.get.operationId" = "Unit_Get"
"paths./units/{webId}.get.parameters.length" = 2
"paths./units/{webId}.get.parameters[0].description" = "The ID of the unit."
"paths./units/{webId}.get.parameters[0].in" = "path"
"paths./units/{webId}.get.parameters[0].name" = "webId"
"paths./units/{webId}.get.parameters[0].required" = true
"paths./units/{webId}.get.parameters[0].type" = "string"
"paths./units/{webId}.get.parameters[1].description" = "List of fields to be returned in the response, separated by semicolons (;). If this parameter is not specified, all available fields will be returned."
"paths./units/{webId}.get.parameters[1].in" = "query"
"paths./units/{webId}.get.parameters[1].name" = "selectedFields"
"paths./units/{webId}.get.parameters[1].required" = false
"paths./units/{webId}.get.parameters[1].type" = "string"
"paths./units/{webId}.get.responses.200.description" = "The specified unit."
"paths./units/{webId}.get.responses.200.schema.$ref" = "#/definitions/Unit"
"paths./units/{webId}.get.summary" = "Retrieve a unit."
"paths./units/{webId}.get.tags.length" = 1
"paths./units/{webId}.get.tags[0]" = "Unit"
"paths./units/{webId}.patch.consumes.length" = 2
"paths./units/{webId}.patch.consumes[0]" = "application/json"
"paths./units/{webId}.patch.consumes[1]" = "text/json"
"paths./units/{webId}.patch.deprecated" = false
"paths./units/{webId}.patch.operationId" = "Unit_Update"
"paths./units/{webId}.patch.parameters.length" = 2
"paths./units/{webId}.patch.parameters[0].description" = "The ID of the unit."
"paths./units/{webId}.patch.parameters[0].in" = "path"
"paths./units/{webId}.patch.parameters[0].name" = "webId"
"paths./units/{webId}.patch.parameters[0].required" = true
"paths./units/{webId}.patch.parameters[0].type" = "string"
"paths./units/{webId}.patch.parameters[1].description" = "A partial unit containing the desired changes."
"paths./units/{webId}.patch.parameters[1].in" = "body"
"paths./units/{webId}.patch.parameters[1].name" = "unitDTO"
"paths./units/{webId}.patch.parameters[1].required" = true
"paths./units/{webId}.patch.parameters[1].schema.$ref" = "#/definitions/Unit"
"paths./units/{webId}.patch.responses.204.description" = "The unit was updated."
"paths./units/{webId}.patch.summary" = "Update a unit."
"paths./units/{webId}.patch.tags.length" = 1
"paths./units/{webId}.patch.tags[0]" = "Unit"
"produces.length" = 4
"produces[0]" = "application/json"
"produces[1]" = "text/json"
"produces[2]" = "text/html"
"produces[3]" = "application/x-ms-application"
"schemes.length" = 1
"schemes[0]" = "https"
swagger = "2.0"
