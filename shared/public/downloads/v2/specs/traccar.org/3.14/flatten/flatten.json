{
	"basePath": "/api",
	"consumes.length": 1,
	"consumes[0]": "application/json",
	"definitions.Attribute.properties.attribute.type": "string",
	"definitions.Attribute.properties.description.type": "string",
	"definitions.Attribute.properties.expression.type": "string",
	"definitions.Attribute.properties.id.type": "integer",
	"definitions.Attribute.properties.type.description": "String|Number|Boolean",
	"definitions.Attribute.properties.type.type": "string",
	"definitions.Calendar.properties.data.description": "base64 encoded in iCalendar format",
	"definitions.Calendar.properties.data.type": "string",
	"definitions.Calendar.properties.id.type": "integer",
	"definitions.Calendar.properties.name.type": "string",
	"definitions.Command.properties.description.type": "string",
	"definitions.Command.properties.deviceId.type": "integer",
	"definitions.Command.properties.id.type": "integer",
	"definitions.Command.properties.type.type": "string",
	"definitions.CommandType.properties.type.type": "string",
	"definitions.Device.properties.category.type": "string",
	"definitions.Device.properties.contact.type": "string",
	"definitions.Device.properties.geofenceIds.items.type": "integer",
	"definitions.Device.properties.geofenceIds.type": "array",
	"definitions.Device.properties.groupId.type": "integer",
	"definitions.Device.properties.id.type": "integer",
	"definitions.Device.properties.lastUpdate.description": "in IS0 8601 format. eg. `1963-11-22T18:30:00Z`",
	"definitions.Device.properties.lastUpdate.format": "date-time",
	"definitions.Device.properties.lastUpdate.type": "string",
	"definitions.Device.properties.model.type": "string",
	"definitions.Device.properties.name.type": "string",
	"definitions.Device.properties.phone.type": "string",
	"definitions.Device.properties.positionId.type": "integer",
	"definitions.Device.properties.status.type": "string",
	"definitions.Device.properties.uniqueId.type": "string",
	"definitions.DeviceTotalDistance.properties.deviceId.type": "integer",
	"definitions.DeviceTotalDistance.properties.totalDistance.description": "in meters",
	"definitions.DeviceTotalDistance.properties.totalDistance.type": "number",
	"definitions.Driver.properties.id.type": "integer",
	"definitions.Driver.properties.name.type": "string",
	"definitions.Driver.properties.uniqueId.type": "string",
	"definitions.Event.properties.deviceId.type": "integer",
	"definitions.Event.properties.geofenceId.type": "integer",
	"definitions.Event.properties.id.type": "integer",
	"definitions.Event.properties.positionId.type": "integer",
	"definitions.Event.properties.serverTime.description": "in IS0 8601 format. eg. `1963-11-22T18:30:00Z`",
	"definitions.Event.properties.serverTime.format": "date-time",
	"definitions.Event.properties.serverTime.type": "string",
	"definitions.Event.properties.type.type": "string",
	"definitions.Geofence.properties.area.type": "string",
	"definitions.Geofence.properties.calendarId.type": "integer",
	"definitions.Geofence.properties.description.type": "string",
	"definitions.Geofence.properties.id.type": "integer",
	"definitions.Geofence.properties.name.type": "string",
	"definitions.Group.properties.groupId.type": "integer",
	"definitions.Group.properties.id.type": "integer",
	"definitions.Group.properties.name.type": "string",
	"definitions.Notification.properties.always.type": "boolean",
	"definitions.Notification.properties.id.type": "integer",
	"definitions.Notification.properties.mail.type": "boolean",
	"definitions.Notification.properties.sms.type": "boolean",
	"definitions.Notification.properties.type.type": "string",
	"definitions.Notification.properties.web.type": "boolean",
	"definitions.NotificationType.properties.type.type": "string",
	"definitions.Permission.description": "This is a permission map that contain two object indexes. It is used to link/unlink objects. Order is important. Example: { deviceId:8, geofenceId: 16 }",
	"definitions.Permission.properties.attributeId.description": "Computed Attribute Id, can be second parameter only",
	"definitions.Permission.properties.attributeId.type": "integer",
	"definitions.Permission.properties.calendarId.description": "Geofence Id, can be second parameter only and only in combination with userId",
	"definitions.Permission.properties.calendarId.type": "integer",
	"definitions.Permission.properties.deviceId.description": "Device Id, can be first parameter or second only in combination with userId",
	"definitions.Permission.properties.deviceId.type": "integer",
	"definitions.Permission.properties.driverId.description": "Driver Id, can be second parameter only",
	"definitions.Permission.properties.driverId.type": "integer",
	"definitions.Permission.properties.geofenceId.description": "Geofence Id, can be second parameter only",
	"definitions.Permission.properties.geofenceId.type": "integer",
	"definitions.Permission.properties.groupId.description": "Group Id, can be first parameter or second only in combination with userId",
	"definitions.Permission.properties.groupId.type": "integer",
	"definitions.Permission.properties.managedUserId.description": "User Id, can be second parameter only and only in combination with userId",
	"definitions.Permission.properties.managedUserId.type": "integer",
	"definitions.Permission.properties.userId.description": "User Id, can be only first parameter",
	"definitions.Permission.properties.userId.type": "integer",
	"definitions.Position.properties.accuracy.type": "number",
	"definitions.Position.properties.address.type": "string",
	"definitions.Position.properties.altitude.type": "number",
	"definitions.Position.properties.course.type": "number",
	"definitions.Position.properties.deviceId.type": "integer",
	"definitions.Position.properties.deviceTime.description": "in IS0 8601 format. eg. `1963-11-22T18:30:00Z`",
	"definitions.Position.properties.deviceTime.format": "date-time",
	"definitions.Position.properties.deviceTime.type": "string",
	"definitions.Position.properties.fixTime.description": "in IS0 8601 format. eg. `1963-11-22T18:30:00Z`",
	"definitions.Position.properties.fixTime.format": "date-time",
	"definitions.Position.properties.fixTime.type": "string",
	"definitions.Position.properties.id.type": "integer",
	"definitions.Position.properties.latitude.type": "number",
	"definitions.Position.properties.longitude.type": "number",
	"definitions.Position.properties.network.type": "string",
	"definitions.Position.properties.outdated.type": "boolean",
	"definitions.Position.properties.protocol.type": "string",
	"definitions.Position.properties.serverTime.description": "in IS0 8601 format. eg. `1963-11-22T18:30:00Z`",
	"definitions.Position.properties.serverTime.format": "date-time",
	"definitions.Position.properties.serverTime.type": "string",
	"definitions.Position.properties.speed.description": "in knots",
	"definitions.Position.properties.speed.type": "number",
	"definitions.Position.properties.valid.type": "boolean",
	"definitions.ReportStops.properties.address.type": "string",
	"definitions.ReportStops.properties.deviceId.type": "integer",
	"definitions.ReportStops.properties.deviceName.type": "string",
	"definitions.ReportStops.properties.duration.type": "integer",
	"definitions.ReportStops.properties.endTime.description": "in IS0 8601 format. eg. `1963-11-22T18:30:00Z`",
	"definitions.ReportStops.properties.endTime.format": "date-time",
	"definitions.ReportStops.properties.endTime.type": "string",
	"definitions.ReportStops.properties.engineHours.type": "integer",
	"definitions.ReportStops.properties.lat.type": "number",
	"definitions.ReportStops.properties.lon.type": "number",
	"definitions.ReportStops.properties.spentFuel.description": "in liters",
	"definitions.ReportStops.properties.spentFuel.type": "number",
	"definitions.ReportStops.properties.startTime.description": "in IS0 8601 format. eg. `1963-11-22T18:30:00Z`",
	"definitions.ReportStops.properties.startTime.format": "date-time",
	"definitions.ReportStops.properties.startTime.type": "string",
	"definitions.ReportSummary.properties.averageSpeed.description": "in knots",
	"definitions.ReportSummary.properties.averageSpeed.type": "number",
	"definitions.ReportSummary.properties.deviceId.type": "integer",
	"definitions.ReportSummary.properties.deviceName.type": "string",
	"definitions.ReportSummary.properties.distance.description": "in meters",
	"definitions.ReportSummary.properties.distance.type": "number",
	"definitions.ReportSummary.properties.engineHours.type": "integer",
	"definitions.ReportSummary.properties.maxSpeed.description": "in knots",
	"definitions.ReportSummary.properties.maxSpeed.type": "number",
	"definitions.ReportSummary.properties.spentFuel.description": "in liters",
	"definitions.ReportSummary.properties.spentFuel.type": "number",
	"definitions.ReportTrips.properties.averageSpeed.description": "in knots",
	"definitions.ReportTrips.properties.averageSpeed.type": "number",
	"definitions.ReportTrips.properties.deviceId.type": "integer",
	"definitions.ReportTrips.properties.deviceName.type": "string",
	"definitions.ReportTrips.properties.distance.description": "in meters",
	"definitions.ReportTrips.properties.distance.type": "number",
	"definitions.ReportTrips.properties.driverName.type": "string",
	"definitions.ReportTrips.properties.driverUniqueId.type": "integer",
	"definitions.ReportTrips.properties.duration.type": "integer",
	"definitions.ReportTrips.properties.endAddress.type": "string",
	"definitions.ReportTrips.properties.endLat.type": "number",
	"definitions.ReportTrips.properties.endLon.type": "number",
	"definitions.ReportTrips.properties.endTime.description": "in IS0 8601 format. eg. `1963-11-22T18:30:00Z`",
	"definitions.ReportTrips.properties.endTime.format": "date-time",
	"definitions.ReportTrips.properties.endTime.type": "string",
	"definitions.ReportTrips.properties.maxSpeed.description": "in knots",
	"definitions.ReportTrips.properties.maxSpeed.type": "number",
	"definitions.ReportTrips.properties.spentFuel.description": "in liters",
	"definitions.ReportTrips.properties.spentFuel.type": "number",
	"definitions.ReportTrips.properties.startAddress.type": "string",
	"definitions.ReportTrips.properties.startLat.type": "number",
	"definitions.ReportTrips.properties.startLon.type": "number",
	"definitions.ReportTrips.properties.startTime.description": "in IS0 8601 format. eg. `1963-11-22T18:30:00Z`",
	"definitions.ReportTrips.properties.startTime.format": "date-time",
	"definitions.ReportTrips.properties.startTime.type": "string",
	"definitions.Server.properties.bingKey.type": "string",
	"definitions.Server.properties.coordinateFormat.type": "string",
	"definitions.Server.properties.deviceReadonly.type": "boolean",
	"definitions.Server.properties.forceSettings.type": "boolean",
	"definitions.Server.properties.id.type": "integer",
	"definitions.Server.properties.latitude.type": "number",
	"definitions.Server.properties.limitCommands.type": "boolean",
	"definitions.Server.properties.longitude.type": "number",
	"definitions.Server.properties.map.type": "string",
	"definitions.Server.properties.mapUrl.type": "string",
	"definitions.Server.properties.readonly.type": "boolean",
	"definitions.Server.properties.registration.type": "boolean",
	"definitions.Server.properties.twelveHourFormat.type": "boolean",
	"definitions.Server.properties.version.type": "string",
	"definitions.Server.properties.zoom.type": "integer",
	"definitions.Statistics.properties.activeDevices.type": "integer",
	"definitions.Statistics.properties.activeUsers.type": "integer",
	"definitions.Statistics.properties.captureTime.description": "in IS0 8601 format. eg. `1963-11-22T18:30:00Z`",
	"definitions.Statistics.properties.captureTime.format": "date-time",
	"definitions.Statistics.properties.captureTime.type": "string",
	"definitions.Statistics.properties.messagesReceived.type": "integer",
	"definitions.Statistics.properties.messagesStored.type": "integer",
	"definitions.Statistics.properties.requests.type": "integer",
	"definitions.User.properties.admin.type": "boolean",
	"definitions.User.properties.coordinateFormat.type": "string",
	"definitions.User.properties.deviceLimit.type": "integer",
	"definitions.User.properties.deviceReadonly.type": "boolean",
	"definitions.User.properties.disabled.type": "boolean",
	"definitions.User.properties.email.type": "string",
	"definitions.User.properties.expirationTime.description": "in IS0 8601 format. eg. `1963-11-22T18:30:00Z`",
	"definitions.User.properties.expirationTime.format": "date-time",
	"definitions.User.properties.expirationTime.type": "string",
	"definitions.User.properties.id.type": "integer",
	"definitions.User.properties.latitude.type": "number",
	"definitions.User.properties.limitCommands.type": "boolean",
	"definitions.User.properties.longitude.type": "number",
	"definitions.User.properties.map.type": "string",
	"definitions.User.properties.name.type": "string",
	"definitions.User.properties.password.type": "string",
	"definitions.User.properties.readonly.type": "boolean",
	"definitions.User.properties.token.type": "string",
	"definitions.User.properties.twelveHourFormat.type": "boolean",
	"definitions.User.properties.userLimit.type": "integer",
	"definitions.User.properties.zoom.type": "integer",
	"host": "demo.traccar.org",
	"info.description": "Open Source GPS Tracking Platform",
	"info.title": "traccar",
	"info.version": "3.14",
	"info.x-apisguru-categories.length": 1,
	"info.x-apisguru-categories[0]": "location",
	"info.x-logo.url": "https://api.apis.guru/v2/cache/logo/https_pbs.twimg.com_profile_images_590395195268538368_oScd6DxA_400x400.png",
	"info.x-origin.length": 1,
	"info.x-origin[0].format": "swagger",
	"info.x-origin[0].url": "https://raw.githubusercontent.com/tananaev/traccar/master/swagger.json",
	"info.x-origin[0].version": "2.0",
	"info.x-preferred": true,
	"info.x-providerName": "traccar.org",
	"parameters.Attribute.in": "body",
	"parameters.Attribute.name": "body",
	"parameters.Attribute.required": true,
	"parameters.Attribute.schema.$ref": "#/definitions/Attribute",
	"parameters.Calendar.in": "body",
	"parameters.Calendar.name": "body",
	"parameters.Calendar.required": true,
	"parameters.Calendar.schema.$ref": "#/definitions/Calendar",
	"parameters.Command.in": "body",
	"parameters.Command.name": "body",
	"parameters.Command.required": true,
	"parameters.Command.schema.$ref": "#/definitions/Command",
	"parameters.Device.in": "body",
	"parameters.Device.name": "body",
	"parameters.Device.required": true,
	"parameters.Device.schema.$ref": "#/definitions/Device",
	"parameters.Driver.in": "body",
	"parameters.Driver.name": "body",
	"parameters.Driver.required": true,
	"parameters.Driver.schema.$ref": "#/definitions/Driver",
	"parameters.Geofence.in": "body",
	"parameters.Geofence.name": "body",
	"parameters.Geofence.required": true,
	"parameters.Geofence.schema.$ref": "#/definitions/Geofence",
	"parameters.Group.in": "body",
	"parameters.Group.name": "body",
	"parameters.Group.required": true,
	"parameters.Group.schema.$ref": "#/definitions/Group",
	"parameters.Notification.in": "body",
	"parameters.Notification.name": "body",
	"parameters.Notification.required": true,
	"parameters.Notification.schema.$ref": "#/definitions/Notification",
	"parameters.Permission.in": "body",
	"parameters.Permission.name": "body",
	"parameters.Permission.required": true,
	"parameters.Permission.schema.$ref": "#/definitions/Permission",
	"parameters.User.in": "body",
	"parameters.User.name": "body",
	"parameters.User.required": true,
	"parameters.User.schema.$ref": "#/definitions/User",
	"parameters.all.description": "Can only be used by admins or managers to fetch all entities",
	"parameters.all.in": "query",
	"parameters.all.name": "all",
	"parameters.all.type": "boolean",
	"parameters.deviceId.description": "Standard users can use this only with _deviceId_s, they have access to",
	"parameters.deviceId.in": "query",
	"parameters.deviceId.name": "deviceId",
	"parameters.deviceId.type": "integer",
	"parameters.deviceIdArray.collectionFormat": "multi",
	"parameters.deviceIdArray.in": "query",
	"parameters.deviceIdArray.items.type": "integer",
	"parameters.deviceIdArray.name": "deviceId",
	"parameters.deviceIdArray.type": "array",
	"parameters.entityId.in": "path",
	"parameters.entityId.name": "id",
	"parameters.entityId.required": true,
	"parameters.entityId.type": "integer",
	"parameters.fromTime.description": "in IS0 8601 format. eg. `1963-11-22T18:30:00Z`",
	"parameters.fromTime.format": "date-time",
	"parameters.fromTime.in": "query",
	"parameters.fromTime.name": "from",
	"parameters.fromTime.required": true,
	"parameters.fromTime.type": "string",
	"parameters.groupId.description": "Standard users can use this only with _groupId_s, they have access to",
	"parameters.groupId.in": "query",
	"parameters.groupId.name": "groupId",
	"parameters.groupId.type": "integer",
	"parameters.groupIdArray.collectionFormat": "multi",
	"parameters.groupIdArray.in": "query",
	"parameters.groupIdArray.items.type": "integer",
	"parameters.groupIdArray.name": "groupId",
	"parameters.groupIdArray.type": "array",
	"parameters.refresh.in": "query",
	"parameters.refresh.name": "refresh",
	"parameters.refresh.required": false,
	"parameters.refresh.type": "boolean",
	"parameters.toTime.description": "in IS0 8601 format. eg. `1963-11-22T18:30:00Z`",
	"parameters.toTime.format": "date-time",
	"parameters.toTime.in": "query",
	"parameters.toTime.name": "to",
	"parameters.toTime.required": true,
	"parameters.toTime.type": "string",
	"parameters.userId.description": "Standard users can use this only with their own _userId_",
	"parameters.userId.in": "query",
	"parameters.userId.name": "userId",
	"parameters.userId.type": "integer",
	"paths./attributes/computed.get.description": "Without params, it returns a list of Attributes the user has access to",
	"paths./attributes/computed.get.parameters.length": 5,
	"paths./attributes/computed.get.parameters[0].$ref": "#/parameters/all",
	"paths./attributes/computed.get.parameters[1].$ref": "#/parameters/userId",
	"paths./attributes/computed.get.parameters[2].$ref": "#/parameters/deviceId",
	"paths./attributes/computed.get.parameters[3].$ref": "#/parameters/groupId",
	"paths./attributes/computed.get.parameters[4].$ref": "#/parameters/refresh",
	"paths./attributes/computed.get.responses.200.description": "OK",
	"paths./attributes/computed.get.responses.200.schema.items.$ref": "#/definitions/Attribute",
	"paths./attributes/computed.get.responses.200.schema.type": "array",
	"paths./attributes/computed.get.summary": "Fetch a list of Attributes",
	"paths./attributes/computed.post.parameters.length": 1,
	"paths./attributes/computed.post.parameters[0].$ref": "#/parameters/Attribute",
	"paths./attributes/computed.post.responses.200.description": "OK",
	"paths./attributes/computed.post.responses.200.schema.$ref": "#/definitions/Attribute",
	"paths./attributes/computed.post.summary": "Create an Attribute",
	"paths./attributes/computed/{id}.delete.parameters.length": 1,
	"paths./attributes/computed/{id}.delete.parameters[0].$ref": "#/parameters/entityId",
	"paths./attributes/computed/{id}.delete.responses.204.description": "No Content",
	"paths./attributes/computed/{id}.delete.summary": "Delete an Attribute",
	"paths./attributes/computed/{id}.put.parameters.length": 2,
	"paths./attributes/computed/{id}.put.parameters[0].$ref": "#/parameters/entityId",
	"paths./attributes/computed/{id}.put.parameters[1].$ref": "#/parameters/Attribute",
	"paths./attributes/computed/{id}.put.responses.200.description": "OK",
	"paths./attributes/computed/{id}.put.responses.200.schema.$ref": "#/definitions/Attribute",
	"paths./attributes/computed/{id}.put.summary": "Update an Attribute",
	"paths./calendars.get.description": "Without params, it returns a list of Calendars the user has access to",
	"paths./calendars.get.parameters.length": 2,
	"paths./calendars.get.parameters[0].$ref": "#/parameters/all",
	"paths./calendars.get.parameters[1].$ref": "#/parameters/userId",
	"paths./calendars.get.responses.200.description": "OK",
	"paths./calendars.get.responses.200.schema.items.$ref": "#/definitions/Calendar",
	"paths./calendars.get.responses.200.schema.type": "array",
	"paths./calendars.get.summary": "Fetch a list of Calendars",
	"paths./calendars.post.parameters.length": 1,
	"paths./calendars.post.parameters[0].$ref": "#/parameters/Calendar",
	"paths./calendars.post.responses.200.description": "OK",
	"paths./calendars.post.responses.200.schema.$ref": "#/definitions/Calendar",
	"paths./calendars.post.summary": "Create a Calendar",
	"paths./calendars/{id}.delete.parameters.length": 1,
	"paths./calendars/{id}.delete.parameters[0].$ref": "#/parameters/entityId",
	"paths./calendars/{id}.delete.responses.204.description": "No Content",
	"paths./calendars/{id}.delete.summary": "Delete a Calendar",
	"paths./calendars/{id}.put.parameters.length": 2,
	"paths./calendars/{id}.put.parameters[0].$ref": "#/parameters/entityId",
	"paths./calendars/{id}.put.parameters[1].$ref": "#/parameters/Calendar",
	"paths./calendars/{id}.put.responses.200.description": "OK",
	"paths./calendars/{id}.put.responses.200.schema.$ref": "#/definitions/Calendar",
	"paths./calendars/{id}.put.summary": "Update a Calendar",
	"paths./commands.get.description": "Without params, it returns a list of Drivers the user has access to",
	"paths./commands.get.parameters.length": 5,
	"paths./commands.get.parameters[0].$ref": "#/parameters/all",
	"paths./commands.get.parameters[1].$ref": "#/parameters/userId",
	"paths./commands.get.parameters[2].$ref": "#/parameters/deviceId",
	"paths./commands.get.parameters[3].$ref": "#/parameters/groupId",
	"paths./commands.get.parameters[4].$ref": "#/parameters/refresh",
	"paths./commands.get.responses.200.description": "OK",
	"paths./commands.get.responses.200.schema.items.$ref": "#/definitions/Command",
	"paths./commands.get.responses.200.schema.type": "array",
	"paths./commands.get.summary": "Fetch a list of Saved Commands",
	"paths./commands.post.parameters.length": 1,
	"paths./commands.post.parameters[0].$ref": "#/parameters/Command",
	"paths./commands.post.responses.200.description": "OK",
	"paths./commands.post.responses.200.schema.$ref": "#/definitions/Command",
	"paths./commands.post.summary": "Create a Saved Command",
	"paths./commands/send.get.description": "Return a list of saved commands linked to Device and its groups, filtered by current Device state and protocol support",
	"paths./commands/send.get.parameters.length": 1,
	"paths./commands/send.get.parameters[0].$ref": "#/parameters/deviceId",
	"paths./commands/send.get.responses.200.description": "OK",
	"paths./commands/send.get.responses.200.schema.items.$ref": "#/definitions/Command",
	"paths./commands/send.get.responses.200.schema.type": "array",
	"paths./commands/send.get.responses.400.description": "Could happen when the user doesn't have permission for the device",
	"paths./commands/send.get.summary": "Fetch a list of Saved Commands supported by Device at the moment",
	"paths./commands/send.post.description": "Dispatch a new command or Saved Command if _body.id_ set",
	"paths./commands/send.post.parameters.length": 1,
	"paths./commands/send.post.parameters[0].in": "body",
	"paths./commands/send.post.parameters[0].name": "body",
	"paths./commands/send.post.parameters[0].required": true,
	"paths./commands/send.post.parameters[0].schema.$ref": "#/definitions/Command",
	"paths./commands/send.post.responses.200.description": "OK",
	"paths./commands/send.post.responses.200.schema.$ref": "#/definitions/Command",
	"paths./commands/send.post.responses.400.description": "Could happen when dispatching to a device that is offline, the user doesn't have permission or an incorrect command _type_ for the device",
	"paths./commands/send.post.summary": "Dispatch commands to device",
	"paths./commands/types.get.parameters.length": 2,
	"paths./commands/types.get.parameters[0].in": "query",
	"paths./commands/types.get.parameters[0].name": "deviceId",
	"paths./commands/types.get.parameters[0].type": "integer",
	"paths./commands/types.get.parameters[1].in": "query",
	"paths./commands/types.get.parameters[1].name": "textChannel",
	"paths./commands/types.get.parameters[1].type": "boolean",
	"paths./commands/types.get.responses.200.description": "OK",
	"paths./commands/types.get.responses.200.schema.items.$ref": "#/definitions/CommandType",
	"paths./commands/types.get.responses.200.schema.type": "array",
	"paths./commands/types.get.responses.400.description": "Could happen when trying to fetch from a device the user does not have permission",
	"paths./commands/types.get.summary": "Fetch a list of available Commands for the Device or all possible Commands if Device ommited",
	"paths./commands/{id}.delete.parameters.length": 1,
	"paths./commands/{id}.delete.parameters[0].$ref": "#/parameters/entityId",
	"paths./commands/{id}.delete.responses.204.description": "No Content",
	"paths./commands/{id}.delete.summary": "Delete a Saved Command",
	"paths./commands/{id}.put.parameters.length": 2,
	"paths./commands/{id}.put.parameters[0].$ref": "#/parameters/entityId",
	"paths./commands/{id}.put.parameters[1].$ref": "#/parameters/Command",
	"paths./commands/{id}.put.responses.200.description": "OK",
	"paths./commands/{id}.put.responses.200.schema.$ref": "#/definitions/Command",
	"paths./commands/{id}.put.summary": "Update a Saved Command",
	"paths./devices.get.description": "Without any params, returns a list of the user's devices",
	"paths./devices.get.parameters.length": 4,
	"paths./devices.get.parameters[0].$ref": "#/parameters/all",
	"paths./devices.get.parameters[1].$ref": "#/parameters/userId",
	"paths./devices.get.parameters[2].collectionFormat": "multi",
	"paths./devices.get.parameters[2].description": "To fetch one or more devices. Multiple params can be passed like `id=31\u0026id=42`",
	"paths./devices.get.parameters[2].in": "query",
	"paths./devices.get.parameters[2].name": "id",
	"paths./devices.get.parameters[2].required": false,
	"paths./devices.get.parameters[2].type": "integer",
	"paths./devices.get.parameters[3].collectionFormat": "multi",
	"paths./devices.get.parameters[3].description": "To fetch one or more devices. Multiple params can be passed like `uniqueId=333331\u0026uniqieId=44442`",
	"paths./devices.get.parameters[3].in": "query",
	"paths./devices.get.parameters[3].name": "uniqueId",
	"paths./devices.get.parameters[3].required": false,
	"paths./devices.get.parameters[3].type": "string",
	"paths./devices.get.responses.200.description": "OK",
	"paths./devices.get.responses.200.schema.items.$ref": "#/definitions/Device",
	"paths./devices.get.responses.200.schema.type": "array",
	"paths./devices.get.responses.400.description": "No permission",
	"paths./devices.get.summary": "Fetch a list of Devices",
	"paths./devices.post.parameters.length": 1,
	"paths./devices.post.parameters[0].$ref": "#/parameters/Device",
	"paths./devices.post.responses.200.description": "OK",
	"paths./devices.post.responses.200.schema.$ref": "#/definitions/Device",
	"paths./devices.post.summary": "Create a Device",
	"paths./devices/{id}.delete.parameters.length": 1,
	"paths./devices/{id}.delete.parameters[0].$ref": "#/parameters/entityId",
	"paths./devices/{id}.delete.responses.204.description": "No Content",
	"paths./devices/{id}.delete.summary": "Delete a Device",
	"paths./devices/{id}.put.parameters.length": 2,
	"paths./devices/{id}.put.parameters[0].$ref": "#/parameters/entityId",
	"paths./devices/{id}.put.parameters[1].$ref": "#/parameters/Device",
	"paths./devices/{id}.put.responses.200.description": "OK",
	"paths./devices/{id}.put.responses.200.schema.$ref": "#/definitions/Device",
	"paths./devices/{id}.put.summary": "Update a Device",
	"paths./devices/{id}/distance.put.parameters.length": 2,
	"paths./devices/{id}/distance.put.parameters[0].$ref": "#/parameters/entityId",
	"paths./devices/{id}/distance.put.parameters[1].in": "body",
	"paths./devices/{id}/distance.put.parameters[1].name": "body",
	"paths./devices/{id}/distance.put.parameters[1].required": true,
	"paths./devices/{id}/distance.put.parameters[1].schema.$ref": "#/definitions/DeviceTotalDistance",
	"paths./devices/{id}/distance.put.responses.204.description": "No Content",
	"paths./devices/{id}/distance.put.summary": "Update the distance counter of the Device",
	"paths./drivers.get.description": "Without params, it returns a list of Drivers the user has access to",
	"paths./drivers.get.parameters.length": 5,
	"paths./drivers.get.parameters[0].$ref": "#/parameters/all",
	"paths./drivers.get.parameters[1].$ref": "#/parameters/userId",
	"paths./drivers.get.parameters[2].$ref": "#/parameters/deviceId",
	"paths./drivers.get.parameters[3].$ref": "#/parameters/groupId",
	"paths./drivers.get.parameters[4].$ref": "#/parameters/refresh",
	"paths./drivers.get.responses.200.description": "OK",
	"paths./drivers.get.responses.200.schema.items.$ref": "#/definitions/Driver",
	"paths./drivers.get.responses.200.schema.type": "array",
	"paths./drivers.get.summary": "Fetch a list of Drivers",
	"paths./drivers.post.parameters.length": 1,
	"paths./drivers.post.parameters[0].$ref": "#/parameters/Driver",
	"paths./drivers.post.responses.200.description": "OK",
	"paths./drivers.post.responses.200.schema.$ref": "#/definitions/Driver",
	"paths./drivers.post.summary": "Create a Driver",
	"paths./drivers/{id}.delete.parameters.length": 1,
	"paths./drivers/{id}.delete.parameters[0].$ref": "#/parameters/entityId",
	"paths./drivers/{id}.delete.responses.204.description": "No Content",
	"paths./drivers/{id}.delete.summary": "Delete a Driver",
	"paths./drivers/{id}.put.parameters.length": 2,
	"paths./drivers/{id}.put.parameters[0].$ref": "#/parameters/entityId",
	"paths./drivers/{id}.put.parameters[1].$ref": "#/parameters/Driver",
	"paths./drivers/{id}.put.responses.200.description": "OK",
	"paths./drivers/{id}.put.responses.200.schema.$ref": "#/definitions/Driver",
	"paths./drivers/{id}.put.summary": "Update a Driver",
	"paths./events/{id}.get.parameters.length": 1,
	"paths./events/{id}.get.parameters[0].$ref": "#/parameters/entityId",
	"paths./events/{id}.get.responses.200.description": "OK",
	"paths./events/{id}.get.responses.200.schema.$ref": "#/definitions/Event",
	"paths./geofences.get.description": "Without params, it returns a list of Geofences the user has access to",
	"paths./geofences.get.parameters.length": 5,
	"paths./geofences.get.parameters[0].$ref": "#/parameters/all",
	"paths./geofences.get.parameters[1].$ref": "#/parameters/userId",
	"paths./geofences.get.parameters[2].$ref": "#/parameters/deviceId",
	"paths./geofences.get.parameters[3].$ref": "#/parameters/groupId",
	"paths./geofences.get.parameters[4].$ref": "#/parameters/refresh",
	"paths./geofences.get.responses.200.description": "OK",
	"paths./geofences.get.responses.200.schema.items.$ref": "#/definitions/Geofence",
	"paths./geofences.get.responses.200.schema.type": "array",
	"paths./geofences.get.summary": "Fetch a list of Geofences",
	"paths./geofences.post.parameters.length": 1,
	"paths./geofences.post.parameters[0].$ref": "#/parameters/Geofence",
	"paths./geofences.post.responses.200.description": "OK",
	"paths./geofences.post.responses.200.schema.$ref": "#/definitions/Geofence",
	"paths./geofences.post.summary": "Create a Geofence",
	"paths./geofences/{id}.delete.parameters.length": 1,
	"paths./geofences/{id}.delete.parameters[0].$ref": "#/parameters/entityId",
	"paths./geofences/{id}.delete.responses.204.description": "No Content",
	"paths./geofences/{id}.delete.summary": "Delete a Geofence",
	"paths./geofences/{id}.put.parameters.length": 2,
	"paths./geofences/{id}.put.parameters[0].$ref": "#/parameters/entityId",
	"paths./geofences/{id}.put.parameters[1].$ref": "#/parameters/Geofence",
	"paths./geofences/{id}.put.responses.200.description": "OK",
	"paths./geofences/{id}.put.responses.200.schema.$ref": "#/definitions/Geofence",
	"paths./geofences/{id}.put.summary": "Update a Geofence",
	"paths./groups.get.description": "Without any params, returns a list of the Groups the user belongs to",
	"paths./groups.get.parameters.length": 2,
	"paths./groups.get.parameters[0].$ref": "#/parameters/all",
	"paths./groups.get.parameters[1].$ref": "#/parameters/userId",
	"paths./groups.get.responses.200.description": "OK",
	"paths./groups.get.responses.200.schema.items.$ref": "#/definitions/Group",
	"paths./groups.get.responses.200.schema.type": "array",
	"paths./groups.get.summary": "Fetch a list of Groups",
	"paths./groups.post.parameters.length": 1,
	"paths./groups.post.parameters[0].$ref": "#/parameters/Group",
	"paths./groups.post.responses.200.description": "OK",
	"paths./groups.post.responses.200.schema.$ref": "#/definitions/Group",
	"paths./groups.post.responses.400.description": "No permission",
	"paths./groups.post.summary": "Create a Group",
	"paths./groups/{id}.delete.parameters.length": 1,
	"paths./groups/{id}.delete.parameters[0].$ref": "#/parameters/entityId",
	"paths./groups/{id}.delete.responses.204.description": "No Content",
	"paths./groups/{id}.delete.summary": "Delete a Group",
	"paths./groups/{id}.put.parameters.length": 2,
	"paths./groups/{id}.put.parameters[0].$ref": "#/parameters/entityId",
	"paths./groups/{id}.put.parameters[1].$ref": "#/parameters/Group",
	"paths./groups/{id}.put.responses.200.description": "OK",
	"paths./groups/{id}.put.responses.200.schema.$ref": "#/definitions/Group",
	"paths./groups/{id}.put.summary": "Update a Group",
	"paths./notifications.get.description": "Without params, it returns a list of Notifications the user has access to",
	"paths./notifications.get.parameters.length": 5,
	"paths./notifications.get.parameters[0].$ref": "#/parameters/all",
	"paths./notifications.get.parameters[1].$ref": "#/parameters/userId",
	"paths./notifications.get.parameters[2].$ref": "#/parameters/deviceId",
	"paths./notifications.get.parameters[3].$ref": "#/parameters/groupId",
	"paths./notifications.get.parameters[4].$ref": "#/parameters/refresh",
	"paths./notifications.get.responses.200.description": "OK",
	"paths./notifications.get.responses.200.schema.items.$ref": "#/definitions/Notification",
	"paths./notifications.get.responses.200.schema.type": "array",
	"paths./notifications.get.summary": "Fetch a list of Notifications",
	"paths./notifications.post.parameters.length": 1,
	"paths./notifications.post.parameters[0].$ref": "#/parameters/Notification",
	"paths./notifications.post.responses.200.description": "OK",
	"paths./notifications.post.responses.200.schema.$ref": "#/definitions/Notification",
	"paths./notifications.post.summary": "Create a Notification",
	"paths./notifications/test.post.parameters.length": 0,
	"paths./notifications/test.post.responses.204.description": "Successful sending",
	"paths./notifications/test.post.responses.400.description": "Could happen if sending has failed",
	"paths./notifications/test.post.summary": "Send test notification to current user via Email and SMS",
	"paths./notifications/types.get.parameters.length": 0,
	"paths./notifications/types.get.responses.200.description": "OK",
	"paths./notifications/types.get.responses.200.schema.items.$ref": "#/definitions/NotificationType",
	"paths./notifications/types.get.responses.200.schema.type": "array",
	"paths./notifications/types.get.summary": "Fetch a list of available Notification types",
	"paths./notifications/{id}.delete.parameters.length": 1,
	"paths./notifications/{id}.delete.parameters[0].$ref": "#/parameters/entityId",
	"paths./notifications/{id}.delete.responses.204.description": "No Content",
	"paths./notifications/{id}.delete.summary": "Delete a Notification",
	"paths./notifications/{id}.put.parameters.length": 2,
	"paths./notifications/{id}.put.parameters[0].$ref": "#/parameters/entityId",
	"paths./notifications/{id}.put.parameters[1].$ref": "#/parameters/Notification",
	"paths./notifications/{id}.put.responses.200.description": "OK",
	"paths./notifications/{id}.put.responses.200.schema.$ref": "#/definitions/Notification",
	"paths./notifications/{id}.put.summary": "Update a Notification",
	"paths./permissions.delete.parameters.length": 1,
	"paths./permissions.delete.parameters[0].$ref": "#/parameters/Permission",
	"paths./permissions.delete.responses.204.description": "No Content",
	"paths./permissions.delete.summary": "Unlink an Object from another Object",
	"paths./permissions.post.parameters.length": 1,
	"paths./permissions.post.parameters[0].$ref": "#/parameters/Permission",
	"paths./permissions.post.responses.200.description": "OK",
	"paths./permissions.post.responses.200.schema.$ref": "#/definitions/Permission",
	"paths./permissions.post.responses.400.description": "No permission",
	"paths./permissions.post.summary": "Link an Object to another Object",
	"paths./positions.get.consumes.length": 3,
	"paths./positions.get.consumes[0]": "application/json",
	"paths./positions.get.consumes[1]": "text/csv",
	"paths./positions.get.consumes[2]": "application/gpx+xml",
	"paths./positions.get.description": "Without any params, it returns a list of last known positions for all the user's Devices. _from_ and _to_ fields are not required with _id_",
	"paths./positions.get.parameters.length": 4,
	"paths./positions.get.parameters[0].description": "_deviceId_ is optional, but requires the _from_ and _to_ parameters when used",
	"paths./positions.get.parameters[0].in": "query",
	"paths./positions.get.parameters[0].name": "deviceId",
	"paths./positions.get.parameters[0].required": false,
	"paths./positions.get.parameters[0].type": "integer",
	"paths./positions.get.parameters[1].description": "in IS0 8601 format. eg. `1963-11-22T18:30:00Z`",
	"paths./positions.get.parameters[1].format": "date-time",
	"paths./positions.get.parameters[1].in": "query",
	"paths./positions.get.parameters[1].name": "from",
	"paths./positions.get.parameters[1].required": false,
	"paths./positions.get.parameters[1].type": "string",
	"paths./positions.get.parameters[2].description": "in IS0 8601 format. eg. `1963-11-22T18:30:00Z`",
	"paths./positions.get.parameters[2].format": "date-time",
	"paths./positions.get.parameters[2].in": "query",
	"paths./positions.get.parameters[2].name": "to",
	"paths./positions.get.parameters[2].required": false,
	"paths./positions.get.parameters[2].type": "string",
	"paths./positions.get.parameters[3].collectionFormat": "multi",
	"paths./positions.get.parameters[3].description": "To fetch one or more positions. Multiple params can be passed like `id=31\u0026id=42`",
	"paths./positions.get.parameters[3].in": "query",
	"paths./positions.get.parameters[3].name": "id",
	"paths./positions.get.parameters[3].required": false,
	"paths./positions.get.parameters[3].type": "integer",
	"paths./positions.get.produces.length": 3,
	"paths./positions.get.produces[0]": "application/json",
	"paths./positions.get.produces[1]": "text/csv",
	"paths./positions.get.produces[2]": "application/gpx+xml",
	"paths./positions.get.responses.200.description": "OK",
	"paths./positions.get.responses.200.schema.items.$ref": "#/definitions/Position",
	"paths./positions.get.responses.200.schema.type": "array",
	"paths./positions.get.summary": "Fetches a list of Positions",
	"paths./reports/events.get.consumes.length": 2,
	"paths./reports/events.get.consumes[0]": "application/json",
	"paths./reports/events.get.consumes[1]": "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
	"paths./reports/events.get.description": "At least one _deviceId_ or one _groupId_ must be passed",
	"paths./reports/events.get.parameters.length": 5,
	"paths./reports/events.get.parameters[0].$ref": "#/parameters/deviceIdArray",
	"paths./reports/events.get.parameters[1].$ref": "#/parameters/groupIdArray",
	"paths./reports/events.get.parameters[2].description": "% can be used to return events of all types",
	"paths./reports/events.get.parameters[2].in": "query",
	"paths./reports/events.get.parameters[2].items.type": "string",
	"paths./reports/events.get.parameters[2].name": "type",
	"paths./reports/events.get.parameters[2].type": "array",
	"paths./reports/events.get.parameters[3].$ref": "#/parameters/fromTime",
	"paths./reports/events.get.parameters[4].$ref": "#/parameters/toTime",
	"paths./reports/events.get.produces.length": 2,
	"paths./reports/events.get.produces[0]": "application/json",
	"paths./reports/events.get.produces[1]": "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
	"paths./reports/events.get.responses.200.description": "OK",
	"paths./reports/events.get.responses.200.schema.items.$ref": "#/definitions/Event",
	"paths./reports/events.get.responses.200.schema.type": "array",
	"paths./reports/events.get.summary": "Fetch a list of Events within the time period for the Devices or Groups",
	"paths./reports/route.get.consumes.length": 2,
	"paths./reports/route.get.consumes[0]": "application/json",
	"paths./reports/route.get.consumes[1]": "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
	"paths./reports/route.get.description": "At least one _deviceId_ or one _groupId_ must be passed",
	"paths./reports/route.get.parameters.length": 4,
	"paths./reports/route.get.parameters[0].$ref": "#/parameters/deviceIdArray",
	"paths./reports/route.get.parameters[1].$ref": "#/parameters/groupIdArray",
	"paths./reports/route.get.parameters[2].$ref": "#/parameters/fromTime",
	"paths./reports/route.get.parameters[3].$ref": "#/parameters/toTime",
	"paths./reports/route.get.produces.length": 2,
	"paths./reports/route.get.produces[0]": "application/json",
	"paths./reports/route.get.produces[1]": "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
	"paths./reports/route.get.responses.200.description": "OK",
	"paths./reports/route.get.responses.200.schema.items.$ref": "#/definitions/Position",
	"paths./reports/route.get.responses.200.schema.type": "array",
	"paths./reports/route.get.summary": "Fetch a list of Positions within the time period for the Devices or Groups",
	"paths./reports/stops.get.consumes.length": 2,
	"paths./reports/stops.get.consumes[0]": "application/json",
	"paths./reports/stops.get.consumes[1]": "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
	"paths./reports/stops.get.description": "At least one _deviceId_ or one _groupId_ must be passed",
	"paths./reports/stops.get.parameters.length": 4,
	"paths./reports/stops.get.parameters[0].$ref": "#/parameters/deviceIdArray",
	"paths./reports/stops.get.parameters[1].$ref": "#/parameters/groupIdArray",
	"paths./reports/stops.get.parameters[2].$ref": "#/parameters/fromTime",
	"paths./reports/stops.get.parameters[3].$ref": "#/parameters/toTime",
	"paths./reports/stops.get.produces.length": 2,
	"paths./reports/stops.get.produces[0]": "application/json",
	"paths./reports/stops.get.produces[1]": "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
	"paths./reports/stops.get.responses.200.description": "OK",
	"paths./reports/stops.get.responses.200.schema.items.$ref": "#/definitions/ReportStops",
	"paths./reports/stops.get.responses.200.schema.type": "array",
	"paths./reports/stops.get.summary": "Fetch a list of ReportStops within the time period for the Devices or Groups",
	"paths./reports/summary.get.consumes.length": 2,
	"paths./reports/summary.get.consumes[0]": "application/json",
	"paths./reports/summary.get.consumes[1]": "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
	"paths./reports/summary.get.description": "At least one _deviceId_ or one _groupId_ must be passed",
	"paths./reports/summary.get.parameters.length": 4,
	"paths./reports/summary.get.parameters[0].$ref": "#/parameters/deviceIdArray",
	"paths./reports/summary.get.parameters[1].$ref": "#/parameters/groupIdArray",
	"paths./reports/summary.get.parameters[2].$ref": "#/parameters/fromTime",
	"paths./reports/summary.get.parameters[3].$ref": "#/parameters/toTime",
	"paths./reports/summary.get.produces.length": 2,
	"paths./reports/summary.get.produces[0]": "application/json",
	"paths./reports/summary.get.produces[1]": "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
	"paths./reports/summary.get.responses.200.description": "OK",
	"paths./reports/summary.get.responses.200.schema.items.$ref": "#/definitions/ReportSummary",
	"paths./reports/summary.get.responses.200.schema.type": "array",
	"paths./reports/summary.get.summary": "Fetch a list of ReportSummary within the time period for the Devices or Groups",
	"paths./reports/trips.get.consumes.length": 2,
	"paths./reports/trips.get.consumes[0]": "application/json",
	"paths./reports/trips.get.consumes[1]": "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
	"paths./reports/trips.get.description": "At least one _deviceId_ or one _groupId_ must be passed",
	"paths./reports/trips.get.parameters.length": 4,
	"paths./reports/trips.get.parameters[0].$ref": "#/parameters/deviceIdArray",
	"paths./reports/trips.get.parameters[1].$ref": "#/parameters/groupIdArray",
	"paths./reports/trips.get.parameters[2].$ref": "#/parameters/fromTime",
	"paths./reports/trips.get.parameters[3].$ref": "#/parameters/toTime",
	"paths./reports/trips.get.produces.length": 2,
	"paths./reports/trips.get.produces[0]": "application/json",
	"paths./reports/trips.get.produces[1]": "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
	"paths./reports/trips.get.responses.200.description": "OK",
	"paths./reports/trips.get.responses.200.schema.items.$ref": "#/definitions/ReportTrips",
	"paths./reports/trips.get.responses.200.schema.type": "array",
	"paths./reports/trips.get.summary": "Fetch a list of ReportTrips within the time period for the Devices or Groups",
	"paths./server.get.responses.200.description": "OK",
	"paths./server.get.responses.200.schema.$ref": "#/definitions/Server",
	"paths./server.get.summary": "Fetch Server information",
	"paths./server.put.parameters.length": 1,
	"paths./server.put.parameters[0].in": "body",
	"paths./server.put.parameters[0].name": "body",
	"paths./server.put.parameters[0].required": true,
	"paths./server.put.parameters[0].schema.$ref": "#/definitions/Server",
	"paths./server.put.responses.200.description": "OK",
	"paths./server.put.responses.200.schema.$ref": "#/definitions/Server",
	"paths./server.put.summary": "Update Server information",
	"paths./session.delete.consumes.length": 1,
	"paths./session.delete.consumes[0]": "application/x-www-form-urlencoded",
	"paths./session.delete.parameters.length": 0,
	"paths./session.delete.responses.204.description": "No Content",
	"paths./session.delete.summary": "Close the Session",
	"paths./session.get.consumes.length": 1,
	"paths./session.get.consumes[0]": "application/x-www-form-urlencoded",
	"paths./session.get.parameters.length": 1,
	"paths./session.get.parameters[0].in": "query",
	"paths./session.get.parameters[0].name": "token",
	"paths./session.get.parameters[0].required": false,
	"paths./session.get.parameters[0].type": "string",
	"paths./session.get.responses.200.description": "OK",
	"paths./session.get.responses.200.schema.$ref": "#/definitions/User",
	"paths./session.get.responses.404.description": "Not Found",
	"paths./session.get.summary": "Fetch Session information",
	"paths./session.post.consumes.length": 1,
	"paths./session.post.consumes[0]": "application/x-www-form-urlencoded",
	"paths./session.post.parameters.length": 2,
	"paths./session.post.parameters[0].in": "formData",
	"paths./session.post.parameters[0].name": "email",
	"paths./session.post.parameters[0].required": true,
	"paths./session.post.parameters[0].type": "string",
	"paths./session.post.parameters[1].format": "password",
	"paths./session.post.parameters[1].in": "formData",
	"paths./session.post.parameters[1].name": "password",
	"paths./session.post.parameters[1].required": true,
	"paths./session.post.parameters[1].type": "string",
	"paths./session.post.responses.200.description": "OK",
	"paths./session.post.responses.200.schema.$ref": "#/definitions/User",
	"paths./session.post.responses.401.description": "Unauthorized",
	"paths./session.post.summary": "Create a new Session",
	"paths./statistics.get.parameters.length": 2,
	"paths./statistics.get.parameters[0].$ref": "#/parameters/fromTime",
	"paths./statistics.get.parameters[1].$ref": "#/parameters/toTime",
	"paths./statistics.get.responses.200.description": "OK",
	"paths./statistics.get.responses.200.schema.items.$ref": "#/definitions/Statistics",
	"paths./statistics.get.responses.200.schema.type": "array",
	"paths./statistics.get.summary": "Fetch server Statistics",
	"paths./users.get.parameters.length": 1,
	"paths./users.get.parameters[0].description": "Can only be used by admin or manager users",
	"paths./users.get.parameters[0].in": "query",
	"paths./users.get.parameters[0].name": "userId",
	"paths./users.get.parameters[0].required": false,
	"paths./users.get.parameters[0].type": "string",
	"paths./users.get.responses.200.description": "OK",
	"paths./users.get.responses.200.schema.items.$ref": "#/definitions/User",
	"paths./users.get.responses.200.schema.type": "array",
	"paths./users.get.responses.400.description": "No Permission",
	"paths./users.get.summary": "Fetch a list of Users",
	"paths./users.post.parameters.length": 1,
	"paths./users.post.parameters[0].$ref": "#/parameters/User",
	"paths./users.post.responses.200.description": "OK",
	"paths./users.post.responses.200.schema.$ref": "#/definitions/User",
	"paths./users.post.summary": "Create a User",
	"paths./users/{id}.delete.parameters.length": 1,
	"paths./users/{id}.delete.parameters[0].$ref": "#/parameters/entityId",
	"paths./users/{id}.delete.responses.204.description": "No Content",
	"paths./users/{id}.delete.summary": "Delete a User",
	"paths./users/{id}.put.parameters.length": 2,
	"paths./users/{id}.put.parameters[0].$ref": "#/parameters/entityId",
	"paths./users/{id}.put.parameters[1].$ref": "#/parameters/User",
	"paths./users/{id}.put.responses.200.description": "OK",
	"paths./users/{id}.put.responses.200.schema.$ref": "#/definitions/User",
	"paths./users/{id}.put.summary": "Update a User",
	"produces.length": 1,
	"produces[0]": "application/json",
	"schemes.length": 1,
	"schemes[0]": "http",
	"security.length": 1,
	"securityDefinitions.basicAuth.description": "Basic HTTP authorization with _email_ and _password_",
	"securityDefinitions.basicAuth.type": "basic",
	"security[0].basicAuth.length": 0,
	"swagger": "2.0"
}