basePath = "/pub"
"consumes.length" = 1
"consumes[0]" = "application/vnd.api+json"
"definitions.ActionMetric.properties.goal.type" = "object"
"definitions.ActionMetric.properties.metric_type.type" = "string"
"definitions.ActionMetric.properties.unit.type" = "string"
"definitions.ActionMetric.properties.validations.properties.maximum.properties.unit.type" = "string"
"definitions.ActionMetric.properties.validations.properties.maximum.properties.value.type" = "number"
"definitions.ActionMetric.properties.validations.properties.maximum.type" = "object"
"definitions.ActionMetric.properties.validations.properties.minimum.properties.unit.type" = "string"
"definitions.ActionMetric.properties.validations.properties.minimum.properties.value.type" = "number"
"definitions.ActionMetric.properties.validations.properties.minimum.type" = "object"
"definitions.ActionMetric.properties.validations.type" = "object"
"definitions.ActionMetric.type" = "object"
"definitions.ActionResource.properties.attributes.properties._thread.type" = "string"
"definitions.ActionResource.properties.attributes.properties.adherence.properties.complete.type" = "integer"
"definitions.ActionResource.properties.attributes.properties.adherence.properties.due.type" = "integer"
"definitions.ActionResource.properties.attributes.properties.adherence.properties.streak.properties.count.type" = "integer"
"definitions.ActionResource.properties.attributes.properties.adherence.properties.streak.properties.updated_at.format" = "dateTime"
"definitions.ActionResource.properties.attributes.properties.adherence.properties.streak.properties.updated_at.type" = "string"
"definitions.ActionResource.properties.attributes.properties.adherence.properties.streak.type" = "object"
"definitions.ActionResource.properties.attributes.properties.adherence.readOnly" = true
"definitions.ActionResource.properties.attributes.properties.adherence.type" = "object"
"definitions.ActionResource.properties.attributes.properties.details.additionalProperties" = true
"definitions.ActionResource.properties.attributes.properties.details.type" = "object"
"definitions.ActionResource.properties.attributes.properties.effective_from.format" = "dateTime"
"definitions.ActionResource.properties.attributes.properties.effective_from.type" = "string"
"definitions.ActionResource.properties.attributes.properties.effective_to.format" = "dateTime"
"definitions.ActionResource.properties.attributes.properties.effective_to.type" = "string"
"definitions.ActionResource.properties.attributes.properties.frequency_goal.properties.weeks.properties.days.items.description" = "Days of week that the action is scheduled for. Zero-indexed, ex 0 represents Sunday, etc."
"definitions.ActionResource.properties.attributes.properties.frequency_goal.properties.weeks.properties.days.items.enum.length" = 7
"definitions.ActionResource.properties.attributes.properties.frequency_goal.properties.weeks.properties.days.items.enum[0]" = 0.0
"definitions.ActionResource.properties.attributes.properties.frequency_goal.properties.weeks.properties.days.items.enum[1]" = 1.0
"definitions.ActionResource.properties.attributes.properties.frequency_goal.properties.weeks.properties.days.items.enum[2]" = 2.0
"definitions.ActionResource.properties.attributes.properties.frequency_goal.properties.weeks.properties.days.items.enum[3]" = 3.0
"definitions.ActionResource.properties.attributes.properties.frequency_goal.properties.weeks.properties.days.items.enum[4]" = 4.0
"definitions.ActionResource.properties.attributes.properties.frequency_goal.properties.weeks.properties.days.items.enum[5]" = 5.0
"definitions.ActionResource.properties.attributes.properties.frequency_goal.properties.weeks.properties.days.items.enum[6]" = 6.0
"definitions.ActionResource.properties.attributes.properties.frequency_goal.properties.weeks.properties.days.items.maxItems" = 7.0
"definitions.ActionResource.properties.attributes.properties.frequency_goal.properties.weeks.properties.days.items.type" = "integer"
"definitions.ActionResource.properties.attributes.properties.frequency_goal.properties.weeks.properties.days.type" = "array"
"definitions.ActionResource.properties.attributes.properties.frequency_goal.properties.weeks.type" = "object"
"definitions.ActionResource.properties.attributes.properties.frequency_goal.type" = "object"
"definitions.ActionResource.properties.attributes.properties.identifiers.items.$ref" = "#/definitions/Identifier"
"definitions.ActionResource.properties.attributes.properties.identifiers.type" = "array"
"definitions.ActionResource.properties.attributes.properties.intake.additionalProperties" = true
"definitions.ActionResource.properties.attributes.properties.intake.type" = "object"
"definitions.ActionResource.properties.attributes.properties.metric_required.type" = "boolean"
"definitions.ActionResource.properties.attributes.properties.metrics.items.$ref" = "#/definitions/ActionMetric"
"definitions.ActionResource.properties.attributes.properties.metrics.type" = "array"
"definitions.ActionResource.properties.attributes.properties.static_title.readOnly" = true
"definitions.ActionResource.properties.attributes.properties.static_title.type" = "string"
"definitions.ActionResource.properties.attributes.properties.title.type" = "string"
"definitions.ActionResource.properties.attributes.properties.tracking.type" = "boolean"
"definitions.ActionResource.properties.attributes.properties.type.enum.length" = 1
"definitions.ActionResource.properties.attributes.properties.type.enum[0]" = "other_lifestyle"
"definitions.ActionResource.properties.attributes.properties.type.type" = "string"
"definitions.ActionResource.properties.attributes.properties.windows.items.$ref" = "#/definitions/ActionWindow"
"definitions.ActionResource.properties.attributes.properties.windows.type" = "array"
"definitions.ActionResource.properties.attributes.required.length" = 3
"definitions.ActionResource.properties.attributes.required[0]" = "type"
"definitions.ActionResource.properties.attributes.required[1]" = "title"
"definitions.ActionResource.properties.attributes.required[2]" = "effective_from"
"definitions.ActionResource.properties.attributes.type" = "object"
"definitions.ActionResource.properties.id.type" = "string"
"definitions.ActionResource.properties.relationships.properties.plan.properties.data.properties.id.type" = "string"
"definitions.ActionResource.properties.relationships.properties.plan.properties.data.properties.type.type" = "string"
"definitions.ActionResource.properties.relationships.properties.plan.properties.data.type" = "object"
"definitions.ActionResource.properties.relationships.properties.plan.properties.links.type" = "object"
"definitions.ActionResource.properties.relationships.properties.plan.type" = "object"
"definitions.ActionResource.properties.relationships.type" = "object"
"definitions.ActionResource.properties.type.type" = "string"
"definitions.ActionResource.required.length" = 2
"definitions.ActionResource.required[0]" = "type"
"definitions.ActionResource.required[1]" = "id"
"definitions.ActionResource.type" = "object"
"definitions.ActionWindow.properties._id.type" = "string"
"definitions.ActionWindow.properties.title.type" = "string"
"definitions.ActionWindow.properties.type.type" = "string"
"definitions.ActionWindow.required.length" = 1
"definitions.ActionWindow.required[0]" = "type"
"definitions.ActionWindow.type" = "object"
"definitions.Address.properties.city.example" = "Cambridge"
"definitions.Address.properties.city.type" = "string"
"definitions.Address.properties.country.type" = "string"
"definitions.Address.properties.district.type" = "string"
"definitions.Address.properties.lines.example.length" = 1
"definitions.Address.properties.lines.example[0]" = "1234 Any St."
"definitions.Address.properties.lines.items.type" = "string"
"definitions.Address.properties.lines.type" = "array"
"definitions.Address.properties.postal_code.example" = "02138"
"definitions.Address.properties.postal_code.type" = "string"
"definitions.Address.properties.state.example" = "MA"
"definitions.Address.properties.state.type" = "string"
"definitions.Address.properties.text.type" = "string"
"definitions.Address.properties.type.type" = "string"
"definitions.Address.properties.use.type" = "string"
"definitions.Address.type" = "object"
"definitions.ArchiveHistory.properties.archived.example" = true
"definitions.ArchiveHistory.properties.archived.type" = "boolean"
"definitions.ArchiveHistory.properties.modified_at.example" = "2016-06-03T13:15:22.000Z"
"definitions.ArchiveHistory.properties.modified_at.format" = "dateTime"
"definitions.ArchiveHistory.properties.modified_at.type" = "string"
"definitions.ArchiveHistory.properties.notes.example" = "Patient called requesting opt out of coaching"
"definitions.ArchiveHistory.properties.notes.type" = "string"
"definitions.ArchiveHistory.properties.reason.example" = "Opted out of coaching"
"definitions.ArchiveHistory.properties.reason.type" = "string"
"definitions.ArchiveHistory.type" = "object"
"definitions.BundleResource.properties.attributes.properties._thread.type" = "string"
"definitions.BundleResource.properties.attributes.properties.effective_from.format" = "dateTime"
"definitions.BundleResource.properties.attributes.properties.effective_from.type" = "string"
"definitions.BundleResource.properties.attributes.properties.effective_to.format" = "dateTime"
"definitions.BundleResource.properties.attributes.properties.effective_to.type" = "string"
"definitions.BundleResource.properties.attributes.properties.title.type" = "string"
"definitions.BundleResource.properties.attributes.properties.type.type" = "string"
"definitions.BundleResource.properties.attributes.required.length" = 3
"definitions.BundleResource.properties.attributes.required[0]" = "type"
"definitions.BundleResource.properties.attributes.required[1]" = "title"
"definitions.BundleResource.properties.attributes.required[2]" = "effective_from"
"definitions.BundleResource.properties.attributes.type" = "object"
"definitions.BundleResource.properties.id.type" = "string"
"definitions.BundleResource.properties.relationships.properties.actions.properties.data.properties.id.type" = "string"
"definitions.BundleResource.properties.relationships.properties.actions.properties.data.properties.type.type" = "string"
"definitions.BundleResource.properties.relationships.properties.actions.properties.data.type" = "object"
"definitions.BundleResource.properties.relationships.properties.actions.properties.links.type" = "object"
"definitions.BundleResource.properties.relationships.properties.actions.type" = "object"
"definitions.BundleResource.properties.relationships.properties.plan.properties.data.properties.id.type" = "string"
"definitions.BundleResource.properties.relationships.properties.plan.properties.data.properties.type.type" = "string"
"definitions.BundleResource.properties.relationships.properties.plan.properties.data.type" = "object"
"definitions.BundleResource.properties.relationships.properties.plan.properties.links.type" = "object"
"definitions.BundleResource.properties.relationships.properties.plan.type" = "object"
"definitions.BundleResource.properties.relationships.type" = "object"
"definitions.BundleResource.properties.type.type" = "string"
"definitions.BundleResource.required.length" = 2
"definitions.BundleResource.required[0]" = "type"
"definitions.BundleResource.required[1]" = "id"
"definitions.BundleResource.type" = "object"
"definitions.CoachResource.properties.attributes.properties.first_name.example" = "Clarisa"
"definitions.CoachResource.properties.attributes.properties.first_name.type" = "string"
"definitions.CoachResource.properties.attributes.properties.last_name.example" = "Rivera"
"definitions.CoachResource.properties.attributes.properties.last_name.type" = "string"
"definitions.CoachResource.properties.attributes.type" = "object"
"definitions.CoachResource.properties.id.example" = "57b36e3c04ad8c2224f2af38"
"definitions.CoachResource.properties.id.type" = "string"
"definitions.CoachResource.properties.links.properties.self.example" = "/coach/57b36e3c04ad8c2224f2af38"
"definitions.CoachResource.properties.links.properties.self.pattern" = "/coach/[0-9a-z]+"
"definitions.CoachResource.properties.links.properties.self.type" = "string"
"definitions.CoachResource.properties.links.readOnly" = true
"definitions.CoachResource.properties.links.required.length" = 1
"definitions.CoachResource.properties.links.required[0]" = "self"
"definitions.CoachResource.properties.links.type" = "object"
"definitions.CoachResource.properties.type.enum.length" = 1
"definitions.CoachResource.properties.type.enum[0]" = "coach"
"definitions.CoachResource.properties.type.example" = "coach"
"definitions.CoachResource.properties.type.type" = "string"
"definitions.CoachResource.required.length" = 3
"definitions.CoachResource.required[0]" = "id"
"definitions.CoachResource.required[1]" = "type"
"definitions.CoachResource.required[2]" = "attributes"
"definitions.CoachResource.type" = "object"
"definitions.CollectionResponseLinks.properties.last.type" = "string"
"definitions.CollectionResponseLinks.properties.next.type" = "string"
"definitions.CollectionResponseLinks.properties.prev.type" = "string"
"definitions.CollectionResponseLinks.properties.self.type" = "string"
"definitions.CollectionResponseLinks.type" = "object"
"definitions.CreateActionRequest.example.data.attributes.effective_from" = "2017-02-20T11:12:13.000Z"
"definitions.CreateActionRequest.example.data.attributes.frequency_goal.weeks.days.length" = 1
"definitions.CreateActionRequest.example.data.attributes.frequency_goal.weeks.days[0]" = 0.0
"definitions.CreateActionRequest.example.data.attributes.metrics.length" = 1
"definitions.CreateActionRequest.example.data.attributes.metrics[0].goal.data.diastolic.unit" = "mmHg"
"definitions.CreateActionRequest.example.data.attributes.metrics[0].goal.data.diastolic.value" = 95.0
"definitions.CreateActionRequest.example.data.attributes.metrics[0].goal.data.systolic.unit" = "mmHg"
"definitions.CreateActionRequest.example.data.attributes.metrics[0].goal.data.systolic.value" = 150.0
"definitions.CreateActionRequest.example.data.attributes.metrics[0].metric_type" = "blood_pressure"
"definitions.CreateActionRequest.example.data.attributes.metrics[0].unit" = "mmHg"
"definitions.CreateActionRequest.example.data.attributes.title" = "Record Blood Pressure"
"definitions.CreateActionRequest.example.data.attributes.type" = "blood_pressure"
"definitions.CreateActionRequest.example.data.relationships.bundles.data.length" = 1
"definitions.CreateActionRequest.example.data.relationships.bundles.data[0].id" = "58aacf0d076adcef394bac30"
"definitions.CreateActionRequest.example.data.relationships.bundles.data[0].type" = "bundle"
"definitions.CreateActionRequest.example.data.relationships.plan.data.id" = "58aacf0d076adcef394bac35"
"definitions.CreateActionRequest.example.data.relationships.plan.data.type" = "patient_plan_summary"
"definitions.CreateActionRequest.example.data.type" = "action"
"definitions.CreateActionRequest.properties.data.$ref" = "#/definitions/ActionResource"
"definitions.CreateActionRequest.required.length" = 1
"definitions.CreateActionRequest.required[0]" = "data"
"definitions.CreateActionRequest.type" = "object"
"definitions.CreateActionResponse.example.data.attributes._thread" = "blood_pressure"
"definitions.CreateActionResponse.example.data.attributes.adherence.complete" = 0.0
"definitions.CreateActionResponse.example.data.attributes.adherence.due" = 0.0
"definitions.CreateActionResponse.example.data.attributes.adherence.streak.count" = 0.0
"definitions.CreateActionResponse.example.data.attributes.created_at" = "2017-02-20T11:12:13.000Z"
"definitions.CreateActionResponse.example.data.attributes.created_by" = "596541ec076adcef394bac2d"
"definitions.CreateActionResponse.example.data.attributes.effective_from" = "2017-02-20T11:12:13.000Z"
"definitions.CreateActionResponse.example.data.attributes.frequency_goal.weeks.days.length" = 1
"definitions.CreateActionResponse.example.data.attributes.frequency_goal.weeks.days[0]" = 0.0
"definitions.CreateActionResponse.example.data.attributes.frequency_goal_prorated" = 0.0
"definitions.CreateActionResponse.example.data.attributes.identifiers.length" = 0
"definitions.CreateActionResponse.example.data.attributes.metric_required" = false
"definitions.CreateActionResponse.example.data.attributes.metrics.length" = 1
"definitions.CreateActionResponse.example.data.attributes.metrics[0]._id" = "58aacf0d076adcef394bac37"
"definitions.CreateActionResponse.example.data.attributes.metrics[0].accepted_values.length" = 0
"definitions.CreateActionResponse.example.data.attributes.metrics[0].goal.data.diastolic.unit" = "mmHg"
"definitions.CreateActionResponse.example.data.attributes.metrics[0].goal.data.diastolic.value" = 95.0
"definitions.CreateActionResponse.example.data.attributes.metrics[0].goal.data.systolic.unit" = "mmHg"
"definitions.CreateActionResponse.example.data.attributes.metrics[0].goal.data.systolic.value" = 150.0
"definitions.CreateActionResponse.example.data.attributes.metrics[0].metric_type" = "blood_pressure"
"definitions.CreateActionResponse.example.data.attributes.metrics[0].unit" = "mmHg"
"definitions.CreateActionResponse.example.data.attributes.options.length" = 0
"definitions.CreateActionResponse.example.data.attributes.title" = "Record Blood Pressure"
"definitions.CreateActionResponse.example.data.attributes.tracking" = true
"definitions.CreateActionResponse.example.data.attributes.type" = "blood_pressure"
"definitions.CreateActionResponse.example.data.attributes.updated_at" = "2017-02-20T11:12:13.000Z"
"definitions.CreateActionResponse.example.data.attributes.updated_by" = "596541ec076adcef394bac2d"
"definitions.CreateActionResponse.example.data.attributes.windows.length" = 0
"definitions.CreateActionResponse.example.data.id" = "58aacf0d076adcef394bac36"
"definitions.CreateActionResponse.example.data.links.self" = "/action/58aacf0d076adcef394bac36"
"definitions.CreateActionResponse.example.data.relationships.bundles.data.length" = 1
"definitions.CreateActionResponse.example.data.relationships.bundles.data[0].id" = "58aacf0d076adcef394bac30"
"definitions.CreateActionResponse.example.data.relationships.bundles.data[0].type" = "bundle"
"definitions.CreateActionResponse.example.data.relationships.bundles.links.related" = "/action/58aacf0d076adcef394bac36/bundles"
"definitions.CreateActionResponse.example.data.relationships.plan.data.id" = "58aacf0d076adcef394bac35"
"definitions.CreateActionResponse.example.data.relationships.plan.data.type" = "patient_plan_summary"
"definitions.CreateActionResponse.example.data.relationships.plan.links.related" = "/action/58aacf0d076adcef394bac36/plan"
"definitions.CreateActionResponse.example.data.type" = "action"
"definitions.CreateActionResponse.example.included.length" = 0
"definitions.CreateActionResponse.example.meta.req_id" = "014ea6d2-4717-4915-b4bc-98454180614e"
"definitions.CreateActionResponse.properties.data.$ref" = "#/definitions/ActionResource"
"definitions.CreateActionResponse.properties.meta.$ref" = "#/definitions/CreateOrUpdateMetaResponse"
"definitions.CreateActionResponse.required.length" = 1
"definitions.CreateActionResponse.required[0]" = "data"
"definitions.CreateActionResponse.type" = "object"
"definitions.CreateBundleRequest.properties.data.$ref" = "#/definitions/BundleResource"
"definitions.CreateBundleRequest.required.length" = 1
"definitions.CreateBundleRequest.required[0]" = "data"
"definitions.CreateBundleRequest.type" = "object"
"definitions.CreateBundleResponse.properties.data.$ref" = "#/definitions/BundleResource"
"definitions.CreateBundleResponse.properties.meta.$ref" = "#/definitions/CreateOrUpdateMetaResponse"
"definitions.CreateBundleResponse.required.length" = 1
"definitions.CreateBundleResponse.required[0]" = "data"
"definitions.CreateBundleResponse.type" = "object"
"definitions.CreateGroupRequest.example.data.attributes.name" = "New Group"
"definitions.CreateGroupRequest.example.data.type" = "group"
"definitions.CreateGroupRequest.properties.data.$ref" = "#/definitions/GroupResource"
"definitions.CreateGroupRequest.required.length" = 1
"definitions.CreateGroupRequest.required[0]" = "data"
"definitions.CreateGroupRequest.type" = "object"
"definitions.CreateGroupResponse.example.data.attributes.name" = "New Group"
"definitions.CreateGroupResponse.example.data.id" = "5817acae6f5316c0d05ba8b8"
"definitions.CreateGroupResponse.example.data.links.self" = "/pub/group/5817acae6f5316c0d05ba8b8"
"definitions.CreateGroupResponse.example.data.type" = "group"
"definitions.CreateGroupResponse.example.meta.req_id" = "6ac6d0f2-00b2-4031-8c35-97b2bfb0aced"
"definitions.CreateGroupResponse.properties.data.$ref" = "#/definitions/GroupResource"
"definitions.CreateGroupResponse.properties.meta.$ref" = "#/definitions/CreateOrUpdateMetaResponse"
"definitions.CreateGroupResponse.required.length" = 1
"definitions.CreateGroupResponse.required[0]" = "data"
"definitions.CreateGroupResponse.type" = "object"
"definitions.CreateOrUpdateErrorResponse.example.errors.length" = 1
"definitions.CreateOrUpdateErrorResponse.example.errors[0].code" = "Unauthorized"
"definitions.CreateOrUpdateErrorResponse.example.errors[0].detail" = "A valid bearer token is required"
"definitions.CreateOrUpdateErrorResponse.example.errors[0].status" = "401"
"definitions.CreateOrUpdateErrorResponse.example.meta.req_id" = "d07c8b12-c95e-4a06-8424-92aac94bb445"
"definitions.CreateOrUpdateErrorResponse.properties.errors.$ref" = "#/definitions/Error"
"definitions.CreateOrUpdateErrorResponse.properties.meta.$ref" = "#/definitions/CreateOrUpdateMetaResponse"
"definitions.CreateOrUpdateErrorResponse.type" = "object"
"definitions.CreateOrUpdateMetaResponse.properties.ignored.items.type" = "string"
"definitions.CreateOrUpdateMetaResponse.properties.ignored.type" = "array"
"definitions.CreateOrUpdateMetaResponse.properties.req_id.type" = "string"
"definitions.CreateOrUpdateMetaResponse.type" = "object"
"definitions.CreatePatientHealthMetricRequest.properties.data.$ref" = "#/definitions/PatientHealthMetricResource"
"definitions.CreatePatientHealthMetricRequest.properties.meta.properties.ignore_duplicates.description" = "If `true`, the patient health metric will be ignored if there is an existing patient health metric for\nthe same patient, with the same `type` and same `occurred_at`.\n"
"definitions.CreatePatientHealthMetricRequest.properties.meta.properties.ignore_duplicates.type" = "boolean"
"definitions.CreatePatientHealthMetricRequest.properties.meta.type" = "object"
"definitions.CreatePatientHealthMetricRequest.required.length" = 1
"definitions.CreatePatientHealthMetricRequest.required[0]" = "data"
"definitions.CreatePatientHealthMetricRequest.type" = "object"
"definitions.CreatePatientHealthMetricResponse.properties.data.$ref" = "#/definitions/PatientHealthMetricResource"
"definitions.CreatePatientHealthMetricResponse.properties.meta.$ref" = "#/definitions/CreateOrUpdateMetaResponse"
"definitions.CreatePatientHealthMetricResponse.required.length" = 1
"definitions.CreatePatientHealthMetricResponse.required[0]" = "data"
"definitions.CreatePatientHealthMetricResponse.type" = "object"
"definitions.CreatePatientRequest.example.data.attributes.first_name" = "Jack"
"definitions.CreatePatientRequest.example.data.attributes.last_name" = "Frost"
"definitions.CreatePatientRequest.example.data.relationships.groups.data.length" = 1
"definitions.CreatePatientRequest.example.data.relationships.groups.data[0].id" = "5755db2a3db4179179999acf"
"definitions.CreatePatientRequest.example.data.relationships.groups.data[0].type" = "group"
"definitions.CreatePatientRequest.example.data.type" = "patient"
"definitions.CreatePatientRequest.properties.data.$ref" = "#/definitions/PatientCreateResource"
"definitions.CreatePatientRequest.required.length" = 1
"definitions.CreatePatientRequest.required[0]" = "data"
"definitions.CreatePatientRequest.type" = "object"
"definitions.CreatePatientResponse.example.data.attributes.addresses.length" = 0
"definitions.CreatePatientResponse.example.data.attributes.archive_history.length" = 0
"definitions.CreatePatientResponse.example.data.attributes.archived" = false
"definitions.CreatePatientResponse.example.data.attributes.first_name" = "Jack"
"definitions.CreatePatientResponse.example.data.attributes.identifiers.length" = 0
"definitions.CreatePatientResponse.example.data.attributes.last_name" = "Frost"
"definitions.CreatePatientResponse.example.data.attributes.phone_numbers.length" = 0
"definitions.CreatePatientResponse.example.data.attributes.updated_at" = "2016-11-01T01:07:33.121Z"
"definitions.CreatePatientResponse.example.data.id" = "5817ead56f5316c0d05ba8bf"
"definitions.CreatePatientResponse.example.data.links.self" = "/pub/patient/5817ead56f5316c0d05ba8bf"
"definitions.CreatePatientResponse.example.data.links.twine_web_app" = "http://10.0.1.55:9000/#/coach/patient/5817ead56f5316c0d05ba8bf"
"definitions.CreatePatientResponse.example.data.relationships.coaches.data.length" = 0
"definitions.CreatePatientResponse.example.data.relationships.coaches.links.related" = "/pub/patient/5817ead56f5316c0d05ba8bf/coaches"
"definitions.CreatePatientResponse.example.data.relationships.groups.data.length" = 1
"definitions.CreatePatientResponse.example.data.relationships.groups.data[0].id" = "5755db2a3db4179179999acf"
"definitions.CreatePatientResponse.example.data.relationships.groups.data[0].type" = "group"
"definitions.CreatePatientResponse.example.data.relationships.groups.links.related" = "/pub/patient/5817ead56f5316c0d05ba8bf/groups"
"definitions.CreatePatientResponse.example.data.type" = "patient"
"definitions.CreatePatientResponse.example.included.length" = 0
"definitions.CreatePatientResponse.example.meta.req_id" = "5b813ad3-cabc-418f-add4-1e53bc69f7cb"
"definitions.CreatePatientResponse.properties.data.$ref" = "#/definitions/PatientResource"
"definitions.CreatePatientResponse.properties.meta.$ref" = "#/definitions/CreateOrUpdateMetaResponse"
"definitions.CreatePatientResponse.required.length" = 1
"definitions.CreatePatientResponse.required[0]" = "data"
"definitions.CreatePatientResponse.type" = "object"
"definitions.CreateRewardEarningFulfillmentRequest.properties.data.$ref" = "#/definitions/RewardEarningFulfillmentResource"
"definitions.CreateRewardEarningFulfillmentRequest.required.length" = 1
"definitions.CreateRewardEarningFulfillmentRequest.required[0]" = "data"
"definitions.CreateRewardEarningFulfillmentRequest.type" = "object"
"definitions.CreateRewardEarningFulfillmentResponse.properties.data.$ref" = "#/definitions/RewardEarningFulfillmentResource"
"definitions.CreateRewardEarningFulfillmentResponse.properties.meta.$ref" = "#/definitions/CreateOrUpdateMetaResponse"
"definitions.CreateRewardEarningFulfillmentResponse.required.length" = 1
"definitions.CreateRewardEarningFulfillmentResponse.required[0]" = "data"
"definitions.CreateRewardEarningFulfillmentResponse.type" = "object"
"definitions.CreateRewardEarningRequest.properties.data.$ref" = "#/definitions/RewardEarningResource"
"definitions.CreateRewardEarningRequest.required.length" = 1
"definitions.CreateRewardEarningRequest.required[0]" = "data"
"definitions.CreateRewardEarningRequest.type" = "object"
"definitions.CreateRewardEarningResponse.properties.data.$ref" = "#/definitions/RewardEarningResource"
"definitions.CreateRewardEarningResponse.properties.meta.$ref" = "#/definitions/CreateOrUpdateMetaResponse"
"definitions.CreateRewardEarningResponse.required.length" = 1
"definitions.CreateRewardEarningResponse.required[0]" = "data"
"definitions.CreateRewardEarningResponse.type" = "object"
"definitions.CreateRewardProgramActivationRequest.properties.data.$ref" = "#/definitions/RewardProgramActivationResource"
"definitions.CreateRewardProgramActivationRequest.required.length" = 1
"definitions.CreateRewardProgramActivationRequest.required[0]" = "data"
"definitions.CreateRewardProgramActivationRequest.type" = "object"
"definitions.CreateRewardProgramActivationResponse.properties.data.$ref" = "#/definitions/RewardProgramActivationResource"
"definitions.CreateRewardProgramActivationResponse.properties.meta.$ref" = "#/definitions/CreateOrUpdateMetaResponse"
"definitions.CreateRewardProgramActivationResponse.required.length" = 1
"definitions.CreateRewardProgramActivationResponse.required[0]" = "data"
"definitions.CreateRewardProgramActivationResponse.type" = "object"
"definitions.CreateRewardProgramRequest.properties.data.$ref" = "#/definitions/RewardProgramResource"
"definitions.CreateRewardProgramRequest.required.length" = 1
"definitions.CreateRewardProgramRequest.required[0]" = "data"
"definitions.CreateRewardProgramRequest.type" = "object"
"definitions.CreateRewardProgramResponse.properties.data.$ref" = "#/definitions/RewardProgramResource"
"definitions.CreateRewardProgramResponse.properties.meta.$ref" = "#/definitions/CreateOrUpdateMetaResponse"
"definitions.CreateRewardProgramResponse.required.length" = 1
"definitions.CreateRewardProgramResponse.required[0]" = "data"
"definitions.CreateRewardProgramResponse.type" = "object"
"definitions.CreateRewardRequest.properties.data.$ref" = "#/definitions/RewardResource"
"definitions.CreateRewardRequest.required.length" = 1
"definitions.CreateRewardRequest.required[0]" = "data"
"definitions.CreateRewardRequest.type" = "object"
"definitions.CreateRewardResponse.properties.data.$ref" = "#/definitions/RewardResource"
"definitions.CreateRewardResponse.properties.meta.$ref" = "#/definitions/CreateOrUpdateMetaResponse"
"definitions.CreateRewardResponse.required.length" = 1
"definitions.CreateRewardResponse.required[0]" = "data"
"definitions.CreateRewardResponse.type" = "object"
"definitions.CreateTokenRequest.example.data.attributes.client_id" = "95c78ab2-167f-40b8-8bec-8398d4b87454"
"definitions.CreateTokenRequest.example.data.attributes.client_secret" = "35d18dc9-a3dd-4948-b787-063a490b9354"
"definitions.CreateTokenRequest.example.data.attributes.grant_type" = "client_credentials"
"definitions.CreateTokenRequest.example.data.type" = "oauth/token"
"definitions.CreateTokenRequest.properties.data.properties.attributes.properties.client_id.description" = "Contact Twine to get a client id and secret."
"definitions.CreateTokenRequest.properties.data.properties.attributes.properties.client_id.example" = "19391dc5-8af8-4152-93e8-74ff9361607e"
"definitions.CreateTokenRequest.properties.data.properties.attributes.properties.client_id.type" = "string"
"definitions.CreateTokenRequest.properties.data.properties.attributes.properties.client_secret.description" = "Contact Twine to get a client id and secret. Secret is required if grant_type is \"client_credentials\""
"definitions.CreateTokenRequest.properties.data.properties.attributes.properties.client_secret.example" = "63eca384-7a65-42e2-872b-afd3e8659d0a"
"definitions.CreateTokenRequest.properties.data.properties.attributes.properties.client_secret.type" = "string"
"definitions.CreateTokenRequest.properties.data.properties.attributes.properties.grant_type.enum.length" = 2
"definitions.CreateTokenRequest.properties.data.properties.attributes.properties.grant_type.enum[0]" = "refresh_token"
"definitions.CreateTokenRequest.properties.data.properties.attributes.properties.grant_type.enum[1]" = "client_credentials"
"definitions.CreateTokenRequest.properties.data.properties.attributes.properties.grant_type.example" = "client_credentials"
"definitions.CreateTokenRequest.properties.data.properties.attributes.properties.grant_type.type" = "string"
"definitions.CreateTokenRequest.properties.data.properties.attributes.properties.refresh_token.description" = "Required if grant_type is \"refresh_token\""
"definitions.CreateTokenRequest.properties.data.properties.attributes.properties.refresh_token.example" = "b7dcc4a4-593b-4410-a0c5-97ae48939396"
"definitions.CreateTokenRequest.properties.data.properties.attributes.properties.refresh_token.type" = "string"
"definitions.CreateTokenRequest.properties.data.properties.attributes.required.length" = 2
"definitions.CreateTokenRequest.properties.data.properties.attributes.required[0]" = "client_id"
"definitions.CreateTokenRequest.properties.data.properties.attributes.required[1]" = "grant_type"
"definitions.CreateTokenRequest.properties.data.properties.attributes.type" = "object"
"definitions.CreateTokenRequest.properties.data.properties.type.enum.length" = 1
"definitions.CreateTokenRequest.properties.data.properties.type.enum[0]" = "token"
"definitions.CreateTokenRequest.properties.data.properties.type.example" = "token"
"definitions.CreateTokenRequest.properties.data.properties.type.type" = "string"
"definitions.CreateTokenRequest.properties.data.required.length" = 1
"definitions.CreateTokenRequest.properties.data.required[0]" = "attributes"
"definitions.CreateTokenRequest.properties.data.type" = "object"
"definitions.CreateTokenRequest.required.length" = 1
"definitions.CreateTokenRequest.required[0]" = "data"
"definitions.CreateTokenRequest.type" = "object"
"definitions.CreateTokenResponse.example.data.attributes.access_token" = "c1b83534-76c1-4a27-b1d4-8140e24dd7c6"
"definitions.CreateTokenResponse.example.data.attributes.expires_in" = 3601.0
"definitions.CreateTokenResponse.example.data.attributes.refresh_token" = "a38d192a-76fd-4b1d-954c-893c9d29c8f4"
"definitions.CreateTokenResponse.example.data.attributes.token_type" = "bearer"
"definitions.CreateTokenResponse.example.data.id" = "5817a24d678a7c2cbf5df3ee"
"definitions.CreateTokenResponse.example.data.relationships.groups.data.length" = 1
"definitions.CreateTokenResponse.example.data.relationships.groups.data[0].id" = "5755db2a3db4179179999acf"
"definitions.CreateTokenResponse.example.data.relationships.groups.data[0].type" = "group"
"definitions.CreateTokenResponse.example.data.relationships.groups.links.related" = "/pub/oauth/token/5817a24d678a7c2cbf5df3ee/groups"
"definitions.CreateTokenResponse.example.data.type" = "oauth/token"
"definitions.CreateTokenResponse.example.meta.req_id" = "2de51f1a-bafa-4e48-a0d0-cd8d4a9ffb28"
"definitions.CreateTokenResponse.properties.data.$ref" = "#/definitions/TokenResource"
"definitions.CreateTokenResponse.properties.included.items.$ref" = "#/definitions/GroupResource"
"definitions.CreateTokenResponse.properties.included.type" = "array"
"definitions.CreateTokenResponse.properties.meta.$ref" = "#/definitions/CreateOrUpdateMetaResponse"
"definitions.CreateTokenResponse.required.length" = 1
"definitions.CreateTokenResponse.required[0]" = "data"
"definitions.CreateTokenResponse.type" = "object"
"definitions.EmailHistoryResource.example.attributes.created_at" = "2017-07-07T19:15:56.229Z"
"definitions.EmailHistoryResource.example.attributes.created_by" = "595fd88ef4be5b1a797ff19b"
"definitions.EmailHistoryResource.example.attributes.email_address" = "tony@example.com"
"definitions.EmailHistoryResource.example.attributes.email_type" = "invite"
"definitions.EmailHistoryResource.example.attributes.send_time" = "2017-02-25T13:35:01.000Z"
"definitions.EmailHistoryResource.example.attributes.status_times.delivered" = "2017-02-25T13:35:03.000Z"
"definitions.EmailHistoryResource.example.attributes.status_times.open" = "2017-02-25T14:20:00.000Z"
"definitions.EmailHistoryResource.example.attributes.status_times.processed" = "2017-02-25T13:35:02.000Z"
"definitions.EmailHistoryResource.example.attributes.twine_email_id" = "576226e5-7e25-4469-b10d-2bc6a725bfbc"
"definitions.EmailHistoryResource.example.attributes.updated_at" = "2017-07-07T19:15:56.229Z"
"definitions.EmailHistoryResource.example.attributes.updated_by" = "595fd88ef4be5b1a797ff19b"
"definitions.EmailHistoryResource.example.id" = "595fddec28c5041b84467592"
"definitions.EmailHistoryResource.example.links.self" = "/pub/email_history/595fddec28c5041b84467592"
"definitions.EmailHistoryResource.example.relationships.receiver.data.id" = "595fddea28c5041b84466bbe"
"definitions.EmailHistoryResource.example.relationships.receiver.data.type" = "patient"
"definitions.EmailHistoryResource.example.relationships.receiver.links.related" = "/pub/email_history/595fddec28c5041b84467592/receiver"
"definitions.EmailHistoryResource.example.relationships.sender.links.related" = "/pub/email_history/595fddec28c5041b84467592/sender"
"definitions.EmailHistoryResource.example.type" = "email_history"
"definitions.EmailHistoryResource.properties.attributes.properties.email_address.description" = "Address email was sent to."
"definitions.EmailHistoryResource.properties.attributes.properties.email_address.type" = "string"
"definitions.EmailHistoryResource.properties.attributes.properties.email_type.description" = "Type of email."
"definitions.EmailHistoryResource.properties.attributes.properties.email_type.type" = "string"
"definitions.EmailHistoryResource.properties.attributes.properties.send_time.description" = "Time email was sent."
"definitions.EmailHistoryResource.properties.attributes.properties.send_time.format" = "dateTime"
"definitions.EmailHistoryResource.properties.attributes.properties.send_time.type" = "string"
"definitions.EmailHistoryResource.properties.attributes.properties.status_times.description" = "Status of email. Multiple statuses may be defined. The current status is the one with the most recent date."
"definitions.EmailHistoryResource.properties.attributes.properties.status_times.properties.bounce.description" = "Time email was bounced."
"definitions.EmailHistoryResource.properties.attributes.properties.status_times.properties.bounce.format" = "dateTime"
"definitions.EmailHistoryResource.properties.attributes.properties.status_times.properties.bounce.type" = "string"
"definitions.EmailHistoryResource.properties.attributes.properties.status_times.properties.click.description" = "Time email was clicked."
"definitions.EmailHistoryResource.properties.attributes.properties.status_times.properties.click.format" = "dateTime"
"definitions.EmailHistoryResource.properties.attributes.properties.status_times.properties.click.type" = "string"
"definitions.EmailHistoryResource.properties.attributes.properties.status_times.properties.deferred.description" = "Time email was deferred."
"definitions.EmailHistoryResource.properties.attributes.properties.status_times.properties.deferred.format" = "dateTime"
"definitions.EmailHistoryResource.properties.attributes.properties.status_times.properties.deferred.type" = "string"
"definitions.EmailHistoryResource.properties.attributes.properties.status_times.properties.delivered.description" = "Time email was delivered."
"definitions.EmailHistoryResource.properties.attributes.properties.status_times.properties.delivered.format" = "dateTime"
"definitions.EmailHistoryResource.properties.attributes.properties.status_times.properties.delivered.type" = "string"
"definitions.EmailHistoryResource.properties.attributes.properties.status_times.properties.dropped.description" = "Time email was dropped."
"definitions.EmailHistoryResource.properties.attributes.properties.status_times.properties.dropped.format" = "dateTime"
"definitions.EmailHistoryResource.properties.attributes.properties.status_times.properties.dropped.type" = "string"
"definitions.EmailHistoryResource.properties.attributes.properties.status_times.properties.open.description" = "Time email was opened."
"definitions.EmailHistoryResource.properties.attributes.properties.status_times.properties.open.format" = "dateTime"
"definitions.EmailHistoryResource.properties.attributes.properties.status_times.properties.open.type" = "string"
"definitions.EmailHistoryResource.properties.attributes.properties.status_times.properties.processed.description" = "Time email was processed."
"definitions.EmailHistoryResource.properties.attributes.properties.status_times.properties.processed.format" = "dateTime"
"definitions.EmailHistoryResource.properties.attributes.properties.status_times.properties.processed.type" = "string"
"definitions.EmailHistoryResource.properties.attributes.properties.status_times.properties.spamreport.description" = "Time email was reported as spam."
"definitions.EmailHistoryResource.properties.attributes.properties.status_times.properties.spamreport.format" = "dateTime"
"definitions.EmailHistoryResource.properties.attributes.properties.status_times.properties.spamreport.type" = "string"
"definitions.EmailHistoryResource.properties.attributes.properties.status_times.properties.unsubscribe.description" = "Time email was unsubscribed from."
"definitions.EmailHistoryResource.properties.attributes.properties.status_times.properties.unsubscribe.format" = "dateTime"
"definitions.EmailHistoryResource.properties.attributes.properties.status_times.properties.unsubscribe.type" = "string"
"definitions.EmailHistoryResource.properties.attributes.properties.status_times.type" = "object"
"definitions.EmailHistoryResource.properties.attributes.properties.twine_email_id.description" = "Unique identifier for this email."
"definitions.EmailHistoryResource.properties.attributes.properties.twine_email_id.type" = "string"
"definitions.EmailHistoryResource.properties.attributes.type" = "object"
"definitions.EmailHistoryResource.properties.id.type" = "string"
"definitions.EmailHistoryResource.properties.relationships.properties.receiver.properties.data.properties.id.type" = "string"
"definitions.EmailHistoryResource.properties.relationships.properties.receiver.properties.data.properties.type.type" = "string"
"definitions.EmailHistoryResource.properties.relationships.properties.receiver.properties.data.type" = "object"
"definitions.EmailHistoryResource.properties.relationships.properties.receiver.type" = "object"
"definitions.EmailHistoryResource.properties.relationships.properties.sender.properties.data.properties.id.type" = "string"
"definitions.EmailHistoryResource.properties.relationships.properties.sender.properties.data.properties.type.type" = "string"
"definitions.EmailHistoryResource.properties.relationships.properties.sender.properties.data.type" = "object"
"definitions.EmailHistoryResource.properties.relationships.properties.sender.type" = "object"
"definitions.EmailHistoryResource.properties.relationships.type" = "object"
"definitions.EmailHistoryResource.properties.type.type" = "string"
"definitions.EmailHistoryResource.required.length" = 1
"definitions.EmailHistoryResource.required[0]" = "type"
"definitions.EmailHistoryResource.type" = "object"
"definitions.Error.properties.code.enum.length" = 7
"definitions.Error.properties.code.enum[0]" = "Forbidden"
"definitions.Error.properties.code.enum[1]" = "InvalidParameter"
"definitions.Error.properties.code.enum[2]" = "InvalidBodyParameter"
"definitions.Error.properties.code.enum[3]" = "ResourceNotFound"
"definitions.Error.properties.code.enum[4]" = "Unauthorized"
"definitions.Error.properties.code.enum[5]" = "InvalidCredentials"
"definitions.Error.properties.code.enum[6]" = "InvalidGrantType"
"definitions.Error.properties.code.type" = "string"
"definitions.Error.properties.detail.type" = "string"
"definitions.Error.properties.source.properties.parameter.type" = "string"
"definitions.Error.properties.source.properties.pointer.type" = "string"
"definitions.Error.properties.source.type" = "object"
"definitions.Error.properties.status.type" = "string"
"definitions.Error.properties.title.type" = "string"
"definitions.Error.type" = "object"
"definitions.FetchActionResponse.example.data.attributes._thread" = "weight"
"definitions.FetchActionResponse.example.data.attributes.adherence.complete" = 1.0
"definitions.FetchActionResponse.example.data.attributes.adherence.due" = 1.0
"definitions.FetchActionResponse.example.data.attributes.adherence.streak.count" = 1.0
"definitions.FetchActionResponse.example.data.attributes.adherence.streak.updated_at" = "2017-07-11T21:13:13.215Z"
"definitions.FetchActionResponse.example.data.attributes.details.some" = "mixed value"
"definitions.FetchActionResponse.example.data.attributes.effective_from" = "2017-07-10T21:13:13.212Z"
"definitions.FetchActionResponse.example.data.attributes.effective_to" = "2017-07-11T21:13:13.215Z"
"definitions.FetchActionResponse.example.data.attributes.frequency_goal.weeks.days.length" = 1
"definitions.FetchActionResponse.example.data.attributes.frequency_goal.weeks.days[0]" = 0.0
"definitions.FetchActionResponse.example.data.attributes.frequency_goal_prorated" = 0.0
"definitions.FetchActionResponse.example.data.attributes.identifiers.length" = 1
"definitions.FetchActionResponse.example.data.attributes.identifiers[0]._id" = "59653f699fc8be3938f04494"
"definitions.FetchActionResponse.example.data.attributes.identifiers[0].label" = "Super Health Actions"
"definitions.FetchActionResponse.example.data.attributes.identifiers[0].system" = "http://super.health.example.com"
"definitions.FetchActionResponse.example.data.attributes.identifiers[0].value" = "action-0123"
"definitions.FetchActionResponse.example.data.attributes.metric_required" = true
"definitions.FetchActionResponse.example.data.attributes.metrics.length" = 1
"definitions.FetchActionResponse.example.data.attributes.metrics[0]._id" = "59653f699fc8be3938f04493"
"definitions.FetchActionResponse.example.data.attributes.metrics[0].accepted_values.length" = 0
"definitions.FetchActionResponse.example.data.attributes.metrics[0].goal.data.unit" = "lb"
"definitions.FetchActionResponse.example.data.attributes.metrics[0].goal.data.value" = 210.0
"definitions.FetchActionResponse.example.data.attributes.metrics[0].metric_type" = "weight"
"definitions.FetchActionResponse.example.data.attributes.metrics[0].unit" = "lb"
"definitions.FetchActionResponse.example.data.attributes.metrics[0].validations.maximum.unit" = "lb"
"definitions.FetchActionResponse.example.data.attributes.metrics[0].validations.maximum.value" = 999.0
"definitions.FetchActionResponse.example.data.attributes.metrics[0].validations.minimum.unit" = "lb"
"definitions.FetchActionResponse.example.data.attributes.metrics[0].validations.minimum.value" = 0.0
"definitions.FetchActionResponse.example.data.attributes.options.length" = 0
"definitions.FetchActionResponse.example.data.attributes.title" = "Measure Weight"
"definitions.FetchActionResponse.example.data.attributes.tracking" = true
"definitions.FetchActionResponse.example.data.attributes.type" = "weight"
"definitions.FetchActionResponse.example.data.attributes.windows.length" = 1
"definitions.FetchActionResponse.example.data.attributes.windows[0]._id" = "59653f699fc8be3938f04492"
"definitions.FetchActionResponse.example.data.attributes.windows[0].title" = "Morning"
"definitions.FetchActionResponse.example.data.attributes.windows[0].type" = "morning"
"definitions.FetchActionResponse.example.data.id" = "59653f699fc8be3938f04491"
"definitions.FetchActionResponse.example.data.links.self" = "/action/59653f699fc8be3938f04491"
"definitions.FetchActionResponse.example.data.relationships.bundles.data.length" = 0
"definitions.FetchActionResponse.example.data.relationships.bundles.links.related" = "/action/59653f699fc8be3938f04491/bundles"
"definitions.FetchActionResponse.example.data.relationships.plan.links.related" = "/action/59653f699fc8be3938f04491/plan"
"definitions.FetchActionResponse.example.data.type" = "action"
"definitions.FetchActionResponse.example.included.length" = 0
"definitions.FetchActionResponse.example.meta.req_id" = "63bf4340-f256-400e-b391-d801d2a251f6"
"definitions.FetchActionResponse.properties.data.$ref" = "#/definitions/ActionResource"
"definitions.FetchActionResponse.properties.meta.$ref" = "#/definitions/FetchMetaResponse"
"definitions.FetchActionResponse.required.length" = 1
"definitions.FetchActionResponse.required[0]" = "data"
"definitions.FetchActionResponse.type" = "object"
"definitions.FetchBundleResponse.example.data.attributes._actions.length" = 1
"definitions.FetchBundleResponse.example.data.attributes._actions[0]" = "596535d9608f63d531b7e344"
"definitions.FetchBundleResponse.example.data.attributes._thread" = "123"
"definitions.FetchBundleResponse.example.data.attributes.effective_from" = "2017-07-11T20:31:25.000Z"
"definitions.FetchBundleResponse.example.data.attributes.effective_to" = "2017-07-11T20:32:25.000Z"
"definitions.FetchBundleResponse.example.data.attributes.title" = "Weight"
"definitions.FetchBundleResponse.example.data.attributes.type" = "weight"
"definitions.FetchBundleResponse.example.data.id" = "596535d9608f63d531b7e34a"
"definitions.FetchBundleResponse.example.data.links.self" = "/bundle/596535d9608f63d531b7e34a"
"definitions.FetchBundleResponse.example.data.relationships.actions.data.length" = 1
"definitions.FetchBundleResponse.example.data.relationships.actions.data[0].id" = "596535d9608f63d531b7e344"
"definitions.FetchBundleResponse.example.data.relationships.actions.data[0].type" = "action"
"definitions.FetchBundleResponse.example.data.relationships.actions.links.related" = "/bundle/596535d9608f63d531b7e34a/actions"
"definitions.FetchBundleResponse.example.data.relationships.plan.links.related" = "/bundle/596535d9608f63d531b7e34a/plan"
"definitions.FetchBundleResponse.example.data.type" = "bundle"
"definitions.FetchBundleResponse.example.included.length" = 0
"definitions.FetchBundleResponse.example.meta.req_id" = "c0f8d53a-d763-4beb-b0b1-9ec6da146a14"
"definitions.FetchBundleResponse.properties.data.$ref" = "#/definitions/BundleResource"
"definitions.FetchBundleResponse.properties.meta.$ref" = "#/definitions/FetchMetaResponse"
"definitions.FetchBundleResponse.required.length" = 1
"definitions.FetchBundleResponse.required[0]" = "data"
"definitions.FetchBundleResponse.type" = "object"
"definitions.FetchCoachResponse.example.data.attributes.first_name" = "Clarisa"
"definitions.FetchCoachResponse.example.data.attributes.last_name" = "Rivera"
"definitions.FetchCoachResponse.example.data.id" = "581630c3237d84a9403533c6"
"definitions.FetchCoachResponse.example.data.links.self" = "/pub/coach/581630c3237d84a9403533c6"
"definitions.FetchCoachResponse.example.data.type" = "coach"
"definitions.FetchCoachResponse.example.included.length" = 0
"definitions.FetchCoachResponse.example.meta.req_id" = "b928037e-98ed-434f-b0c4-d74b1a38a560"
"definitions.FetchCoachResponse.properties.data.$ref" = "#/definitions/CoachResource"
"definitions.FetchCoachResponse.properties.meta.$ref" = "#/definitions/FetchMetaResponse"
"definitions.FetchCoachResponse.required.length" = 1
"definitions.FetchCoachResponse.required[0]" = "data"
"definitions.FetchCoachResponse.type" = "object"
"definitions.FetchCoachesResponse.example.data.length" = 1
"definitions.FetchCoachesResponse.example.data[0].attributes.first_name" = "Clarisa"
"definitions.FetchCoachesResponse.example.data[0].attributes.last_name" = "Rivera"
"definitions.FetchCoachesResponse.example.data[0].id" = "581630c3237d84a9403533c6"
"definitions.FetchCoachesResponse.example.data[0].links.self" = "/pub/coach/581630c3237d84a9403533c6"
"definitions.FetchCoachesResponse.example.data[0].type" = "coach"
"definitions.FetchCoachesResponse.example.included.length" = 0
"definitions.FetchCoachesResponse.example.links.self" = "/pub/patient/58163112237d84a94035f78b/coaches"
"definitions.FetchCoachesResponse.example.meta.count" = 1.0
"definitions.FetchCoachesResponse.example.meta.req_id" = "48c47326-0c8b-4c5e-85da-7fc0d00f1e4d"
"definitions.FetchCoachesResponse.properties.data.items.$ref" = "#/definitions/CoachResource"
"definitions.FetchCoachesResponse.properties.data.type" = "array"
"definitions.FetchCoachesResponse.properties.meta.$ref" = "#/definitions/FetchMetaResponse"
"definitions.FetchCoachesResponse.required.length" = 1
"definitions.FetchCoachesResponse.required[0]" = "data"
"definitions.FetchCoachesResponse.type" = "object"
"definitions.FetchEmailHistoriesResponse.properties.data.items.$ref" = "#/definitions/EmailHistoryResource"
"definitions.FetchEmailHistoriesResponse.properties.data.type" = "array"
"definitions.FetchEmailHistoriesResponse.properties.meta.$ref" = "#/definitions/FetchMetaResponse"
"definitions.FetchEmailHistoriesResponse.required.length" = 1
"definitions.FetchEmailHistoriesResponse.required[0]" = "data"
"definitions.FetchEmailHistoriesResponse.type" = "object"
"definitions.FetchEmailHistoryResponse.properties.data.$ref" = "#/definitions/EmailHistoryResource"
"definitions.FetchEmailHistoryResponse.properties.meta.$ref" = "#/definitions/FetchMetaResponse"
"definitions.FetchEmailHistoryResponse.required.length" = 1
"definitions.FetchEmailHistoryResponse.required[0]" = "data"
"definitions.FetchEmailHistoryResponse.type" = "object"
"definitions.FetchErrorResponse.example.errors.length" = 1
"definitions.FetchErrorResponse.example.errors[0].code" = "Unauthorized"
"definitions.FetchErrorResponse.example.errors[0].detail" = "A valid bearer token is required"
"definitions.FetchErrorResponse.example.errors[0].status" = "401"
"definitions.FetchErrorResponse.example.meta.req_id" = "d07c8b12-c95e-4a06-8424-92aac94bb445"
"definitions.FetchErrorResponse.properties.errors.$ref" = "#/definitions/Error"
"definitions.FetchErrorResponse.properties.meta.$ref" = "#/definitions/FetchMetaResponse"
"definitions.FetchErrorResponse.type" = "object"
"definitions.FetchGroupResponse.example.data.attributes.name" = "Patients Lead"
"definitions.FetchGroupResponse.example.data.id" = "5755db2a3db4179179999acf"
"definitions.FetchGroupResponse.example.data.links.self" = "/pub/group/5755db2a3db4179179999acf"
"definitions.FetchGroupResponse.example.data.type" = "group"
"definitions.FetchGroupResponse.example.meta.req_id" = "2b59851e-0f6c-4a8f-a8a6-15bd7c0346e7"
"definitions.FetchGroupResponse.properties.data.$ref" = "#/definitions/GroupResource"
"definitions.FetchGroupResponse.properties.meta.$ref" = "#/definitions/FetchMetaResponse"
"definitions.FetchGroupResponse.required.length" = 1
"definitions.FetchGroupResponse.required[0]" = "data"
"definitions.FetchGroupResponse.type" = "object"
"definitions.FetchGroupsResponse.example.data.length" = 1
"definitions.FetchGroupsResponse.example.data[0].attributes.name" = "Patients Lead"
"definitions.FetchGroupsResponse.example.data[0].id" = "5755db2a3db4179179999acf"
"definitions.FetchGroupsResponse.example.data[0].links.self" = "/pub/group/5755db2a3db4179179999acf"
"definitions.FetchGroupsResponse.example.data[0].type" = "group"
"definitions.FetchGroupsResponse.example.links.self" = "/pub/oauth/token/5817a24d678a7c2cbf5df3ee/groups"
"definitions.FetchGroupsResponse.example.meta.count" = 1.0
"definitions.FetchGroupsResponse.example.meta.req_id" = "ab554093-6081-4d37-aa7b-ca6312367ca4"
"definitions.FetchGroupsResponse.properties.data.items.$ref" = "#/definitions/GroupResource"
"definitions.FetchGroupsResponse.properties.data.type" = "array"
"definitions.FetchGroupsResponse.properties.meta.$ref" = "#/definitions/FetchMetaResponse"
"definitions.FetchGroupsResponse.required.length" = 1
"definitions.FetchGroupsResponse.required[0]" = "data"
"definitions.FetchGroupsResponse.type" = "object"
"definitions.FetchMetaResponse.properties.count.type" = "integer"
"definitions.FetchMetaResponse.properties.req_id.type" = "string"
"definitions.FetchMetaResponse.type" = "object"
"definitions.FetchOrganizationResponse.example.data.attributes.name" = "Health Activation Partners"
"definitions.FetchOrganizationResponse.example.data.id" = "5873b63605376e337a89d64a"
"definitions.FetchOrganizationResponse.example.data.links.self" = "/pub/organization/5873b63605376e337a89d64a"
"definitions.FetchOrganizationResponse.example.data.type" = "organization"
"definitions.FetchOrganizationResponse.example.meta.req_id" = "aeb94ed8-d7f9-4e72-a78f-e276c4f52c2a"
"definitions.FetchOrganizationResponse.properties.data.$ref" = "#/definitions/OrganizationResource"
"definitions.FetchOrganizationResponse.properties.meta.$ref" = "#/definitions/FetchMetaResponse"
"definitions.FetchOrganizationResponse.required.length" = 1
"definitions.FetchOrganizationResponse.required[0]" = "data"
"definitions.FetchOrganizationResponse.type" = "object"
"definitions.FetchPatientHealthMetricResponse.properties.data.items.$ref" = "#/definitions/PatientHealthMetricResource"
"definitions.FetchPatientHealthMetricResponse.properties.data.type" = "array"
"definitions.FetchPatientHealthMetricResponse.properties.links.$ref" = "#/definitions/CollectionResponseLinks"
"definitions.FetchPatientHealthMetricResponse.properties.meta.$ref" = "#/definitions/FetchMetaResponse"
"definitions.FetchPatientHealthMetricResponse.required.length" = 1
"definitions.FetchPatientHealthMetricResponse.required[0]" = "data"
"definitions.FetchPatientHealthMetricResponse.type" = "object"
"definitions.FetchPatientPlanSummariesResponse.properties.data.items.$ref" = "#/definitions/PatientPlanSummaryResource"
"definitions.FetchPatientPlanSummariesResponse.properties.data.type" = "array"
"definitions.FetchPatientPlanSummariesResponse.properties.included.description" = "Related resources which are included in the repoonse based on the `include` param.\nAttributes of each resource will vary depending on the type.\nSee [action](#operation/fetchAction), [bundle](#operation/fetchBundle) and [patient](#operation/fetchPatient)\n"
"definitions.FetchPatientPlanSummariesResponse.properties.included.items.$ref" = "#/definitions/Resource"
"definitions.FetchPatientPlanSummariesResponse.properties.included.type" = "array"
"definitions.FetchPatientPlanSummariesResponse.properties.meta.$ref" = "#/definitions/FetchMetaResponse"
"definitions.FetchPatientPlanSummariesResponse.required.length" = 1
"definitions.FetchPatientPlanSummariesResponse.required[0]" = "data"
"definitions.FetchPatientPlanSummariesResponse.type" = "object"
"definitions.FetchPatientPlanSummaryResponse.example.data.attributes.adherence.complete" = 0.0
"definitions.FetchPatientPlanSummaryResponse.example.data.attributes.adherence.due" = 0.0
"definitions.FetchPatientPlanSummaryResponse.example.data.attributes.adherence.streak.count" = 0.0
"definitions.FetchPatientPlanSummaryResponse.example.data.attributes.effective_from" = "2017-07-01T04:00:00.000Z"
"definitions.FetchPatientPlanSummaryResponse.example.data.attributes.window_notification_times.afternoon" = 43200.0
"definitions.FetchPatientPlanSummaryResponse.example.data.attributes.window_notification_times.evening" = 64800.0
"definitions.FetchPatientPlanSummaryResponse.example.data.attributes.window_notification_times.morning" = 25200.0
"definitions.FetchPatientPlanSummaryResponse.example.data.attributes.window_notification_times.night" = 75600.0
"definitions.FetchPatientPlanSummaryResponse.example.data.attributes.window_order.length" = 0
"definitions.FetchPatientPlanSummaryResponse.example.data.id" = "5964f831f65725bf25558b50"
"definitions.FetchPatientPlanSummaryResponse.example.data.links.self" = "/patient_plan_summary/5964f831f65725bf25558b50"
"definitions.FetchPatientPlanSummaryResponse.example.data.relationships.actions.data.length" = 1
"definitions.FetchPatientPlanSummaryResponse.example.data.relationships.actions.data[0].id" = "5964f831f65725bf25558b4b"
"definitions.FetchPatientPlanSummaryResponse.example.data.relationships.actions.data[0].type" = "action"
"definitions.FetchPatientPlanSummaryResponse.example.data.relationships.actions.links.related" = "/patient_plan_summary/5964f831f65725bf25558b50/actions"
"definitions.FetchPatientPlanSummaryResponse.example.data.relationships.bundles.data.length" = 0
"definitions.FetchPatientPlanSummaryResponse.example.data.relationships.bundles.links.related" = "/patient_plan_summary/5964f831f65725bf25558b50/bundles"
"definitions.FetchPatientPlanSummaryResponse.example.data.relationships.current_results.data.length" = 0
"definitions.FetchPatientPlanSummaryResponse.example.data.relationships.current_results.links.related" = "/patient_plan_summary/5964f831f65725bf25558b50/current_results"
"definitions.FetchPatientPlanSummaryResponse.example.data.relationships.patient.data.id" = "5964f831f65725bf25558b4f"
"definitions.FetchPatientPlanSummaryResponse.example.data.relationships.patient.data.type" = "patient"
"definitions.FetchPatientPlanSummaryResponse.example.data.relationships.patient.links.related" = "/patient_plan_summary/5964f831f65725bf25558b50/patient"
"definitions.FetchPatientPlanSummaryResponse.example.data.type" = "patient_plan_summary"
"definitions.FetchPatientPlanSummaryResponse.example.included.length" = 1
"definitions.FetchPatientPlanSummaryResponse.example.included[0].attributes._thread" = "blood_pressure"
"definitions.FetchPatientPlanSummaryResponse.example.included[0].attributes.adherence.complete" = 0.0
"definitions.FetchPatientPlanSummaryResponse.example.included[0].attributes.adherence.due" = 0.0
"definitions.FetchPatientPlanSummaryResponse.example.included[0].attributes.adherence.streak.count" = 0.0
"definitions.FetchPatientPlanSummaryResponse.example.included[0].attributes.effective_from" = "2017-07-01T04:00:00.000Z"
"definitions.FetchPatientPlanSummaryResponse.example.included[0].attributes.frequency_goal.weeks.days.length" = 7
"definitions.FetchPatientPlanSummaryResponse.example.included[0].attributes.frequency_goal.weeks.days[0]" = 0.0
"definitions.FetchPatientPlanSummaryResponse.example.included[0].attributes.frequency_goal.weeks.days[1]" = 1.0
"definitions.FetchPatientPlanSummaryResponse.example.included[0].attributes.frequency_goal.weeks.days[2]" = 2.0
"definitions.FetchPatientPlanSummaryResponse.example.included[0].attributes.frequency_goal.weeks.days[3]" = 3.0
"definitions.FetchPatientPlanSummaryResponse.example.included[0].attributes.frequency_goal.weeks.days[4]" = 4.0
"definitions.FetchPatientPlanSummaryResponse.example.included[0].attributes.frequency_goal.weeks.days[5]" = 5.0
"definitions.FetchPatientPlanSummaryResponse.example.included[0].attributes.frequency_goal.weeks.days[6]" = 6.0
"definitions.FetchPatientPlanSummaryResponse.example.included[0].attributes.frequency_goal_prorated" = 0.0
"definitions.FetchPatientPlanSummaryResponse.example.included[0].attributes.identifiers.length" = 0
"definitions.FetchPatientPlanSummaryResponse.example.included[0].attributes.metric_required" = false
"definitions.FetchPatientPlanSummaryResponse.example.included[0].attributes.metrics.length" = 1
"definitions.FetchPatientPlanSummaryResponse.example.included[0].attributes.metrics[0]._id" = "5964f831f65725bf25558b51"
"definitions.FetchPatientPlanSummaryResponse.example.included[0].attributes.metrics[0].accepted_values.length" = 0
"definitions.FetchPatientPlanSummaryResponse.example.included[0].attributes.metrics[0].goal.data.diastolic.unit" = "mmHg"
"definitions.FetchPatientPlanSummaryResponse.example.included[0].attributes.metrics[0].goal.data.diastolic.value" = 95.0
"definitions.FetchPatientPlanSummaryResponse.example.included[0].attributes.metrics[0].goal.data.systolic.unit" = "mmHg"
"definitions.FetchPatientPlanSummaryResponse.example.included[0].attributes.metrics[0].goal.data.systolic.value" = 150.0
"definitions.FetchPatientPlanSummaryResponse.example.included[0].attributes.metrics[0].metric_type" = "blood_pressure"
"definitions.FetchPatientPlanSummaryResponse.example.included[0].attributes.metrics[0].unit" = "mmHg"
"definitions.FetchPatientPlanSummaryResponse.example.included[0].attributes.options.length" = 0
"definitions.FetchPatientPlanSummaryResponse.example.included[0].attributes.title" = "Record Blood Pressure"
"definitions.FetchPatientPlanSummaryResponse.example.included[0].attributes.tracking" = true
"definitions.FetchPatientPlanSummaryResponse.example.included[0].attributes.type" = "blood_pressure"
"definitions.FetchPatientPlanSummaryResponse.example.included[0].attributes.windows.length" = 0
"definitions.FetchPatientPlanSummaryResponse.example.included[0].id" = "5964f831f65725bf25558b4b"
"definitions.FetchPatientPlanSummaryResponse.example.included[0].links.self" = "/action/5964f831f65725bf25558b4b"
"definitions.FetchPatientPlanSummaryResponse.example.included[0].relationships.bundles.data.length" = 0
"definitions.FetchPatientPlanSummaryResponse.example.included[0].relationships.bundles.links.related" = "/action/5964f831f65725bf25558b4b/bundles"
"definitions.FetchPatientPlanSummaryResponse.example.included[0].relationships.plan.links.related" = "/action/5964f831f65725bf25558b4b/plan"
"definitions.FetchPatientPlanSummaryResponse.example.included[0].type" = "action"
"definitions.FetchPatientPlanSummaryResponse.example.meta.req_id" = "e0e78ef5-c0fd-415b-9b9f-a1b5c77c1198"
"definitions.FetchPatientPlanSummaryResponse.properties.data.$ref" = "#/definitions/PatientPlanSummaryResource"
"definitions.FetchPatientPlanSummaryResponse.properties.included.description" = "Related resources which are included in the repoonse based on the `include` param.\nAttributes of each resource will vary depending on the type.\nSee [action](#operation/fetchAction), [bundle](#operation/fetchBundle) and [patient](#operation/fetchPatient)\n"
"definitions.FetchPatientPlanSummaryResponse.properties.included.items.$ref" = "#/definitions/Resource"
"definitions.FetchPatientPlanSummaryResponse.properties.included.type" = "array"
"definitions.FetchPatientPlanSummaryResponse.properties.meta.$ref" = "#/definitions/FetchMetaResponse"
"definitions.FetchPatientPlanSummaryResponse.required.length" = 1
"definitions.FetchPatientPlanSummaryResponse.required[0]" = "data"
"definitions.FetchPatientPlanSummaryResponse.type" = "object"
"definitions.FetchPatientResponse.example.data.attributes.addresses.length" = 0
"definitions.FetchPatientResponse.example.data.attributes.archive_history.length" = 0
"definitions.FetchPatientResponse.example.data.attributes.archived" = false
"definitions.FetchPatientResponse.example.data.attributes.birth_date" = "1938-10-04"
"definitions.FetchPatientResponse.example.data.attributes.first_name" = "Lucy"
"definitions.FetchPatientResponse.example.data.attributes.identifiers.length" = 1
"definitions.FetchPatientResponse.example.data.attributes.identifiers[0].label" = "Twine Sample Data Filler Patient"
"definitions.FetchPatientResponse.example.data.attributes.identifiers[0].system" = "twine-filler-patient"
"definitions.FetchPatientResponse.example.data.attributes.identifiers[0].value" = "filler-92"
"definitions.FetchPatientResponse.example.data.attributes.last_name" = "Bernhard"
"definitions.FetchPatientResponse.example.data.attributes.phone_numbers.length" = 2
"definitions.FetchPatientResponse.example.data.attributes.phone_numbers[0].primary" = true
"definitions.FetchPatientResponse.example.data.attributes.phone_numbers[0].value" = "880-136-7979 x6183"
"definitions.FetchPatientResponse.example.data.attributes.phone_numbers[1].primary" = false
"definitions.FetchPatientResponse.example.data.attributes.phone_numbers[1].value" = "919.814.3552 x40123"
"definitions.FetchPatientResponse.example.data.attributes.updated_at" = "2016-03-16T13:32:57.000Z"
"definitions.FetchPatientResponse.example.data.id" = "58163112237d84a94035f78b"
"definitions.FetchPatientResponse.example.data.links.self" = "/pub/patient/58163112237d84a94035f78b"
"definitions.FetchPatientResponse.example.data.links.twine_web_app" = "http://10.0.1.55:9000/#/coach/admin/coaches/58163112237d84a94035f78b/profile"
"definitions.FetchPatientResponse.example.data.relationships.coaches.data.length" = 1
"definitions.FetchPatientResponse.example.data.relationships.coaches.data[0].id" = "581630c3237d84a9403533c6"
"definitions.FetchPatientResponse.example.data.relationships.coaches.data[0].meta.primary" = true
"definitions.FetchPatientResponse.example.data.relationships.coaches.data[0].type" = "coach"
"definitions.FetchPatientResponse.example.data.relationships.coaches.links.related" = "/pub/patient/58163112237d84a94035f78b/coaches"
"definitions.FetchPatientResponse.example.data.relationships.groups.data.length" = 1
"definitions.FetchPatientResponse.example.data.relationships.groups.data[0].id" = "5755db2a3db4179179999acf"
"definitions.FetchPatientResponse.example.data.relationships.groups.data[0].type" = "group"
"definitions.FetchPatientResponse.example.data.relationships.groups.links.related" = "/pub/patient/58163112237d84a94035f78b/groups"
"definitions.FetchPatientResponse.example.data.type" = "patient"
"definitions.FetchPatientResponse.example.included.length" = 0
"definitions.FetchPatientResponse.example.meta.req_id" = "23001d51-669b-4948-b9fa-11dbffdf8ced"
"definitions.FetchPatientResponse.properties.data.$ref" = "#/definitions/PatientResource"
"definitions.FetchPatientResponse.properties.meta.$ref" = "#/definitions/FetchMetaResponse"
"definitions.FetchPatientResponse.required.length" = 1
"definitions.FetchPatientResponse.required[0]" = "data"
"definitions.FetchPatientResponse.type" = "object"
"definitions.FetchPatientsResponse.example.data.length" = 3
"definitions.FetchPatientsResponse.example.data[0].attributes.addresses.length" = 0
"definitions.FetchPatientsResponse.example.data[0].attributes.archive_history.length" = 0
"definitions.FetchPatientsResponse.example.data[0].attributes.archived" = false
"definitions.FetchPatientsResponse.example.data[0].attributes.birth_date" = "1938-10-04"
"definitions.FetchPatientsResponse.example.data[0].attributes.first_name" = "Lucy"
"definitions.FetchPatientsResponse.example.data[0].attributes.identifiers.length" = 1
"definitions.FetchPatientsResponse.example.data[0].attributes.identifiers[0].label" = "Twine Sample Data Filler Patient"
"definitions.FetchPatientsResponse.example.data[0].attributes.identifiers[0].system" = "twine-filler-patient"
"definitions.FetchPatientsResponse.example.data[0].attributes.identifiers[0].value" = "filler-92"
"definitions.FetchPatientsResponse.example.data[0].attributes.last_name" = "Bernhard"
"definitions.FetchPatientsResponse.example.data[0].attributes.phone_numbers.length" = 2
"definitions.FetchPatientsResponse.example.data[0].attributes.phone_numbers[0].primary" = true
"definitions.FetchPatientsResponse.example.data[0].attributes.phone_numbers[0].value" = "880-136-7979 x6183"
"definitions.FetchPatientsResponse.example.data[0].attributes.phone_numbers[1].primary" = false
"definitions.FetchPatientsResponse.example.data[0].attributes.phone_numbers[1].value" = "919.814.3552 x40123"
"definitions.FetchPatientsResponse.example.data[0].attributes.updated_at" = "2016-03-16T13:32:57.000Z"
"definitions.FetchPatientsResponse.example.data[0].id" = "58163112237d84a94035f78b"
"definitions.FetchPatientsResponse.example.data[0].links.self" = "/pub/patient/58163112237d84a94035f78b"
"definitions.FetchPatientsResponse.example.data[0].links.twine_web_app" = "http://10.0.1.55:9000/#/coach/admin/coaches/58163112237d84a94035f78b/profile"
"definitions.FetchPatientsResponse.example.data[0].relationships.coaches.data.length" = 1
"definitions.FetchPatientsResponse.example.data[0].relationships.coaches.data[0].id" = "581630c3237d84a9403533c6"
"definitions.FetchPatientsResponse.example.data[0].relationships.coaches.data[0].meta.primary" = true
"definitions.FetchPatientsResponse.example.data[0].relationships.coaches.data[0].type" = "coach"
"definitions.FetchPatientsResponse.example.data[0].relationships.coaches.links.related" = "/pub/patient/58163112237d84a94035f78b/coaches"
"definitions.FetchPatientsResponse.example.data[0].relationships.groups.data.length" = 1
"definitions.FetchPatientsResponse.example.data[0].relationships.groups.data[0].id" = "5755db2a3db4179179999acf"
"definitions.FetchPatientsResponse.example.data[0].relationships.groups.data[0].type" = "group"
"definitions.FetchPatientsResponse.example.data[0].relationships.groups.links.related" = "/pub/patient/58163112237d84a94035f78b/groups"
"definitions.FetchPatientsResponse.example.data[0].type" = "patient"
"definitions.FetchPatientsResponse.example.data[1].attributes.addresses.length" = 0
"definitions.FetchPatientsResponse.example.data[1].attributes.birth_date" = "1983-03-16"
"definitions.FetchPatientsResponse.example.data[1].attributes.email_address" = "annette.parisian@example.com"
"definitions.FetchPatientsResponse.example.data[1].attributes.first_name" = "Annette"
"definitions.FetchPatientsResponse.example.data[1].attributes.identifiers.length" = 1
"definitions.FetchPatientsResponse.example.data[1].attributes.identifiers[0].label" = "Twine Sample Data Filler Patient"
"definitions.FetchPatientsResponse.example.data[1].attributes.identifiers[0].system" = "twine-filler-patient"
"definitions.FetchPatientsResponse.example.data[1].attributes.identifiers[0].value" = "filler-5"
"definitions.FetchPatientsResponse.example.data[1].attributes.last_name" = "Parisian"
"definitions.FetchPatientsResponse.example.data[1].attributes.phone_numbers.length" = 1
"definitions.FetchPatientsResponse.example.data[1].attributes.phone_numbers[0].primary" = true
"definitions.FetchPatientsResponse.example.data[1].attributes.phone_numbers[0].value" = "044.758.5704 x1965"
"definitions.FetchPatientsResponse.example.data[1].attributes.updated_at" = "2016-02-04T12:55:03.000Z"
"definitions.FetchPatientsResponse.example.data[1].id" = "58163103237d84a94035f0b3"
"definitions.FetchPatientsResponse.example.data[1].links.self" = "/pub/patient/58163103237d84a94035f0b3"
"definitions.FetchPatientsResponse.example.data[1].links.twine_web_app" = "http://10.0.1.55:9000/#/coach/admin/coaches/58163103237d84a94035f0b3/profile"
"definitions.FetchPatientsResponse.example.data[1].relationships.coaches.data.length" = 1
"definitions.FetchPatientsResponse.example.data[1].relationships.coaches.data[0].id" = "581630c3237d84a9403533c6"
"definitions.FetchPatientsResponse.example.data[1].relationships.coaches.data[0].meta.primary" = true
"definitions.FetchPatientsResponse.example.data[1].relationships.coaches.data[0].type" = "coach"
"definitions.FetchPatientsResponse.example.data[1].relationships.coaches.links.related" = "/pub/patient/58163103237d84a94035f0b3/coaches"
"definitions.FetchPatientsResponse.example.data[1].relationships.groups.data.length" = 1
"definitions.FetchPatientsResponse.example.data[1].relationships.groups.data[0].id" = "5755db2a3db4179179999acf"
"definitions.FetchPatientsResponse.example.data[1].relationships.groups.data[0].type" = "group"
"definitions.FetchPatientsResponse.example.data[1].relationships.groups.links.related" = "/pub/patient/58163103237d84a94035f0b3/groups"
"definitions.FetchPatientsResponse.example.data[1].type" = "patient"
"definitions.FetchPatientsResponse.example.data[2].attributes.addresses.length" = 0
"definitions.FetchPatientsResponse.example.data[2].attributes.birth_date" = "1932-04-06"
"definitions.FetchPatientsResponse.example.data[2].attributes.email_address" = "lexi.thompson@example.com"
"definitions.FetchPatientsResponse.example.data[2].attributes.first_name" = "Lexi"
"definitions.FetchPatientsResponse.example.data[2].attributes.identifiers.length" = 1
"definitions.FetchPatientsResponse.example.data[2].attributes.identifiers[0].label" = "Twine Sample Data Filler Patient"
"definitions.FetchPatientsResponse.example.data[2].attributes.identifiers[0].system" = "twine-filler-patient"
"definitions.FetchPatientsResponse.example.data[2].attributes.identifiers[0].value" = "filler-3"
"definitions.FetchPatientsResponse.example.data[2].attributes.last_name" = "Thompson"
"definitions.FetchPatientsResponse.example.data[2].attributes.phone_numbers.length" = 1
"definitions.FetchPatientsResponse.example.data[2].attributes.phone_numbers[0].primary" = true
"definitions.FetchPatientsResponse.example.data[2].attributes.phone_numbers[0].value" = "1-977-830-6179 x26334"
"definitions.FetchPatientsResponse.example.data[2].attributes.updated_at" = "2016-01-23T16:12:07.000Z"
"definitions.FetchPatientsResponse.example.data[2].id" = "58163103237d84a94035f043"
"definitions.FetchPatientsResponse.example.data[2].links.self" = "/pub/patient/58163103237d84a94035f043"
"definitions.FetchPatientsResponse.example.data[2].links.twine_web_app" = "http://10.0.1.55:9000/#/coach/admin/coaches/58163103237d84a94035f043/profile"
"definitions.FetchPatientsResponse.example.data[2].relationships.coaches.data.length" = 1
"definitions.FetchPatientsResponse.example.data[2].relationships.coaches.data[0].id" = "581630c3237d84a9403533c6"
"definitions.FetchPatientsResponse.example.data[2].relationships.coaches.data[0].meta.primary" = true
"definitions.FetchPatientsResponse.example.data[2].relationships.coaches.data[0].type" = "coach"
"definitions.FetchPatientsResponse.example.data[2].relationships.coaches.links.related" = "/pub/patient/58163103237d84a94035f043/coaches"
"definitions.FetchPatientsResponse.example.data[2].relationships.groups.data.length" = 1
"definitions.FetchPatientsResponse.example.data[2].relationships.groups.data[0].id" = "5755db2a3db4179179999acf"
"definitions.FetchPatientsResponse.example.data[2].relationships.groups.data[0].type" = "group"
"definitions.FetchPatientsResponse.example.data[2].relationships.groups.links.related" = "/pub/patient/58163103237d84a94035f043/groups"
"definitions.FetchPatientsResponse.example.data[2].type" = "patient"
"definitions.FetchPatientsResponse.example.links.last" = "/pub/patient?filter[groups]=5755db2a3db4179179999acf&page[number]=88&page[size]=3"
"definitions.FetchPatientsResponse.example.links.next" = "/pub/patient?filter[groups]=5755db2a3db4179179999acf&page[number]=2&page[size]=3"
"definitions.FetchPatientsResponse.example.links.self" = "/pub/patient?filter[groups]=5755db2a3db4179179999acf&page[number]=1&page[size]=3"
"definitions.FetchPatientsResponse.example.meta.count" = 263.0
"definitions.FetchPatientsResponse.example.meta.req_id" = "155c690b-50b2-4ff2-8abe-b809a8a51e53"
"definitions.FetchPatientsResponse.properties.data.items.$ref" = "#/definitions/PatientResource"
"definitions.FetchPatientsResponse.properties.data.type" = "array"
"definitions.FetchPatientsResponse.properties.links.$ref" = "#/definitions/CollectionResponseLinks"
"definitions.FetchPatientsResponse.properties.meta.$ref" = "#/definitions/FetchMetaResponse"
"definitions.FetchPatientsResponse.required.length" = 1
"definitions.FetchPatientsResponse.required[0]" = "data"
"definitions.FetchPatientsResponse.type" = "object"
"definitions.FetchRewardEarningFulfillmentResponse.properties.data.$ref" = "#/definitions/RewardEarningFulfillmentResource"
"definitions.FetchRewardEarningFulfillmentResponse.properties.meta.$ref" = "#/definitions/FetchMetaResponse"
"definitions.FetchRewardEarningFulfillmentResponse.required.length" = 1
"definitions.FetchRewardEarningFulfillmentResponse.required[0]" = "data"
"definitions.FetchRewardEarningFulfillmentResponse.type" = "object"
"definitions.FetchRewardEarningFulfillmentsResponse.properties.data.items.$ref" = "#/definitions/RewardEarningFulfillmentResource"
"definitions.FetchRewardEarningFulfillmentsResponse.properties.data.type" = "array"
"definitions.FetchRewardEarningFulfillmentsResponse.properties.meta.$ref" = "#/definitions/FetchMetaResponse"
"definitions.FetchRewardEarningFulfillmentsResponse.required.length" = 1
"definitions.FetchRewardEarningFulfillmentsResponse.required[0]" = "data"
"definitions.FetchRewardEarningFulfillmentsResponse.type" = "object"
"definitions.FetchRewardEarningResponse.properties.data.$ref" = "#/definitions/RewardEarningResource"
"definitions.FetchRewardEarningResponse.properties.meta.$ref" = "#/definitions/FetchMetaResponse"
"definitions.FetchRewardEarningResponse.required.length" = 1
"definitions.FetchRewardEarningResponse.required[0]" = "data"
"definitions.FetchRewardEarningResponse.type" = "object"
"definitions.FetchRewardEarningsResponse.properties.data.items.$ref" = "#/definitions/RewardEarningResource"
"definitions.FetchRewardEarningsResponse.properties.data.type" = "array"
"definitions.FetchRewardEarningsResponse.properties.meta.$ref" = "#/definitions/FetchMetaResponse"
"definitions.FetchRewardEarningsResponse.required.length" = 1
"definitions.FetchRewardEarningsResponse.required[0]" = "data"
"definitions.FetchRewardEarningsResponse.type" = "object"
"definitions.FetchRewardProgramActivationResponse.properties.data.$ref" = "#/definitions/RewardProgramActivationResource"
"definitions.FetchRewardProgramActivationResponse.properties.meta.$ref" = "#/definitions/FetchMetaResponse"
"definitions.FetchRewardProgramActivationResponse.required.length" = 1
"definitions.FetchRewardProgramActivationResponse.required[0]" = "data"
"definitions.FetchRewardProgramActivationResponse.type" = "object"
"definitions.FetchRewardProgramActivationsResponse.properties.data.items.$ref" = "#/definitions/RewardProgramActivationResource"
"definitions.FetchRewardProgramActivationsResponse.properties.data.type" = "array"
"definitions.FetchRewardProgramActivationsResponse.properties.meta.$ref" = "#/definitions/FetchMetaResponse"
"definitions.FetchRewardProgramActivationsResponse.required.length" = 1
"definitions.FetchRewardProgramActivationsResponse.required[0]" = "data"
"definitions.FetchRewardProgramActivationsResponse.type" = "object"
"definitions.FetchRewardProgramResponse.properties.data.$ref" = "#/definitions/RewardProgramResource"
"definitions.FetchRewardProgramResponse.properties.meta.$ref" = "#/definitions/FetchMetaResponse"
"definitions.FetchRewardProgramResponse.required.length" = 1
"definitions.FetchRewardProgramResponse.required[0]" = "data"
"definitions.FetchRewardProgramResponse.type" = "object"
"definitions.FetchRewardProgramsResponse.properties.data.items.$ref" = "#/definitions/RewardProgramResource"
"definitions.FetchRewardProgramsResponse.properties.data.type" = "array"
"definitions.FetchRewardProgramsResponse.properties.meta.$ref" = "#/definitions/FetchMetaResponse"
"definitions.FetchRewardProgramsResponse.required.length" = 1
"definitions.FetchRewardProgramsResponse.required[0]" = "data"
"definitions.FetchRewardProgramsResponse.type" = "object"
"definitions.FetchRewardResponse.properties.data.$ref" = "#/definitions/RewardResource"
"definitions.FetchRewardResponse.properties.meta.$ref" = "#/definitions/FetchMetaResponse"
"definitions.FetchRewardResponse.required.length" = 1
"definitions.FetchRewardResponse.required[0]" = "data"
"definitions.FetchRewardResponse.type" = "object"
"definitions.FetchRewardsResponse.properties.data.items.$ref" = "#/definitions/RewardResource"
"definitions.FetchRewardsResponse.properties.data.type" = "array"
"definitions.FetchRewardsResponse.properties.meta.$ref" = "#/definitions/FetchMetaResponse"
"definitions.FetchRewardsResponse.required.length" = 1
"definitions.FetchRewardsResponse.required[0]" = "data"
"definitions.FetchRewardsResponse.type" = "object"
"definitions.GroupResource.properties.attributes.properties.name.example" = "Team Health"
"definitions.GroupResource.properties.attributes.properties.name.type" = "string"
"definitions.GroupResource.properties.attributes.required.length" = 1
"definitions.GroupResource.properties.attributes.required[0]" = "name"
"definitions.GroupResource.properties.attributes.type" = "object"
"definitions.GroupResource.properties.id.example" = "57b36e3c04ad8c2224f2af38"
"definitions.GroupResource.properties.id.type" = "string"
"definitions.GroupResource.properties.links.properties.self.example" = "/group/57b36e3c04ad8c2224f2af38"
"definitions.GroupResource.properties.links.properties.self.pattern" = "/group/[0-9a-z]+"
"definitions.GroupResource.properties.links.properties.self.type" = "string"
"definitions.GroupResource.properties.links.readOnly" = true
"definitions.GroupResource.properties.links.required.length" = 1
"definitions.GroupResource.properties.links.required[0]" = "self"
"definitions.GroupResource.properties.links.type" = "object"
"definitions.GroupResource.properties.type.enum.length" = 1
"definitions.GroupResource.properties.type.enum[0]" = "group"
"definitions.GroupResource.properties.type.example" = "group"
"definitions.GroupResource.properties.type.type" = "string"
"definitions.GroupResource.required.length" = 3
"definitions.GroupResource.required[0]" = "id"
"definitions.GroupResource.required[1]" = "type"
"definitions.GroupResource.required[2]" = "attributes"
"definitions.GroupResource.type" = "object"
"definitions.Identifier.properties.label.type" = "string"
"definitions.Identifier.properties.system.type" = "string"
"definitions.Identifier.properties.value.type" = "string"
"definitions.Identifier.required.length" = 2
"definitions.Identifier.required[0]" = "system"
"definitions.Identifier.required[1]" = "value"
"definitions.Identifier.type" = "object"
"definitions.OrganizationResource.properties.attributes.properties.name.example" = "Health Activation Partners"
"definitions.OrganizationResource.properties.attributes.properties.name.type" = "string"
"definitions.OrganizationResource.properties.attributes.required.length" = 1
"definitions.OrganizationResource.properties.attributes.required[0]" = "name"
"definitions.OrganizationResource.properties.id.example" = "57b36e3c04ad8c2224f2af38"
"definitions.OrganizationResource.properties.id.type" = "string"
"definitions.OrganizationResource.properties.links.properties.self.example" = "/organization/57b36e3c04ad8c2224f2af38"
"definitions.OrganizationResource.properties.links.properties.self.pattern" = "/organization/[0-9a-z]+"
"definitions.OrganizationResource.properties.links.properties.self.type" = "string"
"definitions.OrganizationResource.properties.links.readOnly" = true
"definitions.OrganizationResource.properties.links.required.length" = 1
"definitions.OrganizationResource.properties.links.required[0]" = "self"
"definitions.OrganizationResource.properties.type.enum.length" = 1
"definitions.OrganizationResource.properties.type.enum[0]" = "organization"
"definitions.OrganizationResource.properties.type.example" = "organization"
"definitions.OrganizationResource.properties.type.type" = "string"
"definitions.OrganizationResource.required.length" = 3
"definitions.OrganizationResource.required[0]" = "id"
"definitions.OrganizationResource.required[1]" = "type"
"definitions.OrganizationResource.required[2]" = "attributes"
"definitions.OrganizationResource.type" = "object"
"definitions.PatientCreateResource.properties.attributes.properties.addresses.items.$ref" = "#/definitions/Address"
"definitions.PatientCreateResource.properties.attributes.properties.addresses.type" = "array"
"definitions.PatientCreateResource.properties.attributes.properties.birth_date.example" = "1944-03-06"
"definitions.PatientCreateResource.properties.attributes.properties.birth_date.format" = "date"
"definitions.PatientCreateResource.properties.attributes.properties.birth_date.type" = "string"
"definitions.PatientCreateResource.properties.attributes.properties.email_address.example" = "fiona@example.com"
"definitions.PatientCreateResource.properties.attributes.properties.email_address.type" = "string"
"definitions.PatientCreateResource.properties.attributes.properties.enrolled_at.example" = "2016-05-26T15:25:54.000Z"
"definitions.PatientCreateResource.properties.attributes.properties.enrolled_at.format" = "dateTime"
"definitions.PatientCreateResource.properties.attributes.properties.enrolled_at.readOnly" = true
"definitions.PatientCreateResource.properties.attributes.properties.enrolled_at.type" = "string"
"definitions.PatientCreateResource.properties.attributes.properties.first_access_at.example" = "2016-06-03T13:15:22.000Z"
"definitions.PatientCreateResource.properties.attributes.properties.first_access_at.format" = "dateTime"
"definitions.PatientCreateResource.properties.attributes.properties.first_access_at.readOnly" = true
"definitions.PatientCreateResource.properties.attributes.properties.first_access_at.type" = "string"
"definitions.PatientCreateResource.properties.attributes.properties.first_name.example" = "Fiona"
"definitions.PatientCreateResource.properties.attributes.properties.first_name.type" = "string"
"definitions.PatientCreateResource.properties.attributes.properties.gender.enum.length" = 3
"definitions.PatientCreateResource.properties.attributes.properties.gender.enum[0]" = "male"
"definitions.PatientCreateResource.properties.attributes.properties.gender.enum[1]" = "female"
"definitions.PatientCreateResource.properties.attributes.properties.gender.enum[2]" = "other"
"definitions.PatientCreateResource.properties.attributes.properties.gender.example" = "female"
"definitions.PatientCreateResource.properties.attributes.properties.gender.type" = "string"
"definitions.PatientCreateResource.properties.attributes.properties.identifiers.items.$ref" = "#/definitions/PatientIdentifier"
"definitions.PatientCreateResource.properties.attributes.properties.identifiers.type" = "array"
"definitions.PatientCreateResource.properties.attributes.properties.invited_at.example" = "2016-06-01T16:20:16.000Z"
"definitions.PatientCreateResource.properties.attributes.properties.invited_at.format" = "dateTime"
"definitions.PatientCreateResource.properties.attributes.properties.invited_at.readOnly" = true
"definitions.PatientCreateResource.properties.attributes.properties.invited_at.type" = "string"
"definitions.PatientCreateResource.properties.attributes.properties.last_access_at.example" = "2016-07-11T17:50:49.400Z"
"definitions.PatientCreateResource.properties.attributes.properties.last_access_at.format" = "dateTime"
"definitions.PatientCreateResource.properties.attributes.properties.last_access_at.readOnly" = true
"definitions.PatientCreateResource.properties.attributes.properties.last_access_at.type" = "string"
"definitions.PatientCreateResource.properties.attributes.properties.last_name.example" = "Reeves"
"definitions.PatientCreateResource.properties.attributes.properties.last_name.type" = "string"
"definitions.PatientCreateResource.properties.attributes.properties.phone_numbers.items.$ref" = "#/definitions/PhoneNumber"
"definitions.PatientCreateResource.properties.attributes.properties.phone_numbers.type" = "array"
"definitions.PatientCreateResource.properties.attributes.properties.updated_at.example" = "2016-07-11T17:13:57.027Z"
"definitions.PatientCreateResource.properties.attributes.properties.updated_at.format" = "dateTime"
"definitions.PatientCreateResource.properties.attributes.properties.updated_at.readOnly" = true
"definitions.PatientCreateResource.properties.attributes.properties.updated_at.type" = "string"
"definitions.PatientCreateResource.properties.attributes.type" = "object"
"definitions.PatientCreateResource.properties.id.example" = "57b36ef304ad8c2224f2af3a"
"definitions.PatientCreateResource.properties.id.type" = "string"
"definitions.PatientCreateResource.properties.links.properties.self.example" = "/patient/57b36ef304ad8c2224f2af3a"
"definitions.PatientCreateResource.properties.links.properties.self.pattern" = "/patient/[0-9a-z]+"
"definitions.PatientCreateResource.properties.links.properties.self.type" = "string"
"definitions.PatientCreateResource.properties.links.properties.twine_web_app.description" = "A link to the patient record in the Twine web application."
"definitions.PatientCreateResource.properties.links.properties.twine_web_app.example" = "https://app.twinehealth.com/#/coach/patient/5367c6300b7bb6e94188c02c/overview"
"definitions.PatientCreateResource.properties.links.properties.twine_web_app.type" = "string"
"definitions.PatientCreateResource.properties.links.readOnly" = true
"definitions.PatientCreateResource.properties.links.type" = "object"
"definitions.PatientCreateResource.properties.relationships.properties.coaches.properties.data.items.properties.id.example" = "57fee2a66b49113551658505"
"definitions.PatientCreateResource.properties.relationships.properties.coaches.properties.data.items.properties.id.type" = "string"
"definitions.PatientCreateResource.properties.relationships.properties.coaches.properties.data.items.properties.meta.properties.primary.type" = "boolean"
"definitions.PatientCreateResource.properties.relationships.properties.coaches.properties.data.items.properties.meta.type" = "object"
"definitions.PatientCreateResource.properties.relationships.properties.coaches.properties.data.items.properties.type.enum.length" = 1
"definitions.PatientCreateResource.properties.relationships.properties.coaches.properties.data.items.properties.type.enum[0]" = "coach"
"definitions.PatientCreateResource.properties.relationships.properties.coaches.properties.data.items.properties.type.example" = "coach"
"definitions.PatientCreateResource.properties.relationships.properties.coaches.properties.data.items.properties.type.type" = "string"
"definitions.PatientCreateResource.properties.relationships.properties.coaches.properties.data.items.required.length" = 2
"definitions.PatientCreateResource.properties.relationships.properties.coaches.properties.data.items.required[0]" = "type"
"definitions.PatientCreateResource.properties.relationships.properties.coaches.properties.data.items.required[1]" = "id"
"definitions.PatientCreateResource.properties.relationships.properties.coaches.properties.data.items.type" = "object"
"definitions.PatientCreateResource.properties.relationships.properties.coaches.properties.data.type" = "array"
"definitions.PatientCreateResource.properties.relationships.properties.coaches.properties.links.properties.related.example" = "/patient/57b36ef304ad8c2224f2af3a/coaches"
"definitions.PatientCreateResource.properties.relationships.properties.coaches.properties.links.properties.related.pattern" = "/patient/[0-9a-z]+/coaches"
"definitions.PatientCreateResource.properties.relationships.properties.coaches.properties.links.properties.related.type" = "string"
"definitions.PatientCreateResource.properties.relationships.properties.coaches.properties.links.readOnly" = true
"definitions.PatientCreateResource.properties.relationships.properties.coaches.required.length" = 1
"definitions.PatientCreateResource.properties.relationships.properties.coaches.required[0]" = "data"
"definitions.PatientCreateResource.properties.relationships.properties.coaches.type" = "object"
"definitions.PatientCreateResource.properties.relationships.properties.groups.properties.data.items.properties.id.description" = "Required if the `meta.query` is not defined."
"definitions.PatientCreateResource.properties.relationships.properties.groups.properties.data.items.properties.id.example" = "57b3708b04ad8c2224f2af3b"
"definitions.PatientCreateResource.properties.relationships.properties.groups.properties.data.items.properties.id.type" = "string"
"definitions.PatientCreateResource.properties.relationships.properties.groups.properties.data.items.properties.meta.description" = "Allows the specification of a query for a group rather than providing a group id directly"
"definitions.PatientCreateResource.properties.relationships.properties.groups.properties.data.items.properties.meta.properties.query.description" = "1. If the query does not return any groups, a group with the specified name will be created and related to the patient.\n2. If the query returns one group, that group will be related to the patient.\n3. If the query returns more than one group, the creation of the patient will fail.\n"
"definitions.PatientCreateResource.properties.relationships.properties.groups.properties.data.items.properties.meta.properties.query.properties.name.type" = "string"
"definitions.PatientCreateResource.properties.relationships.properties.groups.properties.data.items.properties.meta.properties.query.properties.organization.type" = "string"
"definitions.PatientCreateResource.properties.relationships.properties.groups.properties.data.items.properties.meta.properties.query.required.length" = 2
"definitions.PatientCreateResource.properties.relationships.properties.groups.properties.data.items.properties.meta.properties.query.required[0]" = "organization"
"definitions.PatientCreateResource.properties.relationships.properties.groups.properties.data.items.properties.meta.properties.query.required[1]" = "name"
"definitions.PatientCreateResource.properties.relationships.properties.groups.properties.data.items.properties.meta.properties.query.type" = "object"
"definitions.PatientCreateResource.properties.relationships.properties.groups.properties.data.items.properties.meta.required.length" = 1
"definitions.PatientCreateResource.properties.relationships.properties.groups.properties.data.items.properties.meta.required[0]" = "query"
"definitions.PatientCreateResource.properties.relationships.properties.groups.properties.data.items.properties.meta.type" = "object"
"definitions.PatientCreateResource.properties.relationships.properties.groups.properties.data.items.properties.type.enum.length" = 1
"definitions.PatientCreateResource.properties.relationships.properties.groups.properties.data.items.properties.type.enum[0]" = "group"
"definitions.PatientCreateResource.properties.relationships.properties.groups.properties.data.items.properties.type.example" = "group"
"definitions.PatientCreateResource.properties.relationships.properties.groups.properties.data.items.properties.type.type" = "string"
"definitions.PatientCreateResource.properties.relationships.properties.groups.properties.data.items.required.length" = 1
"definitions.PatientCreateResource.properties.relationships.properties.groups.properties.data.items.required[0]" = "type"
"definitions.PatientCreateResource.properties.relationships.properties.groups.properties.data.items.type" = "object"
"definitions.PatientCreateResource.properties.relationships.properties.groups.properties.data.type" = "array"
"definitions.PatientCreateResource.properties.relationships.properties.groups.required.length" = 1
"definitions.PatientCreateResource.properties.relationships.properties.groups.required[0]" = "data"
"definitions.PatientCreateResource.properties.relationships.properties.groups.type" = "object"
"definitions.PatientCreateResource.properties.relationships.required.length" = 1
"definitions.PatientCreateResource.properties.relationships.required[0]" = "groups"
"definitions.PatientCreateResource.properties.relationships.type" = "object"
"definitions.PatientCreateResource.properties.type.enum.length" = 1
"definitions.PatientCreateResource.properties.type.enum[0]" = "patient"
"definitions.PatientCreateResource.properties.type.example" = "patient"
"definitions.PatientCreateResource.properties.type.type" = "string"
"definitions.PatientCreateResource.required.length" = 2
"definitions.PatientCreateResource.required[0]" = "type"
"definitions.PatientCreateResource.required[1]" = "attributes"
"definitions.PatientCreateResource.type" = "object"
"definitions.PatientHealthMetricResource.description" = "Note that `data` can either be a single object or an array of objects matching the schema specified here\n(bulk create). When bulk creating multiple, the relationships in every item **must** be the same.\n"
"definitions.PatientHealthMetricResource.example.data.attributes.code.system" = "LOINC"
"definitions.PatientHealthMetricResource.example.data.attributes.code.value" = "13457-7"
"definitions.PatientHealthMetricResource.example.data.attributes.occurred_at" = "2017-03-14T11:00:57.000Z"
"definitions.PatientHealthMetricResource.example.data.attributes.type" = "ldl_cholesterol"
"definitions.PatientHealthMetricResource.example.data.attributes.unit" = "mg/dl"
"definitions.PatientHealthMetricResource.example.data.attributes.value" = "121"
"definitions.PatientHealthMetricResource.example.data.relationships.patient.data.id" = ""
"definitions.PatientHealthMetricResource.example.data.relationships.patient.data.type" = "patient"
"definitions.PatientHealthMetricResource.example.data.type" = "patient_health_metric"
"definitions.PatientHealthMetricResource.properties.attributes.properties.code.properties.system.type" = "string"
"definitions.PatientHealthMetricResource.properties.attributes.properties.code.properties.value.type" = "string"
"definitions.PatientHealthMetricResource.properties.attributes.properties.code.required.length" = 2
"definitions.PatientHealthMetricResource.properties.attributes.properties.code.required[0]" = "system"
"definitions.PatientHealthMetricResource.properties.attributes.properties.code.required[1]" = "value"
"definitions.PatientHealthMetricResource.properties.attributes.properties.code.type" = "object"
"definitions.PatientHealthMetricResource.properties.attributes.properties.diastolic.type" = "number"
"definitions.PatientHealthMetricResource.properties.attributes.properties.occurred_at.format" = "dateTime"
"definitions.PatientHealthMetricResource.properties.attributes.properties.occurred_at.type" = "string"
"definitions.PatientHealthMetricResource.properties.attributes.properties.systolic.type" = "number"
"definitions.PatientHealthMetricResource.properties.attributes.properties.type.enum.length" = 44
"definitions.PatientHealthMetricResource.properties.attributes.properties.type.enum[0]" = "blood_pressure_systolic"
"definitions.PatientHealthMetricResource.properties.attributes.properties.type.enum[10]" = "hematocrit"
"definitions.PatientHealthMetricResource.properties.attributes.properties.type.enum[11]" = "total_serum_iron"
"definitions.PatientHealthMetricResource.properties.attributes.properties.type.enum[12]" = "thyroid_stimulating_hormone"
"definitions.PatientHealthMetricResource.properties.attributes.properties.type.enum[13]" = "free_thyroxine"
"definitions.PatientHealthMetricResource.properties.attributes.properties.type.enum[14]" = "free_triiodothyronine"
"definitions.PatientHealthMetricResource.properties.attributes.properties.type.enum[15]" = "total_triiodothyronine"
"definitions.PatientHealthMetricResource.properties.attributes.properties.type.enum[16]" = "cd4_cell_count"
"definitions.PatientHealthMetricResource.properties.attributes.properties.type.enum[17]" = "hiv_viral_load"
"definitions.PatientHealthMetricResource.properties.attributes.properties.type.enum[18]" = "inr"
"definitions.PatientHealthMetricResource.properties.attributes.properties.type.enum[19]" = "free_testosterone"
"definitions.PatientHealthMetricResource.properties.attributes.properties.type.enum[1]" = "blood_pressure_diastolic"
"definitions.PatientHealthMetricResource.properties.attributes.properties.type.enum[20]" = "total_testosterone"
"definitions.PatientHealthMetricResource.properties.attributes.properties.type.enum[21]" = "c_reactive_protein"
"definitions.PatientHealthMetricResource.properties.attributes.properties.type.enum[22]" = "prostate_specific_antigen"
"definitions.PatientHealthMetricResource.properties.attributes.properties.type.enum[23]" = "cotinine"
"definitions.PatientHealthMetricResource.properties.attributes.properties.type.enum[24]" = "c_peptide"
"definitions.PatientHealthMetricResource.properties.attributes.properties.type.enum[25]" = "blood_pressure"
"definitions.PatientHealthMetricResource.properties.attributes.properties.type.enum[26]" = "blood_glucose"
"definitions.PatientHealthMetricResource.properties.attributes.properties.type.enum[27]" = "weight"
"definitions.PatientHealthMetricResource.properties.attributes.properties.type.enum[28]" = "heart_rate"
"definitions.PatientHealthMetricResource.properties.attributes.properties.type.enum[29]" = "body_fat_percentage"
"definitions.PatientHealthMetricResource.properties.attributes.properties.type.enum[2]" = "hemoglobin_a1c"
"definitions.PatientHealthMetricResource.properties.attributes.properties.type.enum[30]" = "body_mass_index"
"definitions.PatientHealthMetricResource.properties.attributes.properties.type.enum[31]" = "body_temperature"
"definitions.PatientHealthMetricResource.properties.attributes.properties.type.enum[32]" = "forced_expiratory_volume1"
"definitions.PatientHealthMetricResource.properties.attributes.properties.type.enum[33]" = "forced_vital_capacity"
"definitions.PatientHealthMetricResource.properties.attributes.properties.type.enum[34]" = "lean_body_mass"
"definitions.PatientHealthMetricResource.properties.attributes.properties.type.enum[35]" = "nausea_level"
"definitions.PatientHealthMetricResource.properties.attributes.properties.type.enum[36]" = "oxygen_saturation"
"definitions.PatientHealthMetricResource.properties.attributes.properties.type.enum[37]" = "pain_level"
"definitions.PatientHealthMetricResource.properties.attributes.properties.type.enum[38]" = "peak_expiratory_flow_rate"
"definitions.PatientHealthMetricResource.properties.attributes.properties.type.enum[39]" = "peripheral_perfusion_index"
"definitions.PatientHealthMetricResource.properties.attributes.properties.type.enum[3]" = "hdl_cholesterol"
"definitions.PatientHealthMetricResource.properties.attributes.properties.type.enum[40]" = "respiratory_rate"
"definitions.PatientHealthMetricResource.properties.attributes.properties.type.enum[41]" = "sleep_analysis_asleep"
"definitions.PatientHealthMetricResource.properties.attributes.properties.type.enum[42]" = "sleep_analysis_in_bed"
"definitions.PatientHealthMetricResource.properties.attributes.properties.type.enum[43]" = "inhaler_usage"
"definitions.PatientHealthMetricResource.properties.attributes.properties.type.enum[4]" = "ldl_cholesterol"
"definitions.PatientHealthMetricResource.properties.attributes.properties.type.enum[5]" = "total_cholesterol"
"definitions.PatientHealthMetricResource.properties.attributes.properties.type.enum[6]" = "triglycerides"
"definitions.PatientHealthMetricResource.properties.attributes.properties.type.enum[7]" = "blood_urea_nitrogen"
"definitions.PatientHealthMetricResource.properties.attributes.properties.type.enum[8]" = "creatinine"
"definitions.PatientHealthMetricResource.properties.attributes.properties.type.enum[9]" = "hemoglobin"
"definitions.PatientHealthMetricResource.properties.attributes.properties.type.type" = "string"
"definitions.PatientHealthMetricResource.properties.attributes.properties.unit.type" = "string"
"definitions.PatientHealthMetricResource.properties.attributes.properties.value.type" = "number"
"definitions.PatientHealthMetricResource.properties.attributes.type" = "object"
"definitions.PatientHealthMetricResource.properties.id.type" = "string"
"definitions.PatientHealthMetricResource.properties.relationships.properties.patient.properties.data.properties.id.description" = "Required if the `meta.query` is not defined."
"definitions.PatientHealthMetricResource.properties.relationships.properties.patient.properties.data.properties.id.example" = "5817ead56f5316c0d05ba8bf"
"definitions.PatientHealthMetricResource.properties.relationships.properties.patient.properties.data.properties.id.type" = "string"
"definitions.PatientHealthMetricResource.properties.relationships.properties.patient.properties.data.properties.meta.description" = "Allows the specification of a query for a patient rather than providing a patient id directly"
"definitions.PatientHealthMetricResource.properties.relationships.properties.patient.properties.data.properties.meta.properties.query.description" = "The query must return one and only one patient."
"definitions.PatientHealthMetricResource.properties.relationships.properties.patient.properties.data.properties.meta.properties.query.properties.groups.items.type" = "string"
"definitions.PatientHealthMetricResource.properties.relationships.properties.patient.properties.data.properties.meta.properties.query.properties.groups.type" = "array"
"definitions.PatientHealthMetricResource.properties.relationships.properties.patient.properties.data.properties.meta.properties.query.properties.identifier.properties.system.type" = "string"
"definitions.PatientHealthMetricResource.properties.relationships.properties.patient.properties.data.properties.meta.properties.query.properties.identifier.properties.value.type" = "string"
"definitions.PatientHealthMetricResource.properties.relationships.properties.patient.properties.data.properties.meta.properties.query.properties.identifier.required.length" = 2
"definitions.PatientHealthMetricResource.properties.relationships.properties.patient.properties.data.properties.meta.properties.query.properties.identifier.required[0]" = "system"
"definitions.PatientHealthMetricResource.properties.relationships.properties.patient.properties.data.properties.meta.properties.query.properties.identifier.required[1]" = "value"
"definitions.PatientHealthMetricResource.properties.relationships.properties.patient.properties.data.properties.meta.properties.query.properties.identifier.type" = "object"
"definitions.PatientHealthMetricResource.properties.relationships.properties.patient.properties.data.properties.meta.properties.query.properties.organization.type" = "string"
"definitions.PatientHealthMetricResource.properties.relationships.properties.patient.properties.data.properties.meta.properties.query.required.length" = 1
"definitions.PatientHealthMetricResource.properties.relationships.properties.patient.properties.data.properties.meta.properties.query.required[0]" = "identifier"
"definitions.PatientHealthMetricResource.properties.relationships.properties.patient.properties.data.properties.meta.properties.query.type" = "object"
"definitions.PatientHealthMetricResource.properties.relationships.properties.patient.properties.data.properties.meta.required.length" = 1
"definitions.PatientHealthMetricResource.properties.relationships.properties.patient.properties.data.properties.meta.required[0]" = "query"
"definitions.PatientHealthMetricResource.properties.relationships.properties.patient.properties.data.properties.meta.type" = "object"
"definitions.PatientHealthMetricResource.properties.relationships.properties.patient.properties.data.properties.type.type" = "string"
"definitions.PatientHealthMetricResource.properties.relationships.properties.patient.properties.data.type" = "object"
"definitions.PatientHealthMetricResource.properties.relationships.properties.patient.properties.links.type" = "object"
"definitions.PatientHealthMetricResource.properties.relationships.properties.patient.type" = "object"
"definitions.PatientHealthMetricResource.properties.relationships.type" = "object"
"definitions.PatientHealthMetricResource.properties.type.type" = "string"
"definitions.PatientHealthMetricResource.required.length" = 2
"definitions.PatientHealthMetricResource.required[0]" = "type"
"definitions.PatientHealthMetricResource.required[1]" = "id"
"definitions.PatientHealthMetricResource.type" = "object"
"definitions.PatientIdentifier.properties.label.type" = "string"
"definitions.PatientIdentifier.properties.system.type" = "string"
"definitions.PatientIdentifier.properties.value.type" = "string"
"definitions.PatientIdentifier.required.length" = 2
"definitions.PatientIdentifier.required[0]" = "system"
"definitions.PatientIdentifier.required[1]" = "value"
"definitions.PatientIdentifier.type" = "object"
"definitions.PatientPlanSummaryResource.properties.attributes.properties.adherence.readOnly" = true
"definitions.PatientPlanSummaryResource.properties.attributes.properties.adherence.type" = "object"
"definitions.PatientPlanSummaryResource.properties.attributes.properties.critical.items.type" = "object"
"definitions.PatientPlanSummaryResource.properties.attributes.properties.critical.type" = "array"
"definitions.PatientPlanSummaryResource.properties.attributes.properties.effective_from.format" = "dateTime"
"definitions.PatientPlanSummaryResource.properties.attributes.properties.effective_from.readOnly" = true
"definitions.PatientPlanSummaryResource.properties.attributes.properties.effective_from.type" = "string"
"definitions.PatientPlanSummaryResource.properties.attributes.properties.time_zone.type" = "string"
"definitions.PatientPlanSummaryResource.properties.attributes.properties.window_notification_times.properties.afternoon.type" = "integer"
"definitions.PatientPlanSummaryResource.properties.attributes.properties.window_notification_times.properties.evening.type" = "integer"
"definitions.PatientPlanSummaryResource.properties.attributes.properties.window_notification_times.properties.morning.type" = "integer"
"definitions.PatientPlanSummaryResource.properties.attributes.properties.window_notification_times.properties.night.type" = "integer"
"definitions.PatientPlanSummaryResource.properties.attributes.properties.window_notification_times.readOnly" = true
"definitions.PatientPlanSummaryResource.properties.attributes.properties.window_notification_times.type" = "object"
"definitions.PatientPlanSummaryResource.properties.attributes.properties.window_order.items.properties._actions.items.type" = "string"
"definitions.PatientPlanSummaryResource.properties.attributes.properties.window_order.items.properties._actions.type" = "array"
"definitions.PatientPlanSummaryResource.properties.attributes.properties.window_order.items.properties.type.type" = "string"
"definitions.PatientPlanSummaryResource.properties.attributes.properties.window_order.items.type" = "object"
"definitions.PatientPlanSummaryResource.properties.attributes.properties.window_order.type" = "array"
"definitions.PatientPlanSummaryResource.properties.attributes.type" = "object"
"definitions.PatientPlanSummaryResource.properties.id.example" = "57b36e3c04ad8c2224f2af38"
"definitions.PatientPlanSummaryResource.properties.id.type" = "string"
"definitions.PatientPlanSummaryResource.properties.links.properties.self.example" = "/patient_plan_summary/57b36e3c04ad8c2224f2af38"
"definitions.PatientPlanSummaryResource.properties.links.properties.self.pattern" = "/patient_plan_summary/[0-9a-z]+"
"definitions.PatientPlanSummaryResource.properties.links.properties.self.type" = "string"
"definitions.PatientPlanSummaryResource.properties.links.readOnly" = true
"definitions.PatientPlanSummaryResource.properties.links.required.length" = 1
"definitions.PatientPlanSummaryResource.properties.links.required[0]" = "self"
"definitions.PatientPlanSummaryResource.properties.links.type" = "object"
"definitions.PatientPlanSummaryResource.properties.relationships.properties.actions.items.properties.data.properties.id.type" = "string"
"definitions.PatientPlanSummaryResource.properties.relationships.properties.actions.items.properties.data.properties.type.type" = "string"
"definitions.PatientPlanSummaryResource.properties.relationships.properties.actions.items.properties.data.required.length" = 2
"definitions.PatientPlanSummaryResource.properties.relationships.properties.actions.items.properties.data.required[0]" = "type"
"definitions.PatientPlanSummaryResource.properties.relationships.properties.actions.items.properties.data.required[1]" = "id"
"definitions.PatientPlanSummaryResource.properties.relationships.properties.actions.items.properties.data.type" = "object"
"definitions.PatientPlanSummaryResource.properties.relationships.properties.actions.items.properties.links.properties.related.type" = "string"
"definitions.PatientPlanSummaryResource.properties.relationships.properties.actions.items.properties.links.type" = "object"
"definitions.PatientPlanSummaryResource.properties.relationships.properties.actions.items.type" = "object"
"definitions.PatientPlanSummaryResource.properties.relationships.properties.actions.type" = "array"
"definitions.PatientPlanSummaryResource.properties.relationships.properties.bundles.items.properties.data.properties.id.type" = "string"
"definitions.PatientPlanSummaryResource.properties.relationships.properties.bundles.items.properties.data.properties.type.type" = "string"
"definitions.PatientPlanSummaryResource.properties.relationships.properties.bundles.items.properties.data.required.length" = 2
"definitions.PatientPlanSummaryResource.properties.relationships.properties.bundles.items.properties.data.required[0]" = "type"
"definitions.PatientPlanSummaryResource.properties.relationships.properties.bundles.items.properties.data.required[1]" = "id"
"definitions.PatientPlanSummaryResource.properties.relationships.properties.bundles.items.properties.data.type" = "object"
"definitions.PatientPlanSummaryResource.properties.relationships.properties.bundles.items.properties.links.properties.related.type" = "string"
"definitions.PatientPlanSummaryResource.properties.relationships.properties.bundles.items.properties.links.type" = "object"
"definitions.PatientPlanSummaryResource.properties.relationships.properties.bundles.items.type" = "object"
"definitions.PatientPlanSummaryResource.properties.relationships.properties.bundles.type" = "array"
"definitions.PatientPlanSummaryResource.properties.relationships.properties.current_results.items.properties.data.properties.id.type" = "string"
"definitions.PatientPlanSummaryResource.properties.relationships.properties.current_results.items.properties.data.properties.type.type" = "string"
"definitions.PatientPlanSummaryResource.properties.relationships.properties.current_results.items.properties.data.required.length" = 2
"definitions.PatientPlanSummaryResource.properties.relationships.properties.current_results.items.properties.data.required[0]" = "type"
"definitions.PatientPlanSummaryResource.properties.relationships.properties.current_results.items.properties.data.required[1]" = "id"
"definitions.PatientPlanSummaryResource.properties.relationships.properties.current_results.items.properties.data.type" = "object"
"definitions.PatientPlanSummaryResource.properties.relationships.properties.current_results.items.type" = "object"
"definitions.PatientPlanSummaryResource.properties.relationships.properties.current_results.type" = "array"
"definitions.PatientPlanSummaryResource.properties.relationships.properties.patient.properties.data.properties.id.type" = "string"
"definitions.PatientPlanSummaryResource.properties.relationships.properties.patient.properties.data.properties.type.type" = "string"
"definitions.PatientPlanSummaryResource.properties.relationships.properties.patient.properties.data.type" = "object"
"definitions.PatientPlanSummaryResource.properties.relationships.properties.patient.type" = "object"
"definitions.PatientPlanSummaryResource.properties.relationships.required.length" = 3
"definitions.PatientPlanSummaryResource.properties.relationships.required[0]" = "actions"
"definitions.PatientPlanSummaryResource.properties.relationships.required[1]" = "bundles"
"definitions.PatientPlanSummaryResource.properties.relationships.required[2]" = "patient"
"definitions.PatientPlanSummaryResource.properties.relationships.type" = "object"
"definitions.PatientPlanSummaryResource.properties.type.enum.length" = 1
"definitions.PatientPlanSummaryResource.properties.type.enum[0]" = "patient_plan_summary"
"definitions.PatientPlanSummaryResource.properties.type.example" = "patient_plan_summary"
"definitions.PatientPlanSummaryResource.properties.type.type" = "string"
"definitions.PatientPlanSummaryResource.required.length" = 2
"definitions.PatientPlanSummaryResource.required[0]" = "id"
"definitions.PatientPlanSummaryResource.required[1]" = "type"
"definitions.PatientPlanSummaryResource.type" = "object"
"definitions.PatientResource.properties.attributes.properties.addresses.items.$ref" = "#/definitions/Address"
"definitions.PatientResource.properties.attributes.properties.addresses.type" = "array"
"definitions.PatientResource.properties.attributes.properties.archive_history.items.$ref" = "#/definitions/ArchiveHistory"
"definitions.PatientResource.properties.attributes.properties.archive_history.type" = "array"
"definitions.PatientResource.properties.attributes.properties.archived.example" = true
"definitions.PatientResource.properties.attributes.properties.archived.readOnly" = true
"definitions.PatientResource.properties.attributes.properties.archived.type" = "boolean"
"definitions.PatientResource.properties.attributes.properties.birth_date.example" = "1944-03-06"
"definitions.PatientResource.properties.attributes.properties.birth_date.format" = "date"
"definitions.PatientResource.properties.attributes.properties.birth_date.type" = "string"
"definitions.PatientResource.properties.attributes.properties.email_address.example" = "fiona@example.com"
"definitions.PatientResource.properties.attributes.properties.email_address.type" = "string"
"definitions.PatientResource.properties.attributes.properties.enrolled_at.example" = "2016-05-26T15:25:54.000Z"
"definitions.PatientResource.properties.attributes.properties.enrolled_at.format" = "dateTime"
"definitions.PatientResource.properties.attributes.properties.enrolled_at.readOnly" = true
"definitions.PatientResource.properties.attributes.properties.enrolled_at.type" = "string"
"definitions.PatientResource.properties.attributes.properties.first_access_at.example" = "2016-06-03T13:15:22.000Z"
"definitions.PatientResource.properties.attributes.properties.first_access_at.format" = "dateTime"
"definitions.PatientResource.properties.attributes.properties.first_access_at.readOnly" = true
"definitions.PatientResource.properties.attributes.properties.first_access_at.type" = "string"
"definitions.PatientResource.properties.attributes.properties.first_name.example" = "Fiona"
"definitions.PatientResource.properties.attributes.properties.first_name.type" = "string"
"definitions.PatientResource.properties.attributes.properties.gender.enum.length" = 3
"definitions.PatientResource.properties.attributes.properties.gender.enum[0]" = "male"
"definitions.PatientResource.properties.attributes.properties.gender.enum[1]" = "female"
"definitions.PatientResource.properties.attributes.properties.gender.enum[2]" = "other"
"definitions.PatientResource.properties.attributes.properties.gender.example" = "female"
"definitions.PatientResource.properties.attributes.properties.gender.type" = "string"
"definitions.PatientResource.properties.attributes.properties.identifiers.items.$ref" = "#/definitions/PatientIdentifier"
"definitions.PatientResource.properties.attributes.properties.identifiers.type" = "array"
"definitions.PatientResource.properties.attributes.properties.invited_at.example" = "2016-06-01T16:20:16.000Z"
"definitions.PatientResource.properties.attributes.properties.invited_at.format" = "dateTime"
"definitions.PatientResource.properties.attributes.properties.invited_at.readOnly" = true
"definitions.PatientResource.properties.attributes.properties.invited_at.type" = "string"
"definitions.PatientResource.properties.attributes.properties.last_access_at.example" = "2016-07-11T17:50:49.400Z"
"definitions.PatientResource.properties.attributes.properties.last_access_at.format" = "dateTime"
"definitions.PatientResource.properties.attributes.properties.last_access_at.readOnly" = true
"definitions.PatientResource.properties.attributes.properties.last_access_at.type" = "string"
"definitions.PatientResource.properties.attributes.properties.last_name.example" = "Reeves"
"definitions.PatientResource.properties.attributes.properties.last_name.type" = "string"
"definitions.PatientResource.properties.attributes.properties.phone_numbers.items.$ref" = "#/definitions/PhoneNumber"
"definitions.PatientResource.properties.attributes.properties.phone_numbers.type" = "array"
"definitions.PatientResource.properties.attributes.properties.updated_at.example" = "2016-07-11T17:13:57.027Z"
"definitions.PatientResource.properties.attributes.properties.updated_at.format" = "dateTime"
"definitions.PatientResource.properties.attributes.properties.updated_at.readOnly" = true
"definitions.PatientResource.properties.attributes.properties.updated_at.type" = "string"
"definitions.PatientResource.properties.attributes.type" = "object"
"definitions.PatientResource.properties.id.example" = "57b36ef304ad8c2224f2af3a"
"definitions.PatientResource.properties.id.type" = "string"
"definitions.PatientResource.properties.links.properties.self.example" = "/patient/57b36ef304ad8c2224f2af3a"
"definitions.PatientResource.properties.links.properties.self.pattern" = "/patient/[0-9a-z]+"
"definitions.PatientResource.properties.links.properties.self.type" = "string"
"definitions.PatientResource.properties.links.properties.twine_web_app.description" = "A link to the patient record in the Twine web application."
"definitions.PatientResource.properties.links.properties.twine_web_app.example" = "https://app.twinehealth.com/#/coach/patient/5367c6300b7bb6e94188c02c/overview"
"definitions.PatientResource.properties.links.properties.twine_web_app.type" = "string"
"definitions.PatientResource.properties.links.readOnly" = true
"definitions.PatientResource.properties.links.type" = "object"
"definitions.PatientResource.properties.relationships.properties.coaches.properties.data.items.properties.id.example" = "57fee2a66b49113551658505"
"definitions.PatientResource.properties.relationships.properties.coaches.properties.data.items.properties.id.type" = "string"
"definitions.PatientResource.properties.relationships.properties.coaches.properties.data.items.properties.meta.properties.primary.type" = "boolean"
"definitions.PatientResource.properties.relationships.properties.coaches.properties.data.items.properties.meta.type" = "object"
"definitions.PatientResource.properties.relationships.properties.coaches.properties.data.items.properties.type.enum.length" = 1
"definitions.PatientResource.properties.relationships.properties.coaches.properties.data.items.properties.type.enum[0]" = "coach"
"definitions.PatientResource.properties.relationships.properties.coaches.properties.data.items.properties.type.example" = "coach"
"definitions.PatientResource.properties.relationships.properties.coaches.properties.data.items.properties.type.type" = "string"
"definitions.PatientResource.properties.relationships.properties.coaches.properties.data.items.required.length" = 2
"definitions.PatientResource.properties.relationships.properties.coaches.properties.data.items.required[0]" = "type"
"definitions.PatientResource.properties.relationships.properties.coaches.properties.data.items.required[1]" = "id"
"definitions.PatientResource.properties.relationships.properties.coaches.properties.data.items.type" = "object"
"definitions.PatientResource.properties.relationships.properties.coaches.properties.data.type" = "array"
"definitions.PatientResource.properties.relationships.properties.coaches.properties.links.properties.related.example" = "/patient/57b36ef304ad8c2224f2af3a/groups"
"definitions.PatientResource.properties.relationships.properties.coaches.properties.links.properties.related.pattern" = "/patient/[0-9a-z]+/groups"
"definitions.PatientResource.properties.relationships.properties.coaches.properties.links.properties.related.type" = "string"
"definitions.PatientResource.properties.relationships.properties.coaches.properties.links.readOnly" = true
"definitions.PatientResource.properties.relationships.properties.coaches.required.length" = 1
"definitions.PatientResource.properties.relationships.properties.coaches.required[0]" = "data"
"definitions.PatientResource.properties.relationships.properties.groups.properties.data.items.properties.id.example" = "57b3708b04ad8c2224f2af3b"
"definitions.PatientResource.properties.relationships.properties.groups.properties.data.items.properties.id.type" = "string"
"definitions.PatientResource.properties.relationships.properties.groups.properties.data.items.properties.type.enum.length" = 1
"definitions.PatientResource.properties.relationships.properties.groups.properties.data.items.properties.type.enum[0]" = "group"
"definitions.PatientResource.properties.relationships.properties.groups.properties.data.items.properties.type.example" = "group"
"definitions.PatientResource.properties.relationships.properties.groups.properties.data.items.properties.type.type" = "string"
"definitions.PatientResource.properties.relationships.properties.groups.properties.data.items.required.length" = 1
"definitions.PatientResource.properties.relationships.properties.groups.properties.data.items.required[0]" = "type"
"definitions.PatientResource.properties.relationships.properties.groups.properties.data.items.type" = "object"
"definitions.PatientResource.properties.relationships.properties.groups.properties.data.type" = "array"
"definitions.PatientResource.properties.relationships.properties.groups.required.length" = 1
"definitions.PatientResource.properties.relationships.properties.groups.required[0]" = "data"
"definitions.PatientResource.properties.relationships.required.length" = 1
"definitions.PatientResource.properties.relationships.required[0]" = "groups"
"definitions.PatientResource.properties.relationships.type" = "object"
"definitions.PatientResource.properties.type.enum.length" = 1
"definitions.PatientResource.properties.type.enum[0]" = "patient"
"definitions.PatientResource.properties.type.example" = "patient"
"definitions.PatientResource.properties.type.type" = "string"
"definitions.PatientResource.required.length" = 2
"definitions.PatientResource.required[0]" = "type"
"definitions.PatientResource.required[1]" = "attributes"
"definitions.PatientResource.type" = "object"
"definitions.PhoneNumber.properties.primary.example" = true
"definitions.PhoneNumber.properties.primary.type" = "boolean"
"definitions.PhoneNumber.properties.type.enum.length" = 6
"definitions.PhoneNumber.properties.type.enum[0]" = "home"
"definitions.PhoneNumber.properties.type.enum[1]" = "work"
"definitions.PhoneNumber.properties.type.enum[2]" = "mobile"
"definitions.PhoneNumber.properties.type.enum[3]" = "home-fax"
"definitions.PhoneNumber.properties.type.enum[4]" = "work-fax"
"definitions.PhoneNumber.properties.type.enum[5]" = "other"
"definitions.PhoneNumber.properties.type.example" = "mobile"
"definitions.PhoneNumber.properties.type.type" = "string"
"definitions.PhoneNumber.properties.value.example" = "555-555-1234"
"definitions.PhoneNumber.properties.value.type" = "string"
"definitions.PhoneNumber.required.length" = 3
"definitions.PhoneNumber.required[0]" = "type"
"definitions.PhoneNumber.required[1]" = "value"
"definitions.PhoneNumber.required[2]" = "primary"
"definitions.PhoneNumber.type" = "object"
"definitions.Resource.properties.attributes.type" = "object"
"definitions.Resource.properties.id.type" = "string"
"definitions.Resource.properties.type.type" = "string"
"definitions.Resource.required.length" = 2
"definitions.Resource.required[0]" = "type"
"definitions.Resource.required[1]" = "id"
"definitions.Resource.type" = "object"
"definitions.RewardEarningFulfillmentResource.properties.attributes.properties.fulfilled_at.description" = "Date at which the reward earning was fulfilled. (Must be at the same time or after the reward was earned)"
"definitions.RewardEarningFulfillmentResource.properties.attributes.properties.fulfilled_at.format" = "dateTime"
"definitions.RewardEarningFulfillmentResource.properties.attributes.properties.fulfilled_at.type" = "string"
"definitions.RewardEarningFulfillmentResource.properties.attributes.properties.fulfilled_unit.description" = "Unit of the earned reward that has been fulfilled. (Read-only property)"
"definitions.RewardEarningFulfillmentResource.properties.attributes.properties.fulfilled_unit.readOnly" = true
"definitions.RewardEarningFulfillmentResource.properties.attributes.properties.fulfilled_unit.type" = "string"
"definitions.RewardEarningFulfillmentResource.properties.attributes.properties.fulfilled_value.description" = "Value of the earned reward that has been fulfilled. (Must be greater than or equal to 0)"
"definitions.RewardEarningFulfillmentResource.properties.attributes.properties.fulfilled_value.type" = "number"
"definitions.RewardEarningFulfillmentResource.properties.attributes.required.length" = 2
"definitions.RewardEarningFulfillmentResource.properties.attributes.required[0]" = "fulfilled_value"
"definitions.RewardEarningFulfillmentResource.properties.attributes.required[1]" = "fulfilled_at"
"definitions.RewardEarningFulfillmentResource.properties.attributes.type" = "object"
"definitions.RewardEarningFulfillmentResource.properties.id.type" = "string"
"definitions.RewardEarningFulfillmentResource.properties.relationships.properties.patient.properties.data.properties.id.type" = "string"
"definitions.RewardEarningFulfillmentResource.properties.relationships.properties.patient.properties.data.properties.type.type" = "string"
"definitions.RewardEarningFulfillmentResource.properties.relationships.properties.patient.properties.data.type" = "object"
"definitions.RewardEarningFulfillmentResource.properties.relationships.properties.patient.readOnly" = true
"definitions.RewardEarningFulfillmentResource.properties.relationships.properties.patient.type" = "object"
"definitions.RewardEarningFulfillmentResource.properties.relationships.properties.reward_earning.properties.data.properties.id.type" = "string"
"definitions.RewardEarningFulfillmentResource.properties.relationships.properties.reward_earning.properties.data.properties.type.type" = "string"
"definitions.RewardEarningFulfillmentResource.properties.relationships.properties.reward_earning.properties.data.type" = "object"
"definitions.RewardEarningFulfillmentResource.properties.relationships.properties.reward_earning.type" = "object"
"definitions.RewardEarningFulfillmentResource.properties.relationships.required.length" = 1
"definitions.RewardEarningFulfillmentResource.properties.relationships.required[0]" = "reward_earning"
"definitions.RewardEarningFulfillmentResource.properties.relationships.type" = "object"
"definitions.RewardEarningFulfillmentResource.properties.type.type" = "string"
"definitions.RewardEarningFulfillmentResource.required.length" = 1
"definitions.RewardEarningFulfillmentResource.required[0]" = "type"
"definitions.RewardEarningFulfillmentResource.type" = "object"
"definitions.RewardEarningResource.properties.attributes.properties.earned_at.description" = "Date at which the reward was earned. (Must be after the reward was allocated and before the reward program activation was deactivated or expired)"
"definitions.RewardEarningResource.properties.attributes.properties.earned_at.format" = "dateTime"
"definitions.RewardEarningResource.properties.attributes.properties.earned_at.type" = "string"
"definitions.RewardEarningResource.properties.attributes.properties.earned_unit.description" = "Unit of the reward that has been earned. (Read-only property)"
"definitions.RewardEarningResource.properties.attributes.properties.earned_unit.readOnly" = true
"definitions.RewardEarningResource.properties.attributes.properties.earned_unit.type" = "string"
"definitions.RewardEarningResource.properties.attributes.properties.earned_value.description" = "Value of the reward that has been earned. (Must not exceed the allocated value for the reward)"
"definitions.RewardEarningResource.properties.attributes.properties.earned_value.type" = "number"
"definitions.RewardEarningResource.properties.attributes.properties.fulfilled_at.description" = "Date at which the reward earning was fulfilled. (Read-only property)"
"definitions.RewardEarningResource.properties.attributes.properties.fulfilled_at.format" = "dateTime"
"definitions.RewardEarningResource.properties.attributes.properties.fulfilled_at.readOnly" = true
"definitions.RewardEarningResource.properties.attributes.properties.fulfilled_at.type" = "string"
"definitions.RewardEarningResource.properties.attributes.properties.fulfilled_value.description" = "Value of the earned reward that has been fulfilled. (Read-only property)"
"definitions.RewardEarningResource.properties.attributes.properties.fulfilled_value.readOnly" = true
"definitions.RewardEarningResource.properties.attributes.properties.fulfilled_value.type" = "number"
"definitions.RewardEarningResource.properties.attributes.properties.ready_for_fulfillment.description" = "If true, the reward earning is ready to be fulfilled, either because the reward program activation was fulfill_as_earned or because the reward program activation has been deactivated. (Read-only property)"
"definitions.RewardEarningResource.properties.attributes.properties.ready_for_fulfillment.readOnly" = true
"definitions.RewardEarningResource.properties.attributes.properties.ready_for_fulfillment.type" = "boolean"
"definitions.RewardEarningResource.properties.attributes.required.length" = 2
"definitions.RewardEarningResource.properties.attributes.required[0]" = "earned_value"
"definitions.RewardEarningResource.properties.attributes.required[1]" = "earned_at"
"definitions.RewardEarningResource.properties.attributes.type" = "object"
"definitions.RewardEarningResource.properties.id.type" = "string"
"definitions.RewardEarningResource.properties.relationships.properties.group.properties.data.properties.id.type" = "string"
"definitions.RewardEarningResource.properties.relationships.properties.group.properties.data.properties.type.type" = "string"
"definitions.RewardEarningResource.properties.relationships.properties.group.properties.data.type" = "object"
"definitions.RewardEarningResource.properties.relationships.properties.group.readOnly" = true
"definitions.RewardEarningResource.properties.relationships.properties.group.type" = "object"
"definitions.RewardEarningResource.properties.relationships.properties.patient.properties.data.properties.id.type" = "string"
"definitions.RewardEarningResource.properties.relationships.properties.patient.properties.data.properties.type.type" = "string"
"definitions.RewardEarningResource.properties.relationships.properties.patient.properties.data.type" = "object"
"definitions.RewardEarningResource.properties.relationships.properties.patient.readOnly" = true
"definitions.RewardEarningResource.properties.relationships.properties.patient.type" = "object"
"definitions.RewardEarningResource.properties.relationships.properties.reward.properties.data.properties.id.type" = "string"
"definitions.RewardEarningResource.properties.relationships.properties.reward.properties.data.properties.type.type" = "string"
"definitions.RewardEarningResource.properties.relationships.properties.reward.properties.data.type" = "object"
"definitions.RewardEarningResource.properties.relationships.properties.reward.type" = "object"
"definitions.RewardEarningResource.properties.relationships.properties.reward_program_activation.properties.data.properties.id.type" = "string"
"definitions.RewardEarningResource.properties.relationships.properties.reward_program_activation.properties.data.properties.type.type" = "string"
"definitions.RewardEarningResource.properties.relationships.properties.reward_program_activation.properties.data.type" = "object"
"definitions.RewardEarningResource.properties.relationships.properties.reward_program_activation.readOnly" = true
"definitions.RewardEarningResource.properties.relationships.properties.reward_program_activation.type" = "object"
"definitions.RewardEarningResource.properties.relationships.required.length" = 1
"definitions.RewardEarningResource.properties.relationships.required[0]" = "reward"
"definitions.RewardEarningResource.properties.relationships.type" = "object"
"definitions.RewardEarningResource.properties.type.type" = "string"
"definitions.RewardEarningResource.required.length" = 1
"definitions.RewardEarningResource.required[0]" = "type"
"definitions.RewardEarningResource.type" = "object"
"definitions.RewardProgramActivationResource.properties.attributes.properties.activated_at.description" = "Date at which the reward program was activated for the patient. (Must be between the start_at and end_at dates for the reward program)"
"definitions.RewardProgramActivationResource.properties.attributes.properties.activated_at.format" = "dateTime"
"definitions.RewardProgramActivationResource.properties.attributes.properties.activated_at.type" = "string"
"definitions.RewardProgramActivationResource.properties.attributes.properties.active.default" = true
"definitions.RewardProgramActivationResource.properties.attributes.properties.active.description" = "If true, the reward program is currently active."
"definitions.RewardProgramActivationResource.properties.attributes.properties.active.type" = "boolean"
"definitions.RewardProgramActivationResource.properties.attributes.properties.allocated_count.description" = "Number of rewards allocated. (Read-only property)"
"definitions.RewardProgramActivationResource.properties.attributes.properties.allocated_count.readOnly" = true
"definitions.RewardProgramActivationResource.properties.attributes.properties.allocated_count.type" = "number"
"definitions.RewardProgramActivationResource.properties.attributes.properties.budget_unit.description" = "Unit of the reward program budget. (Read-only property)"
"definitions.RewardProgramActivationResource.properties.attributes.properties.budget_unit.readOnly" = true
"definitions.RewardProgramActivationResource.properties.attributes.properties.budget_unit.type" = "string"
"definitions.RewardProgramActivationResource.properties.attributes.properties.deactivated_at.description" = "Date at which the reward program was deactivated. (Must be after the activated_at date)"
"definitions.RewardProgramActivationResource.properties.attributes.properties.deactivated_at.format" = "dateTime"
"definitions.RewardProgramActivationResource.properties.attributes.properties.deactivated_at.type" = "string"
"definitions.RewardProgramActivationResource.properties.attributes.properties.earned_count.description" = "Number of reward earnings. (Read-only property)"
"definitions.RewardProgramActivationResource.properties.attributes.properties.earned_count.readOnly" = true
"definitions.RewardProgramActivationResource.properties.attributes.properties.earned_count.type" = "number"
"definitions.RewardProgramActivationResource.properties.attributes.properties.expires_at.description" = "Date at which the reward program activation expires. (Read-only property set by adding the days_active from the reward program to the activated_at date)"
"definitions.RewardProgramActivationResource.properties.attributes.properties.expires_at.format" = "dateTime"
"definitions.RewardProgramActivationResource.properties.attributes.properties.expires_at.readOnly" = true
"definitions.RewardProgramActivationResource.properties.attributes.properties.expires_at.type" = "string"
"definitions.RewardProgramActivationResource.properties.attributes.properties.fulfill_as_earned.description" = "If true, the rewards created for a patient for the program can be fulfulled as they are earned. If false, the rewards should only be fulfilled when the program is deactivated. (Read-only property denormalized from the reward program)"
"definitions.RewardProgramActivationResource.properties.attributes.properties.fulfill_as_earned.readOnly" = true
"definitions.RewardProgramActivationResource.properties.attributes.properties.fulfill_as_earned.type" = "boolean"
"definitions.RewardProgramActivationResource.properties.attributes.properties.total_allocated_value.description" = "Total value of reward allocated. (Read-only property)"
"definitions.RewardProgramActivationResource.properties.attributes.properties.total_allocated_value.readOnly" = true
"definitions.RewardProgramActivationResource.properties.attributes.properties.total_allocated_value.type" = "number"
"definitions.RewardProgramActivationResource.properties.attributes.properties.total_earned_value.description" = "Total value of reward earnings. (Read-only property)"
"definitions.RewardProgramActivationResource.properties.attributes.properties.total_earned_value.readOnly" = true
"definitions.RewardProgramActivationResource.properties.attributes.properties.total_earned_value.type" = "number"
"definitions.RewardProgramActivationResource.properties.attributes.required.length" = 1
"definitions.RewardProgramActivationResource.properties.attributes.required[0]" = "activated_at"
"definitions.RewardProgramActivationResource.properties.attributes.type" = "object"
"definitions.RewardProgramActivationResource.properties.id.type" = "string"
"definitions.RewardProgramActivationResource.properties.relationships.properties.patient.properties.data.properties.id.type" = "string"
"definitions.RewardProgramActivationResource.properties.relationships.properties.patient.properties.data.properties.type.type" = "string"
"definitions.RewardProgramActivationResource.properties.relationships.properties.patient.properties.data.type" = "object"
"definitions.RewardProgramActivationResource.properties.relationships.properties.patient.type" = "object"
"definitions.RewardProgramActivationResource.properties.relationships.properties.reward_program.properties.data.properties.id.type" = "string"
"definitions.RewardProgramActivationResource.properties.relationships.properties.reward_program.properties.data.properties.type.type" = "string"
"definitions.RewardProgramActivationResource.properties.relationships.properties.reward_program.properties.data.type" = "object"
"definitions.RewardProgramActivationResource.properties.relationships.properties.reward_program.type" = "object"
"definitions.RewardProgramActivationResource.properties.relationships.required.length" = 2
"definitions.RewardProgramActivationResource.properties.relationships.required[0]" = "patient"
"definitions.RewardProgramActivationResource.properties.relationships.required[1]" = "reward_program"
"definitions.RewardProgramActivationResource.properties.relationships.type" = "object"
"definitions.RewardProgramActivationResource.properties.type.type" = "string"
"definitions.RewardProgramActivationResource.required.length" = 1
"definitions.RewardProgramActivationResource.required[0]" = "type"
"definitions.RewardProgramActivationResource.type" = "object"
"definitions.RewardProgramResource.properties.attributes.properties.budget_unit.default" = "dollar"
"definitions.RewardProgramResource.properties.attributes.properties.budget_unit.description" = "Unit of the budget for the reard program."
"definitions.RewardProgramResource.properties.attributes.properties.budget_unit.enum.length" = 3
"definitions.RewardProgramResource.properties.attributes.properties.budget_unit.enum[0]" = "dollar"
"definitions.RewardProgramResource.properties.attributes.properties.budget_unit.enum[1]" = "point"
"definitions.RewardProgramResource.properties.attributes.properties.budget_unit.enum[2]" = "credit"
"definitions.RewardProgramResource.properties.attributes.properties.budget_unit.type" = "string"
"definitions.RewardProgramResource.properties.attributes.properties.budget_value.description" = "Value of the budget for the reward program. (Must be greater than 0)"
"definitions.RewardProgramResource.properties.attributes.properties.budget_value.type" = "number"
"definitions.RewardProgramResource.properties.attributes.properties.description.description" = "Description of the reward program - designed to be a comprehensive text description"
"definitions.RewardProgramResource.properties.attributes.properties.description.type" = "string"
"definitions.RewardProgramResource.properties.attributes.properties.duration_active.default" = 540.0
"definitions.RewardProgramResource.properties.attributes.properties.duration_active.description" = "Number of days that a program can be active after it has been activated for a patient. (Must be greater than 0)"
"definitions.RewardProgramResource.properties.attributes.properties.duration_active.type" = "number"
"definitions.RewardProgramResource.properties.attributes.properties.end_at.description" = "Date at which the reward program ends. (Must be after the start_at)"
"definitions.RewardProgramResource.properties.attributes.properties.end_at.format" = "dateTime"
"definitions.RewardProgramResource.properties.attributes.properties.end_at.type" = "string"
"definitions.RewardProgramResource.properties.attributes.properties.frozen.default" = false
"definitions.RewardProgramResource.properties.attributes.properties.frozen.description" = "If true, the reward program cannot be activated for a patient and new rewards cannot be created for the program."
"definitions.RewardProgramResource.properties.attributes.properties.frozen.type" = "boolean"
"definitions.RewardProgramResource.properties.attributes.properties.fulfill_as_earned.default" = false
"definitions.RewardProgramResource.properties.attributes.properties.fulfill_as_earned.description" = "If true, the rewards created for a patient for the program can be fulfulled as they are earned. If false, the rewards should only be fulfilled when the program is deactivated."
"definitions.RewardProgramResource.properties.attributes.properties.fulfill_as_earned.type" = "boolean"
"definitions.RewardProgramResource.properties.attributes.properties.name.description" = "Name of the reward program"
"definitions.RewardProgramResource.properties.attributes.properties.name.type" = "string"
"definitions.RewardProgramResource.properties.attributes.properties.start_at.description" = "Date at which the reward program starts."
"definitions.RewardProgramResource.properties.attributes.properties.start_at.format" = "dateTime"
"definitions.RewardProgramResource.properties.attributes.properties.start_at.type" = "string"
"definitions.RewardProgramResource.properties.attributes.properties.tagline.description" = "Tagline of the reward program - designed to be one line"
"definitions.RewardProgramResource.properties.attributes.properties.tagline.type" = "string"
"definitions.RewardProgramResource.properties.attributes.required.length" = 4
"definitions.RewardProgramResource.properties.attributes.required[0]" = "name"
"definitions.RewardProgramResource.properties.attributes.required[1]" = "start_at"
"definitions.RewardProgramResource.properties.attributes.required[2]" = "end_at"
"definitions.RewardProgramResource.properties.attributes.required[3]" = "budget_value"
"definitions.RewardProgramResource.properties.attributes.type" = "object"
"definitions.RewardProgramResource.properties.id.type" = "string"
"definitions.RewardProgramResource.properties.relationships.properties.group.properties.data.properties.id.type" = "string"
"definitions.RewardProgramResource.properties.relationships.properties.group.properties.data.properties.type.type" = "string"
"definitions.RewardProgramResource.properties.relationships.properties.group.properties.data.required.length" = 2
"definitions.RewardProgramResource.properties.relationships.properties.group.properties.data.required[0]" = "type"
"definitions.RewardProgramResource.properties.relationships.properties.group.properties.data.required[1]" = "id"
"definitions.RewardProgramResource.properties.relationships.properties.group.properties.data.type" = "object"
"definitions.RewardProgramResource.properties.relationships.properties.group.required.length" = 1
"definitions.RewardProgramResource.properties.relationships.properties.group.required[0]" = "data"
"definitions.RewardProgramResource.properties.relationships.properties.group.type" = "object"
"definitions.RewardProgramResource.properties.relationships.required.length" = 1
"definitions.RewardProgramResource.properties.relationships.required[0]" = "group"
"definitions.RewardProgramResource.properties.relationships.type" = "object"
"definitions.RewardProgramResource.properties.type.type" = "string"
"definitions.RewardProgramResource.required.length" = 1
"definitions.RewardProgramResource.required[0]" = "type"
"definitions.RewardProgramResource.type" = "object"
"definitions.RewardResource.properties.attributes.properties._thread.description" = "Unique string identifying the health action with which the reward is associated."
"definitions.RewardResource.properties.attributes.properties._thread.type" = "string"
"definitions.RewardResource.properties.attributes.properties.allocated_at.description" = "Date at which the reward was allocated. (Must be after the reward program is activated and before it is deactivated or expires)"
"definitions.RewardResource.properties.attributes.properties.allocated_at.format" = "dateTime"
"definitions.RewardResource.properties.attributes.properties.allocated_at.type" = "string"
"definitions.RewardResource.properties.attributes.properties.allocated_unit.description" = "Unit of the reward program. (Read-only property)"
"definitions.RewardResource.properties.attributes.properties.allocated_unit.readOnly" = true
"definitions.RewardResource.properties.attributes.properties.allocated_unit.type" = "string"
"definitions.RewardResource.properties.attributes.properties.allocated_value.description" = "Value of the reward program budget allocated for the reward. (Must not exceed the remaining budget for the reward program activation)"
"definitions.RewardResource.properties.attributes.properties.allocated_value.type" = "number"
"definitions.RewardResource.properties.attributes.properties.description.description" = "Description of the reward."
"definitions.RewardResource.properties.attributes.properties.description.type" = "string"
"definitions.RewardResource.properties.attributes.properties.earned_at.description" = "Date at which the reward was earned. (Read-only property)"
"definitions.RewardResource.properties.attributes.properties.earned_at.format" = "dateTime"
"definitions.RewardResource.properties.attributes.properties.earned_at.readOnly" = true
"definitions.RewardResource.properties.attributes.properties.earned_at.type" = "string"
"definitions.RewardResource.properties.attributes.properties.earned_value.description" = "Value of the reward that has been earned. (Read-only property)"
"definitions.RewardResource.properties.attributes.properties.earned_value.readOnly" = true
"definitions.RewardResource.properties.attributes.properties.earned_value.type" = "number"
"definitions.RewardResource.properties.attributes.properties.fulfilled_at.description" = "Date at which the reward earning was fulfilled. (Read-only property)"
"definitions.RewardResource.properties.attributes.properties.fulfilled_at.format" = "dateTime"
"definitions.RewardResource.properties.attributes.properties.fulfilled_at.readOnly" = true
"definitions.RewardResource.properties.attributes.properties.fulfilled_at.type" = "string"
"definitions.RewardResource.properties.attributes.properties.fulfilled_value.description" = "Value of the earned reward that has been fulfilled. (Read-only property)"
"definitions.RewardResource.properties.attributes.properties.fulfilled_value.readOnly" = true
"definitions.RewardResource.properties.attributes.properties.fulfilled_value.type" = "number"
"definitions.RewardResource.properties.attributes.properties.target_at.description" = "Date at which the patient aspires to achieve the reward. (Must be the same or after the allocated_at date)"
"definitions.RewardResource.properties.attributes.properties.target_at.format" = "dateTime"
"definitions.RewardResource.properties.attributes.properties.target_at.type" = "string"
"definitions.RewardResource.properties.attributes.required.length" = 3
"definitions.RewardResource.properties.attributes.required[0]" = "description"
"definitions.RewardResource.properties.attributes.required[1]" = "allocated_value"
"definitions.RewardResource.properties.attributes.required[2]" = "allocated_at"
"definitions.RewardResource.properties.attributes.type" = "object"
"definitions.RewardResource.properties.id.type" = "string"
"definitions.RewardResource.properties.relationships.properties.patient.properties.data.properties.id.type" = "string"
"definitions.RewardResource.properties.relationships.properties.patient.properties.data.properties.type.type" = "string"
"definitions.RewardResource.properties.relationships.properties.patient.properties.data.type" = "object"
"definitions.RewardResource.properties.relationships.properties.patient.readOnly" = true
"definitions.RewardResource.properties.relationships.properties.patient.type" = "object"
"definitions.RewardResource.properties.relationships.properties.reward_program_activation.properties.data.properties.id.type" = "string"
"definitions.RewardResource.properties.relationships.properties.reward_program_activation.properties.data.properties.type.type" = "string"
"definitions.RewardResource.properties.relationships.properties.reward_program_activation.properties.data.type" = "object"
"definitions.RewardResource.properties.relationships.properties.reward_program_activation.type" = "object"
"definitions.RewardResource.properties.relationships.required.length" = 1
"definitions.RewardResource.properties.relationships.required[0]" = "reward_program_activation"
"definitions.RewardResource.properties.relationships.type" = "object"
"definitions.RewardResource.properties.type.type" = "string"
"definitions.RewardResource.required.length" = 1
"definitions.RewardResource.required[0]" = "type"
"definitions.RewardResource.type" = "object"
"definitions.TokenResource.properties.attributes.properties.access_token.example" = "a01fe2bb-1977-48d9-b722-ac7f9135143f"
"definitions.TokenResource.properties.attributes.properties.access_token.type" = "string"
"definitions.TokenResource.properties.attributes.properties.expires_in.example" = 3600.0
"definitions.TokenResource.properties.attributes.properties.expires_in.type" = "integer"
"definitions.TokenResource.properties.attributes.properties.refresh_token.example" = "b452cb17-72e2-4e90-b9c6-d77a0b66cf7c"
"definitions.TokenResource.properties.attributes.properties.refresh_token.type" = "string"
"definitions.TokenResource.properties.attributes.properties.token_type.enum.length" = 1
"definitions.TokenResource.properties.attributes.properties.token_type.enum[0]" = "bearer"
"definitions.TokenResource.properties.attributes.properties.token_type.example" = "bearer"
"definitions.TokenResource.properties.attributes.properties.token_type.type" = "string"
"definitions.TokenResource.properties.attributes.required.length" = 4
"definitions.TokenResource.properties.attributes.required[0]" = "access_token"
"definitions.TokenResource.properties.attributes.required[1]" = "refresh_token"
"definitions.TokenResource.properties.attributes.required[2]" = "token_type"
"definitions.TokenResource.properties.attributes.required[3]" = "expires_in"
"definitions.TokenResource.properties.id.example" = "57b36c9a04ad8c2224f2af35"
"definitions.TokenResource.properties.id.type" = "string"
"definitions.TokenResource.properties.relationships.properties.groups.properties.data.items.properties.id.example" = "57b36d6f04ad8c2224f2af36"
"definitions.TokenResource.properties.relationships.properties.groups.properties.data.items.properties.id.type" = "string"
"definitions.TokenResource.properties.relationships.properties.groups.properties.data.items.properties.type.enum.length" = 1
"definitions.TokenResource.properties.relationships.properties.groups.properties.data.items.properties.type.enum[0]" = "group"
"definitions.TokenResource.properties.relationships.properties.groups.properties.data.items.properties.type.example" = "group"
"definitions.TokenResource.properties.relationships.properties.groups.properties.data.items.properties.type.type" = "string"
"definitions.TokenResource.properties.relationships.properties.groups.properties.data.items.required.length" = 2
"definitions.TokenResource.properties.relationships.properties.groups.properties.data.items.required[0]" = "type"
"definitions.TokenResource.properties.relationships.properties.groups.properties.data.items.required[1]" = "id"
"definitions.TokenResource.properties.relationships.properties.groups.properties.data.items.type" = "object"
"definitions.TokenResource.properties.relationships.properties.groups.properties.data.type" = "array"
"definitions.TokenResource.properties.relationships.properties.groups.properties.links.properties.related.example" = "/oauth/token/57b36d8804ad8c2224f2af37/groups"
"definitions.TokenResource.properties.relationships.properties.groups.properties.links.properties.related.pattern" = "/oauth/token/[0-9a-z]+/groups"
"definitions.TokenResource.properties.relationships.properties.groups.properties.links.properties.related.type" = "string"
"definitions.TokenResource.properties.relationships.properties.groups.properties.links.required.length" = 1
"definitions.TokenResource.properties.relationships.properties.groups.properties.links.required[0]" = "related"
"definitions.TokenResource.properties.relationships.properties.groups.required.length" = 2
"definitions.TokenResource.properties.relationships.properties.groups.required[0]" = "links"
"definitions.TokenResource.properties.relationships.properties.groups.required[1]" = "data"
"definitions.TokenResource.properties.relationships.properties.organization.properties.data.properties.id.example" = "57b36d6f04ad8c2224f2af36"
"definitions.TokenResource.properties.relationships.properties.organization.properties.data.properties.id.type" = "string"
"definitions.TokenResource.properties.relationships.properties.organization.properties.data.properties.type.enum.length" = 1
"definitions.TokenResource.properties.relationships.properties.organization.properties.data.properties.type.enum[0]" = "organization"
"definitions.TokenResource.properties.relationships.properties.organization.properties.data.properties.type.example" = "organization"
"definitions.TokenResource.properties.relationships.properties.organization.properties.data.properties.type.type" = "string"
"definitions.TokenResource.properties.relationships.properties.organization.properties.data.required.length" = 2
"definitions.TokenResource.properties.relationships.properties.organization.properties.data.required[0]" = "type"
"definitions.TokenResource.properties.relationships.properties.organization.properties.data.required[1]" = "id"
"definitions.TokenResource.properties.relationships.properties.organization.properties.links.properties.related.example" = "/oauth/token/57b36d8804ad8c2224f2af37/organization"
"definitions.TokenResource.properties.relationships.properties.organization.properties.links.properties.related.pattern" = "/oauth/token/[0-9a-z]+/organization"
"definitions.TokenResource.properties.relationships.properties.organization.properties.links.properties.related.type" = "string"
"definitions.TokenResource.properties.relationships.properties.organization.properties.links.required.length" = 1
"definitions.TokenResource.properties.relationships.properties.organization.properties.links.required[0]" = "related"
"definitions.TokenResource.properties.relationships.properties.organization.required.length" = 2
"definitions.TokenResource.properties.relationships.properties.organization.required[0]" = "links"
"definitions.TokenResource.properties.relationships.properties.organization.required[1]" = "data"
"definitions.TokenResource.properties.relationships.type" = "object"
"definitions.TokenResource.properties.type.enum.length" = 1
"definitions.TokenResource.properties.type.enum[0]" = "token"
"definitions.TokenResource.properties.type.example" = "token"
"definitions.TokenResource.properties.type.type" = "string"
"definitions.TokenResource.required.length" = 2
"definitions.TokenResource.required[0]" = "type"
"definitions.TokenResource.required[1]" = "id"
"definitions.TokenResource.type" = "object"
"definitions.UpdateActionRequest.properties.data.$ref" = "#/definitions/ActionResource"
"definitions.UpdateActionRequest.required.length" = 1
"definitions.UpdateActionRequest.required[0]" = "data"
"definitions.UpdateActionRequest.type" = "object"
"definitions.UpdateActionResponse.properties.data.$ref" = "#/definitions/ActionResource"
"definitions.UpdateActionResponse.properties.meta.$ref" = "#/definitions/CreateOrUpdateMetaResponse"
"definitions.UpdateActionResponse.required.length" = 1
"definitions.UpdateActionResponse.required[0]" = "data"
"definitions.UpdateActionResponse.type" = "object"
"definitions.UpdateBundleRequest.properties.data.$ref" = "#/definitions/BundleResource"
"definitions.UpdateBundleRequest.required.length" = 1
"definitions.UpdateBundleRequest.required[0]" = "data"
"definitions.UpdateBundleRequest.type" = "object"
"definitions.UpdateBundleResponse.properties.data.$ref" = "#/definitions/BundleResource"
"definitions.UpdateBundleResponse.properties.meta.$ref" = "#/definitions/CreateOrUpdateMetaResponse"
"definitions.UpdateBundleResponse.required.length" = 1
"definitions.UpdateBundleResponse.required[0]" = "data"
"definitions.UpdateBundleResponse.type" = "object"
"definitions.UpdatePatientPlanSummaryRequest.properties.data.$ref" = "#/definitions/PatientPlanSummaryResource"
"definitions.UpdatePatientPlanSummaryRequest.required.length" = 1
"definitions.UpdatePatientPlanSummaryRequest.required[0]" = "data"
"definitions.UpdatePatientPlanSummaryRequest.type" = "object"
"definitions.UpdatePatientPlanSummaryResponse.properties.data.$ref" = "#/definitions/PatientPlanSummaryResource"
"definitions.UpdatePatientPlanSummaryResponse.properties.meta.$ref" = "#/definitions/CreateOrUpdateMetaResponse"
"definitions.UpdatePatientPlanSummaryResponse.required.length" = 1
"definitions.UpdatePatientPlanSummaryResponse.required[0]" = "data"
"definitions.UpdatePatientPlanSummaryResponse.type" = "object"
"definitions.UpdatePatientRequest.example.data.attributes.first_name" = "Jonathon"
"definitions.UpdatePatientRequest.example.data.id" = "5817ead56f5316c0d05ba8bf"
"definitions.UpdatePatientRequest.example.data.type" = "patient"
"definitions.UpdatePatientRequest.properties.data.$ref" = "#/definitions/PatientResource"
"definitions.UpdatePatientRequest.required.length" = 1
"definitions.UpdatePatientRequest.required[0]" = "data"
"definitions.UpdatePatientRequest.type" = "object"
"definitions.UpdatePatientResponse.example.data.attributes.addresses.length" = 0
"definitions.UpdatePatientResponse.example.data.attributes.archive_history.length" = 0
"definitions.UpdatePatientResponse.example.data.attributes.archived" = false
"definitions.UpdatePatientResponse.example.data.attributes.first_name" = "Jack"
"definitions.UpdatePatientResponse.example.data.attributes.identifiers.length" = 0
"definitions.UpdatePatientResponse.example.data.attributes.last_name" = "Frost"
"definitions.UpdatePatientResponse.example.data.attributes.phone_numbers.length" = 0
"definitions.UpdatePatientResponse.example.data.attributes.updated_at" = "2016-11-01T01:07:33.121Z"
"definitions.UpdatePatientResponse.example.data.id" = "5817ead56f5316c0d05ba8bf"
"definitions.UpdatePatientResponse.example.data.links.self" = "/pub/patient/5817ead56f5316c0d05ba8bf"
"definitions.UpdatePatientResponse.example.data.links.twine_web_app" = "http://10.0.1.55:9000/#/coach/patient/5817ead56f5316c0d05ba8bf"
"definitions.UpdatePatientResponse.example.data.relationships.coaches.data.length" = 0
"definitions.UpdatePatientResponse.example.data.relationships.coaches.links.related" = "/pub/patient/5817ead56f5316c0d05ba8bf/coaches"
"definitions.UpdatePatientResponse.example.data.relationships.groups.data.length" = 1
"definitions.UpdatePatientResponse.example.data.relationships.groups.data[0].id" = "5755db2a3db4179179999acf"
"definitions.UpdatePatientResponse.example.data.relationships.groups.data[0].type" = "group"
"definitions.UpdatePatientResponse.example.data.relationships.groups.links.related" = "/pub/patient/5817ead56f5316c0d05ba8bf/groups"
"definitions.UpdatePatientResponse.example.data.type" = "patient"
"definitions.UpdatePatientResponse.example.included.length" = 0
"definitions.UpdatePatientResponse.example.meta.req_id" = "5b813ad3-cabc-418f-add4-1e53bc69f7cb"
"definitions.UpdatePatientResponse.properties.data.$ref" = "#/definitions/PatientResource"
"definitions.UpdatePatientResponse.properties.meta.$ref" = "#/definitions/CreateOrUpdateMetaResponse"
"definitions.UpdatePatientResponse.required.length" = 1
"definitions.UpdatePatientResponse.required[0]" = "data"
"definitions.UpdatePatientResponse.type" = "object"
host = "api.twinehealth.com"
"info.contact.email" = "apiteam@twinehealth.com"
"info.description" = "# Overview\nThe Twine Health API is RESTful API. The requests and responses are formated according to the [JSON API](http://jsonapi.org/format/1.0/) specification.\n\nIn addition to this documentation, we also provide an [OpenAPI](https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md) \"yaml\" file describing the API: [Twine API Specification](swagger.yaml).\n\n# Authentication\nAuthentication for the Twine API is based on the [OAuth 2.0 Authorization Framework](https://tools.ietf.org/html/rfc6749). Twine currently supports grant types of **client_credentials** and **refresh_token**.\n\nSee [POST /oauth/token](#operation/createToken) for details on the request and response formats.\n<!-- ReDoc-Inject: <security-definitions> -->\n"
"info.title" = "Twine"
"info.version" = "7.18.0"
"info.x-apisguru-categories.length" = 1
"info.x-apisguru-categories[0]" = "support"
"info.x-logo.url" = "https://api.apis.guru/v2/cache/logo/http_developer.twinehealth.com_images_twinehealth_hz_4color.png"
"info.x-origin.length" = 1
"info.x-origin[0].format" = "swagger"
"info.x-origin[0].url" = "https://raw.githubusercontent.com/TwineHealth/TwineDeveloperDocs/master/spec/swagger.yaml"
"info.x-origin[0].version" = "2.0"
"info.x-preferred" = true
"info.x-providerName" = "twinehealth.com"
"paths./action.post.description" = "Create a plan action"
"paths./action.post.operationId" = "createAction"
"paths./action.post.parameters.length" = 1
"paths./action.post.parameters[0].in" = "body"
"paths./action.post.parameters[0].name" = "body"
"paths./action.post.parameters[0].required" = true
"paths./action.post.parameters[0].schema.$ref" = "#/definitions/CreateActionRequest"
"paths./action.post.responses.200.description" = "OK"
"paths./action.post.responses.200.schema.$ref" = "#/definitions/CreateActionResponse"
"paths./action.post.responses.401.description" = "Unauthorized"
"paths./action.post.responses.401.schema.$ref" = "#/definitions/CreateOrUpdateErrorResponse"
"paths./action.post.responses.403.description" = "Forbidden"
"paths./action.post.responses.403.schema.$ref" = "#/definitions/CreateOrUpdateErrorResponse"
"paths./action.post.responses.409.description" = "Invalid Request"
"paths./action.post.responses.409.schema.$ref" = "#/definitions/CreateOrUpdateErrorResponse"
"paths./action.post.summary" = "Create action"
"paths./action.post.tags.length" = 1
"paths./action.post.tags[0]" = "action"
"paths./action/{id}.get.description" = "Get a health action from a patient's plan."
"paths./action/{id}.get.operationId" = "fetchAction"
"paths./action/{id}.get.parameters.length" = 1
"paths./action/{id}.get.parameters[0].description" = "Action identifier"
"paths./action/{id}.get.parameters[0].in" = "path"
"paths./action/{id}.get.parameters[0].name" = "id"
"paths./action/{id}.get.parameters[0].required" = true
"paths./action/{id}.get.parameters[0].type" = "string"
"paths./action/{id}.get.responses.200.description" = "OK"
"paths./action/{id}.get.responses.200.schema.$ref" = "#/definitions/FetchActionResponse"
"paths./action/{id}.get.responses.401.description" = "Unauthorized"
"paths./action/{id}.get.responses.401.schema.$ref" = "#/definitions/FetchErrorResponse"
"paths./action/{id}.get.responses.403.description" = "Forbidden"
"paths./action/{id}.get.responses.403.schema.$ref" = "#/definitions/FetchErrorResponse"
"paths./action/{id}.get.summary" = "Get an action"
"paths./action/{id}.get.tags.length" = 1
"paths./action/{id}.get.tags[0]" = "action"
"paths./action/{id}.patch.description" = "Updte a health action from a patient's plan."
"paths./action/{id}.patch.operationId" = "updateAction"
"paths./action/{id}.patch.parameters.length" = 2
"paths./action/{id}.patch.parameters[0].description" = "Action identifier"
"paths./action/{id}.patch.parameters[0].in" = "path"
"paths./action/{id}.patch.parameters[0].name" = "id"
"paths./action/{id}.patch.parameters[0].required" = true
"paths./action/{id}.patch.parameters[0].type" = "string"
"paths./action/{id}.patch.parameters[1].in" = "body"
"paths./action/{id}.patch.parameters[1].name" = "body"
"paths./action/{id}.patch.parameters[1].required" = true
"paths./action/{id}.patch.parameters[1].schema.$ref" = "#/definitions/UpdateActionRequest"
"paths./action/{id}.patch.responses.200.description" = "OK"
"paths./action/{id}.patch.responses.200.schema.$ref" = "#/definitions/UpdateActionResponse"
"paths./action/{id}.patch.responses.401.description" = "Unauthorized"
"paths./action/{id}.patch.responses.401.schema.$ref" = "#/definitions/FetchErrorResponse"
"paths./action/{id}.patch.responses.403.description" = "Forbidden"
"paths./action/{id}.patch.responses.403.schema.$ref" = "#/definitions/FetchErrorResponse"
"paths./action/{id}.patch.responses.409.description" = "Invalid Request"
"paths./action/{id}.patch.responses.409.schema.$ref" = "#/definitions/CreateOrUpdateErrorResponse"
"paths./action/{id}.patch.summary" = "Update an action"
"paths./action/{id}.patch.tags.length" = 1
"paths./action/{id}.patch.tags[0]" = "action"
"paths./bundle.post.description" = "Create a bundle in a patient's plan"
"paths./bundle.post.operationId" = "createBundle"
"paths./bundle.post.parameters.length" = 1
"paths./bundle.post.parameters[0].in" = "body"
"paths./bundle.post.parameters[0].name" = "body"
"paths./bundle.post.parameters[0].required" = true
"paths./bundle.post.parameters[0].schema.$ref" = "#/definitions/CreateBundleRequest"
"paths./bundle.post.responses.200.description" = "OK"
"paths./bundle.post.responses.200.schema.$ref" = "#/definitions/CreateBundleResponse"
"paths./bundle.post.responses.401.description" = "Unauthorized"
"paths./bundle.post.responses.401.schema.$ref" = "#/definitions/CreateOrUpdateErrorResponse"
"paths./bundle.post.responses.403.description" = "Forbidden"
"paths./bundle.post.responses.403.schema.$ref" = "#/definitions/CreateOrUpdateErrorResponse"
"paths./bundle.post.responses.409.description" = "Invalid Request"
"paths./bundle.post.responses.409.schema.$ref" = "#/definitions/CreateOrUpdateErrorResponse"
"paths./bundle.post.summary" = "Create bundle"
"paths./bundle.post.tags.length" = 1
"paths./bundle.post.tags[0]" = "bundle"
"paths./bundle/{id}.get.description" = "Get a bundle from a patient's plan."
"paths./bundle/{id}.get.operationId" = "fetchBundle"
"paths./bundle/{id}.get.parameters.length" = 1
"paths./bundle/{id}.get.parameters[0].description" = "Bundle identifier"
"paths./bundle/{id}.get.parameters[0].in" = "path"
"paths./bundle/{id}.get.parameters[0].name" = "id"
"paths./bundle/{id}.get.parameters[0].required" = true
"paths./bundle/{id}.get.parameters[0].type" = "string"
"paths./bundle/{id}.get.responses.200.description" = "OK"
"paths./bundle/{id}.get.responses.200.schema.$ref" = "#/definitions/FetchBundleResponse"
"paths./bundle/{id}.get.responses.401.description" = "Unauthorized"
"paths./bundle/{id}.get.responses.401.schema.$ref" = "#/definitions/FetchErrorResponse"
"paths./bundle/{id}.get.responses.403.description" = "Forbidden"
"paths./bundle/{id}.get.responses.403.schema.$ref" = "#/definitions/FetchErrorResponse"
"paths./bundle/{id}.get.summary" = "Get a bundle"
"paths./bundle/{id}.get.tags.length" = 1
"paths./bundle/{id}.get.tags[0]" = "bundle"
"paths./bundle/{id}.patch.description" = "Updte a bundle from a patient's plan."
"paths./bundle/{id}.patch.operationId" = "updateBundle"
"paths./bundle/{id}.patch.parameters.length" = 2
"paths./bundle/{id}.patch.parameters[0].description" = "Bundle identifier"
"paths./bundle/{id}.patch.parameters[0].in" = "path"
"paths./bundle/{id}.patch.parameters[0].name" = "id"
"paths./bundle/{id}.patch.parameters[0].required" = true
"paths./bundle/{id}.patch.parameters[0].type" = "string"
"paths./bundle/{id}.patch.parameters[1].in" = "body"
"paths./bundle/{id}.patch.parameters[1].name" = "body"
"paths./bundle/{id}.patch.parameters[1].required" = true
"paths./bundle/{id}.patch.parameters[1].schema.$ref" = "#/definitions/UpdateBundleRequest"
"paths./bundle/{id}.patch.responses.200.description" = "OK"
"paths./bundle/{id}.patch.responses.200.schema.$ref" = "#/definitions/UpdateBundleResponse"
"paths./bundle/{id}.patch.responses.401.description" = "Unauthorized"
"paths./bundle/{id}.patch.responses.401.schema.$ref" = "#/definitions/FetchErrorResponse"
"paths./bundle/{id}.patch.responses.403.description" = "Forbidden"
"paths./bundle/{id}.patch.responses.403.schema.$ref" = "#/definitions/FetchErrorResponse"
"paths./bundle/{id}.patch.responses.409.description" = "Invalid Request"
"paths./bundle/{id}.patch.responses.409.schema.$ref" = "#/definitions/CreateOrUpdateErrorResponse"
"paths./bundle/{id}.patch.summary" = "Update a bundle"
"paths./bundle/{id}.patch.tags.length" = 1
"paths./bundle/{id}.patch.tags[0]" = "bundle"
"paths./coach/{id}.get.description" = "Get a coach record by id."
"paths./coach/{id}.get.operationId" = "fetchCoach"
"paths./coach/{id}.get.parameters.length" = 1
"paths./coach/{id}.get.parameters[0].description" = "Coach identifier"
"paths./coach/{id}.get.parameters[0].in" = "path"
"paths./coach/{id}.get.parameters[0].name" = "id"
"paths./coach/{id}.get.parameters[0].required" = true
"paths./coach/{id}.get.parameters[0].type" = "string"
"paths./coach/{id}.get.responses.200.description" = "OK"
"paths./coach/{id}.get.responses.200.schema.$ref" = "#/definitions/FetchCoachResponse"
"paths./coach/{id}.get.responses.401.description" = "Unauthorized"
"paths./coach/{id}.get.responses.401.schema.$ref" = "#/definitions/FetchErrorResponse"
"paths./coach/{id}.get.responses.403.description" = "Forbidden"
"paths./coach/{id}.get.responses.403.schema.$ref" = "#/definitions/FetchErrorResponse"
"paths./coach/{id}.get.summary" = "Get a coach"
"paths./coach/{id}.get.tags.length" = 1
"paths./coach/{id}.get.tags[0]" = "coach"
"paths./email_history.get.description" = "Get a list of email histories"
"paths./email_history.get.operationId" = "fetchEmailHistories"
"paths./email_history.get.parameters.length" = 4
"paths./email_history.get.parameters[0].description" = "Twine user id of email recipient. Required if filter[sender] is not defined."
"paths./email_history.get.parameters[0].in" = "query"
"paths./email_history.get.parameters[0].name" = "filter[receiver]"
"paths./email_history.get.parameters[0].type" = "string"
"paths./email_history.get.parameters[1].description" = "Twine user id of email sender. Required if filter[receiver] is not defined."
"paths./email_history.get.parameters[1].in" = "query"
"paths./email_history.get.parameters[1].name" = "filter[sender]"
"paths./email_history.get.parameters[1].type" = "string"
"paths./email_history.get.parameters[2].description" = "Type of email"
"paths./email_history.get.parameters[2].in" = "query"
"paths./email_history.get.parameters[2].name" = "filter[emailType]"
"paths./email_history.get.parameters[2].type" = "string"
"paths./email_history.get.parameters[3].description" = "valid sorts:\n  * send_time - ascending by send_time\n  * -send_time - descending by send_time\n"
"paths./email_history.get.parameters[3].enum.length" = 2
"paths./email_history.get.parameters[3].enum[0]" = "send_time"
"paths./email_history.get.parameters[3].enum[1]" = "-send_time"
"paths./email_history.get.parameters[3].in" = "query"
"paths./email_history.get.parameters[3].name" = "sort"
"paths./email_history.get.parameters[3].type" = "string"
"paths./email_history.get.responses.200.description" = "OK"
"paths./email_history.get.responses.200.schema.$ref" = "#/definitions/FetchEmailHistoriesResponse"
"paths./email_history.get.responses.401.description" = "Unauthorized"
"paths./email_history.get.responses.401.schema.$ref" = "#/definitions/FetchErrorResponse"
"paths./email_history.get.responses.403.description" = "Forbidden"
"paths./email_history.get.responses.403.schema.$ref" = "#/definitions/FetchErrorResponse"
"paths./email_history.get.responses.409.description" = "Invalid Request"
"paths./email_history.get.responses.409.schema.$ref" = "#/definitions/FetchErrorResponse"
"paths./email_history.get.summary" = "List email histories"
"paths./email_history.get.tags.length" = 1
"paths./email_history.get.tags[0]" = "email history"
"paths./email_history/{id}.get.description" = "Get an email history by id"
"paths./email_history/{id}.get.operationId" = "fetchEmailHistory"
"paths./email_history/{id}.get.parameters.length" = 1
"paths./email_history/{id}.get.parameters[0].description" = "EmailHistory identifier"
"paths./email_history/{id}.get.parameters[0].in" = "path"
"paths./email_history/{id}.get.parameters[0].name" = "id"
"paths./email_history/{id}.get.parameters[0].required" = true
"paths./email_history/{id}.get.parameters[0].type" = "string"
"paths./email_history/{id}.get.responses.200.description" = "OK"
"paths./email_history/{id}.get.responses.200.schema.$ref" = "#/definitions/FetchEmailHistoryResponse"
"paths./email_history/{id}.get.responses.401.description" = "Unauthorized"
"paths./email_history/{id}.get.responses.401.schema.$ref" = "#/definitions/FetchErrorResponse"
"paths./email_history/{id}.get.responses.403.description" = "Forbidden"
"paths./email_history/{id}.get.responses.403.schema.$ref" = "#/definitions/FetchErrorResponse"
"paths./email_history/{id}.get.summary" = "Get an email history"
"paths./email_history/{id}.get.tags.length" = 1
"paths./email_history/{id}.get.tags[0]" = "email history"
"paths./group.get.description" = "Get a list of groups matching the specified filters."
"paths./group.get.operationId" = "fetchGroups"
"paths./group.get.parameters.length" = 2
"paths./group.get.parameters[0].description" = "Organization identifier"
"paths./group.get.parameters[0].in" = "query"
"paths./group.get.parameters[0].name" = "filter[organization]"
"paths./group.get.parameters[0].required" = true
"paths./group.get.parameters[0].type" = "string"
"paths./group.get.parameters[1].description" = "Group name"
"paths./group.get.parameters[1].in" = "query"
"paths./group.get.parameters[1].name" = "filter[name]"
"paths./group.get.parameters[1].required" = false
"paths./group.get.parameters[1].type" = "string"
"paths./group.get.responses.200.description" = "OK"
"paths./group.get.responses.200.schema.$ref" = "#/definitions/FetchGroupsResponse"
"paths./group.get.responses.401.description" = "Unauthorized"
"paths./group.get.responses.401.schema.$ref" = "#/definitions/FetchErrorResponse"
"paths./group.get.responses.403.description" = "Forbidden"
"paths./group.get.responses.403.schema.$ref" = "#/definitions/FetchErrorResponse"
"paths./group.get.summary" = "List groups"
"paths./group.get.tags.length" = 1
"paths./group.get.tags[0]" = "group"
"paths./group.post.description" = "Create a group record."
"paths./group.post.operationId" = "createGroup"
"paths./group.post.parameters.length" = 1
"paths./group.post.parameters[0].in" = "body"
"paths./group.post.parameters[0].name" = "body"
"paths./group.post.parameters[0].required" = true
"paths./group.post.parameters[0].schema.$ref" = "#/definitions/CreateGroupRequest"
"paths./group.post.responses.201.description" = "Created"
"paths./group.post.responses.201.schema.$ref" = "#/definitions/CreateGroupResponse"
"paths./group.post.responses.401.description" = "Unauthorized"
"paths./group.post.responses.401.schema.$ref" = "#/definitions/CreateOrUpdateErrorResponse"
"paths./group.post.responses.403.description" = "Forbidden"
"paths./group.post.responses.403.schema.$ref" = "#/definitions/CreateOrUpdateErrorResponse"
"paths./group.post.responses.409.description" = "Invalid Request"
"paths./group.post.responses.409.schema.$ref" = "#/definitions/CreateOrUpdateErrorResponse"
"paths./group.post.summary" = "Create a group"
"paths./group.post.tags.length" = 1
"paths./group.post.tags[0]" = "group"
"paths./group/{id}.get.description" = "Get a group record by id."
"paths./group/{id}.get.operationId" = "fetchGroup"
"paths./group/{id}.get.parameters.length" = 1
"paths./group/{id}.get.parameters[0].description" = "Group identifier"
"paths./group/{id}.get.parameters[0].in" = "path"
"paths./group/{id}.get.parameters[0].name" = "id"
"paths./group/{id}.get.parameters[0].required" = true
"paths./group/{id}.get.parameters[0].type" = "string"
"paths./group/{id}.get.responses.200.description" = "OK"
"paths./group/{id}.get.responses.200.schema.$ref" = "#/definitions/FetchGroupResponse"
"paths./group/{id}.get.responses.401.description" = "Unauthorized"
"paths./group/{id}.get.responses.401.schema.$ref" = "#/definitions/FetchErrorResponse"
"paths./group/{id}.get.responses.403.description" = "Forbidden"
"paths./group/{id}.get.responses.403.schema.$ref" = "#/definitions/FetchErrorResponse"
"paths./group/{id}.get.summary" = "Get a group"
"paths./group/{id}.get.tags.length" = 1
"paths./group/{id}.get.tags[0]" = "group"
"paths./oauth/token.post.consumes.length" = 2
"paths./oauth/token.post.consumes[0]" = "application/vnd.api+json"
"paths./oauth/token.post.consumes[1]" = "application/json"
"paths./oauth/token.post.description" = "Create an OAuth 2.0 Bearer token. A valid bearer token is required for all other API requests.\n\nBe sure to set the header `Content-Type: \"application/vnd.api+json\"`. Otherwise, you will get an error\n403 Forbidden. Using `Content-Type: \"application/json\"` is permitted (to support older oauth clients) but when\nusing `application/json` the body should have a body in the following format instead of nesting under\n`data.attributes`:\n```\n{\n  \"grant_type\": \"client_credentials\",\n  \"client_id\": \"95c78ab2-167f-40b8-8bec-8398d4b87454\",\n  \"client_secret\": \"35d18dc9-a3dd-4948-b787-063a490b9354\"\n}\n```\n"
"paths./oauth/token.post.operationId" = "createToken"
"paths./oauth/token.post.parameters.length" = 2
"paths./oauth/token.post.parameters[0].description" = "List of related resources to include in the response"
"paths./oauth/token.post.parameters[0].enum.length" = 2
"paths./oauth/token.post.parameters[0].enum[0]" = "groups"
"paths./oauth/token.post.parameters[0].enum[1]" = "organization"
"paths./oauth/token.post.parameters[0].in" = "query"
"paths./oauth/token.post.parameters[0].name" = "include"
"paths./oauth/token.post.parameters[0].required" = false
"paths./oauth/token.post.parameters[0].type" = "string"
"paths./oauth/token.post.parameters[1].in" = "body"
"paths./oauth/token.post.parameters[1].name" = "body"
"paths./oauth/token.post.parameters[1].required" = true
"paths./oauth/token.post.parameters[1].schema.$ref" = "#/definitions/CreateTokenRequest"
"paths./oauth/token.post.responses.201.description" = "Created"
"paths./oauth/token.post.responses.201.schema.$ref" = "#/definitions/CreateTokenResponse"
"paths./oauth/token.post.responses.401.description" = "Unauthorized"
"paths./oauth/token.post.responses.401.schema.$ref" = "#/definitions/CreateOrUpdateErrorResponse"
"paths./oauth/token.post.responses.403.description" = "Forbidden"
"paths./oauth/token.post.responses.403.schema.$ref" = "#/definitions/CreateOrUpdateErrorResponse"
"paths./oauth/token.post.responses.409.description" = "Invalid Request"
"paths./oauth/token.post.responses.409.schema.$ref" = "#/definitions/CreateOrUpdateErrorResponse"
"paths./oauth/token.post.security.length" = 1
"paths./oauth/token.post.security[0].twine_auth.length" = 2
"paths./oauth/token.post.security[0].twine_auth[0]" = "group"
"paths./oauth/token.post.security[0].twine_auth[1]" = "organization"
"paths./oauth/token.post.summary" = "Create an oauth token"
"paths./oauth/token.post.tags.length" = 1
"paths./oauth/token.post.tags[0]" = "oauth"
"paths./oauth/token/{id}/groups.get.description" = "Get the list of groups a token can be used to access."
"paths./oauth/token/{id}/groups.get.operationId" = "fetchTokenGroups"
"paths./oauth/token/{id}/groups.get.parameters.length" = 1
"paths./oauth/token/{id}/groups.get.parameters[0].description" = "Token identifier"
"paths./oauth/token/{id}/groups.get.parameters[0].in" = "path"
"paths./oauth/token/{id}/groups.get.parameters[0].name" = "id"
"paths./oauth/token/{id}/groups.get.parameters[0].required" = true
"paths./oauth/token/{id}/groups.get.parameters[0].type" = "string"
"paths./oauth/token/{id}/groups.get.responses.200.description" = "OK"
"paths./oauth/token/{id}/groups.get.responses.200.schema.$ref" = "#/definitions/FetchGroupsResponse"
"paths./oauth/token/{id}/groups.get.responses.401.description" = "Unauthorized"
"paths./oauth/token/{id}/groups.get.responses.401.schema.$ref" = "#/definitions/FetchErrorResponse"
"paths./oauth/token/{id}/groups.get.responses.403.description" = "Forbidden"
"paths./oauth/token/{id}/groups.get.responses.403.schema.$ref" = "#/definitions/FetchErrorResponse"
"paths./oauth/token/{id}/groups.get.security.length" = 1
"paths./oauth/token/{id}/groups.get.security[0].twine_auth.length" = 2
"paths./oauth/token/{id}/groups.get.security[0].twine_auth[0]" = "group"
"paths./oauth/token/{id}/groups.get.security[0].twine_auth[1]" = "organization"
"paths./oauth/token/{id}/groups.get.summary" = "Get the groups for a token"
"paths./oauth/token/{id}/groups.get.tags.length" = 1
"paths./oauth/token/{id}/groups.get.tags[0]" = "oauth"
"paths./oauth/token/{id}/organization.get.description" = "Get the organization a token can be used to access."
"paths./oauth/token/{id}/organization.get.operationId" = "fetchTokenOrganization"
"paths./oauth/token/{id}/organization.get.parameters.length" = 1
"paths./oauth/token/{id}/organization.get.parameters[0].description" = "Token identifier"
"paths./oauth/token/{id}/organization.get.parameters[0].in" = "path"
"paths./oauth/token/{id}/organization.get.parameters[0].name" = "id"
"paths./oauth/token/{id}/organization.get.parameters[0].required" = true
"paths./oauth/token/{id}/organization.get.parameters[0].type" = "string"
"paths./oauth/token/{id}/organization.get.responses.200.description" = "OK"
"paths./oauth/token/{id}/organization.get.responses.200.schema.$ref" = "#/definitions/FetchOrganizationResponse"
"paths./oauth/token/{id}/organization.get.responses.401.description" = "Unauthorized"
"paths./oauth/token/{id}/organization.get.responses.401.schema.$ref" = "#/definitions/FetchErrorResponse"
"paths./oauth/token/{id}/organization.get.responses.403.description" = "Forbidden"
"paths./oauth/token/{id}/organization.get.responses.403.schema.$ref" = "#/definitions/FetchErrorResponse"
"paths./oauth/token/{id}/organization.get.summary" = "Get the organization for a token"
"paths./oauth/token/{id}/organization.get.tags.length" = 1
"paths./oauth/token/{id}/organization.get.tags[0]" = "oauth"
"paths./organization/{id}.get.description" = "Get an organization record by id."
"paths./organization/{id}.get.operationId" = "fetchOrganization"
"paths./organization/{id}.get.parameters.length" = 1
"paths./organization/{id}.get.parameters[0].description" = "Organization identifier"
"paths./organization/{id}.get.parameters[0].in" = "path"
"paths./organization/{id}.get.parameters[0].name" = "id"
"paths./organization/{id}.get.parameters[0].required" = true
"paths./organization/{id}.get.parameters[0].type" = "string"
"paths./organization/{id}.get.responses.200.description" = "OK"
"paths./organization/{id}.get.responses.200.schema.$ref" = "#/definitions/FetchOrganizationResponse"
"paths./organization/{id}.get.responses.401.description" = "Unauthorized"
"paths./organization/{id}.get.responses.401.schema.$ref" = "#/definitions/FetchErrorResponse"
"paths./organization/{id}.get.responses.403.description" = "Forbidden"
"paths./organization/{id}.get.responses.403.schema.$ref" = "#/definitions/FetchErrorResponse"
"paths./organization/{id}.get.summary" = "Get an organization"
"paths./organization/{id}.get.tags.length" = 1
"paths./organization/{id}.get.tags[0]" = "organization"
"paths./patient.get.description" = "Get a list of patients."
"paths./patient.get.operationId" = "fetchPatients"
"paths./patient.get.parameters.length" = 7
"paths./patient.get.parameters[0].description" = "Comma-separated list of Twine group ids (either a group or organization filter is required)"
"paths./patient.get.parameters[0].in" = "query"
"paths./patient.get.parameters[0].name" = "filter[groups]"
"paths./patient.get.parameters[0].type" = "string"
"paths./patient.get.parameters[1].description" = "Twine organization id (either a group or organization filter is required)"
"paths./patient.get.parameters[1].in" = "query"
"paths./patient.get.parameters[1].name" = "filter[organization]"
"paths./patient.get.parameters[1].type" = "string"
"paths./patient.get.parameters[2].description" = "Identifier system (example: \"MyEHR\") - requires a \"filter[identifier][value]\" parameter"
"paths./patient.get.parameters[2].in" = "query"
"paths./patient.get.parameters[2].name" = "filter[identifier][system]"
"paths./patient.get.parameters[2].type" = "string"
"paths./patient.get.parameters[3].description" = "Identifier value (example: \"12345\") - requires a \"filter[identifier][system]\" parameter"
"paths./patient.get.parameters[3].in" = "query"
"paths./patient.get.parameters[3].name" = "filter[identifier][value]"
"paths./patient.get.parameters[3].type" = "string"
"paths./patient.get.parameters[4].description" = "If not specified, return all patients. If set to 'true' return only archived patients, if set to 'false', return only patients who are not archived."
"paths./patient.get.parameters[4].in" = "query"
"paths./patient.get.parameters[4].name" = "filter[archived]"
"paths./patient.get.parameters[4].type" = "boolean"
"paths./patient.get.parameters[5].default" = 1.0
"paths./patient.get.parameters[5].description" = "Page number"
"paths./patient.get.parameters[5].in" = "query"
"paths./patient.get.parameters[5].name" = "page[number]"
"paths./patient.get.parameters[5].required" = false
"paths./patient.get.parameters[5].type" = "integer"
"paths./patient.get.parameters[6].default" = 10.0
"paths./patient.get.parameters[6].description" = "Page size"
"paths./patient.get.parameters[6].in" = "query"
"paths./patient.get.parameters[6].maximum" = 50.0
"paths./patient.get.parameters[6].name" = "page[size]"
"paths./patient.get.parameters[6].required" = false
"paths./patient.get.parameters[6].type" = "integer"
"paths./patient.get.responses.200.description" = "OK"
"paths./patient.get.responses.200.schema.$ref" = "#/definitions/FetchPatientsResponse"
"paths./patient.get.responses.401.description" = "Unauthorized"
"paths./patient.get.responses.401.schema.$ref" = "#/definitions/FetchErrorResponse"
"paths./patient.get.responses.403.description" = "Forbidden"
"paths./patient.get.responses.403.schema.$ref" = "#/definitions/FetchErrorResponse"
"paths./patient.get.responses.409.description" = "Invalid Request"
"paths./patient.get.responses.409.schema.$ref" = "#/definitions/FetchErrorResponse"
"paths./patient.get.summary" = "List patients"
"paths./patient.get.tags.length" = 1
"paths./patient.get.tags[0]" = "patient"
"paths./patient.post.description" = "Create a patient record.\n\nExample for creating a patient with a group specified using `meta.query` instead of `id`:\n\n```JSON\n{\n  \"data\": {\n    \"type\": \"patient\",\n    \"attributes\": {\n      \"first_name\": \"Andrew\",\n      \"last_name\": \"Smith\"\n    },\n    \"relationships\": {\n      \"groups\": {\n        \"data\": [\n          {\n            \"type\": \"group\",\n            \"meta\": {\n              \"query\": {\n                \"organization\": \"58c88de7c93eb96357a87033\",\n                \"name\": \"Patients Lead\"\n              }\n            }\n          }\n        ]\n      }\n    }\n  }\n}\n```\n"
"paths./patient.post.operationId" = "createPatient"
"paths./patient.post.parameters.length" = 1
"paths./patient.post.parameters[0].in" = "body"
"paths./patient.post.parameters[0].name" = "body"
"paths./patient.post.parameters[0].required" = true
"paths./patient.post.parameters[0].schema.$ref" = "#/definitions/CreatePatientRequest"
"paths./patient.post.responses.201.description" = "Created"
"paths./patient.post.responses.201.schema.$ref" = "#/definitions/CreatePatientResponse"
"paths./patient.post.responses.401.description" = "Unauthorized"
"paths./patient.post.responses.401.schema.$ref" = "#/definitions/CreateOrUpdateErrorResponse"
"paths./patient.post.responses.403.description" = "Forbidden"
"paths./patient.post.responses.403.schema.$ref" = "#/definitions/CreateOrUpdateErrorResponse"
"paths./patient.post.responses.409.description" = "Invalid Request"
"paths./patient.post.responses.409.schema.$ref" = "#/definitions/CreateOrUpdateErrorResponse"
"paths./patient.post.summary" = "Create a patient"
"paths./patient.post.tags.length" = 1
"paths./patient.post.tags[0]" = "patient"
"paths./patient/{id}.get.description" = "Gets a patient record by id."
"paths./patient/{id}.get.operationId" = "fetchPatient"
"paths./patient/{id}.get.parameters.length" = 1
"paths./patient/{id}.get.parameters[0].description" = "Patient identifier"
"paths./patient/{id}.get.parameters[0].in" = "path"
"paths./patient/{id}.get.parameters[0].name" = "id"
"paths./patient/{id}.get.parameters[0].required" = true
"paths./patient/{id}.get.parameters[0].type" = "string"
"paths./patient/{id}.get.responses.200.description" = "OK"
"paths./patient/{id}.get.responses.200.schema.$ref" = "#/definitions/FetchPatientResponse"
"paths./patient/{id}.get.responses.401.description" = "Unauthorized"
"paths./patient/{id}.get.responses.401.schema.$ref" = "#/definitions/FetchErrorResponse"
"paths./patient/{id}.get.responses.403.description" = "Forbidden"
"paths./patient/{id}.get.responses.403.schema.$ref" = "#/definitions/FetchErrorResponse"
"paths./patient/{id}.get.summary" = "Get a patient"
"paths./patient/{id}.get.tags.length" = 1
"paths./patient/{id}.get.tags[0]" = "patient"
"paths./patient/{id}.patch.description" = "Update a patient record."
"paths./patient/{id}.patch.operationId" = "updatePatient"
"paths./patient/{id}.patch.parameters.length" = 2
"paths./patient/{id}.patch.parameters[0].description" = "Patient identifier"
"paths./patient/{id}.patch.parameters[0].in" = "path"
"paths./patient/{id}.patch.parameters[0].name" = "id"
"paths./patient/{id}.patch.parameters[0].required" = true
"paths./patient/{id}.patch.parameters[0].type" = "string"
"paths./patient/{id}.patch.parameters[1].in" = "body"
"paths./patient/{id}.patch.parameters[1].name" = "body"
"paths./patient/{id}.patch.parameters[1].required" = true
"paths./patient/{id}.patch.parameters[1].schema.$ref" = "#/definitions/UpdatePatientRequest"
"paths./patient/{id}.patch.responses.200.description" = "OK"
"paths./patient/{id}.patch.responses.200.schema.$ref" = "#/definitions/UpdatePatientResponse"
"paths./patient/{id}.patch.responses.401.description" = "Unauthorized"
"paths./patient/{id}.patch.responses.401.schema.$ref" = "#/definitions/CreateOrUpdateErrorResponse"
"paths./patient/{id}.patch.responses.403.description" = "Forbidden"
"paths./patient/{id}.patch.responses.403.schema.$ref" = "#/definitions/CreateOrUpdateErrorResponse"
"paths./patient/{id}.patch.responses.409.description" = "Invalid Request"
"paths./patient/{id}.patch.responses.409.schema.$ref" = "#/definitions/CreateOrUpdateErrorResponse"
"paths./patient/{id}.patch.summary" = "Update a patient"
"paths./patient/{id}.patch.tags.length" = 1
"paths./patient/{id}.patch.tags[0]" = "patient"
"paths./patient/{id}/coaches.get.description" = "Get the list of coaches for a patient."
"paths./patient/{id}/coaches.get.operationId" = "fetchPatientCoaches"
"paths./patient/{id}/coaches.get.parameters.length" = 1
"paths./patient/{id}/coaches.get.parameters[0].description" = "Patient identifier"
"paths./patient/{id}/coaches.get.parameters[0].in" = "path"
"paths./patient/{id}/coaches.get.parameters[0].name" = "id"
"paths./patient/{id}/coaches.get.parameters[0].required" = true
"paths./patient/{id}/coaches.get.parameters[0].type" = "string"
"paths./patient/{id}/coaches.get.responses.200.description" = "OK"
"paths./patient/{id}/coaches.get.responses.200.schema.$ref" = "#/definitions/FetchCoachesResponse"
"paths./patient/{id}/coaches.get.responses.401.description" = "Unauthorized"
"paths./patient/{id}/coaches.get.responses.401.schema.$ref" = "#/definitions/FetchErrorResponse"
"paths./patient/{id}/coaches.get.responses.403.description" = "Forbidden"
"paths./patient/{id}/coaches.get.responses.403.schema.$ref" = "#/definitions/FetchErrorResponse"
"paths./patient/{id}/coaches.get.summary" = "List coaches for a patient"
"paths./patient/{id}/coaches.get.tags.length" = 1
"paths./patient/{id}/coaches.get.tags[0]" = "patient"
"paths./patient/{id}/groups.get.description" = "Get the list of groups for a patient."
"paths./patient/{id}/groups.get.operationId" = "fetchPatientGroups"
"paths./patient/{id}/groups.get.parameters.length" = 1
"paths./patient/{id}/groups.get.parameters[0].description" = "Patient identifier"
"paths./patient/{id}/groups.get.parameters[0].in" = "path"
"paths./patient/{id}/groups.get.parameters[0].name" = "id"
"paths./patient/{id}/groups.get.parameters[0].required" = true
"paths./patient/{id}/groups.get.parameters[0].type" = "string"
"paths./patient/{id}/groups.get.responses.200.description" = "OK"
"paths./patient/{id}/groups.get.responses.200.schema.$ref" = "#/definitions/FetchGroupsResponse"
"paths./patient/{id}/groups.get.responses.401.description" = "Unauthorized"
"paths./patient/{id}/groups.get.responses.401.schema.$ref" = "#/definitions/FetchErrorResponse"
"paths./patient/{id}/groups.get.responses.403.description" = "Forbidden"
"paths./patient/{id}/groups.get.responses.403.schema.$ref" = "#/definitions/FetchErrorResponse"
"paths./patient/{id}/groups.get.summary" = "List groups for a patient"
"paths./patient/{id}/groups.get.tags.length" = 1
"paths./patient/{id}/groups.get.tags[0]" = "patient"
"paths./patient_health_metric.get.description" = "Get a list of patient health metrics."
"paths./patient_health_metric.get.operationId" = "fetchPatientHealthMetrics"
"paths./patient_health_metric.get.parameters.length" = 3
"paths./patient_health_metric.get.parameters[0].description" = "Filter the patient health metrics for a specified patient"
"paths./patient_health_metric.get.parameters[0].in" = "query"
"paths./patient_health_metric.get.parameters[0].name" = "filter[patient]"
"paths./patient_health_metric.get.parameters[0].required" = true
"paths./patient_health_metric.get.parameters[0].type" = "string"
"paths./patient_health_metric.get.parameters[1].default" = 1.0
"paths./patient_health_metric.get.parameters[1].description" = "Page number"
"paths./patient_health_metric.get.parameters[1].in" = "query"
"paths./patient_health_metric.get.parameters[1].name" = "page[number]"
"paths./patient_health_metric.get.parameters[1].required" = false
"paths./patient_health_metric.get.parameters[1].type" = "integer"
"paths./patient_health_metric.get.parameters[2].default" = 10.0
"paths./patient_health_metric.get.parameters[2].description" = "Page size"
"paths./patient_health_metric.get.parameters[2].in" = "query"
"paths./patient_health_metric.get.parameters[2].maximum" = 50.0
"paths./patient_health_metric.get.parameters[2].name" = "page[size]"
"paths./patient_health_metric.get.parameters[2].required" = false
"paths./patient_health_metric.get.parameters[2].type" = "integer"
"paths./patient_health_metric.get.responses.200.description" = "OK"
"paths./patient_health_metric.get.responses.200.schema.$ref" = "#/definitions/FetchPatientHealthMetricResponse"
"paths./patient_health_metric.get.responses.401.description" = "Unauthorized"
"paths./patient_health_metric.get.responses.401.schema.$ref" = "#/definitions/FetchErrorResponse"
"paths./patient_health_metric.get.responses.403.description" = "Forbidden"
"paths./patient_health_metric.get.responses.403.schema.$ref" = "#/definitions/FetchErrorResponse"
"paths./patient_health_metric.get.responses.409.description" = "Invalid Request"
"paths./patient_health_metric.get.responses.409.schema.$ref" = "#/definitions/FetchErrorResponse"
"paths./patient_health_metric.get.summary" = "List patient health metrics"
"paths./patient_health_metric.get.tags.length" = 1
"paths./patient_health_metric.get.tags[0]" = "metric"
"paths./patient_health_metric.post.description" = "Create one or more patient health metrics.\n\nExample for creating a patient health result with a patient specified using `meta.query` instead of `id`:\n\n```JSON\n  {\n    \"data\": {\n      \"type\": \"patient_health_metric\",\n       \"attributes\": {\n         \"code\": {\n           \"system\": \"LOINC\",\n           \"value\": \"13457-7\"\n         },\n         \"type\": \"ldl_cholesterol\",\n         \"occurred_at\": \"2017-03-14T11:00:57.000Z\",\n         \"value\": \"121\",\n         \"unit\": \"mg/dl\"\n      },\n      \"relationships\": {\n        \"patient\": {\n          \"data\": {\n            \"type\": \"patient\",\n            \"meta\": {\n              \"query\": {\n                \"identifier\": {\n                  \"system\": \"medical-record-number\",\n                  \"value\": \"121212\"\n                },\n                \"organization\": \"58c4554710123c5c40dbab81\"\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n```\n"
"paths./patient_health_metric.post.operationId" = "createPatientHealthMetric"
"paths./patient_health_metric.post.parameters.length" = 1
"paths./patient_health_metric.post.parameters[0].in" = "body"
"paths./patient_health_metric.post.parameters[0].name" = "body"
"paths./patient_health_metric.post.parameters[0].required" = true
"paths./patient_health_metric.post.parameters[0].schema.$ref" = "#/definitions/CreatePatientHealthMetricRequest"
"paths./patient_health_metric.post.responses.200.description" = "OK"
"paths./patient_health_metric.post.responses.200.schema.$ref" = "#/definitions/CreatePatientHealthMetricResponse"
"paths./patient_health_metric.post.responses.401.description" = "Unauthorized"
"paths./patient_health_metric.post.responses.401.schema.$ref" = "#/definitions/CreateOrUpdateErrorResponse"
"paths./patient_health_metric.post.responses.403.description" = "Forbidden"
"paths./patient_health_metric.post.responses.403.schema.$ref" = "#/definitions/CreateOrUpdateErrorResponse"
"paths./patient_health_metric.post.responses.409.description" = "Invalid Request"
"paths./patient_health_metric.post.responses.409.schema.$ref" = "#/definitions/CreateOrUpdateErrorResponse"
"paths./patient_health_metric.post.summary" = "Create patient health metrics"
"paths./patient_health_metric.post.tags.length" = 1
"paths./patient_health_metric.post.tags[0]" = "metric"
"paths./patient_health_metric/{id}.get.description" = "Get the plan summary for a patient."
"paths./patient_health_metric/{id}.get.operationId" = "fetchPatientHealthMetric"
"paths./patient_health_metric/{id}.get.parameters.length" = 1
"paths./patient_health_metric/{id}.get.parameters[0].description" = "Patient health metric identifier"
"paths./patient_health_metric/{id}.get.parameters[0].in" = "path"
"paths./patient_health_metric/{id}.get.parameters[0].name" = "id"
"paths./patient_health_metric/{id}.get.parameters[0].required" = true
"paths./patient_health_metric/{id}.get.parameters[0].type" = "string"
"paths./patient_health_metric/{id}.get.responses.200.description" = "OK"
"paths./patient_health_metric/{id}.get.responses.200.schema.$ref" = "#/definitions/FetchPatientHealthMetricResponse"
"paths./patient_health_metric/{id}.get.responses.401.description" = "Unauthorized"
"paths./patient_health_metric/{id}.get.responses.401.schema.$ref" = "#/definitions/FetchErrorResponse"
"paths./patient_health_metric/{id}.get.responses.403.description" = "Forbidden"
"paths./patient_health_metric/{id}.get.responses.403.schema.$ref" = "#/definitions/FetchErrorResponse"
"paths./patient_health_metric/{id}.get.summary" = "Get a patient health metric"
"paths./patient_health_metric/{id}.get.tags.length" = 1
"paths./patient_health_metric/{id}.get.tags[0]" = "metric"
"paths./patient_plan_summary.get.description" = "Get a list of patient plan summaries"
"paths./patient_plan_summary.get.operationId" = "fetchPatientPlanSummaries"
"paths./patient_plan_summary.get.parameters.length" = 2
"paths./patient_plan_summary.get.parameters[0].description" = "Patient id to fetch plan summary for"
"paths./patient_plan_summary.get.parameters[0].in" = "query"
"paths./patient_plan_summary.get.parameters[0].name" = "filter[patient]"
"paths./patient_plan_summary.get.parameters[0].required" = true
"paths./patient_plan_summary.get.parameters[0].type" = "string"
"paths./patient_plan_summary.get.parameters[1].description" = "List of related resources to include in the response"
"paths./patient_plan_summary.get.parameters[1].enum.length" = 4
"paths./patient_plan_summary.get.parameters[1].enum[0]" = "actions"
"paths./patient_plan_summary.get.parameters[1].enum[1]" = "bundles"
"paths./patient_plan_summary.get.parameters[1].enum[2]" = "patient"
"paths./patient_plan_summary.get.parameters[1].enum[3]" = "current_results"
"paths./patient_plan_summary.get.parameters[1].in" = "query"
"paths./patient_plan_summary.get.parameters[1].name" = "include"
"paths./patient_plan_summary.get.parameters[1].required" = false
"paths./patient_plan_summary.get.parameters[1].type" = "string"
"paths./patient_plan_summary.get.responses.200.description" = "OK"
"paths./patient_plan_summary.get.responses.200.schema.$ref" = "#/definitions/FetchPatientPlanSummariesResponse"
"paths./patient_plan_summary.get.responses.401.description" = "Unauthorized"
"paths./patient_plan_summary.get.responses.401.schema.$ref" = "#/definitions/FetchErrorResponse"
"paths./patient_plan_summary.get.responses.403.description" = "Forbidden"
"paths./patient_plan_summary.get.responses.403.schema.$ref" = "#/definitions/FetchErrorResponse"
"paths./patient_plan_summary.get.summary" = "List patient plan summaries"
"paths./patient_plan_summary.get.tags.length" = 1
"paths./patient_plan_summary.get.tags[0]" = "plan"
"paths./patient_plan_summary/{id}.get.description" = "Get the plan summary for a patient."
"paths./patient_plan_summary/{id}.get.operationId" = "fetchPatientPlanSummary"
"paths./patient_plan_summary/{id}.get.parameters.length" = 2
"paths./patient_plan_summary/{id}.get.parameters[0].description" = "Plan summary identifier"
"paths./patient_plan_summary/{id}.get.parameters[0].in" = "path"
"paths./patient_plan_summary/{id}.get.parameters[0].name" = "id"
"paths./patient_plan_summary/{id}.get.parameters[0].required" = true
"paths./patient_plan_summary/{id}.get.parameters[0].type" = "string"
"paths./patient_plan_summary/{id}.get.parameters[1].description" = "List of related resources to include in the response"
"paths./patient_plan_summary/{id}.get.parameters[1].enum.length" = 4
"paths./patient_plan_summary/{id}.get.parameters[1].enum[0]" = "actions"
"paths./patient_plan_summary/{id}.get.parameters[1].enum[1]" = "bundles"
"paths./patient_plan_summary/{id}.get.parameters[1].enum[2]" = "patient"
"paths./patient_plan_summary/{id}.get.parameters[1].enum[3]" = "current_results"
"paths./patient_plan_summary/{id}.get.parameters[1].in" = "query"
"paths./patient_plan_summary/{id}.get.parameters[1].name" = "include"
"paths./patient_plan_summary/{id}.get.parameters[1].required" = false
"paths./patient_plan_summary/{id}.get.parameters[1].type" = "string"
"paths./patient_plan_summary/{id}.get.responses.200.description" = "OK"
"paths./patient_plan_summary/{id}.get.responses.200.schema.$ref" = "#/definitions/FetchPatientPlanSummaryResponse"
"paths./patient_plan_summary/{id}.get.responses.401.description" = "Unauthorized"
"paths./patient_plan_summary/{id}.get.responses.401.schema.$ref" = "#/definitions/FetchErrorResponse"
"paths./patient_plan_summary/{id}.get.responses.403.description" = "Forbidden"
"paths./patient_plan_summary/{id}.get.responses.403.schema.$ref" = "#/definitions/FetchErrorResponse"
"paths./patient_plan_summary/{id}.get.summary" = "Get the plan summary for a patient"
"paths./patient_plan_summary/{id}.get.tags.length" = 1
"paths./patient_plan_summary/{id}.get.tags[0]" = "plan"
"paths./patient_plan_summary/{id}.patch.description" = "Update a plan summary record for a patient."
"paths./patient_plan_summary/{id}.patch.operationId" = "updatePatientPlanSummary"
"paths./patient_plan_summary/{id}.patch.parameters.length" = 2
"paths./patient_plan_summary/{id}.patch.parameters[0].description" = "Plan summary identifier"
"paths./patient_plan_summary/{id}.patch.parameters[0].in" = "path"
"paths./patient_plan_summary/{id}.patch.parameters[0].name" = "id"
"paths./patient_plan_summary/{id}.patch.parameters[0].required" = true
"paths./patient_plan_summary/{id}.patch.parameters[0].type" = "string"
"paths./patient_plan_summary/{id}.patch.parameters[1].in" = "body"
"paths./patient_plan_summary/{id}.patch.parameters[1].name" = "body"
"paths./patient_plan_summary/{id}.patch.parameters[1].required" = true
"paths./patient_plan_summary/{id}.patch.parameters[1].schema.$ref" = "#/definitions/UpdatePatientPlanSummaryRequest"
"paths./patient_plan_summary/{id}.patch.responses.200.description" = "OK"
"paths./patient_plan_summary/{id}.patch.responses.200.schema.$ref" = "#/definitions/UpdatePatientPlanSummaryResponse"
"paths./patient_plan_summary/{id}.patch.responses.401.description" = "Unauthorized"
"paths./patient_plan_summary/{id}.patch.responses.401.schema.$ref" = "#/definitions/CreateOrUpdateErrorResponse"
"paths./patient_plan_summary/{id}.patch.responses.403.description" = "Forbidden"
"paths./patient_plan_summary/{id}.patch.responses.403.schema.$ref" = "#/definitions/CreateOrUpdateErrorResponse"
"paths./patient_plan_summary/{id}.patch.responses.409.description" = "Invalid Request"
"paths./patient_plan_summary/{id}.patch.responses.409.schema.$ref" = "#/definitions/CreateOrUpdateErrorResponse"
"paths./patient_plan_summary/{id}.patch.summary" = "Update a plan summary"
"paths./patient_plan_summary/{id}.patch.tags.length" = 1
"paths./patient_plan_summary/{id}.patch.tags[0]" = "plan"
"paths./reward.get.description" = "Get a list of rewards matching the specified filters."
"paths./reward.get.operationId" = "fetchRewards"
"paths./reward.get.parameters.length" = 3
"paths./reward.get.parameters[0].description" = "Patient identifier"
"paths./reward.get.parameters[0].in" = "query"
"paths./reward.get.parameters[0].name" = "filter[patient]"
"paths./reward.get.parameters[0].required" = true
"paths./reward.get.parameters[0].type" = "string"
"paths./reward.get.parameters[1].description" = "Reward program activation identifier"
"paths./reward.get.parameters[1].in" = "query"
"paths./reward.get.parameters[1].name" = "filter[reward_program_activation]"
"paths./reward.get.parameters[1].type" = "string"
"paths./reward.get.parameters[2].description" = "Thread identifier"
"paths./reward.get.parameters[2].in" = "query"
"paths./reward.get.parameters[2].name" = "filter[thread]"
"paths./reward.get.parameters[2].type" = "string"
"paths./reward.get.responses.200.description" = "OK"
"paths./reward.get.responses.200.schema.$ref" = "#/definitions/FetchRewardsResponse"
"paths./reward.get.responses.401.description" = "Unauthorized"
"paths./reward.get.responses.401.schema.$ref" = "#/definitions/FetchErrorResponse"
"paths./reward.get.responses.403.description" = "Forbidden"
"paths./reward.get.responses.403.schema.$ref" = "#/definitions/FetchErrorResponse"
"paths./reward.get.summary" = "List rewards"
"paths./reward.get.tags.length" = 1
"paths./reward.get.tags[0]" = "reward"
"paths./reward.post.description" = "Create a reward for a patient."
"paths./reward.post.operationId" = "createReward"
"paths./reward.post.parameters.length" = 1
"paths./reward.post.parameters[0].in" = "body"
"paths./reward.post.parameters[0].name" = "body"
"paths./reward.post.parameters[0].required" = true
"paths./reward.post.parameters[0].schema.$ref" = "#/definitions/CreateRewardRequest"
"paths./reward.post.responses.200.description" = "OK"
"paths./reward.post.responses.200.schema.$ref" = "#/definitions/CreateRewardResponse"
"paths./reward.post.responses.401.description" = "Unauthorized"
"paths./reward.post.responses.401.schema.$ref" = "#/definitions/CreateOrUpdateErrorResponse"
"paths./reward.post.responses.403.description" = "Forbidden"
"paths./reward.post.responses.403.schema.$ref" = "#/definitions/CreateOrUpdateErrorResponse"
"paths./reward.post.responses.409.description" = "Invalid Request"
"paths./reward.post.responses.409.schema.$ref" = "#/definitions/CreateOrUpdateErrorResponse"
"paths./reward.post.summary" = "Create a reward"
"paths./reward.post.tags.length" = 1
"paths./reward.post.tags[0]" = "reward"
"paths./reward/{id}.get.description" = "Get a reward record by id."
"paths./reward/{id}.get.operationId" = "fetchReward"
"paths./reward/{id}.get.parameters.length" = 1
"paths./reward/{id}.get.parameters[0].description" = "Reward identifier"
"paths./reward/{id}.get.parameters[0].in" = "path"
"paths./reward/{id}.get.parameters[0].name" = "id"
"paths./reward/{id}.get.parameters[0].required" = true
"paths./reward/{id}.get.parameters[0].type" = "string"
"paths./reward/{id}.get.responses.200.description" = "OK"
"paths./reward/{id}.get.responses.200.schema.$ref" = "#/definitions/FetchRewardResponse"
"paths./reward/{id}.get.responses.401.description" = "Unauthorized"
"paths./reward/{id}.get.responses.401.schema.$ref" = "#/definitions/FetchErrorResponse"
"paths./reward/{id}.get.responses.403.description" = "Forbidden"
"paths./reward/{id}.get.responses.403.schema.$ref" = "#/definitions/FetchErrorResponse"
"paths./reward/{id}.get.summary" = "Get a reward"
"paths./reward/{id}.get.tags.length" = 1
"paths./reward/{id}.get.tags[0]" = "reward"
"paths./reward_earning.get.description" = "Get a list of reward earnings matching the specified filters."
"paths./reward_earning.get.operationId" = "fetchRewardEarnings"
"paths./reward_earning.get.parameters.length" = 3
"paths./reward_earning.get.parameters[0].description" = "Group identifiers"
"paths./reward_earning.get.parameters[0].in" = "query"
"paths./reward_earning.get.parameters[0].name" = "filter[groups]"
"paths./reward_earning.get.parameters[0].required" = true
"paths./reward_earning.get.parameters[0].type" = "string"
"paths./reward_earning.get.parameters[1].description" = "Patient identifier"
"paths./reward_earning.get.parameters[1].in" = "query"
"paths./reward_earning.get.parameters[1].name" = "filter[patient]"
"paths./reward_earning.get.parameters[1].required" = true
"paths./reward_earning.get.parameters[1].type" = "string"
"paths./reward_earning.get.parameters[2].description" = "If true, only returns those reward earnings for which ready_for_fulfillment is true and fulfilled_at is null. If false, only returns those reward earnings for which ready_for_fulfillment is false and fulfilled_at is null."
"paths./reward_earning.get.parameters[2].in" = "query"
"paths./reward_earning.get.parameters[2].name" = "filter[ready_for_fulfillment]"
"paths./reward_earning.get.parameters[2].type" = "boolean"
"paths./reward_earning.get.responses.200.description" = "OK"
"paths./reward_earning.get.responses.200.schema.$ref" = "#/definitions/FetchRewardEarningsResponse"
"paths./reward_earning.get.responses.401.description" = "Unauthorized"
"paths./reward_earning.get.responses.401.schema.$ref" = "#/definitions/FetchErrorResponse"
"paths./reward_earning.get.responses.403.description" = "Forbidden"
"paths./reward_earning.get.responses.403.schema.$ref" = "#/definitions/FetchErrorResponse"
"paths./reward_earning.get.summary" = "List reward earnings"
"paths./reward_earning.get.tags.length" = 1
"paths./reward_earning.get.tags[0]" = "reward earning"
"paths./reward_earning.post.description" = "Create a reward earning for a reward. There can only be one earning for a reward. It is possilble to create multiple reward earnings simultaneously by providing and array of reward earnings in the data property."
"paths./reward_earning.post.operationId" = "createRewardEarning"
"paths./reward_earning.post.parameters.length" = 1
"paths./reward_earning.post.parameters[0].in" = "body"
"paths./reward_earning.post.parameters[0].name" = "body"
"paths./reward_earning.post.parameters[0].required" = true
"paths./reward_earning.post.parameters[0].schema.$ref" = "#/definitions/CreateRewardEarningRequest"
"paths./reward_earning.post.responses.200.description" = "OK"
"paths./reward_earning.post.responses.200.schema.$ref" = "#/definitions/CreateRewardEarningResponse"
"paths./reward_earning.post.responses.401.description" = "Unauthorized"
"paths./reward_earning.post.responses.401.schema.$ref" = "#/definitions/CreateOrUpdateErrorResponse"
"paths./reward_earning.post.responses.403.description" = "Forbidden"
"paths./reward_earning.post.responses.403.schema.$ref" = "#/definitions/CreateOrUpdateErrorResponse"
"paths./reward_earning.post.responses.409.description" = "Invalid Request"
"paths./reward_earning.post.responses.409.schema.$ref" = "#/definitions/CreateOrUpdateErrorResponse"
"paths./reward_earning.post.summary" = "Create a reward earning"
"paths./reward_earning.post.tags.length" = 1
"paths./reward_earning.post.tags[0]" = "reward earning"
"paths./reward_earning/{id}.get.description" = "Get a reward earning record by id."
"paths./reward_earning/{id}.get.operationId" = "fetchRewardEarning"
"paths./reward_earning/{id}.get.parameters.length" = 1
"paths./reward_earning/{id}.get.parameters[0].description" = "Reward earning identifier"
"paths./reward_earning/{id}.get.parameters[0].in" = "path"
"paths./reward_earning/{id}.get.parameters[0].name" = "id"
"paths./reward_earning/{id}.get.parameters[0].required" = true
"paths./reward_earning/{id}.get.parameters[0].type" = "string"
"paths./reward_earning/{id}.get.responses.200.description" = "OK"
"paths./reward_earning/{id}.get.responses.200.schema.$ref" = "#/definitions/FetchRewardEarningResponse"
"paths./reward_earning/{id}.get.responses.401.description" = "Unauthorized"
"paths./reward_earning/{id}.get.responses.401.schema.$ref" = "#/definitions/FetchErrorResponse"
"paths./reward_earning/{id}.get.responses.403.description" = "Forbidden"
"paths./reward_earning/{id}.get.responses.403.schema.$ref" = "#/definitions/FetchErrorResponse"
"paths./reward_earning/{id}.get.summary" = "Get a reward earning"
"paths./reward_earning/{id}.get.tags.length" = 1
"paths./reward_earning/{id}.get.tags[0]" = "reward earning"
"paths./reward_earning_fulfillment.get.description" = "Get a list of reward earning fulfillments matching the specified filters."
"paths./reward_earning_fulfillment.get.operationId" = "fetchRewardEarningFulfillments"
"paths./reward_earning_fulfillment.get.parameters.length" = 1
"paths./reward_earning_fulfillment.get.parameters[0].description" = "Patient identifier"
"paths./reward_earning_fulfillment.get.parameters[0].in" = "query"
"paths./reward_earning_fulfillment.get.parameters[0].name" = "filter[patient]"
"paths./reward_earning_fulfillment.get.parameters[0].required" = true
"paths./reward_earning_fulfillment.get.parameters[0].type" = "string"
"paths./reward_earning_fulfillment.get.responses.200.description" = "OK"
"paths./reward_earning_fulfillment.get.responses.200.schema.$ref" = "#/definitions/FetchRewardEarningFulfillmentsResponse"
"paths./reward_earning_fulfillment.get.responses.401.description" = "Unauthorized"
"paths./reward_earning_fulfillment.get.responses.401.schema.$ref" = "#/definitions/FetchErrorResponse"
"paths./reward_earning_fulfillment.get.responses.403.description" = "Forbidden"
"paths./reward_earning_fulfillment.get.responses.403.schema.$ref" = "#/definitions/FetchErrorResponse"
"paths./reward_earning_fulfillment.get.summary" = "List reward earning fulfillments"
"paths./reward_earning_fulfillment.get.tags.length" = 1
"paths./reward_earning_fulfillment.get.tags[0]" = "reward earning fulfillment"
"paths./reward_earning_fulfillment.post.description" = "Create a reward earning fulfillment for a reward earning. There can only be one fulfillment for each earning."
"paths./reward_earning_fulfillment.post.operationId" = "createRewardEarningFulfillment"
"paths./reward_earning_fulfillment.post.parameters.length" = 1
"paths./reward_earning_fulfillment.post.parameters[0].in" = "body"
"paths./reward_earning_fulfillment.post.parameters[0].name" = "body"
"paths./reward_earning_fulfillment.post.parameters[0].required" = true
"paths./reward_earning_fulfillment.post.parameters[0].schema.$ref" = "#/definitions/CreateRewardEarningFulfillmentRequest"
"paths./reward_earning_fulfillment.post.responses.200.description" = "OK"
"paths./reward_earning_fulfillment.post.responses.200.schema.$ref" = "#/definitions/CreateRewardEarningFulfillmentResponse"
"paths./reward_earning_fulfillment.post.responses.401.description" = "Unauthorized"
"paths./reward_earning_fulfillment.post.responses.401.schema.$ref" = "#/definitions/CreateOrUpdateErrorResponse"
"paths./reward_earning_fulfillment.post.responses.403.description" = "Forbidden"
"paths./reward_earning_fulfillment.post.responses.403.schema.$ref" = "#/definitions/CreateOrUpdateErrorResponse"
"paths./reward_earning_fulfillment.post.responses.409.description" = "Invalid Request"
"paths./reward_earning_fulfillment.post.responses.409.schema.$ref" = "#/definitions/CreateOrUpdateErrorResponse"
"paths./reward_earning_fulfillment.post.summary" = "Create a reward earning fulfillment"
"paths./reward_earning_fulfillment.post.tags.length" = 1
"paths./reward_earning_fulfillment.post.tags[0]" = "reward earning fulfillment"
"paths./reward_earning_fulfillment/{id}.get.description" = "Get a reward earning fulfillment record by id."
"paths./reward_earning_fulfillment/{id}.get.operationId" = "fetchRewardEarningFulfillment"
"paths./reward_earning_fulfillment/{id}.get.parameters.length" = 1
"paths./reward_earning_fulfillment/{id}.get.parameters[0].description" = "Reward earning fulfillment identifier"
"paths./reward_earning_fulfillment/{id}.get.parameters[0].in" = "path"
"paths./reward_earning_fulfillment/{id}.get.parameters[0].name" = "id"
"paths./reward_earning_fulfillment/{id}.get.parameters[0].required" = true
"paths./reward_earning_fulfillment/{id}.get.parameters[0].type" = "string"
"paths./reward_earning_fulfillment/{id}.get.responses.200.description" = "OK"
"paths./reward_earning_fulfillment/{id}.get.responses.200.schema.$ref" = "#/definitions/FetchRewardEarningFulfillmentResponse"
"paths./reward_earning_fulfillment/{id}.get.responses.401.description" = "Unauthorized"
"paths./reward_earning_fulfillment/{id}.get.responses.401.schema.$ref" = "#/definitions/FetchErrorResponse"
"paths./reward_earning_fulfillment/{id}.get.responses.403.description" = "Forbidden"
"paths./reward_earning_fulfillment/{id}.get.responses.403.schema.$ref" = "#/definitions/FetchErrorResponse"
"paths./reward_earning_fulfillment/{id}.get.summary" = "Get a reward earning fulfillment"
"paths./reward_earning_fulfillment/{id}.get.tags.length" = 1
"paths./reward_earning_fulfillment/{id}.get.tags[0]" = "reward earning fulfillment"
"paths./reward_program.get.description" = "Get a list of reward programs matching the specified filters."
"paths./reward_program.get.operationId" = "fetchRewardPrograms"
"paths./reward_program.get.parameters.length" = 1
"paths./reward_program.get.parameters[0].description" = "Comma-separated list of group identifiers"
"paths./reward_program.get.parameters[0].in" = "query"
"paths./reward_program.get.parameters[0].name" = "filter[groups]"
"paths./reward_program.get.parameters[0].required" = true
"paths./reward_program.get.parameters[0].type" = "string"
"paths./reward_program.get.responses.200.description" = "OK"
"paths./reward_program.get.responses.200.schema.$ref" = "#/definitions/FetchRewardProgramsResponse"
"paths./reward_program.get.responses.401.description" = "Unauthorized"
"paths./reward_program.get.responses.401.schema.$ref" = "#/definitions/FetchErrorResponse"
"paths./reward_program.get.responses.403.description" = "Forbidden"
"paths./reward_program.get.responses.403.schema.$ref" = "#/definitions/FetchErrorResponse"
"paths./reward_program.get.summary" = "List reward programs"
"paths./reward_program.get.tags.length" = 1
"paths./reward_program.get.tags[0]" = "reward program"
"paths./reward_program.post.description" = "Create a reward program for a group."
"paths./reward_program.post.operationId" = "createRewardProgram"
"paths./reward_program.post.parameters.length" = 1
"paths./reward_program.post.parameters[0].in" = "body"
"paths./reward_program.post.parameters[0].name" = "body"
"paths./reward_program.post.parameters[0].required" = true
"paths./reward_program.post.parameters[0].schema.$ref" = "#/definitions/CreateRewardProgramRequest"
"paths./reward_program.post.responses.200.description" = "OK"
"paths./reward_program.post.responses.200.schema.$ref" = "#/definitions/CreateRewardProgramResponse"
"paths./reward_program.post.responses.401.description" = "Unauthorized"
"paths./reward_program.post.responses.401.schema.$ref" = "#/definitions/CreateOrUpdateErrorResponse"
"paths./reward_program.post.responses.403.description" = "Forbidden"
"paths./reward_program.post.responses.403.schema.$ref" = "#/definitions/CreateOrUpdateErrorResponse"
"paths./reward_program.post.responses.409.description" = "Invalid Request"
"paths./reward_program.post.responses.409.schema.$ref" = "#/definitions/CreateOrUpdateErrorResponse"
"paths./reward_program.post.summary" = "Create a reward program"
"paths./reward_program.post.tags.length" = 1
"paths./reward_program.post.tags[0]" = "reward program"
"paths./reward_program/{id}.get.description" = "Get a reward program record by id."
"paths./reward_program/{id}.get.operationId" = "fetchRewardProgram"
"paths./reward_program/{id}.get.parameters.length" = 1
"paths./reward_program/{id}.get.parameters[0].description" = "Reward program identifier"
"paths./reward_program/{id}.get.parameters[0].in" = "path"
"paths./reward_program/{id}.get.parameters[0].name" = "id"
"paths./reward_program/{id}.get.parameters[0].required" = true
"paths./reward_program/{id}.get.parameters[0].type" = "string"
"paths./reward_program/{id}.get.responses.200.description" = "OK"
"paths./reward_program/{id}.get.responses.200.schema.$ref" = "#/definitions/FetchRewardProgramResponse"
"paths./reward_program/{id}.get.responses.401.description" = "Unauthorized"
"paths./reward_program/{id}.get.responses.401.schema.$ref" = "#/definitions/FetchErrorResponse"
"paths./reward_program/{id}.get.responses.403.description" = "Forbidden"
"paths./reward_program/{id}.get.responses.403.schema.$ref" = "#/definitions/FetchErrorResponse"
"paths./reward_program/{id}.get.summary" = "Get a reward program"
"paths./reward_program/{id}.get.tags.length" = 1
"paths./reward_program/{id}.get.tags[0]" = "reward program"
"paths./reward_program/{id}/group.get.description" = "Get the group related to a reward program."
"paths./reward_program/{id}/group.get.operationId" = "fetchRewardProgramGroup"
"paths./reward_program/{id}/group.get.parameters.length" = 1
"paths./reward_program/{id}/group.get.parameters[0].description" = "Reward program identifier"
"paths./reward_program/{id}/group.get.parameters[0].in" = "path"
"paths./reward_program/{id}/group.get.parameters[0].name" = "id"
"paths./reward_program/{id}/group.get.parameters[0].required" = true
"paths./reward_program/{id}/group.get.parameters[0].type" = "string"
"paths./reward_program/{id}/group.get.responses.200.description" = "OK"
"paths./reward_program/{id}/group.get.responses.200.schema.$ref" = "#/definitions/FetchGroupsResponse"
"paths./reward_program/{id}/group.get.responses.401.description" = "Unauthorized"
"paths./reward_program/{id}/group.get.responses.401.schema.$ref" = "#/definitions/FetchErrorResponse"
"paths./reward_program/{id}/group.get.responses.403.description" = "Forbidden"
"paths./reward_program/{id}/group.get.responses.403.schema.$ref" = "#/definitions/FetchErrorResponse"
"paths./reward_program/{id}/group.get.summary" = "Get group for a reward program"
"paths./reward_program/{id}/group.get.tags.length" = 1
"paths./reward_program/{id}/group.get.tags[0]" = "reward program"
"paths./reward_program_activation.get.description" = "Get a list of reward program activations matching the specified filters."
"paths./reward_program_activation.get.operationId" = "fetchRewardProgramActivations"
"paths./reward_program_activation.get.parameters.length" = 1
"paths./reward_program_activation.get.parameters[0].description" = "Patient identifier"
"paths./reward_program_activation.get.parameters[0].in" = "query"
"paths./reward_program_activation.get.parameters[0].name" = "filter[patient]"
"paths./reward_program_activation.get.parameters[0].required" = true
"paths./reward_program_activation.get.parameters[0].type" = "string"
"paths./reward_program_activation.get.responses.200.description" = "OK"
"paths./reward_program_activation.get.responses.200.schema.$ref" = "#/definitions/FetchRewardProgramActivationsResponse"
"paths./reward_program_activation.get.responses.401.description" = "Unauthorized"
"paths./reward_program_activation.get.responses.401.schema.$ref" = "#/definitions/FetchErrorResponse"
"paths./reward_program_activation.get.responses.403.description" = "Forbidden"
"paths./reward_program_activation.get.responses.403.schema.$ref" = "#/definitions/FetchErrorResponse"
"paths./reward_program_activation.get.summary" = "List reward program activations"
"paths./reward_program_activation.get.tags.length" = 1
"paths./reward_program_activation.get.tags[0]" = "reward program activation"
"paths./reward_program_activation.post.description" = "Create a reward program activation for a patient. There can only be one activation for a patient for a given reward program."
"paths./reward_program_activation.post.operationId" = "createRewardProgramActivation"
"paths./reward_program_activation.post.parameters.length" = 1
"paths./reward_program_activation.post.parameters[0].in" = "body"
"paths./reward_program_activation.post.parameters[0].name" = "body"
"paths./reward_program_activation.post.parameters[0].required" = true
"paths./reward_program_activation.post.parameters[0].schema.$ref" = "#/definitions/CreateRewardProgramActivationRequest"
"paths./reward_program_activation.post.responses.200.description" = "OK"
"paths./reward_program_activation.post.responses.200.schema.$ref" = "#/definitions/CreateRewardProgramActivationResponse"
"paths./reward_program_activation.post.responses.401.description" = "Unauthorized"
"paths./reward_program_activation.post.responses.401.schema.$ref" = "#/definitions/CreateOrUpdateErrorResponse"
"paths./reward_program_activation.post.responses.403.description" = "Forbidden"
"paths./reward_program_activation.post.responses.403.schema.$ref" = "#/definitions/CreateOrUpdateErrorResponse"
"paths./reward_program_activation.post.responses.409.description" = "Invalid Request"
"paths./reward_program_activation.post.responses.409.schema.$ref" = "#/definitions/CreateOrUpdateErrorResponse"
"paths./reward_program_activation.post.summary" = "Create a reward program activation"
"paths./reward_program_activation.post.tags.length" = 1
"paths./reward_program_activation.post.tags[0]" = "reward program activation"
"paths./reward_program_activation/{id}.get.description" = "Get a reward program activationrecord by id."
"paths./reward_program_activation/{id}.get.operationId" = "fetchRewardProgramActivation"
"paths./reward_program_activation/{id}.get.parameters.length" = 1
"paths./reward_program_activation/{id}.get.parameters[0].description" = "Reward program activation identifier"
"paths./reward_program_activation/{id}.get.parameters[0].in" = "path"
"paths./reward_program_activation/{id}.get.parameters[0].name" = "id"
"paths./reward_program_activation/{id}.get.parameters[0].required" = true
"paths./reward_program_activation/{id}.get.parameters[0].type" = "string"
"paths./reward_program_activation/{id}.get.responses.200.description" = "OK"
"paths./reward_program_activation/{id}.get.responses.200.schema.$ref" = "#/definitions/FetchRewardProgramActivationResponse"
"paths./reward_program_activation/{id}.get.responses.401.description" = "Unauthorized"
"paths./reward_program_activation/{id}.get.responses.401.schema.$ref" = "#/definitions/FetchErrorResponse"
"paths./reward_program_activation/{id}.get.responses.403.description" = "Forbidden"
"paths./reward_program_activation/{id}.get.responses.403.schema.$ref" = "#/definitions/FetchErrorResponse"
"paths./reward_program_activation/{id}.get.summary" = "Get a reward program activation"
"paths./reward_program_activation/{id}.get.tags.length" = 1
"paths./reward_program_activation/{id}.get.tags[0]" = "reward program activation"
"produces.length" = 1
"produces[0]" = "application/vnd.api+json"
"schemes.length" = 1
"schemes[0]" = "https"
"securityDefinitions.twine_auth.authorizationUrl" = "https://api.twinehealth.com/pub/oauth/dialog"
"securityDefinitions.twine_auth.description" = "Get access to data while protecting your account credentials.\nOAuth2 is also a safer and more secure way to give you access.\n"
"securityDefinitions.twine_auth.flow" = "implicit"
"securityDefinitions.twine_auth.scopes.group" = "access patients and data within a group"
"securityDefinitions.twine_auth.scopes.organization" = "access patients and data within an organization"
"securityDefinitions.twine_auth.type" = "oauth2"
swagger = "2.0"
"tags.length" = 15
"tags[0].description" = "Authentication operations"
"tags[0].name" = "oauth"
"tags[10].description" = "A reward program activation is the activation of a reward program for a specific patient."
"tags[10].name" = "reward program activation"
"tags[11].description" = "A reward allocates a portion of the budget from the reward program activation for achieving a particular goal and sets a target date."
"tags[11].name" = "reward"
"tags[12].description" = "A reward earning specifies the portion of a reward that was earned and at what date."
"tags[12].name" = "reward earning"
"tags[13].description" = "A reward earning fulfillment specifies the portion of a reward earning that was fulfilled and at what date."
"tags[13].name" = "reward earning fulfillment"
"tags[14].description" = "Email history represents a single email that was sent using twine"
"tags[14].name" = "email history"
"tags[1].description" = "An organization is a Twine customer. No data is accessible across organizations."
"tags[1].name" = "organization"
"tags[2].description" = "A group is a cohort of patients within an organization. The creation of groups allows for the segmentation of dashboards and analytics. For example, a group might correspond to the patients in a particular practice or the employees of a particular employer."
"tags[2].name" = "group"
"tags[3].description" = "A coach is a person that supports a patient"
"tags[3].name" = "coach"
"tags[4].description" = "A reward program provides the details for a rewards program for a group. Different rewards programs can be created for different periods of time specified by the start_at and end_at dates. A reward program can activated for a patient any time between these dates. An activated reward program for a patient is called a reward program activation."
"tags[4].name" = "reward program"
"tags[5].description" = "A patient is the core user of Twine."
"tags[5].name" = "patient"
"tags[6].description" = "A plan is the set of actions and associated goals for a patient."
"tags[6].name" = "plan"
"tags[7].description" = "An action is an actionable item in a patient's plan."
"tags[7].name" = "action"
"tags[8].description" = "A bundle is a collection of actions (an action plan) in a patient's plan summary."
"tags[8].name" = "bundle"
"tags[9].description" = "A metric is a quantitative result for a patient. For example, vital signs, lab results, etc. are all metrics."
"tags[9].name" = "metric"
"x-tagGroups.length" = 3
"x-tagGroups[0].name" = "Authentication (oauth)"
"x-tagGroups[0].tags.length" = 1
"x-tagGroups[0].tags[0]" = "oauth"
"x-tagGroups[1].name" = "Admin"
"x-tagGroups[1].tags.length" = 4
"x-tagGroups[1].tags[0]" = "organization"
"x-tagGroups[1].tags[1]" = "group"
"x-tagGroups[1].tags[2]" = "coach"
"x-tagGroups[1].tags[3]" = "reward program"
"x-tagGroups[2].name" = "Patient Health Data"
"x-tagGroups[2].tags.length" = 10
"x-tagGroups[2].tags[0]" = "patient"
"x-tagGroups[2].tags[1]" = "plan"
"x-tagGroups[2].tags[2]" = "action"
"x-tagGroups[2].tags[3]" = "bundle"
"x-tagGroups[2].tags[4]" = "metric"
"x-tagGroups[2].tags[5]" = "reward program activation"
"x-tagGroups[2].tags[6]" = "reward"
"x-tagGroups[2].tags[7]" = "reward earning"
"x-tagGroups[2].tags[8]" = "reward earning fulfillment"
"x-tagGroups[2].tags[9]" = "email history"
