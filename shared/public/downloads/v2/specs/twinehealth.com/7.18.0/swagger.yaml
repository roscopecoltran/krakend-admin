swagger: '2.0'
schemes:
  - https
host: api.twinehealth.com
basePath: /pub
info:
  contact:
    email: apiteam@twinehealth.com
  description: |
    # Overview
    The Twine Health API is RESTful API. The requests and responses are formated according to the [JSON API](http://jsonapi.org/format/1.0/) specification.

    In addition to this documentation, we also provide an [OpenAPI](https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md) "yaml" file describing the API: [Twine API Specification](swagger.yaml).

    # Authentication
    Authentication for the Twine API is based on the [OAuth 2.0 Authorization Framework](https://tools.ietf.org/html/rfc6749). Twine currently supports grant types of **client_credentials** and **refresh_token**.

    See [POST /oauth/token](#operation/createToken) for details on the request and response formats.
    <!-- ReDoc-Inject: <security-definitions> -->
  title: Twine
  version: 7.18.0
  x-apisguru-categories:
    - support
  x-logo:
    url: 'https://api.apis.guru/v2/cache/logo/http_developer.twinehealth.com_images_twinehealth_hz_4color.png'
  x-origin:
    - format: swagger
      url: 'https://raw.githubusercontent.com/TwineHealth/TwineDeveloperDocs/master/spec/swagger.yaml'
      version: '2.0'
  x-preferred: true
  x-providerName: twinehealth.com
consumes:
  - application/vnd.api+json
produces:
  - application/vnd.api+json
securityDefinitions:
  twine_auth:
    authorizationUrl: 'https://api.twinehealth.com/pub/oauth/dialog'
    description: |
      Get access to data while protecting your account credentials.
      OAuth2 is also a safer and more secure way to give you access.
    flow: implicit
    scopes:
      group: access patients and data within a group
      organization: access patients and data within an organization
    type: oauth2
tags:
  - description: Authentication operations
    name: oauth
  - description: An organization is a Twine customer. No data is accessible across organizations.
    name: organization
  - description: 'A group is a cohort of patients within an organization. The creation of groups allows for the segmentation of dashboards and analytics. For example, a group might correspond to the patients in a particular practice or the employees of a particular employer.'
    name: group
  - description: A coach is a person that supports a patient
    name: coach
  - description: A reward program provides the details for a rewards program for a group. Different rewards programs can be created for different periods of time specified by the start_at and end_at dates. A reward program can activated for a patient any time between these dates. An activated reward program for a patient is called a reward program activation.
    name: reward program
  - description: A patient is the core user of Twine.
    name: patient
  - description: A plan is the set of actions and associated goals for a patient.
    name: plan
  - description: An action is an actionable item in a patient's plan.
    name: action
  - description: A bundle is a collection of actions (an action plan) in a patient's plan summary.
    name: bundle
  - description: 'A metric is a quantitative result for a patient. For example, vital signs, lab results, etc. are all metrics.'
    name: metric
  - description: A reward program activation is the activation of a reward program for a specific patient.
    name: reward program activation
  - description: A reward allocates a portion of the budget from the reward program activation for achieving a particular goal and sets a target date.
    name: reward
  - description: A reward earning specifies the portion of a reward that was earned and at what date.
    name: reward earning
  - description: A reward earning fulfillment specifies the portion of a reward earning that was fulfilled and at what date.
    name: reward earning fulfillment
  - description: Email history represents a single email that was sent using twine
    name: email history
paths:
  /action:
    post:
      description: Create a plan action
      operationId: createAction
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/CreateActionRequest'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/CreateActionResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/CreateOrUpdateErrorResponse'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/CreateOrUpdateErrorResponse'
        '409':
          description: Invalid Request
          schema:
            $ref: '#/definitions/CreateOrUpdateErrorResponse'
      summary: Create action
      tags:
        - action
  '/action/{id}':
    get:
      description: Get a health action from a patient's plan.
      operationId: fetchAction
      parameters:
        - description: Action identifier
          in: path
          name: id
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/FetchActionResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/FetchErrorResponse'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/FetchErrorResponse'
      summary: Get an action
      tags:
        - action
    patch:
      description: Updte a health action from a patient's plan.
      operationId: updateAction
      parameters:
        - description: Action identifier
          in: path
          name: id
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/UpdateActionRequest'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/UpdateActionResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/FetchErrorResponse'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/FetchErrorResponse'
        '409':
          description: Invalid Request
          schema:
            $ref: '#/definitions/CreateOrUpdateErrorResponse'
      summary: Update an action
      tags:
        - action
  /bundle:
    post:
      description: Create a bundle in a patient's plan
      operationId: createBundle
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/CreateBundleRequest'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/CreateBundleResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/CreateOrUpdateErrorResponse'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/CreateOrUpdateErrorResponse'
        '409':
          description: Invalid Request
          schema:
            $ref: '#/definitions/CreateOrUpdateErrorResponse'
      summary: Create bundle
      tags:
        - bundle
  '/bundle/{id}':
    get:
      description: Get a bundle from a patient's plan.
      operationId: fetchBundle
      parameters:
        - description: Bundle identifier
          in: path
          name: id
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/FetchBundleResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/FetchErrorResponse'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/FetchErrorResponse'
      summary: Get a bundle
      tags:
        - bundle
    patch:
      description: Updte a bundle from a patient's plan.
      operationId: updateBundle
      parameters:
        - description: Bundle identifier
          in: path
          name: id
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/UpdateBundleRequest'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/UpdateBundleResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/FetchErrorResponse'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/FetchErrorResponse'
        '409':
          description: Invalid Request
          schema:
            $ref: '#/definitions/CreateOrUpdateErrorResponse'
      summary: Update a bundle
      tags:
        - bundle
  '/coach/{id}':
    get:
      description: Get a coach record by id.
      operationId: fetchCoach
      parameters:
        - description: Coach identifier
          in: path
          name: id
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/FetchCoachResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/FetchErrorResponse'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/FetchErrorResponse'
      summary: Get a coach
      tags:
        - coach
  /email_history:
    get:
      description: Get a list of email histories
      operationId: fetchEmailHistories
      parameters:
        - description: 'Twine user id of email recipient. Required if filter[sender] is not defined.'
          in: query
          name: 'filter[receiver]'
          type: string
        - description: 'Twine user id of email sender. Required if filter[receiver] is not defined.'
          in: query
          name: 'filter[sender]'
          type: string
        - description: Type of email
          in: query
          name: 'filter[emailType]'
          type: string
        - description: |
            valid sorts:
              * send_time - ascending by send_time
              * -send_time - descending by send_time
          enum:
            - send_time
            - '-send_time'
          in: query
          name: sort
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/FetchEmailHistoriesResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/FetchErrorResponse'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/FetchErrorResponse'
        '409':
          description: Invalid Request
          schema:
            $ref: '#/definitions/FetchErrorResponse'
      summary: List email histories
      tags:
        - email history
  '/email_history/{id}':
    get:
      description: Get an email history by id
      operationId: fetchEmailHistory
      parameters:
        - description: EmailHistory identifier
          in: path
          name: id
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/FetchEmailHistoryResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/FetchErrorResponse'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/FetchErrorResponse'
      summary: Get an email history
      tags:
        - email history
  /group:
    get:
      description: Get a list of groups matching the specified filters.
      operationId: fetchGroups
      parameters:
        - description: Organization identifier
          in: query
          name: 'filter[organization]'
          required: true
          type: string
        - description: Group name
          in: query
          name: 'filter[name]'
          required: false
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/FetchGroupsResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/FetchErrorResponse'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/FetchErrorResponse'
      summary: List groups
      tags:
        - group
    post:
      description: Create a group record.
      operationId: createGroup
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/CreateGroupRequest'
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/CreateGroupResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/CreateOrUpdateErrorResponse'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/CreateOrUpdateErrorResponse'
        '409':
          description: Invalid Request
          schema:
            $ref: '#/definitions/CreateOrUpdateErrorResponse'
      summary: Create a group
      tags:
        - group
  '/group/{id}':
    get:
      description: Get a group record by id.
      operationId: fetchGroup
      parameters:
        - description: Group identifier
          in: path
          name: id
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/FetchGroupResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/FetchErrorResponse'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/FetchErrorResponse'
      summary: Get a group
      tags:
        - group
  /oauth/token:
    post:
      consumes:
        - application/vnd.api+json
        - application/json
      description: |
        Create an OAuth 2.0 Bearer token. A valid bearer token is required for all other API requests.

        Be sure to set the header `Content-Type: "application/vnd.api+json"`. Otherwise, you will get an error
        403 Forbidden. Using `Content-Type: "application/json"` is permitted (to support older oauth clients) but when
        using `application/json` the body should have a body in the following format instead of nesting under
        `data.attributes`:
        ```
        {
          "grant_type": "client_credentials",
          "client_id": "95c78ab2-167f-40b8-8bec-8398d4b87454",
          "client_secret": "35d18dc9-a3dd-4948-b787-063a490b9354"
        }
        ```
      operationId: createToken
      parameters:
        - description: List of related resources to include in the response
          enum:
            - groups
            - organization
          in: query
          name: include
          required: false
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/CreateTokenRequest'
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/CreateTokenResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/CreateOrUpdateErrorResponse'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/CreateOrUpdateErrorResponse'
        '409':
          description: Invalid Request
          schema:
            $ref: '#/definitions/CreateOrUpdateErrorResponse'
      security:
        - twine_auth:
            - group
            - organization
      summary: Create an oauth token
      tags:
        - oauth
  '/oauth/token/{id}/groups':
    get:
      description: Get the list of groups a token can be used to access.
      operationId: fetchTokenGroups
      parameters:
        - description: Token identifier
          in: path
          name: id
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/FetchGroupsResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/FetchErrorResponse'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/FetchErrorResponse'
      security:
        - twine_auth:
            - group
            - organization
      summary: Get the groups for a token
      tags:
        - oauth
  '/oauth/token/{id}/organization':
    get:
      description: Get the organization a token can be used to access.
      operationId: fetchTokenOrganization
      parameters:
        - description: Token identifier
          in: path
          name: id
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/FetchOrganizationResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/FetchErrorResponse'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/FetchErrorResponse'
      summary: Get the organization for a token
      tags:
        - oauth
  '/organization/{id}':
    get:
      description: Get an organization record by id.
      operationId: fetchOrganization
      parameters:
        - description: Organization identifier
          in: path
          name: id
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/FetchOrganizationResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/FetchErrorResponse'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/FetchErrorResponse'
      summary: Get an organization
      tags:
        - organization
  /patient:
    get:
      description: Get a list of patients.
      operationId: fetchPatients
      parameters:
        - description: Comma-separated list of Twine group ids (either a group or organization filter is required)
          in: query
          name: 'filter[groups]'
          type: string
        - description: Twine organization id (either a group or organization filter is required)
          in: query
          name: 'filter[organization]'
          type: string
        - description: 'Identifier system (example: "MyEHR") - requires a "filter[identifier][value]" parameter'
          in: query
          name: 'filter[identifier][system]'
          type: string
        - description: 'Identifier value (example: "12345") - requires a "filter[identifier][system]" parameter'
          in: query
          name: 'filter[identifier][value]'
          type: string
        - description: 'If not specified, return all patients. If set to ''true'' return only archived patients, if set to ''false'', return only patients who are not archived.'
          in: query
          name: 'filter[archived]'
          type: boolean
        - default: 1
          description: Page number
          in: query
          name: 'page[number]'
          required: false
          type: integer
        - default: 10
          description: Page size
          in: query
          maximum: 50
          name: 'page[size]'
          required: false
          type: integer
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/FetchPatientsResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/FetchErrorResponse'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/FetchErrorResponse'
        '409':
          description: Invalid Request
          schema:
            $ref: '#/definitions/FetchErrorResponse'
      summary: List patients
      tags:
        - patient
    post:
      description: |
        Create a patient record.

        Example for creating a patient with a group specified using `meta.query` instead of `id`:

        ```JSON
        {
          "data": {
            "type": "patient",
            "attributes": {
              "first_name": "Andrew",
              "last_name": "Smith"
            },
            "relationships": {
              "groups": {
                "data": [
                  {
                    "type": "group",
                    "meta": {
                      "query": {
                        "organization": "58c88de7c93eb96357a87033",
                        "name": "Patients Lead"
                      }
                    }
                  }
                ]
              }
            }
          }
        }
        ```
      operationId: createPatient
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/CreatePatientRequest'
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/CreatePatientResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/CreateOrUpdateErrorResponse'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/CreateOrUpdateErrorResponse'
        '409':
          description: Invalid Request
          schema:
            $ref: '#/definitions/CreateOrUpdateErrorResponse'
      summary: Create a patient
      tags:
        - patient
  '/patient/{id}':
    get:
      description: Gets a patient record by id.
      operationId: fetchPatient
      parameters:
        - description: Patient identifier
          in: path
          name: id
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/FetchPatientResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/FetchErrorResponse'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/FetchErrorResponse'
      summary: Get a patient
      tags:
        - patient
    patch:
      description: Update a patient record.
      operationId: updatePatient
      parameters:
        - description: Patient identifier
          in: path
          name: id
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/UpdatePatientRequest'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/UpdatePatientResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/CreateOrUpdateErrorResponse'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/CreateOrUpdateErrorResponse'
        '409':
          description: Invalid Request
          schema:
            $ref: '#/definitions/CreateOrUpdateErrorResponse'
      summary: Update a patient
      tags:
        - patient
  '/patient/{id}/coaches':
    get:
      description: Get the list of coaches for a patient.
      operationId: fetchPatientCoaches
      parameters:
        - description: Patient identifier
          in: path
          name: id
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/FetchCoachesResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/FetchErrorResponse'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/FetchErrorResponse'
      summary: List coaches for a patient
      tags:
        - patient
  '/patient/{id}/groups':
    get:
      description: Get the list of groups for a patient.
      operationId: fetchPatientGroups
      parameters:
        - description: Patient identifier
          in: path
          name: id
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/FetchGroupsResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/FetchErrorResponse'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/FetchErrorResponse'
      summary: List groups for a patient
      tags:
        - patient
  /patient_health_metric:
    get:
      description: Get a list of patient health metrics.
      operationId: fetchPatientHealthMetrics
      parameters:
        - description: Filter the patient health metrics for a specified patient
          in: query
          name: 'filter[patient]'
          required: true
          type: string
        - default: 1
          description: Page number
          in: query
          name: 'page[number]'
          required: false
          type: integer
        - default: 10
          description: Page size
          in: query
          maximum: 50
          name: 'page[size]'
          required: false
          type: integer
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/FetchPatientHealthMetricResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/FetchErrorResponse'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/FetchErrorResponse'
        '409':
          description: Invalid Request
          schema:
            $ref: '#/definitions/FetchErrorResponse'
      summary: List patient health metrics
      tags:
        - metric
    post:
      description: |
        Create one or more patient health metrics.

        Example for creating a patient health result with a patient specified using `meta.query` instead of `id`:

        ```JSON
          {
            "data": {
              "type": "patient_health_metric",
               "attributes": {
                 "code": {
                   "system": "LOINC",
                   "value": "13457-7"
                 },
                 "type": "ldl_cholesterol",
                 "occurred_at": "2017-03-14T11:00:57.000Z",
                 "value": "121",
                 "unit": "mg/dl"
              },
              "relationships": {
                "patient": {
                  "data": {
                    "type": "patient",
                    "meta": {
                      "query": {
                        "identifier": {
                          "system": "medical-record-number",
                          "value": "121212"
                        },
                        "organization": "58c4554710123c5c40dbab81"
                      }
                    }
                  }
                }
              }
            }
          }
        ```
      operationId: createPatientHealthMetric
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/CreatePatientHealthMetricRequest'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/CreatePatientHealthMetricResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/CreateOrUpdateErrorResponse'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/CreateOrUpdateErrorResponse'
        '409':
          description: Invalid Request
          schema:
            $ref: '#/definitions/CreateOrUpdateErrorResponse'
      summary: Create patient health metrics
      tags:
        - metric
  '/patient_health_metric/{id}':
    get:
      description: Get the plan summary for a patient.
      operationId: fetchPatientHealthMetric
      parameters:
        - description: Patient health metric identifier
          in: path
          name: id
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/FetchPatientHealthMetricResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/FetchErrorResponse'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/FetchErrorResponse'
      summary: Get a patient health metric
      tags:
        - metric
  /patient_plan_summary:
    get:
      description: Get a list of patient plan summaries
      operationId: fetchPatientPlanSummaries
      parameters:
        - description: Patient id to fetch plan summary for
          in: query
          name: 'filter[patient]'
          required: true
          type: string
        - description: List of related resources to include in the response
          enum:
            - actions
            - bundles
            - patient
            - current_results
          in: query
          name: include
          required: false
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/FetchPatientPlanSummariesResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/FetchErrorResponse'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/FetchErrorResponse'
      summary: List patient plan summaries
      tags:
        - plan
  '/patient_plan_summary/{id}':
    get:
      description: Get the plan summary for a patient.
      operationId: fetchPatientPlanSummary
      parameters:
        - description: Plan summary identifier
          in: path
          name: id
          required: true
          type: string
        - description: List of related resources to include in the response
          enum:
            - actions
            - bundles
            - patient
            - current_results
          in: query
          name: include
          required: false
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/FetchPatientPlanSummaryResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/FetchErrorResponse'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/FetchErrorResponse'
      summary: Get the plan summary for a patient
      tags:
        - plan
    patch:
      description: Update a plan summary record for a patient.
      operationId: updatePatientPlanSummary
      parameters:
        - description: Plan summary identifier
          in: path
          name: id
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/UpdatePatientPlanSummaryRequest'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/UpdatePatientPlanSummaryResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/CreateOrUpdateErrorResponse'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/CreateOrUpdateErrorResponse'
        '409':
          description: Invalid Request
          schema:
            $ref: '#/definitions/CreateOrUpdateErrorResponse'
      summary: Update a plan summary
      tags:
        - plan
  /reward:
    get:
      description: Get a list of rewards matching the specified filters.
      operationId: fetchRewards
      parameters:
        - description: Patient identifier
          in: query
          name: 'filter[patient]'
          required: true
          type: string
        - description: Reward program activation identifier
          in: query
          name: 'filter[reward_program_activation]'
          type: string
        - description: Thread identifier
          in: query
          name: 'filter[thread]'
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/FetchRewardsResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/FetchErrorResponse'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/FetchErrorResponse'
      summary: List rewards
      tags:
        - reward
    post:
      description: Create a reward for a patient.
      operationId: createReward
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/CreateRewardRequest'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/CreateRewardResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/CreateOrUpdateErrorResponse'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/CreateOrUpdateErrorResponse'
        '409':
          description: Invalid Request
          schema:
            $ref: '#/definitions/CreateOrUpdateErrorResponse'
      summary: Create a reward
      tags:
        - reward
  '/reward/{id}':
    get:
      description: Get a reward record by id.
      operationId: fetchReward
      parameters:
        - description: Reward identifier
          in: path
          name: id
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/FetchRewardResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/FetchErrorResponse'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/FetchErrorResponse'
      summary: Get a reward
      tags:
        - reward
  /reward_earning:
    get:
      description: Get a list of reward earnings matching the specified filters.
      operationId: fetchRewardEarnings
      parameters:
        - description: Group identifiers
          in: query
          name: 'filter[groups]'
          required: true
          type: string
        - description: Patient identifier
          in: query
          name: 'filter[patient]'
          required: true
          type: string
        - description: 'If true, only returns those reward earnings for which ready_for_fulfillment is true and fulfilled_at is null. If false, only returns those reward earnings for which ready_for_fulfillment is false and fulfilled_at is null.'
          in: query
          name: 'filter[ready_for_fulfillment]'
          type: boolean
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/FetchRewardEarningsResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/FetchErrorResponse'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/FetchErrorResponse'
      summary: List reward earnings
      tags:
        - reward earning
    post:
      description: Create a reward earning for a reward. There can only be one earning for a reward. It is possilble to create multiple reward earnings simultaneously by providing and array of reward earnings in the data property.
      operationId: createRewardEarning
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/CreateRewardEarningRequest'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/CreateRewardEarningResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/CreateOrUpdateErrorResponse'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/CreateOrUpdateErrorResponse'
        '409':
          description: Invalid Request
          schema:
            $ref: '#/definitions/CreateOrUpdateErrorResponse'
      summary: Create a reward earning
      tags:
        - reward earning
  '/reward_earning/{id}':
    get:
      description: Get a reward earning record by id.
      operationId: fetchRewardEarning
      parameters:
        - description: Reward earning identifier
          in: path
          name: id
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/FetchRewardEarningResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/FetchErrorResponse'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/FetchErrorResponse'
      summary: Get a reward earning
      tags:
        - reward earning
  /reward_earning_fulfillment:
    get:
      description: Get a list of reward earning fulfillments matching the specified filters.
      operationId: fetchRewardEarningFulfillments
      parameters:
        - description: Patient identifier
          in: query
          name: 'filter[patient]'
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/FetchRewardEarningFulfillmentsResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/FetchErrorResponse'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/FetchErrorResponse'
      summary: List reward earning fulfillments
      tags:
        - reward earning fulfillment
    post:
      description: Create a reward earning fulfillment for a reward earning. There can only be one fulfillment for each earning.
      operationId: createRewardEarningFulfillment
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/CreateRewardEarningFulfillmentRequest'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/CreateRewardEarningFulfillmentResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/CreateOrUpdateErrorResponse'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/CreateOrUpdateErrorResponse'
        '409':
          description: Invalid Request
          schema:
            $ref: '#/definitions/CreateOrUpdateErrorResponse'
      summary: Create a reward earning fulfillment
      tags:
        - reward earning fulfillment
  '/reward_earning_fulfillment/{id}':
    get:
      description: Get a reward earning fulfillment record by id.
      operationId: fetchRewardEarningFulfillment
      parameters:
        - description: Reward earning fulfillment identifier
          in: path
          name: id
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/FetchRewardEarningFulfillmentResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/FetchErrorResponse'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/FetchErrorResponse'
      summary: Get a reward earning fulfillment
      tags:
        - reward earning fulfillment
  /reward_program:
    get:
      description: Get a list of reward programs matching the specified filters.
      operationId: fetchRewardPrograms
      parameters:
        - description: Comma-separated list of group identifiers
          in: query
          name: 'filter[groups]'
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/FetchRewardProgramsResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/FetchErrorResponse'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/FetchErrorResponse'
      summary: List reward programs
      tags:
        - reward program
    post:
      description: Create a reward program for a group.
      operationId: createRewardProgram
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/CreateRewardProgramRequest'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/CreateRewardProgramResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/CreateOrUpdateErrorResponse'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/CreateOrUpdateErrorResponse'
        '409':
          description: Invalid Request
          schema:
            $ref: '#/definitions/CreateOrUpdateErrorResponse'
      summary: Create a reward program
      tags:
        - reward program
  '/reward_program/{id}':
    get:
      description: Get a reward program record by id.
      operationId: fetchRewardProgram
      parameters:
        - description: Reward program identifier
          in: path
          name: id
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/FetchRewardProgramResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/FetchErrorResponse'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/FetchErrorResponse'
      summary: Get a reward program
      tags:
        - reward program
  '/reward_program/{id}/group':
    get:
      description: Get the group related to a reward program.
      operationId: fetchRewardProgramGroup
      parameters:
        - description: Reward program identifier
          in: path
          name: id
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/FetchGroupsResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/FetchErrorResponse'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/FetchErrorResponse'
      summary: Get group for a reward program
      tags:
        - reward program
  /reward_program_activation:
    get:
      description: Get a list of reward program activations matching the specified filters.
      operationId: fetchRewardProgramActivations
      parameters:
        - description: Patient identifier
          in: query
          name: 'filter[patient]'
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/FetchRewardProgramActivationsResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/FetchErrorResponse'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/FetchErrorResponse'
      summary: List reward program activations
      tags:
        - reward program activation
    post:
      description: Create a reward program activation for a patient. There can only be one activation for a patient for a given reward program.
      operationId: createRewardProgramActivation
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/CreateRewardProgramActivationRequest'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/CreateRewardProgramActivationResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/CreateOrUpdateErrorResponse'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/CreateOrUpdateErrorResponse'
        '409':
          description: Invalid Request
          schema:
            $ref: '#/definitions/CreateOrUpdateErrorResponse'
      summary: Create a reward program activation
      tags:
        - reward program activation
  '/reward_program_activation/{id}':
    get:
      description: Get a reward program activationrecord by id.
      operationId: fetchRewardProgramActivation
      parameters:
        - description: Reward program activation identifier
          in: path
          name: id
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/FetchRewardProgramActivationResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/FetchErrorResponse'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/FetchErrorResponse'
      summary: Get a reward program activation
      tags:
        - reward program activation
definitions:
  ActionMetric:
    properties:
      goal:
        type: object
      metric_type:
        type: string
      unit:
        type: string
      validations:
        properties:
          maximum:
            properties:
              unit:
                type: string
              value:
                type: number
            type: object
          minimum:
            properties:
              unit:
                type: string
              value:
                type: number
            type: object
        type: object
    type: object
  ActionResource:
    properties:
      attributes:
        properties:
          _thread:
            type: string
          adherence:
            properties:
              complete:
                type: integer
              due:
                type: integer
              streak:
                properties:
                  count:
                    type: integer
                  updated_at:
                    format: dateTime
                    type: string
                type: object
            readOnly: true
            type: object
          details:
            additionalProperties: true
            type: object
          effective_from:
            format: dateTime
            type: string
          effective_to:
            format: dateTime
            type: string
          frequency_goal:
            properties:
              weeks:
                properties:
                  days:
                    items:
                      description: 'Days of week that the action is scheduled for. Zero-indexed, ex 0 represents Sunday, etc.'
                      enum:
                        - 0
                        - 1
                        - 2
                        - 3
                        - 4
                        - 5
                        - 6
                      maxItems: 7
                      type: integer
                    type: array
                type: object
            type: object
          identifiers:
            items:
              $ref: '#/definitions/Identifier'
            type: array
          intake:
            additionalProperties: true
            type: object
          metric_required:
            type: boolean
          metrics:
            items:
              $ref: '#/definitions/ActionMetric'
            type: array
          static_title:
            readOnly: true
            type: string
          title:
            type: string
          tracking:
            type: boolean
          type:
            enum:
              - other_lifestyle
            type: string
          windows:
            items:
              $ref: '#/definitions/ActionWindow'
            type: array
        required:
          - type
          - title
          - effective_from
        type: object
      id:
        type: string
      relationships:
        properties:
          plan:
            properties:
              data:
                properties:
                  id:
                    type: string
                  type:
                    type: string
                type: object
              links:
                type: object
            type: object
        type: object
      type:
        type: string
    required:
      - type
      - id
    type: object
  ActionWindow:
    properties:
      _id:
        type: string
      title:
        type: string
      type:
        type: string
    required:
      - type
    type: object
  Address:
    properties:
      city:
        example: Cambridge
        type: string
      country:
        type: string
      district:
        type: string
      lines:
        example:
          - 1234 Any St.
        items:
          type: string
        type: array
      postal_code:
        example: 02138
        type: string
      state:
        example: MA
        type: string
      text:
        type: string
      type:
        type: string
      use:
        type: string
    type: object
  ArchiveHistory:
    properties:
      archived:
        example: true
        type: boolean
      modified_at:
        example: '2016-06-03T13:15:22.000Z'
        format: dateTime
        type: string
      notes:
        example: Patient called requesting opt out of coaching
        type: string
      reason:
        example: Opted out of coaching
        type: string
    type: object
  BundleResource:
    properties:
      attributes:
        properties:
          _thread:
            type: string
          effective_from:
            format: dateTime
            type: string
          effective_to:
            format: dateTime
            type: string
          title:
            type: string
          type:
            type: string
        required:
          - type
          - title
          - effective_from
        type: object
      id:
        type: string
      relationships:
        properties:
          actions:
            properties:
              data:
                properties:
                  id:
                    type: string
                  type:
                    type: string
                type: object
              links:
                type: object
            type: object
          plan:
            properties:
              data:
                properties:
                  id:
                    type: string
                  type:
                    type: string
                type: object
              links:
                type: object
            type: object
        type: object
      type:
        type: string
    required:
      - type
      - id
    type: object
  CoachResource:
    properties:
      attributes:
        properties:
          first_name:
            example: Clarisa
            type: string
          last_name:
            example: Rivera
            type: string
        type: object
      id:
        example: 57b36e3c04ad8c2224f2af38
        type: string
      links:
        properties:
          self:
            example: /coach/57b36e3c04ad8c2224f2af38
            pattern: '/coach/[0-9a-z]+'
            type: string
        readOnly: true
        required:
          - self
        type: object
      type:
        enum:
          - coach
        example: coach
        type: string
    required:
      - id
      - type
      - attributes
    type: object
  CollectionResponseLinks:
    properties:
      last:
        type: string
      next:
        type: string
      prev:
        type: string
      self:
        type: string
    type: object
  CreateActionRequest:
    example:
      data:
        attributes:
          effective_from: '2017-02-20T11:12:13.000Z'
          frequency_goal:
            weeks:
              days:
                - 0
          metrics:
            - goal:
                data:
                  diastolic:
                    unit: mmHg
                    value: 95
                  systolic:
                    unit: mmHg
                    value: 150
              metric_type: blood_pressure
              unit: mmHg
          title: Record Blood Pressure
          type: blood_pressure
        relationships:
          bundles:
            data:
              - id: 58aacf0d076adcef394bac30
                type: bundle
          plan:
            data:
              id: 58aacf0d076adcef394bac35
              type: patient_plan_summary
        type: action
    properties:
      data:
        $ref: '#/definitions/ActionResource'
    required:
      - data
    type: object
  CreateActionResponse:
    example:
      data:
        attributes:
          _thread: blood_pressure
          adherence:
            complete: 0
            due: 0
            streak:
              count: 0
          created_at: '2017-02-20T11:12:13.000Z'
          created_by: 596541ec076adcef394bac2d
          effective_from: '2017-02-20T11:12:13.000Z'
          frequency_goal:
            weeks:
              days:
                - 0
          frequency_goal_prorated: 0
          identifiers: []
          metric_required: false
          metrics:
            - _id: 58aacf0d076adcef394bac37
              accepted_values: []
              goal:
                data:
                  diastolic:
                    unit: mmHg
                    value: 95
                  systolic:
                    unit: mmHg
                    value: 150
              metric_type: blood_pressure
              unit: mmHg
          options: []
          title: Record Blood Pressure
          tracking: true
          type: blood_pressure
          updated_at: '2017-02-20T11:12:13.000Z'
          updated_by: 596541ec076adcef394bac2d
          windows: []
        id: 58aacf0d076adcef394bac36
        links:
          self: /action/58aacf0d076adcef394bac36
        relationships:
          bundles:
            data:
              - id: 58aacf0d076adcef394bac30
                type: bundle
            links:
              related: /action/58aacf0d076adcef394bac36/bundles
          plan:
            data:
              id: 58aacf0d076adcef394bac35
              type: patient_plan_summary
            links:
              related: /action/58aacf0d076adcef394bac36/plan
        type: action
      included: []
      meta:
        req_id: 014ea6d2-4717-4915-b4bc-98454180614e
    properties:
      data:
        $ref: '#/definitions/ActionResource'
      meta:
        $ref: '#/definitions/CreateOrUpdateMetaResponse'
    required:
      - data
    type: object
  CreateBundleRequest:
    properties:
      data:
        $ref: '#/definitions/BundleResource'
    required:
      - data
    type: object
  CreateBundleResponse:
    properties:
      data:
        $ref: '#/definitions/BundleResource'
      meta:
        $ref: '#/definitions/CreateOrUpdateMetaResponse'
    required:
      - data
    type: object
  CreateGroupRequest:
    example:
      data:
        attributes:
          name: New Group
        type: group
    properties:
      data:
        $ref: '#/definitions/GroupResource'
    required:
      - data
    type: object
  CreateGroupResponse:
    example:
      data:
        attributes:
          name: New Group
        id: 5817acae6f5316c0d05ba8b8
        links:
          self: /pub/group/5817acae6f5316c0d05ba8b8
        type: group
      meta:
        req_id: 6ac6d0f2-00b2-4031-8c35-97b2bfb0aced
    properties:
      data:
        $ref: '#/definitions/GroupResource'
      meta:
        $ref: '#/definitions/CreateOrUpdateMetaResponse'
    required:
      - data
    type: object
  CreateOrUpdateErrorResponse:
    example:
      errors:
        - code: Unauthorized
          detail: A valid bearer token is required
          status: '401'
      meta:
        req_id: d07c8b12-c95e-4a06-8424-92aac94bb445
    properties:
      errors:
        $ref: '#/definitions/Error'
      meta:
        $ref: '#/definitions/CreateOrUpdateMetaResponse'
    type: object
  CreateOrUpdateMetaResponse:
    properties:
      ignored:
        items:
          type: string
        type: array
      req_id:
        type: string
    type: object
  CreatePatientHealthMetricRequest:
    properties:
      data:
        $ref: '#/definitions/PatientHealthMetricResource'
      meta:
        properties:
          ignore_duplicates:
            description: |
              If `true`, the patient health metric will be ignored if there is an existing patient health metric for
              the same patient, with the same `type` and same `occurred_at`.
            type: boolean
        type: object
    required:
      - data
    type: object
  CreatePatientHealthMetricResponse:
    properties:
      data:
        $ref: '#/definitions/PatientHealthMetricResource'
      meta:
        $ref: '#/definitions/CreateOrUpdateMetaResponse'
    required:
      - data
    type: object
  CreatePatientRequest:
    example:
      data:
        attributes:
          first_name: Jack
          last_name: Frost
        relationships:
          groups:
            data:
              - id: 5755db2a3db4179179999acf
                type: group
        type: patient
    properties:
      data:
        $ref: '#/definitions/PatientCreateResource'
    required:
      - data
    type: object
  CreatePatientResponse:
    example:
      data:
        attributes:
          addresses: []
          archive_history: []
          archived: false
          first_name: Jack
          identifiers: []
          last_name: Frost
          phone_numbers: []
          updated_at: '2016-11-01T01:07:33.121Z'
        id: 5817ead56f5316c0d05ba8bf
        links:
          self: /pub/patient/5817ead56f5316c0d05ba8bf
          twine_web_app: 'http://10.0.1.55:9000/#/coach/patient/5817ead56f5316c0d05ba8bf'
        relationships:
          coaches:
            data: []
            links:
              related: /pub/patient/5817ead56f5316c0d05ba8bf/coaches
          groups:
            data:
              - id: 5755db2a3db4179179999acf
                type: group
            links:
              related: /pub/patient/5817ead56f5316c0d05ba8bf/groups
        type: patient
      included: []
      meta:
        req_id: 5b813ad3-cabc-418f-add4-1e53bc69f7cb
    properties:
      data:
        $ref: '#/definitions/PatientResource'
      meta:
        $ref: '#/definitions/CreateOrUpdateMetaResponse'
    required:
      - data
    type: object
  CreateRewardEarningFulfillmentRequest:
    properties:
      data:
        $ref: '#/definitions/RewardEarningFulfillmentResource'
    required:
      - data
    type: object
  CreateRewardEarningFulfillmentResponse:
    properties:
      data:
        $ref: '#/definitions/RewardEarningFulfillmentResource'
      meta:
        $ref: '#/definitions/CreateOrUpdateMetaResponse'
    required:
      - data
    type: object
  CreateRewardEarningRequest:
    properties:
      data:
        $ref: '#/definitions/RewardEarningResource'
    required:
      - data
    type: object
  CreateRewardEarningResponse:
    properties:
      data:
        $ref: '#/definitions/RewardEarningResource'
      meta:
        $ref: '#/definitions/CreateOrUpdateMetaResponse'
    required:
      - data
    type: object
  CreateRewardProgramActivationRequest:
    properties:
      data:
        $ref: '#/definitions/RewardProgramActivationResource'
    required:
      - data
    type: object
  CreateRewardProgramActivationResponse:
    properties:
      data:
        $ref: '#/definitions/RewardProgramActivationResource'
      meta:
        $ref: '#/definitions/CreateOrUpdateMetaResponse'
    required:
      - data
    type: object
  CreateRewardProgramRequest:
    properties:
      data:
        $ref: '#/definitions/RewardProgramResource'
    required:
      - data
    type: object
  CreateRewardProgramResponse:
    properties:
      data:
        $ref: '#/definitions/RewardProgramResource'
      meta:
        $ref: '#/definitions/CreateOrUpdateMetaResponse'
    required:
      - data
    type: object
  CreateRewardRequest:
    properties:
      data:
        $ref: '#/definitions/RewardResource'
    required:
      - data
    type: object
  CreateRewardResponse:
    properties:
      data:
        $ref: '#/definitions/RewardResource'
      meta:
        $ref: '#/definitions/CreateOrUpdateMetaResponse'
    required:
      - data
    type: object
  CreateTokenRequest:
    example:
      data:
        attributes:
          client_id: 95c78ab2-167f-40b8-8bec-8398d4b87454
          client_secret: 35d18dc9-a3dd-4948-b787-063a490b9354
          grant_type: client_credentials
        type: oauth/token
    properties:
      data:
        properties:
          attributes:
            properties:
              client_id:
                description: Contact Twine to get a client id and secret.
                example: 19391dc5-8af8-4152-93e8-74ff9361607e
                type: string
              client_secret:
                description: Contact Twine to get a client id and secret. Secret is required if grant_type is "client_credentials"
                example: 63eca384-7a65-42e2-872b-afd3e8659d0a
                type: string
              grant_type:
                enum:
                  - refresh_token
                  - client_credentials
                example: client_credentials
                type: string
              refresh_token:
                description: Required if grant_type is "refresh_token"
                example: b7dcc4a4-593b-4410-a0c5-97ae48939396
                type: string
            required:
              - client_id
              - grant_type
            type: object
          type:
            enum:
              - token
            example: token
            type: string
        required:
          - attributes
        type: object
    required:
      - data
    type: object
  CreateTokenResponse:
    example:
      data:
        attributes:
          access_token: c1b83534-76c1-4a27-b1d4-8140e24dd7c6
          expires_in: 3601
          refresh_token: a38d192a-76fd-4b1d-954c-893c9d29c8f4
          token_type: bearer
        id: 5817a24d678a7c2cbf5df3ee
        relationships:
          groups:
            data:
              - id: 5755db2a3db4179179999acf
                type: group
            links:
              related: /pub/oauth/token/5817a24d678a7c2cbf5df3ee/groups
        type: oauth/token
      meta:
        req_id: 2de51f1a-bafa-4e48-a0d0-cd8d4a9ffb28
    properties:
      data:
        $ref: '#/definitions/TokenResource'
      included:
        items:
          $ref: '#/definitions/GroupResource'
        type: array
      meta:
        $ref: '#/definitions/CreateOrUpdateMetaResponse'
    required:
      - data
    type: object
  EmailHistoryResource:
    example:
      attributes:
        created_at: '2017-07-07T19:15:56.229Z'
        created_by: 595fd88ef4be5b1a797ff19b
        email_address: tony@example.com
        email_type: invite
        send_time: '2017-02-25T13:35:01.000Z'
        status_times:
          delivered: '2017-02-25T13:35:03.000Z'
          open: '2017-02-25T14:20:00.000Z'
          processed: '2017-02-25T13:35:02.000Z'
        twine_email_id: 576226e5-7e25-4469-b10d-2bc6a725bfbc
        updated_at: '2017-07-07T19:15:56.229Z'
        updated_by: 595fd88ef4be5b1a797ff19b
      id: 595fddec28c5041b84467592
      links:
        self: /pub/email_history/595fddec28c5041b84467592
      relationships:
        receiver:
          data:
            id: 595fddea28c5041b84466bbe
            type: patient
          links:
            related: /pub/email_history/595fddec28c5041b84467592/receiver
        sender:
          links:
            related: /pub/email_history/595fddec28c5041b84467592/sender
      type: email_history
    properties:
      attributes:
        properties:
          email_address:
            description: Address email was sent to.
            type: string
          email_type:
            description: Type of email.
            type: string
          send_time:
            description: Time email was sent.
            format: dateTime
            type: string
          status_times:
            description: Status of email. Multiple statuses may be defined. The current status is the one with the most recent date.
            properties:
              bounce:
                description: Time email was bounced.
                format: dateTime
                type: string
              click:
                description: Time email was clicked.
                format: dateTime
                type: string
              deferred:
                description: Time email was deferred.
                format: dateTime
                type: string
              delivered:
                description: Time email was delivered.
                format: dateTime
                type: string
              dropped:
                description: Time email was dropped.
                format: dateTime
                type: string
              open:
                description: Time email was opened.
                format: dateTime
                type: string
              processed:
                description: Time email was processed.
                format: dateTime
                type: string
              spamreport:
                description: Time email was reported as spam.
                format: dateTime
                type: string
              unsubscribe:
                description: Time email was unsubscribed from.
                format: dateTime
                type: string
            type: object
          twine_email_id:
            description: Unique identifier for this email.
            type: string
        type: object
      id:
        type: string
      relationships:
        properties:
          receiver:
            properties:
              data:
                properties:
                  id:
                    type: string
                  type:
                    type: string
                type: object
            type: object
          sender:
            properties:
              data:
                properties:
                  id:
                    type: string
                  type:
                    type: string
                type: object
            type: object
        type: object
      type:
        type: string
    required:
      - type
    type: object
  Error:
    properties:
      code:
        enum:
          - Forbidden
          - InvalidParameter
          - InvalidBodyParameter
          - ResourceNotFound
          - Unauthorized
          - InvalidCredentials
          - InvalidGrantType
        type: string
      detail:
        type: string
      source:
        properties:
          parameter:
            type: string
          pointer:
            type: string
        type: object
      status:
        type: string
      title:
        type: string
    type: object
  FetchActionResponse:
    example:
      data:
        attributes:
          _thread: weight
          adherence:
            complete: 1
            due: 1
            streak:
              count: 1
              updated_at: '2017-07-11T21:13:13.215Z'
          details:
            some: mixed value
          effective_from: '2017-07-10T21:13:13.212Z'
          effective_to: '2017-07-11T21:13:13.215Z'
          frequency_goal:
            weeks:
              days:
                - 0
          frequency_goal_prorated: 0
          identifiers:
            - _id: 59653f699fc8be3938f04494
              label: Super Health Actions
              system: 'http://super.health.example.com'
              value: action-0123
          metric_required: true
          metrics:
            - _id: 59653f699fc8be3938f04493
              accepted_values: []
              goal:
                data:
                  unit: lb
                  value: 210
              metric_type: weight
              unit: lb
              validations:
                maximum:
                  unit: lb
                  value: 999
                minimum:
                  unit: lb
                  value: 0
          options: []
          title: Measure Weight
          tracking: true
          type: weight
          windows:
            - _id: 59653f699fc8be3938f04492
              title: Morning
              type: morning
        id: 59653f699fc8be3938f04491
        links:
          self: /action/59653f699fc8be3938f04491
        relationships:
          bundles:
            data: []
            links:
              related: /action/59653f699fc8be3938f04491/bundles
          plan:
            links:
              related: /action/59653f699fc8be3938f04491/plan
        type: action
      included: []
      meta:
        req_id: 63bf4340-f256-400e-b391-d801d2a251f6
    properties:
      data:
        $ref: '#/definitions/ActionResource'
      meta:
        $ref: '#/definitions/FetchMetaResponse'
    required:
      - data
    type: object
  FetchBundleResponse:
    example:
      data:
        attributes:
          _actions:
            - 596535d9608f63d531b7e344
          _thread: '123'
          effective_from: '2017-07-11T20:31:25.000Z'
          effective_to: '2017-07-11T20:32:25.000Z'
          title: Weight
          type: weight
        id: 596535d9608f63d531b7e34a
        links:
          self: /bundle/596535d9608f63d531b7e34a
        relationships:
          actions:
            data:
              - id: 596535d9608f63d531b7e344
                type: action
            links:
              related: /bundle/596535d9608f63d531b7e34a/actions
          plan:
            links:
              related: /bundle/596535d9608f63d531b7e34a/plan
        type: bundle
      included: []
      meta:
        req_id: c0f8d53a-d763-4beb-b0b1-9ec6da146a14
    properties:
      data:
        $ref: '#/definitions/BundleResource'
      meta:
        $ref: '#/definitions/FetchMetaResponse'
    required:
      - data
    type: object
  FetchCoachResponse:
    example:
      data:
        attributes:
          first_name: Clarisa
          last_name: Rivera
        id: 581630c3237d84a9403533c6
        links:
          self: /pub/coach/581630c3237d84a9403533c6
        type: coach
      included: []
      meta:
        req_id: b928037e-98ed-434f-b0c4-d74b1a38a560
    properties:
      data:
        $ref: '#/definitions/CoachResource'
      meta:
        $ref: '#/definitions/FetchMetaResponse'
    required:
      - data
    type: object
  FetchCoachesResponse:
    example:
      data:
        - attributes:
            first_name: Clarisa
            last_name: Rivera
          id: 581630c3237d84a9403533c6
          links:
            self: /pub/coach/581630c3237d84a9403533c6
          type: coach
      included: []
      links:
        self: /pub/patient/58163112237d84a94035f78b/coaches
      meta:
        count: 1
        req_id: 48c47326-0c8b-4c5e-85da-7fc0d00f1e4d
    properties:
      data:
        items:
          $ref: '#/definitions/CoachResource'
        type: array
      meta:
        $ref: '#/definitions/FetchMetaResponse'
    required:
      - data
    type: object
  FetchEmailHistoriesResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/EmailHistoryResource'
        type: array
      meta:
        $ref: '#/definitions/FetchMetaResponse'
    required:
      - data
    type: object
  FetchEmailHistoryResponse:
    properties:
      data:
        $ref: '#/definitions/EmailHistoryResource'
      meta:
        $ref: '#/definitions/FetchMetaResponse'
    required:
      - data
    type: object
  FetchErrorResponse:
    example:
      errors:
        - code: Unauthorized
          detail: A valid bearer token is required
          status: '401'
      meta:
        req_id: d07c8b12-c95e-4a06-8424-92aac94bb445
    properties:
      errors:
        $ref: '#/definitions/Error'
      meta:
        $ref: '#/definitions/FetchMetaResponse'
    type: object
  FetchGroupResponse:
    example:
      data:
        attributes:
          name: Patients Lead
        id: 5755db2a3db4179179999acf
        links:
          self: /pub/group/5755db2a3db4179179999acf
        type: group
      meta:
        req_id: 2b59851e-0f6c-4a8f-a8a6-15bd7c0346e7
    properties:
      data:
        $ref: '#/definitions/GroupResource'
      meta:
        $ref: '#/definitions/FetchMetaResponse'
    required:
      - data
    type: object
  FetchGroupsResponse:
    example:
      data:
        - attributes:
            name: Patients Lead
          id: 5755db2a3db4179179999acf
          links:
            self: /pub/group/5755db2a3db4179179999acf
          type: group
      links:
        self: /pub/oauth/token/5817a24d678a7c2cbf5df3ee/groups
      meta:
        count: 1
        req_id: ab554093-6081-4d37-aa7b-ca6312367ca4
    properties:
      data:
        items:
          $ref: '#/definitions/GroupResource'
        type: array
      meta:
        $ref: '#/definitions/FetchMetaResponse'
    required:
      - data
    type: object
  FetchMetaResponse:
    properties:
      count:
        type: integer
      req_id:
        type: string
    type: object
  FetchOrganizationResponse:
    example:
      data:
        attributes:
          name: Health Activation Partners
        id: 5873b63605376e337a89d64a
        links:
          self: /pub/organization/5873b63605376e337a89d64a
        type: organization
      meta:
        req_id: aeb94ed8-d7f9-4e72-a78f-e276c4f52c2a
    properties:
      data:
        $ref: '#/definitions/OrganizationResource'
      meta:
        $ref: '#/definitions/FetchMetaResponse'
    required:
      - data
    type: object
  FetchPatientHealthMetricResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/PatientHealthMetricResource'
        type: array
      links:
        $ref: '#/definitions/CollectionResponseLinks'
      meta:
        $ref: '#/definitions/FetchMetaResponse'
    required:
      - data
    type: object
  FetchPatientPlanSummariesResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/PatientPlanSummaryResource'
        type: array
      included:
        description: |
          Related resources which are included in the repoonse based on the `include` param.
          Attributes of each resource will vary depending on the type.
          See [action](#operation/fetchAction), [bundle](#operation/fetchBundle) and [patient](#operation/fetchPatient)
        items:
          $ref: '#/definitions/Resource'
        type: array
      meta:
        $ref: '#/definitions/FetchMetaResponse'
    required:
      - data
    type: object
  FetchPatientPlanSummaryResponse:
    example:
      data:
        attributes:
          adherence:
            complete: 0
            due: 0
            streak:
              count: 0
          effective_from: '2017-07-01T04:00:00.000Z'
          window_notification_times:
            afternoon: 43200
            evening: 64800
            morning: 25200
            night: 75600
          window_order: []
        id: 5964f831f65725bf25558b50
        links:
          self: /patient_plan_summary/5964f831f65725bf25558b50
        relationships:
          actions:
            data:
              - id: 5964f831f65725bf25558b4b
                type: action
            links:
              related: /patient_plan_summary/5964f831f65725bf25558b50/actions
          bundles:
            data: []
            links:
              related: /patient_plan_summary/5964f831f65725bf25558b50/bundles
          current_results:
            data: []
            links:
              related: /patient_plan_summary/5964f831f65725bf25558b50/current_results
          patient:
            data:
              id: 5964f831f65725bf25558b4f
              type: patient
            links:
              related: /patient_plan_summary/5964f831f65725bf25558b50/patient
        type: patient_plan_summary
      included:
        - attributes:
            _thread: blood_pressure
            adherence:
              complete: 0
              due: 0
              streak:
                count: 0
            effective_from: '2017-07-01T04:00:00.000Z'
            frequency_goal:
              weeks:
                days:
                  - 0
                  - 1
                  - 2
                  - 3
                  - 4
                  - 5
                  - 6
            frequency_goal_prorated: 0
            identifiers: []
            metric_required: false
            metrics:
              - _id: 5964f831f65725bf25558b51
                accepted_values: []
                goal:
                  data:
                    diastolic:
                      unit: mmHg
                      value: 95
                    systolic:
                      unit: mmHg
                      value: 150
                metric_type: blood_pressure
                unit: mmHg
            options: []
            title: Record Blood Pressure
            tracking: true
            type: blood_pressure
            windows: []
          id: 5964f831f65725bf25558b4b
          links:
            self: /action/5964f831f65725bf25558b4b
          relationships:
            bundles:
              data: []
              links:
                related: /action/5964f831f65725bf25558b4b/bundles
            plan:
              links:
                related: /action/5964f831f65725bf25558b4b/plan
          type: action
      meta:
        req_id: e0e78ef5-c0fd-415b-9b9f-a1b5c77c1198
    properties:
      data:
        $ref: '#/definitions/PatientPlanSummaryResource'
      included:
        description: |
          Related resources which are included in the repoonse based on the `include` param.
          Attributes of each resource will vary depending on the type.
          See [action](#operation/fetchAction), [bundle](#operation/fetchBundle) and [patient](#operation/fetchPatient)
        items:
          $ref: '#/definitions/Resource'
        type: array
      meta:
        $ref: '#/definitions/FetchMetaResponse'
    required:
      - data
    type: object
  FetchPatientResponse:
    example:
      data:
        attributes:
          addresses: []
          archive_history: []
          archived: false
          birth_date: '1938-10-04'
          first_name: Lucy
          identifiers:
            - label: Twine Sample Data Filler Patient
              system: twine-filler-patient
              value: filler-92
          last_name: Bernhard
          phone_numbers:
            - primary: true
              value: 880-136-7979 x6183
            - primary: false
              value: 919.814.3552 x40123
          updated_at: '2016-03-16T13:32:57.000Z'
        id: 58163112237d84a94035f78b
        links:
          self: /pub/patient/58163112237d84a94035f78b
          twine_web_app: 'http://10.0.1.55:9000/#/coach/admin/coaches/58163112237d84a94035f78b/profile'
        relationships:
          coaches:
            data:
              - id: 581630c3237d84a9403533c6
                meta:
                  primary: true
                type: coach
            links:
              related: /pub/patient/58163112237d84a94035f78b/coaches
          groups:
            data:
              - id: 5755db2a3db4179179999acf
                type: group
            links:
              related: /pub/patient/58163112237d84a94035f78b/groups
        type: patient
      included: []
      meta:
        req_id: 23001d51-669b-4948-b9fa-11dbffdf8ced
    properties:
      data:
        $ref: '#/definitions/PatientResource'
      meta:
        $ref: '#/definitions/FetchMetaResponse'
    required:
      - data
    type: object
  FetchPatientsResponse:
    example:
      data:
        - attributes:
            addresses: []
            archive_history: []
            archived: false
            birth_date: '1938-10-04'
            first_name: Lucy
            identifiers:
              - label: Twine Sample Data Filler Patient
                system: twine-filler-patient
                value: filler-92
            last_name: Bernhard
            phone_numbers:
              - primary: true
                value: 880-136-7979 x6183
              - primary: false
                value: 919.814.3552 x40123
            updated_at: '2016-03-16T13:32:57.000Z'
          id: 58163112237d84a94035f78b
          links:
            self: /pub/patient/58163112237d84a94035f78b
            twine_web_app: 'http://10.0.1.55:9000/#/coach/admin/coaches/58163112237d84a94035f78b/profile'
          relationships:
            coaches:
              data:
                - id: 581630c3237d84a9403533c6
                  meta:
                    primary: true
                  type: coach
              links:
                related: /pub/patient/58163112237d84a94035f78b/coaches
            groups:
              data:
                - id: 5755db2a3db4179179999acf
                  type: group
              links:
                related: /pub/patient/58163112237d84a94035f78b/groups
          type: patient
        - attributes:
            addresses: []
            birth_date: '1983-03-16'
            email_address: annette.parisian@example.com
            first_name: Annette
            identifiers:
              - label: Twine Sample Data Filler Patient
                system: twine-filler-patient
                value: filler-5
            last_name: Parisian
            phone_numbers:
              - primary: true
                value: 044.758.5704 x1965
            updated_at: '2016-02-04T12:55:03.000Z'
          id: 58163103237d84a94035f0b3
          links:
            self: /pub/patient/58163103237d84a94035f0b3
            twine_web_app: 'http://10.0.1.55:9000/#/coach/admin/coaches/58163103237d84a94035f0b3/profile'
          relationships:
            coaches:
              data:
                - id: 581630c3237d84a9403533c6
                  meta:
                    primary: true
                  type: coach
              links:
                related: /pub/patient/58163103237d84a94035f0b3/coaches
            groups:
              data:
                - id: 5755db2a3db4179179999acf
                  type: group
              links:
                related: /pub/patient/58163103237d84a94035f0b3/groups
          type: patient
        - attributes:
            addresses: []
            birth_date: '1932-04-06'
            email_address: lexi.thompson@example.com
            first_name: Lexi
            identifiers:
              - label: Twine Sample Data Filler Patient
                system: twine-filler-patient
                value: filler-3
            last_name: Thompson
            phone_numbers:
              - primary: true
                value: 1-977-830-6179 x26334
            updated_at: '2016-01-23T16:12:07.000Z'
          id: 58163103237d84a94035f043
          links:
            self: /pub/patient/58163103237d84a94035f043
            twine_web_app: 'http://10.0.1.55:9000/#/coach/admin/coaches/58163103237d84a94035f043/profile'
          relationships:
            coaches:
              data:
                - id: 581630c3237d84a9403533c6
                  meta:
                    primary: true
                  type: coach
              links:
                related: /pub/patient/58163103237d84a94035f043/coaches
            groups:
              data:
                - id: 5755db2a3db4179179999acf
                  type: group
              links:
                related: /pub/patient/58163103237d84a94035f043/groups
          type: patient
      links:
        last: '/pub/patient?filter[groups]=5755db2a3db4179179999acf&page[number]=88&page[size]=3'
        next: '/pub/patient?filter[groups]=5755db2a3db4179179999acf&page[number]=2&page[size]=3'
        self: '/pub/patient?filter[groups]=5755db2a3db4179179999acf&page[number]=1&page[size]=3'
      meta:
        count: 263
        req_id: 155c690b-50b2-4ff2-8abe-b809a8a51e53
    properties:
      data:
        items:
          $ref: '#/definitions/PatientResource'
        type: array
      links:
        $ref: '#/definitions/CollectionResponseLinks'
      meta:
        $ref: '#/definitions/FetchMetaResponse'
    required:
      - data
    type: object
  FetchRewardEarningFulfillmentResponse:
    properties:
      data:
        $ref: '#/definitions/RewardEarningFulfillmentResource'
      meta:
        $ref: '#/definitions/FetchMetaResponse'
    required:
      - data
    type: object
  FetchRewardEarningFulfillmentsResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/RewardEarningFulfillmentResource'
        type: array
      meta:
        $ref: '#/definitions/FetchMetaResponse'
    required:
      - data
    type: object
  FetchRewardEarningResponse:
    properties:
      data:
        $ref: '#/definitions/RewardEarningResource'
      meta:
        $ref: '#/definitions/FetchMetaResponse'
    required:
      - data
    type: object
  FetchRewardEarningsResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/RewardEarningResource'
        type: array
      meta:
        $ref: '#/definitions/FetchMetaResponse'
    required:
      - data
    type: object
  FetchRewardProgramActivationResponse:
    properties:
      data:
        $ref: '#/definitions/RewardProgramActivationResource'
      meta:
        $ref: '#/definitions/FetchMetaResponse'
    required:
      - data
    type: object
  FetchRewardProgramActivationsResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/RewardProgramActivationResource'
        type: array
      meta:
        $ref: '#/definitions/FetchMetaResponse'
    required:
      - data
    type: object
  FetchRewardProgramResponse:
    properties:
      data:
        $ref: '#/definitions/RewardProgramResource'
      meta:
        $ref: '#/definitions/FetchMetaResponse'
    required:
      - data
    type: object
  FetchRewardProgramsResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/RewardProgramResource'
        type: array
      meta:
        $ref: '#/definitions/FetchMetaResponse'
    required:
      - data
    type: object
  FetchRewardResponse:
    properties:
      data:
        $ref: '#/definitions/RewardResource'
      meta:
        $ref: '#/definitions/FetchMetaResponse'
    required:
      - data
    type: object
  FetchRewardsResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/RewardResource'
        type: array
      meta:
        $ref: '#/definitions/FetchMetaResponse'
    required:
      - data
    type: object
  GroupResource:
    properties:
      attributes:
        properties:
          name:
            example: Team Health
            type: string
        required:
          - name
        type: object
      id:
        example: 57b36e3c04ad8c2224f2af38
        type: string
      links:
        properties:
          self:
            example: /group/57b36e3c04ad8c2224f2af38
            pattern: '/group/[0-9a-z]+'
            type: string
        readOnly: true
        required:
          - self
        type: object
      type:
        enum:
          - group
        example: group
        type: string
    required:
      - id
      - type
      - attributes
    type: object
  Identifier:
    properties:
      label:
        type: string
      system:
        type: string
      value:
        type: string
    required:
      - system
      - value
    type: object
  OrganizationResource:
    properties:
      attributes:
        properties:
          name:
            example: Health Activation Partners
            type: string
        required:
          - name
      id:
        example: 57b36e3c04ad8c2224f2af38
        type: string
      links:
        properties:
          self:
            example: /organization/57b36e3c04ad8c2224f2af38
            pattern: '/organization/[0-9a-z]+'
            type: string
        readOnly: true
        required:
          - self
      type:
        enum:
          - organization
        example: organization
        type: string
    required:
      - id
      - type
      - attributes
    type: object
  PatientCreateResource:
    properties:
      attributes:
        properties:
          addresses:
            items:
              $ref: '#/definitions/Address'
            type: array
          birth_date:
            example: '1944-03-06'
            format: date
            type: string
          email_address:
            example: fiona@example.com
            type: string
          enrolled_at:
            example: '2016-05-26T15:25:54.000Z'
            format: dateTime
            readOnly: true
            type: string
          first_access_at:
            example: '2016-06-03T13:15:22.000Z'
            format: dateTime
            readOnly: true
            type: string
          first_name:
            example: Fiona
            type: string
          gender:
            enum:
              - male
              - female
              - other
            example: female
            type: string
          identifiers:
            items:
              $ref: '#/definitions/PatientIdentifier'
            type: array
          invited_at:
            example: '2016-06-01T16:20:16.000Z'
            format: dateTime
            readOnly: true
            type: string
          last_access_at:
            example: '2016-07-11T17:50:49.400Z'
            format: dateTime
            readOnly: true
            type: string
          last_name:
            example: Reeves
            type: string
          phone_numbers:
            items:
              $ref: '#/definitions/PhoneNumber'
            type: array
          updated_at:
            example: '2016-07-11T17:13:57.027Z'
            format: dateTime
            readOnly: true
            type: string
        type: object
      id:
        example: 57b36ef304ad8c2224f2af3a
        type: string
      links:
        properties:
          self:
            example: /patient/57b36ef304ad8c2224f2af3a
            pattern: '/patient/[0-9a-z]+'
            type: string
          twine_web_app:
            description: A link to the patient record in the Twine web application.
            example: 'https://app.twinehealth.com/#/coach/patient/5367c6300b7bb6e94188c02c/overview'
            type: string
        readOnly: true
        type: object
      relationships:
        properties:
          coaches:
            properties:
              data:
                items:
                  properties:
                    id:
                      example: 57fee2a66b49113551658505
                      type: string
                    meta:
                      properties:
                        primary:
                          type: boolean
                      type: object
                    type:
                      enum:
                        - coach
                      example: coach
                      type: string
                  required:
                    - type
                    - id
                  type: object
                type: array
              links:
                properties:
                  related:
                    example: /patient/57b36ef304ad8c2224f2af3a/coaches
                    pattern: '/patient/[0-9a-z]+/coaches'
                    type: string
                readOnly: true
            required:
              - data
            type: object
          groups:
            properties:
              data:
                items:
                  properties:
                    id:
                      description: Required if the `meta.query` is not defined.
                      example: 57b3708b04ad8c2224f2af3b
                      type: string
                    meta:
                      description: Allows the specification of a query for a group rather than providing a group id directly
                      properties:
                        query:
                          description: |
                            1. If the query does not return any groups, a group with the specified name will be created and related to the patient.
                            2. If the query returns one group, that group will be related to the patient.
                            3. If the query returns more than one group, the creation of the patient will fail.
                          properties:
                            name:
                              type: string
                            organization:
                              type: string
                          required:
                            - organization
                            - name
                          type: object
                      required:
                        - query
                      type: object
                    type:
                      enum:
                        - group
                      example: group
                      type: string
                  required:
                    - type
                  type: object
                type: array
            required:
              - data
            type: object
        required:
          - groups
        type: object
      type:
        enum:
          - patient
        example: patient
        type: string
    required:
      - type
      - attributes
    type: object
  PatientHealthMetricResource:
    description: |
      Note that `data` can either be a single object or an array of objects matching the schema specified here
      (bulk create). When bulk creating multiple, the relationships in every item **must** be the same.
    example:
      data:
        attributes:
          code:
            system: LOINC
            value: 13457-7
          occurred_at: '2017-03-14T11:00:57.000Z'
          type: ldl_cholesterol
          unit: mg/dl
          value: '121'
        relationships:
          patient:
            data:
              id: ''
              type: patient
        type: patient_health_metric
    properties:
      attributes:
        properties:
          code:
            properties:
              system:
                type: string
              value:
                type: string
            required:
              - system
              - value
            type: object
          diastolic:
            type: number
          occurred_at:
            format: dateTime
            type: string
          systolic:
            type: number
          type:
            enum:
              - blood_pressure_systolic
              - blood_pressure_diastolic
              - hemoglobin_a1c
              - hdl_cholesterol
              - ldl_cholesterol
              - total_cholesterol
              - triglycerides
              - blood_urea_nitrogen
              - creatinine
              - hemoglobin
              - hematocrit
              - total_serum_iron
              - thyroid_stimulating_hormone
              - free_thyroxine
              - free_triiodothyronine
              - total_triiodothyronine
              - cd4_cell_count
              - hiv_viral_load
              - inr
              - free_testosterone
              - total_testosterone
              - c_reactive_protein
              - prostate_specific_antigen
              - cotinine
              - c_peptide
              - blood_pressure
              - blood_glucose
              - weight
              - heart_rate
              - body_fat_percentage
              - body_mass_index
              - body_temperature
              - forced_expiratory_volume1
              - forced_vital_capacity
              - lean_body_mass
              - nausea_level
              - oxygen_saturation
              - pain_level
              - peak_expiratory_flow_rate
              - peripheral_perfusion_index
              - respiratory_rate
              - sleep_analysis_asleep
              - sleep_analysis_in_bed
              - inhaler_usage
            type: string
          unit:
            type: string
          value:
            type: number
        type: object
      id:
        type: string
      relationships:
        properties:
          patient:
            properties:
              data:
                properties:
                  id:
                    description: Required if the `meta.query` is not defined.
                    example: 5817ead56f5316c0d05ba8bf
                    type: string
                  meta:
                    description: Allows the specification of a query for a patient rather than providing a patient id directly
                    properties:
                      query:
                        description: The query must return one and only one patient.
                        properties:
                          groups:
                            items:
                              type: string
                            type: array
                          identifier:
                            properties:
                              system:
                                type: string
                              value:
                                type: string
                            required:
                              - system
                              - value
                            type: object
                          organization:
                            type: string
                        required:
                          - identifier
                        type: object
                    required:
                      - query
                    type: object
                  type:
                    type: string
                type: object
              links:
                type: object
            type: object
        type: object
      type:
        type: string
    required:
      - type
      - id
    type: object
  PatientIdentifier:
    properties:
      label:
        type: string
      system:
        type: string
      value:
        type: string
    required:
      - system
      - value
    type: object
  PatientPlanSummaryResource:
    properties:
      attributes:
        properties:
          adherence:
            readOnly: true
            type: object
          critical:
            items:
              type: object
            type: array
          effective_from:
            format: dateTime
            readOnly: true
            type: string
          time_zone:
            type: string
          window_notification_times:
            properties:
              afternoon:
                type: integer
              evening:
                type: integer
              morning:
                type: integer
              night:
                type: integer
            readOnly: true
            type: object
          window_order:
            items:
              properties:
                _actions:
                  items:
                    type: string
                  type: array
                type:
                  type: string
              type: object
            type: array
        type: object
      id:
        example: 57b36e3c04ad8c2224f2af38
        type: string
      links:
        properties:
          self:
            example: /patient_plan_summary/57b36e3c04ad8c2224f2af38
            pattern: '/patient_plan_summary/[0-9a-z]+'
            type: string
        readOnly: true
        required:
          - self
        type: object
      relationships:
        properties:
          actions:
            items:
              properties:
                data:
                  properties:
                    id:
                      type: string
                    type:
                      type: string
                  required:
                    - type
                    - id
                  type: object
                links:
                  properties:
                    related:
                      type: string
                  type: object
              type: object
            type: array
          bundles:
            items:
              properties:
                data:
                  properties:
                    id:
                      type: string
                    type:
                      type: string
                  required:
                    - type
                    - id
                  type: object
                links:
                  properties:
                    related:
                      type: string
                  type: object
              type: object
            type: array
          current_results:
            items:
              properties:
                data:
                  properties:
                    id:
                      type: string
                    type:
                      type: string
                  required:
                    - type
                    - id
                  type: object
              type: object
            type: array
          patient:
            properties:
              data:
                properties:
                  id:
                    type: string
                  type:
                    type: string
                type: object
            type: object
        required:
          - actions
          - bundles
          - patient
        type: object
      type:
        enum:
          - patient_plan_summary
        example: patient_plan_summary
        type: string
    required:
      - id
      - type
    type: object
  PatientResource:
    properties:
      attributes:
        properties:
          addresses:
            items:
              $ref: '#/definitions/Address'
            type: array
          archive_history:
            items:
              $ref: '#/definitions/ArchiveHistory'
            type: array
          archived:
            example: true
            readOnly: true
            type: boolean
          birth_date:
            example: '1944-03-06'
            format: date
            type: string
          email_address:
            example: fiona@example.com
            type: string
          enrolled_at:
            example: '2016-05-26T15:25:54.000Z'
            format: dateTime
            readOnly: true
            type: string
          first_access_at:
            example: '2016-06-03T13:15:22.000Z'
            format: dateTime
            readOnly: true
            type: string
          first_name:
            example: Fiona
            type: string
          gender:
            enum:
              - male
              - female
              - other
            example: female
            type: string
          identifiers:
            items:
              $ref: '#/definitions/PatientIdentifier'
            type: array
          invited_at:
            example: '2016-06-01T16:20:16.000Z'
            format: dateTime
            readOnly: true
            type: string
          last_access_at:
            example: '2016-07-11T17:50:49.400Z'
            format: dateTime
            readOnly: true
            type: string
          last_name:
            example: Reeves
            type: string
          phone_numbers:
            items:
              $ref: '#/definitions/PhoneNumber'
            type: array
          updated_at:
            example: '2016-07-11T17:13:57.027Z'
            format: dateTime
            readOnly: true
            type: string
        type: object
      id:
        example: 57b36ef304ad8c2224f2af3a
        type: string
      links:
        properties:
          self:
            example: /patient/57b36ef304ad8c2224f2af3a
            pattern: '/patient/[0-9a-z]+'
            type: string
          twine_web_app:
            description: A link to the patient record in the Twine web application.
            example: 'https://app.twinehealth.com/#/coach/patient/5367c6300b7bb6e94188c02c/overview'
            type: string
        readOnly: true
        type: object
      relationships:
        properties:
          coaches:
            properties:
              data:
                items:
                  properties:
                    id:
                      example: 57fee2a66b49113551658505
                      type: string
                    meta:
                      properties:
                        primary:
                          type: boolean
                      type: object
                    type:
                      enum:
                        - coach
                      example: coach
                      type: string
                  required:
                    - type
                    - id
                  type: object
                type: array
              links:
                properties:
                  related:
                    example: /patient/57b36ef304ad8c2224f2af3a/groups
                    pattern: '/patient/[0-9a-z]+/groups'
                    type: string
                readOnly: true
            required:
              - data
          groups:
            properties:
              data:
                items:
                  properties:
                    id:
                      example: 57b3708b04ad8c2224f2af3b
                      type: string
                    type:
                      enum:
                        - group
                      example: group
                      type: string
                  required:
                    - type
                  type: object
                type: array
            required:
              - data
        required:
          - groups
        type: object
      type:
        enum:
          - patient
        example: patient
        type: string
    required:
      - type
      - attributes
    type: object
  PhoneNumber:
    properties:
      primary:
        example: true
        type: boolean
      type:
        enum:
          - home
          - work
          - mobile
          - home-fax
          - work-fax
          - other
        example: mobile
        type: string
      value:
        example: 555-555-1234
        type: string
    required:
      - type
      - value
      - primary
    type: object
  Resource:
    properties:
      attributes:
        type: object
      id:
        type: string
      type:
        type: string
    required:
      - type
      - id
    type: object
  RewardEarningFulfillmentResource:
    properties:
      attributes:
        properties:
          fulfilled_at:
            description: Date at which the reward earning was fulfilled. (Must be at the same time or after the reward was earned)
            format: dateTime
            type: string
          fulfilled_unit:
            description: Unit of the earned reward that has been fulfilled. (Read-only property)
            readOnly: true
            type: string
          fulfilled_value:
            description: Value of the earned reward that has been fulfilled. (Must be greater than or equal to 0)
            type: number
        required:
          - fulfilled_value
          - fulfilled_at
        type: object
      id:
        type: string
      relationships:
        properties:
          patient:
            properties:
              data:
                properties:
                  id:
                    type: string
                  type:
                    type: string
                type: object
            readOnly: true
            type: object
          reward_earning:
            properties:
              data:
                properties:
                  id:
                    type: string
                  type:
                    type: string
                type: object
            type: object
        required:
          - reward_earning
        type: object
      type:
        type: string
    required:
      - type
    type: object
  RewardEarningResource:
    properties:
      attributes:
        properties:
          earned_at:
            description: Date at which the reward was earned. (Must be after the reward was allocated and before the reward program activation was deactivated or expired)
            format: dateTime
            type: string
          earned_unit:
            description: Unit of the reward that has been earned. (Read-only property)
            readOnly: true
            type: string
          earned_value:
            description: Value of the reward that has been earned. (Must not exceed the allocated value for the reward)
            type: number
          fulfilled_at:
            description: Date at which the reward earning was fulfilled. (Read-only property)
            format: dateTime
            readOnly: true
            type: string
          fulfilled_value:
            description: Value of the earned reward that has been fulfilled. (Read-only property)
            readOnly: true
            type: number
          ready_for_fulfillment:
            description: 'If true, the reward earning is ready to be fulfilled, either because the reward program activation was fulfill_as_earned or because the reward program activation has been deactivated. (Read-only property)'
            readOnly: true
            type: boolean
        required:
          - earned_value
          - earned_at
        type: object
      id:
        type: string
      relationships:
        properties:
          group:
            properties:
              data:
                properties:
                  id:
                    type: string
                  type:
                    type: string
                type: object
            readOnly: true
            type: object
          patient:
            properties:
              data:
                properties:
                  id:
                    type: string
                  type:
                    type: string
                type: object
            readOnly: true
            type: object
          reward:
            properties:
              data:
                properties:
                  id:
                    type: string
                  type:
                    type: string
                type: object
            type: object
          reward_program_activation:
            properties:
              data:
                properties:
                  id:
                    type: string
                  type:
                    type: string
                type: object
            readOnly: true
            type: object
        required:
          - reward
        type: object
      type:
        type: string
    required:
      - type
    type: object
  RewardProgramActivationResource:
    properties:
      attributes:
        properties:
          activated_at:
            description: Date at which the reward program was activated for the patient. (Must be between the start_at and end_at dates for the reward program)
            format: dateTime
            type: string
          active:
            default: true
            description: 'If true, the reward program is currently active.'
            type: boolean
          allocated_count:
            description: Number of rewards allocated. (Read-only property)
            readOnly: true
            type: number
          budget_unit:
            description: Unit of the reward program budget. (Read-only property)
            readOnly: true
            type: string
          deactivated_at:
            description: Date at which the reward program was deactivated. (Must be after the activated_at date)
            format: dateTime
            type: string
          earned_count:
            description: Number of reward earnings. (Read-only property)
            readOnly: true
            type: number
          expires_at:
            description: Date at which the reward program activation expires. (Read-only property set by adding the days_active from the reward program to the activated_at date)
            format: dateTime
            readOnly: true
            type: string
          fulfill_as_earned:
            description: 'If true, the rewards created for a patient for the program can be fulfulled as they are earned. If false, the rewards should only be fulfilled when the program is deactivated. (Read-only property denormalized from the reward program)'
            readOnly: true
            type: boolean
          total_allocated_value:
            description: Total value of reward allocated. (Read-only property)
            readOnly: true
            type: number
          total_earned_value:
            description: Total value of reward earnings. (Read-only property)
            readOnly: true
            type: number
        required:
          - activated_at
        type: object
      id:
        type: string
      relationships:
        properties:
          patient:
            properties:
              data:
                properties:
                  id:
                    type: string
                  type:
                    type: string
                type: object
            type: object
          reward_program:
            properties:
              data:
                properties:
                  id:
                    type: string
                  type:
                    type: string
                type: object
            type: object
        required:
          - patient
          - reward_program
        type: object
      type:
        type: string
    required:
      - type
    type: object
  RewardProgramResource:
    properties:
      attributes:
        properties:
          budget_unit:
            default: dollar
            description: Unit of the budget for the reard program.
            enum:
              - dollar
              - point
              - credit
            type: string
          budget_value:
            description: Value of the budget for the reward program. (Must be greater than 0)
            type: number
          description:
            description: Description of the reward program - designed to be a comprehensive text description
            type: string
          duration_active:
            default: 540
            description: Number of days that a program can be active after it has been activated for a patient. (Must be greater than 0)
            type: number
          end_at:
            description: Date at which the reward program ends. (Must be after the start_at)
            format: dateTime
            type: string
          frozen:
            default: false
            description: 'If true, the reward program cannot be activated for a patient and new rewards cannot be created for the program.'
            type: boolean
          fulfill_as_earned:
            default: false
            description: 'If true, the rewards created for a patient for the program can be fulfulled as they are earned. If false, the rewards should only be fulfilled when the program is deactivated.'
            type: boolean
          name:
            description: Name of the reward program
            type: string
          start_at:
            description: Date at which the reward program starts.
            format: dateTime
            type: string
          tagline:
            description: Tagline of the reward program - designed to be one line
            type: string
        required:
          - name
          - start_at
          - end_at
          - budget_value
        type: object
      id:
        type: string
      relationships:
        properties:
          group:
            properties:
              data:
                properties:
                  id:
                    type: string
                  type:
                    type: string
                required:
                  - type
                  - id
                type: object
            required:
              - data
            type: object
        required:
          - group
        type: object
      type:
        type: string
    required:
      - type
    type: object
  RewardResource:
    properties:
      attributes:
        properties:
          _thread:
            description: Unique string identifying the health action with which the reward is associated.
            type: string
          allocated_at:
            description: Date at which the reward was allocated. (Must be after the reward program is activated and before it is deactivated or expires)
            format: dateTime
            type: string
          allocated_unit:
            description: Unit of the reward program. (Read-only property)
            readOnly: true
            type: string
          allocated_value:
            description: Value of the reward program budget allocated for the reward. (Must not exceed the remaining budget for the reward program activation)
            type: number
          description:
            description: Description of the reward.
            type: string
          earned_at:
            description: Date at which the reward was earned. (Read-only property)
            format: dateTime
            readOnly: true
            type: string
          earned_value:
            description: Value of the reward that has been earned. (Read-only property)
            readOnly: true
            type: number
          fulfilled_at:
            description: Date at which the reward earning was fulfilled. (Read-only property)
            format: dateTime
            readOnly: true
            type: string
          fulfilled_value:
            description: Value of the earned reward that has been fulfilled. (Read-only property)
            readOnly: true
            type: number
          target_at:
            description: Date at which the patient aspires to achieve the reward. (Must be the same or after the allocated_at date)
            format: dateTime
            type: string
        required:
          - description
          - allocated_value
          - allocated_at
        type: object
      id:
        type: string
      relationships:
        properties:
          patient:
            properties:
              data:
                properties:
                  id:
                    type: string
                  type:
                    type: string
                type: object
            readOnly: true
            type: object
          reward_program_activation:
            properties:
              data:
                properties:
                  id:
                    type: string
                  type:
                    type: string
                type: object
            type: object
        required:
          - reward_program_activation
        type: object
      type:
        type: string
    required:
      - type
    type: object
  TokenResource:
    properties:
      attributes:
        properties:
          access_token:
            example: a01fe2bb-1977-48d9-b722-ac7f9135143f
            type: string
          expires_in:
            example: 3600
            type: integer
          refresh_token:
            example: b452cb17-72e2-4e90-b9c6-d77a0b66cf7c
            type: string
          token_type:
            enum:
              - bearer
            example: bearer
            type: string
        required:
          - access_token
          - refresh_token
          - token_type
          - expires_in
      id:
        example: 57b36c9a04ad8c2224f2af35
        type: string
      relationships:
        properties:
          groups:
            properties:
              data:
                items:
                  properties:
                    id:
                      example: 57b36d6f04ad8c2224f2af36
                      type: string
                    type:
                      enum:
                        - group
                      example: group
                      type: string
                  required:
                    - type
                    - id
                  type: object
                type: array
              links:
                properties:
                  related:
                    example: /oauth/token/57b36d8804ad8c2224f2af37/groups
                    pattern: '/oauth/token/[0-9a-z]+/groups'
                    type: string
                required:
                  - related
            required:
              - links
              - data
          organization:
            properties:
              data:
                properties:
                  id:
                    example: 57b36d6f04ad8c2224f2af36
                    type: string
                  type:
                    enum:
                      - organization
                    example: organization
                    type: string
                required:
                  - type
                  - id
              links:
                properties:
                  related:
                    example: /oauth/token/57b36d8804ad8c2224f2af37/organization
                    pattern: '/oauth/token/[0-9a-z]+/organization'
                    type: string
                required:
                  - related
            required:
              - links
              - data
        type: object
      type:
        enum:
          - token
        example: token
        type: string
    required:
      - type
      - id
    type: object
  UpdateActionRequest:
    properties:
      data:
        $ref: '#/definitions/ActionResource'
    required:
      - data
    type: object
  UpdateActionResponse:
    properties:
      data:
        $ref: '#/definitions/ActionResource'
      meta:
        $ref: '#/definitions/CreateOrUpdateMetaResponse'
    required:
      - data
    type: object
  UpdateBundleRequest:
    properties:
      data:
        $ref: '#/definitions/BundleResource'
    required:
      - data
    type: object
  UpdateBundleResponse:
    properties:
      data:
        $ref: '#/definitions/BundleResource'
      meta:
        $ref: '#/definitions/CreateOrUpdateMetaResponse'
    required:
      - data
    type: object
  UpdatePatientPlanSummaryRequest:
    properties:
      data:
        $ref: '#/definitions/PatientPlanSummaryResource'
    required:
      - data
    type: object
  UpdatePatientPlanSummaryResponse:
    properties:
      data:
        $ref: '#/definitions/PatientPlanSummaryResource'
      meta:
        $ref: '#/definitions/CreateOrUpdateMetaResponse'
    required:
      - data
    type: object
  UpdatePatientRequest:
    example:
      data:
        attributes:
          first_name: Jonathon
        id: 5817ead56f5316c0d05ba8bf
        type: patient
    properties:
      data:
        $ref: '#/definitions/PatientResource'
    required:
      - data
    type: object
  UpdatePatientResponse:
    example:
      data:
        attributes:
          addresses: []
          archive_history: []
          archived: false
          first_name: Jack
          identifiers: []
          last_name: Frost
          phone_numbers: []
          updated_at: '2016-11-01T01:07:33.121Z'
        id: 5817ead56f5316c0d05ba8bf
        links:
          self: /pub/patient/5817ead56f5316c0d05ba8bf
          twine_web_app: 'http://10.0.1.55:9000/#/coach/patient/5817ead56f5316c0d05ba8bf'
        relationships:
          coaches:
            data: []
            links:
              related: /pub/patient/5817ead56f5316c0d05ba8bf/coaches
          groups:
            data:
              - id: 5755db2a3db4179179999acf
                type: group
            links:
              related: /pub/patient/5817ead56f5316c0d05ba8bf/groups
        type: patient
      included: []
      meta:
        req_id: 5b813ad3-cabc-418f-add4-1e53bc69f7cb
    properties:
      data:
        $ref: '#/definitions/PatientResource'
      meta:
        $ref: '#/definitions/CreateOrUpdateMetaResponse'
    required:
      - data
    type: object
x-tagGroups:
  - name: Authentication (oauth)
    tags:
      - oauth
  - name: Admin
    tags:
      - organization
      - group
      - coach
      - reward program
  - name: Patient Health Data
    tags:
      - patient
      - plan
      - action
      - bundle
      - metric
      - reward program activation
      - reward
      - reward earning
      - reward earning fulfillment
      - email history
