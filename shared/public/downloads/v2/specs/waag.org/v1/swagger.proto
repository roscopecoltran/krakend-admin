syntax = "proto3";

import "google/protobuf/empty.proto";

import "google/api/annotations.proto";

package citysdklinkeddata;

message GetLayersLayerRequest {
    string layer = 1;
}

message DeleteLayersLayerRequest {
    string layer = 1;
}

message GetLayersLayerContextRequest {
    string layer = 1;
}

message PutLayersLayerContextRequest {
    string layer = 1;
}

message GetLayersLayerFieldsRequest {
    string layer = 1;
}

message PostLayersLayerFieldsRequest {
    string layer = 1;
}

message GetLayersLayerFieldsFieldRequest {
    string field = 1;
    string layer = 2;
}

message PutLayersLayerFieldsFieldRequest {
    string field = 1;
    string layer = 2;
}

message DeleteLayersLayerFieldsFieldRequest {
    string field = 1;
    string layer = 2;
}

message GetLayersLayerObjectsRequest {
    string layer = 1;
}

message PostLayersLayerObjectsRequest {
    string layer = 1;
}

message DeleteLayersLayerObjectsRequest {
    string layer = 1;
}

message GetLayersLayerObjectsCdk_idRequest {
    string cdk_id = 1;
    string layer = 2;
}

message GetLayersLayerOwnersRequest {
    string layer = 1;
}

message GetNgsi10ContextEntitiesEntityRequest {
    string entity = 1;
}

message PutNgsi10ContextEntitiesEntityAttributesRequest {
    string entity = 1;
}

message GetNgsi10ContextEntitiesEntityAttributesAttributeRequest {
    string attribute = 1;
    string entity = 2;
}

message GetNgsi10ContextEntityTypesCetypeRequest {
    string cetype = 1;
}

message GetNgsi10ContextEntityTypesCetypeAttributesAttributeRequest {
    string attribute = 1;
    string cetype = 2;
}

message GetObjectsCdk_idRequest {
    string cdk_id = 1;
}

message DeleteObjectsCdk_idRequest {
    string cdk_id = 1;
}

message GetObjectsCdk_idLayersRequest {
    string cdk_id = 1;
}

message GetObjectsCdk_idLayersLayerRequest {
    string cdk_id = 1;
    string layer = 2;
}

message PutObjectsCdk_idLayersLayerRequest {
    string cdk_id = 1;
    string layer = 2;
}

message PostObjectsCdk_idLayersLayerRequest {
    string cdk_id = 1;
    string layer = 2;
}

message DeleteObjectsCdk_idLayersLayerRequest {
    string cdk_id = 1;
    string layer = 2;
}

message GetOwnersOwnerRequest {
    string owner = 1;
}

message DeleteOwnersOwnerRequest {
    string owner = 1;
}

message GetOwnersOwnerLayersRequest {
    string owner = 1;
}

message GetSessionRequest {
    // Login name.
    string name = 1;
    // Login password.
    string password = 2;
}

service CitySDKLinkedDataService {
    // Return all layers
    rpc GetLayers(google.protobuf.Empty) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "//layers"
      };
    }
    // Create new layer
    rpc PostLayers(google.protobuf.Empty) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        post: "//layers"
      };
    }
    // Return single layer
    rpc GetLayersLayer(GetLayersLayerRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "//layers/{layer}"
      };
    }
    // Delete a layer
    rpc DeleteLayersLayer(DeleteLayersLayerRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        delete: "//layers/{layer}"
      };
    }
    // Return JSON-LD context of single layer
    rpc GetLayersLayerContext(GetLayersLayerContextRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "//layers/{layer}/context"
      };
    }
    // Overwrite JSON-LD context of single layer
    rpc PutLayersLayerContext(PutLayersLayerContextRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        put: "//layers/{layer}/context"
      };
    }
    // Return all fields of single layer
    rpc GetLayersLayerFields(GetLayersLayerFieldsRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "//layers/{layer}/fields"
      };
    }
    // Create new field for single layer
    rpc PostLayersLayerFields(PostLayersLayerFieldsRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        post: "//layers/{layer}/fields"
      };
    }
    // Return single field of single layer
    rpc GetLayersLayerFieldsField(GetLayersLayerFieldsFieldRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "//layers/{layer}/fields/{field}"
      };
    }
    // Overwrite single field on single layer
    rpc PutLayersLayerFieldsField(PutLayersLayerFieldsFieldRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        put: "//layers/{layer}/fields/{field}"
      };
    }
    // Delete a single field on single layer
    rpc DeleteLayersLayerFieldsField(DeleteLayersLayerFieldsFieldRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        delete: "//layers/{layer}/fields/{field}"
      };
    }
    // Return all objects with data on single layer
    rpc GetLayersLayerObjects(GetLayersLayerObjectsRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "//layers/{layer}/objects"
      };
    }
    // Create one or more objects with data on single layer, or add data to existing objects (or a combination thereof)
    rpc PostLayersLayerObjects(PostLayersLayerObjectsRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        post: "//layers/{layer}/objects"
      };
    }
    // Delete all objects from a single layer
    rpc DeleteLayersLayerObjects(DeleteLayersLayerObjectsRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        delete: "//layers/{layer}/objects"
      };
    }
    // Return metadata of single layer about single object, e.g. the date the data was added/modified, etc.
    rpc GetLayersLayerObjectsCdk_id(GetLayersLayerObjectsCdk_idRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "//layers/{layer}/objects/{cdk_id}"
      };
    }
    // Return all owners associated with single layer
    rpc GetLayersLayerOwners(GetLayersLayerOwnersRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "//layers/{layer}/owners"
      };
    }
    // Return single context entity
    rpc GetNgsi10ContextEntitiesEntity(GetNgsi10ContextEntitiesEntityRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "//ngsi10/contextEntities/{entity}"
      };
    }
    // Update attributes for single context entity
    rpc PutNgsi10ContextEntitiesEntityAttributes(PutNgsi10ContextEntitiesEntityAttributesRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        put: "//ngsi10/contextEntities/{entity}/attributes"
      };
    }
    // Return single context entity attribute
    rpc GetNgsi10ContextEntitiesEntityAttributesAttribute(GetNgsi10ContextEntitiesEntityAttributesAttributeRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "//ngsi10/contextEntities/{entity}/attributes/{attribute}"
      };
    }
    // Return objects of particular type
    rpc GetNgsi10ContextEntityTypesCetype(GetNgsi10ContextEntityTypesCetypeRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "//ngsi10/contextEntityTypes/{cetype}"
      };
    }
    // Return objects of particular type
    rpc GetNgsi10ContextEntityTypesCetypeAttributesAttribute(GetNgsi10ContextEntityTypesCetypeAttributesAttributeRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "//ngsi10/contextEntityTypes/{cetype}/attributes/{attribute}"
      };
    }
    // Query context broker for contextElements
    rpc PostNgsi10QueryContext(google.protobuf.Empty) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        post: "//ngsi10/queryContext"
      };
    }
    // Create a new context subscription
    rpc PostNgsi10SubscribeContext(google.protobuf.Empty) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        post: "//ngsi10/subscribeContext"
      };
    }
    // Delete a context subscription
    rpc PostNgsi10UnsubscribeContext(google.protobuf.Empty) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        post: "//ngsi10/unsubscribeContext"
      };
    }
    // Add or update NGSI contextElements
    rpc PostNgsi10UpdateContext(google.protobuf.Empty) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        post: "//ngsi10/updateContext"
      };
    }
    // Update/edit a context subscription
    rpc PostNgsi10UpdateContextSubscription(google.protobuf.Empty) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        post: "//ngsi10/updateContextSubscription"
      };
    }
    // Return all objects
    rpc GetObjects(google.protobuf.Empty) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "//objects"
      };
    }
    // Get a single object
    rpc GetObjectsCdk_id(GetObjectsCdk_idRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "//objects/{cdk_id}"
      };
    }
    // Delete a single object
    rpc DeleteObjectsCdk_id(DeleteObjectsCdk_idRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        delete: "//objects/{cdk_id}"
      };
    }
    // Get all layers that contain data of single object
    rpc GetObjectsCdk_idLayers(GetObjectsCdk_idLayersRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "//objects/{cdk_id}/layers"
      };
    }
    // Return all data on single layer of single object
    rpc GetObjectsCdk_idLayersLayer(GetObjectsCdk_idLayersLayerRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "//objects/{cdk_id}/layers/{layer}"
      };
    }
    // Overwrite data on layer to single object
    rpc PutObjectsCdk_idLayersLayer(PutObjectsCdk_idLayersLayerRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        put: "//objects/{cdk_id}/layers/{layer}"
      };
    }
    // Add data on layer to single object
    rpc PostObjectsCdk_idLayersLayer(PostObjectsCdk_idLayersLayerRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        post: "//objects/{cdk_id}/layers/{layer}"
      };
    }
    // Remove data on layer from single object
    rpc DeleteObjectsCdk_idLayersLayer(DeleteObjectsCdk_idLayersLayerRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        delete: "//objects/{cdk_id}/layers/{layer}"
      };
    }
    // Return all owners
    rpc GetOwners(google.protobuf.Empty) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "//owners"
      };
    }
    // Create new owner
    rpc PostOwners(google.protobuf.Empty) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        post: "//owners"
      };
    }
    // Get a single owner
    rpc GetOwnersOwner(GetOwnersOwnerRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "//owners/{owner}"
      };
    }
    // Delete owner - and all layers and data belonging to this owner
    rpc DeleteOwnersOwner(DeleteOwnersOwnerRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        delete: "//owners/{owner}"
      };
    }
    // Return all layers belonging to a single owner
    rpc GetOwnersOwnerLayers(GetOwnersOwnerLayersRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "//owners/{owner}/layers"
      };
    }
    // Return a session key
    rpc GetSession(GetSessionRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "//session"
      };
    }
    // Close session
    rpc DeleteSession(google.protobuf.Empty) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        delete: "//session"
      };
    }
}
