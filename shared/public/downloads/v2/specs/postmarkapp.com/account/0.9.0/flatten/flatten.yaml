basePath: /
consumes.length: 1
consumes[0]: application/json
definitions.CreateServerPayload.description: ""
definitions.CreateServerPayload.properties.BounceHookUrl.type: string
definitions.CreateServerPayload.properties.Color.type: string
definitions.CreateServerPayload.properties.DeliveryHookUrl.type: string
definitions.CreateServerPayload.properties.InboundDomain.type: string
definitions.CreateServerPayload.properties.InboundHookUrl.type: string
definitions.CreateServerPayload.properties.InboundSpamThreshold.type: integer
definitions.CreateServerPayload.properties.Name.type: string
definitions.CreateServerPayload.properties.OpenHookUrl.type: string
definitions.CreateServerPayload.properties.PostFirstOpenOnly.type: boolean
definitions.CreateServerPayload.properties.RawEmailEnabled.type: boolean
definitions.CreateServerPayload.properties.SmtpApiActivated.type: boolean
definitions.CreateServerPayload.properties.TrackOpens.type: boolean
definitions.DKIMRotationResponse.description: ""
definitions.DKIMRotationResponse.properties.DKIMHost.type: string
definitions.DKIMRotationResponse.properties.DKIMPendingHost.type: string
definitions.DKIMRotationResponse.properties.DKIMPendingTextValue.type: string
definitions.DKIMRotationResponse.properties.DKIMRevokedHost.type: string
definitions.DKIMRotationResponse.properties.DKIMRevokedTextValue.type: string
definitions.DKIMRotationResponse.properties.DKIMTestValue.type: string
definitions.DKIMRotationResponse.properties.DKIMUpdateStatus.type: string
definitions.DKIMRotationResponse.properties.DKIMVerified.type: boolean
definitions.DKIMRotationResponse.properties.ID.format: int64
definitions.DKIMRotationResponse.properties.ID.type: integer
definitions.DKIMRotationResponse.properties.Name.type: string
definitions.DKIMRotationResponse.properties.SafeToRemoveRevokedKeyFromDNS.type: boolean
definitions.DKIMRotationResponse.properties.WeakDKIM.type: boolean
definitions.DomainCreationModel.description: ""
definitions.DomainCreationModel.properties.Name.type: string
definitions.DomainCreationModel.properties.ReturnPathDomain.type: string
definitions.DomainEditingModel.description: ""
definitions.DomainEditingModel.properties.ReturnPathDomain.type: string
definitions.DomainExtendedInformation.description: ""
definitions.DomainExtendedInformation.properties.DKIMHost.type: string
definitions.DomainExtendedInformation.properties.DKIMPendingHost.type: string
definitions.DomainExtendedInformation.properties.DKIMPendingTextValue.type: string
definitions.DomainExtendedInformation.properties.DKIMRevokedHost.type: string
definitions.DomainExtendedInformation.properties.DKIMRevokedTextValue.type: string
definitions.DomainExtendedInformation.properties.DKIMTestValue.type: string
definitions.DomainExtendedInformation.properties.DKIMUpdateStatus.type: string
definitions.DomainExtendedInformation.properties.DKIMVerified.type: boolean
definitions.DomainExtendedInformation.properties.ID.format: int64
definitions.DomainExtendedInformation.properties.ID.type: integer
definitions.DomainExtendedInformation.properties.Name.type: string
definitions.DomainExtendedInformation.properties.ReturnPathDomain.type: string
definitions.DomainExtendedInformation.properties.ReturnPathDomainCNAMEValue.type: string
definitions.DomainExtendedInformation.properties.ReturnPathDomainVerified.type: boolean
definitions.DomainExtendedInformation.properties.SPFHost.type: string
definitions.DomainExtendedInformation.properties.SPFTextValue.type: string
definitions.DomainExtendedInformation.properties.SPFVerified.type: boolean
definitions.DomainExtendedInformation.properties.SafeToRemoveRevokedKeyFromDNS.type: boolean
definitions.DomainExtendedInformation.properties.WeakDKIM.type: boolean
definitions.DomainInformation.description: ""
definitions.DomainInformation.properties.DKIMVerified.type: boolean
definitions.DomainInformation.properties.ID.format: int64
definitions.DomainInformation.properties.ID.type: integer
definitions.DomainInformation.properties.Name.type: string
definitions.DomainInformation.properties.ReturnPathDomainVerified.type: boolean
definitions.DomainInformation.properties.SPFVerified.type: boolean
definitions.DomainInformation.properties.WeakDKIM.type: boolean
definitions.DomainListingResults.description: ""
definitions.DomainListingResults.properties.Domains.items.$ref: '#/definitions/DomainInformation'
definitions.DomainListingResults.properties.Domains.type: array
definitions.DomainListingResults.properties.TotalCount.type: integer
definitions.DomainSPFResult.description: ""
definitions.DomainSPFResult.properties.SPFHost.type: string
definitions.DomainSPFResult.properties.SPFTextValue.type: string
definitions.DomainSPFResult.properties.SPFVerified.type: boolean
definitions.EditServerPayload.description: ""
definitions.EditServerPayload.properties.BounceHookUrl.type: string
definitions.EditServerPayload.properties.Color.type: string
definitions.EditServerPayload.properties.DeliveryHookUrl.type: string
definitions.EditServerPayload.properties.InboundDomain.type: string
definitions.EditServerPayload.properties.InboundHookUrl.type: string
definitions.EditServerPayload.properties.InboundSpamThreshold.type: integer
definitions.EditServerPayload.properties.Name.type: string
definitions.EditServerPayload.properties.OpenHookUrl.type: string
definitions.EditServerPayload.properties.PostFirstOpenOnly.type: boolean
definitions.EditServerPayload.properties.RawEmailEnabled.type: boolean
definitions.EditServerPayload.properties.SmtpApiActivated.type: boolean
definitions.EditServerPayload.properties.TrackOpens.type: boolean
definitions.ExtendedServerInfo.description: ""
definitions.ExtendedServerInfo.properties.ApiTokens.items.type: string
definitions.ExtendedServerInfo.properties.ApiTokens.type: array
definitions.ExtendedServerInfo.properties.BounceHookUrl.type: string
definitions.ExtendedServerInfo.properties.Color.type: string
definitions.ExtendedServerInfo.properties.DeliveryHookUrl.type: string
definitions.ExtendedServerInfo.properties.ID.type: integer
definitions.ExtendedServerInfo.properties.InboundAddress.type: string
definitions.ExtendedServerInfo.properties.InboundDomain.type: string
definitions.ExtendedServerInfo.properties.InboundHash.type: string
definitions.ExtendedServerInfo.properties.InboundHookUrl.type: string
definitions.ExtendedServerInfo.properties.InboundSpamThreshold.type: integer
definitions.ExtendedServerInfo.properties.Name.type: string
definitions.ExtendedServerInfo.properties.OpenHookUrl.type: string
definitions.ExtendedServerInfo.properties.PostFirstOpenOnly.type: boolean
definitions.ExtendedServerInfo.properties.RawEmailEnabled.type: boolean
definitions.ExtendedServerInfo.properties.ServerLink.type: string
definitions.ExtendedServerInfo.properties.SmtpApiActivated.type: boolean
definitions.ExtendedServerInfo.properties.TrackLinks.enum.length: 4
definitions.ExtendedServerInfo.properties.TrackLinks.enum[0]: None
definitions.ExtendedServerInfo.properties.TrackLinks.enum[1]: HtmlAndTextTracking
definitions.ExtendedServerInfo.properties.TrackLinks.enum[2]: HtmlOnlyTracking
definitions.ExtendedServerInfo.properties.TrackLinks.enum[3]: TextOnlyTracking
definitions.ExtendedServerInfo.properties.TrackLinks.type: string
definitions.ExtendedServerInfo.properties.TrackOpens.type: boolean
definitions.SenderListingResults.description: ""
definitions.SenderListingResults.properties.SenderSignatures.items.$ref: '#/definitions/SenderSignatureInformation'
definitions.SenderListingResults.properties.SenderSignatures.type: array
definitions.SenderListingResults.properties.TotalCount.type: integer
definitions.SenderSignatureCreationModel.description: ""
definitions.SenderSignatureCreationModel.properties.FromEmail.format: email
definitions.SenderSignatureCreationModel.properties.FromEmail.type: string
definitions.SenderSignatureCreationModel.properties.Name.type: string
definitions.SenderSignatureCreationModel.properties.ReplyToEmail.format: email
definitions.SenderSignatureCreationModel.properties.ReplyToEmail.type: string
definitions.SenderSignatureCreationModel.properties.ReturnPathDomain.type: string
definitions.SenderSignatureEditingModel.description: ""
definitions.SenderSignatureEditingModel.properties.Name.type: string
definitions.SenderSignatureEditingModel.properties.ReplyToEmail.format: email
definitions.SenderSignatureEditingModel.properties.ReplyToEmail.type: string
definitions.SenderSignatureEditingModel.properties.ReturnPathDomain.type: string
definitions.SenderSignatureExtendedInformation.description: ""
definitions.SenderSignatureExtendedInformation.properties.Confirmed.type: boolean
definitions.SenderSignatureExtendedInformation.properties.DKIMHost.type: string
definitions.SenderSignatureExtendedInformation.properties.DKIMPendingHost.type: string
definitions.SenderSignatureExtendedInformation.properties.DKIMPendingTextValue.type: string
definitions.SenderSignatureExtendedInformation.properties.DKIMRevokedHost.type: string
definitions.SenderSignatureExtendedInformation.properties.DKIMRevokedTextValue.type: string
definitions.SenderSignatureExtendedInformation.properties.DKIMTestValue.type: string
definitions.SenderSignatureExtendedInformation.properties.DKIMUpdateStatus.type: string
definitions.SenderSignatureExtendedInformation.properties.DKIMVerified.type: boolean
definitions.SenderSignatureExtendedInformation.properties.Domain.type: string
definitions.SenderSignatureExtendedInformation.properties.EmailAddress.format: email
definitions.SenderSignatureExtendedInformation.properties.EmailAddress.type: string
definitions.SenderSignatureExtendedInformation.properties.ID.format: int64
definitions.SenderSignatureExtendedInformation.properties.ID.type: integer
definitions.SenderSignatureExtendedInformation.properties.Name.type: string
definitions.SenderSignatureExtendedInformation.properties.ReplyToEmailAddress.format: email
definitions.SenderSignatureExtendedInformation.properties.ReplyToEmailAddress.type: string
definitions.SenderSignatureExtendedInformation.properties.ReturnPathDomain.type: string
definitions.SenderSignatureExtendedInformation.properties.ReturnPathDomainCNAMEValue.type: string
definitions.SenderSignatureExtendedInformation.properties.ReturnPathDomainVerified.type: boolean
definitions.SenderSignatureExtendedInformation.properties.SPFHost.type: string
definitions.SenderSignatureExtendedInformation.properties.SPFTextValue.type: string
definitions.SenderSignatureExtendedInformation.properties.SPFVerified.type: boolean
definitions.SenderSignatureExtendedInformation.properties.SafeToRemoveRevokedKeyFromDNS.type: boolean
definitions.SenderSignatureExtendedInformation.properties.WeakDKIM.type: boolean
definitions.SenderSignatureInformation.description: ""
definitions.SenderSignatureInformation.properties.Confirmed.type: boolean
definitions.SenderSignatureInformation.properties.Domain.type: string
definitions.SenderSignatureInformation.properties.EmailAddress.format: email
definitions.SenderSignatureInformation.properties.EmailAddress.type: string
definitions.SenderSignatureInformation.properties.ID.format: int64
definitions.SenderSignatureInformation.properties.ID.type: integer
definitions.SenderSignatureInformation.properties.Name.type: string
definitions.SenderSignatureInformation.properties.ReplyToEmailAddress.format: email
definitions.SenderSignatureInformation.properties.ReplyToEmailAddress.type: string
definitions.ServerListingResponse.description: The results of listing servers.
definitions.ServerListingResponse.properties.Servers.items.$ref: '#/definitions/ExtendedServerInfo'
definitions.ServerListingResponse.properties.Servers.type: array
definitions.ServerListingResponse.properties.TotalCount.type: integer
definitions.StandardPostmarkResponse.description: A Postmark API error.
definitions.StandardPostmarkResponse.properties.ErrorCode.type: integer
definitions.StandardPostmarkResponse.properties.Message.type: string
host: api.postmarkapp.com
info.description: "Postmark makes sending and receiving email \nincredibly easy. The
  Account-level API allows users to\nconfigure all Servers, Domains, and Sender Signatures
  associated \nwith an Account.\n"
info.title: Postmark Account-level
info.version: 0.9.0
info.x-apisguru-categories.length: 1
info.x-apisguru-categories[0]: email
info.x-logo.url: https://api.apis.guru/v2/cache/logo/https_pbs.twimg.com_profile_images_879295889185157120_ZYlwxzeY_400x400.jpg
info.x-origin.length: 1
info.x-origin[0].format: swagger
info.x-origin[0].url: https://postmarkapp.com/swagger/account.yml
info.x-origin[0].version: "2.0"
info.x-preferred: true
info.x-providerName: postmarkapp.com
info.x-serviceName: account
paths./domains.get.operationId: listDomains
paths./domains.get.parameters.length: 3
paths./domains.get.parameters[0].description: The token associated with the Account
  on which this request will operate.
paths./domains.get.parameters[0].in: header
paths./domains.get.parameters[0].name: X-Postmark-Account-Token
paths./domains.get.parameters[0].required: true
paths./domains.get.parameters[0].type: string
paths./domains.get.parameters[1].description: Number of records to return per request.
  Max 500.
paths./domains.get.parameters[1].in: query
paths./domains.get.parameters[1].maximum: 500
paths./domains.get.parameters[1].minimum: 1
paths./domains.get.parameters[1].name: count
paths./domains.get.parameters[1].required: true
paths./domains.get.parameters[1].type: integer
paths./domains.get.parameters[2].description: Number of records to skip
paths./domains.get.parameters[2].in: query
paths./domains.get.parameters[2].minimum: 0
paths./domains.get.parameters[2].name: offset
paths./domains.get.parameters[2].required: true
paths./domains.get.parameters[2].type: integer
paths./domains.get.responses.200.description: OK
paths./domains.get.responses.200.schema.$ref: '#/definitions/DomainListingResults'
paths./domains.get.responses.422.$ref: '#/responses/422'
paths./domains.get.responses.500.$ref: '#/responses/500'
paths./domains.get.summary: List Domains
paths./domains.get.tags.length: 1
paths./domains.get.tags[0]: Domains API
paths./domains.post.operationId: createDomain
paths./domains.post.parameters.length: 2
paths./domains.post.parameters[0].description: The token associated with the Account
  on which this request will operate.
paths./domains.post.parameters[0].in: header
paths./domains.post.parameters[0].name: X-Postmark-Account-Token
paths./domains.post.parameters[0].required: true
paths./domains.post.parameters[0].type: string
paths./domains.post.parameters[1].in: body
paths./domains.post.parameters[1].name: body
paths./domains.post.parameters[1].schema.$ref: '#/definitions/DomainCreationModel'
paths./domains.post.responses.200.description: OK
paths./domains.post.responses.200.schema.$ref: '#/definitions/DomainExtendedInformation'
paths./domains.post.responses.422.$ref: '#/responses/422'
paths./domains.post.responses.500.$ref: '#/responses/500'
paths./domains.post.summary: Create a Domain
paths./domains.post.tags.length: 1
paths./domains.post.tags[0]: Domains API
paths./domains/{domainid}.delete.operationId: deleteDomain
paths./domains/{domainid}.delete.parameters.length: 2
paths./domains/{domainid}.delete.parameters[0].description: The token associated with
  the Account on which this request will operate.
paths./domains/{domainid}.delete.parameters[0].in: header
paths./domains/{domainid}.delete.parameters[0].name: X-Postmark-Account-Token
paths./domains/{domainid}.delete.parameters[0].required: true
paths./domains/{domainid}.delete.parameters[0].type: string
paths./domains/{domainid}.delete.parameters[1].description: The ID for the Domain
  that should be deleted by the request.
paths./domains/{domainid}.delete.parameters[1].in: path
paths./domains/{domainid}.delete.parameters[1].name: domainid
paths./domains/{domainid}.delete.parameters[1].required: true
paths./domains/{domainid}.delete.parameters[1].type: integer
paths./domains/{domainid}.delete.responses.200.description: OK
paths./domains/{domainid}.delete.responses.200.schema.$ref: '#/definitions/StandardPostmarkResponse'
paths./domains/{domainid}.delete.responses.422.$ref: '#/responses/422'
paths./domains/{domainid}.delete.responses.500.$ref: '#/responses/500'
paths./domains/{domainid}.delete.summary: Delete a Domain
paths./domains/{domainid}.delete.tags.length: 1
paths./domains/{domainid}.delete.tags[0]: Domains API
paths./domains/{domainid}.get.operationId: getDomain
paths./domains/{domainid}.get.parameters.length: 2
paths./domains/{domainid}.get.parameters[0].description: The token associated with
  the Account on which this request will operate.
paths./domains/{domainid}.get.parameters[0].in: header
paths./domains/{domainid}.get.parameters[0].name: X-Postmark-Account-Token
paths./domains/{domainid}.get.parameters[0].required: true
paths./domains/{domainid}.get.parameters[0].type: string
paths./domains/{domainid}.get.parameters[1].description: The ID for the Domain that
  should be retrieved.
paths./domains/{domainid}.get.parameters[1].in: path
paths./domains/{domainid}.get.parameters[1].name: domainid
paths./domains/{domainid}.get.parameters[1].required: true
paths./domains/{domainid}.get.parameters[1].type: integer
paths./domains/{domainid}.get.responses.200.description: OK
paths./domains/{domainid}.get.responses.200.schema.$ref: '#/definitions/DomainExtendedInformation'
paths./domains/{domainid}.get.responses.422.$ref: '#/responses/422'
paths./domains/{domainid}.get.responses.500.$ref: '#/responses/500'
paths./domains/{domainid}.get.summary: Get a Domain
paths./domains/{domainid}.get.tags.length: 1
paths./domains/{domainid}.get.tags[0]: Domains API
paths./domains/{domainid}.put.operationId: editDomain
paths./domains/{domainid}.put.parameters.length: 3
paths./domains/{domainid}.put.parameters[0].description: The token associated with
  the Account on which this request will operate.
paths./domains/{domainid}.put.parameters[0].in: header
paths./domains/{domainid}.put.parameters[0].name: X-Postmark-Account-Token
paths./domains/{domainid}.put.parameters[0].required: true
paths./domains/{domainid}.put.parameters[0].type: string
paths./domains/{domainid}.put.parameters[1].description: The ID for the Domain that
  should be modified by the request.
paths./domains/{domainid}.put.parameters[1].in: path
paths./domains/{domainid}.put.parameters[1].name: domainid
paths./domains/{domainid}.put.parameters[1].required: true
paths./domains/{domainid}.put.parameters[1].type: integer
paths./domains/{domainid}.put.parameters[2].in: body
paths./domains/{domainid}.put.parameters[2].name: body
paths./domains/{domainid}.put.parameters[2].schema.$ref: '#/definitions/DomainEditingModel'
paths./domains/{domainid}.put.responses.200.description: OK
paths./domains/{domainid}.put.responses.200.schema.$ref: '#/definitions/DomainExtendedInformation'
paths./domains/{domainid}.put.responses.422.$ref: '#/responses/422'
paths./domains/{domainid}.put.responses.500.$ref: '#/responses/500'
paths./domains/{domainid}.put.summary: Update a Domain
paths./domains/{domainid}.put.tags.length: 1
paths./domains/{domainid}.put.tags[0]: Domains API
paths./domains/{domainid}/rotatedkim.post.description: "Creates a new DKIM key to
  replace your current key. Until the DNS entries are confirmed, \nthe new values
  will be in the `DKIMPendingHost` and `DKIMPendingTextValue` fields. \nAfter the
  new DKIM value is verified in DNS, the pending values will migrate to \n`DKIMTextValue`
  and `DKIMPendingTextValue` and Postmark will begin to sign emails \nwith the new
  DKIM key.\n"
paths./domains/{domainid}/rotatedkim.post.operationId: rotateDKIMKeyForDomain
paths./domains/{domainid}/rotatedkim.post.parameters.length: 2
paths./domains/{domainid}/rotatedkim.post.parameters[0].description: The token associated
  with the Account on which this request will operate.
paths./domains/{domainid}/rotatedkim.post.parameters[0].in: header
paths./domains/{domainid}/rotatedkim.post.parameters[0].name: X-Postmark-Account-Token
paths./domains/{domainid}/rotatedkim.post.parameters[0].required: true
paths./domains/{domainid}/rotatedkim.post.parameters[0].type: string
paths./domains/{domainid}/rotatedkim.post.parameters[1].description: The ID for the
  Sender Signature for which a new DKIM Key should be generated.
paths./domains/{domainid}/rotatedkim.post.parameters[1].in: path
paths./domains/{domainid}/rotatedkim.post.parameters[1].name: domainid
paths./domains/{domainid}/rotatedkim.post.parameters[1].required: true
paths./domains/{domainid}/rotatedkim.post.parameters[1].type: integer
paths./domains/{domainid}/rotatedkim.post.responses.200.description: OK
paths./domains/{domainid}/rotatedkim.post.responses.200.schema.$ref: '#/definitions/DKIMRotationResponse'
paths./domains/{domainid}/rotatedkim.post.responses.422.$ref: '#/responses/422'
paths./domains/{domainid}/rotatedkim.post.responses.500.$ref: '#/responses/500'
paths./domains/{domainid}/rotatedkim.post.summary: Rotate DKIM Key
paths./domains/{domainid}/rotatedkim.post.tags.length: 1
paths./domains/{domainid}/rotatedkim.post.tags[0]: Domains API
paths./domains/{domainid}/verifyspf.post.operationId: requestSPFVerificationForDomain
paths./domains/{domainid}/verifyspf.post.parameters.length: 2
paths./domains/{domainid}/verifyspf.post.parameters[0].description: The token associated
  with the Account on which this request will operate.
paths./domains/{domainid}/verifyspf.post.parameters[0].in: header
paths./domains/{domainid}/verifyspf.post.parameters[0].name: X-Postmark-Account-Token
paths./domains/{domainid}/verifyspf.post.parameters[0].required: true
paths./domains/{domainid}/verifyspf.post.parameters[0].type: string
paths./domains/{domainid}/verifyspf.post.parameters[1].description: The ID for the
  Domain for which SPF DNS records should be verified.
paths./domains/{domainid}/verifyspf.post.parameters[1].in: path
paths./domains/{domainid}/verifyspf.post.parameters[1].name: domainid
paths./domains/{domainid}/verifyspf.post.parameters[1].required: true
paths./domains/{domainid}/verifyspf.post.parameters[1].type: integer
paths./domains/{domainid}/verifyspf.post.responses.200.description: OK
paths./domains/{domainid}/verifyspf.post.responses.200.schema.$ref: '#/definitions/DomainSPFResult'
paths./domains/{domainid}/verifyspf.post.responses.422.$ref: '#/responses/422'
paths./domains/{domainid}/verifyspf.post.responses.500.$ref: '#/responses/500'
paths./domains/{domainid}/verifyspf.post.summary: Request DNS Verification for SPF
paths./domains/{domainid}/verifyspf.post.tags.length: 1
paths./domains/{domainid}/verifyspf.post.tags[0]: Domains API
paths./senders.get.operationId: listSenderSignatures
paths./senders.get.parameters.length: 3
paths./senders.get.parameters[0].description: The token associated with the Account
  on which this request will operate.
paths./senders.get.parameters[0].in: header
paths./senders.get.parameters[0].name: X-Postmark-Account-Token
paths./senders.get.parameters[0].required: true
paths./senders.get.parameters[0].type: string
paths./senders.get.parameters[1].description: Number of records to return per request.
  Max 500.
paths./senders.get.parameters[1].in: query
paths./senders.get.parameters[1].maximum: 500
paths./senders.get.parameters[1].minimum: 1
paths./senders.get.parameters[1].name: count
paths./senders.get.parameters[1].required: true
paths./senders.get.parameters[1].type: integer
paths./senders.get.parameters[2].description: Number of records to skip
paths./senders.get.parameters[2].in: query
paths./senders.get.parameters[2].minimum: 0
paths./senders.get.parameters[2].name: offset
paths./senders.get.parameters[2].required: true
paths./senders.get.parameters[2].type: integer
paths./senders.get.responses.200.description: OK
paths./senders.get.responses.200.schema.$ref: '#/definitions/SenderListingResults'
paths./senders.get.responses.422.$ref: '#/responses/422'
paths./senders.get.responses.500.$ref: '#/responses/500'
paths./senders.get.summary: List Sender Signatures
paths./senders.get.tags.length: 1
paths./senders.get.tags[0]: Sender Signatures API
paths./senders.post.operationId: createSenderSignature
paths./senders.post.parameters.length: 2
paths./senders.post.parameters[0].description: The token associated with the Account
  on which this request will operate.
paths./senders.post.parameters[0].in: header
paths./senders.post.parameters[0].name: X-Postmark-Account-Token
paths./senders.post.parameters[0].required: true
paths./senders.post.parameters[0].type: string
paths./senders.post.parameters[1].in: body
paths./senders.post.parameters[1].name: body
paths./senders.post.parameters[1].schema.$ref: '#/definitions/SenderSignatureCreationModel'
paths./senders.post.responses.200.description: OK
paths./senders.post.responses.200.schema.$ref: '#/definitions/SenderSignatureExtendedInformation'
paths./senders.post.responses.422.$ref: '#/responses/422'
paths./senders.post.responses.500.$ref: '#/responses/500'
paths./senders.post.summary: Create a Sender Signature
paths./senders.post.tags.length: 1
paths./senders.post.tags[0]: Sender Signatures API
paths./senders/{signatureid}.delete.operationId: deleteSenderSignature
paths./senders/{signatureid}.delete.parameters.length: 2
paths./senders/{signatureid}.delete.parameters[0].description: The token associated
  with the Account on which this request will operate.
paths./senders/{signatureid}.delete.parameters[0].in: header
paths./senders/{signatureid}.delete.parameters[0].name: X-Postmark-Account-Token
paths./senders/{signatureid}.delete.parameters[0].required: true
paths./senders/{signatureid}.delete.parameters[0].type: string
paths./senders/{signatureid}.delete.parameters[1].description: The ID for the Sender
  Signature that should be deleted by the request.
paths./senders/{signatureid}.delete.parameters[1].in: path
paths./senders/{signatureid}.delete.parameters[1].name: signatureid
paths./senders/{signatureid}.delete.parameters[1].required: true
paths./senders/{signatureid}.delete.parameters[1].type: integer
paths./senders/{signatureid}.delete.responses.200.description: OK
paths./senders/{signatureid}.delete.responses.200.schema.$ref: '#/definitions/StandardPostmarkResponse'
paths./senders/{signatureid}.delete.responses.422.$ref: '#/responses/422'
paths./senders/{signatureid}.delete.responses.500.$ref: '#/responses/500'
paths./senders/{signatureid}.delete.summary: Delete a Sender Signature
paths./senders/{signatureid}.delete.tags.length: 1
paths./senders/{signatureid}.delete.tags[0]: Sender Signatures API
paths./senders/{signatureid}.get.operationId: getSenderSignature
paths./senders/{signatureid}.get.parameters.length: 2
paths./senders/{signatureid}.get.parameters[0].description: The token associated with
  the Account on which this request will operate.
paths./senders/{signatureid}.get.parameters[0].in: header
paths./senders/{signatureid}.get.parameters[0].name: X-Postmark-Account-Token
paths./senders/{signatureid}.get.parameters[0].required: true
paths./senders/{signatureid}.get.parameters[0].type: string
paths./senders/{signatureid}.get.parameters[1].description: The ID for the Sender
  Signature that should be retrieved.
paths./senders/{signatureid}.get.parameters[1].in: path
paths./senders/{signatureid}.get.parameters[1].name: signatureid
paths./senders/{signatureid}.get.parameters[1].required: true
paths./senders/{signatureid}.get.parameters[1].type: integer
paths./senders/{signatureid}.get.responses.200.description: OK
paths./senders/{signatureid}.get.responses.200.schema.$ref: '#/definitions/SenderSignatureExtendedInformation'
paths./senders/{signatureid}.get.responses.422.$ref: '#/responses/422'
paths./senders/{signatureid}.get.responses.500.$ref: '#/responses/500'
paths./senders/{signatureid}.get.summary: Get a Sender Signature
paths./senders/{signatureid}.get.tags.length: 1
paths./senders/{signatureid}.get.tags[0]: Sender Signatures API
paths./senders/{signatureid}.put.operationId: editSenderSignature
paths./senders/{signatureid}.put.parameters.length: 3
paths./senders/{signatureid}.put.parameters[0].description: The token associated with
  the Account on which this request will operate.
paths./senders/{signatureid}.put.parameters[0].in: header
paths./senders/{signatureid}.put.parameters[0].name: X-Postmark-Account-Token
paths./senders/{signatureid}.put.parameters[0].required: true
paths./senders/{signatureid}.put.parameters[0].type: string
paths./senders/{signatureid}.put.parameters[1].description: The ID for the Sender
  Signature that should be modified by the request.
paths./senders/{signatureid}.put.parameters[1].in: path
paths./senders/{signatureid}.put.parameters[1].name: signatureid
paths./senders/{signatureid}.put.parameters[1].required: true
paths./senders/{signatureid}.put.parameters[1].type: integer
paths./senders/{signatureid}.put.parameters[2].in: body
paths./senders/{signatureid}.put.parameters[2].name: body
paths./senders/{signatureid}.put.parameters[2].schema.$ref: '#/definitions/SenderSignatureEditingModel'
paths./senders/{signatureid}.put.responses.200.description: OK
paths./senders/{signatureid}.put.responses.200.schema.$ref: '#/definitions/SenderSignatureExtendedInformation'
paths./senders/{signatureid}.put.responses.422.$ref: '#/responses/422'
paths./senders/{signatureid}.put.responses.500.$ref: '#/responses/500'
paths./senders/{signatureid}.put.summary: Update a Sender Signature
paths./senders/{signatureid}.put.tags.length: 1
paths./senders/{signatureid}.put.tags[0]: Sender Signatures API
paths./senders/{signatureid}/requestnewdkim.post.description: "Requests a new DKIM
  key to be created. Until the DNS entries are confirmed, \nthe new values will be
  in the `DKIMPendingHost` and `DKIMPendingTextValue` fields. \nAfter the new DKIM
  value is verified in DNS, the pending values will migrate to \n`DKIMTextValue` and
  `DKIMPendingTextValue` and Postmark will begin to sign emails \nwith the new DKIM
  key.\n"
paths./senders/{signatureid}/requestnewdkim.post.operationId: requestNewDKIMKeyForSenderSignature
paths./senders/{signatureid}/requestnewdkim.post.parameters.length: 2
paths./senders/{signatureid}/requestnewdkim.post.parameters[0].description: The token
  associated with the Account on which this request will operate.
paths./senders/{signatureid}/requestnewdkim.post.parameters[0].in: header
paths./senders/{signatureid}/requestnewdkim.post.parameters[0].name: X-Postmark-Account-Token
paths./senders/{signatureid}/requestnewdkim.post.parameters[0].required: true
paths./senders/{signatureid}/requestnewdkim.post.parameters[0].type: string
paths./senders/{signatureid}/requestnewdkim.post.parameters[1].description: The ID
  for the Sender Signature for which a new DKIM Key should be generated.
paths./senders/{signatureid}/requestnewdkim.post.parameters[1].in: path
paths./senders/{signatureid}/requestnewdkim.post.parameters[1].name: signatureid
paths./senders/{signatureid}/requestnewdkim.post.parameters[1].required: true
paths./senders/{signatureid}/requestnewdkim.post.parameters[1].type: integer
paths./senders/{signatureid}/requestnewdkim.post.responses.200.description: OK
paths./senders/{signatureid}/requestnewdkim.post.responses.200.schema.$ref: '#/definitions/StandardPostmarkResponse'
paths./senders/{signatureid}/requestnewdkim.post.responses.422.$ref: '#/responses/422'
paths./senders/{signatureid}/requestnewdkim.post.responses.500.$ref: '#/responses/500'
paths./senders/{signatureid}/requestnewdkim.post.summary: Request a new DKIM Key
paths./senders/{signatureid}/requestnewdkim.post.tags.length: 1
paths./senders/{signatureid}/requestnewdkim.post.tags[0]: Sender Signatures API
paths./senders/{signatureid}/resend.post.operationId: resendSenderSignatureConfirmationEmail
paths./senders/{signatureid}/resend.post.parameters.length: 2
paths./senders/{signatureid}/resend.post.parameters[0].description: The token associated
  with the Account on which this request will operate.
paths./senders/{signatureid}/resend.post.parameters[0].in: header
paths./senders/{signatureid}/resend.post.parameters[0].name: X-Postmark-Account-Token
paths./senders/{signatureid}/resend.post.parameters[0].required: true
paths./senders/{signatureid}/resend.post.parameters[0].type: string
paths./senders/{signatureid}/resend.post.parameters[1].description: The ID for the
  Sender Signature that should have its confirmation email resent.
paths./senders/{signatureid}/resend.post.parameters[1].in: path
paths./senders/{signatureid}/resend.post.parameters[1].name: signatureid
paths./senders/{signatureid}/resend.post.parameters[1].required: true
paths./senders/{signatureid}/resend.post.parameters[1].type: integer
paths./senders/{signatureid}/resend.post.responses.200.description: OK
paths./senders/{signatureid}/resend.post.responses.200.schema.$ref: '#/definitions/StandardPostmarkResponse'
paths./senders/{signatureid}/resend.post.responses.422.$ref: '#/responses/422'
paths./senders/{signatureid}/resend.post.responses.500.$ref: '#/responses/500'
paths./senders/{signatureid}/resend.post.summary: Resend Signature Confirmation Email
paths./senders/{signatureid}/resend.post.tags.length: 1
paths./senders/{signatureid}/resend.post.tags[0]: Sender Signatures API
paths./senders/{signatureid}/verifyspf.post.operationId: requestSPFVerificationForSenderSignature
paths./senders/{signatureid}/verifyspf.post.parameters.length: 2
paths./senders/{signatureid}/verifyspf.post.parameters[0].description: The token associated
  with the Account on which this request will operate.
paths./senders/{signatureid}/verifyspf.post.parameters[0].in: header
paths./senders/{signatureid}/verifyspf.post.parameters[0].name: X-Postmark-Account-Token
paths./senders/{signatureid}/verifyspf.post.parameters[0].required: true
paths./senders/{signatureid}/verifyspf.post.parameters[0].type: string
paths./senders/{signatureid}/verifyspf.post.parameters[1].description: The ID for
  the Sender Signature for which SPF DNS records should be verified.
paths./senders/{signatureid}/verifyspf.post.parameters[1].in: path
paths./senders/{signatureid}/verifyspf.post.parameters[1].name: signatureid
paths./senders/{signatureid}/verifyspf.post.parameters[1].required: true
paths./senders/{signatureid}/verifyspf.post.parameters[1].type: integer
paths./senders/{signatureid}/verifyspf.post.responses.200.description: OK
paths./senders/{signatureid}/verifyspf.post.responses.200.schema.$ref: '#/definitions/SenderSignatureExtendedInformation'
paths./senders/{signatureid}/verifyspf.post.responses.422.$ref: '#/responses/422'
paths./senders/{signatureid}/verifyspf.post.responses.500.$ref: '#/responses/500'
paths./senders/{signatureid}/verifyspf.post.summary: Request DNS Verification for
  SPF
paths./senders/{signatureid}/verifyspf.post.tags.length: 1
paths./senders/{signatureid}/verifyspf.post.tags[0]: Sender Signatures API
paths./servers.get.operationId: listServers
paths./servers.get.parameters.length: 4
paths./servers.get.parameters[0].description: The token associated with the Account
  on which this request will operate.
paths./servers.get.parameters[0].in: header
paths./servers.get.parameters[0].name: X-Postmark-Account-Token
paths./servers.get.parameters[0].required: true
paths./servers.get.parameters[0].type: string
paths./servers.get.parameters[1].description: Number of servers to return per request.
paths./servers.get.parameters[1].in: query
paths./servers.get.parameters[1].name: count
paths./servers.get.parameters[1].required: true
paths./servers.get.parameters[1].type: integer
paths./servers.get.parameters[2].description: Number of servers to skip.
paths./servers.get.parameters[2].in: query
paths./servers.get.parameters[2].name: offset
paths./servers.get.parameters[2].required: true
paths./servers.get.parameters[2].type: integer
paths./servers.get.parameters[3].description: Filter by a specific server name
paths./servers.get.parameters[3].in: query
paths./servers.get.parameters[3].name: name
paths./servers.get.parameters[3].type: string
paths./servers.get.responses.200.description: OK
paths./servers.get.responses.200.schema.$ref: '#/definitions/ServerListingResponse'
paths./servers.get.responses.422.$ref: '#/responses/422'
paths./servers.get.responses.500.$ref: '#/responses/500'
paths./servers.get.summary: List servers
paths./servers.get.tags.length: 1
paths./servers.get.tags[0]: Server Management API
paths./servers.post.operationId: createServer
paths./servers.post.parameters.length: 2
paths./servers.post.parameters[0].description: The token associated with the Account
  on which this request will operate.
paths./servers.post.parameters[0].in: header
paths./servers.post.parameters[0].name: X-Postmark-Account-Token
paths./servers.post.parameters[0].required: true
paths./servers.post.parameters[0].type: string
paths./servers.post.parameters[1].in: body
paths./servers.post.parameters[1].name: body
paths./servers.post.parameters[1].schema.$ref: '#/definitions/CreateServerPayload'
paths./servers.post.responses.200.description: OK
paths./servers.post.responses.200.schema.$ref: '#/definitions/ExtendedServerInfo'
paths./servers.post.responses.422.$ref: '#/responses/422'
paths./servers.post.responses.500.$ref: '#/responses/500'
paths./servers.post.summary: Create a Server
paths./servers.post.tags.length: 1
paths./servers.post.tags[0]: Server Management API
paths./servers/{serverid}.delete.operationId: deleteServer
paths./servers/{serverid}.delete.parameters.length: 2
paths./servers/{serverid}.delete.parameters[0].description: The token associated with
  the Account on which this request will operate.
paths./servers/{serverid}.delete.parameters[0].in: header
paths./servers/{serverid}.delete.parameters[0].name: X-Postmark-Account-Token
paths./servers/{serverid}.delete.parameters[0].required: true
paths./servers/{serverid}.delete.parameters[0].type: string
paths./servers/{serverid}.delete.parameters[1].description: The ID of the Server that
  should be deleted.
paths./servers/{serverid}.delete.parameters[1].in: path
paths./servers/{serverid}.delete.parameters[1].name: serverid
paths./servers/{serverid}.delete.parameters[1].required: true
paths./servers/{serverid}.delete.parameters[1].type: integer
paths./servers/{serverid}.delete.responses.200.description: OK
paths./servers/{serverid}.delete.responses.422.$ref: '#/responses/422'
paths./servers/{serverid}.delete.responses.500.$ref: '#/responses/500'
paths./servers/{serverid}.delete.summary: Delete a Server
paths./servers/{serverid}.delete.tags.length: 1
paths./servers/{serverid}.delete.tags[0]: Server Management API
paths./servers/{serverid}.get.operationId: getServerInformation
paths./servers/{serverid}.get.parameters.length: 2
paths./servers/{serverid}.get.parameters[0].description: The token associated with
  the Account on which this request will operate.
paths./servers/{serverid}.get.parameters[0].in: header
paths./servers/{serverid}.get.parameters[0].name: X-Postmark-Account-Token
paths./servers/{serverid}.get.parameters[0].required: true
paths./servers/{serverid}.get.parameters[0].type: string
paths./servers/{serverid}.get.parameters[1].description: The ID of the Server to get.
paths./servers/{serverid}.get.parameters[1].in: path
paths./servers/{serverid}.get.parameters[1].name: serverid
paths./servers/{serverid}.get.parameters[1].required: true
paths./servers/{serverid}.get.parameters[1].type: integer
paths./servers/{serverid}.get.responses.200.description: OK
paths./servers/{serverid}.get.responses.200.schema.$ref: '#/definitions/ExtendedServerInfo'
paths./servers/{serverid}.get.responses.422.$ref: '#/responses/422'
paths./servers/{serverid}.get.responses.500.$ref: '#/responses/500'
paths./servers/{serverid}.get.summary: Get a Server
paths./servers/{serverid}.get.tags.length: 1
paths./servers/{serverid}.get.tags[0]: Server Management API
paths./servers/{serverid}.put.operationId: editServerInformation
paths./servers/{serverid}.put.parameters.length: 3
paths./servers/{serverid}.put.parameters[0].description: The token associated with
  the Account on which this request will operate.
paths./servers/{serverid}.put.parameters[0].in: header
paths./servers/{serverid}.put.parameters[0].name: X-Postmark-Account-Token
paths./servers/{serverid}.put.parameters[0].required: true
paths./servers/{serverid}.put.parameters[0].type: string
paths./servers/{serverid}.put.parameters[1].description: The ID of the Server to update.
paths./servers/{serverid}.put.parameters[1].in: path
paths./servers/{serverid}.put.parameters[1].name: serverid
paths./servers/{serverid}.put.parameters[1].required: true
paths./servers/{serverid}.put.parameters[1].type: integer
paths./servers/{serverid}.put.parameters[2].in: body
paths./servers/{serverid}.put.parameters[2].name: body
paths./servers/{serverid}.put.parameters[2].schema.$ref: '#/definitions/EditServerPayload'
paths./servers/{serverid}.put.responses.200.description: OK
paths./servers/{serverid}.put.responses.200.schema.$ref: '#/definitions/ExtendedServerInfo'
paths./servers/{serverid}.put.responses.422.$ref: '#/responses/422'
paths./servers/{serverid}.put.responses.500.$ref: '#/responses/500'
paths./servers/{serverid}.put.summary: Edit a Server
paths./servers/{serverid}.put.tags.length: 1
paths./servers/{serverid}.put.tags[0]: Server Management API
produces.length: 1
produces[0]: application/json
responses.422.description: An error was generated due to incorrect use of the API.
  See the Message associated with this response for more information.
responses.422.schema.$ref: '#/definitions/StandardPostmarkResponse'
responses.500.description: Indicates an internal server error occurred.
schemes.length: 1
schemes[0]: https
swagger: "2.0"
