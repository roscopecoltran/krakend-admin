basePath: /marketplace/v1
consumes.length: 1
consumes[0]: application/json
definitions.Address.properties.address.description: Address first line (ave, street
  name, etc..)
definitions.Address.properties.address.type: string
definitions.Address.properties.city.description: City
definitions.Address.properties.city.type: string
definitions.Address.properties.complement.description: Complementary info (aptartament
  number, building name, suite)
definitions.Address.properties.complement.type: string
definitions.Address.properties.countryId.description: 'Contry code using aplpha ISO-3166,
  Example: BR, US, AR, GB, CN'
definitions.Address.properties.countryId.type: string
definitions.Address.properties.neighbourhood.description: Address neighbourhood
definitions.Address.properties.neighbourhood.type: string
definitions.Address.properties.number.description: Address number
definitions.Address.properties.number.type: string
definitions.Address.properties.recipientName.description: Recipient Name
definitions.Address.properties.recipientName.type: string
definitions.Address.properties.reference.description: Pontos de referÃªncia
definitions.Address.properties.reference.type: string
definitions.Address.properties.state.description: State
definitions.Address.properties.state.type: string
definitions.Address.properties.zipCode.description: Zip Code
definitions.Address.properties.zipCode.type: string
definitions.Address.required.length: 8
definitions.Address.required[0]: address
definitions.Address.required[1]: number
definitions.Address.required[2]: complement
definitions.Address.required[3]: neighbourhood
definitions.Address.required[4]: city
definitions.Address.required[5]: state
definitions.Address.required[6]: countryId
definitions.Address.required[7]: zipCode
definitions.ControlledStock.properties.crossDockingTime.default: 0
definitions.ControlledStock.properties.crossDockingTime.description: Time it will
  take to manufacture, prepare or setup this product. Time must be provided in seconds.
  For example 1 day should be informed as 86400. This time will be included in the
  ETA informed to the customer
definitions.ControlledStock.properties.crossDockingTime.type: integer
definitions.ControlledStock.properties.quantity.description: Quantity of product available
  for sale
definitions.ControlledStock.properties.quantity.type: integer
definitions.ControlledStock.properties.reserved.description: Locked product invetory
  for orders that are not approved and are not ready to fullfil.
definitions.ControlledStock.properties.reserved.type: integer
definitions.ControlledStock.required.length: 1
definitions.ControlledStock.required[0]: quantity
definitions.Courier.properties.name.description: Courier name
definitions.Courier.properties.name.type: string
definitions.Courier.properties.taxID.description: Courier taxId information. For example
  CNPJ
definitions.Courier.properties.taxID.type: string
definitions.Courier.required.length: 1
definitions.Courier.required[0]: name
definitions.Customer.properties.documentNumber.description: Customer tax information
definitions.Customer.properties.documentNumber.type: string
definitions.Customer.properties.email.description: 'Customer Email (when available).
  Please note: Email is not a mandatory field'
definitions.Customer.properties.email.type: string
definitions.Customer.properties.id.description: Customer unqiue Id
definitions.Customer.properties.id.type: string
definitions.Customer.properties.name.description: Customer Name
definitions.Customer.properties.name.type: string
definitions.Customer.properties.phones.description: Customer phone number
definitions.Customer.properties.phones.items.$ref: '#/definitions/Phone'
definitions.Customer.properties.phones.type: array
definitions.Customer.properties.type.description: 'Customer type: Enterprise or Consumer'
definitions.Customer.properties.type.type: string
definitions.Customer.required.length: 5
definitions.Customer.required[0]: id
definitions.Customer.required[1]: name
definitions.Customer.required[2]: documentNumber
definitions.Customer.required[3]: type
definitions.Customer.required[4]: phones
definitions.CustomerReference.properties.name.description: Customer name
definitions.CustomerReference.properties.name.type: string
definitions.CustomerReference.properties.phoneNumber.description: Customer phone mumber
definitions.CustomerReference.properties.phoneNumber.type: string
definitions.Dimensions.properties.height.description: Product height in millimeters.
  No commas or periods are accepeted. For example one meter produc must be informed
  as 1000. Another example 1 meter and 23 centimeters should be informed solely as
  1230
definitions.Dimensions.properties.height.type: integer
definitions.Dimensions.properties.length.description: Product length in millimeters.
  No commas or periods are accepeted. For example one meter produc must be informed
  as 1000. Another example 1 meter and 23 centimeters should be informed solely as
  1230
definitions.Dimensions.properties.length.type: integer
definitions.Dimensions.properties.weight.description: Product weight in Grams. No
  commas or periods are accepeted. For example one killo must be informed as 1000.
  Another example 1 Kilo and 234 grams should be informed solely as 1234
definitions.Dimensions.properties.weight.type: integer
definitions.Dimensions.properties.width.description: Product width in millimeters.
  No commas or periods are accepeted. For example one meter produc must be informed
  as 1000. Another example 1 meter and 23 centimeters should be informed solely as
  1230
definitions.Dimensions.properties.width.type: integer
definitions.Dimensions.required.length: 4
definitions.Dimensions.required[0]: weight
definitions.Dimensions.required[1]: length
definitions.Dimensions.required[2]: width
definitions.Dimensions.required[3]: height
definitions.Error.properties.message.description: Friendly message describing the
  error
definitions.Error.properties.message.type: string
definitions.Error.properties.skuSellerId.description: When applicabe will include
  `skuSellerId` related to this error
definitions.Error.properties.skuSellerId.type: string
definitions.Error.properties.type.description: Error type
definitions.Error.properties.type.type: string
definitions.Error.required.length: 2
definitions.Error.required[0]: type
definitions.Error.required[1]: message
definitions.Freight.properties.ETA.description: Estimated time of arrival
definitions.Freight.properties.ETA.format: date-time
definitions.Freight.properties.ETA.type: string
definitions.Freight.properties.additionalInfo.description: Aditional information for
  the courier
definitions.Freight.properties.additionalInfo.type: string
definitions.Freight.properties.chargedAmount.description: Shipment cost. Must be informed
  in cents. No commas or periods are accepeted. For example one dollar should be informed
  as 100. Same as $1,2345.67 must be informed solely as 1234567
definitions.Freight.properties.chargedAmount.type: integer
definitions.Freight.properties.crossDockingTime.default: 0
definitions.Freight.properties.crossDockingTime.description: Time it will take to
  manufacture, prepare or setup this product. Time must be provided in seconds. For
  example 1 day should be informed as 86400. This time will be included in the product
  ETA informed to the customer
definitions.Freight.properties.crossDockingTime.type: integer
definitions.Freight.properties.defaultAmount.description: Default value of this shippment.
definitions.Freight.properties.defaultAmount.type: integer
definitions.Freight.properties.scheduledPeriod.description: Scheduled period
definitions.Freight.properties.scheduledPeriod.type: string
definitions.Freight.properties.transitTime.description: Deliver time in seconds. Time
  must be provided in seconds. For example 1 day should be informed as 86400. This
  time will be included in the product ETA informed to the customer
definitions.Freight.properties.transitTime.type: integer
definitions.Freight.properties.type.description: Freight type
definitions.Freight.properties.type.type: string
definitions.Freight.required.length: 5
definitions.Freight.required[0]: defaultAmount
definitions.Freight.required[1]: chargedAmount
definitions.Freight.required[2]: transitTime
definitions.Freight.required[3]: crossDockingTime
definitions.Freight.required[4]: additionalInfo
definitions.GetOrders.properties.metadata.items.$ref: '#/definitions/Metadata'
definitions.GetOrders.properties.metadata.type: array
definitions.GetOrders.properties.orders.items.$ref: '#/definitions/Order'
definitions.GetOrders.properties.orders.type: array
definitions.GetOrders.required.length: 2
definitions.GetOrders.required[0]: orders
definitions.GetOrders.required[1]: metadata
definitions.GetOrdersShipments.properties.metadata.description: Response payload
definitions.GetOrdersShipments.properties.metadata.items.$ref: '#/definitions/Metadata'
definitions.GetOrdersShipments.properties.metadata.type: array
definitions.GetOrdersShipments.properties.shipments.description: Order Shippment Status
definitions.GetOrdersShipments.properties.shipments.items.$ref: '#/definitions/OrderShippmentStatus'
definitions.GetOrdersShipments.properties.shipments.type: array
definitions.GetProduct.properties.attributes.items.$ref: '#/definitions/ProductAttribute'
definitions.GetProduct.properties.attributes.type: array
definitions.GetProduct.properties.brand.description: Brand name
definitions.GetProduct.properties.brand.type: string
definitions.GetProduct.properties.categories.description: Array of categories associated
  with this product
definitions.GetProduct.properties.categories.items.type: string
definitions.GetProduct.properties.categories.type: array
definitions.GetProduct.properties.description.description: Product text description.
definitions.GetProduct.properties.description.type: string
definitions.GetProduct.properties.dimensions.$ref: '#/definitions/Dimensions'
definitions.GetProduct.properties.errors.items.$ref: '#/definitions/Error'
definitions.GetProduct.properties.errors.type: array
definitions.GetProduct.properties.giftWrap.$ref: '#/definitions/GiftWrap'
definitions.GetProduct.properties.gtin.description: Array of product EAN and/or ISBN
  and/or ASIN codes
definitions.GetProduct.properties.gtin.items.type: string
definitions.GetProduct.properties.gtin.type: array
definitions.GetProduct.properties.images.description: List of valid Product image
  URLs. HTTP or HTTPS are valid. HTTPS is prefered.
definitions.GetProduct.properties.images.items.type: string
definitions.GetProduct.properties.images.type: array
definitions.GetProduct.properties.price.$ref: '#/definitions/ProductPrice'
definitions.GetProduct.properties.productGroupId.description: Unique Product Group
  ID. Products with the same `productGroupId` will be grouped and displayed as a unique
  entry. Use `productGroupId` to group diferent SKUs that represent diferent colors,
  sizes, capacities, etc..
definitions.GetProduct.properties.productGroupId.type: string
definitions.GetProduct.properties.skuSellerId.description: Unique Product Id (SKU)
  in the seller system
definitions.GetProduct.properties.skuSellerId.type: string
definitions.GetProduct.properties.status.description: Product status
definitions.GetProduct.properties.status.type: string
definitions.GetProduct.properties.stock.description: Number of products availble for
  sale from the seller. Each new successfull order will automatically reduce the number
  of products available.
definitions.GetProduct.properties.stock.type: integer
definitions.GetProduct.properties.title.description: Product name as advertised by
  manufacturer. This how the product will be displayed in the Marketplace
definitions.GetProduct.properties.title.type: string
definitions.GetProduct.properties.videos.description: List of videos de URLs associated
  with this product. HTTP or HTTPS are valid. HTTPS is prefered.
definitions.GetProduct.properties.videos.items.type: string
definitions.GetProduct.properties.videos.type: array
definitions.GetProduct.required.length: 10
definitions.GetProduct.required[0]: skuSellerId
definitions.GetProduct.required[1]: title
definitions.GetProduct.required[2]: description
definitions.GetProduct.required[3]: brand
definitions.GetProduct.required[4]: price
definitions.GetProduct.required[5]: categories
definitions.GetProduct.required[6]: attributes
definitions.GetProduct.required[7]: stock
definitions.GetProduct.required[8]: images
definitions.GetProduct.required[9]: status
definitions.GetProductsResponse.properties.metadata.description: Payload with response
definitions.GetProductsResponse.properties.metadata.items.$ref: '#/definitions/Metadata'
definitions.GetProductsResponse.properties.metadata.type: array
definitions.GetProductsResponse.properties.skus.items.$ref: '#/definitions/GetProduct'
definitions.GetProductsResponse.properties.skus.type: array
definitions.GetProductsStatusSelling.properties.metadata.items.$ref: '#/definitions/Metadata'
definitions.GetProductsStatusSelling.properties.metadata.type: array
definitions.GetProductsStatusSelling.properties.sellerItems.items.$ref: '#/definitions/SellerItem'
definitions.GetProductsStatusSelling.properties.sellerItems.type: array
definitions.GetProductsStatusSelling.required.length: 2
definitions.GetProductsStatusSelling.required[0]: sellerItems
definitions.GetProductsStatusSelling.required[1]: metadata
definitions.GetSellerProductStatus.properties.errors.items.$ref: '#/definitions/Error'
definitions.GetSellerProductStatus.properties.errors.type: array
definitions.GetSellerProductStatus.properties.price.$ref: '#/definitions/ProductPrice'
definitions.GetSellerProductStatus.properties.skuSellerId.description: Unique Product
  Id (SKU) in the seller system.
definitions.GetSellerProductStatus.properties.skuSellerId.type: string
definitions.GetSellerProductStatus.properties.status.description: Product status in
  the marketplace
definitions.GetSellerProductStatus.properties.status.type: string
definitions.GetSellerProductStatus.properties.stock.description: Number of products
  availble for sale from the seller. Each new successfull order will automatically
  reduce the number of products available.
definitions.GetSellerProductStatus.properties.stock.type: integer
definitions.GetSellerProductStatus.required.length: 4
definitions.GetSellerProductStatus.required[0]: skuSellerId
definitions.GetSellerProductStatus.required[1]: status
definitions.GetSellerProductStatus.required[2]: price
definitions.GetSellerProductStatus.required[3]: stock
definitions.GetSellerProductsStatus.properties.metadata.description: Response payload
definitions.GetSellerProductsStatus.properties.metadata.items.$ref: '#/definitions/Metadata'
definitions.GetSellerProductsStatus.properties.metadata.type: array
definitions.GetSellerProductsStatus.properties.skus.description: Status of the products
  from the seller
definitions.GetSellerProductsStatus.properties.skus.items.$ref: '#/definitions/GetSellerProductStatus'
definitions.GetSellerProductsStatus.properties.skus.type: array
definitions.GetTicketMessages.properties.messages.items.$ref: '#/definitions/TicketMessage'
definitions.GetTicketMessages.properties.messages.type: array
definitions.GetTicketMessages.properties.metadata.items.$ref: '#/definitions/Metadata'
definitions.GetTicketMessages.properties.metadata.type: array
definitions.GetTicketMessages.required.length: 1
definitions.GetTicketMessages.required[0]: metadata
definitions.GetTickets.properties.metadata.items.$ref: '#/definitions/Metadata'
definitions.GetTickets.properties.metadata.type: array
definitions.GetTickets.properties.tickets.items.$ref: '#/definitions/Ticket'
definitions.GetTickets.properties.tickets.type: array
definitions.GiftCard.properties.from.description: Giftcard `from` field
definitions.GiftCard.properties.from.type: string
definitions.GiftCard.properties.message.description: Giftcard `body` message
definitions.GiftCard.properties.message.type: string
definitions.GiftCard.properties.to.description: Giftcard `to` field
definitions.GiftCard.properties.to.type: string
definitions.GiftCard.required.length: 3
definitions.GiftCard.required[0]: from
definitions.GiftCard.required[1]: to
definitions.GiftCard.required[2]: message
definitions.GiftWrap.properties.available.description: Flag that defines if this product
  is eligible for giftwrapping
definitions.GiftWrap.properties.available.type: boolean
definitions.GiftWrap.properties.messageSupport.description: Flag that defines if seller
  supports giftwrapp with a message
definitions.GiftWrap.properties.messageSupport.type: boolean
definitions.GiftWrap.properties.value.description: Amount charged for gift wrap. All
  prices must be provided in cents. No commas or periods are accepeted. For example
  one dollar should be informed as 100. $1,2345.67 should be informed solely as 1234567
definitions.GiftWrap.properties.value.type: integer
definitions.GiftWrap.required.length: 2
definitions.GiftWrap.required[0]: available
definitions.GiftWrap.required[1]: value
definitions.Image.properties.main.description: Sets as main image
definitions.Image.properties.main.type: boolean
definitions.Image.properties.type.description: Image format
definitions.Image.properties.type.type: string
definitions.Image.properties.url.description: Image URL
definitions.Image.properties.url.type: string
definitions.Image.required.length: 3
definitions.Image.required[0]: type
definitions.Image.required[1]: main
definitions.Image.required[2]: url
definitions.Invoice.properties.accessKey.description: NÃºmero da chave de acesso Ã 
  nota fiscal. A chave possui 44 dÃ­gitos e contÃ©m todas as informaÃ§Ãµes da DANFE
definitions.Invoice.properties.accessKey.type: string
definitions.Invoice.properties.cnpj.description: CNPJ responsÃ¡vel pelo envio dos produtos.
  Pode ser diferente caso a empresa possua diversos Centros de DistribuiÃ§Ã£o (CDs)
definitions.Invoice.properties.cnpj.type: string
definitions.Invoice.properties.issuedAt.description: Data de emissÃ£o da Nota Fiscal
definitions.Invoice.properties.issuedAt.format: date-time
definitions.Invoice.properties.issuedAt.type: string
definitions.Invoice.properties.linkDanfe.description: Url para consulta da DANFE
definitions.Invoice.properties.linkDanfe.type: string
definitions.Invoice.properties.linkXml.description: Url para consulta da NFE
definitions.Invoice.properties.linkXml.type: string
definitions.Invoice.properties.number.description: NÃºmero da Nota Fiscal
definitions.Invoice.properties.number.type: string
definitions.Invoice.properties.serie.description: NÃºmero de serie da Nota Fiscal
definitions.Invoice.properties.serie.type: string
definitions.Invoice.required.length: 3
definitions.Invoice.required[0]: number
definitions.Invoice.required[1]: serie
definitions.Invoice.required[2]: accessKey
definitions.Metadata.properties.key.description: JSON attribute key
definitions.Metadata.properties.key.type: string
definitions.Metadata.properties.value.description: JSON object value
definitions.Metadata.properties.value.type: string
definitions.Metadata.required.length: 2
definitions.Metadata.required[0]: key
definitions.Metadata.required[1]: value
definitions.NewTicket.properties.body.description: Message to the customer
definitions.NewTicket.properties.body.type: string
definitions.NewTicket.properties.customer.$ref: '#/definitions/CustomerReference'
definitions.NewTicket.properties.description.description: Trouble ticked brief description
definitions.NewTicket.properties.description.type: string
definitions.NewTicket.properties.from.description: Friendly name of the person sending
  this message, if not provided the seller `name` will be used
definitions.NewTicket.properties.from.type: string
definitions.NewTicket.properties.message.$ref: '#/definitions/NewTicketMessage'
definitions.NewTicket.properties.orderId.description: Unique order Id that this trouble
  ticket belongs to
definitions.NewTicket.properties.orderId.type: string
definitions.NewTicket.properties.type.description: Trouble ticket type.
definitions.NewTicket.properties.type.type: string
definitions.NewTicket.required.length: 4
definitions.NewTicket.required[0]: orderId
definitions.NewTicket.required[1]: from
definitions.NewTicket.required[2]: body
definitions.NewTicket.required[3]: type
definitions.NewTicketMessage.properties.body.description: Message text
definitions.NewTicketMessage.properties.body.type: string
definitions.NewTicketMessage.properties.visibility.description: Defines if this message
  is `CUSTOMER` (customer will receive a copy) or `INTERNAL`
definitions.NewTicketMessage.properties.visibility.type: string
definitions.NewTicketMessage.required.length: 2
definitions.NewTicketMessage.required[0]: visibility
definitions.NewTicketMessage.required[1]: body
definitions.NewTrackingRefund.properties.courier.$ref: '#/definitions/Courier'
definitions.NewTrackingRefund.properties.cte.description: Conhecimento do Transporte
  EletrÃ´nico
definitions.NewTrackingRefund.properties.cte.type: string
definitions.NewTrackingRefund.properties.info.description: Aditional information about
  this shippment
definitions.NewTrackingRefund.properties.info.type: string
definitions.NewTrackingRefund.properties.items.items.$ref: '#/definitions/OrderItemReference'
definitions.NewTrackingRefund.properties.items.type: array
definitions.NewTrackingRefund.properties.number.description: Tracking Id in the courier
definitions.NewTrackingRefund.properties.number.type: string
definitions.NewTrackingRefund.properties.occurredAt.description: Date time that this
  was created
definitions.NewTrackingRefund.properties.occurredAt.format: date-time
definitions.NewTrackingRefund.properties.occurredAt.type: string
definitions.NewTrackingRefund.properties.sellerShipmentId.description: Unique Seller
  shipment Id. This must be unique across all orders and shipments
definitions.NewTrackingRefund.properties.sellerShipmentId.type: string
definitions.NewTrackingRefund.properties.tranckingUrl.description: Courier tracking
  URL
definitions.NewTrackingRefund.properties.tranckingUrl.type: string
definitions.NewTrackingRefund.required.length: 2
definitions.NewTrackingRefund.required[0]: items
definitions.NewTrackingRefund.required[1]: info
definitions.Newshipmentstatus.properties.courier.$ref: '#/definitions/Courier'
definitions.Newshipmentstatus.properties.cte.description: Conhecimento do Transporte
  EletrÃ´nico
definitions.Newshipmentstatus.properties.cte.type: string
definitions.Newshipmentstatus.properties.invoice.$ref: '#/definitions/Invoice'
definitions.Newshipmentstatus.properties.items.description: List of Order IDs of this
  items from this order that will be updated in this shipment
definitions.Newshipmentstatus.properties.items.items.type: string
definitions.Newshipmentstatus.properties.items.type: array
definitions.Newshipmentstatus.properties.number.description: Unique id shipment Id
  in the courier system
definitions.Newshipmentstatus.properties.number.type: string
definitions.Newshipmentstatus.properties.occurredAt.description: Data da ocorrÃªncia
definitions.Newshipmentstatus.properties.occurredAt.format: date-time
definitions.Newshipmentstatus.properties.occurredAt.type: string
definitions.Newshipmentstatus.properties.sellerShipmentId.description: Unique Seller
  shipment Id. This must be unique across all orders and shipmnents
definitions.Newshipmentstatus.properties.sellerShipmentId.type: string
definitions.Newshipmentstatus.properties.trackingUrl.description: Courier tracking
  URL
definitions.Newshipmentstatus.properties.trackingUrl.type: string
definitions.Newshipmentstatus.required.length: 5
definitions.Newshipmentstatus.required[0]: items
definitions.Newshipmentstatus.required[1]: occurredAt
definitions.Newshipmentstatus.required[2]: sellerShipmentId
definitions.Newshipmentstatus.required[3]: courier
definitions.Newshipmentstatus.required[4]: invoice
definitions.Order.properties.approvedAt.description: Date that this order was approved
  for fullfilment
definitions.Order.properties.approvedAt.format: date-time
definitions.Order.properties.approvedAt.type: string
definitions.Order.properties.billingAddress.$ref: '#/definitions/Address'
definitions.Order.properties.createdAt.description: Date that this order was created
definitions.Order.properties.createdAt.format: date-time
definitions.Order.properties.createdAt.type: string
definitions.Order.properties.customer.$ref: '#/definitions/Customer'
definitions.Order.properties.freight.$ref: '#/definitions/Freight'
definitions.Order.properties.items.items.$ref: '#/definitions/OrderItem'
definitions.Order.properties.items.type: array
definitions.Order.properties.orderId.description: Unique order Id (related to this
  seller)
definitions.Order.properties.orderId.type: string
definitions.Order.properties.orderMarketplaceId.description: Unique Order Id that
  will be displayed to the customer. This Id is not the same as `orderId`
definitions.Order.properties.orderMarketplaceId.type: string
definitions.Order.properties.seller.$ref: '#/definitions/Seller'
definitions.Order.properties.shipments.items.$ref: '#/definitions/Shippment'
definitions.Order.properties.shipments.type: array
definitions.Order.properties.shippingAddress.$ref: '#/definitions/Address'
definitions.Order.properties.status.description: Order status
definitions.Order.properties.status.type: string
definitions.Order.properties.totalAmount.description: Order total in cents, this is
  what the customer will be charged for. No commas or periods are accepeted. For example
  one dollar should be informed as 100. $1,2345.67 should be informed solely as 1234567
definitions.Order.properties.totalAmount.type: integer
definitions.Order.properties.totalDiscountAmount.description: Total order discounts
  in cents. No commas or periods are accepeted. For example one dollar should be informed
  as 100. $1,2345.67 should be informed solely as 1234567
definitions.Order.properties.totalDiscountAmount.type: integer
definitions.Order.properties.totalItemsAmount.description: Order items total amount
  in cents. No commas or periods are accepeted. For example one dollar should be informed
  as 100. $1,2345.67 should be informed solely as 1234567
definitions.Order.properties.totalItemsAmount.type: integer
definitions.Order.properties.totalShippingAmount.description: Total shipments amount
  items. No commas or periods are accepeted. For example one dollar should be informed
  as 100. $1,2345.67 should be informed solely as 1234567
definitions.Order.properties.totalShippingAmount.type: integer
definitions.Order.properties.updatedAt.description: Last update data of this order
definitions.Order.properties.updatedAt.format: date-time
definitions.Order.properties.updatedAt.type: string
definitions.Order.required.length: 15
definitions.Order.required[0]: orderId
definitions.Order.required[1]: orderMarketplaceId
definitions.Order.required[2]: createdAt
definitions.Order.required[3]: updatedAt
definitions.Order.required[4]: status
definitions.Order.required[5]: totalAmount
definitions.Order.required[6]: totalItemsAmount
definitions.Order.required[7]: totalShippingAmount
definitions.Order.required[8]: totalDiscountAmount
definitions.Order.required[9]: freight
definitions.Order.required[10]: customer
definitions.Order.required[11]: billingAddress
definitions.Order.required[12]: items
definitions.Order.required[13]: shippingAddress
definitions.Order.required[14]: shipments
definitions.OrderGiftWrap.properties.available.description: Defines if giftwrpping
  is available for this product.
definitions.OrderGiftWrap.properties.available.type: boolean
definitions.OrderGiftWrap.properties.giftCard.$ref: '#/definitions/GiftCard'
definitions.OrderGiftWrap.properties.messageSupport.description: Defines if giftwrpping
  is available for this product.
definitions.OrderGiftWrap.properties.messageSupport.type: boolean
definitions.OrderGiftWrap.properties.value.description: Amount charged for gift wrap.
  All prices must be provided in cents. No commas or periods are accepeted. For example
  one dollar should be informed as 100. $1,2345.67 should be informed solely as 1234567
definitions.OrderGiftWrap.properties.value.type: integer
definitions.OrderGiftWrap.required.length: 2
definitions.OrderGiftWrap.required[0]: available
definitions.OrderGiftWrap.required[1]: value
definitions.OrderItem.properties.freight.$ref: '#/definitions/Freight'
definitions.OrderItem.properties.giftWrap.$ref: '#/definitions/OrderGiftWrap'
definitions.OrderItem.properties.id.description: Unique Id representing this item
definitions.OrderItem.properties.id.type: string
definitions.OrderItem.properties.name.description: Product name
definitions.OrderItem.properties.name.type: string
definitions.OrderItem.properties.promotions.description: Promotions array
definitions.OrderItem.properties.promotions.items.$ref: '#/definitions/Promotion'
definitions.OrderItem.properties.promotions.type: array
definitions.OrderItem.properties.salePrice.description: Product unit price
definitions.OrderItem.properties.salePrice.type: integer
definitions.OrderItem.properties.sent.description: Flag if product was already shipped
definitions.OrderItem.properties.sent.type: boolean
definitions.OrderItem.properties.skuSellerId.description: Unique Product Id (SKU)
  in the seller system
definitions.OrderItem.properties.skuSellerId.type: string
definitions.OrderItem.required.length: 6
definitions.OrderItem.required[0]: id
definitions.OrderItem.required[1]: skuSellerId
definitions.OrderItem.required[2]: name
definitions.OrderItem.required[3]: freight
definitions.OrderItem.required[4]: salePrice
definitions.OrderItem.required[5]: sent
definitions.OrderItemReference.properties.quantity.description: Quantity of items
definitions.OrderItemReference.properties.quantity.type: integer
definitions.OrderItemReference.properties.skuSellerId.description: Unique Product
  Id (SKU) in the seller system. This is the key that defines witch product will be
  updated
definitions.OrderItemReference.properties.skuSellerId.type: string
definitions.OrderItemReference.required.length: 2
definitions.OrderItemReference.required[0]: skuSellerId
definitions.OrderItemReference.required[1]: quantity
definitions.OrderShippment.properties.courier.$ref: '#/definitions/Courier'
definitions.OrderShippment.properties.cte.description: Conhecimento de Transporte
  EletÃ´niconico
definitions.OrderShippment.properties.cte.type: string
definitions.OrderShippment.properties.invoice.$ref: '#/definitions/Invoice'
definitions.OrderShippment.properties.items.items.$ref: '#/definitions/OrderItemReference'
definitions.OrderShippment.properties.items.type: array
definitions.OrderShippment.properties.number.description: Courier unique trackign
  Id associated with this shipment
definitions.OrderShippment.properties.number.type: string
definitions.OrderShippment.properties.occurredAt.description: Date that this shippment
  was shiped
definitions.OrderShippment.properties.occurredAt.format: date-time
definitions.OrderShippment.properties.occurredAt.type: string
definitions.OrderShippment.properties.order.description: Order unique Id
definitions.OrderShippment.properties.order.type: string
definitions.OrderShippment.properties.sellerShipmentId.description: Unique Seller
  shipment Id. This must be unique across all orders and shipments
definitions.OrderShippment.properties.sellerShipmentId.type: string
definitions.OrderShippment.properties.status.description: Shipment status.
definitions.OrderShippment.properties.status.type: string
definitions.OrderShippment.properties.trackingUrl.description: Courier tracking URL
definitions.OrderShippment.properties.trackingUrl.type: string
definitions.OrderShippmentStatus.properties.errors.items.$ref: '#/definitions/Error'
definitions.OrderShippmentStatus.properties.errors.type: array
definitions.OrderShippmentStatus.properties.items.items.$ref: '#/definitions/OrderItemReference'
definitions.OrderShippmentStatus.properties.items.type: array
definitions.OrderShippmentStatus.properties.shipmentId.description: Shippment unique
  Id
definitions.OrderShippmentStatus.properties.shipmentId.type: string
definitions.OrderShippmentStatus.properties.status.description: Shipment status
definitions.OrderShippmentStatus.properties.status.type: string
definitions.OrderShippmentStatus.properties.trackingUrl.description: Courier tracking
  URL
definitions.OrderShippmentStatus.properties.trackingUrl.type: string
definitions.OrdersShipments.properties.shipments.items.$ref: '#/definitions/OrderShippment'
definitions.OrdersShipments.properties.shipments.type: array
definitions.Phone.properties.number.description: Phone number
definitions.Phone.properties.number.type: string
definitions.Phone.properties.type.description: Phone number type, home, office, mobile,
  etc
definitions.Phone.properties.type.type: string
definitions.Phone.required.length: 2
definitions.Phone.required[0]: number
definitions.Phone.required[1]: type
definitions.Product.properties.attributes.description: List of `key` `value` attributes
  of this product. This is very important for search and SEO optmization. Include
  all relevant information
definitions.Product.properties.attributes.items.$ref: '#/definitions/ProductAttribute'
definitions.Product.properties.attributes.type: array
definitions.Product.properties.brand.description: Brand name
definitions.Product.properties.brand.type: string
definitions.Product.properties.categories.description: Array of categories associated
  with this product
definitions.Product.properties.categories.items.type: string
definitions.Product.properties.categories.type: array
definitions.Product.properties.description.description: Product description.
definitions.Product.properties.description.type: string
definitions.Product.properties.dimensions.$ref: '#/definitions/Dimensions'
definitions.Product.properties.giftWrap.$ref: '#/definitions/GiftWrap'
definitions.Product.properties.gtin.description: Array of product EAN and/or ISBN
  and/or ASIN codes
definitions.Product.properties.gtin.items.type: string
definitions.Product.properties.gtin.type: array
definitions.Product.properties.images.description: List of valid Product image URLs.
  HTTP or HTTPS are valid. HTTPS is prefered.
definitions.Product.properties.images.items.type: string
definitions.Product.properties.images.type: array
definitions.Product.properties.price.$ref: '#/definitions/ProductPrice'
definitions.Product.properties.productGroupId.description: Unique Product Group ID.
  Products with the same `productGroupId` will be grouped and displayed as a unique
  entry. Use `productGroupId` to group diferent SKUs that represent diferent colors,
  sizes, capacities, etc..
definitions.Product.properties.productGroupId.type: string
definitions.Product.properties.productId.description: Brand Lovers Product ID. Use
  this to suggest a product association. This field is optional.
definitions.Product.properties.productId.type: string
definitions.Product.properties.skuSellerId.description: Unique Product Id (SKU) in
  the seller system
definitions.Product.properties.skuSellerId.type: string
definitions.Product.properties.stock.description: Number of products availble for
  sale from the seller. Each new successfull order will automatically reduce the number
  of products available.
definitions.Product.properties.stock.type: integer
definitions.Product.properties.title.description: Product name as advertised by manufacturer.
  This how the product will be displayed in the Marketplace
definitions.Product.properties.title.type: string
definitions.Product.properties.videos.description: List of videos de URLs associated
  with this product. HTTP or HTTPS are valid. HTTPS is prefered.
definitions.Product.properties.videos.items.type: string
definitions.Product.properties.videos.type: array
definitions.Product.required.length: 9
definitions.Product.required[0]: skuSellerId
definitions.Product.required[1]: title
definitions.Product.required[2]: description
definitions.Product.required[3]: brand
definitions.Product.required[4]: price
definitions.Product.required[5]: categories
definitions.Product.required[6]: stock
definitions.Product.required[7]: images
definitions.Product.required[8]: attributes
definitions.ProductAttribute.properties.name.description: Attribute name
definitions.ProductAttribute.properties.name.type: string
definitions.ProductAttribute.properties.value.description: Attribute value
definitions.ProductAttribute.properties.value.type: string
definitions.ProductAttribute.required.length: 2
definitions.ProductAttribute.required[0]: name
definitions.ProductAttribute.required[1]: value
definitions.ProductPrice.properties.default.description: List price, also known as
  MSRP (Manufacturer Suggest Retail Price) or the recommended retail price (RRP).
  All prices must be provided in cents. No commas or periods are accepeted. For example
  one dollar should be informed as 100. $1,2345.67 should be informed solely as 1234567
definitions.ProductPrice.properties.default.type: integer
definitions.ProductPrice.properties.offer.description: Product price. This is what
  will be offered to the customer. All prices must be provided in cents. No commas
  or periods are accepeted. For example one dollar should be informed as 100. $1,2345.67
  should be informed solely as 1234567
definitions.ProductPrice.properties.offer.type: integer
definitions.ProductPrice.required.length: 2
definitions.ProductPrice.required[0]: default
definitions.ProductPrice.required[1]: offer
definitions.ProductReference.properties.href.description: Link para acesso ao recurso
definitions.ProductReference.properties.href.type: string
definitions.ProductReference.properties.id.description: ID do recurso
definitions.ProductReference.properties.id.type: string
definitions.ProductReference.required.length: 2
definitions.ProductReference.required[0]: id
definitions.ProductReference.required[1]: href
definitions.ProductSiteReference.properties.skuSellerId.description: Seller unique
  product Id
definitions.ProductSiteReference.properties.skuSellerId.type: string
definitions.ProductSiteReference.properties.url.description: Link do produto no site
definitions.ProductSiteReference.properties.url.type: string
definitions.ProductSiteReference.required.length: 2
definitions.ProductSiteReference.required[0]: url
definitions.ProductSiteReference.required[1]: skuSellerId
definitions.ProductStatusUpdate.properties.active.description: Defines if this product
  is ready for sale. Active `true`, disabled `false`
definitions.ProductStatusUpdate.properties.active.type: boolean
definitions.ProductStatusUpdate.properties.skuSellerId.description: Seller product
  unique Id that will be updated
definitions.ProductStatusUpdate.properties.skuSellerId.type: string
definitions.ProductStatusUpdate.required.length: 2
definitions.ProductStatusUpdate.required[0]: skuSellerId
definitions.ProductStatusUpdate.required[1]: active
definitions.ProductStock.properties.skuSellerId.description: Unique Product Id (SKU)
  in the seller system
definitions.ProductStock.properties.skuSellerId.type: string
definitions.ProductStock.properties.stocks.description: Invetory information
definitions.ProductStock.properties.stocks.items.$ref: '#/definitions/Stock'
definitions.ProductStock.properties.stocks.type: array
definitions.ProductStock.required.length: 2
definitions.ProductStock.required[0]: skuSellerId
definitions.ProductStock.required[1]: stocks
definitions.ProductUpdate.properties.attributes.description: List of `key` `value`
  attributes of this product. This is very important for search and SEO optmization.
  Include all relevant information
definitions.ProductUpdate.properties.attributes.items.$ref: '#/definitions/ProductAttribute'
definitions.ProductUpdate.properties.attributes.type: array
definitions.ProductUpdate.properties.brand.description: Brand name
definitions.ProductUpdate.properties.brand.type: string
definitions.ProductUpdate.properties.categories.description: Array of categories associated
  with this product
definitions.ProductUpdate.properties.categories.items.type: string
definitions.ProductUpdate.properties.categories.type: array
definitions.ProductUpdate.properties.description.description: Product text description.
definitions.ProductUpdate.properties.description.type: string
definitions.ProductUpdate.properties.dimensions.$ref: '#/definitions/Dimensions'
definitions.ProductUpdate.properties.giftWrap.$ref: '#/definitions/GiftWrap'
definitions.ProductUpdate.properties.gtin.description: Array of product EAN and/or
  ISBN and/or ASIN codes
definitions.ProductUpdate.properties.gtin.items.type: string
definitions.ProductUpdate.properties.gtin.type: array
definitions.ProductUpdate.properties.images.description: List of valid Product image
  URLs. HTTP or HTTPS are valid. HTTPS is prefered.
definitions.ProductUpdate.properties.images.items.type: string
definitions.ProductUpdate.properties.images.type: array
definitions.ProductUpdate.properties.price.$ref: '#/definitions/ProductPrice'
definitions.ProductUpdate.properties.productGroupId.description: Unique Product Group
  ID. Products with the same `productGroupId` will be grouped and displayed as a unique
  entry. Use `productGroupId` to group diferent SKUs that represent diferent colors,
  sizes, capacities, etc..
definitions.ProductUpdate.properties.productGroupId.type: string
definitions.ProductUpdate.properties.productId.description: Brand Lovers Product Id.
  Use this to recommend a product association
definitions.ProductUpdate.properties.productId.type: string
definitions.ProductUpdate.properties.skuSellerId.description: Unique Product Id (SKU)
  in the seller system
definitions.ProductUpdate.properties.skuSellerId.type: string
definitions.ProductUpdate.properties.stock.description: Number of products availble
  for sale from the seller. Each new successfull order will automatically reduce the
  number of products available.
definitions.ProductUpdate.properties.stock.type: integer
definitions.ProductUpdate.properties.title.description: Product name as advertised
  by manufacturer. This how the product will be displayed in the Marketplace
definitions.ProductUpdate.properties.title.type: string
definitions.ProductUpdate.properties.videos.description: List of videos de URLs associated
  with this product. HTTP or HTTPS are valid. HTTPS is prefered.
definitions.ProductUpdate.properties.videos.items.type: string
definitions.ProductUpdate.properties.videos.type: array
definitions.ProductUpdate.required.length: 1
definitions.ProductUpdate.required[0]: skuSellerId
definitions.Promotion.properties.amount.description: Total discount in cents. No commas
  or periods are accepeted. For example one dollar should be informed as 100. $1,2345.67
  should be informed solely as 1234567
definitions.Promotion.properties.amount.type: integer
definitions.Promotion.properties.id.description: Promotion unique idenfitcation number
definitions.Promotion.properties.id.type: string
definitions.Promotion.properties.name.description: Promotion name
definitions.Promotion.properties.name.type: string
definitions.Promotion.properties.type.description: Promotion type
definitions.Promotion.properties.type.type: string
definitions.Promotion.required.length: 1
definitions.Promotion.required[0]: id
definitions.Seller.properties.id.description: Seller unique Id in the Brand Lovers
  Marketplace
definitions.Seller.properties.id.type: string
definitions.Seller.properties.name.description: Seller name in the Brand Lovers Marketplace
definitions.Seller.properties.name.type: string
definitions.SellerItem.properties.attributes.items.$ref: '#/definitions/ProductAttribute'
definitions.SellerItem.properties.attributes.type: array
definitions.SellerItem.properties.brand.description: Brand name
definitions.SellerItem.properties.brand.type: string
definitions.SellerItem.properties.dimensions.$ref: '#/definitions/Dimensions'
definitions.SellerItem.properties.giftWrap.$ref: '#/definitions/GiftWrap'
definitions.SellerItem.properties.gtin.description: Array of product EAN and/or ISBN
  and/or ASIN codes
definitions.SellerItem.properties.gtin.items.type: string
definitions.SellerItem.properties.gtin.type: array
definitions.SellerItem.properties.images.description: List of valid Product image
  URLs.
definitions.SellerItem.properties.images.items.$ref: '#/definitions/Image'
definitions.SellerItem.properties.images.type: array
definitions.SellerItem.properties.prices.description: Price information for each marketplace
  that this product is listed
definitions.SellerItem.properties.prices.items.$ref: '#/definitions/ProductPrice'
definitions.SellerItem.properties.prices.type: array
definitions.SellerItem.properties.product.$ref: '#/definitions/ProductReference'
definitions.SellerItem.properties.skuSellerId.description: Unique Product Id (SKU)
  in the seller system
definitions.SellerItem.properties.skuSellerId.type: string
definitions.SellerItem.properties.status.description: Product status for each marketplace
  that this product is listed
definitions.SellerItem.properties.status.items.$ref: '#/definitions/SellerItemStatus'
definitions.SellerItem.properties.status.type: array
definitions.SellerItem.properties.stocks.description: Invetory information for each
  marketplace that this product is listed
definitions.SellerItem.properties.stocks.items.$ref: '#/definitions/ControlledStock'
definitions.SellerItem.properties.stocks.type: array
definitions.SellerItem.properties.title.description: Product name as advertised by
  manufacturer. This how the product will be displayed in the Marketplace
definitions.SellerItem.properties.title.type: string
definitions.SellerItem.properties.urls.description: List of URLs where the product
  is listed for sale
definitions.SellerItem.properties.urls.items.$ref: '#/definitions/ProductSiteReference'
definitions.SellerItem.properties.urls.type: array
definitions.SellerItem.required.length: 10
definitions.SellerItem.required[0]: skuSellerId
definitions.SellerItem.required[1]: title
definitions.SellerItem.required[2]: brand
definitions.SellerItem.required[3]: status
definitions.SellerItem.required[4]: prices
definitions.SellerItem.required[5]: stocks
definitions.SellerItem.required[6]: attributes
definitions.SellerItem.required[7]: product
definitions.SellerItem.required[8]: images
definitions.SellerItem.required[9]: dimensions
definitions.SellerItemPrices.properties.price.$ref: '#/definitions/ProductPrice'
definitions.SellerItemPrices.properties.skuSellerId.description: Unique product Id
  from seller that will be updated
definitions.SellerItemPrices.properties.skuSellerId.type: string
definitions.SellerItemPrices.required.length: 2
definitions.SellerItemPrices.required[0]: skuSellerId
definitions.SellerItemPrices.required[1]: price
definitions.SellerItemStatus.properties.active.description: 'Defines if this product
  is ready for sale. Active `true`, disabled `false` '
definitions.SellerItemStatus.properties.active.type: boolean
definitions.SellerItemStatus.required.length: 1
definitions.SellerItemStatus.required[0]: active
definitions.Shippment.properties.courier.$ref: '#/definitions/Courier'
definitions.Shippment.properties.cte.description: Conhecimento de Transporte EletrÃ´nico
definitions.Shippment.properties.cte.type: string
definitions.Shippment.properties.description.description: Additinal shipment tracking
  information
definitions.Shippment.properties.description.type: string
definitions.Shippment.properties.id.description: Shipment Id associated with this
  shippment used to group diferent item or items from a single order
definitions.Shippment.properties.id.type: string
definitions.Shippment.properties.invoice.$ref: '#/definitions/Invoice'
definitions.Shippment.properties.items.description: List of items of this shippment
definitions.Shippment.properties.items.items.$ref: '#/definitions/OrderItemReference'
definitions.Shippment.properties.items.type: array
definitions.Shippment.properties.number.description: Courier unique trackign Id associated
  with this shipment
definitions.Shippment.properties.number.type: string
definitions.Shippment.properties.occurredAt.description: Date time when this shippment
  happened
definitions.Shippment.properties.occurredAt.format: date-time
definitions.Shippment.properties.occurredAt.type: string
definitions.Shippment.properties.sellerShipmentId.description: Unique Seller shipment
  Id. This must be unique across all orders and shipments
definitions.Shippment.properties.sellerShipmentId.type: string
definitions.Shippment.properties.status.description: Shipment status
definitions.Shippment.properties.status.type: string
definitions.Shippment.properties.trackingUrl.description: Courier tracking URL
definitions.Shippment.properties.trackingUrl.type: string
definitions.Shippment.required.length: 6
definitions.Shippment.required[0]: items
definitions.Shippment.required[1]: status
definitions.Shippment.required[2]: occurredAt
definitions.Shippment.required[3]: sellerShipmentId
definitions.Shippment.required[4]: invoice
definitions.Shippment.required[5]: courier
definitions.Stock.properties.crossDockingTime.default: 0
definitions.Stock.properties.crossDockingTime.description: Time it will take to manufacture,
  prepare or setup this product. Time must be provided in seconds. For example 1 day
  should be informed as 86400. This time will be included in the product ETA informed
  to the customer
definitions.Stock.properties.crossDockingTime.type: integer
definitions.Stock.properties.quantity.description: Stock available
definitions.Stock.properties.quantity.type: integer
definitions.Stock.required.length: 1
definitions.Stock.required[0]: quantity
definitions.Ticket.properties.closedAt.description: Date-time when ticket was closed
definitions.Ticket.properties.closedAt.format: date-time
definitions.Ticket.properties.closedAt.type: string
definitions.Ticket.properties.createdAt.description: Date time that ticket was created
definitions.Ticket.properties.createdAt.format: date-time
definitions.Ticket.properties.createdAt.type: string
definitions.Ticket.properties.customer.$ref: '#/definitions/CustomerReference'
definitions.Ticket.properties.description.description: Trouble ticked brief description
definitions.Ticket.properties.description.type: string
definitions.Ticket.properties.metadata.items.$ref: '#/definitions/Metadata'
definitions.Ticket.properties.metadata.type: array
definitions.Ticket.properties.priority.description: Trouble ticket priority
definitions.Ticket.properties.priority.type: string
definitions.Ticket.properties.sla.description: Date-time with a promisse for the customer
  when this ticket will be resolved
definitions.Ticket.properties.sla.format: date-time
definitions.Ticket.properties.sla.type: string
definitions.Ticket.properties.status.description: Trouble Ticket status. 'OPEN','CLOSED','REOPENED'
definitions.Ticket.properties.status.type: string
definitions.Ticket.properties.subject.description: Short one line title describing
  ticket.
definitions.Ticket.properties.subject.type: string
definitions.Ticket.properties.ticketId.description: Trouble Ticket unique identification
  Id
definitions.Ticket.properties.ticketId.type: string
definitions.Ticket.properties.type.description: Trouble ticket type.
definitions.Ticket.properties.type.type: string
definitions.Ticket.properties.updatedAt.description: Date-time with last update of
  this ticket
definitions.Ticket.properties.updatedAt.format: date-time
definitions.Ticket.properties.updatedAt.type: string
definitions.TicketMessage.properties.body.description: Message text
definitions.TicketMessage.properties.body.type: string
definitions.TicketMessage.properties.createdAt.description: Date created
definitions.TicketMessage.properties.createdAt.format: date-time
definitions.TicketMessage.properties.createdAt.type: string
definitions.TicketMessage.properties.id.description: Trouble Ticket Id.
definitions.TicketMessage.properties.id.type: string
definitions.TicketMessage.properties.visibility.description: Defines if this message
  is `CUSTOMER` (customer will receive a copy) or `INTERNAL`
definitions.TicketMessage.properties.visibility.type: string
definitions.TicketMessage.required.length: 4
definitions.TicketMessage.required[0]: createdAt
definitions.TicketMessage.required[1]: id
definitions.TicketMessage.required[2]: body
definitions.TicketMessage.required[3]: visibility
definitions.TicketStatus.properties.ticketStatus.description: New trouble ticket status.
  Valid options are `REOPENED`, `CLOSED`
definitions.TicketStatus.properties.ticketStatus.type: string
definitions.TicketStatus.required.length: 1
definitions.TicketStatus.required[0]: ticketStatus
host: api.brandlovers.com
info.description: 'Allows sellers to: 1) Load products definitions to the BrandLovers
  marktplace. 2) Receive and update orders status. 3) Receive and update shipping
  information. 4) Receive and update customer tickets. All requests consume and return
  application/json content. All request must be authenticated and use HTTPS.'
info.title: BrandLovers Marketplace API V1
info.version: 1.0.0
info.x-apisguru-categories.length: 1
info.x-apisguru-categories[0]: ecommerce
info.x-logo.backgroundColor: '#E34056'
info.x-logo.url: https://api.apis.guru/v2/cache/logo/https_brandlovers.com_static_img_logo_BL_white_balao_35px.png
info.x-origin.length: 1
info.x-origin[0].format: swagger
info.x-origin[0].url: https://raw.githubusercontent.com/brandlovers/marketplace-api-documentation/master/brandlovers-marketplace-api-v1.json
info.x-origin[0].version: "2.0"
info.x-preferred: true
info.x-providerName: brandlovers.com
paths./order/{orderId}.get.description: Returns all details of a single order, including
  last status, items shipped or not.
paths./order/{orderId}.get.parameters.length: 2
paths./order/{orderId}.get.parameters[0].description: Authorization token. The Authorization
  token can be found in your Admin console.
paths./order/{orderId}.get.parameters[0].in: header
paths./order/{orderId}.get.parameters[0].name: authorization
paths./order/{orderId}.get.parameters[0].required: true
paths./order/{orderId}.get.parameters[0].type: string
paths./order/{orderId}.get.parameters[1].description: Unique Id of this order.
paths./order/{orderId}.get.parameters[1].in: path
paths./order/{orderId}.get.parameters[1].name: orderId
paths./order/{orderId}.get.parameters[1].required: true
paths./order/{orderId}.get.parameters[1].type: string
paths./order/{orderId}.get.responses.200.description: Success!
paths./order/{orderId}.get.responses.200.schema.$ref: '#/definitions/Order'
paths./order/{orderId}.get.responses.400.description: Bad request.
paths./order/{orderId}.get.responses.401.description: Access denied. You're not authenticated
  or token expired. Check your request header the `authorization` field is required.
paths./order/{orderId}.get.responses.403.description: Server refused to process your
  request. Please check the API SLA and reduce number of requests per second.
paths./order/{orderId}.get.responses.404.description: Object not found. Was not able
  to find orderId
paths./order/{orderId}.get.summary: Returns all details of a order
paths./order/{orderId}.get.tags.length: 1
paths./order/{orderId}.get.tags[0]: order
paths./order/{orderId}/shipment/cancel.post.description: Confirm shipment canceletion
  (when requested by the customer) or failure to deliver one shipment
paths./order/{orderId}/shipment/cancel.post.parameters.length: 3
paths./order/{orderId}/shipment/cancel.post.parameters[0].description: Authorization
  token. The Authorization token can be found in your Admin console.
paths./order/{orderId}/shipment/cancel.post.parameters[0].in: header
paths./order/{orderId}/shipment/cancel.post.parameters[0].name: authorization
paths./order/{orderId}/shipment/cancel.post.parameters[0].required: true
paths./order/{orderId}/shipment/cancel.post.parameters[0].type: string
paths./order/{orderId}/shipment/cancel.post.parameters[1].in: body
paths./order/{orderId}/shipment/cancel.post.parameters[1].name: body
paths./order/{orderId}/shipment/cancel.post.parameters[1].required: true
paths./order/{orderId}/shipment/cancel.post.parameters[1].schema.$ref: '#/definitions/NewTrackingRefund'
paths./order/{orderId}/shipment/cancel.post.parameters[2].description: Unique Order
  Id
paths./order/{orderId}/shipment/cancel.post.parameters[2].in: path
paths./order/{orderId}/shipment/cancel.post.parameters[2].name: orderId
paths./order/{orderId}/shipment/cancel.post.parameters[2].required: true
paths./order/{orderId}/shipment/cancel.post.parameters[2].type: string
paths./order/{orderId}/shipment/cancel.post.responses.200.description: success.
paths./order/{orderId}/shipment/cancel.post.responses.400.description: Bad request.
paths./order/{orderId}/shipment/cancel.post.responses.401.description: Access denied.
  You're not authenticated or token expired. Check your request header the `authorization`
  field is required.
paths./order/{orderId}/shipment/cancel.post.responses.404.description: Object not
  found. Was not able to find orderId
paths./order/{orderId}/shipment/cancel.post.summary: Confirm shipment canceletion
  (when requested by the customer) or failure to deliver
paths./order/{orderId}/shipment/cancel.post.tags.length: 1
paths./order/{orderId}/shipment/cancel.post.tags[0]: order
paths./order/{orderId}/shipment/delivered.post.description: Confirms that a shipment
  was delivered. Must inform quantity of successfully deliverd items even if items
  deliverd was less than the original order
paths./order/{orderId}/shipment/delivered.post.parameters.length: 3
paths./order/{orderId}/shipment/delivered.post.parameters[0].description: Authorization
  token. The Authorization token can be found in your Admin console.
paths./order/{orderId}/shipment/delivered.post.parameters[0].in: header
paths./order/{orderId}/shipment/delivered.post.parameters[0].name: authorization
paths./order/{orderId}/shipment/delivered.post.parameters[0].required: true
paths./order/{orderId}/shipment/delivered.post.parameters[0].type: string
paths./order/{orderId}/shipment/delivered.post.parameters[1].in: body
paths./order/{orderId}/shipment/delivered.post.parameters[1].name: body
paths./order/{orderId}/shipment/delivered.post.parameters[1].required: true
paths./order/{orderId}/shipment/delivered.post.parameters[1].schema.$ref: '#/definitions/Newshipmentstatus'
paths./order/{orderId}/shipment/delivered.post.parameters[2].description: Unique Order
  Id
paths./order/{orderId}/shipment/delivered.post.parameters[2].in: path
paths./order/{orderId}/shipment/delivered.post.parameters[2].name: orderId
paths./order/{orderId}/shipment/delivered.post.parameters[2].required: true
paths./order/{orderId}/shipment/delivered.post.parameters[2].type: string
paths./order/{orderId}/shipment/delivered.post.responses.200.description: Sucess!
paths./order/{orderId}/shipment/delivered.post.responses.400.description: Bad request.
paths./order/{orderId}/shipment/delivered.post.responses.401.description: Access denied.
  You're not authenticated or token expired. Check your request header the `authorization`
  field is required.
paths./order/{orderId}/shipment/delivered.post.responses.404.description: Object not
  found. Was not able to find orderId
paths./order/{orderId}/shipment/delivered.post.summary: Confirms that a shipment was
  delivered
paths./order/{orderId}/shipment/delivered.post.tags.length: 1
paths./order/{orderId}/shipment/delivered.post.tags[0]: order
paths./order/{orderId}/shipment/exchange.post.description: This enpoint to confirm
  item exchange when failure to deliver or requested by the customer. All customer
  requests are tracket via trouble tickets
paths./order/{orderId}/shipment/exchange.post.parameters.length: 3
paths./order/{orderId}/shipment/exchange.post.parameters[0].description: Authorization
  token. The Authorization token can be found in your Admin console.
paths./order/{orderId}/shipment/exchange.post.parameters[0].in: header
paths./order/{orderId}/shipment/exchange.post.parameters[0].name: authorization
paths./order/{orderId}/shipment/exchange.post.parameters[0].required: true
paths./order/{orderId}/shipment/exchange.post.parameters[0].type: string
paths./order/{orderId}/shipment/exchange.post.parameters[1].in: body
paths./order/{orderId}/shipment/exchange.post.parameters[1].name: body
paths./order/{orderId}/shipment/exchange.post.parameters[1].required: true
paths./order/{orderId}/shipment/exchange.post.parameters[1].schema.$ref: '#/definitions/NewTrackingRefund'
paths./order/{orderId}/shipment/exchange.post.parameters[2].description: Unique Order
  Id
paths./order/{orderId}/shipment/exchange.post.parameters[2].in: path
paths./order/{orderId}/shipment/exchange.post.parameters[2].name: orderId
paths./order/{orderId}/shipment/exchange.post.parameters[2].required: true
paths./order/{orderId}/shipment/exchange.post.parameters[2].type: string
paths./order/{orderId}/shipment/exchange.post.responses.200.description: Sucess!
paths./order/{orderId}/shipment/exchange.post.responses.400.description: Bad request.
paths./order/{orderId}/shipment/exchange.post.responses.401.description: Access denied.
  You're not authenticated or token expired. Check your request header the `authorization`
  field is required.
paths./order/{orderId}/shipment/exchange.post.responses.404.description: Object not
  found. Was not able to find orderId
paths./order/{orderId}/shipment/exchange.post.summary: Confirm item exchange
paths./order/{orderId}/shipment/exchange.post.tags.length: 1
paths./order/{orderId}/shipment/exchange.post.tags[0]: order
paths./order/{orderId}/shipment/return.post.description: Use this endpoint to return
  and refund items froma a order. In order to fully return an order list all items
  and applicate quantity.
paths./order/{orderId}/shipment/return.post.parameters.length: 3
paths./order/{orderId}/shipment/return.post.parameters[0].description: Authorization
  token. The Authorization token can be found in your Admin console.
paths./order/{orderId}/shipment/return.post.parameters[0].in: header
paths./order/{orderId}/shipment/return.post.parameters[0].name: authorization
paths./order/{orderId}/shipment/return.post.parameters[0].required: true
paths./order/{orderId}/shipment/return.post.parameters[0].type: string
paths./order/{orderId}/shipment/return.post.parameters[1].in: body
paths./order/{orderId}/shipment/return.post.parameters[1].name: body
paths./order/{orderId}/shipment/return.post.parameters[1].required: true
paths./order/{orderId}/shipment/return.post.parameters[1].schema.$ref: '#/definitions/NewTrackingRefund'
paths./order/{orderId}/shipment/return.post.parameters[2].description: Order unique
  Id
paths./order/{orderId}/shipment/return.post.parameters[2].in: path
paths./order/{orderId}/shipment/return.post.parameters[2].name: orderId
paths./order/{orderId}/shipment/return.post.parameters[2].required: true
paths./order/{orderId}/shipment/return.post.parameters[2].type: string
paths./order/{orderId}/shipment/return.post.responses.200.description: Sucess!
paths./order/{orderId}/shipment/return.post.responses.400.description: Bad request.
paths./order/{orderId}/shipment/return.post.responses.401.description: Access denied.
  You're not authenticated or token expired. Check your request header the `authorization`
  field is required.
paths./order/{orderId}/shipment/return.post.responses.404.description: Object not
  found. Was not able to find orderId
paths./order/{orderId}/shipment/return.post.summary: Confirm order item return and
  refund
paths./order/{orderId}/shipment/return.post.tags.length: 1
paths./order/{orderId}/shipment/return.post.tags[0]: order
paths./order/{orderId}/shipment/sent.post.description: Updates order to include shipment
  shiped information. This endpoint can be used to include a single or multiple shipments
  for any give order. In order to inform that all items of a order where shipped list
  all of them, including applicable quantities in the payload.
paths./order/{orderId}/shipment/sent.post.parameters.length: 3
paths./order/{orderId}/shipment/sent.post.parameters[0].description: Authorization
  token. The Authorization token can be found in your Admin console.
paths./order/{orderId}/shipment/sent.post.parameters[0].in: header
paths./order/{orderId}/shipment/sent.post.parameters[0].name: authorization
paths./order/{orderId}/shipment/sent.post.parameters[0].required: true
paths./order/{orderId}/shipment/sent.post.parameters[0].type: string
paths./order/{orderId}/shipment/sent.post.parameters[1].in: body
paths./order/{orderId}/shipment/sent.post.parameters[1].name: body
paths./order/{orderId}/shipment/sent.post.parameters[1].required: true
paths./order/{orderId}/shipment/sent.post.parameters[1].schema.$ref: '#/definitions/Newshipmentstatus'
paths./order/{orderId}/shipment/sent.post.parameters[2].description: Unique Order
  Id
paths./order/{orderId}/shipment/sent.post.parameters[2].in: path
paths./order/{orderId}/shipment/sent.post.parameters[2].name: orderId
paths./order/{orderId}/shipment/sent.post.parameters[2].required: true
paths./order/{orderId}/shipment/sent.post.parameters[2].type: string
paths./order/{orderId}/shipment/sent.post.responses.200.description: Sucess!
paths./order/{orderId}/shipment/sent.post.responses.400.description: Bad request.
paths./order/{orderId}/shipment/sent.post.responses.401.description: Access denied.
  You're not authenticated or token expired. Check your request header the `authorization`
  field is required.
paths./order/{orderId}/shipment/sent.post.responses.404.description: Object not found.
  Was not able to find orderId
paths./order/{orderId}/shipment/sent.post.summary: Update new order to include shipment
  information
paths./order/{orderId}/shipment/sent.post.tags.length: 1
paths./order/{orderId}/shipment/sent.post.tags[0]: order
paths./orders.get.description: Retuns a list of orders associated with this seller.
  The list is ordered by dateCreated.
paths./orders.get.parameters.length: 3
paths./orders.get.parameters[0].description: Authorization token. The Authorization
  token can be found in your Admin console.
paths./orders.get.parameters[0].in: header
paths./orders.get.parameters[0].name: authorization
paths./orders.get.parameters[0].required: true
paths./orders.get.parameters[0].type: string
paths./orders.get.parameters[1].description: Number or items to skip when executing
  query. List starts at zero. If omitted will default to zero. Use this conjuction
  with `limit` to paginate across the results.
paths./orders.get.parameters[1].in: query
paths./orders.get.parameters[1].name: offset
paths./orders.get.parameters[1].required: false
paths./orders.get.parameters[1].type: integer
paths./orders.get.parameters[2].description: Number or items to return when executing
  query. Defaults to 10. Use this conjuction with `offset` to paginate across the
  results.
paths./orders.get.parameters[2].in: query
paths./orders.get.parameters[2].name: limit
paths./orders.get.parameters[2].required: false
paths./orders.get.parameters[2].type: integer
paths./orders.get.responses.200.description: Success!
paths./orders.get.responses.200.schema.$ref: '#/definitions/GetOrders'
paths./orders.get.responses.400.description: Bad request.
paths./orders.get.responses.401.description: Access denied. You're not authenticated
  or token expired. Check your request header the `authorization` field is required.
paths./orders.get.responses.403.description: Server refused to process your request.
  Please check the API SLA and reduce number of requests per second.
paths./orders.get.summary: Returns orders details
paths./orders.get.tags.length: 1
paths./orders.get.tags[0]: orders
paths./orders/shipments/delivered.get.description: Returns list of shipments. By default
  this will return list of the last shipments ordered by dateCreated, folowed by last
  update date.
paths./orders/shipments/delivered.get.parameters.length: 4
paths./orders/shipments/delivered.get.parameters[0].description: Authorization token.
  The Authorization token can be found in your Admin console.
paths./orders/shipments/delivered.get.parameters[0].in: header
paths./orders/shipments/delivered.get.parameters[0].name: authorization
paths./orders/shipments/delivered.get.parameters[0].required: true
paths./orders/shipments/delivered.get.parameters[0].type: string
paths./orders/shipments/delivered.get.parameters[1].description: Query by shippment
  status.
paths./orders/shipments/delivered.get.parameters[1].in: query
paths./orders/shipments/delivered.get.parameters[1].name: status
paths./orders/shipments/delivered.get.parameters[1].required: false
paths./orders/shipments/delivered.get.parameters[1].type: string
paths./orders/shipments/delivered.get.parameters[2].description: Number or items to
  skip when executing query. List starts at zero. If omitted will default to zero.
  Use this conjuction with `limit` to paginate across the results.
paths./orders/shipments/delivered.get.parameters[2].in: query
paths./orders/shipments/delivered.get.parameters[2].name: offset
paths./orders/shipments/delivered.get.parameters[2].required: false
paths./orders/shipments/delivered.get.parameters[2].type: integer
paths./orders/shipments/delivered.get.parameters[3].description: Number or items to
  return when executing query. Defaults to 10. Use this conjuction with `offset` to
  paginate across the results.
paths./orders/shipments/delivered.get.parameters[3].in: query
paths./orders/shipments/delivered.get.parameters[3].name: limit
paths./orders/shipments/delivered.get.parameters[3].required: false
paths./orders/shipments/delivered.get.parameters[3].type: integer
paths./orders/shipments/delivered.get.responses.200.description: Success!
paths./orders/shipments/delivered.get.responses.200.schema.$ref: '#/definitions/GetOrdersShipments'
paths./orders/shipments/delivered.get.responses.400.description: Bad request.
paths./orders/shipments/delivered.get.responses.401.description: Access denied. You're
  not authenticated or token expired. Check your request header the `authorization`
  field is required.
paths./orders/shipments/delivered.get.responses.403.description: Server refused to
  process your request. Please check the API SLA and reduce number of requests per
  second.
paths./orders/shipments/delivered.get.summary: Returns list of shipments
paths./orders/shipments/delivered.get.tags.length: 1
paths./orders/shipments/delivered.get.tags[0]: orders
paths./orders/shipments/delivered.post.description: Bulk update of order shipments
  status. This alows to inform multiple shipments status
paths./orders/shipments/delivered.post.parameters.length: 2
paths./orders/shipments/delivered.post.parameters[0].description: Authorization token.
  The Authorization token can be found in your Admin console.
paths./orders/shipments/delivered.post.parameters[0].in: header
paths./orders/shipments/delivered.post.parameters[0].name: authorization
paths./orders/shipments/delivered.post.parameters[0].required: true
paths./orders/shipments/delivered.post.parameters[0].type: string
paths./orders/shipments/delivered.post.parameters[1].description: JSON body with list
  of shipments to be updated.
paths./orders/shipments/delivered.post.parameters[1].in: body
paths./orders/shipments/delivered.post.parameters[1].name: ordersshipments
paths./orders/shipments/delivered.post.parameters[1].required: true
paths./orders/shipments/delivered.post.parameters[1].schema.$ref: '#/definitions/OrdersShipments'
paths./orders/shipments/delivered.post.responses.200.description: Success!
paths./orders/shipments/delivered.post.responses.400.description: Bad request.
paths./orders/shipments/delivered.post.responses.401.description: Access denied. You're
  not authenticated or token expired. Check your request header the `authorization`
  field is required.
paths./orders/shipments/delivered.post.responses.403.description: Server refused to
  process your request. Please check the API SLA and reduce number of requests per
  second.
paths./orders/shipments/delivered.post.summary: Bulk update of order shipments
paths./orders/shipments/delivered.post.tags.length: 1
paths./orders/shipments/delivered.post.tags[0]: orders
paths./orders/shipments/shipped.get.description: Returns a list of shipments shipped.
  By Default returns items ordered by dateCreated folowed by last update
paths./orders/shipments/shipped.get.parameters.length: 4
paths./orders/shipments/shipped.get.parameters[0].description: Authorization token.
  The Authorization token can be found in your Admin console.
paths./orders/shipments/shipped.get.parameters[0].in: header
paths./orders/shipments/shipped.get.parameters[0].name: authorization
paths./orders/shipments/shipped.get.parameters[0].required: true
paths./orders/shipments/shipped.get.parameters[0].type: string
paths./orders/shipments/shipped.get.parameters[1].description: Product status.
paths./orders/shipments/shipped.get.parameters[1].enum.length: 4
paths./orders/shipments/shipped.get.parameters[1].enum[0]: NEW
paths./orders/shipments/shipped.get.parameters[1].enum[1]: APPROVED
paths./orders/shipments/shipped.get.parameters[1].enum[2]: DECLINED
paths./orders/shipments/shipped.get.parameters[1].enum[3]: PENDING
paths./orders/shipments/shipped.get.parameters[1].in: query
paths./orders/shipments/shipped.get.parameters[1].name: status
paths./orders/shipments/shipped.get.parameters[1].required: false
paths./orders/shipments/shipped.get.parameters[1].type: string
paths./orders/shipments/shipped.get.parameters[2].description: Number or items to
  skip when executing query. List starts at zero. If omitted will default to zero.
  Use this conjuction with `limit` to paginate across the results.
paths./orders/shipments/shipped.get.parameters[2].in: query
paths./orders/shipments/shipped.get.parameters[2].name: offset
paths./orders/shipments/shipped.get.parameters[2].required: false
paths./orders/shipments/shipped.get.parameters[2].type: integer
paths./orders/shipments/shipped.get.parameters[3].description: Number or items to
  return when executing query. Defaults to 10. Use this conjuction with `offset` to
  paginate across the results.
paths./orders/shipments/shipped.get.parameters[3].in: query
paths./orders/shipments/shipped.get.parameters[3].name: limit
paths./orders/shipments/shipped.get.parameters[3].required: false
paths./orders/shipments/shipped.get.parameters[3].type: integer
paths./orders/shipments/shipped.get.responses.200.description: Success!
paths./orders/shipments/shipped.get.responses.200.schema.$ref: '#/definitions/GetOrdersShipments'
paths./orders/shipments/shipped.get.responses.400.description: Bad request.
paths./orders/shipments/shipped.get.responses.401.description: Access denied. You're
  not authenticated or token expired. Check your request header the `authorization`
  field is required.
paths./orders/shipments/shipped.get.responses.403.description: Server refused to process
  your request. Please check the API SLA and reduce number of requests per second.
paths./orders/shipments/shipped.get.summary: Returns a list of shipments shipped
paths./orders/shipments/shipped.get.tags.length: 1
paths./orders/shipments/shipped.get.tags[0]: orders
paths./orders/shipments/shipped.post.description: Allows bulk updates of orders shippments.
paths./orders/shipments/shipped.post.parameters.length: 1
paths./orders/shipments/shipped.post.parameters[0].description: JSON payload with
  list of shippments of orders.
paths./orders/shipments/shipped.post.parameters[0].in: body
paths./orders/shipments/shipped.post.parameters[0].name: ordersshipments
paths./orders/shipments/shipped.post.parameters[0].required: true
paths./orders/shipments/shipped.post.parameters[0].schema.$ref: '#/definitions/OrdersShipments'
paths./orders/shipments/shipped.post.responses.200.description: Success!
paths./orders/shipments/shipped.post.responses.400.description: Bad request.
paths./orders/shipments/shipped.post.responses.401.description: Access denied. You're
  not authenticated or token expired. Check your request header the `authorization`
  field is required.
paths./orders/shipments/shipped.post.responses.403.description: Server refused to
  process your request. Please check the API SLA and reduce number of requests per
  second.
paths./orders/shipments/shipped.post.summary: Bulk update of order shipments
paths./orders/shipments/shipped.post.tags.length: 1
paths./orders/shipments/shipped.post.tags[0]: orders
paths./orders/status/approved.get.description: Returns a list of approved orders.
  Orders in the `approved` state must be fullfiled imediadetelly.
paths./orders/status/approved.get.parameters.length: 3
paths./orders/status/approved.get.parameters[0].description: Authorization token.
  The Authorization token can be found in your Admin console.
paths./orders/status/approved.get.parameters[0].in: header
paths./orders/status/approved.get.parameters[0].name: authorization
paths./orders/status/approved.get.parameters[0].required: true
paths./orders/status/approved.get.parameters[0].type: string
paths./orders/status/approved.get.parameters[1].description: Number or items to skip
  when executing query. List starts at zero. If omitted will default to zero. Use
  this conjuction with `limit` to paginate across the results.
paths./orders/status/approved.get.parameters[1].in: query
paths./orders/status/approved.get.parameters[1].name: offset
paths./orders/status/approved.get.parameters[1].required: false
paths./orders/status/approved.get.parameters[1].type: integer
paths./orders/status/approved.get.parameters[2].description: Number or items to return
  when executing query. Defaults to 100, max 200. Use this in conjuction with `offset`
  to paginate across the results.
paths./orders/status/approved.get.parameters[2].in: query
paths./orders/status/approved.get.parameters[2].name: limit
paths./orders/status/approved.get.parameters[2].required: false
paths./orders/status/approved.get.parameters[2].type: integer
paths./orders/status/approved.get.responses.200.description: Success!
paths./orders/status/approved.get.responses.200.schema.$ref: '#/definitions/GetOrders'
paths./orders/status/approved.get.responses.400.description: Bad request.
paths./orders/status/approved.get.responses.401.description: Access denied. You're
  not authenticated or token expired. Check your request header the `authorization`
  field is required.
paths./orders/status/approved.get.responses.403.description: Server refused to process
  your request. Please check the API SLA and reduce number of requests per second.
paths./orders/status/approved.get.summary: Return list of approved orders
paths./orders/status/approved.get.tags.length: 1
paths./orders/status/approved.get.tags[0]: orders
paths./orders/status/canceled.get.description: Returns a list with canceled orders.
  Canceled orders should not be fullfiled.
paths./orders/status/canceled.get.parameters.length: 3
paths./orders/status/canceled.get.parameters[0].description: Authorization token.
  The Authorization token can be found in your Admin console.
paths./orders/status/canceled.get.parameters[0].in: header
paths./orders/status/canceled.get.parameters[0].name: authorization
paths./orders/status/canceled.get.parameters[0].required: true
paths./orders/status/canceled.get.parameters[0].type: string
paths./orders/status/canceled.get.parameters[1].description: Number or items to skip
  when executing query. List starts at zero. If omitted will default to zero. Use
  this conjuction with `limit` to paginate across the results.
paths./orders/status/canceled.get.parameters[1].in: query
paths./orders/status/canceled.get.parameters[1].name: offset
paths./orders/status/canceled.get.parameters[1].required: false
paths./orders/status/canceled.get.parameters[1].type: integer
paths./orders/status/canceled.get.parameters[2].default: 100
paths./orders/status/canceled.get.parameters[2].description: Number or items to return
  when executing query. Default 100, max 250. Use this conjuction with `offset` to
  paginate across the results.
paths./orders/status/canceled.get.parameters[2].in: query
paths./orders/status/canceled.get.parameters[2].name: limit
paths./orders/status/canceled.get.parameters[2].required: false
paths./orders/status/canceled.get.parameters[2].type: integer
paths./orders/status/canceled.get.responses.200.description: Success!
paths./orders/status/canceled.get.responses.200.schema.$ref: '#/definitions/GetOrders'
paths./orders/status/canceled.get.responses.400.description: Bad request.
paths./orders/status/canceled.get.responses.401.description: Access denied. You're
  not authenticated or token expired. Check your request header the `authorization`
  field is required.
paths./orders/status/canceled.get.responses.403.description: Server refused to process
  your request. Please check the API SLA and reduce number of requests per second.
paths./orders/status/canceled.get.summary: Returns lists of canceled orders
paths./orders/status/canceled.get.tags.length: 1
paths./orders/status/canceled.get.tags[0]: orders
paths./orders/status/delivered.get.description: Returns a list of orders successfully
  delivered associated with this seller.
paths./orders/status/delivered.get.parameters.length: 3
paths./orders/status/delivered.get.parameters[0].description: Authorization token.
  The Authorization token can be found in your Admin console.
paths./orders/status/delivered.get.parameters[0].in: header
paths./orders/status/delivered.get.parameters[0].name: authorization
paths./orders/status/delivered.get.parameters[0].required: true
paths./orders/status/delivered.get.parameters[0].type: string
paths./orders/status/delivered.get.parameters[1].description: Number or items to skip
  when executing query. List starts at zero. If omitted will default to zero. Use
  this conjuction with `limit` to paginate across the results.
paths./orders/status/delivered.get.parameters[1].in: query
paths./orders/status/delivered.get.parameters[1].name: offset
paths./orders/status/delivered.get.parameters[1].required: false
paths./orders/status/delivered.get.parameters[1].type: integer
paths./orders/status/delivered.get.parameters[2].description: Number or items to return
  when executing query. Defaults to 10. Use this conjuction with `offset` to paginate
  across the results.
paths./orders/status/delivered.get.parameters[2].in: query
paths./orders/status/delivered.get.parameters[2].name: limit
paths./orders/status/delivered.get.parameters[2].required: false
paths./orders/status/delivered.get.parameters[2].type: integer
paths./orders/status/delivered.get.responses.200.description: Success!
paths./orders/status/delivered.get.responses.200.schema.$ref: '#/definitions/GetOrders'
paths./orders/status/delivered.get.responses.400.description: Bad request.
paths./orders/status/delivered.get.responses.401.description: Access denied. You're
  not authenticated or token expired. Check your request header the `authorization`
  field is required.
paths./orders/status/delivered.get.responses.403.description: Server refused to process
  your request. Please check the API SLA and reduce number of requests per second.
paths./orders/status/delivered.get.summary: Returns a list of orders successfully
  delivered associated with this seller.
paths./orders/status/delivered.get.tags.length: 1
paths./orders/status/delivered.get.tags[0]: orders
paths./orders/status/new.get.description: Returns a list of orders flagged as new.
  New orders should not be fullfiled until marketplace flags them as approved.
paths./orders/status/new.get.parameters.length: 3
paths./orders/status/new.get.parameters[0].description: Authorization token. The Authorization
  token can be found in your Admin console.
paths./orders/status/new.get.parameters[0].in: header
paths./orders/status/new.get.parameters[0].name: authorization
paths./orders/status/new.get.parameters[0].required: true
paths./orders/status/new.get.parameters[0].type: string
paths./orders/status/new.get.parameters[1].description: Number or items to skip when
  executing query. List starts at zero. If omitted will default to zero. Use this
  conjuction with `limit` to paginate across the results.
paths./orders/status/new.get.parameters[1].in: query
paths./orders/status/new.get.parameters[1].name: offset
paths./orders/status/new.get.parameters[1].required: false
paths./orders/status/new.get.parameters[1].type: integer
paths./orders/status/new.get.parameters[2].default: 100
paths./orders/status/new.get.parameters[2].description: Number or items to return
  when executing query. Defaults to 100. Max 250. Use this conjuction with `offset`
  to paginate across the results.
paths./orders/status/new.get.parameters[2].in: query
paths./orders/status/new.get.parameters[2].name: limit
paths./orders/status/new.get.parameters[2].required: false
paths./orders/status/new.get.parameters[2].type: integer
paths./orders/status/new.get.responses.200.description: Success!
paths./orders/status/new.get.responses.200.schema.$ref: '#/definitions/GetOrders'
paths./orders/status/new.get.responses.400.description: Bad request.
paths./orders/status/new.get.responses.401.description: Access denied. You're not
  authenticated or token expired. Check your request header the `authorization` field
  is required.
paths./orders/status/new.get.responses.403.description: Server refused to process
  your request. Please check the API SLA and reduce number of requests per second.
paths./orders/status/new.get.summary: Returns a list of orders flagged as new.
paths./orders/status/new.get.tags.length: 1
paths./orders/status/new.get.tags[0]: orders
paths./orders/status/partiallyDelivered.get.description: Returns a list of partially
  deliverd orders. This is a list of orders with items shipped but with not all items
  ackwlodged as deliverd
paths./orders/status/partiallyDelivered.get.parameters.length: 3
paths./orders/status/partiallyDelivered.get.parameters[0].description: Authorization
  token. The Authorization token can be found in your Admin console.
paths./orders/status/partiallyDelivered.get.parameters[0].in: header
paths./orders/status/partiallyDelivered.get.parameters[0].name: authorization
paths./orders/status/partiallyDelivered.get.parameters[0].required: true
paths./orders/status/partiallyDelivered.get.parameters[0].type: string
paths./orders/status/partiallyDelivered.get.parameters[1].description: Number or items
  to skip when executing query. List starts at zero. If omitted will default to zero.
  Use this conjuction with `limit` to paginate across the results.
paths./orders/status/partiallyDelivered.get.parameters[1].in: query
paths./orders/status/partiallyDelivered.get.parameters[1].name: offset
paths./orders/status/partiallyDelivered.get.parameters[1].required: false
paths./orders/status/partiallyDelivered.get.parameters[1].type: integer
paths./orders/status/partiallyDelivered.get.parameters[2].default: 100
paths./orders/status/partiallyDelivered.get.parameters[2].description: Number or items
  to return when executing query. Defaults to 100. Max 250. Use this conjuction with
  `offset` to paginate across the results.
paths./orders/status/partiallyDelivered.get.parameters[2].in: query
paths./orders/status/partiallyDelivered.get.parameters[2].name: limit
paths./orders/status/partiallyDelivered.get.parameters[2].required: false
paths./orders/status/partiallyDelivered.get.parameters[2].type: integer
paths./orders/status/partiallyDelivered.get.responses.200.description: Success!
paths./orders/status/partiallyDelivered.get.responses.200.schema.$ref: '#/definitions/GetOrders'
paths./orders/status/partiallyDelivered.get.responses.400.description: Bad request.
paths./orders/status/partiallyDelivered.get.responses.401.description: Access denied.
  You're not authenticated or token expired. Check your request header the `authorization`
  field is required.
paths./orders/status/partiallyDelivered.get.responses.403.description: Server refused
  to process your request. Please check the API SLA and reduce number of requests
  per second.
paths./orders/status/partiallyDelivered.get.summary: Returns a list of partially deliverd
  orders
paths./orders/status/partiallyDelivered.get.tags.length: 1
paths./orders/status/partiallyDelivered.get.tags[0]: orders
paths./orders/status/partiallySent.get.description: Returns a list of orders that
  contain one (or more) items that where not shipped. This will list the entire order
  as well the items with peding shipment. Use this service to track orders that need
  to be fullfiled.
paths./orders/status/partiallySent.get.parameters.length: 3
paths./orders/status/partiallySent.get.parameters[0].description: Authorization token.
  The Authorization token can be found in your Admin console.
paths./orders/status/partiallySent.get.parameters[0].in: header
paths./orders/status/partiallySent.get.parameters[0].name: authorization
paths./orders/status/partiallySent.get.parameters[0].required: true
paths./orders/status/partiallySent.get.parameters[0].type: string
paths./orders/status/partiallySent.get.parameters[1].description: Number or items
  to skip when executing query. List starts at zero. If omitted will default to zero.
  Use this conjuction with `limit` to paginate across the results.
paths./orders/status/partiallySent.get.parameters[1].in: query
paths./orders/status/partiallySent.get.parameters[1].name: offset
paths./orders/status/partiallySent.get.parameters[1].required: false
paths./orders/status/partiallySent.get.parameters[1].type: integer
paths./orders/status/partiallySent.get.parameters[2].description: Number or items
  to return when executing query. Defaults to 100. Use this conjuction with `offset`
  to paginate across the results.
paths./orders/status/partiallySent.get.parameters[2].in: query
paths./orders/status/partiallySent.get.parameters[2].name: limit
paths./orders/status/partiallySent.get.parameters[2].required: false
paths./orders/status/partiallySent.get.parameters[2].type: integer
paths./orders/status/partiallySent.get.responses.200.description: Success!
paths./orders/status/partiallySent.get.responses.200.schema.$ref: '#/definitions/GetOrders'
paths./orders/status/partiallySent.get.responses.400.description: Bad request.
paths./orders/status/partiallySent.get.responses.401.description: Access denied. You're
  not authenticated or token expired. Check your request header the `authorization`
  field is required.
paths./orders/status/partiallySent.get.responses.403.description: Server refused to
  process your request. Please check the API SLA and reduce number of requests per
  second.
paths./orders/status/partiallySent.get.summary: Returns a list of orders partially
  fullfiled
paths./orders/status/partiallySent.get.tags.length: 1
paths./orders/status/partiallySent.get.tags[0]: orders
paths./orders/status/sent.get.description: Returns a list with orders completely fullfiled,
  this means orders with all items sent. Orders will ordered by dateCreated fowllowed
  by last update
paths./orders/status/sent.get.parameters.length: 3
paths./orders/status/sent.get.parameters[0].description: Authorization token. The
  Authorization token can be found in your Admin console.
paths./orders/status/sent.get.parameters[0].in: header
paths./orders/status/sent.get.parameters[0].name: authorization
paths./orders/status/sent.get.parameters[0].required: true
paths./orders/status/sent.get.parameters[0].type: string
paths./orders/status/sent.get.parameters[1].description: Number or items to skip when
  executing query. List starts at zero. If omitted will default to zero. Use this
  conjuction with `limit` to paginate across the results.
paths./orders/status/sent.get.parameters[1].in: query
paths./orders/status/sent.get.parameters[1].name: offset
paths./orders/status/sent.get.parameters[1].required: false
paths./orders/status/sent.get.parameters[1].type: integer
paths./orders/status/sent.get.parameters[2].description: Number or items to return
  when executing query. Defaults to 10. Use this conjuction with `offset` to paginate
  across the results.
paths./orders/status/sent.get.parameters[2].in: query
paths./orders/status/sent.get.parameters[2].name: limit
paths./orders/status/sent.get.parameters[2].required: false
paths./orders/status/sent.get.parameters[2].type: integer
paths./orders/status/sent.get.responses.200.description: Success!
paths./orders/status/sent.get.responses.200.schema.$ref: '#/definitions/GetOrders'
paths./orders/status/sent.get.responses.400.description: Bad request.
paths./orders/status/sent.get.responses.401.description: Access denied. You're not
  authenticated or token expired. Check your request header the `authorization` field
  is required.
paths./orders/status/sent.get.responses.403.description: Server refused to process
  your request. Please check the API SLA and reduce number of requests per second.
paths./orders/status/sent.get.summary: Returns a list with orders fully sent
paths./orders/status/sent.get.tags.length: 1
paths./orders/status/sent.get.tags[0]: orders
paths./product.post.description: Use this enpoint to create a single new product to
  the Marketplace. This enpoint expects a json document with one product. If you whant
  to upload multiple products in a single API call use POST /products method. The
  server will load each product as an individual item that can be manipulated using
  your own `skuSellerId`. This system is idenpontent, this means that once a `skuSellerId`
  is created it cannot be re-created using this tool. In order to update, edit a product
  use the PUT method with the correct reference to your `skuSellerId`
paths./product.post.parameters.length: 2
paths./product.post.parameters[0].description: Authorization token. The Authorization
  token can be found in your Admin console.
paths./product.post.parameters[0].in: header
paths./product.post.parameters[0].name: authorization
paths./product.post.parameters[0].required: true
paths./product.post.parameters[0].type: string
paths./product.post.parameters[1].description: New Produt that will be create
paths./product.post.parameters[1].in: body
paths./product.post.parameters[1].name: product
paths./product.post.parameters[1].required: true
paths./product.post.parameters[1].schema.$ref: '#/definitions/Product'
paths./product.post.responses.200.description: Sucess! Server received your request
  and will start background processing.
paths./product.post.responses.400.description: Bad Request.
paths./product.post.responses.401.description: Access denied. You're not authenticated
  or token expired. Check your request header the `authorization` field is required.
paths./product.post.summary: Create a new product to the marketplace
paths./product.post.tags.length: 1
paths./product.post.tags[0]: product
paths./product/{skuSellerId}.get.description: Returns detailed information of a single
  product with the seller `skuSellerId`. This service will return a json document
  with product detail, status, price, invetory among other infomarion availble in
  the Brand Lovers marketplace
paths./product/{skuSellerId}.get.parameters.length: 2
paths./product/{skuSellerId}.get.parameters[0].description: Authorization token. The
  Authorization token can be found in your Admin console.
paths./product/{skuSellerId}.get.parameters[0].in: header
paths./product/{skuSellerId}.get.parameters[0].name: authorization
paths./product/{skuSellerId}.get.parameters[0].required: true
paths./product/{skuSellerId}.get.parameters[0].type: string
paths./product/{skuSellerId}.get.parameters[1].description: SKU ID do Lojista.
paths./product/{skuSellerId}.get.parameters[1].in: path
paths./product/{skuSellerId}.get.parameters[1].name: skuSellerId
paths./product/{skuSellerId}.get.parameters[1].required: true
paths./product/{skuSellerId}.get.parameters[1].type: string
paths./product/{skuSellerId}.get.responses.200.description: Success!
paths./product/{skuSellerId}.get.responses.200.schema.$ref: '#/definitions/GetProduct'
paths./product/{skuSellerId}.get.responses.401.description: Access denied. You're
  not authenticated or token expired. Check your request header the `authorization`
  field is required.
paths./product/{skuSellerId}.get.responses.403.description: Server refused to process
  your request. Please check the API SLA and reduce number of requests per second.
paths./product/{skuSellerId}.get.responses.404.description: Object not found. In general
  this means a invalid skuSellerId.
paths./product/{skuSellerId}.get.security.length: 1
paths./product/{skuSellerId}.get.security[0].authorization.length: 0
paths./product/{skuSellerId}.get.summary: Returns details of a single product using
  the seller `skuSellerId`
paths./product/{skuSellerId}.get.tags.length: 1
paths./product/{skuSellerId}.get.tags[0]: product
paths./product/{skuSellerId}.put.description: Update a single product information
  such as name, brand, attribute, dimension, etc. Please note that data from your
  request will be merged with existing data. This allows you to easliy update only
  certain fields without the need to re-inform the other unchanged fields. For example
  in order to update just the field `title` simply send just this field with new information,
  remaining fields will not be changed. In order to erase an item the field must be
  informed as its default value, for example in order to erase the `videos` field
  must be sent as videos:[]. The `skuSellerId` field is always mandatory in the path
  and in the product json Object.
paths./product/{skuSellerId}.put.parameters.length: 3
paths./product/{skuSellerId}.put.parameters[0].description: Authorization token. The
  Authorization token can be found in your Admin console.
paths./product/{skuSellerId}.put.parameters[0].in: header
paths./product/{skuSellerId}.put.parameters[0].name: authorization
paths./product/{skuSellerId}.put.parameters[0].required: true
paths./product/{skuSellerId}.put.parameters[0].type: string
paths./product/{skuSellerId}.put.parameters[1].description: Unique Product Id (SKU)
  in the seller system that will be updated.
paths./product/{skuSellerId}.put.parameters[1].in: path
paths./product/{skuSellerId}.put.parameters[1].name: skuSellerId
paths./product/{skuSellerId}.put.parameters[1].required: true
paths./product/{skuSellerId}.put.parameters[1].type: string
paths./product/{skuSellerId}.put.parameters[2].description: New product information.
paths./product/{skuSellerId}.put.parameters[2].in: body
paths./product/{skuSellerId}.put.parameters[2].name: body
paths./product/{skuSellerId}.put.parameters[2].required: true
paths./product/{skuSellerId}.put.parameters[2].schema.$ref: '#/definitions/ProductUpdate'
paths./product/{skuSellerId}.put.responses.200.description: Success!
paths./product/{skuSellerId}.put.responses.400.description: Bad request.
paths./product/{skuSellerId}.put.responses.401.description: Access denied. You're
  not authenticated or token expired. Check your request header the `authorization`
  field is required.
paths./product/{skuSellerId}.put.responses.403.description: Server refused to process
  your request. Please check the API SLA and reduce number of requests per second.
paths./product/{skuSellerId}.put.responses.404.description: Object not found.
paths./product/{skuSellerId}.put.security.length: 1
paths./product/{skuSellerId}.put.security[0].authorization.length: 0
paths./product/{skuSellerId}.put.summary: Update product details
paths./product/{skuSellerId}.put.tags.length: 1
paths./product/{skuSellerId}.put.tags[0]: products
paths./product/{skuSellerId}/prices.put.description: Allows seller to set the SKU
  prices (MSRP and/or offer price). All prices must be informed in cents. No commas
  or periods are accepeted. For example one dollar should be informed as 100. Same
  as $1,2345.67 must be informed solely as 1234567
paths./product/{skuSellerId}/prices.put.parameters.length: 3
paths./product/{skuSellerId}/prices.put.parameters[0].description: Authorization token.
  The Authorization token can be found in your Admin console.
paths./product/{skuSellerId}/prices.put.parameters[0].in: header
paths./product/{skuSellerId}/prices.put.parameters[0].name: authorization
paths./product/{skuSellerId}/prices.put.parameters[0].required: true
paths./product/{skuSellerId}/prices.put.parameters[0].type: string
paths./product/{skuSellerId}/prices.put.parameters[1].description: Product SKU
paths./product/{skuSellerId}/prices.put.parameters[1].in: path
paths./product/{skuSellerId}/prices.put.parameters[1].name: skuSellerId
paths./product/{skuSellerId}/prices.put.parameters[1].required: true
paths./product/{skuSellerId}/prices.put.parameters[1].type: string
paths./product/{skuSellerId}/prices.put.parameters[2].description: JSON document with
  the SKU price
paths./product/{skuSellerId}/prices.put.parameters[2].in: body
paths./product/{skuSellerId}/prices.put.parameters[2].name: body
paths./product/{skuSellerId}/prices.put.parameters[2].required: true
paths./product/{skuSellerId}/prices.put.parameters[2].schema.$ref: '#/definitions/ProductPrice'
paths./product/{skuSellerId}/prices.put.responses.200.description: Success!
paths./product/{skuSellerId}/prices.put.responses.400.description: Bad request.
paths./product/{skuSellerId}/prices.put.responses.401.description: Access denied.
  You're not authenticated or token expired. Check your request header the `authorization`
  field is required.
paths./product/{skuSellerId}/prices.put.summary: Allows seller to update prices of
  a single SKU
paths./product/{skuSellerId}/prices.put.tags.length: 1
paths./product/{skuSellerId}/prices.put.tags[0]: product
paths./product/{skuSellerId}/status.put.description: Update product status in the
  Marketplace. Set to `true` to enable, `false` to disable sale.
paths./product/{skuSellerId}/status.put.parameters.length: 3
paths./product/{skuSellerId}/status.put.parameters[0].description: Authorization token.
  The Authorization token can be found in your Admin console.
paths./product/{skuSellerId}/status.put.parameters[0].in: header
paths./product/{skuSellerId}/status.put.parameters[0].name: authorization
paths./product/{skuSellerId}/status.put.parameters[0].required: true
paths./product/{skuSellerId}/status.put.parameters[0].type: string
paths./product/{skuSellerId}/status.put.parameters[1].description: Unique Product
  Id (SKU) in the seller system
paths./product/{skuSellerId}/status.put.parameters[1].in: path
paths./product/{skuSellerId}/status.put.parameters[1].name: skuSellerId
paths./product/{skuSellerId}/status.put.parameters[1].required: true
paths./product/{skuSellerId}/status.put.parameters[1].type: string
paths./product/{skuSellerId}/status.put.parameters[2].description: Seller SKU that
  will be enabled or disabled
paths./product/{skuSellerId}/status.put.parameters[2].in: body
paths./product/{skuSellerId}/status.put.parameters[2].name: body
paths./product/{skuSellerId}/status.put.parameters[2].required: true
paths./product/{skuSellerId}/status.put.parameters[2].schema.$ref: '#/definitions/SellerItemStatus'
paths./product/{skuSellerId}/status.put.responses.200.description: Success!
paths./product/{skuSellerId}/status.put.responses.400.description: Bad request.
paths./product/{skuSellerId}/status.put.responses.401.description: Access denied.
  You're not authenticated or token expired. Check your request header the `authorization`
  field is required.
paths./product/{skuSellerId}/status.put.summary: Enable/disable a single product in
  the Marketplace
paths./product/{skuSellerId}/status.put.tags.length: 1
paths./product/{skuSellerId}/status.put.tags[0]: product
paths./product/{skuSellerId}/stock.put.description: Update a single product inventory
  information. Products with zero stock will not be eligible for sale.
paths./product/{skuSellerId}/stock.put.parameters.length: 3
paths./product/{skuSellerId}/stock.put.parameters[0].description: Authorization token.
  The Authorization token can be found in your Admin console.
paths./product/{skuSellerId}/stock.put.parameters[0].in: header
paths./product/{skuSellerId}/stock.put.parameters[0].name: authorization
paths./product/{skuSellerId}/stock.put.parameters[0].required: true
paths./product/{skuSellerId}/stock.put.parameters[0].type: string
paths./product/{skuSellerId}/stock.put.parameters[1].description: Unique Product Id
  (SKU) in the seller system that will be updated
paths./product/{skuSellerId}/stock.put.parameters[1].in: path
paths./product/{skuSellerId}/stock.put.parameters[1].name: skuSellerId
paths./product/{skuSellerId}/stock.put.parameters[1].required: true
paths./product/{skuSellerId}/stock.put.parameters[1].type: string
paths./product/{skuSellerId}/stock.put.parameters[2].description: New product inventory
  information
paths./product/{skuSellerId}/stock.put.parameters[2].in: body
paths./product/{skuSellerId}/stock.put.parameters[2].name: body
paths./product/{skuSellerId}/stock.put.parameters[2].required: true
paths./product/{skuSellerId}/stock.put.parameters[2].schema.$ref: '#/definitions/Stock'
paths./product/{skuSellerId}/stock.put.responses.200.description: Success!
paths./product/{skuSellerId}/stock.put.responses.400.description: Bad request.
paths./product/{skuSellerId}/stock.put.responses.401.description: Access denied. You're
  not authenticated or token expired. Check your request header the `authorization`
  field is required.
paths./product/{skuSellerId}/stock.put.summary: Update a single product stock
paths./product/{skuSellerId}/stock.put.tags.length: 1
paths./product/{skuSellerId}/stock.put.tags[0]: product
paths./products.get.description: Get a list of my products loaded into the Marketplace.
  This dosen't means that products are eligible for sale, just that they are loaded
  in the database.
paths./products.get.parameters.length: 3
paths./products.get.parameters[0].description: Authorization token. The Authorization
  token can be found in your Admin console.
paths./products.get.parameters[0].in: header
paths./products.get.parameters[0].name: authorization
paths./products.get.parameters[0].required: true
paths./products.get.parameters[0].type: string
paths./products.get.parameters[1].description: Number or items to skip when executing
  query. List starts at zero. If omitted will default to zero. Use this conjuction
  with `limit` to paginate across the results.
paths./products.get.parameters[1].in: query
paths./products.get.parameters[1].name: offset
paths./products.get.parameters[1].required: false
paths./products.get.parameters[1].type: integer
paths./products.get.parameters[2].description: Number of items to retun. Defaults
  to 100. Max alowed is 200. Use this conjuction with `offset` to paginate across
  the results.
paths./products.get.parameters[2].in: query
paths./products.get.parameters[2].name: limit
paths./products.get.parameters[2].required: false
paths./products.get.parameters[2].type: integer
paths./products.get.responses.200.description: Success!
paths./products.get.responses.200.schema.$ref: '#/definitions/GetProductsResponse'
paths./products.get.responses.400.description: Bad request.
paths./products.get.responses.401.description: Access denied. You're not authenticated
  or token expired. Check your request header the `authorization` field is required.
paths./products.get.responses.403.description: Server refused to process your request.
  Please check the API SLA and reduce number of requests per second.
paths./products.get.security.length: 1
paths./products.get.security[0].authorization.length: 0
paths./products.get.summary: Returns a list of products loaded into BrandLovers Marketplace
paths./products.get.tags.length: 1
paths./products.get.tags[0]: products
paths./products.post.description: This enpoint to creates new products in the Marketplace
  using `skuSellerId` as a primary key. This enpoint expects a json document with
  array of products. The server will load each product as an individual item that
  can be manipulated using your own `skuSellerId`. All requests to This endpoint are
  idenpontent with respect of the `skuSellerId`, this means that once a `skuSellerId`
  is created it cannot be re-created using this tool. In order to update use the PUT
  method with the correct `skuSellerId`. You can also use the POST /product to create
  a single product per request
paths./products.post.parameters.length: 2
paths./products.post.parameters[0].description: Authorization token. The Authorization
  token can be found in your Admin console.
paths./products.post.parameters[0].in: header
paths./products.post.parameters[0].name: authorization
paths./products.post.parameters[0].required: true
paths./products.post.parameters[0].type: string
paths./products.post.parameters[1].description: JSON with a list of new products to
  be updloaded to the platform
paths./products.post.parameters[1].in: body
paths./products.post.parameters[1].name: products
paths./products.post.parameters[1].required: true
paths./products.post.parameters[1].schema.items.$ref: '#/definitions/Product'
paths./products.post.parameters[1].schema.type: array
paths./products.post.responses.200.description: Sucess! Server received your request
  and will start background processing.
paths./products.post.responses.400.description: Bad Request.
paths./products.post.responses.401.description: Access denied. You're not authenticated
  or token expired. Check your request header the `authorization` field is required.
paths./products.post.summary: Allows new products from the seller to be loaded into
  the marketplace
paths./products.post.tags.length: 1
paths./products.post.tags[0]: products
paths./products/prices.put.description: Allows bulk update of product prices. This
  endpoint expects a json document with an array of products with the `skuSellerId`
  and the new price. Server will process each new product update individually and
  will ackwlodge as much updates as possible, even if a single product update fails.
  After this request you can query product final status with GET /product/status
paths./products/prices.put.parameters.length: 2
paths./products/prices.put.parameters[0].description: Authorization token. The Authorization
  token can be found in your Admin console.
paths./products/prices.put.parameters[0].in: header
paths./products/prices.put.parameters[0].name: authorization
paths./products/prices.put.parameters[0].required: true
paths./products/prices.put.parameters[0].type: string
paths./products/prices.put.parameters[1].description: Data for bulk product price
  update
paths./products/prices.put.parameters[1].in: body
paths./products/prices.put.parameters[1].name: body
paths./products/prices.put.parameters[1].required: true
paths./products/prices.put.parameters[1].schema.items.$ref: '#/definitions/SellerItemPrices'
paths./products/prices.put.parameters[1].schema.type: array
paths./products/prices.put.responses.200.description: Success!
paths./products/prices.put.responses.400.description: Bad request.
paths./products/prices.put.responses.401.description: Access denied. You're not authenticated
  or token expired. Check your request header the `authorization` field is required.
paths./products/prices.put.summary: Allows bulk update of product prices.
paths./products/prices.put.tags.length: 1
paths./products/prices.put.tags[0]: products
paths./products/status.get.description: Returns a list with seller products status.
  Please note that this endpoint will not return all details of each product, just
  the skuSellerId and status. Also please note that this endpoint will return 250
  products per call. For full details of a given procuct use GET /product/{skuSellerId}
paths./products/status.get.parameters.length: 3
paths./products/status.get.parameters[0].description: Authorization token. The Authorization
  token can be found in your Admin console.
paths./products/status.get.parameters[0].in: header
paths./products/status.get.parameters[0].name: authorization
paths./products/status.get.parameters[0].required: true
paths./products/status.get.parameters[0].type: string
paths./products/status.get.parameters[1].description: Number or items to skip when
  executing query. List starts at zero. If omitted will default to zero. Use this
  conjuction with `limit` to paginate across the results.
paths./products/status.get.parameters[1].in: query
paths./products/status.get.parameters[1].name: offset
paths./products/status.get.parameters[1].required: false
paths./products/status.get.parameters[1].type: integer
paths./products/status.get.parameters[2].description: Number of items to return in
  this query. Defaults to 250. Maximum 1000. Use this conjuction with `offset` to
  paginate across the results.
paths./products/status.get.parameters[2].in: query
paths./products/status.get.parameters[2].name: limit
paths./products/status.get.parameters[2].required: false
paths./products/status.get.parameters[2].type: integer
paths./products/status.get.responses.200.description: Success fetching results.
paths./products/status.get.responses.200.schema.$ref: '#/definitions/GetSellerProductsStatus'
paths./products/status.get.responses.403.description: Server refused to process your
  request. Please check the API SLA and reduce number of requests per second.
paths./products/status.get.summary: Returns seller products status in the marketplace
paths./products/status.get.tags.length: 1
paths./products/status.get.tags[0]: products
paths./products/status.put.description: Bulk enable/disable products in the marketplace.
  This endpoint requires an array of objects with the seller SKU `skuSellerId` and
  boolean value that defines if the product is enabled or not for sale. This endpoint
  can be used to set a single product or many products.
paths./products/status.put.parameters.length: 2
paths./products/status.put.parameters[0].description: Authorization token. The Authorization
  token can be found in your Admin console.
paths./products/status.put.parameters[0].in: header
paths./products/status.put.parameters[0].name: authorization
paths./products/status.put.parameters[0].required: true
paths./products/status.put.parameters[0].type: string
paths./products/status.put.parameters[1].description: List of seller products with
  new status information
paths./products/status.put.parameters[1].in: body
paths./products/status.put.parameters[1].name: body
paths./products/status.put.parameters[1].required: true
paths./products/status.put.parameters[1].schema.items.$ref: '#/definitions/ProductStatusUpdate'
paths./products/status.put.parameters[1].schema.type: array
paths./products/status.put.responses.200.description: Success!
paths./products/status.put.responses.400.description: Bad request.
paths./products/status.put.responses.401.description: Access denied. You're not authenticated
  or token expired. Check your request header the `authorization` field is required.
paths./products/status.put.summary: Bulk enable/disable products in the marketplace
paths./products/status.put.tags.length: 1
paths./products/status.put.tags[0]: products
paths./products/status/selling.get.description: Returns products that are successfully
  listed for sale.
paths./products/status/selling.get.parameters.length: 3
paths./products/status/selling.get.parameters[0].description: Authorization token.
  The Authorization token can be found in your Admin console.
paths./products/status/selling.get.parameters[0].in: header
paths./products/status/selling.get.parameters[0].name: authorization
paths./products/status/selling.get.parameters[0].required: true
paths./products/status/selling.get.parameters[0].type: string
paths./products/status/selling.get.parameters[1].description: Number or items to skip
  when executing query. List starts at zero. If omitted will default to zero. Use
  this conjuction with `limit` to paginate across the results.
paths./products/status/selling.get.parameters[1].in: query
paths./products/status/selling.get.parameters[1].name: offset
paths./products/status/selling.get.parameters[1].required: false
paths./products/status/selling.get.parameters[1].type: integer
paths./products/status/selling.get.parameters[2].description: Number or items to return
  when executing query. Defaults to 10. Use this conjuction with `offset` to paginate
  across the results.
paths./products/status/selling.get.parameters[2].in: query
paths./products/status/selling.get.parameters[2].name: limit
paths./products/status/selling.get.parameters[2].required: false
paths./products/status/selling.get.parameters[2].type: integer
paths./products/status/selling.get.responses.200.description: Success!
paths./products/status/selling.get.responses.200.schema.$ref: '#/definitions/GetProductsStatusSelling'
paths./products/status/selling.get.responses.400.description: Bad request.
paths./products/status/selling.get.responses.401.description: Access denied. You're
  not authenticated or token expired. Check your request header the `authorization`
  field is required.
paths./products/status/selling.get.responses.403.description: Server refused to process
  your request. Please check the API SLA and reduce number of requests per second.
paths./products/status/selling.get.summary: Returns products that are successfully
  listed for sale.
paths./products/status/selling.get.tags.length: 1
paths./products/status/selling.get.tags[0]: products
paths./products/stocks.put.description: Bulk product stock update. This endpoint expect
  a array of products `skuSellerId` with new inventory data
paths./products/stocks.put.parameters.length: 2
paths./products/stocks.put.parameters[0].description: Authorization token. The Authorization
  token can be found in your Admin console.
paths./products/stocks.put.parameters[0].in: header
paths./products/stocks.put.parameters[0].name: authorization
paths./products/stocks.put.parameters[0].required: true
paths./products/stocks.put.parameters[0].type: string
paths./products/stocks.put.parameters[1].description: Array of product SKUs.
paths./products/stocks.put.parameters[1].in: body
paths./products/stocks.put.parameters[1].name: body
paths./products/stocks.put.parameters[1].required: true
paths./products/stocks.put.parameters[1].schema.items.$ref: '#/definitions/ProductStock'
paths./products/stocks.put.parameters[1].schema.type: array
paths./products/stocks.put.responses.200.description: Success!
paths./products/stocks.put.responses.400.description: Bad request.
paths./products/stocks.put.responses.401.description: Access denied. You're not authenticated
  or token expired. Check your request header the `authorization` field is required.
paths./products/stocks.put.summary: Bulk product stock update
paths./products/stocks.put.tags.length: 1
paths./products/stocks.put.tags[0]: products
paths./ticket.post.description: Use this service to create a new trouble ticket. Use
  this to include relevant information about the order, comunicate with the customer
  or marketplace team. Whenever possible message will be pushed to Mobile first. This
  is the primary mean of comunicaiton with the customer regarding orders, shippments,
  shippments status. New tickets will be automatically be set to 'OPEN'. Trouble tickets
  need to be associated with a orderId or customer. New tickets can optionally include
  a new message.
paths./ticket.post.parameters.length: 2
paths./ticket.post.parameters[0].description: Authorization token. The Authorization
  token can be found in your Admin console.
paths./ticket.post.parameters[0].in: header
paths./ticket.post.parameters[0].name: authorization
paths./ticket.post.parameters[0].required: true
paths./ticket.post.parameters[0].type: string
paths./ticket.post.parameters[1].description: JSON object with new trouble ticket
paths./ticket.post.parameters[1].in: body
paths./ticket.post.parameters[1].name: newTicket
paths./ticket.post.parameters[1].required: true
paths./ticket.post.parameters[1].schema.$ref: '#/definitions/NewTicket'
paths./ticket.post.responses.200.description: Success!
paths./ticket.post.responses.400.description: Bad request.
paths./ticket.post.summary: Creates a new trouble ticket
paths./ticket.post.tags.length: 1
paths./ticket.post.tags[0]: tickets
paths./ticket/{ticketId}/message.post.description: Add a new message to this trouble
  ticket. Messages can be `CUSTOMER` (customer will be able to see it) or `INTERNAL`.
paths./ticket/{ticketId}/message.post.parameters.length: 3
paths./ticket/{ticketId}/message.post.parameters[0].description: Authorization token.
  The Authorization token can be found in your Admin console.
paths./ticket/{ticketId}/message.post.parameters[0].in: header
paths./ticket/{ticketId}/message.post.parameters[0].name: authorization
paths./ticket/{ticketId}/message.post.parameters[0].required: true
paths./ticket/{ticketId}/message.post.parameters[0].type: string
paths./ticket/{ticketId}/message.post.parameters[1].description: Trouble ticket ID.
paths./ticket/{ticketId}/message.post.parameters[1].in: path
paths./ticket/{ticketId}/message.post.parameters[1].name: ticketId
paths./ticket/{ticketId}/message.post.parameters[1].required: true
paths./ticket/{ticketId}/message.post.parameters[1].type: string
paths./ticket/{ticketId}/message.post.parameters[2].description: New message object
  to append to trouble ticket.
paths./ticket/{ticketId}/message.post.parameters[2].in: body
paths./ticket/{ticketId}/message.post.parameters[2].name: message
paths./ticket/{ticketId}/message.post.parameters[2].required: true
paths./ticket/{ticketId}/message.post.parameters[2].schema.$ref: '#/definitions/NewTicketMessage'
paths./ticket/{ticketId}/message.post.responses.200.description: Success!
paths./ticket/{ticketId}/message.post.responses.400.description: Bad request.
paths./ticket/{ticketId}/message.post.responses.404.description: Object not found.
paths./ticket/{ticketId}/message.post.summary: Add new message to trouble ticket
paths./ticket/{ticketId}/message.post.tags.length: 1
paths./ticket/{ticketId}/message.post.tags[0]: tickets
paths./ticket/{ticketId}/messages.get.description: Returns trouble ticket history
  with all messages exchanged. Only tickets related to your seller will be returned.
  Attempt to read other tickets will return 403 (acess denied).
paths./ticket/{ticketId}/messages.get.parameters.length: 4
paths./ticket/{ticketId}/messages.get.parameters[0].description: Authorization token.
  The Authorization token can be found in your Admin console.
paths./ticket/{ticketId}/messages.get.parameters[0].in: header
paths./ticket/{ticketId}/messages.get.parameters[0].name: authorization
paths./ticket/{ticketId}/messages.get.parameters[0].required: true
paths./ticket/{ticketId}/messages.get.parameters[0].type: string
paths./ticket/{ticketId}/messages.get.parameters[1].description: Trouble ticket ID.
paths./ticket/{ticketId}/messages.get.parameters[1].in: path
paths./ticket/{ticketId}/messages.get.parameters[1].name: ticketId
paths./ticket/{ticketId}/messages.get.parameters[1].required: true
paths./ticket/{ticketId}/messages.get.parameters[1].type: string
paths./ticket/{ticketId}/messages.get.parameters[2].description: Number or items to
  skip when executing query. List starts at zero. If omitted will default to zero.
  Use this conjuction with `limit` to paginate across the results.
paths./ticket/{ticketId}/messages.get.parameters[2].in: query
paths./ticket/{ticketId}/messages.get.parameters[2].name: offset
paths./ticket/{ticketId}/messages.get.parameters[2].required: false
paths./ticket/{ticketId}/messages.get.parameters[2].type: integer
paths./ticket/{ticketId}/messages.get.parameters[3].description: Number or items to
  return when executing query. Defaults to 10. Use this conjuction with `offset` to
  paginate across the results.
paths./ticket/{ticketId}/messages.get.parameters[3].in: query
paths./ticket/{ticketId}/messages.get.parameters[3].name: limit
paths./ticket/{ticketId}/messages.get.parameters[3].required: false
paths./ticket/{ticketId}/messages.get.parameters[3].type: integer
paths./ticket/{ticketId}/messages.get.responses.200.description: Success!
paths./ticket/{ticketId}/messages.get.responses.200.schema.$ref: '#/definitions/GetTicketMessages'
paths./ticket/{ticketId}/messages.get.responses.400.description: Bad request.
paths./ticket/{ticketId}/messages.get.responses.401.description: Access denied. You're
  not authenticated or token expired. Check your request header the `authorization`
  field is required.
paths./ticket/{ticketId}/messages.get.responses.403.description: Access denied. You
  can only access your trouble tickets
paths./ticket/{ticketId}/messages.get.summary: Get trouble ticket messages
paths./ticket/{ticketId}/messages.get.tags.length: 1
paths./ticket/{ticketId}/messages.get.tags[0]: tickets
paths./ticket/{ticketId}/status.put.description: Alows the seller to update the status
  of a trouble ticket
paths./ticket/{ticketId}/status.put.parameters.length: 3
paths./ticket/{ticketId}/status.put.parameters[0].description: Authorization token.
  The Authorization token can be found in your Admin console.
paths./ticket/{ticketId}/status.put.parameters[0].in: header
paths./ticket/{ticketId}/status.put.parameters[0].name: authorization
paths./ticket/{ticketId}/status.put.parameters[0].required: true
paths./ticket/{ticketId}/status.put.parameters[0].type: string
paths./ticket/{ticketId}/status.put.parameters[1].description: Trouble ticket unique
  identification
paths./ticket/{ticketId}/status.put.parameters[1].in: path
paths./ticket/{ticketId}/status.put.parameters[1].name: ticketId
paths./ticket/{ticketId}/status.put.parameters[1].required: true
paths./ticket/{ticketId}/status.put.parameters[1].type: string
paths./ticket/{ticketId}/status.put.parameters[2].description: New trouble ticket
  status
paths./ticket/{ticketId}/status.put.parameters[2].in: body
paths./ticket/{ticketId}/status.put.parameters[2].name: body
paths./ticket/{ticketId}/status.put.parameters[2].required: true
paths./ticket/{ticketId}/status.put.parameters[2].schema.$ref: '#/definitions/TicketStatus'
paths./ticket/{ticketId}/status.put.responses.200.description: successfully received
  transaction
paths./ticket/{ticketId}/status.put.responses.400.description: Bad request.
paths./ticket/{ticketId}/status.put.responses.401.description: Access denied. You're
  not authenticated or token expired. Check your request header the `authorization`
  field is required.
paths./ticket/{ticketId}/status.put.responses.403.description: Server refused to process
  your request. Please check the API SLA and reduce number of requests per second.
paths./ticket/{ticketId}/status.put.responses.404.description: Object not found.
paths./ticket/{ticketId}/status.put.summary: Update trouble ticket status
paths./ticket/{ticketId}/status.put.tags.length: 1
paths./ticket/{ticketId}/status.put.tags[0]: tickets
paths./tickets.get.description: Allows seller to receive and status, queries, requests
  and complaints from customers. As well related messages
paths./tickets.get.parameters.length: 4
paths./tickets.get.parameters[0].description: Authorization token. The Authorization
  token can be found in your Admin console.
paths./tickets.get.parameters[0].in: header
paths./tickets.get.parameters[0].name: authorization
paths./tickets.get.parameters[0].required: true
paths./tickets.get.parameters[0].type: string
paths./tickets.get.parameters[1].description: Query by trouble ticket status
paths./tickets.get.parameters[1].enum.length: 3
paths./tickets.get.parameters[1].enum[0]: OPEN
paths./tickets.get.parameters[1].enum[1]: REOPENED
paths./tickets.get.parameters[1].enum[2]: CLOSED
paths./tickets.get.parameters[1].in: query
paths./tickets.get.parameters[1].name: status
paths./tickets.get.parameters[1].required: false
paths./tickets.get.parameters[1].type: string
paths./tickets.get.parameters[2].description: Number or items to skip when executing
  query. List starts at zero. If omitted will default to zero. Use this conjuction
  with `limit` to paginate across the results.
paths./tickets.get.parameters[2].in: query
paths./tickets.get.parameters[2].name: offset
paths./tickets.get.parameters[2].required: false
paths./tickets.get.parameters[2].type: integer
paths./tickets.get.parameters[3].description: Number or items to return when executing
  query. Defaults to 10. Use this conjuction with `offset` to paginate across the
  results.
paths./tickets.get.parameters[3].in: query
paths./tickets.get.parameters[3].name: limit
paths./tickets.get.parameters[3].required: false
paths./tickets.get.parameters[3].type: integer
paths./tickets.get.responses.200.description: Success!
paths./tickets.get.responses.200.schema.$ref: '#/definitions/GetTickets'
paths./tickets.get.responses.400.description: Bad request.
paths./tickets.get.summary: Get customers trouble tickets
paths./tickets.get.tags.length: 1
paths./tickets.get.tags[0]: tickets
produces.length: 1
produces[0]: application/json
schemes.length: 1
schemes[0]: https
securityDefinitions.authorization.description: Authorization token. The Authorization
  token can be found in your Admin console.
securityDefinitions.authorization.in: header
securityDefinitions.authorization.name: authorization
securityDefinitions.authorization.type: apiKey
swagger: "2.0"
tags.length: 6
tags[0].description: Bulk create or query seller products.
tags[0].name: products
tags[1].description: Create, Modify or Read details of a single product
tags[1].name: product
tags[2].description: Bulk create or query orders
tags[2].name: orders
tags[3].description: Modify or read details of a single order
tags[3].name: order
tags[4].description: Bulk create or query customer tickets
tags[4].name: tickets
tags[5].description: Modify or read details of a single ticket
tags[5].name: ticket
