basePath = "/api"
"externalDocs.url" = "https://www.bikewise.org/documentation/api_v2"
host = "bikewise.org"
"info.contact.email" = "support@bikeindex.org"
"info.description" = "<p>This is an API for accessing information about bicycling related incidents. You can find the source code on <a href=\"https://github.com/bikeindex/bikewise\">GitHub</a>.</p>\n"
"info.title" = "BikeWise API v2"
"info.version" = "v2"
"info.x-apisguru-categories.length" = 1
"info.x-apisguru-categories[0]" = "open_data"
"info.x-logo.url" = "https://api.apis.guru/v2/cache/logo/https_www.bikewise.org_fav.ico"
"info.x-origin.length" = 1
"info.x-origin[0].converter.url" = "https://github.com/lucybot/api-spec-converter"
"info.x-origin[0].converter.version" = "2.5.0"
"info.x-origin[0].format" = "swagger"
"info.x-origin[0].url" = "https://bikewise.org/api/v2/swagger_doc"
"info.x-origin[0].version" = "1.2"
"info.x-preferred" = true
"info.x-providerName" = "bikewise.org"
"paths./v2/incidents.get.description" = "\n<p>If you’d like more detailed information about bike incidents, use this endpoint. For mapping, <code>locations</code> is probably a better bet.</p>\n\n<p><strong>Notes on location searching</strong>: <br />\n- <code>proximity</code> accepts an ip address, an address, zipcode, city, or latitude,longitude - i.e. <code>70.210.133.87</code>, <code>210 NW 11th Ave, Portland, OR</code>, <code>60647</code>, <code>Chicago, IL</code>, and <code>45.521728,-122.67326</code> are all acceptable<br />\n- <code>proximity_square</code> sets the length of the sides of the square to find matches inside of. The square is centered on the location specified by <code>proximity</code>. It defaults to 100.</p>\n"
"paths./v2/incidents.get.operationId" = "GET--version-incidents---format-"
"paths./v2/incidents.get.parameters.length" = 8
"paths./v2/incidents.get.parameters[0].default" = 1.0
"paths./v2/incidents.get.parameters[0].description" = "<p>Page of results to fetch.</p>\n"
"paths./v2/incidents.get.parameters[0].format" = "int32"
"paths./v2/incidents.get.parameters[0].in" = "query"
"paths./v2/incidents.get.parameters[0].name" = "page"
"paths./v2/incidents.get.parameters[0].required" = false
"paths./v2/incidents.get.parameters[0].type" = "integer"
"paths./v2/incidents.get.parameters[1].description" = "<p>Number of results to return per page.</p>\n"
"paths./v2/incidents.get.parameters[1].format" = "int32"
"paths./v2/incidents.get.parameters[1].in" = "query"
"paths./v2/incidents.get.parameters[1].name" = "per_page"
"paths./v2/incidents.get.parameters[1].required" = false
"paths./v2/incidents.get.parameters[1].type" = "integer"
"paths./v2/incidents.get.parameters[2].description" = "<p>End of period</p>\n"
"paths./v2/incidents.get.parameters[2].format" = "int32"
"paths./v2/incidents.get.parameters[2].in" = "query"
"paths./v2/incidents.get.parameters[2].name" = "occurred_before"
"paths./v2/incidents.get.parameters[2].required" = false
"paths./v2/incidents.get.parameters[2].type" = "integer"
"paths./v2/incidents.get.parameters[3].description" = "<p>Start of period</p>\n"
"paths./v2/incidents.get.parameters[3].format" = "int32"
"paths./v2/incidents.get.parameters[3].in" = "query"
"paths./v2/incidents.get.parameters[3].name" = "occurred_after"
"paths./v2/incidents.get.parameters[3].required" = false
"paths./v2/incidents.get.parameters[3].type" = "integer"
"paths./v2/incidents.get.parameters[4].description" = "<p>Only incidents of specific type</p>\n"
"paths./v2/incidents.get.parameters[4].enum.length" = 6
"paths./v2/incidents.get.parameters[4].enum[0]" = "crash"
"paths./v2/incidents.get.parameters[4].enum[1]" = "hazard"
"paths./v2/incidents.get.parameters[4].enum[2]" = "theft"
"paths./v2/incidents.get.parameters[4].enum[3]" = "unconfirmed"
"paths./v2/incidents.get.parameters[4].enum[4]" = "infrastructure_issue"
"paths./v2/incidents.get.parameters[4].enum[5]" = "chop_shop"
"paths./v2/incidents.get.parameters[4].in" = "query"
"paths./v2/incidents.get.parameters[4].name" = "incident_type"
"paths./v2/incidents.get.parameters[4].required" = false
"paths./v2/incidents.get.parameters[4].type" = "string"
"paths./v2/incidents.get.parameters[5].description" = "<p>Center of location for proximity search</p>\n"
"paths./v2/incidents.get.parameters[5].in" = "query"
"paths./v2/incidents.get.parameters[5].name" = "proximity"
"paths./v2/incidents.get.parameters[5].required" = false
"paths./v2/incidents.get.parameters[5].type" = "string"
"paths./v2/incidents.get.parameters[6].default" = 100.0
"paths./v2/incidents.get.parameters[6].description" = "<p>Size of the proximity search</p>\n"
"paths./v2/incidents.get.parameters[6].format" = "int32"
"paths./v2/incidents.get.parameters[6].in" = "query"
"paths./v2/incidents.get.parameters[6].name" = "proximity_square"
"paths./v2/incidents.get.parameters[6].required" = false
"paths./v2/incidents.get.parameters[6].type" = "integer"
"paths./v2/incidents.get.parameters[7].description" = "<p>Full text search of incidents</p>\n"
"paths./v2/incidents.get.parameters[7].in" = "query"
"paths./v2/incidents.get.parameters[7].name" = "query"
"paths./v2/incidents.get.parameters[7].required" = false
"paths./v2/incidents.get.parameters[7].type" = "string"
"paths./v2/incidents.get.responses.200.description" = "No response was specified"
"paths./v2/incidents.get.summary" = "Paginated incidents matching parameters"
"paths./v2/incidents.get.tags.length" = 1
"paths./v2/incidents.get.tags[0]" = "incidents"
"paths./v2/incidents/{id}.get.operationId" = "GET--version-incidents--id---format-"
"paths./v2/incidents/{id}.get.parameters.length" = 1
"paths./v2/incidents/{id}.get.parameters[0].description" = "<p>Incident ID</p>\n"
"paths./v2/incidents/{id}.get.parameters[0].format" = "int32"
"paths./v2/incidents/{id}.get.parameters[0].in" = "path"
"paths./v2/incidents/{id}.get.parameters[0].name" = "id"
"paths./v2/incidents/{id}.get.parameters[0].required" = true
"paths./v2/incidents/{id}.get.parameters[0].type" = "integer"
"paths./v2/incidents/{id}.get.responses.200.description" = "No response was specified"
"paths./v2/incidents/{id}.get.tags.length" = 1
"paths./v2/incidents/{id}.get.tags[0]" = "incidents"
"paths./v2/locations.get.description" = "<p><strong>This endpoint behaves exactly like</strong> <code>incidents</code>, but returns a valid geojson <code>FeatureCollection</code> that looks like this:</p>\n\n<pre><code>{\n  type: \"FeatureCollection\",\n  features: [\n    {\n      type: \"Feature\",\n      properties: {\n      id: 4474199,\n      type: \"Theft\",\n      occurred_at: 1428536937\n    },\n      geometry: {\n      type: \"Point\",\n      coordinates: [ -122.6244177, 45.5164386 ]\n    }\n  }\n}\n</code></pre>\n\n<p>It doesn’t paginate. If you pass the <code>all</code> parameter it returns all matches (which can be big, &gt; 4mb), otherwise it returns the 100 most recent.</p>\n\n<p><strong>Go forth and make maps!</strong></p>\n"
"paths./v2/locations.get.operationId" = "GET--version-locations---format-"
"paths./v2/locations.get.parameters.length" = 8
"paths./v2/locations.get.parameters[0].description" = "<p>End of period</p>\n"
"paths./v2/locations.get.parameters[0].format" = "int32"
"paths./v2/locations.get.parameters[0].in" = "query"
"paths./v2/locations.get.parameters[0].name" = "occurred_before"
"paths./v2/locations.get.parameters[0].required" = false
"paths./v2/locations.get.parameters[0].type" = "integer"
"paths./v2/locations.get.parameters[1].description" = "<p>Start of period</p>\n"
"paths./v2/locations.get.parameters[1].format" = "int32"
"paths./v2/locations.get.parameters[1].in" = "query"
"paths./v2/locations.get.parameters[1].name" = "occurred_after"
"paths./v2/locations.get.parameters[1].required" = false
"paths./v2/locations.get.parameters[1].type" = "integer"
"paths./v2/locations.get.parameters[2].description" = "<p>Only incidents of specific type</p>\n"
"paths./v2/locations.get.parameters[2].enum.length" = 6
"paths./v2/locations.get.parameters[2].enum[0]" = "crash"
"paths./v2/locations.get.parameters[2].enum[1]" = "hazard"
"paths./v2/locations.get.parameters[2].enum[2]" = "theft"
"paths./v2/locations.get.parameters[2].enum[3]" = "unconfirmed"
"paths./v2/locations.get.parameters[2].enum[4]" = "infrastructure_issue"
"paths./v2/locations.get.parameters[2].enum[5]" = "chop_shop"
"paths./v2/locations.get.parameters[2].in" = "query"
"paths./v2/locations.get.parameters[2].name" = "incident_type"
"paths./v2/locations.get.parameters[2].required" = false
"paths./v2/locations.get.parameters[2].type" = "string"
"paths./v2/locations.get.parameters[3].description" = "<p>Center of location for proximity search</p>\n"
"paths./v2/locations.get.parameters[3].in" = "query"
"paths./v2/locations.get.parameters[3].name" = "proximity"
"paths./v2/locations.get.parameters[3].required" = false
"paths./v2/locations.get.parameters[3].type" = "string"
"paths./v2/locations.get.parameters[4].default" = 100.0
"paths./v2/locations.get.parameters[4].description" = "<p>Size of the proximity search</p>\n"
"paths./v2/locations.get.parameters[4].format" = "int32"
"paths./v2/locations.get.parameters[4].in" = "query"
"paths./v2/locations.get.parameters[4].name" = "proximity_square"
"paths./v2/locations.get.parameters[4].required" = false
"paths./v2/locations.get.parameters[4].type" = "integer"
"paths./v2/locations.get.parameters[5].description" = "<p>Full text search of incidents</p>\n"
"paths./v2/locations.get.parameters[5].in" = "query"
"paths./v2/locations.get.parameters[5].name" = "query"
"paths./v2/locations.get.parameters[5].required" = false
"paths./v2/locations.get.parameters[5].type" = "string"
"paths./v2/locations.get.parameters[6].description" = "<p>Max number of results to return. Defaults to 100</p>\n"
"paths./v2/locations.get.parameters[6].format" = "int32"
"paths./v2/locations.get.parameters[6].in" = "query"
"paths./v2/locations.get.parameters[6].name" = "limit"
"paths./v2/locations.get.parameters[6].required" = false
"paths./v2/locations.get.parameters[6].type" = "integer"
"paths./v2/locations.get.parameters[7].description" = "<p>Give ‘em all to me. Will ignore limit</p>\n"
"paths./v2/locations.get.parameters[7].in" = "query"
"paths./v2/locations.get.parameters[7].name" = "all"
"paths./v2/locations.get.parameters[7].required" = false
"paths./v2/locations.get.parameters[7].type" = "boolean"
"paths./v2/locations.get.responses.200.description" = "No response was specified"
"paths./v2/locations.get.summary" = "Unpaginated geojson response"
"paths./v2/locations.get.tags.length" = 1
"paths./v2/locations.get.tags[0]" = "locations"
"paths./v2/locations/markers.get.description" = "<p>This behaves exactly like the root <code>locations</code> endpoint, but returns <a href=\"https://github.com/mapbox/simplestyle-spec\">simplestyled markers</a> (<a href=\"https://www.mapbox.com/guides/markers/#simple-style\">mapbox styled markers</a>)</p>\n\n<p><strong>Go forth and make maps!</strong></p>\n"
"paths./v2/locations/markers.get.operationId" = "GET--version-locations-markers---format-"
"paths./v2/locations/markers.get.parameters.length" = 8
"paths./v2/locations/markers.get.parameters[0].description" = "<p>End of period</p>\n"
"paths./v2/locations/markers.get.parameters[0].format" = "int32"
"paths./v2/locations/markers.get.parameters[0].in" = "query"
"paths./v2/locations/markers.get.parameters[0].name" = "occurred_before"
"paths./v2/locations/markers.get.parameters[0].required" = false
"paths./v2/locations/markers.get.parameters[0].type" = "integer"
"paths./v2/locations/markers.get.parameters[1].description" = "<p>Start of period</p>\n"
"paths./v2/locations/markers.get.parameters[1].format" = "int32"
"paths./v2/locations/markers.get.parameters[1].in" = "query"
"paths./v2/locations/markers.get.parameters[1].name" = "occurred_after"
"paths./v2/locations/markers.get.parameters[1].required" = false
"paths./v2/locations/markers.get.parameters[1].type" = "integer"
"paths./v2/locations/markers.get.parameters[2].description" = "<p>Only incidents of specific type</p>\n"
"paths./v2/locations/markers.get.parameters[2].enum.length" = 6
"paths./v2/locations/markers.get.parameters[2].enum[0]" = "crash"
"paths./v2/locations/markers.get.parameters[2].enum[1]" = "hazard"
"paths./v2/locations/markers.get.parameters[2].enum[2]" = "theft"
"paths./v2/locations/markers.get.parameters[2].enum[3]" = "unconfirmed"
"paths./v2/locations/markers.get.parameters[2].enum[4]" = "infrastructure_issue"
"paths./v2/locations/markers.get.parameters[2].enum[5]" = "chop_shop"
"paths./v2/locations/markers.get.parameters[2].in" = "query"
"paths./v2/locations/markers.get.parameters[2].name" = "incident_type"
"paths./v2/locations/markers.get.parameters[2].required" = false
"paths./v2/locations/markers.get.parameters[2].type" = "string"
"paths./v2/locations/markers.get.parameters[3].description" = "<p>Center of location for proximity search</p>\n"
"paths./v2/locations/markers.get.parameters[3].in" = "query"
"paths./v2/locations/markers.get.parameters[3].name" = "proximity"
"paths./v2/locations/markers.get.parameters[3].required" = false
"paths./v2/locations/markers.get.parameters[3].type" = "string"
"paths./v2/locations/markers.get.parameters[4].default" = 100.0
"paths./v2/locations/markers.get.parameters[4].description" = "<p>Size of the proximity search</p>\n"
"paths./v2/locations/markers.get.parameters[4].format" = "int32"
"paths./v2/locations/markers.get.parameters[4].in" = "query"
"paths./v2/locations/markers.get.parameters[4].name" = "proximity_square"
"paths./v2/locations/markers.get.parameters[4].required" = false
"paths./v2/locations/markers.get.parameters[4].type" = "integer"
"paths./v2/locations/markers.get.parameters[5].description" = "<p>Full text search of incidents</p>\n"
"paths./v2/locations/markers.get.parameters[5].in" = "query"
"paths./v2/locations/markers.get.parameters[5].name" = "query"
"paths./v2/locations/markers.get.parameters[5].required" = false
"paths./v2/locations/markers.get.parameters[5].type" = "string"
"paths./v2/locations/markers.get.parameters[6].description" = "<p>Max number of results to return. Defaults to 100</p>\n"
"paths./v2/locations/markers.get.parameters[6].format" = "int32"
"paths./v2/locations/markers.get.parameters[6].in" = "query"
"paths./v2/locations/markers.get.parameters[6].name" = "limit"
"paths./v2/locations/markers.get.parameters[6].required" = false
"paths./v2/locations/markers.get.parameters[6].type" = "integer"
"paths./v2/locations/markers.get.parameters[7].description" = "<p>Give ‘em all to me. Will ignore limit</p>\n"
"paths./v2/locations/markers.get.parameters[7].in" = "query"
"paths./v2/locations/markers.get.parameters[7].name" = "all"
"paths./v2/locations/markers.get.parameters[7].required" = false
"paths./v2/locations/markers.get.parameters[7].type" = "boolean"
"paths./v2/locations/markers.get.responses.200.description" = "No response was specified"
"paths./v2/locations/markers.get.summary" = "Unpaginated geojson response with simplestyled markers"
"paths./v2/locations/markers.get.tags.length" = 1
"paths./v2/locations/markers.get.tags[0]" = "locations"
"produces.length" = 1
"produces[0]" = "application/json"
"schemes.length" = 1
"schemes[0]" = "https"
swagger = "2.0"
"tags.length" = 2
"tags[0].description" = "Incidents matching parameters"
"tags[0].name" = "incidents"
"tags[1].description" = "GeoJSON response for matching incidents"
"tags[1].name" = "locations"
