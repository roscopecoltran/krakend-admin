{
	"basePath": "/api",
	"externalDocs.url": "https://www.bikewise.org/documentation/api_v2",
	"host": "bikewise.org",
	"info.contact.email": "support@bikeindex.org",
	"info.description": "\u003cp\u003eThis is an API for accessing information about bicycling related incidents. You can find the source code on \u003ca href=\"https://github.com/bikeindex/bikewise\"\u003eGitHub\u003c/a\u003e.\u003c/p\u003e\n",
	"info.title": "BikeWise API v2",
	"info.version": "v2",
	"info.x-apisguru-categories.length": 1,
	"info.x-apisguru-categories[0]": "open_data",
	"info.x-logo.url": "https://api.apis.guru/v2/cache/logo/https_www.bikewise.org_fav.ico",
	"info.x-origin.length": 1,
	"info.x-origin[0].converter.url": "https://github.com/lucybot/api-spec-converter",
	"info.x-origin[0].converter.version": "2.5.0",
	"info.x-origin[0].format": "swagger",
	"info.x-origin[0].url": "https://bikewise.org/api/v2/swagger_doc",
	"info.x-origin[0].version": "1.2",
	"info.x-preferred": true,
	"info.x-providerName": "bikewise.org",
	"paths./v2/incidents.get.description": "\n\u003cp\u003eIf you’d like more detailed information about bike incidents, use this endpoint. For mapping, \u003ccode\u003elocations\u003c/code\u003e is probably a better bet.\u003c/p\u003e\n\n\u003cp\u003e\u003cstrong\u003eNotes on location searching\u003c/strong\u003e: \u003cbr /\u003e\n- \u003ccode\u003eproximity\u003c/code\u003e accepts an ip address, an address, zipcode, city, or latitude,longitude - i.e. \u003ccode\u003e70.210.133.87\u003c/code\u003e, \u003ccode\u003e210 NW 11th Ave, Portland, OR\u003c/code\u003e, \u003ccode\u003e60647\u003c/code\u003e, \u003ccode\u003eChicago, IL\u003c/code\u003e, and \u003ccode\u003e45.521728,-122.67326\u003c/code\u003e are all acceptable\u003cbr /\u003e\n- \u003ccode\u003eproximity_square\u003c/code\u003e sets the length of the sides of the square to find matches inside of. The square is centered on the location specified by \u003ccode\u003eproximity\u003c/code\u003e. It defaults to 100.\u003c/p\u003e\n",
	"paths./v2/incidents.get.operationId": "GET--version-incidents---format-",
	"paths./v2/incidents.get.parameters.length": 8,
	"paths./v2/incidents.get.parameters[0].default": 1,
	"paths./v2/incidents.get.parameters[0].description": "\u003cp\u003ePage of results to fetch.\u003c/p\u003e\n",
	"paths./v2/incidents.get.parameters[0].format": "int32",
	"paths./v2/incidents.get.parameters[0].in": "query",
	"paths./v2/incidents.get.parameters[0].name": "page",
	"paths./v2/incidents.get.parameters[0].required": false,
	"paths./v2/incidents.get.parameters[0].type": "integer",
	"paths./v2/incidents.get.parameters[1].description": "\u003cp\u003eNumber of results to return per page.\u003c/p\u003e\n",
	"paths./v2/incidents.get.parameters[1].format": "int32",
	"paths./v2/incidents.get.parameters[1].in": "query",
	"paths./v2/incidents.get.parameters[1].name": "per_page",
	"paths./v2/incidents.get.parameters[1].required": false,
	"paths./v2/incidents.get.parameters[1].type": "integer",
	"paths./v2/incidents.get.parameters[2].description": "\u003cp\u003eEnd of period\u003c/p\u003e\n",
	"paths./v2/incidents.get.parameters[2].format": "int32",
	"paths./v2/incidents.get.parameters[2].in": "query",
	"paths./v2/incidents.get.parameters[2].name": "occurred_before",
	"paths./v2/incidents.get.parameters[2].required": false,
	"paths./v2/incidents.get.parameters[2].type": "integer",
	"paths./v2/incidents.get.parameters[3].description": "\u003cp\u003eStart of period\u003c/p\u003e\n",
	"paths./v2/incidents.get.parameters[3].format": "int32",
	"paths./v2/incidents.get.parameters[3].in": "query",
	"paths./v2/incidents.get.parameters[3].name": "occurred_after",
	"paths./v2/incidents.get.parameters[3].required": false,
	"paths./v2/incidents.get.parameters[3].type": "integer",
	"paths./v2/incidents.get.parameters[4].description": "\u003cp\u003eOnly incidents of specific type\u003c/p\u003e\n",
	"paths./v2/incidents.get.parameters[4].enum.length": 6,
	"paths./v2/incidents.get.parameters[4].enum[0]": "crash",
	"paths./v2/incidents.get.parameters[4].enum[1]": "hazard",
	"paths./v2/incidents.get.parameters[4].enum[2]": "theft",
	"paths./v2/incidents.get.parameters[4].enum[3]": "unconfirmed",
	"paths./v2/incidents.get.parameters[4].enum[4]": "infrastructure_issue",
	"paths./v2/incidents.get.parameters[4].enum[5]": "chop_shop",
	"paths./v2/incidents.get.parameters[4].in": "query",
	"paths./v2/incidents.get.parameters[4].name": "incident_type",
	"paths./v2/incidents.get.parameters[4].required": false,
	"paths./v2/incidents.get.parameters[4].type": "string",
	"paths./v2/incidents.get.parameters[5].description": "\u003cp\u003eCenter of location for proximity search\u003c/p\u003e\n",
	"paths./v2/incidents.get.parameters[5].in": "query",
	"paths./v2/incidents.get.parameters[5].name": "proximity",
	"paths./v2/incidents.get.parameters[5].required": false,
	"paths./v2/incidents.get.parameters[5].type": "string",
	"paths./v2/incidents.get.parameters[6].default": 100,
	"paths./v2/incidents.get.parameters[6].description": "\u003cp\u003eSize of the proximity search\u003c/p\u003e\n",
	"paths./v2/incidents.get.parameters[6].format": "int32",
	"paths./v2/incidents.get.parameters[6].in": "query",
	"paths./v2/incidents.get.parameters[6].name": "proximity_square",
	"paths./v2/incidents.get.parameters[6].required": false,
	"paths./v2/incidents.get.parameters[6].type": "integer",
	"paths./v2/incidents.get.parameters[7].description": "\u003cp\u003eFull text search of incidents\u003c/p\u003e\n",
	"paths./v2/incidents.get.parameters[7].in": "query",
	"paths./v2/incidents.get.parameters[7].name": "query",
	"paths./v2/incidents.get.parameters[7].required": false,
	"paths./v2/incidents.get.parameters[7].type": "string",
	"paths./v2/incidents.get.responses.200.description": "No response was specified",
	"paths./v2/incidents.get.summary": "Paginated incidents matching parameters",
	"paths./v2/incidents.get.tags.length": 1,
	"paths./v2/incidents.get.tags[0]": "incidents",
	"paths./v2/incidents/{id}.get.operationId": "GET--version-incidents--id---format-",
	"paths./v2/incidents/{id}.get.parameters.length": 1,
	"paths./v2/incidents/{id}.get.parameters[0].description": "\u003cp\u003eIncident ID\u003c/p\u003e\n",
	"paths./v2/incidents/{id}.get.parameters[0].format": "int32",
	"paths./v2/incidents/{id}.get.parameters[0].in": "path",
	"paths./v2/incidents/{id}.get.parameters[0].name": "id",
	"paths./v2/incidents/{id}.get.parameters[0].required": true,
	"paths./v2/incidents/{id}.get.parameters[0].type": "integer",
	"paths./v2/incidents/{id}.get.responses.200.description": "No response was specified",
	"paths./v2/incidents/{id}.get.tags.length": 1,
	"paths./v2/incidents/{id}.get.tags[0]": "incidents",
	"paths./v2/locations.get.description": "\u003cp\u003e\u003cstrong\u003eThis endpoint behaves exactly like\u003c/strong\u003e \u003ccode\u003eincidents\u003c/code\u003e, but returns a valid geojson \u003ccode\u003eFeatureCollection\u003c/code\u003e that looks like this:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003e{\n  type: \"FeatureCollection\",\n  features: [\n    {\n      type: \"Feature\",\n      properties: {\n      id: 4474199,\n      type: \"Theft\",\n      occurred_at: 1428536937\n    },\n      geometry: {\n      type: \"Point\",\n      coordinates: [ -122.6244177, 45.5164386 ]\n    }\n  }\n}\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eIt doesn’t paginate. If you pass the \u003ccode\u003eall\u003c/code\u003e parameter it returns all matches (which can be big, \u0026gt; 4mb), otherwise it returns the 100 most recent.\u003c/p\u003e\n\n\u003cp\u003e\u003cstrong\u003eGo forth and make maps!\u003c/strong\u003e\u003c/p\u003e\n",
	"paths./v2/locations.get.operationId": "GET--version-locations---format-",
	"paths./v2/locations.get.parameters.length": 8,
	"paths./v2/locations.get.parameters[0].description": "\u003cp\u003eEnd of period\u003c/p\u003e\n",
	"paths./v2/locations.get.parameters[0].format": "int32",
	"paths./v2/locations.get.parameters[0].in": "query",
	"paths./v2/locations.get.parameters[0].name": "occurred_before",
	"paths./v2/locations.get.parameters[0].required": false,
	"paths./v2/locations.get.parameters[0].type": "integer",
	"paths./v2/locations.get.parameters[1].description": "\u003cp\u003eStart of period\u003c/p\u003e\n",
	"paths./v2/locations.get.parameters[1].format": "int32",
	"paths./v2/locations.get.parameters[1].in": "query",
	"paths./v2/locations.get.parameters[1].name": "occurred_after",
	"paths./v2/locations.get.parameters[1].required": false,
	"paths./v2/locations.get.parameters[1].type": "integer",
	"paths./v2/locations.get.parameters[2].description": "\u003cp\u003eOnly incidents of specific type\u003c/p\u003e\n",
	"paths./v2/locations.get.parameters[2].enum.length": 6,
	"paths./v2/locations.get.parameters[2].enum[0]": "crash",
	"paths./v2/locations.get.parameters[2].enum[1]": "hazard",
	"paths./v2/locations.get.parameters[2].enum[2]": "theft",
	"paths./v2/locations.get.parameters[2].enum[3]": "unconfirmed",
	"paths./v2/locations.get.parameters[2].enum[4]": "infrastructure_issue",
	"paths./v2/locations.get.parameters[2].enum[5]": "chop_shop",
	"paths./v2/locations.get.parameters[2].in": "query",
	"paths./v2/locations.get.parameters[2].name": "incident_type",
	"paths./v2/locations.get.parameters[2].required": false,
	"paths./v2/locations.get.parameters[2].type": "string",
	"paths./v2/locations.get.parameters[3].description": "\u003cp\u003eCenter of location for proximity search\u003c/p\u003e\n",
	"paths./v2/locations.get.parameters[3].in": "query",
	"paths./v2/locations.get.parameters[3].name": "proximity",
	"paths./v2/locations.get.parameters[3].required": false,
	"paths./v2/locations.get.parameters[3].type": "string",
	"paths./v2/locations.get.parameters[4].default": 100,
	"paths./v2/locations.get.parameters[4].description": "\u003cp\u003eSize of the proximity search\u003c/p\u003e\n",
	"paths./v2/locations.get.parameters[4].format": "int32",
	"paths./v2/locations.get.parameters[4].in": "query",
	"paths./v2/locations.get.parameters[4].name": "proximity_square",
	"paths./v2/locations.get.parameters[4].required": false,
	"paths./v2/locations.get.parameters[4].type": "integer",
	"paths./v2/locations.get.parameters[5].description": "\u003cp\u003eFull text search of incidents\u003c/p\u003e\n",
	"paths./v2/locations.get.parameters[5].in": "query",
	"paths./v2/locations.get.parameters[5].name": "query",
	"paths./v2/locations.get.parameters[5].required": false,
	"paths./v2/locations.get.parameters[5].type": "string",
	"paths./v2/locations.get.parameters[6].description": "\u003cp\u003eMax number of results to return. Defaults to 100\u003c/p\u003e\n",
	"paths./v2/locations.get.parameters[6].format": "int32",
	"paths./v2/locations.get.parameters[6].in": "query",
	"paths./v2/locations.get.parameters[6].name": "limit",
	"paths./v2/locations.get.parameters[6].required": false,
	"paths./v2/locations.get.parameters[6].type": "integer",
	"paths./v2/locations.get.parameters[7].description": "\u003cp\u003eGive ‘em all to me. Will ignore limit\u003c/p\u003e\n",
	"paths./v2/locations.get.parameters[7].in": "query",
	"paths./v2/locations.get.parameters[7].name": "all",
	"paths./v2/locations.get.parameters[7].required": false,
	"paths./v2/locations.get.parameters[7].type": "boolean",
	"paths./v2/locations.get.responses.200.description": "No response was specified",
	"paths./v2/locations.get.summary": "Unpaginated geojson response",
	"paths./v2/locations.get.tags.length": 1,
	"paths./v2/locations.get.tags[0]": "locations",
	"paths./v2/locations/markers.get.description": "\u003cp\u003eThis behaves exactly like the root \u003ccode\u003elocations\u003c/code\u003e endpoint, but returns \u003ca href=\"https://github.com/mapbox/simplestyle-spec\"\u003esimplestyled markers\u003c/a\u003e (\u003ca href=\"https://www.mapbox.com/guides/markers/#simple-style\"\u003emapbox styled markers\u003c/a\u003e)\u003c/p\u003e\n\n\u003cp\u003e\u003cstrong\u003eGo forth and make maps!\u003c/strong\u003e\u003c/p\u003e\n",
	"paths./v2/locations/markers.get.operationId": "GET--version-locations-markers---format-",
	"paths./v2/locations/markers.get.parameters.length": 8,
	"paths./v2/locations/markers.get.parameters[0].description": "\u003cp\u003eEnd of period\u003c/p\u003e\n",
	"paths./v2/locations/markers.get.parameters[0].format": "int32",
	"paths./v2/locations/markers.get.parameters[0].in": "query",
	"paths./v2/locations/markers.get.parameters[0].name": "occurred_before",
	"paths./v2/locations/markers.get.parameters[0].required": false,
	"paths./v2/locations/markers.get.parameters[0].type": "integer",
	"paths./v2/locations/markers.get.parameters[1].description": "\u003cp\u003eStart of period\u003c/p\u003e\n",
	"paths./v2/locations/markers.get.parameters[1].format": "int32",
	"paths./v2/locations/markers.get.parameters[1].in": "query",
	"paths./v2/locations/markers.get.parameters[1].name": "occurred_after",
	"paths./v2/locations/markers.get.parameters[1].required": false,
	"paths./v2/locations/markers.get.parameters[1].type": "integer",
	"paths./v2/locations/markers.get.parameters[2].description": "\u003cp\u003eOnly incidents of specific type\u003c/p\u003e\n",
	"paths./v2/locations/markers.get.parameters[2].enum.length": 6,
	"paths./v2/locations/markers.get.parameters[2].enum[0]": "crash",
	"paths./v2/locations/markers.get.parameters[2].enum[1]": "hazard",
	"paths./v2/locations/markers.get.parameters[2].enum[2]": "theft",
	"paths./v2/locations/markers.get.parameters[2].enum[3]": "unconfirmed",
	"paths./v2/locations/markers.get.parameters[2].enum[4]": "infrastructure_issue",
	"paths./v2/locations/markers.get.parameters[2].enum[5]": "chop_shop",
	"paths./v2/locations/markers.get.parameters[2].in": "query",
	"paths./v2/locations/markers.get.parameters[2].name": "incident_type",
	"paths./v2/locations/markers.get.parameters[2].required": false,
	"paths./v2/locations/markers.get.parameters[2].type": "string",
	"paths./v2/locations/markers.get.parameters[3].description": "\u003cp\u003eCenter of location for proximity search\u003c/p\u003e\n",
	"paths./v2/locations/markers.get.parameters[3].in": "query",
	"paths./v2/locations/markers.get.parameters[3].name": "proximity",
	"paths./v2/locations/markers.get.parameters[3].required": false,
	"paths./v2/locations/markers.get.parameters[3].type": "string",
	"paths./v2/locations/markers.get.parameters[4].default": 100,
	"paths./v2/locations/markers.get.parameters[4].description": "\u003cp\u003eSize of the proximity search\u003c/p\u003e\n",
	"paths./v2/locations/markers.get.parameters[4].format": "int32",
	"paths./v2/locations/markers.get.parameters[4].in": "query",
	"paths./v2/locations/markers.get.parameters[4].name": "proximity_square",
	"paths./v2/locations/markers.get.parameters[4].required": false,
	"paths./v2/locations/markers.get.parameters[4].type": "integer",
	"paths./v2/locations/markers.get.parameters[5].description": "\u003cp\u003eFull text search of incidents\u003c/p\u003e\n",
	"paths./v2/locations/markers.get.parameters[5].in": "query",
	"paths./v2/locations/markers.get.parameters[5].name": "query",
	"paths./v2/locations/markers.get.parameters[5].required": false,
	"paths./v2/locations/markers.get.parameters[5].type": "string",
	"paths./v2/locations/markers.get.parameters[6].description": "\u003cp\u003eMax number of results to return. Defaults to 100\u003c/p\u003e\n",
	"paths./v2/locations/markers.get.parameters[6].format": "int32",
	"paths./v2/locations/markers.get.parameters[6].in": "query",
	"paths./v2/locations/markers.get.parameters[6].name": "limit",
	"paths./v2/locations/markers.get.parameters[6].required": false,
	"paths./v2/locations/markers.get.parameters[6].type": "integer",
	"paths./v2/locations/markers.get.parameters[7].description": "\u003cp\u003eGive ‘em all to me. Will ignore limit\u003c/p\u003e\n",
	"paths./v2/locations/markers.get.parameters[7].in": "query",
	"paths./v2/locations/markers.get.parameters[7].name": "all",
	"paths./v2/locations/markers.get.parameters[7].required": false,
	"paths./v2/locations/markers.get.parameters[7].type": "boolean",
	"paths./v2/locations/markers.get.responses.200.description": "No response was specified",
	"paths./v2/locations/markers.get.summary": "Unpaginated geojson response with simplestyled markers",
	"paths./v2/locations/markers.get.tags.length": 1,
	"paths./v2/locations/markers.get.tags[0]": "locations",
	"produces.length": 1,
	"produces[0]": "application/json",
	"schemes.length": 1,
	"schemes[0]": "https",
	"swagger": "2.0",
	"tags.length": 2,
	"tags[0].description": "Incidents matching parameters",
	"tags[0].name": "incidents",
	"tags[1].description": "GeoJSON response for matching incidents",
	"tags[1].name": "locations"
}