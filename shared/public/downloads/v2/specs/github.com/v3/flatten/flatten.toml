basePath = "/"
"consumes.length" = 1
"consumes[0]" = "application/json"
"definitions.asset.properties.content_type.type" = "string"
"definitions.asset.properties.created_at.type" = "string"
"definitions.asset.properties.download_count.type" = "number"
"definitions.asset.properties.id.type" = "number"
"definitions.asset.properties.label.type" = "string"
"definitions.asset.properties.name.type" = "string"
"definitions.asset.properties.size.type" = "number"
"definitions.asset.properties.state.type" = "string"
"definitions.asset.properties.updated_at.type" = "string"
"definitions.asset.properties.uploader.properties.avatar_url.type" = "string"
"definitions.asset.properties.uploader.properties.events_url.type" = "string"
"definitions.asset.properties.uploader.properties.followers_url.type" = "string"
"definitions.asset.properties.uploader.properties.following_url.type" = "string"
"definitions.asset.properties.uploader.properties.gists_url.type" = "string"
"definitions.asset.properties.uploader.properties.gravatar_id.type" = "string"
"definitions.asset.properties.uploader.properties.html_url.type" = "string"
"definitions.asset.properties.uploader.properties.id.type" = "number"
"definitions.asset.properties.uploader.properties.login.type" = "string"
"definitions.asset.properties.uploader.properties.organizations_url.type" = "string"
"definitions.asset.properties.uploader.properties.received_events_url.type" = "string"
"definitions.asset.properties.uploader.properties.repos_url.type" = "string"
"definitions.asset.properties.uploader.properties.site_admin.type" = "boolean"
"definitions.asset.properties.uploader.properties.starred_url.type" = "string"
"definitions.asset.properties.uploader.properties.subscriptions_url.type" = "string"
"definitions.asset.properties.uploader.properties.type.type" = "string"
"definitions.asset.properties.uploader.properties.url.type" = "string"
"definitions.asset.properties.uploader.type" = "object"
"definitions.asset.properties.url.type" = "string"
"definitions.asset.type" = "object"
"definitions.assetPatch.properties.label.type" = "string"
"definitions.assetPatch.properties.name.type" = "string"
"definitions.assetPatch.required.length" = 1
"definitions.assetPatch.required[0]" = "name"
"definitions.assetPatch.type" = "object"
"definitions.assets.items.properties.content_type.type" = "string"
"definitions.assets.items.properties.created_at.type" = "string"
"definitions.assets.items.properties.download_count.type" = "number"
"definitions.assets.items.properties.id.type" = "number"
"definitions.assets.items.properties.label.type" = "string"
"definitions.assets.items.properties.name.type" = "string"
"definitions.assets.items.properties.size.type" = "number"
"definitions.assets.items.properties.state.type" = "string"
"definitions.assets.items.properties.updated_at.type" = "string"
"definitions.assets.items.properties.uploader.properties.avatar_url.type" = "string"
"definitions.assets.items.properties.uploader.properties.events_url.type" = "string"
"definitions.assets.items.properties.uploader.properties.followers_url.type" = "string"
"definitions.assets.items.properties.uploader.properties.following_url.type" = "string"
"definitions.assets.items.properties.uploader.properties.gists_url.type" = "string"
"definitions.assets.items.properties.uploader.properties.gravatar_id.type" = "string"
"definitions.assets.items.properties.uploader.properties.html_url.type" = "string"
"definitions.assets.items.properties.uploader.properties.id.type" = "number"
"definitions.assets.items.properties.uploader.properties.login.type" = "string"
"definitions.assets.items.properties.uploader.properties.organizations_url.type" = "string"
"definitions.assets.items.properties.uploader.properties.received_events_url.type" = "string"
"definitions.assets.items.properties.uploader.properties.repos_url.type" = "string"
"definitions.assets.items.properties.uploader.properties.site_admin.type" = "boolean"
"definitions.assets.items.properties.uploader.properties.starred_url.type" = "string"
"definitions.assets.items.properties.uploader.properties.subscriptions_url.type" = "string"
"definitions.assets.items.properties.uploader.properties.type.type" = "string"
"definitions.assets.items.properties.uploader.properties.url.type" = "string"
"definitions.assets.items.properties.uploader.type" = "object"
"definitions.assets.items.properties.url.type" = "string"
"definitions.assets.items.type" = "object"
"definitions.assets.type" = "array"
"definitions.assignees.items.properties.avatar_url.type" = "integer"
"definitions.assignees.items.properties.gravatar_id.type" = "string"
"definitions.assignees.items.properties.id.type" = "integer"
"definitions.assignees.items.properties.login.type" = "string"
"definitions.assignees.items.properties.url.type" = "string"
"definitions.assignees.items.type" = "object"
"definitions.assignees.type" = "array"
"definitions.blob.properties.content.type" = "string"
"definitions.blob.properties.encoding.enum.length" = 2
"definitions.blob.properties.encoding.enum[0]" = "utf-8"
"definitions.blob.properties.encoding.enum[1]" = "base64"
"definitions.blob.properties.sha.type" = "string"
"definitions.blob.properties.size.type" = "integer"
"definitions.blob.type" = "object"
"definitions.blobs.properties.sha.type" = "string"
"definitions.blobs.type" = "object"
"definitions.branch.properties._links.properties.html.type" = "string"
"definitions.branch.properties._links.properties.self.type" = "string"
"definitions.branch.properties._links.type" = "object"
"definitions.branch.properties.commit.properties.author.properties.avatar_url.type" = "string"
"definitions.branch.properties.commit.properties.author.properties.gravatar_id.type" = "string"
"definitions.branch.properties.commit.properties.author.properties.id.type" = "integer"
"definitions.branch.properties.commit.properties.author.properties.login.type" = "string"
"definitions.branch.properties.commit.properties.author.properties.url.type" = "string"
"definitions.branch.properties.commit.properties.author.type" = "object"
"definitions.branch.properties.commit.properties.commit.properties.author.properties.date.description" = "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ"
"definitions.branch.properties.commit.properties.commit.properties.author.properties.date.type" = "string"
"definitions.branch.properties.commit.properties.commit.properties.author.properties.email.type" = "string"
"definitions.branch.properties.commit.properties.commit.properties.author.properties.name.type" = "string"
"definitions.branch.properties.commit.properties.commit.properties.committer.properties.date.description" = "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ"
"definitions.branch.properties.commit.properties.commit.properties.committer.properties.date.type" = "string"
"definitions.branch.properties.commit.properties.commit.properties.committer.properties.email.type" = "string"
"definitions.branch.properties.commit.properties.commit.properties.committer.properties.name.type" = "string"
"definitions.branch.properties.commit.properties.commit.properties.committer.type" = "object"
"definitions.branch.properties.commit.properties.commit.properties.message.type" = "string"
"definitions.branch.properties.commit.properties.commit.properties.tree.properties.sha.type" = "string"
"definitions.branch.properties.commit.properties.commit.properties.tree.properties.url.type" = "string"
"definitions.branch.properties.commit.properties.commit.properties.tree.type" = "object"
"definitions.branch.properties.commit.properties.commit.properties.url.type" = "string"
"definitions.branch.properties.commit.properties.commit.type" = "object"
"definitions.branch.properties.commit.properties.committer.properties.avatar_url.type" = "string"
"definitions.branch.properties.commit.properties.committer.properties.gravatar_id.type" = "string"
"definitions.branch.properties.commit.properties.committer.properties.id.type" = "integer"
"definitions.branch.properties.commit.properties.committer.properties.login.type" = "string"
"definitions.branch.properties.commit.properties.committer.properties.url.type" = "string"
"definitions.branch.properties.commit.properties.committer.type" = "object"
"definitions.branch.properties.commit.properties.parents.items.properties.sha.type" = "string"
"definitions.branch.properties.commit.properties.parents.items.properties.url.type" = "string"
"definitions.branch.properties.commit.properties.parents.items.type" = "object"
"definitions.branch.properties.commit.properties.parents.type" = "array"
"definitions.branch.properties.commit.properties.sha.type" = "string"
"definitions.branch.properties.commit.properties.url.type" = "string"
"definitions.branch.properties.commit.type" = "object"
"definitions.branch.properties.name.type" = "string"
"definitions.branch.type" = "object"
"definitions.branches.items.properties.commit.properties.sha.type" = "string"
"definitions.branches.items.properties.commit.properties.url.type" = "string"
"definitions.branches.items.properties.commit.type" = "object"
"definitions.branches.items.properties.name.type" = "string"
"definitions.branches.items.type" = "object"
"definitions.branches.type" = "array"
"definitions.codeFrequencyStats.items.type" = "integer"
"definitions.codeFrequencyStats.type" = "array"
"definitions.collaborators.items.properties.avatar_url.type" = "string"
"definitions.collaborators.items.properties.gravatar_id.type" = "string"
"definitions.collaborators.items.properties.id.type" = "integer"
"definitions.collaborators.items.properties.login.type" = "string"
"definitions.collaborators.items.properties.url.type" = "string"
"definitions.collaborators.items.type" = "object"
"definitions.collaborators.type" = "array"
"definitions.comment.properties.body.type" = "string"
"definitions.comment.type" = "object"
"definitions.commentBody.properties.body.type" = "string"
"definitions.commentBody.required.length" = 1
"definitions.commentBody.required[0]" = "body"
"definitions.commentBody.type" = "object"
"definitions.comments.items.properties.body.type" = "string"
"definitions.comments.items.properties.created_at.description" = "ISO 8601."
"definitions.comments.items.properties.created_at.type" = "string"
"definitions.comments.items.properties.id.type" = "integer"
"definitions.comments.items.properties.url.type" = "string"
"definitions.comments.items.properties.user.properties.avatar_url.type" = "string"
"definitions.comments.items.properties.user.properties.gravatar_id.type" = "string"
"definitions.comments.items.properties.user.properties.id.type" = "integer"
"definitions.comments.items.properties.user.properties.login.type" = "string"
"definitions.comments.items.properties.user.properties.url.type" = "string"
"definitions.comments.items.properties.user.type" = "object"
"definitions.comments.items.type" = "object"
"definitions.comments.type" = "array"
"definitions.commit.properties.author.properties.avatar_url.type" = "string"
"definitions.commit.properties.author.properties.gravatar_id.type" = "string"
"definitions.commit.properties.author.properties.id.type" = "integer"
"definitions.commit.properties.author.properties.login.type" = "string"
"definitions.commit.properties.author.properties.url.type" = "string"
"definitions.commit.properties.author.type" = "object"
"definitions.commit.properties.commit.properties.author.properties.date.description" = "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ"
"definitions.commit.properties.commit.properties.author.properties.date.type" = "string"
"definitions.commit.properties.commit.properties.author.properties.email.type" = "string"
"definitions.commit.properties.commit.properties.author.properties.name.type" = "string"
"definitions.commit.properties.commit.properties.author.type" = "object"
"definitions.commit.properties.commit.properties.committer.properties.date.description" = "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ"
"definitions.commit.properties.commit.properties.committer.properties.date.type" = "string"
"definitions.commit.properties.commit.properties.committer.properties.email.type" = "string"
"definitions.commit.properties.commit.properties.committer.properties.name.type" = "string"
"definitions.commit.properties.commit.properties.committer.type" = "object"
"definitions.commit.properties.commit.properties.message.type" = "string"
"definitions.commit.properties.commit.properties.tree.properties.sha.type" = "string"
"definitions.commit.properties.commit.properties.tree.properties.url.type" = "string"
"definitions.commit.properties.commit.properties.tree.type" = "object"
"definitions.commit.properties.commit.properties.url.type" = "string"
"definitions.commit.properties.commit.type" = "object"
"definitions.commit.properties.committer.properties.avatar_url.type" = "string"
"definitions.commit.properties.committer.properties.gravatar_id.type" = "string"
"definitions.commit.properties.committer.properties.id.type" = "integer"
"definitions.commit.properties.committer.properties.login.type" = "string"
"definitions.commit.properties.committer.properties.url.type" = "string"
"definitions.commit.properties.committer.type" = "object"
"definitions.commit.properties.files.items.properties.additions.type" = "integer"
"definitions.commit.properties.files.items.properties.blob_url.type" = "string"
"definitions.commit.properties.files.items.properties.changes.type" = "integer"
"definitions.commit.properties.files.items.properties.deletions.type" = "integer"
"definitions.commit.properties.files.items.properties.filename.type" = "string"
"definitions.commit.properties.files.items.properties.patch.type" = "string"
"definitions.commit.properties.files.items.properties.raw_url.type" = "string"
"definitions.commit.properties.files.items.properties.status.type" = "string"
"definitions.commit.properties.files.items.type" = "object"
"definitions.commit.properties.files.type" = "array"
"definitions.commit.properties.parents.items.properties.sha.type" = "string"
"definitions.commit.properties.parents.items.properties.url.type" = "string"
"definitions.commit.properties.parents.items.type" = "object"
"definitions.commit.properties.parents.type" = "array"
"definitions.commit.properties.sha.type" = "string"
"definitions.commit.properties.stats.properties.additions.type" = "integer"
"definitions.commit.properties.stats.properties.deletions.type" = "integer"
"definitions.commit.properties.stats.properties.total.type" = "integer"
"definitions.commit.properties.stats.type" = "object"
"definitions.commit.properties.url.type" = "string"
"definitions.commit.type" = "object"
"definitions.commitActivityStats.items.properties.days.items.type" = "integer"
"definitions.commitActivityStats.items.properties.days.type" = "array"
"definitions.commitActivityStats.items.properties.total.type" = "integer"
"definitions.commitActivityStats.items.properties.week.type" = "integer"
"definitions.commitActivityStats.items.type" = "object"
"definitions.commitActivityStats.type" = "array"
"definitions.commitBody.properties.body.type" = "string"
"definitions.commitBody.properties.line.description" = "Deprecated - Use position parameter instead."
"definitions.commitBody.properties.line.type" = "string"
"definitions.commitBody.properties.number.description" = "Line number in the file to comment on. Defaults to null."
"definitions.commitBody.properties.number.type" = "string"
"definitions.commitBody.properties.path.description" = "Relative path of the file to comment on."
"definitions.commitBody.properties.path.type" = "string"
"definitions.commitBody.properties.position.description" = "Line index in the diff to comment on."
"definitions.commitBody.properties.position.type" = "integer"
"definitions.commitBody.properties.sha.description" = "SHA of the commit to comment on."
"definitions.commitBody.properties.sha.type" = "string"
"definitions.commitBody.required.length" = 2
"definitions.commitBody.required[0]" = "sha"
"definitions.commitBody.required[1]" = "body"
"definitions.commitBody.type" = "object"
"definitions.commitComments.properties.body.type" = "string"
"definitions.commitComments.properties.commit_id.type" = "string"
"definitions.commitComments.properties.created_at.description" = "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ"
"definitions.commitComments.properties.created_at.type" = "string"
"definitions.commitComments.properties.html_url.type" = "string"
"definitions.commitComments.properties.id.type" = "integer"
"definitions.commitComments.properties.line.type" = "integer"
"definitions.commitComments.properties.path.type" = "string"
"definitions.commitComments.properties.position.type" = "integer"
"definitions.commitComments.properties.updated_at.description" = "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ"
"definitions.commitComments.properties.updated_at.type" = "string"
"definitions.commitComments.properties.url.type" = "string"
"definitions.commitComments.properties.user.properties.avatar_url.type" = "string"
"definitions.commitComments.properties.user.properties.gravatar_id.type" = "string"
"definitions.commitComments.properties.user.properties.id.type" = "integer"
"definitions.commitComments.properties.user.properties.login.type" = "string"
"definitions.commitComments.properties.user.properties.url.type" = "string"
"definitions.commitComments.properties.user.type" = "object"
"definitions.commitComments.type" = "object"
"definitions.commits.items.properties.author.properties.avatar_url.type" = "string"
"definitions.commits.items.properties.author.properties.gravatar_id.type" = "string"
"definitions.commits.items.properties.author.properties.id.type" = "integer"
"definitions.commits.items.properties.author.properties.login.type" = "string"
"definitions.commits.items.properties.author.properties.url.type" = "string"
"definitions.commits.items.properties.author.type" = "object"
"definitions.commits.items.properties.commit.properties.author.properties.date.description" = "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ"
"definitions.commits.items.properties.commit.properties.author.properties.date.type" = "string"
"definitions.commits.items.properties.commit.properties.author.properties.email.type" = "string"
"definitions.commits.items.properties.commit.properties.author.properties.name.type" = "string"
"definitions.commits.items.properties.commit.properties.author.type" = "object"
"definitions.commits.items.properties.commit.properties.committer.properties.date.description" = "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ"
"definitions.commits.items.properties.commit.properties.committer.properties.date.type" = "string"
"definitions.commits.items.properties.commit.properties.committer.properties.email.type" = "string"
"definitions.commits.items.properties.commit.properties.committer.properties.name.type" = "string"
"definitions.commits.items.properties.commit.properties.committer.type" = "object"
"definitions.commits.items.properties.commit.properties.message.type" = "string"
"definitions.commits.items.properties.commit.properties.tree.properties.sha.type" = "string"
"definitions.commits.items.properties.commit.properties.tree.properties.url.type" = "string"
"definitions.commits.items.properties.commit.properties.tree.type" = "object"
"definitions.commits.items.properties.commit.properties.url.type" = "string"
"definitions.commits.items.properties.commit.type" = "object"
"definitions.commits.items.properties.committer.properties.avatar_url.type" = "string"
"definitions.commits.items.properties.committer.properties.gravatar_id.type" = "string"
"definitions.commits.items.properties.committer.properties.id.type" = "integer"
"definitions.commits.items.properties.committer.properties.login.type" = "string"
"definitions.commits.items.properties.committer.properties.url.type" = "string"
"definitions.commits.items.properties.committer.type" = "object"
"definitions.commits.items.properties.parents.items.properties.sha.type" = "string"
"definitions.commits.items.properties.parents.items.properties.url.type" = "string"
"definitions.commits.items.properties.parents.items.type" = "object"
"definitions.commits.items.properties.parents.type" = "array"
"definitions.commits.items.properties.sha.type" = "string"
"definitions.commits.items.properties.url.type" = "string"
"definitions.commits.items.type" = "object"
"definitions.commits.type" = "array"
"definitions.compare-commits.properties.ahead_by.type" = "integer"
"definitions.compare-commits.properties.base_commit.properties.author.properties.avatar_url.type" = "string"
"definitions.compare-commits.properties.base_commit.properties.author.properties.events_url.type" = "string"
"definitions.compare-commits.properties.base_commit.properties.author.properties.followers_url.type" = "string"
"definitions.compare-commits.properties.base_commit.properties.author.properties.following_url.type" = "string"
"definitions.compare-commits.properties.base_commit.properties.author.properties.gists_url.type" = "string"
"definitions.compare-commits.properties.base_commit.properties.author.properties.gravatar_id.type" = "string"
"definitions.compare-commits.properties.base_commit.properties.author.properties.html_url.type" = "string"
"definitions.compare-commits.properties.base_commit.properties.author.properties.id.type" = "integer"
"definitions.compare-commits.properties.base_commit.properties.author.properties.login.type" = "string"
"definitions.compare-commits.properties.base_commit.properties.author.properties.organizations_url.type" = "string"
"definitions.compare-commits.properties.base_commit.properties.author.properties.received_events_url.type" = "string"
"definitions.compare-commits.properties.base_commit.properties.author.properties.repos_url.type" = "string"
"definitions.compare-commits.properties.base_commit.properties.author.properties.site_admin.type" = "boolean"
"definitions.compare-commits.properties.base_commit.properties.author.properties.starred_url.type" = "string"
"definitions.compare-commits.properties.base_commit.properties.author.properties.subscriptions_url.type" = "string"
"definitions.compare-commits.properties.base_commit.properties.author.properties.type.type" = "string"
"definitions.compare-commits.properties.base_commit.properties.author.properties.url.type" = "string"
"definitions.compare-commits.properties.base_commit.properties.author.type" = "object"
"definitions.compare-commits.properties.base_commit.properties.commit.properties.author.properties.date.type" = "string"
"definitions.compare-commits.properties.base_commit.properties.commit.properties.author.properties.email.type" = "string"
"definitions.compare-commits.properties.base_commit.properties.commit.properties.author.properties.name.type" = "string"
"definitions.compare-commits.properties.base_commit.properties.commit.properties.author.type" = "object"
"definitions.compare-commits.properties.base_commit.properties.commit.properties.committer.properties.date.type" = "string"
"definitions.compare-commits.properties.base_commit.properties.commit.properties.committer.properties.email.type" = "string"
"definitions.compare-commits.properties.base_commit.properties.commit.properties.committer.properties.name.type" = "string"
"definitions.compare-commits.properties.base_commit.properties.commit.properties.committer.type" = "object"
"definitions.compare-commits.properties.base_commit.properties.commit.properties.message.type" = "string"
"definitions.compare-commits.properties.base_commit.properties.commit.properties.tree.properties.sha.type" = "string"
"definitions.compare-commits.properties.base_commit.properties.commit.properties.tree.properties.url.type" = "string"
"definitions.compare-commits.properties.base_commit.properties.commit.properties.tree.type" = "object"
"definitions.compare-commits.properties.base_commit.properties.commit.properties.url.type" = "string"
"definitions.compare-commits.properties.base_commit.properties.commit.type" = "object"
"definitions.compare-commits.properties.base_commit.properties.committer.properties.avatar_url.type" = "string"
"definitions.compare-commits.properties.base_commit.properties.committer.properties.events_url.type" = "string"
"definitions.compare-commits.properties.base_commit.properties.committer.properties.followers_url.type" = "string"
"definitions.compare-commits.properties.base_commit.properties.committer.properties.following_url.type" = "string"
"definitions.compare-commits.properties.base_commit.properties.committer.properties.gists_url.type" = "string"
"definitions.compare-commits.properties.base_commit.properties.committer.properties.gravatar_id.type" = "string"
"definitions.compare-commits.properties.base_commit.properties.committer.properties.html_url.type" = "string"
"definitions.compare-commits.properties.base_commit.properties.committer.properties.id.type" = "integer"
"definitions.compare-commits.properties.base_commit.properties.committer.properties.login.type" = "string"
"definitions.compare-commits.properties.base_commit.properties.committer.properties.organizations_url.type" = "string"
"definitions.compare-commits.properties.base_commit.properties.committer.properties.received_events_url.type" = "string"
"definitions.compare-commits.properties.base_commit.properties.committer.properties.repos_url.type" = "string"
"definitions.compare-commits.properties.base_commit.properties.committer.properties.site_admin.type" = "boolean"
"definitions.compare-commits.properties.base_commit.properties.committer.properties.starred_url.type" = "string"
"definitions.compare-commits.properties.base_commit.properties.committer.properties.subscriptions_url.type" = "string"
"definitions.compare-commits.properties.base_commit.properties.committer.properties.type.type" = "string"
"definitions.compare-commits.properties.base_commit.properties.committer.properties.url.type" = "string"
"definitions.compare-commits.properties.base_commit.properties.committer.type" = "object"
"definitions.compare-commits.properties.base_commit.properties.parents.items.properties.sha.type" = "string"
"definitions.compare-commits.properties.base_commit.properties.parents.items.properties.url.type" = "string"
"definitions.compare-commits.properties.base_commit.properties.parents.items.type" = "object"
"definitions.compare-commits.properties.base_commit.properties.parents.type" = "array"
"definitions.compare-commits.properties.base_commit.properties.sha.type" = "string"
"definitions.compare-commits.properties.base_commit.properties.url.type" = "string"
"definitions.compare-commits.properties.base_commit.type" = "object"
"definitions.compare-commits.properties.behind_by.type" = "integer"
"definitions.compare-commits.properties.commits.items.properties.author.properties.avatar_url.type" = "string"
"definitions.compare-commits.properties.commits.items.properties.author.properties.events_url.type" = "string"
"definitions.compare-commits.properties.commits.items.properties.author.properties.followers_url.type" = "string"
"definitions.compare-commits.properties.commits.items.properties.author.properties.following_url.type" = "string"
"definitions.compare-commits.properties.commits.items.properties.author.properties.gists_url.type" = "string"
"definitions.compare-commits.properties.commits.items.properties.author.properties.gravatar_id.type" = "string"
"definitions.compare-commits.properties.commits.items.properties.author.properties.html_url.type" = "string"
"definitions.compare-commits.properties.commits.items.properties.author.properties.id.type" = "integer"
"definitions.compare-commits.properties.commits.items.properties.author.properties.login.type" = "string"
"definitions.compare-commits.properties.commits.items.properties.author.properties.organizations_url.type" = "string"
"definitions.compare-commits.properties.commits.items.properties.author.properties.received_events_url.type" = "string"
"definitions.compare-commits.properties.commits.items.properties.author.properties.repos_url.type" = "string"
"definitions.compare-commits.properties.commits.items.properties.author.properties.site_admin.type" = "boolean"
"definitions.compare-commits.properties.commits.items.properties.author.properties.starred_url.type" = "string"
"definitions.compare-commits.properties.commits.items.properties.author.properties.subscriptions_url.type" = "string"
"definitions.compare-commits.properties.commits.items.properties.author.properties.type.type" = "string"
"definitions.compare-commits.properties.commits.items.properties.author.properties.url.type" = "string"
"definitions.compare-commits.properties.commits.items.properties.author.type" = "object"
"definitions.compare-commits.properties.commits.items.properties.commit.properties.author.properties.date.type" = "string"
"definitions.compare-commits.properties.commits.items.properties.commit.properties.author.properties.email.type" = "string"
"definitions.compare-commits.properties.commits.items.properties.commit.properties.author.properties.name.type" = "string"
"definitions.compare-commits.properties.commits.items.properties.commit.properties.author.type" = "object"
"definitions.compare-commits.properties.commits.items.properties.commit.properties.committer.properties.date.type" = "string"
"definitions.compare-commits.properties.commits.items.properties.commit.properties.committer.properties.email.type" = "string"
"definitions.compare-commits.properties.commits.items.properties.commit.properties.committer.properties.name.type" = "string"
"definitions.compare-commits.properties.commits.items.properties.commit.properties.committer.type" = "object"
"definitions.compare-commits.properties.commits.items.properties.commit.properties.message.type" = "string"
"definitions.compare-commits.properties.commits.items.properties.commit.properties.tree.properties.sha.type" = "string"
"definitions.compare-commits.properties.commits.items.properties.commit.properties.tree.properties.url.type" = "string"
"definitions.compare-commits.properties.commits.items.properties.commit.properties.tree.type" = "object"
"definitions.compare-commits.properties.commits.items.properties.commit.properties.url.type" = "string"
"definitions.compare-commits.properties.commits.items.properties.commit.type" = "object"
"definitions.compare-commits.properties.commits.items.properties.committer.properties.avatar_url.type" = "string"
"definitions.compare-commits.properties.commits.items.properties.committer.properties.events_url.type" = "string"
"definitions.compare-commits.properties.commits.items.properties.committer.properties.followers_url.type" = "string"
"definitions.compare-commits.properties.commits.items.properties.committer.properties.following_url.type" = "string"
"definitions.compare-commits.properties.commits.items.properties.committer.properties.gists_url.type" = "string"
"definitions.compare-commits.properties.commits.items.properties.committer.properties.gravatar_id.type" = "string"
"definitions.compare-commits.properties.commits.items.properties.committer.properties.html_url.type" = "string"
"definitions.compare-commits.properties.commits.items.properties.committer.properties.id.type" = "integer"
"definitions.compare-commits.properties.commits.items.properties.committer.properties.login.type" = "string"
"definitions.compare-commits.properties.commits.items.properties.committer.properties.organizations_url.type" = "string"
"definitions.compare-commits.properties.commits.items.properties.committer.properties.received_events_url.type" = "string"
"definitions.compare-commits.properties.commits.items.properties.committer.properties.repos_url.type" = "string"
"definitions.compare-commits.properties.commits.items.properties.committer.properties.site_admin.type" = "boolean"
"definitions.compare-commits.properties.commits.items.properties.committer.properties.starred_url.type" = "string"
"definitions.compare-commits.properties.commits.items.properties.committer.properties.subscriptions_url.type" = "string"
"definitions.compare-commits.properties.commits.items.properties.committer.properties.type.type" = "string"
"definitions.compare-commits.properties.commits.items.properties.committer.properties.url.type" = "string"
"definitions.compare-commits.properties.commits.items.properties.committer.type" = "object"
"definitions.compare-commits.properties.commits.items.properties.parents.items.properties.sha.type" = "string"
"definitions.compare-commits.properties.commits.items.properties.parents.items.properties.url.type" = "string"
"definitions.compare-commits.properties.commits.items.properties.parents.items.type" = "object"
"definitions.compare-commits.properties.commits.items.properties.parents.type" = "array"
"definitions.compare-commits.properties.commits.items.properties.sha.type" = "string"
"definitions.compare-commits.properties.commits.items.properties.url.type" = "string"
"definitions.compare-commits.properties.commits.items.type" = "object"
"definitions.compare-commits.properties.commits.type" = "array"
"definitions.compare-commits.properties.diff_url.type" = "string"
"definitions.compare-commits.properties.files.items.properties.additions.type" = "integer"
"definitions.compare-commits.properties.files.items.properties.blob_url.type" = "string"
"definitions.compare-commits.properties.files.items.properties.changes.type" = "integer"
"definitions.compare-commits.properties.files.items.properties.contents_url.type" = "string"
"definitions.compare-commits.properties.files.items.properties.deletions.type" = "integer"
"definitions.compare-commits.properties.files.items.properties.filename.type" = "string"
"definitions.compare-commits.properties.files.items.properties.patch.type" = "string"
"definitions.compare-commits.properties.files.items.properties.raw_url.type" = "string"
"definitions.compare-commits.properties.files.items.properties.sha.type" = "string"
"definitions.compare-commits.properties.files.items.properties.status.type" = "string"
"definitions.compare-commits.properties.files.items.type" = "object"
"definitions.compare-commits.properties.files.type" = "array"
"definitions.compare-commits.properties.html_url.type" = "string"
"definitions.compare-commits.properties.patch_url.type" = "string"
"definitions.compare-commits.properties.permalink_url.type" = "string"
"definitions.compare-commits.properties.status.type" = "string"
"definitions.compare-commits.properties.total_commits.type" = "integer"
"definitions.compare-commits.properties.url.type" = "string"
"definitions.compare-commits.type" = "object"
"definitions.contents-path.properties._links.properties.git.type" = "string"
"definitions.contents-path.properties._links.properties.html.type" = "string"
"definitions.contents-path.properties._links.properties.self.type" = "string"
"definitions.contents-path.properties._links.type" = "object"
"definitions.contents-path.properties.content.type" = "string"
"definitions.contents-path.properties.encoding.type" = "string"
"definitions.contents-path.properties.git_url.type" = "string"
"definitions.contents-path.properties.html_url.type" = "string"
"definitions.contents-path.properties.name.type" = "string"
"definitions.contents-path.properties.path.type" = "string"
"definitions.contents-path.properties.sha.type" = "string"
"definitions.contents-path.properties.size.type" = "integer"
"definitions.contents-path.properties.type.type" = "string"
"definitions.contents-path.properties.url.type" = "string"
"definitions.contents-path.type" = "object"
"definitions.contributors.items.properties.avatar_url.type" = "string"
"definitions.contributors.items.properties.contributions.type" = "integer"
"definitions.contributors.items.properties.gravatar_id.type" = "string"
"definitions.contributors.items.properties.id.type" = "integer"
"definitions.contributors.items.properties.login.type" = "string"
"definitions.contributors.items.properties.url.type" = "string"
"definitions.contributors.items.type" = "object"
"definitions.contributors.type" = "array"
"definitions.contributorsStats.items.properties.author.properties.avatar_url.type" = "string"
"definitions.contributorsStats.items.properties.author.properties.gravatar_id.type" = "string"
"definitions.contributorsStats.items.properties.author.properties.id.type" = "integer"
"definitions.contributorsStats.items.properties.author.properties.login.type" = "string"
"definitions.contributorsStats.items.properties.author.properties.url.type" = "string"
"definitions.contributorsStats.items.properties.author.type" = "object"
"definitions.contributorsStats.items.properties.total.description" = "The Total number of commits authored by the contributor."
"definitions.contributorsStats.items.properties.total.type" = "integer"
"definitions.contributorsStats.items.properties.weeks.items.properties.a.description" = "Number of additions."
"definitions.contributorsStats.items.properties.weeks.items.properties.a.type" = "integer"
"definitions.contributorsStats.items.properties.weeks.items.properties.c.description" = "Number of commits."
"definitions.contributorsStats.items.properties.weeks.items.properties.c.type" = "integer"
"definitions.contributorsStats.items.properties.weeks.items.properties.d.description" = "Number of deletions."
"definitions.contributorsStats.items.properties.weeks.items.properties.d.type" = "integer"
"definitions.contributorsStats.items.properties.weeks.items.properties.w.description" = "Start of the week."
"definitions.contributorsStats.items.properties.weeks.items.properties.w.type" = "string"
"definitions.contributorsStats.items.properties.weeks.items.type" = "object"
"definitions.contributorsStats.items.properties.weeks.type" = "array"
"definitions.contributorsStats.items.type" = "object"
"definitions.contributorsStats.type" = "array"
"definitions.createDownload.properties.accesskeyid.type" = "string"
"definitions.createDownload.properties.acl.type" = "string"
"definitions.createDownload.properties.bucket.type" = "string"
"definitions.createDownload.properties.content_type.type" = "string"
"definitions.createDownload.properties.description.type" = "string"
"definitions.createDownload.properties.download_count.type" = "integer"
"definitions.createDownload.properties.expirationdate.description" = "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ"
"definitions.createDownload.properties.expirationdate.type" = "string"
"definitions.createDownload.properties.html_url.type" = "string"
"definitions.createDownload.properties.id.type" = "integer"
"definitions.createDownload.properties.mime_type.type" = "string"
"definitions.createDownload.properties.name.type" = "string"
"definitions.createDownload.properties.path.type" = "string"
"definitions.createDownload.properties.policy.type" = "string"
"definitions.createDownload.properties.prefix.type" = "string"
"definitions.createDownload.properties.redirect.type" = "boolean"
"definitions.createDownload.properties.s3_url.type" = "string"
"definitions.createDownload.properties.signature.type" = "string"
"definitions.createDownload.properties.size.type" = "integer"
"definitions.createDownload.properties.url.type" = "string"
"definitions.createDownload.type" = "object"
"definitions.createFile.properties.commit.properties.author.properties.date.type" = "string"
"definitions.createFile.properties.commit.properties.author.properties.email.type" = "string"
"definitions.createFile.properties.commit.properties.author.properties.name.type" = "string"
"definitions.createFile.properties.commit.properties.author.type" = "object"
"definitions.createFile.properties.commit.properties.committer.properties.date.type" = "string"
"definitions.createFile.properties.commit.properties.committer.properties.email.type" = "string"
"definitions.createFile.properties.commit.properties.committer.properties.name.type" = "string"
"definitions.createFile.properties.commit.properties.committer.type" = "object"
"definitions.createFile.properties.commit.properties.html_url.type" = "string"
"definitions.createFile.properties.commit.properties.message.type" = "string"
"definitions.createFile.properties.commit.properties.parents.items.properties.html_url.type" = "string"
"definitions.createFile.properties.commit.properties.parents.items.properties.sha.type" = "string"
"definitions.createFile.properties.commit.properties.parents.items.properties.url.type" = "string"
"definitions.createFile.properties.commit.properties.parents.items.type" = "object"
"definitions.createFile.properties.commit.properties.parents.type" = "array"
"definitions.createFile.properties.commit.properties.sha.type" = "string"
"definitions.createFile.properties.commit.properties.tree.properties.sha.type" = "string"
"definitions.createFile.properties.commit.properties.tree.properties.url.type" = "string"
"definitions.createFile.properties.commit.properties.tree.type" = "object"
"definitions.createFile.properties.commit.properties.url.type" = "string"
"definitions.createFile.properties.commit.type" = "object"
"definitions.createFile.properties.content.properties._links.properties.git.type" = "string"
"definitions.createFile.properties.content.properties._links.properties.html.type" = "string"
"definitions.createFile.properties.content.properties._links.properties.self.type" = "string"
"definitions.createFile.properties.content.properties._links.type" = "object"
"definitions.createFile.properties.content.properties.git_url.type" = "string"
"definitions.createFile.properties.content.properties.html_url.type" = "string"
"definitions.createFile.properties.content.properties.name.type" = "string"
"definitions.createFile.properties.content.properties.path.type" = "string"
"definitions.createFile.properties.content.properties.sha.type" = "string"
"definitions.createFile.properties.content.properties.size.type" = "integer"
"definitions.createFile.properties.content.properties.type.type" = "string"
"definitions.createFile.properties.content.properties.url.type" = "string"
"definitions.createFile.properties.content.type" = "object"
"definitions.createFile.type" = "object"
"definitions.createFileBody.properties.committer.properties.email.type" = "string"
"definitions.createFileBody.properties.committer.properties.name.type" = "string"
"definitions.createFileBody.properties.committer.type" = "object"
"definitions.createFileBody.properties.content.type" = "string"
"definitions.createFileBody.properties.message.type" = "string"
"definitions.createFileBody.type" = "object"
"definitions.deleteFile.properties.commit.properties.author.properties.date.type" = "string"
"definitions.deleteFile.properties.commit.properties.author.properties.email.type" = "string"
"definitions.deleteFile.properties.commit.properties.author.properties.name.type" = "string"
"definitions.deleteFile.properties.commit.properties.author.type" = "object"
"definitions.deleteFile.properties.commit.properties.committer.properties.date.type" = "string"
"definitions.deleteFile.properties.commit.properties.committer.properties.email.type" = "string"
"definitions.deleteFile.properties.commit.properties.committer.properties.name.type" = "string"
"definitions.deleteFile.properties.commit.properties.html_url.type" = "string"
"definitions.deleteFile.properties.commit.properties.message.type" = "string"
"definitions.deleteFile.properties.commit.properties.parents.properties.html_url.type" = "string"
"definitions.deleteFile.properties.commit.properties.parents.properties.sha.type" = "string"
"definitions.deleteFile.properties.commit.properties.parents.properties.url.type" = "string"
"definitions.deleteFile.properties.commit.properties.parents.type" = "object"
"definitions.deleteFile.properties.commit.properties.sha.type" = "string"
"definitions.deleteFile.properties.commit.properties.tree.properties.sha.type" = "string"
"definitions.deleteFile.properties.commit.properties.tree.properties.url.type" = "string"
"definitions.deleteFile.properties.commit.properties.tree.type" = "object"
"definitions.deleteFile.properties.commit.properties.url.type" = "string"
"definitions.deleteFile.properties.commit.type" = "object"
"definitions.deleteFile.properties.content.type" = "string"
"definitions.deleteFile.type" = "object"
"definitions.deleteFileBody.properties.committer.properties.email.type" = "string"
"definitions.deleteFileBody.properties.committer.properties.name.type" = "string"
"definitions.deleteFileBody.properties.committer.type" = "object"
"definitions.deleteFileBody.properties.message.type" = "string"
"definitions.deleteFileBody.properties.sha.type" = "string"
"definitions.deleteFileBody.type" = "object"
"definitions.deployment-resp.properties.created_at.type" = "string"
"definitions.deployment-resp.properties.creator.properties.avatar_url.type" = "string"
"definitions.deployment-resp.properties.creator.properties.events_url.type" = "string"
"definitions.deployment-resp.properties.creator.properties.followers_url.type" = "string"
"definitions.deployment-resp.properties.creator.properties.following_url.type" = "string"
"definitions.deployment-resp.properties.creator.properties.gists_url.type" = "string"
"definitions.deployment-resp.properties.creator.properties.gravatar_id.type" = "string"
"definitions.deployment-resp.properties.creator.properties.html_url.type" = "string"
"definitions.deployment-resp.properties.creator.properties.id.type" = "integer"
"definitions.deployment-resp.properties.creator.properties.login.type" = "string"
"definitions.deployment-resp.properties.creator.properties.organizations_url.type" = "string"
"definitions.deployment-resp.properties.creator.properties.received_events_url.type" = "string"
"definitions.deployment-resp.properties.creator.properties.repos_url.type" = "string"
"definitions.deployment-resp.properties.creator.properties.site_admin.type" = "boolean"
"definitions.deployment-resp.properties.creator.properties.starred_url.type" = "string"
"definitions.deployment-resp.properties.creator.properties.subscriptions_url.type" = "string"
"definitions.deployment-resp.properties.creator.properties.type.type" = "string"
"definitions.deployment-resp.properties.creator.properties.url.type" = "string"
"definitions.deployment-resp.properties.creator.type" = "object"
"definitions.deployment-resp.properties.description.type" = "string"
"definitions.deployment-resp.properties.id.type" = "integer"
"definitions.deployment-resp.properties.payload.type" = "string"
"definitions.deployment-resp.properties.sha.type" = "string"
"definitions.deployment-resp.properties.statuses_url.type" = "string"
"definitions.deployment-resp.properties.updated_at.type" = "string"
"definitions.deployment-resp.properties.url.type" = "string"
"definitions.deployment-resp.type" = "object"
"definitions.deployment-statuses-create.properties.description.type" = "string"
"definitions.deployment-statuses-create.properties.state.type" = "string"
"definitions.deployment-statuses-create.properties.target_url.type" = "string"
"definitions.deployment-statuses-create.type" = "object"
"definitions.deployment-statuses.items.properties.created_at.type" = "string"
"definitions.deployment-statuses.items.properties.creator.properties.avatar_url.type" = "string"
"definitions.deployment-statuses.items.properties.creator.properties.events_url.type" = "string"
"definitions.deployment-statuses.items.properties.creator.properties.followers_url.type" = "string"
"definitions.deployment-statuses.items.properties.creator.properties.following_url.type" = "string"
"definitions.deployment-statuses.items.properties.creator.properties.gists_url.type" = "string"
"definitions.deployment-statuses.items.properties.creator.properties.gravatar_id.type" = "string"
"definitions.deployment-statuses.items.properties.creator.properties.html_url.type" = "string"
"definitions.deployment-statuses.items.properties.creator.properties.id.type" = "integer"
"definitions.deployment-statuses.items.properties.creator.properties.login.type" = "string"
"definitions.deployment-statuses.items.properties.creator.properties.organizations_url.type" = "string"
"definitions.deployment-statuses.items.properties.creator.properties.received_events_url.type" = "string"
"definitions.deployment-statuses.items.properties.creator.properties.repos_url.type" = "string"
"definitions.deployment-statuses.items.properties.creator.properties.site_admin.type" = "boolean"
"definitions.deployment-statuses.items.properties.creator.properties.starred_url.type" = "string"
"definitions.deployment-statuses.items.properties.creator.properties.subscriptions_url.type" = "string"
"definitions.deployment-statuses.items.properties.creator.properties.type.type" = "string"
"definitions.deployment-statuses.items.properties.creator.properties.url.type" = "string"
"definitions.deployment-statuses.items.properties.creator.type" = "object"
"definitions.deployment-statuses.items.properties.description.type" = "string"
"definitions.deployment-statuses.items.properties.id.type" = "integer"
"definitions.deployment-statuses.items.properties.payload.type" = "string"
"definitions.deployment-statuses.items.properties.state.type" = "string"
"definitions.deployment-statuses.items.properties.target_url.type" = "string"
"definitions.deployment-statuses.items.properties.updated_at.type" = "string"
"definitions.deployment-statuses.items.properties.url.type" = "string"
"definitions.deployment-statuses.items.type" = "object"
"definitions.deployment-statuses.type" = "array"
"definitions.deployment.properties.description.type" = "string"
"definitions.deployment.properties.payload.properties.deploy_user.type" = "string"
"definitions.deployment.properties.payload.properties.environment.type" = "string"
"definitions.deployment.properties.payload.properties.room_id.type" = "number"
"definitions.deployment.properties.payload.type" = "object"
"definitions.deployment.properties.ref.type" = "string"
"definitions.deployment.type" = "object"
"definitions.downloadBody.properties.content_type.type" = "string"
"definitions.downloadBody.properties.description.type" = "string"
"definitions.downloadBody.properties.name.type" = "string"
"definitions.downloadBody.properties.size.description" = "Size of file in bytes."
"definitions.downloadBody.properties.size.type" = "integer"
"definitions.downloadBody.required.length" = 2
"definitions.downloadBody.required[0]" = "name"
"definitions.downloadBody.required[1]" = "size"
"definitions.downloadBody.type" = "object"
"definitions.downloads.properties.content_type.type" = "string"
"definitions.downloads.properties.description.type" = "string"
"definitions.downloads.properties.download_count.type" = "integer"
"definitions.downloads.properties.html_url.type" = "string"
"definitions.downloads.properties.id.type" = "integer"
"definitions.downloads.properties.name.type" = "string"
"definitions.downloads.properties.size.type" = "integer"
"definitions.downloads.properties.url.type" = "string"
"definitions.downloads.type" = "object"
"definitions.editTeam.properties.name.type" = "string"
"definitions.editTeam.properties.permission.enum.length" = 3
"definitions.editTeam.properties.permission.enum[0]" = "pull"
"definitions.editTeam.properties.permission.enum[1]" = "push"
"definitions.editTeam.properties.permission.enum[2]" = "admin"
"definitions.editTeam.required.length" = 1
"definitions.editTeam.required[0]" = "name"
"definitions.editTeam.type" = "object"
"definitions.emailsPost.items.type" = "string"
"definitions.emailsPost.type" = "array"
"definitions.emojis.properties.+1.type" = "string"
"definitions.emojis.properties.-1.type" = "string"
"definitions.emojis.properties.100.type" = "string"
"definitions.emojis.properties.1234.type" = "string"
"definitions.emojis.properties.8ball.type" = "string"
"definitions.emojis.properties.a.type" = "string"
"definitions.emojis.properties.ab.type" = "string"
"definitions.emojis.type" = "object"
"definitions.event.properties.actor.properties.avatar_url.type" = "string"
"definitions.event.properties.actor.properties.gravatar_id.type" = "string"
"definitions.event.properties.actor.properties.id.type" = "integer"
"definitions.event.properties.actor.properties.login.type" = "string"
"definitions.event.properties.actor.properties.url.type" = "string"
"definitions.event.properties.actor.type" = "object"
"definitions.event.properties.commit_id.type" = "string"
"definitions.event.properties.created_at.description" = "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ"
"definitions.event.properties.created_at.type" = "string"
"definitions.event.properties.event.type" = "string"
"definitions.event.properties.issue.properties.assignee.properties.avatar_url.type" = "string"
"definitions.event.properties.issue.properties.assignee.properties.gravatar_id.type" = "string"
"definitions.event.properties.issue.properties.assignee.properties.id.type" = "integer"
"definitions.event.properties.issue.properties.assignee.properties.login.type" = "string"
"definitions.event.properties.issue.properties.assignee.properties.url.type" = "string"
"definitions.event.properties.issue.properties.body.type" = "string"
"definitions.event.properties.issue.properties.closed_at.description" = "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ"
"definitions.event.properties.issue.properties.closed_at.type" = "string"
"definitions.event.properties.issue.properties.comments.type" = "integer"
"definitions.event.properties.issue.properties.created_at.description" = "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ"
"definitions.event.properties.issue.properties.created_at.type" = "string"
"definitions.event.properties.issue.properties.html_url.type" = "string"
"definitions.event.properties.issue.properties.labels.items.properties.color.type" = "string"
"definitions.event.properties.issue.properties.labels.items.properties.name.type" = "string"
"definitions.event.properties.issue.properties.labels.items.properties.url.type" = "string"
"definitions.event.properties.issue.properties.labels.items.type" = "object"
"definitions.event.properties.issue.properties.labels.type" = "array"
"definitions.event.properties.issue.properties.milestone.properties.closed_issues.type" = "integer"
"definitions.event.properties.issue.properties.milestone.properties.created_at.description" = "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ"
"definitions.event.properties.issue.properties.milestone.properties.created_at.type" = "string"
"definitions.event.properties.issue.properties.milestone.properties.creator.properties.avatar_url.type" = "string"
"definitions.event.properties.issue.properties.milestone.properties.creator.properties.gravatar_id.type" = "string"
"definitions.event.properties.issue.properties.milestone.properties.creator.properties.id.type" = "integer"
"definitions.event.properties.issue.properties.milestone.properties.creator.properties.login.type" = "string"
"definitions.event.properties.issue.properties.milestone.properties.creator.properties.url.type" = "string"
"definitions.event.properties.issue.properties.milestone.properties.creator.type" = "object"
"definitions.event.properties.issue.properties.milestone.properties.description.type" = "string"
"definitions.event.properties.issue.properties.milestone.properties.due_on.description" = "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ"
"definitions.event.properties.issue.properties.milestone.properties.due_on.type" = "string"
"definitions.event.properties.issue.properties.milestone.properties.number.type" = "integer"
"definitions.event.properties.issue.properties.milestone.properties.open_issues.type" = "integer"
"definitions.event.properties.issue.properties.milestone.properties.state.enum.length" = 2
"definitions.event.properties.issue.properties.milestone.properties.state.enum[0]" = "open"
"definitions.event.properties.issue.properties.milestone.properties.state.enum[1]" = "closed"
"definitions.event.properties.issue.properties.milestone.properties.title.type" = "string"
"definitions.event.properties.issue.properties.milestone.properties.url.type" = "string"
"definitions.event.properties.issue.properties.milestone.type" = "object"
"definitions.event.properties.issue.properties.number.type" = "integer"
"definitions.event.properties.issue.properties.pull_request.properties.diff_url.type" = "string"
"definitions.event.properties.issue.properties.pull_request.properties.html_url.type" = "string"
"definitions.event.properties.issue.properties.pull_request.properties.patch_url.type" = "string"
"definitions.event.properties.issue.properties.pull_request.type" = "object"
"definitions.event.properties.issue.properties.state.enum.length" = 2
"definitions.event.properties.issue.properties.state.enum[0]" = "open"
"definitions.event.properties.issue.properties.state.enum[1]" = "closed"
"definitions.event.properties.issue.properties.title.type" = "string"
"definitions.event.properties.issue.properties.updated_at.description" = "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ"
"definitions.event.properties.issue.properties.updated_at.type" = "string"
"definitions.event.properties.issue.properties.url.type" = "string"
"definitions.event.properties.issue.properties.user.properties.avatar_url.type" = "string"
"definitions.event.properties.issue.properties.user.properties.gravatar_id.type" = "string"
"definitions.event.properties.issue.properties.user.properties.id.type" = "integer"
"definitions.event.properties.issue.properties.user.properties.login.type" = "string"
"definitions.event.properties.issue.properties.user.properties.url.type" = "string"
"definitions.event.properties.issue.properties.user.type" = "object"
"definitions.event.properties.issue.type" = "object"
"definitions.event.properties.url.type" = "string"
"definitions.event.type" = "object"
"definitions.events.properties.actor.properties.avatar_url.type" = "string"
"definitions.events.properties.actor.properties.gravatar_id.type" = "string"
"definitions.events.properties.actor.properties.id.type" = "integer"
"definitions.events.properties.actor.properties.login.type" = "string"
"definitions.events.properties.actor.properties.url.type" = "string"
"definitions.events.properties.actor.type" = "object"
"definitions.events.properties.created_at.type" = "object"
"definitions.events.properties.id.type" = "integer"
"definitions.events.properties.org.properties.avatar_url.type" = "string"
"definitions.events.properties.org.properties.gravatar_id.type" = "string"
"definitions.events.properties.org.properties.id.type" = "integer"
"definitions.events.properties.org.properties.login.type" = "string"
"definitions.events.properties.org.properties.url.type" = "string"
"definitions.events.properties.org.type" = "object"
"definitions.events.properties.payload.type" = "object"
"definitions.events.properties.public.type" = "boolean"
"definitions.events.properties.repo.properties.id.type" = "integer"
"definitions.events.properties.repo.properties.name.type" = "string"
"definitions.events.properties.repo.properties.url.type" = "string"
"definitions.events.properties.repo.type" = "object"
"definitions.events.properties.type.type" = "string"
"definitions.events.type" = "object"
"definitions.feeds.properties._links.properties.current_user.properties.href.type" = "string"
"definitions.feeds.properties._links.properties.current_user.properties.type.type" = "string"
"definitions.feeds.properties._links.properties.current_user.type" = "object"
"definitions.feeds.properties._links.properties.current_user_actor.properties.href.type" = "string"
"definitions.feeds.properties._links.properties.current_user_actor.properties.type.type" = "string"
"definitions.feeds.properties._links.properties.current_user_actor.type" = "object"
"definitions.feeds.properties._links.properties.current_user_organization.properties.href.type" = "string"
"definitions.feeds.properties._links.properties.current_user_organization.properties.type.type" = "string"
"definitions.feeds.properties._links.properties.current_user_organization.type" = "object"
"definitions.feeds.properties._links.properties.current_user_public.properties.href.type" = "string"
"definitions.feeds.properties._links.properties.current_user_public.properties.type.type" = "string"
"definitions.feeds.properties._links.properties.current_user_public.type" = "object"
"definitions.feeds.properties._links.properties.timeline.properties.href.type" = "string"
"definitions.feeds.properties._links.properties.timeline.properties.type.type" = "string"
"definitions.feeds.properties._links.properties.timeline.type" = "object"
"definitions.feeds.properties._links.properties.user.properties.href.type" = "string"
"definitions.feeds.properties._links.properties.user.properties.type.type" = "string"
"definitions.feeds.properties._links.properties.user.type" = "object"
"definitions.feeds.properties.current_user_actor_url.type" = "string"
"definitions.feeds.properties.current_user_organization_url.type" = "string"
"definitions.feeds.properties.current_user_public.type" = "string"
"definitions.feeds.properties.current_user_url.type" = "string"
"definitions.feeds.properties.timeline_url.type" = "string"
"definitions.feeds.properties.user_url.type" = "string"
"definitions.feeds.type" = "object"
"definitions.fork.properties.clone_url.type" = "string"
"definitions.fork.properties.created_at.description" = "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ"
"definitions.fork.properties.created_at.type" = "string"
"definitions.fork.properties.description.type" = "string"
"definitions.fork.properties.fork.type" = "boolean"
"definitions.fork.properties.forks.type" = "integer"
"definitions.fork.properties.forks_count.type" = "integer"
"definitions.fork.properties.full_name.type" = "string"
"definitions.fork.properties.git_url.type" = "string"
"definitions.fork.properties.homepage.type" = "string"
"definitions.fork.properties.html_url.type" = "string"
"definitions.fork.properties.id.type" = "integer"
"definitions.fork.properties.language.type" = "string"
"definitions.fork.properties.master_branch.type" = "string"
"definitions.fork.properties.mirror_url.type" = "string"
"definitions.fork.properties.name.type" = "string"
"definitions.fork.properties.open_issues.type" = "integer"
"definitions.fork.properties.open_issues_count.type" = "integer"
"definitions.fork.properties.owner.properties.avatar_url.type" = "string"
"definitions.fork.properties.owner.properties.gravatar_id.type" = "string"
"definitions.fork.properties.owner.properties.id.type" = "integer"
"definitions.fork.properties.owner.properties.login.type" = "string"
"definitions.fork.properties.owner.properties.url.type" = "string"
"definitions.fork.properties.owner.type" = "object"
"definitions.fork.properties.private.type" = "boolean"
"definitions.fork.properties.pushed_at.description" = "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ"
"definitions.fork.properties.pushed_at.type" = "string"
"definitions.fork.properties.size.type" = "integer"
"definitions.fork.properties.ssh_url.type" = "string"
"definitions.fork.properties.svn_url.type" = "string"
"definitions.fork.properties.updated_at.description" = "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ"
"definitions.fork.properties.updated_at.type" = "string"
"definitions.fork.properties.url.type" = "string"
"definitions.fork.properties.watchers.type" = "integer"
"definitions.fork.properties.watchers_count.type" = "integer"
"definitions.fork.type" = "object"
"definitions.forkBody.properties.organization.type" = "string"
"definitions.forkBody.type" = "object"
"definitions.forks.items.properties.clone_url.type" = "string"
"definitions.forks.items.properties.created_at.description" = "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ"
"definitions.forks.items.properties.created_at.type" = "string"
"definitions.forks.items.properties.description.type" = "string"
"definitions.forks.items.properties.fork.type" = "boolean"
"definitions.forks.items.properties.forks.type" = "integer"
"definitions.forks.items.properties.forks_count.type" = "integer"
"definitions.forks.items.properties.full_name.type" = "string"
"definitions.forks.items.properties.git_url.type" = "string"
"definitions.forks.items.properties.homepage.type" = "string"
"definitions.forks.items.properties.html_url.type" = "string"
"definitions.forks.items.properties.id.type" = "integer"
"definitions.forks.items.properties.language.type" = "string"
"definitions.forks.items.properties.master_branch.type" = "string"
"definitions.forks.items.properties.mirror_url.type" = "string"
"definitions.forks.items.properties.name.type" = "string"
"definitions.forks.items.properties.open_issues.type" = "integer"
"definitions.forks.items.properties.open_issues_count.type" = "integer"
"definitions.forks.items.properties.owner.properties.avatar_url.type" = "string"
"definitions.forks.items.properties.owner.properties.gravatar_id.type" = "string"
"definitions.forks.items.properties.owner.properties.id.type" = "integer"
"definitions.forks.items.properties.owner.properties.login.type" = "string"
"definitions.forks.items.properties.owner.properties.url.type" = "string"
"definitions.forks.items.properties.owner.type" = "object"
"definitions.forks.items.properties.private.type" = "boolean"
"definitions.forks.items.properties.pushed_at.description" = "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ"
"definitions.forks.items.properties.pushed_at.type" = "string"
"definitions.forks.items.properties.size.type" = "integer"
"definitions.forks.items.properties.ssh_url.type" = "string"
"definitions.forks.items.properties.svn_url.type" = "string"
"definitions.forks.items.properties.updated_at.description" = "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ"
"definitions.forks.items.properties.updated_at.type" = "string"
"definitions.forks.items.properties.url.type" = "string"
"definitions.forks.items.properties.watchers.type" = "integer"
"definitions.forks.items.properties.watchers_count.type" = "integer"
"definitions.forks.items.type" = "object"
"definitions.forks.type" = "array"
"definitions.gist.properties.comments.type" = "integer"
"definitions.gist.properties.comments_url.type" = "string"
"definitions.gist.properties.created_at.description" = "Timestamp in ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ."
"definitions.gist.properties.created_at.type" = "string"
"definitions.gist.properties.description.type" = "string"
"definitions.gist.properties.files.properties.ring.erl.properties.filename.type" = "string"
"definitions.gist.properties.files.properties.ring.erl.properties.raw_url.type" = "string"
"definitions.gist.properties.files.properties.ring.erl.properties.size.type" = "integer"
"definitions.gist.properties.files.properties.ring.erl.type" = "object"
"definitions.gist.properties.files.type" = "object"
"definitions.gist.properties.forks.items.properties.created_at.description" = "Timestamp in ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ."
"definitions.gist.properties.forks.items.properties.created_at.type" = "string"
"definitions.gist.properties.forks.items.properties.url.type" = "string"
"definitions.gist.properties.forks.items.properties.user.properties.avatar_url.type" = "string"
"definitions.gist.properties.forks.items.properties.user.properties.gravatar_id.type" = "string"
"definitions.gist.properties.forks.items.properties.user.properties.id.type" = "integer"
"definitions.gist.properties.forks.items.properties.user.properties.login.type" = "string"
"definitions.gist.properties.forks.items.properties.user.properties.url.type" = "string"
"definitions.gist.properties.forks.items.properties.user.type" = "object"
"definitions.gist.properties.forks.items.type" = "object"
"definitions.gist.properties.forks.type" = "array"
"definitions.gist.properties.git_pull_url.type" = "string"
"definitions.gist.properties.git_push_url.type" = "string"
"definitions.gist.properties.history.items.properties.change_status.properties.additions.type" = "integer"
"definitions.gist.properties.history.items.properties.change_status.properties.deletions.type" = "integer"
"definitions.gist.properties.history.items.properties.change_status.properties.total.type" = "integer"
"definitions.gist.properties.history.items.properties.change_status.type" = "object"
"definitions.gist.properties.history.items.properties.committed_at.description" = "Timestamp in ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ."
"definitions.gist.properties.history.items.properties.committed_at.type" = "string"
"definitions.gist.properties.history.items.properties.url.type" = "string"
"definitions.gist.properties.history.items.properties.user.properties.avatar_url.type" = "string"
"definitions.gist.properties.history.items.properties.user.properties.gravatar_id.type" = "string"
"definitions.gist.properties.history.items.properties.user.properties.id.type" = "integer"
"definitions.gist.properties.history.items.properties.user.properties.login.type" = "string"
"definitions.gist.properties.history.items.properties.user.properties.url.type" = "string"
"definitions.gist.properties.history.items.properties.user.type" = "object"
"definitions.gist.properties.history.items.properties.version.type" = "string"
"definitions.gist.properties.history.items.type" = "object"
"definitions.gist.properties.history.type" = "array"
"definitions.gist.properties.html_url.type" = "string"
"definitions.gist.properties.id.type" = "string"
"definitions.gist.properties.public.type" = "boolean"
"definitions.gist.properties.url.type" = "string"
"definitions.gist.properties.user.properties.avatar_url.type" = "string"
"definitions.gist.properties.user.properties.gravatar_id.type" = "string"
"definitions.gist.properties.user.properties.id.type" = "integer"
"definitions.gist.properties.user.properties.login.type" = "string"
"definitions.gist.properties.user.properties.url.type" = "string"
"definitions.gist.properties.user.type" = "object"
"definitions.gist.type" = "object"
"definitions.gists.items.properties.comments.type" = "integer"
"definitions.gists.items.properties.comments_url.type" = "string"
"definitions.gists.items.properties.created_at.type" = "string"
"definitions.gists.items.properties.description.type" = "string"
"definitions.gists.items.properties.files.properties.ring.erl.properties.filename.type" = "string"
"definitions.gists.items.properties.files.properties.ring.erl.properties.raw_url.type" = "string"
"definitions.gists.items.properties.files.properties.ring.erl.properties.size.type" = "integer"
"definitions.gists.items.properties.files.properties.ring.erl.type" = "object"
"definitions.gists.items.properties.files.type" = "object"
"definitions.gists.items.properties.git_pull_url.type" = "string"
"definitions.gists.items.properties.git_push_url.type" = "string"
"definitions.gists.items.properties.html_url.type" = "string"
"definitions.gists.items.properties.id.type" = "string"
"definitions.gists.items.properties.public.type" = "boolean"
"definitions.gists.items.properties.url.type" = "string"
"definitions.gists.items.properties.user.properties.avatar_url.type" = "string"
"definitions.gists.items.properties.user.properties.gravatar_id.type" = "string"
"definitions.gists.items.properties.user.properties.id.type" = "integer"
"definitions.gists.items.properties.user.properties.login.type" = "string"
"definitions.gists.items.properties.user.properties.url.type" = "string"
"definitions.gists.items.properties.user.type" = "object"
"definitions.gists.items.type" = "object"
"definitions.gists.type" = "array"
"definitions.gitCommit.properties.author.properties.date.type" = "string"
"definitions.gitCommit.properties.author.properties.email.type" = "string"
"definitions.gitCommit.properties.author.properties.name.type" = "string"
"definitions.gitCommit.properties.author.type" = "object"
"definitions.gitCommit.properties.message.type" = "string"
"definitions.gitCommit.properties.parents.type" = "string"
"definitions.gitCommit.properties.tree.type" = "string"
"definitions.gitCommit.type" = "object"
"definitions.gitRefPatch.properties.force.type" = "boolean"
"definitions.gitRefPatch.properties.sha.type" = "string"
"definitions.gitRefPatch.type" = "object"
"definitions.gitignore-lang.properties.name.type" = "string"
"definitions.gitignore-lang.properties.source.type" = "string"
"definitions.gitignore-lang.type" = "object"
"definitions.gitignore.type" = "array"
"definitions.headBranch.properties.object.properties.sha.type" = "string"
"definitions.headBranch.properties.object.properties.type.type" = "string"
"definitions.headBranch.properties.object.properties.url.type" = "string"
"definitions.headBranch.properties.object.type" = "object"
"definitions.headBranch.properties.ref.type" = "string"
"definitions.headBranch.properties.url.type" = "string"
"definitions.headBranch.type" = "object"
"definitions.headBranchBody.properties.force.description" = "Boolean indicating whether to force the update or to make sure the update is a fast-forward update. The default is false, so leaving this out or setting it to false will make sure you’re not overwriting work."
"definitions.headBranchBody.properties.force.type" = "boolean"
"definitions.headBranchBody.properties.sha.description" = "String of the SHA1 value to set this reference to."
"definitions.headBranchBody.properties.sha.type" = "string"
"definitions.headBranchBody.required.length" = 2
"definitions.headBranchBody.required[0]" = "sha"
"definitions.headBranchBody.required[1]" = "force"
"definitions.headBranchBody.type" = "object"
"definitions.heads.items.properties.commit.properties.sha.type" = "string"
"definitions.heads.items.properties.commit.properties.url.type" = "string"
"definitions.heads.items.properties.commit.type" = "object"
"definitions.heads.items.properties.name.type" = "string"
"definitions.heads.items.properties.tarball_url.type" = "string"
"definitions.heads.items.properties.zipball_url.type" = "string"
"definitions.heads.items.type" = "object"
"definitions.heads.type" = "array"
"definitions.hook.items.properties.active.type" = "boolean"
"definitions.hook.items.properties.config.properties.content_type.type" = "string"
"definitions.hook.items.properties.config.properties.url.type" = "string"
"definitions.hook.items.properties.config.type" = "object"
"definitions.hook.items.properties.created_at.description" = "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ"
"definitions.hook.items.properties.created_at.type" = "string"
"definitions.hook.items.properties.events.items.enum.length" = 15
"definitions.hook.items.properties.events.items.enum[0]" = "push"
"definitions.hook.items.properties.events.items.enum[10]" = "fork_apply"
"definitions.hook.items.properties.events.items.enum[11]" = "member"
"definitions.hook.items.properties.events.items.enum[12]" = "public"
"definitions.hook.items.properties.events.items.enum[13]" = "team_add"
"definitions.hook.items.properties.events.items.enum[14]" = "status"
"definitions.hook.items.properties.events.items.enum[1]" = "issues"
"definitions.hook.items.properties.events.items.enum[2]" = "issue_comment"
"definitions.hook.items.properties.events.items.enum[3]" = "commit_comment"
"definitions.hook.items.properties.events.items.enum[4]" = "pull_request"
"definitions.hook.items.properties.events.items.enum[5]" = "pull_request_review_comment"
"definitions.hook.items.properties.events.items.enum[6]" = "gollum"
"definitions.hook.items.properties.events.items.enum[7]" = "watch"
"definitions.hook.items.properties.events.items.enum[8]" = "download"
"definitions.hook.items.properties.events.items.enum[9]" = "fork"
"definitions.hook.items.properties.events.type" = "array"
"definitions.hook.items.properties.id.type" = "integer"
"definitions.hook.items.properties.name.type" = "string"
"definitions.hook.items.properties.updated_at.description" = "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ"
"definitions.hook.items.properties.updated_at.type" = "string"
"definitions.hook.items.properties.url.type" = "string"
"definitions.hook.items.type" = "object"
"definitions.hook.type" = "array"
"definitions.hookBody.properties.active.type" = "boolean"
"definitions.hookBody.properties.add_events.items.type" = "string"
"definitions.hookBody.properties.add_events.type" = "array"
"definitions.hookBody.type" = "object"
"definitions.issue.properties.assignee.type" = "string"
"definitions.issue.properties.body.type" = "string"
"definitions.issue.properties.labels.items.type" = "string"
"definitions.issue.properties.labels.type" = "array"
"definitions.issue.properties.milestone.type" = "number"
"definitions.issue.properties.title.type" = "string"
"definitions.issue.type" = "object"
"definitions.issueBody.properties.assignee.type" = "string"
"definitions.issueBody.properties.body.type" = "string"
"definitions.issueBody.properties.labels.items.type" = "string"
"definitions.issueBody.properties.labels.type" = "array"
"definitions.issueBody.properties.milestone.type" = "number"
"definitions.issueBody.properties.title.type" = "string"
"definitions.issueBody.type" = "object"
"definitions.issues.items.properties.assignee.properties.avatar_url.type" = "string"
"definitions.issues.items.properties.assignee.properties.gravatar_id.type" = "string"
"definitions.issues.items.properties.assignee.properties.id.type" = "integer"
"definitions.issues.items.properties.assignee.properties.login.type" = "string"
"definitions.issues.items.properties.assignee.properties.url.type" = "string"
"definitions.issues.items.properties.assignee.type" = "object"
"definitions.issues.items.properties.body.type" = "string"
"definitions.issues.items.properties.closed_at.description" = "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ"
"definitions.issues.items.properties.closed_at.type" = "string"
"definitions.issues.items.properties.comments.type" = "integer"
"definitions.issues.items.properties.created_at.description" = "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ"
"definitions.issues.items.properties.created_at.type" = "string"
"definitions.issues.items.properties.html_url.type" = "string"
"definitions.issues.items.properties.labels.items.properties.color.type" = "string"
"definitions.issues.items.properties.labels.items.properties.name.type" = "string"
"definitions.issues.items.properties.labels.items.properties.url.type" = "string"
"definitions.issues.items.properties.labels.items.type" = "object"
"definitions.issues.items.properties.labels.type" = "array"
"definitions.issues.items.properties.milestone.properties.closed_issues.type" = "integer"
"definitions.issues.items.properties.milestone.properties.created_at.description" = "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ"
"definitions.issues.items.properties.milestone.properties.created_at.type" = "string"
"definitions.issues.items.properties.milestone.properties.creator.properties.avatar_url.type" = "string"
"definitions.issues.items.properties.milestone.properties.creator.properties.gravatar_id.type" = "string"
"definitions.issues.items.properties.milestone.properties.creator.properties.id.type" = "integer"
"definitions.issues.items.properties.milestone.properties.creator.properties.login.type" = "string"
"definitions.issues.items.properties.milestone.properties.creator.properties.url.type" = "string"
"definitions.issues.items.properties.milestone.properties.creator.type" = "object"
"definitions.issues.items.properties.milestone.properties.description.type" = "string"
"definitions.issues.items.properties.milestone.properties.due_on.description" = "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ"
"definitions.issues.items.properties.milestone.properties.due_on.type" = "string"
"definitions.issues.items.properties.milestone.properties.number.type" = "integer"
"definitions.issues.items.properties.milestone.properties.open_issues.type" = "integer"
"definitions.issues.items.properties.milestone.properties.state.enum.length" = 2
"definitions.issues.items.properties.milestone.properties.state.enum[0]" = "open"
"definitions.issues.items.properties.milestone.properties.state.enum[1]" = "closed"
"definitions.issues.items.properties.milestone.properties.title.type" = "string"
"definitions.issues.items.properties.milestone.properties.url.type" = "string"
"definitions.issues.items.properties.milestone.type" = "object"
"definitions.issues.items.properties.number.type" = "integer"
"definitions.issues.items.properties.pull_request.properties.diff_url.type" = "string"
"definitions.issues.items.properties.pull_request.properties.html_url.type" = "string"
"definitions.issues.items.properties.pull_request.properties.patch_url.type" = "string"
"definitions.issues.items.properties.pull_request.type" = "object"
"definitions.issues.items.properties.state.enum.length" = 2
"definitions.issues.items.properties.state.enum[0]" = "open"
"definitions.issues.items.properties.state.enum[1]" = "closed"
"definitions.issues.items.properties.title.type" = "string"
"definitions.issues.items.properties.updated_at.description" = "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ"
"definitions.issues.items.properties.updated_at.type" = "string"
"definitions.issues.items.properties.url.type" = "string"
"definitions.issues.items.properties.user.properties.avatar_url.type" = "string"
"definitions.issues.items.properties.user.properties.gravatar_id.type" = "string"
"definitions.issues.items.properties.user.properties.id.type" = "integer"
"definitions.issues.items.properties.user.properties.login.type" = "string"
"definitions.issues.items.properties.user.properties.url.type" = "string"
"definitions.issues.items.properties.user.type" = "object"
"definitions.issues.items.type" = "object"
"definitions.issues.type" = "array"
"definitions.issuesComment.properties.body.type" = "string"
"definitions.issuesComment.properties.created_at.description" = "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ"
"definitions.issuesComment.properties.created_at.type" = "string"
"definitions.issuesComment.properties.html_url.type" = "string"
"definitions.issuesComment.properties.id.type" = "integer"
"definitions.issuesComment.properties.updated_at.description" = "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ"
"definitions.issuesComment.properties.updated_at.type" = "string"
"definitions.issuesComment.properties.url.type" = "string"
"definitions.issuesComment.properties.user.properties.avatar_url.type" = "string"
"definitions.issuesComment.properties.user.properties.gravatar_id.type" = "string"
"definitions.issuesComment.properties.user.properties.id.type" = "integer"
"definitions.issuesComment.properties.user.properties.login.type" = "string"
"definitions.issuesComment.properties.user.properties.url.type" = "string"
"definitions.issuesComment.properties.user.type" = "object"
"definitions.issuesComment.type" = "object"
"definitions.issuesComments.items.properties._links.properties.html.properties.href.type" = "string"
"definitions.issuesComments.items.properties._links.properties.html.type" = "object"
"definitions.issuesComments.items.properties._links.properties.pull_request.properties.href.type" = "string"
"definitions.issuesComments.items.properties._links.properties.pull_request.type" = "object"
"definitions.issuesComments.items.properties._links.properties.self.properties.href.type" = "string"
"definitions.issuesComments.items.properties._links.properties.self.type" = "object"
"definitions.issuesComments.items.properties._links.type" = "object"
"definitions.issuesComments.items.properties.body.type" = "string"
"definitions.issuesComments.items.properties.commit_id.type" = "string"
"definitions.issuesComments.items.properties.created_at.description" = "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ"
"definitions.issuesComments.items.properties.created_at.type" = "string"
"definitions.issuesComments.items.properties.id.type" = "integer"
"definitions.issuesComments.items.properties.path.type" = "string"
"definitions.issuesComments.items.properties.position.type" = "integer"
"definitions.issuesComments.items.properties.updated_at.description" = "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ"
"definitions.issuesComments.items.properties.updated_at.type" = "string"
"definitions.issuesComments.items.properties.url.type" = "string"
"definitions.issuesComments.items.properties.user.properties.avatar_url.type" = "string"
"definitions.issuesComments.items.properties.user.properties.gravatar_id.type" = "string"
"definitions.issuesComments.items.properties.user.properties.id.type" = "integer"
"definitions.issuesComments.items.properties.user.properties.login.type" = "string"
"definitions.issuesComments.items.properties.user.properties.url.type" = "string"
"definitions.issuesComments.items.properties.user.type" = "object"
"definitions.issuesComments.items.type" = "object"
"definitions.issuesComments.type" = "array"
"definitions.key.properties.id.type" = "integer"
"definitions.key.properties.key.type" = "string"
"definitions.key.properties.title.type" = "string"
"definitions.key.properties.url.type" = "string"
"definitions.key.type" = "object"
"definitions.keyBody.properties.key.type" = "string"
"definitions.keyBody.properties.title.type" = "string"
"definitions.keyBody.type" = "object"
"definitions.keys.items.properties.id.type" = "integer"
"definitions.keys.items.properties.key.type" = "string"
"definitions.keys.items.properties.title.type" = "string"
"definitions.keys.items.properties.url.type" = "string"
"definitions.keys.items.type" = "object"
"definitions.keys.type" = "array"
"definitions.label.properties.color.maxLength" = 6.0
"definitions.label.properties.color.minLength" = 6.0
"definitions.label.properties.color.type" = "string"
"definitions.label.properties.name.type" = "string"
"definitions.label.properties.url.type" = "string"
"definitions.label.type" = "object"
"definitions.labels.items.properties.color.maxLength" = 6.0
"definitions.labels.items.properties.color.minLength" = 6.0
"definitions.labels.items.properties.color.type" = "string"
"definitions.labels.items.properties.name.type" = "string"
"definitions.labels.items.properties.url.type" = "string"
"definitions.labels.items.type" = "object"
"definitions.labels.type" = "array"
"definitions.labelsBody.items.type" = "string"
"definitions.labelsBody.type" = "array"
"definitions.languages.additionalProperties.type" = "integer"
"definitions.languages.type" = "object"
"definitions.markdown.properties.context.type" = "string"
"definitions.markdown.properties.mode.type" = "string"
"definitions.markdown.properties.text.type" = "string"
"definitions.markdown.type" = "object"
"definitions.members.items.properties.avatar_url.type" = "string"
"definitions.members.items.properties.gravatar_id.type" = "string"
"definitions.members.items.properties.id.type" = "integer"
"definitions.members.items.properties.login.type" = "string"
"definitions.members.items.properties.url.type" = "string"
"definitions.members.items.type" = "object"
"definitions.members.type" = "array"
"definitions.merge.properties.merged.type" = "boolean"
"definitions.merge.properties.message.type" = "string"
"definitions.merge.properties.sha.type" = "string"
"definitions.merge.type" = "object"
"definitions.mergePullBody.properties.commit_message.type" = "string"
"definitions.mergePullBody.type" = "object"
"definitions.mergesBody.properties.base.type" = "string"
"definitions.mergesBody.properties.commit_message.type" = "string"
"definitions.mergesBody.properties.head.type" = "string"
"definitions.mergesBody.type" = "object"
"definitions.mergesConflict.properties.message.description" = "Error message"
"definitions.mergesConflict.properties.message.type" = "string"
"definitions.mergesConflict.type" = "object"
"definitions.mergesSuccessful.properties.author.properties.avatar_url.type" = "string"
"definitions.mergesSuccessful.properties.author.properties.events_url.type" = "string"
"definitions.mergesSuccessful.properties.author.properties.followers_url.type" = "string"
"definitions.mergesSuccessful.properties.author.properties.following_url.type" = "string"
"definitions.mergesSuccessful.properties.author.properties.gists_url.type" = "string"
"definitions.mergesSuccessful.properties.author.properties.gravatar_id.type" = "string"
"definitions.mergesSuccessful.properties.author.properties.html_url.type" = "string"
"definitions.mergesSuccessful.properties.author.properties.id.type" = "integer"
"definitions.mergesSuccessful.properties.author.properties.login.type" = "string"
"definitions.mergesSuccessful.properties.author.properties.organizations_url.type" = "string"
"definitions.mergesSuccessful.properties.author.properties.received_events_url.type" = "string"
"definitions.mergesSuccessful.properties.author.properties.repos_url.type" = "string"
"definitions.mergesSuccessful.properties.author.properties.starred_url.type" = "string"
"definitions.mergesSuccessful.properties.author.properties.subscriptions_url.type" = "string"
"definitions.mergesSuccessful.properties.author.properties.type.type" = "string"
"definitions.mergesSuccessful.properties.author.properties.url.type" = "string"
"definitions.mergesSuccessful.properties.author.type" = "object"
"definitions.mergesSuccessful.properties.comments_url.type" = "string"
"definitions.mergesSuccessful.properties.commit.properties.author.properties.date.type" = "string"
"definitions.mergesSuccessful.properties.commit.properties.author.properties.email.type" = "string"
"definitions.mergesSuccessful.properties.commit.properties.author.properties.name.type" = "string"
"definitions.mergesSuccessful.properties.commit.properties.author.type" = "object"
"definitions.mergesSuccessful.properties.commit.properties.comment_count.type" = "integer"
"definitions.mergesSuccessful.properties.commit.properties.committer.properties.date.type" = "string"
"definitions.mergesSuccessful.properties.commit.properties.committer.properties.email.type" = "string"
"definitions.mergesSuccessful.properties.commit.properties.committer.properties.name.type" = "string"
"definitions.mergesSuccessful.properties.commit.properties.committer.type" = "object"
"definitions.mergesSuccessful.properties.commit.properties.message.type" = "string"
"definitions.mergesSuccessful.properties.commit.properties.tree.properties.sha.type" = "string"
"definitions.mergesSuccessful.properties.commit.properties.tree.properties.url.type" = "string"
"definitions.mergesSuccessful.properties.commit.properties.tree.type" = "object"
"definitions.mergesSuccessful.properties.commit.properties.url.type" = "string"
"definitions.mergesSuccessful.properties.commit.type" = "object"
"definitions.mergesSuccessful.properties.committer.properties.avatar_url.type" = "string"
"definitions.mergesSuccessful.properties.committer.properties.events_url.type" = "string"
"definitions.mergesSuccessful.properties.committer.properties.followers_url.type" = "string"
"definitions.mergesSuccessful.properties.committer.properties.following_url.type" = "string"
"definitions.mergesSuccessful.properties.committer.properties.gists_url.type" = "string"
"definitions.mergesSuccessful.properties.committer.properties.gravatar_id.type" = "string"
"definitions.mergesSuccessful.properties.committer.properties.html_url.type" = "string"
"definitions.mergesSuccessful.properties.committer.properties.id.type" = "integer"
"definitions.mergesSuccessful.properties.committer.properties.login.type" = "string"
"definitions.mergesSuccessful.properties.committer.properties.organizations_url.type" = "string"
"definitions.mergesSuccessful.properties.committer.properties.received_events_url.type" = "string"
"definitions.mergesSuccessful.properties.committer.properties.repos_url.type" = "string"
"definitions.mergesSuccessful.properties.committer.properties.starred_url.type" = "string"
"definitions.mergesSuccessful.properties.committer.properties.subscriptions_url.type" = "string"
"definitions.mergesSuccessful.properties.committer.properties.type.type" = "string"
"definitions.mergesSuccessful.properties.committer.properties.url.type" = "string"
"definitions.mergesSuccessful.properties.committer.type" = "object"
"definitions.mergesSuccessful.properties.merged.type" = "boolean"
"definitions.mergesSuccessful.properties.message.type" = "string"
"definitions.mergesSuccessful.properties.parents.items.properties.sha.type" = "string"
"definitions.mergesSuccessful.properties.parents.items.properties.url.type" = "string"
"definitions.mergesSuccessful.properties.parents.items.type" = "object"
"definitions.mergesSuccessful.properties.parents.type" = "array"
"definitions.mergesSuccessful.properties.sha.type" = "string"
"definitions.mergesSuccessful.properties.url.type" = "string"
"definitions.mergesSuccessful.type" = "object"
"definitions.meta.properties.git.items.description" = "An Array of IP addresses in CIDR format specifying the Git servers at GitHub."
"definitions.meta.properties.git.items.type" = "string"
"definitions.meta.properties.git.type" = "array"
"definitions.meta.properties.hooks.items.description" = "An Array of IP addresses in CIDR format specifying the addresses that incoming service hooks will originate from."
"definitions.meta.properties.hooks.items.type" = "string"
"definitions.meta.properties.hooks.type" = "array"
"definitions.meta.type" = "object"
"definitions.milestone.properties.closed_issues.type" = "integer"
"definitions.milestone.properties.created_at.description" = "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ"
"definitions.milestone.properties.created_at.type" = "string"
"definitions.milestone.properties.creator.properties.avatar_url.type" = "string"
"definitions.milestone.properties.creator.properties.gravatar_id.type" = "string"
"definitions.milestone.properties.creator.properties.id.type" = "integer"
"definitions.milestone.properties.creator.properties.login.type" = "string"
"definitions.milestone.properties.creator.properties.url.type" = "string"
"definitions.milestone.properties.creator.type" = "object"
"definitions.milestone.properties.description.type" = "string"
"definitions.milestone.properties.due_on.description" = "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ"
"definitions.milestone.properties.due_on.type" = "string"
"definitions.milestone.properties.number.type" = "integer"
"definitions.milestone.properties.open_issues.type" = "integer"
"definitions.milestone.properties.state.enum.length" = 2
"definitions.milestone.properties.state.enum[0]" = "open"
"definitions.milestone.properties.state.enum[1]" = "closed"
"definitions.milestone.properties.title.type" = "string"
"definitions.milestone.properties.url.type" = "string"
"definitions.milestone.type" = "object"
"definitions.milestoneBody.properties.description.type" = "string"
"definitions.milestoneBody.properties.due_on.type" = "string"
"definitions.milestoneBody.properties.state.type" = "string"
"definitions.milestoneBody.properties.title.type" = "string"
"definitions.milestoneBody.type" = "object"
"definitions.milestoneUpdate.properties.description.type" = "string"
"definitions.milestoneUpdate.properties.due_on.type" = "string"
"definitions.milestoneUpdate.properties.state.type" = "string"
"definitions.milestoneUpdate.properties.title.type" = "string"
"definitions.milestoneUpdate.type" = "object"
"definitions.notificationMarkRead.properties.last_read_at.type" = "string"
"definitions.notificationMarkRead.type" = "object"
"definitions.notifications.properties.id.type" = "integer"
"definitions.notifications.properties.last_read_at.type" = "string"
"definitions.notifications.properties.reason.type" = "string"
"definitions.notifications.properties.repository.properties.description.type" = "string"
"definitions.notifications.properties.repository.properties.fork.type" = "boolean"
"definitions.notifications.properties.repository.properties.full_name.type" = "string"
"definitions.notifications.properties.repository.properties.html_url.type" = "string"
"definitions.notifications.properties.repository.properties.id.type" = "integer"
"definitions.notifications.properties.repository.properties.name.type" = "string"
"definitions.notifications.properties.repository.properties.owner.properties.avatar_url.type" = "string"
"definitions.notifications.properties.repository.properties.owner.properties.gravatar_id.type" = "string"
"definitions.notifications.properties.repository.properties.owner.properties.id.type" = "integer"
"definitions.notifications.properties.repository.properties.owner.properties.login.type" = "string"
"definitions.notifications.properties.repository.properties.owner.properties.url.type" = "string"
"definitions.notifications.properties.repository.properties.owner.type" = "object"
"definitions.notifications.properties.repository.properties.private.type" = "boolean"
"definitions.notifications.properties.repository.properties.url.type" = "string"
"definitions.notifications.properties.repository.type" = "object"
"definitions.notifications.properties.subject.properties.latest_comment_url.type" = "string"
"definitions.notifications.properties.subject.properties.title.type" = "string"
"definitions.notifications.properties.subject.properties.type.type" = "string"
"definitions.notifications.properties.subject.properties.url.type" = "string"
"definitions.notifications.properties.subject.type" = "object"
"definitions.notifications.properties.unread.type" = "boolean"
"definitions.notifications.properties.updated_at.type" = "string"
"definitions.notifications.properties.url.type" = "string"
"definitions.notifications.type" = "object"
"definitions.orgMembers.items.properties.avatar_url.type" = "string"
"definitions.orgMembers.items.properties.gravatar_id.type" = "string"
"definitions.orgMembers.items.properties.id.type" = "integer"
"definitions.orgMembers.items.properties.login.type" = "string"
"definitions.orgMembers.items.properties.url.type" = "string"
"definitions.orgMembers.items.type" = "object"
"definitions.orgMembers.type" = "array"
"definitions.orgPublicMembers.items.properties.avatar_url.type" = "string"
"definitions.orgPublicMembers.items.properties.gravatar_id.type" = "string"
"definitions.orgPublicMembers.items.properties.id.type" = "integer"
"definitions.orgPublicMembers.items.properties.login.type" = "string"
"definitions.orgPublicMembers.items.properties.url.type" = "string"
"definitions.orgPublicMembers.items.type" = "object"
"definitions.orgPublicMembers.type" = "array"
"definitions.orgTeams.items.properties.id.type" = "integer"
"definitions.orgTeams.items.properties.name.type" = "string"
"definitions.orgTeams.items.properties.url.type" = "string"
"definitions.orgTeams.items.type" = "object"
"definitions.orgTeams.type" = "array"
"definitions.orgTeamsPost.properties.name.type" = "string"
"definitions.orgTeamsPost.properties.permission.enum.length" = 3
"definitions.orgTeamsPost.properties.permission.enum[0]" = "pull"
"definitions.orgTeamsPost.properties.permission.enum[1]" = "push"
"definitions.orgTeamsPost.properties.permission.enum[2]" = "admin"
"definitions.orgTeamsPost.properties.repo_names.items.type" = "string"
"definitions.orgTeamsPost.properties.repo_names.type" = "array"
"definitions.orgTeamsPost.required.length" = 1
"definitions.orgTeamsPost.required[0]" = "name"
"definitions.orgTeamsPost.type" = "object"
"definitions.organization.properties.avatar_url.type" = "string"
"definitions.organization.properties.blog.type" = "string"
"definitions.organization.properties.company.type" = "string"
"definitions.organization.properties.created_at.description" = "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ"
"definitions.organization.properties.created_at.type" = "string"
"definitions.organization.properties.email.type" = "string"
"definitions.organization.properties.followers.type" = "integer"
"definitions.organization.properties.following.type" = "integer"
"definitions.organization.properties.html_url.type" = "string"
"definitions.organization.properties.id.type" = "integer"
"definitions.organization.properties.location.type" = "string"
"definitions.organization.properties.login.type" = "string"
"definitions.organization.properties.name.type" = "string"
"definitions.organization.properties.public_gists.type" = "integer"
"definitions.organization.properties.public_repos.type" = "integer"
"definitions.organization.properties.type.type" = "string"
"definitions.organization.properties.url.type" = "string"
"definitions.organization.type" = "object"
"definitions.organizationAsTeamMember.properties.errors.items.properties.code.type" = "string"
"definitions.organizationAsTeamMember.properties.errors.items.properties.field.type" = "string"
"definitions.organizationAsTeamMember.properties.errors.items.properties.resource.type" = "string"
"definitions.organizationAsTeamMember.properties.errors.items.type" = "object"
"definitions.organizationAsTeamMember.properties.errors.type" = "array"
"definitions.organizationAsTeamMember.properties.message.type" = "string"
"definitions.organizationAsTeamMember.type" = "object"
"definitions.participationStats.properties.all.items.type" = "integer"
"definitions.participationStats.properties.all.type" = "array"
"definitions.participationStats.properties.owner.items.type" = "integer"
"definitions.participationStats.properties.owner.type" = "array"
"definitions.participationStats.type" = "object"
"definitions.patchGist.properties.description.type" = "string"
"definitions.patchGist.properties.files.properties.delete_this_file.txt.type" = "string"
"definitions.patchGist.properties.files.properties.file1.txt.properties.content.type" = "string"
"definitions.patchGist.properties.files.properties.file1.txt.type" = "object"
"definitions.patchGist.properties.files.properties.new_file.txt.properties.content.type" = "string"
"definitions.patchGist.properties.files.properties.new_file.txt.type" = "object"
"definitions.patchGist.properties.files.properties.old_name.txt.properties.content.type" = "string"
"definitions.patchGist.properties.files.properties.old_name.txt.properties.filename.type" = "string"
"definitions.patchGist.properties.files.properties.old_name.txt.type" = "object"
"definitions.patchGist.type" = "object"
"definitions.patchOrg.properties.billing_email.description" = "Billing email address. This address is not publicized."
"definitions.patchOrg.properties.billing_email.type" = "string"
"definitions.patchOrg.properties.company.type" = "string"
"definitions.patchOrg.properties.email.description" = "Publicly visible email address."
"definitions.patchOrg.properties.email.type" = "string"
"definitions.patchOrg.properties.location.type" = "string"
"definitions.patchOrg.properties.name.type" = "string"
"definitions.patchOrg.type" = "object"
"definitions.postComment.properties.body.type" = "string"
"definitions.postComment.required.length" = 1
"definitions.postComment.required[0]" = "body"
"definitions.postComment.type" = "object"
"definitions.postGist.properties.description.type" = "string"
"definitions.postGist.properties.files.properties.file1.txt.properties.content.type" = "string"
"definitions.postGist.properties.files.properties.file1.txt.type" = "object"
"definitions.postGist.properties.files.type" = "object"
"definitions.postGist.properties.public.type" = "boolean"
"definitions.postGist.type" = "object"
"definitions.postRepo.properties.auto_init.description" = "True to create an initial commit with empty README. Default is false."
"definitions.postRepo.properties.auto_init.type" = "boolean"
"definitions.postRepo.properties.description.type" = "string"
"definitions.postRepo.properties.gitignore_template.description" = "Desired language or platform .gitignore template to apply. Use the name of the template without the extension. For example, \"Haskell\" Ignored if auto_init parameter is not provided. "
"definitions.postRepo.properties.gitignore_template.type" = "string"
"definitions.postRepo.properties.has_downloads.description" = "True to enable downloads for this repository, false to disable them. Default is true."
"definitions.postRepo.properties.has_downloads.type" = "boolean"
"definitions.postRepo.properties.has_issues.description" = "True to enable issues for this repository, false to disable them. Default is true."
"definitions.postRepo.properties.has_issues.type" = "boolean"
"definitions.postRepo.properties.has_wiki.description" = "True to enable the wiki for this repository, false to disable it. Default is true."
"definitions.postRepo.properties.has_wiki.type" = "boolean"
"definitions.postRepo.properties.homepage.type" = "string"
"definitions.postRepo.properties.name.type" = "string"
"definitions.postRepo.properties.private.description" = "True to create a private repository, false to create a public one. Creating private repositories requires a paid GitHub account."
"definitions.postRepo.properties.private.type" = "boolean"
"definitions.postRepo.properties.team_id.description" = "The id of the team that will be granted access to this repository. This is only valid when creating a repo in an organization."
"definitions.postRepo.properties.team_id.type" = "integer"
"definitions.postRepo.required.length" = 1
"definitions.postRepo.required[0]" = "name"
"definitions.postRepo.type" = "object"
"definitions.pullRequest.properties._links.properties.comments.properties.href.type" = "string"
"definitions.pullRequest.properties._links.properties.comments.type" = "object"
"definitions.pullRequest.properties._links.properties.html.properties.href.type" = "string"
"definitions.pullRequest.properties._links.properties.html.type" = "object"
"definitions.pullRequest.properties._links.properties.review_comments.properties.href.type" = "string"
"definitions.pullRequest.properties._links.properties.review_comments.type" = "object"
"definitions.pullRequest.properties._links.properties.self.properties.href.type" = "string"
"definitions.pullRequest.properties._links.properties.self.type" = "object"
"definitions.pullRequest.properties._links.type" = "object"
"definitions.pullRequest.properties.additions.type" = "integer"
"definitions.pullRequest.properties.base.properties.label.type" = "string"
"definitions.pullRequest.properties.base.properties.ref.type" = "string"
"definitions.pullRequest.properties.base.properties.repo.properties.clone_url.type" = "string"
"definitions.pullRequest.properties.base.properties.repo.properties.created_at.type" = "string"
"definitions.pullRequest.properties.base.properties.repo.properties.description.type" = "string"
"definitions.pullRequest.properties.base.properties.repo.properties.fork.type" = "boolean"
"definitions.pullRequest.properties.base.properties.repo.properties.forks.type" = "integer"
"definitions.pullRequest.properties.base.properties.repo.properties.forks_count.type" = "integer"
"definitions.pullRequest.properties.base.properties.repo.properties.full_name.type" = "string"
"definitions.pullRequest.properties.base.properties.repo.properties.git_url.type" = "string"
"definitions.pullRequest.properties.base.properties.repo.properties.homepage.type" = "string"
"definitions.pullRequest.properties.base.properties.repo.properties.html_url.type" = "string"
"definitions.pullRequest.properties.base.properties.repo.properties.id.type" = "integer"
"definitions.pullRequest.properties.base.properties.repo.properties.language.type" = "null"
"definitions.pullRequest.properties.base.properties.repo.properties.master_branch.type" = "string"
"definitions.pullRequest.properties.base.properties.repo.properties.mirror_url.type" = "string"
"definitions.pullRequest.properties.base.properties.repo.properties.name.type" = "string"
"definitions.pullRequest.properties.base.properties.repo.properties.open_issues.type" = "integer"
"definitions.pullRequest.properties.base.properties.repo.properties.open_issues_count.type" = "integer"
"definitions.pullRequest.properties.base.properties.repo.properties.owner.properties.avatar_url.type" = "string"
"definitions.pullRequest.properties.base.properties.repo.properties.owner.properties.gravatar_id.type" = "string"
"definitions.pullRequest.properties.base.properties.repo.properties.owner.properties.id.type" = "integer"
"definitions.pullRequest.properties.base.properties.repo.properties.owner.properties.login.type" = "string"
"definitions.pullRequest.properties.base.properties.repo.properties.owner.properties.url.type" = "string"
"definitions.pullRequest.properties.base.properties.repo.properties.owner.type" = "object"
"definitions.pullRequest.properties.base.properties.repo.properties.private.type" = "boolean"
"definitions.pullRequest.properties.base.properties.repo.properties.pushed_at.type" = "string"
"definitions.pullRequest.properties.base.properties.repo.properties.size.type" = "integer"
"definitions.pullRequest.properties.base.properties.repo.properties.ssh_url.type" = "string"
"definitions.pullRequest.properties.base.properties.repo.properties.svn_url.type" = "string"
"definitions.pullRequest.properties.base.properties.repo.properties.updated_at.type" = "string"
"definitions.pullRequest.properties.base.properties.repo.properties.url.type" = "string"
"definitions.pullRequest.properties.base.properties.repo.properties.watchers.type" = "integer"
"definitions.pullRequest.properties.base.properties.repo.properties.watchers_count.type" = "integer"
"definitions.pullRequest.properties.base.properties.repo.type" = "object"
"definitions.pullRequest.properties.base.properties.sha.type" = "string"
"definitions.pullRequest.properties.base.properties.user.properties.avatar_url.type" = "string"
"definitions.pullRequest.properties.base.properties.user.properties.gravatar_id.type" = "string"
"definitions.pullRequest.properties.base.properties.user.properties.id.type" = "integer"
"definitions.pullRequest.properties.base.properties.user.properties.login.type" = "string"
"definitions.pullRequest.properties.base.properties.user.properties.url.type" = "string"
"definitions.pullRequest.properties.base.properties.user.type" = "object"
"definitions.pullRequest.properties.base.type" = "object"
"definitions.pullRequest.properties.body.type" = "string"
"definitions.pullRequest.properties.changed_files.type" = "integer"
"definitions.pullRequest.properties.closed_at.type" = "string"
"definitions.pullRequest.properties.comments.type" = "integer"
"definitions.pullRequest.properties.commits.type" = "integer"
"definitions.pullRequest.properties.created_at.type" = "string"
"definitions.pullRequest.properties.deletions.type" = "integer"
"definitions.pullRequest.properties.diff_url.type" = "string"
"definitions.pullRequest.properties.head.properties.label.type" = "string"
"definitions.pullRequest.properties.head.properties.ref.type" = "string"
"definitions.pullRequest.properties.head.properties.repo.properties.clone_url.type" = "string"
"definitions.pullRequest.properties.head.properties.repo.properties.created_at.type" = "string"
"definitions.pullRequest.properties.head.properties.repo.properties.description.type" = "string"
"definitions.pullRequest.properties.head.properties.repo.properties.fork.type" = "boolean"
"definitions.pullRequest.properties.head.properties.repo.properties.forks.type" = "integer"
"definitions.pullRequest.properties.head.properties.repo.properties.forks_count.type" = "integer"
"definitions.pullRequest.properties.head.properties.repo.properties.full_name.type" = "string"
"definitions.pullRequest.properties.head.properties.repo.properties.git_url.type" = "string"
"definitions.pullRequest.properties.head.properties.repo.properties.homepage.type" = "string"
"definitions.pullRequest.properties.head.properties.repo.properties.html_url.type" = "string"
"definitions.pullRequest.properties.head.properties.repo.properties.id.type" = "integer"
"definitions.pullRequest.properties.head.properties.repo.properties.language.type" = "null"
"definitions.pullRequest.properties.head.properties.repo.properties.master_branch.type" = "string"
"definitions.pullRequest.properties.head.properties.repo.properties.mirror_url.type" = "string"
"definitions.pullRequest.properties.head.properties.repo.properties.name.type" = "string"
"definitions.pullRequest.properties.head.properties.repo.properties.open_issues.type" = "integer"
"definitions.pullRequest.properties.head.properties.repo.properties.open_issues_count.type" = "integer"
"definitions.pullRequest.properties.head.properties.repo.properties.owner.properties.avatar_url.type" = "string"
"definitions.pullRequest.properties.head.properties.repo.properties.owner.properties.gravatar_id.type" = "string"
"definitions.pullRequest.properties.head.properties.repo.properties.owner.properties.id.type" = "integer"
"definitions.pullRequest.properties.head.properties.repo.properties.owner.properties.login.type" = "string"
"definitions.pullRequest.properties.head.properties.repo.properties.owner.properties.url.type" = "string"
"definitions.pullRequest.properties.head.properties.repo.properties.owner.type" = "object"
"definitions.pullRequest.properties.head.properties.repo.properties.private.type" = "boolean"
"definitions.pullRequest.properties.head.properties.repo.properties.pushed_at.type" = "string"
"definitions.pullRequest.properties.head.properties.repo.properties.size.type" = "integer"
"definitions.pullRequest.properties.head.properties.repo.properties.ssh_url.type" = "string"
"definitions.pullRequest.properties.head.properties.repo.properties.svn_url.type" = "string"
"definitions.pullRequest.properties.head.properties.repo.properties.updated_at.type" = "string"
"definitions.pullRequest.properties.head.properties.repo.properties.url.type" = "string"
"definitions.pullRequest.properties.head.properties.repo.properties.watchers.type" = "integer"
"definitions.pullRequest.properties.head.properties.repo.properties.watchers_count.type" = "integer"
"definitions.pullRequest.properties.head.properties.repo.type" = "object"
"definitions.pullRequest.properties.head.properties.sha.type" = "string"
"definitions.pullRequest.properties.head.properties.user.properties.avatar_url.type" = "string"
"definitions.pullRequest.properties.head.properties.user.properties.gravatar_id.type" = "string"
"definitions.pullRequest.properties.head.properties.user.properties.id.type" = "integer"
"definitions.pullRequest.properties.head.properties.user.properties.login.type" = "string"
"definitions.pullRequest.properties.head.properties.user.properties.url.type" = "string"
"definitions.pullRequest.properties.head.properties.user.type" = "object"
"definitions.pullRequest.properties.head.type" = "object"
"definitions.pullRequest.properties.html_url.type" = "string"
"definitions.pullRequest.properties.issue_url.type" = "string"
"definitions.pullRequest.properties.merge_commit_sha.type" = "string"
"definitions.pullRequest.properties.mergeable.type" = "boolean"
"definitions.pullRequest.properties.merged.type" = "boolean"
"definitions.pullRequest.properties.merged_at.type" = "string"
"definitions.pullRequest.properties.merged_by.properties.avatar_url.type" = "string"
"definitions.pullRequest.properties.merged_by.properties.gravatar_id.type" = "string"
"definitions.pullRequest.properties.merged_by.properties.id.type" = "integer"
"definitions.pullRequest.properties.merged_by.properties.login.type" = "string"
"definitions.pullRequest.properties.merged_by.properties.url.type" = "string"
"definitions.pullRequest.properties.merged_by.type" = "object"
"definitions.pullRequest.properties.number.type" = "integer"
"definitions.pullRequest.properties.patch_url.type" = "string"
"definitions.pullRequest.properties.state.type" = "string"
"definitions.pullRequest.properties.title.type" = "string"
"definitions.pullRequest.properties.updated_at.type" = "string"
"definitions.pullRequest.properties.url.type" = "string"
"definitions.pullRequest.properties.user.properties.avatar_url.type" = "string"
"definitions.pullRequest.properties.user.properties.gravatar_id.type" = "string"
"definitions.pullRequest.properties.user.properties.id.type" = "integer"
"definitions.pullRequest.properties.user.properties.login.type" = "string"
"definitions.pullRequest.properties.user.properties.url.type" = "string"
"definitions.pullRequest.properties.user.type" = "object"
"definitions.pullRequest.type" = "object"
"definitions.pullUpdate.properties.body.type" = "string"
"definitions.pullUpdate.properties.state.type" = "string"
"definitions.pullUpdate.properties.title.type" = "string"
"definitions.pullUpdate.type" = "object"
"definitions.pulls.items.properties._links.properties.comments.properties.href.type" = "string"
"definitions.pulls.items.properties._links.properties.comments.type" = "object"
"definitions.pulls.items.properties._links.properties.html.properties.href.type" = "string"
"definitions.pulls.items.properties._links.properties.html.type" = "object"
"definitions.pulls.items.properties._links.properties.review_comments.properties.href.type" = "string"
"definitions.pulls.items.properties._links.properties.review_comments.type" = "object"
"definitions.pulls.items.properties._links.properties.self.properties.href.type" = "string"
"definitions.pulls.items.properties._links.properties.self.type" = "object"
"definitions.pulls.items.properties._links.type" = "object"
"definitions.pulls.items.properties.base.properties.label.type" = "string"
"definitions.pulls.items.properties.base.properties.ref.type" = "string"
"definitions.pulls.items.properties.base.properties.repo.properties.clone_url.type" = "string"
"definitions.pulls.items.properties.base.properties.repo.properties.created_at.description" = "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ"
"definitions.pulls.items.properties.base.properties.repo.properties.created_at.type" = "string"
"definitions.pulls.items.properties.base.properties.repo.properties.description.type" = "string"
"definitions.pulls.items.properties.base.properties.repo.properties.fork.type" = "boolean"
"definitions.pulls.items.properties.base.properties.repo.properties.forks.type" = "integer"
"definitions.pulls.items.properties.base.properties.repo.properties.forks_count.type" = "integer"
"definitions.pulls.items.properties.base.properties.repo.properties.full_name.type" = "string"
"definitions.pulls.items.properties.base.properties.repo.properties.git_url.type" = "string"
"definitions.pulls.items.properties.base.properties.repo.properties.homepage.type" = "string"
"definitions.pulls.items.properties.base.properties.repo.properties.html_url.type" = "string"
"definitions.pulls.items.properties.base.properties.repo.properties.id.type" = "integer"
"definitions.pulls.items.properties.base.properties.repo.properties.language.type" = "string"
"definitions.pulls.items.properties.base.properties.repo.properties.master_branch.type" = "string"
"definitions.pulls.items.properties.base.properties.repo.properties.mirror_url.type" = "string"
"definitions.pulls.items.properties.base.properties.repo.properties.name.type" = "string"
"definitions.pulls.items.properties.base.properties.repo.properties.open_issues.type" = "integer"
"definitions.pulls.items.properties.base.properties.repo.properties.open_issues_count.type" = "integer"
"definitions.pulls.items.properties.base.properties.repo.properties.owner.properties.avatar_url.type" = "string"
"definitions.pulls.items.properties.base.properties.repo.properties.owner.properties.gravatar_id.type" = "string"
"definitions.pulls.items.properties.base.properties.repo.properties.owner.properties.id.type" = "integer"
"definitions.pulls.items.properties.base.properties.repo.properties.owner.properties.login.type" = "string"
"definitions.pulls.items.properties.base.properties.repo.properties.owner.properties.url.type" = "string"
"definitions.pulls.items.properties.base.properties.repo.properties.owner.type" = "object"
"definitions.pulls.items.properties.base.properties.repo.properties.private.type" = "boolean"
"definitions.pulls.items.properties.base.properties.repo.properties.pushed_at.description" = "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ"
"definitions.pulls.items.properties.base.properties.repo.properties.pushed_at.type" = "string"
"definitions.pulls.items.properties.base.properties.repo.properties.size.type" = "integer"
"definitions.pulls.items.properties.base.properties.repo.properties.ssh_url.type" = "string"
"definitions.pulls.items.properties.base.properties.repo.properties.svn_url.type" = "string"
"definitions.pulls.items.properties.base.properties.repo.properties.updated_at.description" = "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ"
"definitions.pulls.items.properties.base.properties.repo.properties.updated_at.type" = "string"
"definitions.pulls.items.properties.base.properties.repo.properties.url.type" = "string"
"definitions.pulls.items.properties.base.properties.repo.properties.watchers.type" = "integer"
"definitions.pulls.items.properties.base.properties.repo.properties.watchers_count.type" = "integer"
"definitions.pulls.items.properties.base.properties.repo.type" = "object"
"definitions.pulls.items.properties.base.properties.sha.type" = "string"
"definitions.pulls.items.properties.base.properties.user.properties.avatar_url.type" = "string"
"definitions.pulls.items.properties.base.properties.user.properties.gravatar_id.type" = "string"
"definitions.pulls.items.properties.base.properties.user.properties.id.type" = "integer"
"definitions.pulls.items.properties.base.properties.user.properties.login.type" = "string"
"definitions.pulls.items.properties.base.properties.user.properties.url.type" = "string"
"definitions.pulls.items.properties.base.properties.user.type" = "object"
"definitions.pulls.items.properties.base.type" = "object"
"definitions.pulls.items.properties.body.type" = "string"
"definitions.pulls.items.properties.closed_at.description" = "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ"
"definitions.pulls.items.properties.closed_at.type" = "string"
"definitions.pulls.items.properties.created_at.description" = "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ"
"definitions.pulls.items.properties.created_at.type" = "string"
"definitions.pulls.items.properties.diff_url.type" = "string"
"definitions.pulls.items.properties.head.properties.label.type" = "string"
"definitions.pulls.items.properties.head.properties.ref.type" = "string"
"definitions.pulls.items.properties.head.properties.repo.properties.clone_url.type" = "string"
"definitions.pulls.items.properties.head.properties.repo.properties.created_at.description" = "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ"
"definitions.pulls.items.properties.head.properties.repo.properties.created_at.type" = "string"
"definitions.pulls.items.properties.head.properties.repo.properties.description.type" = "string"
"definitions.pulls.items.properties.head.properties.repo.properties.fork.type" = "boolean"
"definitions.pulls.items.properties.head.properties.repo.properties.forks.type" = "integer"
"definitions.pulls.items.properties.head.properties.repo.properties.forks_count.type" = "integer"
"definitions.pulls.items.properties.head.properties.repo.properties.full_name.type" = "string"
"definitions.pulls.items.properties.head.properties.repo.properties.git_url.type" = "string"
"definitions.pulls.items.properties.head.properties.repo.properties.homepage.type" = "string"
"definitions.pulls.items.properties.head.properties.repo.properties.html_url.type" = "string"
"definitions.pulls.items.properties.head.properties.repo.properties.id.type" = "integer"
"definitions.pulls.items.properties.head.properties.repo.properties.language.type" = "string"
"definitions.pulls.items.properties.head.properties.repo.properties.master_branch.type" = "string"
"definitions.pulls.items.properties.head.properties.repo.properties.mirror_url.type" = "string"
"definitions.pulls.items.properties.head.properties.repo.properties.name.type" = "string"
"definitions.pulls.items.properties.head.properties.repo.properties.open_issues.type" = "integer"
"definitions.pulls.items.properties.head.properties.repo.properties.open_issues_count.type" = "integer"
"definitions.pulls.items.properties.head.properties.repo.properties.owner.properties.avatar_url.type" = "string"
"definitions.pulls.items.properties.head.properties.repo.properties.owner.properties.gravatar_id.type" = "string"
"definitions.pulls.items.properties.head.properties.repo.properties.owner.properties.id.type" = "integer"
"definitions.pulls.items.properties.head.properties.repo.properties.owner.properties.login.type" = "string"
"definitions.pulls.items.properties.head.properties.repo.properties.owner.properties.url.type" = "string"
"definitions.pulls.items.properties.head.properties.repo.properties.owner.type" = "object"
"definitions.pulls.items.properties.head.properties.repo.properties.private.type" = "boolean"
"definitions.pulls.items.properties.head.properties.repo.properties.pushed_at.description" = "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ"
"definitions.pulls.items.properties.head.properties.repo.properties.pushed_at.type" = "string"
"definitions.pulls.items.properties.head.properties.repo.properties.size.type" = "integer"
"definitions.pulls.items.properties.head.properties.repo.properties.ssh_url.type" = "string"
"definitions.pulls.items.properties.head.properties.repo.properties.svn_url.type" = "string"
"definitions.pulls.items.properties.head.properties.repo.properties.updated_at.description" = "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ"
"definitions.pulls.items.properties.head.properties.repo.properties.updated_at.type" = "string"
"definitions.pulls.items.properties.head.properties.repo.properties.url.type" = "string"
"definitions.pulls.items.properties.head.properties.repo.properties.watchers.type" = "integer"
"definitions.pulls.items.properties.head.properties.repo.properties.watchers_count.type" = "integer"
"definitions.pulls.items.properties.head.properties.repo.type" = "object"
"definitions.pulls.items.properties.head.properties.sha.type" = "string"
"definitions.pulls.items.properties.head.properties.user.properties.avatar_url.type" = "string"
"definitions.pulls.items.properties.head.properties.user.properties.gravatar_id.type" = "string"
"definitions.pulls.items.properties.head.properties.user.properties.id.type" = "integer"
"definitions.pulls.items.properties.head.properties.user.properties.login.type" = "string"
"definitions.pulls.items.properties.head.properties.user.properties.url.type" = "string"
"definitions.pulls.items.properties.head.properties.user.type" = "object"
"definitions.pulls.items.properties.head.type" = "object"
"definitions.pulls.items.properties.html_url.type" = "string"
"definitions.pulls.items.properties.issue_url.type" = "string"
"definitions.pulls.items.properties.merged_at.description" = "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ"
"definitions.pulls.items.properties.merged_at.type" = "string"
"definitions.pulls.items.properties.number.type" = "integer"
"definitions.pulls.items.properties.patch_url.type" = "string"
"definitions.pulls.items.properties.state.enum.length" = 2
"definitions.pulls.items.properties.state.enum[0]" = "open"
"definitions.pulls.items.properties.state.enum[1]" = "closed"
"definitions.pulls.items.properties.title.type" = "string"
"definitions.pulls.items.properties.updated_at.description" = "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ"
"definitions.pulls.items.properties.updated_at.type" = "string"
"definitions.pulls.items.properties.url.type" = "string"
"definitions.pulls.items.properties.user.properties.avatar_url.type" = "string"
"definitions.pulls.items.properties.user.properties.gravatar_id.type" = "string"
"definitions.pulls.items.properties.user.properties.id.type" = "integer"
"definitions.pulls.items.properties.user.properties.login.type" = "string"
"definitions.pulls.items.properties.user.properties.url.type" = "string"
"definitions.pulls.items.properties.user.type" = "object"
"definitions.pulls.items.type" = "object"
"definitions.pulls.type" = "array"
"definitions.pullsComment.properties._links.properties.html.properties.href.type" = "string"
"definitions.pullsComment.properties._links.properties.html.type" = "object"
"definitions.pullsComment.properties._links.properties.pull_request.properties.href.type" = "string"
"definitions.pullsComment.properties._links.properties.pull_request.type" = "object"
"definitions.pullsComment.properties._links.properties.self.properties.href.type" = "string"
"definitions.pullsComment.properties._links.properties.self.type" = "object"
"definitions.pullsComment.properties._links.type" = "object"
"definitions.pullsComment.properties.body.type" = "string"
"definitions.pullsComment.properties.commit_id.type" = "string"
"definitions.pullsComment.properties.created_at.description" = "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ"
"definitions.pullsComment.properties.created_at.type" = "string"
"definitions.pullsComment.properties.id.type" = "integer"
"definitions.pullsComment.properties.path.type" = "string"
"definitions.pullsComment.properties.position.type" = "integer"
"definitions.pullsComment.properties.updated_at.description" = "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ"
"definitions.pullsComment.properties.updated_at.type" = "string"
"definitions.pullsComment.properties.url.type" = "string"
"definitions.pullsComment.properties.user.properties.avatar_url.type" = "string"
"definitions.pullsComment.properties.user.properties.gravatar_id.type" = "string"
"definitions.pullsComment.properties.user.properties.id.type" = "integer"
"definitions.pullsComment.properties.user.properties.login.type" = "string"
"definitions.pullsComment.properties.user.properties.url.type" = "string"
"definitions.pullsComment.properties.user.type" = "object"
"definitions.pullsComment.type" = "object"
"definitions.pullsCommentPost.properties.body.type" = "string"
"definitions.pullsCommentPost.properties.commit_id.type" = "string"
"definitions.pullsCommentPost.properties.path.type" = "string"
"definitions.pullsCommentPost.properties.position.type" = "number"
"definitions.pullsCommentPost.type" = "object"
"definitions.pullsComments.items.properties._links.properties.html.properties.href.type" = "string"
"definitions.pullsComments.items.properties._links.properties.html.type" = "object"
"definitions.pullsComments.items.properties._links.properties.pull_request.properties.href.type" = "string"
"definitions.pullsComments.items.properties._links.properties.pull_request.type" = "object"
"definitions.pullsComments.items.properties._links.properties.self.properties.href.type" = "string"
"definitions.pullsComments.items.properties._links.properties.self.type" = "object"
"definitions.pullsComments.items.properties._links.type" = "object"
"definitions.pullsComments.items.properties.body.type" = "string"
"definitions.pullsComments.items.properties.commit_id.type" = "string"
"definitions.pullsComments.items.properties.created_at.description" = "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ"
"definitions.pullsComments.items.properties.created_at.type" = "string"
"definitions.pullsComments.items.properties.id.type" = "integer"
"definitions.pullsComments.items.properties.path.type" = "string"
"definitions.pullsComments.items.properties.position.type" = "integer"
"definitions.pullsComments.items.properties.updated_at.description" = "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ"
"definitions.pullsComments.items.properties.updated_at.type" = "string"
"definitions.pullsComments.items.properties.url.type" = "string"
"definitions.pullsComments.items.properties.user.properties.avatar_url.type" = "string"
"definitions.pullsComments.items.properties.user.properties.gravatar_id.type" = "string"
"definitions.pullsComments.items.properties.user.properties.id.type" = "integer"
"definitions.pullsComments.items.properties.user.properties.login.type" = "string"
"definitions.pullsComments.items.properties.user.properties.url.type" = "string"
"definitions.pullsComments.items.properties.user.type" = "object"
"definitions.pullsComments.items.type" = "object"
"definitions.pullsComments.type" = "array"
"definitions.pullsPost.properties.base.type" = "string"
"definitions.pullsPost.properties.body.type" = "string"
"definitions.pullsPost.properties.head.type" = "string"
"definitions.pullsPost.properties.title.type" = "string"
"definitions.pullsPost.type" = "object"
"definitions.punchCardStats.items.type" = "integer"
"definitions.punchCardStats.type" = "array"
"definitions.putSubscription.properties.created_at.type" = "string"
"definitions.putSubscription.properties.ignored.type" = "boolean"
"definitions.putSubscription.properties.reason.type" = "object"
"definitions.putSubscription.properties.subscribed.type" = "boolean"
"definitions.putSubscription.properties.thread_url.type" = "string"
"definitions.putSubscription.properties.url.type" = "string"
"definitions.putSubscription.type" = "object"
"definitions.rate_limit.properties.rate.properties.limit.type" = "integer"
"definitions.rate_limit.properties.rate.properties.remaining.type" = "integer"
"definitions.rate_limit.properties.rate.properties.reset.type" = "integer"
"definitions.rate_limit.type" = "object"
"definitions.readme.properties._links.properties.git.type" = "string"
"definitions.readme.properties._links.properties.html.type" = "string"
"definitions.readme.properties._links.properties.self.type" = "string"
"definitions.readme.properties._links.type" = "object"
"definitions.readme.properties.content.type" = "string"
"definitions.readme.properties.encoding.type" = "string"
"definitions.readme.properties.git_url.type" = "string"
"definitions.readme.properties.html_url.type" = "string"
"definitions.readme.properties.name.type" = "string"
"definitions.readme.properties.path.type" = "string"
"definitions.readme.properties.sha.type" = "string"
"definitions.readme.properties.size.type" = "integer"
"definitions.readme.properties.type.type" = "string"
"definitions.readme.properties.url.type" = "string"
"definitions.readme.type" = "object"
"definitions.ref.items.properties.created_at.description" = "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ"
"definitions.ref.items.properties.created_at.type" = "string"
"definitions.ref.items.properties.creator.properties.avatar_url.type" = "string"
"definitions.ref.items.properties.creator.properties.gravatar_id.type" = "string"
"definitions.ref.items.properties.creator.properties.id.type" = "integer"
"definitions.ref.items.properties.creator.properties.login.type" = "string"
"definitions.ref.items.properties.creator.properties.url.type" = "string"
"definitions.ref.items.properties.creator.type" = "object"
"definitions.ref.items.properties.description.type" = "string"
"definitions.ref.items.properties.id.type" = "integer"
"definitions.ref.items.properties.state.type" = "string"
"definitions.ref.items.properties.target_url.type" = "string"
"definitions.ref.items.properties.updated_at.description" = "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ"
"definitions.ref.items.properties.updated_at.type" = "string"
"definitions.ref.items.properties.url.type" = "string"
"definitions.ref.items.type" = "object"
"definitions.ref.type" = "array"
"definitions.refBody.properties.object.properties.sha.type" = "string"
"definitions.refBody.properties.object.properties.type.type" = "string"
"definitions.refBody.properties.object.properties.url.type" = "string"
"definitions.refBody.properties.object.type" = "object"
"definitions.refBody.properties.ref.type" = "string"
"definitions.refBody.properties.url.type" = "string"
"definitions.refBody.type" = "object"
"definitions.refStatus.items.properties.commit_url.type" = "string"
"definitions.refStatus.items.properties.name.type" = "string"
"definitions.refStatus.items.properties.repository_url.type" = "string"
"definitions.refStatus.items.properties.sha.type" = "string"
"definitions.refStatus.items.properties.state.type" = "string"
"definitions.refStatus.items.properties.statuses.items.properties.context.type" = "string"
"definitions.refStatus.items.properties.statuses.items.properties.created_at.type" = "string"
"definitions.refStatus.items.properties.statuses.items.properties.description.type" = "string"
"definitions.refStatus.items.properties.statuses.items.properties.id.type" = "number"
"definitions.refStatus.items.properties.statuses.items.properties.state.type" = "string"
"definitions.refStatus.items.properties.statuses.items.properties.target_url.type" = "string"
"definitions.refStatus.items.properties.statuses.items.properties.updated_at.type" = "string"
"definitions.refStatus.items.properties.statuses.items.properties.url.type" = "string"
"definitions.refStatus.items.properties.statuses.items.type" = "object"
"definitions.refStatus.items.properties.statuses.type" = "array"
"definitions.refStatus.items.type" = "object"
"definitions.refStatus.type" = "array"
"definitions.refs.items.properties.object.properties.sha.type" = "string"
"definitions.refs.items.properties.object.properties.type.type" = "string"
"definitions.refs.items.properties.object.properties.url.type" = "string"
"definitions.refs.items.properties.object.type" = "object"
"definitions.refs.items.properties.ref.type" = "string"
"definitions.refs.items.properties.url.type" = "string"
"definitions.refs.items.type" = "object"
"definitions.refs.type" = "array"
"definitions.refsBody.properties.ref.type" = "string"
"definitions.refsBody.properties.sha.type" = "string"
"definitions.refsBody.type" = "object"
"definitions.release-create.properties.body.type" = "string"
"definitions.release-create.properties.draft.type" = "boolean"
"definitions.release-create.properties.name.type" = "string"
"definitions.release-create.properties.prerelease.type" = "boolean"
"definitions.release-create.properties.tag_name.type" = "string"
"definitions.release-create.properties.target_commitish.type" = "string"
"definitions.release-create.type" = "object"
"definitions.release.properties.assets.items.properties.content_type.type" = "string"
"definitions.release.properties.assets.items.properties.created_at.type" = "string"
"definitions.release.properties.assets.items.properties.download_count.type" = "integer"
"definitions.release.properties.assets.items.properties.id.type" = "integer"
"definitions.release.properties.assets.items.properties.label.type" = "string"
"definitions.release.properties.assets.items.properties.name.type" = "string"
"definitions.release.properties.assets.items.properties.size.type" = "integer"
"definitions.release.properties.assets.items.properties.state.type" = "string"
"definitions.release.properties.assets.items.properties.updated_at.type" = "string"
"definitions.release.properties.assets.items.properties.uploader.properties.avatar_url.type" = "string"
"definitions.release.properties.assets.items.properties.uploader.properties.events_url.type" = "string"
"definitions.release.properties.assets.items.properties.uploader.properties.followers_url.type" = "string"
"definitions.release.properties.assets.items.properties.uploader.properties.following_url.type" = "string"
"definitions.release.properties.assets.items.properties.uploader.properties.gists_url.type" = "string"
"definitions.release.properties.assets.items.properties.uploader.properties.gravatar_id.type" = "string"
"definitions.release.properties.assets.items.properties.uploader.properties.html_url.type" = "string"
"definitions.release.properties.assets.items.properties.uploader.properties.id.type" = "integer"
"definitions.release.properties.assets.items.properties.uploader.properties.login.type" = "string"
"definitions.release.properties.assets.items.properties.uploader.properties.organizations_url.type" = "string"
"definitions.release.properties.assets.items.properties.uploader.properties.received_events_url.type" = "string"
"definitions.release.properties.assets.items.properties.uploader.properties.repos_url.type" = "string"
"definitions.release.properties.assets.items.properties.uploader.properties.site_admin.type" = "boolean"
"definitions.release.properties.assets.items.properties.uploader.properties.starred_url.type" = "string"
"definitions.release.properties.assets.items.properties.uploader.properties.subscriptions_url.type" = "string"
"definitions.release.properties.assets.items.properties.uploader.properties.type.type" = "string"
"definitions.release.properties.assets.items.properties.uploader.properties.url.type" = "string"
"definitions.release.properties.assets.items.properties.uploader.type" = "object"
"definitions.release.properties.assets.items.properties.url.type" = "string"
"definitions.release.properties.assets.items.type" = "object"
"definitions.release.properties.assets.type" = "array"
"definitions.release.properties.assets_url.type" = "string"
"definitions.release.properties.author.properties.avatar_url.type" = "string"
"definitions.release.properties.author.properties.events_url.type" = "string"
"definitions.release.properties.author.properties.followers_url.type" = "string"
"definitions.release.properties.author.properties.following_url.type" = "string"
"definitions.release.properties.author.properties.gists_url.type" = "string"
"definitions.release.properties.author.properties.gravatar_id.type" = "string"
"definitions.release.properties.author.properties.html_url.type" = "string"
"definitions.release.properties.author.properties.id.type" = "integer"
"definitions.release.properties.author.properties.login.type" = "string"
"definitions.release.properties.author.properties.organizations_url.type" = "string"
"definitions.release.properties.author.properties.received_events_url.type" = "string"
"definitions.release.properties.author.properties.repos_url.type" = "string"
"definitions.release.properties.author.properties.site_admin.type" = "boolean"
"definitions.release.properties.author.properties.starred_url.type" = "string"
"definitions.release.properties.author.properties.subscriptions_url.type" = "string"
"definitions.release.properties.author.properties.type.type" = "string"
"definitions.release.properties.author.properties.url.type" = "string"
"definitions.release.properties.author.type" = "object"
"definitions.release.properties.body.type" = "string"
"definitions.release.properties.created_at.type" = "string"
"definitions.release.properties.draft.type" = "boolean"
"definitions.release.properties.html_url.type" = "string"
"definitions.release.properties.id.type" = "integer"
"definitions.release.properties.name.type" = "string"
"definitions.release.properties.prerelease.type" = "boolean"
"definitions.release.properties.published_at.type" = "string"
"definitions.release.properties.tag_name.type" = "string"
"definitions.release.properties.tarball_url.type" = "string"
"definitions.release.properties.target_commitish.type" = "string"
"definitions.release.properties.upload_url.type" = "string"
"definitions.release.properties.url.type" = "string"
"definitions.release.properties.zipball_url.type" = "string"
"definitions.release.type" = "object"
"definitions.releases.items.properties.assets.items.properties.content_type.type" = "string"
"definitions.releases.items.properties.assets.items.properties.created_at.type" = "string"
"definitions.releases.items.properties.assets.items.properties.download_count.type" = "integer"
"definitions.releases.items.properties.assets.items.properties.id.type" = "integer"
"definitions.releases.items.properties.assets.items.properties.label.type" = "string"
"definitions.releases.items.properties.assets.items.properties.name.type" = "string"
"definitions.releases.items.properties.assets.items.properties.size.type" = "integer"
"definitions.releases.items.properties.assets.items.properties.state.type" = "string"
"definitions.releases.items.properties.assets.items.properties.updated_at.type" = "string"
"definitions.releases.items.properties.assets.items.properties.uploader.properties.avatar_url.type" = "string"
"definitions.releases.items.properties.assets.items.properties.uploader.properties.events_url.type" = "string"
"definitions.releases.items.properties.assets.items.properties.uploader.properties.followers_url.type" = "string"
"definitions.releases.items.properties.assets.items.properties.uploader.properties.following_url.type" = "string"
"definitions.releases.items.properties.assets.items.properties.uploader.properties.gists_url.type" = "string"
"definitions.releases.items.properties.assets.items.properties.uploader.properties.gravatar_id.type" = "string"
"definitions.releases.items.properties.assets.items.properties.uploader.properties.html_url.type" = "string"
"definitions.releases.items.properties.assets.items.properties.uploader.properties.id.type" = "integer"
"definitions.releases.items.properties.assets.items.properties.uploader.properties.login.type" = "string"
"definitions.releases.items.properties.assets.items.properties.uploader.properties.organizations_url.type" = "string"
"definitions.releases.items.properties.assets.items.properties.uploader.properties.received_events_url.type" = "string"
"definitions.releases.items.properties.assets.items.properties.uploader.properties.repos_url.type" = "string"
"definitions.releases.items.properties.assets.items.properties.uploader.properties.site_admin.type" = "boolean"
"definitions.releases.items.properties.assets.items.properties.uploader.properties.starred_url.type" = "string"
"definitions.releases.items.properties.assets.items.properties.uploader.properties.subscriptions_url.type" = "string"
"definitions.releases.items.properties.assets.items.properties.uploader.properties.type.type" = "string"
"definitions.releases.items.properties.assets.items.properties.uploader.properties.url.type" = "string"
"definitions.releases.items.properties.assets.items.properties.uploader.type" = "object"
"definitions.releases.items.properties.assets.items.properties.url.type" = "string"
"definitions.releases.items.properties.assets.items.type" = "object"
"definitions.releases.items.properties.assets.type" = "array"
"definitions.releases.items.properties.assets_url.type" = "string"
"definitions.releases.items.properties.author.properties.avatar_url.type" = "string"
"definitions.releases.items.properties.author.properties.events_url.type" = "string"
"definitions.releases.items.properties.author.properties.followers_url.type" = "string"
"definitions.releases.items.properties.author.properties.following_url.type" = "string"
"definitions.releases.items.properties.author.properties.gists_url.type" = "string"
"definitions.releases.items.properties.author.properties.gravatar_id.type" = "string"
"definitions.releases.items.properties.author.properties.html_url.type" = "string"
"definitions.releases.items.properties.author.properties.id.type" = "integer"
"definitions.releases.items.properties.author.properties.login.type" = "string"
"definitions.releases.items.properties.author.properties.organizations_url.type" = "string"
"definitions.releases.items.properties.author.properties.received_events_url.type" = "string"
"definitions.releases.items.properties.author.properties.repos_url.type" = "string"
"definitions.releases.items.properties.author.properties.site_admin.type" = "boolean"
"definitions.releases.items.properties.author.properties.starred_url.type" = "string"
"definitions.releases.items.properties.author.properties.subscriptions_url.type" = "string"
"definitions.releases.items.properties.author.properties.type.type" = "string"
"definitions.releases.items.properties.author.properties.url.type" = "string"
"definitions.releases.items.properties.author.type" = "object"
"definitions.releases.items.properties.body.type" = "string"
"definitions.releases.items.properties.created_at.type" = "string"
"definitions.releases.items.properties.draft.type" = "boolean"
"definitions.releases.items.properties.html_url.type" = "string"
"definitions.releases.items.properties.id.type" = "integer"
"definitions.releases.items.properties.name.type" = "string"
"definitions.releases.items.properties.prerelease.type" = "boolean"
"definitions.releases.items.properties.published_at.type" = "string"
"definitions.releases.items.properties.tag_name.type" = "string"
"definitions.releases.items.properties.tarball_url.type" = "string"
"definitions.releases.items.properties.target_commitish.type" = "string"
"definitions.releases.items.properties.upload_url.type" = "string"
"definitions.releases.items.properties.url.type" = "string"
"definitions.releases.items.properties.zipball_url.type" = "string"
"definitions.releases.items.type" = "object"
"definitions.releases.type" = "array"
"definitions.repo-deployments.items.properties.created_at.type" = "string"
"definitions.repo-deployments.items.properties.creator.properties.avatar_url.type" = "string"
"definitions.repo-deployments.items.properties.creator.properties.events_url.type" = "string"
"definitions.repo-deployments.items.properties.creator.properties.followers_url.type" = "string"
"definitions.repo-deployments.items.properties.creator.properties.following_url.type" = "string"
"definitions.repo-deployments.items.properties.creator.properties.gists_url.type" = "string"
"definitions.repo-deployments.items.properties.creator.properties.gravatar_id.type" = "string"
"definitions.repo-deployments.items.properties.creator.properties.html_url.type" = "string"
"definitions.repo-deployments.items.properties.creator.properties.id.type" = "integer"
"definitions.repo-deployments.items.properties.creator.properties.login.type" = "string"
"definitions.repo-deployments.items.properties.creator.properties.organizations_url.type" = "string"
"definitions.repo-deployments.items.properties.creator.properties.received_events_url.type" = "string"
"definitions.repo-deployments.items.properties.creator.properties.repos_url.type" = "string"
"definitions.repo-deployments.items.properties.creator.properties.site_admin.type" = "boolean"
"definitions.repo-deployments.items.properties.creator.properties.starred_url.type" = "string"
"definitions.repo-deployments.items.properties.creator.properties.subscriptions_url.type" = "string"
"definitions.repo-deployments.items.properties.creator.properties.type.type" = "string"
"definitions.repo-deployments.items.properties.creator.properties.url.type" = "string"
"definitions.repo-deployments.items.properties.creator.type" = "object"
"definitions.repo-deployments.items.properties.description.type" = "string"
"definitions.repo-deployments.items.properties.id.type" = "integer"
"definitions.repo-deployments.items.properties.payload.type" = "string"
"definitions.repo-deployments.items.properties.sha.type" = "string"
"definitions.repo-deployments.items.properties.statuses_url.type" = "string"
"definitions.repo-deployments.items.properties.updated_at.type" = "string"
"definitions.repo-deployments.items.properties.url.type" = "string"
"definitions.repo-deployments.items.type" = "object"
"definitions.repo-deployments.type" = "array"
"definitions.repo.properties.clone_url.type" = "string"
"definitions.repo.properties.created_at.description" = "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ"
"definitions.repo.properties.created_at.type" = "string"
"definitions.repo.properties.description.type" = "string"
"definitions.repo.properties.fork.type" = "boolean"
"definitions.repo.properties.forks.type" = "integer"
"definitions.repo.properties.forks_count.type" = "integer"
"definitions.repo.properties.full_name.type" = "string"
"definitions.repo.properties.git_url.type" = "string"
"definitions.repo.properties.has_downloads.type" = "boolean"
"definitions.repo.properties.has_issues.type" = "boolean"
"definitions.repo.properties.has_wiki.type" = "boolean"
"definitions.repo.properties.homepage.type" = "string"
"definitions.repo.properties.html_url.type" = "string"
"definitions.repo.properties.id.type" = "integer"
"definitions.repo.properties.language.type" = "string"
"definitions.repo.properties.master_branch.type" = "string"
"definitions.repo.properties.mirror_url.type" = "string"
"definitions.repo.properties.name.type" = "string"
"definitions.repo.properties.open_issues.type" = "integer"
"definitions.repo.properties.open_issues_count.type" = "integer"
"definitions.repo.properties.organization.properties.avatar_url.type" = "string"
"definitions.repo.properties.organization.properties.gravatar_id.type" = "string"
"definitions.repo.properties.organization.properties.id.type" = "integer"
"definitions.repo.properties.organization.properties.login.type" = "string"
"definitions.repo.properties.organization.properties.type.type" = "string"
"definitions.repo.properties.organization.properties.url.type" = "string"
"definitions.repo.properties.organization.type" = "object"
"definitions.repo.properties.owner.properties.avatar_url.type" = "string"
"definitions.repo.properties.owner.properties.gravatar_id.type" = "string"
"definitions.repo.properties.owner.properties.id.type" = "integer"
"definitions.repo.properties.owner.properties.login.type" = "string"
"definitions.repo.properties.owner.properties.url.type" = "string"
"definitions.repo.properties.owner.type" = "object"
"definitions.repo.properties.parent.description" = "Is present when the repo is a fork. Parent is the repo this repo was forked from."
"definitions.repo.properties.parent.properties.clone_url.type" = "string"
"definitions.repo.properties.parent.properties.created_at.description" = "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ"
"definitions.repo.properties.parent.properties.created_at.type" = "string"
"definitions.repo.properties.parent.properties.description.type" = "string"
"definitions.repo.properties.parent.properties.fork.type" = "boolean"
"definitions.repo.properties.parent.properties.forks.type" = "integer"
"definitions.repo.properties.parent.properties.forks_count.type" = "integer"
"definitions.repo.properties.parent.properties.full_name.type" = "string"
"definitions.repo.properties.parent.properties.git_url.type" = "string"
"definitions.repo.properties.parent.properties.homepage.type" = "string"
"definitions.repo.properties.parent.properties.html_url.type" = "string"
"definitions.repo.properties.parent.properties.id.type" = "integer"
"definitions.repo.properties.parent.properties.language.type" = "string"
"definitions.repo.properties.parent.properties.master_branch.type" = "string"
"definitions.repo.properties.parent.properties.mirror_url.type" = "string"
"definitions.repo.properties.parent.properties.name.type" = "string"
"definitions.repo.properties.parent.properties.open_issues.type" = "integer"
"definitions.repo.properties.parent.properties.open_issues_count.type" = "integer"
"definitions.repo.properties.parent.properties.owner.properties.avatar_url.type" = "string"
"definitions.repo.properties.parent.properties.owner.properties.gravatar_id.type" = "string"
"definitions.repo.properties.parent.properties.owner.properties.id.type" = "integer"
"definitions.repo.properties.parent.properties.owner.properties.login.type" = "string"
"definitions.repo.properties.parent.properties.owner.properties.url.type" = "string"
"definitions.repo.properties.parent.properties.owner.type" = "object"
"definitions.repo.properties.parent.properties.private.type" = "boolean"
"definitions.repo.properties.parent.properties.pushed_at.description" = "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ"
"definitions.repo.properties.parent.properties.pushed_at.type" = "string"
"definitions.repo.properties.parent.properties.size.type" = "integer"
"definitions.repo.properties.parent.properties.ssh_url.type" = "string"
"definitions.repo.properties.parent.properties.svn_url.type" = "string"
"definitions.repo.properties.parent.properties.updated_at.description" = "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ"
"definitions.repo.properties.parent.properties.updated_at.type" = "string"
"definitions.repo.properties.parent.properties.url.type" = "string"
"definitions.repo.properties.parent.properties.watchers.type" = "integer"
"definitions.repo.properties.parent.properties.watchers_count.type" = "integer"
"definitions.repo.properties.parent.type" = "object"
"definitions.repo.properties.private.type" = "boolean"
"definitions.repo.properties.pushed_at.description" = "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ"
"definitions.repo.properties.pushed_at.type" = "string"
"definitions.repo.properties.size.type" = "integer"
"definitions.repo.properties.source.description" = "Is present when the repo is a fork. Source is the ultimate source for the network."
"definitions.repo.properties.source.properties.clone_url.type" = "string"
"definitions.repo.properties.source.properties.created_at.description" = "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ"
"definitions.repo.properties.source.properties.created_at.type" = "string"
"definitions.repo.properties.source.properties.description.type" = "string"
"definitions.repo.properties.source.properties.fork.type" = "boolean"
"definitions.repo.properties.source.properties.forks.type" = "integer"
"definitions.repo.properties.source.properties.forks_count.type" = "integer"
"definitions.repo.properties.source.properties.full_name.type" = "string"
"definitions.repo.properties.source.properties.git_url.type" = "string"
"definitions.repo.properties.source.properties.homepage.type" = "string"
"definitions.repo.properties.source.properties.html_url.type" = "string"
"definitions.repo.properties.source.properties.id.type" = "integer"
"definitions.repo.properties.source.properties.language.type" = "string"
"definitions.repo.properties.source.properties.master_branch.type" = "string"
"definitions.repo.properties.source.properties.mirror_url.type" = "string"
"definitions.repo.properties.source.properties.name.type" = "string"
"definitions.repo.properties.source.properties.open_issues.type" = "integer"
"definitions.repo.properties.source.properties.open_issues_count.type" = "integer"
"definitions.repo.properties.source.properties.owner.properties.avatar_url.type" = "string"
"definitions.repo.properties.source.properties.owner.properties.gravatar_id.type" = "string"
"definitions.repo.properties.source.properties.owner.properties.id.type" = "integer"
"definitions.repo.properties.source.properties.owner.properties.login.type" = "string"
"definitions.repo.properties.source.properties.owner.properties.url.type" = "string"
"definitions.repo.properties.source.properties.owner.type" = "object"
"definitions.repo.properties.source.properties.private.type" = "boolean"
"definitions.repo.properties.source.properties.pushed_at.description" = "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ"
"definitions.repo.properties.source.properties.pushed_at.type" = "string"
"definitions.repo.properties.source.properties.size.type" = "integer"
"definitions.repo.properties.source.properties.ssh_url.type" = "string"
"definitions.repo.properties.source.properties.svn_url.type" = "string"
"definitions.repo.properties.source.properties.updated_at.description" = "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ"
"definitions.repo.properties.source.properties.updated_at.type" = "string"
"definitions.repo.properties.source.properties.url.type" = "string"
"definitions.repo.properties.source.properties.watchers.type" = "integer"
"definitions.repo.properties.source.properties.watchers_count.type" = "integer"
"definitions.repo.properties.source.type" = "object"
"definitions.repo.properties.ssh_url.type" = "string"
"definitions.repo.properties.svn_url.type" = "string"
"definitions.repo.properties.updated_at.description" = "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ"
"definitions.repo.properties.updated_at.type" = "string"
"definitions.repo.properties.url.type" = "string"
"definitions.repo.properties.watchers.type" = "integer"
"definitions.repo.properties.watchers_count.type" = "integer"
"definitions.repo.type" = "object"
"definitions.repoComments.items.properties.body.type" = "string"
"definitions.repoComments.items.properties.commit_id.type" = "string"
"definitions.repoComments.items.properties.created_at.description" = "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ"
"definitions.repoComments.items.properties.created_at.type" = "string"
"definitions.repoComments.items.properties.html_url.type" = "string"
"definitions.repoComments.items.properties.id.type" = "integer"
"definitions.repoComments.items.properties.line.type" = "integer"
"definitions.repoComments.items.properties.path.type" = "string"
"definitions.repoComments.items.properties.position.type" = "integer"
"definitions.repoComments.items.properties.updated_at.description" = "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ"
"definitions.repoComments.items.properties.updated_at.type" = "string"
"definitions.repoComments.items.properties.url.type" = "string"
"definitions.repoComments.items.properties.user.properties.avatar_url.type" = "string"
"definitions.repoComments.items.properties.user.properties.gravatar_id.type" = "string"
"definitions.repoComments.items.properties.user.properties.id.type" = "integer"
"definitions.repoComments.items.properties.user.properties.login.type" = "string"
"definitions.repoComments.items.properties.user.properties.url.type" = "string"
"definitions.repoComments.items.properties.user.type" = "object"
"definitions.repoComments.items.type" = "object"
"definitions.repoComments.type" = "array"
"definitions.repoCommit.properties.author.properties.date.description" = "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ"
"definitions.repoCommit.properties.author.properties.date.type" = "string"
"definitions.repoCommit.properties.author.properties.email.type" = "string"
"definitions.repoCommit.properties.author.properties.name.type" = "string"
"definitions.repoCommit.properties.author.type" = "object"
"definitions.repoCommit.properties.committer.properties.date.description" = "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ"
"definitions.repoCommit.properties.committer.properties.date.type" = "string"
"definitions.repoCommit.properties.committer.properties.email.type" = "string"
"definitions.repoCommit.properties.committer.properties.name.type" = "string"
"definitions.repoCommit.properties.committer.type" = "object"
"definitions.repoCommit.properties.message.type" = "string"
"definitions.repoCommit.properties.parents.items.properties.sha.type" = "string"
"definitions.repoCommit.properties.parents.items.properties.url.type" = "string"
"definitions.repoCommit.properties.parents.items.type" = "object"
"definitions.repoCommit.properties.parents.type" = "array"
"definitions.repoCommit.properties.sha.type" = "string"
"definitions.repoCommit.properties.tree.properties.sha.type" = "string"
"definitions.repoCommit.properties.tree.properties.url.type" = "string"
"definitions.repoCommit.properties.tree.type" = "object"
"definitions.repoCommit.properties.url.type" = "string"
"definitions.repoCommit.type" = "object"
"definitions.repoCommitBody.properties.author.properties.date.type" = "string"
"definitions.repoCommitBody.properties.author.properties.email.type" = "string"
"definitions.repoCommitBody.properties.author.properties.name.type" = "string"
"definitions.repoCommitBody.properties.author.type" = "object"
"definitions.repoCommitBody.properties.message.type" = "string"
"definitions.repoCommitBody.properties.parents.items.type" = "string"
"definitions.repoCommitBody.properties.parents.type" = "array"
"definitions.repoCommitBody.properties.tree.type" = "string"
"definitions.repoCommitBody.required.length" = 3
"definitions.repoCommitBody.required[0]" = "message"
"definitions.repoCommitBody.required[1]" = "parents"
"definitions.repoCommitBody.required[2]" = "tree"
"definitions.repoCommitBody.type" = "object"
"definitions.repoEdit.properties.description.type" = "string"
"definitions.repoEdit.properties.has_downloads.type" = "boolean"
"definitions.repoEdit.properties.has_issues.type" = "boolean"
"definitions.repoEdit.properties.has_wiki.type" = "boolean"
"definitions.repoEdit.properties.homepage.type" = "string"
"definitions.repoEdit.properties.name.type" = "string"
"definitions.repoEdit.properties.private.type" = "boolean"
"definitions.repoEdit.type" = "object"
"definitions.repos.items.properties.clone_url.type" = "string"
"definitions.repos.items.properties.created_at.description" = "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ"
"definitions.repos.items.properties.created_at.type" = "string"
"definitions.repos.items.properties.description.type" = "string"
"definitions.repos.items.properties.fork.type" = "boolean"
"definitions.repos.items.properties.forks.type" = "integer"
"definitions.repos.items.properties.forks_count.type" = "integer"
"definitions.repos.items.properties.full_name.type" = "string"
"definitions.repos.items.properties.git_url.type" = "string"
"definitions.repos.items.properties.homepage.type" = "string"
"definitions.repos.items.properties.html_url.type" = "string"
"definitions.repos.items.properties.id.type" = "integer"
"definitions.repos.items.properties.language.type" = "string"
"definitions.repos.items.properties.master_branch.type" = "string"
"definitions.repos.items.properties.mirror_url.type" = "string"
"definitions.repos.items.properties.name.type" = "string"
"definitions.repos.items.properties.open_issues.type" = "integer"
"definitions.repos.items.properties.open_issues_count.type" = "integer"
"definitions.repos.items.properties.owner.properties.avatar_url.type" = "string"
"definitions.repos.items.properties.owner.properties.gravatar_id.type" = "string"
"definitions.repos.items.properties.owner.properties.id.type" = "integer"
"definitions.repos.items.properties.owner.properties.login.type" = "string"
"definitions.repos.items.properties.owner.properties.url.type" = "string"
"definitions.repos.items.properties.owner.type" = "object"
"definitions.repos.items.properties.private.type" = "boolean"
"definitions.repos.items.properties.pushed_at.description" = "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ"
"definitions.repos.items.properties.pushed_at.type" = "string"
"definitions.repos.items.properties.size.type" = "integer"
"definitions.repos.items.properties.ssh_url.type" = "string"
"definitions.repos.items.properties.svn_url.type" = "string"
"definitions.repos.items.properties.updated_at.description" = "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ"
"definitions.repos.items.properties.updated_at.type" = "string"
"definitions.repos.items.properties.url.type" = "string"
"definitions.repos.items.properties.watchers.type" = "integer"
"definitions.repos.items.properties.watchers_count.type" = "integer"
"definitions.repos.type" = "array"
"definitions.repositories.items.properties.description.type" = "string"
"definitions.repositories.items.properties.fork.type" = "boolean"
"definitions.repositories.items.properties.full_name.type" = "string"
"definitions.repositories.items.properties.html_url.type" = "string"
"definitions.repositories.items.properties.id.type" = "integer"
"definitions.repositories.items.properties.name.type" = "string"
"definitions.repositories.items.properties.owner.properties.avatar_url.type" = "string"
"definitions.repositories.items.properties.owner.properties.gravatar_id.type" = "string"
"definitions.repositories.items.properties.owner.properties.id.type" = "integer"
"definitions.repositories.items.properties.owner.properties.login.type" = "string"
"definitions.repositories.items.properties.owner.properties.url.type" = "string"
"definitions.repositories.items.properties.owner.type" = "object"
"definitions.repositories.items.properties.private.type" = "boolean"
"definitions.repositories.items.properties.url.type" = "string"
"definitions.repositories.items.type" = "object"
"definitions.repositories.type" = "array"
"definitions.search-code.properties.items.items.properties.git_url.type" = "string"
"definitions.search-code.properties.items.items.properties.html_url.type" = "string"
"definitions.search-code.properties.items.items.properties.name.type" = "string"
"definitions.search-code.properties.items.items.properties.path.type" = "string"
"definitions.search-code.properties.items.items.properties.repository.properties.archive_url.type" = "string"
"definitions.search-code.properties.items.items.properties.repository.properties.assignees_url.type" = "string"
"definitions.search-code.properties.items.items.properties.repository.properties.blobs_url.type" = "string"
"definitions.search-code.properties.items.items.properties.repository.properties.branches_url.type" = "string"
"definitions.search-code.properties.items.items.properties.repository.properties.collaborators_url.type" = "string"
"definitions.search-code.properties.items.items.properties.repository.properties.comments_url.type" = "string"
"definitions.search-code.properties.items.items.properties.repository.properties.commits_url.type" = "string"
"definitions.search-code.properties.items.items.properties.repository.properties.compare_url.type" = "string"
"definitions.search-code.properties.items.items.properties.repository.properties.contents_url.type" = "string"
"definitions.search-code.properties.items.items.properties.repository.properties.contributors_url.type" = "string"
"definitions.search-code.properties.items.items.properties.repository.properties.description.type" = "string"
"definitions.search-code.properties.items.items.properties.repository.properties.downloads_url.type" = "string"
"definitions.search-code.properties.items.items.properties.repository.properties.events_url.type" = "string"
"definitions.search-code.properties.items.items.properties.repository.properties.fork.type" = "boolean"
"definitions.search-code.properties.items.items.properties.repository.properties.forks_url.type" = "string"
"definitions.search-code.properties.items.items.properties.repository.properties.full_name.type" = "string"
"definitions.search-code.properties.items.items.properties.repository.properties.git_commits_url.type" = "string"
"definitions.search-code.properties.items.items.properties.repository.properties.git_refs_url.type" = "string"
"definitions.search-code.properties.items.items.properties.repository.properties.git_tags_url.type" = "string"
"definitions.search-code.properties.items.items.properties.repository.properties.hooks_url.type" = "string"
"definitions.search-code.properties.items.items.properties.repository.properties.html_url.type" = "string"
"definitions.search-code.properties.items.items.properties.repository.properties.id.type" = "integer"
"definitions.search-code.properties.items.items.properties.repository.properties.issue_comment_url.type" = "string"
"definitions.search-code.properties.items.items.properties.repository.properties.issue_events_url.type" = "string"
"definitions.search-code.properties.items.items.properties.repository.properties.issues_url.type" = "string"
"definitions.search-code.properties.items.items.properties.repository.properties.keys_url.type" = "string"
"definitions.search-code.properties.items.items.properties.repository.properties.labels_url.type" = "string"
"definitions.search-code.properties.items.items.properties.repository.properties.languages_url.type" = "string"
"definitions.search-code.properties.items.items.properties.repository.properties.merges_url.type" = "string"
"definitions.search-code.properties.items.items.properties.repository.properties.milestones_url.type" = "string"
"definitions.search-code.properties.items.items.properties.repository.properties.name.type" = "string"
"definitions.search-code.properties.items.items.properties.repository.properties.notifications_url.type" = "string"
"definitions.search-code.properties.items.items.properties.repository.properties.owner.properties.avatar_url.type" = "string"
"definitions.search-code.properties.items.items.properties.repository.properties.owner.properties.events_url.type" = "string"
"definitions.search-code.properties.items.items.properties.repository.properties.owner.properties.followers_url.type" = "string"
"definitions.search-code.properties.items.items.properties.repository.properties.owner.properties.following_url.type" = "string"
"definitions.search-code.properties.items.items.properties.repository.properties.owner.properties.gists_url.type" = "string"
"definitions.search-code.properties.items.items.properties.repository.properties.owner.properties.gravatar_id.type" = "string"
"definitions.search-code.properties.items.items.properties.repository.properties.owner.properties.html_url.type" = "string"
"definitions.search-code.properties.items.items.properties.repository.properties.owner.properties.id.type" = "integer"
"definitions.search-code.properties.items.items.properties.repository.properties.owner.properties.login.type" = "string"
"definitions.search-code.properties.items.items.properties.repository.properties.owner.properties.organizations_url.type" = "string"
"definitions.search-code.properties.items.items.properties.repository.properties.owner.properties.received_events_url.type" = "string"
"definitions.search-code.properties.items.items.properties.repository.properties.owner.properties.repos_url.type" = "string"
"definitions.search-code.properties.items.items.properties.repository.properties.owner.properties.starred_url.type" = "string"
"definitions.search-code.properties.items.items.properties.repository.properties.owner.properties.subscriptions_url.type" = "string"
"definitions.search-code.properties.items.items.properties.repository.properties.owner.properties.type.type" = "string"
"definitions.search-code.properties.items.items.properties.repository.properties.owner.properties.url.type" = "string"
"definitions.search-code.properties.items.items.properties.repository.properties.owner.type" = "object"
"definitions.search-code.properties.items.items.properties.repository.properties.private.type" = "boolean"
"definitions.search-code.properties.items.items.properties.repository.properties.pulls_url.type" = "string"
"definitions.search-code.properties.items.items.properties.repository.properties.stargazers_url.type" = "string"
"definitions.search-code.properties.items.items.properties.repository.properties.statuses_url.type" = "string"
"definitions.search-code.properties.items.items.properties.repository.properties.subscribers_url.type" = "string"
"definitions.search-code.properties.items.items.properties.repository.properties.subscription_url.type" = "string"
"definitions.search-code.properties.items.items.properties.repository.properties.tags_url.type" = "string"
"definitions.search-code.properties.items.items.properties.repository.properties.teams_url.type" = "string"
"definitions.search-code.properties.items.items.properties.repository.properties.trees_url.type" = "string"
"definitions.search-code.properties.items.items.properties.repository.properties.url.type" = "string"
"definitions.search-code.properties.items.items.properties.repository.type" = "object"
"definitions.search-code.properties.items.items.properties.score.type" = "number"
"definitions.search-code.properties.items.items.properties.sha.type" = "string"
"definitions.search-code.properties.items.items.properties.url.type" = "string"
"definitions.search-code.properties.items.items.type" = "object"
"definitions.search-code.properties.items.type" = "array"
"definitions.search-code.properties.total_count.type" = "integer"
"definitions.search-code.type" = "object"
"definitions.search-issues-by-keyword.properties.issues.items.properties.body.type" = "string"
"definitions.search-issues-by-keyword.properties.issues.items.properties.comments.type" = "integer"
"definitions.search-issues-by-keyword.properties.issues.items.properties.created_at.type" = "string"
"definitions.search-issues-by-keyword.properties.issues.items.properties.gravatar_id.type" = "string"
"definitions.search-issues-by-keyword.properties.issues.items.properties.html_url.type" = "string"
"definitions.search-issues-by-keyword.properties.issues.items.properties.labels.items.type" = "string"
"definitions.search-issues-by-keyword.properties.issues.items.properties.labels.type" = "array"
"definitions.search-issues-by-keyword.properties.issues.items.properties.number.type" = "integer"
"definitions.search-issues-by-keyword.properties.issues.items.properties.position.type" = "integer"
"definitions.search-issues-by-keyword.properties.issues.items.properties.state.type" = "string"
"definitions.search-issues-by-keyword.properties.issues.items.properties.title.type" = "string"
"definitions.search-issues-by-keyword.properties.issues.items.properties.updated_at.type" = "string"
"definitions.search-issues-by-keyword.properties.issues.items.properties.user.type" = "string"
"definitions.search-issues-by-keyword.properties.issues.items.properties.votes.type" = "integer"
"definitions.search-issues-by-keyword.properties.issues.items.type" = "object"
"definitions.search-issues-by-keyword.properties.issues.type" = "array"
"definitions.search-issues-by-keyword.type" = "object"
"definitions.search-issues.properties.items.items.properties.assignee.type" = "null"
"definitions.search-issues.properties.items.items.properties.body.type" = "string"
"definitions.search-issues.properties.items.items.properties.closed_at.type" = "null"
"definitions.search-issues.properties.items.items.properties.comments.type" = "integer"
"definitions.search-issues.properties.items.items.properties.comments_url.type" = "string"
"definitions.search-issues.properties.items.items.properties.created_at.type" = "string"
"definitions.search-issues.properties.items.items.properties.events_url.type" = "string"
"definitions.search-issues.properties.items.items.properties.html_url.type" = "string"
"definitions.search-issues.properties.items.items.properties.id.type" = "integer"
"definitions.search-issues.properties.items.items.properties.labels.items.properties.color.type" = "string"
"definitions.search-issues.properties.items.items.properties.labels.items.properties.name.type" = "string"
"definitions.search-issues.properties.items.items.properties.labels.items.properties.url.type" = "string"
"definitions.search-issues.properties.items.items.properties.labels.items.type" = "object"
"definitions.search-issues.properties.items.items.properties.labels.type" = "array"
"definitions.search-issues.properties.items.items.properties.labels_url.type" = "string"
"definitions.search-issues.properties.items.items.properties.milestone.type" = "null"
"definitions.search-issues.properties.items.items.properties.number.type" = "integer"
"definitions.search-issues.properties.items.items.properties.pull_request.properties.diff_url.type" = "null"
"definitions.search-issues.properties.items.items.properties.pull_request.properties.html_url.type" = "null"
"definitions.search-issues.properties.items.items.properties.pull_request.properties.patch_url.type" = "null"
"definitions.search-issues.properties.items.items.properties.pull_request.type" = "object"
"definitions.search-issues.properties.items.items.properties.score.type" = "number"
"definitions.search-issues.properties.items.items.properties.state.type" = "string"
"definitions.search-issues.properties.items.items.properties.title.type" = "string"
"definitions.search-issues.properties.items.items.properties.updated_at.type" = "string"
"definitions.search-issues.properties.items.items.properties.url.type" = "string"
"definitions.search-issues.properties.items.items.properties.user.properties.avatar_url.type" = "string"
"definitions.search-issues.properties.items.items.properties.user.properties.events_url.type" = "string"
"definitions.search-issues.properties.items.items.properties.user.properties.followers_url.type" = "string"
"definitions.search-issues.properties.items.items.properties.user.properties.following_url.type" = "string"
"definitions.search-issues.properties.items.items.properties.user.properties.gists_url.type" = "string"
"definitions.search-issues.properties.items.items.properties.user.properties.gravatar_id.type" = "string"
"definitions.search-issues.properties.items.items.properties.user.properties.html_url.type" = "string"
"definitions.search-issues.properties.items.items.properties.user.properties.id.type" = "integer"
"definitions.search-issues.properties.items.items.properties.user.properties.login.type" = "string"
"definitions.search-issues.properties.items.items.properties.user.properties.organizations_url.type" = "string"
"definitions.search-issues.properties.items.items.properties.user.properties.received_events_url.type" = "string"
"definitions.search-issues.properties.items.items.properties.user.properties.repos_url.type" = "string"
"definitions.search-issues.properties.items.items.properties.user.properties.starred_url.type" = "string"
"definitions.search-issues.properties.items.items.properties.user.properties.subscriptions_url.type" = "string"
"definitions.search-issues.properties.items.items.properties.user.properties.type.type" = "string"
"definitions.search-issues.properties.items.items.properties.user.properties.url.type" = "string"
"definitions.search-issues.properties.items.items.properties.user.type" = "object"
"definitions.search-issues.properties.items.items.type" = "object"
"definitions.search-issues.properties.items.type" = "array"
"definitions.search-issues.properties.total_count.type" = "integer"
"definitions.search-issues.type" = "object"
"definitions.search-repositories-by-keyword.properties.repositories.items.properties.created.type" = "string"
"definitions.search-repositories-by-keyword.properties.repositories.items.properties.created_at.type" = "string"
"definitions.search-repositories-by-keyword.properties.repositories.items.properties.description.type" = "string"
"definitions.search-repositories-by-keyword.properties.repositories.items.properties.followers.type" = "integer"
"definitions.search-repositories-by-keyword.properties.repositories.items.properties.fork.type" = "boolean"
"definitions.search-repositories-by-keyword.properties.repositories.items.properties.forks.type" = "integer"
"definitions.search-repositories-by-keyword.properties.repositories.items.properties.has_downloads.type" = "boolean"
"definitions.search-repositories-by-keyword.properties.repositories.items.properties.has_issues.type" = "boolean"
"definitions.search-repositories-by-keyword.properties.repositories.items.properties.has_wiki.type" = "boolean"
"definitions.search-repositories-by-keyword.properties.repositories.items.properties.homepage.type" = "string"
"definitions.search-repositories-by-keyword.properties.repositories.items.properties.language.type" = "string"
"definitions.search-repositories-by-keyword.properties.repositories.items.properties.name.type" = "string"
"definitions.search-repositories-by-keyword.properties.repositories.items.properties.open_issues.type" = "integer"
"definitions.search-repositories-by-keyword.properties.repositories.items.properties.owner.type" = "string"
"definitions.search-repositories-by-keyword.properties.repositories.items.properties.private.type" = "boolean"
"definitions.search-repositories-by-keyword.properties.repositories.items.properties.pushed.type" = "string"
"definitions.search-repositories-by-keyword.properties.repositories.items.properties.pushed_at.type" = "string"
"definitions.search-repositories-by-keyword.properties.repositories.items.properties.score.type" = "number"
"definitions.search-repositories-by-keyword.properties.repositories.items.properties.size.type" = "integer"
"definitions.search-repositories-by-keyword.properties.repositories.items.properties.type.type" = "string"
"definitions.search-repositories-by-keyword.properties.repositories.items.properties.url.type" = "string"
"definitions.search-repositories-by-keyword.properties.repositories.items.properties.username.type" = "string"
"definitions.search-repositories-by-keyword.properties.repositories.items.properties.watchers.type" = "integer"
"definitions.search-repositories-by-keyword.properties.repositories.items.type" = "object"
"definitions.search-repositories-by-keyword.properties.repositories.type" = "array"
"definitions.search-repositories-by-keyword.type" = "object"
"definitions.search-repositories.properties.items.items.properties.created_at.description" = "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ"
"definitions.search-repositories.properties.items.items.properties.created_at.type" = "string"
"definitions.search-repositories.properties.items.items.properties.default_branch.type" = "string"
"definitions.search-repositories.properties.items.items.properties.description.type" = "string"
"definitions.search-repositories.properties.items.items.properties.fork.type" = "boolean"
"definitions.search-repositories.properties.items.items.properties.forks.type" = "integer"
"definitions.search-repositories.properties.items.items.properties.forks_count.type" = "integer"
"definitions.search-repositories.properties.items.items.properties.full_name.type" = "string"
"definitions.search-repositories.properties.items.items.properties.homepage.type" = "string"
"definitions.search-repositories.properties.items.items.properties.html_url.type" = "string"
"definitions.search-repositories.properties.items.items.properties.id.type" = "integer"
"definitions.search-repositories.properties.items.items.properties.language.type" = "string"
"definitions.search-repositories.properties.items.items.properties.master_branch.type" = "string"
"definitions.search-repositories.properties.items.items.properties.name.type" = "string"
"definitions.search-repositories.properties.items.items.properties.open_issues.type" = "integer"
"definitions.search-repositories.properties.items.items.properties.open_issues_count.type" = "integer"
"definitions.search-repositories.properties.items.items.properties.owner.properties.avatar_url.type" = "string"
"definitions.search-repositories.properties.items.items.properties.owner.properties.gravatar_id.type" = "string"
"definitions.search-repositories.properties.items.items.properties.owner.properties.id.type" = "integer"
"definitions.search-repositories.properties.items.items.properties.owner.properties.login.type" = "string"
"definitions.search-repositories.properties.items.items.properties.owner.properties.received_events_url.type" = "string"
"definitions.search-repositories.properties.items.items.properties.owner.properties.type.type" = "string"
"definitions.search-repositories.properties.items.items.properties.owner.properties.url.type" = "string"
"definitions.search-repositories.properties.items.items.properties.owner.type" = "object"
"definitions.search-repositories.properties.items.items.properties.private.type" = "boolean"
"definitions.search-repositories.properties.items.items.properties.pushed_at.description" = "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ"
"definitions.search-repositories.properties.items.items.properties.pushed_at.type" = "string"
"definitions.search-repositories.properties.items.items.properties.score.type" = "number"
"definitions.search-repositories.properties.items.items.properties.size.type" = "integer"
"definitions.search-repositories.properties.items.items.properties.updated_at.description" = "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ"
"definitions.search-repositories.properties.items.items.properties.updated_at.type" = "string"
"definitions.search-repositories.properties.items.items.properties.url.type" = "string"
"definitions.search-repositories.properties.items.items.properties.watchers.type" = "integer"
"definitions.search-repositories.properties.items.items.properties.watchers_count.type" = "integer"
"definitions.search-repositories.properties.items.items.type" = "object"
"definitions.search-repositories.properties.items.type" = "array"
"definitions.search-repositories.properties.total_count.type" = "integer"
"definitions.search-repositories.type" = "object"
"definitions.search-user-by-email.properties.user.properties.blog.type" = "string"
"definitions.search-user-by-email.properties.user.properties.company.type" = "string"
"definitions.search-user-by-email.properties.user.properties.created.type" = "string"
"definitions.search-user-by-email.properties.user.properties.created_at.type" = "string"
"definitions.search-user-by-email.properties.user.properties.email.type" = "string"
"definitions.search-user-by-email.properties.user.properties.followers_count.type" = "integer"
"definitions.search-user-by-email.properties.user.properties.following_count.type" = "integer"
"definitions.search-user-by-email.properties.user.properties.gravatar_id.type" = "string"
"definitions.search-user-by-email.properties.user.properties.id.type" = "integer"
"definitions.search-user-by-email.properties.user.properties.location.type" = "string"
"definitions.search-user-by-email.properties.user.properties.login.type" = "string"
"definitions.search-user-by-email.properties.user.properties.name.type" = "string"
"definitions.search-user-by-email.properties.user.properties.public_gist_count.type" = "integer"
"definitions.search-user-by-email.properties.user.properties.public_repo_count.type" = "integer"
"definitions.search-user-by-email.properties.user.properties.type.type" = "string"
"definitions.search-user-by-email.properties.user.type" = "object"
"definitions.search-user-by-email.type" = "object"
"definitions.search-users-by-keyword.properties.users.items.properties.created.type" = "string"
"definitions.search-users-by-keyword.properties.users.items.properties.created_at.type" = "string"
"definitions.search-users-by-keyword.properties.users.items.properties.followers.type" = "integer"
"definitions.search-users-by-keyword.properties.users.items.properties.followers_count.type" = "integer"
"definitions.search-users-by-keyword.properties.users.items.properties.fullname.type" = "string"
"definitions.search-users-by-keyword.properties.users.items.properties.gravatar_id.type" = "string"
"definitions.search-users-by-keyword.properties.users.items.properties.id.type" = "string"
"definitions.search-users-by-keyword.properties.users.items.properties.language.type" = "string"
"definitions.search-users-by-keyword.properties.users.items.properties.location.type" = "string"
"definitions.search-users-by-keyword.properties.users.items.properties.login.type" = "string"
"definitions.search-users-by-keyword.properties.users.items.properties.name.type" = "string"
"definitions.search-users-by-keyword.properties.users.items.properties.public_repo_count.type" = "integer"
"definitions.search-users-by-keyword.properties.users.items.properties.repos.type" = "integer"
"definitions.search-users-by-keyword.properties.users.items.properties.score.type" = "number"
"definitions.search-users-by-keyword.properties.users.items.properties.type.type" = "string"
"definitions.search-users-by-keyword.properties.users.items.properties.username.type" = "string"
"definitions.search-users-by-keyword.properties.users.items.type" = "object"
"definitions.search-users-by-keyword.properties.users.type" = "array"
"definitions.search-users-by-keyword.type" = "object"
"definitions.search-users.properties.items.items.properties.avatar_url.type" = "string"
"definitions.search-users.properties.items.items.properties.followers_url.type" = "string"
"definitions.search-users.properties.items.items.properties.gravatar_id.type" = "string"
"definitions.search-users.properties.items.items.properties.html_url.type" = "string"
"definitions.search-users.properties.items.items.properties.id.type" = "integer"
"definitions.search-users.properties.items.items.properties.login.type" = "string"
"definitions.search-users.properties.items.items.properties.organizations_url.type" = "string"
"definitions.search-users.properties.items.items.properties.received_events_url.type" = "string"
"definitions.search-users.properties.items.items.properties.repos_url.type" = "string"
"definitions.search-users.properties.items.items.properties.score.type" = "number"
"definitions.search-users.properties.items.items.properties.subscriptions_url.type" = "string"
"definitions.search-users.properties.items.items.properties.type.type" = "string"
"definitions.search-users.properties.items.items.properties.url.type" = "string"
"definitions.search-users.properties.items.items.type" = "object"
"definitions.search-users.properties.items.type" = "array"
"definitions.search-users.properties.total_count.type" = "integer"
"definitions.search-users.type" = "object"
"definitions.stargazers.items.properties.avatar_url.type" = "string"
"definitions.stargazers.items.properties.gravatar_id.type" = "string"
"definitions.stargazers.items.properties.id.type" = "integer"
"definitions.stargazers.items.properties.login.type" = "string"
"definitions.stargazers.items.properties.url.type" = "string"
"definitions.stargazers.items.type" = "object"
"definitions.stargazers.type" = "array"
"definitions.subscribition.properties.created_at.description" = "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ"
"definitions.subscribition.properties.created_at.type" = "string"
"definitions.subscribition.properties.ignored.type" = "boolean"
"definitions.subscribition.properties.reason.type" = "string"
"definitions.subscribition.properties.repository_url.type" = "string"
"definitions.subscribition.properties.subscribed.type" = "boolean"
"definitions.subscribition.properties.url.type" = "string"
"definitions.subscribition.type" = "object"
"definitions.subscribitionBody.properties.ignored.type" = "boolean"
"definitions.subscribitionBody.properties.subscribed.type" = "boolean"
"definitions.subscribitionBody.type" = "object"
"definitions.subscription.properties.created_at.type" = "string"
"definitions.subscription.properties.ignored.type" = "boolean"
"definitions.subscription.properties.reason.type" = "boolean"
"definitions.subscription.properties.subscribed.type" = "boolean"
"definitions.subscription.properties.thread_url.type" = "string"
"definitions.subscription.properties.url.type" = "string"
"definitions.subscription.type" = "object"
"definitions.tag.properties.message.type" = "string"
"definitions.tag.properties.object.properties.sha.type" = "string"
"definitions.tag.properties.object.properties.type.type" = "string"
"definitions.tag.properties.object.properties.url.type" = "string"
"definitions.tag.properties.object.type" = "object"
"definitions.tag.properties.sha.type" = "string"
"definitions.tag.properties.tag.type" = "string"
"definitions.tag.properties.tagger.properties.date.description" = "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ"
"definitions.tag.properties.tagger.properties.date.type" = "string"
"definitions.tag.properties.tagger.properties.email.type" = "string"
"definitions.tag.properties.tagger.properties.name.type" = "string"
"definitions.tag.properties.tagger.type" = "object"
"definitions.tag.properties.url.type" = "string"
"definitions.tag.type" = "object"
"definitions.tags.properties.message.description" = "String of the tag message."
"definitions.tags.properties.message.type" = "string"
"definitions.tags.properties.object.description" = "String of the SHA of the git object this is tagging."
"definitions.tags.properties.object.type" = "string"
"definitions.tags.properties.tag.type" = "string"
"definitions.tags.properties.tagger.properties.date.description" = "Timestamp of when this object was tagged."
"definitions.tags.properties.tagger.properties.date.type" = "string"
"definitions.tags.properties.tagger.properties.email.description" = "String of the email of the author of the tag."
"definitions.tags.properties.tagger.properties.email.type" = "string"
"definitions.tags.properties.tagger.properties.name.description" = "String of the name of the author of the tag."
"definitions.tags.properties.tagger.properties.name.type" = "string"
"definitions.tags.properties.tagger.type" = "object"
"definitions.tags.properties.type.description" = "String of the type of the object we’re tagging. Normally this is a commit but it can also be a tree or a blob."
"definitions.tags.properties.type.type" = "string"
"definitions.tags.required.length" = 5
"definitions.tags.required[0]" = "tag"
"definitions.tags.required[1]" = "message"
"definitions.tags.required[2]" = "object"
"definitions.tags.required[3]" = "type"
"definitions.tags.required[4]" = "tagger"
"definitions.tags.type" = "object"
"definitions.team.properties.id.type" = "integer"
"definitions.team.properties.members_count.type" = "integer"
"definitions.team.properties.name.type" = "string"
"definitions.team.properties.permission.type" = "string"
"definitions.team.properties.repos_count.type" = "integer"
"definitions.team.properties.url.type" = "string"
"definitions.team.type" = "object"
"definitions.teamMembership.properties.state.type" = "string"
"definitions.teamMembership.properties.url.type" = "string"
"definitions.teamMembership.type" = "object"
"definitions.teamRepos.items.properties.clone_url.type" = "string"
"definitions.teamRepos.items.properties.created_at.type" = "string"
"definitions.teamRepos.items.properties.description.type" = "string"
"definitions.teamRepos.items.properties.fork.type" = "boolean"
"definitions.teamRepos.items.properties.forks.type" = "integer"
"definitions.teamRepos.items.properties.forks_count.type" = "integer"
"definitions.teamRepos.items.properties.full_name.type" = "string"
"definitions.teamRepos.items.properties.git_url.type" = "string"
"definitions.teamRepos.items.properties.homepage.type" = "string"
"definitions.teamRepos.items.properties.html_url.type" = "string"
"definitions.teamRepos.items.properties.id.type" = "integer"
"definitions.teamRepos.items.properties.language.type" = "null"
"definitions.teamRepos.items.properties.master_branch.type" = "string"
"definitions.teamRepos.items.properties.mirror_url.type" = "string"
"definitions.teamRepos.items.properties.name.type" = "string"
"definitions.teamRepos.items.properties.open_issues.type" = "integer"
"definitions.teamRepos.items.properties.open_issues_count.type" = "integer"
"definitions.teamRepos.items.properties.owner.properties.avatar_url.type" = "string"
"definitions.teamRepos.items.properties.owner.properties.gravatar_id.type" = "string"
"definitions.teamRepos.items.properties.owner.properties.id.type" = "integer"
"definitions.teamRepos.items.properties.owner.properties.login.type" = "string"
"definitions.teamRepos.items.properties.owner.properties.url.type" = "string"
"definitions.teamRepos.items.properties.owner.type" = "object"
"definitions.teamRepos.items.properties.private.type" = "boolean"
"definitions.teamRepos.items.properties.pushed_at.type" = "string"
"definitions.teamRepos.items.properties.size.type" = "integer"
"definitions.teamRepos.items.properties.ssh_url.type" = "string"
"definitions.teamRepos.items.properties.svn_url.type" = "string"
"definitions.teamRepos.items.properties.updated_at.type" = "string"
"definitions.teamRepos.items.properties.url.type" = "string"
"definitions.teamRepos.items.properties.watchers.type" = "integer"
"definitions.teamRepos.items.properties.watchers_count.type" = "integer"
"definitions.teamRepos.items.type" = "object"
"definitions.teamRepos.type" = "array"
"definitions.teams-list.items.properties.id.type" = "integer"
"definitions.teams-list.items.properties.members_count.type" = "integer"
"definitions.teams-list.items.properties.name.type" = "string"
"definitions.teams-list.items.properties.organization.properties.avatar_url.type" = "string"
"definitions.teams-list.items.properties.organization.properties.id.type" = "integer"
"definitions.teams-list.items.properties.organization.properties.login.type" = "string"
"definitions.teams-list.items.properties.organization.properties.url.type" = "string"
"definitions.teams-list.items.properties.organization.type" = "object"
"definitions.teams-list.items.properties.permission.type" = "string"
"definitions.teams-list.items.properties.repos_count.type" = "integer"
"definitions.teams-list.items.properties.url.type" = "string"
"definitions.teams-list.items.type" = "object"
"definitions.teams-list.type" = "array"
"definitions.teams.items.properties.id.type" = "integer"
"definitions.teams.items.properties.name.type" = "string"
"definitions.teams.items.properties.url.type" = "string"
"definitions.teams.items.type" = "object"
"definitions.teams.type" = "array"
"definitions.tree.properties.sha.type" = "string"
"definitions.tree.properties.tree.items.properties.mode.type" = "string"
"definitions.tree.properties.tree.items.properties.path.type" = "string"
"definitions.tree.properties.tree.items.properties.sha.type" = "string"
"definitions.tree.properties.tree.items.properties.size.type" = "integer"
"definitions.tree.properties.tree.items.properties.type.type" = "string"
"definitions.tree.properties.tree.items.properties.url.type" = "string"
"definitions.tree.properties.tree.items.type" = "object"
"definitions.tree.properties.tree.type" = "array"
"definitions.tree.properties.url.type" = "string"
"definitions.tree.type" = "object"
"definitions.trees.properties.base_tree.type" = "string"
"definitions.trees.properties.sha.description" = "SHA1 checksum ID of the object in the tree."
"definitions.trees.properties.sha.type" = "string"
"definitions.trees.properties.tree.items.properties.mode.description" = "One of 100644 for file (blob), 100755 for executable (blob), 040000 for subdirectory (tree), 160000 for submodule (commit) or 120000 for a blob that specifies the path of a symlink."
"definitions.trees.properties.tree.items.properties.mode.enum.length" = 5
"definitions.trees.properties.tree.items.properties.mode.enum[0]" = "100644"
"definitions.trees.properties.tree.items.properties.mode.enum[1]" = "100755"
"definitions.trees.properties.tree.items.properties.mode.enum[2]" = "040000"
"definitions.trees.properties.tree.items.properties.mode.enum[3]" = "160000"
"definitions.trees.properties.tree.items.properties.mode.enum[4]" = "120000"
"definitions.trees.properties.tree.items.properties.mode.type" = "string"
"definitions.trees.properties.tree.items.properties.path.type" = "string"
"definitions.trees.properties.tree.items.properties.sha.description" = "SHA1 checksum ID of the object in the tree."
"definitions.trees.properties.tree.items.properties.sha.type" = "string"
"definitions.trees.properties.tree.items.properties.type.enum.length" = 3
"definitions.trees.properties.tree.items.properties.type.enum[0]" = "blob"
"definitions.trees.properties.tree.items.properties.type.enum[1]" = "tree"
"definitions.trees.properties.tree.items.properties.type.enum[2]" = "commit"
"definitions.trees.properties.tree.items.properties.type.type" = "string"
"definitions.trees.properties.tree.items.properties.url.type" = "string"
"definitions.trees.properties.tree.items.type" = "object"
"definitions.trees.properties.tree.type" = "array"
"definitions.trees.properties.url.type" = "string"
"definitions.trees.type" = "object"
"definitions.user-emails.items.type" = "string"
"definitions.user-emails.type" = "array"
"definitions.user-emails_final.type" = "array"
"definitions.user-keys-keyId.properties.id.type" = "integer"
"definitions.user-keys-keyId.properties.key.type" = "string"
"definitions.user-keys-keyId.properties.title.type" = "string"
"definitions.user-keys-keyId.properties.url.type" = "string"
"definitions.user-keys-keyId.type" = "object"
"definitions.user-keys-post.properties.key.type" = "string"
"definitions.user-keys-post.properties.title.type" = "string"
"definitions.user-keys-post.type" = "object"
"definitions.user-keys.type" = "array"
"definitions.user-update.properties.bio.type" = "string"
"definitions.user-update.properties.blog.type" = "string"
"definitions.user-update.properties.company.type" = "string"
"definitions.user-update.properties.email.type" = "string"
"definitions.user-update.properties.hireable.type" = "boolean"
"definitions.user-update.properties.location.type" = "string"
"definitions.user-update.properties.name.type" = "string"
"definitions.user-update.type" = "object"
"definitions.user-userId-starred.type" = "array"
"definitions.user-userId-subscribitions.items.properties.clone_url.type" = "string"
"definitions.user-userId-subscribitions.items.properties.created_at.description" = "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ"
"definitions.user-userId-subscribitions.items.properties.created_at.type" = "string"
"definitions.user-userId-subscribitions.items.properties.description.type" = "string"
"definitions.user-userId-subscribitions.items.properties.fork.type" = "boolean"
"definitions.user-userId-subscribitions.items.properties.forks.type" = "integer"
"definitions.user-userId-subscribitions.items.properties.forks_count.type" = "integer"
"definitions.user-userId-subscribitions.items.properties.full_name.type" = "string"
"definitions.user-userId-subscribitions.items.properties.git_url.type" = "string"
"definitions.user-userId-subscribitions.items.properties.homepage.type" = "string"
"definitions.user-userId-subscribitions.items.properties.html_url.type" = "string"
"definitions.user-userId-subscribitions.items.properties.id.type" = "integer"
"definitions.user-userId-subscribitions.items.properties.language.type" = "string"
"definitions.user-userId-subscribitions.items.properties.master_branch.type" = "integer"
"definitions.user-userId-subscribitions.items.properties.mirror_url.type" = "string"
"definitions.user-userId-subscribitions.items.properties.name.type" = "string"
"definitions.user-userId-subscribitions.items.properties.open_issues.type" = "integer"
"definitions.user-userId-subscribitions.items.properties.open_issues_count.type" = "integer"
"definitions.user-userId-subscribitions.items.properties.owner.properties.avatar_url.type" = "string"
"definitions.user-userId-subscribitions.items.properties.owner.properties.gravatar_id.type" = "string"
"definitions.user-userId-subscribitions.items.properties.owner.properties.id.type" = "integer"
"definitions.user-userId-subscribitions.items.properties.owner.properties.login.type" = "string"
"definitions.user-userId-subscribitions.items.properties.owner.properties.url.type" = "string"
"definitions.user-userId-subscribitions.items.properties.owner.type" = "object"
"definitions.user-userId-subscribitions.items.properties.private.type" = "boolean"
"definitions.user-userId-subscribitions.items.properties.pushed_at.description" = "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ"
"definitions.user-userId-subscribitions.items.properties.pushed_at.type" = "string"
"definitions.user-userId-subscribitions.items.properties.size.type" = "integer"
"definitions.user-userId-subscribitions.items.properties.ssh_url.type" = "string"
"definitions.user-userId-subscribitions.items.properties.svn_url.type" = "string"
"definitions.user-userId-subscribitions.items.properties.updated_at.description" = "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ"
"definitions.user-userId-subscribitions.items.properties.updated_at.type" = "string"
"definitions.user-userId-subscribitions.items.properties.url.type" = "string"
"definitions.user-userId-subscribitions.items.properties.watchers.type" = "integer"
"definitions.user-userId-subscribitions.items.properties.watchers_count.type" = "integer"
"definitions.user-userId-subscribitions.type" = "array"
"definitions.user-userId.properties.avatar_url.type" = "string"
"definitions.user-userId.properties.bio.type" = "string"
"definitions.user-userId.properties.blog.type" = "string"
"definitions.user-userId.properties.company.type" = "string"
"definitions.user-userId.properties.created_at.description" = "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ"
"definitions.user-userId.properties.created_at.type" = "string"
"definitions.user-userId.properties.email.description" = "Note: The returned email is the user’s publicly visible email address (or null if the user has not specified a public email address in their profile)."
"definitions.user-userId.properties.email.type" = "string"
"definitions.user-userId.properties.followers.type" = "integer"
"definitions.user-userId.properties.following.type" = "integer"
"definitions.user-userId.properties.gravatar_id.type" = "string"
"definitions.user-userId.properties.hireable.type" = "boolean"
"definitions.user-userId.properties.html_url.type" = "string"
"definitions.user-userId.properties.id.type" = "integer"
"definitions.user-userId.properties.location.type" = "string"
"definitions.user-userId.properties.login.type" = "string"
"definitions.user-userId.properties.name.type" = "string"
"definitions.user-userId.properties.public_gists.type" = "integer"
"definitions.user-userId.properties.public_repos.type" = "integer"
"definitions.user-userId.properties.type.type" = "string"
"definitions.user-userId.properties.url.type" = "string"
"definitions.user-userId.type" = "object"
"definitions.user.properties.avatar_url.type" = "string"
"definitions.user.properties.bio.type" = "string"
"definitions.user.properties.blog.type" = "string"
"definitions.user.properties.collaborators.type" = "integer"
"definitions.user.properties.company.type" = "string"
"definitions.user.properties.created_at.description" = "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ"
"definitions.user.properties.created_at.type" = "string"
"definitions.user.properties.disk_usage.type" = "integer"
"definitions.user.properties.email.type" = "string"
"definitions.user.properties.followers.type" = "integer"
"definitions.user.properties.following.type" = "integer"
"definitions.user.properties.gravatar_id.type" = "string"
"definitions.user.properties.hireable.type" = "boolean"
"definitions.user.properties.html_url.type" = "string"
"definitions.user.properties.id.type" = "integer"
"definitions.user.properties.location.type" = "string"
"definitions.user.properties.login.type" = "string"
"definitions.user.properties.name.type" = "string"
"definitions.user.properties.owned_private_repos.type" = "integer"
"definitions.user.properties.plan.properties.collaborators.type" = "integer"
"definitions.user.properties.plan.properties.name.type" = "string"
"definitions.user.properties.plan.properties.private_repos.type" = "integer"
"definitions.user.properties.plan.properties.space.type" = "integer"
"definitions.user.properties.plan.type" = "object"
"definitions.user.properties.private_gists.type" = "integer"
"definitions.user.properties.public_gists.type" = "integer"
"definitions.user.properties.public_repos.type" = "integer"
"definitions.user.properties.total_private_repos.type" = "integer"
"definitions.user.properties.type.type" = "string"
"definitions.user.properties.url.type" = "string"
"definitions.user.type" = "object"
"definitions.users-userId-keys.type" = "array"
"definitions.users-userId-orgs.type" = "array"
"definitions.users.items.properties.avatar_url.type" = "string"
"definitions.users.items.properties.gravatar_id.type" = "string"
"definitions.users.items.properties.id.type" = "integer"
"definitions.users.items.properties.login.type" = "string"
"definitions.users.items.properties.url.type" = "string"
"definitions.users.items.type" = "object"
"definitions.users.type" = "array"
"externalDocs.url" = "https://developer.github.com/v3/"
host = "api.github.com"
"info.description" = "Powerful collaboration, code review, and code management for open source and private projects.\n"
"info.termsOfService" = "https://help.github.com/articles/github-terms-of-service/#b-api-terms"
"info.title" = "GitHub"
"info.version" = "v3"
"info.x-apisguru-categories.length" = 2
"info.x-apisguru-categories[0]" = "collaboration"
"info.x-apisguru-categories[1]" = "developer_tools"
"info.x-logo.url" = "https://api.apis.guru/v2/cache/logo/http_assets-cdn.github.com_images_modules_logos_page_GitHub-Mark.png"
"info.x-origin.length" = 1
"info.x-origin[0].format" = "swagger"
"info.x-origin[0].url" = "https://raw.githubusercontent.com/APIs-guru/unofficial_openapi_specs/master/github.com/v3/swagger.yaml"
"info.x-origin[0].version" = "2.0"
"info.x-preferred" = true
"info.x-providerName" = "github.com"
"info.x-unofficialSpec" = true
"paths./emojis.get.description" = "Lists all the emojis available to use on GitHub."
"paths./emojis.get.parameters.length" = 6
"paths./emojis.get.parameters[0].description" = "You can check the current version of media type in responses.\n"
"paths./emojis.get.parameters[0].in" = "header"
"paths./emojis.get.parameters[0].name" = "X-GitHub-Media-Type"
"paths./emojis.get.parameters[0].type" = "string"
"paths./emojis.get.parameters[1].description" = "Is used to set specified media type."
"paths./emojis.get.parameters[1].in" = "header"
"paths./emojis.get.parameters[1].name" = "Accept"
"paths./emojis.get.parameters[1].type" = "string"
"paths./emojis.get.parameters[2].in" = "header"
"paths./emojis.get.parameters[2].name" = "X-RateLimit-Limit"
"paths./emojis.get.parameters[2].type" = "integer"
"paths./emojis.get.parameters[3].in" = "header"
"paths./emojis.get.parameters[3].name" = "X-RateLimit-Remaining"
"paths./emojis.get.parameters[3].type" = "integer"
"paths./emojis.get.parameters[4].in" = "header"
"paths./emojis.get.parameters[4].name" = "X-RateLimit-Reset"
"paths./emojis.get.parameters[4].type" = "integer"
"paths./emojis.get.parameters[5].in" = "header"
"paths./emojis.get.parameters[5].name" = "X-GitHub-Request-Id"
"paths./emojis.get.parameters[5].type" = "integer"
"paths./emojis.get.responses.200.description" = "OK"
"paths./emojis.get.responses.200.schema.$ref" = "#/definitions/emojis"
"paths./emojis.get.responses.403.description" = "API rate limit exceeded. See http://developer.github.com/v3/#rate-limiting\nfor details.\n"
"paths./events.get.description" = "List public events."
"paths./events.get.parameters.length" = 6
"paths./events.get.parameters[0].description" = "You can check the current version of media type in responses.\n"
"paths./events.get.parameters[0].in" = "header"
"paths./events.get.parameters[0].name" = "X-GitHub-Media-Type"
"paths./events.get.parameters[0].type" = "string"
"paths./events.get.parameters[1].description" = "Is used to set specified media type."
"paths./events.get.parameters[1].in" = "header"
"paths./events.get.parameters[1].name" = "Accept"
"paths./events.get.parameters[1].type" = "string"
"paths./events.get.parameters[2].in" = "header"
"paths./events.get.parameters[2].name" = "X-RateLimit-Limit"
"paths./events.get.parameters[2].type" = "integer"
"paths./events.get.parameters[3].in" = "header"
"paths./events.get.parameters[3].name" = "X-RateLimit-Remaining"
"paths./events.get.parameters[3].type" = "integer"
"paths./events.get.parameters[4].in" = "header"
"paths./events.get.parameters[4].name" = "X-RateLimit-Reset"
"paths./events.get.parameters[4].type" = "integer"
"paths./events.get.parameters[5].in" = "header"
"paths./events.get.parameters[5].name" = "X-GitHub-Request-Id"
"paths./events.get.parameters[5].type" = "integer"
"paths./events.get.responses.200.description" = "OK"
"paths./events.get.responses.200.schema.$ref" = "#/definitions/events"
"paths./events.get.responses.403.description" = "API rate limit exceeded. See http://developer.github.com/v3/#rate-limiting\nfor details.\n"
"paths./feeds.get.description" = "List Feeds.\nGitHub provides several timeline resources in Atom format. The Feeds API\n lists all the feeds available to the authenticating user.\n"
"paths./feeds.get.parameters.length" = 6
"paths./feeds.get.parameters[0].description" = "You can check the current version of media type in responses.\n"
"paths./feeds.get.parameters[0].in" = "header"
"paths./feeds.get.parameters[0].name" = "X-GitHub-Media-Type"
"paths./feeds.get.parameters[0].type" = "string"
"paths./feeds.get.parameters[1].description" = "Is used to set specified media type."
"paths./feeds.get.parameters[1].in" = "header"
"paths./feeds.get.parameters[1].name" = "Accept"
"paths./feeds.get.parameters[1].type" = "string"
"paths./feeds.get.parameters[2].in" = "header"
"paths./feeds.get.parameters[2].name" = "X-RateLimit-Limit"
"paths./feeds.get.parameters[2].type" = "integer"
"paths./feeds.get.parameters[3].in" = "header"
"paths./feeds.get.parameters[3].name" = "X-RateLimit-Remaining"
"paths./feeds.get.parameters[3].type" = "integer"
"paths./feeds.get.parameters[4].in" = "header"
"paths./feeds.get.parameters[4].name" = "X-RateLimit-Reset"
"paths./feeds.get.parameters[4].type" = "integer"
"paths./feeds.get.parameters[5].in" = "header"
"paths./feeds.get.parameters[5].name" = "X-GitHub-Request-Id"
"paths./feeds.get.parameters[5].type" = "integer"
"paths./feeds.get.responses.200.description" = "OK"
"paths./feeds.get.responses.200.schema.$ref" = "#/definitions/feeds"
"paths./feeds.get.responses.403.description" = "API rate limit exceeded. See http://developer.github.com/v3/#rate-limiting\nfor details.\n"
"paths./gists.get.description" = "List the authenticated user's gists or if called anonymously, this will\nreturn all public gists.\n"
"paths./gists.get.parameters.length" = 7
"paths./gists.get.parameters[0].description" = "Timestamp in ISO 8601 format YYYY-MM-DDTHH:MM:SSZ.\nOnly gists updated at or after this time are returned.\n"
"paths./gists.get.parameters[0].in" = "query"
"paths./gists.get.parameters[0].name" = "since"
"paths./gists.get.parameters[0].type" = "string"
"paths./gists.get.parameters[1].description" = "You can check the current version of media type in responses.\n"
"paths./gists.get.parameters[1].in" = "header"
"paths./gists.get.parameters[1].name" = "X-GitHub-Media-Type"
"paths./gists.get.parameters[1].type" = "string"
"paths./gists.get.parameters[2].description" = "Is used to set specified media type."
"paths./gists.get.parameters[2].in" = "header"
"paths./gists.get.parameters[2].name" = "Accept"
"paths./gists.get.parameters[2].type" = "string"
"paths./gists.get.parameters[3].in" = "header"
"paths./gists.get.parameters[3].name" = "X-RateLimit-Limit"
"paths./gists.get.parameters[3].type" = "integer"
"paths./gists.get.parameters[4].in" = "header"
"paths./gists.get.parameters[4].name" = "X-RateLimit-Remaining"
"paths./gists.get.parameters[4].type" = "integer"
"paths./gists.get.parameters[5].in" = "header"
"paths./gists.get.parameters[5].name" = "X-RateLimit-Reset"
"paths./gists.get.parameters[5].type" = "integer"
"paths./gists.get.parameters[6].in" = "header"
"paths./gists.get.parameters[6].name" = "X-GitHub-Request-Id"
"paths./gists.get.parameters[6].type" = "integer"
"paths./gists.get.responses.200.description" = "OK"
"paths./gists.get.responses.200.schema.$ref" = "#/definitions/gists"
"paths./gists.get.responses.403.description" = "API rate limit exceeded. See http://developer.github.com/v3/#rate-limiting\nfor details.\n"
"paths./gists.post.description" = "Create a gist."
"paths./gists.post.parameters.length" = 7
"paths./gists.post.parameters[0].description" = "You can check the current version of media type in responses.\n"
"paths./gists.post.parameters[0].in" = "header"
"paths./gists.post.parameters[0].name" = "X-GitHub-Media-Type"
"paths./gists.post.parameters[0].type" = "string"
"paths./gists.post.parameters[1].description" = "Is used to set specified media type."
"paths./gists.post.parameters[1].in" = "header"
"paths./gists.post.parameters[1].name" = "Accept"
"paths./gists.post.parameters[1].type" = "string"
"paths./gists.post.parameters[2].in" = "header"
"paths./gists.post.parameters[2].name" = "X-RateLimit-Limit"
"paths./gists.post.parameters[2].type" = "integer"
"paths./gists.post.parameters[3].in" = "header"
"paths./gists.post.parameters[3].name" = "X-RateLimit-Remaining"
"paths./gists.post.parameters[3].type" = "integer"
"paths./gists.post.parameters[4].in" = "header"
"paths./gists.post.parameters[4].name" = "X-RateLimit-Reset"
"paths./gists.post.parameters[4].type" = "integer"
"paths./gists.post.parameters[5].in" = "header"
"paths./gists.post.parameters[5].name" = "X-GitHub-Request-Id"
"paths./gists.post.parameters[5].type" = "integer"
"paths./gists.post.parameters[6].in" = "body"
"paths./gists.post.parameters[6].name" = "body"
"paths./gists.post.parameters[6].required" = true
"paths./gists.post.parameters[6].schema.$ref" = "#/definitions/postGist"
"paths./gists.post.responses.201.description" = "Created"
"paths./gists.post.responses.201.schema.$ref" = "#/definitions/gist"
"paths./gists.post.responses.403.description" = "API rate limit exceeded. See http://developer.github.com/v3/#rate-limiting\nfor details.\n"
"paths./gists/public.get.description" = "List all public gists."
"paths./gists/public.get.parameters.length" = 7
"paths./gists/public.get.parameters[0].description" = "Timestamp in ISO 8601 format YYYY-MM-DDTHH:MM:SSZ.\nOnly gists updated at or after this time are returned.\n"
"paths./gists/public.get.parameters[0].in" = "query"
"paths./gists/public.get.parameters[0].name" = "since"
"paths./gists/public.get.parameters[0].type" = "string"
"paths./gists/public.get.parameters[1].description" = "You can check the current version of media type in responses.\n"
"paths./gists/public.get.parameters[1].in" = "header"
"paths./gists/public.get.parameters[1].name" = "X-GitHub-Media-Type"
"paths./gists/public.get.parameters[1].type" = "string"
"paths./gists/public.get.parameters[2].description" = "Is used to set specified media type."
"paths./gists/public.get.parameters[2].in" = "header"
"paths./gists/public.get.parameters[2].name" = "Accept"
"paths./gists/public.get.parameters[2].type" = "string"
"paths./gists/public.get.parameters[3].in" = "header"
"paths./gists/public.get.parameters[3].name" = "X-RateLimit-Limit"
"paths./gists/public.get.parameters[3].type" = "integer"
"paths./gists/public.get.parameters[4].in" = "header"
"paths./gists/public.get.parameters[4].name" = "X-RateLimit-Remaining"
"paths./gists/public.get.parameters[4].type" = "integer"
"paths./gists/public.get.parameters[5].in" = "header"
"paths./gists/public.get.parameters[5].name" = "X-RateLimit-Reset"
"paths./gists/public.get.parameters[5].type" = "integer"
"paths./gists/public.get.parameters[6].in" = "header"
"paths./gists/public.get.parameters[6].name" = "X-GitHub-Request-Id"
"paths./gists/public.get.parameters[6].type" = "integer"
"paths./gists/public.get.responses.200.description" = "OK"
"paths./gists/public.get.responses.200.schema.$ref" = "#/definitions/gists"
"paths./gists/public.get.responses.403.description" = "API rate limit exceeded. See http://developer.github.com/v3/#rate-limiting\nfor details.\n"
"paths./gists/starred.get.description" = "List the authenticated user's starred gists."
"paths./gists/starred.get.parameters.length" = 7
"paths./gists/starred.get.parameters[0].description" = "Timestamp in ISO 8601 format YYYY-MM-DDTHH:MM:SSZ.\nOnly gists updated at or after this time are returned.\n"
"paths./gists/starred.get.parameters[0].in" = "query"
"paths./gists/starred.get.parameters[0].name" = "since"
"paths./gists/starred.get.parameters[0].type" = "string"
"paths./gists/starred.get.parameters[1].description" = "You can check the current version of media type in responses.\n"
"paths./gists/starred.get.parameters[1].in" = "header"
"paths./gists/starred.get.parameters[1].name" = "X-GitHub-Media-Type"
"paths./gists/starred.get.parameters[1].type" = "string"
"paths./gists/starred.get.parameters[2].description" = "Is used to set specified media type."
"paths./gists/starred.get.parameters[2].in" = "header"
"paths./gists/starred.get.parameters[2].name" = "Accept"
"paths./gists/starred.get.parameters[2].type" = "string"
"paths./gists/starred.get.parameters[3].in" = "header"
"paths./gists/starred.get.parameters[3].name" = "X-RateLimit-Limit"
"paths./gists/starred.get.parameters[3].type" = "integer"
"paths./gists/starred.get.parameters[4].in" = "header"
"paths./gists/starred.get.parameters[4].name" = "X-RateLimit-Remaining"
"paths./gists/starred.get.parameters[4].type" = "integer"
"paths./gists/starred.get.parameters[5].in" = "header"
"paths./gists/starred.get.parameters[5].name" = "X-RateLimit-Reset"
"paths./gists/starred.get.parameters[5].type" = "integer"
"paths./gists/starred.get.parameters[6].in" = "header"
"paths./gists/starred.get.parameters[6].name" = "X-GitHub-Request-Id"
"paths./gists/starred.get.parameters[6].type" = "integer"
"paths./gists/starred.get.responses.200.description" = "OK"
"paths./gists/starred.get.responses.200.schema.$ref" = "#/definitions/gists"
"paths./gists/starred.get.responses.403.description" = "API rate limit exceeded. See http://developer.github.com/v3/#rate-limiting\nfor details.\n"
"paths./gists/{id}.delete.description" = "Delete a gist."
"paths./gists/{id}.delete.parameters.length" = 7
"paths./gists/{id}.delete.parameters[0].description" = "Id of gist."
"paths./gists/{id}.delete.parameters[0].in" = "path"
"paths./gists/{id}.delete.parameters[0].name" = "id"
"paths./gists/{id}.delete.parameters[0].required" = true
"paths./gists/{id}.delete.parameters[0].type" = "integer"
"paths./gists/{id}.delete.parameters[1].description" = "You can check the current version of media type in responses.\n"
"paths./gists/{id}.delete.parameters[1].in" = "header"
"paths./gists/{id}.delete.parameters[1].name" = "X-GitHub-Media-Type"
"paths./gists/{id}.delete.parameters[1].type" = "string"
"paths./gists/{id}.delete.parameters[2].description" = "Is used to set specified media type."
"paths./gists/{id}.delete.parameters[2].in" = "header"
"paths./gists/{id}.delete.parameters[2].name" = "Accept"
"paths./gists/{id}.delete.parameters[2].type" = "string"
"paths./gists/{id}.delete.parameters[3].in" = "header"
"paths./gists/{id}.delete.parameters[3].name" = "X-RateLimit-Limit"
"paths./gists/{id}.delete.parameters[3].type" = "integer"
"paths./gists/{id}.delete.parameters[4].in" = "header"
"paths./gists/{id}.delete.parameters[4].name" = "X-RateLimit-Remaining"
"paths./gists/{id}.delete.parameters[4].type" = "integer"
"paths./gists/{id}.delete.parameters[5].in" = "header"
"paths./gists/{id}.delete.parameters[5].name" = "X-RateLimit-Reset"
"paths./gists/{id}.delete.parameters[5].type" = "integer"
"paths./gists/{id}.delete.parameters[6].in" = "header"
"paths./gists/{id}.delete.parameters[6].name" = "X-GitHub-Request-Id"
"paths./gists/{id}.delete.parameters[6].type" = "integer"
"paths./gists/{id}.delete.responses.204.description" = "No content.\n"
"paths./gists/{id}.delete.responses.403.description" = "API rate limit exceeded. See http://developer.github.com/v3/#rate-limiting\nfor details.\n"
"paths./gists/{id}.get.description" = "Get a single gist."
"paths./gists/{id}.get.parameters.length" = 7
"paths./gists/{id}.get.parameters[0].description" = "Id of gist."
"paths./gists/{id}.get.parameters[0].in" = "path"
"paths./gists/{id}.get.parameters[0].name" = "id"
"paths./gists/{id}.get.parameters[0].required" = true
"paths./gists/{id}.get.parameters[0].type" = "integer"
"paths./gists/{id}.get.parameters[1].description" = "You can check the current version of media type in responses.\n"
"paths./gists/{id}.get.parameters[1].in" = "header"
"paths./gists/{id}.get.parameters[1].name" = "X-GitHub-Media-Type"
"paths./gists/{id}.get.parameters[1].type" = "string"
"paths./gists/{id}.get.parameters[2].description" = "Is used to set specified media type."
"paths./gists/{id}.get.parameters[2].in" = "header"
"paths./gists/{id}.get.parameters[2].name" = "Accept"
"paths./gists/{id}.get.parameters[2].type" = "string"
"paths./gists/{id}.get.parameters[3].in" = "header"
"paths./gists/{id}.get.parameters[3].name" = "X-RateLimit-Limit"
"paths./gists/{id}.get.parameters[3].type" = "integer"
"paths./gists/{id}.get.parameters[4].in" = "header"
"paths./gists/{id}.get.parameters[4].name" = "X-RateLimit-Remaining"
"paths./gists/{id}.get.parameters[4].type" = "integer"
"paths./gists/{id}.get.parameters[5].in" = "header"
"paths./gists/{id}.get.parameters[5].name" = "X-RateLimit-Reset"
"paths./gists/{id}.get.parameters[5].type" = "integer"
"paths./gists/{id}.get.parameters[6].in" = "header"
"paths./gists/{id}.get.parameters[6].name" = "X-GitHub-Request-Id"
"paths./gists/{id}.get.parameters[6].type" = "integer"
"paths./gists/{id}.get.responses.200.description" = "OK"
"paths./gists/{id}.get.responses.200.schema.$ref" = "#/definitions/gist"
"paths./gists/{id}.get.responses.403.description" = "API rate limit exceeded. See http://developer.github.com/v3/#rate-limiting\nfor details.\n"
"paths./gists/{id}.patch.description" = "Edit a gist."
"paths./gists/{id}.patch.parameters.length" = 8
"paths./gists/{id}.patch.parameters[0].description" = "Id of gist."
"paths./gists/{id}.patch.parameters[0].in" = "path"
"paths./gists/{id}.patch.parameters[0].name" = "id"
"paths./gists/{id}.patch.parameters[0].required" = true
"paths./gists/{id}.patch.parameters[0].type" = "integer"
"paths./gists/{id}.patch.parameters[1].description" = "You can check the current version of media type in responses.\n"
"paths./gists/{id}.patch.parameters[1].in" = "header"
"paths./gists/{id}.patch.parameters[1].name" = "X-GitHub-Media-Type"
"paths./gists/{id}.patch.parameters[1].type" = "string"
"paths./gists/{id}.patch.parameters[2].description" = "Is used to set specified media type."
"paths./gists/{id}.patch.parameters[2].in" = "header"
"paths./gists/{id}.patch.parameters[2].name" = "Accept"
"paths./gists/{id}.patch.parameters[2].type" = "string"
"paths./gists/{id}.patch.parameters[3].in" = "header"
"paths./gists/{id}.patch.parameters[3].name" = "X-RateLimit-Limit"
"paths./gists/{id}.patch.parameters[3].type" = "integer"
"paths./gists/{id}.patch.parameters[4].in" = "header"
"paths./gists/{id}.patch.parameters[4].name" = "X-RateLimit-Remaining"
"paths./gists/{id}.patch.parameters[4].type" = "integer"
"paths./gists/{id}.patch.parameters[5].in" = "header"
"paths./gists/{id}.patch.parameters[5].name" = "X-RateLimit-Reset"
"paths./gists/{id}.patch.parameters[5].type" = "integer"
"paths./gists/{id}.patch.parameters[6].in" = "header"
"paths./gists/{id}.patch.parameters[6].name" = "X-GitHub-Request-Id"
"paths./gists/{id}.patch.parameters[6].type" = "integer"
"paths./gists/{id}.patch.parameters[7].in" = "body"
"paths./gists/{id}.patch.parameters[7].name" = "body"
"paths./gists/{id}.patch.parameters[7].required" = true
"paths./gists/{id}.patch.parameters[7].schema.$ref" = "#/definitions/patchGist"
"paths./gists/{id}.patch.responses.200.description" = "OK"
"paths./gists/{id}.patch.responses.200.schema.$ref" = "#/definitions/gist"
"paths./gists/{id}.patch.responses.403.description" = "API rate limit exceeded. See http://developer.github.com/v3/#rate-limiting\nfor details.\n"
"paths./gists/{id}/comments.get.description" = "List comments on a gist."
"paths./gists/{id}/comments.get.parameters.length" = 7
"paths./gists/{id}/comments.get.parameters[0].description" = "Id of gist."
"paths./gists/{id}/comments.get.parameters[0].in" = "path"
"paths./gists/{id}/comments.get.parameters[0].name" = "id"
"paths./gists/{id}/comments.get.parameters[0].required" = true
"paths./gists/{id}/comments.get.parameters[0].type" = "integer"
"paths./gists/{id}/comments.get.parameters[1].description" = "You can check the current version of media type in responses.\n"
"paths./gists/{id}/comments.get.parameters[1].in" = "header"
"paths./gists/{id}/comments.get.parameters[1].name" = "X-GitHub-Media-Type"
"paths./gists/{id}/comments.get.parameters[1].type" = "string"
"paths./gists/{id}/comments.get.parameters[2].description" = "Is used to set specified media type."
"paths./gists/{id}/comments.get.parameters[2].in" = "header"
"paths./gists/{id}/comments.get.parameters[2].name" = "Accept"
"paths./gists/{id}/comments.get.parameters[2].type" = "string"
"paths./gists/{id}/comments.get.parameters[3].in" = "header"
"paths./gists/{id}/comments.get.parameters[3].name" = "X-RateLimit-Limit"
"paths./gists/{id}/comments.get.parameters[3].type" = "integer"
"paths./gists/{id}/comments.get.parameters[4].in" = "header"
"paths./gists/{id}/comments.get.parameters[4].name" = "X-RateLimit-Remaining"
"paths./gists/{id}/comments.get.parameters[4].type" = "integer"
"paths./gists/{id}/comments.get.parameters[5].in" = "header"
"paths./gists/{id}/comments.get.parameters[5].name" = "X-RateLimit-Reset"
"paths./gists/{id}/comments.get.parameters[5].type" = "integer"
"paths./gists/{id}/comments.get.parameters[6].in" = "header"
"paths./gists/{id}/comments.get.parameters[6].name" = "X-GitHub-Request-Id"
"paths./gists/{id}/comments.get.parameters[6].type" = "integer"
"paths./gists/{id}/comments.get.responses.200.description" = "OK"
"paths./gists/{id}/comments.get.responses.200.schema.$ref" = "#/definitions/comments"
"paths./gists/{id}/comments.get.responses.403.description" = "API rate limit exceeded. See http://developer.github.com/v3/#rate-limiting\nfor details.\n"
"paths./gists/{id}/comments.post.description" = "Create a commen"
"paths./gists/{id}/comments.post.parameters.length" = 8
"paths./gists/{id}/comments.post.parameters[0].description" = "Id of gist."
"paths./gists/{id}/comments.post.parameters[0].in" = "path"
"paths./gists/{id}/comments.post.parameters[0].name" = "id"
"paths./gists/{id}/comments.post.parameters[0].required" = true
"paths./gists/{id}/comments.post.parameters[0].type" = "integer"
"paths./gists/{id}/comments.post.parameters[1].description" = "You can check the current version of media type in responses.\n"
"paths./gists/{id}/comments.post.parameters[1].in" = "header"
"paths./gists/{id}/comments.post.parameters[1].name" = "X-GitHub-Media-Type"
"paths./gists/{id}/comments.post.parameters[1].type" = "string"
"paths./gists/{id}/comments.post.parameters[2].description" = "Is used to set specified media type."
"paths./gists/{id}/comments.post.parameters[2].in" = "header"
"paths./gists/{id}/comments.post.parameters[2].name" = "Accept"
"paths./gists/{id}/comments.post.parameters[2].type" = "string"
"paths./gists/{id}/comments.post.parameters[3].in" = "header"
"paths./gists/{id}/comments.post.parameters[3].name" = "X-RateLimit-Limit"
"paths./gists/{id}/comments.post.parameters[3].type" = "integer"
"paths./gists/{id}/comments.post.parameters[4].in" = "header"
"paths./gists/{id}/comments.post.parameters[4].name" = "X-RateLimit-Remaining"
"paths./gists/{id}/comments.post.parameters[4].type" = "integer"
"paths./gists/{id}/comments.post.parameters[5].in" = "header"
"paths./gists/{id}/comments.post.parameters[5].name" = "X-RateLimit-Reset"
"paths./gists/{id}/comments.post.parameters[5].type" = "integer"
"paths./gists/{id}/comments.post.parameters[6].in" = "header"
"paths./gists/{id}/comments.post.parameters[6].name" = "X-GitHub-Request-Id"
"paths./gists/{id}/comments.post.parameters[6].type" = "integer"
"paths./gists/{id}/comments.post.parameters[7].in" = "body"
"paths./gists/{id}/comments.post.parameters[7].name" = "body"
"paths./gists/{id}/comments.post.parameters[7].required" = true
"paths./gists/{id}/comments.post.parameters[7].schema.$ref" = "#/definitions/commentBody"
"paths./gists/{id}/comments.post.responses.201.description" = "Created"
"paths./gists/{id}/comments.post.responses.201.schema.$ref" = "#/definitions/comment"
"paths./gists/{id}/comments.post.responses.403.description" = "API rate limit exceeded. See http://developer.github.com/v3/#rate-limiting\nfor details.\n"
"paths./gists/{id}/comments/{commentId}.delete.description" = "Delete a comment."
"paths./gists/{id}/comments/{commentId}.delete.parameters.length" = 8
"paths./gists/{id}/comments/{commentId}.delete.parameters[0].description" = "Id of gist."
"paths./gists/{id}/comments/{commentId}.delete.parameters[0].in" = "path"
"paths./gists/{id}/comments/{commentId}.delete.parameters[0].name" = "id"
"paths./gists/{id}/comments/{commentId}.delete.parameters[0].required" = true
"paths./gists/{id}/comments/{commentId}.delete.parameters[0].type" = "integer"
"paths./gists/{id}/comments/{commentId}.delete.parameters[1].description" = "Id of comment."
"paths./gists/{id}/comments/{commentId}.delete.parameters[1].in" = "path"
"paths./gists/{id}/comments/{commentId}.delete.parameters[1].name" = "commentId"
"paths./gists/{id}/comments/{commentId}.delete.parameters[1].required" = true
"paths./gists/{id}/comments/{commentId}.delete.parameters[1].type" = "integer"
"paths./gists/{id}/comments/{commentId}.delete.parameters[2].description" = "You can check the current version of media type in responses.\n"
"paths./gists/{id}/comments/{commentId}.delete.parameters[2].in" = "header"
"paths./gists/{id}/comments/{commentId}.delete.parameters[2].name" = "X-GitHub-Media-Type"
"paths./gists/{id}/comments/{commentId}.delete.parameters[2].type" = "string"
"paths./gists/{id}/comments/{commentId}.delete.parameters[3].description" = "Is used to set specified media type."
"paths./gists/{id}/comments/{commentId}.delete.parameters[3].in" = "header"
"paths./gists/{id}/comments/{commentId}.delete.parameters[3].name" = "Accept"
"paths./gists/{id}/comments/{commentId}.delete.parameters[3].type" = "string"
"paths./gists/{id}/comments/{commentId}.delete.parameters[4].in" = "header"
"paths./gists/{id}/comments/{commentId}.delete.parameters[4].name" = "X-RateLimit-Limit"
"paths./gists/{id}/comments/{commentId}.delete.parameters[4].type" = "integer"
"paths./gists/{id}/comments/{commentId}.delete.parameters[5].in" = "header"
"paths./gists/{id}/comments/{commentId}.delete.parameters[5].name" = "X-RateLimit-Remaining"
"paths./gists/{id}/comments/{commentId}.delete.parameters[5].type" = "integer"
"paths./gists/{id}/comments/{commentId}.delete.parameters[6].in" = "header"
"paths./gists/{id}/comments/{commentId}.delete.parameters[6].name" = "X-RateLimit-Reset"
"paths./gists/{id}/comments/{commentId}.delete.parameters[6].type" = "integer"
"paths./gists/{id}/comments/{commentId}.delete.parameters[7].in" = "header"
"paths./gists/{id}/comments/{commentId}.delete.parameters[7].name" = "X-GitHub-Request-Id"
"paths./gists/{id}/comments/{commentId}.delete.parameters[7].type" = "integer"
"paths./gists/{id}/comments/{commentId}.delete.responses.204.description" = "No content.\n"
"paths./gists/{id}/comments/{commentId}.delete.responses.403.description" = "API rate limit exceeded. See http://developer.github.com/v3/#rate-limiting\nfor details.\n"
"paths./gists/{id}/comments/{commentId}.get.description" = "Get a single comment."
"paths./gists/{id}/comments/{commentId}.get.parameters.length" = 8
"paths./gists/{id}/comments/{commentId}.get.parameters[0].description" = "Id of gist."
"paths./gists/{id}/comments/{commentId}.get.parameters[0].in" = "path"
"paths./gists/{id}/comments/{commentId}.get.parameters[0].name" = "id"
"paths./gists/{id}/comments/{commentId}.get.parameters[0].required" = true
"paths./gists/{id}/comments/{commentId}.get.parameters[0].type" = "integer"
"paths./gists/{id}/comments/{commentId}.get.parameters[1].description" = "Id of comment."
"paths./gists/{id}/comments/{commentId}.get.parameters[1].in" = "path"
"paths./gists/{id}/comments/{commentId}.get.parameters[1].name" = "commentId"
"paths./gists/{id}/comments/{commentId}.get.parameters[1].required" = true
"paths./gists/{id}/comments/{commentId}.get.parameters[1].type" = "integer"
"paths./gists/{id}/comments/{commentId}.get.parameters[2].description" = "You can check the current version of media type in responses.\n"
"paths./gists/{id}/comments/{commentId}.get.parameters[2].in" = "header"
"paths./gists/{id}/comments/{commentId}.get.parameters[2].name" = "X-GitHub-Media-Type"
"paths./gists/{id}/comments/{commentId}.get.parameters[2].type" = "string"
"paths./gists/{id}/comments/{commentId}.get.parameters[3].description" = "Is used to set specified media type."
"paths./gists/{id}/comments/{commentId}.get.parameters[3].in" = "header"
"paths./gists/{id}/comments/{commentId}.get.parameters[3].name" = "Accept"
"paths./gists/{id}/comments/{commentId}.get.parameters[3].type" = "string"
"paths./gists/{id}/comments/{commentId}.get.parameters[4].in" = "header"
"paths./gists/{id}/comments/{commentId}.get.parameters[4].name" = "X-RateLimit-Limit"
"paths./gists/{id}/comments/{commentId}.get.parameters[4].type" = "integer"
"paths./gists/{id}/comments/{commentId}.get.parameters[5].in" = "header"
"paths./gists/{id}/comments/{commentId}.get.parameters[5].name" = "X-RateLimit-Remaining"
"paths./gists/{id}/comments/{commentId}.get.parameters[5].type" = "integer"
"paths./gists/{id}/comments/{commentId}.get.parameters[6].in" = "header"
"paths./gists/{id}/comments/{commentId}.get.parameters[6].name" = "X-RateLimit-Reset"
"paths./gists/{id}/comments/{commentId}.get.parameters[6].type" = "integer"
"paths./gists/{id}/comments/{commentId}.get.parameters[7].in" = "header"
"paths./gists/{id}/comments/{commentId}.get.parameters[7].name" = "X-GitHub-Request-Id"
"paths./gists/{id}/comments/{commentId}.get.parameters[7].type" = "integer"
"paths./gists/{id}/comments/{commentId}.get.responses.200.description" = "OK"
"paths./gists/{id}/comments/{commentId}.get.responses.200.schema.$ref" = "#/definitions/comment"
"paths./gists/{id}/comments/{commentId}.get.responses.403.description" = "API rate limit exceeded. See http://developer.github.com/v3/#rate-limiting\nfor details.\n"
"paths./gists/{id}/comments/{commentId}.patch.description" = "Edit a comment."
"paths./gists/{id}/comments/{commentId}.patch.parameters.length" = 9
"paths./gists/{id}/comments/{commentId}.patch.parameters[0].description" = "Id of gist."
"paths./gists/{id}/comments/{commentId}.patch.parameters[0].in" = "path"
"paths./gists/{id}/comments/{commentId}.patch.parameters[0].name" = "id"
"paths./gists/{id}/comments/{commentId}.patch.parameters[0].required" = true
"paths./gists/{id}/comments/{commentId}.patch.parameters[0].type" = "integer"
"paths./gists/{id}/comments/{commentId}.patch.parameters[1].description" = "Id of comment."
"paths./gists/{id}/comments/{commentId}.patch.parameters[1].in" = "path"
"paths./gists/{id}/comments/{commentId}.patch.parameters[1].name" = "commentId"
"paths./gists/{id}/comments/{commentId}.patch.parameters[1].required" = true
"paths./gists/{id}/comments/{commentId}.patch.parameters[1].type" = "integer"
"paths./gists/{id}/comments/{commentId}.patch.parameters[2].description" = "You can check the current version of media type in responses.\n"
"paths./gists/{id}/comments/{commentId}.patch.parameters[2].in" = "header"
"paths./gists/{id}/comments/{commentId}.patch.parameters[2].name" = "X-GitHub-Media-Type"
"paths./gists/{id}/comments/{commentId}.patch.parameters[2].type" = "string"
"paths./gists/{id}/comments/{commentId}.patch.parameters[3].description" = "Is used to set specified media type."
"paths./gists/{id}/comments/{commentId}.patch.parameters[3].in" = "header"
"paths./gists/{id}/comments/{commentId}.patch.parameters[3].name" = "Accept"
"paths./gists/{id}/comments/{commentId}.patch.parameters[3].type" = "string"
"paths./gists/{id}/comments/{commentId}.patch.parameters[4].in" = "header"
"paths./gists/{id}/comments/{commentId}.patch.parameters[4].name" = "X-RateLimit-Limit"
"paths./gists/{id}/comments/{commentId}.patch.parameters[4].type" = "integer"
"paths./gists/{id}/comments/{commentId}.patch.parameters[5].in" = "header"
"paths./gists/{id}/comments/{commentId}.patch.parameters[5].name" = "X-RateLimit-Remaining"
"paths./gists/{id}/comments/{commentId}.patch.parameters[5].type" = "integer"
"paths./gists/{id}/comments/{commentId}.patch.parameters[6].in" = "header"
"paths./gists/{id}/comments/{commentId}.patch.parameters[6].name" = "X-RateLimit-Reset"
"paths./gists/{id}/comments/{commentId}.patch.parameters[6].type" = "integer"
"paths./gists/{id}/comments/{commentId}.patch.parameters[7].in" = "header"
"paths./gists/{id}/comments/{commentId}.patch.parameters[7].name" = "X-GitHub-Request-Id"
"paths./gists/{id}/comments/{commentId}.patch.parameters[7].type" = "integer"
"paths./gists/{id}/comments/{commentId}.patch.parameters[8].in" = "body"
"paths./gists/{id}/comments/{commentId}.patch.parameters[8].name" = "body"
"paths./gists/{id}/comments/{commentId}.patch.parameters[8].required" = true
"paths./gists/{id}/comments/{commentId}.patch.parameters[8].schema.$ref" = "#/definitions/comment"
"paths./gists/{id}/comments/{commentId}.patch.responses.200.description" = "OK"
"paths./gists/{id}/comments/{commentId}.patch.responses.200.schema.$ref" = "#/definitions/comment"
"paths./gists/{id}/comments/{commentId}.patch.responses.403.description" = "API rate limit exceeded. See http://developer.github.com/v3/#rate-limiting\nfor details.\n"
"paths./gists/{id}/forks.post.description" = "Fork a gist."
"paths./gists/{id}/forks.post.parameters.length" = 7
"paths./gists/{id}/forks.post.parameters[0].description" = "Id of gist."
"paths./gists/{id}/forks.post.parameters[0].in" = "path"
"paths./gists/{id}/forks.post.parameters[0].name" = "id"
"paths./gists/{id}/forks.post.parameters[0].required" = true
"paths./gists/{id}/forks.post.parameters[0].type" = "integer"
"paths./gists/{id}/forks.post.parameters[1].description" = "You can check the current version of media type in responses.\n"
"paths./gists/{id}/forks.post.parameters[1].in" = "header"
"paths./gists/{id}/forks.post.parameters[1].name" = "X-GitHub-Media-Type"
"paths./gists/{id}/forks.post.parameters[1].type" = "string"
"paths./gists/{id}/forks.post.parameters[2].description" = "Is used to set specified media type."
"paths./gists/{id}/forks.post.parameters[2].in" = "header"
"paths./gists/{id}/forks.post.parameters[2].name" = "Accept"
"paths./gists/{id}/forks.post.parameters[2].type" = "string"
"paths./gists/{id}/forks.post.parameters[3].in" = "header"
"paths./gists/{id}/forks.post.parameters[3].name" = "X-RateLimit-Limit"
"paths./gists/{id}/forks.post.parameters[3].type" = "integer"
"paths./gists/{id}/forks.post.parameters[4].in" = "header"
"paths./gists/{id}/forks.post.parameters[4].name" = "X-RateLimit-Remaining"
"paths./gists/{id}/forks.post.parameters[4].type" = "integer"
"paths./gists/{id}/forks.post.parameters[5].in" = "header"
"paths./gists/{id}/forks.post.parameters[5].name" = "X-RateLimit-Reset"
"paths./gists/{id}/forks.post.parameters[5].type" = "integer"
"paths./gists/{id}/forks.post.parameters[6].in" = "header"
"paths./gists/{id}/forks.post.parameters[6].name" = "X-GitHub-Request-Id"
"paths./gists/{id}/forks.post.parameters[6].type" = "integer"
"paths./gists/{id}/forks.post.responses.204.description" = "Exists."
"paths./gists/{id}/forks.post.responses.403.description" = "API rate limit exceeded. See http://developer.github.com/v3/#rate-limiting\nfor details.\n"
"paths./gists/{id}/forks.post.responses.404.description" = "Not exists."
"paths./gists/{id}/star.delete.description" = "Unstar a gist."
"paths./gists/{id}/star.delete.parameters.length" = 7
"paths./gists/{id}/star.delete.parameters[0].description" = "Id of gist."
"paths./gists/{id}/star.delete.parameters[0].in" = "path"
"paths./gists/{id}/star.delete.parameters[0].name" = "id"
"paths./gists/{id}/star.delete.parameters[0].required" = true
"paths./gists/{id}/star.delete.parameters[0].type" = "integer"
"paths./gists/{id}/star.delete.parameters[1].description" = "You can check the current version of media type in responses.\n"
"paths./gists/{id}/star.delete.parameters[1].in" = "header"
"paths./gists/{id}/star.delete.parameters[1].name" = "X-GitHub-Media-Type"
"paths./gists/{id}/star.delete.parameters[1].type" = "string"
"paths./gists/{id}/star.delete.parameters[2].description" = "Is used to set specified media type."
"paths./gists/{id}/star.delete.parameters[2].in" = "header"
"paths./gists/{id}/star.delete.parameters[2].name" = "Accept"
"paths./gists/{id}/star.delete.parameters[2].type" = "string"
"paths./gists/{id}/star.delete.parameters[3].in" = "header"
"paths./gists/{id}/star.delete.parameters[3].name" = "X-RateLimit-Limit"
"paths./gists/{id}/star.delete.parameters[3].type" = "integer"
"paths./gists/{id}/star.delete.parameters[4].in" = "header"
"paths./gists/{id}/star.delete.parameters[4].name" = "X-RateLimit-Remaining"
"paths./gists/{id}/star.delete.parameters[4].type" = "integer"
"paths./gists/{id}/star.delete.parameters[5].in" = "header"
"paths./gists/{id}/star.delete.parameters[5].name" = "X-RateLimit-Reset"
"paths./gists/{id}/star.delete.parameters[5].type" = "integer"
"paths./gists/{id}/star.delete.parameters[6].in" = "header"
"paths./gists/{id}/star.delete.parameters[6].name" = "X-GitHub-Request-Id"
"paths./gists/{id}/star.delete.parameters[6].type" = "integer"
"paths./gists/{id}/star.delete.responses.204.description" = "Item removed."
"paths./gists/{id}/star.delete.responses.403.description" = "API rate limit exceeded. See http://developer.github.com/v3/#rate-limiting\nfor details.\n"
"paths./gists/{id}/star.get.description" = "Check if a gist is starred."
"paths./gists/{id}/star.get.parameters.length" = 7
"paths./gists/{id}/star.get.parameters[0].description" = "Id of gist."
"paths./gists/{id}/star.get.parameters[0].in" = "path"
"paths./gists/{id}/star.get.parameters[0].name" = "id"
"paths./gists/{id}/star.get.parameters[0].required" = true
"paths./gists/{id}/star.get.parameters[0].type" = "integer"
"paths./gists/{id}/star.get.parameters[1].description" = "You can check the current version of media type in responses.\n"
"paths./gists/{id}/star.get.parameters[1].in" = "header"
"paths./gists/{id}/star.get.parameters[1].name" = "X-GitHub-Media-Type"
"paths./gists/{id}/star.get.parameters[1].type" = "string"
"paths./gists/{id}/star.get.parameters[2].description" = "Is used to set specified media type."
"paths./gists/{id}/star.get.parameters[2].in" = "header"
"paths./gists/{id}/star.get.parameters[2].name" = "Accept"
"paths./gists/{id}/star.get.parameters[2].type" = "string"
"paths./gists/{id}/star.get.parameters[3].in" = "header"
"paths./gists/{id}/star.get.parameters[3].name" = "X-RateLimit-Limit"
"paths./gists/{id}/star.get.parameters[3].type" = "integer"
"paths./gists/{id}/star.get.parameters[4].in" = "header"
"paths./gists/{id}/star.get.parameters[4].name" = "X-RateLimit-Remaining"
"paths./gists/{id}/star.get.parameters[4].type" = "integer"
"paths./gists/{id}/star.get.parameters[5].in" = "header"
"paths./gists/{id}/star.get.parameters[5].name" = "X-RateLimit-Reset"
"paths./gists/{id}/star.get.parameters[5].type" = "integer"
"paths./gists/{id}/star.get.parameters[6].in" = "header"
"paths./gists/{id}/star.get.parameters[6].name" = "X-GitHub-Request-Id"
"paths./gists/{id}/star.get.parameters[6].type" = "integer"
"paths./gists/{id}/star.get.responses.204.description" = "Exists."
"paths./gists/{id}/star.get.responses.403.description" = "API rate limit exceeded. See http://developer.github.com/v3/#rate-limiting\nfor details.\n"
"paths./gists/{id}/star.get.responses.404.description" = "Not exists."
"paths./gists/{id}/star.put.description" = "Star a gist."
"paths./gists/{id}/star.put.parameters.length" = 7
"paths./gists/{id}/star.put.parameters[0].description" = "Id of gist."
"paths./gists/{id}/star.put.parameters[0].in" = "path"
"paths./gists/{id}/star.put.parameters[0].name" = "id"
"paths./gists/{id}/star.put.parameters[0].required" = true
"paths./gists/{id}/star.put.parameters[0].type" = "integer"
"paths./gists/{id}/star.put.parameters[1].description" = "You can check the current version of media type in responses.\n"
"paths./gists/{id}/star.put.parameters[1].in" = "header"
"paths./gists/{id}/star.put.parameters[1].name" = "X-GitHub-Media-Type"
"paths./gists/{id}/star.put.parameters[1].type" = "string"
"paths./gists/{id}/star.put.parameters[2].description" = "Is used to set specified media type."
"paths./gists/{id}/star.put.parameters[2].in" = "header"
"paths./gists/{id}/star.put.parameters[2].name" = "Accept"
"paths./gists/{id}/star.put.parameters[2].type" = "string"
"paths./gists/{id}/star.put.parameters[3].in" = "header"
"paths./gists/{id}/star.put.parameters[3].name" = "X-RateLimit-Limit"
"paths./gists/{id}/star.put.parameters[3].type" = "integer"
"paths./gists/{id}/star.put.parameters[4].in" = "header"
"paths./gists/{id}/star.put.parameters[4].name" = "X-RateLimit-Remaining"
"paths./gists/{id}/star.put.parameters[4].type" = "integer"
"paths./gists/{id}/star.put.parameters[5].in" = "header"
"paths./gists/{id}/star.put.parameters[5].name" = "X-RateLimit-Reset"
"paths./gists/{id}/star.put.parameters[5].type" = "integer"
"paths./gists/{id}/star.put.parameters[6].in" = "header"
"paths./gists/{id}/star.put.parameters[6].name" = "X-GitHub-Request-Id"
"paths./gists/{id}/star.put.parameters[6].type" = "integer"
"paths./gists/{id}/star.put.responses.204.description" = "Starred."
"paths./gists/{id}/star.put.responses.403.description" = "API rate limit exceeded. See http://developer.github.com/v3/#rate-limiting\nfor details.\n"
"paths./gitignore/templates.get.description" = "Listing available templates.\nList all templates available to pass as an option when creating a repository.\n"
"paths./gitignore/templates.get.parameters.length" = 6
"paths./gitignore/templates.get.parameters[0].description" = "You can check the current version of media type in responses.\n"
"paths./gitignore/templates.get.parameters[0].in" = "header"
"paths./gitignore/templates.get.parameters[0].name" = "X-GitHub-Media-Type"
"paths./gitignore/templates.get.parameters[0].type" = "string"
"paths./gitignore/templates.get.parameters[1].description" = "Is used to set specified media type."
"paths./gitignore/templates.get.parameters[1].in" = "header"
"paths./gitignore/templates.get.parameters[1].name" = "Accept"
"paths./gitignore/templates.get.parameters[1].type" = "string"
"paths./gitignore/templates.get.parameters[2].in" = "header"
"paths./gitignore/templates.get.parameters[2].name" = "X-RateLimit-Limit"
"paths./gitignore/templates.get.parameters[2].type" = "integer"
"paths./gitignore/templates.get.parameters[3].in" = "header"
"paths./gitignore/templates.get.parameters[3].name" = "X-RateLimit-Remaining"
"paths./gitignore/templates.get.parameters[3].type" = "integer"
"paths./gitignore/templates.get.parameters[4].in" = "header"
"paths./gitignore/templates.get.parameters[4].name" = "X-RateLimit-Reset"
"paths./gitignore/templates.get.parameters[4].type" = "integer"
"paths./gitignore/templates.get.parameters[5].in" = "header"
"paths./gitignore/templates.get.parameters[5].name" = "X-GitHub-Request-Id"
"paths./gitignore/templates.get.parameters[5].type" = "integer"
"paths./gitignore/templates.get.responses.200.description" = "OK"
"paths./gitignore/templates.get.responses.200.schema.$ref" = "#/definitions/gitignore"
"paths./gitignore/templates.get.responses.403.description" = "API rate limit exceeded. See http://developer.github.com/v3/#rate-limiting\nfor details.\n"
"paths./gitignore/templates/{language}.get.description" = "Get a single template."
"paths./gitignore/templates/{language}.get.parameters.length" = 7
"paths./gitignore/templates/{language}.get.parameters[0].in" = "path"
"paths./gitignore/templates/{language}.get.parameters[0].name" = "language"
"paths./gitignore/templates/{language}.get.parameters[0].required" = true
"paths./gitignore/templates/{language}.get.parameters[0].type" = "string"
"paths./gitignore/templates/{language}.get.parameters[1].description" = "You can check the current version of media type in responses.\n"
"paths./gitignore/templates/{language}.get.parameters[1].in" = "header"
"paths./gitignore/templates/{language}.get.parameters[1].name" = "X-GitHub-Media-Type"
"paths./gitignore/templates/{language}.get.parameters[1].type" = "string"
"paths./gitignore/templates/{language}.get.parameters[2].description" = "Is used to set specified media type."
"paths./gitignore/templates/{language}.get.parameters[2].in" = "header"
"paths./gitignore/templates/{language}.get.parameters[2].name" = "Accept"
"paths./gitignore/templates/{language}.get.parameters[2].type" = "string"
"paths./gitignore/templates/{language}.get.parameters[3].in" = "header"
"paths./gitignore/templates/{language}.get.parameters[3].name" = "X-RateLimit-Limit"
"paths./gitignore/templates/{language}.get.parameters[3].type" = "integer"
"paths./gitignore/templates/{language}.get.parameters[4].in" = "header"
"paths./gitignore/templates/{language}.get.parameters[4].name" = "X-RateLimit-Remaining"
"paths./gitignore/templates/{language}.get.parameters[4].type" = "integer"
"paths./gitignore/templates/{language}.get.parameters[5].in" = "header"
"paths./gitignore/templates/{language}.get.parameters[5].name" = "X-RateLimit-Reset"
"paths./gitignore/templates/{language}.get.parameters[5].type" = "integer"
"paths./gitignore/templates/{language}.get.parameters[6].in" = "header"
"paths./gitignore/templates/{language}.get.parameters[6].name" = "X-GitHub-Request-Id"
"paths./gitignore/templates/{language}.get.parameters[6].type" = "integer"
"paths./gitignore/templates/{language}.get.responses.200.description" = "OK"
"paths./gitignore/templates/{language}.get.responses.200.schema.$ref" = "#/definitions/gitignore-lang"
"paths./gitignore/templates/{language}.get.responses.403.description" = "API rate limit exceeded. See http://developer.github.com/v3/#rate-limiting\nfor details.\n"
"paths./issues.get.description" = "List issues.\nList all issues across all the authenticated user's visible repositories.\n"
"paths./issues.get.parameters.length" = 12
"paths./issues.get.parameters[0].default" = "all"
"paths./issues.get.parameters[0].description" = "Issues assigned to you / created by you / mentioning you / you're\nsubscribed to updates for / All issues the authenticated user can see\n"
"paths./issues.get.parameters[0].enum.length" = 5
"paths./issues.get.parameters[0].enum[0]" = "assigned"
"paths./issues.get.parameters[0].enum[1]" = "created"
"paths./issues.get.parameters[0].enum[2]" = "mentioned"
"paths./issues.get.parameters[0].enum[3]" = "subscribed"
"paths./issues.get.parameters[0].enum[4]" = "all"
"paths./issues.get.parameters[0].in" = "query"
"paths./issues.get.parameters[0].name" = "filter"
"paths./issues.get.parameters[0].required" = true
"paths./issues.get.parameters[0].type" = "string"
"paths./issues.get.parameters[10].in" = "header"
"paths./issues.get.parameters[10].name" = "X-RateLimit-Reset"
"paths./issues.get.parameters[10].type" = "integer"
"paths./issues.get.parameters[11].in" = "header"
"paths./issues.get.parameters[11].name" = "X-GitHub-Request-Id"
"paths./issues.get.parameters[11].type" = "integer"
"paths./issues.get.parameters[1].default" = "open"
"paths./issues.get.parameters[1].enum.length" = 2
"paths./issues.get.parameters[1].enum[0]" = "open"
"paths./issues.get.parameters[1].enum[1]" = "closed"
"paths./issues.get.parameters[1].in" = "query"
"paths./issues.get.parameters[1].name" = "state"
"paths./issues.get.parameters[1].required" = true
"paths./issues.get.parameters[1].type" = "string"
"paths./issues.get.parameters[2].description" = "String list of comma separated Label names. Example - bug,ui,@high."
"paths./issues.get.parameters[2].in" = "query"
"paths./issues.get.parameters[2].name" = "labels"
"paths./issues.get.parameters[2].required" = true
"paths./issues.get.parameters[2].type" = "string"
"paths./issues.get.parameters[3].default" = "created"
"paths./issues.get.parameters[3].enum.length" = 3
"paths./issues.get.parameters[3].enum[0]" = "created"
"paths./issues.get.parameters[3].enum[1]" = "updated"
"paths./issues.get.parameters[3].enum[2]" = "comments"
"paths./issues.get.parameters[3].in" = "query"
"paths./issues.get.parameters[3].name" = "sort"
"paths./issues.get.parameters[3].required" = true
"paths./issues.get.parameters[3].type" = "string"
"paths./issues.get.parameters[4].default" = "desc"
"paths./issues.get.parameters[4].enum.length" = 2
"paths./issues.get.parameters[4].enum[0]" = "asc"
"paths./issues.get.parameters[4].enum[1]" = "desc"
"paths./issues.get.parameters[4].in" = "query"
"paths./issues.get.parameters[4].name" = "direction"
"paths./issues.get.parameters[4].required" = true
"paths./issues.get.parameters[4].type" = "string"
"paths./issues.get.parameters[5].description" = "Optional string of a timestamp in ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ.\nOnly issues updated at or after this time are returned.\n"
"paths./issues.get.parameters[5].in" = "query"
"paths./issues.get.parameters[5].name" = "since"
"paths./issues.get.parameters[5].type" = "string"
"paths./issues.get.parameters[6].description" = "You can check the current version of media type in responses.\n"
"paths./issues.get.parameters[6].in" = "header"
"paths./issues.get.parameters[6].name" = "X-GitHub-Media-Type"
"paths./issues.get.parameters[6].type" = "string"
"paths./issues.get.parameters[7].description" = "Is used to set specified media type."
"paths./issues.get.parameters[7].in" = "header"
"paths./issues.get.parameters[7].name" = "Accept"
"paths./issues.get.parameters[7].type" = "string"
"paths./issues.get.parameters[8].in" = "header"
"paths./issues.get.parameters[8].name" = "X-RateLimit-Limit"
"paths./issues.get.parameters[8].type" = "integer"
"paths./issues.get.parameters[9].in" = "header"
"paths./issues.get.parameters[9].name" = "X-RateLimit-Remaining"
"paths./issues.get.parameters[9].type" = "integer"
"paths./issues.get.responses.200.description" = "OK"
"paths./issues.get.responses.200.schema.$ref" = "#/definitions/issues"
"paths./issues.get.responses.403.description" = "API rate limit exceeded. See http://developer.github.com/v3/#rate-limiting\nfor details.\n"
"paths./legacy/issues/search/{owner}/{repository}/{state}/{keyword}.get.description" = "Find issues by state and keyword."
"paths./legacy/issues/search/{owner}/{repository}/{state}/{keyword}.get.parameters.length" = 10
"paths./legacy/issues/search/{owner}/{repository}/{state}/{keyword}.get.parameters[0].description" = "The search term."
"paths./legacy/issues/search/{owner}/{repository}/{state}/{keyword}.get.parameters[0].in" = "path"
"paths./legacy/issues/search/{owner}/{repository}/{state}/{keyword}.get.parameters[0].name" = "keyword"
"paths./legacy/issues/search/{owner}/{repository}/{state}/{keyword}.get.parameters[0].required" = true
"paths./legacy/issues/search/{owner}/{repository}/{state}/{keyword}.get.parameters[0].type" = "string"
"paths./legacy/issues/search/{owner}/{repository}/{state}/{keyword}.get.parameters[1].description" = "Indicates the state of the issues to return. Can be either open or closed."
"paths./legacy/issues/search/{owner}/{repository}/{state}/{keyword}.get.parameters[1].enum.length" = 2
"paths./legacy/issues/search/{owner}/{repository}/{state}/{keyword}.get.parameters[1].enum[0]" = "open"
"paths./legacy/issues/search/{owner}/{repository}/{state}/{keyword}.get.parameters[1].enum[1]" = "closed"
"paths./legacy/issues/search/{owner}/{repository}/{state}/{keyword}.get.parameters[1].in" = "path"
"paths./legacy/issues/search/{owner}/{repository}/{state}/{keyword}.get.parameters[1].name" = "state"
"paths./legacy/issues/search/{owner}/{repository}/{state}/{keyword}.get.parameters[1].required" = true
"paths./legacy/issues/search/{owner}/{repository}/{state}/{keyword}.get.parameters[1].type" = "string"
"paths./legacy/issues/search/{owner}/{repository}/{state}/{keyword}.get.parameters[2].in" = "path"
"paths./legacy/issues/search/{owner}/{repository}/{state}/{keyword}.get.parameters[2].name" = "owner"
"paths./legacy/issues/search/{owner}/{repository}/{state}/{keyword}.get.parameters[2].required" = true
"paths./legacy/issues/search/{owner}/{repository}/{state}/{keyword}.get.parameters[2].type" = "string"
"paths./legacy/issues/search/{owner}/{repository}/{state}/{keyword}.get.parameters[3].in" = "path"
"paths./legacy/issues/search/{owner}/{repository}/{state}/{keyword}.get.parameters[3].name" = "repository"
"paths./legacy/issues/search/{owner}/{repository}/{state}/{keyword}.get.parameters[3].required" = true
"paths./legacy/issues/search/{owner}/{repository}/{state}/{keyword}.get.parameters[3].type" = "string"
"paths./legacy/issues/search/{owner}/{repository}/{state}/{keyword}.get.parameters[4].description" = "You can check the current version of media type in responses.\n"
"paths./legacy/issues/search/{owner}/{repository}/{state}/{keyword}.get.parameters[4].in" = "header"
"paths./legacy/issues/search/{owner}/{repository}/{state}/{keyword}.get.parameters[4].name" = "X-GitHub-Media-Type"
"paths./legacy/issues/search/{owner}/{repository}/{state}/{keyword}.get.parameters[4].type" = "string"
"paths./legacy/issues/search/{owner}/{repository}/{state}/{keyword}.get.parameters[5].description" = "Is used to set specified media type."
"paths./legacy/issues/search/{owner}/{repository}/{state}/{keyword}.get.parameters[5].in" = "header"
"paths./legacy/issues/search/{owner}/{repository}/{state}/{keyword}.get.parameters[5].name" = "Accept"
"paths./legacy/issues/search/{owner}/{repository}/{state}/{keyword}.get.parameters[5].type" = "string"
"paths./legacy/issues/search/{owner}/{repository}/{state}/{keyword}.get.parameters[6].in" = "header"
"paths./legacy/issues/search/{owner}/{repository}/{state}/{keyword}.get.parameters[6].name" = "X-RateLimit-Limit"
"paths./legacy/issues/search/{owner}/{repository}/{state}/{keyword}.get.parameters[6].type" = "integer"
"paths./legacy/issues/search/{owner}/{repository}/{state}/{keyword}.get.parameters[7].in" = "header"
"paths./legacy/issues/search/{owner}/{repository}/{state}/{keyword}.get.parameters[7].name" = "X-RateLimit-Remaining"
"paths./legacy/issues/search/{owner}/{repository}/{state}/{keyword}.get.parameters[7].type" = "integer"
"paths./legacy/issues/search/{owner}/{repository}/{state}/{keyword}.get.parameters[8].in" = "header"
"paths./legacy/issues/search/{owner}/{repository}/{state}/{keyword}.get.parameters[8].name" = "X-RateLimit-Reset"
"paths./legacy/issues/search/{owner}/{repository}/{state}/{keyword}.get.parameters[8].type" = "integer"
"paths./legacy/issues/search/{owner}/{repository}/{state}/{keyword}.get.parameters[9].in" = "header"
"paths./legacy/issues/search/{owner}/{repository}/{state}/{keyword}.get.parameters[9].name" = "X-GitHub-Request-Id"
"paths./legacy/issues/search/{owner}/{repository}/{state}/{keyword}.get.parameters[9].type" = "integer"
"paths./legacy/issues/search/{owner}/{repository}/{state}/{keyword}.get.responses.200.description" = "OK"
"paths./legacy/issues/search/{owner}/{repository}/{state}/{keyword}.get.responses.200.schema.$ref" = "#/definitions/search-issues-by-keyword"
"paths./legacy/issues/search/{owner}/{repository}/{state}/{keyword}.get.responses.403.description" = "API rate limit exceeded. See http://developer.github.com/v3/#rate-limiting\nfor details.\n"
"paths./legacy/repos/search/{keyword}.get.description" = "Find repositories by keyword. Note, this legacy method does not follow the v3 pagination pattern. This method returns up to 100 results per page and pages can be fetched using the start_page parameter."
"paths./legacy/repos/search/{keyword}.get.parameters.length" = 11
"paths./legacy/repos/search/{keyword}.get.parameters[0].description" = "The search term"
"paths./legacy/repos/search/{keyword}.get.parameters[0].in" = "path"
"paths./legacy/repos/search/{keyword}.get.parameters[0].name" = "keyword"
"paths./legacy/repos/search/{keyword}.get.parameters[0].required" = true
"paths./legacy/repos/search/{keyword}.get.parameters[0].type" = "string"
"paths./legacy/repos/search/{keyword}.get.parameters[10].in" = "header"
"paths./legacy/repos/search/{keyword}.get.parameters[10].name" = "X-GitHub-Request-Id"
"paths./legacy/repos/search/{keyword}.get.parameters[10].type" = "integer"
"paths./legacy/repos/search/{keyword}.get.parameters[1].default" = "desc"
"paths./legacy/repos/search/{keyword}.get.parameters[1].description" = "The sort field. if sort param is provided. Can be either asc or desc."
"paths./legacy/repos/search/{keyword}.get.parameters[1].enum.length" = 2
"paths./legacy/repos/search/{keyword}.get.parameters[1].enum[0]" = "desc"
"paths./legacy/repos/search/{keyword}.get.parameters[1].enum[1]" = "asc"
"paths./legacy/repos/search/{keyword}.get.parameters[1].in" = "query"
"paths./legacy/repos/search/{keyword}.get.parameters[1].name" = "order"
"paths./legacy/repos/search/{keyword}.get.parameters[1].type" = "string"
"paths./legacy/repos/search/{keyword}.get.parameters[2].description" = "Filter results by language"
"paths./legacy/repos/search/{keyword}.get.parameters[2].in" = "query"
"paths./legacy/repos/search/{keyword}.get.parameters[2].name" = "language"
"paths./legacy/repos/search/{keyword}.get.parameters[2].type" = "string"
"paths./legacy/repos/search/{keyword}.get.parameters[3].description" = "The page number to fetch"
"paths./legacy/repos/search/{keyword}.get.parameters[3].in" = "query"
"paths./legacy/repos/search/{keyword}.get.parameters[3].name" = "start_page"
"paths./legacy/repos/search/{keyword}.get.parameters[3].type" = "string"
"paths./legacy/repos/search/{keyword}.get.parameters[4].description" = "The sort field. One of stars, forks, or updated. Default: results are sorted by best match."
"paths./legacy/repos/search/{keyword}.get.parameters[4].enum.length" = 3
"paths./legacy/repos/search/{keyword}.get.parameters[4].enum[0]" = "updated"
"paths./legacy/repos/search/{keyword}.get.parameters[4].enum[1]" = "stars"
"paths./legacy/repos/search/{keyword}.get.parameters[4].enum[2]" = "forks"
"paths./legacy/repos/search/{keyword}.get.parameters[4].in" = "query"
"paths./legacy/repos/search/{keyword}.get.parameters[4].name" = "sort"
"paths./legacy/repos/search/{keyword}.get.parameters[4].type" = "string"
"paths./legacy/repos/search/{keyword}.get.parameters[5].description" = "You can check the current version of media type in responses.\n"
"paths./legacy/repos/search/{keyword}.get.parameters[5].in" = "header"
"paths./legacy/repos/search/{keyword}.get.parameters[5].name" = "X-GitHub-Media-Type"
"paths./legacy/repos/search/{keyword}.get.parameters[5].type" = "string"
"paths./legacy/repos/search/{keyword}.get.parameters[6].description" = "Is used to set specified media type."
"paths./legacy/repos/search/{keyword}.get.parameters[6].in" = "header"
"paths./legacy/repos/search/{keyword}.get.parameters[6].name" = "Accept"
"paths./legacy/repos/search/{keyword}.get.parameters[6].type" = "string"
"paths./legacy/repos/search/{keyword}.get.parameters[7].in" = "header"
"paths./legacy/repos/search/{keyword}.get.parameters[7].name" = "X-RateLimit-Limit"
"paths./legacy/repos/search/{keyword}.get.parameters[7].type" = "integer"
"paths./legacy/repos/search/{keyword}.get.parameters[8].in" = "header"
"paths./legacy/repos/search/{keyword}.get.parameters[8].name" = "X-RateLimit-Remaining"
"paths./legacy/repos/search/{keyword}.get.parameters[8].type" = "integer"
"paths./legacy/repos/search/{keyword}.get.parameters[9].in" = "header"
"paths./legacy/repos/search/{keyword}.get.parameters[9].name" = "X-RateLimit-Reset"
"paths./legacy/repos/search/{keyword}.get.parameters[9].type" = "integer"
"paths./legacy/repos/search/{keyword}.get.responses.200.description" = "OK"
"paths./legacy/repos/search/{keyword}.get.responses.200.schema.$ref" = "#/definitions/search-repositories-by-keyword"
"paths./legacy/repos/search/{keyword}.get.responses.403.description" = "API rate limit exceeded. See http://developer.github.com/v3/#rate-limiting\nfor details.\n"
"paths./legacy/user/email/{email}.get.description" = "This API call is added for compatibility reasons only."
"paths./legacy/user/email/{email}.get.parameters.length" = 7
"paths./legacy/user/email/{email}.get.parameters[0].description" = "The email address"
"paths./legacy/user/email/{email}.get.parameters[0].in" = "path"
"paths./legacy/user/email/{email}.get.parameters[0].name" = "email"
"paths./legacy/user/email/{email}.get.parameters[0].required" = true
"paths./legacy/user/email/{email}.get.parameters[0].type" = "string"
"paths./legacy/user/email/{email}.get.parameters[1].description" = "You can check the current version of media type in responses.\n"
"paths./legacy/user/email/{email}.get.parameters[1].in" = "header"
"paths./legacy/user/email/{email}.get.parameters[1].name" = "X-GitHub-Media-Type"
"paths./legacy/user/email/{email}.get.parameters[1].type" = "string"
"paths./legacy/user/email/{email}.get.parameters[2].description" = "Is used to set specified media type."
"paths./legacy/user/email/{email}.get.parameters[2].in" = "header"
"paths./legacy/user/email/{email}.get.parameters[2].name" = "Accept"
"paths./legacy/user/email/{email}.get.parameters[2].type" = "string"
"paths./legacy/user/email/{email}.get.parameters[3].in" = "header"
"paths./legacy/user/email/{email}.get.parameters[3].name" = "X-RateLimit-Limit"
"paths./legacy/user/email/{email}.get.parameters[3].type" = "integer"
"paths./legacy/user/email/{email}.get.parameters[4].in" = "header"
"paths./legacy/user/email/{email}.get.parameters[4].name" = "X-RateLimit-Remaining"
"paths./legacy/user/email/{email}.get.parameters[4].type" = "integer"
"paths./legacy/user/email/{email}.get.parameters[5].in" = "header"
"paths./legacy/user/email/{email}.get.parameters[5].name" = "X-RateLimit-Reset"
"paths./legacy/user/email/{email}.get.parameters[5].type" = "integer"
"paths./legacy/user/email/{email}.get.parameters[6].in" = "header"
"paths./legacy/user/email/{email}.get.parameters[6].name" = "X-GitHub-Request-Id"
"paths./legacy/user/email/{email}.get.parameters[6].type" = "integer"
"paths./legacy/user/email/{email}.get.responses.200.description" = "OK"
"paths./legacy/user/email/{email}.get.responses.200.schema.$ref" = "#/definitions/search-user-by-email"
"paths./legacy/user/email/{email}.get.responses.403.description" = "API rate limit exceeded. See http://developer.github.com/v3/#rate-limiting\nfor details.\n"
"paths./legacy/user/search/{keyword}.get.description" = "Find users by keyword."
"paths./legacy/user/search/{keyword}.get.parameters.length" = 10
"paths./legacy/user/search/{keyword}.get.parameters[0].description" = "The search term"
"paths./legacy/user/search/{keyword}.get.parameters[0].in" = "path"
"paths./legacy/user/search/{keyword}.get.parameters[0].name" = "keyword"
"paths./legacy/user/search/{keyword}.get.parameters[0].required" = true
"paths./legacy/user/search/{keyword}.get.parameters[0].type" = "string"
"paths./legacy/user/search/{keyword}.get.parameters[1].default" = "desc"
"paths./legacy/user/search/{keyword}.get.parameters[1].description" = "The sort field. if sort param is provided. Can be either asc or desc."
"paths./legacy/user/search/{keyword}.get.parameters[1].enum.length" = 2
"paths./legacy/user/search/{keyword}.get.parameters[1].enum[0]" = "desc"
"paths./legacy/user/search/{keyword}.get.parameters[1].enum[1]" = "asc"
"paths./legacy/user/search/{keyword}.get.parameters[1].in" = "query"
"paths./legacy/user/search/{keyword}.get.parameters[1].name" = "order"
"paths./legacy/user/search/{keyword}.get.parameters[1].type" = "string"
"paths./legacy/user/search/{keyword}.get.parameters[2].description" = "The page number to fetch"
"paths./legacy/user/search/{keyword}.get.parameters[2].in" = "query"
"paths./legacy/user/search/{keyword}.get.parameters[2].name" = "start_page"
"paths./legacy/user/search/{keyword}.get.parameters[2].type" = "string"
"paths./legacy/user/search/{keyword}.get.parameters[3].description" = "The sort field. One of stars, forks, or updated. Default: results are sorted by best match."
"paths./legacy/user/search/{keyword}.get.parameters[3].enum.length" = 3
"paths./legacy/user/search/{keyword}.get.parameters[3].enum[0]" = "updated"
"paths./legacy/user/search/{keyword}.get.parameters[3].enum[1]" = "stars"
"paths./legacy/user/search/{keyword}.get.parameters[3].enum[2]" = "forks"
"paths./legacy/user/search/{keyword}.get.parameters[3].in" = "query"
"paths./legacy/user/search/{keyword}.get.parameters[3].name" = "sort"
"paths./legacy/user/search/{keyword}.get.parameters[3].type" = "string"
"paths./legacy/user/search/{keyword}.get.parameters[4].description" = "You can check the current version of media type in responses.\n"
"paths./legacy/user/search/{keyword}.get.parameters[4].in" = "header"
"paths./legacy/user/search/{keyword}.get.parameters[4].name" = "X-GitHub-Media-Type"
"paths./legacy/user/search/{keyword}.get.parameters[4].type" = "string"
"paths./legacy/user/search/{keyword}.get.parameters[5].description" = "Is used to set specified media type."
"paths./legacy/user/search/{keyword}.get.parameters[5].in" = "header"
"paths./legacy/user/search/{keyword}.get.parameters[5].name" = "Accept"
"paths./legacy/user/search/{keyword}.get.parameters[5].type" = "string"
"paths./legacy/user/search/{keyword}.get.parameters[6].in" = "header"
"paths./legacy/user/search/{keyword}.get.parameters[6].name" = "X-RateLimit-Limit"
"paths./legacy/user/search/{keyword}.get.parameters[6].type" = "integer"
"paths./legacy/user/search/{keyword}.get.parameters[7].in" = "header"
"paths./legacy/user/search/{keyword}.get.parameters[7].name" = "X-RateLimit-Remaining"
"paths./legacy/user/search/{keyword}.get.parameters[7].type" = "integer"
"paths./legacy/user/search/{keyword}.get.parameters[8].in" = "header"
"paths./legacy/user/search/{keyword}.get.parameters[8].name" = "X-RateLimit-Reset"
"paths./legacy/user/search/{keyword}.get.parameters[8].type" = "integer"
"paths./legacy/user/search/{keyword}.get.parameters[9].in" = "header"
"paths./legacy/user/search/{keyword}.get.parameters[9].name" = "X-GitHub-Request-Id"
"paths./legacy/user/search/{keyword}.get.parameters[9].type" = "integer"
"paths./legacy/user/search/{keyword}.get.responses.200.description" = "OK"
"paths./legacy/user/search/{keyword}.get.responses.200.schema.$ref" = "#/definitions/search-users-by-keyword"
"paths./legacy/user/search/{keyword}.get.responses.403.description" = "API rate limit exceeded. See http://developer.github.com/v3/#rate-limiting\nfor details.\n"
"paths./markdown.post.description" = "Render an arbitrary Markdown document"
"paths./markdown.post.parameters.length" = 7
"paths./markdown.post.parameters[0].description" = "You can check the current version of media type in responses.\n"
"paths./markdown.post.parameters[0].in" = "header"
"paths./markdown.post.parameters[0].name" = "X-GitHub-Media-Type"
"paths./markdown.post.parameters[0].type" = "string"
"paths./markdown.post.parameters[1].description" = "Is used to set specified media type."
"paths./markdown.post.parameters[1].in" = "header"
"paths./markdown.post.parameters[1].name" = "Accept"
"paths./markdown.post.parameters[1].type" = "string"
"paths./markdown.post.parameters[2].in" = "header"
"paths./markdown.post.parameters[2].name" = "X-RateLimit-Limit"
"paths./markdown.post.parameters[2].type" = "integer"
"paths./markdown.post.parameters[3].in" = "header"
"paths./markdown.post.parameters[3].name" = "X-RateLimit-Remaining"
"paths./markdown.post.parameters[3].type" = "integer"
"paths./markdown.post.parameters[4].in" = "header"
"paths./markdown.post.parameters[4].name" = "X-RateLimit-Reset"
"paths./markdown.post.parameters[4].type" = "integer"
"paths./markdown.post.parameters[5].in" = "header"
"paths./markdown.post.parameters[5].name" = "X-GitHub-Request-Id"
"paths./markdown.post.parameters[5].type" = "integer"
"paths./markdown.post.parameters[6].in" = "body"
"paths./markdown.post.parameters[6].name" = "body"
"paths./markdown.post.parameters[6].required" = true
"paths./markdown.post.parameters[6].schema.$ref" = "#/definitions/markdown"
"paths./markdown.post.produces.length" = 1
"paths./markdown.post.produces[0]" = "text/html"
"paths./markdown.post.responses.200.description" = "OK"
"paths./markdown.post.responses.403.description" = "API rate limit exceeded. See http://developer.github.com/v3/#rate-limiting\nfor details.\n"
"paths./markdown/raw.post.consumes.length" = 1
"paths./markdown/raw.post.consumes[0]" = "text/plain"
"paths./markdown/raw.post.description" = "Render a Markdown document in raw mode"
"paths./markdown/raw.post.parameters.length" = 6
"paths./markdown/raw.post.parameters[0].description" = "You can check the current version of media type in responses.\n"
"paths./markdown/raw.post.parameters[0].in" = "header"
"paths./markdown/raw.post.parameters[0].name" = "X-GitHub-Media-Type"
"paths./markdown/raw.post.parameters[0].type" = "string"
"paths./markdown/raw.post.parameters[1].description" = "Is used to set specified media type."
"paths./markdown/raw.post.parameters[1].in" = "header"
"paths./markdown/raw.post.parameters[1].name" = "Accept"
"paths./markdown/raw.post.parameters[1].type" = "string"
"paths./markdown/raw.post.parameters[2].in" = "header"
"paths./markdown/raw.post.parameters[2].name" = "X-RateLimit-Limit"
"paths./markdown/raw.post.parameters[2].type" = "integer"
"paths./markdown/raw.post.parameters[3].in" = "header"
"paths./markdown/raw.post.parameters[3].name" = "X-RateLimit-Remaining"
"paths./markdown/raw.post.parameters[3].type" = "integer"
"paths./markdown/raw.post.parameters[4].in" = "header"
"paths./markdown/raw.post.parameters[4].name" = "X-RateLimit-Reset"
"paths./markdown/raw.post.parameters[4].type" = "integer"
"paths./markdown/raw.post.parameters[5].in" = "header"
"paths./markdown/raw.post.parameters[5].name" = "X-GitHub-Request-Id"
"paths./markdown/raw.post.parameters[5].type" = "integer"
"paths./markdown/raw.post.produces.length" = 1
"paths./markdown/raw.post.produces[0]" = "text/html"
"paths./markdown/raw.post.responses.200.description" = "OK"
"paths./markdown/raw.post.responses.403.description" = "API rate limit exceeded. See http://developer.github.com/v3/#rate-limiting\nfor details.\n"
"paths./meta.get.description" = "This gives some information about GitHub.com, the service."
"paths./meta.get.parameters.length" = 6
"paths./meta.get.parameters[0].description" = "You can check the current version of media type in responses.\n"
"paths./meta.get.parameters[0].in" = "header"
"paths./meta.get.parameters[0].name" = "X-GitHub-Media-Type"
"paths./meta.get.parameters[0].type" = "string"
"paths./meta.get.parameters[1].description" = "Is used to set specified media type."
"paths./meta.get.parameters[1].in" = "header"
"paths./meta.get.parameters[1].name" = "Accept"
"paths./meta.get.parameters[1].type" = "string"
"paths./meta.get.parameters[2].in" = "header"
"paths./meta.get.parameters[2].name" = "X-RateLimit-Limit"
"paths./meta.get.parameters[2].type" = "integer"
"paths./meta.get.parameters[3].in" = "header"
"paths./meta.get.parameters[3].name" = "X-RateLimit-Remaining"
"paths./meta.get.parameters[3].type" = "integer"
"paths./meta.get.parameters[4].in" = "header"
"paths./meta.get.parameters[4].name" = "X-RateLimit-Reset"
"paths./meta.get.parameters[4].type" = "integer"
"paths./meta.get.parameters[5].in" = "header"
"paths./meta.get.parameters[5].name" = "X-GitHub-Request-Id"
"paths./meta.get.parameters[5].type" = "integer"
"paths./meta.get.responses.200.description" = "OK"
"paths./meta.get.responses.200.schema.$ref" = "#/definitions/meta"
"paths./meta.get.responses.403.description" = "API rate limit exceeded. See http://developer.github.com/v3/#rate-limiting\nfor details.\n"
"paths./networks/{owner}/{repo}/events.get.description" = "List public events for a network of repositories."
"paths./networks/{owner}/{repo}/events.get.parameters.length" = 8
"paths./networks/{owner}/{repo}/events.get.parameters[0].description" = "Name of the owner."
"paths./networks/{owner}/{repo}/events.get.parameters[0].in" = "path"
"paths./networks/{owner}/{repo}/events.get.parameters[0].name" = "owner"
"paths./networks/{owner}/{repo}/events.get.parameters[0].required" = true
"paths./networks/{owner}/{repo}/events.get.parameters[0].type" = "string"
"paths./networks/{owner}/{repo}/events.get.parameters[1].description" = "Name of repository."
"paths./networks/{owner}/{repo}/events.get.parameters[1].in" = "path"
"paths./networks/{owner}/{repo}/events.get.parameters[1].name" = "repo"
"paths./networks/{owner}/{repo}/events.get.parameters[1].required" = true
"paths./networks/{owner}/{repo}/events.get.parameters[1].type" = "string"
"paths./networks/{owner}/{repo}/events.get.parameters[2].description" = "You can check the current version of media type in responses.\n"
"paths./networks/{owner}/{repo}/events.get.parameters[2].in" = "header"
"paths./networks/{owner}/{repo}/events.get.parameters[2].name" = "X-GitHub-Media-Type"
"paths./networks/{owner}/{repo}/events.get.parameters[2].type" = "string"
"paths./networks/{owner}/{repo}/events.get.parameters[3].description" = "Is used to set specified media type."
"paths./networks/{owner}/{repo}/events.get.parameters[3].in" = "header"
"paths./networks/{owner}/{repo}/events.get.parameters[3].name" = "Accept"
"paths./networks/{owner}/{repo}/events.get.parameters[3].type" = "string"
"paths./networks/{owner}/{repo}/events.get.parameters[4].in" = "header"
"paths./networks/{owner}/{repo}/events.get.parameters[4].name" = "X-RateLimit-Limit"
"paths./networks/{owner}/{repo}/events.get.parameters[4].type" = "integer"
"paths./networks/{owner}/{repo}/events.get.parameters[5].in" = "header"
"paths./networks/{owner}/{repo}/events.get.parameters[5].name" = "X-RateLimit-Remaining"
"paths./networks/{owner}/{repo}/events.get.parameters[5].type" = "integer"
"paths./networks/{owner}/{repo}/events.get.parameters[6].in" = "header"
"paths./networks/{owner}/{repo}/events.get.parameters[6].name" = "X-RateLimit-Reset"
"paths./networks/{owner}/{repo}/events.get.parameters[6].type" = "integer"
"paths./networks/{owner}/{repo}/events.get.parameters[7].in" = "header"
"paths./networks/{owner}/{repo}/events.get.parameters[7].name" = "X-GitHub-Request-Id"
"paths./networks/{owner}/{repo}/events.get.parameters[7].type" = "integer"
"paths./networks/{owner}/{repo}/events.get.responses.200.description" = "OK"
"paths./networks/{owner}/{repo}/events.get.responses.200.schema.$ref" = "#/definitions/events"
"paths./networks/{owner}/{repo}/events.get.responses.403.description" = "API rate limit exceeded. See http://developer.github.com/v3/#rate-limiting\nfor details.\n"
"paths./notifications.get.description" = "List your notifications.\nList all notifications for the current user, grouped by repository.\n"
"paths./notifications.get.parameters.length" = 9
"paths./notifications.get.parameters[0].description" = "True to show notifications marked as read."
"paths./notifications.get.parameters[0].in" = "query"
"paths./notifications.get.parameters[0].name" = "all"
"paths./notifications.get.parameters[0].type" = "boolean"
"paths./notifications.get.parameters[1].description" = "True to show only notifications in which the user is directly participating\nor mentioned.\n"
"paths./notifications.get.parameters[1].in" = "query"
"paths./notifications.get.parameters[1].name" = "participating"
"paths./notifications.get.parameters[1].type" = "boolean"
"paths./notifications.get.parameters[2].description" = "The time should be passed in as UTC in the ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ.\nExample: \"2012-10-09T23:39:01Z\".\n"
"paths./notifications.get.parameters[2].in" = "query"
"paths./notifications.get.parameters[2].name" = "since"
"paths./notifications.get.parameters[2].type" = "string"
"paths./notifications.get.parameters[3].description" = "You can check the current version of media type in responses.\n"
"paths./notifications.get.parameters[3].in" = "header"
"paths./notifications.get.parameters[3].name" = "X-GitHub-Media-Type"
"paths./notifications.get.parameters[3].type" = "string"
"paths./notifications.get.parameters[4].description" = "Is used to set specified media type."
"paths./notifications.get.parameters[4].in" = "header"
"paths./notifications.get.parameters[4].name" = "Accept"
"paths./notifications.get.parameters[4].type" = "string"
"paths./notifications.get.parameters[5].in" = "header"
"paths./notifications.get.parameters[5].name" = "X-RateLimit-Limit"
"paths./notifications.get.parameters[5].type" = "integer"
"paths./notifications.get.parameters[6].in" = "header"
"paths./notifications.get.parameters[6].name" = "X-RateLimit-Remaining"
"paths./notifications.get.parameters[6].type" = "integer"
"paths./notifications.get.parameters[7].in" = "header"
"paths./notifications.get.parameters[7].name" = "X-RateLimit-Reset"
"paths./notifications.get.parameters[7].type" = "integer"
"paths./notifications.get.parameters[8].in" = "header"
"paths./notifications.get.parameters[8].name" = "X-GitHub-Request-Id"
"paths./notifications.get.parameters[8].type" = "integer"
"paths./notifications.get.responses.200.description" = "OK"
"paths./notifications.get.responses.200.schema.$ref" = "#/definitions/notifications"
"paths./notifications.get.responses.403.description" = "API rate limit exceeded. See http://developer.github.com/v3/#rate-limiting\nfor details.\n"
"paths./notifications.put.description" = "Mark as read.\nMarking a notification as \"read\" removes it from the default view on GitHub.com.\n"
"paths./notifications.put.parameters.length" = 7
"paths./notifications.put.parameters[0].description" = "You can check the current version of media type in responses.\n"
"paths./notifications.put.parameters[0].in" = "header"
"paths./notifications.put.parameters[0].name" = "X-GitHub-Media-Type"
"paths./notifications.put.parameters[0].type" = "string"
"paths./notifications.put.parameters[1].description" = "Is used to set specified media type."
"paths./notifications.put.parameters[1].in" = "header"
"paths./notifications.put.parameters[1].name" = "Accept"
"paths./notifications.put.parameters[1].type" = "string"
"paths./notifications.put.parameters[2].in" = "header"
"paths./notifications.put.parameters[2].name" = "X-RateLimit-Limit"
"paths./notifications.put.parameters[2].type" = "integer"
"paths./notifications.put.parameters[3].in" = "header"
"paths./notifications.put.parameters[3].name" = "X-RateLimit-Remaining"
"paths./notifications.put.parameters[3].type" = "integer"
"paths./notifications.put.parameters[4].in" = "header"
"paths./notifications.put.parameters[4].name" = "X-RateLimit-Reset"
"paths./notifications.put.parameters[4].type" = "integer"
"paths./notifications.put.parameters[5].in" = "header"
"paths./notifications.put.parameters[5].name" = "X-GitHub-Request-Id"
"paths./notifications.put.parameters[5].type" = "integer"
"paths./notifications.put.parameters[6].in" = "body"
"paths./notifications.put.parameters[6].name" = "body"
"paths./notifications.put.parameters[6].required" = true
"paths./notifications.put.parameters[6].schema.$ref" = "#/definitions/notificationMarkRead"
"paths./notifications.put.responses.205.description" = "Marked as read."
"paths./notifications.put.responses.403.description" = "API rate limit exceeded. See http://developer.github.com/v3/#rate-limiting\nfor details.\n"
"paths./notifications/threads/{id}.get.description" = "View a single thread."
"paths./notifications/threads/{id}.get.parameters.length" = 7
"paths./notifications/threads/{id}.get.parameters[0].description" = "Id of thread."
"paths./notifications/threads/{id}.get.parameters[0].in" = "path"
"paths./notifications/threads/{id}.get.parameters[0].name" = "id"
"paths./notifications/threads/{id}.get.parameters[0].required" = true
"paths./notifications/threads/{id}.get.parameters[0].type" = "integer"
"paths./notifications/threads/{id}.get.parameters[1].description" = "You can check the current version of media type in responses.\n"
"paths./notifications/threads/{id}.get.parameters[1].in" = "header"
"paths./notifications/threads/{id}.get.parameters[1].name" = "X-GitHub-Media-Type"
"paths./notifications/threads/{id}.get.parameters[1].type" = "string"
"paths./notifications/threads/{id}.get.parameters[2].description" = "Is used to set specified media type."
"paths./notifications/threads/{id}.get.parameters[2].in" = "header"
"paths./notifications/threads/{id}.get.parameters[2].name" = "Accept"
"paths./notifications/threads/{id}.get.parameters[2].type" = "string"
"paths./notifications/threads/{id}.get.parameters[3].in" = "header"
"paths./notifications/threads/{id}.get.parameters[3].name" = "X-RateLimit-Limit"
"paths./notifications/threads/{id}.get.parameters[3].type" = "integer"
"paths./notifications/threads/{id}.get.parameters[4].in" = "header"
"paths./notifications/threads/{id}.get.parameters[4].name" = "X-RateLimit-Remaining"
"paths./notifications/threads/{id}.get.parameters[4].type" = "integer"
"paths./notifications/threads/{id}.get.parameters[5].in" = "header"
"paths./notifications/threads/{id}.get.parameters[5].name" = "X-RateLimit-Reset"
"paths./notifications/threads/{id}.get.parameters[5].type" = "integer"
"paths./notifications/threads/{id}.get.parameters[6].in" = "header"
"paths./notifications/threads/{id}.get.parameters[6].name" = "X-GitHub-Request-Id"
"paths./notifications/threads/{id}.get.parameters[6].type" = "integer"
"paths./notifications/threads/{id}.get.responses.200.description" = "OK"
"paths./notifications/threads/{id}.get.responses.200.schema.$ref" = "#/definitions/notifications"
"paths./notifications/threads/{id}.get.responses.403.description" = "API rate limit exceeded. See http://developer.github.com/v3/#rate-limiting\nfor details.\n"
"paths./notifications/threads/{id}.patch.description" = "Mark a thread as read"
"paths./notifications/threads/{id}.patch.parameters.length" = 7
"paths./notifications/threads/{id}.patch.parameters[0].description" = "Id of thread."
"paths./notifications/threads/{id}.patch.parameters[0].in" = "path"
"paths./notifications/threads/{id}.patch.parameters[0].name" = "id"
"paths./notifications/threads/{id}.patch.parameters[0].required" = true
"paths./notifications/threads/{id}.patch.parameters[0].type" = "integer"
"paths./notifications/threads/{id}.patch.parameters[1].description" = "You can check the current version of media type in responses.\n"
"paths./notifications/threads/{id}.patch.parameters[1].in" = "header"
"paths./notifications/threads/{id}.patch.parameters[1].name" = "X-GitHub-Media-Type"
"paths./notifications/threads/{id}.patch.parameters[1].type" = "string"
"paths./notifications/threads/{id}.patch.parameters[2].description" = "Is used to set specified media type."
"paths./notifications/threads/{id}.patch.parameters[2].in" = "header"
"paths./notifications/threads/{id}.patch.parameters[2].name" = "Accept"
"paths./notifications/threads/{id}.patch.parameters[2].type" = "string"
"paths./notifications/threads/{id}.patch.parameters[3].in" = "header"
"paths./notifications/threads/{id}.patch.parameters[3].name" = "X-RateLimit-Limit"
"paths./notifications/threads/{id}.patch.parameters[3].type" = "integer"
"paths./notifications/threads/{id}.patch.parameters[4].in" = "header"
"paths./notifications/threads/{id}.patch.parameters[4].name" = "X-RateLimit-Remaining"
"paths./notifications/threads/{id}.patch.parameters[4].type" = "integer"
"paths./notifications/threads/{id}.patch.parameters[5].in" = "header"
"paths./notifications/threads/{id}.patch.parameters[5].name" = "X-RateLimit-Reset"
"paths./notifications/threads/{id}.patch.parameters[5].type" = "integer"
"paths./notifications/threads/{id}.patch.parameters[6].in" = "header"
"paths./notifications/threads/{id}.patch.parameters[6].name" = "X-GitHub-Request-Id"
"paths./notifications/threads/{id}.patch.parameters[6].type" = "integer"
"paths./notifications/threads/{id}.patch.responses.205.description" = "Thread marked as read."
"paths./notifications/threads/{id}.patch.responses.403.description" = "API rate limit exceeded. See http://developer.github.com/v3/#rate-limiting\nfor details.\n"
"paths./notifications/threads/{id}/subscription.delete.description" = "Delete a Thread Subscription."
"paths./notifications/threads/{id}/subscription.delete.parameters.length" = 7
"paths./notifications/threads/{id}/subscription.delete.parameters[0].description" = "Id of thread."
"paths./notifications/threads/{id}/subscription.delete.parameters[0].in" = "path"
"paths./notifications/threads/{id}/subscription.delete.parameters[0].name" = "id"
"paths./notifications/threads/{id}/subscription.delete.parameters[0].required" = true
"paths./notifications/threads/{id}/subscription.delete.parameters[0].type" = "integer"
"paths./notifications/threads/{id}/subscription.delete.parameters[1].description" = "You can check the current version of media type in responses.\n"
"paths./notifications/threads/{id}/subscription.delete.parameters[1].in" = "header"
"paths./notifications/threads/{id}/subscription.delete.parameters[1].name" = "X-GitHub-Media-Type"
"paths./notifications/threads/{id}/subscription.delete.parameters[1].type" = "string"
"paths./notifications/threads/{id}/subscription.delete.parameters[2].description" = "Is used to set specified media type."
"paths./notifications/threads/{id}/subscription.delete.parameters[2].in" = "header"
"paths./notifications/threads/{id}/subscription.delete.parameters[2].name" = "Accept"
"paths./notifications/threads/{id}/subscription.delete.parameters[2].type" = "string"
"paths./notifications/threads/{id}/subscription.delete.parameters[3].in" = "header"
"paths./notifications/threads/{id}/subscription.delete.parameters[3].name" = "X-RateLimit-Limit"
"paths./notifications/threads/{id}/subscription.delete.parameters[3].type" = "integer"
"paths./notifications/threads/{id}/subscription.delete.parameters[4].in" = "header"
"paths./notifications/threads/{id}/subscription.delete.parameters[4].name" = "X-RateLimit-Remaining"
"paths./notifications/threads/{id}/subscription.delete.parameters[4].type" = "integer"
"paths./notifications/threads/{id}/subscription.delete.parameters[5].in" = "header"
"paths./notifications/threads/{id}/subscription.delete.parameters[5].name" = "X-RateLimit-Reset"
"paths./notifications/threads/{id}/subscription.delete.parameters[5].type" = "integer"
"paths./notifications/threads/{id}/subscription.delete.parameters[6].in" = "header"
"paths./notifications/threads/{id}/subscription.delete.parameters[6].name" = "X-GitHub-Request-Id"
"paths./notifications/threads/{id}/subscription.delete.parameters[6].type" = "integer"
"paths./notifications/threads/{id}/subscription.delete.responses.204.description" = "No Content\n"
"paths./notifications/threads/{id}/subscription.delete.responses.403.description" = "API rate limit exceeded. See http://developer.github.com/v3/#rate-limiting\nfor details.\n"
"paths./notifications/threads/{id}/subscription.get.description" = "Get a Thread Subscription."
"paths./notifications/threads/{id}/subscription.get.parameters.length" = 7
"paths./notifications/threads/{id}/subscription.get.parameters[0].description" = "Id of thread."
"paths./notifications/threads/{id}/subscription.get.parameters[0].in" = "path"
"paths./notifications/threads/{id}/subscription.get.parameters[0].name" = "id"
"paths./notifications/threads/{id}/subscription.get.parameters[0].required" = true
"paths./notifications/threads/{id}/subscription.get.parameters[0].type" = "integer"
"paths./notifications/threads/{id}/subscription.get.parameters[1].description" = "You can check the current version of media type in responses.\n"
"paths./notifications/threads/{id}/subscription.get.parameters[1].in" = "header"
"paths./notifications/threads/{id}/subscription.get.parameters[1].name" = "X-GitHub-Media-Type"
"paths./notifications/threads/{id}/subscription.get.parameters[1].type" = "string"
"paths./notifications/threads/{id}/subscription.get.parameters[2].description" = "Is used to set specified media type."
"paths./notifications/threads/{id}/subscription.get.parameters[2].in" = "header"
"paths./notifications/threads/{id}/subscription.get.parameters[2].name" = "Accept"
"paths./notifications/threads/{id}/subscription.get.parameters[2].type" = "string"
"paths./notifications/threads/{id}/subscription.get.parameters[3].in" = "header"
"paths./notifications/threads/{id}/subscription.get.parameters[3].name" = "X-RateLimit-Limit"
"paths./notifications/threads/{id}/subscription.get.parameters[3].type" = "integer"
"paths./notifications/threads/{id}/subscription.get.parameters[4].in" = "header"
"paths./notifications/threads/{id}/subscription.get.parameters[4].name" = "X-RateLimit-Remaining"
"paths./notifications/threads/{id}/subscription.get.parameters[4].type" = "integer"
"paths./notifications/threads/{id}/subscription.get.parameters[5].in" = "header"
"paths./notifications/threads/{id}/subscription.get.parameters[5].name" = "X-RateLimit-Reset"
"paths./notifications/threads/{id}/subscription.get.parameters[5].type" = "integer"
"paths./notifications/threads/{id}/subscription.get.parameters[6].in" = "header"
"paths./notifications/threads/{id}/subscription.get.parameters[6].name" = "X-GitHub-Request-Id"
"paths./notifications/threads/{id}/subscription.get.parameters[6].type" = "integer"
"paths./notifications/threads/{id}/subscription.get.responses.200.description" = "OK"
"paths./notifications/threads/{id}/subscription.get.responses.200.schema.$ref" = "#/definitions/subscription"
"paths./notifications/threads/{id}/subscription.get.responses.403.description" = "API rate limit exceeded. See http://developer.github.com/v3/#rate-limiting\nfor details.\n"
"paths./notifications/threads/{id}/subscription.put.description" = "Set a Thread Subscription.\nThis lets you subscribe to a thread, or ignore it. Subscribing to a thread\nis unnecessary if the user is already subscribed to the repository. Ignoring\na thread will mute all future notifications (until you comment or get @mentioned).\n"
"paths./notifications/threads/{id}/subscription.put.parameters.length" = 8
"paths./notifications/threads/{id}/subscription.put.parameters[0].description" = "Id of thread."
"paths./notifications/threads/{id}/subscription.put.parameters[0].in" = "path"
"paths./notifications/threads/{id}/subscription.put.parameters[0].name" = "id"
"paths./notifications/threads/{id}/subscription.put.parameters[0].required" = true
"paths./notifications/threads/{id}/subscription.put.parameters[0].type" = "integer"
"paths./notifications/threads/{id}/subscription.put.parameters[1].description" = "You can check the current version of media type in responses.\n"
"paths./notifications/threads/{id}/subscription.put.parameters[1].in" = "header"
"paths./notifications/threads/{id}/subscription.put.parameters[1].name" = "X-GitHub-Media-Type"
"paths./notifications/threads/{id}/subscription.put.parameters[1].type" = "string"
"paths./notifications/threads/{id}/subscription.put.parameters[2].description" = "Is used to set specified media type."
"paths./notifications/threads/{id}/subscription.put.parameters[2].in" = "header"
"paths./notifications/threads/{id}/subscription.put.parameters[2].name" = "Accept"
"paths./notifications/threads/{id}/subscription.put.parameters[2].type" = "string"
"paths./notifications/threads/{id}/subscription.put.parameters[3].in" = "header"
"paths./notifications/threads/{id}/subscription.put.parameters[3].name" = "X-RateLimit-Limit"
"paths./notifications/threads/{id}/subscription.put.parameters[3].type" = "integer"
"paths./notifications/threads/{id}/subscription.put.parameters[4].in" = "header"
"paths./notifications/threads/{id}/subscription.put.parameters[4].name" = "X-RateLimit-Remaining"
"paths./notifications/threads/{id}/subscription.put.parameters[4].type" = "integer"
"paths./notifications/threads/{id}/subscription.put.parameters[5].in" = "header"
"paths./notifications/threads/{id}/subscription.put.parameters[5].name" = "X-RateLimit-Reset"
"paths./notifications/threads/{id}/subscription.put.parameters[5].type" = "integer"
"paths./notifications/threads/{id}/subscription.put.parameters[6].in" = "header"
"paths./notifications/threads/{id}/subscription.put.parameters[6].name" = "X-GitHub-Request-Id"
"paths./notifications/threads/{id}/subscription.put.parameters[6].type" = "integer"
"paths./notifications/threads/{id}/subscription.put.parameters[7].in" = "body"
"paths./notifications/threads/{id}/subscription.put.parameters[7].name" = "body"
"paths./notifications/threads/{id}/subscription.put.parameters[7].required" = true
"paths./notifications/threads/{id}/subscription.put.parameters[7].schema.$ref" = "#/definitions/putSubscription"
"paths./notifications/threads/{id}/subscription.put.responses.200.description" = "OK"
"paths./notifications/threads/{id}/subscription.put.responses.200.schema.$ref" = "#/definitions/subscription"
"paths./notifications/threads/{id}/subscription.put.responses.403.description" = "API rate limit exceeded. See http://developer.github.com/v3/#rate-limiting\nfor details.\n"
"paths./orgs/{org}.get.description" = "Get an Organization."
"paths./orgs/{org}.get.parameters.length" = 7
"paths./orgs/{org}.get.parameters[0].description" = "Name of organisation."
"paths./orgs/{org}.get.parameters[0].in" = "path"
"paths./orgs/{org}.get.parameters[0].name" = "org"
"paths./orgs/{org}.get.parameters[0].required" = true
"paths./orgs/{org}.get.parameters[0].type" = "string"
"paths./orgs/{org}.get.parameters[1].description" = "You can check the current version of media type in responses.\n"
"paths./orgs/{org}.get.parameters[1].in" = "header"
"paths./orgs/{org}.get.parameters[1].name" = "X-GitHub-Media-Type"
"paths./orgs/{org}.get.parameters[1].type" = "string"
"paths./orgs/{org}.get.parameters[2].description" = "Is used to set specified media type."
"paths./orgs/{org}.get.parameters[2].in" = "header"
"paths./orgs/{org}.get.parameters[2].name" = "Accept"
"paths./orgs/{org}.get.parameters[2].type" = "string"
"paths./orgs/{org}.get.parameters[3].in" = "header"
"paths./orgs/{org}.get.parameters[3].name" = "X-RateLimit-Limit"
"paths./orgs/{org}.get.parameters[3].type" = "integer"
"paths./orgs/{org}.get.parameters[4].in" = "header"
"paths./orgs/{org}.get.parameters[4].name" = "X-RateLimit-Remaining"
"paths./orgs/{org}.get.parameters[4].type" = "integer"
"paths./orgs/{org}.get.parameters[5].in" = "header"
"paths./orgs/{org}.get.parameters[5].name" = "X-RateLimit-Reset"
"paths./orgs/{org}.get.parameters[5].type" = "integer"
"paths./orgs/{org}.get.parameters[6].in" = "header"
"paths./orgs/{org}.get.parameters[6].name" = "X-GitHub-Request-Id"
"paths./orgs/{org}.get.parameters[6].type" = "integer"
"paths./orgs/{org}.get.responses.200.description" = "OK"
"paths./orgs/{org}.get.responses.200.schema.$ref" = "#/definitions/organization"
"paths./orgs/{org}.get.responses.403.description" = "API rate limit exceeded. See http://developer.github.com/v3/#rate-limiting\nfor details.\n"
"paths./orgs/{org}.patch.description" = "Edit an Organization."
"paths./orgs/{org}.patch.parameters.length" = 8
"paths./orgs/{org}.patch.parameters[0].description" = "Name of organisation."
"paths./orgs/{org}.patch.parameters[0].in" = "path"
"paths./orgs/{org}.patch.parameters[0].name" = "org"
"paths./orgs/{org}.patch.parameters[0].required" = true
"paths./orgs/{org}.patch.parameters[0].type" = "string"
"paths./orgs/{org}.patch.parameters[1].description" = "You can check the current version of media type in responses.\n"
"paths./orgs/{org}.patch.parameters[1].in" = "header"
"paths./orgs/{org}.patch.parameters[1].name" = "X-GitHub-Media-Type"
"paths./orgs/{org}.patch.parameters[1].type" = "string"
"paths./orgs/{org}.patch.parameters[2].description" = "Is used to set specified media type."
"paths./orgs/{org}.patch.parameters[2].in" = "header"
"paths./orgs/{org}.patch.parameters[2].name" = "Accept"
"paths./orgs/{org}.patch.parameters[2].type" = "string"
"paths./orgs/{org}.patch.parameters[3].in" = "header"
"paths./orgs/{org}.patch.parameters[3].name" = "X-RateLimit-Limit"
"paths./orgs/{org}.patch.parameters[3].type" = "integer"
"paths./orgs/{org}.patch.parameters[4].in" = "header"
"paths./orgs/{org}.patch.parameters[4].name" = "X-RateLimit-Remaining"
"paths./orgs/{org}.patch.parameters[4].type" = "integer"
"paths./orgs/{org}.patch.parameters[5].in" = "header"
"paths./orgs/{org}.patch.parameters[5].name" = "X-RateLimit-Reset"
"paths./orgs/{org}.patch.parameters[5].type" = "integer"
"paths./orgs/{org}.patch.parameters[6].in" = "header"
"paths./orgs/{org}.patch.parameters[6].name" = "X-GitHub-Request-Id"
"paths./orgs/{org}.patch.parameters[6].type" = "integer"
"paths./orgs/{org}.patch.parameters[7].in" = "body"
"paths./orgs/{org}.patch.parameters[7].name" = "body"
"paths./orgs/{org}.patch.parameters[7].required" = true
"paths./orgs/{org}.patch.parameters[7].schema.$ref" = "#/definitions/patchOrg"
"paths./orgs/{org}.patch.responses.200.description" = "OK"
"paths./orgs/{org}.patch.responses.200.schema.$ref" = "#/definitions/organization"
"paths./orgs/{org}.patch.responses.403.description" = "API rate limit exceeded. See http://developer.github.com/v3/#rate-limiting\nfor details.\n"
"paths./orgs/{org}/events.get.description" = "List public events for an organization."
"paths./orgs/{org}/events.get.parameters.length" = 7
"paths./orgs/{org}/events.get.parameters[0].description" = "Name of organisation."
"paths./orgs/{org}/events.get.parameters[0].in" = "path"
"paths./orgs/{org}/events.get.parameters[0].name" = "org"
"paths./orgs/{org}/events.get.parameters[0].required" = true
"paths./orgs/{org}/events.get.parameters[0].type" = "string"
"paths./orgs/{org}/events.get.parameters[1].description" = "You can check the current version of media type in responses.\n"
"paths./orgs/{org}/events.get.parameters[1].in" = "header"
"paths./orgs/{org}/events.get.parameters[1].name" = "X-GitHub-Media-Type"
"paths./orgs/{org}/events.get.parameters[1].type" = "string"
"paths./orgs/{org}/events.get.parameters[2].description" = "Is used to set specified media type."
"paths./orgs/{org}/events.get.parameters[2].in" = "header"
"paths./orgs/{org}/events.get.parameters[2].name" = "Accept"
"paths./orgs/{org}/events.get.parameters[2].type" = "string"
"paths./orgs/{org}/events.get.parameters[3].in" = "header"
"paths./orgs/{org}/events.get.parameters[3].name" = "X-RateLimit-Limit"
"paths./orgs/{org}/events.get.parameters[3].type" = "integer"
"paths./orgs/{org}/events.get.parameters[4].in" = "header"
"paths./orgs/{org}/events.get.parameters[4].name" = "X-RateLimit-Remaining"
"paths./orgs/{org}/events.get.parameters[4].type" = "integer"
"paths./orgs/{org}/events.get.parameters[5].in" = "header"
"paths./orgs/{org}/events.get.parameters[5].name" = "X-RateLimit-Reset"
"paths./orgs/{org}/events.get.parameters[5].type" = "integer"
"paths./orgs/{org}/events.get.parameters[6].in" = "header"
"paths./orgs/{org}/events.get.parameters[6].name" = "X-GitHub-Request-Id"
"paths./orgs/{org}/events.get.parameters[6].type" = "integer"
"paths./orgs/{org}/events.get.responses.200.description" = "OK"
"paths./orgs/{org}/events.get.responses.200.schema.$ref" = "#/definitions/events"
"paths./orgs/{org}/events.get.responses.403.description" = "API rate limit exceeded. See http://developer.github.com/v3/#rate-limiting\nfor details.\n"
"paths./orgs/{org}/issues.get.description" = "List issues.\nList all issues for a given organization for the authenticated user.\n"
"paths./orgs/{org}/issues.get.parameters.length" = 13
"paths./orgs/{org}/issues.get.parameters[0].description" = "Name of organisation."
"paths./orgs/{org}/issues.get.parameters[0].in" = "path"
"paths./orgs/{org}/issues.get.parameters[0].name" = "org"
"paths./orgs/{org}/issues.get.parameters[0].required" = true
"paths./orgs/{org}/issues.get.parameters[0].type" = "string"
"paths./orgs/{org}/issues.get.parameters[10].in" = "header"
"paths./orgs/{org}/issues.get.parameters[10].name" = "X-RateLimit-Remaining"
"paths./orgs/{org}/issues.get.parameters[10].type" = "integer"
"paths./orgs/{org}/issues.get.parameters[11].in" = "header"
"paths./orgs/{org}/issues.get.parameters[11].name" = "X-RateLimit-Reset"
"paths./orgs/{org}/issues.get.parameters[11].type" = "integer"
"paths./orgs/{org}/issues.get.parameters[12].in" = "header"
"paths./orgs/{org}/issues.get.parameters[12].name" = "X-GitHub-Request-Id"
"paths./orgs/{org}/issues.get.parameters[12].type" = "integer"
"paths./orgs/{org}/issues.get.parameters[1].default" = "all"
"paths./orgs/{org}/issues.get.parameters[1].description" = "Issues assigned to you / created by you / mentioning you / you're\nsubscribed to updates for / All issues the authenticated user can see\n"
"paths./orgs/{org}/issues.get.parameters[1].enum.length" = 5
"paths./orgs/{org}/issues.get.parameters[1].enum[0]" = "assigned"
"paths./orgs/{org}/issues.get.parameters[1].enum[1]" = "created"
"paths./orgs/{org}/issues.get.parameters[1].enum[2]" = "mentioned"
"paths./orgs/{org}/issues.get.parameters[1].enum[3]" = "subscribed"
"paths./orgs/{org}/issues.get.parameters[1].enum[4]" = "all"
"paths./orgs/{org}/issues.get.parameters[1].in" = "query"
"paths./orgs/{org}/issues.get.parameters[1].name" = "filter"
"paths./orgs/{org}/issues.get.parameters[1].required" = true
"paths./orgs/{org}/issues.get.parameters[1].type" = "string"
"paths./orgs/{org}/issues.get.parameters[2].default" = "open"
"paths./orgs/{org}/issues.get.parameters[2].enum.length" = 2
"paths./orgs/{org}/issues.get.parameters[2].enum[0]" = "open"
"paths./orgs/{org}/issues.get.parameters[2].enum[1]" = "closed"
"paths./orgs/{org}/issues.get.parameters[2].in" = "query"
"paths./orgs/{org}/issues.get.parameters[2].name" = "state"
"paths./orgs/{org}/issues.get.parameters[2].required" = true
"paths./orgs/{org}/issues.get.parameters[2].type" = "string"
"paths./orgs/{org}/issues.get.parameters[3].description" = "String list of comma separated Label names. Example - bug,ui,@high."
"paths./orgs/{org}/issues.get.parameters[3].in" = "query"
"paths./orgs/{org}/issues.get.parameters[3].name" = "labels"
"paths./orgs/{org}/issues.get.parameters[3].required" = true
"paths./orgs/{org}/issues.get.parameters[3].type" = "string"
"paths./orgs/{org}/issues.get.parameters[4].default" = "created"
"paths./orgs/{org}/issues.get.parameters[4].enum.length" = 3
"paths./orgs/{org}/issues.get.parameters[4].enum[0]" = "created"
"paths./orgs/{org}/issues.get.parameters[4].enum[1]" = "updated"
"paths./orgs/{org}/issues.get.parameters[4].enum[2]" = "comments"
"paths./orgs/{org}/issues.get.parameters[4].in" = "query"
"paths./orgs/{org}/issues.get.parameters[4].name" = "sort"
"paths./orgs/{org}/issues.get.parameters[4].required" = true
"paths./orgs/{org}/issues.get.parameters[4].type" = "string"
"paths./orgs/{org}/issues.get.parameters[5].default" = "desc"
"paths./orgs/{org}/issues.get.parameters[5].enum.length" = 2
"paths./orgs/{org}/issues.get.parameters[5].enum[0]" = "asc"
"paths./orgs/{org}/issues.get.parameters[5].enum[1]" = "desc"
"paths./orgs/{org}/issues.get.parameters[5].in" = "query"
"paths./orgs/{org}/issues.get.parameters[5].name" = "direction"
"paths./orgs/{org}/issues.get.parameters[5].required" = true
"paths./orgs/{org}/issues.get.parameters[5].type" = "string"
"paths./orgs/{org}/issues.get.parameters[6].description" = "Optional string of a timestamp in ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ.\nOnly issues updated at or after this time are returned.\n"
"paths./orgs/{org}/issues.get.parameters[6].in" = "query"
"paths./orgs/{org}/issues.get.parameters[6].name" = "since"
"paths./orgs/{org}/issues.get.parameters[6].type" = "string"
"paths./orgs/{org}/issues.get.parameters[7].description" = "You can check the current version of media type in responses.\n"
"paths./orgs/{org}/issues.get.parameters[7].in" = "header"
"paths./orgs/{org}/issues.get.parameters[7].name" = "X-GitHub-Media-Type"
"paths./orgs/{org}/issues.get.parameters[7].type" = "string"
"paths./orgs/{org}/issues.get.parameters[8].description" = "Is used to set specified media type."
"paths./orgs/{org}/issues.get.parameters[8].in" = "header"
"paths./orgs/{org}/issues.get.parameters[8].name" = "Accept"
"paths./orgs/{org}/issues.get.parameters[8].type" = "string"
"paths./orgs/{org}/issues.get.parameters[9].in" = "header"
"paths./orgs/{org}/issues.get.parameters[9].name" = "X-RateLimit-Limit"
"paths./orgs/{org}/issues.get.parameters[9].type" = "integer"
"paths./orgs/{org}/issues.get.responses.200.description" = "OK"
"paths./orgs/{org}/issues.get.responses.200.schema.$ref" = "#/definitions/issues"
"paths./orgs/{org}/issues.get.responses.403.description" = "API rate limit exceeded. See http://developer.github.com/v3/#rate-limiting\nfor details.\n"
"paths./orgs/{org}/members.get.description" = "Members list.\nList all users who are members of an organization. A member is a user tha\nbelongs to at least 1 team in the organization. If the authenticated user\nis also an owner of this organization then both concealed and public members\nwill be returned. If the requester is not an owner of the organization the\nquery will be redirected to the public members list.\n"
"paths./orgs/{org}/members.get.parameters.length" = 7
"paths./orgs/{org}/members.get.parameters[0].description" = "Name of organisation."
"paths./orgs/{org}/members.get.parameters[0].in" = "path"
"paths./orgs/{org}/members.get.parameters[0].name" = "org"
"paths./orgs/{org}/members.get.parameters[0].required" = true
"paths./orgs/{org}/members.get.parameters[0].type" = "string"
"paths./orgs/{org}/members.get.parameters[1].description" = "You can check the current version of media type in responses.\n"
"paths./orgs/{org}/members.get.parameters[1].in" = "header"
"paths./orgs/{org}/members.get.parameters[1].name" = "X-GitHub-Media-Type"
"paths./orgs/{org}/members.get.parameters[1].type" = "string"
"paths./orgs/{org}/members.get.parameters[2].description" = "Is used to set specified media type."
"paths./orgs/{org}/members.get.parameters[2].in" = "header"
"paths./orgs/{org}/members.get.parameters[2].name" = "Accept"
"paths./orgs/{org}/members.get.parameters[2].type" = "string"
"paths./orgs/{org}/members.get.parameters[3].in" = "header"
"paths./orgs/{org}/members.get.parameters[3].name" = "X-RateLimit-Limit"
"paths./orgs/{org}/members.get.parameters[3].type" = "integer"
"paths./orgs/{org}/members.get.parameters[4].in" = "header"
"paths./orgs/{org}/members.get.parameters[4].name" = "X-RateLimit-Remaining"
"paths./orgs/{org}/members.get.parameters[4].type" = "integer"
"paths./orgs/{org}/members.get.parameters[5].in" = "header"
"paths./orgs/{org}/members.get.parameters[5].name" = "X-RateLimit-Reset"
"paths./orgs/{org}/members.get.parameters[5].type" = "integer"
"paths./orgs/{org}/members.get.parameters[6].in" = "header"
"paths./orgs/{org}/members.get.parameters[6].name" = "X-GitHub-Request-Id"
"paths./orgs/{org}/members.get.parameters[6].type" = "integer"
"paths./orgs/{org}/members.get.responses.200.description" = "OK"
"paths./orgs/{org}/members.get.responses.200.schema.$ref" = "#/definitions/users"
"paths./orgs/{org}/members.get.responses.302.description" = "Response if requester is not an organization member."
"paths./orgs/{org}/members.get.responses.403.description" = "API rate limit exceeded. See http://developer.github.com/v3/#rate-limiting\nfor details.\n"
"paths./orgs/{org}/members/{username}.delete.description" = "Remove a member.\nRemoving a user from this list will remove them from all teams and they\nwill no longer have any access to the organization's repositories.\n"
"paths./orgs/{org}/members/{username}.delete.parameters.length" = 8
"paths./orgs/{org}/members/{username}.delete.parameters[0].description" = "Name of organisation."
"paths./orgs/{org}/members/{username}.delete.parameters[0].in" = "path"
"paths./orgs/{org}/members/{username}.delete.parameters[0].name" = "org"
"paths./orgs/{org}/members/{username}.delete.parameters[0].required" = true
"paths./orgs/{org}/members/{username}.delete.parameters[0].type" = "string"
"paths./orgs/{org}/members/{username}.delete.parameters[1].description" = "Name of the user."
"paths./orgs/{org}/members/{username}.delete.parameters[1].in" = "path"
"paths./orgs/{org}/members/{username}.delete.parameters[1].name" = "username"
"paths./orgs/{org}/members/{username}.delete.parameters[1].required" = true
"paths./orgs/{org}/members/{username}.delete.parameters[1].type" = "string"
"paths./orgs/{org}/members/{username}.delete.parameters[2].description" = "You can check the current version of media type in responses.\n"
"paths./orgs/{org}/members/{username}.delete.parameters[2].in" = "header"
"paths./orgs/{org}/members/{username}.delete.parameters[2].name" = "X-GitHub-Media-Type"
"paths./orgs/{org}/members/{username}.delete.parameters[2].type" = "string"
"paths./orgs/{org}/members/{username}.delete.parameters[3].description" = "Is used to set specified media type."
"paths./orgs/{org}/members/{username}.delete.parameters[3].in" = "header"
"paths./orgs/{org}/members/{username}.delete.parameters[3].name" = "Accept"
"paths./orgs/{org}/members/{username}.delete.parameters[3].type" = "string"
"paths./orgs/{org}/members/{username}.delete.parameters[4].in" = "header"
"paths./orgs/{org}/members/{username}.delete.parameters[4].name" = "X-RateLimit-Limit"
"paths./orgs/{org}/members/{username}.delete.parameters[4].type" = "integer"
"paths./orgs/{org}/members/{username}.delete.parameters[5].in" = "header"
"paths./orgs/{org}/members/{username}.delete.parameters[5].name" = "X-RateLimit-Remaining"
"paths./orgs/{org}/members/{username}.delete.parameters[5].type" = "integer"
"paths./orgs/{org}/members/{username}.delete.parameters[6].in" = "header"
"paths./orgs/{org}/members/{username}.delete.parameters[6].name" = "X-RateLimit-Reset"
"paths./orgs/{org}/members/{username}.delete.parameters[6].type" = "integer"
"paths./orgs/{org}/members/{username}.delete.parameters[7].in" = "header"
"paths./orgs/{org}/members/{username}.delete.parameters[7].name" = "X-GitHub-Request-Id"
"paths./orgs/{org}/members/{username}.delete.parameters[7].type" = "integer"
"paths./orgs/{org}/members/{username}.delete.responses.204.description" = "No content.\n"
"paths./orgs/{org}/members/{username}.delete.responses.403.description" = "API rate limit exceeded. See http://developer.github.com/v3/#rate-limiting\nfor details.\n"
"paths./orgs/{org}/members/{username}.get.description" = "Check if a user is, publicly or privately, a member of the organization."
"paths./orgs/{org}/members/{username}.get.parameters.length" = 8
"paths./orgs/{org}/members/{username}.get.parameters[0].description" = "Name of organisation."
"paths./orgs/{org}/members/{username}.get.parameters[0].in" = "path"
"paths./orgs/{org}/members/{username}.get.parameters[0].name" = "org"
"paths./orgs/{org}/members/{username}.get.parameters[0].required" = true
"paths./orgs/{org}/members/{username}.get.parameters[0].type" = "string"
"paths./orgs/{org}/members/{username}.get.parameters[1].description" = "Name of the user."
"paths./orgs/{org}/members/{username}.get.parameters[1].in" = "path"
"paths./orgs/{org}/members/{username}.get.parameters[1].name" = "username"
"paths./orgs/{org}/members/{username}.get.parameters[1].required" = true
"paths./orgs/{org}/members/{username}.get.parameters[1].type" = "string"
"paths./orgs/{org}/members/{username}.get.parameters[2].description" = "You can check the current version of media type in responses.\n"
"paths./orgs/{org}/members/{username}.get.parameters[2].in" = "header"
"paths./orgs/{org}/members/{username}.get.parameters[2].name" = "X-GitHub-Media-Type"
"paths./orgs/{org}/members/{username}.get.parameters[2].type" = "string"
"paths./orgs/{org}/members/{username}.get.parameters[3].description" = "Is used to set specified media type."
"paths./orgs/{org}/members/{username}.get.parameters[3].in" = "header"
"paths./orgs/{org}/members/{username}.get.parameters[3].name" = "Accept"
"paths./orgs/{org}/members/{username}.get.parameters[3].type" = "string"
"paths./orgs/{org}/members/{username}.get.parameters[4].in" = "header"
"paths./orgs/{org}/members/{username}.get.parameters[4].name" = "X-RateLimit-Limit"
"paths./orgs/{org}/members/{username}.get.parameters[4].type" = "integer"
"paths./orgs/{org}/members/{username}.get.parameters[5].in" = "header"
"paths./orgs/{org}/members/{username}.get.parameters[5].name" = "X-RateLimit-Remaining"
"paths./orgs/{org}/members/{username}.get.parameters[5].type" = "integer"
"paths./orgs/{org}/members/{username}.get.parameters[6].in" = "header"
"paths./orgs/{org}/members/{username}.get.parameters[6].name" = "X-RateLimit-Reset"
"paths./orgs/{org}/members/{username}.get.parameters[6].type" = "integer"
"paths./orgs/{org}/members/{username}.get.parameters[7].in" = "header"
"paths./orgs/{org}/members/{username}.get.parameters[7].name" = "X-GitHub-Request-Id"
"paths./orgs/{org}/members/{username}.get.parameters[7].type" = "integer"
"paths./orgs/{org}/members/{username}.get.responses.204.description" = "No content. Response if requester is an organization member and user is a member\n"
"paths./orgs/{org}/members/{username}.get.responses.302.description" = "Found. Response if requester is not an organization member\n"
"paths./orgs/{org}/members/{username}.get.responses.403.description" = "API rate limit exceeded. See http://developer.github.com/v3/#rate-limiting\nfor details.\n"
"paths./orgs/{org}/members/{username}.get.responses.404.description" = "Not Found.\na. Response if requester is an organization member and user is not a member\nb. Response if requester is not an organization member and is inquiring about themselves\n"
"paths./orgs/{org}/public_members.get.description" = "Public members list.\nMembers of an organization can choose to have their membership publicized\nor not.\n"
"paths./orgs/{org}/public_members.get.parameters.length" = 7
"paths./orgs/{org}/public_members.get.parameters[0].description" = "Name of organisation."
"paths./orgs/{org}/public_members.get.parameters[0].in" = "path"
"paths./orgs/{org}/public_members.get.parameters[0].name" = "org"
"paths./orgs/{org}/public_members.get.parameters[0].required" = true
"paths./orgs/{org}/public_members.get.parameters[0].type" = "string"
"paths./orgs/{org}/public_members.get.parameters[1].description" = "You can check the current version of media type in responses.\n"
"paths./orgs/{org}/public_members.get.parameters[1].in" = "header"
"paths./orgs/{org}/public_members.get.parameters[1].name" = "X-GitHub-Media-Type"
"paths./orgs/{org}/public_members.get.parameters[1].type" = "string"
"paths./orgs/{org}/public_members.get.parameters[2].description" = "Is used to set specified media type."
"paths./orgs/{org}/public_members.get.parameters[2].in" = "header"
"paths./orgs/{org}/public_members.get.parameters[2].name" = "Accept"
"paths./orgs/{org}/public_members.get.parameters[2].type" = "string"
"paths./orgs/{org}/public_members.get.parameters[3].in" = "header"
"paths./orgs/{org}/public_members.get.parameters[3].name" = "X-RateLimit-Limit"
"paths./orgs/{org}/public_members.get.parameters[3].type" = "integer"
"paths./orgs/{org}/public_members.get.parameters[4].in" = "header"
"paths./orgs/{org}/public_members.get.parameters[4].name" = "X-RateLimit-Remaining"
"paths./orgs/{org}/public_members.get.parameters[4].type" = "integer"
"paths./orgs/{org}/public_members.get.parameters[5].in" = "header"
"paths./orgs/{org}/public_members.get.parameters[5].name" = "X-RateLimit-Reset"
"paths./orgs/{org}/public_members.get.parameters[5].type" = "integer"
"paths./orgs/{org}/public_members.get.parameters[6].in" = "header"
"paths./orgs/{org}/public_members.get.parameters[6].name" = "X-GitHub-Request-Id"
"paths./orgs/{org}/public_members.get.parameters[6].type" = "integer"
"paths./orgs/{org}/public_members.get.responses.200.description" = "OK"
"paths./orgs/{org}/public_members.get.responses.200.schema.$ref" = "#/definitions/users"
"paths./orgs/{org}/public_members.get.responses.403.description" = "API rate limit exceeded. See http://developer.github.com/v3/#rate-limiting\nfor details.\n"
"paths./orgs/{org}/public_members/{username}.delete.description" = "Conceal a user's membership."
"paths./orgs/{org}/public_members/{username}.delete.parameters.length" = 8
"paths./orgs/{org}/public_members/{username}.delete.parameters[0].description" = "Name of organisation."
"paths./orgs/{org}/public_members/{username}.delete.parameters[0].in" = "path"
"paths./orgs/{org}/public_members/{username}.delete.parameters[0].name" = "org"
"paths./orgs/{org}/public_members/{username}.delete.parameters[0].required" = true
"paths./orgs/{org}/public_members/{username}.delete.parameters[0].type" = "string"
"paths./orgs/{org}/public_members/{username}.delete.parameters[1].description" = "Name of the user."
"paths./orgs/{org}/public_members/{username}.delete.parameters[1].in" = "path"
"paths./orgs/{org}/public_members/{username}.delete.parameters[1].name" = "username"
"paths./orgs/{org}/public_members/{username}.delete.parameters[1].required" = true
"paths./orgs/{org}/public_members/{username}.delete.parameters[1].type" = "string"
"paths./orgs/{org}/public_members/{username}.delete.parameters[2].description" = "You can check the current version of media type in responses.\n"
"paths./orgs/{org}/public_members/{username}.delete.parameters[2].in" = "header"
"paths./orgs/{org}/public_members/{username}.delete.parameters[2].name" = "X-GitHub-Media-Type"
"paths./orgs/{org}/public_members/{username}.delete.parameters[2].type" = "string"
"paths./orgs/{org}/public_members/{username}.delete.parameters[3].description" = "Is used to set specified media type."
"paths./orgs/{org}/public_members/{username}.delete.parameters[3].in" = "header"
"paths./orgs/{org}/public_members/{username}.delete.parameters[3].name" = "Accept"
"paths./orgs/{org}/public_members/{username}.delete.parameters[3].type" = "string"
"paths./orgs/{org}/public_members/{username}.delete.parameters[4].in" = "header"
"paths./orgs/{org}/public_members/{username}.delete.parameters[4].name" = "X-RateLimit-Limit"
"paths./orgs/{org}/public_members/{username}.delete.parameters[4].type" = "integer"
"paths./orgs/{org}/public_members/{username}.delete.parameters[5].in" = "header"
"paths./orgs/{org}/public_members/{username}.delete.parameters[5].name" = "X-RateLimit-Remaining"
"paths./orgs/{org}/public_members/{username}.delete.parameters[5].type" = "integer"
"paths./orgs/{org}/public_members/{username}.delete.parameters[6].in" = "header"
"paths./orgs/{org}/public_members/{username}.delete.parameters[6].name" = "X-RateLimit-Reset"
"paths./orgs/{org}/public_members/{username}.delete.parameters[6].type" = "integer"
"paths./orgs/{org}/public_members/{username}.delete.parameters[7].in" = "header"
"paths./orgs/{org}/public_members/{username}.delete.parameters[7].name" = "X-GitHub-Request-Id"
"paths./orgs/{org}/public_members/{username}.delete.parameters[7].type" = "integer"
"paths./orgs/{org}/public_members/{username}.delete.responses.204.description" = "Concealed."
"paths./orgs/{org}/public_members/{username}.delete.responses.403.description" = "API rate limit exceeded. See http://developer.github.com/v3/#rate-limiting\nfor details.\n"
"paths./orgs/{org}/public_members/{username}.get.description" = "Check public membership."
"paths./orgs/{org}/public_members/{username}.get.parameters.length" = 8
"paths./orgs/{org}/public_members/{username}.get.parameters[0].description" = "Name of organisation."
"paths./orgs/{org}/public_members/{username}.get.parameters[0].in" = "path"
"paths./orgs/{org}/public_members/{username}.get.parameters[0].name" = "org"
"paths./orgs/{org}/public_members/{username}.get.parameters[0].required" = true
"paths./orgs/{org}/public_members/{username}.get.parameters[0].type" = "string"
"paths./orgs/{org}/public_members/{username}.get.parameters[1].description" = "Name of the user."
"paths./orgs/{org}/public_members/{username}.get.parameters[1].in" = "path"
"paths./orgs/{org}/public_members/{username}.get.parameters[1].name" = "username"
"paths./orgs/{org}/public_members/{username}.get.parameters[1].required" = true
"paths./orgs/{org}/public_members/{username}.get.parameters[1].type" = "string"
"paths./orgs/{org}/public_members/{username}.get.parameters[2].description" = "You can check the current version of media type in responses.\n"
"paths./orgs/{org}/public_members/{username}.get.parameters[2].in" = "header"
"paths./orgs/{org}/public_members/{username}.get.parameters[2].name" = "X-GitHub-Media-Type"
"paths./orgs/{org}/public_members/{username}.get.parameters[2].type" = "string"
"paths./orgs/{org}/public_members/{username}.get.parameters[3].description" = "Is used to set specified media type."
"paths./orgs/{org}/public_members/{username}.get.parameters[3].in" = "header"
"paths./orgs/{org}/public_members/{username}.get.parameters[3].name" = "Accept"
"paths./orgs/{org}/public_members/{username}.get.parameters[3].type" = "string"
"paths./orgs/{org}/public_members/{username}.get.parameters[4].in" = "header"
"paths./orgs/{org}/public_members/{username}.get.parameters[4].name" = "X-RateLimit-Limit"
"paths./orgs/{org}/public_members/{username}.get.parameters[4].type" = "integer"
"paths./orgs/{org}/public_members/{username}.get.parameters[5].in" = "header"
"paths./orgs/{org}/public_members/{username}.get.parameters[5].name" = "X-RateLimit-Remaining"
"paths./orgs/{org}/public_members/{username}.get.parameters[5].type" = "integer"
"paths./orgs/{org}/public_members/{username}.get.parameters[6].in" = "header"
"paths./orgs/{org}/public_members/{username}.get.parameters[6].name" = "X-RateLimit-Reset"
"paths./orgs/{org}/public_members/{username}.get.parameters[6].type" = "integer"
"paths./orgs/{org}/public_members/{username}.get.parameters[7].in" = "header"
"paths./orgs/{org}/public_members/{username}.get.parameters[7].name" = "X-GitHub-Request-Id"
"paths./orgs/{org}/public_members/{username}.get.parameters[7].type" = "integer"
"paths./orgs/{org}/public_members/{username}.get.responses.204.description" = "User is a public member."
"paths./orgs/{org}/public_members/{username}.get.responses.403.description" = "API rate limit exceeded. See http://developer.github.com/v3/#rate-limiting\nfor details.\n"
"paths./orgs/{org}/public_members/{username}.get.responses.404.description" = "User is not a public member."
"paths./orgs/{org}/public_members/{username}.put.description" = "Publicize a user's membership."
"paths./orgs/{org}/public_members/{username}.put.parameters.length" = 8
"paths./orgs/{org}/public_members/{username}.put.parameters[0].description" = "Name of organisation."
"paths./orgs/{org}/public_members/{username}.put.parameters[0].in" = "path"
"paths./orgs/{org}/public_members/{username}.put.parameters[0].name" = "org"
"paths./orgs/{org}/public_members/{username}.put.parameters[0].required" = true
"paths./orgs/{org}/public_members/{username}.put.parameters[0].type" = "string"
"paths./orgs/{org}/public_members/{username}.put.parameters[1].description" = "Name of the user."
"paths./orgs/{org}/public_members/{username}.put.parameters[1].in" = "path"
"paths./orgs/{org}/public_members/{username}.put.parameters[1].name" = "username"
"paths./orgs/{org}/public_members/{username}.put.parameters[1].required" = true
"paths./orgs/{org}/public_members/{username}.put.parameters[1].type" = "string"
"paths./orgs/{org}/public_members/{username}.put.parameters[2].description" = "You can check the current version of media type in responses.\n"
"paths./orgs/{org}/public_members/{username}.put.parameters[2].in" = "header"
"paths./orgs/{org}/public_members/{username}.put.parameters[2].name" = "X-GitHub-Media-Type"
"paths./orgs/{org}/public_members/{username}.put.parameters[2].type" = "string"
"paths./orgs/{org}/public_members/{username}.put.parameters[3].description" = "Is used to set specified media type."
"paths./orgs/{org}/public_members/{username}.put.parameters[3].in" = "header"
"paths./orgs/{org}/public_members/{username}.put.parameters[3].name" = "Accept"
"paths./orgs/{org}/public_members/{username}.put.parameters[3].type" = "string"
"paths./orgs/{org}/public_members/{username}.put.parameters[4].in" = "header"
"paths./orgs/{org}/public_members/{username}.put.parameters[4].name" = "X-RateLimit-Limit"
"paths./orgs/{org}/public_members/{username}.put.parameters[4].type" = "integer"
"paths./orgs/{org}/public_members/{username}.put.parameters[5].in" = "header"
"paths./orgs/{org}/public_members/{username}.put.parameters[5].name" = "X-RateLimit-Remaining"
"paths./orgs/{org}/public_members/{username}.put.parameters[5].type" = "integer"
"paths./orgs/{org}/public_members/{username}.put.parameters[6].in" = "header"
"paths./orgs/{org}/public_members/{username}.put.parameters[6].name" = "X-RateLimit-Reset"
"paths./orgs/{org}/public_members/{username}.put.parameters[6].type" = "integer"
"paths./orgs/{org}/public_members/{username}.put.parameters[7].in" = "header"
"paths./orgs/{org}/public_members/{username}.put.parameters[7].name" = "X-GitHub-Request-Id"
"paths./orgs/{org}/public_members/{username}.put.parameters[7].type" = "integer"
"paths./orgs/{org}/public_members/{username}.put.responses.204.description" = "Publicized."
"paths./orgs/{org}/public_members/{username}.put.responses.403.description" = "API rate limit exceeded. See http://developer.github.com/v3/#rate-limiting\nfor details.\n"
"paths./orgs/{org}/repos.get.description" = "List repositories for the specified org."
"paths./orgs/{org}/repos.get.parameters.length" = 8
"paths./orgs/{org}/repos.get.parameters[0].description" = "Name of organisation."
"paths./orgs/{org}/repos.get.parameters[0].in" = "path"
"paths./orgs/{org}/repos.get.parameters[0].name" = "org"
"paths./orgs/{org}/repos.get.parameters[0].required" = true
"paths./orgs/{org}/repos.get.parameters[0].type" = "string"
"paths./orgs/{org}/repos.get.parameters[1].default" = "all"
"paths./orgs/{org}/repos.get.parameters[1].enum.length" = 6
"paths./orgs/{org}/repos.get.parameters[1].enum[0]" = "all"
"paths./orgs/{org}/repos.get.parameters[1].enum[1]" = "public"
"paths./orgs/{org}/repos.get.parameters[1].enum[2]" = "private"
"paths./orgs/{org}/repos.get.parameters[1].enum[3]" = "forks"
"paths./orgs/{org}/repos.get.parameters[1].enum[4]" = "sources"
"paths./orgs/{org}/repos.get.parameters[1].enum[5]" = "member"
"paths./orgs/{org}/repos.get.parameters[1].in" = "query"
"paths./orgs/{org}/repos.get.parameters[1].name" = "type"
"paths./orgs/{org}/repos.get.parameters[1].type" = "string"
"paths./orgs/{org}/repos.get.parameters[2].description" = "You can check the current version of media type in responses.\n"
"paths./orgs/{org}/repos.get.parameters[2].in" = "header"
"paths./orgs/{org}/repos.get.parameters[2].name" = "X-GitHub-Media-Type"
"paths./orgs/{org}/repos.get.parameters[2].type" = "string"
"paths./orgs/{org}/repos.get.parameters[3].description" = "Is used to set specified media type."
"paths./orgs/{org}/repos.get.parameters[3].in" = "header"
"paths./orgs/{org}/repos.get.parameters[3].name" = "Accept"
"paths./orgs/{org}/repos.get.parameters[3].type" = "string"
"paths./orgs/{org}/repos.get.parameters[4].in" = "header"
"paths./orgs/{org}/repos.get.parameters[4].name" = "X-RateLimit-Limit"
"paths./orgs/{org}/repos.get.parameters[4].type" = "integer"
"paths./orgs/{org}/repos.get.parameters[5].in" = "header"
"paths./orgs/{org}/repos.get.parameters[5].name" = "X-RateLimit-Remaining"
"paths./orgs/{org}/repos.get.parameters[5].type" = "integer"
"paths./orgs/{org}/repos.get.parameters[6].in" = "header"
"paths./orgs/{org}/repos.get.parameters[6].name" = "X-RateLimit-Reset"
"paths./orgs/{org}/repos.get.parameters[6].type" = "integer"
"paths./orgs/{org}/repos.get.parameters[7].in" = "header"
"paths./orgs/{org}/repos.get.parameters[7].name" = "X-GitHub-Request-Id"
"paths./orgs/{org}/repos.get.parameters[7].type" = "integer"
"paths./orgs/{org}/repos.get.responses.200.description" = "OK"
"paths./orgs/{org}/repos.get.responses.200.schema.$ref" = "#/definitions/repos"
"paths./orgs/{org}/repos.get.responses.403.description" = "API rate limit exceeded. See http://developer.github.com/v3/#rate-limiting\nfor details.\n"
"paths./orgs/{org}/repos.post.description" = "Create a new repository for the authenticated user. OAuth users must supply\nrepo scope.\n"
"paths./orgs/{org}/repos.post.parameters.length" = 8
"paths./orgs/{org}/repos.post.parameters[0].description" = "Name of organisation."
"paths./orgs/{org}/repos.post.parameters[0].in" = "path"
"paths./orgs/{org}/repos.post.parameters[0].name" = "org"
"paths./orgs/{org}/repos.post.parameters[0].required" = true
"paths./orgs/{org}/repos.post.parameters[0].type" = "string"
"paths./orgs/{org}/repos.post.parameters[1].description" = "You can check the current version of media type in responses.\n"
"paths./orgs/{org}/repos.post.parameters[1].in" = "header"
"paths./orgs/{org}/repos.post.parameters[1].name" = "X-GitHub-Media-Type"
"paths./orgs/{org}/repos.post.parameters[1].type" = "string"
"paths./orgs/{org}/repos.post.parameters[2].description" = "Is used to set specified media type."
"paths./orgs/{org}/repos.post.parameters[2].in" = "header"
"paths./orgs/{org}/repos.post.parameters[2].name" = "Accept"
"paths./orgs/{org}/repos.post.parameters[2].type" = "string"
"paths./orgs/{org}/repos.post.parameters[3].in" = "header"
"paths./orgs/{org}/repos.post.parameters[3].name" = "X-RateLimit-Limit"
"paths./orgs/{org}/repos.post.parameters[3].type" = "integer"
"paths./orgs/{org}/repos.post.parameters[4].in" = "header"
"paths./orgs/{org}/repos.post.parameters[4].name" = "X-RateLimit-Remaining"
"paths./orgs/{org}/repos.post.parameters[4].type" = "integer"
"paths./orgs/{org}/repos.post.parameters[5].in" = "header"
"paths./orgs/{org}/repos.post.parameters[5].name" = "X-RateLimit-Reset"
"paths./orgs/{org}/repos.post.parameters[5].type" = "integer"
"paths./orgs/{org}/repos.post.parameters[6].in" = "header"
"paths./orgs/{org}/repos.post.parameters[6].name" = "X-GitHub-Request-Id"
"paths./orgs/{org}/repos.post.parameters[6].type" = "integer"
"paths./orgs/{org}/repos.post.parameters[7].in" = "body"
"paths./orgs/{org}/repos.post.parameters[7].name" = "body"
"paths./orgs/{org}/repos.post.parameters[7].required" = true
"paths./orgs/{org}/repos.post.parameters[7].schema.$ref" = "#/definitions/postRepo"
"paths./orgs/{org}/repos.post.responses.201.description" = "Created"
"paths./orgs/{org}/repos.post.responses.201.schema.$ref" = "#/definitions/repos"
"paths./orgs/{org}/repos.post.responses.403.description" = "API rate limit exceeded. See http://developer.github.com/v3/#rate-limiting\nfor details.\n"
"paths./orgs/{org}/teams.get.description" = "List teams."
"paths./orgs/{org}/teams.get.parameters.length" = 7
"paths./orgs/{org}/teams.get.parameters[0].description" = "Name of organisation."
"paths./orgs/{org}/teams.get.parameters[0].in" = "path"
"paths./orgs/{org}/teams.get.parameters[0].name" = "org"
"paths./orgs/{org}/teams.get.parameters[0].required" = true
"paths./orgs/{org}/teams.get.parameters[0].type" = "string"
"paths./orgs/{org}/teams.get.parameters[1].description" = "You can check the current version of media type in responses.\n"
"paths./orgs/{org}/teams.get.parameters[1].in" = "header"
"paths./orgs/{org}/teams.get.parameters[1].name" = "X-GitHub-Media-Type"
"paths./orgs/{org}/teams.get.parameters[1].type" = "string"
"paths./orgs/{org}/teams.get.parameters[2].description" = "Is used to set specified media type."
"paths./orgs/{org}/teams.get.parameters[2].in" = "header"
"paths./orgs/{org}/teams.get.parameters[2].name" = "Accept"
"paths./orgs/{org}/teams.get.parameters[2].type" = "string"
"paths./orgs/{org}/teams.get.parameters[3].in" = "header"
"paths./orgs/{org}/teams.get.parameters[3].name" = "X-RateLimit-Limit"
"paths./orgs/{org}/teams.get.parameters[3].type" = "integer"
"paths./orgs/{org}/teams.get.parameters[4].in" = "header"
"paths./orgs/{org}/teams.get.parameters[4].name" = "X-RateLimit-Remaining"
"paths./orgs/{org}/teams.get.parameters[4].type" = "integer"
"paths./orgs/{org}/teams.get.parameters[5].in" = "header"
"paths./orgs/{org}/teams.get.parameters[5].name" = "X-RateLimit-Reset"
"paths./orgs/{org}/teams.get.parameters[5].type" = "integer"
"paths./orgs/{org}/teams.get.parameters[6].in" = "header"
"paths./orgs/{org}/teams.get.parameters[6].name" = "X-GitHub-Request-Id"
"paths./orgs/{org}/teams.get.parameters[6].type" = "integer"
"paths./orgs/{org}/teams.get.responses.200.description" = "OK"
"paths./orgs/{org}/teams.get.responses.200.schema.$ref" = "#/definitions/teams"
"paths./orgs/{org}/teams.get.responses.403.description" = "API rate limit exceeded. See http://developer.github.com/v3/#rate-limiting\nfor details.\n"
"paths./orgs/{org}/teams.post.description" = "Create team.\nIn order to create a team, the authenticated user must be an owner of organization.\n"
"paths./orgs/{org}/teams.post.parameters.length" = 8
"paths./orgs/{org}/teams.post.parameters[0].description" = "Name of organisation."
"paths./orgs/{org}/teams.post.parameters[0].in" = "path"
"paths./orgs/{org}/teams.post.parameters[0].name" = "org"
"paths./orgs/{org}/teams.post.parameters[0].required" = true
"paths./orgs/{org}/teams.post.parameters[0].type" = "string"
"paths./orgs/{org}/teams.post.parameters[1].description" = "You can check the current version of media type in responses.\n"
"paths./orgs/{org}/teams.post.parameters[1].in" = "header"
"paths./orgs/{org}/teams.post.parameters[1].name" = "X-GitHub-Media-Type"
"paths./orgs/{org}/teams.post.parameters[1].type" = "string"
"paths./orgs/{org}/teams.post.parameters[2].description" = "Is used to set specified media type."
"paths./orgs/{org}/teams.post.parameters[2].in" = "header"
"paths./orgs/{org}/teams.post.parameters[2].name" = "Accept"
"paths./orgs/{org}/teams.post.parameters[2].type" = "string"
"paths./orgs/{org}/teams.post.parameters[3].in" = "header"
"paths./orgs/{org}/teams.post.parameters[3].name" = "X-RateLimit-Limit"
"paths./orgs/{org}/teams.post.parameters[3].type" = "integer"
"paths./orgs/{org}/teams.post.parameters[4].in" = "header"
"paths./orgs/{org}/teams.post.parameters[4].name" = "X-RateLimit-Remaining"
"paths./orgs/{org}/teams.post.parameters[4].type" = "integer"
"paths./orgs/{org}/teams.post.parameters[5].in" = "header"
"paths./orgs/{org}/teams.post.parameters[5].name" = "X-RateLimit-Reset"
"paths./orgs/{org}/teams.post.parameters[5].type" = "integer"
"paths./orgs/{org}/teams.post.parameters[6].in" = "header"
"paths./orgs/{org}/teams.post.parameters[6].name" = "X-GitHub-Request-Id"
"paths./orgs/{org}/teams.post.parameters[6].type" = "integer"
"paths./orgs/{org}/teams.post.parameters[7].in" = "body"
"paths./orgs/{org}/teams.post.parameters[7].name" = "body"
"paths./orgs/{org}/teams.post.parameters[7].required" = true
"paths./orgs/{org}/teams.post.parameters[7].schema.$ref" = "#/definitions/orgTeamsPost"
"paths./orgs/{org}/teams.post.responses.201.description" = "Created"
"paths./orgs/{org}/teams.post.responses.201.schema.$ref" = "#/definitions/team"
"paths./orgs/{org}/teams.post.responses.403.description" = "API rate limit exceeded. See http://developer.github.com/v3/#rate-limiting\nfor details.\n"
"paths./rate_limit.get.description" = "Get your current rate limit status\nNote: Accessing this endpoint does not count against your rate limit.\n"
"paths./rate_limit.get.parameters.length" = 6
"paths./rate_limit.get.parameters[0].description" = "You can check the current version of media type in responses.\n"
"paths./rate_limit.get.parameters[0].in" = "header"
"paths./rate_limit.get.parameters[0].name" = "X-GitHub-Media-Type"
"paths./rate_limit.get.parameters[0].type" = "string"
"paths./rate_limit.get.parameters[1].description" = "Is used to set specified media type."
"paths./rate_limit.get.parameters[1].in" = "header"
"paths./rate_limit.get.parameters[1].name" = "Accept"
"paths./rate_limit.get.parameters[1].type" = "string"
"paths./rate_limit.get.parameters[2].in" = "header"
"paths./rate_limit.get.parameters[2].name" = "X-RateLimit-Limit"
"paths./rate_limit.get.parameters[2].type" = "integer"
"paths./rate_limit.get.parameters[3].in" = "header"
"paths./rate_limit.get.parameters[3].name" = "X-RateLimit-Remaining"
"paths./rate_limit.get.parameters[3].type" = "integer"
"paths./rate_limit.get.parameters[4].in" = "header"
"paths./rate_limit.get.parameters[4].name" = "X-RateLimit-Reset"
"paths./rate_limit.get.parameters[4].type" = "integer"
"paths./rate_limit.get.parameters[5].in" = "header"
"paths./rate_limit.get.parameters[5].name" = "X-GitHub-Request-Id"
"paths./rate_limit.get.parameters[5].type" = "integer"
"paths./rate_limit.get.responses.200.description" = "OK"
"paths./rate_limit.get.responses.200.schema.$ref" = "#/definitions/rate_limit"
"paths./rate_limit.get.responses.403.description" = "API rate limit exceeded. See http://developer.github.com/v3/#rate-limiting\nfor details.\n"
"paths./repos/{owner}/{repo}.delete.description" = "Delete a Repository.\nDeleting a repository requires admin access. If OAuth is used, the delete_repo\nscope is required.\n"
"paths./repos/{owner}/{repo}.delete.parameters.length" = 8
"paths./repos/{owner}/{repo}.delete.parameters[0].description" = "Name of repository owner."
"paths./repos/{owner}/{repo}.delete.parameters[0].in" = "path"
"paths./repos/{owner}/{repo}.delete.parameters[0].name" = "owner"
"paths./repos/{owner}/{repo}.delete.parameters[0].required" = true
"paths./repos/{owner}/{repo}.delete.parameters[0].type" = "string"
"paths./repos/{owner}/{repo}.delete.parameters[1].description" = "Name of repository."
"paths./repos/{owner}/{repo}.delete.parameters[1].in" = "path"
"paths./repos/{owner}/{repo}.delete.parameters[1].name" = "repo"
"paths./repos/{owner}/{repo}.delete.parameters[1].required" = true
"paths./repos/{owner}/{repo}.delete.parameters[1].type" = "string"
"paths./repos/{owner}/{repo}.delete.parameters[2].description" = "You can check the current version of media type in responses.\n"
"paths./repos/{owner}/{repo}.delete.parameters[2].in" = "header"
"paths./repos/{owner}/{repo}.delete.parameters[2].name" = "X-GitHub-Media-Type"
"paths./repos/{owner}/{repo}.delete.parameters[2].type" = "string"
"paths./repos/{owner}/{repo}.delete.parameters[3].description" = "Is used to set specified media type."
"paths./repos/{owner}/{repo}.delete.parameters[3].in" = "header"
"paths./repos/{owner}/{repo}.delete.parameters[3].name" = "Accept"
"paths./repos/{owner}/{repo}.delete.parameters[3].type" = "string"
"paths./repos/{owner}/{repo}.delete.parameters[4].in" = "header"
"paths./repos/{owner}/{repo}.delete.parameters[4].name" = "X-RateLimit-Limit"
"paths./repos/{owner}/{repo}.delete.parameters[4].type" = "integer"
"paths./repos/{owner}/{repo}.delete.parameters[5].in" = "header"
"paths./repos/{owner}/{repo}.delete.parameters[5].name" = "X-RateLimit-Remaining"
"paths./repos/{owner}/{repo}.delete.parameters[5].type" = "integer"
"paths./repos/{owner}/{repo}.delete.parameters[6].in" = "header"
"paths./repos/{owner}/{repo}.delete.parameters[6].name" = "X-RateLimit-Reset"
"paths./repos/{owner}/{repo}.delete.parameters[6].type" = "integer"
"paths./repos/{owner}/{repo}.delete.parameters[7].in" = "header"
"paths./repos/{owner}/{repo}.delete.parameters[7].name" = "X-GitHub-Request-Id"
"paths./repos/{owner}/{repo}.delete.parameters[7].type" = "integer"
"paths./repos/{owner}/{repo}.delete.responses.204.description" = "Item removed."
"paths./repos/{owner}/{repo}.delete.responses.403.description" = "API rate limit exceeded. See http://developer.github.com/v3/#rate-limiting\nfor details.\n"
"paths./repos/{owner}/{repo}.get.description" = "Get repository."
"paths./repos/{owner}/{repo}.get.parameters.length" = 8
"paths./repos/{owner}/{repo}.get.parameters[0].description" = "Name of repository owner."
"paths./repos/{owner}/{repo}.get.parameters[0].in" = "path"
"paths./repos/{owner}/{repo}.get.parameters[0].name" = "owner"
"paths./repos/{owner}/{repo}.get.parameters[0].required" = true
"paths./repos/{owner}/{repo}.get.parameters[0].type" = "string"
"paths./repos/{owner}/{repo}.get.parameters[1].description" = "Name of repository."
"paths./repos/{owner}/{repo}.get.parameters[1].in" = "path"
"paths./repos/{owner}/{repo}.get.parameters[1].name" = "repo"
"paths./repos/{owner}/{repo}.get.parameters[1].required" = true
"paths./repos/{owner}/{repo}.get.parameters[1].type" = "string"
"paths./repos/{owner}/{repo}.get.parameters[2].description" = "You can check the current version of media type in responses.\n"
"paths./repos/{owner}/{repo}.get.parameters[2].in" = "header"
"paths./repos/{owner}/{repo}.get.parameters[2].name" = "X-GitHub-Media-Type"
"paths./repos/{owner}/{repo}.get.parameters[2].type" = "string"
"paths./repos/{owner}/{repo}.get.parameters[3].description" = "Is used to set specified media type."
"paths./repos/{owner}/{repo}.get.parameters[3].in" = "header"
"paths./repos/{owner}/{repo}.get.parameters[3].name" = "Accept"
"paths./repos/{owner}/{repo}.get.parameters[3].type" = "string"
"paths./repos/{owner}/{repo}.get.parameters[4].in" = "header"
"paths./repos/{owner}/{repo}.get.parameters[4].name" = "X-RateLimit-Limit"
"paths./repos/{owner}/{repo}.get.parameters[4].type" = "integer"
"paths./repos/{owner}/{repo}.get.parameters[5].in" = "header"
"paths./repos/{owner}/{repo}.get.parameters[5].name" = "X-RateLimit-Remaining"
"paths./repos/{owner}/{repo}.get.parameters[5].type" = "integer"
"paths./repos/{owner}/{repo}.get.parameters[6].in" = "header"
"paths./repos/{owner}/{repo}.get.parameters[6].name" = "X-RateLimit-Reset"
"paths./repos/{owner}/{repo}.get.parameters[6].type" = "integer"
"paths./repos/{owner}/{repo}.get.parameters[7].in" = "header"
"paths./repos/{owner}/{repo}.get.parameters[7].name" = "X-GitHub-Request-Id"
"paths./repos/{owner}/{repo}.get.parameters[7].type" = "integer"
"paths./repos/{owner}/{repo}.get.responses.200.description" = "OK"
"paths./repos/{owner}/{repo}.get.responses.200.schema.$ref" = "#/definitions/repo"
"paths./repos/{owner}/{repo}.get.responses.403.description" = "API rate limit exceeded. See http://developer.github.com/v3/#rate-limiting\nfor details.\n"
"paths./repos/{owner}/{repo}.patch.description" = "Edit repository."
"paths./repos/{owner}/{repo}.patch.parameters.length" = 9
"paths./repos/{owner}/{repo}.patch.parameters[0].description" = "Name of repository owner."
"paths./repos/{owner}/{repo}.patch.parameters[0].in" = "path"
"paths./repos/{owner}/{repo}.patch.parameters[0].name" = "owner"
"paths./repos/{owner}/{repo}.patch.parameters[0].required" = true
"paths./repos/{owner}/{repo}.patch.parameters[0].type" = "string"
"paths./repos/{owner}/{repo}.patch.parameters[1].description" = "Name of repository."
"paths./repos/{owner}/{repo}.patch.parameters[1].in" = "path"
"paths./repos/{owner}/{repo}.patch.parameters[1].name" = "repo"
"paths./repos/{owner}/{repo}.patch.parameters[1].required" = true
"paths./repos/{owner}/{repo}.patch.parameters[1].type" = "string"
"paths./repos/{owner}/{repo}.patch.parameters[2].description" = "You can check the current version of media type in responses.\n"
"paths./repos/{owner}/{repo}.patch.parameters[2].in" = "header"
"paths./repos/{owner}/{repo}.patch.parameters[2].name" = "X-GitHub-Media-Type"
"paths./repos/{owner}/{repo}.patch.parameters[2].type" = "string"
"paths./repos/{owner}/{repo}.patch.parameters[3].description" = "Is used to set specified media type."
"paths./repos/{owner}/{repo}.patch.parameters[3].in" = "header"
"paths./repos/{owner}/{repo}.patch.parameters[3].name" = "Accept"
"paths./repos/{owner}/{repo}.patch.parameters[3].type" = "string"
"paths./repos/{owner}/{repo}.patch.parameters[4].in" = "header"
"paths./repos/{owner}/{repo}.patch.parameters[4].name" = "X-RateLimit-Limit"
"paths./repos/{owner}/{repo}.patch.parameters[4].type" = "integer"
"paths./repos/{owner}/{repo}.patch.parameters[5].in" = "header"
"paths./repos/{owner}/{repo}.patch.parameters[5].name" = "X-RateLimit-Remaining"
"paths./repos/{owner}/{repo}.patch.parameters[5].type" = "integer"
"paths./repos/{owner}/{repo}.patch.parameters[6].in" = "header"
"paths./repos/{owner}/{repo}.patch.parameters[6].name" = "X-RateLimit-Reset"
"paths./repos/{owner}/{repo}.patch.parameters[6].type" = "integer"
"paths./repos/{owner}/{repo}.patch.parameters[7].in" = "header"
"paths./repos/{owner}/{repo}.patch.parameters[7].name" = "X-GitHub-Request-Id"
"paths./repos/{owner}/{repo}.patch.parameters[7].type" = "integer"
"paths./repos/{owner}/{repo}.patch.parameters[8].in" = "body"
"paths./repos/{owner}/{repo}.patch.parameters[8].name" = "body"
"paths./repos/{owner}/{repo}.patch.parameters[8].required" = true
"paths./repos/{owner}/{repo}.patch.parameters[8].schema.$ref" = "#/definitions/repoEdit"
"paths./repos/{owner}/{repo}.patch.responses.200.description" = "OK"
"paths./repos/{owner}/{repo}.patch.responses.200.schema.$ref" = "#/definitions/repo"
"paths./repos/{owner}/{repo}.patch.responses.403.description" = "API rate limit exceeded. See http://developer.github.com/v3/#rate-limiting\nfor details.\n"
"paths./repos/{owner}/{repo}/assignees.get.description" = "List assignees.\nThis call lists all the available assignees (owner + collaborators) to which\nissues may be assigned.\n"
"paths./repos/{owner}/{repo}/assignees.get.parameters.length" = 8
"paths./repos/{owner}/{repo}/assignees.get.parameters[0].description" = "Name of repository owner."
"paths./repos/{owner}/{repo}/assignees.get.parameters[0].in" = "path"
"paths./repos/{owner}/{repo}/assignees.get.parameters[0].name" = "owner"
"paths./repos/{owner}/{repo}/assignees.get.parameters[0].required" = true
"paths./repos/{owner}/{repo}/assignees.get.parameters[0].type" = "string"
"paths./repos/{owner}/{repo}/assignees.get.parameters[1].description" = "Name of repository."
"paths./repos/{owner}/{repo}/assignees.get.parameters[1].in" = "path"
"paths./repos/{owner}/{repo}/assignees.get.parameters[1].name" = "repo"
"paths./repos/{owner}/{repo}/assignees.get.parameters[1].required" = true
"paths./repos/{owner}/{repo}/assignees.get.parameters[1].type" = "string"
"paths./repos/{owner}/{repo}/assignees.get.parameters[2].description" = "You can check the current version of media type in responses.\n"
"paths./repos/{owner}/{repo}/assignees.get.parameters[2].in" = "header"
"paths./repos/{owner}/{repo}/assignees.get.parameters[2].name" = "X-GitHub-Media-Type"
"paths./repos/{owner}/{repo}/assignees.get.parameters[2].type" = "string"
"paths./repos/{owner}/{repo}/assignees.get.parameters[3].description" = "Is used to set specified media type."
"paths./repos/{owner}/{repo}/assignees.get.parameters[3].in" = "header"
"paths./repos/{owner}/{repo}/assignees.get.parameters[3].name" = "Accept"
"paths./repos/{owner}/{repo}/assignees.get.parameters[3].type" = "string"
"paths./repos/{owner}/{repo}/assignees.get.parameters[4].in" = "header"
"paths./repos/{owner}/{repo}/assignees.get.parameters[4].name" = "X-RateLimit-Limit"
"paths./repos/{owner}/{repo}/assignees.get.parameters[4].type" = "integer"
"paths./repos/{owner}/{repo}/assignees.get.parameters[5].in" = "header"
"paths./repos/{owner}/{repo}/assignees.get.parameters[5].name" = "X-RateLimit-Remaining"
"paths./repos/{owner}/{repo}/assignees.get.parameters[5].type" = "integer"
"paths./repos/{owner}/{repo}/assignees.get.parameters[6].in" = "header"
"paths./repos/{owner}/{repo}/assignees.get.parameters[6].name" = "X-RateLimit-Reset"
"paths./repos/{owner}/{repo}/assignees.get.parameters[6].type" = "integer"
"paths./repos/{owner}/{repo}/assignees.get.parameters[7].in" = "header"
"paths./repos/{owner}/{repo}/assignees.get.parameters[7].name" = "X-GitHub-Request-Id"
"paths./repos/{owner}/{repo}/assignees.get.parameters[7].type" = "integer"
"paths./repos/{owner}/{repo}/assignees.get.responses.200.description" = "OK"
"paths./repos/{owner}/{repo}/assignees.get.responses.200.schema.$ref" = "#/definitions/assignees"
"paths./repos/{owner}/{repo}/assignees.get.responses.403.description" = "API rate limit exceeded. See http://developer.github.com/v3/#rate-limiting\nfor details.\n"
"paths./repos/{owner}/{repo}/assignees/{assignee}.get.description" = "Check assignee.\nYou may also check to see if a particular user is an assignee for a repository.\n"
"paths./repos/{owner}/{repo}/assignees/{assignee}.get.parameters.length" = 9
"paths./repos/{owner}/{repo}/assignees/{assignee}.get.parameters[0].description" = "Name of repository owner."
"paths./repos/{owner}/{repo}/assignees/{assignee}.get.parameters[0].in" = "path"
"paths./repos/{owner}/{repo}/assignees/{assignee}.get.parameters[0].name" = "owner"
"paths./repos/{owner}/{repo}/assignees/{assignee}.get.parameters[0].required" = true
"paths./repos/{owner}/{repo}/assignees/{assignee}.get.parameters[0].type" = "string"
"paths./repos/{owner}/{repo}/assignees/{assignee}.get.parameters[1].description" = "Name of repository."
"paths./repos/{owner}/{repo}/assignees/{assignee}.get.parameters[1].in" = "path"
"paths./repos/{owner}/{repo}/assignees/{assignee}.get.parameters[1].name" = "repo"
"paths./repos/{owner}/{repo}/assignees/{assignee}.get.parameters[1].required" = true
"paths./repos/{owner}/{repo}/assignees/{assignee}.get.parameters[1].type" = "string"
"paths./repos/{owner}/{repo}/assignees/{assignee}.get.parameters[2].description" = "Login of the assignee."
"paths./repos/{owner}/{repo}/assignees/{assignee}.get.parameters[2].in" = "path"
"paths./repos/{owner}/{repo}/assignees/{assignee}.get.parameters[2].name" = "assignee"
"paths./repos/{owner}/{repo}/assignees/{assignee}.get.parameters[2].required" = true
"paths./repos/{owner}/{repo}/assignees/{assignee}.get.parameters[2].type" = "string"
"paths./repos/{owner}/{repo}/assignees/{assignee}.get.parameters[3].description" = "You can check the current version of media type in responses.\n"
"paths./repos/{owner}/{repo}/assignees/{assignee}.get.parameters[3].in" = "header"
"paths./repos/{owner}/{repo}/assignees/{assignee}.get.parameters[3].name" = "X-GitHub-Media-Type"
"paths./repos/{owner}/{repo}/assignees/{assignee}.get.parameters[3].type" = "string"
"paths./repos/{owner}/{repo}/assignees/{assignee}.get.parameters[4].description" = "Is used to set specified media type."
"paths./repos/{owner}/{repo}/assignees/{assignee}.get.parameters[4].in" = "header"
"paths./repos/{owner}/{repo}/assignees/{assignee}.get.parameters[4].name" = "Accept"
"paths./repos/{owner}/{repo}/assignees/{assignee}.get.parameters[4].type" = "string"
"paths./repos/{owner}/{repo}/assignees/{assignee}.get.parameters[5].in" = "header"
"paths./repos/{owner}/{repo}/assignees/{assignee}.get.parameters[5].name" = "X-RateLimit-Limit"
"paths./repos/{owner}/{repo}/assignees/{assignee}.get.parameters[5].type" = "integer"
"paths./repos/{owner}/{repo}/assignees/{assignee}.get.parameters[6].in" = "header"
"paths./repos/{owner}/{repo}/assignees/{assignee}.get.parameters[6].name" = "X-RateLimit-Remaining"
"paths./repos/{owner}/{repo}/assignees/{assignee}.get.parameters[6].type" = "integer"
"paths./repos/{owner}/{repo}/assignees/{assignee}.get.parameters[7].in" = "header"
"paths./repos/{owner}/{repo}/assignees/{assignee}.get.parameters[7].name" = "X-RateLimit-Reset"
"paths./repos/{owner}/{repo}/assignees/{assignee}.get.parameters[7].type" = "integer"
"paths./repos/{owner}/{repo}/assignees/{assignee}.get.parameters[8].in" = "header"
"paths./repos/{owner}/{repo}/assignees/{assignee}.get.parameters[8].name" = "X-GitHub-Request-Id"
"paths./repos/{owner}/{repo}/assignees/{assignee}.get.parameters[8].type" = "integer"
"paths./repos/{owner}/{repo}/assignees/{assignee}.get.responses.204.description" = "User is an assignee."
"paths./repos/{owner}/{repo}/assignees/{assignee}.get.responses.403.description" = "API rate limit exceeded. See http://developer.github.com/v3/#rate-limiting\nfor details.\n"
"paths./repos/{owner}/{repo}/assignees/{assignee}.get.responses.404.description" = "User isn't an assignee."
"paths./repos/{owner}/{repo}/branches.get.description" = "Get list of branches"
"paths./repos/{owner}/{repo}/branches.get.parameters.length" = 8
"paths./repos/{owner}/{repo}/branches.get.parameters[0].description" = "Name of repository owner."
"paths./repos/{owner}/{repo}/branches.get.parameters[0].in" = "path"
"paths./repos/{owner}/{repo}/branches.get.parameters[0].name" = "owner"
"paths./repos/{owner}/{repo}/branches.get.parameters[0].required" = true
"paths./repos/{owner}/{repo}/branches.get.parameters[0].type" = "string"
"paths./repos/{owner}/{repo}/branches.get.parameters[1].description" = "Name of repository."
"paths./repos/{owner}/{repo}/branches.get.parameters[1].in" = "path"
"paths./repos/{owner}/{repo}/branches.get.parameters[1].name" = "repo"
"paths./repos/{owner}/{repo}/branches.get.parameters[1].required" = true
"paths./repos/{owner}/{repo}/branches.get.parameters[1].type" = "string"
"paths./repos/{owner}/{repo}/branches.get.parameters[2].description" = "You can check the current version of media type in responses.\n"
"paths./repos/{owner}/{repo}/branches.get.parameters[2].in" = "header"
"paths./repos/{owner}/{repo}/branches.get.parameters[2].name" = "X-GitHub-Media-Type"
"paths./repos/{owner}/{repo}/branches.get.parameters[2].type" = "string"
"paths./repos/{owner}/{repo}/branches.get.parameters[3].description" = "Is used to set specified media type."
"paths./repos/{owner}/{repo}/branches.get.parameters[3].in" = "header"
"paths./repos/{owner}/{repo}/branches.get.parameters[3].name" = "Accept"
"paths./repos/{owner}/{repo}/branches.get.parameters[3].type" = "string"
"paths./repos/{owner}/{repo}/branches.get.parameters[4].in" = "header"
"paths./repos/{owner}/{repo}/branches.get.parameters[4].name" = "X-RateLimit-Limit"
"paths./repos/{owner}/{repo}/branches.get.parameters[4].type" = "integer"
"paths./repos/{owner}/{repo}/branches.get.parameters[5].in" = "header"
"paths./repos/{owner}/{repo}/branches.get.parameters[5].name" = "X-RateLimit-Remaining"
"paths./repos/{owner}/{repo}/branches.get.parameters[5].type" = "integer"
"paths./repos/{owner}/{repo}/branches.get.parameters[6].in" = "header"
"paths./repos/{owner}/{repo}/branches.get.parameters[6].name" = "X-RateLimit-Reset"
"paths./repos/{owner}/{repo}/branches.get.parameters[6].type" = "integer"
"paths./repos/{owner}/{repo}/branches.get.parameters[7].in" = "header"
"paths./repos/{owner}/{repo}/branches.get.parameters[7].name" = "X-GitHub-Request-Id"
"paths./repos/{owner}/{repo}/branches.get.parameters[7].type" = "integer"
"paths./repos/{owner}/{repo}/branches.get.responses.200.description" = "OK"
"paths./repos/{owner}/{repo}/branches.get.responses.200.schema.$ref" = "#/definitions/branches"
"paths./repos/{owner}/{repo}/branches.get.responses.403.description" = "API rate limit exceeded. See http://developer.github.com/v3/#rate-limiting\nfor details.\n"
"paths./repos/{owner}/{repo}/branches/{branch}.get.description" = "Get Branch"
"paths./repos/{owner}/{repo}/branches/{branch}.get.parameters.length" = 9
"paths./repos/{owner}/{repo}/branches/{branch}.get.parameters[0].description" = "Name of repository owner."
"paths./repos/{owner}/{repo}/branches/{branch}.get.parameters[0].in" = "path"
"paths./repos/{owner}/{repo}/branches/{branch}.get.parameters[0].name" = "owner"
"paths./repos/{owner}/{repo}/branches/{branch}.get.parameters[0].required" = true
"paths./repos/{owner}/{repo}/branches/{branch}.get.parameters[0].type" = "string"
"paths./repos/{owner}/{repo}/branches/{branch}.get.parameters[1].description" = "Name of repository."
"paths./repos/{owner}/{repo}/branches/{branch}.get.parameters[1].in" = "path"
"paths./repos/{owner}/{repo}/branches/{branch}.get.parameters[1].name" = "repo"
"paths./repos/{owner}/{repo}/branches/{branch}.get.parameters[1].required" = true
"paths./repos/{owner}/{repo}/branches/{branch}.get.parameters[1].type" = "string"
"paths./repos/{owner}/{repo}/branches/{branch}.get.parameters[2].description" = "Name of the branch."
"paths./repos/{owner}/{repo}/branches/{branch}.get.parameters[2].in" = "path"
"paths./repos/{owner}/{repo}/branches/{branch}.get.parameters[2].name" = "branch"
"paths./repos/{owner}/{repo}/branches/{branch}.get.parameters[2].required" = true
"paths./repos/{owner}/{repo}/branches/{branch}.get.parameters[2].type" = "string"
"paths./repos/{owner}/{repo}/branches/{branch}.get.parameters[3].description" = "You can check the current version of media type in responses.\n"
"paths./repos/{owner}/{repo}/branches/{branch}.get.parameters[3].in" = "header"
"paths./repos/{owner}/{repo}/branches/{branch}.get.parameters[3].name" = "X-GitHub-Media-Type"
"paths./repos/{owner}/{repo}/branches/{branch}.get.parameters[3].type" = "string"
"paths./repos/{owner}/{repo}/branches/{branch}.get.parameters[4].description" = "Is used to set specified media type."
"paths./repos/{owner}/{repo}/branches/{branch}.get.parameters[4].in" = "header"
"paths./repos/{owner}/{repo}/branches/{branch}.get.parameters[4].name" = "Accept"
"paths./repos/{owner}/{repo}/branches/{branch}.get.parameters[4].type" = "string"
"paths./repos/{owner}/{repo}/branches/{branch}.get.parameters[5].in" = "header"
"paths./repos/{owner}/{repo}/branches/{branch}.get.parameters[5].name" = "X-RateLimit-Limit"
"paths./repos/{owner}/{repo}/branches/{branch}.get.parameters[5].type" = "integer"
"paths./repos/{owner}/{repo}/branches/{branch}.get.parameters[6].in" = "header"
"paths./repos/{owner}/{repo}/branches/{branch}.get.parameters[6].name" = "X-RateLimit-Remaining"
"paths./repos/{owner}/{repo}/branches/{branch}.get.parameters[6].type" = "integer"
"paths./repos/{owner}/{repo}/branches/{branch}.get.parameters[7].in" = "header"
"paths./repos/{owner}/{repo}/branches/{branch}.get.parameters[7].name" = "X-RateLimit-Reset"
"paths./repos/{owner}/{repo}/branches/{branch}.get.parameters[7].type" = "integer"
"paths./repos/{owner}/{repo}/branches/{branch}.get.parameters[8].in" = "header"
"paths./repos/{owner}/{repo}/branches/{branch}.get.parameters[8].name" = "X-GitHub-Request-Id"
"paths./repos/{owner}/{repo}/branches/{branch}.get.parameters[8].type" = "integer"
"paths./repos/{owner}/{repo}/branches/{branch}.get.responses.200.description" = "OK"
"paths./repos/{owner}/{repo}/branches/{branch}.get.responses.200.schema.$ref" = "#/definitions/branch"
"paths./repos/{owner}/{repo}/branches/{branch}.get.responses.403.description" = "API rate limit exceeded. See http://developer.github.com/v3/#rate-limiting\nfor details.\n"
"paths./repos/{owner}/{repo}/collaborators.get.description" = "List.\nWhen authenticating as an organization owner of an organization-owned\nrepository, all organization owners are included in the list of\ncollaborators. Otherwise, only users with access to the repository are\nreturned in the collaborators list.\n"
"paths./repos/{owner}/{repo}/collaborators.get.parameters.length" = 8
"paths./repos/{owner}/{repo}/collaborators.get.parameters[0].description" = "Name of repository owner."
"paths./repos/{owner}/{repo}/collaborators.get.parameters[0].in" = "path"
"paths./repos/{owner}/{repo}/collaborators.get.parameters[0].name" = "owner"
"paths./repos/{owner}/{repo}/collaborators.get.parameters[0].required" = true
"paths./repos/{owner}/{repo}/collaborators.get.parameters[0].type" = "string"
"paths./repos/{owner}/{repo}/collaborators.get.parameters[1].description" = "Name of repository."
"paths./repos/{owner}/{repo}/collaborators.get.parameters[1].in" = "path"
"paths./repos/{owner}/{repo}/collaborators.get.parameters[1].name" = "repo"
"paths./repos/{owner}/{repo}/collaborators.get.parameters[1].required" = true
"paths./repos/{owner}/{repo}/collaborators.get.parameters[1].type" = "string"
"paths./repos/{owner}/{repo}/collaborators.get.parameters[2].description" = "You can check the current version of media type in responses.\n"
"paths./repos/{owner}/{repo}/collaborators.get.parameters[2].in" = "header"
"paths./repos/{owner}/{repo}/collaborators.get.parameters[2].name" = "X-GitHub-Media-Type"
"paths./repos/{owner}/{repo}/collaborators.get.parameters[2].type" = "string"
"paths./repos/{owner}/{repo}/collaborators.get.parameters[3].description" = "Is used to set specified media type."
"paths./repos/{owner}/{repo}/collaborators.get.parameters[3].in" = "header"
"paths./repos/{owner}/{repo}/collaborators.get.parameters[3].name" = "Accept"
"paths./repos/{owner}/{repo}/collaborators.get.parameters[3].type" = "string"
"paths./repos/{owner}/{repo}/collaborators.get.parameters[4].in" = "header"
"paths./repos/{owner}/{repo}/collaborators.get.parameters[4].name" = "X-RateLimit-Limit"
"paths./repos/{owner}/{repo}/collaborators.get.parameters[4].type" = "integer"
"paths./repos/{owner}/{repo}/collaborators.get.parameters[5].in" = "header"
"paths./repos/{owner}/{repo}/collaborators.get.parameters[5].name" = "X-RateLimit-Remaining"
"paths./repos/{owner}/{repo}/collaborators.get.parameters[5].type" = "integer"
"paths./repos/{owner}/{repo}/collaborators.get.parameters[6].in" = "header"
"paths./repos/{owner}/{repo}/collaborators.get.parameters[6].name" = "X-RateLimit-Reset"
"paths./repos/{owner}/{repo}/collaborators.get.parameters[6].type" = "integer"
"paths./repos/{owner}/{repo}/collaborators.get.parameters[7].in" = "header"
"paths./repos/{owner}/{repo}/collaborators.get.parameters[7].name" = "X-GitHub-Request-Id"
"paths./repos/{owner}/{repo}/collaborators.get.parameters[7].type" = "integer"
"paths./repos/{owner}/{repo}/collaborators.get.responses.200.description" = "OK"
"paths./repos/{owner}/{repo}/collaborators.get.responses.200.schema.$ref" = "#/definitions/users"
"paths./repos/{owner}/{repo}/collaborators.get.responses.403.description" = "API rate limit exceeded. See http://developer.github.com/v3/#rate-limiting\nfor details.\n"
"paths./repos/{owner}/{repo}/collaborators/{user}.delete.description" = "Remove collaborator."
"paths./repos/{owner}/{repo}/collaborators/{user}.delete.parameters.length" = 9
"paths./repos/{owner}/{repo}/collaborators/{user}.delete.parameters[0].description" = "Name of repository owner."
"paths./repos/{owner}/{repo}/collaborators/{user}.delete.parameters[0].in" = "path"
"paths./repos/{owner}/{repo}/collaborators/{user}.delete.parameters[0].name" = "owner"
"paths./repos/{owner}/{repo}/collaborators/{user}.delete.parameters[0].required" = true
"paths./repos/{owner}/{repo}/collaborators/{user}.delete.parameters[0].type" = "string"
"paths./repos/{owner}/{repo}/collaborators/{user}.delete.parameters[1].description" = "Name of repository."
"paths./repos/{owner}/{repo}/collaborators/{user}.delete.parameters[1].in" = "path"
"paths./repos/{owner}/{repo}/collaborators/{user}.delete.parameters[1].name" = "repo"
"paths./repos/{owner}/{repo}/collaborators/{user}.delete.parameters[1].required" = true
"paths./repos/{owner}/{repo}/collaborators/{user}.delete.parameters[1].type" = "string"
"paths./repos/{owner}/{repo}/collaborators/{user}.delete.parameters[2].description" = "Login of the user."
"paths./repos/{owner}/{repo}/collaborators/{user}.delete.parameters[2].in" = "path"
"paths./repos/{owner}/{repo}/collaborators/{user}.delete.parameters[2].name" = "user"
"paths./repos/{owner}/{repo}/collaborators/{user}.delete.parameters[2].required" = true
"paths./repos/{owner}/{repo}/collaborators/{user}.delete.parameters[2].type" = "string"
"paths./repos/{owner}/{repo}/collaborators/{user}.delete.parameters[3].description" = "You can check the current version of media type in responses.\n"
"paths./repos/{owner}/{repo}/collaborators/{user}.delete.parameters[3].in" = "header"
"paths./repos/{owner}/{repo}/collaborators/{user}.delete.parameters[3].name" = "X-GitHub-Media-Type"
"paths./repos/{owner}/{repo}/collaborators/{user}.delete.parameters[3].type" = "string"
"paths./repos/{owner}/{repo}/collaborators/{user}.delete.parameters[4].description" = "Is used to set specified media type."
"paths./repos/{owner}/{repo}/collaborators/{user}.delete.parameters[4].in" = "header"
"paths./repos/{owner}/{repo}/collaborators/{user}.delete.parameters[4].name" = "Accept"
"paths./repos/{owner}/{repo}/collaborators/{user}.delete.parameters[4].type" = "string"
"paths./repos/{owner}/{repo}/collaborators/{user}.delete.parameters[5].in" = "header"
"paths./repos/{owner}/{repo}/collaborators/{user}.delete.parameters[5].name" = "X-RateLimit-Limit"
"paths./repos/{owner}/{repo}/collaborators/{user}.delete.parameters[5].type" = "integer"
"paths./repos/{owner}/{repo}/collaborators/{user}.delete.parameters[6].in" = "header"
"paths./repos/{owner}/{repo}/collaborators/{user}.delete.parameters[6].name" = "X-RateLimit-Remaining"
"paths./repos/{owner}/{repo}/collaborators/{user}.delete.parameters[6].type" = "integer"
"paths./repos/{owner}/{repo}/collaborators/{user}.delete.parameters[7].in" = "header"
"paths./repos/{owner}/{repo}/collaborators/{user}.delete.parameters[7].name" = "X-RateLimit-Reset"
"paths./repos/{owner}/{repo}/collaborators/{user}.delete.parameters[7].type" = "integer"
"paths./repos/{owner}/{repo}/collaborators/{user}.delete.parameters[8].in" = "header"
"paths./repos/{owner}/{repo}/collaborators/{user}.delete.parameters[8].name" = "X-GitHub-Request-Id"
"paths./repos/{owner}/{repo}/collaborators/{user}.delete.parameters[8].type" = "integer"
"paths./repos/{owner}/{repo}/collaborators/{user}.delete.responses.204.description" = "Collaborator removed."
"paths./repos/{owner}/{repo}/collaborators/{user}.delete.responses.403.description" = "API rate limit exceeded. See http://developer.github.com/v3/#rate-limiting\nfor details.\n"
"paths./repos/{owner}/{repo}/collaborators/{user}.get.description" = "Check if user is a collaborator"
"paths./repos/{owner}/{repo}/collaborators/{user}.get.parameters.length" = 9
"paths./repos/{owner}/{repo}/collaborators/{user}.get.parameters[0].description" = "Name of repository owner."
"paths./repos/{owner}/{repo}/collaborators/{user}.get.parameters[0].in" = "path"
"paths./repos/{owner}/{repo}/collaborators/{user}.get.parameters[0].name" = "owner"
"paths./repos/{owner}/{repo}/collaborators/{user}.get.parameters[0].required" = true
"paths./repos/{owner}/{repo}/collaborators/{user}.get.parameters[0].type" = "string"
"paths./repos/{owner}/{repo}/collaborators/{user}.get.parameters[1].description" = "Name of repository."
"paths./repos/{owner}/{repo}/collaborators/{user}.get.parameters[1].in" = "path"
"paths./repos/{owner}/{repo}/collaborators/{user}.get.parameters[1].name" = "repo"
"paths./repos/{owner}/{repo}/collaborators/{user}.get.parameters[1].required" = true
"paths./repos/{owner}/{repo}/collaborators/{user}.get.parameters[1].type" = "string"
"paths./repos/{owner}/{repo}/collaborators/{user}.get.parameters[2].description" = "Login of the user."
"paths./repos/{owner}/{repo}/collaborators/{user}.get.parameters[2].in" = "path"
"paths./repos/{owner}/{repo}/collaborators/{user}.get.parameters[2].name" = "user"
"paths./repos/{owner}/{repo}/collaborators/{user}.get.parameters[2].required" = true
"paths./repos/{owner}/{repo}/collaborators/{user}.get.parameters[2].type" = "string"
"paths./repos/{owner}/{repo}/collaborators/{user}.get.parameters[3].description" = "You can check the current version of media type in responses.\n"
"paths./repos/{owner}/{repo}/collaborators/{user}.get.parameters[3].in" = "header"
"paths./repos/{owner}/{repo}/collaborators/{user}.get.parameters[3].name" = "X-GitHub-Media-Type"
"paths./repos/{owner}/{repo}/collaborators/{user}.get.parameters[3].type" = "string"
"paths./repos/{owner}/{repo}/collaborators/{user}.get.parameters[4].description" = "Is used to set specified media type."
"paths./repos/{owner}/{repo}/collaborators/{user}.get.parameters[4].in" = "header"
"paths./repos/{owner}/{repo}/collaborators/{user}.get.parameters[4].name" = "Accept"
"paths./repos/{owner}/{repo}/collaborators/{user}.get.parameters[4].type" = "string"
"paths./repos/{owner}/{repo}/collaborators/{user}.get.parameters[5].in" = "header"
"paths./repos/{owner}/{repo}/collaborators/{user}.get.parameters[5].name" = "X-RateLimit-Limit"
"paths./repos/{owner}/{repo}/collaborators/{user}.get.parameters[5].type" = "integer"
"paths./repos/{owner}/{repo}/collaborators/{user}.get.parameters[6].in" = "header"
"paths./repos/{owner}/{repo}/collaborators/{user}.get.parameters[6].name" = "X-RateLimit-Remaining"
"paths./repos/{owner}/{repo}/collaborators/{user}.get.parameters[6].type" = "integer"
"paths./repos/{owner}/{repo}/collaborators/{user}.get.parameters[7].in" = "header"
"paths./repos/{owner}/{repo}/collaborators/{user}.get.parameters[7].name" = "X-RateLimit-Reset"
"paths./repos/{owner}/{repo}/collaborators/{user}.get.parameters[7].type" = "integer"
"paths./repos/{owner}/{repo}/collaborators/{user}.get.parameters[8].in" = "header"
"paths./repos/{owner}/{repo}/collaborators/{user}.get.parameters[8].name" = "X-GitHub-Request-Id"
"paths./repos/{owner}/{repo}/collaborators/{user}.get.parameters[8].type" = "integer"
"paths./repos/{owner}/{repo}/collaborators/{user}.get.responses.204.description" = "User is a collaborator."
"paths./repos/{owner}/{repo}/collaborators/{user}.get.responses.403.description" = "API rate limit exceeded. See http://developer.github.com/v3/#rate-limiting\nfor details.\n"
"paths./repos/{owner}/{repo}/collaborators/{user}.get.responses.404.description" = "User is not a collaborator."
"paths./repos/{owner}/{repo}/collaborators/{user}.put.description" = "Add collaborator."
"paths./repos/{owner}/{repo}/collaborators/{user}.put.parameters.length" = 9
"paths./repos/{owner}/{repo}/collaborators/{user}.put.parameters[0].description" = "Name of repository owner."
"paths./repos/{owner}/{repo}/collaborators/{user}.put.parameters[0].in" = "path"
"paths./repos/{owner}/{repo}/collaborators/{user}.put.parameters[0].name" = "owner"
"paths./repos/{owner}/{repo}/collaborators/{user}.put.parameters[0].required" = true
"paths./repos/{owner}/{repo}/collaborators/{user}.put.parameters[0].type" = "string"
"paths./repos/{owner}/{repo}/collaborators/{user}.put.parameters[1].description" = "Name of repository."
"paths./repos/{owner}/{repo}/collaborators/{user}.put.parameters[1].in" = "path"
"paths./repos/{owner}/{repo}/collaborators/{user}.put.parameters[1].name" = "repo"
"paths./repos/{owner}/{repo}/collaborators/{user}.put.parameters[1].required" = true
"paths./repos/{owner}/{repo}/collaborators/{user}.put.parameters[1].type" = "string"
"paths./repos/{owner}/{repo}/collaborators/{user}.put.parameters[2].description" = "Login of the user."
"paths./repos/{owner}/{repo}/collaborators/{user}.put.parameters[2].in" = "path"
"paths./repos/{owner}/{repo}/collaborators/{user}.put.parameters[2].name" = "user"
"paths./repos/{owner}/{repo}/collaborators/{user}.put.parameters[2].required" = true
"paths./repos/{owner}/{repo}/collaborators/{user}.put.parameters[2].type" = "string"
"paths./repos/{owner}/{repo}/collaborators/{user}.put.parameters[3].description" = "You can check the current version of media type in responses.\n"
"paths./repos/{owner}/{repo}/collaborators/{user}.put.parameters[3].in" = "header"
"paths./repos/{owner}/{repo}/collaborators/{user}.put.parameters[3].name" = "X-GitHub-Media-Type"
"paths./repos/{owner}/{repo}/collaborators/{user}.put.parameters[3].type" = "string"
"paths./repos/{owner}/{repo}/collaborators/{user}.put.parameters[4].description" = "Is used to set specified media type."
"paths./repos/{owner}/{repo}/collaborators/{user}.put.parameters[4].in" = "header"
"paths./repos/{owner}/{repo}/collaborators/{user}.put.parameters[4].name" = "Accept"
"paths./repos/{owner}/{repo}/collaborators/{user}.put.parameters[4].type" = "string"
"paths./repos/{owner}/{repo}/collaborators/{user}.put.parameters[5].in" = "header"
"paths./repos/{owner}/{repo}/collaborators/{user}.put.parameters[5].name" = "X-RateLimit-Limit"
"paths./repos/{owner}/{repo}/collaborators/{user}.put.parameters[5].type" = "integer"
"paths./repos/{owner}/{repo}/collaborators/{user}.put.parameters[6].in" = "header"
"paths./repos/{owner}/{repo}/collaborators/{user}.put.parameters[6].name" = "X-RateLimit-Remaining"
"paths./repos/{owner}/{repo}/collaborators/{user}.put.parameters[6].type" = "integer"
"paths./repos/{owner}/{repo}/collaborators/{user}.put.parameters[7].in" = "header"
"paths./repos/{owner}/{repo}/collaborators/{user}.put.parameters[7].name" = "X-RateLimit-Reset"
"paths./repos/{owner}/{repo}/collaborators/{user}.put.parameters[7].type" = "integer"
"paths./repos/{owner}/{repo}/collaborators/{user}.put.parameters[8].in" = "header"
"paths./repos/{owner}/{repo}/collaborators/{user}.put.parameters[8].name" = "X-GitHub-Request-Id"
"paths./repos/{owner}/{repo}/collaborators/{user}.put.parameters[8].type" = "integer"
"paths./repos/{owner}/{repo}/collaborators/{user}.put.responses.204.description" = "Collaborator added."
"paths./repos/{owner}/{repo}/collaborators/{user}.put.responses.403.description" = "API rate limit exceeded. See http://developer.github.com/v3/#rate-limiting\nfor details.\n"
"paths./repos/{owner}/{repo}/comments.get.description" = "List commit comments for a repository.\nComments are ordered by ascending ID.\n"
"paths./repos/{owner}/{repo}/comments.get.parameters.length" = 8
"paths./repos/{owner}/{repo}/comments.get.parameters[0].description" = "Name of repository owner."
"paths./repos/{owner}/{repo}/comments.get.parameters[0].in" = "path"
"paths./repos/{owner}/{repo}/comments.get.parameters[0].name" = "owner"
"paths./repos/{owner}/{repo}/comments.get.parameters[0].required" = true
"paths./repos/{owner}/{repo}/comments.get.parameters[0].type" = "string"
"paths./repos/{owner}/{repo}/comments.get.parameters[1].description" = "Name of repository."
"paths./repos/{owner}/{repo}/comments.get.parameters[1].in" = "path"
"paths./repos/{owner}/{repo}/comments.get.parameters[1].name" = "repo"
"paths./repos/{owner}/{repo}/comments.get.parameters[1].required" = true
"paths./repos/{owner}/{repo}/comments.get.parameters[1].type" = "string"
"paths./repos/{owner}/{repo}/comments.get.parameters[2].description" = "You can check the current version of media type in responses.\n"
"paths./repos/{owner}/{repo}/comments.get.parameters[2].in" = "header"
"paths./repos/{owner}/{repo}/comments.get.parameters[2].name" = "X-GitHub-Media-Type"
"paths./repos/{owner}/{repo}/comments.get.parameters[2].type" = "string"
"paths./repos/{owner}/{repo}/comments.get.parameters[3].description" = "Is used to set specified media type."
"paths./repos/{owner}/{repo}/comments.get.parameters[3].in" = "header"
"paths./repos/{owner}/{repo}/comments.get.parameters[3].name" = "Accept"
"paths./repos/{owner}/{repo}/comments.get.parameters[3].type" = "string"
"paths./repos/{owner}/{repo}/comments.get.parameters[4].in" = "header"
"paths./repos/{owner}/{repo}/comments.get.parameters[4].name" = "X-RateLimit-Limit"
"paths./repos/{owner}/{repo}/comments.get.parameters[4].type" = "integer"
"paths./repos/{owner}/{repo}/comments.get.parameters[5].in" = "header"
"paths./repos/{owner}/{repo}/comments.get.parameters[5].name" = "X-RateLimit-Remaining"
"paths./repos/{owner}/{repo}/comments.get.parameters[5].type" = "integer"
"paths./repos/{owner}/{repo}/comments.get.parameters[6].in" = "header"
"paths./repos/{owner}/{repo}/comments.get.parameters[6].name" = "X-RateLimit-Reset"
"paths./repos/{owner}/{repo}/comments.get.parameters[6].type" = "integer"
"paths./repos/{owner}/{repo}/comments.get.parameters[7].in" = "header"
"paths./repos/{owner}/{repo}/comments.get.parameters[7].name" = "X-GitHub-Request-Id"
"paths./repos/{owner}/{repo}/comments.get.parameters[7].type" = "integer"
"paths./repos/{owner}/{repo}/comments.get.responses.200.description" = "OK"
"paths./repos/{owner}/{repo}/comments.get.responses.200.schema.$ref" = "#/definitions/repoComments"
"paths./repos/{owner}/{repo}/comments.get.responses.403.description" = "API rate limit exceeded. See http://developer.github.com/v3/#rate-limiting\nfor details.\n"
"paths./repos/{owner}/{repo}/comments/{commentId}.delete.description" = "Delete a commit comment"
"paths./repos/{owner}/{repo}/comments/{commentId}.delete.parameters.length" = 9
"paths./repos/{owner}/{repo}/comments/{commentId}.delete.parameters[0].description" = "Name of repository owner."
"paths./repos/{owner}/{repo}/comments/{commentId}.delete.parameters[0].in" = "path"
"paths./repos/{owner}/{repo}/comments/{commentId}.delete.parameters[0].name" = "owner"
"paths./repos/{owner}/{repo}/comments/{commentId}.delete.parameters[0].required" = true
"paths./repos/{owner}/{repo}/comments/{commentId}.delete.parameters[0].type" = "string"
"paths./repos/{owner}/{repo}/comments/{commentId}.delete.parameters[1].description" = "Name of repository."
"paths./repos/{owner}/{repo}/comments/{commentId}.delete.parameters[1].in" = "path"
"paths./repos/{owner}/{repo}/comments/{commentId}.delete.parameters[1].name" = "repo"
"paths./repos/{owner}/{repo}/comments/{commentId}.delete.parameters[1].required" = true
"paths./repos/{owner}/{repo}/comments/{commentId}.delete.parameters[1].type" = "string"
"paths./repos/{owner}/{repo}/comments/{commentId}.delete.parameters[2].description" = "Id of comment."
"paths./repos/{owner}/{repo}/comments/{commentId}.delete.parameters[2].in" = "path"
"paths./repos/{owner}/{repo}/comments/{commentId}.delete.parameters[2].name" = "commentId"
"paths./repos/{owner}/{repo}/comments/{commentId}.delete.parameters[2].required" = true
"paths./repos/{owner}/{repo}/comments/{commentId}.delete.parameters[2].type" = "integer"
"paths./repos/{owner}/{repo}/comments/{commentId}.delete.parameters[3].description" = "You can check the current version of media type in responses.\n"
"paths./repos/{owner}/{repo}/comments/{commentId}.delete.parameters[3].in" = "header"
"paths./repos/{owner}/{repo}/comments/{commentId}.delete.parameters[3].name" = "X-GitHub-Media-Type"
"paths./repos/{owner}/{repo}/comments/{commentId}.delete.parameters[3].type" = "string"
"paths./repos/{owner}/{repo}/comments/{commentId}.delete.parameters[4].description" = "Is used to set specified media type."
"paths./repos/{owner}/{repo}/comments/{commentId}.delete.parameters[4].in" = "header"
"paths./repos/{owner}/{repo}/comments/{commentId}.delete.parameters[4].name" = "Accept"
"paths./repos/{owner}/{repo}/comments/{commentId}.delete.parameters[4].type" = "string"
"paths./repos/{owner}/{repo}/comments/{commentId}.delete.parameters[5].in" = "header"
"paths./repos/{owner}/{repo}/comments/{commentId}.delete.parameters[5].name" = "X-RateLimit-Limit"
"paths./repos/{owner}/{repo}/comments/{commentId}.delete.parameters[5].type" = "integer"
"paths./repos/{owner}/{repo}/comments/{commentId}.delete.parameters[6].in" = "header"
"paths./repos/{owner}/{repo}/comments/{commentId}.delete.parameters[6].name" = "X-RateLimit-Remaining"
"paths./repos/{owner}/{repo}/comments/{commentId}.delete.parameters[6].type" = "integer"
"paths./repos/{owner}/{repo}/comments/{commentId}.delete.parameters[7].in" = "header"
"paths./repos/{owner}/{repo}/comments/{commentId}.delete.parameters[7].name" = "X-RateLimit-Reset"
"paths./repos/{owner}/{repo}/comments/{commentId}.delete.parameters[7].type" = "integer"
"paths./repos/{owner}/{repo}/comments/{commentId}.delete.parameters[8].in" = "header"
"paths./repos/{owner}/{repo}/comments/{commentId}.delete.parameters[8].name" = "X-GitHub-Request-Id"
"paths./repos/{owner}/{repo}/comments/{commentId}.delete.parameters[8].type" = "integer"
"paths./repos/{owner}/{repo}/comments/{commentId}.delete.responses.204.description" = "No content.\n"
"paths./repos/{owner}/{repo}/comments/{commentId}.delete.responses.403.description" = "API rate limit exceeded. See http://developer.github.com/v3/#rate-limiting\nfor details.\n"
"paths./repos/{owner}/{repo}/comments/{commentId}.get.description" = "Get a single commit comment."
"paths./repos/{owner}/{repo}/comments/{commentId}.get.parameters.length" = 9
"paths./repos/{owner}/{repo}/comments/{commentId}.get.parameters[0].description" = "Name of repository owner."
"paths./repos/{owner}/{repo}/comments/{commentId}.get.parameters[0].in" = "path"
"paths./repos/{owner}/{repo}/comments/{commentId}.get.parameters[0].name" = "owner"
"paths./repos/{owner}/{repo}/comments/{commentId}.get.parameters[0].required" = true
"paths./repos/{owner}/{repo}/comments/{commentId}.get.parameters[0].type" = "string"
"paths./repos/{owner}/{repo}/comments/{commentId}.get.parameters[1].description" = "Name of repository."
"paths./repos/{owner}/{repo}/comments/{commentId}.get.parameters[1].in" = "path"
"paths./repos/{owner}/{repo}/comments/{commentId}.get.parameters[1].name" = "repo"
"paths./repos/{owner}/{repo}/comments/{commentId}.get.parameters[1].required" = true
"paths./repos/{owner}/{repo}/comments/{commentId}.get.parameters[1].type" = "string"
"paths./repos/{owner}/{repo}/comments/{commentId}.get.parameters[2].description" = "Id of comment."
"paths./repos/{owner}/{repo}/comments/{commentId}.get.parameters[2].in" = "path"
"paths./repos/{owner}/{repo}/comments/{commentId}.get.parameters[2].name" = "commentId"
"paths./repos/{owner}/{repo}/comments/{commentId}.get.parameters[2].required" = true
"paths./repos/{owner}/{repo}/comments/{commentId}.get.parameters[2].type" = "integer"
"paths./repos/{owner}/{repo}/comments/{commentId}.get.parameters[3].description" = "You can check the current version of media type in responses.\n"
"paths./repos/{owner}/{repo}/comments/{commentId}.get.parameters[3].in" = "header"
"paths./repos/{owner}/{repo}/comments/{commentId}.get.parameters[3].name" = "X-GitHub-Media-Type"
"paths./repos/{owner}/{repo}/comments/{commentId}.get.parameters[3].type" = "string"
"paths./repos/{owner}/{repo}/comments/{commentId}.get.parameters[4].description" = "Is used to set specified media type."
"paths./repos/{owner}/{repo}/comments/{commentId}.get.parameters[4].in" = "header"
"paths./repos/{owner}/{repo}/comments/{commentId}.get.parameters[4].name" = "Accept"
"paths./repos/{owner}/{repo}/comments/{commentId}.get.parameters[4].type" = "string"
"paths./repos/{owner}/{repo}/comments/{commentId}.get.parameters[5].in" = "header"
"paths./repos/{owner}/{repo}/comments/{commentId}.get.parameters[5].name" = "X-RateLimit-Limit"
"paths./repos/{owner}/{repo}/comments/{commentId}.get.parameters[5].type" = "integer"
"paths./repos/{owner}/{repo}/comments/{commentId}.get.parameters[6].in" = "header"
"paths./repos/{owner}/{repo}/comments/{commentId}.get.parameters[6].name" = "X-RateLimit-Remaining"
"paths./repos/{owner}/{repo}/comments/{commentId}.get.parameters[6].type" = "integer"
"paths./repos/{owner}/{repo}/comments/{commentId}.get.parameters[7].in" = "header"
"paths./repos/{owner}/{repo}/comments/{commentId}.get.parameters[7].name" = "X-RateLimit-Reset"
"paths./repos/{owner}/{repo}/comments/{commentId}.get.parameters[7].type" = "integer"
"paths./repos/{owner}/{repo}/comments/{commentId}.get.parameters[8].in" = "header"
"paths./repos/{owner}/{repo}/comments/{commentId}.get.parameters[8].name" = "X-GitHub-Request-Id"
"paths./repos/{owner}/{repo}/comments/{commentId}.get.parameters[8].type" = "integer"
"paths./repos/{owner}/{repo}/comments/{commentId}.get.responses.200.description" = "OK"
"paths./repos/{owner}/{repo}/comments/{commentId}.get.responses.200.schema.$ref" = "#/definitions/commitComments"
"paths./repos/{owner}/{repo}/comments/{commentId}.get.responses.403.description" = "API rate limit exceeded. See http://developer.github.com/v3/#rate-limiting\nfor details.\n"
"paths./repos/{owner}/{repo}/comments/{commentId}.patch.description" = "Update a commit comment."
"paths./repos/{owner}/{repo}/comments/{commentId}.patch.parameters.length" = 10
"paths./repos/{owner}/{repo}/comments/{commentId}.patch.parameters[0].description" = "Name of repository owner."
"paths./repos/{owner}/{repo}/comments/{commentId}.patch.parameters[0].in" = "path"
"paths./repos/{owner}/{repo}/comments/{commentId}.patch.parameters[0].name" = "owner"
"paths./repos/{owner}/{repo}/comments/{commentId}.patch.parameters[0].required" = true
"paths./repos/{owner}/{repo}/comments/{commentId}.patch.parameters[0].type" = "string"
"paths./repos/{owner}/{repo}/comments/{commentId}.patch.parameters[1].description" = "Name of repository."
"paths./repos/{owner}/{repo}/comments/{commentId}.patch.parameters[1].in" = "path"
"paths./repos/{owner}/{repo}/comments/{commentId}.patch.parameters[1].name" = "repo"
"paths./repos/{owner}/{repo}/comments/{commentId}.patch.parameters[1].required" = true
"paths./repos/{owner}/{repo}/comments/{commentId}.patch.parameters[1].type" = "string"
"paths./repos/{owner}/{repo}/comments/{commentId}.patch.parameters[2].description" = "Id of comment."
"paths./repos/{owner}/{repo}/comments/{commentId}.patch.parameters[2].in" = "path"
"paths./repos/{owner}/{repo}/comments/{commentId}.patch.parameters[2].name" = "commentId"
"paths./repos/{owner}/{repo}/comments/{commentId}.patch.parameters[2].required" = true
"paths./repos/{owner}/{repo}/comments/{commentId}.patch.parameters[2].type" = "integer"
"paths./repos/{owner}/{repo}/comments/{commentId}.patch.parameters[3].description" = "You can check the current version of media type in responses.\n"
"paths./repos/{owner}/{repo}/comments/{commentId}.patch.parameters[3].in" = "header"
"paths./repos/{owner}/{repo}/comments/{commentId}.patch.parameters[3].name" = "X-GitHub-Media-Type"
"paths./repos/{owner}/{repo}/comments/{commentId}.patch.parameters[3].type" = "string"
"paths./repos/{owner}/{repo}/comments/{commentId}.patch.parameters[4].description" = "Is used to set specified media type."
"paths./repos/{owner}/{repo}/comments/{commentId}.patch.parameters[4].in" = "header"
"paths./repos/{owner}/{repo}/comments/{commentId}.patch.parameters[4].name" = "Accept"
"paths./repos/{owner}/{repo}/comments/{commentId}.patch.parameters[4].type" = "string"
"paths./repos/{owner}/{repo}/comments/{commentId}.patch.parameters[5].in" = "header"
"paths./repos/{owner}/{repo}/comments/{commentId}.patch.parameters[5].name" = "X-RateLimit-Limit"
"paths./repos/{owner}/{repo}/comments/{commentId}.patch.parameters[5].type" = "integer"
"paths./repos/{owner}/{repo}/comments/{commentId}.patch.parameters[6].in" = "header"
"paths./repos/{owner}/{repo}/comments/{commentId}.patch.parameters[6].name" = "X-RateLimit-Remaining"
"paths./repos/{owner}/{repo}/comments/{commentId}.patch.parameters[6].type" = "integer"
"paths./repos/{owner}/{repo}/comments/{commentId}.patch.parameters[7].in" = "header"
"paths./repos/{owner}/{repo}/comments/{commentId}.patch.parameters[7].name" = "X-RateLimit-Reset"
"paths./repos/{owner}/{repo}/comments/{commentId}.patch.parameters[7].type" = "integer"
"paths./repos/{owner}/{repo}/comments/{commentId}.patch.parameters[8].in" = "header"
"paths./repos/{owner}/{repo}/comments/{commentId}.patch.parameters[8].name" = "X-GitHub-Request-Id"
"paths./repos/{owner}/{repo}/comments/{commentId}.patch.parameters[8].type" = "integer"
"paths./repos/{owner}/{repo}/comments/{commentId}.patch.parameters[9].in" = "body"
"paths./repos/{owner}/{repo}/comments/{commentId}.patch.parameters[9].name" = "body"
"paths./repos/{owner}/{repo}/comments/{commentId}.patch.parameters[9].required" = true
"paths./repos/{owner}/{repo}/comments/{commentId}.patch.parameters[9].schema.$ref" = "#/definitions/commentBody"
"paths./repos/{owner}/{repo}/comments/{commentId}.patch.responses.200.description" = "OK"
"paths./repos/{owner}/{repo}/comments/{commentId}.patch.responses.200.schema.$ref" = "#/definitions/commitComments"
"paths./repos/{owner}/{repo}/comments/{commentId}.patch.responses.403.description" = "API rate limit exceeded. See http://developer.github.com/v3/#rate-limiting\nfor details.\n"
"paths./repos/{owner}/{repo}/commits.get.description" = "List commits on a repository."
"paths./repos/{owner}/{repo}/commits.get.parameters.length" = 13
"paths./repos/{owner}/{repo}/commits.get.parameters[0].description" = "Name of repository owner."
"paths./repos/{owner}/{repo}/commits.get.parameters[0].in" = "path"
"paths./repos/{owner}/{repo}/commits.get.parameters[0].name" = "owner"
"paths./repos/{owner}/{repo}/commits.get.parameters[0].required" = true
"paths./repos/{owner}/{repo}/commits.get.parameters[0].type" = "string"
"paths./repos/{owner}/{repo}/commits.get.parameters[10].in" = "header"
"paths./repos/{owner}/{repo}/commits.get.parameters[10].name" = "X-RateLimit-Remaining"
"paths./repos/{owner}/{repo}/commits.get.parameters[10].type" = "integer"
"paths./repos/{owner}/{repo}/commits.get.parameters[11].in" = "header"
"paths./repos/{owner}/{repo}/commits.get.parameters[11].name" = "X-RateLimit-Reset"
"paths./repos/{owner}/{repo}/commits.get.parameters[11].type" = "integer"
"paths./repos/{owner}/{repo}/commits.get.parameters[12].in" = "header"
"paths./repos/{owner}/{repo}/commits.get.parameters[12].name" = "X-GitHub-Request-Id"
"paths./repos/{owner}/{repo}/commits.get.parameters[12].type" = "integer"
"paths./repos/{owner}/{repo}/commits.get.parameters[1].description" = "Name of repository."
"paths./repos/{owner}/{repo}/commits.get.parameters[1].in" = "path"
"paths./repos/{owner}/{repo}/commits.get.parameters[1].name" = "repo"
"paths./repos/{owner}/{repo}/commits.get.parameters[1].required" = true
"paths./repos/{owner}/{repo}/commits.get.parameters[1].type" = "string"
"paths./repos/{owner}/{repo}/commits.get.parameters[2].description" = "The time should be passed in as UTC in the ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ.\nExample: \"2012-10-09T23:39:01Z\".\n"
"paths./repos/{owner}/{repo}/commits.get.parameters[2].in" = "query"
"paths./repos/{owner}/{repo}/commits.get.parameters[2].name" = "since"
"paths./repos/{owner}/{repo}/commits.get.parameters[2].type" = "string"
"paths./repos/{owner}/{repo}/commits.get.parameters[3].description" = "Sha or branch to start listing commits from."
"paths./repos/{owner}/{repo}/commits.get.parameters[3].in" = "query"
"paths./repos/{owner}/{repo}/commits.get.parameters[3].name" = "sha"
"paths./repos/{owner}/{repo}/commits.get.parameters[3].type" = "string"
"paths./repos/{owner}/{repo}/commits.get.parameters[4].description" = "Only commits containing this file path will be returned."
"paths./repos/{owner}/{repo}/commits.get.parameters[4].in" = "query"
"paths./repos/{owner}/{repo}/commits.get.parameters[4].name" = "path"
"paths./repos/{owner}/{repo}/commits.get.parameters[4].type" = "string"
"paths./repos/{owner}/{repo}/commits.get.parameters[5].description" = "GitHub login, name, or email by which to filter by commit author."
"paths./repos/{owner}/{repo}/commits.get.parameters[5].in" = "query"
"paths./repos/{owner}/{repo}/commits.get.parameters[5].name" = "author"
"paths./repos/{owner}/{repo}/commits.get.parameters[5].type" = "string"
"paths./repos/{owner}/{repo}/commits.get.parameters[6].description" = "ISO 8601 Date - Only commits before this date will be returned."
"paths./repos/{owner}/{repo}/commits.get.parameters[6].in" = "query"
"paths./repos/{owner}/{repo}/commits.get.parameters[6].name" = "until"
"paths./repos/{owner}/{repo}/commits.get.parameters[6].type" = "string"
"paths./repos/{owner}/{repo}/commits.get.parameters[7].description" = "You can check the current version of media type in responses.\n"
"paths./repos/{owner}/{repo}/commits.get.parameters[7].in" = "header"
"paths./repos/{owner}/{repo}/commits.get.parameters[7].name" = "X-GitHub-Media-Type"
"paths./repos/{owner}/{repo}/commits.get.parameters[7].type" = "string"
"paths./repos/{owner}/{repo}/commits.get.parameters[8].description" = "Is used to set specified media type."
"paths./repos/{owner}/{repo}/commits.get.parameters[8].in" = "header"
"paths./repos/{owner}/{repo}/commits.get.parameters[8].name" = "Accept"
"paths./repos/{owner}/{repo}/commits.get.parameters[8].type" = "string"
"paths./repos/{owner}/{repo}/commits.get.parameters[9].in" = "header"
"paths./repos/{owner}/{repo}/commits.get.parameters[9].name" = "X-RateLimit-Limit"
"paths./repos/{owner}/{repo}/commits.get.parameters[9].type" = "integer"
"paths./repos/{owner}/{repo}/commits.get.responses.200.description" = "OK"
"paths./repos/{owner}/{repo}/commits.get.responses.200.schema.$ref" = "#/definitions/commits"
"paths./repos/{owner}/{repo}/commits.get.responses.403.description" = "API rate limit exceeded. See http://developer.github.com/v3/#rate-limiting\nfor details.\n"
"paths./repos/{owner}/{repo}/commits/{ref}/status.get.description" = "Get the combined Status for a specific Ref\nThe Combined status endpoint is currently available for developers to preview. During the preview period, the API may change without advance notice. Please see the blog post for full details.\nTo access this endpoint during the preview period, you must provide a custom media type in the Accept header:\napplication/vnd.github.she-hulk-preview+json\n"
"paths./repos/{owner}/{repo}/commits/{ref}/status.get.parameters.length" = 9
"paths./repos/{owner}/{repo}/commits/{ref}/status.get.parameters[0].description" = "Name of repository owner."
"paths./repos/{owner}/{repo}/commits/{ref}/status.get.parameters[0].in" = "path"
"paths./repos/{owner}/{repo}/commits/{ref}/status.get.parameters[0].name" = "owner"
"paths./repos/{owner}/{repo}/commits/{ref}/status.get.parameters[0].required" = true
"paths./repos/{owner}/{repo}/commits/{ref}/status.get.parameters[0].type" = "string"
"paths./repos/{owner}/{repo}/commits/{ref}/status.get.parameters[1].description" = "Name of repository."
"paths./repos/{owner}/{repo}/commits/{ref}/status.get.parameters[1].in" = "path"
"paths./repos/{owner}/{repo}/commits/{ref}/status.get.parameters[1].name" = "repo"
"paths./repos/{owner}/{repo}/commits/{ref}/status.get.parameters[1].required" = true
"paths./repos/{owner}/{repo}/commits/{ref}/status.get.parameters[1].type" = "string"
"paths./repos/{owner}/{repo}/commits/{ref}/status.get.parameters[2].in" = "path"
"paths./repos/{owner}/{repo}/commits/{ref}/status.get.parameters[2].name" = "ref"
"paths./repos/{owner}/{repo}/commits/{ref}/status.get.parameters[2].required" = true
"paths./repos/{owner}/{repo}/commits/{ref}/status.get.parameters[2].type" = "string"
"paths./repos/{owner}/{repo}/commits/{ref}/status.get.parameters[3].description" = "You can check the current version of media type in responses.\n"
"paths./repos/{owner}/{repo}/commits/{ref}/status.get.parameters[3].in" = "header"
"paths./repos/{owner}/{repo}/commits/{ref}/status.get.parameters[3].name" = "X-GitHub-Media-Type"
"paths./repos/{owner}/{repo}/commits/{ref}/status.get.parameters[3].type" = "string"
"paths./repos/{owner}/{repo}/commits/{ref}/status.get.parameters[4].description" = "Is used to set specified media type."
"paths./repos/{owner}/{repo}/commits/{ref}/status.get.parameters[4].in" = "header"
"paths./repos/{owner}/{repo}/commits/{ref}/status.get.parameters[4].name" = "Accept"
"paths./repos/{owner}/{repo}/commits/{ref}/status.get.parameters[4].type" = "string"
"paths./repos/{owner}/{repo}/commits/{ref}/status.get.parameters[5].in" = "header"
"paths./repos/{owner}/{repo}/commits/{ref}/status.get.parameters[5].name" = "X-RateLimit-Limit"
"paths./repos/{owner}/{repo}/commits/{ref}/status.get.parameters[5].type" = "integer"
"paths./repos/{owner}/{repo}/commits/{ref}/status.get.parameters[6].in" = "header"
"paths./repos/{owner}/{repo}/commits/{ref}/status.get.parameters[6].name" = "X-RateLimit-Remaining"
"paths./repos/{owner}/{repo}/commits/{ref}/status.get.parameters[6].type" = "integer"
"paths./repos/{owner}/{repo}/commits/{ref}/status.get.parameters[7].in" = "header"
"paths./repos/{owner}/{repo}/commits/{ref}/status.get.parameters[7].name" = "X-RateLimit-Reset"
"paths./repos/{owner}/{repo}/commits/{ref}/status.get.parameters[7].type" = "integer"
"paths./repos/{owner}/{repo}/commits/{ref}/status.get.parameters[8].in" = "header"
"paths./repos/{owner}/{repo}/commits/{ref}/status.get.parameters[8].name" = "X-GitHub-Request-Id"
"paths./repos/{owner}/{repo}/commits/{ref}/status.get.parameters[8].type" = "integer"
"paths./repos/{owner}/{repo}/commits/{ref}/status.get.responses.200.description" = "OK"
"paths./repos/{owner}/{repo}/commits/{ref}/status.get.responses.200.schema.$ref" = "#/definitions/refStatus"
"paths./repos/{owner}/{repo}/commits/{ref}/status.get.responses.403.description" = "API rate limit exceeded. See http://developer.github.com/v3/#rate-limiting\nfor details.\n"
"paths./repos/{owner}/{repo}/commits/{shaCode}.get.description" = "Get a single commit."
"paths./repos/{owner}/{repo}/commits/{shaCode}.get.parameters.length" = 9
"paths./repos/{owner}/{repo}/commits/{shaCode}.get.parameters[0].description" = "Name of repository owner."
"paths./repos/{owner}/{repo}/commits/{shaCode}.get.parameters[0].in" = "path"
"paths./repos/{owner}/{repo}/commits/{shaCode}.get.parameters[0].name" = "owner"
"paths./repos/{owner}/{repo}/commits/{shaCode}.get.parameters[0].required" = true
"paths./repos/{owner}/{repo}/commits/{shaCode}.get.parameters[0].type" = "string"
"paths./repos/{owner}/{repo}/commits/{shaCode}.get.parameters[1].description" = "Name of repository."
"paths./repos/{owner}/{repo}/commits/{shaCode}.get.parameters[1].in" = "path"
"paths./repos/{owner}/{repo}/commits/{shaCode}.get.parameters[1].name" = "repo"
"paths./repos/{owner}/{repo}/commits/{shaCode}.get.parameters[1].required" = true
"paths./repos/{owner}/{repo}/commits/{shaCode}.get.parameters[1].type" = "string"
"paths./repos/{owner}/{repo}/commits/{shaCode}.get.parameters[2].description" = "SHA-1 code of the commit."
"paths./repos/{owner}/{repo}/commits/{shaCode}.get.parameters[2].in" = "path"
"paths./repos/{owner}/{repo}/commits/{shaCode}.get.parameters[2].name" = "shaCode"
"paths./repos/{owner}/{repo}/commits/{shaCode}.get.parameters[2].required" = true
"paths./repos/{owner}/{repo}/commits/{shaCode}.get.parameters[2].type" = "string"
"paths./repos/{owner}/{repo}/commits/{shaCode}.get.parameters[3].description" = "You can check the current version of media type in responses.\n"
"paths./repos/{owner}/{repo}/commits/{shaCode}.get.parameters[3].in" = "header"
"paths./repos/{owner}/{repo}/commits/{shaCode}.get.parameters[3].name" = "X-GitHub-Media-Type"
"paths./repos/{owner}/{repo}/commits/{shaCode}.get.parameters[3].type" = "string"
"paths./repos/{owner}/{repo}/commits/{shaCode}.get.parameters[4].description" = "Is used to set specified media type."
"paths./repos/{owner}/{repo}/commits/{shaCode}.get.parameters[4].in" = "header"
"paths./repos/{owner}/{repo}/commits/{shaCode}.get.parameters[4].name" = "Accept"
"paths./repos/{owner}/{repo}/commits/{shaCode}.get.parameters[4].type" = "string"
"paths./repos/{owner}/{repo}/commits/{shaCode}.get.parameters[5].in" = "header"
"paths./repos/{owner}/{repo}/commits/{shaCode}.get.parameters[5].name" = "X-RateLimit-Limit"
"paths./repos/{owner}/{repo}/commits/{shaCode}.get.parameters[5].type" = "integer"
"paths./repos/{owner}/{repo}/commits/{shaCode}.get.parameters[6].in" = "header"
"paths./repos/{owner}/{repo}/commits/{shaCode}.get.parameters[6].name" = "X-RateLimit-Remaining"
"paths./repos/{owner}/{repo}/commits/{shaCode}.get.parameters[6].type" = "integer"
"paths./repos/{owner}/{repo}/commits/{shaCode}.get.parameters[7].in" = "header"
"paths./repos/{owner}/{repo}/commits/{shaCode}.get.parameters[7].name" = "X-RateLimit-Reset"
"paths./repos/{owner}/{repo}/commits/{shaCode}.get.parameters[7].type" = "integer"
"paths./repos/{owner}/{repo}/commits/{shaCode}.get.parameters[8].in" = "header"
"paths./repos/{owner}/{repo}/commits/{shaCode}.get.parameters[8].name" = "X-GitHub-Request-Id"
"paths./repos/{owner}/{repo}/commits/{shaCode}.get.parameters[8].type" = "integer"
"paths./repos/{owner}/{repo}/commits/{shaCode}.get.responses.200.description" = "OK"
"paths./repos/{owner}/{repo}/commits/{shaCode}.get.responses.200.schema.$ref" = "#/definitions/commit"
"paths./repos/{owner}/{repo}/commits/{shaCode}.get.responses.403.description" = "API rate limit exceeded. See http://developer.github.com/v3/#rate-limiting\nfor details.\n"
"paths./repos/{owner}/{repo}/commits/{shaCode}/comments.get.description" = "List comments for a single commitList comments for a single commit."
"paths./repos/{owner}/{repo}/commits/{shaCode}/comments.get.parameters.length" = 9
"paths./repos/{owner}/{repo}/commits/{shaCode}/comments.get.parameters[0].description" = "Name of repository owner."
"paths./repos/{owner}/{repo}/commits/{shaCode}/comments.get.parameters[0].in" = "path"
"paths./repos/{owner}/{repo}/commits/{shaCode}/comments.get.parameters[0].name" = "owner"
"paths./repos/{owner}/{repo}/commits/{shaCode}/comments.get.parameters[0].required" = true
"paths./repos/{owner}/{repo}/commits/{shaCode}/comments.get.parameters[0].type" = "string"
"paths./repos/{owner}/{repo}/commits/{shaCode}/comments.get.parameters[1].description" = "Name of repository."
"paths./repos/{owner}/{repo}/commits/{shaCode}/comments.get.parameters[1].in" = "path"
"paths./repos/{owner}/{repo}/commits/{shaCode}/comments.get.parameters[1].name" = "repo"
"paths./repos/{owner}/{repo}/commits/{shaCode}/comments.get.parameters[1].required" = true
"paths./repos/{owner}/{repo}/commits/{shaCode}/comments.get.parameters[1].type" = "string"
"paths./repos/{owner}/{repo}/commits/{shaCode}/comments.get.parameters[2].description" = "SHA-1 code of the commit."
"paths./repos/{owner}/{repo}/commits/{shaCode}/comments.get.parameters[2].in" = "path"
"paths./repos/{owner}/{repo}/commits/{shaCode}/comments.get.parameters[2].name" = "shaCode"
"paths./repos/{owner}/{repo}/commits/{shaCode}/comments.get.parameters[2].required" = true
"paths./repos/{owner}/{repo}/commits/{shaCode}/comments.get.parameters[2].type" = "string"
"paths./repos/{owner}/{repo}/commits/{shaCode}/comments.get.parameters[3].description" = "You can check the current version of media type in responses.\n"
"paths./repos/{owner}/{repo}/commits/{shaCode}/comments.get.parameters[3].in" = "header"
"paths./repos/{owner}/{repo}/commits/{shaCode}/comments.get.parameters[3].name" = "X-GitHub-Media-Type"
"paths./repos/{owner}/{repo}/commits/{shaCode}/comments.get.parameters[3].type" = "string"
"paths./repos/{owner}/{repo}/commits/{shaCode}/comments.get.parameters[4].description" = "Is used to set specified media type."
"paths./repos/{owner}/{repo}/commits/{shaCode}/comments.get.parameters[4].in" = "header"
"paths./repos/{owner}/{repo}/commits/{shaCode}/comments.get.parameters[4].name" = "Accept"
"paths./repos/{owner}/{repo}/commits/{shaCode}/comments.get.parameters[4].type" = "string"
"paths./repos/{owner}/{repo}/commits/{shaCode}/comments.get.parameters[5].in" = "header"
"paths./repos/{owner}/{repo}/commits/{shaCode}/comments.get.parameters[5].name" = "X-RateLimit-Limit"
"paths./repos/{owner}/{repo}/commits/{shaCode}/comments.get.parameters[5].type" = "integer"
"paths./repos/{owner}/{repo}/commits/{shaCode}/comments.get.parameters[6].in" = "header"
"paths./repos/{owner}/{repo}/commits/{shaCode}/comments.get.parameters[6].name" = "X-RateLimit-Remaining"
"paths./repos/{owner}/{repo}/commits/{shaCode}/comments.get.parameters[6].type" = "integer"
"paths./repos/{owner}/{repo}/commits/{shaCode}/comments.get.parameters[7].in" = "header"
"paths./repos/{owner}/{repo}/commits/{shaCode}/comments.get.parameters[7].name" = "X-RateLimit-Reset"
"paths./repos/{owner}/{repo}/commits/{shaCode}/comments.get.parameters[7].type" = "integer"
"paths./repos/{owner}/{repo}/commits/{shaCode}/comments.get.parameters[8].in" = "header"
"paths./repos/{owner}/{repo}/commits/{shaCode}/comments.get.parameters[8].name" = "X-GitHub-Request-Id"
"paths./repos/{owner}/{repo}/commits/{shaCode}/comments.get.parameters[8].type" = "integer"
"paths./repos/{owner}/{repo}/commits/{shaCode}/comments.get.responses.200.description" = "OK"
"paths./repos/{owner}/{repo}/commits/{shaCode}/comments.get.responses.200.schema.$ref" = "#/definitions/repoComments"
"paths./repos/{owner}/{repo}/commits/{shaCode}/comments.get.responses.403.description" = "API rate limit exceeded. See http://developer.github.com/v3/#rate-limiting\nfor details.\n"
"paths./repos/{owner}/{repo}/commits/{shaCode}/comments.post.description" = "Create a commit comment."
"paths./repos/{owner}/{repo}/commits/{shaCode}/comments.post.parameters.length" = 10
"paths./repos/{owner}/{repo}/commits/{shaCode}/comments.post.parameters[0].description" = "Name of repository owner."
"paths./repos/{owner}/{repo}/commits/{shaCode}/comments.post.parameters[0].in" = "path"
"paths./repos/{owner}/{repo}/commits/{shaCode}/comments.post.parameters[0].name" = "owner"
"paths./repos/{owner}/{repo}/commits/{shaCode}/comments.post.parameters[0].required" = true
"paths./repos/{owner}/{repo}/commits/{shaCode}/comments.post.parameters[0].type" = "string"
"paths./repos/{owner}/{repo}/commits/{shaCode}/comments.post.parameters[1].description" = "Name of repository."
"paths./repos/{owner}/{repo}/commits/{shaCode}/comments.post.parameters[1].in" = "path"
"paths./repos/{owner}/{repo}/commits/{shaCode}/comments.post.parameters[1].name" = "repo"
"paths./repos/{owner}/{repo}/commits/{shaCode}/comments.post.parameters[1].required" = true
"paths./repos/{owner}/{repo}/commits/{shaCode}/comments.post.parameters[1].type" = "string"
"paths./repos/{owner}/{repo}/commits/{shaCode}/comments.post.parameters[2].description" = "SHA-1 code of the commit."
"paths./repos/{owner}/{repo}/commits/{shaCode}/comments.post.parameters[2].in" = "path"
"paths./repos/{owner}/{repo}/commits/{shaCode}/comments.post.parameters[2].name" = "shaCode"
"paths./repos/{owner}/{repo}/commits/{shaCode}/comments.post.parameters[2].required" = true
"paths./repos/{owner}/{repo}/commits/{shaCode}/comments.post.parameters[2].type" = "string"
"paths./repos/{owner}/{repo}/commits/{shaCode}/comments.post.parameters[3].description" = "You can check the current version of media type in responses.\n"
"paths./repos/{owner}/{repo}/commits/{shaCode}/comments.post.parameters[3].in" = "header"
"paths./repos/{owner}/{repo}/commits/{shaCode}/comments.post.parameters[3].name" = "X-GitHub-Media-Type"
"paths./repos/{owner}/{repo}/commits/{shaCode}/comments.post.parameters[3].type" = "string"
"paths./repos/{owner}/{repo}/commits/{shaCode}/comments.post.parameters[4].description" = "Is used to set specified media type."
"paths./repos/{owner}/{repo}/commits/{shaCode}/comments.post.parameters[4].in" = "header"
"paths./repos/{owner}/{repo}/commits/{shaCode}/comments.post.parameters[4].name" = "Accept"
"paths./repos/{owner}/{repo}/commits/{shaCode}/comments.post.parameters[4].type" = "string"
"paths./repos/{owner}/{repo}/commits/{shaCode}/comments.post.parameters[5].in" = "header"
"paths./repos/{owner}/{repo}/commits/{shaCode}/comments.post.parameters[5].name" = "X-RateLimit-Limit"
"paths./repos/{owner}/{repo}/commits/{shaCode}/comments.post.parameters[5].type" = "integer"
"paths./repos/{owner}/{repo}/commits/{shaCode}/comments.post.parameters[6].in" = "header"
"paths./repos/{owner}/{repo}/commits/{shaCode}/comments.post.parameters[6].name" = "X-RateLimit-Remaining"
"paths./repos/{owner}/{repo}/commits/{shaCode}/comments.post.parameters[6].type" = "integer"
"paths./repos/{owner}/{repo}/commits/{shaCode}/comments.post.parameters[7].in" = "header"
"paths./repos/{owner}/{repo}/commits/{shaCode}/comments.post.parameters[7].name" = "X-RateLimit-Reset"
"paths./repos/{owner}/{repo}/commits/{shaCode}/comments.post.parameters[7].type" = "integer"
"paths./repos/{owner}/{repo}/commits/{shaCode}/comments.post.parameters[8].in" = "header"
"paths./repos/{owner}/{repo}/commits/{shaCode}/comments.post.parameters[8].name" = "X-GitHub-Request-Id"
"paths./repos/{owner}/{repo}/commits/{shaCode}/comments.post.parameters[8].type" = "integer"
"paths./repos/{owner}/{repo}/commits/{shaCode}/comments.post.parameters[9].in" = "body"
"paths./repos/{owner}/{repo}/commits/{shaCode}/comments.post.parameters[9].name" = "body"
"paths./repos/{owner}/{repo}/commits/{shaCode}/comments.post.parameters[9].required" = true
"paths./repos/{owner}/{repo}/commits/{shaCode}/comments.post.parameters[9].schema.$ref" = "#/definitions/commitBody"
"paths./repos/{owner}/{repo}/commits/{shaCode}/comments.post.responses.201.description" = "Created"
"paths./repos/{owner}/{repo}/commits/{shaCode}/comments.post.responses.201.schema.$ref" = "#/definitions/commitComments"
"paths./repos/{owner}/{repo}/commits/{shaCode}/comments.post.responses.403.description" = "API rate limit exceeded. See http://developer.github.com/v3/#rate-limiting\nfor details.\n"
"paths./repos/{owner}/{repo}/compare/{baseId}...{headId}.get.description" = "Compare two commits"
"paths./repos/{owner}/{repo}/compare/{baseId}...{headId}.get.parameters.length" = 10
"paths./repos/{owner}/{repo}/compare/{baseId}...{headId}.get.parameters[0].description" = "Name of repository owner."
"paths./repos/{owner}/{repo}/compare/{baseId}...{headId}.get.parameters[0].in" = "path"
"paths./repos/{owner}/{repo}/compare/{baseId}...{headId}.get.parameters[0].name" = "owner"
"paths./repos/{owner}/{repo}/compare/{baseId}...{headId}.get.parameters[0].required" = true
"paths./repos/{owner}/{repo}/compare/{baseId}...{headId}.get.parameters[0].type" = "string"
"paths./repos/{owner}/{repo}/compare/{baseId}...{headId}.get.parameters[1].description" = "Name of repository."
"paths./repos/{owner}/{repo}/compare/{baseId}...{headId}.get.parameters[1].in" = "path"
"paths./repos/{owner}/{repo}/compare/{baseId}...{headId}.get.parameters[1].name" = "repo"
"paths./repos/{owner}/{repo}/compare/{baseId}...{headId}.get.parameters[1].required" = true
"paths./repos/{owner}/{repo}/compare/{baseId}...{headId}.get.parameters[1].type" = "string"
"paths./repos/{owner}/{repo}/compare/{baseId}...{headId}.get.parameters[2].in" = "path"
"paths./repos/{owner}/{repo}/compare/{baseId}...{headId}.get.parameters[2].name" = "baseId"
"paths./repos/{owner}/{repo}/compare/{baseId}...{headId}.get.parameters[2].required" = true
"paths./repos/{owner}/{repo}/compare/{baseId}...{headId}.get.parameters[2].type" = "string"
"paths./repos/{owner}/{repo}/compare/{baseId}...{headId}.get.parameters[3].in" = "path"
"paths./repos/{owner}/{repo}/compare/{baseId}...{headId}.get.parameters[3].name" = "headId"
"paths./repos/{owner}/{repo}/compare/{baseId}...{headId}.get.parameters[3].required" = true
"paths./repos/{owner}/{repo}/compare/{baseId}...{headId}.get.parameters[3].type" = "string"
"paths./repos/{owner}/{repo}/compare/{baseId}...{headId}.get.parameters[4].description" = "You can check the current version of media type in responses.\n"
"paths./repos/{owner}/{repo}/compare/{baseId}...{headId}.get.parameters[4].in" = "header"
"paths./repos/{owner}/{repo}/compare/{baseId}...{headId}.get.parameters[4].name" = "X-GitHub-Media-Type"
"paths./repos/{owner}/{repo}/compare/{baseId}...{headId}.get.parameters[4].type" = "string"
"paths./repos/{owner}/{repo}/compare/{baseId}...{headId}.get.parameters[5].description" = "Is used to set specified media type."
"paths./repos/{owner}/{repo}/compare/{baseId}...{headId}.get.parameters[5].in" = "header"
"paths./repos/{owner}/{repo}/compare/{baseId}...{headId}.get.parameters[5].name" = "Accept"
"paths./repos/{owner}/{repo}/compare/{baseId}...{headId}.get.parameters[5].type" = "string"
"paths./repos/{owner}/{repo}/compare/{baseId}...{headId}.get.parameters[6].in" = "header"
"paths./repos/{owner}/{repo}/compare/{baseId}...{headId}.get.parameters[6].name" = "X-RateLimit-Limit"
"paths./repos/{owner}/{repo}/compare/{baseId}...{headId}.get.parameters[6].type" = "integer"
"paths./repos/{owner}/{repo}/compare/{baseId}...{headId}.get.parameters[7].in" = "header"
"paths./repos/{owner}/{repo}/compare/{baseId}...{headId}.get.parameters[7].name" = "X-RateLimit-Remaining"
"paths./repos/{owner}/{repo}/compare/{baseId}...{headId}.get.parameters[7].type" = "integer"
"paths./repos/{owner}/{repo}/compare/{baseId}...{headId}.get.parameters[8].in" = "header"
"paths./repos/{owner}/{repo}/compare/{baseId}...{headId}.get.parameters[8].name" = "X-RateLimit-Reset"
"paths./repos/{owner}/{repo}/compare/{baseId}...{headId}.get.parameters[8].type" = "integer"
"paths./repos/{owner}/{repo}/compare/{baseId}...{headId}.get.parameters[9].in" = "header"
"paths./repos/{owner}/{repo}/compare/{baseId}...{headId}.get.parameters[9].name" = "X-GitHub-Request-Id"
"paths./repos/{owner}/{repo}/compare/{baseId}...{headId}.get.parameters[9].type" = "integer"
"paths./repos/{owner}/{repo}/compare/{baseId}...{headId}.get.responses.200.description" = "OK"
"paths./repos/{owner}/{repo}/compare/{baseId}...{headId}.get.responses.200.schema.$ref" = "#/definitions/compare-commits"
"paths./repos/{owner}/{repo}/compare/{baseId}...{headId}.get.responses.403.description" = "API rate limit exceeded. See http://developer.github.com/v3/#rate-limiting\nfor details.\n"
"paths./repos/{owner}/{repo}/contents/{path}.delete.description" = "Delete a file.\nThis method deletes a file in a repository.\n"
"paths./repos/{owner}/{repo}/contents/{path}.delete.parameters.length" = 10
"paths./repos/{owner}/{repo}/contents/{path}.delete.parameters[0].description" = "Name of repository owner."
"paths./repos/{owner}/{repo}/contents/{path}.delete.parameters[0].in" = "path"
"paths./repos/{owner}/{repo}/contents/{path}.delete.parameters[0].name" = "owner"
"paths./repos/{owner}/{repo}/contents/{path}.delete.parameters[0].required" = true
"paths./repos/{owner}/{repo}/contents/{path}.delete.parameters[0].type" = "string"
"paths./repos/{owner}/{repo}/contents/{path}.delete.parameters[1].description" = "Name of repository."
"paths./repos/{owner}/{repo}/contents/{path}.delete.parameters[1].in" = "path"
"paths./repos/{owner}/{repo}/contents/{path}.delete.parameters[1].name" = "repo"
"paths./repos/{owner}/{repo}/contents/{path}.delete.parameters[1].required" = true
"paths./repos/{owner}/{repo}/contents/{path}.delete.parameters[1].type" = "string"
"paths./repos/{owner}/{repo}/contents/{path}.delete.parameters[2].in" = "path"
"paths./repos/{owner}/{repo}/contents/{path}.delete.parameters[2].name" = "path"
"paths./repos/{owner}/{repo}/contents/{path}.delete.parameters[2].required" = true
"paths./repos/{owner}/{repo}/contents/{path}.delete.parameters[2].type" = "string"
"paths./repos/{owner}/{repo}/contents/{path}.delete.parameters[3].description" = "You can check the current version of media type in responses.\n"
"paths./repos/{owner}/{repo}/contents/{path}.delete.parameters[3].in" = "header"
"paths./repos/{owner}/{repo}/contents/{path}.delete.parameters[3].name" = "X-GitHub-Media-Type"
"paths./repos/{owner}/{repo}/contents/{path}.delete.parameters[3].type" = "string"
"paths./repos/{owner}/{repo}/contents/{path}.delete.parameters[4].description" = "Is used to set specified media type."
"paths./repos/{owner}/{repo}/contents/{path}.delete.parameters[4].in" = "header"
"paths./repos/{owner}/{repo}/contents/{path}.delete.parameters[4].name" = "Accept"
"paths./repos/{owner}/{repo}/contents/{path}.delete.parameters[4].type" = "string"
"paths./repos/{owner}/{repo}/contents/{path}.delete.parameters[5].in" = "header"
"paths./repos/{owner}/{repo}/contents/{path}.delete.parameters[5].name" = "X-RateLimit-Limit"
"paths./repos/{owner}/{repo}/contents/{path}.delete.parameters[5].type" = "integer"
"paths./repos/{owner}/{repo}/contents/{path}.delete.parameters[6].in" = "header"
"paths./repos/{owner}/{repo}/contents/{path}.delete.parameters[6].name" = "X-RateLimit-Remaining"
"paths./repos/{owner}/{repo}/contents/{path}.delete.parameters[6].type" = "integer"
"paths./repos/{owner}/{repo}/contents/{path}.delete.parameters[7].in" = "header"
"paths./repos/{owner}/{repo}/contents/{path}.delete.parameters[7].name" = "X-RateLimit-Reset"
"paths./repos/{owner}/{repo}/contents/{path}.delete.parameters[7].type" = "integer"
"paths./repos/{owner}/{repo}/contents/{path}.delete.parameters[8].in" = "header"
"paths./repos/{owner}/{repo}/contents/{path}.delete.parameters[8].name" = "X-GitHub-Request-Id"
"paths./repos/{owner}/{repo}/contents/{path}.delete.parameters[8].type" = "integer"
"paths./repos/{owner}/{repo}/contents/{path}.delete.parameters[9].in" = "body"
"paths./repos/{owner}/{repo}/contents/{path}.delete.parameters[9].name" = "body"
"paths./repos/{owner}/{repo}/contents/{path}.delete.parameters[9].required" = true
"paths./repos/{owner}/{repo}/contents/{path}.delete.parameters[9].schema.$ref" = "#/definitions/deleteFileBody"
"paths./repos/{owner}/{repo}/contents/{path}.delete.responses.200.description" = "OK"
"paths./repos/{owner}/{repo}/contents/{path}.delete.responses.200.schema.$ref" = "#/definitions/deleteFile"
"paths./repos/{owner}/{repo}/contents/{path}.delete.responses.403.description" = "API rate limit exceeded. See http://developer.github.com/v3/#rate-limiting\nfor details.\n"
"paths./repos/{owner}/{repo}/contents/{path}.get.description" = "Get contents.\nThis method returns the contents of a file or directory in a repository.\nFiles and symlinks support a custom media type for getting the raw content.\nDirectories and submodules do not support custom media types.\nNote: This API supports files up to 1 megabyte in size.\nHere can be many outcomes. For details see \"http://developer.github.com/v3/repos/contents/\"\n"
"paths./repos/{owner}/{repo}/contents/{path}.get.parameters.length" = 11
"paths./repos/{owner}/{repo}/contents/{path}.get.parameters[0].description" = "Name of repository owner."
"paths./repos/{owner}/{repo}/contents/{path}.get.parameters[0].in" = "path"
"paths./repos/{owner}/{repo}/contents/{path}.get.parameters[0].name" = "owner"
"paths./repos/{owner}/{repo}/contents/{path}.get.parameters[0].required" = true
"paths./repos/{owner}/{repo}/contents/{path}.get.parameters[0].type" = "string"
"paths./repos/{owner}/{repo}/contents/{path}.get.parameters[10].in" = "header"
"paths./repos/{owner}/{repo}/contents/{path}.get.parameters[10].name" = "X-GitHub-Request-Id"
"paths./repos/{owner}/{repo}/contents/{path}.get.parameters[10].type" = "integer"
"paths./repos/{owner}/{repo}/contents/{path}.get.parameters[1].description" = "Name of repository."
"paths./repos/{owner}/{repo}/contents/{path}.get.parameters[1].in" = "path"
"paths./repos/{owner}/{repo}/contents/{path}.get.parameters[1].name" = "repo"
"paths./repos/{owner}/{repo}/contents/{path}.get.parameters[1].required" = true
"paths./repos/{owner}/{repo}/contents/{path}.get.parameters[1].type" = "string"
"paths./repos/{owner}/{repo}/contents/{path}.get.parameters[2].in" = "path"
"paths./repos/{owner}/{repo}/contents/{path}.get.parameters[2].name" = "path"
"paths./repos/{owner}/{repo}/contents/{path}.get.parameters[2].required" = true
"paths./repos/{owner}/{repo}/contents/{path}.get.parameters[2].type" = "string"
"paths./repos/{owner}/{repo}/contents/{path}.get.parameters[3].description" = "The content path."
"paths./repos/{owner}/{repo}/contents/{path}.get.parameters[3].in" = "query"
"paths./repos/{owner}/{repo}/contents/{path}.get.parameters[3].name" = "path"
"paths./repos/{owner}/{repo}/contents/{path}.get.parameters[3].type" = "string"
"paths./repos/{owner}/{repo}/contents/{path}.get.parameters[4].description" = "The String name of the Commit/Branch/Tag. Defaults to 'master'."
"paths./repos/{owner}/{repo}/contents/{path}.get.parameters[4].in" = "query"
"paths./repos/{owner}/{repo}/contents/{path}.get.parameters[4].name" = "ref"
"paths./repos/{owner}/{repo}/contents/{path}.get.parameters[4].type" = "string"
"paths./repos/{owner}/{repo}/contents/{path}.get.parameters[5].description" = "You can check the current version of media type in responses.\n"
"paths./repos/{owner}/{repo}/contents/{path}.get.parameters[5].in" = "header"
"paths./repos/{owner}/{repo}/contents/{path}.get.parameters[5].name" = "X-GitHub-Media-Type"
"paths./repos/{owner}/{repo}/contents/{path}.get.parameters[5].type" = "string"
"paths./repos/{owner}/{repo}/contents/{path}.get.parameters[6].description" = "Is used to set specified media type."
"paths./repos/{owner}/{repo}/contents/{path}.get.parameters[6].in" = "header"
"paths./repos/{owner}/{repo}/contents/{path}.get.parameters[6].name" = "Accept"
"paths./repos/{owner}/{repo}/contents/{path}.get.parameters[6].type" = "string"
"paths./repos/{owner}/{repo}/contents/{path}.get.parameters[7].in" = "header"
"paths./repos/{owner}/{repo}/contents/{path}.get.parameters[7].name" = "X-RateLimit-Limit"
"paths./repos/{owner}/{repo}/contents/{path}.get.parameters[7].type" = "integer"
"paths./repos/{owner}/{repo}/contents/{path}.get.parameters[8].in" = "header"
"paths./repos/{owner}/{repo}/contents/{path}.get.parameters[8].name" = "X-RateLimit-Remaining"
"paths./repos/{owner}/{repo}/contents/{path}.get.parameters[8].type" = "integer"
"paths./repos/{owner}/{repo}/contents/{path}.get.parameters[9].in" = "header"
"paths./repos/{owner}/{repo}/contents/{path}.get.parameters[9].name" = "X-RateLimit-Reset"
"paths./repos/{owner}/{repo}/contents/{path}.get.parameters[9].type" = "integer"
"paths./repos/{owner}/{repo}/contents/{path}.get.responses.200.description" = "OK"
"paths./repos/{owner}/{repo}/contents/{path}.get.responses.200.schema.$ref" = "#/definitions/contents-path"
"paths./repos/{owner}/{repo}/contents/{path}.get.responses.403.description" = "API rate limit exceeded. See http://developer.github.com/v3/#rate-limiting\nfor details.\n"
"paths./repos/{owner}/{repo}/contents/{path}.put.description" = "Create a file."
"paths./repos/{owner}/{repo}/contents/{path}.put.parameters.length" = 10
"paths./repos/{owner}/{repo}/contents/{path}.put.parameters[0].description" = "Name of repository owner."
"paths./repos/{owner}/{repo}/contents/{path}.put.parameters[0].in" = "path"
"paths./repos/{owner}/{repo}/contents/{path}.put.parameters[0].name" = "owner"
"paths./repos/{owner}/{repo}/contents/{path}.put.parameters[0].required" = true
"paths./repos/{owner}/{repo}/contents/{path}.put.parameters[0].type" = "string"
"paths./repos/{owner}/{repo}/contents/{path}.put.parameters[1].description" = "Name of repository."
"paths./repos/{owner}/{repo}/contents/{path}.put.parameters[1].in" = "path"
"paths./repos/{owner}/{repo}/contents/{path}.put.parameters[1].name" = "repo"
"paths./repos/{owner}/{repo}/contents/{path}.put.parameters[1].required" = true
"paths./repos/{owner}/{repo}/contents/{path}.put.parameters[1].type" = "string"
"paths./repos/{owner}/{repo}/contents/{path}.put.parameters[2].in" = "path"
"paths./repos/{owner}/{repo}/contents/{path}.put.parameters[2].name" = "path"
"paths./repos/{owner}/{repo}/contents/{path}.put.parameters[2].required" = true
"paths./repos/{owner}/{repo}/contents/{path}.put.parameters[2].type" = "string"
"paths./repos/{owner}/{repo}/contents/{path}.put.parameters[3].description" = "You can check the current version of media type in responses.\n"
"paths./repos/{owner}/{repo}/contents/{path}.put.parameters[3].in" = "header"
"paths./repos/{owner}/{repo}/contents/{path}.put.parameters[3].name" = "X-GitHub-Media-Type"
"paths./repos/{owner}/{repo}/contents/{path}.put.parameters[3].type" = "string"
"paths./repos/{owner}/{repo}/contents/{path}.put.parameters[4].description" = "Is used to set specified media type."
"paths./repos/{owner}/{repo}/contents/{path}.put.parameters[4].in" = "header"
"paths./repos/{owner}/{repo}/contents/{path}.put.parameters[4].name" = "Accept"
"paths./repos/{owner}/{repo}/contents/{path}.put.parameters[4].type" = "string"
"paths./repos/{owner}/{repo}/contents/{path}.put.parameters[5].in" = "header"
"paths./repos/{owner}/{repo}/contents/{path}.put.parameters[5].name" = "X-RateLimit-Limit"
"paths./repos/{owner}/{repo}/contents/{path}.put.parameters[5].type" = "integer"
"paths./repos/{owner}/{repo}/contents/{path}.put.parameters[6].in" = "header"
"paths./repos/{owner}/{repo}/contents/{path}.put.parameters[6].name" = "X-RateLimit-Remaining"
"paths./repos/{owner}/{repo}/contents/{path}.put.parameters[6].type" = "integer"
"paths./repos/{owner}/{repo}/contents/{path}.put.parameters[7].in" = "header"
"paths./repos/{owner}/{repo}/contents/{path}.put.parameters[7].name" = "X-RateLimit-Reset"
"paths./repos/{owner}/{repo}/contents/{path}.put.parameters[7].type" = "integer"
"paths./repos/{owner}/{repo}/contents/{path}.put.parameters[8].in" = "header"
"paths./repos/{owner}/{repo}/contents/{path}.put.parameters[8].name" = "X-GitHub-Request-Id"
"paths./repos/{owner}/{repo}/contents/{path}.put.parameters[8].type" = "integer"
"paths./repos/{owner}/{repo}/contents/{path}.put.parameters[9].in" = "body"
"paths./repos/{owner}/{repo}/contents/{path}.put.parameters[9].name" = "body"
"paths./repos/{owner}/{repo}/contents/{path}.put.parameters[9].required" = true
"paths./repos/{owner}/{repo}/contents/{path}.put.parameters[9].schema.$ref" = "#/definitions/createFileBody"
"paths./repos/{owner}/{repo}/contents/{path}.put.responses.200.description" = "OK"
"paths./repos/{owner}/{repo}/contents/{path}.put.responses.200.schema.$ref" = "#/definitions/createFile"
"paths./repos/{owner}/{repo}/contents/{path}.put.responses.403.description" = "API rate limit exceeded. See http://developer.github.com/v3/#rate-limiting\nfor details.\n"
"paths./repos/{owner}/{repo}/contributors.get.description" = "Get list of contributors."
"paths./repos/{owner}/{repo}/contributors.get.parameters.length" = 9
"paths./repos/{owner}/{repo}/contributors.get.parameters[0].description" = "Name of repository owner."
"paths./repos/{owner}/{repo}/contributors.get.parameters[0].in" = "path"
"paths./repos/{owner}/{repo}/contributors.get.parameters[0].name" = "owner"
"paths./repos/{owner}/{repo}/contributors.get.parameters[0].required" = true
"paths./repos/{owner}/{repo}/contributors.get.parameters[0].type" = "string"
"paths./repos/{owner}/{repo}/contributors.get.parameters[1].description" = "Name of repository."
"paths./repos/{owner}/{repo}/contributors.get.parameters[1].in" = "path"
"paths./repos/{owner}/{repo}/contributors.get.parameters[1].name" = "repo"
"paths./repos/{owner}/{repo}/contributors.get.parameters[1].required" = true
"paths./repos/{owner}/{repo}/contributors.get.parameters[1].type" = "string"
"paths./repos/{owner}/{repo}/contributors.get.parameters[2].description" = "Set to 1 or true to include anonymous contributors in results."
"paths./repos/{owner}/{repo}/contributors.get.parameters[2].in" = "query"
"paths./repos/{owner}/{repo}/contributors.get.parameters[2].name" = "anon"
"paths./repos/{owner}/{repo}/contributors.get.parameters[2].required" = true
"paths./repos/{owner}/{repo}/contributors.get.parameters[2].type" = "string"
"paths./repos/{owner}/{repo}/contributors.get.parameters[3].description" = "You can check the current version of media type in responses.\n"
"paths./repos/{owner}/{repo}/contributors.get.parameters[3].in" = "header"
"paths./repos/{owner}/{repo}/contributors.get.parameters[3].name" = "X-GitHub-Media-Type"
"paths./repos/{owner}/{repo}/contributors.get.parameters[3].type" = "string"
"paths./repos/{owner}/{repo}/contributors.get.parameters[4].description" = "Is used to set specified media type."
"paths./repos/{owner}/{repo}/contributors.get.parameters[4].in" = "header"
"paths./repos/{owner}/{repo}/contributors.get.parameters[4].name" = "Accept"
"paths./repos/{owner}/{repo}/contributors.get.parameters[4].type" = "string"
"paths./repos/{owner}/{repo}/contributors.get.parameters[5].in" = "header"
"paths./repos/{owner}/{repo}/contributors.get.parameters[5].name" = "X-RateLimit-Limit"
"paths./repos/{owner}/{repo}/contributors.get.parameters[5].type" = "integer"
"paths./repos/{owner}/{repo}/contributors.get.parameters[6].in" = "header"
"paths./repos/{owner}/{repo}/contributors.get.parameters[6].name" = "X-RateLimit-Remaining"
"paths./repos/{owner}/{repo}/contributors.get.parameters[6].type" = "integer"
"paths./repos/{owner}/{repo}/contributors.get.parameters[7].in" = "header"
"paths./repos/{owner}/{repo}/contributors.get.parameters[7].name" = "X-RateLimit-Reset"
"paths./repos/{owner}/{repo}/contributors.get.parameters[7].type" = "integer"
"paths./repos/{owner}/{repo}/contributors.get.parameters[8].in" = "header"
"paths./repos/{owner}/{repo}/contributors.get.parameters[8].name" = "X-GitHub-Request-Id"
"paths./repos/{owner}/{repo}/contributors.get.parameters[8].type" = "integer"
"paths./repos/{owner}/{repo}/contributors.get.responses.200.description" = "OK"
"paths./repos/{owner}/{repo}/contributors.get.responses.200.schema.$ref" = "#/definitions/contributors"
"paths./repos/{owner}/{repo}/contributors.get.responses.403.description" = "API rate limit exceeded. See http://developer.github.com/v3/#rate-limiting\nfor details.\n"
"paths./repos/{owner}/{repo}/deployments.get.description" = "Users with pull access can view deployments for a repository"
"paths./repos/{owner}/{repo}/deployments.get.parameters.length" = 8
"paths./repos/{owner}/{repo}/deployments.get.parameters[0].description" = "Name of repository owner."
"paths./repos/{owner}/{repo}/deployments.get.parameters[0].in" = "path"
"paths./repos/{owner}/{repo}/deployments.get.parameters[0].name" = "owner"
"paths./repos/{owner}/{repo}/deployments.get.parameters[0].required" = true
"paths./repos/{owner}/{repo}/deployments.get.parameters[0].type" = "string"
"paths./repos/{owner}/{repo}/deployments.get.parameters[1].description" = "Name of repository."
"paths./repos/{owner}/{repo}/deployments.get.parameters[1].in" = "path"
"paths./repos/{owner}/{repo}/deployments.get.parameters[1].name" = "repo"
"paths./repos/{owner}/{repo}/deployments.get.parameters[1].required" = true
"paths./repos/{owner}/{repo}/deployments.get.parameters[1].type" = "string"
"paths./repos/{owner}/{repo}/deployments.get.parameters[2].description" = "You can check the current version of media type in responses.\n"
"paths./repos/{owner}/{repo}/deployments.get.parameters[2].in" = "header"
"paths./repos/{owner}/{repo}/deployments.get.parameters[2].name" = "X-GitHub-Media-Type"
"paths./repos/{owner}/{repo}/deployments.get.parameters[2].type" = "string"
"paths./repos/{owner}/{repo}/deployments.get.parameters[3].description" = "Is used to set specified media type."
"paths./repos/{owner}/{repo}/deployments.get.parameters[3].in" = "header"
"paths./repos/{owner}/{repo}/deployments.get.parameters[3].name" = "Accept"
"paths./repos/{owner}/{repo}/deployments.get.parameters[3].type" = "string"
"paths./repos/{owner}/{repo}/deployments.get.parameters[4].in" = "header"
"paths./repos/{owner}/{repo}/deployments.get.parameters[4].name" = "X-RateLimit-Limit"
"paths./repos/{owner}/{repo}/deployments.get.parameters[4].type" = "integer"
"paths./repos/{owner}/{repo}/deployments.get.parameters[5].in" = "header"
"paths./repos/{owner}/{repo}/deployments.get.parameters[5].name" = "X-RateLimit-Remaining"
"paths./repos/{owner}/{repo}/deployments.get.parameters[5].type" = "integer"
"paths./repos/{owner}/{repo}/deployments.get.parameters[6].in" = "header"
"paths./repos/{owner}/{repo}/deployments.get.parameters[6].name" = "X-RateLimit-Reset"
"paths./repos/{owner}/{repo}/deployments.get.parameters[6].type" = "integer"
"paths./repos/{owner}/{repo}/deployments.get.parameters[7].in" = "header"
"paths./repos/{owner}/{repo}/deployments.get.parameters[7].name" = "X-GitHub-Request-Id"
"paths./repos/{owner}/{repo}/deployments.get.parameters[7].type" = "integer"
"paths./repos/{owner}/{repo}/deployments.get.responses.200.description" = "OK"
"paths./repos/{owner}/{repo}/deployments.get.responses.200.schema.$ref" = "#/definitions/repo-deployments"
"paths./repos/{owner}/{repo}/deployments.get.responses.403.description" = "API rate limit exceeded. See http://developer.github.com/v3/#rate-limiting\nfor details.\n"
"paths./repos/{owner}/{repo}/deployments.post.description" = "Users with push access can create a deployment for a given ref"
"paths./repos/{owner}/{repo}/deployments.post.parameters.length" = 9
"paths./repos/{owner}/{repo}/deployments.post.parameters[0].description" = "Name of repository owner."
"paths./repos/{owner}/{repo}/deployments.post.parameters[0].in" = "path"
"paths./repos/{owner}/{repo}/deployments.post.parameters[0].name" = "owner"
"paths./repos/{owner}/{repo}/deployments.post.parameters[0].required" = true
"paths./repos/{owner}/{repo}/deployments.post.parameters[0].type" = "string"
"paths./repos/{owner}/{repo}/deployments.post.parameters[1].description" = "Name of repository."
"paths./repos/{owner}/{repo}/deployments.post.parameters[1].in" = "path"
"paths./repos/{owner}/{repo}/deployments.post.parameters[1].name" = "repo"
"paths./repos/{owner}/{repo}/deployments.post.parameters[1].required" = true
"paths./repos/{owner}/{repo}/deployments.post.parameters[1].type" = "string"
"paths./repos/{owner}/{repo}/deployments.post.parameters[2].description" = "You can check the current version of media type in responses.\n"
"paths./repos/{owner}/{repo}/deployments.post.parameters[2].in" = "header"
"paths./repos/{owner}/{repo}/deployments.post.parameters[2].name" = "X-GitHub-Media-Type"
"paths./repos/{owner}/{repo}/deployments.post.parameters[2].type" = "string"
"paths./repos/{owner}/{repo}/deployments.post.parameters[3].description" = "Is used to set specified media type."
"paths./repos/{owner}/{repo}/deployments.post.parameters[3].in" = "header"
"paths./repos/{owner}/{repo}/deployments.post.parameters[3].name" = "Accept"
"paths./repos/{owner}/{repo}/deployments.post.parameters[3].type" = "string"
"paths./repos/{owner}/{repo}/deployments.post.parameters[4].in" = "header"
"paths./repos/{owner}/{repo}/deployments.post.parameters[4].name" = "X-RateLimit-Limit"
"paths./repos/{owner}/{repo}/deployments.post.parameters[4].type" = "integer"
"paths./repos/{owner}/{repo}/deployments.post.parameters[5].in" = "header"
"paths./repos/{owner}/{repo}/deployments.post.parameters[5].name" = "X-RateLimit-Remaining"
"paths./repos/{owner}/{repo}/deployments.post.parameters[5].type" = "integer"
"paths./repos/{owner}/{repo}/deployments.post.parameters[6].in" = "header"
"paths./repos/{owner}/{repo}/deployments.post.parameters[6].name" = "X-RateLimit-Reset"
"paths./repos/{owner}/{repo}/deployments.post.parameters[6].type" = "integer"
"paths./repos/{owner}/{repo}/deployments.post.parameters[7].in" = "header"
"paths./repos/{owner}/{repo}/deployments.post.parameters[7].name" = "X-GitHub-Request-Id"
"paths./repos/{owner}/{repo}/deployments.post.parameters[7].type" = "integer"
"paths./repos/{owner}/{repo}/deployments.post.parameters[8].in" = "body"
"paths./repos/{owner}/{repo}/deployments.post.parameters[8].name" = "body"
"paths./repos/{owner}/{repo}/deployments.post.parameters[8].required" = true
"paths./repos/{owner}/{repo}/deployments.post.parameters[8].schema.$ref" = "#/definitions/deployment"
"paths./repos/{owner}/{repo}/deployments.post.responses.201.description" = "Created"
"paths./repos/{owner}/{repo}/deployments.post.responses.201.schema.$ref" = "#/definitions/deployment-resp"
"paths./repos/{owner}/{repo}/deployments.post.responses.403.description" = "API rate limit exceeded. See http://developer.github.com/v3/#rate-limiting\nfor details.\n"
"paths./repos/{owner}/{repo}/deployments/{id}/statuses.get.description" = "Users with pull access can view deployment statuses for a deployment"
"paths./repos/{owner}/{repo}/deployments/{id}/statuses.get.parameters.length" = 9
"paths./repos/{owner}/{repo}/deployments/{id}/statuses.get.parameters[0].description" = "Name of repository owner."
"paths./repos/{owner}/{repo}/deployments/{id}/statuses.get.parameters[0].in" = "path"
"paths./repos/{owner}/{repo}/deployments/{id}/statuses.get.parameters[0].name" = "owner"
"paths./repos/{owner}/{repo}/deployments/{id}/statuses.get.parameters[0].required" = true
"paths./repos/{owner}/{repo}/deployments/{id}/statuses.get.parameters[0].type" = "string"
"paths./repos/{owner}/{repo}/deployments/{id}/statuses.get.parameters[1].description" = "Name of repository."
"paths./repos/{owner}/{repo}/deployments/{id}/statuses.get.parameters[1].in" = "path"
"paths./repos/{owner}/{repo}/deployments/{id}/statuses.get.parameters[1].name" = "repo"
"paths./repos/{owner}/{repo}/deployments/{id}/statuses.get.parameters[1].required" = true
"paths./repos/{owner}/{repo}/deployments/{id}/statuses.get.parameters[1].type" = "string"
"paths./repos/{owner}/{repo}/deployments/{id}/statuses.get.parameters[2].description" = "The Deployment ID to list the statuses from."
"paths./repos/{owner}/{repo}/deployments/{id}/statuses.get.parameters[2].in" = "path"
"paths./repos/{owner}/{repo}/deployments/{id}/statuses.get.parameters[2].name" = "id"
"paths./repos/{owner}/{repo}/deployments/{id}/statuses.get.parameters[2].required" = true
"paths./repos/{owner}/{repo}/deployments/{id}/statuses.get.parameters[2].type" = "integer"
"paths./repos/{owner}/{repo}/deployments/{id}/statuses.get.parameters[3].description" = "You can check the current version of media type in responses.\n"
"paths./repos/{owner}/{repo}/deployments/{id}/statuses.get.parameters[3].in" = "header"
"paths./repos/{owner}/{repo}/deployments/{id}/statuses.get.parameters[3].name" = "X-GitHub-Media-Type"
"paths./repos/{owner}/{repo}/deployments/{id}/statuses.get.parameters[3].type" = "string"
"paths./repos/{owner}/{repo}/deployments/{id}/statuses.get.parameters[4].description" = "Is used to set specified media type."
"paths./repos/{owner}/{repo}/deployments/{id}/statuses.get.parameters[4].in" = "header"
"paths./repos/{owner}/{repo}/deployments/{id}/statuses.get.parameters[4].name" = "Accept"
"paths./repos/{owner}/{repo}/deployments/{id}/statuses.get.parameters[4].type" = "string"
"paths./repos/{owner}/{repo}/deployments/{id}/statuses.get.parameters[5].in" = "header"
"paths./repos/{owner}/{repo}/deployments/{id}/statuses.get.parameters[5].name" = "X-RateLimit-Limit"
"paths./repos/{owner}/{repo}/deployments/{id}/statuses.get.parameters[5].type" = "integer"
"paths./repos/{owner}/{repo}/deployments/{id}/statuses.get.parameters[6].in" = "header"
"paths./repos/{owner}/{repo}/deployments/{id}/statuses.get.parameters[6].name" = "X-RateLimit-Remaining"
"paths./repos/{owner}/{repo}/deployments/{id}/statuses.get.parameters[6].type" = "integer"
"paths./repos/{owner}/{repo}/deployments/{id}/statuses.get.parameters[7].in" = "header"
"paths./repos/{owner}/{repo}/deployments/{id}/statuses.get.parameters[7].name" = "X-RateLimit-Reset"
"paths./repos/{owner}/{repo}/deployments/{id}/statuses.get.parameters[7].type" = "integer"
"paths./repos/{owner}/{repo}/deployments/{id}/statuses.get.parameters[8].in" = "header"
"paths./repos/{owner}/{repo}/deployments/{id}/statuses.get.parameters[8].name" = "X-GitHub-Request-Id"
"paths./repos/{owner}/{repo}/deployments/{id}/statuses.get.parameters[8].type" = "integer"
"paths./repos/{owner}/{repo}/deployments/{id}/statuses.get.responses.200.description" = "OK"
"paths./repos/{owner}/{repo}/deployments/{id}/statuses.get.responses.200.schema.$ref" = "#/definitions/deployment-statuses"
"paths./repos/{owner}/{repo}/deployments/{id}/statuses.get.responses.403.description" = "API rate limit exceeded. See http://developer.github.com/v3/#rate-limiting\nfor details.\n"
"paths./repos/{owner}/{repo}/deployments/{id}/statuses.post.description" = "Create a Deployment Status\nUsers with push access can create deployment statuses for a given deployment:\n"
"paths./repos/{owner}/{repo}/deployments/{id}/statuses.post.parameters.length" = 10
"paths./repos/{owner}/{repo}/deployments/{id}/statuses.post.parameters[0].description" = "Name of repository owner."
"paths./repos/{owner}/{repo}/deployments/{id}/statuses.post.parameters[0].in" = "path"
"paths./repos/{owner}/{repo}/deployments/{id}/statuses.post.parameters[0].name" = "owner"
"paths./repos/{owner}/{repo}/deployments/{id}/statuses.post.parameters[0].required" = true
"paths./repos/{owner}/{repo}/deployments/{id}/statuses.post.parameters[0].type" = "string"
"paths./repos/{owner}/{repo}/deployments/{id}/statuses.post.parameters[1].description" = "Name of repository."
"paths./repos/{owner}/{repo}/deployments/{id}/statuses.post.parameters[1].in" = "path"
"paths./repos/{owner}/{repo}/deployments/{id}/statuses.post.parameters[1].name" = "repo"
"paths./repos/{owner}/{repo}/deployments/{id}/statuses.post.parameters[1].required" = true
"paths./repos/{owner}/{repo}/deployments/{id}/statuses.post.parameters[1].type" = "string"
"paths./repos/{owner}/{repo}/deployments/{id}/statuses.post.parameters[2].description" = "The Deployment ID to list the statuses from."
"paths./repos/{owner}/{repo}/deployments/{id}/statuses.post.parameters[2].in" = "path"
"paths./repos/{owner}/{repo}/deployments/{id}/statuses.post.parameters[2].name" = "id"
"paths./repos/{owner}/{repo}/deployments/{id}/statuses.post.parameters[2].required" = true
"paths./repos/{owner}/{repo}/deployments/{id}/statuses.post.parameters[2].type" = "integer"
"paths./repos/{owner}/{repo}/deployments/{id}/statuses.post.parameters[3].description" = "You can check the current version of media type in responses.\n"
"paths./repos/{owner}/{repo}/deployments/{id}/statuses.post.parameters[3].in" = "header"
"paths./repos/{owner}/{repo}/deployments/{id}/statuses.post.parameters[3].name" = "X-GitHub-Media-Type"
"paths./repos/{owner}/{repo}/deployments/{id}/statuses.post.parameters[3].type" = "string"
"paths./repos/{owner}/{repo}/deployments/{id}/statuses.post.parameters[4].description" = "Is used to set specified media type."
"paths./repos/{owner}/{repo}/deployments/{id}/statuses.post.parameters[4].in" = "header"
"paths./repos/{owner}/{repo}/deployments/{id}/statuses.post.parameters[4].name" = "Accept"
"paths./repos/{owner}/{repo}/deployments/{id}/statuses.post.parameters[4].type" = "string"
"paths./repos/{owner}/{repo}/deployments/{id}/statuses.post.parameters[5].in" = "header"
"paths./repos/{owner}/{repo}/deployments/{id}/statuses.post.parameters[5].name" = "X-RateLimit-Limit"
"paths./repos/{owner}/{repo}/deployments/{id}/statuses.post.parameters[5].type" = "integer"
"paths./repos/{owner}/{repo}/deployments/{id}/statuses.post.parameters[6].in" = "header"
"paths./repos/{owner}/{repo}/deployments/{id}/statuses.post.parameters[6].name" = "X-RateLimit-Remaining"
"paths./repos/{owner}/{repo}/deployments/{id}/statuses.post.parameters[6].type" = "integer"
"paths./repos/{owner}/{repo}/deployments/{id}/statuses.post.parameters[7].in" = "header"
"paths./repos/{owner}/{repo}/deployments/{id}/statuses.post.parameters[7].name" = "X-RateLimit-Reset"
"paths./repos/{owner}/{repo}/deployments/{id}/statuses.post.parameters[7].type" = "integer"
"paths./repos/{owner}/{repo}/deployments/{id}/statuses.post.parameters[8].in" = "header"
"paths./repos/{owner}/{repo}/deployments/{id}/statuses.post.parameters[8].name" = "X-GitHub-Request-Id"
"paths./repos/{owner}/{repo}/deployments/{id}/statuses.post.parameters[8].type" = "integer"
"paths./repos/{owner}/{repo}/deployments/{id}/statuses.post.parameters[9].in" = "body"
"paths./repos/{owner}/{repo}/deployments/{id}/statuses.post.parameters[9].name" = "body"
"paths./repos/{owner}/{repo}/deployments/{id}/statuses.post.parameters[9].required" = true
"paths./repos/{owner}/{repo}/deployments/{id}/statuses.post.parameters[9].schema.$ref" = "#/definitions/deployment-statuses-create"
"paths./repos/{owner}/{repo}/deployments/{id}/statuses.post.responses.201.description" = "ok"
"paths./repos/{owner}/{repo}/deployments/{id}/statuses.post.responses.403.description" = "API rate limit exceeded. See http://developer.github.com/v3/#rate-limiting\nfor details.\n"
"paths./repos/{owner}/{repo}/downloads.get.description" = "Deprecated. List downloads for a repository."
"paths./repos/{owner}/{repo}/downloads.get.parameters.length" = 8
"paths./repos/{owner}/{repo}/downloads.get.parameters[0].description" = "Name of repository owner."
"paths./repos/{owner}/{repo}/downloads.get.parameters[0].in" = "path"
"paths./repos/{owner}/{repo}/downloads.get.parameters[0].name" = "owner"
"paths./repos/{owner}/{repo}/downloads.get.parameters[0].required" = true
"paths./repos/{owner}/{repo}/downloads.get.parameters[0].type" = "string"
"paths./repos/{owner}/{repo}/downloads.get.parameters[1].description" = "Name of repository."
"paths./repos/{owner}/{repo}/downloads.get.parameters[1].in" = "path"
"paths./repos/{owner}/{repo}/downloads.get.parameters[1].name" = "repo"
"paths./repos/{owner}/{repo}/downloads.get.parameters[1].required" = true
"paths./repos/{owner}/{repo}/downloads.get.parameters[1].type" = "string"
"paths./repos/{owner}/{repo}/downloads.get.parameters[2].description" = "You can check the current version of media type in responses.\n"
"paths./repos/{owner}/{repo}/downloads.get.parameters[2].in" = "header"
"paths./repos/{owner}/{repo}/downloads.get.parameters[2].name" = "X-GitHub-Media-Type"
"paths./repos/{owner}/{repo}/downloads.get.parameters[2].type" = "string"
"paths./repos/{owner}/{repo}/downloads.get.parameters[3].description" = "Is used to set specified media type."
"paths./repos/{owner}/{repo}/downloads.get.parameters[3].in" = "header"
"paths./repos/{owner}/{repo}/downloads.get.parameters[3].name" = "Accept"
"paths./repos/{owner}/{repo}/downloads.get.parameters[3].type" = "string"
"paths./repos/{owner}/{repo}/downloads.get.parameters[4].in" = "header"
"paths./repos/{owner}/{repo}/downloads.get.parameters[4].name" = "X-RateLimit-Limit"
"paths./repos/{owner}/{repo}/downloads.get.parameters[4].type" = "integer"
"paths./repos/{owner}/{repo}/downloads.get.parameters[5].in" = "header"
"paths./repos/{owner}/{repo}/downloads.get.parameters[5].name" = "X-RateLimit-Remaining"
"paths./repos/{owner}/{repo}/downloads.get.parameters[5].type" = "integer"
"paths./repos/{owner}/{repo}/downloads.get.parameters[6].in" = "header"
"paths./repos/{owner}/{repo}/downloads.get.parameters[6].name" = "X-RateLimit-Reset"
"paths./repos/{owner}/{repo}/downloads.get.parameters[6].type" = "integer"
"paths./repos/{owner}/{repo}/downloads.get.parameters[7].in" = "header"
"paths./repos/{owner}/{repo}/downloads.get.parameters[7].name" = "X-GitHub-Request-Id"
"paths./repos/{owner}/{repo}/downloads.get.parameters[7].type" = "integer"
"paths./repos/{owner}/{repo}/downloads.get.responses.200.description" = "OK"
"paths./repos/{owner}/{repo}/downloads.get.responses.200.schema.$ref" = "#/definitions/downloads"
"paths./repos/{owner}/{repo}/downloads.get.responses.403.description" = "API rate limit exceeded. See http://developer.github.com/v3/#rate-limiting\nfor details.\n"
"paths./repos/{owner}/{repo}/downloads/{downloadId}.delete.description" = "Deprecated. Delete a download."
"paths./repos/{owner}/{repo}/downloads/{downloadId}.delete.parameters.length" = 9
"paths./repos/{owner}/{repo}/downloads/{downloadId}.delete.parameters[0].description" = "Name of repository owner."
"paths./repos/{owner}/{repo}/downloads/{downloadId}.delete.parameters[0].in" = "path"
"paths./repos/{owner}/{repo}/downloads/{downloadId}.delete.parameters[0].name" = "owner"
"paths./repos/{owner}/{repo}/downloads/{downloadId}.delete.parameters[0].required" = true
"paths./repos/{owner}/{repo}/downloads/{downloadId}.delete.parameters[0].type" = "string"
"paths./repos/{owner}/{repo}/downloads/{downloadId}.delete.parameters[1].description" = "Name of repository."
"paths./repos/{owner}/{repo}/downloads/{downloadId}.delete.parameters[1].in" = "path"
"paths./repos/{owner}/{repo}/downloads/{downloadId}.delete.parameters[1].name" = "repo"
"paths./repos/{owner}/{repo}/downloads/{downloadId}.delete.parameters[1].required" = true
"paths./repos/{owner}/{repo}/downloads/{downloadId}.delete.parameters[1].type" = "string"
"paths./repos/{owner}/{repo}/downloads/{downloadId}.delete.parameters[2].description" = "Id of download."
"paths./repos/{owner}/{repo}/downloads/{downloadId}.delete.parameters[2].in" = "path"
"paths./repos/{owner}/{repo}/downloads/{downloadId}.delete.parameters[2].name" = "downloadId"
"paths./repos/{owner}/{repo}/downloads/{downloadId}.delete.parameters[2].required" = true
"paths./repos/{owner}/{repo}/downloads/{downloadId}.delete.parameters[2].type" = "integer"
"paths./repos/{owner}/{repo}/downloads/{downloadId}.delete.parameters[3].description" = "You can check the current version of media type in responses.\n"
"paths./repos/{owner}/{repo}/downloads/{downloadId}.delete.parameters[3].in" = "header"
"paths./repos/{owner}/{repo}/downloads/{downloadId}.delete.parameters[3].name" = "X-GitHub-Media-Type"
"paths./repos/{owner}/{repo}/downloads/{downloadId}.delete.parameters[3].type" = "string"
"paths./repos/{owner}/{repo}/downloads/{downloadId}.delete.parameters[4].description" = "Is used to set specified media type."
"paths./repos/{owner}/{repo}/downloads/{downloadId}.delete.parameters[4].in" = "header"
"paths./repos/{owner}/{repo}/downloads/{downloadId}.delete.parameters[4].name" = "Accept"
"paths./repos/{owner}/{repo}/downloads/{downloadId}.delete.parameters[4].type" = "string"
"paths./repos/{owner}/{repo}/downloads/{downloadId}.delete.parameters[5].in" = "header"
"paths./repos/{owner}/{repo}/downloads/{downloadId}.delete.parameters[5].name" = "X-RateLimit-Limit"
"paths./repos/{owner}/{repo}/downloads/{downloadId}.delete.parameters[5].type" = "integer"
"paths./repos/{owner}/{repo}/downloads/{downloadId}.delete.parameters[6].in" = "header"
"paths./repos/{owner}/{repo}/downloads/{downloadId}.delete.parameters[6].name" = "X-RateLimit-Remaining"
"paths./repos/{owner}/{repo}/downloads/{downloadId}.delete.parameters[6].type" = "integer"
"paths./repos/{owner}/{repo}/downloads/{downloadId}.delete.parameters[7].in" = "header"
"paths./repos/{owner}/{repo}/downloads/{downloadId}.delete.parameters[7].name" = "X-RateLimit-Reset"
"paths./repos/{owner}/{repo}/downloads/{downloadId}.delete.parameters[7].type" = "integer"
"paths./repos/{owner}/{repo}/downloads/{downloadId}.delete.parameters[8].in" = "header"
"paths./repos/{owner}/{repo}/downloads/{downloadId}.delete.parameters[8].name" = "X-GitHub-Request-Id"
"paths./repos/{owner}/{repo}/downloads/{downloadId}.delete.parameters[8].type" = "integer"
"paths./repos/{owner}/{repo}/downloads/{downloadId}.delete.responses.204.description" = "No content.\n"
"paths./repos/{owner}/{repo}/downloads/{downloadId}.delete.responses.403.description" = "API rate limit exceeded. See http://developer.github.com/v3/#rate-limiting\nfor details.\n"
"paths./repos/{owner}/{repo}/downloads/{downloadId}.get.description" = "Deprecated. Get a single download."
"paths./repos/{owner}/{repo}/downloads/{downloadId}.get.parameters.length" = 9
"paths./repos/{owner}/{repo}/downloads/{downloadId}.get.parameters[0].description" = "Name of repository owner."
"paths./repos/{owner}/{repo}/downloads/{downloadId}.get.parameters[0].in" = "path"
"paths./repos/{owner}/{repo}/downloads/{downloadId}.get.parameters[0].name" = "owner"
"paths./repos/{owner}/{repo}/downloads/{downloadId}.get.parameters[0].required" = true
"paths./repos/{owner}/{repo}/downloads/{downloadId}.get.parameters[0].type" = "string"
"paths./repos/{owner}/{repo}/downloads/{downloadId}.get.parameters[1].description" = "Name of repository."
"paths./repos/{owner}/{repo}/downloads/{downloadId}.get.parameters[1].in" = "path"
"paths./repos/{owner}/{repo}/downloads/{downloadId}.get.parameters[1].name" = "repo"
"paths./repos/{owner}/{repo}/downloads/{downloadId}.get.parameters[1].required" = true
"paths./repos/{owner}/{repo}/downloads/{downloadId}.get.parameters[1].type" = "string"
"paths./repos/{owner}/{repo}/downloads/{downloadId}.get.parameters[2].description" = "Id of download."
"paths./repos/{owner}/{repo}/downloads/{downloadId}.get.parameters[2].in" = "path"
"paths./repos/{owner}/{repo}/downloads/{downloadId}.get.parameters[2].name" = "downloadId"
"paths./repos/{owner}/{repo}/downloads/{downloadId}.get.parameters[2].required" = true
"paths./repos/{owner}/{repo}/downloads/{downloadId}.get.parameters[2].type" = "integer"
"paths./repos/{owner}/{repo}/downloads/{downloadId}.get.parameters[3].description" = "You can check the current version of media type in responses.\n"
"paths./repos/{owner}/{repo}/downloads/{downloadId}.get.parameters[3].in" = "header"
"paths./repos/{owner}/{repo}/downloads/{downloadId}.get.parameters[3].name" = "X-GitHub-Media-Type"
"paths./repos/{owner}/{repo}/downloads/{downloadId}.get.parameters[3].type" = "string"
"paths./repos/{owner}/{repo}/downloads/{downloadId}.get.parameters[4].description" = "Is used to set specified media type."
"paths./repos/{owner}/{repo}/downloads/{downloadId}.get.parameters[4].in" = "header"
"paths./repos/{owner}/{repo}/downloads/{downloadId}.get.parameters[4].name" = "Accept"
"paths./repos/{owner}/{repo}/downloads/{downloadId}.get.parameters[4].type" = "string"
"paths./repos/{owner}/{repo}/downloads/{downloadId}.get.parameters[5].in" = "header"
"paths./repos/{owner}/{repo}/downloads/{downloadId}.get.parameters[5].name" = "X-RateLimit-Limit"
"paths./repos/{owner}/{repo}/downloads/{downloadId}.get.parameters[5].type" = "integer"
"paths./repos/{owner}/{repo}/downloads/{downloadId}.get.parameters[6].in" = "header"
"paths./repos/{owner}/{repo}/downloads/{downloadId}.get.parameters[6].name" = "X-RateLimit-Remaining"
"paths./repos/{owner}/{repo}/downloads/{downloadId}.get.parameters[6].type" = "integer"
"paths./repos/{owner}/{repo}/downloads/{downloadId}.get.parameters[7].in" = "header"
"paths./repos/{owner}/{repo}/downloads/{downloadId}.get.parameters[7].name" = "X-RateLimit-Reset"
"paths./repos/{owner}/{repo}/downloads/{downloadId}.get.parameters[7].type" = "integer"
"paths./repos/{owner}/{repo}/downloads/{downloadId}.get.parameters[8].in" = "header"
"paths./repos/{owner}/{repo}/downloads/{downloadId}.get.parameters[8].name" = "X-GitHub-Request-Id"
"paths./repos/{owner}/{repo}/downloads/{downloadId}.get.parameters[8].type" = "integer"
"paths./repos/{owner}/{repo}/downloads/{downloadId}.get.responses.200.description" = "OK"
"paths./repos/{owner}/{repo}/downloads/{downloadId}.get.responses.200.schema.$ref" = "#/definitions/downloads"
"paths./repos/{owner}/{repo}/downloads/{downloadId}.get.responses.403.description" = "API rate limit exceeded. See http://developer.github.com/v3/#rate-limiting\nfor details.\n"
"paths./repos/{owner}/{repo}/events.get.description" = "Get list of repository events."
"paths./repos/{owner}/{repo}/events.get.parameters.length" = 8
"paths./repos/{owner}/{repo}/events.get.parameters[0].description" = "Name of repository owner."
"paths./repos/{owner}/{repo}/events.get.parameters[0].in" = "path"
"paths./repos/{owner}/{repo}/events.get.parameters[0].name" = "owner"
"paths./repos/{owner}/{repo}/events.get.parameters[0].required" = true
"paths./repos/{owner}/{repo}/events.get.parameters[0].type" = "string"
"paths./repos/{owner}/{repo}/events.get.parameters[1].description" = "Name of repository."
"paths./repos/{owner}/{repo}/events.get.parameters[1].in" = "path"
"paths./repos/{owner}/{repo}/events.get.parameters[1].name" = "repo"
"paths./repos/{owner}/{repo}/events.get.parameters[1].required" = true
"paths./repos/{owner}/{repo}/events.get.parameters[1].type" = "string"
"paths./repos/{owner}/{repo}/events.get.parameters[2].description" = "You can check the current version of media type in responses.\n"
"paths./repos/{owner}/{repo}/events.get.parameters[2].in" = "header"
"paths./repos/{owner}/{repo}/events.get.parameters[2].name" = "X-GitHub-Media-Type"
"paths./repos/{owner}/{repo}/events.get.parameters[2].type" = "string"
"paths./repos/{owner}/{repo}/events.get.parameters[3].description" = "Is used to set specified media type."
"paths./repos/{owner}/{repo}/events.get.parameters[3].in" = "header"
"paths./repos/{owner}/{repo}/events.get.parameters[3].name" = "Accept"
"paths./repos/{owner}/{repo}/events.get.parameters[3].type" = "string"
"paths./repos/{owner}/{repo}/events.get.parameters[4].in" = "header"
"paths./repos/{owner}/{repo}/events.get.parameters[4].name" = "X-RateLimit-Limit"
"paths./repos/{owner}/{repo}/events.get.parameters[4].type" = "integer"
"paths./repos/{owner}/{repo}/events.get.parameters[5].in" = "header"
"paths./repos/{owner}/{repo}/events.get.parameters[5].name" = "X-RateLimit-Remaining"
"paths./repos/{owner}/{repo}/events.get.parameters[5].type" = "integer"
"paths./repos/{owner}/{repo}/events.get.parameters[6].in" = "header"
"paths./repos/{owner}/{repo}/events.get.parameters[6].name" = "X-RateLimit-Reset"
"paths./repos/{owner}/{repo}/events.get.parameters[6].type" = "integer"
"paths./repos/{owner}/{repo}/events.get.parameters[7].in" = "header"
"paths./repos/{owner}/{repo}/events.get.parameters[7].name" = "X-GitHub-Request-Id"
"paths./repos/{owner}/{repo}/events.get.parameters[7].type" = "integer"
"paths./repos/{owner}/{repo}/events.get.responses.200.description" = "OK"
"paths./repos/{owner}/{repo}/events.get.responses.200.schema.$ref" = "#/definitions/events"
"paths./repos/{owner}/{repo}/events.get.responses.403.description" = "API rate limit exceeded. See http://developer.github.com/v3/#rate-limiting\nfor details.\n"
"paths./repos/{owner}/{repo}/forks.get.description" = "List forks."
"paths./repos/{owner}/{repo}/forks.get.parameters.length" = 9
"paths./repos/{owner}/{repo}/forks.get.parameters[0].description" = "Name of repository owner."
"paths./repos/{owner}/{repo}/forks.get.parameters[0].in" = "path"
"paths./repos/{owner}/{repo}/forks.get.parameters[0].name" = "owner"
"paths./repos/{owner}/{repo}/forks.get.parameters[0].required" = true
"paths./repos/{owner}/{repo}/forks.get.parameters[0].type" = "string"
"paths./repos/{owner}/{repo}/forks.get.parameters[1].description" = "Name of repository."
"paths./repos/{owner}/{repo}/forks.get.parameters[1].in" = "path"
"paths./repos/{owner}/{repo}/forks.get.parameters[1].name" = "repo"
"paths./repos/{owner}/{repo}/forks.get.parameters[1].required" = true
"paths./repos/{owner}/{repo}/forks.get.parameters[1].type" = "string"
"paths./repos/{owner}/{repo}/forks.get.parameters[2].default" = "newes"
"paths./repos/{owner}/{repo}/forks.get.parameters[2].enum.length" = 3
"paths./repos/{owner}/{repo}/forks.get.parameters[2].enum[0]" = "newes"
"paths./repos/{owner}/{repo}/forks.get.parameters[2].enum[1]" = "oldes"
"paths./repos/{owner}/{repo}/forks.get.parameters[2].enum[2]" = "watchers"
"paths./repos/{owner}/{repo}/forks.get.parameters[2].in" = "query"
"paths./repos/{owner}/{repo}/forks.get.parameters[2].name" = "sort"
"paths./repos/{owner}/{repo}/forks.get.parameters[2].type" = "string"
"paths./repos/{owner}/{repo}/forks.get.parameters[3].description" = "You can check the current version of media type in responses.\n"
"paths./repos/{owner}/{repo}/forks.get.parameters[3].in" = "header"
"paths./repos/{owner}/{repo}/forks.get.parameters[3].name" = "X-GitHub-Media-Type"
"paths./repos/{owner}/{repo}/forks.get.parameters[3].type" = "string"
"paths./repos/{owner}/{repo}/forks.get.parameters[4].description" = "Is used to set specified media type."
"paths./repos/{owner}/{repo}/forks.get.parameters[4].in" = "header"
"paths./repos/{owner}/{repo}/forks.get.parameters[4].name" = "Accept"
"paths./repos/{owner}/{repo}/forks.get.parameters[4].type" = "string"
"paths./repos/{owner}/{repo}/forks.get.parameters[5].in" = "header"
"paths./repos/{owner}/{repo}/forks.get.parameters[5].name" = "X-RateLimit-Limit"
"paths./repos/{owner}/{repo}/forks.get.parameters[5].type" = "integer"
"paths./repos/{owner}/{repo}/forks.get.parameters[6].in" = "header"
"paths./repos/{owner}/{repo}/forks.get.parameters[6].name" = "X-RateLimit-Remaining"
"paths./repos/{owner}/{repo}/forks.get.parameters[6].type" = "integer"
"paths./repos/{owner}/{repo}/forks.get.parameters[7].in" = "header"
"paths./repos/{owner}/{repo}/forks.get.parameters[7].name" = "X-RateLimit-Reset"
"paths./repos/{owner}/{repo}/forks.get.parameters[7].type" = "integer"
"paths./repos/{owner}/{repo}/forks.get.parameters[8].in" = "header"
"paths./repos/{owner}/{repo}/forks.get.parameters[8].name" = "X-GitHub-Request-Id"
"paths./repos/{owner}/{repo}/forks.get.parameters[8].type" = "integer"
"paths./repos/{owner}/{repo}/forks.get.responses.200.description" = "OK"
"paths./repos/{owner}/{repo}/forks.get.responses.200.schema.$ref" = "#/definitions/forks"
"paths./repos/{owner}/{repo}/forks.get.responses.403.description" = "API rate limit exceeded. See http://developer.github.com/v3/#rate-limiting\nfor details.\n"
"paths./repos/{owner}/{repo}/forks.post.description" = "Create a fork.\nForking a Repository happens asynchronously. Therefore, you may have to wai\na short period before accessing the git objects. If this takes longer than 5\nminutes, be sure to contact Support.\n"
"paths./repos/{owner}/{repo}/forks.post.parameters.length" = 9
"paths./repos/{owner}/{repo}/forks.post.parameters[0].description" = "Name of repository owner."
"paths./repos/{owner}/{repo}/forks.post.parameters[0].in" = "path"
"paths./repos/{owner}/{repo}/forks.post.parameters[0].name" = "owner"
"paths./repos/{owner}/{repo}/forks.post.parameters[0].required" = true
"paths./repos/{owner}/{repo}/forks.post.parameters[0].type" = "string"
"paths./repos/{owner}/{repo}/forks.post.parameters[1].description" = "Name of repository."
"paths./repos/{owner}/{repo}/forks.post.parameters[1].in" = "path"
"paths./repos/{owner}/{repo}/forks.post.parameters[1].name" = "repo"
"paths./repos/{owner}/{repo}/forks.post.parameters[1].required" = true
"paths./repos/{owner}/{repo}/forks.post.parameters[1].type" = "string"
"paths./repos/{owner}/{repo}/forks.post.parameters[2].description" = "You can check the current version of media type in responses.\n"
"paths./repos/{owner}/{repo}/forks.post.parameters[2].in" = "header"
"paths./repos/{owner}/{repo}/forks.post.parameters[2].name" = "X-GitHub-Media-Type"
"paths./repos/{owner}/{repo}/forks.post.parameters[2].type" = "string"
"paths./repos/{owner}/{repo}/forks.post.parameters[3].description" = "Is used to set specified media type."
"paths./repos/{owner}/{repo}/forks.post.parameters[3].in" = "header"
"paths./repos/{owner}/{repo}/forks.post.parameters[3].name" = "Accept"
"paths./repos/{owner}/{repo}/forks.post.parameters[3].type" = "string"
"paths./repos/{owner}/{repo}/forks.post.parameters[4].in" = "header"
"paths./repos/{owner}/{repo}/forks.post.parameters[4].name" = "X-RateLimit-Limit"
"paths./repos/{owner}/{repo}/forks.post.parameters[4].type" = "integer"
"paths./repos/{owner}/{repo}/forks.post.parameters[5].in" = "header"
"paths./repos/{owner}/{repo}/forks.post.parameters[5].name" = "X-RateLimit-Remaining"
"paths./repos/{owner}/{repo}/forks.post.parameters[5].type" = "integer"
"paths./repos/{owner}/{repo}/forks.post.parameters[6].in" = "header"
"paths./repos/{owner}/{repo}/forks.post.parameters[6].name" = "X-RateLimit-Reset"
"paths./repos/{owner}/{repo}/forks.post.parameters[6].type" = "integer"
"paths./repos/{owner}/{repo}/forks.post.parameters[7].in" = "header"
"paths./repos/{owner}/{repo}/forks.post.parameters[7].name" = "X-GitHub-Request-Id"
"paths./repos/{owner}/{repo}/forks.post.parameters[7].type" = "integer"
"paths./repos/{owner}/{repo}/forks.post.parameters[8].in" = "body"
"paths./repos/{owner}/{repo}/forks.post.parameters[8].name" = "body"
"paths./repos/{owner}/{repo}/forks.post.parameters[8].required" = true
"paths./repos/{owner}/{repo}/forks.post.parameters[8].schema.$ref" = "#/definitions/forkBody"
"paths./repos/{owner}/{repo}/forks.post.responses.201.description" = "Created"
"paths./repos/{owner}/{repo}/forks.post.responses.201.schema.$ref" = "#/definitions/fork"
"paths./repos/{owner}/{repo}/forks.post.responses.403.description" = "API rate limit exceeded. See http://developer.github.com/v3/#rate-limiting\nfor details.\n"
"paths./repos/{owner}/{repo}/git/blobs.post.description" = "Create a Blob."
"paths./repos/{owner}/{repo}/git/blobs.post.parameters.length" = 9
"paths./repos/{owner}/{repo}/git/blobs.post.parameters[0].description" = "Name of repository owner."
"paths./repos/{owner}/{repo}/git/blobs.post.parameters[0].in" = "path"
"paths./repos/{owner}/{repo}/git/blobs.post.parameters[0].name" = "owner"
"paths./repos/{owner}/{repo}/git/blobs.post.parameters[0].required" = true
"paths./repos/{owner}/{repo}/git/blobs.post.parameters[0].type" = "string"
"paths./repos/{owner}/{repo}/git/blobs.post.parameters[1].description" = "Name of repository."
"paths./repos/{owner}/{repo}/git/blobs.post.parameters[1].in" = "path"
"paths./repos/{owner}/{repo}/git/blobs.post.parameters[1].name" = "repo"
"paths./repos/{owner}/{repo}/git/blobs.post.parameters[1].required" = true
"paths./repos/{owner}/{repo}/git/blobs.post.parameters[1].type" = "string"
"paths./repos/{owner}/{repo}/git/blobs.post.parameters[2].description" = "You can check the current version of media type in responses.\n"
"paths./repos/{owner}/{repo}/git/blobs.post.parameters[2].in" = "header"
"paths./repos/{owner}/{repo}/git/blobs.post.parameters[2].name" = "X-GitHub-Media-Type"
"paths./repos/{owner}/{repo}/git/blobs.post.parameters[2].type" = "string"
"paths./repos/{owner}/{repo}/git/blobs.post.parameters[3].description" = "Is used to set specified media type."
"paths./repos/{owner}/{repo}/git/blobs.post.parameters[3].in" = "header"
"paths./repos/{owner}/{repo}/git/blobs.post.parameters[3].name" = "Accept"
"paths./repos/{owner}/{repo}/git/blobs.post.parameters[3].type" = "string"
"paths./repos/{owner}/{repo}/git/blobs.post.parameters[4].in" = "header"
"paths./repos/{owner}/{repo}/git/blobs.post.parameters[4].name" = "X-RateLimit-Limit"
"paths./repos/{owner}/{repo}/git/blobs.post.parameters[4].type" = "integer"
"paths./repos/{owner}/{repo}/git/blobs.post.parameters[5].in" = "header"
"paths./repos/{owner}/{repo}/git/blobs.post.parameters[5].name" = "X-RateLimit-Remaining"
"paths./repos/{owner}/{repo}/git/blobs.post.parameters[5].type" = "integer"
"paths./repos/{owner}/{repo}/git/blobs.post.parameters[6].in" = "header"
"paths./repos/{owner}/{repo}/git/blobs.post.parameters[6].name" = "X-RateLimit-Reset"
"paths./repos/{owner}/{repo}/git/blobs.post.parameters[6].type" = "integer"
"paths./repos/{owner}/{repo}/git/blobs.post.parameters[7].in" = "header"
"paths./repos/{owner}/{repo}/git/blobs.post.parameters[7].name" = "X-GitHub-Request-Id"
"paths./repos/{owner}/{repo}/git/blobs.post.parameters[7].type" = "integer"
"paths./repos/{owner}/{repo}/git/blobs.post.parameters[8].in" = "body"
"paths./repos/{owner}/{repo}/git/blobs.post.parameters[8].name" = "body"
"paths./repos/{owner}/{repo}/git/blobs.post.parameters[8].required" = true
"paths./repos/{owner}/{repo}/git/blobs.post.parameters[8].schema.$ref" = "#/definitions/blob"
"paths./repos/{owner}/{repo}/git/blobs.post.responses.201.description" = "Created"
"paths./repos/{owner}/{repo}/git/blobs.post.responses.201.schema.$ref" = "#/definitions/blobs"
"paths./repos/{owner}/{repo}/git/blobs.post.responses.403.description" = "API rate limit exceeded. See http://developer.github.com/v3/#rate-limiting\nfor details.\n"
"paths./repos/{owner}/{repo}/git/blobs/{shaCode}.get.description" = "Get a Blob.\nSince blobs can be any arbitrary binary data, the input and responses for\nthe blob API takes an encoding parameter that can be either utf-8 or\nbase64. If your data cannot be losslessly sent as a UTF-8 string, you can\nbase64 encode it.\n"
"paths./repos/{owner}/{repo}/git/blobs/{shaCode}.get.parameters.length" = 9
"paths./repos/{owner}/{repo}/git/blobs/{shaCode}.get.parameters[0].description" = "Name of repository owner."
"paths./repos/{owner}/{repo}/git/blobs/{shaCode}.get.parameters[0].in" = "path"
"paths./repos/{owner}/{repo}/git/blobs/{shaCode}.get.parameters[0].name" = "owner"
"paths./repos/{owner}/{repo}/git/blobs/{shaCode}.get.parameters[0].required" = true
"paths./repos/{owner}/{repo}/git/blobs/{shaCode}.get.parameters[0].type" = "string"
"paths./repos/{owner}/{repo}/git/blobs/{shaCode}.get.parameters[1].description" = "Name of repository."
"paths./repos/{owner}/{repo}/git/blobs/{shaCode}.get.parameters[1].in" = "path"
"paths./repos/{owner}/{repo}/git/blobs/{shaCode}.get.parameters[1].name" = "repo"
"paths./repos/{owner}/{repo}/git/blobs/{shaCode}.get.parameters[1].required" = true
"paths./repos/{owner}/{repo}/git/blobs/{shaCode}.get.parameters[1].type" = "string"
"paths./repos/{owner}/{repo}/git/blobs/{shaCode}.get.parameters[2].description" = "SHA-1 code."
"paths./repos/{owner}/{repo}/git/blobs/{shaCode}.get.parameters[2].in" = "path"
"paths./repos/{owner}/{repo}/git/blobs/{shaCode}.get.parameters[2].name" = "shaCode"
"paths./repos/{owner}/{repo}/git/blobs/{shaCode}.get.parameters[2].required" = true
"paths./repos/{owner}/{repo}/git/blobs/{shaCode}.get.parameters[2].type" = "string"
"paths./repos/{owner}/{repo}/git/blobs/{shaCode}.get.parameters[3].description" = "You can check the current version of media type in responses.\n"
"paths./repos/{owner}/{repo}/git/blobs/{shaCode}.get.parameters[3].in" = "header"
"paths./repos/{owner}/{repo}/git/blobs/{shaCode}.get.parameters[3].name" = "X-GitHub-Media-Type"
"paths./repos/{owner}/{repo}/git/blobs/{shaCode}.get.parameters[3].type" = "string"
"paths./repos/{owner}/{repo}/git/blobs/{shaCode}.get.parameters[4].description" = "Is used to set specified media type."
"paths./repos/{owner}/{repo}/git/blobs/{shaCode}.get.parameters[4].in" = "header"
"paths./repos/{owner}/{repo}/git/blobs/{shaCode}.get.parameters[4].name" = "Accept"
"paths./repos/{owner}/{repo}/git/blobs/{shaCode}.get.parameters[4].type" = "string"
"paths./repos/{owner}/{repo}/git/blobs/{shaCode}.get.parameters[5].in" = "header"
"paths./repos/{owner}/{repo}/git/blobs/{shaCode}.get.parameters[5].name" = "X-RateLimit-Limit"
"paths./repos/{owner}/{repo}/git/blobs/{shaCode}.get.parameters[5].type" = "integer"
"paths./repos/{owner}/{repo}/git/blobs/{shaCode}.get.parameters[6].in" = "header"
"paths./repos/{owner}/{repo}/git/blobs/{shaCode}.get.parameters[6].name" = "X-RateLimit-Remaining"
"paths./repos/{owner}/{repo}/git/blobs/{shaCode}.get.parameters[6].type" = "integer"
"paths./repos/{owner}/{repo}/git/blobs/{shaCode}.get.parameters[7].in" = "header"
"paths./repos/{owner}/{repo}/git/blobs/{shaCode}.get.parameters[7].name" = "X-RateLimit-Reset"
"paths./repos/{owner}/{repo}/git/blobs/{shaCode}.get.parameters[7].type" = "integer"
"paths./repos/{owner}/{repo}/git/blobs/{shaCode}.get.parameters[8].in" = "header"
"paths./repos/{owner}/{repo}/git/blobs/{shaCode}.get.parameters[8].name" = "X-GitHub-Request-Id"
"paths./repos/{owner}/{repo}/git/blobs/{shaCode}.get.parameters[8].type" = "integer"
"paths./repos/{owner}/{repo}/git/blobs/{shaCode}.get.responses.200.description" = "OK"
"paths./repos/{owner}/{repo}/git/blobs/{shaCode}.get.responses.200.schema.$ref" = "#/definitions/blob"
"paths./repos/{owner}/{repo}/git/blobs/{shaCode}.get.responses.403.description" = "API rate limit exceeded. See http://developer.github.com/v3/#rate-limiting\nfor details.\n"
"paths./repos/{owner}/{repo}/git/commits.post.description" = "Create a Commit."
"paths./repos/{owner}/{repo}/git/commits.post.parameters.length" = 9
"paths./repos/{owner}/{repo}/git/commits.post.parameters[0].description" = "Name of repository owner."
"paths./repos/{owner}/{repo}/git/commits.post.parameters[0].in" = "path"
"paths./repos/{owner}/{repo}/git/commits.post.parameters[0].name" = "owner"
"paths./repos/{owner}/{repo}/git/commits.post.parameters[0].required" = true
"paths./repos/{owner}/{repo}/git/commits.post.parameters[0].type" = "string"
"paths./repos/{owner}/{repo}/git/commits.post.parameters[1].description" = "Name of repository."
"paths./repos/{owner}/{repo}/git/commits.post.parameters[1].in" = "path"
"paths./repos/{owner}/{repo}/git/commits.post.parameters[1].name" = "repo"
"paths./repos/{owner}/{repo}/git/commits.post.parameters[1].required" = true
"paths./repos/{owner}/{repo}/git/commits.post.parameters[1].type" = "string"
"paths./repos/{owner}/{repo}/git/commits.post.parameters[2].description" = "You can check the current version of media type in responses.\n"
"paths./repos/{owner}/{repo}/git/commits.post.parameters[2].in" = "header"
"paths./repos/{owner}/{repo}/git/commits.post.parameters[2].name" = "X-GitHub-Media-Type"
"paths./repos/{owner}/{repo}/git/commits.post.parameters[2].type" = "string"
"paths./repos/{owner}/{repo}/git/commits.post.parameters[3].description" = "Is used to set specified media type."
"paths./repos/{owner}/{repo}/git/commits.post.parameters[3].in" = "header"
"paths./repos/{owner}/{repo}/git/commits.post.parameters[3].name" = "Accept"
"paths./repos/{owner}/{repo}/git/commits.post.parameters[3].type" = "string"
"paths./repos/{owner}/{repo}/git/commits.post.parameters[4].in" = "header"
"paths./repos/{owner}/{repo}/git/commits.post.parameters[4].name" = "X-RateLimit-Limit"
"paths./repos/{owner}/{repo}/git/commits.post.parameters[4].type" = "integer"
"paths./repos/{owner}/{repo}/git/commits.post.parameters[5].in" = "header"
"paths./repos/{owner}/{repo}/git/commits.post.parameters[5].name" = "X-RateLimit-Remaining"
"paths./repos/{owner}/{repo}/git/commits.post.parameters[5].type" = "integer"
"paths./repos/{owner}/{repo}/git/commits.post.parameters[6].in" = "header"
"paths./repos/{owner}/{repo}/git/commits.post.parameters[6].name" = "X-RateLimit-Reset"
"paths./repos/{owner}/{repo}/git/commits.post.parameters[6].type" = "integer"
"paths./repos/{owner}/{repo}/git/commits.post.parameters[7].in" = "header"
"paths./repos/{owner}/{repo}/git/commits.post.parameters[7].name" = "X-GitHub-Request-Id"
"paths./repos/{owner}/{repo}/git/commits.post.parameters[7].type" = "integer"
"paths./repos/{owner}/{repo}/git/commits.post.parameters[8].in" = "body"
"paths./repos/{owner}/{repo}/git/commits.post.parameters[8].name" = "body"
"paths./repos/{owner}/{repo}/git/commits.post.parameters[8].required" = true
"paths./repos/{owner}/{repo}/git/commits.post.parameters[8].schema.$ref" = "#/definitions/repoCommitBody"
"paths./repos/{owner}/{repo}/git/commits.post.responses.201.description" = "Created"
"paths./repos/{owner}/{repo}/git/commits.post.responses.201.schema.$ref" = "#/definitions/gitCommit"
"paths./repos/{owner}/{repo}/git/commits.post.responses.403.description" = "API rate limit exceeded. See http://developer.github.com/v3/#rate-limiting\nfor details.\n"
"paths./repos/{owner}/{repo}/git/commits/{shaCode}.get.description" = "Get a Commit."
"paths./repos/{owner}/{repo}/git/commits/{shaCode}.get.parameters.length" = 9
"paths./repos/{owner}/{repo}/git/commits/{shaCode}.get.parameters[0].description" = "Name of repository owner."
"paths./repos/{owner}/{repo}/git/commits/{shaCode}.get.parameters[0].in" = "path"
"paths./repos/{owner}/{repo}/git/commits/{shaCode}.get.parameters[0].name" = "owner"
"paths./repos/{owner}/{repo}/git/commits/{shaCode}.get.parameters[0].required" = true
"paths./repos/{owner}/{repo}/git/commits/{shaCode}.get.parameters[0].type" = "string"
"paths./repos/{owner}/{repo}/git/commits/{shaCode}.get.parameters[1].description" = "Name of repository."
"paths./repos/{owner}/{repo}/git/commits/{shaCode}.get.parameters[1].in" = "path"
"paths./repos/{owner}/{repo}/git/commits/{shaCode}.get.parameters[1].name" = "repo"
"paths./repos/{owner}/{repo}/git/commits/{shaCode}.get.parameters[1].required" = true
"paths./repos/{owner}/{repo}/git/commits/{shaCode}.get.parameters[1].type" = "string"
"paths./repos/{owner}/{repo}/git/commits/{shaCode}.get.parameters[2].description" = "SHA-1 code."
"paths./repos/{owner}/{repo}/git/commits/{shaCode}.get.parameters[2].in" = "path"
"paths./repos/{owner}/{repo}/git/commits/{shaCode}.get.parameters[2].name" = "shaCode"
"paths./repos/{owner}/{repo}/git/commits/{shaCode}.get.parameters[2].required" = true
"paths./repos/{owner}/{repo}/git/commits/{shaCode}.get.parameters[2].type" = "string"
"paths./repos/{owner}/{repo}/git/commits/{shaCode}.get.parameters[3].description" = "You can check the current version of media type in responses.\n"
"paths./repos/{owner}/{repo}/git/commits/{shaCode}.get.parameters[3].in" = "header"
"paths./repos/{owner}/{repo}/git/commits/{shaCode}.get.parameters[3].name" = "X-GitHub-Media-Type"
"paths./repos/{owner}/{repo}/git/commits/{shaCode}.get.parameters[3].type" = "string"
"paths./repos/{owner}/{repo}/git/commits/{shaCode}.get.parameters[4].description" = "Is used to set specified media type."
"paths./repos/{owner}/{repo}/git/commits/{shaCode}.get.parameters[4].in" = "header"
"paths./repos/{owner}/{repo}/git/commits/{shaCode}.get.parameters[4].name" = "Accept"
"paths./repos/{owner}/{repo}/git/commits/{shaCode}.get.parameters[4].type" = "string"
"paths./repos/{owner}/{repo}/git/commits/{shaCode}.get.parameters[5].in" = "header"
"paths./repos/{owner}/{repo}/git/commits/{shaCode}.get.parameters[5].name" = "X-RateLimit-Limit"
"paths./repos/{owner}/{repo}/git/commits/{shaCode}.get.parameters[5].type" = "integer"
"paths./repos/{owner}/{repo}/git/commits/{shaCode}.get.parameters[6].in" = "header"
"paths./repos/{owner}/{repo}/git/commits/{shaCode}.get.parameters[6].name" = "X-RateLimit-Remaining"
"paths./repos/{owner}/{repo}/git/commits/{shaCode}.get.parameters[6].type" = "integer"
"paths./repos/{owner}/{repo}/git/commits/{shaCode}.get.parameters[7].in" = "header"
"paths./repos/{owner}/{repo}/git/commits/{shaCode}.get.parameters[7].name" = "X-RateLimit-Reset"
"paths./repos/{owner}/{repo}/git/commits/{shaCode}.get.parameters[7].type" = "integer"
"paths./repos/{owner}/{repo}/git/commits/{shaCode}.get.parameters[8].in" = "header"
"paths./repos/{owner}/{repo}/git/commits/{shaCode}.get.parameters[8].name" = "X-GitHub-Request-Id"
"paths./repos/{owner}/{repo}/git/commits/{shaCode}.get.parameters[8].type" = "integer"
"paths./repos/{owner}/{repo}/git/commits/{shaCode}.get.responses.200.description" = "OK"
"paths./repos/{owner}/{repo}/git/commits/{shaCode}.get.responses.200.schema.$ref" = "#/definitions/repoCommit"
"paths./repos/{owner}/{repo}/git/commits/{shaCode}.get.responses.403.description" = "API rate limit exceeded. See http://developer.github.com/v3/#rate-limiting\nfor details.\n"
"paths./repos/{owner}/{repo}/git/refs.get.description" = "Get all References"
"paths./repos/{owner}/{repo}/git/refs.get.parameters.length" = 8
"paths./repos/{owner}/{repo}/git/refs.get.parameters[0].description" = "Name of repository owner."
"paths./repos/{owner}/{repo}/git/refs.get.parameters[0].in" = "path"
"paths./repos/{owner}/{repo}/git/refs.get.parameters[0].name" = "owner"
"paths./repos/{owner}/{repo}/git/refs.get.parameters[0].required" = true
"paths./repos/{owner}/{repo}/git/refs.get.parameters[0].type" = "string"
"paths./repos/{owner}/{repo}/git/refs.get.parameters[1].description" = "Name of repository."
"paths./repos/{owner}/{repo}/git/refs.get.parameters[1].in" = "path"
"paths./repos/{owner}/{repo}/git/refs.get.parameters[1].name" = "repo"
"paths./repos/{owner}/{repo}/git/refs.get.parameters[1].required" = true
"paths./repos/{owner}/{repo}/git/refs.get.parameters[1].type" = "string"
"paths./repos/{owner}/{repo}/git/refs.get.parameters[2].description" = "You can check the current version of media type in responses.\n"
"paths./repos/{owner}/{repo}/git/refs.get.parameters[2].in" = "header"
"paths./repos/{owner}/{repo}/git/refs.get.parameters[2].name" = "X-GitHub-Media-Type"
"paths./repos/{owner}/{repo}/git/refs.get.parameters[2].type" = "string"
"paths./repos/{owner}/{repo}/git/refs.get.parameters[3].description" = "Is used to set specified media type."
"paths./repos/{owner}/{repo}/git/refs.get.parameters[3].in" = "header"
"paths./repos/{owner}/{repo}/git/refs.get.parameters[3].name" = "Accept"
"paths./repos/{owner}/{repo}/git/refs.get.parameters[3].type" = "string"
"paths./repos/{owner}/{repo}/git/refs.get.parameters[4].in" = "header"
"paths./repos/{owner}/{repo}/git/refs.get.parameters[4].name" = "X-RateLimit-Limit"
"paths./repos/{owner}/{repo}/git/refs.get.parameters[4].type" = "integer"
"paths./repos/{owner}/{repo}/git/refs.get.parameters[5].in" = "header"
"paths./repos/{owner}/{repo}/git/refs.get.parameters[5].name" = "X-RateLimit-Remaining"
"paths./repos/{owner}/{repo}/git/refs.get.parameters[5].type" = "integer"
"paths./repos/{owner}/{repo}/git/refs.get.parameters[6].in" = "header"
"paths./repos/{owner}/{repo}/git/refs.get.parameters[6].name" = "X-RateLimit-Reset"
"paths./repos/{owner}/{repo}/git/refs.get.parameters[6].type" = "integer"
"paths./repos/{owner}/{repo}/git/refs.get.parameters[7].in" = "header"
"paths./repos/{owner}/{repo}/git/refs.get.parameters[7].name" = "X-GitHub-Request-Id"
"paths./repos/{owner}/{repo}/git/refs.get.parameters[7].type" = "integer"
"paths./repos/{owner}/{repo}/git/refs.get.responses.200.description" = "OK"
"paths./repos/{owner}/{repo}/git/refs.get.responses.200.schema.$ref" = "#/definitions/refs"
"paths./repos/{owner}/{repo}/git/refs.get.responses.403.description" = "API rate limit exceeded. See http://developer.github.com/v3/#rate-limiting\nfor details.\n"
"paths./repos/{owner}/{repo}/git/refs.post.description" = "Create a Reference"
"paths./repos/{owner}/{repo}/git/refs.post.parameters.length" = 9
"paths./repos/{owner}/{repo}/git/refs.post.parameters[0].description" = "Name of repository owner."
"paths./repos/{owner}/{repo}/git/refs.post.parameters[0].in" = "path"
"paths./repos/{owner}/{repo}/git/refs.post.parameters[0].name" = "owner"
"paths./repos/{owner}/{repo}/git/refs.post.parameters[0].required" = true
"paths./repos/{owner}/{repo}/git/refs.post.parameters[0].type" = "string"
"paths./repos/{owner}/{repo}/git/refs.post.parameters[1].description" = "Name of repository."
"paths./repos/{owner}/{repo}/git/refs.post.parameters[1].in" = "path"
"paths./repos/{owner}/{repo}/git/refs.post.parameters[1].name" = "repo"
"paths./repos/{owner}/{repo}/git/refs.post.parameters[1].required" = true
"paths./repos/{owner}/{repo}/git/refs.post.parameters[1].type" = "string"
"paths./repos/{owner}/{repo}/git/refs.post.parameters[2].description" = "You can check the current version of media type in responses.\n"
"paths./repos/{owner}/{repo}/git/refs.post.parameters[2].in" = "header"
"paths./repos/{owner}/{repo}/git/refs.post.parameters[2].name" = "X-GitHub-Media-Type"
"paths./repos/{owner}/{repo}/git/refs.post.parameters[2].type" = "string"
"paths./repos/{owner}/{repo}/git/refs.post.parameters[3].description" = "Is used to set specified media type."
"paths./repos/{owner}/{repo}/git/refs.post.parameters[3].in" = "header"
"paths./repos/{owner}/{repo}/git/refs.post.parameters[3].name" = "Accept"
"paths./repos/{owner}/{repo}/git/refs.post.parameters[3].type" = "string"
"paths./repos/{owner}/{repo}/git/refs.post.parameters[4].in" = "header"
"paths./repos/{owner}/{repo}/git/refs.post.parameters[4].name" = "X-RateLimit-Limit"
"paths./repos/{owner}/{repo}/git/refs.post.parameters[4].type" = "integer"
"paths./repos/{owner}/{repo}/git/refs.post.parameters[5].in" = "header"
"paths./repos/{owner}/{repo}/git/refs.post.parameters[5].name" = "X-RateLimit-Remaining"
"paths./repos/{owner}/{repo}/git/refs.post.parameters[5].type" = "integer"
"paths./repos/{owner}/{repo}/git/refs.post.parameters[6].in" = "header"
"paths./repos/{owner}/{repo}/git/refs.post.parameters[6].name" = "X-RateLimit-Reset"
"paths./repos/{owner}/{repo}/git/refs.post.parameters[6].type" = "integer"
"paths./repos/{owner}/{repo}/git/refs.post.parameters[7].in" = "header"
"paths./repos/{owner}/{repo}/git/refs.post.parameters[7].name" = "X-GitHub-Request-Id"
"paths./repos/{owner}/{repo}/git/refs.post.parameters[7].type" = "integer"
"paths./repos/{owner}/{repo}/git/refs.post.parameters[8].in" = "body"
"paths./repos/{owner}/{repo}/git/refs.post.parameters[8].name" = "body"
"paths./repos/{owner}/{repo}/git/refs.post.parameters[8].required" = true
"paths./repos/{owner}/{repo}/git/refs.post.parameters[8].schema.$ref" = "#/definitions/refsBody"
"paths./repos/{owner}/{repo}/git/refs.post.responses.201.description" = "Created"
"paths./repos/{owner}/{repo}/git/refs.post.responses.201.schema.$ref" = "#/definitions/headBranch"
"paths./repos/{owner}/{repo}/git/refs.post.responses.403.description" = "API rate limit exceeded. See http://developer.github.com/v3/#rate-limiting\nfor details.\n"
"paths./repos/{owner}/{repo}/git/refs/{ref}.delete.description" = "Delete a Reference\nExample: Deleting a branch: DELETE /repos/octocat/Hello-World/git/refs/heads/feature-a \nExample: Deleting a tag:        DELETE /repos/octocat/Hello-World/git/refs/tags/v1.0\n"
"paths./repos/{owner}/{repo}/git/refs/{ref}.delete.parameters.length" = 9
"paths./repos/{owner}/{repo}/git/refs/{ref}.delete.parameters[0].description" = "Name of repository owner."
"paths./repos/{owner}/{repo}/git/refs/{ref}.delete.parameters[0].in" = "path"
"paths./repos/{owner}/{repo}/git/refs/{ref}.delete.parameters[0].name" = "owner"
"paths./repos/{owner}/{repo}/git/refs/{ref}.delete.parameters[0].required" = true
"paths./repos/{owner}/{repo}/git/refs/{ref}.delete.parameters[0].type" = "string"
"paths./repos/{owner}/{repo}/git/refs/{ref}.delete.parameters[1].description" = "Name of repository."
"paths./repos/{owner}/{repo}/git/refs/{ref}.delete.parameters[1].in" = "path"
"paths./repos/{owner}/{repo}/git/refs/{ref}.delete.parameters[1].name" = "repo"
"paths./repos/{owner}/{repo}/git/refs/{ref}.delete.parameters[1].required" = true
"paths./repos/{owner}/{repo}/git/refs/{ref}.delete.parameters[1].type" = "string"
"paths./repos/{owner}/{repo}/git/refs/{ref}.delete.parameters[2].in" = "path"
"paths./repos/{owner}/{repo}/git/refs/{ref}.delete.parameters[2].name" = "ref"
"paths./repos/{owner}/{repo}/git/refs/{ref}.delete.parameters[2].required" = true
"paths./repos/{owner}/{repo}/git/refs/{ref}.delete.parameters[2].type" = "string"
"paths./repos/{owner}/{repo}/git/refs/{ref}.delete.parameters[3].description" = "You can check the current version of media type in responses.\n"
"paths./repos/{owner}/{repo}/git/refs/{ref}.delete.parameters[3].in" = "header"
"paths./repos/{owner}/{repo}/git/refs/{ref}.delete.parameters[3].name" = "X-GitHub-Media-Type"
"paths./repos/{owner}/{repo}/git/refs/{ref}.delete.parameters[3].type" = "string"
"paths./repos/{owner}/{repo}/git/refs/{ref}.delete.parameters[4].description" = "Is used to set specified media type."
"paths./repos/{owner}/{repo}/git/refs/{ref}.delete.parameters[4].in" = "header"
"paths./repos/{owner}/{repo}/git/refs/{ref}.delete.parameters[4].name" = "Accept"
"paths./repos/{owner}/{repo}/git/refs/{ref}.delete.parameters[4].type" = "string"
"paths./repos/{owner}/{repo}/git/refs/{ref}.delete.parameters[5].in" = "header"
"paths./repos/{owner}/{repo}/git/refs/{ref}.delete.parameters[5].name" = "X-RateLimit-Limit"
"paths./repos/{owner}/{repo}/git/refs/{ref}.delete.parameters[5].type" = "integer"
"paths./repos/{owner}/{repo}/git/refs/{ref}.delete.parameters[6].in" = "header"
"paths./repos/{owner}/{repo}/git/refs/{ref}.delete.parameters[6].name" = "X-RateLimit-Remaining"
"paths./repos/{owner}/{repo}/git/refs/{ref}.delete.parameters[6].type" = "integer"
"paths./repos/{owner}/{repo}/git/refs/{ref}.delete.parameters[7].in" = "header"
"paths./repos/{owner}/{repo}/git/refs/{ref}.delete.parameters[7].name" = "X-RateLimit-Reset"
"paths./repos/{owner}/{repo}/git/refs/{ref}.delete.parameters[7].type" = "integer"
"paths./repos/{owner}/{repo}/git/refs/{ref}.delete.parameters[8].in" = "header"
"paths./repos/{owner}/{repo}/git/refs/{ref}.delete.parameters[8].name" = "X-GitHub-Request-Id"
"paths./repos/{owner}/{repo}/git/refs/{ref}.delete.parameters[8].type" = "integer"
"paths./repos/{owner}/{repo}/git/refs/{ref}.delete.responses.204.description" = "No Content"
"paths./repos/{owner}/{repo}/git/refs/{ref}.delete.responses.403.description" = "API rate limit exceeded. See http://developer.github.com/v3/#rate-limiting\nfor details.\n"
"paths./repos/{owner}/{repo}/git/refs/{ref}.get.description" = "Get a Reference"
"paths./repos/{owner}/{repo}/git/refs/{ref}.get.parameters.length" = 9
"paths./repos/{owner}/{repo}/git/refs/{ref}.get.parameters[0].description" = "Name of repository owner."
"paths./repos/{owner}/{repo}/git/refs/{ref}.get.parameters[0].in" = "path"
"paths./repos/{owner}/{repo}/git/refs/{ref}.get.parameters[0].name" = "owner"
"paths./repos/{owner}/{repo}/git/refs/{ref}.get.parameters[0].required" = true
"paths./repos/{owner}/{repo}/git/refs/{ref}.get.parameters[0].type" = "string"
"paths./repos/{owner}/{repo}/git/refs/{ref}.get.parameters[1].description" = "Name of repository."
"paths./repos/{owner}/{repo}/git/refs/{ref}.get.parameters[1].in" = "path"
"paths./repos/{owner}/{repo}/git/refs/{ref}.get.parameters[1].name" = "repo"
"paths./repos/{owner}/{repo}/git/refs/{ref}.get.parameters[1].required" = true
"paths./repos/{owner}/{repo}/git/refs/{ref}.get.parameters[1].type" = "string"
"paths./repos/{owner}/{repo}/git/refs/{ref}.get.parameters[2].in" = "path"
"paths./repos/{owner}/{repo}/git/refs/{ref}.get.parameters[2].name" = "ref"
"paths./repos/{owner}/{repo}/git/refs/{ref}.get.parameters[2].required" = true
"paths./repos/{owner}/{repo}/git/refs/{ref}.get.parameters[2].type" = "string"
"paths./repos/{owner}/{repo}/git/refs/{ref}.get.parameters[3].description" = "You can check the current version of media type in responses.\n"
"paths./repos/{owner}/{repo}/git/refs/{ref}.get.parameters[3].in" = "header"
"paths./repos/{owner}/{repo}/git/refs/{ref}.get.parameters[3].name" = "X-GitHub-Media-Type"
"paths./repos/{owner}/{repo}/git/refs/{ref}.get.parameters[3].type" = "string"
"paths./repos/{owner}/{repo}/git/refs/{ref}.get.parameters[4].description" = "Is used to set specified media type."
"paths./repos/{owner}/{repo}/git/refs/{ref}.get.parameters[4].in" = "header"
"paths./repos/{owner}/{repo}/git/refs/{ref}.get.parameters[4].name" = "Accept"
"paths./repos/{owner}/{repo}/git/refs/{ref}.get.parameters[4].type" = "string"
"paths./repos/{owner}/{repo}/git/refs/{ref}.get.parameters[5].in" = "header"
"paths./repos/{owner}/{repo}/git/refs/{ref}.get.parameters[5].name" = "X-RateLimit-Limit"
"paths./repos/{owner}/{repo}/git/refs/{ref}.get.parameters[5].type" = "integer"
"paths./repos/{owner}/{repo}/git/refs/{ref}.get.parameters[6].in" = "header"
"paths./repos/{owner}/{repo}/git/refs/{ref}.get.parameters[6].name" = "X-RateLimit-Remaining"
"paths./repos/{owner}/{repo}/git/refs/{ref}.get.parameters[6].type" = "integer"
"paths./repos/{owner}/{repo}/git/refs/{ref}.get.parameters[7].in" = "header"
"paths./repos/{owner}/{repo}/git/refs/{ref}.get.parameters[7].name" = "X-RateLimit-Reset"
"paths./repos/{owner}/{repo}/git/refs/{ref}.get.parameters[7].type" = "integer"
"paths./repos/{owner}/{repo}/git/refs/{ref}.get.parameters[8].in" = "header"
"paths./repos/{owner}/{repo}/git/refs/{ref}.get.parameters[8].name" = "X-GitHub-Request-Id"
"paths./repos/{owner}/{repo}/git/refs/{ref}.get.parameters[8].type" = "integer"
"paths./repos/{owner}/{repo}/git/refs/{ref}.get.responses.200.description" = "OK"
"paths./repos/{owner}/{repo}/git/refs/{ref}.get.responses.200.schema.$ref" = "#/definitions/headBranch"
"paths./repos/{owner}/{repo}/git/refs/{ref}.get.responses.403.description" = "API rate limit exceeded. See http://developer.github.com/v3/#rate-limiting\nfor details.\n"
"paths./repos/{owner}/{repo}/git/refs/{ref}.patch.description" = "Update a Reference"
"paths./repos/{owner}/{repo}/git/refs/{ref}.patch.parameters.length" = 10
"paths./repos/{owner}/{repo}/git/refs/{ref}.patch.parameters[0].description" = "Name of repository owner."
"paths./repos/{owner}/{repo}/git/refs/{ref}.patch.parameters[0].in" = "path"
"paths./repos/{owner}/{repo}/git/refs/{ref}.patch.parameters[0].name" = "owner"
"paths./repos/{owner}/{repo}/git/refs/{ref}.patch.parameters[0].required" = true
"paths./repos/{owner}/{repo}/git/refs/{ref}.patch.parameters[0].type" = "string"
"paths./repos/{owner}/{repo}/git/refs/{ref}.patch.parameters[1].description" = "Name of repository."
"paths./repos/{owner}/{repo}/git/refs/{ref}.patch.parameters[1].in" = "path"
"paths./repos/{owner}/{repo}/git/refs/{ref}.patch.parameters[1].name" = "repo"
"paths./repos/{owner}/{repo}/git/refs/{ref}.patch.parameters[1].required" = true
"paths./repos/{owner}/{repo}/git/refs/{ref}.patch.parameters[1].type" = "string"
"paths./repos/{owner}/{repo}/git/refs/{ref}.patch.parameters[2].in" = "path"
"paths./repos/{owner}/{repo}/git/refs/{ref}.patch.parameters[2].name" = "ref"
"paths./repos/{owner}/{repo}/git/refs/{ref}.patch.parameters[2].required" = true
"paths./repos/{owner}/{repo}/git/refs/{ref}.patch.parameters[2].type" = "string"
"paths./repos/{owner}/{repo}/git/refs/{ref}.patch.parameters[3].description" = "You can check the current version of media type in responses.\n"
"paths./repos/{owner}/{repo}/git/refs/{ref}.patch.parameters[3].in" = "header"
"paths./repos/{owner}/{repo}/git/refs/{ref}.patch.parameters[3].name" = "X-GitHub-Media-Type"
"paths./repos/{owner}/{repo}/git/refs/{ref}.patch.parameters[3].type" = "string"
"paths./repos/{owner}/{repo}/git/refs/{ref}.patch.parameters[4].description" = "Is used to set specified media type."
"paths./repos/{owner}/{repo}/git/refs/{ref}.patch.parameters[4].in" = "header"
"paths./repos/{owner}/{repo}/git/refs/{ref}.patch.parameters[4].name" = "Accept"
"paths./repos/{owner}/{repo}/git/refs/{ref}.patch.parameters[4].type" = "string"
"paths./repos/{owner}/{repo}/git/refs/{ref}.patch.parameters[5].in" = "header"
"paths./repos/{owner}/{repo}/git/refs/{ref}.patch.parameters[5].name" = "X-RateLimit-Limit"
"paths./repos/{owner}/{repo}/git/refs/{ref}.patch.parameters[5].type" = "integer"
"paths./repos/{owner}/{repo}/git/refs/{ref}.patch.parameters[6].in" = "header"
"paths./repos/{owner}/{repo}/git/refs/{ref}.patch.parameters[6].name" = "X-RateLimit-Remaining"
"paths./repos/{owner}/{repo}/git/refs/{ref}.patch.parameters[6].type" = "integer"
"paths./repos/{owner}/{repo}/git/refs/{ref}.patch.parameters[7].in" = "header"
"paths./repos/{owner}/{repo}/git/refs/{ref}.patch.parameters[7].name" = "X-RateLimit-Reset"
"paths./repos/{owner}/{repo}/git/refs/{ref}.patch.parameters[7].type" = "integer"
"paths./repos/{owner}/{repo}/git/refs/{ref}.patch.parameters[8].in" = "header"
"paths./repos/{owner}/{repo}/git/refs/{ref}.patch.parameters[8].name" = "X-GitHub-Request-Id"
"paths./repos/{owner}/{repo}/git/refs/{ref}.patch.parameters[8].type" = "integer"
"paths./repos/{owner}/{repo}/git/refs/{ref}.patch.parameters[9].in" = "body"
"paths./repos/{owner}/{repo}/git/refs/{ref}.patch.parameters[9].name" = "body"
"paths./repos/{owner}/{repo}/git/refs/{ref}.patch.parameters[9].required" = true
"paths./repos/{owner}/{repo}/git/refs/{ref}.patch.parameters[9].schema.$ref" = "#/definitions/gitRefPatch"
"paths./repos/{owner}/{repo}/git/refs/{ref}.patch.responses.200.description" = "OK"
"paths./repos/{owner}/{repo}/git/refs/{ref}.patch.responses.200.schema.$ref" = "#/definitions/headBranch"
"paths./repos/{owner}/{repo}/git/refs/{ref}.patch.responses.403.description" = "API rate limit exceeded. See http://developer.github.com/v3/#rate-limiting\nfor details.\n"
"paths./repos/{owner}/{repo}/git/tags.post.description" = "Create a Tag Object.\nNote that creating a tag object does not create the reference that makes a\ntag in Git. If you want to create an annotated tag in Git, you have to do\nthis call to create the tag object, and then create the refs/tags/[tag]\nreference. If you want to create a lightweight tag, you only have to create\nthe tag reference - this call would be unnecessary.\n"
"paths./repos/{owner}/{repo}/git/tags.post.parameters.length" = 9
"paths./repos/{owner}/{repo}/git/tags.post.parameters[0].description" = "Name of repository owner."
"paths./repos/{owner}/{repo}/git/tags.post.parameters[0].in" = "path"
"paths./repos/{owner}/{repo}/git/tags.post.parameters[0].name" = "owner"
"paths./repos/{owner}/{repo}/git/tags.post.parameters[0].required" = true
"paths./repos/{owner}/{repo}/git/tags.post.parameters[0].type" = "string"
"paths./repos/{owner}/{repo}/git/tags.post.parameters[1].description" = "Name of repository."
"paths./repos/{owner}/{repo}/git/tags.post.parameters[1].in" = "path"
"paths./repos/{owner}/{repo}/git/tags.post.parameters[1].name" = "repo"
"paths./repos/{owner}/{repo}/git/tags.post.parameters[1].required" = true
"paths./repos/{owner}/{repo}/git/tags.post.parameters[1].type" = "string"
"paths./repos/{owner}/{repo}/git/tags.post.parameters[2].description" = "You can check the current version of media type in responses.\n"
"paths./repos/{owner}/{repo}/git/tags.post.parameters[2].in" = "header"
"paths./repos/{owner}/{repo}/git/tags.post.parameters[2].name" = "X-GitHub-Media-Type"
"paths./repos/{owner}/{repo}/git/tags.post.parameters[2].type" = "string"
"paths./repos/{owner}/{repo}/git/tags.post.parameters[3].description" = "Is used to set specified media type."
"paths./repos/{owner}/{repo}/git/tags.post.parameters[3].in" = "header"
"paths./repos/{owner}/{repo}/git/tags.post.parameters[3].name" = "Accept"
"paths./repos/{owner}/{repo}/git/tags.post.parameters[3].type" = "string"
"paths./repos/{owner}/{repo}/git/tags.post.parameters[4].in" = "header"
"paths./repos/{owner}/{repo}/git/tags.post.parameters[4].name" = "X-RateLimit-Limit"
"paths./repos/{owner}/{repo}/git/tags.post.parameters[4].type" = "integer"
"paths./repos/{owner}/{repo}/git/tags.post.parameters[5].in" = "header"
"paths./repos/{owner}/{repo}/git/tags.post.parameters[5].name" = "X-RateLimit-Remaining"
"paths./repos/{owner}/{repo}/git/tags.post.parameters[5].type" = "integer"
"paths./repos/{owner}/{repo}/git/tags.post.parameters[6].in" = "header"
"paths./repos/{owner}/{repo}/git/tags.post.parameters[6].name" = "X-RateLimit-Reset"
"paths./repos/{owner}/{repo}/git/tags.post.parameters[6].type" = "integer"
"paths./repos/{owner}/{repo}/git/tags.post.parameters[7].in" = "header"
"paths./repos/{owner}/{repo}/git/tags.post.parameters[7].name" = "X-GitHub-Request-Id"
"paths./repos/{owner}/{repo}/git/tags.post.parameters[7].type" = "integer"
"paths./repos/{owner}/{repo}/git/tags.post.parameters[8].in" = "body"
"paths./repos/{owner}/{repo}/git/tags.post.parameters[8].name" = "body"
"paths./repos/{owner}/{repo}/git/tags.post.parameters[8].required" = true
"paths./repos/{owner}/{repo}/git/tags.post.parameters[8].schema.$ref" = "#/definitions/tag"
"paths./repos/{owner}/{repo}/git/tags.post.responses.201.description" = "Created"
"paths./repos/{owner}/{repo}/git/tags.post.responses.201.schema.$ref" = "#/definitions/tags"
"paths./repos/{owner}/{repo}/git/tags.post.responses.403.description" = "API rate limit exceeded. See http://developer.github.com/v3/#rate-limiting\nfor details.\n"
"paths./repos/{owner}/{repo}/git/tags/{shaCode}.get.description" = "Get a Tag."
"paths./repos/{owner}/{repo}/git/tags/{shaCode}.get.parameters.length" = 9
"paths./repos/{owner}/{repo}/git/tags/{shaCode}.get.parameters[0].description" = "Name of repository owner."
"paths./repos/{owner}/{repo}/git/tags/{shaCode}.get.parameters[0].in" = "path"
"paths./repos/{owner}/{repo}/git/tags/{shaCode}.get.parameters[0].name" = "owner"
"paths./repos/{owner}/{repo}/git/tags/{shaCode}.get.parameters[0].required" = true
"paths./repos/{owner}/{repo}/git/tags/{shaCode}.get.parameters[0].type" = "string"
"paths./repos/{owner}/{repo}/git/tags/{shaCode}.get.parameters[1].description" = "Name of repository."
"paths./repos/{owner}/{repo}/git/tags/{shaCode}.get.parameters[1].in" = "path"
"paths./repos/{owner}/{repo}/git/tags/{shaCode}.get.parameters[1].name" = "repo"
"paths./repos/{owner}/{repo}/git/tags/{shaCode}.get.parameters[1].required" = true
"paths./repos/{owner}/{repo}/git/tags/{shaCode}.get.parameters[1].type" = "string"
"paths./repos/{owner}/{repo}/git/tags/{shaCode}.get.parameters[2].in" = "path"
"paths./repos/{owner}/{repo}/git/tags/{shaCode}.get.parameters[2].name" = "shaCode"
"paths./repos/{owner}/{repo}/git/tags/{shaCode}.get.parameters[2].required" = true
"paths./repos/{owner}/{repo}/git/tags/{shaCode}.get.parameters[2].type" = "string"
"paths./repos/{owner}/{repo}/git/tags/{shaCode}.get.parameters[3].description" = "You can check the current version of media type in responses.\n"
"paths./repos/{owner}/{repo}/git/tags/{shaCode}.get.parameters[3].in" = "header"
"paths./repos/{owner}/{repo}/git/tags/{shaCode}.get.parameters[3].name" = "X-GitHub-Media-Type"
"paths./repos/{owner}/{repo}/git/tags/{shaCode}.get.parameters[3].type" = "string"
"paths./repos/{owner}/{repo}/git/tags/{shaCode}.get.parameters[4].description" = "Is used to set specified media type."
"paths./repos/{owner}/{repo}/git/tags/{shaCode}.get.parameters[4].in" = "header"
"paths./repos/{owner}/{repo}/git/tags/{shaCode}.get.parameters[4].name" = "Accept"
"paths./repos/{owner}/{repo}/git/tags/{shaCode}.get.parameters[4].type" = "string"
"paths./repos/{owner}/{repo}/git/tags/{shaCode}.get.parameters[5].in" = "header"
"paths./repos/{owner}/{repo}/git/tags/{shaCode}.get.parameters[5].name" = "X-RateLimit-Limit"
"paths./repos/{owner}/{repo}/git/tags/{shaCode}.get.parameters[5].type" = "integer"
"paths./repos/{owner}/{repo}/git/tags/{shaCode}.get.parameters[6].in" = "header"
"paths./repos/{owner}/{repo}/git/tags/{shaCode}.get.parameters[6].name" = "X-RateLimit-Remaining"
"paths./repos/{owner}/{repo}/git/tags/{shaCode}.get.parameters[6].type" = "integer"
"paths./repos/{owner}/{repo}/git/tags/{shaCode}.get.parameters[7].in" = "header"
"paths./repos/{owner}/{repo}/git/tags/{shaCode}.get.parameters[7].name" = "X-RateLimit-Reset"
"paths./repos/{owner}/{repo}/git/tags/{shaCode}.get.parameters[7].type" = "integer"
"paths./repos/{owner}/{repo}/git/tags/{shaCode}.get.parameters[8].in" = "header"
"paths./repos/{owner}/{repo}/git/tags/{shaCode}.get.parameters[8].name" = "X-GitHub-Request-Id"
"paths./repos/{owner}/{repo}/git/tags/{shaCode}.get.parameters[8].type" = "integer"
"paths./repos/{owner}/{repo}/git/tags/{shaCode}.get.responses.200.description" = "OK"
"paths./repos/{owner}/{repo}/git/tags/{shaCode}.get.responses.200.schema.$ref" = "#/definitions/tag"
"paths./repos/{owner}/{repo}/git/tags/{shaCode}.get.responses.403.description" = "API rate limit exceeded. See http://developer.github.com/v3/#rate-limiting\nfor details.\n"
"paths./repos/{owner}/{repo}/git/trees.post.description" = "Create a Tree.\nThe tree creation API will take nested entries as well. If both a tree and\na nested path modifying that tree are specified, it will overwrite the\ncontents of that tree with the new path contents and write a new tree out.\n"
"paths./repos/{owner}/{repo}/git/trees.post.parameters.length" = 9
"paths./repos/{owner}/{repo}/git/trees.post.parameters[0].description" = "Name of repository owner."
"paths./repos/{owner}/{repo}/git/trees.post.parameters[0].in" = "path"
"paths./repos/{owner}/{repo}/git/trees.post.parameters[0].name" = "owner"
"paths./repos/{owner}/{repo}/git/trees.post.parameters[0].required" = true
"paths./repos/{owner}/{repo}/git/trees.post.parameters[0].type" = "string"
"paths./repos/{owner}/{repo}/git/trees.post.parameters[1].description" = "Name of repository."
"paths./repos/{owner}/{repo}/git/trees.post.parameters[1].in" = "path"
"paths./repos/{owner}/{repo}/git/trees.post.parameters[1].name" = "repo"
"paths./repos/{owner}/{repo}/git/trees.post.parameters[1].required" = true
"paths./repos/{owner}/{repo}/git/trees.post.parameters[1].type" = "string"
"paths./repos/{owner}/{repo}/git/trees.post.parameters[2].description" = "You can check the current version of media type in responses.\n"
"paths./repos/{owner}/{repo}/git/trees.post.parameters[2].in" = "header"
"paths./repos/{owner}/{repo}/git/trees.post.parameters[2].name" = "X-GitHub-Media-Type"
"paths./repos/{owner}/{repo}/git/trees.post.parameters[2].type" = "string"
"paths./repos/{owner}/{repo}/git/trees.post.parameters[3].description" = "Is used to set specified media type."
"paths./repos/{owner}/{repo}/git/trees.post.parameters[3].in" = "header"
"paths./repos/{owner}/{repo}/git/trees.post.parameters[3].name" = "Accept"
"paths./repos/{owner}/{repo}/git/trees.post.parameters[3].type" = "string"
"paths./repos/{owner}/{repo}/git/trees.post.parameters[4].in" = "header"
"paths./repos/{owner}/{repo}/git/trees.post.parameters[4].name" = "X-RateLimit-Limit"
"paths./repos/{owner}/{repo}/git/trees.post.parameters[4].type" = "integer"
"paths./repos/{owner}/{repo}/git/trees.post.parameters[5].in" = "header"
"paths./repos/{owner}/{repo}/git/trees.post.parameters[5].name" = "X-RateLimit-Remaining"
"paths./repos/{owner}/{repo}/git/trees.post.parameters[5].type" = "integer"
"paths./repos/{owner}/{repo}/git/trees.post.parameters[6].in" = "header"
"paths./repos/{owner}/{repo}/git/trees.post.parameters[6].name" = "X-RateLimit-Reset"
"paths./repos/{owner}/{repo}/git/trees.post.parameters[6].type" = "integer"
"paths./repos/{owner}/{repo}/git/trees.post.parameters[7].in" = "header"
"paths./repos/{owner}/{repo}/git/trees.post.parameters[7].name" = "X-GitHub-Request-Id"
"paths./repos/{owner}/{repo}/git/trees.post.parameters[7].type" = "integer"
"paths./repos/{owner}/{repo}/git/trees.post.parameters[8].in" = "body"
"paths./repos/{owner}/{repo}/git/trees.post.parameters[8].name" = "body"
"paths./repos/{owner}/{repo}/git/trees.post.parameters[8].required" = true
"paths./repos/{owner}/{repo}/git/trees.post.parameters[8].schema.$ref" = "#/definitions/tree"
"paths./repos/{owner}/{repo}/git/trees.post.responses.201.description" = "Created"
"paths./repos/{owner}/{repo}/git/trees.post.responses.201.schema.$ref" = "#/definitions/trees"
"paths./repos/{owner}/{repo}/git/trees.post.responses.403.description" = "API rate limit exceeded. See http://developer.github.com/v3/#rate-limiting\nfor details.\n"
"paths./repos/{owner}/{repo}/git/trees/{shaCode}.get.description" = "Get a Tree."
"paths./repos/{owner}/{repo}/git/trees/{shaCode}.get.parameters.length" = 10
"paths./repos/{owner}/{repo}/git/trees/{shaCode}.get.parameters[0].description" = "Name of repository owner."
"paths./repos/{owner}/{repo}/git/trees/{shaCode}.get.parameters[0].in" = "path"
"paths./repos/{owner}/{repo}/git/trees/{shaCode}.get.parameters[0].name" = "owner"
"paths./repos/{owner}/{repo}/git/trees/{shaCode}.get.parameters[0].required" = true
"paths./repos/{owner}/{repo}/git/trees/{shaCode}.get.parameters[0].type" = "string"
"paths./repos/{owner}/{repo}/git/trees/{shaCode}.get.parameters[1].description" = "Name of repository."
"paths./repos/{owner}/{repo}/git/trees/{shaCode}.get.parameters[1].in" = "path"
"paths./repos/{owner}/{repo}/git/trees/{shaCode}.get.parameters[1].name" = "repo"
"paths./repos/{owner}/{repo}/git/trees/{shaCode}.get.parameters[1].required" = true
"paths./repos/{owner}/{repo}/git/trees/{shaCode}.get.parameters[1].type" = "string"
"paths./repos/{owner}/{repo}/git/trees/{shaCode}.get.parameters[2].description" = "Tree SHA."
"paths./repos/{owner}/{repo}/git/trees/{shaCode}.get.parameters[2].in" = "path"
"paths./repos/{owner}/{repo}/git/trees/{shaCode}.get.parameters[2].name" = "shaCode"
"paths./repos/{owner}/{repo}/git/trees/{shaCode}.get.parameters[2].required" = true
"paths./repos/{owner}/{repo}/git/trees/{shaCode}.get.parameters[2].type" = "string"
"paths./repos/{owner}/{repo}/git/trees/{shaCode}.get.parameters[3].description" = "Get a Tree Recursively. (0 or 1)"
"paths./repos/{owner}/{repo}/git/trees/{shaCode}.get.parameters[3].in" = "query"
"paths./repos/{owner}/{repo}/git/trees/{shaCode}.get.parameters[3].name" = "recursive"
"paths./repos/{owner}/{repo}/git/trees/{shaCode}.get.parameters[3].type" = "integer"
"paths./repos/{owner}/{repo}/git/trees/{shaCode}.get.parameters[4].description" = "You can check the current version of media type in responses.\n"
"paths./repos/{owner}/{repo}/git/trees/{shaCode}.get.parameters[4].in" = "header"
"paths./repos/{owner}/{repo}/git/trees/{shaCode}.get.parameters[4].name" = "X-GitHub-Media-Type"
"paths./repos/{owner}/{repo}/git/trees/{shaCode}.get.parameters[4].type" = "string"
"paths./repos/{owner}/{repo}/git/trees/{shaCode}.get.parameters[5].description" = "Is used to set specified media type."
"paths./repos/{owner}/{repo}/git/trees/{shaCode}.get.parameters[5].in" = "header"
"paths./repos/{owner}/{repo}/git/trees/{shaCode}.get.parameters[5].name" = "Accept"
"paths./repos/{owner}/{repo}/git/trees/{shaCode}.get.parameters[5].type" = "string"
"paths./repos/{owner}/{repo}/git/trees/{shaCode}.get.parameters[6].in" = "header"
"paths./repos/{owner}/{repo}/git/trees/{shaCode}.get.parameters[6].name" = "X-RateLimit-Limit"
"paths./repos/{owner}/{repo}/git/trees/{shaCode}.get.parameters[6].type" = "integer"
"paths./repos/{owner}/{repo}/git/trees/{shaCode}.get.parameters[7].in" = "header"
"paths./repos/{owner}/{repo}/git/trees/{shaCode}.get.parameters[7].name" = "X-RateLimit-Remaining"
"paths./repos/{owner}/{repo}/git/trees/{shaCode}.get.parameters[7].type" = "integer"
"paths./repos/{owner}/{repo}/git/trees/{shaCode}.get.parameters[8].in" = "header"
"paths./repos/{owner}/{repo}/git/trees/{shaCode}.get.parameters[8].name" = "X-RateLimit-Reset"
"paths./repos/{owner}/{repo}/git/trees/{shaCode}.get.parameters[8].type" = "integer"
"paths./repos/{owner}/{repo}/git/trees/{shaCode}.get.parameters[9].in" = "header"
"paths./repos/{owner}/{repo}/git/trees/{shaCode}.get.parameters[9].name" = "X-GitHub-Request-Id"
"paths./repos/{owner}/{repo}/git/trees/{shaCode}.get.parameters[9].type" = "integer"
"paths./repos/{owner}/{repo}/git/trees/{shaCode}.get.responses.200.description" = "OK"
"paths./repos/{owner}/{repo}/git/trees/{shaCode}.get.responses.200.schema.$ref" = "#/definitions/tree"
"paths./repos/{owner}/{repo}/git/trees/{shaCode}.get.responses.403.description" = "API rate limit exceeded. See http://developer.github.com/v3/#rate-limiting\nfor details.\n"
"paths./repos/{owner}/{repo}/hooks.get.description" = "Get list of hooks."
"paths./repos/{owner}/{repo}/hooks.get.parameters.length" = 8
"paths./repos/{owner}/{repo}/hooks.get.parameters[0].description" = "Name of repository owner."
"paths./repos/{owner}/{repo}/hooks.get.parameters[0].in" = "path"
"paths./repos/{owner}/{repo}/hooks.get.parameters[0].name" = "owner"
"paths./repos/{owner}/{repo}/hooks.get.parameters[0].required" = true
"paths./repos/{owner}/{repo}/hooks.get.parameters[0].type" = "string"
"paths./repos/{owner}/{repo}/hooks.get.parameters[1].description" = "Name of repository."
"paths./repos/{owner}/{repo}/hooks.get.parameters[1].in" = "path"
"paths./repos/{owner}/{repo}/hooks.get.parameters[1].name" = "repo"
"paths./repos/{owner}/{repo}/hooks.get.parameters[1].required" = true
"paths./repos/{owner}/{repo}/hooks.get.parameters[1].type" = "string"
"paths./repos/{owner}/{repo}/hooks.get.parameters[2].description" = "You can check the current version of media type in responses.\n"
"paths./repos/{owner}/{repo}/hooks.get.parameters[2].in" = "header"
"paths./repos/{owner}/{repo}/hooks.get.parameters[2].name" = "X-GitHub-Media-Type"
"paths./repos/{owner}/{repo}/hooks.get.parameters[2].type" = "string"
"paths./repos/{owner}/{repo}/hooks.get.parameters[3].description" = "Is used to set specified media type."
"paths./repos/{owner}/{repo}/hooks.get.parameters[3].in" = "header"
"paths./repos/{owner}/{repo}/hooks.get.parameters[3].name" = "Accept"
"paths./repos/{owner}/{repo}/hooks.get.parameters[3].type" = "string"
"paths./repos/{owner}/{repo}/hooks.get.parameters[4].in" = "header"
"paths./repos/{owner}/{repo}/hooks.get.parameters[4].name" = "X-RateLimit-Limit"
"paths./repos/{owner}/{repo}/hooks.get.parameters[4].type" = "integer"
"paths./repos/{owner}/{repo}/hooks.get.parameters[5].in" = "header"
"paths./repos/{owner}/{repo}/hooks.get.parameters[5].name" = "X-RateLimit-Remaining"
"paths./repos/{owner}/{repo}/hooks.get.parameters[5].type" = "integer"
"paths./repos/{owner}/{repo}/hooks.get.parameters[6].in" = "header"
"paths./repos/{owner}/{repo}/hooks.get.parameters[6].name" = "X-RateLimit-Reset"
"paths./repos/{owner}/{repo}/hooks.get.parameters[6].type" = "integer"
"paths./repos/{owner}/{repo}/hooks.get.parameters[7].in" = "header"
"paths./repos/{owner}/{repo}/hooks.get.parameters[7].name" = "X-GitHub-Request-Id"
"paths./repos/{owner}/{repo}/hooks.get.parameters[7].type" = "integer"
"paths./repos/{owner}/{repo}/hooks.get.responses.200.description" = "OK"
"paths./repos/{owner}/{repo}/hooks.get.responses.200.schema.$ref" = "#/definitions/hook"
"paths./repos/{owner}/{repo}/hooks.get.responses.403.description" = "API rate limit exceeded. See http://developer.github.com/v3/#rate-limiting\nfor details.\n"
"paths./repos/{owner}/{repo}/hooks.post.description" = "Create a hook."
"paths./repos/{owner}/{repo}/hooks.post.parameters.length" = 9
"paths./repos/{owner}/{repo}/hooks.post.parameters[0].description" = "Name of repository owner."
"paths./repos/{owner}/{repo}/hooks.post.parameters[0].in" = "path"
"paths./repos/{owner}/{repo}/hooks.post.parameters[0].name" = "owner"
"paths./repos/{owner}/{repo}/hooks.post.parameters[0].required" = true
"paths./repos/{owner}/{repo}/hooks.post.parameters[0].type" = "string"
"paths./repos/{owner}/{repo}/hooks.post.parameters[1].description" = "Name of repository."
"paths./repos/{owner}/{repo}/hooks.post.parameters[1].in" = "path"
"paths./repos/{owner}/{repo}/hooks.post.parameters[1].name" = "repo"
"paths./repos/{owner}/{repo}/hooks.post.parameters[1].required" = true
"paths./repos/{owner}/{repo}/hooks.post.parameters[1].type" = "string"
"paths./repos/{owner}/{repo}/hooks.post.parameters[2].description" = "You can check the current version of media type in responses.\n"
"paths./repos/{owner}/{repo}/hooks.post.parameters[2].in" = "header"
"paths./repos/{owner}/{repo}/hooks.post.parameters[2].name" = "X-GitHub-Media-Type"
"paths./repos/{owner}/{repo}/hooks.post.parameters[2].type" = "string"
"paths./repos/{owner}/{repo}/hooks.post.parameters[3].description" = "Is used to set specified media type."
"paths./repos/{owner}/{repo}/hooks.post.parameters[3].in" = "header"
"paths./repos/{owner}/{repo}/hooks.post.parameters[3].name" = "Accept"
"paths./repos/{owner}/{repo}/hooks.post.parameters[3].type" = "string"
"paths./repos/{owner}/{repo}/hooks.post.parameters[4].in" = "header"
"paths./repos/{owner}/{repo}/hooks.post.parameters[4].name" = "X-RateLimit-Limit"
"paths./repos/{owner}/{repo}/hooks.post.parameters[4].type" = "integer"
"paths./repos/{owner}/{repo}/hooks.post.parameters[5].in" = "header"
"paths./repos/{owner}/{repo}/hooks.post.parameters[5].name" = "X-RateLimit-Remaining"
"paths./repos/{owner}/{repo}/hooks.post.parameters[5].type" = "integer"
"paths./repos/{owner}/{repo}/hooks.post.parameters[6].in" = "header"
"paths./repos/{owner}/{repo}/hooks.post.parameters[6].name" = "X-RateLimit-Reset"
"paths./repos/{owner}/{repo}/hooks.post.parameters[6].type" = "integer"
"paths./repos/{owner}/{repo}/hooks.post.parameters[7].in" = "header"
"paths./repos/{owner}/{repo}/hooks.post.parameters[7].name" = "X-GitHub-Request-Id"
"paths./repos/{owner}/{repo}/hooks.post.parameters[7].type" = "integer"
"paths./repos/{owner}/{repo}/hooks.post.parameters[8].in" = "body"
"paths./repos/{owner}/{repo}/hooks.post.parameters[8].name" = "body"
"paths./repos/{owner}/{repo}/hooks.post.parameters[8].required" = true
"paths./repos/{owner}/{repo}/hooks.post.parameters[8].schema.$ref" = "#/definitions/hookBody"
"paths./repos/{owner}/{repo}/hooks.post.responses.201.description" = "Created"
"paths./repos/{owner}/{repo}/hooks.post.responses.201.schema.$ref" = "#/definitions/hook"
"paths./repos/{owner}/{repo}/hooks.post.responses.403.description" = "API rate limit exceeded. See http://developer.github.com/v3/#rate-limiting\nfor details.\n"
"paths./repos/{owner}/{repo}/hooks/{hookId}.delete.description" = "Delete a hook."
"paths./repos/{owner}/{repo}/hooks/{hookId}.delete.parameters.length" = 9
"paths./repos/{owner}/{repo}/hooks/{hookId}.delete.parameters[0].description" = "Name of repository owner."
"paths./repos/{owner}/{repo}/hooks/{hookId}.delete.parameters[0].in" = "path"
"paths./repos/{owner}/{repo}/hooks/{hookId}.delete.parameters[0].name" = "owner"
"paths./repos/{owner}/{repo}/hooks/{hookId}.delete.parameters[0].required" = true
"paths./repos/{owner}/{repo}/hooks/{hookId}.delete.parameters[0].type" = "string"
"paths./repos/{owner}/{repo}/hooks/{hookId}.delete.parameters[1].description" = "Name of repository."
"paths./repos/{owner}/{repo}/hooks/{hookId}.delete.parameters[1].in" = "path"
"paths./repos/{owner}/{repo}/hooks/{hookId}.delete.parameters[1].name" = "repo"
"paths./repos/{owner}/{repo}/hooks/{hookId}.delete.parameters[1].required" = true
"paths./repos/{owner}/{repo}/hooks/{hookId}.delete.parameters[1].type" = "string"
"paths./repos/{owner}/{repo}/hooks/{hookId}.delete.parameters[2].description" = "Id of hook."
"paths./repos/{owner}/{repo}/hooks/{hookId}.delete.parameters[2].in" = "path"
"paths./repos/{owner}/{repo}/hooks/{hookId}.delete.parameters[2].name" = "hookId"
"paths./repos/{owner}/{repo}/hooks/{hookId}.delete.parameters[2].required" = true
"paths./repos/{owner}/{repo}/hooks/{hookId}.delete.parameters[2].type" = "integer"
"paths./repos/{owner}/{repo}/hooks/{hookId}.delete.parameters[3].description" = "You can check the current version of media type in responses.\n"
"paths./repos/{owner}/{repo}/hooks/{hookId}.delete.parameters[3].in" = "header"
"paths./repos/{owner}/{repo}/hooks/{hookId}.delete.parameters[3].name" = "X-GitHub-Media-Type"
"paths./repos/{owner}/{repo}/hooks/{hookId}.delete.parameters[3].type" = "string"
"paths./repos/{owner}/{repo}/hooks/{hookId}.delete.parameters[4].description" = "Is used to set specified media type."
"paths./repos/{owner}/{repo}/hooks/{hookId}.delete.parameters[4].in" = "header"
"paths./repos/{owner}/{repo}/hooks/{hookId}.delete.parameters[4].name" = "Accept"
"paths./repos/{owner}/{repo}/hooks/{hookId}.delete.parameters[4].type" = "string"
"paths./repos/{owner}/{repo}/hooks/{hookId}.delete.parameters[5].in" = "header"
"paths./repos/{owner}/{repo}/hooks/{hookId}.delete.parameters[5].name" = "X-RateLimit-Limit"
"paths./repos/{owner}/{repo}/hooks/{hookId}.delete.parameters[5].type" = "integer"
"paths./repos/{owner}/{repo}/hooks/{hookId}.delete.parameters[6].in" = "header"
"paths./repos/{owner}/{repo}/hooks/{hookId}.delete.parameters[6].name" = "X-RateLimit-Remaining"
"paths./repos/{owner}/{repo}/hooks/{hookId}.delete.parameters[6].type" = "integer"
"paths./repos/{owner}/{repo}/hooks/{hookId}.delete.parameters[7].in" = "header"
"paths./repos/{owner}/{repo}/hooks/{hookId}.delete.parameters[7].name" = "X-RateLimit-Reset"
"paths./repos/{owner}/{repo}/hooks/{hookId}.delete.parameters[7].type" = "integer"
"paths./repos/{owner}/{repo}/hooks/{hookId}.delete.parameters[8].in" = "header"
"paths./repos/{owner}/{repo}/hooks/{hookId}.delete.parameters[8].name" = "X-GitHub-Request-Id"
"paths./repos/{owner}/{repo}/hooks/{hookId}.delete.parameters[8].type" = "integer"
"paths./repos/{owner}/{repo}/hooks/{hookId}.delete.responses.204.description" = "No content.\n"
"paths./repos/{owner}/{repo}/hooks/{hookId}.delete.responses.403.description" = "API rate limit exceeded. See http://developer.github.com/v3/#rate-limiting\nfor details.\n"
"paths./repos/{owner}/{repo}/hooks/{hookId}.get.description" = "Get single hook."
"paths./repos/{owner}/{repo}/hooks/{hookId}.get.parameters.length" = 9
"paths./repos/{owner}/{repo}/hooks/{hookId}.get.parameters[0].description" = "Name of repository owner."
"paths./repos/{owner}/{repo}/hooks/{hookId}.get.parameters[0].in" = "path"
"paths./repos/{owner}/{repo}/hooks/{hookId}.get.parameters[0].name" = "owner"
"paths./repos/{owner}/{repo}/hooks/{hookId}.get.parameters[0].required" = true
"paths./repos/{owner}/{repo}/hooks/{hookId}.get.parameters[0].type" = "string"
"paths./repos/{owner}/{repo}/hooks/{hookId}.get.parameters[1].description" = "Name of repository."
"paths./repos/{owner}/{repo}/hooks/{hookId}.get.parameters[1].in" = "path"
"paths./repos/{owner}/{repo}/hooks/{hookId}.get.parameters[1].name" = "repo"
"paths./repos/{owner}/{repo}/hooks/{hookId}.get.parameters[1].required" = true
"paths./repos/{owner}/{repo}/hooks/{hookId}.get.parameters[1].type" = "string"
"paths./repos/{owner}/{repo}/hooks/{hookId}.get.parameters[2].description" = "Id of hook."
"paths./repos/{owner}/{repo}/hooks/{hookId}.get.parameters[2].in" = "path"
"paths./repos/{owner}/{repo}/hooks/{hookId}.get.parameters[2].name" = "hookId"
"paths./repos/{owner}/{repo}/hooks/{hookId}.get.parameters[2].required" = true
"paths./repos/{owner}/{repo}/hooks/{hookId}.get.parameters[2].type" = "integer"
"paths./repos/{owner}/{repo}/hooks/{hookId}.get.parameters[3].description" = "You can check the current version of media type in responses.\n"
"paths./repos/{owner}/{repo}/hooks/{hookId}.get.parameters[3].in" = "header"
"paths./repos/{owner}/{repo}/hooks/{hookId}.get.parameters[3].name" = "X-GitHub-Media-Type"
"paths./repos/{owner}/{repo}/hooks/{hookId}.get.parameters[3].type" = "string"
"paths./repos/{owner}/{repo}/hooks/{hookId}.get.parameters[4].description" = "Is used to set specified media type."
"paths./repos/{owner}/{repo}/hooks/{hookId}.get.parameters[4].in" = "header"
"paths./repos/{owner}/{repo}/hooks/{hookId}.get.parameters[4].name" = "Accept"
"paths./repos/{owner}/{repo}/hooks/{hookId}.get.parameters[4].type" = "string"
"paths./repos/{owner}/{repo}/hooks/{hookId}.get.parameters[5].in" = "header"
"paths./repos/{owner}/{repo}/hooks/{hookId}.get.parameters[5].name" = "X-RateLimit-Limit"
"paths./repos/{owner}/{repo}/hooks/{hookId}.get.parameters[5].type" = "integer"
"paths./repos/{owner}/{repo}/hooks/{hookId}.get.parameters[6].in" = "header"
"paths./repos/{owner}/{repo}/hooks/{hookId}.get.parameters[6].name" = "X-RateLimit-Remaining"
"paths./repos/{owner}/{repo}/hooks/{hookId}.get.parameters[6].type" = "integer"
"paths./repos/{owner}/{repo}/hooks/{hookId}.get.parameters[7].in" = "header"
"paths./repos/{owner}/{repo}/hooks/{hookId}.get.parameters[7].name" = "X-RateLimit-Reset"
"paths./repos/{owner}/{repo}/hooks/{hookId}.get.parameters[7].type" = "integer"
"paths./repos/{owner}/{repo}/hooks/{hookId}.get.parameters[8].in" = "header"
"paths./repos/{owner}/{repo}/hooks/{hookId}.get.parameters[8].name" = "X-GitHub-Request-Id"
"paths./repos/{owner}/{repo}/hooks/{hookId}.get.parameters[8].type" = "integer"
"paths./repos/{owner}/{repo}/hooks/{hookId}.get.responses.200.description" = "OK"
"paths./repos/{owner}/{repo}/hooks/{hookId}.get.responses.200.schema.$ref" = "#/definitions/hook"
"paths./repos/{owner}/{repo}/hooks/{hookId}.get.responses.403.description" = "API rate limit exceeded. See http://developer.github.com/v3/#rate-limiting\nfor details.\n"
"paths./repos/{owner}/{repo}/hooks/{hookId}.patch.description" = "Edit a hook."
"paths./repos/{owner}/{repo}/hooks/{hookId}.patch.parameters.length" = 10
"paths./repos/{owner}/{repo}/hooks/{hookId}.patch.parameters[0].description" = "Name of repository owner."
"paths./repos/{owner}/{repo}/hooks/{hookId}.patch.parameters[0].in" = "path"
"paths./repos/{owner}/{repo}/hooks/{hookId}.patch.parameters[0].name" = "owner"
"paths./repos/{owner}/{repo}/hooks/{hookId}.patch.parameters[0].required" = true
"paths./repos/{owner}/{repo}/hooks/{hookId}.patch.parameters[0].type" = "string"
"paths./repos/{owner}/{repo}/hooks/{hookId}.patch.parameters[1].description" = "Name of repository."
"paths./repos/{owner}/{repo}/hooks/{hookId}.patch.parameters[1].in" = "path"
"paths./repos/{owner}/{repo}/hooks/{hookId}.patch.parameters[1].name" = "repo"
"paths./repos/{owner}/{repo}/hooks/{hookId}.patch.parameters[1].required" = true
"paths./repos/{owner}/{repo}/hooks/{hookId}.patch.parameters[1].type" = "string"
"paths./repos/{owner}/{repo}/hooks/{hookId}.patch.parameters[2].description" = "Id of hook."
"paths./repos/{owner}/{repo}/hooks/{hookId}.patch.parameters[2].in" = "path"
"paths./repos/{owner}/{repo}/hooks/{hookId}.patch.parameters[2].name" = "hookId"
"paths./repos/{owner}/{repo}/hooks/{hookId}.patch.parameters[2].required" = true
"paths./repos/{owner}/{repo}/hooks/{hookId}.patch.parameters[2].type" = "integer"
"paths./repos/{owner}/{repo}/hooks/{hookId}.patch.parameters[3].description" = "You can check the current version of media type in responses.\n"
"paths./repos/{owner}/{repo}/hooks/{hookId}.patch.parameters[3].in" = "header"
"paths./repos/{owner}/{repo}/hooks/{hookId}.patch.parameters[3].name" = "X-GitHub-Media-Type"
"paths./repos/{owner}/{repo}/hooks/{hookId}.patch.parameters[3].type" = "string"
"paths./repos/{owner}/{repo}/hooks/{hookId}.patch.parameters[4].description" = "Is used to set specified media type."
"paths./repos/{owner}/{repo}/hooks/{hookId}.patch.parameters[4].in" = "header"
"paths./repos/{owner}/{repo}/hooks/{hookId}.patch.parameters[4].name" = "Accept"
"paths./repos/{owner}/{repo}/hooks/{hookId}.patch.parameters[4].type" = "string"
"paths./repos/{owner}/{repo}/hooks/{hookId}.patch.parameters[5].in" = "header"
"paths./repos/{owner}/{repo}/hooks/{hookId}.patch.parameters[5].name" = "X-RateLimit-Limit"
"paths./repos/{owner}/{repo}/hooks/{hookId}.patch.parameters[5].type" = "integer"
"paths./repos/{owner}/{repo}/hooks/{hookId}.patch.parameters[6].in" = "header"
"paths./repos/{owner}/{repo}/hooks/{hookId}.patch.parameters[6].name" = "X-RateLimit-Remaining"
"paths./repos/{owner}/{repo}/hooks/{hookId}.patch.parameters[6].type" = "integer"
"paths./repos/{owner}/{repo}/hooks/{hookId}.patch.parameters[7].in" = "header"
"paths./repos/{owner}/{repo}/hooks/{hookId}.patch.parameters[7].name" = "X-RateLimit-Reset"
"paths./repos/{owner}/{repo}/hooks/{hookId}.patch.parameters[7].type" = "integer"
"paths./repos/{owner}/{repo}/hooks/{hookId}.patch.parameters[8].in" = "header"
"paths./repos/{owner}/{repo}/hooks/{hookId}.patch.parameters[8].name" = "X-GitHub-Request-Id"
"paths./repos/{owner}/{repo}/hooks/{hookId}.patch.parameters[8].type" = "integer"
"paths./repos/{owner}/{repo}/hooks/{hookId}.patch.parameters[9].in" = "body"
"paths./repos/{owner}/{repo}/hooks/{hookId}.patch.parameters[9].name" = "body"
"paths./repos/{owner}/{repo}/hooks/{hookId}.patch.parameters[9].required" = true
"paths./repos/{owner}/{repo}/hooks/{hookId}.patch.parameters[9].schema.$ref" = "#/definitions/hookBody"
"paths./repos/{owner}/{repo}/hooks/{hookId}.patch.responses.200.description" = "OK"
"paths./repos/{owner}/{repo}/hooks/{hookId}.patch.responses.200.schema.$ref" = "#/definitions/hook"
"paths./repos/{owner}/{repo}/hooks/{hookId}.patch.responses.403.description" = "API rate limit exceeded. See http://developer.github.com/v3/#rate-limiting\nfor details.\n"
"paths./repos/{owner}/{repo}/hooks/{hookId}/tests.post.description" = "Test a push hook.\nThis will trigger the hook with the latest push to the current repository\nif the hook is subscribed to push events. If the hook is not subscribed\nto push events, the server will respond with 204 but no test POST will\nbe generated.\nNote: Previously /repos/:owner/:repo/hooks/:id/tes\n"
"paths./repos/{owner}/{repo}/hooks/{hookId}/tests.post.parameters.length" = 9
"paths./repos/{owner}/{repo}/hooks/{hookId}/tests.post.parameters[0].description" = "Name of repository owner."
"paths./repos/{owner}/{repo}/hooks/{hookId}/tests.post.parameters[0].in" = "path"
"paths./repos/{owner}/{repo}/hooks/{hookId}/tests.post.parameters[0].name" = "owner"
"paths./repos/{owner}/{repo}/hooks/{hookId}/tests.post.parameters[0].required" = true
"paths./repos/{owner}/{repo}/hooks/{hookId}/tests.post.parameters[0].type" = "string"
"paths./repos/{owner}/{repo}/hooks/{hookId}/tests.post.parameters[1].description" = "Name of repository."
"paths./repos/{owner}/{repo}/hooks/{hookId}/tests.post.parameters[1].in" = "path"
"paths./repos/{owner}/{repo}/hooks/{hookId}/tests.post.parameters[1].name" = "repo"
"paths./repos/{owner}/{repo}/hooks/{hookId}/tests.post.parameters[1].required" = true
"paths./repos/{owner}/{repo}/hooks/{hookId}/tests.post.parameters[1].type" = "string"
"paths./repos/{owner}/{repo}/hooks/{hookId}/tests.post.parameters[2].description" = "Id of hook."
"paths./repos/{owner}/{repo}/hooks/{hookId}/tests.post.parameters[2].in" = "path"
"paths./repos/{owner}/{repo}/hooks/{hookId}/tests.post.parameters[2].name" = "hookId"
"paths./repos/{owner}/{repo}/hooks/{hookId}/tests.post.parameters[2].required" = true
"paths./repos/{owner}/{repo}/hooks/{hookId}/tests.post.parameters[2].type" = "integer"
"paths./repos/{owner}/{repo}/hooks/{hookId}/tests.post.parameters[3].description" = "You can check the current version of media type in responses.\n"
"paths./repos/{owner}/{repo}/hooks/{hookId}/tests.post.parameters[3].in" = "header"
"paths./repos/{owner}/{repo}/hooks/{hookId}/tests.post.parameters[3].name" = "X-GitHub-Media-Type"
"paths./repos/{owner}/{repo}/hooks/{hookId}/tests.post.parameters[3].type" = "string"
"paths./repos/{owner}/{repo}/hooks/{hookId}/tests.post.parameters[4].description" = "Is used to set specified media type."
"paths./repos/{owner}/{repo}/hooks/{hookId}/tests.post.parameters[4].in" = "header"
"paths./repos/{owner}/{repo}/hooks/{hookId}/tests.post.parameters[4].name" = "Accept"
"paths./repos/{owner}/{repo}/hooks/{hookId}/tests.post.parameters[4].type" = "string"
"paths./repos/{owner}/{repo}/hooks/{hookId}/tests.post.parameters[5].in" = "header"
"paths./repos/{owner}/{repo}/hooks/{hookId}/tests.post.parameters[5].name" = "X-RateLimit-Limit"
"paths./repos/{owner}/{repo}/hooks/{hookId}/tests.post.parameters[5].type" = "integer"
"paths./repos/{owner}/{repo}/hooks/{hookId}/tests.post.parameters[6].in" = "header"
"paths./repos/{owner}/{repo}/hooks/{hookId}/tests.post.parameters[6].name" = "X-RateLimit-Remaining"
"paths./repos/{owner}/{repo}/hooks/{hookId}/tests.post.parameters[6].type" = "integer"
"paths./repos/{owner}/{repo}/hooks/{hookId}/tests.post.parameters[7].in" = "header"
"paths./repos/{owner}/{repo}/hooks/{hookId}/tests.post.parameters[7].name" = "X-RateLimit-Reset"
"paths./repos/{owner}/{repo}/hooks/{hookId}/tests.post.parameters[7].type" = "integer"
"paths./repos/{owner}/{repo}/hooks/{hookId}/tests.post.parameters[8].in" = "header"
"paths./repos/{owner}/{repo}/hooks/{hookId}/tests.post.parameters[8].name" = "X-GitHub-Request-Id"
"paths./repos/{owner}/{repo}/hooks/{hookId}/tests.post.parameters[8].type" = "integer"
"paths./repos/{owner}/{repo}/hooks/{hookId}/tests.post.responses.204.description" = "Hook is triggered."
"paths./repos/{owner}/{repo}/hooks/{hookId}/tests.post.responses.403.description" = "API rate limit exceeded. See http://developer.github.com/v3/#rate-limiting\nfor details.\n"
"paths./repos/{owner}/{repo}/issues.get.description" = "List issues for a repository."
"paths./repos/{owner}/{repo}/issues.get.parameters.length" = 14
"paths./repos/{owner}/{repo}/issues.get.parameters[0].description" = "Name of repository owner."
"paths./repos/{owner}/{repo}/issues.get.parameters[0].in" = "path"
"paths./repos/{owner}/{repo}/issues.get.parameters[0].name" = "owner"
"paths./repos/{owner}/{repo}/issues.get.parameters[0].required" = true
"paths./repos/{owner}/{repo}/issues.get.parameters[0].type" = "string"
"paths./repos/{owner}/{repo}/issues.get.parameters[10].in" = "header"
"paths./repos/{owner}/{repo}/issues.get.parameters[10].name" = "X-RateLimit-Limit"
"paths./repos/{owner}/{repo}/issues.get.parameters[10].type" = "integer"
"paths./repos/{owner}/{repo}/issues.get.parameters[11].in" = "header"
"paths./repos/{owner}/{repo}/issues.get.parameters[11].name" = "X-RateLimit-Remaining"
"paths./repos/{owner}/{repo}/issues.get.parameters[11].type" = "integer"
"paths./repos/{owner}/{repo}/issues.get.parameters[12].in" = "header"
"paths./repos/{owner}/{repo}/issues.get.parameters[12].name" = "X-RateLimit-Reset"
"paths./repos/{owner}/{repo}/issues.get.parameters[12].type" = "integer"
"paths./repos/{owner}/{repo}/issues.get.parameters[13].in" = "header"
"paths./repos/{owner}/{repo}/issues.get.parameters[13].name" = "X-GitHub-Request-Id"
"paths./repos/{owner}/{repo}/issues.get.parameters[13].type" = "integer"
"paths./repos/{owner}/{repo}/issues.get.parameters[1].description" = "Name of repository."
"paths./repos/{owner}/{repo}/issues.get.parameters[1].in" = "path"
"paths./repos/{owner}/{repo}/issues.get.parameters[1].name" = "repo"
"paths./repos/{owner}/{repo}/issues.get.parameters[1].required" = true
"paths./repos/{owner}/{repo}/issues.get.parameters[1].type" = "string"
"paths./repos/{owner}/{repo}/issues.get.parameters[2].default" = "all"
"paths./repos/{owner}/{repo}/issues.get.parameters[2].description" = "Issues assigned to you / created by you / mentioning you / you're\nsubscribed to updates for / All issues the authenticated user can see\n"
"paths./repos/{owner}/{repo}/issues.get.parameters[2].enum.length" = 5
"paths./repos/{owner}/{repo}/issues.get.parameters[2].enum[0]" = "assigned"
"paths./repos/{owner}/{repo}/issues.get.parameters[2].enum[1]" = "created"
"paths./repos/{owner}/{repo}/issues.get.parameters[2].enum[2]" = "mentioned"
"paths./repos/{owner}/{repo}/issues.get.parameters[2].enum[3]" = "subscribed"
"paths./repos/{owner}/{repo}/issues.get.parameters[2].enum[4]" = "all"
"paths./repos/{owner}/{repo}/issues.get.parameters[2].in" = "query"
"paths./repos/{owner}/{repo}/issues.get.parameters[2].name" = "filter"
"paths./repos/{owner}/{repo}/issues.get.parameters[2].required" = true
"paths./repos/{owner}/{repo}/issues.get.parameters[2].type" = "string"
"paths./repos/{owner}/{repo}/issues.get.parameters[3].default" = "open"
"paths./repos/{owner}/{repo}/issues.get.parameters[3].enum.length" = 2
"paths./repos/{owner}/{repo}/issues.get.parameters[3].enum[0]" = "open"
"paths./repos/{owner}/{repo}/issues.get.parameters[3].enum[1]" = "closed"
"paths./repos/{owner}/{repo}/issues.get.parameters[3].in" = "query"
"paths./repos/{owner}/{repo}/issues.get.parameters[3].name" = "state"
"paths./repos/{owner}/{repo}/issues.get.parameters[3].required" = true
"paths./repos/{owner}/{repo}/issues.get.parameters[3].type" = "string"
"paths./repos/{owner}/{repo}/issues.get.parameters[4].description" = "String list of comma separated Label names. Example - bug,ui,@high."
"paths./repos/{owner}/{repo}/issues.get.parameters[4].in" = "query"
"paths./repos/{owner}/{repo}/issues.get.parameters[4].name" = "labels"
"paths./repos/{owner}/{repo}/issues.get.parameters[4].required" = true
"paths./repos/{owner}/{repo}/issues.get.parameters[4].type" = "string"
"paths./repos/{owner}/{repo}/issues.get.parameters[5].default" = "created"
"paths./repos/{owner}/{repo}/issues.get.parameters[5].enum.length" = 3
"paths./repos/{owner}/{repo}/issues.get.parameters[5].enum[0]" = "created"
"paths./repos/{owner}/{repo}/issues.get.parameters[5].enum[1]" = "updated"
"paths./repos/{owner}/{repo}/issues.get.parameters[5].enum[2]" = "comments"
"paths./repos/{owner}/{repo}/issues.get.parameters[5].in" = "query"
"paths./repos/{owner}/{repo}/issues.get.parameters[5].name" = "sort"
"paths./repos/{owner}/{repo}/issues.get.parameters[5].required" = true
"paths./repos/{owner}/{repo}/issues.get.parameters[5].type" = "string"
"paths./repos/{owner}/{repo}/issues.get.parameters[6].default" = "desc"
"paths./repos/{owner}/{repo}/issues.get.parameters[6].enum.length" = 2
"paths./repos/{owner}/{repo}/issues.get.parameters[6].enum[0]" = "asc"
"paths./repos/{owner}/{repo}/issues.get.parameters[6].enum[1]" = "desc"
"paths./repos/{owner}/{repo}/issues.get.parameters[6].in" = "query"
"paths./repos/{owner}/{repo}/issues.get.parameters[6].name" = "direction"
"paths./repos/{owner}/{repo}/issues.get.parameters[6].required" = true
"paths./repos/{owner}/{repo}/issues.get.parameters[6].type" = "string"
"paths./repos/{owner}/{repo}/issues.get.parameters[7].description" = "Optional string of a timestamp in ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ.\nOnly issues updated at or after this time are returned.\n"
"paths./repos/{owner}/{repo}/issues.get.parameters[7].in" = "query"
"paths./repos/{owner}/{repo}/issues.get.parameters[7].name" = "since"
"paths./repos/{owner}/{repo}/issues.get.parameters[7].type" = "string"
"paths./repos/{owner}/{repo}/issues.get.parameters[8].description" = "You can check the current version of media type in responses.\n"
"paths./repos/{owner}/{repo}/issues.get.parameters[8].in" = "header"
"paths./repos/{owner}/{repo}/issues.get.parameters[8].name" = "X-GitHub-Media-Type"
"paths./repos/{owner}/{repo}/issues.get.parameters[8].type" = "string"
"paths./repos/{owner}/{repo}/issues.get.parameters[9].description" = "Is used to set specified media type."
"paths./repos/{owner}/{repo}/issues.get.parameters[9].in" = "header"
"paths./repos/{owner}/{repo}/issues.get.parameters[9].name" = "Accept"
"paths./repos/{owner}/{repo}/issues.get.parameters[9].type" = "string"
"paths./repos/{owner}/{repo}/issues.get.responses.200.description" = "OK"
"paths./repos/{owner}/{repo}/issues.get.responses.200.schema.$ref" = "#/definitions/issues"
"paths./repos/{owner}/{repo}/issues.get.responses.403.description" = "API rate limit exceeded. See http://developer.github.com/v3/#rate-limiting\nfor details.\n"
"paths./repos/{owner}/{repo}/issues.post.description" = "Create an issue.\nAny user with pull access to a repository can create an issue.\n"
"paths./repos/{owner}/{repo}/issues.post.parameters.length" = 9
"paths./repos/{owner}/{repo}/issues.post.parameters[0].description" = "Name of repository owner."
"paths./repos/{owner}/{repo}/issues.post.parameters[0].in" = "path"
"paths./repos/{owner}/{repo}/issues.post.parameters[0].name" = "owner"
"paths./repos/{owner}/{repo}/issues.post.parameters[0].required" = true
"paths./repos/{owner}/{repo}/issues.post.parameters[0].type" = "string"
"paths./repos/{owner}/{repo}/issues.post.parameters[1].description" = "Name of repository."
"paths./repos/{owner}/{repo}/issues.post.parameters[1].in" = "path"
"paths./repos/{owner}/{repo}/issues.post.parameters[1].name" = "repo"
"paths./repos/{owner}/{repo}/issues.post.parameters[1].required" = true
"paths./repos/{owner}/{repo}/issues.post.parameters[1].type" = "string"
"paths./repos/{owner}/{repo}/issues.post.parameters[2].description" = "You can check the current version of media type in responses.\n"
"paths./repos/{owner}/{repo}/issues.post.parameters[2].in" = "header"
"paths./repos/{owner}/{repo}/issues.post.parameters[2].name" = "X-GitHub-Media-Type"
"paths./repos/{owner}/{repo}/issues.post.parameters[2].type" = "string"
"paths./repos/{owner}/{repo}/issues.post.parameters[3].description" = "Is used to set specified media type."
"paths./repos/{owner}/{repo}/issues.post.parameters[3].in" = "header"
"paths./repos/{owner}/{repo}/issues.post.parameters[3].name" = "Accept"
"paths./repos/{owner}/{repo}/issues.post.parameters[3].type" = "string"
"paths./repos/{owner}/{repo}/issues.post.parameters[4].in" = "header"
"paths./repos/{owner}/{repo}/issues.post.parameters[4].name" = "X-RateLimit-Limit"
"paths./repos/{owner}/{repo}/issues.post.parameters[4].type" = "integer"
"paths./repos/{owner}/{repo}/issues.post.parameters[5].in" = "header"
"paths./repos/{owner}/{repo}/issues.post.parameters[5].name" = "X-RateLimit-Remaining"
"paths./repos/{owner}/{repo}/issues.post.parameters[5].type" = "integer"
"paths./repos/{owner}/{repo}/issues.post.parameters[6].in" = "header"
"paths./repos/{owner}/{repo}/issues.post.parameters[6].name" = "X-RateLimit-Reset"
"paths./repos/{owner}/{repo}/issues.post.parameters[6].type" = "integer"
"paths./repos/{owner}/{repo}/issues.post.parameters[7].in" = "header"
"paths./repos/{owner}/{repo}/issues.post.parameters[7].name" = "X-GitHub-Request-Id"
"paths./repos/{owner}/{repo}/issues.post.parameters[7].type" = "integer"
"paths./repos/{owner}/{repo}/issues.post.parameters[8].in" = "body"
"paths./repos/{owner}/{repo}/issues.post.parameters[8].name" = "body"
"paths./repos/{owner}/{repo}/issues.post.parameters[8].required" = true
"paths./repos/{owner}/{repo}/issues.post.parameters[8].schema.$ref" = "#/definitions/issue"
"paths./repos/{owner}/{repo}/issues.post.responses.201.description" = "Created"
"paths./repos/{owner}/{repo}/issues.post.responses.201.schema.$ref" = "#/definitions/issue"
"paths./repos/{owner}/{repo}/issues.post.responses.403.description" = "API rate limit exceeded. See http://developer.github.com/v3/#rate-limiting\nfor details.\n"
"paths./repos/{owner}/{repo}/issues/comments.get.description" = "List comments in a repository."
"paths./repos/{owner}/{repo}/issues/comments.get.parameters.length" = 11
"paths./repos/{owner}/{repo}/issues/comments.get.parameters[0].description" = "Name of repository owner."
"paths./repos/{owner}/{repo}/issues/comments.get.parameters[0].in" = "path"
"paths./repos/{owner}/{repo}/issues/comments.get.parameters[0].name" = "owner"
"paths./repos/{owner}/{repo}/issues/comments.get.parameters[0].required" = true
"paths./repos/{owner}/{repo}/issues/comments.get.parameters[0].type" = "string"
"paths./repos/{owner}/{repo}/issues/comments.get.parameters[10].in" = "header"
"paths./repos/{owner}/{repo}/issues/comments.get.parameters[10].name" = "X-GitHub-Request-Id"
"paths./repos/{owner}/{repo}/issues/comments.get.parameters[10].type" = "integer"
"paths./repos/{owner}/{repo}/issues/comments.get.parameters[1].description" = "Name of repository."
"paths./repos/{owner}/{repo}/issues/comments.get.parameters[1].in" = "path"
"paths./repos/{owner}/{repo}/issues/comments.get.parameters[1].name" = "repo"
"paths./repos/{owner}/{repo}/issues/comments.get.parameters[1].required" = true
"paths./repos/{owner}/{repo}/issues/comments.get.parameters[1].type" = "string"
"paths./repos/{owner}/{repo}/issues/comments.get.parameters[2].description" = "Ignored without 'sort' parameter."
"paths./repos/{owner}/{repo}/issues/comments.get.parameters[2].in" = "query"
"paths./repos/{owner}/{repo}/issues/comments.get.parameters[2].name" = "direction"
"paths./repos/{owner}/{repo}/issues/comments.get.parameters[2].type" = "string"
"paths./repos/{owner}/{repo}/issues/comments.get.parameters[3].description" = ""
"paths./repos/{owner}/{repo}/issues/comments.get.parameters[3].enum.length" = 2
"paths./repos/{owner}/{repo}/issues/comments.get.parameters[3].enum[0]" = "created"
"paths./repos/{owner}/{repo}/issues/comments.get.parameters[3].enum[1]" = "updated"
"paths./repos/{owner}/{repo}/issues/comments.get.parameters[3].in" = "query"
"paths./repos/{owner}/{repo}/issues/comments.get.parameters[3].name" = "sort"
"paths./repos/{owner}/{repo}/issues/comments.get.parameters[3].type" = "string"
"paths./repos/{owner}/{repo}/issues/comments.get.parameters[4].description" = "The time should be passed in as UTC in the ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ.\nExample: \"2012-10-09T23:39:01Z\".\n"
"paths./repos/{owner}/{repo}/issues/comments.get.parameters[4].in" = "query"
"paths./repos/{owner}/{repo}/issues/comments.get.parameters[4].name" = "since"
"paths./repos/{owner}/{repo}/issues/comments.get.parameters[4].type" = "string"
"paths./repos/{owner}/{repo}/issues/comments.get.parameters[5].description" = "You can check the current version of media type in responses.\n"
"paths./repos/{owner}/{repo}/issues/comments.get.parameters[5].in" = "header"
"paths./repos/{owner}/{repo}/issues/comments.get.parameters[5].name" = "X-GitHub-Media-Type"
"paths./repos/{owner}/{repo}/issues/comments.get.parameters[5].type" = "string"
"paths./repos/{owner}/{repo}/issues/comments.get.parameters[6].description" = "Is used to set specified media type."
"paths./repos/{owner}/{repo}/issues/comments.get.parameters[6].in" = "header"
"paths./repos/{owner}/{repo}/issues/comments.get.parameters[6].name" = "Accept"
"paths./repos/{owner}/{repo}/issues/comments.get.parameters[6].type" = "string"
"paths./repos/{owner}/{repo}/issues/comments.get.parameters[7].in" = "header"
"paths./repos/{owner}/{repo}/issues/comments.get.parameters[7].name" = "X-RateLimit-Limit"
"paths./repos/{owner}/{repo}/issues/comments.get.parameters[7].type" = "integer"
"paths./repos/{owner}/{repo}/issues/comments.get.parameters[8].in" = "header"
"paths./repos/{owner}/{repo}/issues/comments.get.parameters[8].name" = "X-RateLimit-Remaining"
"paths./repos/{owner}/{repo}/issues/comments.get.parameters[8].type" = "integer"
"paths./repos/{owner}/{repo}/issues/comments.get.parameters[9].in" = "header"
"paths./repos/{owner}/{repo}/issues/comments.get.parameters[9].name" = "X-RateLimit-Reset"
"paths./repos/{owner}/{repo}/issues/comments.get.parameters[9].type" = "integer"
"paths./repos/{owner}/{repo}/issues/comments.get.responses.200.description" = "OK"
"paths./repos/{owner}/{repo}/issues/comments.get.responses.200.schema.$ref" = "#/definitions/issuesComments"
"paths./repos/{owner}/{repo}/issues/comments.get.responses.403.description" = "API rate limit exceeded. See http://developer.github.com/v3/#rate-limiting\nfor details.\n"
"paths./repos/{owner}/{repo}/issues/comments/{commentId}.delete.description" = "Delete a comment."
"paths./repos/{owner}/{repo}/issues/comments/{commentId}.delete.parameters.length" = 9
"paths./repos/{owner}/{repo}/issues/comments/{commentId}.delete.parameters[0].description" = "Name of repository owner."
"paths./repos/{owner}/{repo}/issues/comments/{commentId}.delete.parameters[0].in" = "path"
"paths./repos/{owner}/{repo}/issues/comments/{commentId}.delete.parameters[0].name" = "owner"
"paths./repos/{owner}/{repo}/issues/comments/{commentId}.delete.parameters[0].required" = true
"paths./repos/{owner}/{repo}/issues/comments/{commentId}.delete.parameters[0].type" = "string"
"paths./repos/{owner}/{repo}/issues/comments/{commentId}.delete.parameters[1].description" = "Name of repository."
"paths./repos/{owner}/{repo}/issues/comments/{commentId}.delete.parameters[1].in" = "path"
"paths./repos/{owner}/{repo}/issues/comments/{commentId}.delete.parameters[1].name" = "repo"
"paths./repos/{owner}/{repo}/issues/comments/{commentId}.delete.parameters[1].required" = true
"paths./repos/{owner}/{repo}/issues/comments/{commentId}.delete.parameters[1].type" = "string"
"paths./repos/{owner}/{repo}/issues/comments/{commentId}.delete.parameters[2].description" = "ID of comment."
"paths./repos/{owner}/{repo}/issues/comments/{commentId}.delete.parameters[2].in" = "path"
"paths./repos/{owner}/{repo}/issues/comments/{commentId}.delete.parameters[2].name" = "commentId"
"paths./repos/{owner}/{repo}/issues/comments/{commentId}.delete.parameters[2].required" = true
"paths./repos/{owner}/{repo}/issues/comments/{commentId}.delete.parameters[2].type" = "integer"
"paths./repos/{owner}/{repo}/issues/comments/{commentId}.delete.parameters[3].description" = "You can check the current version of media type in responses.\n"
"paths./repos/{owner}/{repo}/issues/comments/{commentId}.delete.parameters[3].in" = "header"
"paths./repos/{owner}/{repo}/issues/comments/{commentId}.delete.parameters[3].name" = "X-GitHub-Media-Type"
"paths./repos/{owner}/{repo}/issues/comments/{commentId}.delete.parameters[3].type" = "string"
"paths./repos/{owner}/{repo}/issues/comments/{commentId}.delete.parameters[4].description" = "Is used to set specified media type."
"paths./repos/{owner}/{repo}/issues/comments/{commentId}.delete.parameters[4].in" = "header"
"paths./repos/{owner}/{repo}/issues/comments/{commentId}.delete.parameters[4].name" = "Accept"
"paths./repos/{owner}/{repo}/issues/comments/{commentId}.delete.parameters[4].type" = "string"
"paths./repos/{owner}/{repo}/issues/comments/{commentId}.delete.parameters[5].in" = "header"
"paths./repos/{owner}/{repo}/issues/comments/{commentId}.delete.parameters[5].name" = "X-RateLimit-Limit"
"paths./repos/{owner}/{repo}/issues/comments/{commentId}.delete.parameters[5].type" = "integer"
"paths./repos/{owner}/{repo}/issues/comments/{commentId}.delete.parameters[6].in" = "header"
"paths./repos/{owner}/{repo}/issues/comments/{commentId}.delete.parameters[6].name" = "X-RateLimit-Remaining"
"paths./repos/{owner}/{repo}/issues/comments/{commentId}.delete.parameters[6].type" = "integer"
"paths./repos/{owner}/{repo}/issues/comments/{commentId}.delete.parameters[7].in" = "header"
"paths./repos/{owner}/{repo}/issues/comments/{commentId}.delete.parameters[7].name" = "X-RateLimit-Reset"
"paths./repos/{owner}/{repo}/issues/comments/{commentId}.delete.parameters[7].type" = "integer"
"paths./repos/{owner}/{repo}/issues/comments/{commentId}.delete.parameters[8].in" = "header"
"paths./repos/{owner}/{repo}/issues/comments/{commentId}.delete.parameters[8].name" = "X-GitHub-Request-Id"
"paths./repos/{owner}/{repo}/issues/comments/{commentId}.delete.parameters[8].type" = "integer"
"paths./repos/{owner}/{repo}/issues/comments/{commentId}.delete.responses.204.description" = "No content.\n"
"paths./repos/{owner}/{repo}/issues/comments/{commentId}.delete.responses.403.description" = "API rate limit exceeded. See http://developer.github.com/v3/#rate-limiting\nfor details.\n"
"paths./repos/{owner}/{repo}/issues/comments/{commentId}.get.description" = "Get a single comment."
"paths./repos/{owner}/{repo}/issues/comments/{commentId}.get.parameters.length" = 9
"paths./repos/{owner}/{repo}/issues/comments/{commentId}.get.parameters[0].description" = "Name of repository owner."
"paths./repos/{owner}/{repo}/issues/comments/{commentId}.get.parameters[0].in" = "path"
"paths./repos/{owner}/{repo}/issues/comments/{commentId}.get.parameters[0].name" = "owner"
"paths./repos/{owner}/{repo}/issues/comments/{commentId}.get.parameters[0].required" = true
"paths./repos/{owner}/{repo}/issues/comments/{commentId}.get.parameters[0].type" = "string"
"paths./repos/{owner}/{repo}/issues/comments/{commentId}.get.parameters[1].description" = "Name of repository."
"paths./repos/{owner}/{repo}/issues/comments/{commentId}.get.parameters[1].in" = "path"
"paths./repos/{owner}/{repo}/issues/comments/{commentId}.get.parameters[1].name" = "repo"
"paths./repos/{owner}/{repo}/issues/comments/{commentId}.get.parameters[1].required" = true
"paths./repos/{owner}/{repo}/issues/comments/{commentId}.get.parameters[1].type" = "string"
"paths./repos/{owner}/{repo}/issues/comments/{commentId}.get.parameters[2].description" = "ID of comment."
"paths./repos/{owner}/{repo}/issues/comments/{commentId}.get.parameters[2].in" = "path"
"paths./repos/{owner}/{repo}/issues/comments/{commentId}.get.parameters[2].name" = "commentId"
"paths./repos/{owner}/{repo}/issues/comments/{commentId}.get.parameters[2].required" = true
"paths./repos/{owner}/{repo}/issues/comments/{commentId}.get.parameters[2].type" = "integer"
"paths./repos/{owner}/{repo}/issues/comments/{commentId}.get.parameters[3].description" = "You can check the current version of media type in responses.\n"
"paths./repos/{owner}/{repo}/issues/comments/{commentId}.get.parameters[3].in" = "header"
"paths./repos/{owner}/{repo}/issues/comments/{commentId}.get.parameters[3].name" = "X-GitHub-Media-Type"
"paths./repos/{owner}/{repo}/issues/comments/{commentId}.get.parameters[3].type" = "string"
"paths./repos/{owner}/{repo}/issues/comments/{commentId}.get.parameters[4].description" = "Is used to set specified media type."
"paths./repos/{owner}/{repo}/issues/comments/{commentId}.get.parameters[4].in" = "header"
"paths./repos/{owner}/{repo}/issues/comments/{commentId}.get.parameters[4].name" = "Accept"
"paths./repos/{owner}/{repo}/issues/comments/{commentId}.get.parameters[4].type" = "string"
"paths./repos/{owner}/{repo}/issues/comments/{commentId}.get.parameters[5].in" = "header"
"paths./repos/{owner}/{repo}/issues/comments/{commentId}.get.parameters[5].name" = "X-RateLimit-Limit"
"paths./repos/{owner}/{repo}/issues/comments/{commentId}.get.parameters[5].type" = "integer"
"paths./repos/{owner}/{repo}/issues/comments/{commentId}.get.parameters[6].in" = "header"
"paths./repos/{owner}/{repo}/issues/comments/{commentId}.get.parameters[6].name" = "X-RateLimit-Remaining"
"paths./repos/{owner}/{repo}/issues/comments/{commentId}.get.parameters[6].type" = "integer"
"paths./repos/{owner}/{repo}/issues/comments/{commentId}.get.parameters[7].in" = "header"
"paths./repos/{owner}/{repo}/issues/comments/{commentId}.get.parameters[7].name" = "X-RateLimit-Reset"
"paths./repos/{owner}/{repo}/issues/comments/{commentId}.get.parameters[7].type" = "integer"
"paths./repos/{owner}/{repo}/issues/comments/{commentId}.get.parameters[8].in" = "header"
"paths./repos/{owner}/{repo}/issues/comments/{commentId}.get.parameters[8].name" = "X-GitHub-Request-Id"
"paths./repos/{owner}/{repo}/issues/comments/{commentId}.get.parameters[8].type" = "integer"
"paths./repos/{owner}/{repo}/issues/comments/{commentId}.get.responses.200.description" = "OK"
"paths./repos/{owner}/{repo}/issues/comments/{commentId}.get.responses.200.schema.$ref" = "#/definitions/issuesComment"
"paths./repos/{owner}/{repo}/issues/comments/{commentId}.get.responses.403.description" = "API rate limit exceeded. See http://developer.github.com/v3/#rate-limiting\nfor details.\n"
"paths./repos/{owner}/{repo}/issues/comments/{commentId}.patch.description" = "Edit a comment."
"paths./repos/{owner}/{repo}/issues/comments/{commentId}.patch.parameters.length" = 10
"paths./repos/{owner}/{repo}/issues/comments/{commentId}.patch.parameters[0].description" = "Name of repository owner."
"paths./repos/{owner}/{repo}/issues/comments/{commentId}.patch.parameters[0].in" = "path"
"paths./repos/{owner}/{repo}/issues/comments/{commentId}.patch.parameters[0].name" = "owner"
"paths./repos/{owner}/{repo}/issues/comments/{commentId}.patch.parameters[0].required" = true
"paths./repos/{owner}/{repo}/issues/comments/{commentId}.patch.parameters[0].type" = "string"
"paths./repos/{owner}/{repo}/issues/comments/{commentId}.patch.parameters[1].description" = "Name of repository."
"paths./repos/{owner}/{repo}/issues/comments/{commentId}.patch.parameters[1].in" = "path"
"paths./repos/{owner}/{repo}/issues/comments/{commentId}.patch.parameters[1].name" = "repo"
"paths./repos/{owner}/{repo}/issues/comments/{commentId}.patch.parameters[1].required" = true
"paths./repos/{owner}/{repo}/issues/comments/{commentId}.patch.parameters[1].type" = "string"
"paths./repos/{owner}/{repo}/issues/comments/{commentId}.patch.parameters[2].description" = "ID of comment."
"paths./repos/{owner}/{repo}/issues/comments/{commentId}.patch.parameters[2].in" = "path"
"paths./repos/{owner}/{repo}/issues/comments/{commentId}.patch.parameters[2].name" = "commentId"
"paths./repos/{owner}/{repo}/issues/comments/{commentId}.patch.parameters[2].required" = true
"paths./repos/{owner}/{repo}/issues/comments/{commentId}.patch.parameters[2].type" = "integer"
"paths./repos/{owner}/{repo}/issues/comments/{commentId}.patch.parameters[3].description" = "You can check the current version of media type in responses.\n"
"paths./repos/{owner}/{repo}/issues/comments/{commentId}.patch.parameters[3].in" = "header"
"paths./repos/{owner}/{repo}/issues/comments/{commentId}.patch.parameters[3].name" = "X-GitHub-Media-Type"
"paths./repos/{owner}/{repo}/issues/comments/{commentId}.patch.parameters[3].type" = "string"
"paths./repos/{owner}/{repo}/issues/comments/{commentId}.patch.parameters[4].description" = "Is used to set specified media type."
"paths./repos/{owner}/{repo}/issues/comments/{commentId}.patch.parameters[4].in" = "header"
"paths./repos/{owner}/{repo}/issues/comments/{commentId}.patch.parameters[4].name" = "Accept"
"paths./repos/{owner}/{repo}/issues/comments/{commentId}.patch.parameters[4].type" = "string"
"paths./repos/{owner}/{repo}/issues/comments/{commentId}.patch.parameters[5].in" = "header"
"paths./repos/{owner}/{repo}/issues/comments/{commentId}.patch.parameters[5].name" = "X-RateLimit-Limit"
"paths./repos/{owner}/{repo}/issues/comments/{commentId}.patch.parameters[5].type" = "integer"
"paths./repos/{owner}/{repo}/issues/comments/{commentId}.patch.parameters[6].in" = "header"
"paths./repos/{owner}/{repo}/issues/comments/{commentId}.patch.parameters[6].name" = "X-RateLimit-Remaining"
"paths./repos/{owner}/{repo}/issues/comments/{commentId}.patch.parameters[6].type" = "integer"
"paths./repos/{owner}/{repo}/issues/comments/{commentId}.patch.parameters[7].in" = "header"
"paths./repos/{owner}/{repo}/issues/comments/{commentId}.patch.parameters[7].name" = "X-RateLimit-Reset"
"paths./repos/{owner}/{repo}/issues/comments/{commentId}.patch.parameters[7].type" = "integer"
"paths./repos/{owner}/{repo}/issues/comments/{commentId}.patch.parameters[8].in" = "header"
"paths./repos/{owner}/{repo}/issues/comments/{commentId}.patch.parameters[8].name" = "X-GitHub-Request-Id"
"paths./repos/{owner}/{repo}/issues/comments/{commentId}.patch.parameters[8].type" = "integer"
"paths./repos/{owner}/{repo}/issues/comments/{commentId}.patch.parameters[9].in" = "body"
"paths./repos/{owner}/{repo}/issues/comments/{commentId}.patch.parameters[9].name" = "body"
"paths./repos/{owner}/{repo}/issues/comments/{commentId}.patch.parameters[9].required" = true
"paths./repos/{owner}/{repo}/issues/comments/{commentId}.patch.parameters[9].schema.$ref" = "#/definitions/commentBody"
"paths./repos/{owner}/{repo}/issues/comments/{commentId}.patch.responses.200.description" = "OK"
"paths./repos/{owner}/{repo}/issues/comments/{commentId}.patch.responses.200.schema.$ref" = "#/definitions/issuesComment"
"paths./repos/{owner}/{repo}/issues/comments/{commentId}.patch.responses.403.description" = "API rate limit exceeded. See http://developer.github.com/v3/#rate-limiting\nfor details.\n"
"paths./repos/{owner}/{repo}/issues/events.get.description" = "List issue events for a repository."
"paths./repos/{owner}/{repo}/issues/events.get.parameters.length" = 8
"paths./repos/{owner}/{repo}/issues/events.get.parameters[0].description" = "Name of repository owner."
"paths./repos/{owner}/{repo}/issues/events.get.parameters[0].in" = "path"
"paths./repos/{owner}/{repo}/issues/events.get.parameters[0].name" = "owner"
"paths./repos/{owner}/{repo}/issues/events.get.parameters[0].required" = true
"paths./repos/{owner}/{repo}/issues/events.get.parameters[0].type" = "string"
"paths./repos/{owner}/{repo}/issues/events.get.parameters[1].description" = "Name of repository."
"paths./repos/{owner}/{repo}/issues/events.get.parameters[1].in" = "path"
"paths./repos/{owner}/{repo}/issues/events.get.parameters[1].name" = "repo"
"paths./repos/{owner}/{repo}/issues/events.get.parameters[1].required" = true
"paths./repos/{owner}/{repo}/issues/events.get.parameters[1].type" = "string"
"paths./repos/{owner}/{repo}/issues/events.get.parameters[2].description" = "You can check the current version of media type in responses.\n"
"paths./repos/{owner}/{repo}/issues/events.get.parameters[2].in" = "header"
"paths./repos/{owner}/{repo}/issues/events.get.parameters[2].name" = "X-GitHub-Media-Type"
"paths./repos/{owner}/{repo}/issues/events.get.parameters[2].type" = "string"
"paths./repos/{owner}/{repo}/issues/events.get.parameters[3].description" = "Is used to set specified media type."
"paths./repos/{owner}/{repo}/issues/events.get.parameters[3].in" = "header"
"paths./repos/{owner}/{repo}/issues/events.get.parameters[3].name" = "Accept"
"paths./repos/{owner}/{repo}/issues/events.get.parameters[3].type" = "string"
"paths./repos/{owner}/{repo}/issues/events.get.parameters[4].in" = "header"
"paths./repos/{owner}/{repo}/issues/events.get.parameters[4].name" = "X-RateLimit-Limit"
"paths./repos/{owner}/{repo}/issues/events.get.parameters[4].type" = "integer"
"paths./repos/{owner}/{repo}/issues/events.get.parameters[5].in" = "header"
"paths./repos/{owner}/{repo}/issues/events.get.parameters[5].name" = "X-RateLimit-Remaining"
"paths./repos/{owner}/{repo}/issues/events.get.parameters[5].type" = "integer"
"paths./repos/{owner}/{repo}/issues/events.get.parameters[6].in" = "header"
"paths./repos/{owner}/{repo}/issues/events.get.parameters[6].name" = "X-RateLimit-Reset"
"paths./repos/{owner}/{repo}/issues/events.get.parameters[6].type" = "integer"
"paths./repos/{owner}/{repo}/issues/events.get.parameters[7].in" = "header"
"paths./repos/{owner}/{repo}/issues/events.get.parameters[7].name" = "X-GitHub-Request-Id"
"paths./repos/{owner}/{repo}/issues/events.get.parameters[7].type" = "integer"
"paths./repos/{owner}/{repo}/issues/events.get.responses.200.description" = "OK"
"paths./repos/{owner}/{repo}/issues/events.get.responses.200.schema.$ref" = "#/definitions/events"
"paths./repos/{owner}/{repo}/issues/events.get.responses.403.description" = "API rate limit exceeded. See http://developer.github.com/v3/#rate-limiting\nfor details.\n"
"paths./repos/{owner}/{repo}/issues/events/{eventId}.get.description" = "Get a single event."
"paths./repos/{owner}/{repo}/issues/events/{eventId}.get.parameters.length" = 9
"paths./repos/{owner}/{repo}/issues/events/{eventId}.get.parameters[0].description" = "Name of repository owner."
"paths./repos/{owner}/{repo}/issues/events/{eventId}.get.parameters[0].in" = "path"
"paths./repos/{owner}/{repo}/issues/events/{eventId}.get.parameters[0].name" = "owner"
"paths./repos/{owner}/{repo}/issues/events/{eventId}.get.parameters[0].required" = true
"paths./repos/{owner}/{repo}/issues/events/{eventId}.get.parameters[0].type" = "string"
"paths./repos/{owner}/{repo}/issues/events/{eventId}.get.parameters[1].description" = "Name of repository."
"paths./repos/{owner}/{repo}/issues/events/{eventId}.get.parameters[1].in" = "path"
"paths./repos/{owner}/{repo}/issues/events/{eventId}.get.parameters[1].name" = "repo"
"paths./repos/{owner}/{repo}/issues/events/{eventId}.get.parameters[1].required" = true
"paths./repos/{owner}/{repo}/issues/events/{eventId}.get.parameters[1].type" = "string"
"paths./repos/{owner}/{repo}/issues/events/{eventId}.get.parameters[2].description" = "Id of the event."
"paths./repos/{owner}/{repo}/issues/events/{eventId}.get.parameters[2].in" = "path"
"paths./repos/{owner}/{repo}/issues/events/{eventId}.get.parameters[2].name" = "eventId"
"paths./repos/{owner}/{repo}/issues/events/{eventId}.get.parameters[2].required" = true
"paths./repos/{owner}/{repo}/issues/events/{eventId}.get.parameters[2].type" = "integer"
"paths./repos/{owner}/{repo}/issues/events/{eventId}.get.parameters[3].description" = "You can check the current version of media type in responses.\n"
"paths./repos/{owner}/{repo}/issues/events/{eventId}.get.parameters[3].in" = "header"
"paths./repos/{owner}/{repo}/issues/events/{eventId}.get.parameters[3].name" = "X-GitHub-Media-Type"
"paths./repos/{owner}/{repo}/issues/events/{eventId}.get.parameters[3].type" = "string"
"paths./repos/{owner}/{repo}/issues/events/{eventId}.get.parameters[4].description" = "Is used to set specified media type."
"paths./repos/{owner}/{repo}/issues/events/{eventId}.get.parameters[4].in" = "header"
"paths./repos/{owner}/{repo}/issues/events/{eventId}.get.parameters[4].name" = "Accept"
"paths./repos/{owner}/{repo}/issues/events/{eventId}.get.parameters[4].type" = "string"
"paths./repos/{owner}/{repo}/issues/events/{eventId}.get.parameters[5].in" = "header"
"paths./repos/{owner}/{repo}/issues/events/{eventId}.get.parameters[5].name" = "X-RateLimit-Limit"
"paths./repos/{owner}/{repo}/issues/events/{eventId}.get.parameters[5].type" = "integer"
"paths./repos/{owner}/{repo}/issues/events/{eventId}.get.parameters[6].in" = "header"
"paths./repos/{owner}/{repo}/issues/events/{eventId}.get.parameters[6].name" = "X-RateLimit-Remaining"
"paths./repos/{owner}/{repo}/issues/events/{eventId}.get.parameters[6].type" = "integer"
"paths./repos/{owner}/{repo}/issues/events/{eventId}.get.parameters[7].in" = "header"
"paths./repos/{owner}/{repo}/issues/events/{eventId}.get.parameters[7].name" = "X-RateLimit-Reset"
"paths./repos/{owner}/{repo}/issues/events/{eventId}.get.parameters[7].type" = "integer"
"paths./repos/{owner}/{repo}/issues/events/{eventId}.get.parameters[8].in" = "header"
"paths./repos/{owner}/{repo}/issues/events/{eventId}.get.parameters[8].name" = "X-GitHub-Request-Id"
"paths./repos/{owner}/{repo}/issues/events/{eventId}.get.parameters[8].type" = "integer"
"paths./repos/{owner}/{repo}/issues/events/{eventId}.get.responses.200.description" = "OK"
"paths./repos/{owner}/{repo}/issues/events/{eventId}.get.responses.200.schema.$ref" = "#/definitions/event"
"paths./repos/{owner}/{repo}/issues/events/{eventId}.get.responses.403.description" = "API rate limit exceeded. See http://developer.github.com/v3/#rate-limiting\nfor details.\n"
"paths./repos/{owner}/{repo}/issues/{number}.get.description" = "Get a single issue"
"paths./repos/{owner}/{repo}/issues/{number}.get.parameters.length" = 9
"paths./repos/{owner}/{repo}/issues/{number}.get.parameters[0].description" = "Name of repository owner."
"paths./repos/{owner}/{repo}/issues/{number}.get.parameters[0].in" = "path"
"paths./repos/{owner}/{repo}/issues/{number}.get.parameters[0].name" = "owner"
"paths./repos/{owner}/{repo}/issues/{number}.get.parameters[0].required" = true
"paths./repos/{owner}/{repo}/issues/{number}.get.parameters[0].type" = "string"
"paths./repos/{owner}/{repo}/issues/{number}.get.parameters[1].description" = "Name of repository."
"paths./repos/{owner}/{repo}/issues/{number}.get.parameters[1].in" = "path"
"paths./repos/{owner}/{repo}/issues/{number}.get.parameters[1].name" = "repo"
"paths./repos/{owner}/{repo}/issues/{number}.get.parameters[1].required" = true
"paths./repos/{owner}/{repo}/issues/{number}.get.parameters[1].type" = "string"
"paths./repos/{owner}/{repo}/issues/{number}.get.parameters[2].description" = "Number of issue."
"paths./repos/{owner}/{repo}/issues/{number}.get.parameters[2].in" = "path"
"paths./repos/{owner}/{repo}/issues/{number}.get.parameters[2].name" = "number"
"paths./repos/{owner}/{repo}/issues/{number}.get.parameters[2].required" = true
"paths./repos/{owner}/{repo}/issues/{number}.get.parameters[2].type" = "integer"
"paths./repos/{owner}/{repo}/issues/{number}.get.parameters[3].description" = "You can check the current version of media type in responses.\n"
"paths./repos/{owner}/{repo}/issues/{number}.get.parameters[3].in" = "header"
"paths./repos/{owner}/{repo}/issues/{number}.get.parameters[3].name" = "X-GitHub-Media-Type"
"paths./repos/{owner}/{repo}/issues/{number}.get.parameters[3].type" = "string"
"paths./repos/{owner}/{repo}/issues/{number}.get.parameters[4].description" = "Is used to set specified media type."
"paths./repos/{owner}/{repo}/issues/{number}.get.parameters[4].in" = "header"
"paths./repos/{owner}/{repo}/issues/{number}.get.parameters[4].name" = "Accept"
"paths./repos/{owner}/{repo}/issues/{number}.get.parameters[4].type" = "string"
"paths./repos/{owner}/{repo}/issues/{number}.get.parameters[5].in" = "header"
"paths./repos/{owner}/{repo}/issues/{number}.get.parameters[5].name" = "X-RateLimit-Limit"
"paths./repos/{owner}/{repo}/issues/{number}.get.parameters[5].type" = "integer"
"paths./repos/{owner}/{repo}/issues/{number}.get.parameters[6].in" = "header"
"paths./repos/{owner}/{repo}/issues/{number}.get.parameters[6].name" = "X-RateLimit-Remaining"
"paths./repos/{owner}/{repo}/issues/{number}.get.parameters[6].type" = "integer"
"paths./repos/{owner}/{repo}/issues/{number}.get.parameters[7].in" = "header"
"paths./repos/{owner}/{repo}/issues/{number}.get.parameters[7].name" = "X-RateLimit-Reset"
"paths./repos/{owner}/{repo}/issues/{number}.get.parameters[7].type" = "integer"
"paths./repos/{owner}/{repo}/issues/{number}.get.parameters[8].in" = "header"
"paths./repos/{owner}/{repo}/issues/{number}.get.parameters[8].name" = "X-GitHub-Request-Id"
"paths./repos/{owner}/{repo}/issues/{number}.get.parameters[8].type" = "integer"
"paths./repos/{owner}/{repo}/issues/{number}.get.responses.200.description" = "OK"
"paths./repos/{owner}/{repo}/issues/{number}.get.responses.200.schema.$ref" = "#/definitions/issue"
"paths./repos/{owner}/{repo}/issues/{number}.get.responses.403.description" = "API rate limit exceeded. See http://developer.github.com/v3/#rate-limiting\nfor details.\n"
"paths./repos/{owner}/{repo}/issues/{number}.patch.description" = "Edit an issue.\nIssue owners and users with push access can edit an issue.\n"
"paths./repos/{owner}/{repo}/issues/{number}.patch.parameters.length" = 10
"paths./repos/{owner}/{repo}/issues/{number}.patch.parameters[0].description" = "Name of repository owner."
"paths./repos/{owner}/{repo}/issues/{number}.patch.parameters[0].in" = "path"
"paths./repos/{owner}/{repo}/issues/{number}.patch.parameters[0].name" = "owner"
"paths./repos/{owner}/{repo}/issues/{number}.patch.parameters[0].required" = true
"paths./repos/{owner}/{repo}/issues/{number}.patch.parameters[0].type" = "string"
"paths./repos/{owner}/{repo}/issues/{number}.patch.parameters[1].description" = "Name of repository."
"paths./repos/{owner}/{repo}/issues/{number}.patch.parameters[1].in" = "path"
"paths./repos/{owner}/{repo}/issues/{number}.patch.parameters[1].name" = "repo"
"paths./repos/{owner}/{repo}/issues/{number}.patch.parameters[1].required" = true
"paths./repos/{owner}/{repo}/issues/{number}.patch.parameters[1].type" = "string"
"paths./repos/{owner}/{repo}/issues/{number}.patch.parameters[2].description" = "Number of issue."
"paths./repos/{owner}/{repo}/issues/{number}.patch.parameters[2].in" = "path"
"paths./repos/{owner}/{repo}/issues/{number}.patch.parameters[2].name" = "number"
"paths./repos/{owner}/{repo}/issues/{number}.patch.parameters[2].required" = true
"paths./repos/{owner}/{repo}/issues/{number}.patch.parameters[2].type" = "integer"
"paths./repos/{owner}/{repo}/issues/{number}.patch.parameters[3].description" = "You can check the current version of media type in responses.\n"
"paths./repos/{owner}/{repo}/issues/{number}.patch.parameters[3].in" = "header"
"paths./repos/{owner}/{repo}/issues/{number}.patch.parameters[3].name" = "X-GitHub-Media-Type"
"paths./repos/{owner}/{repo}/issues/{number}.patch.parameters[3].type" = "string"
"paths./repos/{owner}/{repo}/issues/{number}.patch.parameters[4].description" = "Is used to set specified media type."
"paths./repos/{owner}/{repo}/issues/{number}.patch.parameters[4].in" = "header"
"paths./repos/{owner}/{repo}/issues/{number}.patch.parameters[4].name" = "Accept"
"paths./repos/{owner}/{repo}/issues/{number}.patch.parameters[4].type" = "string"
"paths./repos/{owner}/{repo}/issues/{number}.patch.parameters[5].in" = "header"
"paths./repos/{owner}/{repo}/issues/{number}.patch.parameters[5].name" = "X-RateLimit-Limit"
"paths./repos/{owner}/{repo}/issues/{number}.patch.parameters[5].type" = "integer"
"paths./repos/{owner}/{repo}/issues/{number}.patch.parameters[6].in" = "header"
"paths./repos/{owner}/{repo}/issues/{number}.patch.parameters[6].name" = "X-RateLimit-Remaining"
"paths./repos/{owner}/{repo}/issues/{number}.patch.parameters[6].type" = "integer"
"paths./repos/{owner}/{repo}/issues/{number}.patch.parameters[7].in" = "header"
"paths./repos/{owner}/{repo}/issues/{number}.patch.parameters[7].name" = "X-RateLimit-Reset"
"paths./repos/{owner}/{repo}/issues/{number}.patch.parameters[7].type" = "integer"
"paths./repos/{owner}/{repo}/issues/{number}.patch.parameters[8].in" = "header"
"paths./repos/{owner}/{repo}/issues/{number}.patch.parameters[8].name" = "X-GitHub-Request-Id"
"paths./repos/{owner}/{repo}/issues/{number}.patch.parameters[8].type" = "integer"
"paths./repos/{owner}/{repo}/issues/{number}.patch.parameters[9].in" = "body"
"paths./repos/{owner}/{repo}/issues/{number}.patch.parameters[9].name" = "body"
"paths./repos/{owner}/{repo}/issues/{number}.patch.parameters[9].required" = true
"paths./repos/{owner}/{repo}/issues/{number}.patch.parameters[9].schema.$ref" = "#/definitions/issue"
"paths./repos/{owner}/{repo}/issues/{number}.patch.responses.200.description" = "OK"
"paths./repos/{owner}/{repo}/issues/{number}.patch.responses.200.schema.$ref" = "#/definitions/issue"
"paths./repos/{owner}/{repo}/issues/{number}.patch.responses.403.description" = "API rate limit exceeded. See http://developer.github.com/v3/#rate-limiting\nfor details.\n"
"paths./repos/{owner}/{repo}/issues/{number}/comments.get.description" = "List comments on an issue."
"paths./repos/{owner}/{repo}/issues/{number}/comments.get.parameters.length" = 9
"paths./repos/{owner}/{repo}/issues/{number}/comments.get.parameters[0].description" = "Name of repository owner."
"paths./repos/{owner}/{repo}/issues/{number}/comments.get.parameters[0].in" = "path"
"paths./repos/{owner}/{repo}/issues/{number}/comments.get.parameters[0].name" = "owner"
"paths./repos/{owner}/{repo}/issues/{number}/comments.get.parameters[0].required" = true
"paths./repos/{owner}/{repo}/issues/{number}/comments.get.parameters[0].type" = "string"
"paths./repos/{owner}/{repo}/issues/{number}/comments.get.parameters[1].description" = "Name of repository."
"paths./repos/{owner}/{repo}/issues/{number}/comments.get.parameters[1].in" = "path"
"paths./repos/{owner}/{repo}/issues/{number}/comments.get.parameters[1].name" = "repo"
"paths./repos/{owner}/{repo}/issues/{number}/comments.get.parameters[1].required" = true
"paths./repos/{owner}/{repo}/issues/{number}/comments.get.parameters[1].type" = "string"
"paths./repos/{owner}/{repo}/issues/{number}/comments.get.parameters[2].description" = "Number of issue."
"paths./repos/{owner}/{repo}/issues/{number}/comments.get.parameters[2].in" = "path"
"paths./repos/{owner}/{repo}/issues/{number}/comments.get.parameters[2].name" = "number"
"paths./repos/{owner}/{repo}/issues/{number}/comments.get.parameters[2].required" = true
"paths./repos/{owner}/{repo}/issues/{number}/comments.get.parameters[2].type" = "integer"
"paths./repos/{owner}/{repo}/issues/{number}/comments.get.parameters[3].description" = "You can check the current version of media type in responses.\n"
"paths./repos/{owner}/{repo}/issues/{number}/comments.get.parameters[3].in" = "header"
"paths./repos/{owner}/{repo}/issues/{number}/comments.get.parameters[3].name" = "X-GitHub-Media-Type"
"paths./repos/{owner}/{repo}/issues/{number}/comments.get.parameters[3].type" = "string"
"paths./repos/{owner}/{repo}/issues/{number}/comments.get.parameters[4].description" = "Is used to set specified media type."
"paths./repos/{owner}/{repo}/issues/{number}/comments.get.parameters[4].in" = "header"
"paths./repos/{owner}/{repo}/issues/{number}/comments.get.parameters[4].name" = "Accept"
"paths./repos/{owner}/{repo}/issues/{number}/comments.get.parameters[4].type" = "string"
"paths./repos/{owner}/{repo}/issues/{number}/comments.get.parameters[5].in" = "header"
"paths./repos/{owner}/{repo}/issues/{number}/comments.get.parameters[5].name" = "X-RateLimit-Limit"
"paths./repos/{owner}/{repo}/issues/{number}/comments.get.parameters[5].type" = "integer"
"paths./repos/{owner}/{repo}/issues/{number}/comments.get.parameters[6].in" = "header"
"paths./repos/{owner}/{repo}/issues/{number}/comments.get.parameters[6].name" = "X-RateLimit-Remaining"
"paths./repos/{owner}/{repo}/issues/{number}/comments.get.parameters[6].type" = "integer"
"paths./repos/{owner}/{repo}/issues/{number}/comments.get.parameters[7].in" = "header"
"paths./repos/{owner}/{repo}/issues/{number}/comments.get.parameters[7].name" = "X-RateLimit-Reset"
"paths./repos/{owner}/{repo}/issues/{number}/comments.get.parameters[7].type" = "integer"
"paths./repos/{owner}/{repo}/issues/{number}/comments.get.parameters[8].in" = "header"
"paths./repos/{owner}/{repo}/issues/{number}/comments.get.parameters[8].name" = "X-GitHub-Request-Id"
"paths./repos/{owner}/{repo}/issues/{number}/comments.get.parameters[8].type" = "integer"
"paths./repos/{owner}/{repo}/issues/{number}/comments.get.responses.200.description" = "OK"
"paths./repos/{owner}/{repo}/issues/{number}/comments.get.responses.200.schema.$ref" = "#/definitions/issuesComments"
"paths./repos/{owner}/{repo}/issues/{number}/comments.get.responses.403.description" = "API rate limit exceeded. See http://developer.github.com/v3/#rate-limiting\nfor details.\n"
"paths./repos/{owner}/{repo}/issues/{number}/comments.post.description" = "Create a comment."
"paths./repos/{owner}/{repo}/issues/{number}/comments.post.parameters.length" = 10
"paths./repos/{owner}/{repo}/issues/{number}/comments.post.parameters[0].description" = "Name of repository owner."
"paths./repos/{owner}/{repo}/issues/{number}/comments.post.parameters[0].in" = "path"
"paths./repos/{owner}/{repo}/issues/{number}/comments.post.parameters[0].name" = "owner"
"paths./repos/{owner}/{repo}/issues/{number}/comments.post.parameters[0].required" = true
"paths./repos/{owner}/{repo}/issues/{number}/comments.post.parameters[0].type" = "string"
"paths./repos/{owner}/{repo}/issues/{number}/comments.post.parameters[1].description" = "Name of repository."
"paths./repos/{owner}/{repo}/issues/{number}/comments.post.parameters[1].in" = "path"
"paths./repos/{owner}/{repo}/issues/{number}/comments.post.parameters[1].name" = "repo"
"paths./repos/{owner}/{repo}/issues/{number}/comments.post.parameters[1].required" = true
"paths./repos/{owner}/{repo}/issues/{number}/comments.post.parameters[1].type" = "string"
"paths./repos/{owner}/{repo}/issues/{number}/comments.post.parameters[2].description" = "Number of issue."
"paths./repos/{owner}/{repo}/issues/{number}/comments.post.parameters[2].in" = "path"
"paths./repos/{owner}/{repo}/issues/{number}/comments.post.parameters[2].name" = "number"
"paths./repos/{owner}/{repo}/issues/{number}/comments.post.parameters[2].required" = true
"paths./repos/{owner}/{repo}/issues/{number}/comments.post.parameters[2].type" = "integer"
"paths./repos/{owner}/{repo}/issues/{number}/comments.post.parameters[3].description" = "You can check the current version of media type in responses.\n"
"paths./repos/{owner}/{repo}/issues/{number}/comments.post.parameters[3].in" = "header"
"paths./repos/{owner}/{repo}/issues/{number}/comments.post.parameters[3].name" = "X-GitHub-Media-Type"
"paths./repos/{owner}/{repo}/issues/{number}/comments.post.parameters[3].type" = "string"
"paths./repos/{owner}/{repo}/issues/{number}/comments.post.parameters[4].description" = "Is used to set specified media type."
"paths./repos/{owner}/{repo}/issues/{number}/comments.post.parameters[4].in" = "header"
"paths./repos/{owner}/{repo}/issues/{number}/comments.post.parameters[4].name" = "Accept"
"paths./repos/{owner}/{repo}/issues/{number}/comments.post.parameters[4].type" = "string"
"paths./repos/{owner}/{repo}/issues/{number}/comments.post.parameters[5].in" = "header"
"paths./repos/{owner}/{repo}/issues/{number}/comments.post.parameters[5].name" = "X-RateLimit-Limit"
"paths./repos/{owner}/{repo}/issues/{number}/comments.post.parameters[5].type" = "integer"
"paths./repos/{owner}/{repo}/issues/{number}/comments.post.parameters[6].in" = "header"
"paths./repos/{owner}/{repo}/issues/{number}/comments.post.parameters[6].name" = "X-RateLimit-Remaining"
"paths./repos/{owner}/{repo}/issues/{number}/comments.post.parameters[6].type" = "integer"
"paths./repos/{owner}/{repo}/issues/{number}/comments.post.parameters[7].in" = "header"
"paths./repos/{owner}/{repo}/issues/{number}/comments.post.parameters[7].name" = "X-RateLimit-Reset"
"paths./repos/{owner}/{repo}/issues/{number}/comments.post.parameters[7].type" = "integer"
"paths./repos/{owner}/{repo}/issues/{number}/comments.post.parameters[8].in" = "header"
"paths./repos/{owner}/{repo}/issues/{number}/comments.post.parameters[8].name" = "X-GitHub-Request-Id"
"paths./repos/{owner}/{repo}/issues/{number}/comments.post.parameters[8].type" = "integer"
"paths./repos/{owner}/{repo}/issues/{number}/comments.post.parameters[9].in" = "body"
"paths./repos/{owner}/{repo}/issues/{number}/comments.post.parameters[9].name" = "body"
"paths./repos/{owner}/{repo}/issues/{number}/comments.post.parameters[9].required" = true
"paths./repos/{owner}/{repo}/issues/{number}/comments.post.parameters[9].schema.$ref" = "#/definitions/commentBody"
"paths./repos/{owner}/{repo}/issues/{number}/comments.post.responses.201.description" = "Created"
"paths./repos/{owner}/{repo}/issues/{number}/comments.post.responses.201.schema.$ref" = "#/definitions/issuesComment"
"paths./repos/{owner}/{repo}/issues/{number}/comments.post.responses.403.description" = "API rate limit exceeded. See http://developer.github.com/v3/#rate-limiting\nfor details.\n"
"paths./repos/{owner}/{repo}/issues/{number}/events.get.description" = "List events for an issue."
"paths./repos/{owner}/{repo}/issues/{number}/events.get.parameters.length" = 9
"paths./repos/{owner}/{repo}/issues/{number}/events.get.parameters[0].description" = "Name of repository owner."
"paths./repos/{owner}/{repo}/issues/{number}/events.get.parameters[0].in" = "path"
"paths./repos/{owner}/{repo}/issues/{number}/events.get.parameters[0].name" = "owner"
"paths./repos/{owner}/{repo}/issues/{number}/events.get.parameters[0].required" = true
"paths./repos/{owner}/{repo}/issues/{number}/events.get.parameters[0].type" = "string"
"paths./repos/{owner}/{repo}/issues/{number}/events.get.parameters[1].description" = "Name of repository."
"paths./repos/{owner}/{repo}/issues/{number}/events.get.parameters[1].in" = "path"
"paths./repos/{owner}/{repo}/issues/{number}/events.get.parameters[1].name" = "repo"
"paths./repos/{owner}/{repo}/issues/{number}/events.get.parameters[1].required" = true
"paths./repos/{owner}/{repo}/issues/{number}/events.get.parameters[1].type" = "string"
"paths./repos/{owner}/{repo}/issues/{number}/events.get.parameters[2].description" = "Number of issue."
"paths./repos/{owner}/{repo}/issues/{number}/events.get.parameters[2].in" = "path"
"paths./repos/{owner}/{repo}/issues/{number}/events.get.parameters[2].name" = "number"
"paths./repos/{owner}/{repo}/issues/{number}/events.get.parameters[2].required" = true
"paths./repos/{owner}/{repo}/issues/{number}/events.get.parameters[2].type" = "integer"
"paths./repos/{owner}/{repo}/issues/{number}/events.get.parameters[3].description" = "You can check the current version of media type in responses.\n"
"paths./repos/{owner}/{repo}/issues/{number}/events.get.parameters[3].in" = "header"
"paths./repos/{owner}/{repo}/issues/{number}/events.get.parameters[3].name" = "X-GitHub-Media-Type"
"paths./repos/{owner}/{repo}/issues/{number}/events.get.parameters[3].type" = "string"
"paths./repos/{owner}/{repo}/issues/{number}/events.get.parameters[4].description" = "Is used to set specified media type."
"paths./repos/{owner}/{repo}/issues/{number}/events.get.parameters[4].in" = "header"
"paths./repos/{owner}/{repo}/issues/{number}/events.get.parameters[4].name" = "Accept"
"paths./repos/{owner}/{repo}/issues/{number}/events.get.parameters[4].type" = "string"
"paths./repos/{owner}/{repo}/issues/{number}/events.get.parameters[5].in" = "header"
"paths./repos/{owner}/{repo}/issues/{number}/events.get.parameters[5].name" = "X-RateLimit-Limit"
"paths./repos/{owner}/{repo}/issues/{number}/events.get.parameters[5].type" = "integer"
"paths./repos/{owner}/{repo}/issues/{number}/events.get.parameters[6].in" = "header"
"paths./repos/{owner}/{repo}/issues/{number}/events.get.parameters[6].name" = "X-RateLimit-Remaining"
"paths./repos/{owner}/{repo}/issues/{number}/events.get.parameters[6].type" = "integer"
"paths./repos/{owner}/{repo}/issues/{number}/events.get.parameters[7].in" = "header"
"paths./repos/{owner}/{repo}/issues/{number}/events.get.parameters[7].name" = "X-RateLimit-Reset"
"paths./repos/{owner}/{repo}/issues/{number}/events.get.parameters[7].type" = "integer"
"paths./repos/{owner}/{repo}/issues/{number}/events.get.parameters[8].in" = "header"
"paths./repos/{owner}/{repo}/issues/{number}/events.get.parameters[8].name" = "X-GitHub-Request-Id"
"paths./repos/{owner}/{repo}/issues/{number}/events.get.parameters[8].type" = "integer"
"paths./repos/{owner}/{repo}/issues/{number}/events.get.responses.200.description" = "OK"
"paths./repos/{owner}/{repo}/issues/{number}/events.get.responses.200.schema.$ref" = "#/definitions/events"
"paths./repos/{owner}/{repo}/issues/{number}/events.get.responses.403.description" = "API rate limit exceeded. See http://developer.github.com/v3/#rate-limiting\nfor details.\n"
"paths./repos/{owner}/{repo}/issues/{number}/labels.delete.description" = "Remove all labels from an issue."
"paths./repos/{owner}/{repo}/issues/{number}/labels.delete.parameters.length" = 9
"paths./repos/{owner}/{repo}/issues/{number}/labels.delete.parameters[0].description" = "Name of repository owner."
"paths./repos/{owner}/{repo}/issues/{number}/labels.delete.parameters[0].in" = "path"
"paths./repos/{owner}/{repo}/issues/{number}/labels.delete.parameters[0].name" = "owner"
"paths./repos/{owner}/{repo}/issues/{number}/labels.delete.parameters[0].required" = true
"paths./repos/{owner}/{repo}/issues/{number}/labels.delete.parameters[0].type" = "string"
"paths./repos/{owner}/{repo}/issues/{number}/labels.delete.parameters[1].description" = "Name of repository."
"paths./repos/{owner}/{repo}/issues/{number}/labels.delete.parameters[1].in" = "path"
"paths./repos/{owner}/{repo}/issues/{number}/labels.delete.parameters[1].name" = "repo"
"paths./repos/{owner}/{repo}/issues/{number}/labels.delete.parameters[1].required" = true
"paths./repos/{owner}/{repo}/issues/{number}/labels.delete.parameters[1].type" = "string"
"paths./repos/{owner}/{repo}/issues/{number}/labels.delete.parameters[2].description" = "Number of issue."
"paths./repos/{owner}/{repo}/issues/{number}/labels.delete.parameters[2].in" = "path"
"paths./repos/{owner}/{repo}/issues/{number}/labels.delete.parameters[2].name" = "number"
"paths./repos/{owner}/{repo}/issues/{number}/labels.delete.parameters[2].required" = true
"paths./repos/{owner}/{repo}/issues/{number}/labels.delete.parameters[2].type" = "integer"
"paths./repos/{owner}/{repo}/issues/{number}/labels.delete.parameters[3].description" = "You can check the current version of media type in responses.\n"
"paths./repos/{owner}/{repo}/issues/{number}/labels.delete.parameters[3].in" = "header"
"paths./repos/{owner}/{repo}/issues/{number}/labels.delete.parameters[3].name" = "X-GitHub-Media-Type"
"paths./repos/{owner}/{repo}/issues/{number}/labels.delete.parameters[3].type" = "string"
"paths./repos/{owner}/{repo}/issues/{number}/labels.delete.parameters[4].description" = "Is used to set specified media type."
"paths./repos/{owner}/{repo}/issues/{number}/labels.delete.parameters[4].in" = "header"
"paths./repos/{owner}/{repo}/issues/{number}/labels.delete.parameters[4].name" = "Accept"
"paths./repos/{owner}/{repo}/issues/{number}/labels.delete.parameters[4].type" = "string"
"paths./repos/{owner}/{repo}/issues/{number}/labels.delete.parameters[5].in" = "header"
"paths./repos/{owner}/{repo}/issues/{number}/labels.delete.parameters[5].name" = "X-RateLimit-Limit"
"paths./repos/{owner}/{repo}/issues/{number}/labels.delete.parameters[5].type" = "integer"
"paths./repos/{owner}/{repo}/issues/{number}/labels.delete.parameters[6].in" = "header"
"paths./repos/{owner}/{repo}/issues/{number}/labels.delete.parameters[6].name" = "X-RateLimit-Remaining"
"paths./repos/{owner}/{repo}/issues/{number}/labels.delete.parameters[6].type" = "integer"
"paths./repos/{owner}/{repo}/issues/{number}/labels.delete.parameters[7].in" = "header"
"paths./repos/{owner}/{repo}/issues/{number}/labels.delete.parameters[7].name" = "X-RateLimit-Reset"
"paths./repos/{owner}/{repo}/issues/{number}/labels.delete.parameters[7].type" = "integer"
"paths./repos/{owner}/{repo}/issues/{number}/labels.delete.parameters[8].in" = "header"
"paths./repos/{owner}/{repo}/issues/{number}/labels.delete.parameters[8].name" = "X-GitHub-Request-Id"
"paths./repos/{owner}/{repo}/issues/{number}/labels.delete.parameters[8].type" = "integer"
"paths./repos/{owner}/{repo}/issues/{number}/labels.delete.responses.204.description" = "No content.\n"
"paths./repos/{owner}/{repo}/issues/{number}/labels.delete.responses.403.description" = "API rate limit exceeded. See http://developer.github.com/v3/#rate-limiting\nfor details.\n"
"paths./repos/{owner}/{repo}/issues/{number}/labels.get.description" = "List labels on an issue."
"paths./repos/{owner}/{repo}/issues/{number}/labels.get.parameters.length" = 9
"paths./repos/{owner}/{repo}/issues/{number}/labels.get.parameters[0].description" = "Name of repository owner."
"paths./repos/{owner}/{repo}/issues/{number}/labels.get.parameters[0].in" = "path"
"paths./repos/{owner}/{repo}/issues/{number}/labels.get.parameters[0].name" = "owner"
"paths./repos/{owner}/{repo}/issues/{number}/labels.get.parameters[0].required" = true
"paths./repos/{owner}/{repo}/issues/{number}/labels.get.parameters[0].type" = "string"
"paths./repos/{owner}/{repo}/issues/{number}/labels.get.parameters[1].description" = "Name of repository."
"paths./repos/{owner}/{repo}/issues/{number}/labels.get.parameters[1].in" = "path"
"paths./repos/{owner}/{repo}/issues/{number}/labels.get.parameters[1].name" = "repo"
"paths./repos/{owner}/{repo}/issues/{number}/labels.get.parameters[1].required" = true
"paths./repos/{owner}/{repo}/issues/{number}/labels.get.parameters[1].type" = "string"
"paths./repos/{owner}/{repo}/issues/{number}/labels.get.parameters[2].description" = "Number of issue."
"paths./repos/{owner}/{repo}/issues/{number}/labels.get.parameters[2].in" = "path"
"paths./repos/{owner}/{repo}/issues/{number}/labels.get.parameters[2].name" = "number"
"paths./repos/{owner}/{repo}/issues/{number}/labels.get.parameters[2].required" = true
"paths./repos/{owner}/{repo}/issues/{number}/labels.get.parameters[2].type" = "integer"
"paths./repos/{owner}/{repo}/issues/{number}/labels.get.parameters[3].description" = "You can check the current version of media type in responses.\n"
"paths./repos/{owner}/{repo}/issues/{number}/labels.get.parameters[3].in" = "header"
"paths./repos/{owner}/{repo}/issues/{number}/labels.get.parameters[3].name" = "X-GitHub-Media-Type"
"paths./repos/{owner}/{repo}/issues/{number}/labels.get.parameters[3].type" = "string"
"paths./repos/{owner}/{repo}/issues/{number}/labels.get.parameters[4].description" = "Is used to set specified media type."
"paths./repos/{owner}/{repo}/issues/{number}/labels.get.parameters[4].in" = "header"
"paths./repos/{owner}/{repo}/issues/{number}/labels.get.parameters[4].name" = "Accept"
"paths./repos/{owner}/{repo}/issues/{number}/labels.get.parameters[4].type" = "string"
"paths./repos/{owner}/{repo}/issues/{number}/labels.get.parameters[5].in" = "header"
"paths./repos/{owner}/{repo}/issues/{number}/labels.get.parameters[5].name" = "X-RateLimit-Limit"
"paths./repos/{owner}/{repo}/issues/{number}/labels.get.parameters[5].type" = "integer"
"paths./repos/{owner}/{repo}/issues/{number}/labels.get.parameters[6].in" = "header"
"paths./repos/{owner}/{repo}/issues/{number}/labels.get.parameters[6].name" = "X-RateLimit-Remaining"
"paths./repos/{owner}/{repo}/issues/{number}/labels.get.parameters[6].type" = "integer"
"paths./repos/{owner}/{repo}/issues/{number}/labels.get.parameters[7].in" = "header"
"paths./repos/{owner}/{repo}/issues/{number}/labels.get.parameters[7].name" = "X-RateLimit-Reset"
"paths./repos/{owner}/{repo}/issues/{number}/labels.get.parameters[7].type" = "integer"
"paths./repos/{owner}/{repo}/issues/{number}/labels.get.parameters[8].in" = "header"
"paths./repos/{owner}/{repo}/issues/{number}/labels.get.parameters[8].name" = "X-GitHub-Request-Id"
"paths./repos/{owner}/{repo}/issues/{number}/labels.get.parameters[8].type" = "integer"
"paths./repos/{owner}/{repo}/issues/{number}/labels.get.responses.200.description" = "OK"
"paths./repos/{owner}/{repo}/issues/{number}/labels.get.responses.200.schema.$ref" = "#/definitions/labels"
"paths./repos/{owner}/{repo}/issues/{number}/labels.get.responses.403.description" = "API rate limit exceeded. See http://developer.github.com/v3/#rate-limiting\nfor details.\n"
"paths./repos/{owner}/{repo}/issues/{number}/labels.post.description" = "Add labels to an issue."
"paths./repos/{owner}/{repo}/issues/{number}/labels.post.parameters.length" = 10
"paths./repos/{owner}/{repo}/issues/{number}/labels.post.parameters[0].description" = "Name of repository owner."
"paths./repos/{owner}/{repo}/issues/{number}/labels.post.parameters[0].in" = "path"
"paths./repos/{owner}/{repo}/issues/{number}/labels.post.parameters[0].name" = "owner"
"paths./repos/{owner}/{repo}/issues/{number}/labels.post.parameters[0].required" = true
"paths./repos/{owner}/{repo}/issues/{number}/labels.post.parameters[0].type" = "string"
"paths./repos/{owner}/{repo}/issues/{number}/labels.post.parameters[1].description" = "Name of repository."
"paths./repos/{owner}/{repo}/issues/{number}/labels.post.parameters[1].in" = "path"
"paths./repos/{owner}/{repo}/issues/{number}/labels.post.parameters[1].name" = "repo"
"paths./repos/{owner}/{repo}/issues/{number}/labels.post.parameters[1].required" = true
"paths./repos/{owner}/{repo}/issues/{number}/labels.post.parameters[1].type" = "string"
"paths./repos/{owner}/{repo}/issues/{number}/labels.post.parameters[2].description" = "Number of issue."
"paths./repos/{owner}/{repo}/issues/{number}/labels.post.parameters[2].in" = "path"
"paths./repos/{owner}/{repo}/issues/{number}/labels.post.parameters[2].name" = "number"
"paths./repos/{owner}/{repo}/issues/{number}/labels.post.parameters[2].required" = true
"paths./repos/{owner}/{repo}/issues/{number}/labels.post.parameters[2].type" = "integer"
"paths./repos/{owner}/{repo}/issues/{number}/labels.post.parameters[3].description" = "You can check the current version of media type in responses.\n"
"paths./repos/{owner}/{repo}/issues/{number}/labels.post.parameters[3].in" = "header"
"paths./repos/{owner}/{repo}/issues/{number}/labels.post.parameters[3].name" = "X-GitHub-Media-Type"
"paths./repos/{owner}/{repo}/issues/{number}/labels.post.parameters[3].type" = "string"
"paths./repos/{owner}/{repo}/issues/{number}/labels.post.parameters[4].description" = "Is used to set specified media type."
"paths./repos/{owner}/{repo}/issues/{number}/labels.post.parameters[4].in" = "header"
"paths./repos/{owner}/{repo}/issues/{number}/labels.post.parameters[4].name" = "Accept"
"paths./repos/{owner}/{repo}/issues/{number}/labels.post.parameters[4].type" = "string"
"paths./repos/{owner}/{repo}/issues/{number}/labels.post.parameters[5].in" = "header"
"paths./repos/{owner}/{repo}/issues/{number}/labels.post.parameters[5].name" = "X-RateLimit-Limit"
"paths./repos/{owner}/{repo}/issues/{number}/labels.post.parameters[5].type" = "integer"
"paths./repos/{owner}/{repo}/issues/{number}/labels.post.parameters[6].in" = "header"
"paths./repos/{owner}/{repo}/issues/{number}/labels.post.parameters[6].name" = "X-RateLimit-Remaining"
"paths./repos/{owner}/{repo}/issues/{number}/labels.post.parameters[6].type" = "integer"
"paths./repos/{owner}/{repo}/issues/{number}/labels.post.parameters[7].in" = "header"
"paths./repos/{owner}/{repo}/issues/{number}/labels.post.parameters[7].name" = "X-RateLimit-Reset"
"paths./repos/{owner}/{repo}/issues/{number}/labels.post.parameters[7].type" = "integer"
"paths./repos/{owner}/{repo}/issues/{number}/labels.post.parameters[8].in" = "header"
"paths./repos/{owner}/{repo}/issues/{number}/labels.post.parameters[8].name" = "X-GitHub-Request-Id"
"paths./repos/{owner}/{repo}/issues/{number}/labels.post.parameters[8].type" = "integer"
"paths./repos/{owner}/{repo}/issues/{number}/labels.post.parameters[9].in" = "body"
"paths./repos/{owner}/{repo}/issues/{number}/labels.post.parameters[9].name" = "body"
"paths./repos/{owner}/{repo}/issues/{number}/labels.post.parameters[9].required" = true
"paths./repos/{owner}/{repo}/issues/{number}/labels.post.parameters[9].schema.$ref" = "#/definitions/emailsPost"
"paths./repos/{owner}/{repo}/issues/{number}/labels.post.responses.201.description" = "Created"
"paths./repos/{owner}/{repo}/issues/{number}/labels.post.responses.201.schema.$ref" = "#/definitions/label"
"paths./repos/{owner}/{repo}/issues/{number}/labels.post.responses.403.description" = "API rate limit exceeded. See http://developer.github.com/v3/#rate-limiting\nfor details.\n"
"paths./repos/{owner}/{repo}/issues/{number}/labels.put.description" = "Replace all labels for an issue.\nSending an empty array ([]) will remove all Labels from the Issue.\n"
"paths./repos/{owner}/{repo}/issues/{number}/labels.put.parameters.length" = 10
"paths./repos/{owner}/{repo}/issues/{number}/labels.put.parameters[0].description" = "Name of repository owner."
"paths./repos/{owner}/{repo}/issues/{number}/labels.put.parameters[0].in" = "path"
"paths./repos/{owner}/{repo}/issues/{number}/labels.put.parameters[0].name" = "owner"
"paths./repos/{owner}/{repo}/issues/{number}/labels.put.parameters[0].required" = true
"paths./repos/{owner}/{repo}/issues/{number}/labels.put.parameters[0].type" = "string"
"paths./repos/{owner}/{repo}/issues/{number}/labels.put.parameters[1].description" = "Name of repository."
"paths./repos/{owner}/{repo}/issues/{number}/labels.put.parameters[1].in" = "path"
"paths./repos/{owner}/{repo}/issues/{number}/labels.put.parameters[1].name" = "repo"
"paths./repos/{owner}/{repo}/issues/{number}/labels.put.parameters[1].required" = true
"paths./repos/{owner}/{repo}/issues/{number}/labels.put.parameters[1].type" = "string"
"paths./repos/{owner}/{repo}/issues/{number}/labels.put.parameters[2].description" = "Number of issue."
"paths./repos/{owner}/{repo}/issues/{number}/labels.put.parameters[2].in" = "path"
"paths./repos/{owner}/{repo}/issues/{number}/labels.put.parameters[2].name" = "number"
"paths./repos/{owner}/{repo}/issues/{number}/labels.put.parameters[2].required" = true
"paths./repos/{owner}/{repo}/issues/{number}/labels.put.parameters[2].type" = "integer"
"paths./repos/{owner}/{repo}/issues/{number}/labels.put.parameters[3].description" = "You can check the current version of media type in responses.\n"
"paths./repos/{owner}/{repo}/issues/{number}/labels.put.parameters[3].in" = "header"
"paths./repos/{owner}/{repo}/issues/{number}/labels.put.parameters[3].name" = "X-GitHub-Media-Type"
"paths./repos/{owner}/{repo}/issues/{number}/labels.put.parameters[3].type" = "string"
"paths./repos/{owner}/{repo}/issues/{number}/labels.put.parameters[4].description" = "Is used to set specified media type."
"paths./repos/{owner}/{repo}/issues/{number}/labels.put.parameters[4].in" = "header"
"paths./repos/{owner}/{repo}/issues/{number}/labels.put.parameters[4].name" = "Accept"
"paths./repos/{owner}/{repo}/issues/{number}/labels.put.parameters[4].type" = "string"
"paths./repos/{owner}/{repo}/issues/{number}/labels.put.parameters[5].in" = "header"
"paths./repos/{owner}/{repo}/issues/{number}/labels.put.parameters[5].name" = "X-RateLimit-Limit"
"paths./repos/{owner}/{repo}/issues/{number}/labels.put.parameters[5].type" = "integer"
"paths./repos/{owner}/{repo}/issues/{number}/labels.put.parameters[6].in" = "header"
"paths./repos/{owner}/{repo}/issues/{number}/labels.put.parameters[6].name" = "X-RateLimit-Remaining"
"paths./repos/{owner}/{repo}/issues/{number}/labels.put.parameters[6].type" = "integer"
"paths./repos/{owner}/{repo}/issues/{number}/labels.put.parameters[7].in" = "header"
"paths./repos/{owner}/{repo}/issues/{number}/labels.put.parameters[7].name" = "X-RateLimit-Reset"
"paths./repos/{owner}/{repo}/issues/{number}/labels.put.parameters[7].type" = "integer"
"paths./repos/{owner}/{repo}/issues/{number}/labels.put.parameters[8].in" = "header"
"paths./repos/{owner}/{repo}/issues/{number}/labels.put.parameters[8].name" = "X-GitHub-Request-Id"
"paths./repos/{owner}/{repo}/issues/{number}/labels.put.parameters[8].type" = "integer"
"paths./repos/{owner}/{repo}/issues/{number}/labels.put.parameters[9].in" = "body"
"paths./repos/{owner}/{repo}/issues/{number}/labels.put.parameters[9].name" = "body"
"paths./repos/{owner}/{repo}/issues/{number}/labels.put.parameters[9].required" = true
"paths./repos/{owner}/{repo}/issues/{number}/labels.put.parameters[9].schema.$ref" = "#/definitions/emailsPost"
"paths./repos/{owner}/{repo}/issues/{number}/labels.put.responses.201.description" = "Created"
"paths./repos/{owner}/{repo}/issues/{number}/labels.put.responses.201.schema.$ref" = "#/definitions/label"
"paths./repos/{owner}/{repo}/issues/{number}/labels.put.responses.403.description" = "API rate limit exceeded. See http://developer.github.com/v3/#rate-limiting\nfor details.\n"
"paths./repos/{owner}/{repo}/issues/{number}/labels/{name}.delete.description" = "Remove a label from an issue."
"paths./repos/{owner}/{repo}/issues/{number}/labels/{name}.delete.parameters.length" = 10
"paths./repos/{owner}/{repo}/issues/{number}/labels/{name}.delete.parameters[0].description" = "Name of repository owner."
"paths./repos/{owner}/{repo}/issues/{number}/labels/{name}.delete.parameters[0].in" = "path"
"paths./repos/{owner}/{repo}/issues/{number}/labels/{name}.delete.parameters[0].name" = "owner"
"paths./repos/{owner}/{repo}/issues/{number}/labels/{name}.delete.parameters[0].required" = true
"paths./repos/{owner}/{repo}/issues/{number}/labels/{name}.delete.parameters[0].type" = "string"
"paths./repos/{owner}/{repo}/issues/{number}/labels/{name}.delete.parameters[1].description" = "Name of repository."
"paths./repos/{owner}/{repo}/issues/{number}/labels/{name}.delete.parameters[1].in" = "path"
"paths./repos/{owner}/{repo}/issues/{number}/labels/{name}.delete.parameters[1].name" = "repo"
"paths./repos/{owner}/{repo}/issues/{number}/labels/{name}.delete.parameters[1].required" = true
"paths./repos/{owner}/{repo}/issues/{number}/labels/{name}.delete.parameters[1].type" = "string"
"paths./repos/{owner}/{repo}/issues/{number}/labels/{name}.delete.parameters[2].description" = "Number of issue."
"paths./repos/{owner}/{repo}/issues/{number}/labels/{name}.delete.parameters[2].in" = "path"
"paths./repos/{owner}/{repo}/issues/{number}/labels/{name}.delete.parameters[2].name" = "number"
"paths./repos/{owner}/{repo}/issues/{number}/labels/{name}.delete.parameters[2].required" = true
"paths./repos/{owner}/{repo}/issues/{number}/labels/{name}.delete.parameters[2].type" = "integer"
"paths./repos/{owner}/{repo}/issues/{number}/labels/{name}.delete.parameters[3].description" = "Name of the label."
"paths./repos/{owner}/{repo}/issues/{number}/labels/{name}.delete.parameters[3].in" = "path"
"paths./repos/{owner}/{repo}/issues/{number}/labels/{name}.delete.parameters[3].name" = "name"
"paths./repos/{owner}/{repo}/issues/{number}/labels/{name}.delete.parameters[3].required" = true
"paths./repos/{owner}/{repo}/issues/{number}/labels/{name}.delete.parameters[3].type" = "string"
"paths./repos/{owner}/{repo}/issues/{number}/labels/{name}.delete.parameters[4].description" = "You can check the current version of media type in responses.\n"
"paths./repos/{owner}/{repo}/issues/{number}/labels/{name}.delete.parameters[4].in" = "header"
"paths./repos/{owner}/{repo}/issues/{number}/labels/{name}.delete.parameters[4].name" = "X-GitHub-Media-Type"
"paths./repos/{owner}/{repo}/issues/{number}/labels/{name}.delete.parameters[4].type" = "string"
"paths./repos/{owner}/{repo}/issues/{number}/labels/{name}.delete.parameters[5].description" = "Is used to set specified media type."
"paths./repos/{owner}/{repo}/issues/{number}/labels/{name}.delete.parameters[5].in" = "header"
"paths./repos/{owner}/{repo}/issues/{number}/labels/{name}.delete.parameters[5].name" = "Accept"
"paths./repos/{owner}/{repo}/issues/{number}/labels/{name}.delete.parameters[5].type" = "string"
"paths./repos/{owner}/{repo}/issues/{number}/labels/{name}.delete.parameters[6].in" = "header"
"paths./repos/{owner}/{repo}/issues/{number}/labels/{name}.delete.parameters[6].name" = "X-RateLimit-Limit"
"paths./repos/{owner}/{repo}/issues/{number}/labels/{name}.delete.parameters[6].type" = "integer"
"paths./repos/{owner}/{repo}/issues/{number}/labels/{name}.delete.parameters[7].in" = "header"
"paths./repos/{owner}/{repo}/issues/{number}/labels/{name}.delete.parameters[7].name" = "X-RateLimit-Remaining"
"paths./repos/{owner}/{repo}/issues/{number}/labels/{name}.delete.parameters[7].type" = "integer"
"paths./repos/{owner}/{repo}/issues/{number}/labels/{name}.delete.parameters[8].in" = "header"
"paths./repos/{owner}/{repo}/issues/{number}/labels/{name}.delete.parameters[8].name" = "X-RateLimit-Reset"
"paths./repos/{owner}/{repo}/issues/{number}/labels/{name}.delete.parameters[8].type" = "integer"
"paths./repos/{owner}/{repo}/issues/{number}/labels/{name}.delete.parameters[9].in" = "header"
"paths./repos/{owner}/{repo}/issues/{number}/labels/{name}.delete.parameters[9].name" = "X-GitHub-Request-Id"
"paths./repos/{owner}/{repo}/issues/{number}/labels/{name}.delete.parameters[9].type" = "integer"
"paths./repos/{owner}/{repo}/issues/{number}/labels/{name}.delete.responses.204.description" = "Item removed."
"paths./repos/{owner}/{repo}/issues/{number}/labels/{name}.delete.responses.403.description" = "API rate limit exceeded. See http://developer.github.com/v3/#rate-limiting\nfor details.\n"
"paths./repos/{owner}/{repo}/keys.get.description" = "Get list of keys."
"paths./repos/{owner}/{repo}/keys.get.parameters.length" = 8
"paths./repos/{owner}/{repo}/keys.get.parameters[0].description" = "Name of repository owner."
"paths./repos/{owner}/{repo}/keys.get.parameters[0].in" = "path"
"paths./repos/{owner}/{repo}/keys.get.parameters[0].name" = "owner"
"paths./repos/{owner}/{repo}/keys.get.parameters[0].required" = true
"paths./repos/{owner}/{repo}/keys.get.parameters[0].type" = "string"
"paths./repos/{owner}/{repo}/keys.get.parameters[1].description" = "Name of repository."
"paths./repos/{owner}/{repo}/keys.get.parameters[1].in" = "path"
"paths./repos/{owner}/{repo}/keys.get.parameters[1].name" = "repo"
"paths./repos/{owner}/{repo}/keys.get.parameters[1].required" = true
"paths./repos/{owner}/{repo}/keys.get.parameters[1].type" = "string"
"paths./repos/{owner}/{repo}/keys.get.parameters[2].description" = "You can check the current version of media type in responses.\n"
"paths./repos/{owner}/{repo}/keys.get.parameters[2].in" = "header"
"paths./repos/{owner}/{repo}/keys.get.parameters[2].name" = "X-GitHub-Media-Type"
"paths./repos/{owner}/{repo}/keys.get.parameters[2].type" = "string"
"paths./repos/{owner}/{repo}/keys.get.parameters[3].description" = "Is used to set specified media type."
"paths./repos/{owner}/{repo}/keys.get.parameters[3].in" = "header"
"paths./repos/{owner}/{repo}/keys.get.parameters[3].name" = "Accept"
"paths./repos/{owner}/{repo}/keys.get.parameters[3].type" = "string"
"paths./repos/{owner}/{repo}/keys.get.parameters[4].in" = "header"
"paths./repos/{owner}/{repo}/keys.get.parameters[4].name" = "X-RateLimit-Limit"
"paths./repos/{owner}/{repo}/keys.get.parameters[4].type" = "integer"
"paths./repos/{owner}/{repo}/keys.get.parameters[5].in" = "header"
"paths./repos/{owner}/{repo}/keys.get.parameters[5].name" = "X-RateLimit-Remaining"
"paths./repos/{owner}/{repo}/keys.get.parameters[5].type" = "integer"
"paths./repos/{owner}/{repo}/keys.get.parameters[6].in" = "header"
"paths./repos/{owner}/{repo}/keys.get.parameters[6].name" = "X-RateLimit-Reset"
"paths./repos/{owner}/{repo}/keys.get.parameters[6].type" = "integer"
"paths./repos/{owner}/{repo}/keys.get.parameters[7].in" = "header"
"paths./repos/{owner}/{repo}/keys.get.parameters[7].name" = "X-GitHub-Request-Id"
"paths./repos/{owner}/{repo}/keys.get.parameters[7].type" = "integer"
"paths./repos/{owner}/{repo}/keys.get.responses.200.description" = "OK"
"paths./repos/{owner}/{repo}/keys.get.responses.200.schema.$ref" = "#/definitions/keys"
"paths./repos/{owner}/{repo}/keys.get.responses.403.description" = "API rate limit exceeded. See http://developer.github.com/v3/#rate-limiting\nfor details.\n"
"paths./repos/{owner}/{repo}/keys.post.description" = "Create a key."
"paths./repos/{owner}/{repo}/keys.post.parameters.length" = 9
"paths./repos/{owner}/{repo}/keys.post.parameters[0].description" = "Name of repository owner."
"paths./repos/{owner}/{repo}/keys.post.parameters[0].in" = "path"
"paths./repos/{owner}/{repo}/keys.post.parameters[0].name" = "owner"
"paths./repos/{owner}/{repo}/keys.post.parameters[0].required" = true
"paths./repos/{owner}/{repo}/keys.post.parameters[0].type" = "string"
"paths./repos/{owner}/{repo}/keys.post.parameters[1].description" = "Name of repository."
"paths./repos/{owner}/{repo}/keys.post.parameters[1].in" = "path"
"paths./repos/{owner}/{repo}/keys.post.parameters[1].name" = "repo"
"paths./repos/{owner}/{repo}/keys.post.parameters[1].required" = true
"paths./repos/{owner}/{repo}/keys.post.parameters[1].type" = "string"
"paths./repos/{owner}/{repo}/keys.post.parameters[2].description" = "You can check the current version of media type in responses.\n"
"paths./repos/{owner}/{repo}/keys.post.parameters[2].in" = "header"
"paths./repos/{owner}/{repo}/keys.post.parameters[2].name" = "X-GitHub-Media-Type"
"paths./repos/{owner}/{repo}/keys.post.parameters[2].type" = "string"
"paths./repos/{owner}/{repo}/keys.post.parameters[3].description" = "Is used to set specified media type."
"paths./repos/{owner}/{repo}/keys.post.parameters[3].in" = "header"
"paths./repos/{owner}/{repo}/keys.post.parameters[3].name" = "Accept"
"paths./repos/{owner}/{repo}/keys.post.parameters[3].type" = "string"
"paths./repos/{owner}/{repo}/keys.post.parameters[4].in" = "header"
"paths./repos/{owner}/{repo}/keys.post.parameters[4].name" = "X-RateLimit-Limit"
"paths./repos/{owner}/{repo}/keys.post.parameters[4].type" = "integer"
"paths./repos/{owner}/{repo}/keys.post.parameters[5].in" = "header"
"paths./repos/{owner}/{repo}/keys.post.parameters[5].name" = "X-RateLimit-Remaining"
"paths./repos/{owner}/{repo}/keys.post.parameters[5].type" = "integer"
"paths./repos/{owner}/{repo}/keys.post.parameters[6].in" = "header"
"paths./repos/{owner}/{repo}/keys.post.parameters[6].name" = "X-RateLimit-Reset"
"paths./repos/{owner}/{repo}/keys.post.parameters[6].type" = "integer"
"paths./repos/{owner}/{repo}/keys.post.parameters[7].in" = "header"
"paths./repos/{owner}/{repo}/keys.post.parameters[7].name" = "X-GitHub-Request-Id"
"paths./repos/{owner}/{repo}/keys.post.parameters[7].type" = "integer"
"paths./repos/{owner}/{repo}/keys.post.parameters[8].in" = "body"
"paths./repos/{owner}/{repo}/keys.post.parameters[8].name" = "body"
"paths./repos/{owner}/{repo}/keys.post.parameters[8].required" = true
"paths./repos/{owner}/{repo}/keys.post.parameters[8].schema.$ref" = "#/definitions/user-keys-post"
"paths./repos/{owner}/{repo}/keys.post.responses.201.description" = "Created"
"paths./repos/{owner}/{repo}/keys.post.responses.201.schema.$ref" = "#/definitions/user-keys-keyId"
"paths./repos/{owner}/{repo}/keys.post.responses.403.description" = "API rate limit exceeded. See http://developer.github.com/v3/#rate-limiting\nfor details.\n"
"paths./repos/{owner}/{repo}/keys/{keyId}.delete.description" = "Delete a key."
"paths./repos/{owner}/{repo}/keys/{keyId}.delete.parameters.length" = 9
"paths./repos/{owner}/{repo}/keys/{keyId}.delete.parameters[0].description" = "Name of repository owner."
"paths./repos/{owner}/{repo}/keys/{keyId}.delete.parameters[0].in" = "path"
"paths./repos/{owner}/{repo}/keys/{keyId}.delete.parameters[0].name" = "owner"
"paths./repos/{owner}/{repo}/keys/{keyId}.delete.parameters[0].required" = true
"paths./repos/{owner}/{repo}/keys/{keyId}.delete.parameters[0].type" = "string"
"paths./repos/{owner}/{repo}/keys/{keyId}.delete.parameters[1].description" = "Name of repository."
"paths./repos/{owner}/{repo}/keys/{keyId}.delete.parameters[1].in" = "path"
"paths./repos/{owner}/{repo}/keys/{keyId}.delete.parameters[1].name" = "repo"
"paths./repos/{owner}/{repo}/keys/{keyId}.delete.parameters[1].required" = true
"paths./repos/{owner}/{repo}/keys/{keyId}.delete.parameters[1].type" = "string"
"paths./repos/{owner}/{repo}/keys/{keyId}.delete.parameters[2].description" = "Id of key."
"paths./repos/{owner}/{repo}/keys/{keyId}.delete.parameters[2].in" = "path"
"paths./repos/{owner}/{repo}/keys/{keyId}.delete.parameters[2].name" = "keyId"
"paths./repos/{owner}/{repo}/keys/{keyId}.delete.parameters[2].required" = true
"paths./repos/{owner}/{repo}/keys/{keyId}.delete.parameters[2].type" = "integer"
"paths./repos/{owner}/{repo}/keys/{keyId}.delete.parameters[3].description" = "You can check the current version of media type in responses.\n"
"paths./repos/{owner}/{repo}/keys/{keyId}.delete.parameters[3].in" = "header"
"paths./repos/{owner}/{repo}/keys/{keyId}.delete.parameters[3].name" = "X-GitHub-Media-Type"
"paths./repos/{owner}/{repo}/keys/{keyId}.delete.parameters[3].type" = "string"
"paths./repos/{owner}/{repo}/keys/{keyId}.delete.parameters[4].description" = "Is used to set specified media type."
"paths./repos/{owner}/{repo}/keys/{keyId}.delete.parameters[4].in" = "header"
"paths./repos/{owner}/{repo}/keys/{keyId}.delete.parameters[4].name" = "Accept"
"paths./repos/{owner}/{repo}/keys/{keyId}.delete.parameters[4].type" = "string"
"paths./repos/{owner}/{repo}/keys/{keyId}.delete.parameters[5].in" = "header"
"paths./repos/{owner}/{repo}/keys/{keyId}.delete.parameters[5].name" = "X-RateLimit-Limit"
"paths./repos/{owner}/{repo}/keys/{keyId}.delete.parameters[5].type" = "integer"
"paths./repos/{owner}/{repo}/keys/{keyId}.delete.parameters[6].in" = "header"
"paths./repos/{owner}/{repo}/keys/{keyId}.delete.parameters[6].name" = "X-RateLimit-Remaining"
"paths./repos/{owner}/{repo}/keys/{keyId}.delete.parameters[6].type" = "integer"
"paths./repos/{owner}/{repo}/keys/{keyId}.delete.parameters[7].in" = "header"
"paths./repos/{owner}/{repo}/keys/{keyId}.delete.parameters[7].name" = "X-RateLimit-Reset"
"paths./repos/{owner}/{repo}/keys/{keyId}.delete.parameters[7].type" = "integer"
"paths./repos/{owner}/{repo}/keys/{keyId}.delete.parameters[8].in" = "header"
"paths./repos/{owner}/{repo}/keys/{keyId}.delete.parameters[8].name" = "X-GitHub-Request-Id"
"paths./repos/{owner}/{repo}/keys/{keyId}.delete.parameters[8].type" = "integer"
"paths./repos/{owner}/{repo}/keys/{keyId}.delete.responses.204.description" = "No content.\n"
"paths./repos/{owner}/{repo}/keys/{keyId}.delete.responses.403.description" = "API rate limit exceeded. See http://developer.github.com/v3/#rate-limiting\nfor details.\n"
"paths./repos/{owner}/{repo}/keys/{keyId}.get.description" = "Get a key"
"paths./repos/{owner}/{repo}/keys/{keyId}.get.parameters.length" = 9
"paths./repos/{owner}/{repo}/keys/{keyId}.get.parameters[0].description" = "Name of repository owner."
"paths./repos/{owner}/{repo}/keys/{keyId}.get.parameters[0].in" = "path"
"paths./repos/{owner}/{repo}/keys/{keyId}.get.parameters[0].name" = "owner"
"paths./repos/{owner}/{repo}/keys/{keyId}.get.parameters[0].required" = true
"paths./repos/{owner}/{repo}/keys/{keyId}.get.parameters[0].type" = "string"
"paths./repos/{owner}/{repo}/keys/{keyId}.get.parameters[1].description" = "Name of repository."
"paths./repos/{owner}/{repo}/keys/{keyId}.get.parameters[1].in" = "path"
"paths./repos/{owner}/{repo}/keys/{keyId}.get.parameters[1].name" = "repo"
"paths./repos/{owner}/{repo}/keys/{keyId}.get.parameters[1].required" = true
"paths./repos/{owner}/{repo}/keys/{keyId}.get.parameters[1].type" = "string"
"paths./repos/{owner}/{repo}/keys/{keyId}.get.parameters[2].description" = "Id of key."
"paths./repos/{owner}/{repo}/keys/{keyId}.get.parameters[2].in" = "path"
"paths./repos/{owner}/{repo}/keys/{keyId}.get.parameters[2].name" = "keyId"
"paths./repos/{owner}/{repo}/keys/{keyId}.get.parameters[2].required" = true
"paths./repos/{owner}/{repo}/keys/{keyId}.get.parameters[2].type" = "integer"
"paths./repos/{owner}/{repo}/keys/{keyId}.get.parameters[3].description" = "You can check the current version of media type in responses.\n"
"paths./repos/{owner}/{repo}/keys/{keyId}.get.parameters[3].in" = "header"
"paths./repos/{owner}/{repo}/keys/{keyId}.get.parameters[3].name" = "X-GitHub-Media-Type"
"paths./repos/{owner}/{repo}/keys/{keyId}.get.parameters[3].type" = "string"
"paths./repos/{owner}/{repo}/keys/{keyId}.get.parameters[4].description" = "Is used to set specified media type."
"paths./repos/{owner}/{repo}/keys/{keyId}.get.parameters[4].in" = "header"
"paths./repos/{owner}/{repo}/keys/{keyId}.get.parameters[4].name" = "Accept"
"paths./repos/{owner}/{repo}/keys/{keyId}.get.parameters[4].type" = "string"
"paths./repos/{owner}/{repo}/keys/{keyId}.get.parameters[5].in" = "header"
"paths./repos/{owner}/{repo}/keys/{keyId}.get.parameters[5].name" = "X-RateLimit-Limit"
"paths./repos/{owner}/{repo}/keys/{keyId}.get.parameters[5].type" = "integer"
"paths./repos/{owner}/{repo}/keys/{keyId}.get.parameters[6].in" = "header"
"paths./repos/{owner}/{repo}/keys/{keyId}.get.parameters[6].name" = "X-RateLimit-Remaining"
"paths./repos/{owner}/{repo}/keys/{keyId}.get.parameters[6].type" = "integer"
"paths./repos/{owner}/{repo}/keys/{keyId}.get.parameters[7].in" = "header"
"paths./repos/{owner}/{repo}/keys/{keyId}.get.parameters[7].name" = "X-RateLimit-Reset"
"paths./repos/{owner}/{repo}/keys/{keyId}.get.parameters[7].type" = "integer"
"paths./repos/{owner}/{repo}/keys/{keyId}.get.parameters[8].in" = "header"
"paths./repos/{owner}/{repo}/keys/{keyId}.get.parameters[8].name" = "X-GitHub-Request-Id"
"paths./repos/{owner}/{repo}/keys/{keyId}.get.parameters[8].type" = "integer"
"paths./repos/{owner}/{repo}/keys/{keyId}.get.responses.200.description" = "OK"
"paths./repos/{owner}/{repo}/keys/{keyId}.get.responses.200.schema.$ref" = "#/definitions/user-keys-keyId"
"paths./repos/{owner}/{repo}/keys/{keyId}.get.responses.403.description" = "API rate limit exceeded. See http://developer.github.com/v3/#rate-limiting\nfor details.\n"
"paths./repos/{owner}/{repo}/labels.get.description" = "List all labels for this repository."
"paths./repos/{owner}/{repo}/labels.get.parameters.length" = 8
"paths./repos/{owner}/{repo}/labels.get.parameters[0].description" = "Name of repository owner."
"paths./repos/{owner}/{repo}/labels.get.parameters[0].in" = "path"
"paths./repos/{owner}/{repo}/labels.get.parameters[0].name" = "owner"
"paths./repos/{owner}/{repo}/labels.get.parameters[0].required" = true
"paths./repos/{owner}/{repo}/labels.get.parameters[0].type" = "string"
"paths./repos/{owner}/{repo}/labels.get.parameters[1].description" = "Name of repository."
"paths./repos/{owner}/{repo}/labels.get.parameters[1].in" = "path"
"paths./repos/{owner}/{repo}/labels.get.parameters[1].name" = "repo"
"paths./repos/{owner}/{repo}/labels.get.parameters[1].required" = true
"paths./repos/{owner}/{repo}/labels.get.parameters[1].type" = "string"
"paths./repos/{owner}/{repo}/labels.get.parameters[2].description" = "You can check the current version of media type in responses.\n"
"paths./repos/{owner}/{repo}/labels.get.parameters[2].in" = "header"
"paths./repos/{owner}/{repo}/labels.get.parameters[2].name" = "X-GitHub-Media-Type"
"paths./repos/{owner}/{repo}/labels.get.parameters[2].type" = "string"
"paths./repos/{owner}/{repo}/labels.get.parameters[3].description" = "Is used to set specified media type."
"paths./repos/{owner}/{repo}/labels.get.parameters[3].in" = "header"
"paths./repos/{owner}/{repo}/labels.get.parameters[3].name" = "Accept"
"paths./repos/{owner}/{repo}/labels.get.parameters[3].type" = "string"
"paths./repos/{owner}/{repo}/labels.get.parameters[4].in" = "header"
"paths./repos/{owner}/{repo}/labels.get.parameters[4].name" = "X-RateLimit-Limit"
"paths./repos/{owner}/{repo}/labels.get.parameters[4].type" = "integer"
"paths./repos/{owner}/{repo}/labels.get.parameters[5].in" = "header"
"paths./repos/{owner}/{repo}/labels.get.parameters[5].name" = "X-RateLimit-Remaining"
"paths./repos/{owner}/{repo}/labels.get.parameters[5].type" = "integer"
"paths./repos/{owner}/{repo}/labels.get.parameters[6].in" = "header"
"paths./repos/{owner}/{repo}/labels.get.parameters[6].name" = "X-RateLimit-Reset"
"paths./repos/{owner}/{repo}/labels.get.parameters[6].type" = "integer"
"paths./repos/{owner}/{repo}/labels.get.parameters[7].in" = "header"
"paths./repos/{owner}/{repo}/labels.get.parameters[7].name" = "X-GitHub-Request-Id"
"paths./repos/{owner}/{repo}/labels.get.parameters[7].type" = "integer"
"paths./repos/{owner}/{repo}/labels.get.responses.200.description" = "OK"
"paths./repos/{owner}/{repo}/labels.get.responses.200.schema.$ref" = "#/definitions/labels"
"paths./repos/{owner}/{repo}/labels.get.responses.403.description" = "API rate limit exceeded. See http://developer.github.com/v3/#rate-limiting\nfor details.\n"
"paths./repos/{owner}/{repo}/labels.post.description" = "Create a label."
"paths./repos/{owner}/{repo}/labels.post.parameters.length" = 9
"paths./repos/{owner}/{repo}/labels.post.parameters[0].description" = "Name of repository owner."
"paths./repos/{owner}/{repo}/labels.post.parameters[0].in" = "path"
"paths./repos/{owner}/{repo}/labels.post.parameters[0].name" = "owner"
"paths./repos/{owner}/{repo}/labels.post.parameters[0].required" = true
"paths./repos/{owner}/{repo}/labels.post.parameters[0].type" = "string"
"paths./repos/{owner}/{repo}/labels.post.parameters[1].description" = "Name of repository."
"paths./repos/{owner}/{repo}/labels.post.parameters[1].in" = "path"
"paths./repos/{owner}/{repo}/labels.post.parameters[1].name" = "repo"
"paths./repos/{owner}/{repo}/labels.post.parameters[1].required" = true
"paths./repos/{owner}/{repo}/labels.post.parameters[1].type" = "string"
"paths./repos/{owner}/{repo}/labels.post.parameters[2].description" = "You can check the current version of media type in responses.\n"
"paths./repos/{owner}/{repo}/labels.post.parameters[2].in" = "header"
"paths./repos/{owner}/{repo}/labels.post.parameters[2].name" = "X-GitHub-Media-Type"
"paths./repos/{owner}/{repo}/labels.post.parameters[2].type" = "string"
"paths./repos/{owner}/{repo}/labels.post.parameters[3].description" = "Is used to set specified media type."
"paths./repos/{owner}/{repo}/labels.post.parameters[3].in" = "header"
"paths./repos/{owner}/{repo}/labels.post.parameters[3].name" = "Accept"
"paths./repos/{owner}/{repo}/labels.post.parameters[3].type" = "string"
"paths./repos/{owner}/{repo}/labels.post.parameters[4].in" = "header"
"paths./repos/{owner}/{repo}/labels.post.parameters[4].name" = "X-RateLimit-Limit"
"paths./repos/{owner}/{repo}/labels.post.parameters[4].type" = "integer"
"paths./repos/{owner}/{repo}/labels.post.parameters[5].in" = "header"
"paths./repos/{owner}/{repo}/labels.post.parameters[5].name" = "X-RateLimit-Remaining"
"paths./repos/{owner}/{repo}/labels.post.parameters[5].type" = "integer"
"paths./repos/{owner}/{repo}/labels.post.parameters[6].in" = "header"
"paths./repos/{owner}/{repo}/labels.post.parameters[6].name" = "X-RateLimit-Reset"
"paths./repos/{owner}/{repo}/labels.post.parameters[6].type" = "integer"
"paths./repos/{owner}/{repo}/labels.post.parameters[7].in" = "header"
"paths./repos/{owner}/{repo}/labels.post.parameters[7].name" = "X-GitHub-Request-Id"
"paths./repos/{owner}/{repo}/labels.post.parameters[7].type" = "integer"
"paths./repos/{owner}/{repo}/labels.post.parameters[8].in" = "body"
"paths./repos/{owner}/{repo}/labels.post.parameters[8].name" = "body"
"paths./repos/{owner}/{repo}/labels.post.parameters[8].required" = true
"paths./repos/{owner}/{repo}/labels.post.parameters[8].schema.$ref" = "#/definitions/emailsPost"
"paths./repos/{owner}/{repo}/labels.post.responses.201.description" = "Created"
"paths./repos/{owner}/{repo}/labels.post.responses.201.schema.$ref" = "#/definitions/label"
"paths./repos/{owner}/{repo}/labels.post.responses.403.description" = "API rate limit exceeded. See http://developer.github.com/v3/#rate-limiting\nfor details.\n"
"paths./repos/{owner}/{repo}/labels/{name}.delete.description" = "Delete a label."
"paths./repos/{owner}/{repo}/labels/{name}.delete.parameters.length" = 9
"paths./repos/{owner}/{repo}/labels/{name}.delete.parameters[0].description" = "Name of repository owner."
"paths./repos/{owner}/{repo}/labels/{name}.delete.parameters[0].in" = "path"
"paths./repos/{owner}/{repo}/labels/{name}.delete.parameters[0].name" = "owner"
"paths./repos/{owner}/{repo}/labels/{name}.delete.parameters[0].required" = true
"paths./repos/{owner}/{repo}/labels/{name}.delete.parameters[0].type" = "string"
"paths./repos/{owner}/{repo}/labels/{name}.delete.parameters[1].description" = "Name of repository."
"paths./repos/{owner}/{repo}/labels/{name}.delete.parameters[1].in" = "path"
"paths./repos/{owner}/{repo}/labels/{name}.delete.parameters[1].name" = "repo"
"paths./repos/{owner}/{repo}/labels/{name}.delete.parameters[1].required" = true
"paths./repos/{owner}/{repo}/labels/{name}.delete.parameters[1].type" = "string"
"paths./repos/{owner}/{repo}/labels/{name}.delete.parameters[2].description" = "Name of the label."
"paths./repos/{owner}/{repo}/labels/{name}.delete.parameters[2].in" = "path"
"paths./repos/{owner}/{repo}/labels/{name}.delete.parameters[2].name" = "name"
"paths./repos/{owner}/{repo}/labels/{name}.delete.parameters[2].required" = true
"paths./repos/{owner}/{repo}/labels/{name}.delete.parameters[2].type" = "string"
"paths./repos/{owner}/{repo}/labels/{name}.delete.parameters[3].description" = "You can check the current version of media type in responses.\n"
"paths./repos/{owner}/{repo}/labels/{name}.delete.parameters[3].in" = "header"
"paths./repos/{owner}/{repo}/labels/{name}.delete.parameters[3].name" = "X-GitHub-Media-Type"
"paths./repos/{owner}/{repo}/labels/{name}.delete.parameters[3].type" = "string"
"paths./repos/{owner}/{repo}/labels/{name}.delete.parameters[4].description" = "Is used to set specified media type."
"paths./repos/{owner}/{repo}/labels/{name}.delete.parameters[4].in" = "header"
"paths./repos/{owner}/{repo}/labels/{name}.delete.parameters[4].name" = "Accept"
"paths./repos/{owner}/{repo}/labels/{name}.delete.parameters[4].type" = "string"
"paths./repos/{owner}/{repo}/labels/{name}.delete.parameters[5].in" = "header"
"paths./repos/{owner}/{repo}/labels/{name}.delete.parameters[5].name" = "X-RateLimit-Limit"
"paths./repos/{owner}/{repo}/labels/{name}.delete.parameters[5].type" = "integer"
"paths./repos/{owner}/{repo}/labels/{name}.delete.parameters[6].in" = "header"
"paths./repos/{owner}/{repo}/labels/{name}.delete.parameters[6].name" = "X-RateLimit-Remaining"
"paths./repos/{owner}/{repo}/labels/{name}.delete.parameters[6].type" = "integer"
"paths./repos/{owner}/{repo}/labels/{name}.delete.parameters[7].in" = "header"
"paths./repos/{owner}/{repo}/labels/{name}.delete.parameters[7].name" = "X-RateLimit-Reset"
"paths./repos/{owner}/{repo}/labels/{name}.delete.parameters[7].type" = "integer"
"paths./repos/{owner}/{repo}/labels/{name}.delete.parameters[8].in" = "header"
"paths./repos/{owner}/{repo}/labels/{name}.delete.parameters[8].name" = "X-GitHub-Request-Id"
"paths./repos/{owner}/{repo}/labels/{name}.delete.parameters[8].type" = "integer"
"paths./repos/{owner}/{repo}/labels/{name}.delete.responses.204.description" = "No content.\n"
"paths./repos/{owner}/{repo}/labels/{name}.delete.responses.403.description" = "API rate limit exceeded. See http://developer.github.com/v3/#rate-limiting\nfor details.\n"
"paths./repos/{owner}/{repo}/labels/{name}.get.description" = "Get a single label."
"paths./repos/{owner}/{repo}/labels/{name}.get.parameters.length" = 9
"paths./repos/{owner}/{repo}/labels/{name}.get.parameters[0].description" = "Name of repository owner."
"paths./repos/{owner}/{repo}/labels/{name}.get.parameters[0].in" = "path"
"paths./repos/{owner}/{repo}/labels/{name}.get.parameters[0].name" = "owner"
"paths./repos/{owner}/{repo}/labels/{name}.get.parameters[0].required" = true
"paths./repos/{owner}/{repo}/labels/{name}.get.parameters[0].type" = "string"
"paths./repos/{owner}/{repo}/labels/{name}.get.parameters[1].description" = "Name of repository."
"paths./repos/{owner}/{repo}/labels/{name}.get.parameters[1].in" = "path"
"paths./repos/{owner}/{repo}/labels/{name}.get.parameters[1].name" = "repo"
"paths./repos/{owner}/{repo}/labels/{name}.get.parameters[1].required" = true
"paths./repos/{owner}/{repo}/labels/{name}.get.parameters[1].type" = "string"
"paths./repos/{owner}/{repo}/labels/{name}.get.parameters[2].description" = "Name of the label."
"paths./repos/{owner}/{repo}/labels/{name}.get.parameters[2].in" = "path"
"paths./repos/{owner}/{repo}/labels/{name}.get.parameters[2].name" = "name"
"paths./repos/{owner}/{repo}/labels/{name}.get.parameters[2].required" = true
"paths./repos/{owner}/{repo}/labels/{name}.get.parameters[2].type" = "string"
"paths./repos/{owner}/{repo}/labels/{name}.get.parameters[3].description" = "You can check the current version of media type in responses.\n"
"paths./repos/{owner}/{repo}/labels/{name}.get.parameters[3].in" = "header"
"paths./repos/{owner}/{repo}/labels/{name}.get.parameters[3].name" = "X-GitHub-Media-Type"
"paths./repos/{owner}/{repo}/labels/{name}.get.parameters[3].type" = "string"
"paths./repos/{owner}/{repo}/labels/{name}.get.parameters[4].description" = "Is used to set specified media type."
"paths./repos/{owner}/{repo}/labels/{name}.get.parameters[4].in" = "header"
"paths./repos/{owner}/{repo}/labels/{name}.get.parameters[4].name" = "Accept"
"paths./repos/{owner}/{repo}/labels/{name}.get.parameters[4].type" = "string"
"paths./repos/{owner}/{repo}/labels/{name}.get.parameters[5].in" = "header"
"paths./repos/{owner}/{repo}/labels/{name}.get.parameters[5].name" = "X-RateLimit-Limit"
"paths./repos/{owner}/{repo}/labels/{name}.get.parameters[5].type" = "integer"
"paths./repos/{owner}/{repo}/labels/{name}.get.parameters[6].in" = "header"
"paths./repos/{owner}/{repo}/labels/{name}.get.parameters[6].name" = "X-RateLimit-Remaining"
"paths./repos/{owner}/{repo}/labels/{name}.get.parameters[6].type" = "integer"
"paths./repos/{owner}/{repo}/labels/{name}.get.parameters[7].in" = "header"
"paths./repos/{owner}/{repo}/labels/{name}.get.parameters[7].name" = "X-RateLimit-Reset"
"paths./repos/{owner}/{repo}/labels/{name}.get.parameters[7].type" = "integer"
"paths./repos/{owner}/{repo}/labels/{name}.get.parameters[8].in" = "header"
"paths./repos/{owner}/{repo}/labels/{name}.get.parameters[8].name" = "X-GitHub-Request-Id"
"paths./repos/{owner}/{repo}/labels/{name}.get.parameters[8].type" = "integer"
"paths./repos/{owner}/{repo}/labels/{name}.get.responses.200.description" = "OK"
"paths./repos/{owner}/{repo}/labels/{name}.get.responses.200.schema.$ref" = "#/definitions/label"
"paths./repos/{owner}/{repo}/labels/{name}.get.responses.403.description" = "API rate limit exceeded. See http://developer.github.com/v3/#rate-limiting\nfor details.\n"
"paths./repos/{owner}/{repo}/labels/{name}.patch.description" = "Update a label."
"paths./repos/{owner}/{repo}/labels/{name}.patch.parameters.length" = 10
"paths./repos/{owner}/{repo}/labels/{name}.patch.parameters[0].description" = "Name of repository owner."
"paths./repos/{owner}/{repo}/labels/{name}.patch.parameters[0].in" = "path"
"paths./repos/{owner}/{repo}/labels/{name}.patch.parameters[0].name" = "owner"
"paths./repos/{owner}/{repo}/labels/{name}.patch.parameters[0].required" = true
"paths./repos/{owner}/{repo}/labels/{name}.patch.parameters[0].type" = "string"
"paths./repos/{owner}/{repo}/labels/{name}.patch.parameters[1].description" = "Name of repository."
"paths./repos/{owner}/{repo}/labels/{name}.patch.parameters[1].in" = "path"
"paths./repos/{owner}/{repo}/labels/{name}.patch.parameters[1].name" = "repo"
"paths./repos/{owner}/{repo}/labels/{name}.patch.parameters[1].required" = true
"paths./repos/{owner}/{repo}/labels/{name}.patch.parameters[1].type" = "string"
"paths./repos/{owner}/{repo}/labels/{name}.patch.parameters[2].description" = "Name of the label."
"paths./repos/{owner}/{repo}/labels/{name}.patch.parameters[2].in" = "path"
"paths./repos/{owner}/{repo}/labels/{name}.patch.parameters[2].name" = "name"
"paths./repos/{owner}/{repo}/labels/{name}.patch.parameters[2].required" = true
"paths./repos/{owner}/{repo}/labels/{name}.patch.parameters[2].type" = "string"
"paths./repos/{owner}/{repo}/labels/{name}.patch.parameters[3].description" = "You can check the current version of media type in responses.\n"
"paths./repos/{owner}/{repo}/labels/{name}.patch.parameters[3].in" = "header"
"paths./repos/{owner}/{repo}/labels/{name}.patch.parameters[3].name" = "X-GitHub-Media-Type"
"paths./repos/{owner}/{repo}/labels/{name}.patch.parameters[3].type" = "string"
"paths./repos/{owner}/{repo}/labels/{name}.patch.parameters[4].description" = "Is used to set specified media type."
"paths./repos/{owner}/{repo}/labels/{name}.patch.parameters[4].in" = "header"
"paths./repos/{owner}/{repo}/labels/{name}.patch.parameters[4].name" = "Accept"
"paths./repos/{owner}/{repo}/labels/{name}.patch.parameters[4].type" = "string"
"paths./repos/{owner}/{repo}/labels/{name}.patch.parameters[5].in" = "header"
"paths./repos/{owner}/{repo}/labels/{name}.patch.parameters[5].name" = "X-RateLimit-Limit"
"paths./repos/{owner}/{repo}/labels/{name}.patch.parameters[5].type" = "integer"
"paths./repos/{owner}/{repo}/labels/{name}.patch.parameters[6].in" = "header"
"paths./repos/{owner}/{repo}/labels/{name}.patch.parameters[6].name" = "X-RateLimit-Remaining"
"paths./repos/{owner}/{repo}/labels/{name}.patch.parameters[6].type" = "integer"
"paths./repos/{owner}/{repo}/labels/{name}.patch.parameters[7].in" = "header"
"paths./repos/{owner}/{repo}/labels/{name}.patch.parameters[7].name" = "X-RateLimit-Reset"
"paths./repos/{owner}/{repo}/labels/{name}.patch.parameters[7].type" = "integer"
"paths./repos/{owner}/{repo}/labels/{name}.patch.parameters[8].in" = "header"
"paths./repos/{owner}/{repo}/labels/{name}.patch.parameters[8].name" = "X-GitHub-Request-Id"
"paths./repos/{owner}/{repo}/labels/{name}.patch.parameters[8].type" = "integer"
"paths./repos/{owner}/{repo}/labels/{name}.patch.parameters[9].in" = "body"
"paths./repos/{owner}/{repo}/labels/{name}.patch.parameters[9].name" = "body"
"paths./repos/{owner}/{repo}/labels/{name}.patch.parameters[9].required" = true
"paths./repos/{owner}/{repo}/labels/{name}.patch.parameters[9].schema.$ref" = "#/definitions/emailsPost"
"paths./repos/{owner}/{repo}/labels/{name}.patch.responses.200.description" = "OK"
"paths./repos/{owner}/{repo}/labels/{name}.patch.responses.200.schema.$ref" = "#/definitions/label"
"paths./repos/{owner}/{repo}/labels/{name}.patch.responses.403.description" = "API rate limit exceeded. See http://developer.github.com/v3/#rate-limiting\nfor details.\n"
"paths./repos/{owner}/{repo}/languages.get.description" = "List languages.\nList languages for the specified repository. The value on the right of a\nlanguage is the number of bytes of code written in that language.\n"
"paths./repos/{owner}/{repo}/languages.get.parameters.length" = 8
"paths./repos/{owner}/{repo}/languages.get.parameters[0].description" = "Name of repository owner."
"paths./repos/{owner}/{repo}/languages.get.parameters[0].in" = "path"
"paths./repos/{owner}/{repo}/languages.get.parameters[0].name" = "owner"
"paths./repos/{owner}/{repo}/languages.get.parameters[0].required" = true
"paths./repos/{owner}/{repo}/languages.get.parameters[0].type" = "string"
"paths./repos/{owner}/{repo}/languages.get.parameters[1].description" = "Name of repository."
"paths./repos/{owner}/{repo}/languages.get.parameters[1].in" = "path"
"paths./repos/{owner}/{repo}/languages.get.parameters[1].name" = "repo"
"paths./repos/{owner}/{repo}/languages.get.parameters[1].required" = true
"paths./repos/{owner}/{repo}/languages.get.parameters[1].type" = "string"
"paths./repos/{owner}/{repo}/languages.get.parameters[2].description" = "You can check the current version of media type in responses.\n"
"paths./repos/{owner}/{repo}/languages.get.parameters[2].in" = "header"
"paths./repos/{owner}/{repo}/languages.get.parameters[2].name" = "X-GitHub-Media-Type"
"paths./repos/{owner}/{repo}/languages.get.parameters[2].type" = "string"
"paths./repos/{owner}/{repo}/languages.get.parameters[3].description" = "Is used to set specified media type."
"paths./repos/{owner}/{repo}/languages.get.parameters[3].in" = "header"
"paths./repos/{owner}/{repo}/languages.get.parameters[3].name" = "Accept"
"paths./repos/{owner}/{repo}/languages.get.parameters[3].type" = "string"
"paths./repos/{owner}/{repo}/languages.get.parameters[4].in" = "header"
"paths./repos/{owner}/{repo}/languages.get.parameters[4].name" = "X-RateLimit-Limit"
"paths./repos/{owner}/{repo}/languages.get.parameters[4].type" = "integer"
"paths./repos/{owner}/{repo}/languages.get.parameters[5].in" = "header"
"paths./repos/{owner}/{repo}/languages.get.parameters[5].name" = "X-RateLimit-Remaining"
"paths./repos/{owner}/{repo}/languages.get.parameters[5].type" = "integer"
"paths./repos/{owner}/{repo}/languages.get.parameters[6].in" = "header"
"paths./repos/{owner}/{repo}/languages.get.parameters[6].name" = "X-RateLimit-Reset"
"paths./repos/{owner}/{repo}/languages.get.parameters[6].type" = "integer"
"paths./repos/{owner}/{repo}/languages.get.parameters[7].in" = "header"
"paths./repos/{owner}/{repo}/languages.get.parameters[7].name" = "X-GitHub-Request-Id"
"paths./repos/{owner}/{repo}/languages.get.parameters[7].type" = "integer"
"paths./repos/{owner}/{repo}/languages.get.responses.200.description" = "OK"
"paths./repos/{owner}/{repo}/languages.get.responses.200.schema.$ref" = "#/definitions/languages"
"paths./repos/{owner}/{repo}/languages.get.responses.403.description" = "API rate limit exceeded. See http://developer.github.com/v3/#rate-limiting\nfor details.\n"
"paths./repos/{owner}/{repo}/merges.post.description" = "Perform a merge."
"paths./repos/{owner}/{repo}/merges.post.parameters.length" = 9
"paths./repos/{owner}/{repo}/merges.post.parameters[0].description" = "Name of repository owner."
"paths./repos/{owner}/{repo}/merges.post.parameters[0].in" = "path"
"paths./repos/{owner}/{repo}/merges.post.parameters[0].name" = "owner"
"paths./repos/{owner}/{repo}/merges.post.parameters[0].required" = true
"paths./repos/{owner}/{repo}/merges.post.parameters[0].type" = "string"
"paths./repos/{owner}/{repo}/merges.post.parameters[1].description" = "Name of repository."
"paths./repos/{owner}/{repo}/merges.post.parameters[1].in" = "path"
"paths./repos/{owner}/{repo}/merges.post.parameters[1].name" = "repo"
"paths./repos/{owner}/{repo}/merges.post.parameters[1].required" = true
"paths./repos/{owner}/{repo}/merges.post.parameters[1].type" = "string"
"paths./repos/{owner}/{repo}/merges.post.parameters[2].description" = "You can check the current version of media type in responses.\n"
"paths./repos/{owner}/{repo}/merges.post.parameters[2].in" = "header"
"paths./repos/{owner}/{repo}/merges.post.parameters[2].name" = "X-GitHub-Media-Type"
"paths./repos/{owner}/{repo}/merges.post.parameters[2].type" = "string"
"paths./repos/{owner}/{repo}/merges.post.parameters[3].description" = "Is used to set specified media type."
"paths./repos/{owner}/{repo}/merges.post.parameters[3].in" = "header"
"paths./repos/{owner}/{repo}/merges.post.parameters[3].name" = "Accept"
"paths./repos/{owner}/{repo}/merges.post.parameters[3].type" = "string"
"paths./repos/{owner}/{repo}/merges.post.parameters[4].in" = "header"
"paths./repos/{owner}/{repo}/merges.post.parameters[4].name" = "X-RateLimit-Limit"
"paths./repos/{owner}/{repo}/merges.post.parameters[4].type" = "integer"
"paths./repos/{owner}/{repo}/merges.post.parameters[5].in" = "header"
"paths./repos/{owner}/{repo}/merges.post.parameters[5].name" = "X-RateLimit-Remaining"
"paths./repos/{owner}/{repo}/merges.post.parameters[5].type" = "integer"
"paths./repos/{owner}/{repo}/merges.post.parameters[6].in" = "header"
"paths./repos/{owner}/{repo}/merges.post.parameters[6].name" = "X-RateLimit-Reset"
"paths./repos/{owner}/{repo}/merges.post.parameters[6].type" = "integer"
"paths./repos/{owner}/{repo}/merges.post.parameters[7].in" = "header"
"paths./repos/{owner}/{repo}/merges.post.parameters[7].name" = "X-GitHub-Request-Id"
"paths./repos/{owner}/{repo}/merges.post.parameters[7].type" = "integer"
"paths./repos/{owner}/{repo}/merges.post.parameters[8].in" = "body"
"paths./repos/{owner}/{repo}/merges.post.parameters[8].name" = "body"
"paths./repos/{owner}/{repo}/merges.post.parameters[8].required" = true
"paths./repos/{owner}/{repo}/merges.post.parameters[8].schema.$ref" = "#/definitions/mergesBody"
"paths./repos/{owner}/{repo}/merges.post.responses.201.description" = "Successful Response (The resulting merge commit)"
"paths./repos/{owner}/{repo}/merges.post.responses.201.schema.$ref" = "#/definitions/mergesSuccessful"
"paths./repos/{owner}/{repo}/merges.post.responses.204.description" = "No-op response (base already contains the head, nothing to merge)"
"paths./repos/{owner}/{repo}/merges.post.responses.403.description" = "API rate limit exceeded. See http://developer.github.com/v3/#rate-limiting\nfor details.\n"
"paths./repos/{owner}/{repo}/merges.post.responses.404.description" = "Missing base response or missing head response"
"paths./repos/{owner}/{repo}/merges.post.responses.404.schema.$ref" = "#/definitions/mergesConflict"
"paths./repos/{owner}/{repo}/merges.post.responses.409.description" = "Merge conflict response."
"paths./repos/{owner}/{repo}/merges.post.responses.409.schema.$ref" = "#/definitions/mergesConflict"
"paths./repos/{owner}/{repo}/milestones.get.description" = "List milestones for a repository."
"paths./repos/{owner}/{repo}/milestones.get.parameters.length" = 11
"paths./repos/{owner}/{repo}/milestones.get.parameters[0].description" = "Name of repository owner."
"paths./repos/{owner}/{repo}/milestones.get.parameters[0].in" = "path"
"paths./repos/{owner}/{repo}/milestones.get.parameters[0].name" = "owner"
"paths./repos/{owner}/{repo}/milestones.get.parameters[0].required" = true
"paths./repos/{owner}/{repo}/milestones.get.parameters[0].type" = "string"
"paths./repos/{owner}/{repo}/milestones.get.parameters[10].in" = "header"
"paths./repos/{owner}/{repo}/milestones.get.parameters[10].name" = "X-GitHub-Request-Id"
"paths./repos/{owner}/{repo}/milestones.get.parameters[10].type" = "integer"
"paths./repos/{owner}/{repo}/milestones.get.parameters[1].description" = "Name of repository."
"paths./repos/{owner}/{repo}/milestones.get.parameters[1].in" = "path"
"paths./repos/{owner}/{repo}/milestones.get.parameters[1].name" = "repo"
"paths./repos/{owner}/{repo}/milestones.get.parameters[1].required" = true
"paths./repos/{owner}/{repo}/milestones.get.parameters[1].type" = "string"
"paths./repos/{owner}/{repo}/milestones.get.parameters[2].default" = "open"
"paths./repos/{owner}/{repo}/milestones.get.parameters[2].description" = "String to filter by state."
"paths./repos/{owner}/{repo}/milestones.get.parameters[2].enum.length" = 2
"paths./repos/{owner}/{repo}/milestones.get.parameters[2].enum[0]" = "open"
"paths./repos/{owner}/{repo}/milestones.get.parameters[2].enum[1]" = "closed"
"paths./repos/{owner}/{repo}/milestones.get.parameters[2].in" = "query"
"paths./repos/{owner}/{repo}/milestones.get.parameters[2].name" = "state"
"paths./repos/{owner}/{repo}/milestones.get.parameters[2].type" = "string"
"paths./repos/{owner}/{repo}/milestones.get.parameters[3].description" = "Ignored without 'sort' parameter."
"paths./repos/{owner}/{repo}/milestones.get.parameters[3].in" = "query"
"paths./repos/{owner}/{repo}/milestones.get.parameters[3].name" = "direction"
"paths./repos/{owner}/{repo}/milestones.get.parameters[3].type" = "string"
"paths./repos/{owner}/{repo}/milestones.get.parameters[4].default" = "due_date"
"paths./repos/{owner}/{repo}/milestones.get.parameters[4].description" = ""
"paths./repos/{owner}/{repo}/milestones.get.parameters[4].enum.length" = 2
"paths./repos/{owner}/{repo}/milestones.get.parameters[4].enum[0]" = "due_date"
"paths./repos/{owner}/{repo}/milestones.get.parameters[4].enum[1]" = "completeness"
"paths./repos/{owner}/{repo}/milestones.get.parameters[4].in" = "query"
"paths./repos/{owner}/{repo}/milestones.get.parameters[4].name" = "sort"
"paths./repos/{owner}/{repo}/milestones.get.parameters[4].type" = "string"
"paths./repos/{owner}/{repo}/milestones.get.parameters[5].description" = "You can check the current version of media type in responses.\n"
"paths./repos/{owner}/{repo}/milestones.get.parameters[5].in" = "header"
"paths./repos/{owner}/{repo}/milestones.get.parameters[5].name" = "X-GitHub-Media-Type"
"paths./repos/{owner}/{repo}/milestones.get.parameters[5].type" = "string"
"paths./repos/{owner}/{repo}/milestones.get.parameters[6].description" = "Is used to set specified media type."
"paths./repos/{owner}/{repo}/milestones.get.parameters[6].in" = "header"
"paths./repos/{owner}/{repo}/milestones.get.parameters[6].name" = "Accept"
"paths./repos/{owner}/{repo}/milestones.get.parameters[6].type" = "string"
"paths./repos/{owner}/{repo}/milestones.get.parameters[7].in" = "header"
"paths./repos/{owner}/{repo}/milestones.get.parameters[7].name" = "X-RateLimit-Limit"
"paths./repos/{owner}/{repo}/milestones.get.parameters[7].type" = "integer"
"paths./repos/{owner}/{repo}/milestones.get.parameters[8].in" = "header"
"paths./repos/{owner}/{repo}/milestones.get.parameters[8].name" = "X-RateLimit-Remaining"
"paths./repos/{owner}/{repo}/milestones.get.parameters[8].type" = "integer"
"paths./repos/{owner}/{repo}/milestones.get.parameters[9].in" = "header"
"paths./repos/{owner}/{repo}/milestones.get.parameters[9].name" = "X-RateLimit-Reset"
"paths./repos/{owner}/{repo}/milestones.get.parameters[9].type" = "integer"
"paths./repos/{owner}/{repo}/milestones.get.responses.200.description" = "OK"
"paths./repos/{owner}/{repo}/milestones.get.responses.200.schema.$ref" = "#/definitions/milestone"
"paths./repos/{owner}/{repo}/milestones.get.responses.403.description" = "API rate limit exceeded. See http://developer.github.com/v3/#rate-limiting\nfor details.\n"
"paths./repos/{owner}/{repo}/milestones.post.description" = "Create a milestone."
"paths./repos/{owner}/{repo}/milestones.post.parameters.length" = 9
"paths./repos/{owner}/{repo}/milestones.post.parameters[0].description" = "Name of repository owner."
"paths./repos/{owner}/{repo}/milestones.post.parameters[0].in" = "path"
"paths./repos/{owner}/{repo}/milestones.post.parameters[0].name" = "owner"
"paths./repos/{owner}/{repo}/milestones.post.parameters[0].required" = true
"paths./repos/{owner}/{repo}/milestones.post.parameters[0].type" = "string"
"paths./repos/{owner}/{repo}/milestones.post.parameters[1].description" = "Name of repository."
"paths./repos/{owner}/{repo}/milestones.post.parameters[1].in" = "path"
"paths./repos/{owner}/{repo}/milestones.post.parameters[1].name" = "repo"
"paths./repos/{owner}/{repo}/milestones.post.parameters[1].required" = true
"paths./repos/{owner}/{repo}/milestones.post.parameters[1].type" = "string"
"paths./repos/{owner}/{repo}/milestones.post.parameters[2].description" = "You can check the current version of media type in responses.\n"
"paths./repos/{owner}/{repo}/milestones.post.parameters[2].in" = "header"
"paths./repos/{owner}/{repo}/milestones.post.parameters[2].name" = "X-GitHub-Media-Type"
"paths./repos/{owner}/{repo}/milestones.post.parameters[2].type" = "string"
"paths./repos/{owner}/{repo}/milestones.post.parameters[3].description" = "Is used to set specified media type."
"paths./repos/{owner}/{repo}/milestones.post.parameters[3].in" = "header"
"paths./repos/{owner}/{repo}/milestones.post.parameters[3].name" = "Accept"
"paths./repos/{owner}/{repo}/milestones.post.parameters[3].type" = "string"
"paths./repos/{owner}/{repo}/milestones.post.parameters[4].in" = "header"
"paths./repos/{owner}/{repo}/milestones.post.parameters[4].name" = "X-RateLimit-Limit"
"paths./repos/{owner}/{repo}/milestones.post.parameters[4].type" = "integer"
"paths./repos/{owner}/{repo}/milestones.post.parameters[5].in" = "header"
"paths./repos/{owner}/{repo}/milestones.post.parameters[5].name" = "X-RateLimit-Remaining"
"paths./repos/{owner}/{repo}/milestones.post.parameters[5].type" = "integer"
"paths./repos/{owner}/{repo}/milestones.post.parameters[6].in" = "header"
"paths./repos/{owner}/{repo}/milestones.post.parameters[6].name" = "X-RateLimit-Reset"
"paths./repos/{owner}/{repo}/milestones.post.parameters[6].type" = "integer"
"paths./repos/{owner}/{repo}/milestones.post.parameters[7].in" = "header"
"paths./repos/{owner}/{repo}/milestones.post.parameters[7].name" = "X-GitHub-Request-Id"
"paths./repos/{owner}/{repo}/milestones.post.parameters[7].type" = "integer"
"paths./repos/{owner}/{repo}/milestones.post.parameters[8].in" = "body"
"paths./repos/{owner}/{repo}/milestones.post.parameters[8].name" = "body"
"paths./repos/{owner}/{repo}/milestones.post.parameters[8].required" = true
"paths./repos/{owner}/{repo}/milestones.post.parameters[8].schema.$ref" = "#/definitions/milestoneUpdate"
"paths./repos/{owner}/{repo}/milestones.post.responses.201.description" = "Created"
"paths./repos/{owner}/{repo}/milestones.post.responses.201.schema.$ref" = "#/definitions/milestone"
"paths./repos/{owner}/{repo}/milestones.post.responses.403.description" = "API rate limit exceeded. See http://developer.github.com/v3/#rate-limiting\nfor details.\n"
"paths./repos/{owner}/{repo}/milestones/{number}.delete.description" = "Delete a milestone."
"paths./repos/{owner}/{repo}/milestones/{number}.delete.parameters.length" = 9
"paths./repos/{owner}/{repo}/milestones/{number}.delete.parameters[0].description" = "Name of repository owner."
"paths./repos/{owner}/{repo}/milestones/{number}.delete.parameters[0].in" = "path"
"paths./repos/{owner}/{repo}/milestones/{number}.delete.parameters[0].name" = "owner"
"paths./repos/{owner}/{repo}/milestones/{number}.delete.parameters[0].required" = true
"paths./repos/{owner}/{repo}/milestones/{number}.delete.parameters[0].type" = "string"
"paths./repos/{owner}/{repo}/milestones/{number}.delete.parameters[1].description" = "Name of repository."
"paths./repos/{owner}/{repo}/milestones/{number}.delete.parameters[1].in" = "path"
"paths./repos/{owner}/{repo}/milestones/{number}.delete.parameters[1].name" = "repo"
"paths./repos/{owner}/{repo}/milestones/{number}.delete.parameters[1].required" = true
"paths./repos/{owner}/{repo}/milestones/{number}.delete.parameters[1].type" = "string"
"paths./repos/{owner}/{repo}/milestones/{number}.delete.parameters[2].description" = "Number of milestone."
"paths./repos/{owner}/{repo}/milestones/{number}.delete.parameters[2].in" = "path"
"paths./repos/{owner}/{repo}/milestones/{number}.delete.parameters[2].name" = "number"
"paths./repos/{owner}/{repo}/milestones/{number}.delete.parameters[2].required" = true
"paths./repos/{owner}/{repo}/milestones/{number}.delete.parameters[2].type" = "integer"
"paths./repos/{owner}/{repo}/milestones/{number}.delete.parameters[3].description" = "You can check the current version of media type in responses.\n"
"paths./repos/{owner}/{repo}/milestones/{number}.delete.parameters[3].in" = "header"
"paths./repos/{owner}/{repo}/milestones/{number}.delete.parameters[3].name" = "X-GitHub-Media-Type"
"paths./repos/{owner}/{repo}/milestones/{number}.delete.parameters[3].type" = "string"
"paths./repos/{owner}/{repo}/milestones/{number}.delete.parameters[4].description" = "Is used to set specified media type."
"paths./repos/{owner}/{repo}/milestones/{number}.delete.parameters[4].in" = "header"
"paths./repos/{owner}/{repo}/milestones/{number}.delete.parameters[4].name" = "Accept"
"paths./repos/{owner}/{repo}/milestones/{number}.delete.parameters[4].type" = "string"
"paths./repos/{owner}/{repo}/milestones/{number}.delete.parameters[5].in" = "header"
"paths./repos/{owner}/{repo}/milestones/{number}.delete.parameters[5].name" = "X-RateLimit-Limit"
"paths./repos/{owner}/{repo}/milestones/{number}.delete.parameters[5].type" = "integer"
"paths./repos/{owner}/{repo}/milestones/{number}.delete.parameters[6].in" = "header"
"paths./repos/{owner}/{repo}/milestones/{number}.delete.parameters[6].name" = "X-RateLimit-Remaining"
"paths./repos/{owner}/{repo}/milestones/{number}.delete.parameters[6].type" = "integer"
"paths./repos/{owner}/{repo}/milestones/{number}.delete.parameters[7].in" = "header"
"paths./repos/{owner}/{repo}/milestones/{number}.delete.parameters[7].name" = "X-RateLimit-Reset"
"paths./repos/{owner}/{repo}/milestones/{number}.delete.parameters[7].type" = "integer"
"paths./repos/{owner}/{repo}/milestones/{number}.delete.parameters[8].in" = "header"
"paths./repos/{owner}/{repo}/milestones/{number}.delete.parameters[8].name" = "X-GitHub-Request-Id"
"paths./repos/{owner}/{repo}/milestones/{number}.delete.parameters[8].type" = "integer"
"paths./repos/{owner}/{repo}/milestones/{number}.delete.responses.204.description" = "No content.\n"
"paths./repos/{owner}/{repo}/milestones/{number}.delete.responses.403.description" = "API rate limit exceeded. See http://developer.github.com/v3/#rate-limiting\nfor details.\n"
"paths./repos/{owner}/{repo}/milestones/{number}.get.description" = "Get a single milestone."
"paths./repos/{owner}/{repo}/milestones/{number}.get.parameters.length" = 9
"paths./repos/{owner}/{repo}/milestones/{number}.get.parameters[0].description" = "Name of repository owner."
"paths./repos/{owner}/{repo}/milestones/{number}.get.parameters[0].in" = "path"
"paths./repos/{owner}/{repo}/milestones/{number}.get.parameters[0].name" = "owner"
"paths./repos/{owner}/{repo}/milestones/{number}.get.parameters[0].required" = true
"paths./repos/{owner}/{repo}/milestones/{number}.get.parameters[0].type" = "string"
"paths./repos/{owner}/{repo}/milestones/{number}.get.parameters[1].description" = "Name of repository."
"paths./repos/{owner}/{repo}/milestones/{number}.get.parameters[1].in" = "path"
"paths./repos/{owner}/{repo}/milestones/{number}.get.parameters[1].name" = "repo"
"paths./repos/{owner}/{repo}/milestones/{number}.get.parameters[1].required" = true
"paths./repos/{owner}/{repo}/milestones/{number}.get.parameters[1].type" = "string"
"paths./repos/{owner}/{repo}/milestones/{number}.get.parameters[2].description" = "Number of milestone."
"paths./repos/{owner}/{repo}/milestones/{number}.get.parameters[2].in" = "path"
"paths./repos/{owner}/{repo}/milestones/{number}.get.parameters[2].name" = "number"
"paths./repos/{owner}/{repo}/milestones/{number}.get.parameters[2].required" = true
"paths./repos/{owner}/{repo}/milestones/{number}.get.parameters[2].type" = "integer"
"paths./repos/{owner}/{repo}/milestones/{number}.get.parameters[3].description" = "You can check the current version of media type in responses.\n"
"paths./repos/{owner}/{repo}/milestones/{number}.get.parameters[3].in" = "header"
"paths./repos/{owner}/{repo}/milestones/{number}.get.parameters[3].name" = "X-GitHub-Media-Type"
"paths./repos/{owner}/{repo}/milestones/{number}.get.parameters[3].type" = "string"
"paths./repos/{owner}/{repo}/milestones/{number}.get.parameters[4].description" = "Is used to set specified media type."
"paths./repos/{owner}/{repo}/milestones/{number}.get.parameters[4].in" = "header"
"paths./repos/{owner}/{repo}/milestones/{number}.get.parameters[4].name" = "Accept"
"paths./repos/{owner}/{repo}/milestones/{number}.get.parameters[4].type" = "string"
"paths./repos/{owner}/{repo}/milestones/{number}.get.parameters[5].in" = "header"
"paths./repos/{owner}/{repo}/milestones/{number}.get.parameters[5].name" = "X-RateLimit-Limit"
"paths./repos/{owner}/{repo}/milestones/{number}.get.parameters[5].type" = "integer"
"paths./repos/{owner}/{repo}/milestones/{number}.get.parameters[6].in" = "header"
"paths./repos/{owner}/{repo}/milestones/{number}.get.parameters[6].name" = "X-RateLimit-Remaining"
"paths./repos/{owner}/{repo}/milestones/{number}.get.parameters[6].type" = "integer"
"paths./repos/{owner}/{repo}/milestones/{number}.get.parameters[7].in" = "header"
"paths./repos/{owner}/{repo}/milestones/{number}.get.parameters[7].name" = "X-RateLimit-Reset"
"paths./repos/{owner}/{repo}/milestones/{number}.get.parameters[7].type" = "integer"
"paths./repos/{owner}/{repo}/milestones/{number}.get.parameters[8].in" = "header"
"paths./repos/{owner}/{repo}/milestones/{number}.get.parameters[8].name" = "X-GitHub-Request-Id"
"paths./repos/{owner}/{repo}/milestones/{number}.get.parameters[8].type" = "integer"
"paths./repos/{owner}/{repo}/milestones/{number}.get.responses.200.description" = "OK"
"paths./repos/{owner}/{repo}/milestones/{number}.get.responses.200.schema.$ref" = "#/definitions/milestone"
"paths./repos/{owner}/{repo}/milestones/{number}.get.responses.403.description" = "API rate limit exceeded. See http://developer.github.com/v3/#rate-limiting\nfor details.\n"
"paths./repos/{owner}/{repo}/milestones/{number}.patch.description" = "Update a milestone."
"paths./repos/{owner}/{repo}/milestones/{number}.patch.parameters.length" = 10
"paths./repos/{owner}/{repo}/milestones/{number}.patch.parameters[0].description" = "Name of repository owner."
"paths./repos/{owner}/{repo}/milestones/{number}.patch.parameters[0].in" = "path"
"paths./repos/{owner}/{repo}/milestones/{number}.patch.parameters[0].name" = "owner"
"paths./repos/{owner}/{repo}/milestones/{number}.patch.parameters[0].required" = true
"paths./repos/{owner}/{repo}/milestones/{number}.patch.parameters[0].type" = "string"
"paths./repos/{owner}/{repo}/milestones/{number}.patch.parameters[1].description" = "Name of repository."
"paths./repos/{owner}/{repo}/milestones/{number}.patch.parameters[1].in" = "path"
"paths./repos/{owner}/{repo}/milestones/{number}.patch.parameters[1].name" = "repo"
"paths./repos/{owner}/{repo}/milestones/{number}.patch.parameters[1].required" = true
"paths./repos/{owner}/{repo}/milestones/{number}.patch.parameters[1].type" = "string"
"paths./repos/{owner}/{repo}/milestones/{number}.patch.parameters[2].description" = "Number of milestone."
"paths./repos/{owner}/{repo}/milestones/{number}.patch.parameters[2].in" = "path"
"paths./repos/{owner}/{repo}/milestones/{number}.patch.parameters[2].name" = "number"
"paths./repos/{owner}/{repo}/milestones/{number}.patch.parameters[2].required" = true
"paths./repos/{owner}/{repo}/milestones/{number}.patch.parameters[2].type" = "integer"
"paths./repos/{owner}/{repo}/milestones/{number}.patch.parameters[3].description" = "You can check the current version of media type in responses.\n"
"paths./repos/{owner}/{repo}/milestones/{number}.patch.parameters[3].in" = "header"
"paths./repos/{owner}/{repo}/milestones/{number}.patch.parameters[3].name" = "X-GitHub-Media-Type"
"paths./repos/{owner}/{repo}/milestones/{number}.patch.parameters[3].type" = "string"
"paths./repos/{owner}/{repo}/milestones/{number}.patch.parameters[4].description" = "Is used to set specified media type."
"paths./repos/{owner}/{repo}/milestones/{number}.patch.parameters[4].in" = "header"
"paths./repos/{owner}/{repo}/milestones/{number}.patch.parameters[4].name" = "Accept"
"paths./repos/{owner}/{repo}/milestones/{number}.patch.parameters[4].type" = "string"
"paths./repos/{owner}/{repo}/milestones/{number}.patch.parameters[5].in" = "header"
"paths./repos/{owner}/{repo}/milestones/{number}.patch.parameters[5].name" = "X-RateLimit-Limit"
"paths./repos/{owner}/{repo}/milestones/{number}.patch.parameters[5].type" = "integer"
"paths./repos/{owner}/{repo}/milestones/{number}.patch.parameters[6].in" = "header"
"paths./repos/{owner}/{repo}/milestones/{number}.patch.parameters[6].name" = "X-RateLimit-Remaining"
"paths./repos/{owner}/{repo}/milestones/{number}.patch.parameters[6].type" = "integer"
"paths./repos/{owner}/{repo}/milestones/{number}.patch.parameters[7].in" = "header"
"paths./repos/{owner}/{repo}/milestones/{number}.patch.parameters[7].name" = "X-RateLimit-Reset"
"paths./repos/{owner}/{repo}/milestones/{number}.patch.parameters[7].type" = "integer"
"paths./repos/{owner}/{repo}/milestones/{number}.patch.parameters[8].in" = "header"
"paths./repos/{owner}/{repo}/milestones/{number}.patch.parameters[8].name" = "X-GitHub-Request-Id"
"paths./repos/{owner}/{repo}/milestones/{number}.patch.parameters[8].type" = "integer"
"paths./repos/{owner}/{repo}/milestones/{number}.patch.parameters[9].in" = "body"
"paths./repos/{owner}/{repo}/milestones/{number}.patch.parameters[9].name" = "body"
"paths./repos/{owner}/{repo}/milestones/{number}.patch.parameters[9].required" = true
"paths./repos/{owner}/{repo}/milestones/{number}.patch.parameters[9].schema.$ref" = "#/definitions/milestoneUpdate"
"paths./repos/{owner}/{repo}/milestones/{number}.patch.responses.200.description" = "OK"
"paths./repos/{owner}/{repo}/milestones/{number}.patch.responses.200.schema.$ref" = "#/definitions/milestone"
"paths./repos/{owner}/{repo}/milestones/{number}.patch.responses.403.description" = "API rate limit exceeded. See http://developer.github.com/v3/#rate-limiting\nfor details.\n"
"paths./repos/{owner}/{repo}/milestones/{number}/labels.get.description" = "Get labels for every issue in a milestone."
"paths./repos/{owner}/{repo}/milestones/{number}/labels.get.parameters.length" = 9
"paths./repos/{owner}/{repo}/milestones/{number}/labels.get.parameters[0].description" = "Name of repository owner."
"paths./repos/{owner}/{repo}/milestones/{number}/labels.get.parameters[0].in" = "path"
"paths./repos/{owner}/{repo}/milestones/{number}/labels.get.parameters[0].name" = "owner"
"paths./repos/{owner}/{repo}/milestones/{number}/labels.get.parameters[0].required" = true
"paths./repos/{owner}/{repo}/milestones/{number}/labels.get.parameters[0].type" = "string"
"paths./repos/{owner}/{repo}/milestones/{number}/labels.get.parameters[1].description" = "Name of repository."
"paths./repos/{owner}/{repo}/milestones/{number}/labels.get.parameters[1].in" = "path"
"paths./repos/{owner}/{repo}/milestones/{number}/labels.get.parameters[1].name" = "repo"
"paths./repos/{owner}/{repo}/milestones/{number}/labels.get.parameters[1].required" = true
"paths./repos/{owner}/{repo}/milestones/{number}/labels.get.parameters[1].type" = "string"
"paths./repos/{owner}/{repo}/milestones/{number}/labels.get.parameters[2].description" = "Number of milestone."
"paths./repos/{owner}/{repo}/milestones/{number}/labels.get.parameters[2].in" = "path"
"paths./repos/{owner}/{repo}/milestones/{number}/labels.get.parameters[2].name" = "number"
"paths./repos/{owner}/{repo}/milestones/{number}/labels.get.parameters[2].required" = true
"paths./repos/{owner}/{repo}/milestones/{number}/labels.get.parameters[2].type" = "integer"
"paths./repos/{owner}/{repo}/milestones/{number}/labels.get.parameters[3].description" = "You can check the current version of media type in responses.\n"
"paths./repos/{owner}/{repo}/milestones/{number}/labels.get.parameters[3].in" = "header"
"paths./repos/{owner}/{repo}/milestones/{number}/labels.get.parameters[3].name" = "X-GitHub-Media-Type"
"paths./repos/{owner}/{repo}/milestones/{number}/labels.get.parameters[3].type" = "string"
"paths./repos/{owner}/{repo}/milestones/{number}/labels.get.parameters[4].description" = "Is used to set specified media type."
"paths./repos/{owner}/{repo}/milestones/{number}/labels.get.parameters[4].in" = "header"
"paths./repos/{owner}/{repo}/milestones/{number}/labels.get.parameters[4].name" = "Accept"
"paths./repos/{owner}/{repo}/milestones/{number}/labels.get.parameters[4].type" = "string"
"paths./repos/{owner}/{repo}/milestones/{number}/labels.get.parameters[5].in" = "header"
"paths./repos/{owner}/{repo}/milestones/{number}/labels.get.parameters[5].name" = "X-RateLimit-Limit"
"paths./repos/{owner}/{repo}/milestones/{number}/labels.get.parameters[5].type" = "integer"
"paths./repos/{owner}/{repo}/milestones/{number}/labels.get.parameters[6].in" = "header"
"paths./repos/{owner}/{repo}/milestones/{number}/labels.get.parameters[6].name" = "X-RateLimit-Remaining"
"paths./repos/{owner}/{repo}/milestones/{number}/labels.get.parameters[6].type" = "integer"
"paths./repos/{owner}/{repo}/milestones/{number}/labels.get.parameters[7].in" = "header"
"paths./repos/{owner}/{repo}/milestones/{number}/labels.get.parameters[7].name" = "X-RateLimit-Reset"
"paths./repos/{owner}/{repo}/milestones/{number}/labels.get.parameters[7].type" = "integer"
"paths./repos/{owner}/{repo}/milestones/{number}/labels.get.parameters[8].in" = "header"
"paths./repos/{owner}/{repo}/milestones/{number}/labels.get.parameters[8].name" = "X-GitHub-Request-Id"
"paths./repos/{owner}/{repo}/milestones/{number}/labels.get.parameters[8].type" = "integer"
"paths./repos/{owner}/{repo}/milestones/{number}/labels.get.responses.200.description" = "OK"
"paths./repos/{owner}/{repo}/milestones/{number}/labels.get.responses.200.schema.$ref" = "#/definitions/labels"
"paths./repos/{owner}/{repo}/milestones/{number}/labels.get.responses.403.description" = "API rate limit exceeded. See http://developer.github.com/v3/#rate-limiting\nfor details.\n"
"paths./repos/{owner}/{repo}/notifications.get.description" = "List your notifications in a repository\nList all notifications for the current user.\n"
"paths./repos/{owner}/{repo}/notifications.get.parameters.length" = 11
"paths./repos/{owner}/{repo}/notifications.get.parameters[0].description" = "Name of repository owner."
"paths./repos/{owner}/{repo}/notifications.get.parameters[0].in" = "path"
"paths./repos/{owner}/{repo}/notifications.get.parameters[0].name" = "owner"
"paths./repos/{owner}/{repo}/notifications.get.parameters[0].required" = true
"paths./repos/{owner}/{repo}/notifications.get.parameters[0].type" = "string"
"paths./repos/{owner}/{repo}/notifications.get.parameters[10].in" = "header"
"paths./repos/{owner}/{repo}/notifications.get.parameters[10].name" = "X-GitHub-Request-Id"
"paths./repos/{owner}/{repo}/notifications.get.parameters[10].type" = "integer"
"paths./repos/{owner}/{repo}/notifications.get.parameters[1].description" = "Name of repository."
"paths./repos/{owner}/{repo}/notifications.get.parameters[1].in" = "path"
"paths./repos/{owner}/{repo}/notifications.get.parameters[1].name" = "repo"
"paths./repos/{owner}/{repo}/notifications.get.parameters[1].required" = true
"paths./repos/{owner}/{repo}/notifications.get.parameters[1].type" = "string"
"paths./repos/{owner}/{repo}/notifications.get.parameters[2].description" = "True to show notifications marked as read."
"paths./repos/{owner}/{repo}/notifications.get.parameters[2].in" = "query"
"paths./repos/{owner}/{repo}/notifications.get.parameters[2].name" = "all"
"paths./repos/{owner}/{repo}/notifications.get.parameters[2].type" = "boolean"
"paths./repos/{owner}/{repo}/notifications.get.parameters[3].description" = "True to show only notifications in which the user is directly participating\nor mentioned.\n"
"paths./repos/{owner}/{repo}/notifications.get.parameters[3].in" = "query"
"paths./repos/{owner}/{repo}/notifications.get.parameters[3].name" = "participating"
"paths./repos/{owner}/{repo}/notifications.get.parameters[3].type" = "boolean"
"paths./repos/{owner}/{repo}/notifications.get.parameters[4].description" = "The time should be passed in as UTC in the ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ.\nExample: \"2012-10-09T23:39:01Z\".\n"
"paths./repos/{owner}/{repo}/notifications.get.parameters[4].in" = "query"
"paths./repos/{owner}/{repo}/notifications.get.parameters[4].name" = "since"
"paths./repos/{owner}/{repo}/notifications.get.parameters[4].type" = "string"
"paths./repos/{owner}/{repo}/notifications.get.parameters[5].description" = "You can check the current version of media type in responses.\n"
"paths./repos/{owner}/{repo}/notifications.get.parameters[5].in" = "header"
"paths./repos/{owner}/{repo}/notifications.get.parameters[5].name" = "X-GitHub-Media-Type"
"paths./repos/{owner}/{repo}/notifications.get.parameters[5].type" = "string"
"paths./repos/{owner}/{repo}/notifications.get.parameters[6].description" = "Is used to set specified media type."
"paths./repos/{owner}/{repo}/notifications.get.parameters[6].in" = "header"
"paths./repos/{owner}/{repo}/notifications.get.parameters[6].name" = "Accept"
"paths./repos/{owner}/{repo}/notifications.get.parameters[6].type" = "string"
"paths./repos/{owner}/{repo}/notifications.get.parameters[7].in" = "header"
"paths./repos/{owner}/{repo}/notifications.get.parameters[7].name" = "X-RateLimit-Limit"
"paths./repos/{owner}/{repo}/notifications.get.parameters[7].type" = "integer"
"paths./repos/{owner}/{repo}/notifications.get.parameters[8].in" = "header"
"paths./repos/{owner}/{repo}/notifications.get.parameters[8].name" = "X-RateLimit-Remaining"
"paths./repos/{owner}/{repo}/notifications.get.parameters[8].type" = "integer"
"paths./repos/{owner}/{repo}/notifications.get.parameters[9].in" = "header"
"paths./repos/{owner}/{repo}/notifications.get.parameters[9].name" = "X-RateLimit-Reset"
"paths./repos/{owner}/{repo}/notifications.get.parameters[9].type" = "integer"
"paths./repos/{owner}/{repo}/notifications.get.responses.200.description" = "OK"
"paths./repos/{owner}/{repo}/notifications.get.responses.200.schema.$ref" = "#/definitions/notifications"
"paths./repos/{owner}/{repo}/notifications.get.responses.403.description" = "API rate limit exceeded. See http://developer.github.com/v3/#rate-limiting\nfor details.\n"
"paths./repos/{owner}/{repo}/notifications.put.description" = "Mark notifications as read in a repository.\nMarking all notifications in a repository as \"read\" removes them from the\ndefault view on GitHub.com.\n"
"paths./repos/{owner}/{repo}/notifications.put.parameters.length" = 9
"paths./repos/{owner}/{repo}/notifications.put.parameters[0].description" = "Name of repository owner."
"paths./repos/{owner}/{repo}/notifications.put.parameters[0].in" = "path"
"paths./repos/{owner}/{repo}/notifications.put.parameters[0].name" = "owner"
"paths./repos/{owner}/{repo}/notifications.put.parameters[0].required" = true
"paths./repos/{owner}/{repo}/notifications.put.parameters[0].type" = "string"
"paths./repos/{owner}/{repo}/notifications.put.parameters[1].description" = "Name of repository."
"paths./repos/{owner}/{repo}/notifications.put.parameters[1].in" = "path"
"paths./repos/{owner}/{repo}/notifications.put.parameters[1].name" = "repo"
"paths./repos/{owner}/{repo}/notifications.put.parameters[1].required" = true
"paths./repos/{owner}/{repo}/notifications.put.parameters[1].type" = "string"
"paths./repos/{owner}/{repo}/notifications.put.parameters[2].description" = "You can check the current version of media type in responses.\n"
"paths./repos/{owner}/{repo}/notifications.put.parameters[2].in" = "header"
"paths./repos/{owner}/{repo}/notifications.put.parameters[2].name" = "X-GitHub-Media-Type"
"paths./repos/{owner}/{repo}/notifications.put.parameters[2].type" = "string"
"paths./repos/{owner}/{repo}/notifications.put.parameters[3].description" = "Is used to set specified media type."
"paths./repos/{owner}/{repo}/notifications.put.parameters[3].in" = "header"
"paths./repos/{owner}/{repo}/notifications.put.parameters[3].name" = "Accept"
"paths./repos/{owner}/{repo}/notifications.put.parameters[3].type" = "string"
"paths./repos/{owner}/{repo}/notifications.put.parameters[4].in" = "header"
"paths./repos/{owner}/{repo}/notifications.put.parameters[4].name" = "X-RateLimit-Limit"
"paths./repos/{owner}/{repo}/notifications.put.parameters[4].type" = "integer"
"paths./repos/{owner}/{repo}/notifications.put.parameters[5].in" = "header"
"paths./repos/{owner}/{repo}/notifications.put.parameters[5].name" = "X-RateLimit-Remaining"
"paths./repos/{owner}/{repo}/notifications.put.parameters[5].type" = "integer"
"paths./repos/{owner}/{repo}/notifications.put.parameters[6].in" = "header"
"paths./repos/{owner}/{repo}/notifications.put.parameters[6].name" = "X-RateLimit-Reset"
"paths./repos/{owner}/{repo}/notifications.put.parameters[6].type" = "integer"
"paths./repos/{owner}/{repo}/notifications.put.parameters[7].in" = "header"
"paths./repos/{owner}/{repo}/notifications.put.parameters[7].name" = "X-GitHub-Request-Id"
"paths./repos/{owner}/{repo}/notifications.put.parameters[7].type" = "integer"
"paths./repos/{owner}/{repo}/notifications.put.parameters[8].in" = "body"
"paths./repos/{owner}/{repo}/notifications.put.parameters[8].name" = "body"
"paths./repos/{owner}/{repo}/notifications.put.parameters[8].required" = true
"paths./repos/{owner}/{repo}/notifications.put.parameters[8].schema.$ref" = "#/definitions/notificationMarkRead"
"paths./repos/{owner}/{repo}/notifications.put.responses.205.description" = "Marked as read."
"paths./repos/{owner}/{repo}/notifications.put.responses.403.description" = "API rate limit exceeded. See http://developer.github.com/v3/#rate-limiting\nfor details.\n"
"paths./repos/{owner}/{repo}/pulls.get.description" = "List pull requests."
"paths./repos/{owner}/{repo}/pulls.get.parameters.length" = 11
"paths./repos/{owner}/{repo}/pulls.get.parameters[0].description" = "Name of repository owner."
"paths./repos/{owner}/{repo}/pulls.get.parameters[0].in" = "path"
"paths./repos/{owner}/{repo}/pulls.get.parameters[0].name" = "owner"
"paths./repos/{owner}/{repo}/pulls.get.parameters[0].required" = true
"paths./repos/{owner}/{repo}/pulls.get.parameters[0].type" = "string"
"paths./repos/{owner}/{repo}/pulls.get.parameters[10].in" = "header"
"paths./repos/{owner}/{repo}/pulls.get.parameters[10].name" = "X-GitHub-Request-Id"
"paths./repos/{owner}/{repo}/pulls.get.parameters[10].type" = "integer"
"paths./repos/{owner}/{repo}/pulls.get.parameters[1].description" = "Name of repository."
"paths./repos/{owner}/{repo}/pulls.get.parameters[1].in" = "path"
"paths./repos/{owner}/{repo}/pulls.get.parameters[1].name" = "repo"
"paths./repos/{owner}/{repo}/pulls.get.parameters[1].required" = true
"paths./repos/{owner}/{repo}/pulls.get.parameters[1].type" = "string"
"paths./repos/{owner}/{repo}/pulls.get.parameters[2].default" = "open"
"paths./repos/{owner}/{repo}/pulls.get.parameters[2].description" = "String to filter by state."
"paths./repos/{owner}/{repo}/pulls.get.parameters[2].enum.length" = 2
"paths./repos/{owner}/{repo}/pulls.get.parameters[2].enum[0]" = "open"
"paths./repos/{owner}/{repo}/pulls.get.parameters[2].enum[1]" = "closed"
"paths./repos/{owner}/{repo}/pulls.get.parameters[2].in" = "query"
"paths./repos/{owner}/{repo}/pulls.get.parameters[2].name" = "state"
"paths./repos/{owner}/{repo}/pulls.get.parameters[2].type" = "string"
"paths./repos/{owner}/{repo}/pulls.get.parameters[3].description" = "Filter pulls by head user and branch name in the format of 'user:ref-name'.\nExample: github:new-script-format.\n"
"paths./repos/{owner}/{repo}/pulls.get.parameters[3].in" = "query"
"paths./repos/{owner}/{repo}/pulls.get.parameters[3].name" = "head"
"paths./repos/{owner}/{repo}/pulls.get.parameters[3].type" = "string"
"paths./repos/{owner}/{repo}/pulls.get.parameters[4].description" = "Filter pulls by base branch name. Example - gh-pages."
"paths./repos/{owner}/{repo}/pulls.get.parameters[4].in" = "query"
"paths./repos/{owner}/{repo}/pulls.get.parameters[4].name" = "base"
"paths./repos/{owner}/{repo}/pulls.get.parameters[4].type" = "string"
"paths./repos/{owner}/{repo}/pulls.get.parameters[5].description" = "You can check the current version of media type in responses.\n"
"paths./repos/{owner}/{repo}/pulls.get.parameters[5].in" = "header"
"paths./repos/{owner}/{repo}/pulls.get.parameters[5].name" = "X-GitHub-Media-Type"
"paths./repos/{owner}/{repo}/pulls.get.parameters[5].type" = "string"
"paths./repos/{owner}/{repo}/pulls.get.parameters[6].description" = "Is used to set specified media type."
"paths./repos/{owner}/{repo}/pulls.get.parameters[6].in" = "header"
"paths./repos/{owner}/{repo}/pulls.get.parameters[6].name" = "Accept"
"paths./repos/{owner}/{repo}/pulls.get.parameters[6].type" = "string"
"paths./repos/{owner}/{repo}/pulls.get.parameters[7].in" = "header"
"paths./repos/{owner}/{repo}/pulls.get.parameters[7].name" = "X-RateLimit-Limit"
"paths./repos/{owner}/{repo}/pulls.get.parameters[7].type" = "integer"
"paths./repos/{owner}/{repo}/pulls.get.parameters[8].in" = "header"
"paths./repos/{owner}/{repo}/pulls.get.parameters[8].name" = "X-RateLimit-Remaining"
"paths./repos/{owner}/{repo}/pulls.get.parameters[8].type" = "integer"
"paths./repos/{owner}/{repo}/pulls.get.parameters[9].in" = "header"
"paths./repos/{owner}/{repo}/pulls.get.parameters[9].name" = "X-RateLimit-Reset"
"paths./repos/{owner}/{repo}/pulls.get.parameters[9].type" = "integer"
"paths./repos/{owner}/{repo}/pulls.get.responses.200.description" = "OK"
"paths./repos/{owner}/{repo}/pulls.get.responses.200.schema.$ref" = "#/definitions/pulls"
"paths./repos/{owner}/{repo}/pulls.get.responses.403.description" = "API rate limit exceeded. See http://developer.github.com/v3/#rate-limiting\nfor details.\n"
"paths./repos/{owner}/{repo}/pulls.post.description" = "Create a pull request."
"paths./repos/{owner}/{repo}/pulls.post.parameters.length" = 9
"paths./repos/{owner}/{repo}/pulls.post.parameters[0].description" = "Name of repository owner."
"paths./repos/{owner}/{repo}/pulls.post.parameters[0].in" = "path"
"paths./repos/{owner}/{repo}/pulls.post.parameters[0].name" = "owner"
"paths./repos/{owner}/{repo}/pulls.post.parameters[0].required" = true
"paths./repos/{owner}/{repo}/pulls.post.parameters[0].type" = "string"
"paths./repos/{owner}/{repo}/pulls.post.parameters[1].description" = "Name of repository."
"paths./repos/{owner}/{repo}/pulls.post.parameters[1].in" = "path"
"paths./repos/{owner}/{repo}/pulls.post.parameters[1].name" = "repo"
"paths./repos/{owner}/{repo}/pulls.post.parameters[1].required" = true
"paths./repos/{owner}/{repo}/pulls.post.parameters[1].type" = "string"
"paths./repos/{owner}/{repo}/pulls.post.parameters[2].description" = "You can check the current version of media type in responses.\n"
"paths./repos/{owner}/{repo}/pulls.post.parameters[2].in" = "header"
"paths./repos/{owner}/{repo}/pulls.post.parameters[2].name" = "X-GitHub-Media-Type"
"paths./repos/{owner}/{repo}/pulls.post.parameters[2].type" = "string"
"paths./repos/{owner}/{repo}/pulls.post.parameters[3].description" = "Is used to set specified media type."
"paths./repos/{owner}/{repo}/pulls.post.parameters[3].in" = "header"
"paths./repos/{owner}/{repo}/pulls.post.parameters[3].name" = "Accept"
"paths./repos/{owner}/{repo}/pulls.post.parameters[3].type" = "string"
"paths./repos/{owner}/{repo}/pulls.post.parameters[4].in" = "header"
"paths./repos/{owner}/{repo}/pulls.post.parameters[4].name" = "X-RateLimit-Limit"
"paths./repos/{owner}/{repo}/pulls.post.parameters[4].type" = "integer"
"paths./repos/{owner}/{repo}/pulls.post.parameters[5].in" = "header"
"paths./repos/{owner}/{repo}/pulls.post.parameters[5].name" = "X-RateLimit-Remaining"
"paths./repos/{owner}/{repo}/pulls.post.parameters[5].type" = "integer"
"paths./repos/{owner}/{repo}/pulls.post.parameters[6].in" = "header"
"paths./repos/{owner}/{repo}/pulls.post.parameters[6].name" = "X-RateLimit-Reset"
"paths./repos/{owner}/{repo}/pulls.post.parameters[6].type" = "integer"
"paths./repos/{owner}/{repo}/pulls.post.parameters[7].in" = "header"
"paths./repos/{owner}/{repo}/pulls.post.parameters[7].name" = "X-GitHub-Request-Id"
"paths./repos/{owner}/{repo}/pulls.post.parameters[7].type" = "integer"
"paths./repos/{owner}/{repo}/pulls.post.parameters[8].in" = "body"
"paths./repos/{owner}/{repo}/pulls.post.parameters[8].name" = "body"
"paths./repos/{owner}/{repo}/pulls.post.parameters[8].required" = true
"paths./repos/{owner}/{repo}/pulls.post.parameters[8].schema.$ref" = "#/definitions/pullsPost"
"paths./repos/{owner}/{repo}/pulls.post.responses.201.description" = "Created"
"paths./repos/{owner}/{repo}/pulls.post.responses.201.schema.$ref" = "#/definitions/pulls"
"paths./repos/{owner}/{repo}/pulls.post.responses.403.description" = "API rate limit exceeded. See http://developer.github.com/v3/#rate-limiting\nfor details.\n"
"paths./repos/{owner}/{repo}/pulls/comments.get.description" = "List comments in a repository.\nBy default, Review Comments are ordered by ascending ID.\n"
"paths./repos/{owner}/{repo}/pulls/comments.get.parameters.length" = 11
"paths./repos/{owner}/{repo}/pulls/comments.get.parameters[0].description" = "Name of repository owner."
"paths./repos/{owner}/{repo}/pulls/comments.get.parameters[0].in" = "path"
"paths./repos/{owner}/{repo}/pulls/comments.get.parameters[0].name" = "owner"
"paths./repos/{owner}/{repo}/pulls/comments.get.parameters[0].required" = true
"paths./repos/{owner}/{repo}/pulls/comments.get.parameters[0].type" = "string"
"paths./repos/{owner}/{repo}/pulls/comments.get.parameters[10].in" = "header"
"paths./repos/{owner}/{repo}/pulls/comments.get.parameters[10].name" = "X-GitHub-Request-Id"
"paths./repos/{owner}/{repo}/pulls/comments.get.parameters[10].type" = "integer"
"paths./repos/{owner}/{repo}/pulls/comments.get.parameters[1].description" = "Name of repository."
"paths./repos/{owner}/{repo}/pulls/comments.get.parameters[1].in" = "path"
"paths./repos/{owner}/{repo}/pulls/comments.get.parameters[1].name" = "repo"
"paths./repos/{owner}/{repo}/pulls/comments.get.parameters[1].required" = true
"paths./repos/{owner}/{repo}/pulls/comments.get.parameters[1].type" = "string"
"paths./repos/{owner}/{repo}/pulls/comments.get.parameters[2].description" = "Ignored without 'sort' parameter."
"paths./repos/{owner}/{repo}/pulls/comments.get.parameters[2].in" = "query"
"paths./repos/{owner}/{repo}/pulls/comments.get.parameters[2].name" = "direction"
"paths./repos/{owner}/{repo}/pulls/comments.get.parameters[2].type" = "string"
"paths./repos/{owner}/{repo}/pulls/comments.get.parameters[3].description" = ""
"paths./repos/{owner}/{repo}/pulls/comments.get.parameters[3].enum.length" = 2
"paths./repos/{owner}/{repo}/pulls/comments.get.parameters[3].enum[0]" = "created"
"paths./repos/{owner}/{repo}/pulls/comments.get.parameters[3].enum[1]" = "updated"
"paths./repos/{owner}/{repo}/pulls/comments.get.parameters[3].in" = "query"
"paths./repos/{owner}/{repo}/pulls/comments.get.parameters[3].name" = "sort"
"paths./repos/{owner}/{repo}/pulls/comments.get.parameters[3].type" = "string"
"paths./repos/{owner}/{repo}/pulls/comments.get.parameters[4].description" = "The time should be passed in as UTC in the ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ.\nExample: \"2012-10-09T23:39:01Z\".\n"
"paths./repos/{owner}/{repo}/pulls/comments.get.parameters[4].in" = "query"
"paths./repos/{owner}/{repo}/pulls/comments.get.parameters[4].name" = "since"
"paths./repos/{owner}/{repo}/pulls/comments.get.parameters[4].type" = "string"
"paths./repos/{owner}/{repo}/pulls/comments.get.parameters[5].description" = "You can check the current version of media type in responses.\n"
"paths./repos/{owner}/{repo}/pulls/comments.get.parameters[5].in" = "header"
"paths./repos/{owner}/{repo}/pulls/comments.get.parameters[5].name" = "X-GitHub-Media-Type"
"paths./repos/{owner}/{repo}/pulls/comments.get.parameters[5].type" = "string"
"paths./repos/{owner}/{repo}/pulls/comments.get.parameters[6].description" = "Is used to set specified media type."
"paths./repos/{owner}/{repo}/pulls/comments.get.parameters[6].in" = "header"
"paths./repos/{owner}/{repo}/pulls/comments.get.parameters[6].name" = "Accept"
"paths./repos/{owner}/{repo}/pulls/comments.get.parameters[6].type" = "string"
"paths./repos/{owner}/{repo}/pulls/comments.get.parameters[7].in" = "header"
"paths./repos/{owner}/{repo}/pulls/comments.get.parameters[7].name" = "X-RateLimit-Limit"
"paths./repos/{owner}/{repo}/pulls/comments.get.parameters[7].type" = "integer"
"paths./repos/{owner}/{repo}/pulls/comments.get.parameters[8].in" = "header"
"paths./repos/{owner}/{repo}/pulls/comments.get.parameters[8].name" = "X-RateLimit-Remaining"
"paths./repos/{owner}/{repo}/pulls/comments.get.parameters[8].type" = "integer"
"paths./repos/{owner}/{repo}/pulls/comments.get.parameters[9].in" = "header"
"paths./repos/{owner}/{repo}/pulls/comments.get.parameters[9].name" = "X-RateLimit-Reset"
"paths./repos/{owner}/{repo}/pulls/comments.get.parameters[9].type" = "integer"
"paths./repos/{owner}/{repo}/pulls/comments.get.responses.200.description" = "OK"
"paths./repos/{owner}/{repo}/pulls/comments.get.responses.200.schema.$ref" = "#/definitions/issuesComments"
"paths./repos/{owner}/{repo}/pulls/comments.get.responses.403.description" = "API rate limit exceeded. See http://developer.github.com/v3/#rate-limiting\nfor details.\n"
"paths./repos/{owner}/{repo}/pulls/comments/{commentId}.delete.description" = "Delete a comment."
"paths./repos/{owner}/{repo}/pulls/comments/{commentId}.delete.parameters.length" = 9
"paths./repos/{owner}/{repo}/pulls/comments/{commentId}.delete.parameters[0].description" = "Name of repository owner."
"paths./repos/{owner}/{repo}/pulls/comments/{commentId}.delete.parameters[0].in" = "path"
"paths./repos/{owner}/{repo}/pulls/comments/{commentId}.delete.parameters[0].name" = "owner"
"paths./repos/{owner}/{repo}/pulls/comments/{commentId}.delete.parameters[0].required" = true
"paths./repos/{owner}/{repo}/pulls/comments/{commentId}.delete.parameters[0].type" = "string"
"paths./repos/{owner}/{repo}/pulls/comments/{commentId}.delete.parameters[1].description" = "Name of repository."
"paths./repos/{owner}/{repo}/pulls/comments/{commentId}.delete.parameters[1].in" = "path"
"paths./repos/{owner}/{repo}/pulls/comments/{commentId}.delete.parameters[1].name" = "repo"
"paths./repos/{owner}/{repo}/pulls/comments/{commentId}.delete.parameters[1].required" = true
"paths./repos/{owner}/{repo}/pulls/comments/{commentId}.delete.parameters[1].type" = "string"
"paths./repos/{owner}/{repo}/pulls/comments/{commentId}.delete.parameters[2].description" = "Id of comment."
"paths./repos/{owner}/{repo}/pulls/comments/{commentId}.delete.parameters[2].in" = "path"
"paths./repos/{owner}/{repo}/pulls/comments/{commentId}.delete.parameters[2].name" = "commentId"
"paths./repos/{owner}/{repo}/pulls/comments/{commentId}.delete.parameters[2].required" = true
"paths./repos/{owner}/{repo}/pulls/comments/{commentId}.delete.parameters[2].type" = "integer"
"paths./repos/{owner}/{repo}/pulls/comments/{commentId}.delete.parameters[3].description" = "You can check the current version of media type in responses.\n"
"paths./repos/{owner}/{repo}/pulls/comments/{commentId}.delete.parameters[3].in" = "header"
"paths./repos/{owner}/{repo}/pulls/comments/{commentId}.delete.parameters[3].name" = "X-GitHub-Media-Type"
"paths./repos/{owner}/{repo}/pulls/comments/{commentId}.delete.parameters[3].type" = "string"
"paths./repos/{owner}/{repo}/pulls/comments/{commentId}.delete.parameters[4].description" = "Is used to set specified media type."
"paths./repos/{owner}/{repo}/pulls/comments/{commentId}.delete.parameters[4].in" = "header"
"paths./repos/{owner}/{repo}/pulls/comments/{commentId}.delete.parameters[4].name" = "Accept"
"paths./repos/{owner}/{repo}/pulls/comments/{commentId}.delete.parameters[4].type" = "string"
"paths./repos/{owner}/{repo}/pulls/comments/{commentId}.delete.parameters[5].in" = "header"
"paths./repos/{owner}/{repo}/pulls/comments/{commentId}.delete.parameters[5].name" = "X-RateLimit-Limit"
"paths./repos/{owner}/{repo}/pulls/comments/{commentId}.delete.parameters[5].type" = "integer"
"paths./repos/{owner}/{repo}/pulls/comments/{commentId}.delete.parameters[6].in" = "header"
"paths./repos/{owner}/{repo}/pulls/comments/{commentId}.delete.parameters[6].name" = "X-RateLimit-Remaining"
"paths./repos/{owner}/{repo}/pulls/comments/{commentId}.delete.parameters[6].type" = "integer"
"paths./repos/{owner}/{repo}/pulls/comments/{commentId}.delete.parameters[7].in" = "header"
"paths./repos/{owner}/{repo}/pulls/comments/{commentId}.delete.parameters[7].name" = "X-RateLimit-Reset"
"paths./repos/{owner}/{repo}/pulls/comments/{commentId}.delete.parameters[7].type" = "integer"
"paths./repos/{owner}/{repo}/pulls/comments/{commentId}.delete.parameters[8].in" = "header"
"paths./repos/{owner}/{repo}/pulls/comments/{commentId}.delete.parameters[8].name" = "X-GitHub-Request-Id"
"paths./repos/{owner}/{repo}/pulls/comments/{commentId}.delete.parameters[8].type" = "integer"
"paths./repos/{owner}/{repo}/pulls/comments/{commentId}.delete.responses.204.description" = "No content.\n"
"paths./repos/{owner}/{repo}/pulls/comments/{commentId}.delete.responses.403.description" = "API rate limit exceeded. See http://developer.github.com/v3/#rate-limiting\nfor details.\n"
"paths./repos/{owner}/{repo}/pulls/comments/{commentId}.get.description" = "Get a single comment."
"paths./repos/{owner}/{repo}/pulls/comments/{commentId}.get.parameters.length" = 9
"paths./repos/{owner}/{repo}/pulls/comments/{commentId}.get.parameters[0].description" = "Name of repository owner."
"paths./repos/{owner}/{repo}/pulls/comments/{commentId}.get.parameters[0].in" = "path"
"paths./repos/{owner}/{repo}/pulls/comments/{commentId}.get.parameters[0].name" = "owner"
"paths./repos/{owner}/{repo}/pulls/comments/{commentId}.get.parameters[0].required" = true
"paths./repos/{owner}/{repo}/pulls/comments/{commentId}.get.parameters[0].type" = "string"
"paths./repos/{owner}/{repo}/pulls/comments/{commentId}.get.parameters[1].description" = "Name of repository."
"paths./repos/{owner}/{repo}/pulls/comments/{commentId}.get.parameters[1].in" = "path"
"paths./repos/{owner}/{repo}/pulls/comments/{commentId}.get.parameters[1].name" = "repo"
"paths./repos/{owner}/{repo}/pulls/comments/{commentId}.get.parameters[1].required" = true
"paths./repos/{owner}/{repo}/pulls/comments/{commentId}.get.parameters[1].type" = "string"
"paths./repos/{owner}/{repo}/pulls/comments/{commentId}.get.parameters[2].description" = "Id of comment."
"paths./repos/{owner}/{repo}/pulls/comments/{commentId}.get.parameters[2].in" = "path"
"paths./repos/{owner}/{repo}/pulls/comments/{commentId}.get.parameters[2].name" = "commentId"
"paths./repos/{owner}/{repo}/pulls/comments/{commentId}.get.parameters[2].required" = true
"paths./repos/{owner}/{repo}/pulls/comments/{commentId}.get.parameters[2].type" = "integer"
"paths./repos/{owner}/{repo}/pulls/comments/{commentId}.get.parameters[3].description" = "You can check the current version of media type in responses.\n"
"paths./repos/{owner}/{repo}/pulls/comments/{commentId}.get.parameters[3].in" = "header"
"paths./repos/{owner}/{repo}/pulls/comments/{commentId}.get.parameters[3].name" = "X-GitHub-Media-Type"
"paths./repos/{owner}/{repo}/pulls/comments/{commentId}.get.parameters[3].type" = "string"
"paths./repos/{owner}/{repo}/pulls/comments/{commentId}.get.parameters[4].description" = "Is used to set specified media type."
"paths./repos/{owner}/{repo}/pulls/comments/{commentId}.get.parameters[4].in" = "header"
"paths./repos/{owner}/{repo}/pulls/comments/{commentId}.get.parameters[4].name" = "Accept"
"paths./repos/{owner}/{repo}/pulls/comments/{commentId}.get.parameters[4].type" = "string"
"paths./repos/{owner}/{repo}/pulls/comments/{commentId}.get.parameters[5].in" = "header"
"paths./repos/{owner}/{repo}/pulls/comments/{commentId}.get.parameters[5].name" = "X-RateLimit-Limit"
"paths./repos/{owner}/{repo}/pulls/comments/{commentId}.get.parameters[5].type" = "integer"
"paths./repos/{owner}/{repo}/pulls/comments/{commentId}.get.parameters[6].in" = "header"
"paths./repos/{owner}/{repo}/pulls/comments/{commentId}.get.parameters[6].name" = "X-RateLimit-Remaining"
"paths./repos/{owner}/{repo}/pulls/comments/{commentId}.get.parameters[6].type" = "integer"
"paths./repos/{owner}/{repo}/pulls/comments/{commentId}.get.parameters[7].in" = "header"
"paths./repos/{owner}/{repo}/pulls/comments/{commentId}.get.parameters[7].name" = "X-RateLimit-Reset"
"paths./repos/{owner}/{repo}/pulls/comments/{commentId}.get.parameters[7].type" = "integer"
"paths./repos/{owner}/{repo}/pulls/comments/{commentId}.get.parameters[8].in" = "header"
"paths./repos/{owner}/{repo}/pulls/comments/{commentId}.get.parameters[8].name" = "X-GitHub-Request-Id"
"paths./repos/{owner}/{repo}/pulls/comments/{commentId}.get.parameters[8].type" = "integer"
"paths./repos/{owner}/{repo}/pulls/comments/{commentId}.get.responses.200.description" = "OK"
"paths./repos/{owner}/{repo}/pulls/comments/{commentId}.get.responses.200.schema.$ref" = "#/definitions/pullsComment"
"paths./repos/{owner}/{repo}/pulls/comments/{commentId}.get.responses.403.description" = "API rate limit exceeded. See http://developer.github.com/v3/#rate-limiting\nfor details.\n"
"paths./repos/{owner}/{repo}/pulls/comments/{commentId}.patch.description" = "Edit a comment."
"paths./repos/{owner}/{repo}/pulls/comments/{commentId}.patch.parameters.length" = 10
"paths./repos/{owner}/{repo}/pulls/comments/{commentId}.patch.parameters[0].description" = "Name of repository owner."
"paths./repos/{owner}/{repo}/pulls/comments/{commentId}.patch.parameters[0].in" = "path"
"paths./repos/{owner}/{repo}/pulls/comments/{commentId}.patch.parameters[0].name" = "owner"
"paths./repos/{owner}/{repo}/pulls/comments/{commentId}.patch.parameters[0].required" = true
"paths./repos/{owner}/{repo}/pulls/comments/{commentId}.patch.parameters[0].type" = "string"
"paths./repos/{owner}/{repo}/pulls/comments/{commentId}.patch.parameters[1].description" = "Name of repository."
"paths./repos/{owner}/{repo}/pulls/comments/{commentId}.patch.parameters[1].in" = "path"
"paths./repos/{owner}/{repo}/pulls/comments/{commentId}.patch.parameters[1].name" = "repo"
"paths./repos/{owner}/{repo}/pulls/comments/{commentId}.patch.parameters[1].required" = true
"paths./repos/{owner}/{repo}/pulls/comments/{commentId}.patch.parameters[1].type" = "string"
"paths./repos/{owner}/{repo}/pulls/comments/{commentId}.patch.parameters[2].description" = "Id of comment."
"paths./repos/{owner}/{repo}/pulls/comments/{commentId}.patch.parameters[2].in" = "path"
"paths./repos/{owner}/{repo}/pulls/comments/{commentId}.patch.parameters[2].name" = "commentId"
"paths./repos/{owner}/{repo}/pulls/comments/{commentId}.patch.parameters[2].required" = true
"paths./repos/{owner}/{repo}/pulls/comments/{commentId}.patch.parameters[2].type" = "integer"
"paths./repos/{owner}/{repo}/pulls/comments/{commentId}.patch.parameters[3].description" = "You can check the current version of media type in responses.\n"
"paths./repos/{owner}/{repo}/pulls/comments/{commentId}.patch.parameters[3].in" = "header"
"paths./repos/{owner}/{repo}/pulls/comments/{commentId}.patch.parameters[3].name" = "X-GitHub-Media-Type"
"paths./repos/{owner}/{repo}/pulls/comments/{commentId}.patch.parameters[3].type" = "string"
"paths./repos/{owner}/{repo}/pulls/comments/{commentId}.patch.parameters[4].description" = "Is used to set specified media type."
"paths./repos/{owner}/{repo}/pulls/comments/{commentId}.patch.parameters[4].in" = "header"
"paths./repos/{owner}/{repo}/pulls/comments/{commentId}.patch.parameters[4].name" = "Accept"
"paths./repos/{owner}/{repo}/pulls/comments/{commentId}.patch.parameters[4].type" = "string"
"paths./repos/{owner}/{repo}/pulls/comments/{commentId}.patch.parameters[5].in" = "header"
"paths./repos/{owner}/{repo}/pulls/comments/{commentId}.patch.parameters[5].name" = "X-RateLimit-Limit"
"paths./repos/{owner}/{repo}/pulls/comments/{commentId}.patch.parameters[5].type" = "integer"
"paths./repos/{owner}/{repo}/pulls/comments/{commentId}.patch.parameters[6].in" = "header"
"paths./repos/{owner}/{repo}/pulls/comments/{commentId}.patch.parameters[6].name" = "X-RateLimit-Remaining"
"paths./repos/{owner}/{repo}/pulls/comments/{commentId}.patch.parameters[6].type" = "integer"
"paths./repos/{owner}/{repo}/pulls/comments/{commentId}.patch.parameters[7].in" = "header"
"paths./repos/{owner}/{repo}/pulls/comments/{commentId}.patch.parameters[7].name" = "X-RateLimit-Reset"
"paths./repos/{owner}/{repo}/pulls/comments/{commentId}.patch.parameters[7].type" = "integer"
"paths./repos/{owner}/{repo}/pulls/comments/{commentId}.patch.parameters[8].in" = "header"
"paths./repos/{owner}/{repo}/pulls/comments/{commentId}.patch.parameters[8].name" = "X-GitHub-Request-Id"
"paths./repos/{owner}/{repo}/pulls/comments/{commentId}.patch.parameters[8].type" = "integer"
"paths./repos/{owner}/{repo}/pulls/comments/{commentId}.patch.parameters[9].in" = "body"
"paths./repos/{owner}/{repo}/pulls/comments/{commentId}.patch.parameters[9].name" = "body"
"paths./repos/{owner}/{repo}/pulls/comments/{commentId}.patch.parameters[9].required" = true
"paths./repos/{owner}/{repo}/pulls/comments/{commentId}.patch.parameters[9].schema.$ref" = "#/definitions/commentBody"
"paths./repos/{owner}/{repo}/pulls/comments/{commentId}.patch.responses.200.description" = "OK"
"paths./repos/{owner}/{repo}/pulls/comments/{commentId}.patch.responses.200.schema.$ref" = "#/definitions/pullsComment"
"paths./repos/{owner}/{repo}/pulls/comments/{commentId}.patch.responses.403.description" = "API rate limit exceeded. See http://developer.github.com/v3/#rate-limiting\nfor details.\n"
"paths./repos/{owner}/{repo}/pulls/{number}.get.description" = "Get a single pull request."
"paths./repos/{owner}/{repo}/pulls/{number}.get.parameters.length" = 9
"paths./repos/{owner}/{repo}/pulls/{number}.get.parameters[0].description" = "Name of repository owner."
"paths./repos/{owner}/{repo}/pulls/{number}.get.parameters[0].in" = "path"
"paths./repos/{owner}/{repo}/pulls/{number}.get.parameters[0].name" = "owner"
"paths./repos/{owner}/{repo}/pulls/{number}.get.parameters[0].required" = true
"paths./repos/{owner}/{repo}/pulls/{number}.get.parameters[0].type" = "string"
"paths./repos/{owner}/{repo}/pulls/{number}.get.parameters[1].description" = "Name of repository."
"paths./repos/{owner}/{repo}/pulls/{number}.get.parameters[1].in" = "path"
"paths./repos/{owner}/{repo}/pulls/{number}.get.parameters[1].name" = "repo"
"paths./repos/{owner}/{repo}/pulls/{number}.get.parameters[1].required" = true
"paths./repos/{owner}/{repo}/pulls/{number}.get.parameters[1].type" = "string"
"paths./repos/{owner}/{repo}/pulls/{number}.get.parameters[2].description" = "Id of pull."
"paths./repos/{owner}/{repo}/pulls/{number}.get.parameters[2].in" = "path"
"paths./repos/{owner}/{repo}/pulls/{number}.get.parameters[2].name" = "number"
"paths./repos/{owner}/{repo}/pulls/{number}.get.parameters[2].required" = true
"paths./repos/{owner}/{repo}/pulls/{number}.get.parameters[2].type" = "integer"
"paths./repos/{owner}/{repo}/pulls/{number}.get.parameters[3].description" = "You can check the current version of media type in responses.\n"
"paths./repos/{owner}/{repo}/pulls/{number}.get.parameters[3].in" = "header"
"paths./repos/{owner}/{repo}/pulls/{number}.get.parameters[3].name" = "X-GitHub-Media-Type"
"paths./repos/{owner}/{repo}/pulls/{number}.get.parameters[3].type" = "string"
"paths./repos/{owner}/{repo}/pulls/{number}.get.parameters[4].description" = "Is used to set specified media type."
"paths./repos/{owner}/{repo}/pulls/{number}.get.parameters[4].in" = "header"
"paths./repos/{owner}/{repo}/pulls/{number}.get.parameters[4].name" = "Accept"
"paths./repos/{owner}/{repo}/pulls/{number}.get.parameters[4].type" = "string"
"paths./repos/{owner}/{repo}/pulls/{number}.get.parameters[5].in" = "header"
"paths./repos/{owner}/{repo}/pulls/{number}.get.parameters[5].name" = "X-RateLimit-Limit"
"paths./repos/{owner}/{repo}/pulls/{number}.get.parameters[5].type" = "integer"
"paths./repos/{owner}/{repo}/pulls/{number}.get.parameters[6].in" = "header"
"paths./repos/{owner}/{repo}/pulls/{number}.get.parameters[6].name" = "X-RateLimit-Remaining"
"paths./repos/{owner}/{repo}/pulls/{number}.get.parameters[6].type" = "integer"
"paths./repos/{owner}/{repo}/pulls/{number}.get.parameters[7].in" = "header"
"paths./repos/{owner}/{repo}/pulls/{number}.get.parameters[7].name" = "X-RateLimit-Reset"
"paths./repos/{owner}/{repo}/pulls/{number}.get.parameters[7].type" = "integer"
"paths./repos/{owner}/{repo}/pulls/{number}.get.parameters[8].in" = "header"
"paths./repos/{owner}/{repo}/pulls/{number}.get.parameters[8].name" = "X-GitHub-Request-Id"
"paths./repos/{owner}/{repo}/pulls/{number}.get.parameters[8].type" = "integer"
"paths./repos/{owner}/{repo}/pulls/{number}.get.responses.200.description" = "OK"
"paths./repos/{owner}/{repo}/pulls/{number}.get.responses.200.schema.$ref" = "#/definitions/pullRequest"
"paths./repos/{owner}/{repo}/pulls/{number}.get.responses.403.description" = "API rate limit exceeded. See http://developer.github.com/v3/#rate-limiting\nfor details.\n"
"paths./repos/{owner}/{repo}/pulls/{number}.patch.description" = "Update a pull request."
"paths./repos/{owner}/{repo}/pulls/{number}.patch.parameters.length" = 10
"paths./repos/{owner}/{repo}/pulls/{number}.patch.parameters[0].description" = "Name of repository owner."
"paths./repos/{owner}/{repo}/pulls/{number}.patch.parameters[0].in" = "path"
"paths./repos/{owner}/{repo}/pulls/{number}.patch.parameters[0].name" = "owner"
"paths./repos/{owner}/{repo}/pulls/{number}.patch.parameters[0].required" = true
"paths./repos/{owner}/{repo}/pulls/{number}.patch.parameters[0].type" = "string"
"paths./repos/{owner}/{repo}/pulls/{number}.patch.parameters[1].description" = "Name of repository."
"paths./repos/{owner}/{repo}/pulls/{number}.patch.parameters[1].in" = "path"
"paths./repos/{owner}/{repo}/pulls/{number}.patch.parameters[1].name" = "repo"
"paths./repos/{owner}/{repo}/pulls/{number}.patch.parameters[1].required" = true
"paths./repos/{owner}/{repo}/pulls/{number}.patch.parameters[1].type" = "string"
"paths./repos/{owner}/{repo}/pulls/{number}.patch.parameters[2].description" = "Id of pull."
"paths./repos/{owner}/{repo}/pulls/{number}.patch.parameters[2].in" = "path"
"paths./repos/{owner}/{repo}/pulls/{number}.patch.parameters[2].name" = "number"
"paths./repos/{owner}/{repo}/pulls/{number}.patch.parameters[2].required" = true
"paths./repos/{owner}/{repo}/pulls/{number}.patch.parameters[2].type" = "integer"
"paths./repos/{owner}/{repo}/pulls/{number}.patch.parameters[3].description" = "You can check the current version of media type in responses.\n"
"paths./repos/{owner}/{repo}/pulls/{number}.patch.parameters[3].in" = "header"
"paths./repos/{owner}/{repo}/pulls/{number}.patch.parameters[3].name" = "X-GitHub-Media-Type"
"paths./repos/{owner}/{repo}/pulls/{number}.patch.parameters[3].type" = "string"
"paths./repos/{owner}/{repo}/pulls/{number}.patch.parameters[4].description" = "Is used to set specified media type."
"paths./repos/{owner}/{repo}/pulls/{number}.patch.parameters[4].in" = "header"
"paths./repos/{owner}/{repo}/pulls/{number}.patch.parameters[4].name" = "Accept"
"paths./repos/{owner}/{repo}/pulls/{number}.patch.parameters[4].type" = "string"
"paths./repos/{owner}/{repo}/pulls/{number}.patch.parameters[5].in" = "header"
"paths./repos/{owner}/{repo}/pulls/{number}.patch.parameters[5].name" = "X-RateLimit-Limit"
"paths./repos/{owner}/{repo}/pulls/{number}.patch.parameters[5].type" = "integer"
"paths./repos/{owner}/{repo}/pulls/{number}.patch.parameters[6].in" = "header"
"paths./repos/{owner}/{repo}/pulls/{number}.patch.parameters[6].name" = "X-RateLimit-Remaining"
"paths./repos/{owner}/{repo}/pulls/{number}.patch.parameters[6].type" = "integer"
"paths./repos/{owner}/{repo}/pulls/{number}.patch.parameters[7].in" = "header"
"paths./repos/{owner}/{repo}/pulls/{number}.patch.parameters[7].name" = "X-RateLimit-Reset"
"paths./repos/{owner}/{repo}/pulls/{number}.patch.parameters[7].type" = "integer"
"paths./repos/{owner}/{repo}/pulls/{number}.patch.parameters[8].in" = "header"
"paths./repos/{owner}/{repo}/pulls/{number}.patch.parameters[8].name" = "X-GitHub-Request-Id"
"paths./repos/{owner}/{repo}/pulls/{number}.patch.parameters[8].type" = "integer"
"paths./repos/{owner}/{repo}/pulls/{number}.patch.parameters[9].in" = "body"
"paths./repos/{owner}/{repo}/pulls/{number}.patch.parameters[9].name" = "body"
"paths./repos/{owner}/{repo}/pulls/{number}.patch.parameters[9].required" = true
"paths./repos/{owner}/{repo}/pulls/{number}.patch.parameters[9].schema.$ref" = "#/definitions/pullUpdate"
"paths./repos/{owner}/{repo}/pulls/{number}.patch.responses.200.description" = "OK"
"paths./repos/{owner}/{repo}/pulls/{number}.patch.responses.200.schema.$ref" = "#/definitions/repo"
"paths./repos/{owner}/{repo}/pulls/{number}.patch.responses.403.description" = "API rate limit exceeded. See http://developer.github.com/v3/#rate-limiting\nfor details.\n"
"paths./repos/{owner}/{repo}/pulls/{number}/comments.get.description" = "List comments on a pull request."
"paths./repos/{owner}/{repo}/pulls/{number}/comments.get.parameters.length" = 9
"paths./repos/{owner}/{repo}/pulls/{number}/comments.get.parameters[0].description" = "Name of repository owner."
"paths./repos/{owner}/{repo}/pulls/{number}/comments.get.parameters[0].in" = "path"
"paths./repos/{owner}/{repo}/pulls/{number}/comments.get.parameters[0].name" = "owner"
"paths./repos/{owner}/{repo}/pulls/{number}/comments.get.parameters[0].required" = true
"paths./repos/{owner}/{repo}/pulls/{number}/comments.get.parameters[0].type" = "string"
"paths./repos/{owner}/{repo}/pulls/{number}/comments.get.parameters[1].description" = "Name of repository."
"paths./repos/{owner}/{repo}/pulls/{number}/comments.get.parameters[1].in" = "path"
"paths./repos/{owner}/{repo}/pulls/{number}/comments.get.parameters[1].name" = "repo"
"paths./repos/{owner}/{repo}/pulls/{number}/comments.get.parameters[1].required" = true
"paths./repos/{owner}/{repo}/pulls/{number}/comments.get.parameters[1].type" = "string"
"paths./repos/{owner}/{repo}/pulls/{number}/comments.get.parameters[2].description" = "Id of pull."
"paths./repos/{owner}/{repo}/pulls/{number}/comments.get.parameters[2].in" = "path"
"paths./repos/{owner}/{repo}/pulls/{number}/comments.get.parameters[2].name" = "number"
"paths./repos/{owner}/{repo}/pulls/{number}/comments.get.parameters[2].required" = true
"paths./repos/{owner}/{repo}/pulls/{number}/comments.get.parameters[2].type" = "integer"
"paths./repos/{owner}/{repo}/pulls/{number}/comments.get.parameters[3].description" = "You can check the current version of media type in responses.\n"
"paths./repos/{owner}/{repo}/pulls/{number}/comments.get.parameters[3].in" = "header"
"paths./repos/{owner}/{repo}/pulls/{number}/comments.get.parameters[3].name" = "X-GitHub-Media-Type"
"paths./repos/{owner}/{repo}/pulls/{number}/comments.get.parameters[3].type" = "string"
"paths./repos/{owner}/{repo}/pulls/{number}/comments.get.parameters[4].description" = "Is used to set specified media type."
"paths./repos/{owner}/{repo}/pulls/{number}/comments.get.parameters[4].in" = "header"
"paths./repos/{owner}/{repo}/pulls/{number}/comments.get.parameters[4].name" = "Accept"
"paths./repos/{owner}/{repo}/pulls/{number}/comments.get.parameters[4].type" = "string"
"paths./repos/{owner}/{repo}/pulls/{number}/comments.get.parameters[5].in" = "header"
"paths./repos/{owner}/{repo}/pulls/{number}/comments.get.parameters[5].name" = "X-RateLimit-Limit"
"paths./repos/{owner}/{repo}/pulls/{number}/comments.get.parameters[5].type" = "integer"
"paths./repos/{owner}/{repo}/pulls/{number}/comments.get.parameters[6].in" = "header"
"paths./repos/{owner}/{repo}/pulls/{number}/comments.get.parameters[6].name" = "X-RateLimit-Remaining"
"paths./repos/{owner}/{repo}/pulls/{number}/comments.get.parameters[6].type" = "integer"
"paths./repos/{owner}/{repo}/pulls/{number}/comments.get.parameters[7].in" = "header"
"paths./repos/{owner}/{repo}/pulls/{number}/comments.get.parameters[7].name" = "X-RateLimit-Reset"
"paths./repos/{owner}/{repo}/pulls/{number}/comments.get.parameters[7].type" = "integer"
"paths./repos/{owner}/{repo}/pulls/{number}/comments.get.parameters[8].in" = "header"
"paths./repos/{owner}/{repo}/pulls/{number}/comments.get.parameters[8].name" = "X-GitHub-Request-Id"
"paths./repos/{owner}/{repo}/pulls/{number}/comments.get.parameters[8].type" = "integer"
"paths./repos/{owner}/{repo}/pulls/{number}/comments.get.responses.200.description" = "OK"
"paths./repos/{owner}/{repo}/pulls/{number}/comments.get.responses.200.schema.$ref" = "#/definitions/pullsComment"
"paths./repos/{owner}/{repo}/pulls/{number}/comments.get.responses.403.description" = "API rate limit exceeded. See http://developer.github.com/v3/#rate-limiting\nfor details.\n"
"paths./repos/{owner}/{repo}/pulls/{number}/comments.post.description" = "Create a comment.\n  #TODO Alternative input ( http://developer.github.com/v3/pulls/comments/ )\n  description: |\n    Alternative Input.\n    Instead of passing commit_id, path, and position you can reply to an\n    existing Pull Request Comment like this:\n\n        body\n           Required string\n        in_reply_to\n           Required number - Comment id to reply to.\n"
"paths./repos/{owner}/{repo}/pulls/{number}/comments.post.parameters.length" = 10
"paths./repos/{owner}/{repo}/pulls/{number}/comments.post.parameters[0].description" = "Name of repository owner."
"paths./repos/{owner}/{repo}/pulls/{number}/comments.post.parameters[0].in" = "path"
"paths./repos/{owner}/{repo}/pulls/{number}/comments.post.parameters[0].name" = "owner"
"paths./repos/{owner}/{repo}/pulls/{number}/comments.post.parameters[0].required" = true
"paths./repos/{owner}/{repo}/pulls/{number}/comments.post.parameters[0].type" = "string"
"paths./repos/{owner}/{repo}/pulls/{number}/comments.post.parameters[1].description" = "Name of repository."
"paths./repos/{owner}/{repo}/pulls/{number}/comments.post.parameters[1].in" = "path"
"paths./repos/{owner}/{repo}/pulls/{number}/comments.post.parameters[1].name" = "repo"
"paths./repos/{owner}/{repo}/pulls/{number}/comments.post.parameters[1].required" = true
"paths./repos/{owner}/{repo}/pulls/{number}/comments.post.parameters[1].type" = "string"
"paths./repos/{owner}/{repo}/pulls/{number}/comments.post.parameters[2].description" = "Id of pull."
"paths./repos/{owner}/{repo}/pulls/{number}/comments.post.parameters[2].in" = "path"
"paths./repos/{owner}/{repo}/pulls/{number}/comments.post.parameters[2].name" = "number"
"paths./repos/{owner}/{repo}/pulls/{number}/comments.post.parameters[2].required" = true
"paths./repos/{owner}/{repo}/pulls/{number}/comments.post.parameters[2].type" = "integer"
"paths./repos/{owner}/{repo}/pulls/{number}/comments.post.parameters[3].description" = "You can check the current version of media type in responses.\n"
"paths./repos/{owner}/{repo}/pulls/{number}/comments.post.parameters[3].in" = "header"
"paths./repos/{owner}/{repo}/pulls/{number}/comments.post.parameters[3].name" = "X-GitHub-Media-Type"
"paths./repos/{owner}/{repo}/pulls/{number}/comments.post.parameters[3].type" = "string"
"paths./repos/{owner}/{repo}/pulls/{number}/comments.post.parameters[4].description" = "Is used to set specified media type."
"paths./repos/{owner}/{repo}/pulls/{number}/comments.post.parameters[4].in" = "header"
"paths./repos/{owner}/{repo}/pulls/{number}/comments.post.parameters[4].name" = "Accept"
"paths./repos/{owner}/{repo}/pulls/{number}/comments.post.parameters[4].type" = "string"
"paths./repos/{owner}/{repo}/pulls/{number}/comments.post.parameters[5].in" = "header"
"paths./repos/{owner}/{repo}/pulls/{number}/comments.post.parameters[5].name" = "X-RateLimit-Limit"
"paths./repos/{owner}/{repo}/pulls/{number}/comments.post.parameters[5].type" = "integer"
"paths./repos/{owner}/{repo}/pulls/{number}/comments.post.parameters[6].in" = "header"
"paths./repos/{owner}/{repo}/pulls/{number}/comments.post.parameters[6].name" = "X-RateLimit-Remaining"
"paths./repos/{owner}/{repo}/pulls/{number}/comments.post.parameters[6].type" = "integer"
"paths./repos/{owner}/{repo}/pulls/{number}/comments.post.parameters[7].in" = "header"
"paths./repos/{owner}/{repo}/pulls/{number}/comments.post.parameters[7].name" = "X-RateLimit-Reset"
"paths./repos/{owner}/{repo}/pulls/{number}/comments.post.parameters[7].type" = "integer"
"paths./repos/{owner}/{repo}/pulls/{number}/comments.post.parameters[8].in" = "header"
"paths./repos/{owner}/{repo}/pulls/{number}/comments.post.parameters[8].name" = "X-GitHub-Request-Id"
"paths./repos/{owner}/{repo}/pulls/{number}/comments.post.parameters[8].type" = "integer"
"paths./repos/{owner}/{repo}/pulls/{number}/comments.post.parameters[9].in" = "body"
"paths./repos/{owner}/{repo}/pulls/{number}/comments.post.parameters[9].name" = "body"
"paths./repos/{owner}/{repo}/pulls/{number}/comments.post.parameters[9].required" = true
"paths./repos/{owner}/{repo}/pulls/{number}/comments.post.parameters[9].schema.$ref" = "#/definitions/pullsCommentPost"
"paths./repos/{owner}/{repo}/pulls/{number}/comments.post.responses.201.description" = "Created"
"paths./repos/{owner}/{repo}/pulls/{number}/comments.post.responses.201.schema.$ref" = "#/definitions/pullsComment"
"paths./repos/{owner}/{repo}/pulls/{number}/comments.post.responses.403.description" = "API rate limit exceeded. See http://developer.github.com/v3/#rate-limiting\nfor details.\n"
"paths./repos/{owner}/{repo}/pulls/{number}/commits.get.description" = "List commits on a pull request."
"paths./repos/{owner}/{repo}/pulls/{number}/commits.get.parameters.length" = 9
"paths./repos/{owner}/{repo}/pulls/{number}/commits.get.parameters[0].description" = "Name of repository owner."
"paths./repos/{owner}/{repo}/pulls/{number}/commits.get.parameters[0].in" = "path"
"paths./repos/{owner}/{repo}/pulls/{number}/commits.get.parameters[0].name" = "owner"
"paths./repos/{owner}/{repo}/pulls/{number}/commits.get.parameters[0].required" = true
"paths./repos/{owner}/{repo}/pulls/{number}/commits.get.parameters[0].type" = "string"
"paths./repos/{owner}/{repo}/pulls/{number}/commits.get.parameters[1].description" = "Name of repository."
"paths./repos/{owner}/{repo}/pulls/{number}/commits.get.parameters[1].in" = "path"
"paths./repos/{owner}/{repo}/pulls/{number}/commits.get.parameters[1].name" = "repo"
"paths./repos/{owner}/{repo}/pulls/{number}/commits.get.parameters[1].required" = true
"paths./repos/{owner}/{repo}/pulls/{number}/commits.get.parameters[1].type" = "string"
"paths./repos/{owner}/{repo}/pulls/{number}/commits.get.parameters[2].description" = "Id of pull."
"paths./repos/{owner}/{repo}/pulls/{number}/commits.get.parameters[2].in" = "path"
"paths./repos/{owner}/{repo}/pulls/{number}/commits.get.parameters[2].name" = "number"
"paths./repos/{owner}/{repo}/pulls/{number}/commits.get.parameters[2].required" = true
"paths./repos/{owner}/{repo}/pulls/{number}/commits.get.parameters[2].type" = "integer"
"paths./repos/{owner}/{repo}/pulls/{number}/commits.get.parameters[3].description" = "You can check the current version of media type in responses.\n"
"paths./repos/{owner}/{repo}/pulls/{number}/commits.get.parameters[3].in" = "header"
"paths./repos/{owner}/{repo}/pulls/{number}/commits.get.parameters[3].name" = "X-GitHub-Media-Type"
"paths./repos/{owner}/{repo}/pulls/{number}/commits.get.parameters[3].type" = "string"
"paths./repos/{owner}/{repo}/pulls/{number}/commits.get.parameters[4].description" = "Is used to set specified media type."
"paths./repos/{owner}/{repo}/pulls/{number}/commits.get.parameters[4].in" = "header"
"paths./repos/{owner}/{repo}/pulls/{number}/commits.get.parameters[4].name" = "Accept"
"paths./repos/{owner}/{repo}/pulls/{number}/commits.get.parameters[4].type" = "string"
"paths./repos/{owner}/{repo}/pulls/{number}/commits.get.parameters[5].in" = "header"
"paths./repos/{owner}/{repo}/pulls/{number}/commits.get.parameters[5].name" = "X-RateLimit-Limit"
"paths./repos/{owner}/{repo}/pulls/{number}/commits.get.parameters[5].type" = "integer"
"paths./repos/{owner}/{repo}/pulls/{number}/commits.get.parameters[6].in" = "header"
"paths./repos/{owner}/{repo}/pulls/{number}/commits.get.parameters[6].name" = "X-RateLimit-Remaining"
"paths./repos/{owner}/{repo}/pulls/{number}/commits.get.parameters[6].type" = "integer"
"paths./repos/{owner}/{repo}/pulls/{number}/commits.get.parameters[7].in" = "header"
"paths./repos/{owner}/{repo}/pulls/{number}/commits.get.parameters[7].name" = "X-RateLimit-Reset"
"paths./repos/{owner}/{repo}/pulls/{number}/commits.get.parameters[7].type" = "integer"
"paths./repos/{owner}/{repo}/pulls/{number}/commits.get.parameters[8].in" = "header"
"paths./repos/{owner}/{repo}/pulls/{number}/commits.get.parameters[8].name" = "X-GitHub-Request-Id"
"paths./repos/{owner}/{repo}/pulls/{number}/commits.get.parameters[8].type" = "integer"
"paths./repos/{owner}/{repo}/pulls/{number}/commits.get.responses.200.description" = "OK"
"paths./repos/{owner}/{repo}/pulls/{number}/commits.get.responses.200.schema.$ref" = "#/definitions/commits"
"paths./repos/{owner}/{repo}/pulls/{number}/commits.get.responses.403.description" = "API rate limit exceeded. See http://developer.github.com/v3/#rate-limiting\nfor details.\n"
"paths./repos/{owner}/{repo}/pulls/{number}/files.get.description" = "List pull requests files."
"paths./repos/{owner}/{repo}/pulls/{number}/files.get.parameters.length" = 9
"paths./repos/{owner}/{repo}/pulls/{number}/files.get.parameters[0].description" = "Name of repository owner."
"paths./repos/{owner}/{repo}/pulls/{number}/files.get.parameters[0].in" = "path"
"paths./repos/{owner}/{repo}/pulls/{number}/files.get.parameters[0].name" = "owner"
"paths./repos/{owner}/{repo}/pulls/{number}/files.get.parameters[0].required" = true
"paths./repos/{owner}/{repo}/pulls/{number}/files.get.parameters[0].type" = "string"
"paths./repos/{owner}/{repo}/pulls/{number}/files.get.parameters[1].description" = "Name of repository."
"paths./repos/{owner}/{repo}/pulls/{number}/files.get.parameters[1].in" = "path"
"paths./repos/{owner}/{repo}/pulls/{number}/files.get.parameters[1].name" = "repo"
"paths./repos/{owner}/{repo}/pulls/{number}/files.get.parameters[1].required" = true
"paths./repos/{owner}/{repo}/pulls/{number}/files.get.parameters[1].type" = "string"
"paths./repos/{owner}/{repo}/pulls/{number}/files.get.parameters[2].description" = "Id of pull."
"paths./repos/{owner}/{repo}/pulls/{number}/files.get.parameters[2].in" = "path"
"paths./repos/{owner}/{repo}/pulls/{number}/files.get.parameters[2].name" = "number"
"paths./repos/{owner}/{repo}/pulls/{number}/files.get.parameters[2].required" = true
"paths./repos/{owner}/{repo}/pulls/{number}/files.get.parameters[2].type" = "integer"
"paths./repos/{owner}/{repo}/pulls/{number}/files.get.parameters[3].description" = "You can check the current version of media type in responses.\n"
"paths./repos/{owner}/{repo}/pulls/{number}/files.get.parameters[3].in" = "header"
"paths./repos/{owner}/{repo}/pulls/{number}/files.get.parameters[3].name" = "X-GitHub-Media-Type"
"paths./repos/{owner}/{repo}/pulls/{number}/files.get.parameters[3].type" = "string"
"paths./repos/{owner}/{repo}/pulls/{number}/files.get.parameters[4].description" = "Is used to set specified media type."
"paths./repos/{owner}/{repo}/pulls/{number}/files.get.parameters[4].in" = "header"
"paths./repos/{owner}/{repo}/pulls/{number}/files.get.parameters[4].name" = "Accept"
"paths./repos/{owner}/{repo}/pulls/{number}/files.get.parameters[4].type" = "string"
"paths./repos/{owner}/{repo}/pulls/{number}/files.get.parameters[5].in" = "header"
"paths./repos/{owner}/{repo}/pulls/{number}/files.get.parameters[5].name" = "X-RateLimit-Limit"
"paths./repos/{owner}/{repo}/pulls/{number}/files.get.parameters[5].type" = "integer"
"paths./repos/{owner}/{repo}/pulls/{number}/files.get.parameters[6].in" = "header"
"paths./repos/{owner}/{repo}/pulls/{number}/files.get.parameters[6].name" = "X-RateLimit-Remaining"
"paths./repos/{owner}/{repo}/pulls/{number}/files.get.parameters[6].type" = "integer"
"paths./repos/{owner}/{repo}/pulls/{number}/files.get.parameters[7].in" = "header"
"paths./repos/{owner}/{repo}/pulls/{number}/files.get.parameters[7].name" = "X-RateLimit-Reset"
"paths./repos/{owner}/{repo}/pulls/{number}/files.get.parameters[7].type" = "integer"
"paths./repos/{owner}/{repo}/pulls/{number}/files.get.parameters[8].in" = "header"
"paths./repos/{owner}/{repo}/pulls/{number}/files.get.parameters[8].name" = "X-GitHub-Request-Id"
"paths./repos/{owner}/{repo}/pulls/{number}/files.get.parameters[8].type" = "integer"
"paths./repos/{owner}/{repo}/pulls/{number}/files.get.responses.200.description" = "OK"
"paths./repos/{owner}/{repo}/pulls/{number}/files.get.responses.200.schema.$ref" = "#/definitions/pulls"
"paths./repos/{owner}/{repo}/pulls/{number}/files.get.responses.403.description" = "API rate limit exceeded. See http://developer.github.com/v3/#rate-limiting\nfor details.\n"
"paths./repos/{owner}/{repo}/pulls/{number}/merge.get.description" = "Get if a pull request has been merged."
"paths./repos/{owner}/{repo}/pulls/{number}/merge.get.parameters.length" = 9
"paths./repos/{owner}/{repo}/pulls/{number}/merge.get.parameters[0].description" = "Name of repository owner."
"paths./repos/{owner}/{repo}/pulls/{number}/merge.get.parameters[0].in" = "path"
"paths./repos/{owner}/{repo}/pulls/{number}/merge.get.parameters[0].name" = "owner"
"paths./repos/{owner}/{repo}/pulls/{number}/merge.get.parameters[0].required" = true
"paths./repos/{owner}/{repo}/pulls/{number}/merge.get.parameters[0].type" = "string"
"paths./repos/{owner}/{repo}/pulls/{number}/merge.get.parameters[1].description" = "Name of repository."
"paths./repos/{owner}/{repo}/pulls/{number}/merge.get.parameters[1].in" = "path"
"paths./repos/{owner}/{repo}/pulls/{number}/merge.get.parameters[1].name" = "repo"
"paths./repos/{owner}/{repo}/pulls/{number}/merge.get.parameters[1].required" = true
"paths./repos/{owner}/{repo}/pulls/{number}/merge.get.parameters[1].type" = "string"
"paths./repos/{owner}/{repo}/pulls/{number}/merge.get.parameters[2].description" = "Id of pull."
"paths./repos/{owner}/{repo}/pulls/{number}/merge.get.parameters[2].in" = "path"
"paths./repos/{owner}/{repo}/pulls/{number}/merge.get.parameters[2].name" = "number"
"paths./repos/{owner}/{repo}/pulls/{number}/merge.get.parameters[2].required" = true
"paths./repos/{owner}/{repo}/pulls/{number}/merge.get.parameters[2].type" = "integer"
"paths./repos/{owner}/{repo}/pulls/{number}/merge.get.parameters[3].description" = "You can check the current version of media type in responses.\n"
"paths./repos/{owner}/{repo}/pulls/{number}/merge.get.parameters[3].in" = "header"
"paths./repos/{owner}/{repo}/pulls/{number}/merge.get.parameters[3].name" = "X-GitHub-Media-Type"
"paths./repos/{owner}/{repo}/pulls/{number}/merge.get.parameters[3].type" = "string"
"paths./repos/{owner}/{repo}/pulls/{number}/merge.get.parameters[4].description" = "Is used to set specified media type."
"paths./repos/{owner}/{repo}/pulls/{number}/merge.get.parameters[4].in" = "header"
"paths./repos/{owner}/{repo}/pulls/{number}/merge.get.parameters[4].name" = "Accept"
"paths./repos/{owner}/{repo}/pulls/{number}/merge.get.parameters[4].type" = "string"
"paths./repos/{owner}/{repo}/pulls/{number}/merge.get.parameters[5].in" = "header"
"paths./repos/{owner}/{repo}/pulls/{number}/merge.get.parameters[5].name" = "X-RateLimit-Limit"
"paths./repos/{owner}/{repo}/pulls/{number}/merge.get.parameters[5].type" = "integer"
"paths./repos/{owner}/{repo}/pulls/{number}/merge.get.parameters[6].in" = "header"
"paths./repos/{owner}/{repo}/pulls/{number}/merge.get.parameters[6].name" = "X-RateLimit-Remaining"
"paths./repos/{owner}/{repo}/pulls/{number}/merge.get.parameters[6].type" = "integer"
"paths./repos/{owner}/{repo}/pulls/{number}/merge.get.parameters[7].in" = "header"
"paths./repos/{owner}/{repo}/pulls/{number}/merge.get.parameters[7].name" = "X-RateLimit-Reset"
"paths./repos/{owner}/{repo}/pulls/{number}/merge.get.parameters[7].type" = "integer"
"paths./repos/{owner}/{repo}/pulls/{number}/merge.get.parameters[8].in" = "header"
"paths./repos/{owner}/{repo}/pulls/{number}/merge.get.parameters[8].name" = "X-GitHub-Request-Id"
"paths./repos/{owner}/{repo}/pulls/{number}/merge.get.parameters[8].type" = "integer"
"paths./repos/{owner}/{repo}/pulls/{number}/merge.get.responses.204.description" = "Pull request has been merged."
"paths./repos/{owner}/{repo}/pulls/{number}/merge.get.responses.403.description" = "API rate limit exceeded. See http://developer.github.com/v3/#rate-limiting\nfor details.\n"
"paths./repos/{owner}/{repo}/pulls/{number}/merge.get.responses.404.description" = "Pull request has not been merged."
"paths./repos/{owner}/{repo}/pulls/{number}/merge.put.description" = "Merge a pull request (Merge Button's)"
"paths./repos/{owner}/{repo}/pulls/{number}/merge.put.parameters.length" = 10
"paths./repos/{owner}/{repo}/pulls/{number}/merge.put.parameters[0].description" = "Name of repository owner."
"paths./repos/{owner}/{repo}/pulls/{number}/merge.put.parameters[0].in" = "path"
"paths./repos/{owner}/{repo}/pulls/{number}/merge.put.parameters[0].name" = "owner"
"paths./repos/{owner}/{repo}/pulls/{number}/merge.put.parameters[0].required" = true
"paths./repos/{owner}/{repo}/pulls/{number}/merge.put.parameters[0].type" = "string"
"paths./repos/{owner}/{repo}/pulls/{number}/merge.put.parameters[1].description" = "Name of repository."
"paths./repos/{owner}/{repo}/pulls/{number}/merge.put.parameters[1].in" = "path"
"paths./repos/{owner}/{repo}/pulls/{number}/merge.put.parameters[1].name" = "repo"
"paths./repos/{owner}/{repo}/pulls/{number}/merge.put.parameters[1].required" = true
"paths./repos/{owner}/{repo}/pulls/{number}/merge.put.parameters[1].type" = "string"
"paths./repos/{owner}/{repo}/pulls/{number}/merge.put.parameters[2].description" = "Id of pull."
"paths./repos/{owner}/{repo}/pulls/{number}/merge.put.parameters[2].in" = "path"
"paths./repos/{owner}/{repo}/pulls/{number}/merge.put.parameters[2].name" = "number"
"paths./repos/{owner}/{repo}/pulls/{number}/merge.put.parameters[2].required" = true
"paths./repos/{owner}/{repo}/pulls/{number}/merge.put.parameters[2].type" = "integer"
"paths./repos/{owner}/{repo}/pulls/{number}/merge.put.parameters[3].description" = "You can check the current version of media type in responses.\n"
"paths./repos/{owner}/{repo}/pulls/{number}/merge.put.parameters[3].in" = "header"
"paths./repos/{owner}/{repo}/pulls/{number}/merge.put.parameters[3].name" = "X-GitHub-Media-Type"
"paths./repos/{owner}/{repo}/pulls/{number}/merge.put.parameters[3].type" = "string"
"paths./repos/{owner}/{repo}/pulls/{number}/merge.put.parameters[4].description" = "Is used to set specified media type."
"paths./repos/{owner}/{repo}/pulls/{number}/merge.put.parameters[4].in" = "header"
"paths./repos/{owner}/{repo}/pulls/{number}/merge.put.parameters[4].name" = "Accept"
"paths./repos/{owner}/{repo}/pulls/{number}/merge.put.parameters[4].type" = "string"
"paths./repos/{owner}/{repo}/pulls/{number}/merge.put.parameters[5].in" = "header"
"paths./repos/{owner}/{repo}/pulls/{number}/merge.put.parameters[5].name" = "X-RateLimit-Limit"
"paths./repos/{owner}/{repo}/pulls/{number}/merge.put.parameters[5].type" = "integer"
"paths./repos/{owner}/{repo}/pulls/{number}/merge.put.parameters[6].in" = "header"
"paths./repos/{owner}/{repo}/pulls/{number}/merge.put.parameters[6].name" = "X-RateLimit-Remaining"
"paths./repos/{owner}/{repo}/pulls/{number}/merge.put.parameters[6].type" = "integer"
"paths./repos/{owner}/{repo}/pulls/{number}/merge.put.parameters[7].in" = "header"
"paths./repos/{owner}/{repo}/pulls/{number}/merge.put.parameters[7].name" = "X-RateLimit-Reset"
"paths./repos/{owner}/{repo}/pulls/{number}/merge.put.parameters[7].type" = "integer"
"paths./repos/{owner}/{repo}/pulls/{number}/merge.put.parameters[8].in" = "header"
"paths./repos/{owner}/{repo}/pulls/{number}/merge.put.parameters[8].name" = "X-GitHub-Request-Id"
"paths./repos/{owner}/{repo}/pulls/{number}/merge.put.parameters[8].type" = "integer"
"paths./repos/{owner}/{repo}/pulls/{number}/merge.put.parameters[9].in" = "body"
"paths./repos/{owner}/{repo}/pulls/{number}/merge.put.parameters[9].name" = "body"
"paths./repos/{owner}/{repo}/pulls/{number}/merge.put.parameters[9].required" = true
"paths./repos/{owner}/{repo}/pulls/{number}/merge.put.parameters[9].schema.$ref" = "#/definitions/mergePullBody"
"paths./repos/{owner}/{repo}/pulls/{number}/merge.put.responses.200.description" = "Response if merge was successful."
"paths./repos/{owner}/{repo}/pulls/{number}/merge.put.responses.200.schema.$ref" = "#/definitions/merge"
"paths./repos/{owner}/{repo}/pulls/{number}/merge.put.responses.403.description" = "API rate limit exceeded. See http://developer.github.com/v3/#rate-limiting\nfor details.\n"
"paths./repos/{owner}/{repo}/pulls/{number}/merge.put.responses.405.description" = "Response if merge cannot be performed."
"paths./repos/{owner}/{repo}/pulls/{number}/merge.put.responses.405.schema.$ref" = "#/definitions/merge"
"paths./repos/{owner}/{repo}/readme.get.description" = "Get the README.\nThis method returns the preferred README for a repository.\n"
"paths./repos/{owner}/{repo}/readme.get.parameters.length" = 9
"paths./repos/{owner}/{repo}/readme.get.parameters[0].description" = "Name of repository owner."
"paths./repos/{owner}/{repo}/readme.get.parameters[0].in" = "path"
"paths./repos/{owner}/{repo}/readme.get.parameters[0].name" = "owner"
"paths./repos/{owner}/{repo}/readme.get.parameters[0].required" = true
"paths./repos/{owner}/{repo}/readme.get.parameters[0].type" = "string"
"paths./repos/{owner}/{repo}/readme.get.parameters[1].description" = "Name of repository."
"paths./repos/{owner}/{repo}/readme.get.parameters[1].in" = "path"
"paths./repos/{owner}/{repo}/readme.get.parameters[1].name" = "repo"
"paths./repos/{owner}/{repo}/readme.get.parameters[1].required" = true
"paths./repos/{owner}/{repo}/readme.get.parameters[1].type" = "string"
"paths./repos/{owner}/{repo}/readme.get.parameters[2].description" = "The String name of the Commit/Branch/Tag. Defaults to master."
"paths./repos/{owner}/{repo}/readme.get.parameters[2].in" = "query"
"paths./repos/{owner}/{repo}/readme.get.parameters[2].name" = "ref"
"paths./repos/{owner}/{repo}/readme.get.parameters[2].type" = "string"
"paths./repos/{owner}/{repo}/readme.get.parameters[3].description" = "You can check the current version of media type in responses.\n"
"paths./repos/{owner}/{repo}/readme.get.parameters[3].in" = "header"
"paths./repos/{owner}/{repo}/readme.get.parameters[3].name" = "X-GitHub-Media-Type"
"paths./repos/{owner}/{repo}/readme.get.parameters[3].type" = "string"
"paths./repos/{owner}/{repo}/readme.get.parameters[4].description" = "Is used to set specified media type."
"paths./repos/{owner}/{repo}/readme.get.parameters[4].in" = "header"
"paths./repos/{owner}/{repo}/readme.get.parameters[4].name" = "Accept"
"paths./repos/{owner}/{repo}/readme.get.parameters[4].type" = "string"
"paths./repos/{owner}/{repo}/readme.get.parameters[5].in" = "header"
"paths./repos/{owner}/{repo}/readme.get.parameters[5].name" = "X-RateLimit-Limit"
"paths./repos/{owner}/{repo}/readme.get.parameters[5].type" = "integer"
"paths./repos/{owner}/{repo}/readme.get.parameters[6].in" = "header"
"paths./repos/{owner}/{repo}/readme.get.parameters[6].name" = "X-RateLimit-Remaining"
"paths./repos/{owner}/{repo}/readme.get.parameters[6].type" = "integer"
"paths./repos/{owner}/{repo}/readme.get.parameters[7].in" = "header"
"paths./repos/{owner}/{repo}/readme.get.parameters[7].name" = "X-RateLimit-Reset"
"paths./repos/{owner}/{repo}/readme.get.parameters[7].type" = "integer"
"paths./repos/{owner}/{repo}/readme.get.parameters[8].in" = "header"
"paths./repos/{owner}/{repo}/readme.get.parameters[8].name" = "X-GitHub-Request-Id"
"paths./repos/{owner}/{repo}/readme.get.parameters[8].type" = "integer"
"paths./repos/{owner}/{repo}/readme.get.responses.200.description" = "OK"
"paths./repos/{owner}/{repo}/readme.get.responses.200.schema.$ref" = "#/definitions/contents-path"
"paths./repos/{owner}/{repo}/readme.get.responses.403.description" = "API rate limit exceeded. See http://developer.github.com/v3/#rate-limiting\nfor details.\n"
"paths./repos/{owner}/{repo}/releases.get.description" = "Users with push access to the repository will receive all releases (i.e., published releases and draft releases). Users with pull access will receive published releases only"
"paths./repos/{owner}/{repo}/releases.get.parameters.length" = 8
"paths./repos/{owner}/{repo}/releases.get.parameters[0].description" = "Name of repository owner."
"paths./repos/{owner}/{repo}/releases.get.parameters[0].in" = "path"
"paths./repos/{owner}/{repo}/releases.get.parameters[0].name" = "owner"
"paths./repos/{owner}/{repo}/releases.get.parameters[0].required" = true
"paths./repos/{owner}/{repo}/releases.get.parameters[0].type" = "string"
"paths./repos/{owner}/{repo}/releases.get.parameters[1].description" = "Name of repository."
"paths./repos/{owner}/{repo}/releases.get.parameters[1].in" = "path"
"paths./repos/{owner}/{repo}/releases.get.parameters[1].name" = "repo"
"paths./repos/{owner}/{repo}/releases.get.parameters[1].required" = true
"paths./repos/{owner}/{repo}/releases.get.parameters[1].type" = "string"
"paths./repos/{owner}/{repo}/releases.get.parameters[2].description" = "You can check the current version of media type in responses.\n"
"paths./repos/{owner}/{repo}/releases.get.parameters[2].in" = "header"
"paths./repos/{owner}/{repo}/releases.get.parameters[2].name" = "X-GitHub-Media-Type"
"paths./repos/{owner}/{repo}/releases.get.parameters[2].type" = "string"
"paths./repos/{owner}/{repo}/releases.get.parameters[3].description" = "Is used to set specified media type."
"paths./repos/{owner}/{repo}/releases.get.parameters[3].in" = "header"
"paths./repos/{owner}/{repo}/releases.get.parameters[3].name" = "Accept"
"paths./repos/{owner}/{repo}/releases.get.parameters[3].type" = "string"
"paths./repos/{owner}/{repo}/releases.get.parameters[4].in" = "header"
"paths./repos/{owner}/{repo}/releases.get.parameters[4].name" = "X-RateLimit-Limit"
"paths./repos/{owner}/{repo}/releases.get.parameters[4].type" = "integer"
"paths./repos/{owner}/{repo}/releases.get.parameters[5].in" = "header"
"paths./repos/{owner}/{repo}/releases.get.parameters[5].name" = "X-RateLimit-Remaining"
"paths./repos/{owner}/{repo}/releases.get.parameters[5].type" = "integer"
"paths./repos/{owner}/{repo}/releases.get.parameters[6].in" = "header"
"paths./repos/{owner}/{repo}/releases.get.parameters[6].name" = "X-RateLimit-Reset"
"paths./repos/{owner}/{repo}/releases.get.parameters[6].type" = "integer"
"paths./repos/{owner}/{repo}/releases.get.parameters[7].in" = "header"
"paths./repos/{owner}/{repo}/releases.get.parameters[7].name" = "X-GitHub-Request-Id"
"paths./repos/{owner}/{repo}/releases.get.parameters[7].type" = "integer"
"paths./repos/{owner}/{repo}/releases.get.responses.200.description" = "OK"
"paths./repos/{owner}/{repo}/releases.get.responses.200.schema.$ref" = "#/definitions/releases"
"paths./repos/{owner}/{repo}/releases.get.responses.403.description" = "API rate limit exceeded. See http://developer.github.com/v3/#rate-limiting\nfor details.\n"
"paths./repos/{owner}/{repo}/releases.post.description" = "Create a release\nUsers with push access to the repository can create a release.\n"
"paths./repos/{owner}/{repo}/releases.post.parameters.length" = 9
"paths./repos/{owner}/{repo}/releases.post.parameters[0].description" = "Name of repository owner."
"paths./repos/{owner}/{repo}/releases.post.parameters[0].in" = "path"
"paths./repos/{owner}/{repo}/releases.post.parameters[0].name" = "owner"
"paths./repos/{owner}/{repo}/releases.post.parameters[0].required" = true
"paths./repos/{owner}/{repo}/releases.post.parameters[0].type" = "string"
"paths./repos/{owner}/{repo}/releases.post.parameters[1].description" = "Name of repository."
"paths./repos/{owner}/{repo}/releases.post.parameters[1].in" = "path"
"paths./repos/{owner}/{repo}/releases.post.parameters[1].name" = "repo"
"paths./repos/{owner}/{repo}/releases.post.parameters[1].required" = true
"paths./repos/{owner}/{repo}/releases.post.parameters[1].type" = "string"
"paths./repos/{owner}/{repo}/releases.post.parameters[2].description" = "You can check the current version of media type in responses.\n"
"paths./repos/{owner}/{repo}/releases.post.parameters[2].in" = "header"
"paths./repos/{owner}/{repo}/releases.post.parameters[2].name" = "X-GitHub-Media-Type"
"paths./repos/{owner}/{repo}/releases.post.parameters[2].type" = "string"
"paths./repos/{owner}/{repo}/releases.post.parameters[3].description" = "Is used to set specified media type."
"paths./repos/{owner}/{repo}/releases.post.parameters[3].in" = "header"
"paths./repos/{owner}/{repo}/releases.post.parameters[3].name" = "Accept"
"paths./repos/{owner}/{repo}/releases.post.parameters[3].type" = "string"
"paths./repos/{owner}/{repo}/releases.post.parameters[4].in" = "header"
"paths./repos/{owner}/{repo}/releases.post.parameters[4].name" = "X-RateLimit-Limit"
"paths./repos/{owner}/{repo}/releases.post.parameters[4].type" = "integer"
"paths./repos/{owner}/{repo}/releases.post.parameters[5].in" = "header"
"paths./repos/{owner}/{repo}/releases.post.parameters[5].name" = "X-RateLimit-Remaining"
"paths./repos/{owner}/{repo}/releases.post.parameters[5].type" = "integer"
"paths./repos/{owner}/{repo}/releases.post.parameters[6].in" = "header"
"paths./repos/{owner}/{repo}/releases.post.parameters[6].name" = "X-RateLimit-Reset"
"paths./repos/{owner}/{repo}/releases.post.parameters[6].type" = "integer"
"paths./repos/{owner}/{repo}/releases.post.parameters[7].in" = "header"
"paths./repos/{owner}/{repo}/releases.post.parameters[7].name" = "X-GitHub-Request-Id"
"paths./repos/{owner}/{repo}/releases.post.parameters[7].type" = "integer"
"paths./repos/{owner}/{repo}/releases.post.parameters[8].in" = "body"
"paths./repos/{owner}/{repo}/releases.post.parameters[8].name" = "body"
"paths./repos/{owner}/{repo}/releases.post.parameters[8].required" = true
"paths./repos/{owner}/{repo}/releases.post.parameters[8].schema.$ref" = "#/definitions/release-create"
"paths./repos/{owner}/{repo}/releases.post.responses.201.description" = "Created"
"paths./repos/{owner}/{repo}/releases.post.responses.201.schema.$ref" = "#/definitions/release"
"paths./repos/{owner}/{repo}/releases.post.responses.403.description" = "API rate limit exceeded. See http://developer.github.com/v3/#rate-limiting\nfor details.\n"
"paths./repos/{owner}/{repo}/releases/assets/{id}.delete.description" = "Delete a release asset"
"paths./repos/{owner}/{repo}/releases/assets/{id}.delete.parameters.length" = 9
"paths./repos/{owner}/{repo}/releases/assets/{id}.delete.parameters[0].description" = "Name of repository owner."
"paths./repos/{owner}/{repo}/releases/assets/{id}.delete.parameters[0].in" = "path"
"paths./repos/{owner}/{repo}/releases/assets/{id}.delete.parameters[0].name" = "owner"
"paths./repos/{owner}/{repo}/releases/assets/{id}.delete.parameters[0].required" = true
"paths./repos/{owner}/{repo}/releases/assets/{id}.delete.parameters[0].type" = "string"
"paths./repos/{owner}/{repo}/releases/assets/{id}.delete.parameters[1].description" = "Name of repository."
"paths./repos/{owner}/{repo}/releases/assets/{id}.delete.parameters[1].in" = "path"
"paths./repos/{owner}/{repo}/releases/assets/{id}.delete.parameters[1].name" = "repo"
"paths./repos/{owner}/{repo}/releases/assets/{id}.delete.parameters[1].required" = true
"paths./repos/{owner}/{repo}/releases/assets/{id}.delete.parameters[1].type" = "string"
"paths./repos/{owner}/{repo}/releases/assets/{id}.delete.parameters[2].in" = "path"
"paths./repos/{owner}/{repo}/releases/assets/{id}.delete.parameters[2].name" = "id"
"paths./repos/{owner}/{repo}/releases/assets/{id}.delete.parameters[2].required" = true
"paths./repos/{owner}/{repo}/releases/assets/{id}.delete.parameters[2].type" = "string"
"paths./repos/{owner}/{repo}/releases/assets/{id}.delete.parameters[3].description" = "You can check the current version of media type in responses.\n"
"paths./repos/{owner}/{repo}/releases/assets/{id}.delete.parameters[3].in" = "header"
"paths./repos/{owner}/{repo}/releases/assets/{id}.delete.parameters[3].name" = "X-GitHub-Media-Type"
"paths./repos/{owner}/{repo}/releases/assets/{id}.delete.parameters[3].type" = "string"
"paths./repos/{owner}/{repo}/releases/assets/{id}.delete.parameters[4].description" = "Is used to set specified media type."
"paths./repos/{owner}/{repo}/releases/assets/{id}.delete.parameters[4].in" = "header"
"paths./repos/{owner}/{repo}/releases/assets/{id}.delete.parameters[4].name" = "Accept"
"paths./repos/{owner}/{repo}/releases/assets/{id}.delete.parameters[4].type" = "string"
"paths./repos/{owner}/{repo}/releases/assets/{id}.delete.parameters[5].in" = "header"
"paths./repos/{owner}/{repo}/releases/assets/{id}.delete.parameters[5].name" = "X-RateLimit-Limit"
"paths./repos/{owner}/{repo}/releases/assets/{id}.delete.parameters[5].type" = "integer"
"paths./repos/{owner}/{repo}/releases/assets/{id}.delete.parameters[6].in" = "header"
"paths./repos/{owner}/{repo}/releases/assets/{id}.delete.parameters[6].name" = "X-RateLimit-Remaining"
"paths./repos/{owner}/{repo}/releases/assets/{id}.delete.parameters[6].type" = "integer"
"paths./repos/{owner}/{repo}/releases/assets/{id}.delete.parameters[7].in" = "header"
"paths./repos/{owner}/{repo}/releases/assets/{id}.delete.parameters[7].name" = "X-RateLimit-Reset"
"paths./repos/{owner}/{repo}/releases/assets/{id}.delete.parameters[7].type" = "integer"
"paths./repos/{owner}/{repo}/releases/assets/{id}.delete.parameters[8].in" = "header"
"paths./repos/{owner}/{repo}/releases/assets/{id}.delete.parameters[8].name" = "X-GitHub-Request-Id"
"paths./repos/{owner}/{repo}/releases/assets/{id}.delete.parameters[8].type" = "integer"
"paths./repos/{owner}/{repo}/releases/assets/{id}.delete.responses.204.description" = "No Content"
"paths./repos/{owner}/{repo}/releases/assets/{id}.delete.responses.403.description" = "API rate limit exceeded. See http://developer.github.com/v3/#rate-limiting\nfor details.\n"
"paths./repos/{owner}/{repo}/releases/assets/{id}.get.description" = "Get a single release asset"
"paths./repos/{owner}/{repo}/releases/assets/{id}.get.parameters.length" = 9
"paths./repos/{owner}/{repo}/releases/assets/{id}.get.parameters[0].description" = "Name of repository owner."
"paths./repos/{owner}/{repo}/releases/assets/{id}.get.parameters[0].in" = "path"
"paths./repos/{owner}/{repo}/releases/assets/{id}.get.parameters[0].name" = "owner"
"paths./repos/{owner}/{repo}/releases/assets/{id}.get.parameters[0].required" = true
"paths./repos/{owner}/{repo}/releases/assets/{id}.get.parameters[0].type" = "string"
"paths./repos/{owner}/{repo}/releases/assets/{id}.get.parameters[1].description" = "Name of repository."
"paths./repos/{owner}/{repo}/releases/assets/{id}.get.parameters[1].in" = "path"
"paths./repos/{owner}/{repo}/releases/assets/{id}.get.parameters[1].name" = "repo"
"paths./repos/{owner}/{repo}/releases/assets/{id}.get.parameters[1].required" = true
"paths./repos/{owner}/{repo}/releases/assets/{id}.get.parameters[1].type" = "string"
"paths./repos/{owner}/{repo}/releases/assets/{id}.get.parameters[2].in" = "path"
"paths./repos/{owner}/{repo}/releases/assets/{id}.get.parameters[2].name" = "id"
"paths./repos/{owner}/{repo}/releases/assets/{id}.get.parameters[2].required" = true
"paths./repos/{owner}/{repo}/releases/assets/{id}.get.parameters[2].type" = "string"
"paths./repos/{owner}/{repo}/releases/assets/{id}.get.parameters[3].description" = "You can check the current version of media type in responses.\n"
"paths./repos/{owner}/{repo}/releases/assets/{id}.get.parameters[3].in" = "header"
"paths./repos/{owner}/{repo}/releases/assets/{id}.get.parameters[3].name" = "X-GitHub-Media-Type"
"paths./repos/{owner}/{repo}/releases/assets/{id}.get.parameters[3].type" = "string"
"paths./repos/{owner}/{repo}/releases/assets/{id}.get.parameters[4].description" = "Is used to set specified media type."
"paths./repos/{owner}/{repo}/releases/assets/{id}.get.parameters[4].in" = "header"
"paths./repos/{owner}/{repo}/releases/assets/{id}.get.parameters[4].name" = "Accept"
"paths./repos/{owner}/{repo}/releases/assets/{id}.get.parameters[4].type" = "string"
"paths./repos/{owner}/{repo}/releases/assets/{id}.get.parameters[5].in" = "header"
"paths./repos/{owner}/{repo}/releases/assets/{id}.get.parameters[5].name" = "X-RateLimit-Limit"
"paths./repos/{owner}/{repo}/releases/assets/{id}.get.parameters[5].type" = "integer"
"paths./repos/{owner}/{repo}/releases/assets/{id}.get.parameters[6].in" = "header"
"paths./repos/{owner}/{repo}/releases/assets/{id}.get.parameters[6].name" = "X-RateLimit-Remaining"
"paths./repos/{owner}/{repo}/releases/assets/{id}.get.parameters[6].type" = "integer"
"paths./repos/{owner}/{repo}/releases/assets/{id}.get.parameters[7].in" = "header"
"paths./repos/{owner}/{repo}/releases/assets/{id}.get.parameters[7].name" = "X-RateLimit-Reset"
"paths./repos/{owner}/{repo}/releases/assets/{id}.get.parameters[7].type" = "integer"
"paths./repos/{owner}/{repo}/releases/assets/{id}.get.parameters[8].in" = "header"
"paths./repos/{owner}/{repo}/releases/assets/{id}.get.parameters[8].name" = "X-GitHub-Request-Id"
"paths./repos/{owner}/{repo}/releases/assets/{id}.get.parameters[8].type" = "integer"
"paths./repos/{owner}/{repo}/releases/assets/{id}.get.responses.200.description" = "OK"
"paths./repos/{owner}/{repo}/releases/assets/{id}.get.responses.200.schema.$ref" = "#/definitions/asset"
"paths./repos/{owner}/{repo}/releases/assets/{id}.get.responses.403.description" = "API rate limit exceeded. See http://developer.github.com/v3/#rate-limiting\nfor details.\n"
"paths./repos/{owner}/{repo}/releases/assets/{id}.patch.description" = "Edit a release asset\nUsers with push access to the repository can edit a release asset.\n"
"paths./repos/{owner}/{repo}/releases/assets/{id}.patch.parameters.length" = 10
"paths./repos/{owner}/{repo}/releases/assets/{id}.patch.parameters[0].description" = "Name of repository owner."
"paths./repos/{owner}/{repo}/releases/assets/{id}.patch.parameters[0].in" = "path"
"paths./repos/{owner}/{repo}/releases/assets/{id}.patch.parameters[0].name" = "owner"
"paths./repos/{owner}/{repo}/releases/assets/{id}.patch.parameters[0].required" = true
"paths./repos/{owner}/{repo}/releases/assets/{id}.patch.parameters[0].type" = "string"
"paths./repos/{owner}/{repo}/releases/assets/{id}.patch.parameters[1].description" = "Name of repository."
"paths./repos/{owner}/{repo}/releases/assets/{id}.patch.parameters[1].in" = "path"
"paths./repos/{owner}/{repo}/releases/assets/{id}.patch.parameters[1].name" = "repo"
"paths./repos/{owner}/{repo}/releases/assets/{id}.patch.parameters[1].required" = true
"paths./repos/{owner}/{repo}/releases/assets/{id}.patch.parameters[1].type" = "string"
"paths./repos/{owner}/{repo}/releases/assets/{id}.patch.parameters[2].in" = "path"
"paths./repos/{owner}/{repo}/releases/assets/{id}.patch.parameters[2].name" = "id"
"paths./repos/{owner}/{repo}/releases/assets/{id}.patch.parameters[2].required" = true
"paths./repos/{owner}/{repo}/releases/assets/{id}.patch.parameters[2].type" = "string"
"paths./repos/{owner}/{repo}/releases/assets/{id}.patch.parameters[3].description" = "You can check the current version of media type in responses.\n"
"paths./repos/{owner}/{repo}/releases/assets/{id}.patch.parameters[3].in" = "header"
"paths./repos/{owner}/{repo}/releases/assets/{id}.patch.parameters[3].name" = "X-GitHub-Media-Type"
"paths./repos/{owner}/{repo}/releases/assets/{id}.patch.parameters[3].type" = "string"
"paths./repos/{owner}/{repo}/releases/assets/{id}.patch.parameters[4].description" = "Is used to set specified media type."
"paths./repos/{owner}/{repo}/releases/assets/{id}.patch.parameters[4].in" = "header"
"paths./repos/{owner}/{repo}/releases/assets/{id}.patch.parameters[4].name" = "Accept"
"paths./repos/{owner}/{repo}/releases/assets/{id}.patch.parameters[4].type" = "string"
"paths./repos/{owner}/{repo}/releases/assets/{id}.patch.parameters[5].in" = "header"
"paths./repos/{owner}/{repo}/releases/assets/{id}.patch.parameters[5].name" = "X-RateLimit-Limit"
"paths./repos/{owner}/{repo}/releases/assets/{id}.patch.parameters[5].type" = "integer"
"paths./repos/{owner}/{repo}/releases/assets/{id}.patch.parameters[6].in" = "header"
"paths./repos/{owner}/{repo}/releases/assets/{id}.patch.parameters[6].name" = "X-RateLimit-Remaining"
"paths./repos/{owner}/{repo}/releases/assets/{id}.patch.parameters[6].type" = "integer"
"paths./repos/{owner}/{repo}/releases/assets/{id}.patch.parameters[7].in" = "header"
"paths./repos/{owner}/{repo}/releases/assets/{id}.patch.parameters[7].name" = "X-RateLimit-Reset"
"paths./repos/{owner}/{repo}/releases/assets/{id}.patch.parameters[7].type" = "integer"
"paths./repos/{owner}/{repo}/releases/assets/{id}.patch.parameters[8].in" = "header"
"paths./repos/{owner}/{repo}/releases/assets/{id}.patch.parameters[8].name" = "X-GitHub-Request-Id"
"paths./repos/{owner}/{repo}/releases/assets/{id}.patch.parameters[8].type" = "integer"
"paths./repos/{owner}/{repo}/releases/assets/{id}.patch.parameters[9].in" = "body"
"paths./repos/{owner}/{repo}/releases/assets/{id}.patch.parameters[9].name" = "body"
"paths./repos/{owner}/{repo}/releases/assets/{id}.patch.parameters[9].required" = true
"paths./repos/{owner}/{repo}/releases/assets/{id}.patch.parameters[9].schema.$ref" = "#/definitions/assetPatch"
"paths./repos/{owner}/{repo}/releases/assets/{id}.patch.responses.200.description" = "OK"
"paths./repos/{owner}/{repo}/releases/assets/{id}.patch.responses.200.schema.$ref" = "#/definitions/asset"
"paths./repos/{owner}/{repo}/releases/assets/{id}.patch.responses.403.description" = "API rate limit exceeded. See http://developer.github.com/v3/#rate-limiting\nfor details.\n"
"paths./repos/{owner}/{repo}/releases/{id}.delete.description" = "Users with push access to the repository can delete a release."
"paths./repos/{owner}/{repo}/releases/{id}.delete.parameters.length" = 9
"paths./repos/{owner}/{repo}/releases/{id}.delete.parameters[0].description" = "Name of repository owner."
"paths./repos/{owner}/{repo}/releases/{id}.delete.parameters[0].in" = "path"
"paths./repos/{owner}/{repo}/releases/{id}.delete.parameters[0].name" = "owner"
"paths./repos/{owner}/{repo}/releases/{id}.delete.parameters[0].required" = true
"paths./repos/{owner}/{repo}/releases/{id}.delete.parameters[0].type" = "string"
"paths./repos/{owner}/{repo}/releases/{id}.delete.parameters[1].description" = "Name of repository."
"paths./repos/{owner}/{repo}/releases/{id}.delete.parameters[1].in" = "path"
"paths./repos/{owner}/{repo}/releases/{id}.delete.parameters[1].name" = "repo"
"paths./repos/{owner}/{repo}/releases/{id}.delete.parameters[1].required" = true
"paths./repos/{owner}/{repo}/releases/{id}.delete.parameters[1].type" = "string"
"paths./repos/{owner}/{repo}/releases/{id}.delete.parameters[2].in" = "path"
"paths./repos/{owner}/{repo}/releases/{id}.delete.parameters[2].name" = "id"
"paths./repos/{owner}/{repo}/releases/{id}.delete.parameters[2].required" = true
"paths./repos/{owner}/{repo}/releases/{id}.delete.parameters[2].type" = "string"
"paths./repos/{owner}/{repo}/releases/{id}.delete.parameters[3].description" = "You can check the current version of media type in responses.\n"
"paths./repos/{owner}/{repo}/releases/{id}.delete.parameters[3].in" = "header"
"paths./repos/{owner}/{repo}/releases/{id}.delete.parameters[3].name" = "X-GitHub-Media-Type"
"paths./repos/{owner}/{repo}/releases/{id}.delete.parameters[3].type" = "string"
"paths./repos/{owner}/{repo}/releases/{id}.delete.parameters[4].description" = "Is used to set specified media type."
"paths./repos/{owner}/{repo}/releases/{id}.delete.parameters[4].in" = "header"
"paths./repos/{owner}/{repo}/releases/{id}.delete.parameters[4].name" = "Accept"
"paths./repos/{owner}/{repo}/releases/{id}.delete.parameters[4].type" = "string"
"paths./repos/{owner}/{repo}/releases/{id}.delete.parameters[5].in" = "header"
"paths./repos/{owner}/{repo}/releases/{id}.delete.parameters[5].name" = "X-RateLimit-Limit"
"paths./repos/{owner}/{repo}/releases/{id}.delete.parameters[5].type" = "integer"
"paths./repos/{owner}/{repo}/releases/{id}.delete.parameters[6].in" = "header"
"paths./repos/{owner}/{repo}/releases/{id}.delete.parameters[6].name" = "X-RateLimit-Remaining"
"paths./repos/{owner}/{repo}/releases/{id}.delete.parameters[6].type" = "integer"
"paths./repos/{owner}/{repo}/releases/{id}.delete.parameters[7].in" = "header"
"paths./repos/{owner}/{repo}/releases/{id}.delete.parameters[7].name" = "X-RateLimit-Reset"
"paths./repos/{owner}/{repo}/releases/{id}.delete.parameters[7].type" = "integer"
"paths./repos/{owner}/{repo}/releases/{id}.delete.parameters[8].in" = "header"
"paths./repos/{owner}/{repo}/releases/{id}.delete.parameters[8].name" = "X-GitHub-Request-Id"
"paths./repos/{owner}/{repo}/releases/{id}.delete.parameters[8].type" = "integer"
"paths./repos/{owner}/{repo}/releases/{id}.delete.responses.204.description" = "No Content"
"paths./repos/{owner}/{repo}/releases/{id}.delete.responses.403.description" = "API rate limit exceeded. See http://developer.github.com/v3/#rate-limiting\nfor details.\n"
"paths./repos/{owner}/{repo}/releases/{id}.get.description" = "Get a single release"
"paths./repos/{owner}/{repo}/releases/{id}.get.parameters.length" = 9
"paths./repos/{owner}/{repo}/releases/{id}.get.parameters[0].description" = "Name of repository owner."
"paths./repos/{owner}/{repo}/releases/{id}.get.parameters[0].in" = "path"
"paths./repos/{owner}/{repo}/releases/{id}.get.parameters[0].name" = "owner"
"paths./repos/{owner}/{repo}/releases/{id}.get.parameters[0].required" = true
"paths./repos/{owner}/{repo}/releases/{id}.get.parameters[0].type" = "string"
"paths./repos/{owner}/{repo}/releases/{id}.get.parameters[1].description" = "Name of repository."
"paths./repos/{owner}/{repo}/releases/{id}.get.parameters[1].in" = "path"
"paths./repos/{owner}/{repo}/releases/{id}.get.parameters[1].name" = "repo"
"paths./repos/{owner}/{repo}/releases/{id}.get.parameters[1].required" = true
"paths./repos/{owner}/{repo}/releases/{id}.get.parameters[1].type" = "string"
"paths./repos/{owner}/{repo}/releases/{id}.get.parameters[2].in" = "path"
"paths./repos/{owner}/{repo}/releases/{id}.get.parameters[2].name" = "id"
"paths./repos/{owner}/{repo}/releases/{id}.get.parameters[2].required" = true
"paths./repos/{owner}/{repo}/releases/{id}.get.parameters[2].type" = "string"
"paths./repos/{owner}/{repo}/releases/{id}.get.parameters[3].description" = "You can check the current version of media type in responses.\n"
"paths./repos/{owner}/{repo}/releases/{id}.get.parameters[3].in" = "header"
"paths./repos/{owner}/{repo}/releases/{id}.get.parameters[3].name" = "X-GitHub-Media-Type"
"paths./repos/{owner}/{repo}/releases/{id}.get.parameters[3].type" = "string"
"paths./repos/{owner}/{repo}/releases/{id}.get.parameters[4].description" = "Is used to set specified media type."
"paths./repos/{owner}/{repo}/releases/{id}.get.parameters[4].in" = "header"
"paths./repos/{owner}/{repo}/releases/{id}.get.parameters[4].name" = "Accept"
"paths./repos/{owner}/{repo}/releases/{id}.get.parameters[4].type" = "string"
"paths./repos/{owner}/{repo}/releases/{id}.get.parameters[5].in" = "header"
"paths./repos/{owner}/{repo}/releases/{id}.get.parameters[5].name" = "X-RateLimit-Limit"
"paths./repos/{owner}/{repo}/releases/{id}.get.parameters[5].type" = "integer"
"paths./repos/{owner}/{repo}/releases/{id}.get.parameters[6].in" = "header"
"paths./repos/{owner}/{repo}/releases/{id}.get.parameters[6].name" = "X-RateLimit-Remaining"
"paths./repos/{owner}/{repo}/releases/{id}.get.parameters[6].type" = "integer"
"paths./repos/{owner}/{repo}/releases/{id}.get.parameters[7].in" = "header"
"paths./repos/{owner}/{repo}/releases/{id}.get.parameters[7].name" = "X-RateLimit-Reset"
"paths./repos/{owner}/{repo}/releases/{id}.get.parameters[7].type" = "integer"
"paths./repos/{owner}/{repo}/releases/{id}.get.parameters[8].in" = "header"
"paths./repos/{owner}/{repo}/releases/{id}.get.parameters[8].name" = "X-GitHub-Request-Id"
"paths./repos/{owner}/{repo}/releases/{id}.get.parameters[8].type" = "integer"
"paths./repos/{owner}/{repo}/releases/{id}.get.responses.200.description" = "OK"
"paths./repos/{owner}/{repo}/releases/{id}.get.responses.200.schema.$ref" = "#/definitions/release"
"paths./repos/{owner}/{repo}/releases/{id}.get.responses.403.description" = "API rate limit exceeded. See http://developer.github.com/v3/#rate-limiting\nfor details.\n"
"paths./repos/{owner}/{repo}/releases/{id}.patch.description" = "Users with push access to the repository can edit a release"
"paths./repos/{owner}/{repo}/releases/{id}.patch.parameters.length" = 10
"paths./repos/{owner}/{repo}/releases/{id}.patch.parameters[0].description" = "Name of repository owner."
"paths./repos/{owner}/{repo}/releases/{id}.patch.parameters[0].in" = "path"
"paths./repos/{owner}/{repo}/releases/{id}.patch.parameters[0].name" = "owner"
"paths./repos/{owner}/{repo}/releases/{id}.patch.parameters[0].required" = true
"paths./repos/{owner}/{repo}/releases/{id}.patch.parameters[0].type" = "string"
"paths./repos/{owner}/{repo}/releases/{id}.patch.parameters[1].description" = "Name of repository."
"paths./repos/{owner}/{repo}/releases/{id}.patch.parameters[1].in" = "path"
"paths./repos/{owner}/{repo}/releases/{id}.patch.parameters[1].name" = "repo"
"paths./repos/{owner}/{repo}/releases/{id}.patch.parameters[1].required" = true
"paths./repos/{owner}/{repo}/releases/{id}.patch.parameters[1].type" = "string"
"paths./repos/{owner}/{repo}/releases/{id}.patch.parameters[2].in" = "path"
"paths./repos/{owner}/{repo}/releases/{id}.patch.parameters[2].name" = "id"
"paths./repos/{owner}/{repo}/releases/{id}.patch.parameters[2].required" = true
"paths./repos/{owner}/{repo}/releases/{id}.patch.parameters[2].type" = "string"
"paths./repos/{owner}/{repo}/releases/{id}.patch.parameters[3].description" = "You can check the current version of media type in responses.\n"
"paths./repos/{owner}/{repo}/releases/{id}.patch.parameters[3].in" = "header"
"paths./repos/{owner}/{repo}/releases/{id}.patch.parameters[3].name" = "X-GitHub-Media-Type"
"paths./repos/{owner}/{repo}/releases/{id}.patch.parameters[3].type" = "string"
"paths./repos/{owner}/{repo}/releases/{id}.patch.parameters[4].description" = "Is used to set specified media type."
"paths./repos/{owner}/{repo}/releases/{id}.patch.parameters[4].in" = "header"
"paths./repos/{owner}/{repo}/releases/{id}.patch.parameters[4].name" = "Accept"
"paths./repos/{owner}/{repo}/releases/{id}.patch.parameters[4].type" = "string"
"paths./repos/{owner}/{repo}/releases/{id}.patch.parameters[5].in" = "header"
"paths./repos/{owner}/{repo}/releases/{id}.patch.parameters[5].name" = "X-RateLimit-Limit"
"paths./repos/{owner}/{repo}/releases/{id}.patch.parameters[5].type" = "integer"
"paths./repos/{owner}/{repo}/releases/{id}.patch.parameters[6].in" = "header"
"paths./repos/{owner}/{repo}/releases/{id}.patch.parameters[6].name" = "X-RateLimit-Remaining"
"paths./repos/{owner}/{repo}/releases/{id}.patch.parameters[6].type" = "integer"
"paths./repos/{owner}/{repo}/releases/{id}.patch.parameters[7].in" = "header"
"paths./repos/{owner}/{repo}/releases/{id}.patch.parameters[7].name" = "X-RateLimit-Reset"
"paths./repos/{owner}/{repo}/releases/{id}.patch.parameters[7].type" = "integer"
"paths./repos/{owner}/{repo}/releases/{id}.patch.parameters[8].in" = "header"
"paths./repos/{owner}/{repo}/releases/{id}.patch.parameters[8].name" = "X-GitHub-Request-Id"
"paths./repos/{owner}/{repo}/releases/{id}.patch.parameters[8].type" = "integer"
"paths./repos/{owner}/{repo}/releases/{id}.patch.parameters[9].in" = "body"
"paths./repos/{owner}/{repo}/releases/{id}.patch.parameters[9].name" = "body"
"paths./repos/{owner}/{repo}/releases/{id}.patch.parameters[9].required" = true
"paths./repos/{owner}/{repo}/releases/{id}.patch.parameters[9].schema.$ref" = "#/definitions/release-create"
"paths./repos/{owner}/{repo}/releases/{id}.patch.responses.200.description" = "OK"
"paths./repos/{owner}/{repo}/releases/{id}.patch.responses.200.schema.$ref" = "#/definitions/release"
"paths./repos/{owner}/{repo}/releases/{id}.patch.responses.403.description" = "API rate limit exceeded. See http://developer.github.com/v3/#rate-limiting\nfor details.\n"
"paths./repos/{owner}/{repo}/releases/{id}/assets.get.description" = "List assets for a release"
"paths./repos/{owner}/{repo}/releases/{id}/assets.get.parameters.length" = 9
"paths./repos/{owner}/{repo}/releases/{id}/assets.get.parameters[0].description" = "Name of repository owner."
"paths./repos/{owner}/{repo}/releases/{id}/assets.get.parameters[0].in" = "path"
"paths./repos/{owner}/{repo}/releases/{id}/assets.get.parameters[0].name" = "owner"
"paths./repos/{owner}/{repo}/releases/{id}/assets.get.parameters[0].required" = true
"paths./repos/{owner}/{repo}/releases/{id}/assets.get.parameters[0].type" = "string"
"paths./repos/{owner}/{repo}/releases/{id}/assets.get.parameters[1].description" = "Name of repository."
"paths./repos/{owner}/{repo}/releases/{id}/assets.get.parameters[1].in" = "path"
"paths./repos/{owner}/{repo}/releases/{id}/assets.get.parameters[1].name" = "repo"
"paths./repos/{owner}/{repo}/releases/{id}/assets.get.parameters[1].required" = true
"paths./repos/{owner}/{repo}/releases/{id}/assets.get.parameters[1].type" = "string"
"paths./repos/{owner}/{repo}/releases/{id}/assets.get.parameters[2].in" = "path"
"paths./repos/{owner}/{repo}/releases/{id}/assets.get.parameters[2].name" = "id"
"paths./repos/{owner}/{repo}/releases/{id}/assets.get.parameters[2].required" = true
"paths./repos/{owner}/{repo}/releases/{id}/assets.get.parameters[2].type" = "string"
"paths./repos/{owner}/{repo}/releases/{id}/assets.get.parameters[3].description" = "You can check the current version of media type in responses.\n"
"paths./repos/{owner}/{repo}/releases/{id}/assets.get.parameters[3].in" = "header"
"paths./repos/{owner}/{repo}/releases/{id}/assets.get.parameters[3].name" = "X-GitHub-Media-Type"
"paths./repos/{owner}/{repo}/releases/{id}/assets.get.parameters[3].type" = "string"
"paths./repos/{owner}/{repo}/releases/{id}/assets.get.parameters[4].description" = "Is used to set specified media type."
"paths./repos/{owner}/{repo}/releases/{id}/assets.get.parameters[4].in" = "header"
"paths./repos/{owner}/{repo}/releases/{id}/assets.get.parameters[4].name" = "Accept"
"paths./repos/{owner}/{repo}/releases/{id}/assets.get.parameters[4].type" = "string"
"paths./repos/{owner}/{repo}/releases/{id}/assets.get.parameters[5].in" = "header"
"paths./repos/{owner}/{repo}/releases/{id}/assets.get.parameters[5].name" = "X-RateLimit-Limit"
"paths./repos/{owner}/{repo}/releases/{id}/assets.get.parameters[5].type" = "integer"
"paths./repos/{owner}/{repo}/releases/{id}/assets.get.parameters[6].in" = "header"
"paths./repos/{owner}/{repo}/releases/{id}/assets.get.parameters[6].name" = "X-RateLimit-Remaining"
"paths./repos/{owner}/{repo}/releases/{id}/assets.get.parameters[6].type" = "integer"
"paths./repos/{owner}/{repo}/releases/{id}/assets.get.parameters[7].in" = "header"
"paths./repos/{owner}/{repo}/releases/{id}/assets.get.parameters[7].name" = "X-RateLimit-Reset"
"paths./repos/{owner}/{repo}/releases/{id}/assets.get.parameters[7].type" = "integer"
"paths./repos/{owner}/{repo}/releases/{id}/assets.get.parameters[8].in" = "header"
"paths./repos/{owner}/{repo}/releases/{id}/assets.get.parameters[8].name" = "X-GitHub-Request-Id"
"paths./repos/{owner}/{repo}/releases/{id}/assets.get.parameters[8].type" = "integer"
"paths./repos/{owner}/{repo}/releases/{id}/assets.get.responses.200.description" = "OK"
"paths./repos/{owner}/{repo}/releases/{id}/assets.get.responses.200.schema.$ref" = "#/definitions/assets"
"paths./repos/{owner}/{repo}/releases/{id}/assets.get.responses.403.description" = "API rate limit exceeded. See http://developer.github.com/v3/#rate-limiting\nfor details.\n"
"paths./repos/{owner}/{repo}/stargazers.get.description" = "List Stargazers."
"paths./repos/{owner}/{repo}/stargazers.get.parameters.length" = 8
"paths./repos/{owner}/{repo}/stargazers.get.parameters[0].description" = "Name of repository owner."
"paths./repos/{owner}/{repo}/stargazers.get.parameters[0].in" = "path"
"paths./repos/{owner}/{repo}/stargazers.get.parameters[0].name" = "owner"
"paths./repos/{owner}/{repo}/stargazers.get.parameters[0].required" = true
"paths./repos/{owner}/{repo}/stargazers.get.parameters[0].type" = "string"
"paths./repos/{owner}/{repo}/stargazers.get.parameters[1].description" = "Name of repository."
"paths./repos/{owner}/{repo}/stargazers.get.parameters[1].in" = "path"
"paths./repos/{owner}/{repo}/stargazers.get.parameters[1].name" = "repo"
"paths./repos/{owner}/{repo}/stargazers.get.parameters[1].required" = true
"paths./repos/{owner}/{repo}/stargazers.get.parameters[1].type" = "string"
"paths./repos/{owner}/{repo}/stargazers.get.parameters[2].description" = "You can check the current version of media type in responses.\n"
"paths./repos/{owner}/{repo}/stargazers.get.parameters[2].in" = "header"
"paths./repos/{owner}/{repo}/stargazers.get.parameters[2].name" = "X-GitHub-Media-Type"
"paths./repos/{owner}/{repo}/stargazers.get.parameters[2].type" = "string"
"paths./repos/{owner}/{repo}/stargazers.get.parameters[3].description" = "Is used to set specified media type."
"paths./repos/{owner}/{repo}/stargazers.get.parameters[3].in" = "header"
"paths./repos/{owner}/{repo}/stargazers.get.parameters[3].name" = "Accept"
"paths./repos/{owner}/{repo}/stargazers.get.parameters[3].type" = "string"
"paths./repos/{owner}/{repo}/stargazers.get.parameters[4].in" = "header"
"paths./repos/{owner}/{repo}/stargazers.get.parameters[4].name" = "X-RateLimit-Limit"
"paths./repos/{owner}/{repo}/stargazers.get.parameters[4].type" = "integer"
"paths./repos/{owner}/{repo}/stargazers.get.parameters[5].in" = "header"
"paths./repos/{owner}/{repo}/stargazers.get.parameters[5].name" = "X-RateLimit-Remaining"
"paths./repos/{owner}/{repo}/stargazers.get.parameters[5].type" = "integer"
"paths./repos/{owner}/{repo}/stargazers.get.parameters[6].in" = "header"
"paths./repos/{owner}/{repo}/stargazers.get.parameters[6].name" = "X-RateLimit-Reset"
"paths./repos/{owner}/{repo}/stargazers.get.parameters[6].type" = "integer"
"paths./repos/{owner}/{repo}/stargazers.get.parameters[7].in" = "header"
"paths./repos/{owner}/{repo}/stargazers.get.parameters[7].name" = "X-GitHub-Request-Id"
"paths./repos/{owner}/{repo}/stargazers.get.parameters[7].type" = "integer"
"paths./repos/{owner}/{repo}/stargazers.get.responses.200.description" = "OK"
"paths./repos/{owner}/{repo}/stargazers.get.responses.200.schema.$ref" = "#/definitions/users"
"paths./repos/{owner}/{repo}/stargazers.get.responses.403.description" = "API rate limit exceeded. See http://developer.github.com/v3/#rate-limiting\nfor details.\n"
"paths./repos/{owner}/{repo}/stats/code_frequency.get.description" = "Get the number of additions and deletions per week.\nReturns a weekly aggregate of the number of additions and deletions pushed\nto a repository.\n"
"paths./repos/{owner}/{repo}/stats/code_frequency.get.parameters.length" = 8
"paths./repos/{owner}/{repo}/stats/code_frequency.get.parameters[0].description" = "Name of repository owner."
"paths./repos/{owner}/{repo}/stats/code_frequency.get.parameters[0].in" = "path"
"paths./repos/{owner}/{repo}/stats/code_frequency.get.parameters[0].name" = "owner"
"paths./repos/{owner}/{repo}/stats/code_frequency.get.parameters[0].required" = true
"paths./repos/{owner}/{repo}/stats/code_frequency.get.parameters[0].type" = "string"
"paths./repos/{owner}/{repo}/stats/code_frequency.get.parameters[1].description" = "Name of repository."
"paths./repos/{owner}/{repo}/stats/code_frequency.get.parameters[1].in" = "path"
"paths./repos/{owner}/{repo}/stats/code_frequency.get.parameters[1].name" = "repo"
"paths./repos/{owner}/{repo}/stats/code_frequency.get.parameters[1].required" = true
"paths./repos/{owner}/{repo}/stats/code_frequency.get.parameters[1].type" = "string"
"paths./repos/{owner}/{repo}/stats/code_frequency.get.parameters[2].description" = "You can check the current version of media type in responses.\n"
"paths./repos/{owner}/{repo}/stats/code_frequency.get.parameters[2].in" = "header"
"paths./repos/{owner}/{repo}/stats/code_frequency.get.parameters[2].name" = "X-GitHub-Media-Type"
"paths./repos/{owner}/{repo}/stats/code_frequency.get.parameters[2].type" = "string"
"paths./repos/{owner}/{repo}/stats/code_frequency.get.parameters[3].description" = "Is used to set specified media type."
"paths./repos/{owner}/{repo}/stats/code_frequency.get.parameters[3].in" = "header"
"paths./repos/{owner}/{repo}/stats/code_frequency.get.parameters[3].name" = "Accept"
"paths./repos/{owner}/{repo}/stats/code_frequency.get.parameters[3].type" = "string"
"paths./repos/{owner}/{repo}/stats/code_frequency.get.parameters[4].in" = "header"
"paths./repos/{owner}/{repo}/stats/code_frequency.get.parameters[4].name" = "X-RateLimit-Limit"
"paths./repos/{owner}/{repo}/stats/code_frequency.get.parameters[4].type" = "integer"
"paths./repos/{owner}/{repo}/stats/code_frequency.get.parameters[5].in" = "header"
"paths./repos/{owner}/{repo}/stats/code_frequency.get.parameters[5].name" = "X-RateLimit-Remaining"
"paths./repos/{owner}/{repo}/stats/code_frequency.get.parameters[5].type" = "integer"
"paths./repos/{owner}/{repo}/stats/code_frequency.get.parameters[6].in" = "header"
"paths./repos/{owner}/{repo}/stats/code_frequency.get.parameters[6].name" = "X-RateLimit-Reset"
"paths./repos/{owner}/{repo}/stats/code_frequency.get.parameters[6].type" = "integer"
"paths./repos/{owner}/{repo}/stats/code_frequency.get.parameters[7].in" = "header"
"paths./repos/{owner}/{repo}/stats/code_frequency.get.parameters[7].name" = "X-GitHub-Request-Id"
"paths./repos/{owner}/{repo}/stats/code_frequency.get.parameters[7].type" = "integer"
"paths./repos/{owner}/{repo}/stats/code_frequency.get.responses.200.description" = "OK"
"paths./repos/{owner}/{repo}/stats/code_frequency.get.responses.200.schema.$ref" = "#/definitions/codeFrequencyStats"
"paths./repos/{owner}/{repo}/stats/code_frequency.get.responses.403.description" = "API rate limit exceeded. See http://developer.github.com/v3/#rate-limiting\nfor details.\n"
"paths./repos/{owner}/{repo}/stats/commit_activity.get.description" = "Get the last year of commit activity data.\nReturns the last year of commit activity grouped by week. The days array\nis a group of commits per day, starting on Sunday.\n"
"paths./repos/{owner}/{repo}/stats/commit_activity.get.parameters.length" = 8
"paths./repos/{owner}/{repo}/stats/commit_activity.get.parameters[0].description" = "Name of repository owner."
"paths./repos/{owner}/{repo}/stats/commit_activity.get.parameters[0].in" = "path"
"paths./repos/{owner}/{repo}/stats/commit_activity.get.parameters[0].name" = "owner"
"paths./repos/{owner}/{repo}/stats/commit_activity.get.parameters[0].required" = true
"paths./repos/{owner}/{repo}/stats/commit_activity.get.parameters[0].type" = "string"
"paths./repos/{owner}/{repo}/stats/commit_activity.get.parameters[1].description" = "Name of repository."
"paths./repos/{owner}/{repo}/stats/commit_activity.get.parameters[1].in" = "path"
"paths./repos/{owner}/{repo}/stats/commit_activity.get.parameters[1].name" = "repo"
"paths./repos/{owner}/{repo}/stats/commit_activity.get.parameters[1].required" = true
"paths./repos/{owner}/{repo}/stats/commit_activity.get.parameters[1].type" = "string"
"paths./repos/{owner}/{repo}/stats/commit_activity.get.parameters[2].description" = "You can check the current version of media type in responses.\n"
"paths./repos/{owner}/{repo}/stats/commit_activity.get.parameters[2].in" = "header"
"paths./repos/{owner}/{repo}/stats/commit_activity.get.parameters[2].name" = "X-GitHub-Media-Type"
"paths./repos/{owner}/{repo}/stats/commit_activity.get.parameters[2].type" = "string"
"paths./repos/{owner}/{repo}/stats/commit_activity.get.parameters[3].description" = "Is used to set specified media type."
"paths./repos/{owner}/{repo}/stats/commit_activity.get.parameters[3].in" = "header"
"paths./repos/{owner}/{repo}/stats/commit_activity.get.parameters[3].name" = "Accept"
"paths./repos/{owner}/{repo}/stats/commit_activity.get.parameters[3].type" = "string"
"paths./repos/{owner}/{repo}/stats/commit_activity.get.parameters[4].in" = "header"
"paths./repos/{owner}/{repo}/stats/commit_activity.get.parameters[4].name" = "X-RateLimit-Limit"
"paths./repos/{owner}/{repo}/stats/commit_activity.get.parameters[4].type" = "integer"
"paths./repos/{owner}/{repo}/stats/commit_activity.get.parameters[5].in" = "header"
"paths./repos/{owner}/{repo}/stats/commit_activity.get.parameters[5].name" = "X-RateLimit-Remaining"
"paths./repos/{owner}/{repo}/stats/commit_activity.get.parameters[5].type" = "integer"
"paths./repos/{owner}/{repo}/stats/commit_activity.get.parameters[6].in" = "header"
"paths./repos/{owner}/{repo}/stats/commit_activity.get.parameters[6].name" = "X-RateLimit-Reset"
"paths./repos/{owner}/{repo}/stats/commit_activity.get.parameters[6].type" = "integer"
"paths./repos/{owner}/{repo}/stats/commit_activity.get.parameters[7].in" = "header"
"paths./repos/{owner}/{repo}/stats/commit_activity.get.parameters[7].name" = "X-GitHub-Request-Id"
"paths./repos/{owner}/{repo}/stats/commit_activity.get.parameters[7].type" = "integer"
"paths./repos/{owner}/{repo}/stats/commit_activity.get.responses.200.description" = "OK"
"paths./repos/{owner}/{repo}/stats/commit_activity.get.responses.200.schema.$ref" = "#/definitions/commitActivityStats"
"paths./repos/{owner}/{repo}/stats/commit_activity.get.responses.403.description" = "API rate limit exceeded. See http://developer.github.com/v3/#rate-limiting\nfor details.\n"
"paths./repos/{owner}/{repo}/stats/contributors.get.description" = "Get contributors list with additions, deletions, and commit counts."
"paths./repos/{owner}/{repo}/stats/contributors.get.parameters.length" = 8
"paths./repos/{owner}/{repo}/stats/contributors.get.parameters[0].description" = "Name of repository owner."
"paths./repos/{owner}/{repo}/stats/contributors.get.parameters[0].in" = "path"
"paths./repos/{owner}/{repo}/stats/contributors.get.parameters[0].name" = "owner"
"paths./repos/{owner}/{repo}/stats/contributors.get.parameters[0].required" = true
"paths./repos/{owner}/{repo}/stats/contributors.get.parameters[0].type" = "string"
"paths./repos/{owner}/{repo}/stats/contributors.get.parameters[1].description" = "Name of repository."
"paths./repos/{owner}/{repo}/stats/contributors.get.parameters[1].in" = "path"
"paths./repos/{owner}/{repo}/stats/contributors.get.parameters[1].name" = "repo"
"paths./repos/{owner}/{repo}/stats/contributors.get.parameters[1].required" = true
"paths./repos/{owner}/{repo}/stats/contributors.get.parameters[1].type" = "string"
"paths./repos/{owner}/{repo}/stats/contributors.get.parameters[2].description" = "You can check the current version of media type in responses.\n"
"paths./repos/{owner}/{repo}/stats/contributors.get.parameters[2].in" = "header"
"paths./repos/{owner}/{repo}/stats/contributors.get.parameters[2].name" = "X-GitHub-Media-Type"
"paths./repos/{owner}/{repo}/stats/contributors.get.parameters[2].type" = "string"
"paths./repos/{owner}/{repo}/stats/contributors.get.parameters[3].description" = "Is used to set specified media type."
"paths./repos/{owner}/{repo}/stats/contributors.get.parameters[3].in" = "header"
"paths./repos/{owner}/{repo}/stats/contributors.get.parameters[3].name" = "Accept"
"paths./repos/{owner}/{repo}/stats/contributors.get.parameters[3].type" = "string"
"paths./repos/{owner}/{repo}/stats/contributors.get.parameters[4].in" = "header"
"paths./repos/{owner}/{repo}/stats/contributors.get.parameters[4].name" = "X-RateLimit-Limit"
"paths./repos/{owner}/{repo}/stats/contributors.get.parameters[4].type" = "integer"
"paths./repos/{owner}/{repo}/stats/contributors.get.parameters[5].in" = "header"
"paths./repos/{owner}/{repo}/stats/contributors.get.parameters[5].name" = "X-RateLimit-Remaining"
"paths./repos/{owner}/{repo}/stats/contributors.get.parameters[5].type" = "integer"
"paths./repos/{owner}/{repo}/stats/contributors.get.parameters[6].in" = "header"
"paths./repos/{owner}/{repo}/stats/contributors.get.parameters[6].name" = "X-RateLimit-Reset"
"paths./repos/{owner}/{repo}/stats/contributors.get.parameters[6].type" = "integer"
"paths./repos/{owner}/{repo}/stats/contributors.get.parameters[7].in" = "header"
"paths./repos/{owner}/{repo}/stats/contributors.get.parameters[7].name" = "X-GitHub-Request-Id"
"paths./repos/{owner}/{repo}/stats/contributors.get.parameters[7].type" = "integer"
"paths./repos/{owner}/{repo}/stats/contributors.get.responses.200.description" = "OK"
"paths./repos/{owner}/{repo}/stats/contributors.get.responses.200.schema.$ref" = "#/definitions/contributorsStats"
"paths./repos/{owner}/{repo}/stats/contributors.get.responses.403.description" = "API rate limit exceeded. See http://developer.github.com/v3/#rate-limiting\nfor details.\n"
"paths./repos/{owner}/{repo}/stats/participation.get.description" = "Get the weekly commit count for the repo owner and everyone else."
"paths./repos/{owner}/{repo}/stats/participation.get.parameters.length" = 8
"paths./repos/{owner}/{repo}/stats/participation.get.parameters[0].description" = "Name of repository owner."
"paths./repos/{owner}/{repo}/stats/participation.get.parameters[0].in" = "path"
"paths./repos/{owner}/{repo}/stats/participation.get.parameters[0].name" = "owner"
"paths./repos/{owner}/{repo}/stats/participation.get.parameters[0].required" = true
"paths./repos/{owner}/{repo}/stats/participation.get.parameters[0].type" = "string"
"paths./repos/{owner}/{repo}/stats/participation.get.parameters[1].description" = "Name of repository."
"paths./repos/{owner}/{repo}/stats/participation.get.parameters[1].in" = "path"
"paths./repos/{owner}/{repo}/stats/participation.get.parameters[1].name" = "repo"
"paths./repos/{owner}/{repo}/stats/participation.get.parameters[1].required" = true
"paths./repos/{owner}/{repo}/stats/participation.get.parameters[1].type" = "string"
"paths./repos/{owner}/{repo}/stats/participation.get.parameters[2].description" = "You can check the current version of media type in responses.\n"
"paths./repos/{owner}/{repo}/stats/participation.get.parameters[2].in" = "header"
"paths./repos/{owner}/{repo}/stats/participation.get.parameters[2].name" = "X-GitHub-Media-Type"
"paths./repos/{owner}/{repo}/stats/participation.get.parameters[2].type" = "string"
"paths./repos/{owner}/{repo}/stats/participation.get.parameters[3].description" = "Is used to set specified media type."
"paths./repos/{owner}/{repo}/stats/participation.get.parameters[3].in" = "header"
"paths./repos/{owner}/{repo}/stats/participation.get.parameters[3].name" = "Accept"
"paths./repos/{owner}/{repo}/stats/participation.get.parameters[3].type" = "string"
"paths./repos/{owner}/{repo}/stats/participation.get.parameters[4].in" = "header"
"paths./repos/{owner}/{repo}/stats/participation.get.parameters[4].name" = "X-RateLimit-Limit"
"paths./repos/{owner}/{repo}/stats/participation.get.parameters[4].type" = "integer"
"paths./repos/{owner}/{repo}/stats/participation.get.parameters[5].in" = "header"
"paths./repos/{owner}/{repo}/stats/participation.get.parameters[5].name" = "X-RateLimit-Remaining"
"paths./repos/{owner}/{repo}/stats/participation.get.parameters[5].type" = "integer"
"paths./repos/{owner}/{repo}/stats/participation.get.parameters[6].in" = "header"
"paths./repos/{owner}/{repo}/stats/participation.get.parameters[6].name" = "X-RateLimit-Reset"
"paths./repos/{owner}/{repo}/stats/participation.get.parameters[6].type" = "integer"
"paths./repos/{owner}/{repo}/stats/participation.get.parameters[7].in" = "header"
"paths./repos/{owner}/{repo}/stats/participation.get.parameters[7].name" = "X-GitHub-Request-Id"
"paths./repos/{owner}/{repo}/stats/participation.get.parameters[7].type" = "integer"
"paths./repos/{owner}/{repo}/stats/participation.get.responses.200.description" = "OK"
"paths./repos/{owner}/{repo}/stats/participation.get.responses.200.schema.$ref" = "#/definitions/participationStats"
"paths./repos/{owner}/{repo}/stats/participation.get.responses.403.description" = "API rate limit exceeded. See http://developer.github.com/v3/#rate-limiting\nfor details.\n"
"paths./repos/{owner}/{repo}/stats/punch_card.get.description" = "Get the number of commits per hour in each day.\nEach array contains the day number, hour number, and number of commits\n0-6 Sunday - Saturday\n0-23 Hour of day\nNumber of commits\n\nFor example, [2, 14, 25] indicates that there were 25 total commits, during\nthe 2.00pm hour on Tuesdays. All times are based on the time zone of\nindividual commits.\n"
"paths./repos/{owner}/{repo}/stats/punch_card.get.parameters.length" = 8
"paths./repos/{owner}/{repo}/stats/punch_card.get.parameters[0].description" = "Name of repository owner."
"paths./repos/{owner}/{repo}/stats/punch_card.get.parameters[0].in" = "path"
"paths./repos/{owner}/{repo}/stats/punch_card.get.parameters[0].name" = "owner"
"paths./repos/{owner}/{repo}/stats/punch_card.get.parameters[0].required" = true
"paths./repos/{owner}/{repo}/stats/punch_card.get.parameters[0].type" = "string"
"paths./repos/{owner}/{repo}/stats/punch_card.get.parameters[1].description" = "Name of repository."
"paths./repos/{owner}/{repo}/stats/punch_card.get.parameters[1].in" = "path"
"paths./repos/{owner}/{repo}/stats/punch_card.get.parameters[1].name" = "repo"
"paths./repos/{owner}/{repo}/stats/punch_card.get.parameters[1].required" = true
"paths./repos/{owner}/{repo}/stats/punch_card.get.parameters[1].type" = "string"
"paths./repos/{owner}/{repo}/stats/punch_card.get.parameters[2].description" = "You can check the current version of media type in responses.\n"
"paths./repos/{owner}/{repo}/stats/punch_card.get.parameters[2].in" = "header"
"paths./repos/{owner}/{repo}/stats/punch_card.get.parameters[2].name" = "X-GitHub-Media-Type"
"paths./repos/{owner}/{repo}/stats/punch_card.get.parameters[2].type" = "string"
"paths./repos/{owner}/{repo}/stats/punch_card.get.parameters[3].description" = "Is used to set specified media type."
"paths./repos/{owner}/{repo}/stats/punch_card.get.parameters[3].in" = "header"
"paths./repos/{owner}/{repo}/stats/punch_card.get.parameters[3].name" = "Accept"
"paths./repos/{owner}/{repo}/stats/punch_card.get.parameters[3].type" = "string"
"paths./repos/{owner}/{repo}/stats/punch_card.get.parameters[4].in" = "header"
"paths./repos/{owner}/{repo}/stats/punch_card.get.parameters[4].name" = "X-RateLimit-Limit"
"paths./repos/{owner}/{repo}/stats/punch_card.get.parameters[4].type" = "integer"
"paths./repos/{owner}/{repo}/stats/punch_card.get.parameters[5].in" = "header"
"paths./repos/{owner}/{repo}/stats/punch_card.get.parameters[5].name" = "X-RateLimit-Remaining"
"paths./repos/{owner}/{repo}/stats/punch_card.get.parameters[5].type" = "integer"
"paths./repos/{owner}/{repo}/stats/punch_card.get.parameters[6].in" = "header"
"paths./repos/{owner}/{repo}/stats/punch_card.get.parameters[6].name" = "X-RateLimit-Reset"
"paths./repos/{owner}/{repo}/stats/punch_card.get.parameters[6].type" = "integer"
"paths./repos/{owner}/{repo}/stats/punch_card.get.parameters[7].in" = "header"
"paths./repos/{owner}/{repo}/stats/punch_card.get.parameters[7].name" = "X-GitHub-Request-Id"
"paths./repos/{owner}/{repo}/stats/punch_card.get.parameters[7].type" = "integer"
"paths./repos/{owner}/{repo}/stats/punch_card.get.responses.200.description" = "OK"
"paths./repos/{owner}/{repo}/stats/punch_card.get.responses.200.schema.$ref" = "#/definitions/codeFrequencyStats"
"paths./repos/{owner}/{repo}/stats/punch_card.get.responses.403.description" = "API rate limit exceeded. See http://developer.github.com/v3/#rate-limiting\nfor details.\n"
"paths./repos/{owner}/{repo}/statuses/{ref}.get.description" = "List Statuses for a specific Ref."
"paths./repos/{owner}/{repo}/statuses/{ref}.get.parameters.length" = 9
"paths./repos/{owner}/{repo}/statuses/{ref}.get.parameters[0].description" = "Name of repository owner."
"paths./repos/{owner}/{repo}/statuses/{ref}.get.parameters[0].in" = "path"
"paths./repos/{owner}/{repo}/statuses/{ref}.get.parameters[0].name" = "owner"
"paths./repos/{owner}/{repo}/statuses/{ref}.get.parameters[0].required" = true
"paths./repos/{owner}/{repo}/statuses/{ref}.get.parameters[0].type" = "string"
"paths./repos/{owner}/{repo}/statuses/{ref}.get.parameters[1].description" = "Name of repository."
"paths./repos/{owner}/{repo}/statuses/{ref}.get.parameters[1].in" = "path"
"paths./repos/{owner}/{repo}/statuses/{ref}.get.parameters[1].name" = "repo"
"paths./repos/{owner}/{repo}/statuses/{ref}.get.parameters[1].required" = true
"paths./repos/{owner}/{repo}/statuses/{ref}.get.parameters[1].type" = "string"
"paths./repos/{owner}/{repo}/statuses/{ref}.get.parameters[2].description" = "Ref to list the statuses from. It can be a SHA, a branch name, or a tag name.\n"
"paths./repos/{owner}/{repo}/statuses/{ref}.get.parameters[2].in" = "path"
"paths./repos/{owner}/{repo}/statuses/{ref}.get.parameters[2].name" = "ref"
"paths./repos/{owner}/{repo}/statuses/{ref}.get.parameters[2].required" = true
"paths./repos/{owner}/{repo}/statuses/{ref}.get.parameters[2].type" = "string"
"paths./repos/{owner}/{repo}/statuses/{ref}.get.parameters[3].description" = "You can check the current version of media type in responses.\n"
"paths./repos/{owner}/{repo}/statuses/{ref}.get.parameters[3].in" = "header"
"paths./repos/{owner}/{repo}/statuses/{ref}.get.parameters[3].name" = "X-GitHub-Media-Type"
"paths./repos/{owner}/{repo}/statuses/{ref}.get.parameters[3].type" = "string"
"paths./repos/{owner}/{repo}/statuses/{ref}.get.parameters[4].description" = "Is used to set specified media type."
"paths./repos/{owner}/{repo}/statuses/{ref}.get.parameters[4].in" = "header"
"paths./repos/{owner}/{repo}/statuses/{ref}.get.parameters[4].name" = "Accept"
"paths./repos/{owner}/{repo}/statuses/{ref}.get.parameters[4].type" = "string"
"paths./repos/{owner}/{repo}/statuses/{ref}.get.parameters[5].in" = "header"
"paths./repos/{owner}/{repo}/statuses/{ref}.get.parameters[5].name" = "X-RateLimit-Limit"
"paths./repos/{owner}/{repo}/statuses/{ref}.get.parameters[5].type" = "integer"
"paths./repos/{owner}/{repo}/statuses/{ref}.get.parameters[6].in" = "header"
"paths./repos/{owner}/{repo}/statuses/{ref}.get.parameters[6].name" = "X-RateLimit-Remaining"
"paths./repos/{owner}/{repo}/statuses/{ref}.get.parameters[6].type" = "integer"
"paths./repos/{owner}/{repo}/statuses/{ref}.get.parameters[7].in" = "header"
"paths./repos/{owner}/{repo}/statuses/{ref}.get.parameters[7].name" = "X-RateLimit-Reset"
"paths./repos/{owner}/{repo}/statuses/{ref}.get.parameters[7].type" = "integer"
"paths./repos/{owner}/{repo}/statuses/{ref}.get.parameters[8].in" = "header"
"paths./repos/{owner}/{repo}/statuses/{ref}.get.parameters[8].name" = "X-GitHub-Request-Id"
"paths./repos/{owner}/{repo}/statuses/{ref}.get.parameters[8].type" = "integer"
"paths./repos/{owner}/{repo}/statuses/{ref}.get.responses.200.description" = "OK"
"paths./repos/{owner}/{repo}/statuses/{ref}.get.responses.200.schema.$ref" = "#/definitions/ref"
"paths./repos/{owner}/{repo}/statuses/{ref}.get.responses.403.description" = "API rate limit exceeded. See http://developer.github.com/v3/#rate-limiting\nfor details.\n"
"paths./repos/{owner}/{repo}/statuses/{ref}.post.description" = "Create a Status."
"paths./repos/{owner}/{repo}/statuses/{ref}.post.parameters.length" = 10
"paths./repos/{owner}/{repo}/statuses/{ref}.post.parameters[0].description" = "Name of repository owner."
"paths./repos/{owner}/{repo}/statuses/{ref}.post.parameters[0].in" = "path"
"paths./repos/{owner}/{repo}/statuses/{ref}.post.parameters[0].name" = "owner"
"paths./repos/{owner}/{repo}/statuses/{ref}.post.parameters[0].required" = true
"paths./repos/{owner}/{repo}/statuses/{ref}.post.parameters[0].type" = "string"
"paths./repos/{owner}/{repo}/statuses/{ref}.post.parameters[1].description" = "Name of repository."
"paths./repos/{owner}/{repo}/statuses/{ref}.post.parameters[1].in" = "path"
"paths./repos/{owner}/{repo}/statuses/{ref}.post.parameters[1].name" = "repo"
"paths./repos/{owner}/{repo}/statuses/{ref}.post.parameters[1].required" = true
"paths./repos/{owner}/{repo}/statuses/{ref}.post.parameters[1].type" = "string"
"paths./repos/{owner}/{repo}/statuses/{ref}.post.parameters[2].description" = "Ref to list the statuses from. It can be a SHA, a branch name, or a tag name.\n"
"paths./repos/{owner}/{repo}/statuses/{ref}.post.parameters[2].in" = "path"
"paths./repos/{owner}/{repo}/statuses/{ref}.post.parameters[2].name" = "ref"
"paths./repos/{owner}/{repo}/statuses/{ref}.post.parameters[2].required" = true
"paths./repos/{owner}/{repo}/statuses/{ref}.post.parameters[2].type" = "string"
"paths./repos/{owner}/{repo}/statuses/{ref}.post.parameters[3].description" = "You can check the current version of media type in responses.\n"
"paths./repos/{owner}/{repo}/statuses/{ref}.post.parameters[3].in" = "header"
"paths./repos/{owner}/{repo}/statuses/{ref}.post.parameters[3].name" = "X-GitHub-Media-Type"
"paths./repos/{owner}/{repo}/statuses/{ref}.post.parameters[3].type" = "string"
"paths./repos/{owner}/{repo}/statuses/{ref}.post.parameters[4].description" = "Is used to set specified media type."
"paths./repos/{owner}/{repo}/statuses/{ref}.post.parameters[4].in" = "header"
"paths./repos/{owner}/{repo}/statuses/{ref}.post.parameters[4].name" = "Accept"
"paths./repos/{owner}/{repo}/statuses/{ref}.post.parameters[4].type" = "string"
"paths./repos/{owner}/{repo}/statuses/{ref}.post.parameters[5].in" = "header"
"paths./repos/{owner}/{repo}/statuses/{ref}.post.parameters[5].name" = "X-RateLimit-Limit"
"paths./repos/{owner}/{repo}/statuses/{ref}.post.parameters[5].type" = "integer"
"paths./repos/{owner}/{repo}/statuses/{ref}.post.parameters[6].in" = "header"
"paths./repos/{owner}/{repo}/statuses/{ref}.post.parameters[6].name" = "X-RateLimit-Remaining"
"paths./repos/{owner}/{repo}/statuses/{ref}.post.parameters[6].type" = "integer"
"paths./repos/{owner}/{repo}/statuses/{ref}.post.parameters[7].in" = "header"
"paths./repos/{owner}/{repo}/statuses/{ref}.post.parameters[7].name" = "X-RateLimit-Reset"
"paths./repos/{owner}/{repo}/statuses/{ref}.post.parameters[7].type" = "integer"
"paths./repos/{owner}/{repo}/statuses/{ref}.post.parameters[8].in" = "header"
"paths./repos/{owner}/{repo}/statuses/{ref}.post.parameters[8].name" = "X-GitHub-Request-Id"
"paths./repos/{owner}/{repo}/statuses/{ref}.post.parameters[8].type" = "integer"
"paths./repos/{owner}/{repo}/statuses/{ref}.post.parameters[9].in" = "body"
"paths./repos/{owner}/{repo}/statuses/{ref}.post.parameters[9].name" = "body"
"paths./repos/{owner}/{repo}/statuses/{ref}.post.parameters[9].required" = true
"paths./repos/{owner}/{repo}/statuses/{ref}.post.parameters[9].schema.$ref" = "#/definitions/headBranch"
"paths./repos/{owner}/{repo}/statuses/{ref}.post.responses.201.description" = "Created"
"paths./repos/{owner}/{repo}/statuses/{ref}.post.responses.201.schema.$ref" = "#/definitions/ref"
"paths./repos/{owner}/{repo}/statuses/{ref}.post.responses.403.description" = "API rate limit exceeded. See http://developer.github.com/v3/#rate-limiting\nfor details.\n"
"paths./repos/{owner}/{repo}/subscribers.get.description" = "List watchers."
"paths./repos/{owner}/{repo}/subscribers.get.parameters.length" = 8
"paths./repos/{owner}/{repo}/subscribers.get.parameters[0].description" = "Name of repository owner."
"paths./repos/{owner}/{repo}/subscribers.get.parameters[0].in" = "path"
"paths./repos/{owner}/{repo}/subscribers.get.parameters[0].name" = "owner"
"paths./repos/{owner}/{repo}/subscribers.get.parameters[0].required" = true
"paths./repos/{owner}/{repo}/subscribers.get.parameters[0].type" = "string"
"paths./repos/{owner}/{repo}/subscribers.get.parameters[1].description" = "Name of repository."
"paths./repos/{owner}/{repo}/subscribers.get.parameters[1].in" = "path"
"paths./repos/{owner}/{repo}/subscribers.get.parameters[1].name" = "repo"
"paths./repos/{owner}/{repo}/subscribers.get.parameters[1].required" = true
"paths./repos/{owner}/{repo}/subscribers.get.parameters[1].type" = "string"
"paths./repos/{owner}/{repo}/subscribers.get.parameters[2].description" = "You can check the current version of media type in responses.\n"
"paths./repos/{owner}/{repo}/subscribers.get.parameters[2].in" = "header"
"paths./repos/{owner}/{repo}/subscribers.get.parameters[2].name" = "X-GitHub-Media-Type"
"paths./repos/{owner}/{repo}/subscribers.get.parameters[2].type" = "string"
"paths./repos/{owner}/{repo}/subscribers.get.parameters[3].description" = "Is used to set specified media type."
"paths./repos/{owner}/{repo}/subscribers.get.parameters[3].in" = "header"
"paths./repos/{owner}/{repo}/subscribers.get.parameters[3].name" = "Accept"
"paths./repos/{owner}/{repo}/subscribers.get.parameters[3].type" = "string"
"paths./repos/{owner}/{repo}/subscribers.get.parameters[4].in" = "header"
"paths./repos/{owner}/{repo}/subscribers.get.parameters[4].name" = "X-RateLimit-Limit"
"paths./repos/{owner}/{repo}/subscribers.get.parameters[4].type" = "integer"
"paths./repos/{owner}/{repo}/subscribers.get.parameters[5].in" = "header"
"paths./repos/{owner}/{repo}/subscribers.get.parameters[5].name" = "X-RateLimit-Remaining"
"paths./repos/{owner}/{repo}/subscribers.get.parameters[5].type" = "integer"
"paths./repos/{owner}/{repo}/subscribers.get.parameters[6].in" = "header"
"paths./repos/{owner}/{repo}/subscribers.get.parameters[6].name" = "X-RateLimit-Reset"
"paths./repos/{owner}/{repo}/subscribers.get.parameters[6].type" = "integer"
"paths./repos/{owner}/{repo}/subscribers.get.parameters[7].in" = "header"
"paths./repos/{owner}/{repo}/subscribers.get.parameters[7].name" = "X-GitHub-Request-Id"
"paths./repos/{owner}/{repo}/subscribers.get.parameters[7].type" = "integer"
"paths./repos/{owner}/{repo}/subscribers.get.responses.200.description" = "OK"
"paths./repos/{owner}/{repo}/subscribers.get.responses.200.schema.$ref" = "#/definitions/users"
"paths./repos/{owner}/{repo}/subscribers.get.responses.403.description" = "API rate limit exceeded. See http://developer.github.com/v3/#rate-limiting\nfor details.\n"
"paths./repos/{owner}/{repo}/subscription.delete.description" = "Delete a Repository Subscription."
"paths./repos/{owner}/{repo}/subscription.delete.parameters.length" = 8
"paths./repos/{owner}/{repo}/subscription.delete.parameters[0].description" = "Name of repository owner."
"paths./repos/{owner}/{repo}/subscription.delete.parameters[0].in" = "path"
"paths./repos/{owner}/{repo}/subscription.delete.parameters[0].name" = "owner"
"paths./repos/{owner}/{repo}/subscription.delete.parameters[0].required" = true
"paths./repos/{owner}/{repo}/subscription.delete.parameters[0].type" = "string"
"paths./repos/{owner}/{repo}/subscription.delete.parameters[1].description" = "Name of repository."
"paths./repos/{owner}/{repo}/subscription.delete.parameters[1].in" = "path"
"paths./repos/{owner}/{repo}/subscription.delete.parameters[1].name" = "repo"
"paths./repos/{owner}/{repo}/subscription.delete.parameters[1].required" = true
"paths./repos/{owner}/{repo}/subscription.delete.parameters[1].type" = "string"
"paths./repos/{owner}/{repo}/subscription.delete.parameters[2].description" = "You can check the current version of media type in responses.\n"
"paths./repos/{owner}/{repo}/subscription.delete.parameters[2].in" = "header"
"paths./repos/{owner}/{repo}/subscription.delete.parameters[2].name" = "X-GitHub-Media-Type"
"paths./repos/{owner}/{repo}/subscription.delete.parameters[2].type" = "string"
"paths./repos/{owner}/{repo}/subscription.delete.parameters[3].description" = "Is used to set specified media type."
"paths./repos/{owner}/{repo}/subscription.delete.parameters[3].in" = "header"
"paths./repos/{owner}/{repo}/subscription.delete.parameters[3].name" = "Accept"
"paths./repos/{owner}/{repo}/subscription.delete.parameters[3].type" = "string"
"paths./repos/{owner}/{repo}/subscription.delete.parameters[4].in" = "header"
"paths./repos/{owner}/{repo}/subscription.delete.parameters[4].name" = "X-RateLimit-Limit"
"paths./repos/{owner}/{repo}/subscription.delete.parameters[4].type" = "integer"
"paths./repos/{owner}/{repo}/subscription.delete.parameters[5].in" = "header"
"paths./repos/{owner}/{repo}/subscription.delete.parameters[5].name" = "X-RateLimit-Remaining"
"paths./repos/{owner}/{repo}/subscription.delete.parameters[5].type" = "integer"
"paths./repos/{owner}/{repo}/subscription.delete.parameters[6].in" = "header"
"paths./repos/{owner}/{repo}/subscription.delete.parameters[6].name" = "X-RateLimit-Reset"
"paths./repos/{owner}/{repo}/subscription.delete.parameters[6].type" = "integer"
"paths./repos/{owner}/{repo}/subscription.delete.parameters[7].in" = "header"
"paths./repos/{owner}/{repo}/subscription.delete.parameters[7].name" = "X-GitHub-Request-Id"
"paths./repos/{owner}/{repo}/subscription.delete.parameters[7].type" = "integer"
"paths./repos/{owner}/{repo}/subscription.delete.responses.204.description" = "No content.\n"
"paths./repos/{owner}/{repo}/subscription.delete.responses.403.description" = "API rate limit exceeded. See http://developer.github.com/v3/#rate-limiting\nfor details.\n"
"paths./repos/{owner}/{repo}/subscription.get.description" = "Get a Repository Subscription."
"paths./repos/{owner}/{repo}/subscription.get.parameters.length" = 8
"paths./repos/{owner}/{repo}/subscription.get.parameters[0].description" = "Name of repository owner."
"paths./repos/{owner}/{repo}/subscription.get.parameters[0].in" = "path"
"paths./repos/{owner}/{repo}/subscription.get.parameters[0].name" = "owner"
"paths./repos/{owner}/{repo}/subscription.get.parameters[0].required" = true
"paths./repos/{owner}/{repo}/subscription.get.parameters[0].type" = "string"
"paths./repos/{owner}/{repo}/subscription.get.parameters[1].description" = "Name of repository."
"paths./repos/{owner}/{repo}/subscription.get.parameters[1].in" = "path"
"paths./repos/{owner}/{repo}/subscription.get.parameters[1].name" = "repo"
"paths./repos/{owner}/{repo}/subscription.get.parameters[1].required" = true
"paths./repos/{owner}/{repo}/subscription.get.parameters[1].type" = "string"
"paths./repos/{owner}/{repo}/subscription.get.parameters[2].description" = "You can check the current version of media type in responses.\n"
"paths./repos/{owner}/{repo}/subscription.get.parameters[2].in" = "header"
"paths./repos/{owner}/{repo}/subscription.get.parameters[2].name" = "X-GitHub-Media-Type"
"paths./repos/{owner}/{repo}/subscription.get.parameters[2].type" = "string"
"paths./repos/{owner}/{repo}/subscription.get.parameters[3].description" = "Is used to set specified media type."
"paths./repos/{owner}/{repo}/subscription.get.parameters[3].in" = "header"
"paths./repos/{owner}/{repo}/subscription.get.parameters[3].name" = "Accept"
"paths./repos/{owner}/{repo}/subscription.get.parameters[3].type" = "string"
"paths./repos/{owner}/{repo}/subscription.get.parameters[4].in" = "header"
"paths./repos/{owner}/{repo}/subscription.get.parameters[4].name" = "X-RateLimit-Limit"
"paths./repos/{owner}/{repo}/subscription.get.parameters[4].type" = "integer"
"paths./repos/{owner}/{repo}/subscription.get.parameters[5].in" = "header"
"paths./repos/{owner}/{repo}/subscription.get.parameters[5].name" = "X-RateLimit-Remaining"
"paths./repos/{owner}/{repo}/subscription.get.parameters[5].type" = "integer"
"paths./repos/{owner}/{repo}/subscription.get.parameters[6].in" = "header"
"paths./repos/{owner}/{repo}/subscription.get.parameters[6].name" = "X-RateLimit-Reset"
"paths./repos/{owner}/{repo}/subscription.get.parameters[6].type" = "integer"
"paths./repos/{owner}/{repo}/subscription.get.parameters[7].in" = "header"
"paths./repos/{owner}/{repo}/subscription.get.parameters[7].name" = "X-GitHub-Request-Id"
"paths./repos/{owner}/{repo}/subscription.get.parameters[7].type" = "integer"
"paths./repos/{owner}/{repo}/subscription.get.responses.200.description" = "OK"
"paths./repos/{owner}/{repo}/subscription.get.responses.200.schema.$ref" = "#/definitions/subscribition"
"paths./repos/{owner}/{repo}/subscription.get.responses.403.description" = "API rate limit exceeded. See http://developer.github.com/v3/#rate-limiting\nfor details.\n"
"paths./repos/{owner}/{repo}/subscription.put.description" = "Set a Repository Subscription"
"paths./repos/{owner}/{repo}/subscription.put.parameters.length" = 9
"paths./repos/{owner}/{repo}/subscription.put.parameters[0].description" = "Name of repository owner."
"paths./repos/{owner}/{repo}/subscription.put.parameters[0].in" = "path"
"paths./repos/{owner}/{repo}/subscription.put.parameters[0].name" = "owner"
"paths./repos/{owner}/{repo}/subscription.put.parameters[0].required" = true
"paths./repos/{owner}/{repo}/subscription.put.parameters[0].type" = "string"
"paths./repos/{owner}/{repo}/subscription.put.parameters[1].description" = "Name of repository."
"paths./repos/{owner}/{repo}/subscription.put.parameters[1].in" = "path"
"paths./repos/{owner}/{repo}/subscription.put.parameters[1].name" = "repo"
"paths./repos/{owner}/{repo}/subscription.put.parameters[1].required" = true
"paths./repos/{owner}/{repo}/subscription.put.parameters[1].type" = "string"
"paths./repos/{owner}/{repo}/subscription.put.parameters[2].description" = "You can check the current version of media type in responses.\n"
"paths./repos/{owner}/{repo}/subscription.put.parameters[2].in" = "header"
"paths./repos/{owner}/{repo}/subscription.put.parameters[2].name" = "X-GitHub-Media-Type"
"paths./repos/{owner}/{repo}/subscription.put.parameters[2].type" = "string"
"paths./repos/{owner}/{repo}/subscription.put.parameters[3].description" = "Is used to set specified media type."
"paths./repos/{owner}/{repo}/subscription.put.parameters[3].in" = "header"
"paths./repos/{owner}/{repo}/subscription.put.parameters[3].name" = "Accept"
"paths./repos/{owner}/{repo}/subscription.put.parameters[3].type" = "string"
"paths./repos/{owner}/{repo}/subscription.put.parameters[4].in" = "header"
"paths./repos/{owner}/{repo}/subscription.put.parameters[4].name" = "X-RateLimit-Limit"
"paths./repos/{owner}/{repo}/subscription.put.parameters[4].type" = "integer"
"paths./repos/{owner}/{repo}/subscription.put.parameters[5].in" = "header"
"paths./repos/{owner}/{repo}/subscription.put.parameters[5].name" = "X-RateLimit-Remaining"
"paths./repos/{owner}/{repo}/subscription.put.parameters[5].type" = "integer"
"paths./repos/{owner}/{repo}/subscription.put.parameters[6].in" = "header"
"paths./repos/{owner}/{repo}/subscription.put.parameters[6].name" = "X-RateLimit-Reset"
"paths./repos/{owner}/{repo}/subscription.put.parameters[6].type" = "integer"
"paths./repos/{owner}/{repo}/subscription.put.parameters[7].in" = "header"
"paths./repos/{owner}/{repo}/subscription.put.parameters[7].name" = "X-GitHub-Request-Id"
"paths./repos/{owner}/{repo}/subscription.put.parameters[7].type" = "integer"
"paths./repos/{owner}/{repo}/subscription.put.parameters[8].in" = "body"
"paths./repos/{owner}/{repo}/subscription.put.parameters[8].name" = "body"
"paths./repos/{owner}/{repo}/subscription.put.parameters[8].required" = true
"paths./repos/{owner}/{repo}/subscription.put.parameters[8].schema.$ref" = "#/definitions/subscribitionBody"
"paths./repos/{owner}/{repo}/subscription.put.responses.200.description" = "OK"
"paths./repos/{owner}/{repo}/subscription.put.responses.200.schema.$ref" = "#/definitions/subscribition"
"paths./repos/{owner}/{repo}/subscription.put.responses.403.description" = "API rate limit exceeded. See http://developer.github.com/v3/#rate-limiting\nfor details.\n"
"paths./repos/{owner}/{repo}/tags.get.description" = "Get list of tags."
"paths./repos/{owner}/{repo}/tags.get.parameters.length" = 8
"paths./repos/{owner}/{repo}/tags.get.parameters[0].description" = "Name of repository owner."
"paths./repos/{owner}/{repo}/tags.get.parameters[0].in" = "path"
"paths./repos/{owner}/{repo}/tags.get.parameters[0].name" = "owner"
"paths./repos/{owner}/{repo}/tags.get.parameters[0].required" = true
"paths./repos/{owner}/{repo}/tags.get.parameters[0].type" = "string"
"paths./repos/{owner}/{repo}/tags.get.parameters[1].description" = "Name of repository."
"paths./repos/{owner}/{repo}/tags.get.parameters[1].in" = "path"
"paths./repos/{owner}/{repo}/tags.get.parameters[1].name" = "repo"
"paths./repos/{owner}/{repo}/tags.get.parameters[1].required" = true
"paths./repos/{owner}/{repo}/tags.get.parameters[1].type" = "string"
"paths./repos/{owner}/{repo}/tags.get.parameters[2].description" = "You can check the current version of media type in responses.\n"
"paths./repos/{owner}/{repo}/tags.get.parameters[2].in" = "header"
"paths./repos/{owner}/{repo}/tags.get.parameters[2].name" = "X-GitHub-Media-Type"
"paths./repos/{owner}/{repo}/tags.get.parameters[2].type" = "string"
"paths./repos/{owner}/{repo}/tags.get.parameters[3].description" = "Is used to set specified media type."
"paths./repos/{owner}/{repo}/tags.get.parameters[3].in" = "header"
"paths./repos/{owner}/{repo}/tags.get.parameters[3].name" = "Accept"
"paths./repos/{owner}/{repo}/tags.get.parameters[3].type" = "string"
"paths./repos/{owner}/{repo}/tags.get.parameters[4].in" = "header"
"paths./repos/{owner}/{repo}/tags.get.parameters[4].name" = "X-RateLimit-Limit"
"paths./repos/{owner}/{repo}/tags.get.parameters[4].type" = "integer"
"paths./repos/{owner}/{repo}/tags.get.parameters[5].in" = "header"
"paths./repos/{owner}/{repo}/tags.get.parameters[5].name" = "X-RateLimit-Remaining"
"paths./repos/{owner}/{repo}/tags.get.parameters[5].type" = "integer"
"paths./repos/{owner}/{repo}/tags.get.parameters[6].in" = "header"
"paths./repos/{owner}/{repo}/tags.get.parameters[6].name" = "X-RateLimit-Reset"
"paths./repos/{owner}/{repo}/tags.get.parameters[6].type" = "integer"
"paths./repos/{owner}/{repo}/tags.get.parameters[7].in" = "header"
"paths./repos/{owner}/{repo}/tags.get.parameters[7].name" = "X-GitHub-Request-Id"
"paths./repos/{owner}/{repo}/tags.get.parameters[7].type" = "integer"
"paths./repos/{owner}/{repo}/tags.get.responses.200.description" = "OK"
"paths./repos/{owner}/{repo}/tags.get.responses.200.schema.$ref" = "#/definitions/tags"
"paths./repos/{owner}/{repo}/tags.get.responses.403.description" = "API rate limit exceeded. See http://developer.github.com/v3/#rate-limiting\nfor details.\n"
"paths./repos/{owner}/{repo}/teams.get.description" = "Get list of teams"
"paths./repos/{owner}/{repo}/teams.get.parameters.length" = 8
"paths./repos/{owner}/{repo}/teams.get.parameters[0].description" = "Name of repository owner."
"paths./repos/{owner}/{repo}/teams.get.parameters[0].in" = "path"
"paths./repos/{owner}/{repo}/teams.get.parameters[0].name" = "owner"
"paths./repos/{owner}/{repo}/teams.get.parameters[0].required" = true
"paths./repos/{owner}/{repo}/teams.get.parameters[0].type" = "string"
"paths./repos/{owner}/{repo}/teams.get.parameters[1].description" = "Name of repository."
"paths./repos/{owner}/{repo}/teams.get.parameters[1].in" = "path"
"paths./repos/{owner}/{repo}/teams.get.parameters[1].name" = "repo"
"paths./repos/{owner}/{repo}/teams.get.parameters[1].required" = true
"paths./repos/{owner}/{repo}/teams.get.parameters[1].type" = "string"
"paths./repos/{owner}/{repo}/teams.get.parameters[2].description" = "You can check the current version of media type in responses.\n"
"paths./repos/{owner}/{repo}/teams.get.parameters[2].in" = "header"
"paths./repos/{owner}/{repo}/teams.get.parameters[2].name" = "X-GitHub-Media-Type"
"paths./repos/{owner}/{repo}/teams.get.parameters[2].type" = "string"
"paths./repos/{owner}/{repo}/teams.get.parameters[3].description" = "Is used to set specified media type."
"paths./repos/{owner}/{repo}/teams.get.parameters[3].in" = "header"
"paths./repos/{owner}/{repo}/teams.get.parameters[3].name" = "Accept"
"paths./repos/{owner}/{repo}/teams.get.parameters[3].type" = "string"
"paths./repos/{owner}/{repo}/teams.get.parameters[4].in" = "header"
"paths./repos/{owner}/{repo}/teams.get.parameters[4].name" = "X-RateLimit-Limit"
"paths./repos/{owner}/{repo}/teams.get.parameters[4].type" = "integer"
"paths./repos/{owner}/{repo}/teams.get.parameters[5].in" = "header"
"paths./repos/{owner}/{repo}/teams.get.parameters[5].name" = "X-RateLimit-Remaining"
"paths./repos/{owner}/{repo}/teams.get.parameters[5].type" = "integer"
"paths./repos/{owner}/{repo}/teams.get.parameters[6].in" = "header"
"paths./repos/{owner}/{repo}/teams.get.parameters[6].name" = "X-RateLimit-Reset"
"paths./repos/{owner}/{repo}/teams.get.parameters[6].type" = "integer"
"paths./repos/{owner}/{repo}/teams.get.parameters[7].in" = "header"
"paths./repos/{owner}/{repo}/teams.get.parameters[7].name" = "X-GitHub-Request-Id"
"paths./repos/{owner}/{repo}/teams.get.parameters[7].type" = "integer"
"paths./repos/{owner}/{repo}/teams.get.responses.200.description" = "OK"
"paths./repos/{owner}/{repo}/teams.get.responses.200.schema.$ref" = "#/definitions/teams"
"paths./repos/{owner}/{repo}/teams.get.responses.403.description" = "API rate limit exceeded. See http://developer.github.com/v3/#rate-limiting\nfor details.\n"
"paths./repos/{owner}/{repo}/watchers.get.description" = "List Stargazers. New implementation."
"paths./repos/{owner}/{repo}/watchers.get.parameters.length" = 8
"paths./repos/{owner}/{repo}/watchers.get.parameters[0].description" = "Name of repository owner."
"paths./repos/{owner}/{repo}/watchers.get.parameters[0].in" = "path"
"paths./repos/{owner}/{repo}/watchers.get.parameters[0].name" = "owner"
"paths./repos/{owner}/{repo}/watchers.get.parameters[0].required" = true
"paths./repos/{owner}/{repo}/watchers.get.parameters[0].type" = "string"
"paths./repos/{owner}/{repo}/watchers.get.parameters[1].description" = "Name of repository."
"paths./repos/{owner}/{repo}/watchers.get.parameters[1].in" = "path"
"paths./repos/{owner}/{repo}/watchers.get.parameters[1].name" = "repo"
"paths./repos/{owner}/{repo}/watchers.get.parameters[1].required" = true
"paths./repos/{owner}/{repo}/watchers.get.parameters[1].type" = "string"
"paths./repos/{owner}/{repo}/watchers.get.parameters[2].description" = "You can check the current version of media type in responses.\n"
"paths./repos/{owner}/{repo}/watchers.get.parameters[2].in" = "header"
"paths./repos/{owner}/{repo}/watchers.get.parameters[2].name" = "X-GitHub-Media-Type"
"paths./repos/{owner}/{repo}/watchers.get.parameters[2].type" = "string"
"paths./repos/{owner}/{repo}/watchers.get.parameters[3].description" = "Is used to set specified media type."
"paths./repos/{owner}/{repo}/watchers.get.parameters[3].in" = "header"
"paths./repos/{owner}/{repo}/watchers.get.parameters[3].name" = "Accept"
"paths./repos/{owner}/{repo}/watchers.get.parameters[3].type" = "string"
"paths./repos/{owner}/{repo}/watchers.get.parameters[4].in" = "header"
"paths./repos/{owner}/{repo}/watchers.get.parameters[4].name" = "X-RateLimit-Limit"
"paths./repos/{owner}/{repo}/watchers.get.parameters[4].type" = "integer"
"paths./repos/{owner}/{repo}/watchers.get.parameters[5].in" = "header"
"paths./repos/{owner}/{repo}/watchers.get.parameters[5].name" = "X-RateLimit-Remaining"
"paths./repos/{owner}/{repo}/watchers.get.parameters[5].type" = "integer"
"paths./repos/{owner}/{repo}/watchers.get.parameters[6].in" = "header"
"paths./repos/{owner}/{repo}/watchers.get.parameters[6].name" = "X-RateLimit-Reset"
"paths./repos/{owner}/{repo}/watchers.get.parameters[6].type" = "integer"
"paths./repos/{owner}/{repo}/watchers.get.parameters[7].in" = "header"
"paths./repos/{owner}/{repo}/watchers.get.parameters[7].name" = "X-GitHub-Request-Id"
"paths./repos/{owner}/{repo}/watchers.get.parameters[7].type" = "integer"
"paths./repos/{owner}/{repo}/watchers.get.responses.200.description" = "OK"
"paths./repos/{owner}/{repo}/watchers.get.responses.200.schema.$ref" = "#/definitions/users"
"paths./repos/{owner}/{repo}/watchers.get.responses.403.description" = "API rate limit exceeded. See http://developer.github.com/v3/#rate-limiting\nfor details.\n"
"paths./repos/{owner}/{repo}/{archive_format}/{path}.get.description" = "Get archive link.\nThis method will return a 302 to a URL to download a tarball or zipball\narchive for a repository. Please make sure your HTTP framework is\nconfigured to follow redirects or you will need to use the Location header\nto make a second GET request.\nNote: For private repositories, these links are temporary and expire quickly.\n"
"paths./repos/{owner}/{repo}/{archive_format}/{path}.get.parameters.length" = 10
"paths./repos/{owner}/{repo}/{archive_format}/{path}.get.parameters[0].description" = "Name of repository owner."
"paths./repos/{owner}/{repo}/{archive_format}/{path}.get.parameters[0].in" = "path"
"paths./repos/{owner}/{repo}/{archive_format}/{path}.get.parameters[0].name" = "owner"
"paths./repos/{owner}/{repo}/{archive_format}/{path}.get.parameters[0].required" = true
"paths./repos/{owner}/{repo}/{archive_format}/{path}.get.parameters[0].type" = "string"
"paths./repos/{owner}/{repo}/{archive_format}/{path}.get.parameters[1].description" = "Name of repository."
"paths./repos/{owner}/{repo}/{archive_format}/{path}.get.parameters[1].in" = "path"
"paths./repos/{owner}/{repo}/{archive_format}/{path}.get.parameters[1].name" = "repo"
"paths./repos/{owner}/{repo}/{archive_format}/{path}.get.parameters[1].required" = true
"paths./repos/{owner}/{repo}/{archive_format}/{path}.get.parameters[1].type" = "string"
"paths./repos/{owner}/{repo}/{archive_format}/{path}.get.parameters[2].enum.length" = 2
"paths./repos/{owner}/{repo}/{archive_format}/{path}.get.parameters[2].enum[0]" = "tarball"
"paths./repos/{owner}/{repo}/{archive_format}/{path}.get.parameters[2].enum[1]" = "zipball"
"paths./repos/{owner}/{repo}/{archive_format}/{path}.get.parameters[2].in" = "path"
"paths./repos/{owner}/{repo}/{archive_format}/{path}.get.parameters[2].name" = "archive_format"
"paths./repos/{owner}/{repo}/{archive_format}/{path}.get.parameters[2].required" = true
"paths./repos/{owner}/{repo}/{archive_format}/{path}.get.parameters[2].type" = "string"
"paths./repos/{owner}/{repo}/{archive_format}/{path}.get.parameters[3].description" = "Valid Git reference, defaults to 'master'."
"paths./repos/{owner}/{repo}/{archive_format}/{path}.get.parameters[3].in" = "path"
"paths./repos/{owner}/{repo}/{archive_format}/{path}.get.parameters[3].name" = "path"
"paths./repos/{owner}/{repo}/{archive_format}/{path}.get.parameters[3].required" = true
"paths./repos/{owner}/{repo}/{archive_format}/{path}.get.parameters[3].type" = "string"
"paths./repos/{owner}/{repo}/{archive_format}/{path}.get.parameters[4].description" = "You can check the current version of media type in responses.\n"
"paths./repos/{owner}/{repo}/{archive_format}/{path}.get.parameters[4].in" = "header"
"paths./repos/{owner}/{repo}/{archive_format}/{path}.get.parameters[4].name" = "X-GitHub-Media-Type"
"paths./repos/{owner}/{repo}/{archive_format}/{path}.get.parameters[4].type" = "string"
"paths./repos/{owner}/{repo}/{archive_format}/{path}.get.parameters[5].description" = "Is used to set specified media type."
"paths./repos/{owner}/{repo}/{archive_format}/{path}.get.parameters[5].in" = "header"
"paths./repos/{owner}/{repo}/{archive_format}/{path}.get.parameters[5].name" = "Accept"
"paths./repos/{owner}/{repo}/{archive_format}/{path}.get.parameters[5].type" = "string"
"paths./repos/{owner}/{repo}/{archive_format}/{path}.get.parameters[6].in" = "header"
"paths./repos/{owner}/{repo}/{archive_format}/{path}.get.parameters[6].name" = "X-RateLimit-Limit"
"paths./repos/{owner}/{repo}/{archive_format}/{path}.get.parameters[6].type" = "integer"
"paths./repos/{owner}/{repo}/{archive_format}/{path}.get.parameters[7].in" = "header"
"paths./repos/{owner}/{repo}/{archive_format}/{path}.get.parameters[7].name" = "X-RateLimit-Remaining"
"paths./repos/{owner}/{repo}/{archive_format}/{path}.get.parameters[7].type" = "integer"
"paths./repos/{owner}/{repo}/{archive_format}/{path}.get.parameters[8].in" = "header"
"paths./repos/{owner}/{repo}/{archive_format}/{path}.get.parameters[8].name" = "X-RateLimit-Reset"
"paths./repos/{owner}/{repo}/{archive_format}/{path}.get.parameters[8].type" = "integer"
"paths./repos/{owner}/{repo}/{archive_format}/{path}.get.parameters[9].in" = "header"
"paths./repos/{owner}/{repo}/{archive_format}/{path}.get.parameters[9].name" = "X-GitHub-Request-Id"
"paths./repos/{owner}/{repo}/{archive_format}/{path}.get.parameters[9].type" = "integer"
"paths./repos/{owner}/{repo}/{archive_format}/{path}.get.responses.302.description" = "Found."
"paths./repos/{owner}/{repo}/{archive_format}/{path}.get.responses.403.description" = "API rate limit exceeded. See http://developer.github.com/v3/#rate-limiting\nfor details.\n"
"paths./repositories.get.description" = "List all public repositories.\nThis provides a dump of every public repository, in the order that they\nwere created.\nNote: Pagination is powered exclusively by the since parameter. is the\nLink header to get the URL for the next page of repositories.\n"
"paths./repositories.get.parameters.length" = 7
"paths./repositories.get.parameters[0].description" = "The time should be passed in as UTC in the ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ.\nExample: \"2012-10-09T23:39:01Z\".\n"
"paths./repositories.get.parameters[0].in" = "query"
"paths./repositories.get.parameters[0].name" = "since"
"paths./repositories.get.parameters[0].type" = "string"
"paths./repositories.get.parameters[1].description" = "You can check the current version of media type in responses.\n"
"paths./repositories.get.parameters[1].in" = "header"
"paths./repositories.get.parameters[1].name" = "X-GitHub-Media-Type"
"paths./repositories.get.parameters[1].type" = "string"
"paths./repositories.get.parameters[2].description" = "Is used to set specified media type."
"paths./repositories.get.parameters[2].in" = "header"
"paths./repositories.get.parameters[2].name" = "Accept"
"paths./repositories.get.parameters[2].type" = "string"
"paths./repositories.get.parameters[3].in" = "header"
"paths./repositories.get.parameters[3].name" = "X-RateLimit-Limit"
"paths./repositories.get.parameters[3].type" = "integer"
"paths./repositories.get.parameters[4].in" = "header"
"paths./repositories.get.parameters[4].name" = "X-RateLimit-Remaining"
"paths./repositories.get.parameters[4].type" = "integer"
"paths./repositories.get.parameters[5].in" = "header"
"paths./repositories.get.parameters[5].name" = "X-RateLimit-Reset"
"paths./repositories.get.parameters[5].type" = "integer"
"paths./repositories.get.parameters[6].in" = "header"
"paths./repositories.get.parameters[6].name" = "X-GitHub-Request-Id"
"paths./repositories.get.parameters[6].type" = "integer"
"paths./repositories.get.responses.200.description" = "OK"
"paths./repositories.get.responses.200.schema.$ref" = "#/definitions/repositories"
"paths./repositories.get.responses.403.description" = "API rate limit exceeded. See http://developer.github.com/v3/#rate-limiting\nfor details.\n"
"paths./search/code.get.description" = "Search code."
"paths./search/code.get.parameters.length" = 9
"paths./search/code.get.parameters[0].default" = "desc"
"paths./search/code.get.parameters[0].description" = "The sort field. if sort param is provided. Can be either asc or desc."
"paths./search/code.get.parameters[0].enum.length" = 2
"paths./search/code.get.parameters[0].enum[0]" = "desc"
"paths./search/code.get.parameters[0].enum[1]" = "asc"
"paths./search/code.get.parameters[0].in" = "query"
"paths./search/code.get.parameters[0].name" = "order"
"paths./search/code.get.parameters[0].type" = "string"
"paths./search/code.get.parameters[1].description" = "The search terms. This can be any combination of the supported code\nsearch parameters:\n'Search In' Qualifies which fields are searched. With this qualifier\nyou can restrict the search to just the file contents, the file path,\nor both.\n'Languages' Searches code based on the language it's written in.\n'Forks' Filters repositories based on the number of forks, and/or\nwhether code from forked repositories should be included in the results\nat all.\n'Size' Finds files that match a certain size (in bytes).\n'Path' Specifies the path that the resulting file must be at.\n'Extension' Matches files with a certain extension.\n'Users' or 'Repositories' Limits searches to a specific user or repository.\n"
"paths./search/code.get.parameters[1].in" = "query"
"paths./search/code.get.parameters[1].name" = "q"
"paths./search/code.get.parameters[1].required" = true
"paths./search/code.get.parameters[1].type" = "string"
"paths./search/code.get.parameters[2].description" = "Can only be 'indexed', which indicates how recently a file has been indexed\nby the GitHub search infrastructure. If not provided, results are sorted\nby best match.\n"
"paths./search/code.get.parameters[2].enum.length" = 1
"paths./search/code.get.parameters[2].enum[0]" = "indexed"
"paths./search/code.get.parameters[2].in" = "query"
"paths./search/code.get.parameters[2].name" = "sort"
"paths./search/code.get.parameters[2].type" = "string"
"paths./search/code.get.parameters[3].description" = "You can check the current version of media type in responses.\n"
"paths./search/code.get.parameters[3].in" = "header"
"paths./search/code.get.parameters[3].name" = "X-GitHub-Media-Type"
"paths./search/code.get.parameters[3].type" = "string"
"paths./search/code.get.parameters[4].description" = "Is used to set specified media type."
"paths./search/code.get.parameters[4].in" = "header"
"paths./search/code.get.parameters[4].name" = "Accept"
"paths./search/code.get.parameters[4].type" = "string"
"paths./search/code.get.parameters[5].in" = "header"
"paths./search/code.get.parameters[5].name" = "X-RateLimit-Limit"
"paths./search/code.get.parameters[5].type" = "integer"
"paths./search/code.get.parameters[6].in" = "header"
"paths./search/code.get.parameters[6].name" = "X-RateLimit-Remaining"
"paths./search/code.get.parameters[6].type" = "integer"
"paths./search/code.get.parameters[7].in" = "header"
"paths./search/code.get.parameters[7].name" = "X-RateLimit-Reset"
"paths./search/code.get.parameters[7].type" = "integer"
"paths./search/code.get.parameters[8].in" = "header"
"paths./search/code.get.parameters[8].name" = "X-GitHub-Request-Id"
"paths./search/code.get.parameters[8].type" = "integer"
"paths./search/code.get.responses.200.description" = "OK"
"paths./search/code.get.responses.200.schema.$ref" = "#/definitions/search-code"
"paths./search/code.get.responses.403.description" = "API rate limit exceeded. See http://developer.github.com/v3/#rate-limiting\nfor details.\n"
"paths./search/issues.get.description" = "Find issues by state and keyword. (This method returns up to 100 results per page.)"
"paths./search/issues.get.parameters.length" = 9
"paths./search/issues.get.parameters[0].default" = "desc"
"paths./search/issues.get.parameters[0].description" = "The sort field. if sort param is provided. Can be either asc or desc."
"paths./search/issues.get.parameters[0].enum.length" = 2
"paths./search/issues.get.parameters[0].enum[0]" = "desc"
"paths./search/issues.get.parameters[0].enum[1]" = "asc"
"paths./search/issues.get.parameters[0].in" = "query"
"paths./search/issues.get.parameters[0].name" = "order"
"paths./search/issues.get.parameters[0].type" = "string"
"paths./search/issues.get.parameters[1].description" = "The q search term can also contain any combination of the supported issue search qualifiers:"
"paths./search/issues.get.parameters[1].in" = "query"
"paths./search/issues.get.parameters[1].name" = "q"
"paths./search/issues.get.parameters[1].required" = true
"paths./search/issues.get.parameters[1].type" = "string"
"paths./search/issues.get.parameters[2].description" = "The sort field. Can be comments, created, or updated. Default: results are sorted by best match."
"paths./search/issues.get.parameters[2].enum.length" = 3
"paths./search/issues.get.parameters[2].enum[0]" = "updated"
"paths./search/issues.get.parameters[2].enum[1]" = "created"
"paths./search/issues.get.parameters[2].enum[2]" = "comments"
"paths./search/issues.get.parameters[2].in" = "query"
"paths./search/issues.get.parameters[2].name" = "sort"
"paths./search/issues.get.parameters[2].type" = "string"
"paths./search/issues.get.parameters[3].description" = "You can check the current version of media type in responses.\n"
"paths./search/issues.get.parameters[3].in" = "header"
"paths./search/issues.get.parameters[3].name" = "X-GitHub-Media-Type"
"paths./search/issues.get.parameters[3].type" = "string"
"paths./search/issues.get.parameters[4].description" = "Is used to set specified media type."
"paths./search/issues.get.parameters[4].in" = "header"
"paths./search/issues.get.parameters[4].name" = "Accept"
"paths./search/issues.get.parameters[4].type" = "string"
"paths./search/issues.get.parameters[5].in" = "header"
"paths./search/issues.get.parameters[5].name" = "X-RateLimit-Limit"
"paths./search/issues.get.parameters[5].type" = "integer"
"paths./search/issues.get.parameters[6].in" = "header"
"paths./search/issues.get.parameters[6].name" = "X-RateLimit-Remaining"
"paths./search/issues.get.parameters[6].type" = "integer"
"paths./search/issues.get.parameters[7].in" = "header"
"paths./search/issues.get.parameters[7].name" = "X-RateLimit-Reset"
"paths./search/issues.get.parameters[7].type" = "integer"
"paths./search/issues.get.parameters[8].in" = "header"
"paths./search/issues.get.parameters[8].name" = "X-GitHub-Request-Id"
"paths./search/issues.get.parameters[8].type" = "integer"
"paths./search/issues.get.responses.200.description" = "OK"
"paths./search/issues.get.responses.200.schema.$ref" = "#/definitions/search-issues"
"paths./search/issues.get.responses.403.description" = "API rate limit exceeded. See http://developer.github.com/v3/#rate-limiting\nfor details.\n"
"paths./search/repositories.get.description" = "Search repositories."
"paths./search/repositories.get.parameters.length" = 9
"paths./search/repositories.get.parameters[0].default" = "desc"
"paths./search/repositories.get.parameters[0].description" = "The sort field. if sort param is provided. Can be either asc or desc."
"paths./search/repositories.get.parameters[0].enum.length" = 2
"paths./search/repositories.get.parameters[0].enum[0]" = "desc"
"paths./search/repositories.get.parameters[0].enum[1]" = "asc"
"paths./search/repositories.get.parameters[0].in" = "query"
"paths./search/repositories.get.parameters[0].name" = "order"
"paths./search/repositories.get.parameters[0].type" = "string"
"paths./search/repositories.get.parameters[1].description" = "The search terms. This can be any combination of the supported repository\nsearch parameters:\n'Search In' Qualifies which fields are searched. With this qualifier you\ncan restrict the search to just the repository name, description, readme,\nor any combination of these.\n'Size' Finds repositories that match a certain size (in kilobytes).\n'Forks' Filters repositories based on the number of forks, and/or whether\nforked repositories should be included in the results at all.\n'Created' and 'Last Updated' Filters repositories based on times of\ncreation, or when they were last updated.\n'Users or Repositories' Limits searches to a specific user or repository.\n'Languages' Searches repositories based on the language they are written in.\n'Stars' Searches repositories based on the number of stars.\n"
"paths./search/repositories.get.parameters[1].in" = "query"
"paths./search/repositories.get.parameters[1].name" = "q"
"paths./search/repositories.get.parameters[1].required" = true
"paths./search/repositories.get.parameters[1].type" = "string"
"paths./search/repositories.get.parameters[2].description" = "If not provided, results are sorted by best match."
"paths./search/repositories.get.parameters[2].enum.length" = 3
"paths./search/repositories.get.parameters[2].enum[0]" = "stars"
"paths./search/repositories.get.parameters[2].enum[1]" = "forks"
"paths./search/repositories.get.parameters[2].enum[2]" = "updated"
"paths./search/repositories.get.parameters[2].in" = "query"
"paths./search/repositories.get.parameters[2].name" = "sort"
"paths./search/repositories.get.parameters[2].type" = "string"
"paths./search/repositories.get.parameters[3].description" = "You can check the current version of media type in responses.\n"
"paths./search/repositories.get.parameters[3].in" = "header"
"paths./search/repositories.get.parameters[3].name" = "X-GitHub-Media-Type"
"paths./search/repositories.get.parameters[3].type" = "string"
"paths./search/repositories.get.parameters[4].description" = "Is used to set specified media type."
"paths./search/repositories.get.parameters[4].in" = "header"
"paths./search/repositories.get.parameters[4].name" = "Accept"
"paths./search/repositories.get.parameters[4].type" = "string"
"paths./search/repositories.get.parameters[5].in" = "header"
"paths./search/repositories.get.parameters[5].name" = "X-RateLimit-Limit"
"paths./search/repositories.get.parameters[5].type" = "integer"
"paths./search/repositories.get.parameters[6].in" = "header"
"paths./search/repositories.get.parameters[6].name" = "X-RateLimit-Remaining"
"paths./search/repositories.get.parameters[6].type" = "integer"
"paths./search/repositories.get.parameters[7].in" = "header"
"paths./search/repositories.get.parameters[7].name" = "X-RateLimit-Reset"
"paths./search/repositories.get.parameters[7].type" = "integer"
"paths./search/repositories.get.parameters[8].in" = "header"
"paths./search/repositories.get.parameters[8].name" = "X-GitHub-Request-Id"
"paths./search/repositories.get.parameters[8].type" = "integer"
"paths./search/repositories.get.responses.200.description" = "OK"
"paths./search/repositories.get.responses.200.schema.$ref" = "#/definitions/search-repositories"
"paths./search/repositories.get.responses.403.description" = "API rate limit exceeded. See http://developer.github.com/v3/#rate-limiting\nfor details.\n"
"paths./search/users.get.description" = "Search users."
"paths./search/users.get.parameters.length" = 9
"paths./search/users.get.parameters[0].default" = "desc"
"paths./search/users.get.parameters[0].description" = "The sort field. if sort param is provided. Can be either asc or desc."
"paths./search/users.get.parameters[0].enum.length" = 2
"paths./search/users.get.parameters[0].enum[0]" = "desc"
"paths./search/users.get.parameters[0].enum[1]" = "asc"
"paths./search/users.get.parameters[0].in" = "query"
"paths./search/users.get.parameters[0].name" = "order"
"paths./search/users.get.parameters[0].type" = "string"
"paths./search/users.get.parameters[1].description" = "The search terms. This can be any combination of the supported user\nsearch parameters:\n'Search In' Qualifies which fields are searched. With this qualifier you\ncan restrict the search to just the username, public email, full name,\nlocation, or any combination of these.\n'Repository count' Filters users based on the number of repositories they\nhave.\n'Location' Filter users by the location indicated in their profile.\n'Language' Search for users that have repositories that match a certain\nlanguage.\n'Created' Filter users based on when they joined.\n'Followers' Filter users based on the number of followers they have.\n"
"paths./search/users.get.parameters[1].in" = "query"
"paths./search/users.get.parameters[1].name" = "q"
"paths./search/users.get.parameters[1].required" = true
"paths./search/users.get.parameters[1].type" = "string"
"paths./search/users.get.parameters[2].description" = "If not provided, results are sorted by best match."
"paths./search/users.get.parameters[2].enum.length" = 3
"paths./search/users.get.parameters[2].enum[0]" = "followers"
"paths./search/users.get.parameters[2].enum[1]" = "repositories"
"paths./search/users.get.parameters[2].enum[2]" = "joined"
"paths./search/users.get.parameters[2].in" = "query"
"paths./search/users.get.parameters[2].name" = "sort"
"paths./search/users.get.parameters[2].type" = "string"
"paths./search/users.get.parameters[3].description" = "You can check the current version of media type in responses.\n"
"paths./search/users.get.parameters[3].in" = "header"
"paths./search/users.get.parameters[3].name" = "X-GitHub-Media-Type"
"paths./search/users.get.parameters[3].type" = "string"
"paths./search/users.get.parameters[4].description" = "Is used to set specified media type."
"paths./search/users.get.parameters[4].in" = "header"
"paths./search/users.get.parameters[4].name" = "Accept"
"paths./search/users.get.parameters[4].type" = "string"
"paths./search/users.get.parameters[5].in" = "header"
"paths./search/users.get.parameters[5].name" = "X-RateLimit-Limit"
"paths./search/users.get.parameters[5].type" = "integer"
"paths./search/users.get.parameters[6].in" = "header"
"paths./search/users.get.parameters[6].name" = "X-RateLimit-Remaining"
"paths./search/users.get.parameters[6].type" = "integer"
"paths./search/users.get.parameters[7].in" = "header"
"paths./search/users.get.parameters[7].name" = "X-RateLimit-Reset"
"paths./search/users.get.parameters[7].type" = "integer"
"paths./search/users.get.parameters[8].in" = "header"
"paths./search/users.get.parameters[8].name" = "X-GitHub-Request-Id"
"paths./search/users.get.parameters[8].type" = "integer"
"paths./search/users.get.responses.200.description" = "OK"
"paths./search/users.get.responses.200.schema.$ref" = "#/definitions/search-users"
"paths./search/users.get.responses.403.description" = "API rate limit exceeded. See http://developer.github.com/v3/#rate-limiting\nfor details.\n"
"paths./teams/{teamId}.delete.description" = "Delete team.\nIn order to delete a team, the authenticated user must be an owner of the\norg that the team is associated with.\n"
"paths./teams/{teamId}.delete.parameters.length" = 7
"paths./teams/{teamId}.delete.parameters[0].description" = "Id of team."
"paths./teams/{teamId}.delete.parameters[0].in" = "path"
"paths./teams/{teamId}.delete.parameters[0].name" = "teamId"
"paths./teams/{teamId}.delete.parameters[0].required" = true
"paths./teams/{teamId}.delete.parameters[0].type" = "integer"
"paths./teams/{teamId}.delete.parameters[1].description" = "You can check the current version of media type in responses.\n"
"paths./teams/{teamId}.delete.parameters[1].in" = "header"
"paths./teams/{teamId}.delete.parameters[1].name" = "X-GitHub-Media-Type"
"paths./teams/{teamId}.delete.parameters[1].type" = "string"
"paths./teams/{teamId}.delete.parameters[2].description" = "Is used to set specified media type."
"paths./teams/{teamId}.delete.parameters[2].in" = "header"
"paths./teams/{teamId}.delete.parameters[2].name" = "Accept"
"paths./teams/{teamId}.delete.parameters[2].type" = "string"
"paths./teams/{teamId}.delete.parameters[3].in" = "header"
"paths./teams/{teamId}.delete.parameters[3].name" = "X-RateLimit-Limit"
"paths./teams/{teamId}.delete.parameters[3].type" = "integer"
"paths./teams/{teamId}.delete.parameters[4].in" = "header"
"paths./teams/{teamId}.delete.parameters[4].name" = "X-RateLimit-Remaining"
"paths./teams/{teamId}.delete.parameters[4].type" = "integer"
"paths./teams/{teamId}.delete.parameters[5].in" = "header"
"paths./teams/{teamId}.delete.parameters[5].name" = "X-RateLimit-Reset"
"paths./teams/{teamId}.delete.parameters[5].type" = "integer"
"paths./teams/{teamId}.delete.parameters[6].in" = "header"
"paths./teams/{teamId}.delete.parameters[6].name" = "X-GitHub-Request-Id"
"paths./teams/{teamId}.delete.parameters[6].type" = "integer"
"paths./teams/{teamId}.delete.responses.204.description" = "No content.\n"
"paths./teams/{teamId}.delete.responses.403.description" = "API rate limit exceeded. See http://developer.github.com/v3/#rate-limiting\nfor details.\n"
"paths./teams/{teamId}.get.description" = "Get team."
"paths./teams/{teamId}.get.parameters.length" = 7
"paths./teams/{teamId}.get.parameters[0].description" = "Id of team."
"paths./teams/{teamId}.get.parameters[0].in" = "path"
"paths./teams/{teamId}.get.parameters[0].name" = "teamId"
"paths./teams/{teamId}.get.parameters[0].required" = true
"paths./teams/{teamId}.get.parameters[0].type" = "integer"
"paths./teams/{teamId}.get.parameters[1].description" = "You can check the current version of media type in responses.\n"
"paths./teams/{teamId}.get.parameters[1].in" = "header"
"paths./teams/{teamId}.get.parameters[1].name" = "X-GitHub-Media-Type"
"paths./teams/{teamId}.get.parameters[1].type" = "string"
"paths./teams/{teamId}.get.parameters[2].description" = "Is used to set specified media type."
"paths./teams/{teamId}.get.parameters[2].in" = "header"
"paths./teams/{teamId}.get.parameters[2].name" = "Accept"
"paths./teams/{teamId}.get.parameters[2].type" = "string"
"paths./teams/{teamId}.get.parameters[3].in" = "header"
"paths./teams/{teamId}.get.parameters[3].name" = "X-RateLimit-Limit"
"paths./teams/{teamId}.get.parameters[3].type" = "integer"
"paths./teams/{teamId}.get.parameters[4].in" = "header"
"paths./teams/{teamId}.get.parameters[4].name" = "X-RateLimit-Remaining"
"paths./teams/{teamId}.get.parameters[4].type" = "integer"
"paths./teams/{teamId}.get.parameters[5].in" = "header"
"paths./teams/{teamId}.get.parameters[5].name" = "X-RateLimit-Reset"
"paths./teams/{teamId}.get.parameters[5].type" = "integer"
"paths./teams/{teamId}.get.parameters[6].in" = "header"
"paths./teams/{teamId}.get.parameters[6].name" = "X-GitHub-Request-Id"
"paths./teams/{teamId}.get.parameters[6].type" = "integer"
"paths./teams/{teamId}.get.responses.200.description" = "OK"
"paths./teams/{teamId}.get.responses.200.schema.$ref" = "#/definitions/team"
"paths./teams/{teamId}.get.responses.403.description" = "API rate limit exceeded. See http://developer.github.com/v3/#rate-limiting\nfor details.\n"
"paths./teams/{teamId}.patch.description" = "Edit team.\nIn order to edit a team, the authenticated user must be an owner of the org\nthat the team is associated with.\n"
"paths./teams/{teamId}.patch.parameters.length" = 8
"paths./teams/{teamId}.patch.parameters[0].description" = "Id of team."
"paths./teams/{teamId}.patch.parameters[0].in" = "path"
"paths./teams/{teamId}.patch.parameters[0].name" = "teamId"
"paths./teams/{teamId}.patch.parameters[0].required" = true
"paths./teams/{teamId}.patch.parameters[0].type" = "integer"
"paths./teams/{teamId}.patch.parameters[1].description" = "You can check the current version of media type in responses.\n"
"paths./teams/{teamId}.patch.parameters[1].in" = "header"
"paths./teams/{teamId}.patch.parameters[1].name" = "X-GitHub-Media-Type"
"paths./teams/{teamId}.patch.parameters[1].type" = "string"
"paths./teams/{teamId}.patch.parameters[2].description" = "Is used to set specified media type."
"paths./teams/{teamId}.patch.parameters[2].in" = "header"
"paths./teams/{teamId}.patch.parameters[2].name" = "Accept"
"paths./teams/{teamId}.patch.parameters[2].type" = "string"
"paths./teams/{teamId}.patch.parameters[3].in" = "header"
"paths./teams/{teamId}.patch.parameters[3].name" = "X-RateLimit-Limit"
"paths./teams/{teamId}.patch.parameters[3].type" = "integer"
"paths./teams/{teamId}.patch.parameters[4].in" = "header"
"paths./teams/{teamId}.patch.parameters[4].name" = "X-RateLimit-Remaining"
"paths./teams/{teamId}.patch.parameters[4].type" = "integer"
"paths./teams/{teamId}.patch.parameters[5].in" = "header"
"paths./teams/{teamId}.patch.parameters[5].name" = "X-RateLimit-Reset"
"paths./teams/{teamId}.patch.parameters[5].type" = "integer"
"paths./teams/{teamId}.patch.parameters[6].in" = "header"
"paths./teams/{teamId}.patch.parameters[6].name" = "X-GitHub-Request-Id"
"paths./teams/{teamId}.patch.parameters[6].type" = "integer"
"paths./teams/{teamId}.patch.parameters[7].in" = "body"
"paths./teams/{teamId}.patch.parameters[7].name" = "body"
"paths./teams/{teamId}.patch.parameters[7].required" = true
"paths./teams/{teamId}.patch.parameters[7].schema.$ref" = "#/definitions/editTeam"
"paths./teams/{teamId}.patch.responses.200.description" = "OK"
"paths./teams/{teamId}.patch.responses.200.schema.$ref" = "#/definitions/team"
"paths./teams/{teamId}.patch.responses.403.description" = "API rate limit exceeded. See http://developer.github.com/v3/#rate-limiting\nfor details.\n"
"paths./teams/{teamId}/members.get.description" = "List team members.\nIn order to list members in a team, the authenticated user must be a member\nof the team.\n"
"paths./teams/{teamId}/members.get.parameters.length" = 7
"paths./teams/{teamId}/members.get.parameters[0].description" = "Id of team."
"paths./teams/{teamId}/members.get.parameters[0].in" = "path"
"paths./teams/{teamId}/members.get.parameters[0].name" = "teamId"
"paths./teams/{teamId}/members.get.parameters[0].required" = true
"paths./teams/{teamId}/members.get.parameters[0].type" = "integer"
"paths./teams/{teamId}/members.get.parameters[1].description" = "You can check the current version of media type in responses.\n"
"paths./teams/{teamId}/members.get.parameters[1].in" = "header"
"paths./teams/{teamId}/members.get.parameters[1].name" = "X-GitHub-Media-Type"
"paths./teams/{teamId}/members.get.parameters[1].type" = "string"
"paths./teams/{teamId}/members.get.parameters[2].description" = "Is used to set specified media type."
"paths./teams/{teamId}/members.get.parameters[2].in" = "header"
"paths./teams/{teamId}/members.get.parameters[2].name" = "Accept"
"paths./teams/{teamId}/members.get.parameters[2].type" = "string"
"paths./teams/{teamId}/members.get.parameters[3].in" = "header"
"paths./teams/{teamId}/members.get.parameters[3].name" = "X-RateLimit-Limit"
"paths./teams/{teamId}/members.get.parameters[3].type" = "integer"
"paths./teams/{teamId}/members.get.parameters[4].in" = "header"
"paths./teams/{teamId}/members.get.parameters[4].name" = "X-RateLimit-Remaining"
"paths./teams/{teamId}/members.get.parameters[4].type" = "integer"
"paths./teams/{teamId}/members.get.parameters[5].in" = "header"
"paths./teams/{teamId}/members.get.parameters[5].name" = "X-RateLimit-Reset"
"paths./teams/{teamId}/members.get.parameters[5].type" = "integer"
"paths./teams/{teamId}/members.get.parameters[6].in" = "header"
"paths./teams/{teamId}/members.get.parameters[6].name" = "X-GitHub-Request-Id"
"paths./teams/{teamId}/members.get.parameters[6].type" = "integer"
"paths./teams/{teamId}/members.get.responses.200.description" = "OK"
"paths./teams/{teamId}/members.get.responses.200.schema.$ref" = "#/definitions/users"
"paths./teams/{teamId}/members.get.responses.403.description" = "API rate limit exceeded. See http://developer.github.com/v3/#rate-limiting\nfor details.\n"
"paths./teams/{teamId}/members/{username}.delete.description" = "The \"Remove team member\" API is deprecated and is scheduled for removal in the next major version of the API. We recommend using the Remove team membership API instead. It allows you to remove both active and pending memberships.\n\nRemove team member.\nIn order to remove a user from a team, the authenticated user must have 'admin'\npermissions to the team or be an owner of the org that the team is associated\nwith.\nNOTE This does not delete the user, it just remove them from the team.\n"
"paths./teams/{teamId}/members/{username}.delete.parameters.length" = 8
"paths./teams/{teamId}/members/{username}.delete.parameters[0].description" = "Id of team."
"paths./teams/{teamId}/members/{username}.delete.parameters[0].in" = "path"
"paths./teams/{teamId}/members/{username}.delete.parameters[0].name" = "teamId"
"paths./teams/{teamId}/members/{username}.delete.parameters[0].required" = true
"paths./teams/{teamId}/members/{username}.delete.parameters[0].type" = "integer"
"paths./teams/{teamId}/members/{username}.delete.parameters[1].description" = "Name of a member."
"paths./teams/{teamId}/members/{username}.delete.parameters[1].in" = "path"
"paths./teams/{teamId}/members/{username}.delete.parameters[1].name" = "username"
"paths./teams/{teamId}/members/{username}.delete.parameters[1].required" = true
"paths./teams/{teamId}/members/{username}.delete.parameters[1].type" = "string"
"paths./teams/{teamId}/members/{username}.delete.parameters[2].description" = "You can check the current version of media type in responses.\n"
"paths./teams/{teamId}/members/{username}.delete.parameters[2].in" = "header"
"paths./teams/{teamId}/members/{username}.delete.parameters[2].name" = "X-GitHub-Media-Type"
"paths./teams/{teamId}/members/{username}.delete.parameters[2].type" = "string"
"paths./teams/{teamId}/members/{username}.delete.parameters[3].description" = "Is used to set specified media type."
"paths./teams/{teamId}/members/{username}.delete.parameters[3].in" = "header"
"paths./teams/{teamId}/members/{username}.delete.parameters[3].name" = "Accept"
"paths./teams/{teamId}/members/{username}.delete.parameters[3].type" = "string"
"paths./teams/{teamId}/members/{username}.delete.parameters[4].in" = "header"
"paths./teams/{teamId}/members/{username}.delete.parameters[4].name" = "X-RateLimit-Limit"
"paths./teams/{teamId}/members/{username}.delete.parameters[4].type" = "integer"
"paths./teams/{teamId}/members/{username}.delete.parameters[5].in" = "header"
"paths./teams/{teamId}/members/{username}.delete.parameters[5].name" = "X-RateLimit-Remaining"
"paths./teams/{teamId}/members/{username}.delete.parameters[5].type" = "integer"
"paths./teams/{teamId}/members/{username}.delete.parameters[6].in" = "header"
"paths./teams/{teamId}/members/{username}.delete.parameters[6].name" = "X-RateLimit-Reset"
"paths./teams/{teamId}/members/{username}.delete.parameters[6].type" = "integer"
"paths./teams/{teamId}/members/{username}.delete.parameters[7].in" = "header"
"paths./teams/{teamId}/members/{username}.delete.parameters[7].name" = "X-GitHub-Request-Id"
"paths./teams/{teamId}/members/{username}.delete.parameters[7].type" = "integer"
"paths./teams/{teamId}/members/{username}.delete.responses.204.description" = "Team member removed."
"paths./teams/{teamId}/members/{username}.delete.responses.403.description" = "API rate limit exceeded. See http://developer.github.com/v3/#rate-limiting\nfor details.\n"
"paths./teams/{teamId}/members/{username}.get.description" = "The \"Get team member\" API is deprecated and is scheduled for removal in the next major version of the API. We recommend using the Get team membership API instead. It allows you to get both active and pending memberships.\n\nGet team member.\nIn order to get if a user is a member of a team, the authenticated user mus\nbe a member of the team.\n"
"paths./teams/{teamId}/members/{username}.get.parameters.length" = 8
"paths./teams/{teamId}/members/{username}.get.parameters[0].description" = "Id of team."
"paths./teams/{teamId}/members/{username}.get.parameters[0].in" = "path"
"paths./teams/{teamId}/members/{username}.get.parameters[0].name" = "teamId"
"paths./teams/{teamId}/members/{username}.get.parameters[0].required" = true
"paths./teams/{teamId}/members/{username}.get.parameters[0].type" = "integer"
"paths./teams/{teamId}/members/{username}.get.parameters[1].description" = "Name of a member."
"paths./teams/{teamId}/members/{username}.get.parameters[1].in" = "path"
"paths./teams/{teamId}/members/{username}.get.parameters[1].name" = "username"
"paths./teams/{teamId}/members/{username}.get.parameters[1].required" = true
"paths./teams/{teamId}/members/{username}.get.parameters[1].type" = "string"
"paths./teams/{teamId}/members/{username}.get.parameters[2].description" = "You can check the current version of media type in responses.\n"
"paths./teams/{teamId}/members/{username}.get.parameters[2].in" = "header"
"paths./teams/{teamId}/members/{username}.get.parameters[2].name" = "X-GitHub-Media-Type"
"paths./teams/{teamId}/members/{username}.get.parameters[2].type" = "string"
"paths./teams/{teamId}/members/{username}.get.parameters[3].description" = "Is used to set specified media type."
"paths./teams/{teamId}/members/{username}.get.parameters[3].in" = "header"
"paths./teams/{teamId}/members/{username}.get.parameters[3].name" = "Accept"
"paths./teams/{teamId}/members/{username}.get.parameters[3].type" = "string"
"paths./teams/{teamId}/members/{username}.get.parameters[4].in" = "header"
"paths./teams/{teamId}/members/{username}.get.parameters[4].name" = "X-RateLimit-Limit"
"paths./teams/{teamId}/members/{username}.get.parameters[4].type" = "integer"
"paths./teams/{teamId}/members/{username}.get.parameters[5].in" = "header"
"paths./teams/{teamId}/members/{username}.get.parameters[5].name" = "X-RateLimit-Remaining"
"paths./teams/{teamId}/members/{username}.get.parameters[5].type" = "integer"
"paths./teams/{teamId}/members/{username}.get.parameters[6].in" = "header"
"paths./teams/{teamId}/members/{username}.get.parameters[6].name" = "X-RateLimit-Reset"
"paths./teams/{teamId}/members/{username}.get.parameters[6].type" = "integer"
"paths./teams/{teamId}/members/{username}.get.parameters[7].in" = "header"
"paths./teams/{teamId}/members/{username}.get.parameters[7].name" = "X-GitHub-Request-Id"
"paths./teams/{teamId}/members/{username}.get.parameters[7].type" = "integer"
"paths./teams/{teamId}/members/{username}.get.responses.204.description" = "User is a member."
"paths./teams/{teamId}/members/{username}.get.responses.403.description" = "API rate limit exceeded. See http://developer.github.com/v3/#rate-limiting\nfor details.\n"
"paths./teams/{teamId}/members/{username}.get.responses.404.description" = "User is not a member."
"paths./teams/{teamId}/members/{username}.put.description" = "The API (described below) is deprecated and is scheduled for removal in the next major version of the API. We recommend using the Add team membership API instead. It allows you to invite new organization members to your teams.\n\nAdd team member.\nIn order to add a user to a team, the authenticated user must have 'admin'\npermissions to the team or be an owner of the org that the team is associated\nwith.\n"
"paths./teams/{teamId}/members/{username}.put.parameters.length" = 8
"paths./teams/{teamId}/members/{username}.put.parameters[0].description" = "Id of team."
"paths./teams/{teamId}/members/{username}.put.parameters[0].in" = "path"
"paths./teams/{teamId}/members/{username}.put.parameters[0].name" = "teamId"
"paths./teams/{teamId}/members/{username}.put.parameters[0].required" = true
"paths./teams/{teamId}/members/{username}.put.parameters[0].type" = "integer"
"paths./teams/{teamId}/members/{username}.put.parameters[1].description" = "Name of a member."
"paths./teams/{teamId}/members/{username}.put.parameters[1].in" = "path"
"paths./teams/{teamId}/members/{username}.put.parameters[1].name" = "username"
"paths./teams/{teamId}/members/{username}.put.parameters[1].required" = true
"paths./teams/{teamId}/members/{username}.put.parameters[1].type" = "string"
"paths./teams/{teamId}/members/{username}.put.parameters[2].description" = "You can check the current version of media type in responses.\n"
"paths./teams/{teamId}/members/{username}.put.parameters[2].in" = "header"
"paths./teams/{teamId}/members/{username}.put.parameters[2].name" = "X-GitHub-Media-Type"
"paths./teams/{teamId}/members/{username}.put.parameters[2].type" = "string"
"paths./teams/{teamId}/members/{username}.put.parameters[3].description" = "Is used to set specified media type."
"paths./teams/{teamId}/members/{username}.put.parameters[3].in" = "header"
"paths./teams/{teamId}/members/{username}.put.parameters[3].name" = "Accept"
"paths./teams/{teamId}/members/{username}.put.parameters[3].type" = "string"
"paths./teams/{teamId}/members/{username}.put.parameters[4].in" = "header"
"paths./teams/{teamId}/members/{username}.put.parameters[4].name" = "X-RateLimit-Limit"
"paths./teams/{teamId}/members/{username}.put.parameters[4].type" = "integer"
"paths./teams/{teamId}/members/{username}.put.parameters[5].in" = "header"
"paths./teams/{teamId}/members/{username}.put.parameters[5].name" = "X-RateLimit-Remaining"
"paths./teams/{teamId}/members/{username}.put.parameters[5].type" = "integer"
"paths./teams/{teamId}/members/{username}.put.parameters[6].in" = "header"
"paths./teams/{teamId}/members/{username}.put.parameters[6].name" = "X-RateLimit-Reset"
"paths./teams/{teamId}/members/{username}.put.parameters[6].type" = "integer"
"paths./teams/{teamId}/members/{username}.put.parameters[7].in" = "header"
"paths./teams/{teamId}/members/{username}.put.parameters[7].name" = "X-GitHub-Request-Id"
"paths./teams/{teamId}/members/{username}.put.parameters[7].type" = "integer"
"paths./teams/{teamId}/members/{username}.put.responses.204.description" = "Team member added."
"paths./teams/{teamId}/members/{username}.put.responses.403.description" = "API rate limit exceeded. See http://developer.github.com/v3/#rate-limiting\nfor details.\n"
"paths./teams/{teamId}/members/{username}.put.responses.422.description" = "If you attempt to add an organization to a team, you will get this."
"paths./teams/{teamId}/members/{username}.put.responses.422.schema.$ref" = "#/definitions/organizationAsTeamMember"
"paths./teams/{teamId}/memberships/{username}.delete.description" = "Remove team membership.\nIn order to remove a membership between a user and a team, the authenticated user must have 'admin' permissions to the team or be an owner of the organization that the team is associated with. NOTE: This does not delete the user, it just removes their membership from the team.\n"
"paths./teams/{teamId}/memberships/{username}.delete.parameters.length" = 8
"paths./teams/{teamId}/memberships/{username}.delete.parameters[0].description" = "Id of team."
"paths./teams/{teamId}/memberships/{username}.delete.parameters[0].in" = "path"
"paths./teams/{teamId}/memberships/{username}.delete.parameters[0].name" = "teamId"
"paths./teams/{teamId}/memberships/{username}.delete.parameters[0].required" = true
"paths./teams/{teamId}/memberships/{username}.delete.parameters[0].type" = "integer"
"paths./teams/{teamId}/memberships/{username}.delete.parameters[1].description" = "Name of a member."
"paths./teams/{teamId}/memberships/{username}.delete.parameters[1].in" = "path"
"paths./teams/{teamId}/memberships/{username}.delete.parameters[1].name" = "username"
"paths./teams/{teamId}/memberships/{username}.delete.parameters[1].required" = true
"paths./teams/{teamId}/memberships/{username}.delete.parameters[1].type" = "string"
"paths./teams/{teamId}/memberships/{username}.delete.parameters[2].description" = "You can check the current version of media type in responses.\n"
"paths./teams/{teamId}/memberships/{username}.delete.parameters[2].in" = "header"
"paths./teams/{teamId}/memberships/{username}.delete.parameters[2].name" = "X-GitHub-Media-Type"
"paths./teams/{teamId}/memberships/{username}.delete.parameters[2].type" = "string"
"paths./teams/{teamId}/memberships/{username}.delete.parameters[3].description" = "Is used to set specified media type."
"paths./teams/{teamId}/memberships/{username}.delete.parameters[3].in" = "header"
"paths./teams/{teamId}/memberships/{username}.delete.parameters[3].name" = "Accept"
"paths./teams/{teamId}/memberships/{username}.delete.parameters[3].type" = "string"
"paths./teams/{teamId}/memberships/{username}.delete.parameters[4].in" = "header"
"paths./teams/{teamId}/memberships/{username}.delete.parameters[4].name" = "X-RateLimit-Limit"
"paths./teams/{teamId}/memberships/{username}.delete.parameters[4].type" = "integer"
"paths./teams/{teamId}/memberships/{username}.delete.parameters[5].in" = "header"
"paths./teams/{teamId}/memberships/{username}.delete.parameters[5].name" = "X-RateLimit-Remaining"
"paths./teams/{teamId}/memberships/{username}.delete.parameters[5].type" = "integer"
"paths./teams/{teamId}/memberships/{username}.delete.parameters[6].in" = "header"
"paths./teams/{teamId}/memberships/{username}.delete.parameters[6].name" = "X-RateLimit-Reset"
"paths./teams/{teamId}/memberships/{username}.delete.parameters[6].type" = "integer"
"paths./teams/{teamId}/memberships/{username}.delete.parameters[7].in" = "header"
"paths./teams/{teamId}/memberships/{username}.delete.parameters[7].name" = "X-GitHub-Request-Id"
"paths./teams/{teamId}/memberships/{username}.delete.parameters[7].type" = "integer"
"paths./teams/{teamId}/memberships/{username}.delete.responses.204.description" = "Team member removed."
"paths./teams/{teamId}/memberships/{username}.delete.responses.403.description" = "API rate limit exceeded. See http://developer.github.com/v3/#rate-limiting\nfor details.\n"
"paths./teams/{teamId}/memberships/{username}.get.description" = "Get team membership.\nIn order to get a user's membership with a team, the authenticated user must be a member of the team or an owner of the team's organization.\n"
"paths./teams/{teamId}/memberships/{username}.get.parameters.length" = 8
"paths./teams/{teamId}/memberships/{username}.get.parameters[0].description" = "Id of team."
"paths./teams/{teamId}/memberships/{username}.get.parameters[0].in" = "path"
"paths./teams/{teamId}/memberships/{username}.get.parameters[0].name" = "teamId"
"paths./teams/{teamId}/memberships/{username}.get.parameters[0].required" = true
"paths./teams/{teamId}/memberships/{username}.get.parameters[0].type" = "integer"
"paths./teams/{teamId}/memberships/{username}.get.parameters[1].description" = "Name of a member."
"paths./teams/{teamId}/memberships/{username}.get.parameters[1].in" = "path"
"paths./teams/{teamId}/memberships/{username}.get.parameters[1].name" = "username"
"paths./teams/{teamId}/memberships/{username}.get.parameters[1].required" = true
"paths./teams/{teamId}/memberships/{username}.get.parameters[1].type" = "string"
"paths./teams/{teamId}/memberships/{username}.get.parameters[2].description" = "You can check the current version of media type in responses.\n"
"paths./teams/{teamId}/memberships/{username}.get.parameters[2].in" = "header"
"paths./teams/{teamId}/memberships/{username}.get.parameters[2].name" = "X-GitHub-Media-Type"
"paths./teams/{teamId}/memberships/{username}.get.parameters[2].type" = "string"
"paths./teams/{teamId}/memberships/{username}.get.parameters[3].description" = "Is used to set specified media type."
"paths./teams/{teamId}/memberships/{username}.get.parameters[3].in" = "header"
"paths./teams/{teamId}/memberships/{username}.get.parameters[3].name" = "Accept"
"paths./teams/{teamId}/memberships/{username}.get.parameters[3].type" = "string"
"paths./teams/{teamId}/memberships/{username}.get.parameters[4].in" = "header"
"paths./teams/{teamId}/memberships/{username}.get.parameters[4].name" = "X-RateLimit-Limit"
"paths./teams/{teamId}/memberships/{username}.get.parameters[4].type" = "integer"
"paths./teams/{teamId}/memberships/{username}.get.parameters[5].in" = "header"
"paths./teams/{teamId}/memberships/{username}.get.parameters[5].name" = "X-RateLimit-Remaining"
"paths./teams/{teamId}/memberships/{username}.get.parameters[5].type" = "integer"
"paths./teams/{teamId}/memberships/{username}.get.parameters[6].in" = "header"
"paths./teams/{teamId}/memberships/{username}.get.parameters[6].name" = "X-RateLimit-Reset"
"paths./teams/{teamId}/memberships/{username}.get.parameters[6].type" = "integer"
"paths./teams/{teamId}/memberships/{username}.get.parameters[7].in" = "header"
"paths./teams/{teamId}/memberships/{username}.get.parameters[7].name" = "X-GitHub-Request-Id"
"paths./teams/{teamId}/memberships/{username}.get.parameters[7].type" = "integer"
"paths./teams/{teamId}/memberships/{username}.get.responses.200.description" = "User is a member."
"paths./teams/{teamId}/memberships/{username}.get.responses.200.schema.$ref" = "#/definitions/teamMembership"
"paths./teams/{teamId}/memberships/{username}.get.responses.403.description" = "API rate limit exceeded. See http://developer.github.com/v3/#rate-limiting\nfor details.\n"
"paths./teams/{teamId}/memberships/{username}.get.responses.404.description" = "User has no membership with team"
"paths./teams/{teamId}/memberships/{username}.put.description" = "Add team membership.\nIn order to add a membership between a user and a team, the authenticated user must have 'admin' permissions to the team or be an owner of the organization that the team is associated with.\n\nIf the user is already a part of the team's organization (meaning they're on at least one other team in the organization), this endpoint will add the user to the team.\n\nIf the user is completely unaffiliated with the team's organization (meaning they're on none of the organization's teams), this endpoint will send an invitation to the user via email. This newly-created membership will be in the 'pending' state until the user accepts the invitation, at which point the membership will transition to the 'active' state and the user will be added as a member of the team.\n"
"paths./teams/{teamId}/memberships/{username}.put.parameters.length" = 8
"paths./teams/{teamId}/memberships/{username}.put.parameters[0].description" = "Id of team."
"paths./teams/{teamId}/memberships/{username}.put.parameters[0].in" = "path"
"paths./teams/{teamId}/memberships/{username}.put.parameters[0].name" = "teamId"
"paths./teams/{teamId}/memberships/{username}.put.parameters[0].required" = true
"paths./teams/{teamId}/memberships/{username}.put.parameters[0].type" = "integer"
"paths./teams/{teamId}/memberships/{username}.put.parameters[1].description" = "Name of a member."
"paths./teams/{teamId}/memberships/{username}.put.parameters[1].in" = "path"
"paths./teams/{teamId}/memberships/{username}.put.parameters[1].name" = "username"
"paths./teams/{teamId}/memberships/{username}.put.parameters[1].required" = true
"paths./teams/{teamId}/memberships/{username}.put.parameters[1].type" = "string"
"paths./teams/{teamId}/memberships/{username}.put.parameters[2].description" = "You can check the current version of media type in responses.\n"
"paths./teams/{teamId}/memberships/{username}.put.parameters[2].in" = "header"
"paths./teams/{teamId}/memberships/{username}.put.parameters[2].name" = "X-GitHub-Media-Type"
"paths./teams/{teamId}/memberships/{username}.put.parameters[2].type" = "string"
"paths./teams/{teamId}/memberships/{username}.put.parameters[3].description" = "Is used to set specified media type."
"paths./teams/{teamId}/memberships/{username}.put.parameters[3].in" = "header"
"paths./teams/{teamId}/memberships/{username}.put.parameters[3].name" = "Accept"
"paths./teams/{teamId}/memberships/{username}.put.parameters[3].type" = "string"
"paths./teams/{teamId}/memberships/{username}.put.parameters[4].in" = "header"
"paths./teams/{teamId}/memberships/{username}.put.parameters[4].name" = "X-RateLimit-Limit"
"paths./teams/{teamId}/memberships/{username}.put.parameters[4].type" = "integer"
"paths./teams/{teamId}/memberships/{username}.put.parameters[5].in" = "header"
"paths./teams/{teamId}/memberships/{username}.put.parameters[5].name" = "X-RateLimit-Remaining"
"paths./teams/{teamId}/memberships/{username}.put.parameters[5].type" = "integer"
"paths./teams/{teamId}/memberships/{username}.put.parameters[6].in" = "header"
"paths./teams/{teamId}/memberships/{username}.put.parameters[6].name" = "X-RateLimit-Reset"
"paths./teams/{teamId}/memberships/{username}.put.parameters[6].type" = "integer"
"paths./teams/{teamId}/memberships/{username}.put.parameters[7].in" = "header"
"paths./teams/{teamId}/memberships/{username}.put.parameters[7].name" = "X-GitHub-Request-Id"
"paths./teams/{teamId}/memberships/{username}.put.parameters[7].type" = "integer"
"paths./teams/{teamId}/memberships/{username}.put.responses.200.description" = "Team member added."
"paths./teams/{teamId}/memberships/{username}.put.responses.200.schema.$ref" = "#/definitions/teamMembership"
"paths./teams/{teamId}/memberships/{username}.put.responses.403.description" = "API rate limit exceeded. See http://developer.github.com/v3/#rate-limiting\nfor details.\n"
"paths./teams/{teamId}/memberships/{username}.put.responses.422.description" = "If you attempt to add an organization to a team, you will get this."
"paths./teams/{teamId}/memberships/{username}.put.responses.422.schema.$ref" = "#/definitions/organizationAsTeamMember"
"paths./teams/{teamId}/repos.get.description" = "List team repos"
"paths./teams/{teamId}/repos.get.parameters.length" = 7
"paths./teams/{teamId}/repos.get.parameters[0].description" = "Id of team."
"paths./teams/{teamId}/repos.get.parameters[0].in" = "path"
"paths./teams/{teamId}/repos.get.parameters[0].name" = "teamId"
"paths./teams/{teamId}/repos.get.parameters[0].required" = true
"paths./teams/{teamId}/repos.get.parameters[0].type" = "integer"
"paths./teams/{teamId}/repos.get.parameters[1].description" = "You can check the current version of media type in responses.\n"
"paths./teams/{teamId}/repos.get.parameters[1].in" = "header"
"paths./teams/{teamId}/repos.get.parameters[1].name" = "X-GitHub-Media-Type"
"paths./teams/{teamId}/repos.get.parameters[1].type" = "string"
"paths./teams/{teamId}/repos.get.parameters[2].description" = "Is used to set specified media type."
"paths./teams/{teamId}/repos.get.parameters[2].in" = "header"
"paths./teams/{teamId}/repos.get.parameters[2].name" = "Accept"
"paths./teams/{teamId}/repos.get.parameters[2].type" = "string"
"paths./teams/{teamId}/repos.get.parameters[3].in" = "header"
"paths./teams/{teamId}/repos.get.parameters[3].name" = "X-RateLimit-Limit"
"paths./teams/{teamId}/repos.get.parameters[3].type" = "integer"
"paths./teams/{teamId}/repos.get.parameters[4].in" = "header"
"paths./teams/{teamId}/repos.get.parameters[4].name" = "X-RateLimit-Remaining"
"paths./teams/{teamId}/repos.get.parameters[4].type" = "integer"
"paths./teams/{teamId}/repos.get.parameters[5].in" = "header"
"paths./teams/{teamId}/repos.get.parameters[5].name" = "X-RateLimit-Reset"
"paths./teams/{teamId}/repos.get.parameters[5].type" = "integer"
"paths./teams/{teamId}/repos.get.parameters[6].in" = "header"
"paths./teams/{teamId}/repos.get.parameters[6].name" = "X-GitHub-Request-Id"
"paths./teams/{teamId}/repos.get.parameters[6].type" = "integer"
"paths./teams/{teamId}/repos.get.responses.200.description" = "OK"
"paths./teams/{teamId}/repos.get.responses.200.schema.$ref" = "#/definitions/teamRepos"
"paths./teams/{teamId}/repos.get.responses.403.description" = "API rate limit exceeded. See http://developer.github.com/v3/#rate-limiting\nfor details.\n"
"paths./teams/{teamId}/repos/{org}/{repo}.put.description" = "In order to add a repository to a team, the authenticated user must be an owner of the org that the team is associated with. Also, the repository must be owned by the organization, or a direct fork of a repository owned by the organization."
"paths./teams/{teamId}/repos/{org}/{repo}.put.parameters.length" = 9
"paths./teams/{teamId}/repos/{org}/{repo}.put.parameters[0].description" = "Id of team."
"paths./teams/{teamId}/repos/{org}/{repo}.put.parameters[0].in" = "path"
"paths./teams/{teamId}/repos/{org}/{repo}.put.parameters[0].name" = "teamId"
"paths./teams/{teamId}/repos/{org}/{repo}.put.parameters[0].required" = true
"paths./teams/{teamId}/repos/{org}/{repo}.put.parameters[0].type" = "integer"
"paths./teams/{teamId}/repos/{org}/{repo}.put.parameters[1].description" = "Name of a organization."
"paths./teams/{teamId}/repos/{org}/{repo}.put.parameters[1].in" = "path"
"paths./teams/{teamId}/repos/{org}/{repo}.put.parameters[1].name" = "org"
"paths./teams/{teamId}/repos/{org}/{repo}.put.parameters[1].required" = true
"paths./teams/{teamId}/repos/{org}/{repo}.put.parameters[1].type" = "string"
"paths./teams/{teamId}/repos/{org}/{repo}.put.parameters[2].description" = "Name of a repository."
"paths./teams/{teamId}/repos/{org}/{repo}.put.parameters[2].in" = "path"
"paths./teams/{teamId}/repos/{org}/{repo}.put.parameters[2].name" = "repo"
"paths./teams/{teamId}/repos/{org}/{repo}.put.parameters[2].required" = true
"paths./teams/{teamId}/repos/{org}/{repo}.put.parameters[2].type" = "string"
"paths./teams/{teamId}/repos/{org}/{repo}.put.parameters[3].description" = "You can check the current version of media type in responses.\n"
"paths./teams/{teamId}/repos/{org}/{repo}.put.parameters[3].in" = "header"
"paths./teams/{teamId}/repos/{org}/{repo}.put.parameters[3].name" = "X-GitHub-Media-Type"
"paths./teams/{teamId}/repos/{org}/{repo}.put.parameters[3].type" = "string"
"paths./teams/{teamId}/repos/{org}/{repo}.put.parameters[4].description" = "Is used to set specified media type."
"paths./teams/{teamId}/repos/{org}/{repo}.put.parameters[4].in" = "header"
"paths./teams/{teamId}/repos/{org}/{repo}.put.parameters[4].name" = "Accept"
"paths./teams/{teamId}/repos/{org}/{repo}.put.parameters[4].type" = "string"
"paths./teams/{teamId}/repos/{org}/{repo}.put.parameters[5].in" = "header"
"paths./teams/{teamId}/repos/{org}/{repo}.put.parameters[5].name" = "X-RateLimit-Limit"
"paths./teams/{teamId}/repos/{org}/{repo}.put.parameters[5].type" = "integer"
"paths./teams/{teamId}/repos/{org}/{repo}.put.parameters[6].in" = "header"
"paths./teams/{teamId}/repos/{org}/{repo}.put.parameters[6].name" = "X-RateLimit-Remaining"
"paths./teams/{teamId}/repos/{org}/{repo}.put.parameters[6].type" = "integer"
"paths./teams/{teamId}/repos/{org}/{repo}.put.parameters[7].in" = "header"
"paths./teams/{teamId}/repos/{org}/{repo}.put.parameters[7].name" = "X-RateLimit-Reset"
"paths./teams/{teamId}/repos/{org}/{repo}.put.parameters[7].type" = "integer"
"paths./teams/{teamId}/repos/{org}/{repo}.put.parameters[8].in" = "header"
"paths./teams/{teamId}/repos/{org}/{repo}.put.parameters[8].name" = "X-GitHub-Request-Id"
"paths./teams/{teamId}/repos/{org}/{repo}.put.parameters[8].type" = "integer"
"paths./teams/{teamId}/repos/{org}/{repo}.put.responses.403.description" = "API rate limit exceeded. See http://developer.github.com/v3/#rate-limiting\nfor details.\n"
"paths./teams/{teamId}/repos/{owner}/{repo}.delete.description" = "In order to remove a repository from a team, the authenticated user must be an owner of the org that the team is associated with. NOTE: This does not delete the repository, it just removes it from the team."
"paths./teams/{teamId}/repos/{owner}/{repo}.delete.parameters.length" = 9
"paths./teams/{teamId}/repos/{owner}/{repo}.delete.parameters[0].description" = "Id of team."
"paths./teams/{teamId}/repos/{owner}/{repo}.delete.parameters[0].in" = "path"
"paths./teams/{teamId}/repos/{owner}/{repo}.delete.parameters[0].name" = "teamId"
"paths./teams/{teamId}/repos/{owner}/{repo}.delete.parameters[0].required" = true
"paths./teams/{teamId}/repos/{owner}/{repo}.delete.parameters[0].type" = "integer"
"paths./teams/{teamId}/repos/{owner}/{repo}.delete.parameters[1].description" = "Name of a repository owner."
"paths./teams/{teamId}/repos/{owner}/{repo}.delete.parameters[1].in" = "path"
"paths./teams/{teamId}/repos/{owner}/{repo}.delete.parameters[1].name" = "owner"
"paths./teams/{teamId}/repos/{owner}/{repo}.delete.parameters[1].required" = true
"paths./teams/{teamId}/repos/{owner}/{repo}.delete.parameters[1].type" = "string"
"paths./teams/{teamId}/repos/{owner}/{repo}.delete.parameters[2].description" = "Name of a repository."
"paths./teams/{teamId}/repos/{owner}/{repo}.delete.parameters[2].in" = "path"
"paths./teams/{teamId}/repos/{owner}/{repo}.delete.parameters[2].name" = "repo"
"paths./teams/{teamId}/repos/{owner}/{repo}.delete.parameters[2].required" = true
"paths./teams/{teamId}/repos/{owner}/{repo}.delete.parameters[2].type" = "string"
"paths./teams/{teamId}/repos/{owner}/{repo}.delete.parameters[3].description" = "You can check the current version of media type in responses.\n"
"paths./teams/{teamId}/repos/{owner}/{repo}.delete.parameters[3].in" = "header"
"paths./teams/{teamId}/repos/{owner}/{repo}.delete.parameters[3].name" = "X-GitHub-Media-Type"
"paths./teams/{teamId}/repos/{owner}/{repo}.delete.parameters[3].type" = "string"
"paths./teams/{teamId}/repos/{owner}/{repo}.delete.parameters[4].description" = "Is used to set specified media type."
"paths./teams/{teamId}/repos/{owner}/{repo}.delete.parameters[4].in" = "header"
"paths./teams/{teamId}/repos/{owner}/{repo}.delete.parameters[4].name" = "Accept"
"paths./teams/{teamId}/repos/{owner}/{repo}.delete.parameters[4].type" = "string"
"paths./teams/{teamId}/repos/{owner}/{repo}.delete.parameters[5].in" = "header"
"paths./teams/{teamId}/repos/{owner}/{repo}.delete.parameters[5].name" = "X-RateLimit-Limit"
"paths./teams/{teamId}/repos/{owner}/{repo}.delete.parameters[5].type" = "integer"
"paths./teams/{teamId}/repos/{owner}/{repo}.delete.parameters[6].in" = "header"
"paths./teams/{teamId}/repos/{owner}/{repo}.delete.parameters[6].name" = "X-RateLimit-Remaining"
"paths./teams/{teamId}/repos/{owner}/{repo}.delete.parameters[6].type" = "integer"
"paths./teams/{teamId}/repos/{owner}/{repo}.delete.parameters[7].in" = "header"
"paths./teams/{teamId}/repos/{owner}/{repo}.delete.parameters[7].name" = "X-RateLimit-Reset"
"paths./teams/{teamId}/repos/{owner}/{repo}.delete.parameters[7].type" = "integer"
"paths./teams/{teamId}/repos/{owner}/{repo}.delete.parameters[8].in" = "header"
"paths./teams/{teamId}/repos/{owner}/{repo}.delete.parameters[8].name" = "X-GitHub-Request-Id"
"paths./teams/{teamId}/repos/{owner}/{repo}.delete.parameters[8].type" = "integer"
"paths./teams/{teamId}/repos/{owner}/{repo}.delete.responses.204.description" = "No content.\n"
"paths./teams/{teamId}/repos/{owner}/{repo}.delete.responses.403.description" = "API rate limit exceeded. See http://developer.github.com/v3/#rate-limiting\nfor details.\n"
"paths./teams/{teamId}/repos/{owner}/{repo}.get.description" = "Check if a team manages a repository"
"paths./teams/{teamId}/repos/{owner}/{repo}.get.parameters.length" = 9
"paths./teams/{teamId}/repos/{owner}/{repo}.get.parameters[0].description" = "Id of team."
"paths./teams/{teamId}/repos/{owner}/{repo}.get.parameters[0].in" = "path"
"paths./teams/{teamId}/repos/{owner}/{repo}.get.parameters[0].name" = "teamId"
"paths./teams/{teamId}/repos/{owner}/{repo}.get.parameters[0].required" = true
"paths./teams/{teamId}/repos/{owner}/{repo}.get.parameters[0].type" = "integer"
"paths./teams/{teamId}/repos/{owner}/{repo}.get.parameters[1].description" = "Name of a repository owner."
"paths./teams/{teamId}/repos/{owner}/{repo}.get.parameters[1].in" = "path"
"paths./teams/{teamId}/repos/{owner}/{repo}.get.parameters[1].name" = "owner"
"paths./teams/{teamId}/repos/{owner}/{repo}.get.parameters[1].required" = true
"paths./teams/{teamId}/repos/{owner}/{repo}.get.parameters[1].type" = "string"
"paths./teams/{teamId}/repos/{owner}/{repo}.get.parameters[2].description" = "Name of a repository."
"paths./teams/{teamId}/repos/{owner}/{repo}.get.parameters[2].in" = "path"
"paths./teams/{teamId}/repos/{owner}/{repo}.get.parameters[2].name" = "repo"
"paths./teams/{teamId}/repos/{owner}/{repo}.get.parameters[2].required" = true
"paths./teams/{teamId}/repos/{owner}/{repo}.get.parameters[2].type" = "string"
"paths./teams/{teamId}/repos/{owner}/{repo}.get.parameters[3].description" = "You can check the current version of media type in responses.\n"
"paths./teams/{teamId}/repos/{owner}/{repo}.get.parameters[3].in" = "header"
"paths./teams/{teamId}/repos/{owner}/{repo}.get.parameters[3].name" = "X-GitHub-Media-Type"
"paths./teams/{teamId}/repos/{owner}/{repo}.get.parameters[3].type" = "string"
"paths./teams/{teamId}/repos/{owner}/{repo}.get.parameters[4].description" = "Is used to set specified media type."
"paths./teams/{teamId}/repos/{owner}/{repo}.get.parameters[4].in" = "header"
"paths./teams/{teamId}/repos/{owner}/{repo}.get.parameters[4].name" = "Accept"
"paths./teams/{teamId}/repos/{owner}/{repo}.get.parameters[4].type" = "string"
"paths./teams/{teamId}/repos/{owner}/{repo}.get.parameters[5].in" = "header"
"paths./teams/{teamId}/repos/{owner}/{repo}.get.parameters[5].name" = "X-RateLimit-Limit"
"paths./teams/{teamId}/repos/{owner}/{repo}.get.parameters[5].type" = "integer"
"paths./teams/{teamId}/repos/{owner}/{repo}.get.parameters[6].in" = "header"
"paths./teams/{teamId}/repos/{owner}/{repo}.get.parameters[6].name" = "X-RateLimit-Remaining"
"paths./teams/{teamId}/repos/{owner}/{repo}.get.parameters[6].type" = "integer"
"paths./teams/{teamId}/repos/{owner}/{repo}.get.parameters[7].in" = "header"
"paths./teams/{teamId}/repos/{owner}/{repo}.get.parameters[7].name" = "X-RateLimit-Reset"
"paths./teams/{teamId}/repos/{owner}/{repo}.get.parameters[7].type" = "integer"
"paths./teams/{teamId}/repos/{owner}/{repo}.get.parameters[8].in" = "header"
"paths./teams/{teamId}/repos/{owner}/{repo}.get.parameters[8].name" = "X-GitHub-Request-Id"
"paths./teams/{teamId}/repos/{owner}/{repo}.get.parameters[8].type" = "integer"
"paths./teams/{teamId}/repos/{owner}/{repo}.get.responses.403.description" = "API rate limit exceeded. See http://developer.github.com/v3/#rate-limiting\nfor details.\n"
"paths./user.get.description" = "Get the authenticated user."
"paths./user.get.parameters.length" = 6
"paths./user.get.parameters[0].description" = "You can check the current version of media type in responses.\n"
"paths./user.get.parameters[0].in" = "header"
"paths./user.get.parameters[0].name" = "X-GitHub-Media-Type"
"paths./user.get.parameters[0].type" = "string"
"paths./user.get.parameters[1].description" = "Is used to set specified media type."
"paths./user.get.parameters[1].in" = "header"
"paths./user.get.parameters[1].name" = "Accept"
"paths./user.get.parameters[1].type" = "string"
"paths./user.get.parameters[2].in" = "header"
"paths./user.get.parameters[2].name" = "X-RateLimit-Limit"
"paths./user.get.parameters[2].type" = "integer"
"paths./user.get.parameters[3].in" = "header"
"paths./user.get.parameters[3].name" = "X-RateLimit-Remaining"
"paths./user.get.parameters[3].type" = "integer"
"paths./user.get.parameters[4].in" = "header"
"paths./user.get.parameters[4].name" = "X-RateLimit-Reset"
"paths./user.get.parameters[4].type" = "integer"
"paths./user.get.parameters[5].in" = "header"
"paths./user.get.parameters[5].name" = "X-GitHub-Request-Id"
"paths./user.get.parameters[5].type" = "integer"
"paths./user.get.responses.200.description" = "OK"
"paths./user.get.responses.200.schema.$ref" = "#/definitions/user"
"paths./user.get.responses.403.description" = "API rate limit exceeded. See http://developer.github.com/v3/#rate-limiting\nfor details.\n"
"paths./user.patch.description" = "Update the authenticated user."
"paths./user.patch.parameters.length" = 7
"paths./user.patch.parameters[0].description" = "You can check the current version of media type in responses.\n"
"paths./user.patch.parameters[0].in" = "header"
"paths./user.patch.parameters[0].name" = "X-GitHub-Media-Type"
"paths./user.patch.parameters[0].type" = "string"
"paths./user.patch.parameters[1].description" = "Is used to set specified media type."
"paths./user.patch.parameters[1].in" = "header"
"paths./user.patch.parameters[1].name" = "Accept"
"paths./user.patch.parameters[1].type" = "string"
"paths./user.patch.parameters[2].in" = "header"
"paths./user.patch.parameters[2].name" = "X-RateLimit-Limit"
"paths./user.patch.parameters[2].type" = "integer"
"paths./user.patch.parameters[3].in" = "header"
"paths./user.patch.parameters[3].name" = "X-RateLimit-Remaining"
"paths./user.patch.parameters[3].type" = "integer"
"paths./user.patch.parameters[4].in" = "header"
"paths./user.patch.parameters[4].name" = "X-RateLimit-Reset"
"paths./user.patch.parameters[4].type" = "integer"
"paths./user.patch.parameters[5].in" = "header"
"paths./user.patch.parameters[5].name" = "X-GitHub-Request-Id"
"paths./user.patch.parameters[5].type" = "integer"
"paths./user.patch.parameters[6].in" = "body"
"paths./user.patch.parameters[6].name" = "body"
"paths./user.patch.parameters[6].required" = true
"paths./user.patch.parameters[6].schema.$ref" = "#/definitions/user-update"
"paths./user.patch.responses.200.description" = "OK"
"paths./user.patch.responses.200.schema.$ref" = "#/definitions/user"
"paths./user.patch.responses.403.description" = "API rate limit exceeded. See http://developer.github.com/v3/#rate-limiting\nfor details.\n"
"paths./user/emails.delete.description" = "Delete email address(es).\nYou can include a single email address or an array of addresses.\n"
"paths./user/emails.delete.parameters.length" = 7
"paths./user/emails.delete.parameters[0].description" = "You can check the current version of media type in responses.\n"
"paths./user/emails.delete.parameters[0].in" = "header"
"paths./user/emails.delete.parameters[0].name" = "X-GitHub-Media-Type"
"paths./user/emails.delete.parameters[0].type" = "string"
"paths./user/emails.delete.parameters[1].description" = "Is used to set specified media type."
"paths./user/emails.delete.parameters[1].in" = "header"
"paths./user/emails.delete.parameters[1].name" = "Accept"
"paths./user/emails.delete.parameters[1].type" = "string"
"paths./user/emails.delete.parameters[2].in" = "header"
"paths./user/emails.delete.parameters[2].name" = "X-RateLimit-Limit"
"paths./user/emails.delete.parameters[2].type" = "integer"
"paths./user/emails.delete.parameters[3].in" = "header"
"paths./user/emails.delete.parameters[3].name" = "X-RateLimit-Remaining"
"paths./user/emails.delete.parameters[3].type" = "integer"
"paths./user/emails.delete.parameters[4].in" = "header"
"paths./user/emails.delete.parameters[4].name" = "X-RateLimit-Reset"
"paths./user/emails.delete.parameters[4].type" = "integer"
"paths./user/emails.delete.parameters[5].in" = "header"
"paths./user/emails.delete.parameters[5].name" = "X-GitHub-Request-Id"
"paths./user/emails.delete.parameters[5].type" = "integer"
"paths./user/emails.delete.parameters[6].in" = "body"
"paths./user/emails.delete.parameters[6].name" = "body"
"paths./user/emails.delete.parameters[6].required" = true
"paths./user/emails.delete.parameters[6].schema.$ref" = "#/definitions/user-emails"
"paths./user/emails.delete.responses.204.description" = "No content.\n"
"paths./user/emails.delete.responses.403.description" = "API rate limit exceeded. See http://developer.github.com/v3/#rate-limiting\nfor details.\n"
"paths./user/emails.get.description" = "List email addresses for a user.\nIn the final version of the API, this method will return an array of hashes\nwith extended information for each email address indicating if the address\nhas been verified and if it's primary email address for GitHub.\nUntil API v3 is finalized, use the application/vnd.github.v3 media type to\nget other response format.\n"
"paths./user/emails.get.parameters.length" = 6
"paths./user/emails.get.parameters[0].description" = "You can check the current version of media type in responses.\n"
"paths./user/emails.get.parameters[0].in" = "header"
"paths./user/emails.get.parameters[0].name" = "X-GitHub-Media-Type"
"paths./user/emails.get.parameters[0].type" = "string"
"paths./user/emails.get.parameters[1].description" = "Is used to set specified media type."
"paths./user/emails.get.parameters[1].in" = "header"
"paths./user/emails.get.parameters[1].name" = "Accept"
"paths./user/emails.get.parameters[1].type" = "string"
"paths./user/emails.get.parameters[2].in" = "header"
"paths./user/emails.get.parameters[2].name" = "X-RateLimit-Limit"
"paths./user/emails.get.parameters[2].type" = "integer"
"paths./user/emails.get.parameters[3].in" = "header"
"paths./user/emails.get.parameters[3].name" = "X-RateLimit-Remaining"
"paths./user/emails.get.parameters[3].type" = "integer"
"paths./user/emails.get.parameters[4].in" = "header"
"paths./user/emails.get.parameters[4].name" = "X-RateLimit-Reset"
"paths./user/emails.get.parameters[4].type" = "integer"
"paths./user/emails.get.parameters[5].in" = "header"
"paths./user/emails.get.parameters[5].name" = "X-GitHub-Request-Id"
"paths./user/emails.get.parameters[5].type" = "integer"
"paths./user/emails.get.produces.length" = 1
"paths./user/emails.get.produces[0]" = "application/vnd.github.v3"
"paths./user/emails.get.responses.200.description" = "OK"
"paths./user/emails.get.responses.200.schema.$ref" = "#/definitions/user-emails"
"paths./user/emails.get.responses.403.description" = "API rate limit exceeded. See http://developer.github.com/v3/#rate-limiting\nfor details.\n"
"paths./user/emails.post.description" = "Add email address(es).\nYou can post a single email address or an array of addresses.\n"
"paths./user/emails.post.parameters.length" = 7
"paths./user/emails.post.parameters[0].description" = "You can check the current version of media type in responses.\n"
"paths./user/emails.post.parameters[0].in" = "header"
"paths./user/emails.post.parameters[0].name" = "X-GitHub-Media-Type"
"paths./user/emails.post.parameters[0].type" = "string"
"paths./user/emails.post.parameters[1].description" = "Is used to set specified media type."
"paths./user/emails.post.parameters[1].in" = "header"
"paths./user/emails.post.parameters[1].name" = "Accept"
"paths./user/emails.post.parameters[1].type" = "string"
"paths./user/emails.post.parameters[2].in" = "header"
"paths./user/emails.post.parameters[2].name" = "X-RateLimit-Limit"
"paths./user/emails.post.parameters[2].type" = "integer"
"paths./user/emails.post.parameters[3].in" = "header"
"paths./user/emails.post.parameters[3].name" = "X-RateLimit-Remaining"
"paths./user/emails.post.parameters[3].type" = "integer"
"paths./user/emails.post.parameters[4].in" = "header"
"paths./user/emails.post.parameters[4].name" = "X-RateLimit-Reset"
"paths./user/emails.post.parameters[4].type" = "integer"
"paths./user/emails.post.parameters[5].in" = "header"
"paths./user/emails.post.parameters[5].name" = "X-GitHub-Request-Id"
"paths./user/emails.post.parameters[5].type" = "integer"
"paths./user/emails.post.parameters[6].in" = "body"
"paths./user/emails.post.parameters[6].name" = "body"
"paths./user/emails.post.parameters[6].required" = true
"paths./user/emails.post.parameters[6].schema.$ref" = "#/definitions/emailsPost"
"paths./user/emails.post.responses.403.description" = "API rate limit exceeded. See http://developer.github.com/v3/#rate-limiting\nfor details.\n"
"paths./user/followers.get.description" = "List the authenticated user's followers"
"paths./user/followers.get.parameters.length" = 6
"paths./user/followers.get.parameters[0].description" = "You can check the current version of media type in responses.\n"
"paths./user/followers.get.parameters[0].in" = "header"
"paths./user/followers.get.parameters[0].name" = "X-GitHub-Media-Type"
"paths./user/followers.get.parameters[0].type" = "string"
"paths./user/followers.get.parameters[1].description" = "Is used to set specified media type."
"paths./user/followers.get.parameters[1].in" = "header"
"paths./user/followers.get.parameters[1].name" = "Accept"
"paths./user/followers.get.parameters[1].type" = "string"
"paths./user/followers.get.parameters[2].in" = "header"
"paths./user/followers.get.parameters[2].name" = "X-RateLimit-Limit"
"paths./user/followers.get.parameters[2].type" = "integer"
"paths./user/followers.get.parameters[3].in" = "header"
"paths./user/followers.get.parameters[3].name" = "X-RateLimit-Remaining"
"paths./user/followers.get.parameters[3].type" = "integer"
"paths./user/followers.get.parameters[4].in" = "header"
"paths./user/followers.get.parameters[4].name" = "X-RateLimit-Reset"
"paths./user/followers.get.parameters[4].type" = "integer"
"paths./user/followers.get.parameters[5].in" = "header"
"paths./user/followers.get.parameters[5].name" = "X-GitHub-Request-Id"
"paths./user/followers.get.parameters[5].type" = "integer"
"paths./user/followers.get.responses.200.description" = "OK"
"paths./user/followers.get.responses.200.schema.$ref" = "#/definitions/users"
"paths./user/followers.get.responses.403.description" = "API rate limit exceeded. See http://developer.github.com/v3/#rate-limiting\nfor details.\n"
"paths./user/following.get.description" = "List who the authenticated user is following."
"paths./user/following.get.parameters.length" = 6
"paths./user/following.get.parameters[0].description" = "You can check the current version of media type in responses.\n"
"paths./user/following.get.parameters[0].in" = "header"
"paths./user/following.get.parameters[0].name" = "X-GitHub-Media-Type"
"paths./user/following.get.parameters[0].type" = "string"
"paths./user/following.get.parameters[1].description" = "Is used to set specified media type."
"paths./user/following.get.parameters[1].in" = "header"
"paths./user/following.get.parameters[1].name" = "Accept"
"paths./user/following.get.parameters[1].type" = "string"
"paths./user/following.get.parameters[2].in" = "header"
"paths./user/following.get.parameters[2].name" = "X-RateLimit-Limit"
"paths./user/following.get.parameters[2].type" = "integer"
"paths./user/following.get.parameters[3].in" = "header"
"paths./user/following.get.parameters[3].name" = "X-RateLimit-Remaining"
"paths./user/following.get.parameters[3].type" = "integer"
"paths./user/following.get.parameters[4].in" = "header"
"paths./user/following.get.parameters[4].name" = "X-RateLimit-Reset"
"paths./user/following.get.parameters[4].type" = "integer"
"paths./user/following.get.parameters[5].in" = "header"
"paths./user/following.get.parameters[5].name" = "X-GitHub-Request-Id"
"paths./user/following.get.parameters[5].type" = "integer"
"paths./user/following.get.responses.200.description" = "OK"
"paths./user/following.get.responses.200.schema.$ref" = "#/definitions/users"
"paths./user/following.get.responses.403.description" = "API rate limit exceeded. See http://developer.github.com/v3/#rate-limiting\nfor details.\n"
"paths./user/following/{username}.delete.description" = "Unfollow a user.\nUnfollowing a user requires the user to be logged in and authenticated with\nbasic auth or OAuth with the user:follow scope.\n"
"paths./user/following/{username}.delete.parameters.length" = 7
"paths./user/following/{username}.delete.parameters[0].description" = "Name of user."
"paths./user/following/{username}.delete.parameters[0].in" = "path"
"paths./user/following/{username}.delete.parameters[0].name" = "username"
"paths./user/following/{username}.delete.parameters[0].required" = true
"paths./user/following/{username}.delete.parameters[0].type" = "string"
"paths./user/following/{username}.delete.parameters[1].description" = "You can check the current version of media type in responses.\n"
"paths./user/following/{username}.delete.parameters[1].in" = "header"
"paths./user/following/{username}.delete.parameters[1].name" = "X-GitHub-Media-Type"
"paths./user/following/{username}.delete.parameters[1].type" = "string"
"paths./user/following/{username}.delete.parameters[2].description" = "Is used to set specified media type."
"paths./user/following/{username}.delete.parameters[2].in" = "header"
"paths./user/following/{username}.delete.parameters[2].name" = "Accept"
"paths./user/following/{username}.delete.parameters[2].type" = "string"
"paths./user/following/{username}.delete.parameters[3].in" = "header"
"paths./user/following/{username}.delete.parameters[3].name" = "X-RateLimit-Limit"
"paths./user/following/{username}.delete.parameters[3].type" = "integer"
"paths./user/following/{username}.delete.parameters[4].in" = "header"
"paths./user/following/{username}.delete.parameters[4].name" = "X-RateLimit-Remaining"
"paths./user/following/{username}.delete.parameters[4].type" = "integer"
"paths./user/following/{username}.delete.parameters[5].in" = "header"
"paths./user/following/{username}.delete.parameters[5].name" = "X-RateLimit-Reset"
"paths./user/following/{username}.delete.parameters[5].type" = "integer"
"paths./user/following/{username}.delete.parameters[6].in" = "header"
"paths./user/following/{username}.delete.parameters[6].name" = "X-GitHub-Request-Id"
"paths./user/following/{username}.delete.parameters[6].type" = "integer"
"paths./user/following/{username}.delete.responses.204.description" = "User unfollowed."
"paths./user/following/{username}.delete.responses.403.description" = "API rate limit exceeded. See http://developer.github.com/v3/#rate-limiting\nfor details.\n"
"paths./user/following/{username}.get.description" = "Check if you are following a user."
"paths./user/following/{username}.get.parameters.length" = 7
"paths./user/following/{username}.get.parameters[0].description" = "Name of user."
"paths./user/following/{username}.get.parameters[0].in" = "path"
"paths./user/following/{username}.get.parameters[0].name" = "username"
"paths./user/following/{username}.get.parameters[0].required" = true
"paths./user/following/{username}.get.parameters[0].type" = "string"
"paths./user/following/{username}.get.parameters[1].description" = "You can check the current version of media type in responses.\n"
"paths./user/following/{username}.get.parameters[1].in" = "header"
"paths./user/following/{username}.get.parameters[1].name" = "X-GitHub-Media-Type"
"paths./user/following/{username}.get.parameters[1].type" = "string"
"paths./user/following/{username}.get.parameters[2].description" = "Is used to set specified media type."
"paths./user/following/{username}.get.parameters[2].in" = "header"
"paths./user/following/{username}.get.parameters[2].name" = "Accept"
"paths./user/following/{username}.get.parameters[2].type" = "string"
"paths./user/following/{username}.get.parameters[3].in" = "header"
"paths./user/following/{username}.get.parameters[3].name" = "X-RateLimit-Limit"
"paths./user/following/{username}.get.parameters[3].type" = "integer"
"paths./user/following/{username}.get.parameters[4].in" = "header"
"paths./user/following/{username}.get.parameters[4].name" = "X-RateLimit-Remaining"
"paths./user/following/{username}.get.parameters[4].type" = "integer"
"paths./user/following/{username}.get.parameters[5].in" = "header"
"paths./user/following/{username}.get.parameters[5].name" = "X-RateLimit-Reset"
"paths./user/following/{username}.get.parameters[5].type" = "integer"
"paths./user/following/{username}.get.parameters[6].in" = "header"
"paths./user/following/{username}.get.parameters[6].name" = "X-GitHub-Request-Id"
"paths./user/following/{username}.get.parameters[6].type" = "integer"
"paths./user/following/{username}.get.responses.204.description" = "Response if you are following this user."
"paths./user/following/{username}.get.responses.403.description" = "API rate limit exceeded. See http://developer.github.com/v3/#rate-limiting\nfor details.\n"
"paths./user/following/{username}.get.responses.404.description" = "Response if you are not following this user."
"paths./user/following/{username}.put.description" = "Follow a user.\nFollowing a user requires the user to be logged in and authenticated with\nbasic auth or OAuth with the user:follow scope.\n"
"paths./user/following/{username}.put.parameters.length" = 7
"paths./user/following/{username}.put.parameters[0].description" = "Name of user."
"paths./user/following/{username}.put.parameters[0].in" = "path"
"paths./user/following/{username}.put.parameters[0].name" = "username"
"paths./user/following/{username}.put.parameters[0].required" = true
"paths./user/following/{username}.put.parameters[0].type" = "string"
"paths./user/following/{username}.put.parameters[1].description" = "You can check the current version of media type in responses.\n"
"paths./user/following/{username}.put.parameters[1].in" = "header"
"paths./user/following/{username}.put.parameters[1].name" = "X-GitHub-Media-Type"
"paths./user/following/{username}.put.parameters[1].type" = "string"
"paths./user/following/{username}.put.parameters[2].description" = "Is used to set specified media type."
"paths./user/following/{username}.put.parameters[2].in" = "header"
"paths./user/following/{username}.put.parameters[2].name" = "Accept"
"paths./user/following/{username}.put.parameters[2].type" = "string"
"paths./user/following/{username}.put.parameters[3].in" = "header"
"paths./user/following/{username}.put.parameters[3].name" = "X-RateLimit-Limit"
"paths./user/following/{username}.put.parameters[3].type" = "integer"
"paths./user/following/{username}.put.parameters[4].in" = "header"
"paths./user/following/{username}.put.parameters[4].name" = "X-RateLimit-Remaining"
"paths./user/following/{username}.put.parameters[4].type" = "integer"
"paths./user/following/{username}.put.parameters[5].in" = "header"
"paths./user/following/{username}.put.parameters[5].name" = "X-RateLimit-Reset"
"paths./user/following/{username}.put.parameters[5].type" = "integer"
"paths./user/following/{username}.put.parameters[6].in" = "header"
"paths./user/following/{username}.put.parameters[6].name" = "X-GitHub-Request-Id"
"paths./user/following/{username}.put.parameters[6].type" = "integer"
"paths./user/following/{username}.put.responses.204.description" = "You are now following the user."
"paths./user/following/{username}.put.responses.403.description" = "API rate limit exceeded. See http://developer.github.com/v3/#rate-limiting\nfor details.\n"
"paths./user/issues.get.description" = "List issues.\nList all issues across owned and member repositories for the authenticated\nuser.\n"
"paths./user/issues.get.parameters.length" = 12
"paths./user/issues.get.parameters[0].default" = "all"
"paths./user/issues.get.parameters[0].description" = "Issues assigned to you / created by you / mentioning you / you're\nsubscribed to updates for / All issues the authenticated user can see\n"
"paths./user/issues.get.parameters[0].enum.length" = 5
"paths./user/issues.get.parameters[0].enum[0]" = "assigned"
"paths./user/issues.get.parameters[0].enum[1]" = "created"
"paths./user/issues.get.parameters[0].enum[2]" = "mentioned"
"paths./user/issues.get.parameters[0].enum[3]" = "subscribed"
"paths./user/issues.get.parameters[0].enum[4]" = "all"
"paths./user/issues.get.parameters[0].in" = "query"
"paths./user/issues.get.parameters[0].name" = "filter"
"paths./user/issues.get.parameters[0].required" = true
"paths./user/issues.get.parameters[0].type" = "string"
"paths./user/issues.get.parameters[10].in" = "header"
"paths./user/issues.get.parameters[10].name" = "X-RateLimit-Reset"
"paths./user/issues.get.parameters[10].type" = "integer"
"paths./user/issues.get.parameters[11].in" = "header"
"paths./user/issues.get.parameters[11].name" = "X-GitHub-Request-Id"
"paths./user/issues.get.parameters[11].type" = "integer"
"paths./user/issues.get.parameters[1].default" = "open"
"paths./user/issues.get.parameters[1].enum.length" = 2
"paths./user/issues.get.parameters[1].enum[0]" = "open"
"paths./user/issues.get.parameters[1].enum[1]" = "closed"
"paths./user/issues.get.parameters[1].in" = "query"
"paths./user/issues.get.parameters[1].name" = "state"
"paths./user/issues.get.parameters[1].required" = true
"paths./user/issues.get.parameters[1].type" = "string"
"paths./user/issues.get.parameters[2].description" = "String list of comma separated Label names. Example - bug,ui,@high."
"paths./user/issues.get.parameters[2].in" = "query"
"paths./user/issues.get.parameters[2].name" = "labels"
"paths./user/issues.get.parameters[2].required" = true
"paths./user/issues.get.parameters[2].type" = "string"
"paths./user/issues.get.parameters[3].default" = "created"
"paths./user/issues.get.parameters[3].enum.length" = 3
"paths./user/issues.get.parameters[3].enum[0]" = "created"
"paths./user/issues.get.parameters[3].enum[1]" = "updated"
"paths./user/issues.get.parameters[3].enum[2]" = "comments"
"paths./user/issues.get.parameters[3].in" = "query"
"paths./user/issues.get.parameters[3].name" = "sort"
"paths./user/issues.get.parameters[3].required" = true
"paths./user/issues.get.parameters[3].type" = "string"
"paths./user/issues.get.parameters[4].default" = "desc"
"paths./user/issues.get.parameters[4].enum.length" = 2
"paths./user/issues.get.parameters[4].enum[0]" = "asc"
"paths./user/issues.get.parameters[4].enum[1]" = "desc"
"paths./user/issues.get.parameters[4].in" = "query"
"paths./user/issues.get.parameters[4].name" = "direction"
"paths./user/issues.get.parameters[4].required" = true
"paths./user/issues.get.parameters[4].type" = "string"
"paths./user/issues.get.parameters[5].description" = "Optional string of a timestamp in ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ.\nOnly issues updated at or after this time are returned.\n"
"paths./user/issues.get.parameters[5].in" = "query"
"paths./user/issues.get.parameters[5].name" = "since"
"paths./user/issues.get.parameters[5].type" = "string"
"paths./user/issues.get.parameters[6].description" = "You can check the current version of media type in responses.\n"
"paths./user/issues.get.parameters[6].in" = "header"
"paths./user/issues.get.parameters[6].name" = "X-GitHub-Media-Type"
"paths./user/issues.get.parameters[6].type" = "string"
"paths./user/issues.get.parameters[7].description" = "Is used to set specified media type."
"paths./user/issues.get.parameters[7].in" = "header"
"paths./user/issues.get.parameters[7].name" = "Accept"
"paths./user/issues.get.parameters[7].type" = "string"
"paths./user/issues.get.parameters[8].in" = "header"
"paths./user/issues.get.parameters[8].name" = "X-RateLimit-Limit"
"paths./user/issues.get.parameters[8].type" = "integer"
"paths./user/issues.get.parameters[9].in" = "header"
"paths./user/issues.get.parameters[9].name" = "X-RateLimit-Remaining"
"paths./user/issues.get.parameters[9].type" = "integer"
"paths./user/issues.get.responses.200.description" = "OK"
"paths./user/issues.get.responses.200.schema.$ref" = "#/definitions/issues"
"paths./user/issues.get.responses.403.description" = "API rate limit exceeded. See http://developer.github.com/v3/#rate-limiting\nfor details.\n"
"paths./user/keys.get.description" = "List your public keys.\nLists the current user's keys. Management of public keys via the API requires\nthat you are authenticated through basic auth, or OAuth with the 'user', 'write:public_key' scopes.\n"
"paths./user/keys.get.parameters.length" = 6
"paths./user/keys.get.parameters[0].description" = "You can check the current version of media type in responses.\n"
"paths./user/keys.get.parameters[0].in" = "header"
"paths./user/keys.get.parameters[0].name" = "X-GitHub-Media-Type"
"paths./user/keys.get.parameters[0].type" = "string"
"paths./user/keys.get.parameters[1].description" = "Is used to set specified media type."
"paths./user/keys.get.parameters[1].in" = "header"
"paths./user/keys.get.parameters[1].name" = "Accept"
"paths./user/keys.get.parameters[1].type" = "string"
"paths./user/keys.get.parameters[2].in" = "header"
"paths./user/keys.get.parameters[2].name" = "X-RateLimit-Limit"
"paths./user/keys.get.parameters[2].type" = "integer"
"paths./user/keys.get.parameters[3].in" = "header"
"paths./user/keys.get.parameters[3].name" = "X-RateLimit-Remaining"
"paths./user/keys.get.parameters[3].type" = "integer"
"paths./user/keys.get.parameters[4].in" = "header"
"paths./user/keys.get.parameters[4].name" = "X-RateLimit-Reset"
"paths./user/keys.get.parameters[4].type" = "integer"
"paths./user/keys.get.parameters[5].in" = "header"
"paths./user/keys.get.parameters[5].name" = "X-GitHub-Request-Id"
"paths./user/keys.get.parameters[5].type" = "integer"
"paths./user/keys.get.responses.200.description" = "OK"
"paths./user/keys.get.responses.200.schema.$ref" = "#/definitions/gitignore"
"paths./user/keys.get.responses.403.description" = "API rate limit exceeded. See http://developer.github.com/v3/#rate-limiting\nfor details.\n"
"paths./user/keys.post.description" = "Create a public key."
"paths./user/keys.post.parameters.length" = 7
"paths./user/keys.post.parameters[0].description" = "You can check the current version of media type in responses.\n"
"paths./user/keys.post.parameters[0].in" = "header"
"paths./user/keys.post.parameters[0].name" = "X-GitHub-Media-Type"
"paths./user/keys.post.parameters[0].type" = "string"
"paths./user/keys.post.parameters[1].description" = "Is used to set specified media type."
"paths./user/keys.post.parameters[1].in" = "header"
"paths./user/keys.post.parameters[1].name" = "Accept"
"paths./user/keys.post.parameters[1].type" = "string"
"paths./user/keys.post.parameters[2].in" = "header"
"paths./user/keys.post.parameters[2].name" = "X-RateLimit-Limit"
"paths./user/keys.post.parameters[2].type" = "integer"
"paths./user/keys.post.parameters[3].in" = "header"
"paths./user/keys.post.parameters[3].name" = "X-RateLimit-Remaining"
"paths./user/keys.post.parameters[3].type" = "integer"
"paths./user/keys.post.parameters[4].in" = "header"
"paths./user/keys.post.parameters[4].name" = "X-RateLimit-Reset"
"paths./user/keys.post.parameters[4].type" = "integer"
"paths./user/keys.post.parameters[5].in" = "header"
"paths./user/keys.post.parameters[5].name" = "X-GitHub-Request-Id"
"paths./user/keys.post.parameters[5].type" = "integer"
"paths./user/keys.post.parameters[6].in" = "body"
"paths./user/keys.post.parameters[6].name" = "body"
"paths./user/keys.post.parameters[6].required" = true
"paths./user/keys.post.parameters[6].schema.$ref" = "#/definitions/user-keys-post"
"paths./user/keys.post.responses.201.description" = "Created"
"paths./user/keys.post.responses.201.schema.$ref" = "#/definitions/user-keys-keyId"
"paths./user/keys.post.responses.403.description" = "API rate limit exceeded. See http://developer.github.com/v3/#rate-limiting\nfor details.\n"
"paths./user/keys/{keyId}.delete.description" = "Delete a public key. Removes a public key. Requires that you are authenticated via Basic Auth or via OAuth with at least admin:public_key scope."
"paths./user/keys/{keyId}.delete.parameters.length" = 7
"paths./user/keys/{keyId}.delete.parameters[0].description" = "ID of key."
"paths./user/keys/{keyId}.delete.parameters[0].in" = "path"
"paths./user/keys/{keyId}.delete.parameters[0].name" = "keyId"
"paths./user/keys/{keyId}.delete.parameters[0].required" = true
"paths./user/keys/{keyId}.delete.parameters[0].type" = "integer"
"paths./user/keys/{keyId}.delete.parameters[1].description" = "You can check the current version of media type in responses.\n"
"paths./user/keys/{keyId}.delete.parameters[1].in" = "header"
"paths./user/keys/{keyId}.delete.parameters[1].name" = "X-GitHub-Media-Type"
"paths./user/keys/{keyId}.delete.parameters[1].type" = "string"
"paths./user/keys/{keyId}.delete.parameters[2].description" = "Is used to set specified media type."
"paths./user/keys/{keyId}.delete.parameters[2].in" = "header"
"paths./user/keys/{keyId}.delete.parameters[2].name" = "Accept"
"paths./user/keys/{keyId}.delete.parameters[2].type" = "string"
"paths./user/keys/{keyId}.delete.parameters[3].in" = "header"
"paths./user/keys/{keyId}.delete.parameters[3].name" = "X-RateLimit-Limit"
"paths./user/keys/{keyId}.delete.parameters[3].type" = "integer"
"paths./user/keys/{keyId}.delete.parameters[4].in" = "header"
"paths./user/keys/{keyId}.delete.parameters[4].name" = "X-RateLimit-Remaining"
"paths./user/keys/{keyId}.delete.parameters[4].type" = "integer"
"paths./user/keys/{keyId}.delete.parameters[5].in" = "header"
"paths./user/keys/{keyId}.delete.parameters[5].name" = "X-RateLimit-Reset"
"paths./user/keys/{keyId}.delete.parameters[5].type" = "integer"
"paths./user/keys/{keyId}.delete.parameters[6].in" = "header"
"paths./user/keys/{keyId}.delete.parameters[6].name" = "X-GitHub-Request-Id"
"paths./user/keys/{keyId}.delete.parameters[6].type" = "integer"
"paths./user/keys/{keyId}.delete.responses.204.description" = "No content.\n"
"paths./user/keys/{keyId}.delete.responses.403.description" = "API rate limit exceeded. See http://developer.github.com/v3/#rate-limiting\nfor details.\n"
"paths./user/keys/{keyId}.get.description" = "Get a single public key."
"paths./user/keys/{keyId}.get.parameters.length" = 7
"paths./user/keys/{keyId}.get.parameters[0].description" = "ID of key."
"paths./user/keys/{keyId}.get.parameters[0].in" = "path"
"paths./user/keys/{keyId}.get.parameters[0].name" = "keyId"
"paths./user/keys/{keyId}.get.parameters[0].required" = true
"paths./user/keys/{keyId}.get.parameters[0].type" = "integer"
"paths./user/keys/{keyId}.get.parameters[1].description" = "You can check the current version of media type in responses.\n"
"paths./user/keys/{keyId}.get.parameters[1].in" = "header"
"paths./user/keys/{keyId}.get.parameters[1].name" = "X-GitHub-Media-Type"
"paths./user/keys/{keyId}.get.parameters[1].type" = "string"
"paths./user/keys/{keyId}.get.parameters[2].description" = "Is used to set specified media type."
"paths./user/keys/{keyId}.get.parameters[2].in" = "header"
"paths./user/keys/{keyId}.get.parameters[2].name" = "Accept"
"paths./user/keys/{keyId}.get.parameters[2].type" = "string"
"paths./user/keys/{keyId}.get.parameters[3].in" = "header"
"paths./user/keys/{keyId}.get.parameters[3].name" = "X-RateLimit-Limit"
"paths./user/keys/{keyId}.get.parameters[3].type" = "integer"
"paths./user/keys/{keyId}.get.parameters[4].in" = "header"
"paths./user/keys/{keyId}.get.parameters[4].name" = "X-RateLimit-Remaining"
"paths./user/keys/{keyId}.get.parameters[4].type" = "integer"
"paths./user/keys/{keyId}.get.parameters[5].in" = "header"
"paths./user/keys/{keyId}.get.parameters[5].name" = "X-RateLimit-Reset"
"paths./user/keys/{keyId}.get.parameters[5].type" = "integer"
"paths./user/keys/{keyId}.get.parameters[6].in" = "header"
"paths./user/keys/{keyId}.get.parameters[6].name" = "X-GitHub-Request-Id"
"paths./user/keys/{keyId}.get.parameters[6].type" = "integer"
"paths./user/keys/{keyId}.get.responses.200.description" = "OK"
"paths./user/keys/{keyId}.get.responses.200.schema.$ref" = "#/definitions/user-keys-keyId"
"paths./user/keys/{keyId}.get.responses.403.description" = "API rate limit exceeded. See http://developer.github.com/v3/#rate-limiting\nfor details.\n"
"paths./user/orgs.get.description" = "List public and private organizations for the authenticated user."
"paths./user/orgs.get.parameters.length" = 6
"paths./user/orgs.get.parameters[0].description" = "You can check the current version of media type in responses.\n"
"paths./user/orgs.get.parameters[0].in" = "header"
"paths./user/orgs.get.parameters[0].name" = "X-GitHub-Media-Type"
"paths./user/orgs.get.parameters[0].type" = "string"
"paths./user/orgs.get.parameters[1].description" = "Is used to set specified media type."
"paths./user/orgs.get.parameters[1].in" = "header"
"paths./user/orgs.get.parameters[1].name" = "Accept"
"paths./user/orgs.get.parameters[1].type" = "string"
"paths./user/orgs.get.parameters[2].in" = "header"
"paths./user/orgs.get.parameters[2].name" = "X-RateLimit-Limit"
"paths./user/orgs.get.parameters[2].type" = "integer"
"paths./user/orgs.get.parameters[3].in" = "header"
"paths./user/orgs.get.parameters[3].name" = "X-RateLimit-Remaining"
"paths./user/orgs.get.parameters[3].type" = "integer"
"paths./user/orgs.get.parameters[4].in" = "header"
"paths./user/orgs.get.parameters[4].name" = "X-RateLimit-Reset"
"paths./user/orgs.get.parameters[4].type" = "integer"
"paths./user/orgs.get.parameters[5].in" = "header"
"paths./user/orgs.get.parameters[5].name" = "X-GitHub-Request-Id"
"paths./user/orgs.get.parameters[5].type" = "integer"
"paths./user/orgs.get.responses.200.description" = "OK"
"paths./user/orgs.get.responses.200.schema.$ref" = "#/definitions/gitignore"
"paths./user/orgs.get.responses.403.description" = "API rate limit exceeded. See http://developer.github.com/v3/#rate-limiting\nfor details.\n"
"paths./user/repos.get.description" = "List repositories for the authenticated user. Note that this does not include\nrepositories owned by organizations which the user can access. You can lis\nuser organizations and list organization repositories separately.\n"
"paths./user/repos.get.parameters.length" = 7
"paths./user/repos.get.parameters[0].default" = "all"
"paths./user/repos.get.parameters[0].enum.length" = 6
"paths./user/repos.get.parameters[0].enum[0]" = "all"
"paths./user/repos.get.parameters[0].enum[1]" = "public"
"paths./user/repos.get.parameters[0].enum[2]" = "private"
"paths./user/repos.get.parameters[0].enum[3]" = "forks"
"paths./user/repos.get.parameters[0].enum[4]" = "sources"
"paths./user/repos.get.parameters[0].enum[5]" = "member"
"paths./user/repos.get.parameters[0].in" = "query"
"paths./user/repos.get.parameters[0].name" = "type"
"paths./user/repos.get.parameters[0].type" = "string"
"paths./user/repos.get.parameters[1].description" = "You can check the current version of media type in responses.\n"
"paths./user/repos.get.parameters[1].in" = "header"
"paths./user/repos.get.parameters[1].name" = "X-GitHub-Media-Type"
"paths./user/repos.get.parameters[1].type" = "string"
"paths./user/repos.get.parameters[2].description" = "Is used to set specified media type."
"paths./user/repos.get.parameters[2].in" = "header"
"paths./user/repos.get.parameters[2].name" = "Accept"
"paths./user/repos.get.parameters[2].type" = "string"
"paths./user/repos.get.parameters[3].in" = "header"
"paths./user/repos.get.parameters[3].name" = "X-RateLimit-Limit"
"paths./user/repos.get.parameters[3].type" = "integer"
"paths./user/repos.get.parameters[4].in" = "header"
"paths./user/repos.get.parameters[4].name" = "X-RateLimit-Remaining"
"paths./user/repos.get.parameters[4].type" = "integer"
"paths./user/repos.get.parameters[5].in" = "header"
"paths./user/repos.get.parameters[5].name" = "X-RateLimit-Reset"
"paths./user/repos.get.parameters[5].type" = "integer"
"paths./user/repos.get.parameters[6].in" = "header"
"paths./user/repos.get.parameters[6].name" = "X-GitHub-Request-Id"
"paths./user/repos.get.parameters[6].type" = "integer"
"paths./user/repos.get.responses.200.description" = "OK"
"paths./user/repos.get.responses.200.schema.$ref" = "#/definitions/repos"
"paths./user/repos.get.responses.403.description" = "API rate limit exceeded. See http://developer.github.com/v3/#rate-limiting\nfor details.\n"
"paths./user/repos.post.description" = "Create a new repository for the authenticated user. OAuth users must supply\nrepo scope.\n"
"paths./user/repos.post.parameters.length" = 7
"paths./user/repos.post.parameters[0].description" = "You can check the current version of media type in responses.\n"
"paths./user/repos.post.parameters[0].in" = "header"
"paths./user/repos.post.parameters[0].name" = "X-GitHub-Media-Type"
"paths./user/repos.post.parameters[0].type" = "string"
"paths./user/repos.post.parameters[1].description" = "Is used to set specified media type."
"paths./user/repos.post.parameters[1].in" = "header"
"paths./user/repos.post.parameters[1].name" = "Accept"
"paths./user/repos.post.parameters[1].type" = "string"
"paths./user/repos.post.parameters[2].in" = "header"
"paths./user/repos.post.parameters[2].name" = "X-RateLimit-Limit"
"paths./user/repos.post.parameters[2].type" = "integer"
"paths./user/repos.post.parameters[3].in" = "header"
"paths./user/repos.post.parameters[3].name" = "X-RateLimit-Remaining"
"paths./user/repos.post.parameters[3].type" = "integer"
"paths./user/repos.post.parameters[4].in" = "header"
"paths./user/repos.post.parameters[4].name" = "X-RateLimit-Reset"
"paths./user/repos.post.parameters[4].type" = "integer"
"paths./user/repos.post.parameters[5].in" = "header"
"paths./user/repos.post.parameters[5].name" = "X-GitHub-Request-Id"
"paths./user/repos.post.parameters[5].type" = "integer"
"paths./user/repos.post.parameters[6].in" = "body"
"paths./user/repos.post.parameters[6].name" = "body"
"paths./user/repos.post.parameters[6].required" = true
"paths./user/repos.post.parameters[6].schema.$ref" = "#/definitions/postRepo"
"paths./user/repos.post.responses.201.description" = "Created"
"paths./user/repos.post.responses.201.schema.$ref" = "#/definitions/repos"
"paths./user/repos.post.responses.403.description" = "API rate limit exceeded. See http://developer.github.com/v3/#rate-limiting\nfor details.\n"
"paths./user/starred.get.description" = "List repositories being starred by the authenticated user."
"paths./user/starred.get.parameters.length" = 8
"paths./user/starred.get.parameters[0].description" = "Ignored without 'sort' parameter."
"paths./user/starred.get.parameters[0].in" = "query"
"paths./user/starred.get.parameters[0].name" = "direction"
"paths./user/starred.get.parameters[0].type" = "string"
"paths./user/starred.get.parameters[1].default" = "created"
"paths./user/starred.get.parameters[1].description" = ""
"paths./user/starred.get.parameters[1].enum.length" = 2
"paths./user/starred.get.parameters[1].enum[0]" = "created"
"paths./user/starred.get.parameters[1].enum[1]" = "updated"
"paths./user/starred.get.parameters[1].in" = "query"
"paths./user/starred.get.parameters[1].name" = "sort"
"paths./user/starred.get.parameters[1].type" = "string"
"paths./user/starred.get.parameters[2].description" = "You can check the current version of media type in responses.\n"
"paths./user/starred.get.parameters[2].in" = "header"
"paths./user/starred.get.parameters[2].name" = "X-GitHub-Media-Type"
"paths./user/starred.get.parameters[2].type" = "string"
"paths./user/starred.get.parameters[3].description" = "Is used to set specified media type."
"paths./user/starred.get.parameters[3].in" = "header"
"paths./user/starred.get.parameters[3].name" = "Accept"
"paths./user/starred.get.parameters[3].type" = "string"
"paths./user/starred.get.parameters[4].in" = "header"
"paths./user/starred.get.parameters[4].name" = "X-RateLimit-Limit"
"paths./user/starred.get.parameters[4].type" = "integer"
"paths./user/starred.get.parameters[5].in" = "header"
"paths./user/starred.get.parameters[5].name" = "X-RateLimit-Remaining"
"paths./user/starred.get.parameters[5].type" = "integer"
"paths./user/starred.get.parameters[6].in" = "header"
"paths./user/starred.get.parameters[6].name" = "X-RateLimit-Reset"
"paths./user/starred.get.parameters[6].type" = "integer"
"paths./user/starred.get.parameters[7].in" = "header"
"paths./user/starred.get.parameters[7].name" = "X-GitHub-Request-Id"
"paths./user/starred.get.parameters[7].type" = "integer"
"paths./user/starred.get.responses.200.description" = "OK"
"paths./user/starred.get.responses.200.schema.$ref" = "#/definitions/gitignore"
"paths./user/starred.get.responses.403.description" = "API rate limit exceeded. See http://developer.github.com/v3/#rate-limiting\nfor details.\n"
"paths./user/starred/{owner}/{repo}.delete.description" = "Unstar a repository"
"paths./user/starred/{owner}/{repo}.delete.parameters.length" = 8
"paths./user/starred/{owner}/{repo}.delete.parameters[0].description" = "Name of a repository owner."
"paths./user/starred/{owner}/{repo}.delete.parameters[0].in" = "path"
"paths./user/starred/{owner}/{repo}.delete.parameters[0].name" = "owner"
"paths./user/starred/{owner}/{repo}.delete.parameters[0].required" = true
"paths./user/starred/{owner}/{repo}.delete.parameters[0].type" = "string"
"paths./user/starred/{owner}/{repo}.delete.parameters[1].description" = "Name of a repository."
"paths./user/starred/{owner}/{repo}.delete.parameters[1].in" = "path"
"paths./user/starred/{owner}/{repo}.delete.parameters[1].name" = "repo"
"paths./user/starred/{owner}/{repo}.delete.parameters[1].required" = true
"paths./user/starred/{owner}/{repo}.delete.parameters[1].type" = "string"
"paths./user/starred/{owner}/{repo}.delete.parameters[2].description" = "You can check the current version of media type in responses.\n"
"paths./user/starred/{owner}/{repo}.delete.parameters[2].in" = "header"
"paths./user/starred/{owner}/{repo}.delete.parameters[2].name" = "X-GitHub-Media-Type"
"paths./user/starred/{owner}/{repo}.delete.parameters[2].type" = "string"
"paths./user/starred/{owner}/{repo}.delete.parameters[3].description" = "Is used to set specified media type."
"paths./user/starred/{owner}/{repo}.delete.parameters[3].in" = "header"
"paths./user/starred/{owner}/{repo}.delete.parameters[3].name" = "Accept"
"paths./user/starred/{owner}/{repo}.delete.parameters[3].type" = "string"
"paths./user/starred/{owner}/{repo}.delete.parameters[4].in" = "header"
"paths./user/starred/{owner}/{repo}.delete.parameters[4].name" = "X-RateLimit-Limit"
"paths./user/starred/{owner}/{repo}.delete.parameters[4].type" = "integer"
"paths./user/starred/{owner}/{repo}.delete.parameters[5].in" = "header"
"paths./user/starred/{owner}/{repo}.delete.parameters[5].name" = "X-RateLimit-Remaining"
"paths./user/starred/{owner}/{repo}.delete.parameters[5].type" = "integer"
"paths./user/starred/{owner}/{repo}.delete.parameters[6].in" = "header"
"paths./user/starred/{owner}/{repo}.delete.parameters[6].name" = "X-RateLimit-Reset"
"paths./user/starred/{owner}/{repo}.delete.parameters[6].type" = "integer"
"paths./user/starred/{owner}/{repo}.delete.parameters[7].in" = "header"
"paths./user/starred/{owner}/{repo}.delete.parameters[7].name" = "X-GitHub-Request-Id"
"paths./user/starred/{owner}/{repo}.delete.parameters[7].type" = "integer"
"paths./user/starred/{owner}/{repo}.delete.responses.204.description" = "Unstarred."
"paths./user/starred/{owner}/{repo}.delete.responses.403.description" = "API rate limit exceeded. See http://developer.github.com/v3/#rate-limiting\nfor details.\n"
"paths./user/starred/{owner}/{repo}.get.description" = "Check if you are starring a repository."
"paths./user/starred/{owner}/{repo}.get.parameters.length" = 8
"paths./user/starred/{owner}/{repo}.get.parameters[0].description" = "Name of a repository owner."
"paths./user/starred/{owner}/{repo}.get.parameters[0].in" = "path"
"paths./user/starred/{owner}/{repo}.get.parameters[0].name" = "owner"
"paths./user/starred/{owner}/{repo}.get.parameters[0].required" = true
"paths./user/starred/{owner}/{repo}.get.parameters[0].type" = "string"
"paths./user/starred/{owner}/{repo}.get.parameters[1].description" = "Name of a repository."
"paths./user/starred/{owner}/{repo}.get.parameters[1].in" = "path"
"paths./user/starred/{owner}/{repo}.get.parameters[1].name" = "repo"
"paths./user/starred/{owner}/{repo}.get.parameters[1].required" = true
"paths./user/starred/{owner}/{repo}.get.parameters[1].type" = "string"
"paths./user/starred/{owner}/{repo}.get.parameters[2].description" = "You can check the current version of media type in responses.\n"
"paths./user/starred/{owner}/{repo}.get.parameters[2].in" = "header"
"paths./user/starred/{owner}/{repo}.get.parameters[2].name" = "X-GitHub-Media-Type"
"paths./user/starred/{owner}/{repo}.get.parameters[2].type" = "string"
"paths./user/starred/{owner}/{repo}.get.parameters[3].description" = "Is used to set specified media type."
"paths./user/starred/{owner}/{repo}.get.parameters[3].in" = "header"
"paths./user/starred/{owner}/{repo}.get.parameters[3].name" = "Accept"
"paths./user/starred/{owner}/{repo}.get.parameters[3].type" = "string"
"paths./user/starred/{owner}/{repo}.get.parameters[4].in" = "header"
"paths./user/starred/{owner}/{repo}.get.parameters[4].name" = "X-RateLimit-Limit"
"paths./user/starred/{owner}/{repo}.get.parameters[4].type" = "integer"
"paths./user/starred/{owner}/{repo}.get.parameters[5].in" = "header"
"paths./user/starred/{owner}/{repo}.get.parameters[5].name" = "X-RateLimit-Remaining"
"paths./user/starred/{owner}/{repo}.get.parameters[5].type" = "integer"
"paths./user/starred/{owner}/{repo}.get.parameters[6].in" = "header"
"paths./user/starred/{owner}/{repo}.get.parameters[6].name" = "X-RateLimit-Reset"
"paths./user/starred/{owner}/{repo}.get.parameters[6].type" = "integer"
"paths./user/starred/{owner}/{repo}.get.parameters[7].in" = "header"
"paths./user/starred/{owner}/{repo}.get.parameters[7].name" = "X-GitHub-Request-Id"
"paths./user/starred/{owner}/{repo}.get.parameters[7].type" = "integer"
"paths./user/starred/{owner}/{repo}.get.responses.204.description" = "This repository is starred by you."
"paths./user/starred/{owner}/{repo}.get.responses.403.description" = "API rate limit exceeded. See http://developer.github.com/v3/#rate-limiting\nfor details.\n"
"paths./user/starred/{owner}/{repo}.get.responses.404.description" = "This repository is not starred by you."
"paths./user/starred/{owner}/{repo}.put.description" = "Star a repository."
"paths./user/starred/{owner}/{repo}.put.parameters.length" = 8
"paths./user/starred/{owner}/{repo}.put.parameters[0].description" = "Name of a repository owner."
"paths./user/starred/{owner}/{repo}.put.parameters[0].in" = "path"
"paths./user/starred/{owner}/{repo}.put.parameters[0].name" = "owner"
"paths./user/starred/{owner}/{repo}.put.parameters[0].required" = true
"paths./user/starred/{owner}/{repo}.put.parameters[0].type" = "string"
"paths./user/starred/{owner}/{repo}.put.parameters[1].description" = "Name of a repository."
"paths./user/starred/{owner}/{repo}.put.parameters[1].in" = "path"
"paths./user/starred/{owner}/{repo}.put.parameters[1].name" = "repo"
"paths./user/starred/{owner}/{repo}.put.parameters[1].required" = true
"paths./user/starred/{owner}/{repo}.put.parameters[1].type" = "string"
"paths./user/starred/{owner}/{repo}.put.parameters[2].description" = "You can check the current version of media type in responses.\n"
"paths./user/starred/{owner}/{repo}.put.parameters[2].in" = "header"
"paths./user/starred/{owner}/{repo}.put.parameters[2].name" = "X-GitHub-Media-Type"
"paths./user/starred/{owner}/{repo}.put.parameters[2].type" = "string"
"paths./user/starred/{owner}/{repo}.put.parameters[3].description" = "Is used to set specified media type."
"paths./user/starred/{owner}/{repo}.put.parameters[3].in" = "header"
"paths./user/starred/{owner}/{repo}.put.parameters[3].name" = "Accept"
"paths./user/starred/{owner}/{repo}.put.parameters[3].type" = "string"
"paths./user/starred/{owner}/{repo}.put.parameters[4].in" = "header"
"paths./user/starred/{owner}/{repo}.put.parameters[4].name" = "X-RateLimit-Limit"
"paths./user/starred/{owner}/{repo}.put.parameters[4].type" = "integer"
"paths./user/starred/{owner}/{repo}.put.parameters[5].in" = "header"
"paths./user/starred/{owner}/{repo}.put.parameters[5].name" = "X-RateLimit-Remaining"
"paths./user/starred/{owner}/{repo}.put.parameters[5].type" = "integer"
"paths./user/starred/{owner}/{repo}.put.parameters[6].in" = "header"
"paths./user/starred/{owner}/{repo}.put.parameters[6].name" = "X-RateLimit-Reset"
"paths./user/starred/{owner}/{repo}.put.parameters[6].type" = "integer"
"paths./user/starred/{owner}/{repo}.put.parameters[7].in" = "header"
"paths./user/starred/{owner}/{repo}.put.parameters[7].name" = "X-GitHub-Request-Id"
"paths./user/starred/{owner}/{repo}.put.parameters[7].type" = "integer"
"paths./user/starred/{owner}/{repo}.put.responses.204.description" = "Repository starred."
"paths./user/starred/{owner}/{repo}.put.responses.403.description" = "API rate limit exceeded. See http://developer.github.com/v3/#rate-limiting\nfor details.\n"
"paths./user/subscriptions.get.description" = "List repositories being watched by the authenticated user."
"paths./user/subscriptions.get.parameters.length" = 6
"paths./user/subscriptions.get.parameters[0].description" = "You can check the current version of media type in responses.\n"
"paths./user/subscriptions.get.parameters[0].in" = "header"
"paths./user/subscriptions.get.parameters[0].name" = "X-GitHub-Media-Type"
"paths./user/subscriptions.get.parameters[0].type" = "string"
"paths./user/subscriptions.get.parameters[1].description" = "Is used to set specified media type."
"paths./user/subscriptions.get.parameters[1].in" = "header"
"paths./user/subscriptions.get.parameters[1].name" = "Accept"
"paths./user/subscriptions.get.parameters[1].type" = "string"
"paths./user/subscriptions.get.parameters[2].in" = "header"
"paths./user/subscriptions.get.parameters[2].name" = "X-RateLimit-Limit"
"paths./user/subscriptions.get.parameters[2].type" = "integer"
"paths./user/subscriptions.get.parameters[3].in" = "header"
"paths./user/subscriptions.get.parameters[3].name" = "X-RateLimit-Remaining"
"paths./user/subscriptions.get.parameters[3].type" = "integer"
"paths./user/subscriptions.get.parameters[4].in" = "header"
"paths./user/subscriptions.get.parameters[4].name" = "X-RateLimit-Reset"
"paths./user/subscriptions.get.parameters[4].type" = "integer"
"paths./user/subscriptions.get.parameters[5].in" = "header"
"paths./user/subscriptions.get.parameters[5].name" = "X-GitHub-Request-Id"
"paths./user/subscriptions.get.parameters[5].type" = "integer"
"paths./user/subscriptions.get.responses.200.description" = "OK"
"paths./user/subscriptions.get.responses.200.schema.$ref" = "#/definitions/user-userId-subscribitions"
"paths./user/subscriptions.get.responses.403.description" = "API rate limit exceeded. See http://developer.github.com/v3/#rate-limiting\nfor details.\n"
"paths./user/subscriptions/{owner}/{repo}.delete.description" = "Stop watching a repository"
"paths./user/subscriptions/{owner}/{repo}.delete.parameters.length" = 8
"paths./user/subscriptions/{owner}/{repo}.delete.parameters[0].description" = "Name of the owner."
"paths./user/subscriptions/{owner}/{repo}.delete.parameters[0].in" = "path"
"paths./user/subscriptions/{owner}/{repo}.delete.parameters[0].name" = "owner"
"paths./user/subscriptions/{owner}/{repo}.delete.parameters[0].required" = true
"paths./user/subscriptions/{owner}/{repo}.delete.parameters[0].type" = "string"
"paths./user/subscriptions/{owner}/{repo}.delete.parameters[1].description" = "Name of repository."
"paths./user/subscriptions/{owner}/{repo}.delete.parameters[1].in" = "path"
"paths./user/subscriptions/{owner}/{repo}.delete.parameters[1].name" = "repo"
"paths./user/subscriptions/{owner}/{repo}.delete.parameters[1].required" = true
"paths./user/subscriptions/{owner}/{repo}.delete.parameters[1].type" = "string"
"paths./user/subscriptions/{owner}/{repo}.delete.parameters[2].description" = "You can check the current version of media type in responses.\n"
"paths./user/subscriptions/{owner}/{repo}.delete.parameters[2].in" = "header"
"paths./user/subscriptions/{owner}/{repo}.delete.parameters[2].name" = "X-GitHub-Media-Type"
"paths./user/subscriptions/{owner}/{repo}.delete.parameters[2].type" = "string"
"paths./user/subscriptions/{owner}/{repo}.delete.parameters[3].description" = "Is used to set specified media type."
"paths./user/subscriptions/{owner}/{repo}.delete.parameters[3].in" = "header"
"paths./user/subscriptions/{owner}/{repo}.delete.parameters[3].name" = "Accept"
"paths./user/subscriptions/{owner}/{repo}.delete.parameters[3].type" = "string"
"paths./user/subscriptions/{owner}/{repo}.delete.parameters[4].in" = "header"
"paths./user/subscriptions/{owner}/{repo}.delete.parameters[4].name" = "X-RateLimit-Limit"
"paths./user/subscriptions/{owner}/{repo}.delete.parameters[4].type" = "integer"
"paths./user/subscriptions/{owner}/{repo}.delete.parameters[5].in" = "header"
"paths./user/subscriptions/{owner}/{repo}.delete.parameters[5].name" = "X-RateLimit-Remaining"
"paths./user/subscriptions/{owner}/{repo}.delete.parameters[5].type" = "integer"
"paths./user/subscriptions/{owner}/{repo}.delete.parameters[6].in" = "header"
"paths./user/subscriptions/{owner}/{repo}.delete.parameters[6].name" = "X-RateLimit-Reset"
"paths./user/subscriptions/{owner}/{repo}.delete.parameters[6].type" = "integer"
"paths./user/subscriptions/{owner}/{repo}.delete.parameters[7].in" = "header"
"paths./user/subscriptions/{owner}/{repo}.delete.parameters[7].name" = "X-GitHub-Request-Id"
"paths./user/subscriptions/{owner}/{repo}.delete.parameters[7].type" = "integer"
"paths./user/subscriptions/{owner}/{repo}.delete.responses.204.description" = "Unwatched."
"paths./user/subscriptions/{owner}/{repo}.delete.responses.403.description" = "API rate limit exceeded. See http://developer.github.com/v3/#rate-limiting\nfor details.\n"
"paths./user/subscriptions/{owner}/{repo}.get.description" = "Check if you are watching a repository."
"paths./user/subscriptions/{owner}/{repo}.get.parameters.length" = 8
"paths./user/subscriptions/{owner}/{repo}.get.parameters[0].description" = "Name of the owner."
"paths./user/subscriptions/{owner}/{repo}.get.parameters[0].in" = "path"
"paths./user/subscriptions/{owner}/{repo}.get.parameters[0].name" = "owner"
"paths./user/subscriptions/{owner}/{repo}.get.parameters[0].required" = true
"paths./user/subscriptions/{owner}/{repo}.get.parameters[0].type" = "string"
"paths./user/subscriptions/{owner}/{repo}.get.parameters[1].description" = "Name of repository."
"paths./user/subscriptions/{owner}/{repo}.get.parameters[1].in" = "path"
"paths./user/subscriptions/{owner}/{repo}.get.parameters[1].name" = "repo"
"paths./user/subscriptions/{owner}/{repo}.get.parameters[1].required" = true
"paths./user/subscriptions/{owner}/{repo}.get.parameters[1].type" = "string"
"paths./user/subscriptions/{owner}/{repo}.get.parameters[2].description" = "You can check the current version of media type in responses.\n"
"paths./user/subscriptions/{owner}/{repo}.get.parameters[2].in" = "header"
"paths./user/subscriptions/{owner}/{repo}.get.parameters[2].name" = "X-GitHub-Media-Type"
"paths./user/subscriptions/{owner}/{repo}.get.parameters[2].type" = "string"
"paths./user/subscriptions/{owner}/{repo}.get.parameters[3].description" = "Is used to set specified media type."
"paths./user/subscriptions/{owner}/{repo}.get.parameters[3].in" = "header"
"paths./user/subscriptions/{owner}/{repo}.get.parameters[3].name" = "Accept"
"paths./user/subscriptions/{owner}/{repo}.get.parameters[3].type" = "string"
"paths./user/subscriptions/{owner}/{repo}.get.parameters[4].in" = "header"
"paths./user/subscriptions/{owner}/{repo}.get.parameters[4].name" = "X-RateLimit-Limit"
"paths./user/subscriptions/{owner}/{repo}.get.parameters[4].type" = "integer"
"paths./user/subscriptions/{owner}/{repo}.get.parameters[5].in" = "header"
"paths./user/subscriptions/{owner}/{repo}.get.parameters[5].name" = "X-RateLimit-Remaining"
"paths./user/subscriptions/{owner}/{repo}.get.parameters[5].type" = "integer"
"paths./user/subscriptions/{owner}/{repo}.get.parameters[6].in" = "header"
"paths./user/subscriptions/{owner}/{repo}.get.parameters[6].name" = "X-RateLimit-Reset"
"paths./user/subscriptions/{owner}/{repo}.get.parameters[6].type" = "integer"
"paths./user/subscriptions/{owner}/{repo}.get.parameters[7].in" = "header"
"paths./user/subscriptions/{owner}/{repo}.get.parameters[7].name" = "X-GitHub-Request-Id"
"paths./user/subscriptions/{owner}/{repo}.get.parameters[7].type" = "integer"
"paths./user/subscriptions/{owner}/{repo}.get.responses.204.description" = "Repository is watched by you."
"paths./user/subscriptions/{owner}/{repo}.get.responses.403.description" = "API rate limit exceeded. See http://developer.github.com/v3/#rate-limiting\nfor details.\n"
"paths./user/subscriptions/{owner}/{repo}.get.responses.404.description" = "Repository is not watched by you."
"paths./user/subscriptions/{owner}/{repo}.put.description" = "Watch a repository."
"paths./user/subscriptions/{owner}/{repo}.put.parameters.length" = 8
"paths./user/subscriptions/{owner}/{repo}.put.parameters[0].description" = "Name of the owner."
"paths./user/subscriptions/{owner}/{repo}.put.parameters[0].in" = "path"
"paths./user/subscriptions/{owner}/{repo}.put.parameters[0].name" = "owner"
"paths./user/subscriptions/{owner}/{repo}.put.parameters[0].required" = true
"paths./user/subscriptions/{owner}/{repo}.put.parameters[0].type" = "string"
"paths./user/subscriptions/{owner}/{repo}.put.parameters[1].description" = "Name of repository."
"paths./user/subscriptions/{owner}/{repo}.put.parameters[1].in" = "path"
"paths./user/subscriptions/{owner}/{repo}.put.parameters[1].name" = "repo"
"paths./user/subscriptions/{owner}/{repo}.put.parameters[1].required" = true
"paths./user/subscriptions/{owner}/{repo}.put.parameters[1].type" = "string"
"paths./user/subscriptions/{owner}/{repo}.put.parameters[2].description" = "You can check the current version of media type in responses.\n"
"paths./user/subscriptions/{owner}/{repo}.put.parameters[2].in" = "header"
"paths./user/subscriptions/{owner}/{repo}.put.parameters[2].name" = "X-GitHub-Media-Type"
"paths./user/subscriptions/{owner}/{repo}.put.parameters[2].type" = "string"
"paths./user/subscriptions/{owner}/{repo}.put.parameters[3].description" = "Is used to set specified media type."
"paths./user/subscriptions/{owner}/{repo}.put.parameters[3].in" = "header"
"paths./user/subscriptions/{owner}/{repo}.put.parameters[3].name" = "Accept"
"paths./user/subscriptions/{owner}/{repo}.put.parameters[3].type" = "string"
"paths./user/subscriptions/{owner}/{repo}.put.parameters[4].in" = "header"
"paths./user/subscriptions/{owner}/{repo}.put.parameters[4].name" = "X-RateLimit-Limit"
"paths./user/subscriptions/{owner}/{repo}.put.parameters[4].type" = "integer"
"paths./user/subscriptions/{owner}/{repo}.put.parameters[5].in" = "header"
"paths./user/subscriptions/{owner}/{repo}.put.parameters[5].name" = "X-RateLimit-Remaining"
"paths./user/subscriptions/{owner}/{repo}.put.parameters[5].type" = "integer"
"paths./user/subscriptions/{owner}/{repo}.put.parameters[6].in" = "header"
"paths./user/subscriptions/{owner}/{repo}.put.parameters[6].name" = "X-RateLimit-Reset"
"paths./user/subscriptions/{owner}/{repo}.put.parameters[6].type" = "integer"
"paths./user/subscriptions/{owner}/{repo}.put.parameters[7].in" = "header"
"paths./user/subscriptions/{owner}/{repo}.put.parameters[7].name" = "X-GitHub-Request-Id"
"paths./user/subscriptions/{owner}/{repo}.put.parameters[7].type" = "integer"
"paths./user/subscriptions/{owner}/{repo}.put.responses.204.description" = "Repository is watched."
"paths./user/subscriptions/{owner}/{repo}.put.responses.403.description" = "API rate limit exceeded. See http://developer.github.com/v3/#rate-limiting\nfor details.\n"
"paths./user/teams.get.description" = "List all of the teams across all of the organizations to which the authenticated user belongs. This method requires user or repo scope when authenticating via OAuth."
"paths./user/teams.get.parameters.length" = 6
"paths./user/teams.get.parameters[0].description" = "You can check the current version of media type in responses.\n"
"paths./user/teams.get.parameters[0].in" = "header"
"paths./user/teams.get.parameters[0].name" = "X-GitHub-Media-Type"
"paths./user/teams.get.parameters[0].type" = "string"
"paths./user/teams.get.parameters[1].description" = "Is used to set specified media type."
"paths./user/teams.get.parameters[1].in" = "header"
"paths./user/teams.get.parameters[1].name" = "Accept"
"paths./user/teams.get.parameters[1].type" = "string"
"paths./user/teams.get.parameters[2].in" = "header"
"paths./user/teams.get.parameters[2].name" = "X-RateLimit-Limit"
"paths./user/teams.get.parameters[2].type" = "integer"
"paths./user/teams.get.parameters[3].in" = "header"
"paths./user/teams.get.parameters[3].name" = "X-RateLimit-Remaining"
"paths./user/teams.get.parameters[3].type" = "integer"
"paths./user/teams.get.parameters[4].in" = "header"
"paths./user/teams.get.parameters[4].name" = "X-RateLimit-Reset"
"paths./user/teams.get.parameters[4].type" = "integer"
"paths./user/teams.get.parameters[5].in" = "header"
"paths./user/teams.get.parameters[5].name" = "X-GitHub-Request-Id"
"paths./user/teams.get.parameters[5].type" = "integer"
"paths./user/teams.get.responses.200.description" = "OK"
"paths./user/teams.get.responses.200.schema.$ref" = "#/definitions/teams-list"
"paths./user/teams.get.responses.403.description" = "API rate limit exceeded. See http://developer.github.com/v3/#rate-limiting\nfor details.\n"
"paths./users.get.description" = "Get all users.\nThis provides a dump of every user, in the order that they signed up for GitHub.\nNote: Pagination is powered exclusively by the since parameter. Use the Link\nheader to get the URL for the next page of users.\n"
"paths./users.get.parameters.length" = 7
"paths./users.get.parameters[0].description" = "The integer ID of the last User that you've seen."
"paths./users.get.parameters[0].in" = "query"
"paths./users.get.parameters[0].name" = "since"
"paths./users.get.parameters[0].type" = "integer"
"paths./users.get.parameters[1].description" = "You can check the current version of media type in responses.\n"
"paths./users.get.parameters[1].in" = "header"
"paths./users.get.parameters[1].name" = "X-GitHub-Media-Type"
"paths./users.get.parameters[1].type" = "string"
"paths./users.get.parameters[2].description" = "Is used to set specified media type."
"paths./users.get.parameters[2].in" = "header"
"paths./users.get.parameters[2].name" = "Accept"
"paths./users.get.parameters[2].type" = "string"
"paths./users.get.parameters[3].in" = "header"
"paths./users.get.parameters[3].name" = "X-RateLimit-Limit"
"paths./users.get.parameters[3].type" = "integer"
"paths./users.get.parameters[4].in" = "header"
"paths./users.get.parameters[4].name" = "X-RateLimit-Remaining"
"paths./users.get.parameters[4].type" = "integer"
"paths./users.get.parameters[5].in" = "header"
"paths./users.get.parameters[5].name" = "X-RateLimit-Reset"
"paths./users.get.parameters[5].type" = "integer"
"paths./users.get.parameters[6].in" = "header"
"paths./users.get.parameters[6].name" = "X-GitHub-Request-Id"
"paths./users.get.parameters[6].type" = "integer"
"paths./users.get.responses.200.description" = "OK"
"paths./users.get.responses.200.schema.$ref" = "#/definitions/users"
"paths./users.get.responses.403.description" = "API rate limit exceeded. See http://developer.github.com/v3/#rate-limiting\nfor details.\n"
"paths./users/{username}.get.description" = "Get a single user."
"paths./users/{username}.get.parameters.length" = 7
"paths./users/{username}.get.parameters[0].description" = "Name of user."
"paths./users/{username}.get.parameters[0].in" = "path"
"paths./users/{username}.get.parameters[0].name" = "username"
"paths./users/{username}.get.parameters[0].required" = true
"paths./users/{username}.get.parameters[0].type" = "string"
"paths./users/{username}.get.parameters[1].description" = "You can check the current version of media type in responses.\n"
"paths./users/{username}.get.parameters[1].in" = "header"
"paths./users/{username}.get.parameters[1].name" = "X-GitHub-Media-Type"
"paths./users/{username}.get.parameters[1].type" = "string"
"paths./users/{username}.get.parameters[2].description" = "Is used to set specified media type."
"paths./users/{username}.get.parameters[2].in" = "header"
"paths./users/{username}.get.parameters[2].name" = "Accept"
"paths./users/{username}.get.parameters[2].type" = "string"
"paths./users/{username}.get.parameters[3].in" = "header"
"paths./users/{username}.get.parameters[3].name" = "X-RateLimit-Limit"
"paths./users/{username}.get.parameters[3].type" = "integer"
"paths./users/{username}.get.parameters[4].in" = "header"
"paths./users/{username}.get.parameters[4].name" = "X-RateLimit-Remaining"
"paths./users/{username}.get.parameters[4].type" = "integer"
"paths./users/{username}.get.parameters[5].in" = "header"
"paths./users/{username}.get.parameters[5].name" = "X-RateLimit-Reset"
"paths./users/{username}.get.parameters[5].type" = "integer"
"paths./users/{username}.get.parameters[6].in" = "header"
"paths./users/{username}.get.parameters[6].name" = "X-GitHub-Request-Id"
"paths./users/{username}.get.parameters[6].type" = "integer"
"paths./users/{username}.get.responses.200.description" = "OK"
"paths./users/{username}.get.responses.200.schema.$ref" = "#/definitions/users"
"paths./users/{username}.get.responses.403.description" = "API rate limit exceeded. See http://developer.github.com/v3/#rate-limiting\nfor details.\n"
"paths./users/{username}/events.get.description" = "If you are authenticated as the given user, you will see your private events. Otherwise, you'll only see public events."
"paths./users/{username}/events.get.parameters.length" = 7
"paths./users/{username}/events.get.parameters[0].description" = "Name of user."
"paths./users/{username}/events.get.parameters[0].in" = "path"
"paths./users/{username}/events.get.parameters[0].name" = "username"
"paths./users/{username}/events.get.parameters[0].required" = true
"paths./users/{username}/events.get.parameters[0].type" = "string"
"paths./users/{username}/events.get.parameters[1].description" = "You can check the current version of media type in responses.\n"
"paths./users/{username}/events.get.parameters[1].in" = "header"
"paths./users/{username}/events.get.parameters[1].name" = "X-GitHub-Media-Type"
"paths./users/{username}/events.get.parameters[1].type" = "string"
"paths./users/{username}/events.get.parameters[2].description" = "Is used to set specified media type."
"paths./users/{username}/events.get.parameters[2].in" = "header"
"paths./users/{username}/events.get.parameters[2].name" = "Accept"
"paths./users/{username}/events.get.parameters[2].type" = "string"
"paths./users/{username}/events.get.parameters[3].in" = "header"
"paths./users/{username}/events.get.parameters[3].name" = "X-RateLimit-Limit"
"paths./users/{username}/events.get.parameters[3].type" = "integer"
"paths./users/{username}/events.get.parameters[4].in" = "header"
"paths./users/{username}/events.get.parameters[4].name" = "X-RateLimit-Remaining"
"paths./users/{username}/events.get.parameters[4].type" = "integer"
"paths./users/{username}/events.get.parameters[5].in" = "header"
"paths./users/{username}/events.get.parameters[5].name" = "X-RateLimit-Reset"
"paths./users/{username}/events.get.parameters[5].type" = "integer"
"paths./users/{username}/events.get.parameters[6].in" = "header"
"paths./users/{username}/events.get.parameters[6].name" = "X-GitHub-Request-Id"
"paths./users/{username}/events.get.parameters[6].type" = "integer"
"paths./users/{username}/events.get.responses.403.description" = "API rate limit exceeded. See http://developer.github.com/v3/#rate-limiting\nfor details.\n"
"paths./users/{username}/events/orgs/{org}.get.description" = "This is the user's organization dashboard. You must be authenticated as the user to view this."
"paths./users/{username}/events/orgs/{org}.get.parameters.length" = 8
"paths./users/{username}/events/orgs/{org}.get.parameters[0].description" = "Name of user."
"paths./users/{username}/events/orgs/{org}.get.parameters[0].in" = "path"
"paths./users/{username}/events/orgs/{org}.get.parameters[0].name" = "username"
"paths./users/{username}/events/orgs/{org}.get.parameters[0].required" = true
"paths./users/{username}/events/orgs/{org}.get.parameters[0].type" = "string"
"paths./users/{username}/events/orgs/{org}.get.parameters[1].in" = "path"
"paths./users/{username}/events/orgs/{org}.get.parameters[1].name" = "org"
"paths./users/{username}/events/orgs/{org}.get.parameters[1].required" = true
"paths./users/{username}/events/orgs/{org}.get.parameters[1].type" = "string"
"paths./users/{username}/events/orgs/{org}.get.parameters[2].description" = "You can check the current version of media type in responses.\n"
"paths./users/{username}/events/orgs/{org}.get.parameters[2].in" = "header"
"paths./users/{username}/events/orgs/{org}.get.parameters[2].name" = "X-GitHub-Media-Type"
"paths./users/{username}/events/orgs/{org}.get.parameters[2].type" = "string"
"paths./users/{username}/events/orgs/{org}.get.parameters[3].description" = "Is used to set specified media type."
"paths./users/{username}/events/orgs/{org}.get.parameters[3].in" = "header"
"paths./users/{username}/events/orgs/{org}.get.parameters[3].name" = "Accept"
"paths./users/{username}/events/orgs/{org}.get.parameters[3].type" = "string"
"paths./users/{username}/events/orgs/{org}.get.parameters[4].in" = "header"
"paths./users/{username}/events/orgs/{org}.get.parameters[4].name" = "X-RateLimit-Limit"
"paths./users/{username}/events/orgs/{org}.get.parameters[4].type" = "integer"
"paths./users/{username}/events/orgs/{org}.get.parameters[5].in" = "header"
"paths./users/{username}/events/orgs/{org}.get.parameters[5].name" = "X-RateLimit-Remaining"
"paths./users/{username}/events/orgs/{org}.get.parameters[5].type" = "integer"
"paths./users/{username}/events/orgs/{org}.get.parameters[6].in" = "header"
"paths./users/{username}/events/orgs/{org}.get.parameters[6].name" = "X-RateLimit-Reset"
"paths./users/{username}/events/orgs/{org}.get.parameters[6].type" = "integer"
"paths./users/{username}/events/orgs/{org}.get.parameters[7].in" = "header"
"paths./users/{username}/events/orgs/{org}.get.parameters[7].name" = "X-GitHub-Request-Id"
"paths./users/{username}/events/orgs/{org}.get.parameters[7].type" = "integer"
"paths./users/{username}/events/orgs/{org}.get.responses.403.description" = "API rate limit exceeded. See http://developer.github.com/v3/#rate-limiting\nfor details.\n"
"paths./users/{username}/followers.get.description" = "List a user's followers"
"paths./users/{username}/followers.get.parameters.length" = 7
"paths./users/{username}/followers.get.parameters[0].description" = "Name of user."
"paths./users/{username}/followers.get.parameters[0].in" = "path"
"paths./users/{username}/followers.get.parameters[0].name" = "username"
"paths./users/{username}/followers.get.parameters[0].required" = true
"paths./users/{username}/followers.get.parameters[0].type" = "string"
"paths./users/{username}/followers.get.parameters[1].description" = "You can check the current version of media type in responses.\n"
"paths./users/{username}/followers.get.parameters[1].in" = "header"
"paths./users/{username}/followers.get.parameters[1].name" = "X-GitHub-Media-Type"
"paths./users/{username}/followers.get.parameters[1].type" = "string"
"paths./users/{username}/followers.get.parameters[2].description" = "Is used to set specified media type."
"paths./users/{username}/followers.get.parameters[2].in" = "header"
"paths./users/{username}/followers.get.parameters[2].name" = "Accept"
"paths./users/{username}/followers.get.parameters[2].type" = "string"
"paths./users/{username}/followers.get.parameters[3].in" = "header"
"paths./users/{username}/followers.get.parameters[3].name" = "X-RateLimit-Limit"
"paths./users/{username}/followers.get.parameters[3].type" = "integer"
"paths./users/{username}/followers.get.parameters[4].in" = "header"
"paths./users/{username}/followers.get.parameters[4].name" = "X-RateLimit-Remaining"
"paths./users/{username}/followers.get.parameters[4].type" = "integer"
"paths./users/{username}/followers.get.parameters[5].in" = "header"
"paths./users/{username}/followers.get.parameters[5].name" = "X-RateLimit-Reset"
"paths./users/{username}/followers.get.parameters[5].type" = "integer"
"paths./users/{username}/followers.get.parameters[6].in" = "header"
"paths./users/{username}/followers.get.parameters[6].name" = "X-GitHub-Request-Id"
"paths./users/{username}/followers.get.parameters[6].type" = "integer"
"paths./users/{username}/followers.get.responses.200.description" = "OK"
"paths./users/{username}/followers.get.responses.200.schema.$ref" = "#/definitions/users"
"paths./users/{username}/followers.get.responses.403.description" = "API rate limit exceeded. See http://developer.github.com/v3/#rate-limiting\nfor details.\n"
"paths./users/{username}/following/{targetUser}.get.description" = "Check if one user follows another."
"paths./users/{username}/following/{targetUser}.get.parameters.length" = 8
"paths./users/{username}/following/{targetUser}.get.parameters[0].description" = "Name of user."
"paths./users/{username}/following/{targetUser}.get.parameters[0].in" = "path"
"paths./users/{username}/following/{targetUser}.get.parameters[0].name" = "username"
"paths./users/{username}/following/{targetUser}.get.parameters[0].required" = true
"paths./users/{username}/following/{targetUser}.get.parameters[0].type" = "string"
"paths./users/{username}/following/{targetUser}.get.parameters[1].description" = "Name of user."
"paths./users/{username}/following/{targetUser}.get.parameters[1].in" = "path"
"paths./users/{username}/following/{targetUser}.get.parameters[1].name" = "targetUser"
"paths./users/{username}/following/{targetUser}.get.parameters[1].required" = true
"paths./users/{username}/following/{targetUser}.get.parameters[1].type" = "string"
"paths./users/{username}/following/{targetUser}.get.parameters[2].description" = "You can check the current version of media type in responses.\n"
"paths./users/{username}/following/{targetUser}.get.parameters[2].in" = "header"
"paths./users/{username}/following/{targetUser}.get.parameters[2].name" = "X-GitHub-Media-Type"
"paths./users/{username}/following/{targetUser}.get.parameters[2].type" = "string"
"paths./users/{username}/following/{targetUser}.get.parameters[3].description" = "Is used to set specified media type."
"paths./users/{username}/following/{targetUser}.get.parameters[3].in" = "header"
"paths./users/{username}/following/{targetUser}.get.parameters[3].name" = "Accept"
"paths./users/{username}/following/{targetUser}.get.parameters[3].type" = "string"
"paths./users/{username}/following/{targetUser}.get.parameters[4].in" = "header"
"paths./users/{username}/following/{targetUser}.get.parameters[4].name" = "X-RateLimit-Limit"
"paths./users/{username}/following/{targetUser}.get.parameters[4].type" = "integer"
"paths./users/{username}/following/{targetUser}.get.parameters[5].in" = "header"
"paths./users/{username}/following/{targetUser}.get.parameters[5].name" = "X-RateLimit-Remaining"
"paths./users/{username}/following/{targetUser}.get.parameters[5].type" = "integer"
"paths./users/{username}/following/{targetUser}.get.parameters[6].in" = "header"
"paths./users/{username}/following/{targetUser}.get.parameters[6].name" = "X-RateLimit-Reset"
"paths./users/{username}/following/{targetUser}.get.parameters[6].type" = "integer"
"paths./users/{username}/following/{targetUser}.get.parameters[7].in" = "header"
"paths./users/{username}/following/{targetUser}.get.parameters[7].name" = "X-GitHub-Request-Id"
"paths./users/{username}/following/{targetUser}.get.parameters[7].type" = "integer"
"paths./users/{username}/following/{targetUser}.get.responses.204.description" = "Response if user follows target user."
"paths./users/{username}/following/{targetUser}.get.responses.403.description" = "API rate limit exceeded. See http://developer.github.com/v3/#rate-limiting\nfor details.\n"
"paths./users/{username}/following/{targetUser}.get.responses.404.description" = "Response if user does not follow target user."
"paths./users/{username}/gists.get.description" = "List a users gists."
"paths./users/{username}/gists.get.parameters.length" = 8
"paths./users/{username}/gists.get.parameters[0].description" = "Name of user."
"paths./users/{username}/gists.get.parameters[0].in" = "path"
"paths./users/{username}/gists.get.parameters[0].name" = "username"
"paths./users/{username}/gists.get.parameters[0].required" = true
"paths./users/{username}/gists.get.parameters[0].type" = "string"
"paths./users/{username}/gists.get.parameters[1].description" = "The time should be passed in as UTC in the ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ.\nExample: \"2012-10-09T23:39:01Z\".\n"
"paths./users/{username}/gists.get.parameters[1].in" = "query"
"paths./users/{username}/gists.get.parameters[1].name" = "since"
"paths./users/{username}/gists.get.parameters[1].type" = "string"
"paths./users/{username}/gists.get.parameters[2].description" = "You can check the current version of media type in responses.\n"
"paths./users/{username}/gists.get.parameters[2].in" = "header"
"paths./users/{username}/gists.get.parameters[2].name" = "X-GitHub-Media-Type"
"paths./users/{username}/gists.get.parameters[2].type" = "string"
"paths./users/{username}/gists.get.parameters[3].description" = "Is used to set specified media type."
"paths./users/{username}/gists.get.parameters[3].in" = "header"
"paths./users/{username}/gists.get.parameters[3].name" = "Accept"
"paths./users/{username}/gists.get.parameters[3].type" = "string"
"paths./users/{username}/gists.get.parameters[4].in" = "header"
"paths./users/{username}/gists.get.parameters[4].name" = "X-RateLimit-Limit"
"paths./users/{username}/gists.get.parameters[4].type" = "integer"
"paths./users/{username}/gists.get.parameters[5].in" = "header"
"paths./users/{username}/gists.get.parameters[5].name" = "X-RateLimit-Remaining"
"paths./users/{username}/gists.get.parameters[5].type" = "integer"
"paths./users/{username}/gists.get.parameters[6].in" = "header"
"paths./users/{username}/gists.get.parameters[6].name" = "X-RateLimit-Reset"
"paths./users/{username}/gists.get.parameters[6].type" = "integer"
"paths./users/{username}/gists.get.parameters[7].in" = "header"
"paths./users/{username}/gists.get.parameters[7].name" = "X-GitHub-Request-Id"
"paths./users/{username}/gists.get.parameters[7].type" = "integer"
"paths./users/{username}/gists.get.responses.200.description" = "OK"
"paths./users/{username}/gists.get.responses.200.schema.$ref" = "#/definitions/gists"
"paths./users/{username}/gists.get.responses.403.description" = "API rate limit exceeded. See http://developer.github.com/v3/#rate-limiting\nfor details.\n"
"paths./users/{username}/keys.get.description" = "List public keys for a user.\nLists the verified public keys for a user. This is accessible by anyone.\n"
"paths./users/{username}/keys.get.parameters.length" = 7
"paths./users/{username}/keys.get.parameters[0].description" = "Name of user."
"paths./users/{username}/keys.get.parameters[0].in" = "path"
"paths./users/{username}/keys.get.parameters[0].name" = "username"
"paths./users/{username}/keys.get.parameters[0].required" = true
"paths./users/{username}/keys.get.parameters[0].type" = "string"
"paths./users/{username}/keys.get.parameters[1].description" = "You can check the current version of media type in responses.\n"
"paths./users/{username}/keys.get.parameters[1].in" = "header"
"paths./users/{username}/keys.get.parameters[1].name" = "X-GitHub-Media-Type"
"paths./users/{username}/keys.get.parameters[1].type" = "string"
"paths./users/{username}/keys.get.parameters[2].description" = "Is used to set specified media type."
"paths./users/{username}/keys.get.parameters[2].in" = "header"
"paths./users/{username}/keys.get.parameters[2].name" = "Accept"
"paths./users/{username}/keys.get.parameters[2].type" = "string"
"paths./users/{username}/keys.get.parameters[3].in" = "header"
"paths./users/{username}/keys.get.parameters[3].name" = "X-RateLimit-Limit"
"paths./users/{username}/keys.get.parameters[3].type" = "integer"
"paths./users/{username}/keys.get.parameters[4].in" = "header"
"paths./users/{username}/keys.get.parameters[4].name" = "X-RateLimit-Remaining"
"paths./users/{username}/keys.get.parameters[4].type" = "integer"
"paths./users/{username}/keys.get.parameters[5].in" = "header"
"paths./users/{username}/keys.get.parameters[5].name" = "X-RateLimit-Reset"
"paths./users/{username}/keys.get.parameters[5].type" = "integer"
"paths./users/{username}/keys.get.parameters[6].in" = "header"
"paths./users/{username}/keys.get.parameters[6].name" = "X-GitHub-Request-Id"
"paths./users/{username}/keys.get.parameters[6].type" = "integer"
"paths./users/{username}/keys.get.responses.200.description" = "OK"
"paths./users/{username}/keys.get.responses.200.schema.$ref" = "#/definitions/gitignore"
"paths./users/{username}/keys.get.responses.403.description" = "API rate limit exceeded. See http://developer.github.com/v3/#rate-limiting\nfor details.\n"
"paths./users/{username}/orgs.get.description" = "List all public organizations for a user."
"paths./users/{username}/orgs.get.parameters.length" = 7
"paths./users/{username}/orgs.get.parameters[0].description" = "Name of user."
"paths./users/{username}/orgs.get.parameters[0].in" = "path"
"paths./users/{username}/orgs.get.parameters[0].name" = "username"
"paths./users/{username}/orgs.get.parameters[0].required" = true
"paths./users/{username}/orgs.get.parameters[0].type" = "string"
"paths./users/{username}/orgs.get.parameters[1].description" = "You can check the current version of media type in responses.\n"
"paths./users/{username}/orgs.get.parameters[1].in" = "header"
"paths./users/{username}/orgs.get.parameters[1].name" = "X-GitHub-Media-Type"
"paths./users/{username}/orgs.get.parameters[1].type" = "string"
"paths./users/{username}/orgs.get.parameters[2].description" = "Is used to set specified media type."
"paths./users/{username}/orgs.get.parameters[2].in" = "header"
"paths./users/{username}/orgs.get.parameters[2].name" = "Accept"
"paths./users/{username}/orgs.get.parameters[2].type" = "string"
"paths./users/{username}/orgs.get.parameters[3].in" = "header"
"paths./users/{username}/orgs.get.parameters[3].name" = "X-RateLimit-Limit"
"paths./users/{username}/orgs.get.parameters[3].type" = "integer"
"paths./users/{username}/orgs.get.parameters[4].in" = "header"
"paths./users/{username}/orgs.get.parameters[4].name" = "X-RateLimit-Remaining"
"paths./users/{username}/orgs.get.parameters[4].type" = "integer"
"paths./users/{username}/orgs.get.parameters[5].in" = "header"
"paths./users/{username}/orgs.get.parameters[5].name" = "X-RateLimit-Reset"
"paths./users/{username}/orgs.get.parameters[5].type" = "integer"
"paths./users/{username}/orgs.get.parameters[6].in" = "header"
"paths./users/{username}/orgs.get.parameters[6].name" = "X-GitHub-Request-Id"
"paths./users/{username}/orgs.get.parameters[6].type" = "integer"
"paths./users/{username}/orgs.get.responses.200.description" = "OK"
"paths./users/{username}/orgs.get.responses.200.schema.$ref" = "#/definitions/gitignore"
"paths./users/{username}/orgs.get.responses.403.description" = "API rate limit exceeded. See http://developer.github.com/v3/#rate-limiting\nfor details.\n"
"paths./users/{username}/received_events.get.description" = "These are events that you'll only see public events."
"paths./users/{username}/received_events.get.parameters.length" = 7
"paths./users/{username}/received_events.get.parameters[0].description" = "Name of user."
"paths./users/{username}/received_events.get.parameters[0].in" = "path"
"paths./users/{username}/received_events.get.parameters[0].name" = "username"
"paths./users/{username}/received_events.get.parameters[0].required" = true
"paths./users/{username}/received_events.get.parameters[0].type" = "string"
"paths./users/{username}/received_events.get.parameters[1].description" = "You can check the current version of media type in responses.\n"
"paths./users/{username}/received_events.get.parameters[1].in" = "header"
"paths./users/{username}/received_events.get.parameters[1].name" = "X-GitHub-Media-Type"
"paths./users/{username}/received_events.get.parameters[1].type" = "string"
"paths./users/{username}/received_events.get.parameters[2].description" = "Is used to set specified media type."
"paths./users/{username}/received_events.get.parameters[2].in" = "header"
"paths./users/{username}/received_events.get.parameters[2].name" = "Accept"
"paths./users/{username}/received_events.get.parameters[2].type" = "string"
"paths./users/{username}/received_events.get.parameters[3].in" = "header"
"paths./users/{username}/received_events.get.parameters[3].name" = "X-RateLimit-Limit"
"paths./users/{username}/received_events.get.parameters[3].type" = "integer"
"paths./users/{username}/received_events.get.parameters[4].in" = "header"
"paths./users/{username}/received_events.get.parameters[4].name" = "X-RateLimit-Remaining"
"paths./users/{username}/received_events.get.parameters[4].type" = "integer"
"paths./users/{username}/received_events.get.parameters[5].in" = "header"
"paths./users/{username}/received_events.get.parameters[5].name" = "X-RateLimit-Reset"
"paths./users/{username}/received_events.get.parameters[5].type" = "integer"
"paths./users/{username}/received_events.get.parameters[6].in" = "header"
"paths./users/{username}/received_events.get.parameters[6].name" = "X-GitHub-Request-Id"
"paths./users/{username}/received_events.get.parameters[6].type" = "integer"
"paths./users/{username}/received_events.get.responses.403.description" = "API rate limit exceeded. See http://developer.github.com/v3/#rate-limiting\nfor details.\n"
"paths./users/{username}/received_events/public.get.description" = "List public events that a user has received"
"paths./users/{username}/received_events/public.get.parameters.length" = 7
"paths./users/{username}/received_events/public.get.parameters[0].description" = "Name of user."
"paths./users/{username}/received_events/public.get.parameters[0].in" = "path"
"paths./users/{username}/received_events/public.get.parameters[0].name" = "username"
"paths./users/{username}/received_events/public.get.parameters[0].required" = true
"paths./users/{username}/received_events/public.get.parameters[0].type" = "string"
"paths./users/{username}/received_events/public.get.parameters[1].description" = "You can check the current version of media type in responses.\n"
"paths./users/{username}/received_events/public.get.parameters[1].in" = "header"
"paths./users/{username}/received_events/public.get.parameters[1].name" = "X-GitHub-Media-Type"
"paths./users/{username}/received_events/public.get.parameters[1].type" = "string"
"paths./users/{username}/received_events/public.get.parameters[2].description" = "Is used to set specified media type."
"paths./users/{username}/received_events/public.get.parameters[2].in" = "header"
"paths./users/{username}/received_events/public.get.parameters[2].name" = "Accept"
"paths./users/{username}/received_events/public.get.parameters[2].type" = "string"
"paths./users/{username}/received_events/public.get.parameters[3].in" = "header"
"paths./users/{username}/received_events/public.get.parameters[3].name" = "X-RateLimit-Limit"
"paths./users/{username}/received_events/public.get.parameters[3].type" = "integer"
"paths./users/{username}/received_events/public.get.parameters[4].in" = "header"
"paths./users/{username}/received_events/public.get.parameters[4].name" = "X-RateLimit-Remaining"
"paths./users/{username}/received_events/public.get.parameters[4].type" = "integer"
"paths./users/{username}/received_events/public.get.parameters[5].in" = "header"
"paths./users/{username}/received_events/public.get.parameters[5].name" = "X-RateLimit-Reset"
"paths./users/{username}/received_events/public.get.parameters[5].type" = "integer"
"paths./users/{username}/received_events/public.get.parameters[6].in" = "header"
"paths./users/{username}/received_events/public.get.parameters[6].name" = "X-GitHub-Request-Id"
"paths./users/{username}/received_events/public.get.parameters[6].type" = "integer"
"paths./users/{username}/received_events/public.get.responses.403.description" = "API rate limit exceeded. See http://developer.github.com/v3/#rate-limiting\nfor details.\n"
"paths./users/{username}/repos.get.description" = "List public repositories for the specified user."
"paths./users/{username}/repos.get.parameters.length" = 8
"paths./users/{username}/repos.get.parameters[0].description" = "Name of user."
"paths./users/{username}/repos.get.parameters[0].in" = "path"
"paths./users/{username}/repos.get.parameters[0].name" = "username"
"paths./users/{username}/repos.get.parameters[0].required" = true
"paths./users/{username}/repos.get.parameters[0].type" = "string"
"paths./users/{username}/repos.get.parameters[1].default" = "all"
"paths./users/{username}/repos.get.parameters[1].enum.length" = 6
"paths./users/{username}/repos.get.parameters[1].enum[0]" = "all"
"paths./users/{username}/repos.get.parameters[1].enum[1]" = "public"
"paths./users/{username}/repos.get.parameters[1].enum[2]" = "private"
"paths./users/{username}/repos.get.parameters[1].enum[3]" = "forks"
"paths./users/{username}/repos.get.parameters[1].enum[4]" = "sources"
"paths./users/{username}/repos.get.parameters[1].enum[5]" = "member"
"paths./users/{username}/repos.get.parameters[1].in" = "query"
"paths./users/{username}/repos.get.parameters[1].name" = "type"
"paths./users/{username}/repos.get.parameters[1].type" = "string"
"paths./users/{username}/repos.get.parameters[2].description" = "You can check the current version of media type in responses.\n"
"paths./users/{username}/repos.get.parameters[2].in" = "header"
"paths./users/{username}/repos.get.parameters[2].name" = "X-GitHub-Media-Type"
"paths./users/{username}/repos.get.parameters[2].type" = "string"
"paths./users/{username}/repos.get.parameters[3].description" = "Is used to set specified media type."
"paths./users/{username}/repos.get.parameters[3].in" = "header"
"paths./users/{username}/repos.get.parameters[3].name" = "Accept"
"paths./users/{username}/repos.get.parameters[3].type" = "string"
"paths./users/{username}/repos.get.parameters[4].in" = "header"
"paths./users/{username}/repos.get.parameters[4].name" = "X-RateLimit-Limit"
"paths./users/{username}/repos.get.parameters[4].type" = "integer"
"paths./users/{username}/repos.get.parameters[5].in" = "header"
"paths./users/{username}/repos.get.parameters[5].name" = "X-RateLimit-Remaining"
"paths./users/{username}/repos.get.parameters[5].type" = "integer"
"paths./users/{username}/repos.get.parameters[6].in" = "header"
"paths./users/{username}/repos.get.parameters[6].name" = "X-RateLimit-Reset"
"paths./users/{username}/repos.get.parameters[6].type" = "integer"
"paths./users/{username}/repos.get.parameters[7].in" = "header"
"paths./users/{username}/repos.get.parameters[7].name" = "X-GitHub-Request-Id"
"paths./users/{username}/repos.get.parameters[7].type" = "integer"
"paths./users/{username}/repos.get.responses.200.description" = "OK"
"paths./users/{username}/repos.get.responses.200.schema.$ref" = "#/definitions/repos"
"paths./users/{username}/repos.get.responses.403.description" = "API rate limit exceeded. See http://developer.github.com/v3/#rate-limiting\nfor details.\n"
"paths./users/{username}/starred.get.description" = "List repositories being starred by a user."
"paths./users/{username}/starred.get.parameters.length" = 7
"paths./users/{username}/starred.get.parameters[0].description" = "Name of user."
"paths./users/{username}/starred.get.parameters[0].in" = "path"
"paths./users/{username}/starred.get.parameters[0].name" = "username"
"paths./users/{username}/starred.get.parameters[0].required" = true
"paths./users/{username}/starred.get.parameters[0].type" = "string"
"paths./users/{username}/starred.get.parameters[1].description" = "You can check the current version of media type in responses.\n"
"paths./users/{username}/starred.get.parameters[1].in" = "header"
"paths./users/{username}/starred.get.parameters[1].name" = "X-GitHub-Media-Type"
"paths./users/{username}/starred.get.parameters[1].type" = "string"
"paths./users/{username}/starred.get.parameters[2].description" = "Is used to set specified media type."
"paths./users/{username}/starred.get.parameters[2].in" = "header"
"paths./users/{username}/starred.get.parameters[2].name" = "Accept"
"paths./users/{username}/starred.get.parameters[2].type" = "string"
"paths./users/{username}/starred.get.parameters[3].in" = "header"
"paths./users/{username}/starred.get.parameters[3].name" = "X-RateLimit-Limit"
"paths./users/{username}/starred.get.parameters[3].type" = "integer"
"paths./users/{username}/starred.get.parameters[4].in" = "header"
"paths./users/{username}/starred.get.parameters[4].name" = "X-RateLimit-Remaining"
"paths./users/{username}/starred.get.parameters[4].type" = "integer"
"paths./users/{username}/starred.get.parameters[5].in" = "header"
"paths./users/{username}/starred.get.parameters[5].name" = "X-RateLimit-Reset"
"paths./users/{username}/starred.get.parameters[5].type" = "integer"
"paths./users/{username}/starred.get.parameters[6].in" = "header"
"paths./users/{username}/starred.get.parameters[6].name" = "X-GitHub-Request-Id"
"paths./users/{username}/starred.get.parameters[6].type" = "integer"
"paths./users/{username}/starred.get.responses.403.description" = "API rate limit exceeded. See http://developer.github.com/v3/#rate-limiting\nfor details.\n"
"paths./users/{username}/subscriptions.get.description" = "List repositories being watched by a user."
"paths./users/{username}/subscriptions.get.parameters.length" = 7
"paths./users/{username}/subscriptions.get.parameters[0].description" = "Name of user."
"paths./users/{username}/subscriptions.get.parameters[0].in" = "path"
"paths./users/{username}/subscriptions.get.parameters[0].name" = "username"
"paths./users/{username}/subscriptions.get.parameters[0].required" = true
"paths./users/{username}/subscriptions.get.parameters[0].type" = "string"
"paths./users/{username}/subscriptions.get.parameters[1].description" = "You can check the current version of media type in responses.\n"
"paths./users/{username}/subscriptions.get.parameters[1].in" = "header"
"paths./users/{username}/subscriptions.get.parameters[1].name" = "X-GitHub-Media-Type"
"paths./users/{username}/subscriptions.get.parameters[1].type" = "string"
"paths./users/{username}/subscriptions.get.parameters[2].description" = "Is used to set specified media type."
"paths./users/{username}/subscriptions.get.parameters[2].in" = "header"
"paths./users/{username}/subscriptions.get.parameters[2].name" = "Accept"
"paths./users/{username}/subscriptions.get.parameters[2].type" = "string"
"paths./users/{username}/subscriptions.get.parameters[3].in" = "header"
"paths./users/{username}/subscriptions.get.parameters[3].name" = "X-RateLimit-Limit"
"paths./users/{username}/subscriptions.get.parameters[3].type" = "integer"
"paths./users/{username}/subscriptions.get.parameters[4].in" = "header"
"paths./users/{username}/subscriptions.get.parameters[4].name" = "X-RateLimit-Remaining"
"paths./users/{username}/subscriptions.get.parameters[4].type" = "integer"
"paths./users/{username}/subscriptions.get.parameters[5].in" = "header"
"paths./users/{username}/subscriptions.get.parameters[5].name" = "X-RateLimit-Reset"
"paths./users/{username}/subscriptions.get.parameters[5].type" = "integer"
"paths./users/{username}/subscriptions.get.parameters[6].in" = "header"
"paths./users/{username}/subscriptions.get.parameters[6].name" = "X-GitHub-Request-Id"
"paths./users/{username}/subscriptions.get.parameters[6].type" = "integer"
"paths./users/{username}/subscriptions.get.responses.403.description" = "API rate limit exceeded. See http://developer.github.com/v3/#rate-limiting\nfor details.\n"
"produces.length" = 1
"produces[0]" = "application/json"
"schemes.length" = 1
"schemes[0]" = "https"
"securityDefinitions.oauth_2_0.authorizationUrl" = "https://github.com/login/oauth/authorize"
"securityDefinitions.oauth_2_0.description" = "OAuth2 is a protocol that lets external apps request authorization to private\ndetails in a user's GitHub account without getting their password. This is\npreferred over Basic Authentication because tokens can be limited to specific\ntypes of data, and can be revoked by users at any time.\n"
"securityDefinitions.oauth_2_0.flow" = "accessCode"
"securityDefinitions.oauth_2_0.scopes.admin:org" = ""
"securityDefinitions.oauth_2_0.scopes.admin:org_hook" = ""
"securityDefinitions.oauth_2_0.scopes.admin:public_key" = ""
"securityDefinitions.oauth_2_0.scopes.admin:repo_hook" = ""
"securityDefinitions.oauth_2_0.scopes.delete_repo" = ""
"securityDefinitions.oauth_2_0.scopes.gist" = ""
"securityDefinitions.oauth_2_0.scopes.notifications" = ""
"securityDefinitions.oauth_2_0.scopes.public_repo" = ""
"securityDefinitions.oauth_2_0.scopes.read:org" = ""
"securityDefinitions.oauth_2_0.scopes.read:public_key" = ""
"securityDefinitions.oauth_2_0.scopes.read:repo_hook" = ""
"securityDefinitions.oauth_2_0.scopes.repo" = ""
"securityDefinitions.oauth_2_0.scopes.repo:status" = ""
"securityDefinitions.oauth_2_0.scopes.repo_deployment" = ""
"securityDefinitions.oauth_2_0.scopes.user" = ""
"securityDefinitions.oauth_2_0.scopes.user:email" = ""
"securityDefinitions.oauth_2_0.scopes.user:follow" = ""
"securityDefinitions.oauth_2_0.scopes.write:org" = ""
"securityDefinitions.oauth_2_0.scopes.write:public_key" = ""
"securityDefinitions.oauth_2_0.scopes.write:repo_hook" = ""
"securityDefinitions.oauth_2_0.tokenUrl" = "https://github.com/login/oauth/access_token"
"securityDefinitions.oauth_2_0.type" = "oauth2"
swagger = "2.0"
x-hasEquivalentPaths = true
