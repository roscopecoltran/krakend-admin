basePath: /v3
definitions.advanced_stats_clicks.properties.date.description: The date that the events
  occurred.
definitions.advanced_stats_clicks.properties.date.type: string
definitions.advanced_stats_clicks.properties.stats.description: The statistics of
  the email events.
definitions.advanced_stats_clicks.properties.stats.items.properties.metrics.description: The
  individual events and their stats.
definitions.advanced_stats_clicks.properties.stats.items.properties.metrics.properties.clicks.description: The
  number of links that were clicked in your emails.
definitions.advanced_stats_clicks.properties.stats.items.properties.metrics.properties.clicks.type: integer
definitions.advanced_stats_clicks.properties.stats.items.properties.metrics.properties.unique_clicks.description: The
  number of unique recipients who clicked links in your emails.
definitions.advanced_stats_clicks.properties.stats.items.properties.metrics.properties.unique_clicks.type: integer
definitions.advanced_stats_clicks.properties.stats.items.properties.metrics.required.length: 2
definitions.advanced_stats_clicks.properties.stats.items.properties.metrics.required[0]: clicks
definitions.advanced_stats_clicks.properties.stats.items.properties.metrics.required[1]: unique_clicks
definitions.advanced_stats_clicks.properties.stats.items.properties.metrics.type: object
definitions.advanced_stats_clicks.properties.stats.items.properties.name.description: The
  name of the specific segmentation.
definitions.advanced_stats_clicks.properties.stats.items.properties.name.type: string
definitions.advanced_stats_clicks.properties.stats.items.properties.type.description: The
  type of segmentation.
definitions.advanced_stats_clicks.properties.stats.items.properties.type.type: string
definitions.advanced_stats_clicks.properties.stats.items.required.length: 3
definitions.advanced_stats_clicks.properties.stats.items.required[0]: type
definitions.advanced_stats_clicks.properties.stats.items.required[1]: name
definitions.advanced_stats_clicks.properties.stats.items.required[2]: metrics
definitions.advanced_stats_clicks.properties.stats.items.type: object
definitions.advanced_stats_clicks.properties.stats.type: array
definitions.advanced_stats_clicks.required.length: 2
definitions.advanced_stats_clicks.required[0]: date
definitions.advanced_stats_clicks.required[1]: stats
definitions.advanced_stats_clicks.title: 'Stats: Advanced Stats with Clicks'
definitions.advanced_stats_clicks.type: object
definitions.advanced_stats_country.properties.date.description: The date that the
  events occurred.
definitions.advanced_stats_country.properties.date.type: string
definitions.advanced_stats_country.properties.stats.description: The statistics of
  the email events.
definitions.advanced_stats_country.properties.stats.items.properties.metrics.description: The
  individual events and their stats.
definitions.advanced_stats_country.properties.stats.items.properties.metrics.properties.clicks.description: The
  number of links that were clicked in your emails.
definitions.advanced_stats_country.properties.stats.items.properties.metrics.properties.clicks.type: integer
definitions.advanced_stats_country.properties.stats.items.properties.metrics.properties.opens.description: The
  total number of times your emails were opened by recipients.
definitions.advanced_stats_country.properties.stats.items.properties.metrics.properties.opens.type: integer
definitions.advanced_stats_country.properties.stats.items.properties.metrics.properties.unique_clicks.description: The
  number of unique recipients who clicked links in your emails.
definitions.advanced_stats_country.properties.stats.items.properties.metrics.properties.unique_clicks.type: integer
definitions.advanced_stats_country.properties.stats.items.properties.metrics.properties.unique_opens.description: The
  number of unique recipients who opened your emails.
definitions.advanced_stats_country.properties.stats.items.properties.metrics.properties.unique_opens.type: integer
definitions.advanced_stats_country.properties.stats.items.properties.metrics.required.length: 4
definitions.advanced_stats_country.properties.stats.items.properties.metrics.required[0]: clicks
definitions.advanced_stats_country.properties.stats.items.properties.metrics.required[1]: opens
definitions.advanced_stats_country.properties.stats.items.properties.metrics.required[2]: unique_clicks
definitions.advanced_stats_country.properties.stats.items.properties.metrics.required[3]: unique_opens
definitions.advanced_stats_country.properties.stats.items.properties.metrics.type: object
definitions.advanced_stats_country.properties.stats.items.properties.name.description: The
  name of the specific segmentation.
definitions.advanced_stats_country.properties.stats.items.properties.name.type: string
definitions.advanced_stats_country.properties.stats.items.properties.type.description: The
  type of segmentation.
definitions.advanced_stats_country.properties.stats.items.properties.type.type: string
definitions.advanced_stats_country.properties.stats.items.required.length: 3
definitions.advanced_stats_country.properties.stats.items.required[0]: type
definitions.advanced_stats_country.properties.stats.items.required[1]: name
definitions.advanced_stats_country.properties.stats.items.required[2]: metrics
definitions.advanced_stats_country.properties.stats.items.type: object
definitions.advanced_stats_country.properties.stats.type: array
definitions.advanced_stats_country.required.length: 2
definitions.advanced_stats_country.required[0]: date
definitions.advanced_stats_country.required[1]: stats
definitions.advanced_stats_country.title: 'Stats: Advanced Stats with Clicks and Opens'
definitions.advanced_stats_country.type: object
definitions.advanced_stats_mailbox_provider.properties.date.description: The date
  that the events occurred.
definitions.advanced_stats_mailbox_provider.properties.date.type: string
definitions.advanced_stats_mailbox_provider.properties.stats.description: The statistics
  of the email events.
definitions.advanced_stats_mailbox_provider.properties.stats.items.properties.metrics.description: The
  individual events and their stats.
definitions.advanced_stats_mailbox_provider.properties.stats.items.properties.metrics.properties.blocks.description: The
  number of emails that were not allowed to be delivered by ISPs.
definitions.advanced_stats_mailbox_provider.properties.stats.items.properties.metrics.properties.blocks.type: integer
definitions.advanced_stats_mailbox_provider.properties.stats.items.properties.metrics.properties.bounces.description: The
  number of emails that bounced instead of being delivered.
definitions.advanced_stats_mailbox_provider.properties.stats.items.properties.metrics.properties.bounces.type: integer
definitions.advanced_stats_mailbox_provider.properties.stats.items.properties.metrics.properties.clicks.description: The
  number of links that were clicked in your emails.
definitions.advanced_stats_mailbox_provider.properties.stats.items.properties.metrics.properties.clicks.type: integer
definitions.advanced_stats_mailbox_provider.properties.stats.items.properties.metrics.properties.deferred.description: The
  number of emails that temporarily could not be delivered.
definitions.advanced_stats_mailbox_provider.properties.stats.items.properties.metrics.properties.deferred.type: integer
definitions.advanced_stats_mailbox_provider.properties.stats.items.properties.metrics.properties.delivered.description: The
  number of emails SendGrid was able to confirm were actually delivered to a recipient.
definitions.advanced_stats_mailbox_provider.properties.stats.items.properties.metrics.properties.delivered.type: integer
definitions.advanced_stats_mailbox_provider.properties.stats.items.properties.metrics.properties.drops.description: The
  number of emails that were not delivered due to the recipient email address being
  on a suppression list.
definitions.advanced_stats_mailbox_provider.properties.stats.items.properties.metrics.properties.drops.type: integer
definitions.advanced_stats_mailbox_provider.properties.stats.items.properties.metrics.properties.opens.description: The
  total number of times your emails were opened by recipients.
definitions.advanced_stats_mailbox_provider.properties.stats.items.properties.metrics.properties.opens.type: integer
definitions.advanced_stats_mailbox_provider.properties.stats.items.properties.metrics.properties.spam_reports.description: The
  number of recipients who marked your email as spam.
definitions.advanced_stats_mailbox_provider.properties.stats.items.properties.metrics.properties.spam_reports.type: integer
definitions.advanced_stats_mailbox_provider.properties.stats.items.properties.metrics.properties.unique_clicks.description: The
  number of unique recipients who clicked links in your emails.
definitions.advanced_stats_mailbox_provider.properties.stats.items.properties.metrics.properties.unique_clicks.type: integer
definitions.advanced_stats_mailbox_provider.properties.stats.items.properties.metrics.properties.unique_opens.description: The
  number of unique recipients who opened your emails.
definitions.advanced_stats_mailbox_provider.properties.stats.items.properties.metrics.properties.unique_opens.type: integer
definitions.advanced_stats_mailbox_provider.properties.stats.items.properties.metrics.required.length: 10
definitions.advanced_stats_mailbox_provider.properties.stats.items.properties.metrics.required[0]: clicks
definitions.advanced_stats_mailbox_provider.properties.stats.items.properties.metrics.required[1]: opens
definitions.advanced_stats_mailbox_provider.properties.stats.items.properties.metrics.required[2]: unique_clicks
definitions.advanced_stats_mailbox_provider.properties.stats.items.properties.metrics.required[3]: unique_opens
definitions.advanced_stats_mailbox_provider.properties.stats.items.properties.metrics.required[4]: blocks
definitions.advanced_stats_mailbox_provider.properties.stats.items.properties.metrics.required[5]: bounces
definitions.advanced_stats_mailbox_provider.properties.stats.items.properties.metrics.required[6]: deferred
definitions.advanced_stats_mailbox_provider.properties.stats.items.properties.metrics.required[7]: delivered
definitions.advanced_stats_mailbox_provider.properties.stats.items.properties.metrics.required[8]: drops
definitions.advanced_stats_mailbox_provider.properties.stats.items.properties.metrics.required[9]: spam_reports
definitions.advanced_stats_mailbox_provider.properties.stats.items.properties.metrics.type: object
definitions.advanced_stats_mailbox_provider.properties.stats.items.properties.name.description: The
  name of the specific segmentation.
definitions.advanced_stats_mailbox_provider.properties.stats.items.properties.name.type: string
definitions.advanced_stats_mailbox_provider.properties.stats.items.properties.type.description: The
  type of segmentation.
definitions.advanced_stats_mailbox_provider.properties.stats.items.properties.type.type: string
definitions.advanced_stats_mailbox_provider.properties.stats.items.required.length: 3
definitions.advanced_stats_mailbox_provider.properties.stats.items.required[0]: type
definitions.advanced_stats_mailbox_provider.properties.stats.items.required[1]: name
definitions.advanced_stats_mailbox_provider.properties.stats.items.required[2]: metrics
definitions.advanced_stats_mailbox_provider.properties.stats.items.type: object
definitions.advanced_stats_mailbox_provider.properties.stats.type: array
definitions.advanced_stats_mailbox_provider.required.length: 2
definitions.advanced_stats_mailbox_provider.required[0]: date
definitions.advanced_stats_mailbox_provider.required[1]: stats
definitions.advanced_stats_mailbox_provider.title: 'Stats: Advanced Stats for Mailbox
  Provider'
definitions.advanced_stats_mailbox_provider.type: object
definitions.advanced_stats_opens.properties.date.description: The date that the events
  occurred.
definitions.advanced_stats_opens.properties.date.type: string
definitions.advanced_stats_opens.properties.stats.description: The statistics of the
  email events.
definitions.advanced_stats_opens.properties.stats.items.properties.metrics.description: The
  individual events and their stats.
definitions.advanced_stats_opens.properties.stats.items.properties.metrics.properties.opens.description: The
  total number of times your emails were opened by recipients.
definitions.advanced_stats_opens.properties.stats.items.properties.metrics.properties.opens.type: integer
definitions.advanced_stats_opens.properties.stats.items.properties.metrics.properties.unique_opens.description: The
  number of unique recipients who opened your emails.
definitions.advanced_stats_opens.properties.stats.items.properties.metrics.properties.unique_opens.type: integer
definitions.advanced_stats_opens.properties.stats.items.properties.metrics.required.length: 2
definitions.advanced_stats_opens.properties.stats.items.properties.metrics.required[0]: opens
definitions.advanced_stats_opens.properties.stats.items.properties.metrics.required[1]: unique_opens
definitions.advanced_stats_opens.properties.stats.items.properties.metrics.type: object
definitions.advanced_stats_opens.properties.stats.items.properties.name.description: The
  name of the specific segmentation.
definitions.advanced_stats_opens.properties.stats.items.properties.name.type: string
definitions.advanced_stats_opens.properties.stats.items.properties.type.description: The
  type of segmentation.
definitions.advanced_stats_opens.properties.stats.items.properties.type.type: string
definitions.advanced_stats_opens.properties.stats.items.required.length: 3
definitions.advanced_stats_opens.properties.stats.items.required[0]: type
definitions.advanced_stats_opens.properties.stats.items.required[1]: name
definitions.advanced_stats_opens.properties.stats.items.required[2]: metrics
definitions.advanced_stats_opens.properties.stats.items.type: object
definitions.advanced_stats_opens.properties.stats.type: array
definitions.advanced_stats_opens.required.length: 2
definitions.advanced_stats_opens.required[0]: date
definitions.advanced_stats_opens.required[1]: stats
definitions.advanced_stats_opens.title: 'Stats: Advanced Stats with Opens'
definitions.advanced_stats_opens.type: object
definitions.api_key_name_id.example.api_key_id: qfTQ6KG0QBiwWdJ0-pCLCA
definitions.api_key_name_id.example.name: A New Hope
definitions.api_key_name_id.properties.api_key_id.description: 'The ID of your API
  Key. '
definitions.api_key_name_id.properties.api_key_id.type: string
definitions.api_key_name_id.properties.name.description: The name of your API Key.
definitions.api_key_name_id.properties.name.type: string
definitions.api_key_name_id.title: API Key Name and ID
definitions.api_key_name_id.type: object
definitions.api_key_name_id_scopes.allOf.length: 2
definitions.api_key_name_id_scopes.allOf[0].properties.scopes.description: The permissions
  this API Key has access to.
definitions.api_key_name_id_scopes.allOf[0].properties.scopes.items.type: string
definitions.api_key_name_id_scopes.allOf[0].properties.scopes.type: array
definitions.api_key_name_id_scopes.allOf[0].type: object
definitions.api_key_name_id_scopes.allOf[1].$ref: '#/definitions/api_key_name_id'
definitions.api_key_name_id_scopes.example.api_key_id: qfTQ6KG0QBiwWdJ0-pCLCA
definitions.api_key_name_id_scopes.example.name: A New Hope
definitions.api_key_name_id_scopes.example.scopes.length: 2
definitions.api_key_name_id_scopes.example.scopes[0]: user.profile.read
definitions.api_key_name_id_scopes.example.scopes[1]: user.profile.update
definitions.api_key_name_id_scopes.title: API Key Name, ID, and Scopes
definitions.campaign_request.example.categories.length: 1
definitions.campaign_request.example.categories[0]: summer line
definitions.campaign_request.example.custom_unsubscribe_url: ""
definitions.campaign_request.example.html_content: <html><head><title></title></head><body><p>Check
  out our summer line!</p></body></html>
definitions.campaign_request.example.id: 986724
definitions.campaign_request.example.ip_pool: marketing
definitions.campaign_request.example.list_ids.length: 2
definitions.campaign_request.example.list_ids[0]: 110
definitions.campaign_request.example.list_ids[1]: 124
definitions.campaign_request.example.plain_content: Check out our summer line!
definitions.campaign_request.example.segment_ids.length: 1
definitions.campaign_request.example.segment_ids[0]: 110
definitions.campaign_request.example.sender_id: 124451
definitions.campaign_request.example.status: Draft
definitions.campaign_request.example.subject: New Products for Summer!
definitions.campaign_request.example.suppression_group_id: 42
definitions.campaign_request.example.title: May Newsletter
definitions.campaign_request.properties.categories.description: The categories you
  would like associated to this campaign.
definitions.campaign_request.properties.categories.items.type: string
definitions.campaign_request.properties.categories.type.length: 2
definitions.campaign_request.properties.categories.type[0]: array
definitions.campaign_request.properties.categories.type[1]: "null"
definitions.campaign_request.properties.custom_unsubscribe_url.description: This is
  the url of the custom unsubscribe page that you provide for customers to unsubscribe
  from your suppression groups.
definitions.campaign_request.properties.custom_unsubscribe_url.type.length: 2
definitions.campaign_request.properties.custom_unsubscribe_url.type[0]: string
definitions.campaign_request.properties.custom_unsubscribe_url.type[1]: "null"
definitions.campaign_request.properties.html_content.description: The HTML of your
  marketing email.
definitions.campaign_request.properties.html_content.type.length: 2
definitions.campaign_request.properties.html_content.type[0]: string
definitions.campaign_request.properties.html_content.type[1]: "null"
definitions.campaign_request.properties.ip_pool.description: The pool of IPs that
  you would like to send this email from.
definitions.campaign_request.properties.ip_pool.type.length: 2
definitions.campaign_request.properties.ip_pool.type[0]: string
definitions.campaign_request.properties.ip_pool.type[1]: "null"
definitions.campaign_request.properties.list_ids.description: The IDs of the lists
  you are sending this campaign to. You can have both segment IDs and list IDs
definitions.campaign_request.properties.list_ids.items.type: integer
definitions.campaign_request.properties.list_ids.type.length: 2
definitions.campaign_request.properties.list_ids.type[0]: array
definitions.campaign_request.properties.list_ids.type[1]: "null"
definitions.campaign_request.properties.plain_content.description: The plain text
  content of your emails.
definitions.campaign_request.properties.plain_content.type.length: 2
definitions.campaign_request.properties.plain_content.type[0]: string
definitions.campaign_request.properties.plain_content.type[1]: "null"
definitions.campaign_request.properties.segment_ids.description: The segment IDs that
  you are sending this list to. You can have both segment IDs and list IDs.
definitions.campaign_request.properties.segment_ids.items.type: integer
definitions.campaign_request.properties.segment_ids.type.length: 2
definitions.campaign_request.properties.segment_ids.type[0]: array
definitions.campaign_request.properties.segment_ids.type[1]: "null"
definitions.campaign_request.properties.sender_id.description: The ID of the "sender"
  identity that you have created. Your recipients will see this as the "from" on your
  marketing emails.
definitions.campaign_request.properties.sender_id.type.length: 2
definitions.campaign_request.properties.sender_id.type[0]: "null"
definitions.campaign_request.properties.sender_id.type[1]: integer
definitions.campaign_request.properties.subject.description: The subject of your campaign
  that your recipients will see.
definitions.campaign_request.properties.subject.type.length: 2
definitions.campaign_request.properties.subject.type[0]: string
definitions.campaign_request.properties.subject.type[1]: "null"
definitions.campaign_request.properties.suppression_group_id.description: The suppression
  group that this marketing email belongs to, allowing recipients to opt-out of emails
  of this type.
definitions.campaign_request.properties.suppression_group_id.type.length: 2
definitions.campaign_request.properties.suppression_group_id.type[0]: "null"
definitions.campaign_request.properties.suppression_group_id.type[1]: integer
definitions.campaign_request.properties.title.description: The display title of your
  campaign. This will be viewable by you in the Marketing Campaigns UI.
definitions.campaign_request.properties.title.type: string
definitions.campaign_request.required.length: 1
definitions.campaign_request.required[0]: title
definitions.campaign_request.title: Campaigns Request
definitions.campaign_request.type: object
definitions.campaign_response.allOf.length: 2
definitions.campaign_response.allOf[0].$ref: '#/definitions/campaign_request'
definitions.campaign_response.allOf[1].properties.id.type: integer
definitions.campaign_response.allOf[1].properties.status.description: The status of
  your campaign.
definitions.campaign_response.allOf[1].properties.status.type: string
definitions.campaign_response.allOf[1].required.length: 1
definitions.campaign_response.allOf[1].required[0]: status
definitions.campaign_response.allOf[1].type: object
definitions.campaign_response.title: Campaigns Response
definitions.category_stats.example.date: 2015-01-01
definitions.category_stats.example.stats.length: 2
definitions.category_stats.example.stats[0].metrics.blocks: 0
definitions.category_stats.example.stats[0].metrics.bounce_drops: 0
definitions.category_stats.example.stats[0].metrics.bounces: 0
definitions.category_stats.example.stats[0].metrics.clicks: 0
definitions.category_stats.example.stats[0].metrics.deferred: 0
definitions.category_stats.example.stats[0].metrics.delivered: 0
definitions.category_stats.example.stats[0].metrics.invalid_emails: 0
definitions.category_stats.example.stats[0].metrics.opens: 0
definitions.category_stats.example.stats[0].metrics.processed: 0
definitions.category_stats.example.stats[0].metrics.requests: 0
definitions.category_stats.example.stats[0].metrics.spam_report_drops: 0
definitions.category_stats.example.stats[0].metrics.spam_reports: 0
definitions.category_stats.example.stats[0].metrics.unique_clicks: 0
definitions.category_stats.example.stats[0].metrics.unique_opens: 0
definitions.category_stats.example.stats[0].metrics.unsubscribe_drops: 0
definitions.category_stats.example.stats[0].metrics.unsubscribes: 0
definitions.category_stats.example.stats[0].name: cat1
definitions.category_stats.example.stats[0].type: category
definitions.category_stats.example.stats[1].metrics.blocks: 0
definitions.category_stats.example.stats[1].metrics.bounce_drops: 0
definitions.category_stats.example.stats[1].metrics.bounces: 0
definitions.category_stats.example.stats[1].metrics.clicks: 0
definitions.category_stats.example.stats[1].metrics.deferred: 0
definitions.category_stats.example.stats[1].metrics.delivered: 0
definitions.category_stats.example.stats[1].metrics.invalid_emails: 0
definitions.category_stats.example.stats[1].metrics.opens: 0
definitions.category_stats.example.stats[1].metrics.processed: 0
definitions.category_stats.example.stats[1].metrics.requests: 0
definitions.category_stats.example.stats[1].metrics.spam_report_drops: 0
definitions.category_stats.example.stats[1].metrics.spam_reports: 0
definitions.category_stats.example.stats[1].metrics.unique_clicks: 0
definitions.category_stats.example.stats[1].metrics.unique_opens: 0
definitions.category_stats.example.stats[1].metrics.unsubscribe_drops: 0
definitions.category_stats.example.stats[1].metrics.unsubscribes: 0
definitions.category_stats.example.stats[1].name: cat2
definitions.category_stats.example.stats[1].type: category
definitions.category_stats.properties.date.description: The date the statistics were
  gathered.
definitions.category_stats.properties.date.type: string
definitions.category_stats.properties.stats.items.properties.metrics.properties.blocks.description: The
  number of emails that were not allowed to be delivered by ISPs.
definitions.category_stats.properties.stats.items.properties.metrics.properties.blocks.type: integer
definitions.category_stats.properties.stats.items.properties.metrics.properties.bounce_drops.description: The
  number of emails that were dropped because of a bounce.
definitions.category_stats.properties.stats.items.properties.metrics.properties.bounce_drops.type: integer
definitions.category_stats.properties.stats.items.properties.metrics.properties.bounces.description: The
  number of emails that bounced instead of being delivered.
definitions.category_stats.properties.stats.items.properties.metrics.properties.bounces.type: integer
definitions.category_stats.properties.stats.items.properties.metrics.properties.clicks.description: The
  number of links that were clicked.
definitions.category_stats.properties.stats.items.properties.metrics.properties.clicks.type: integer
definitions.category_stats.properties.stats.items.properties.metrics.properties.deferred.description: The
  number of emails that temporarily could not be delivered.
definitions.category_stats.properties.stats.items.properties.metrics.properties.deferred.type: integer
definitions.category_stats.properties.stats.items.properties.metrics.properties.delivered.description: The
  number of emails SendGrid was able to confirm were actually delivered to a recipient.
definitions.category_stats.properties.stats.items.properties.metrics.properties.delivered.type: integer
definitions.category_stats.properties.stats.items.properties.metrics.properties.invalid_emails.description: The
  number of recipients who had malformed email addresses or whose mail provider reported
  the address as invalid.
definitions.category_stats.properties.stats.items.properties.metrics.properties.invalid_emails.type: integer
definitions.category_stats.properties.stats.items.properties.metrics.properties.opens.description: The
  total number of times your emails were opened by recipients.
definitions.category_stats.properties.stats.items.properties.metrics.properties.opens.type: integer
definitions.category_stats.properties.stats.items.properties.metrics.properties.processed.description: Requests
  from your website, application, or mail client via SMTP Relay or the API that SendGrid
  processed.
definitions.category_stats.properties.stats.items.properties.metrics.properties.processed.type: integer
definitions.category_stats.properties.stats.items.properties.metrics.properties.requests.description: The
  number of emails that were requested to be delivered.
definitions.category_stats.properties.stats.items.properties.metrics.properties.requests.type: integer
definitions.category_stats.properties.stats.items.properties.metrics.properties.spam_report_drops.description: The
  number of emails that were dropped due to a recipient previously marking your emails
  as spam.
definitions.category_stats.properties.stats.items.properties.metrics.properties.spam_report_drops.type: integer
definitions.category_stats.properties.stats.items.properties.metrics.properties.spam_reports.description: The
  number of recipients who marked your email as spam.
definitions.category_stats.properties.stats.items.properties.metrics.properties.spam_reports.type: integer
definitions.category_stats.properties.stats.items.properties.metrics.properties.unique_clicks.description: The
  number of unique recipients who clicked links in your emails.
definitions.category_stats.properties.stats.items.properties.metrics.properties.unique_clicks.type: integer
definitions.category_stats.properties.stats.items.properties.metrics.properties.unique_opens.description: The
  number of unique recipients who opened your emails.
definitions.category_stats.properties.stats.items.properties.metrics.properties.unique_opens.type: integer
definitions.category_stats.properties.stats.items.properties.metrics.properties.unsubscribe_drops.description: The
  number of emails dropped due to a recipient unsubscribing from your emails.
definitions.category_stats.properties.stats.items.properties.metrics.properties.unsubscribe_drops.type: integer
definitions.category_stats.properties.stats.items.properties.metrics.properties.unsubscribes.description: The
  number of recipients who unsubscribed from your emails.
definitions.category_stats.properties.stats.items.properties.metrics.properties.unsubscribes.type: integer
definitions.category_stats.properties.stats.items.properties.metrics.required.length: 16
definitions.category_stats.properties.stats.items.properties.metrics.required[0]: blocks
definitions.category_stats.properties.stats.items.properties.metrics.required[1]: bounce_drops
definitions.category_stats.properties.stats.items.properties.metrics.required[2]: bounces
definitions.category_stats.properties.stats.items.properties.metrics.required[3]: clicks
definitions.category_stats.properties.stats.items.properties.metrics.required[4]: deferred
definitions.category_stats.properties.stats.items.properties.metrics.required[5]: delivered
definitions.category_stats.properties.stats.items.properties.metrics.required[6]: invalid_emails
definitions.category_stats.properties.stats.items.properties.metrics.required[7]: opens
definitions.category_stats.properties.stats.items.properties.metrics.required[8]: processed
definitions.category_stats.properties.stats.items.properties.metrics.required[9]: requests
definitions.category_stats.properties.stats.items.properties.metrics.required[10]: spam_report_drops
definitions.category_stats.properties.stats.items.properties.metrics.required[11]: spam_reports
definitions.category_stats.properties.stats.items.properties.metrics.required[12]: unique_clicks
definitions.category_stats.properties.stats.items.properties.metrics.required[13]: unique_opens
definitions.category_stats.properties.stats.items.properties.metrics.required[14]: unsubscribe_drops
definitions.category_stats.properties.stats.items.properties.metrics.required[15]: unsubscribes
definitions.category_stats.properties.stats.items.properties.metrics.type: object
definitions.category_stats.properties.stats.items.properties.name.description: The
  name of the category.
definitions.category_stats.properties.stats.items.properties.name.type: string
definitions.category_stats.properties.stats.items.properties.type.description: How
  you are segmenting your statistics.
definitions.category_stats.properties.stats.items.properties.type.type: string
definitions.category_stats.properties.stats.items.required.length: 1
definitions.category_stats.properties.stats.items.required[0]: type
definitions.category_stats.properties.stats.items.type: object
definitions.category_stats.properties.stats.type: array
definitions.category_stats.required.length: 1
definitions.category_stats.required[0]: date
definitions.category_stats.title: 'Stats: Category Stats'
definitions.category_stats.type: object
definitions.contactdb_custom_field.example.name: first_name
definitions.contactdb_custom_field.example.type: text
definitions.contactdb_custom_field.properties.name.description: The name of the field
definitions.contactdb_custom_field.properties.name.type: string
definitions.contactdb_custom_field.properties.type.description: The type of the field.
definitions.contactdb_custom_field.properties.type.enum.length: 3
definitions.contactdb_custom_field.properties.type.enum[0]: date
definitions.contactdb_custom_field.properties.type.enum[1]: text
definitions.contactdb_custom_field.properties.type.enum[2]: number
definitions.contactdb_custom_field.properties.type.type: string
definitions.contactdb_custom_field.title: ContactDB Custom field schema.
definitions.contactdb_custom_field.type: object
definitions.contactdb_custom_field_with_id.allOf.length: 2
definitions.contactdb_custom_field_with_id.allOf[0].$ref: '#/definitions/contactdb_custom_field'
definitions.contactdb_custom_field_with_id.allOf[1].properties.id.description: The
  ID of the custom field.
definitions.contactdb_custom_field_with_id.allOf[1].properties.id.type: number
definitions.contactdb_custom_field_with_id.allOf[1].type: object
definitions.contactdb_custom_field_with_id.title: ContactDB Custom field schema with
  ID.
definitions.contactdb_custom_field_with_id_value.allOf.length: 2
definitions.contactdb_custom_field_with_id_value.allOf[0].$ref: '#/definitions/contactdb_custom_field_with_id'
definitions.contactdb_custom_field_with_id_value.allOf[1].properties.value.description: The
  value of this recipient's custom field
definitions.contactdb_custom_field_with_id_value.allOf[1].properties.value.type.length: 2
definitions.contactdb_custom_field_with_id_value.allOf[1].properties.value.type[0]: string
definitions.contactdb_custom_field_with_id_value.allOf[1].properties.value.type[1]: "null"
definitions.contactdb_custom_field_with_id_value.allOf[1].type: object
definitions.contactdb_custom_field_with_id_value.title: ContactDB Custom field schema.
definitions.contactdb_list.example.id: 1
definitions.contactdb_list.example.name: listname
definitions.contactdb_list.example.recipient_count: 0
definitions.contactdb_list.properties.id.description: The reference ID of your list.
definitions.contactdb_list.properties.id.type: integer
definitions.contactdb_list.properties.name.description: The name of your list.
definitions.contactdb_list.properties.name.type: string
definitions.contactdb_list.properties.recipient_count.description: The count of recipients
  currently in the list.
definitions.contactdb_list.properties.recipient_count.type: integer
definitions.contactdb_list.required.length: 3
definitions.contactdb_list.required[0]: id
definitions.contactdb_list.required[1]: name
definitions.contactdb_list.required[2]: recipient_count
definitions.contactdb_list.title: ContactDB lists
definitions.contactdb_list.type: object
definitions.contactdb_recipient.properties.recipients.items.properties.created_at.description: The
  time this record was created in your contactdb, in unixtime.
definitions.contactdb_recipient.properties.recipients.items.properties.created_at.type: number
definitions.contactdb_recipient.properties.recipients.items.properties.custom_fields.description: The
  custom fields assigned to this recipient and their values.
definitions.contactdb_recipient.properties.recipients.items.properties.custom_fields.items.$ref: '#/definitions/contactdb_custom_field_with_id_value'
definitions.contactdb_recipient.properties.recipients.items.properties.custom_fields.type: array
definitions.contactdb_recipient.properties.recipients.items.properties.email.description: The
  email address of this recipient. This is a default custom field that SendGrid provides.
definitions.contactdb_recipient.properties.recipients.items.properties.email.format: email
definitions.contactdb_recipient.properties.recipients.items.properties.email.type: string
definitions.contactdb_recipient.properties.recipients.items.properties.first_name.description: The
  first name of this recipient. This is a default custom field that SendGrid provides.
definitions.contactdb_recipient.properties.recipients.items.properties.first_name.type.length: 2
definitions.contactdb_recipient.properties.recipients.items.properties.first_name.type[0]: string
definitions.contactdb_recipient.properties.recipients.items.properties.first_name.type[1]: "null"
definitions.contactdb_recipient.properties.recipients.items.properties.id.description: The
  ID of this recipient.
definitions.contactdb_recipient.properties.recipients.items.properties.id.type: string
definitions.contactdb_recipient.properties.recipients.items.properties.last_clicked.description: The
  last time this recipient clicked a link from one of your campaigns, in unixtime.
definitions.contactdb_recipient.properties.recipients.items.properties.last_clicked.type.length: 2
definitions.contactdb_recipient.properties.recipients.items.properties.last_clicked.type[0]: number
definitions.contactdb_recipient.properties.recipients.items.properties.last_clicked.type[1]: "null"
definitions.contactdb_recipient.properties.recipients.items.properties.last_emailed.description: The
  last time this user was emailed by one of your campaigns, in unixtime.
definitions.contactdb_recipient.properties.recipients.items.properties.last_emailed.type.length: 2
definitions.contactdb_recipient.properties.recipients.items.properties.last_emailed.type[0]: number
definitions.contactdb_recipient.properties.recipients.items.properties.last_emailed.type[1]: "null"
definitions.contactdb_recipient.properties.recipients.items.properties.last_name.description: The
  last name of the recipient.
definitions.contactdb_recipient.properties.recipients.items.properties.last_name.type.length: 2
definitions.contactdb_recipient.properties.recipients.items.properties.last_name.type[0]: string
definitions.contactdb_recipient.properties.recipients.items.properties.last_name.type[1]: "null"
definitions.contactdb_recipient.properties.recipients.items.properties.last_opened.description: The
  last time this recipient opened an email from you, in unixtime.
definitions.contactdb_recipient.properties.recipients.items.properties.last_opened.type.length: 2
definitions.contactdb_recipient.properties.recipients.items.properties.last_opened.type[0]: number
definitions.contactdb_recipient.properties.recipients.items.properties.last_opened.type[1]: "null"
definitions.contactdb_recipient.properties.recipients.items.properties.updated_at.description: The
  last update date for this recipient's record.
definitions.contactdb_recipient.properties.recipients.items.properties.updated_at.type: number
definitions.contactdb_recipient.properties.recipients.items.required.length: 1
definitions.contactdb_recipient.properties.recipients.items.required[0]: email
definitions.contactdb_recipient.properties.recipients.items.type: object
definitions.contactdb_recipient.properties.recipients.type: array
definitions.contactdb_recipient.title: 'ContactDB: Recipient'
definitions.contactdb_recipient.type: object
definitions.contactdb_recipient_count.example.recipient_count: 1234
definitions.contactdb_recipient_count.properties.recipient_count.description: The
  count of recipients.
definitions.contactdb_recipient_count.properties.recipient_count.type: number
definitions.contactdb_recipient_count.required.length: 1
definitions.contactdb_recipient_count.required[0]: recipient_count
definitions.contactdb_recipient_count.title: 'ContactDB: Recipient Count'
definitions.contactdb_recipient_count.type: object
definitions.contactdb_recipient_response.example.error_count: 1
definitions.contactdb_recipient_response.example.error_indices.length: 1
definitions.contactdb_recipient_response.example.error_indices[0]: 2
definitions.contactdb_recipient_response.example.errors.length: 1
definitions.contactdb_recipient_response.example.errors[0].error_indices.length: 1
definitions.contactdb_recipient_response.example.errors[0].error_indices[0]: 2
definitions.contactdb_recipient_response.example.errors[0].message: Invalid email.
definitions.contactdb_recipient_response.example.new_count: 2
definitions.contactdb_recipient_response.example.persisted_recipients.length: 2
definitions.contactdb_recipient_response.example.persisted_recipients[0]: YUBh
definitions.contactdb_recipient_response.example.persisted_recipients[1]: bWlsbGVyQG1pbGxlci50ZXN0
definitions.contactdb_recipient_response.example.updated_count: 0
definitions.contactdb_recipient_response.properties.error_count.default: 0
definitions.contactdb_recipient_response.properties.error_count.description: The number
  of errors found while adding recipients.
definitions.contactdb_recipient_response.properties.error_count.type: number
definitions.contactdb_recipient_response.properties.error_indices.default.length: 0
definitions.contactdb_recipient_response.properties.error_indices.description: 'The
  indices of the recipient(s) sent that caused the error. '
definitions.contactdb_recipient_response.properties.error_indices.items.type: number
definitions.contactdb_recipient_response.properties.error_indices.type: array
definitions.contactdb_recipient_response.properties.errors.items.properties.error_indices.items.type: number
definitions.contactdb_recipient_response.properties.errors.items.properties.error_indices.type: array
definitions.contactdb_recipient_response.properties.errors.items.properties.message.type: string
definitions.contactdb_recipient_response.properties.errors.items.type: object
definitions.contactdb_recipient_response.properties.errors.type: array
definitions.contactdb_recipient_response.properties.new_count.default: 0
definitions.contactdb_recipient_response.properties.new_count.description: The count
  of new recipients added to the contactdb.
definitions.contactdb_recipient_response.properties.new_count.type: number
definitions.contactdb_recipient_response.properties.persisted_recipients.default.length: 0
definitions.contactdb_recipient_response.properties.persisted_recipients.description: The
  recipient IDs of the recipients that already existed from this request.
definitions.contactdb_recipient_response.properties.persisted_recipients.items.type: string
definitions.contactdb_recipient_response.properties.persisted_recipients.type: array
definitions.contactdb_recipient_response.properties.updated_count.default: 0
definitions.contactdb_recipient_response.properties.updated_count.description: The
  recipients who were updated from this request.
definitions.contactdb_recipient_response.properties.updated_count.type: number
definitions.contactdb_recipient_response.required.length: 4
definitions.contactdb_recipient_response.required[0]: error_count
definitions.contactdb_recipient_response.required[1]: new_count
definitions.contactdb_recipient_response.required[2]: persisted_recipients
definitions.contactdb_recipient_response.required[3]: updated_count
definitions.contactdb_recipient_response.title: 'ContactDB: Recipient response'
definitions.contactdb_recipient_response.type: object
definitions.contactdb_segments.example.conditions.length: 3
definitions.contactdb_segments.example.conditions[0].and_or: ""
definitions.contactdb_segments.example.conditions[0].field: last_name
definitions.contactdb_segments.example.conditions[0].operator: eq
definitions.contactdb_segments.example.conditions[0].value: Miller
definitions.contactdb_segments.example.conditions[1].and_or: and
definitions.contactdb_segments.example.conditions[1].field: last_clicked
definitions.contactdb_segments.example.conditions[1].operator: gt
definitions.contactdb_segments.example.conditions[1].value: 01/02/2015
definitions.contactdb_segments.example.conditions[2].and_or: or
definitions.contactdb_segments.example.conditions[2].field: clicks.campaign_identifier
definitions.contactdb_segments.example.conditions[2].operator: eq
definitions.contactdb_segments.example.conditions[2].value: "513"
definitions.contactdb_segments.example.list_id: 4
definitions.contactdb_segments.example.name: Last Name Miller
definitions.contactdb_segments.example.recipient_count: 1234
definitions.contactdb_segments.properties.conditions.description: The conditions for
  a recipient to be included in this segment.
definitions.contactdb_segments.properties.conditions.items.$ref: '#/definitions/contactdb_segments_conditions'
definitions.contactdb_segments.properties.conditions.type: array
definitions.contactdb_segments.properties.list_id.description: The list id from which
  to make this segment. Not including this ID will mean your segment is created from
  the main contactdb rather than a list.
definitions.contactdb_segments.properties.list_id.type: integer
definitions.contactdb_segments.properties.name.description: The name of this segment.
definitions.contactdb_segments.properties.name.type: string
definitions.contactdb_segments.properties.recipient_count.description: The count of
  recipients in this list. This is not included on creation of segments.
definitions.contactdb_segments.properties.recipient_count.type: number
definitions.contactdb_segments.required.length: 2
definitions.contactdb_segments.required[0]: name
definitions.contactdb_segments.required[1]: conditions
definitions.contactdb_segments.title: Create a Segment request
definitions.contactdb_segments.type: object
definitions.contactdb_segments_conditions.properties.and_or.enum.length: 3
definitions.contactdb_segments_conditions.properties.and_or.enum[0]: and
definitions.contactdb_segments_conditions.properties.and_or.enum[1]: or
definitions.contactdb_segments_conditions.properties.and_or.enum[2]: ""
definitions.contactdb_segments_conditions.properties.and_or.type: string
definitions.contactdb_segments_conditions.properties.field.type: string
definitions.contactdb_segments_conditions.properties.operator.enum.length: 5
definitions.contactdb_segments_conditions.properties.operator.enum[0]: eq
definitions.contactdb_segments_conditions.properties.operator.enum[1]: ne
definitions.contactdb_segments_conditions.properties.operator.enum[2]: lt
definitions.contactdb_segments_conditions.properties.operator.enum[3]: gt
definitions.contactdb_segments_conditions.properties.operator.enum[4]: contains
definitions.contactdb_segments_conditions.properties.operator.type: string
definitions.contactdb_segments_conditions.properties.value.type: string
definitions.contactdb_segments_conditions.required.length: 3
definitions.contactdb_segments_conditions.required[0]: field
definitions.contactdb_segments_conditions.required[1]: value
definitions.contactdb_segments_conditions.required[2]: operator
definitions.contactdb_segments_conditions.title: 'ContactDB: Segments: Conditions'
definitions.contactdb_segments_conditions.type: object
definitions.contactdb_segments_with_id.allOf.length: 2
definitions.contactdb_segments_with_id.allOf[0].properties.id.description: The ID
  of the segment.
definitions.contactdb_segments_with_id.allOf[0].properties.id.type: number
definitions.contactdb_segments_with_id.allOf[0].required.length: 1
definitions.contactdb_segments_with_id.allOf[0].required[0]: id
definitions.contactdb_segments_with_id.allOf[0].type: object
definitions.contactdb_segments_with_id.allOf[1].$ref: '#/definitions/contactdb_segments'
definitions.contactdb_segments_with_id.title: 'ContactDB:: Segments with ID'
definitions.contacts.properties.address.type: string
definitions.contacts.properties.address2.type: object
definitions.contacts.properties.city.type: string
definitions.contacts.properties.company.type: string
definitions.contacts.properties.country.type: string
definitions.contacts.properties.email.type: string
definitions.contacts.properties.first_name.type: string
definitions.contacts.properties.last_name.type: string
definitions.contacts.properties.phone.type: string
definitions.contacts.properties.state.type: string
definitions.contacts.properties.zip.type: string
definitions.contacts.title: Contacts
definitions.contacts.type: object
definitions.credentials.example.address: 1234 example street
definitions.credentials.example.city: Denver
definitions.credentials.example.company: Company name
definitions.credentials.example.country: US
definitions.credentials.example.email: example@example.com
definitions.credentials.example.first_name: Example
definitions.credentials.example.last_name: User
definitions.credentials.example.phone: (555) 555-5555
definitions.credentials.example.state: CO
definitions.credentials.example.zip: "55555"
definitions.credentials.properties.permissions.properties.api.type: string
definitions.credentials.properties.permissions.properties.mail.type: string
definitions.credentials.properties.permissions.properties.web.type: string
definitions.credentials.properties.permissions.type: object
definitions.credentials.properties.username.type: string
definitions.credentials.title: Credentials
definitions.credentials.type: object
definitions.email_object.properties.email.format: email
definitions.email_object.properties.email.type: string
definitions.email_object.properties.name.description: The name of the person to whom
  you are sending an email.
definitions.email_object.properties.name.type: string
definitions.email_object.required.length: 1
definitions.email_object.required[0]: email
definitions.email_object.title: Email Object
definitions.email_object.type: object
definitions.errors.properties.errors.items.properties.field.description: The field
  that has the error.
definitions.errors.properties.errors.items.properties.field.type.length: 2
definitions.errors.properties.errors.items.properties.field.type[0]: "null"
definitions.errors.properties.errors.items.properties.field.type[1]: string
definitions.errors.properties.errors.items.properties.message.description: The message
  the API caller will receive.
definitions.errors.properties.errors.items.properties.message.type: string
definitions.errors.properties.errors.items.type: object
definitions.errors.properties.errors.type: array
definitions.errors.title: Error Schema
definitions.errors.type: object
definitions.event_webhook_settings.properties.bounce.description: Receiving server
  could not or would not accept message.
definitions.event_webhook_settings.properties.bounce.type: boolean
definitions.event_webhook_settings.properties.click.description: Recipient clicked
  on a link within the message. You need to enable Click Tracking for getting this
  type of event.
definitions.event_webhook_settings.properties.click.type: boolean
definitions.event_webhook_settings.properties.deferred.description: Recipient's email
  server temporarily rejected message.
definitions.event_webhook_settings.properties.deferred.type: boolean
definitions.event_webhook_settings.properties.delivered.description: Message has been
  successfully delivered to the receiving server.
definitions.event_webhook_settings.properties.delivered.type: boolean
definitions.event_webhook_settings.properties.dropped.description: 'You may see the
  following drop reasons: Invalid SMTPAPI header, Spam Content (if spam checker app
  enabled), Unsubscribed Address, Bounced Address, Spam Reporting Address, Invalid,
  Recipient List over Package Quota'
definitions.event_webhook_settings.properties.dropped.type: boolean
definitions.event_webhook_settings.properties.enabled.description: Indicates if the
  event webhook is enabled.
definitions.event_webhook_settings.properties.enabled.type: boolean
definitions.event_webhook_settings.properties.group_resubscribe.description: Recipient
  resubscribes to specific group by updating preferences. You need to enable Subscription
  Tracking for getting this type of event.
definitions.event_webhook_settings.properties.group_resubscribe.type: boolean
definitions.event_webhook_settings.properties.group_unsubscribe.description: Recipient
  unsubscribe from specific group, by either direct link or updating preferences.
  You need to enable Subscription Tracking for getting this type of event.
definitions.event_webhook_settings.properties.group_unsubscribe.type: boolean
definitions.event_webhook_settings.properties.open.description: Recipient has opened
  the HTML message. You need to enable Open Tracking for getting this type of event.
definitions.event_webhook_settings.properties.open.type: boolean
definitions.event_webhook_settings.properties.processed.description: Message has been
  received and is ready to be delivered.
definitions.event_webhook_settings.properties.processed.type: boolean
definitions.event_webhook_settings.properties.spam_report.description: Recipient marked
  a message as spam.
definitions.event_webhook_settings.properties.spam_report.type: boolean
definitions.event_webhook_settings.properties.unsubscribe.description: Recipient clicked
  on message's subscription management link. You need to enable Subscription Tracking
  for getting this type of event.
definitions.event_webhook_settings.properties.unsubscribe.type: boolean
definitions.event_webhook_settings.properties.url.description: The URL that you want
  the event webhook to POST to.
definitions.event_webhook_settings.properties.url.type: string
definitions.event_webhook_settings.required.length: 13
definitions.event_webhook_settings.required[0]: enabled
definitions.event_webhook_settings.required[1]: url
definitions.event_webhook_settings.required[2]: group_resubscribe
definitions.event_webhook_settings.required[3]: delivered
definitions.event_webhook_settings.required[4]: group_unsubscribe
definitions.event_webhook_settings.required[5]: spam_report
definitions.event_webhook_settings.required[6]: bounce
definitions.event_webhook_settings.required[7]: deferred
definitions.event_webhook_settings.required[8]: unsubscribe
definitions.event_webhook_settings.required[9]: processed
definitions.event_webhook_settings.required[10]: open
definitions.event_webhook_settings.required[11]: click
definitions.event_webhook_settings.required[12]: dropped
definitions.event_webhook_settings.title: 'Webhooks: Event Webhook Settings'
definitions.event_webhook_settings.type: object
definitions.global:ErrorResponse.example.errors.length: 1
definitions.global:ErrorResponse.example.errors[0].field: field_name
definitions.global:ErrorResponse.example.errors[0].message: Some message here
definitions.global:ErrorResponse.properties.errors.items.properties.field.description: The
  field that generated the error.
definitions.global:ErrorResponse.properties.errors.items.properties.field.type.length: 2
definitions.global:ErrorResponse.properties.errors.items.properties.field.type[0]: string
definitions.global:ErrorResponse.properties.errors.items.properties.field.type[1]: "null"
definitions.global:ErrorResponse.properties.errors.items.properties.message.description: The
  error message.
definitions.global:ErrorResponse.properties.errors.items.properties.message.type: string
definitions.global:ErrorResponse.properties.errors.items.required.length: 1
definitions.global:ErrorResponse.properties.errors.items.required[0]: message
definitions.global:ErrorResponse.properties.errors.items.type: object
definitions.global:ErrorResponse.properties.errors.type: array
definitions.global:ErrorResponse.title: 'Global: Error Response'
definitions.global:ErrorResponse.type: object
definitions.global:empty_request.title: 'Global: Request Empty Body'
definitions.global:empty_request.type: "null"
definitions.global:id.title: 'Global: ID'
definitions.global:id.type: integer
definitions.google_analytics_settings.example.enabled: true
definitions.google_analytics_settings.example.utm_campaign: website
definitions.google_analytics_settings.example.utm_content: ""
definitions.google_analytics_settings.example.utm_medium: email
definitions.google_analytics_settings.example.utm_source: sendgrid.com
definitions.google_analytics_settings.example.utm_term: ""
definitions.google_analytics_settings.properties.enabled.description: Indicates if
  Google Analytics is enabled.
definitions.google_analytics_settings.properties.enabled.type: boolean
definitions.google_analytics_settings.properties.utm_campaign.description: The name
  of the campaign.
definitions.google_analytics_settings.properties.utm_campaign.type: string
definitions.google_analytics_settings.properties.utm_content.description: Used to
  differentiate ads
definitions.google_analytics_settings.properties.utm_content.type: string
definitions.google_analytics_settings.properties.utm_medium.description: Name of the
  marketing medium (e.g. "Email").
definitions.google_analytics_settings.properties.utm_medium.type: string
definitions.google_analytics_settings.properties.utm_source.description: 'Name of
  the referrer source. '
definitions.google_analytics_settings.properties.utm_source.type: string
definitions.google_analytics_settings.properties.utm_term.description: Any paid keywords.
definitions.google_analytics_settings.properties.utm_term.type: string
definitions.google_analytics_settings.title: 'Settings: Google Analytics'
definitions.google_analytics_settings.type: object
definitions.ip_pool.properties.name.description: The name of the IP pool.
definitions.ip_pool.properties.name.maxLength: 64
definitions.ip_pool.properties.name.type: string
definitions.ip_pool.required.length: 1
definitions.ip_pool.required[0]: name
definitions.ip_pool.title: 'IP Pools: Pool'
definitions.ip_pool.type: object
definitions.ip_warmup_response.example.length: 1
definitions.ip_warmup_response.example[0].ip: 0.0.0.0
definitions.ip_warmup_response.example[0].start_date: 1.409616e+09
definitions.ip_warmup_response.items.properties.ip.description: The IP address.
definitions.ip_warmup_response.items.properties.ip.type: string
definitions.ip_warmup_response.items.properties.start_date.description: A Unix timestamp
  indicating when the IP address was entered into warmup mode.
definitions.ip_warmup_response.items.properties.start_date.type: integer
definitions.ip_warmup_response.items.required.length: 2
definitions.ip_warmup_response.items.required[0]: ip
definitions.ip_warmup_response.items.required[1]: start_date
definitions.ip_warmup_response.items.type: object
definitions.ip_warmup_response.title: 'IP Warmup: IP'
definitions.ip_warmup_response.type: array
definitions.ip_whitelabel.example.a_record.data: 192.168.1.1
definitions.ip_whitelabel.example.a_record.host: o1.email.example.com
definitions.ip_whitelabel.example.a_record.type: a
definitions.ip_whitelabel.example.a_record.valid: true
definitions.ip_whitelabel.example.domain: example.com
definitions.ip_whitelabel.example.id: 1
definitions.ip_whitelabel.example.ip: 192.168.1.1
definitions.ip_whitelabel.example.legacy: false
definitions.ip_whitelabel.example.rdns: o1.email.example.com
definitions.ip_whitelabel.example.subdomain: email
definitions.ip_whitelabel.example.users.length: 2
definitions.ip_whitelabel.example.users[0].user_id: 7
definitions.ip_whitelabel.example.users[0].username: john@example.com
definitions.ip_whitelabel.example.users[1].user_id: 8
definitions.ip_whitelabel.example.users[1].username: jane@example.com
definitions.ip_whitelabel.example.valid: true
definitions.ip_whitelabel.properties.a_record.properties.data.description: The IP
  address being whitelabeled.
definitions.ip_whitelabel.properties.a_record.properties.data.type: string
definitions.ip_whitelabel.properties.a_record.properties.host.description: This is
  the web address that will be mapped to the IP address.
definitions.ip_whitelabel.properties.a_record.properties.host.type: string
definitions.ip_whitelabel.properties.a_record.properties.type.description: The type
  of DNS record.
definitions.ip_whitelabel.properties.a_record.properties.type.type: string
definitions.ip_whitelabel.properties.a_record.properties.valid.description: Indicates
  if the a_record is valid.
definitions.ip_whitelabel.properties.a_record.properties.valid.type: boolean
definitions.ip_whitelabel.properties.a_record.required.length: 4
definitions.ip_whitelabel.properties.a_record.required[0]: valid
definitions.ip_whitelabel.properties.a_record.required[1]: type
definitions.ip_whitelabel.properties.a_record.required[2]: host
definitions.ip_whitelabel.properties.a_record.required[3]: data
definitions.ip_whitelabel.properties.a_record.type: object
definitions.ip_whitelabel.properties.domain.description: The root, or sending, domain.
definitions.ip_whitelabel.properties.domain.type: string
definitions.ip_whitelabel.properties.id.description: The id of the IP whitelabel.
definitions.ip_whitelabel.properties.id.type: integer
definitions.ip_whitelabel.properties.ip.description: The IP address that this whitelabel
  was created for.
definitions.ip_whitelabel.properties.ip.type: string
definitions.ip_whitelabel.properties.legacy.description: Indicates if this whitelabel
  was created using the legacy whitelabel tool.
definitions.ip_whitelabel.properties.legacy.type: boolean
definitions.ip_whitelabel.properties.rdns.description: The reverse DNS record for
  the IP address. This points to the IP whitelabel subdomain.
definitions.ip_whitelabel.properties.rdns.type: string
definitions.ip_whitelabel.properties.subdomain.description: The subdomain created
  for this IP whitelabel. This is where the rDNS record points.
definitions.ip_whitelabel.properties.subdomain.type: string
definitions.ip_whitelabel.properties.users.description: The users who are able to
  send mail from the IP.
definitions.ip_whitelabel.properties.users.items.properties.user_id.description: The
  ID of the user who can send mail from this IP.
definitions.ip_whitelabel.properties.users.items.properties.user_id.type: integer
definitions.ip_whitelabel.properties.users.items.properties.username.description: The
  username of the user who can send mail from this IP.
definitions.ip_whitelabel.properties.users.items.properties.username.type: string
definitions.ip_whitelabel.properties.users.items.required.length: 2
definitions.ip_whitelabel.properties.users.items.required[0]: username
definitions.ip_whitelabel.properties.users.items.required[1]: user_id
definitions.ip_whitelabel.properties.users.items.type: object
definitions.ip_whitelabel.properties.users.type: array
definitions.ip_whitelabel.properties.valid.description: Indicates if this is a valid
  whitelabel.
definitions.ip_whitelabel.properties.valid.type: boolean
definitions.ip_whitelabel.required.length: 9
definitions.ip_whitelabel.required[0]: id
definitions.ip_whitelabel.required[1]: ip
definitions.ip_whitelabel.required[2]: rdns
definitions.ip_whitelabel.required[3]: users
definitions.ip_whitelabel.required[4]: subdomain
definitions.ip_whitelabel.required[5]: domain
definitions.ip_whitelabel.required[6]: valid
definitions.ip_whitelabel.required[7]: legacy
definitions.ip_whitelabel.required[8]: a_record
definitions.ip_whitelabel.title: Whitelabel - IPs
definitions.ip_whitelabel.type: object
definitions.link_whitelabel.properties.default.description: Indicates if this is the
  default link whitelabel.
definitions.link_whitelabel.properties.default.enum.length: 2
definitions.link_whitelabel.properties.default.enum[0]: true
definitions.link_whitelabel.properties.default.enum[1]: false
definitions.link_whitelabel.properties.default.type: boolean
definitions.link_whitelabel.properties.dns.description: The DNS records generated
  for this link whitelabel.
definitions.link_whitelabel.properties.dns.properties.domain_cname.description: The
  DNS record generated to point to your link whitelabel subdomain.
definitions.link_whitelabel.properties.dns.properties.domain_cname.properties.data.description: The
  domain that the DNS record points to.
definitions.link_whitelabel.properties.dns.properties.domain_cname.properties.data.type: string
definitions.link_whitelabel.properties.dns.properties.domain_cname.properties.host.description: The
  domain that this whitelabel will use when whitelabeling the links in your email.
definitions.link_whitelabel.properties.dns.properties.domain_cname.properties.host.type: string
definitions.link_whitelabel.properties.dns.properties.domain_cname.properties.type.description: The
  type of DNS record that was generate.
definitions.link_whitelabel.properties.dns.properties.domain_cname.properties.type.enum.length: 3
definitions.link_whitelabel.properties.dns.properties.domain_cname.properties.type.enum[0]: cname
definitions.link_whitelabel.properties.dns.properties.domain_cname.properties.type.enum[1]: txt
definitions.link_whitelabel.properties.dns.properties.domain_cname.properties.type.enum[2]: mx
definitions.link_whitelabel.properties.dns.properties.domain_cname.properties.type.type: string
definitions.link_whitelabel.properties.dns.properties.domain_cname.properties.valid.description: Indicates
  if the DNS record is valid.
definitions.link_whitelabel.properties.dns.properties.domain_cname.properties.valid.enum.length: 2
definitions.link_whitelabel.properties.dns.properties.domain_cname.properties.valid.enum[0]: true
definitions.link_whitelabel.properties.dns.properties.domain_cname.properties.valid.enum[1]: false
definitions.link_whitelabel.properties.dns.properties.domain_cname.properties.valid.type: boolean
definitions.link_whitelabel.properties.dns.properties.domain_cname.required.length: 4
definitions.link_whitelabel.properties.dns.properties.domain_cname.required[0]: valid
definitions.link_whitelabel.properties.dns.properties.domain_cname.required[1]: type
definitions.link_whitelabel.properties.dns.properties.domain_cname.required[2]: host
definitions.link_whitelabel.properties.dns.properties.domain_cname.required[3]: data
definitions.link_whitelabel.properties.dns.properties.domain_cname.type: object
definitions.link_whitelabel.properties.dns.properties.owner_cname.description: The
  DNS record generated to verify who created the link whitelabel.
definitions.link_whitelabel.properties.dns.properties.owner_cname.properties.data.description: The
  domain that the DNS record points to.
definitions.link_whitelabel.properties.dns.properties.owner_cname.properties.data.type: string
definitions.link_whitelabel.properties.dns.properties.owner_cname.properties.host.description: Used
  to verify the link whitelabel. The subdomain of this domain is the user id of the
  user who created the link whitelabel.
definitions.link_whitelabel.properties.dns.properties.owner_cname.properties.host.type: string
definitions.link_whitelabel.properties.dns.properties.owner_cname.properties.type.description: The
  type of DNS record generated.
definitions.link_whitelabel.properties.dns.properties.owner_cname.properties.type.enum.length: 3
definitions.link_whitelabel.properties.dns.properties.owner_cname.properties.type.enum[0]: cname
definitions.link_whitelabel.properties.dns.properties.owner_cname.properties.type.enum[1]: txt
definitions.link_whitelabel.properties.dns.properties.owner_cname.properties.type.enum[2]: mx
definitions.link_whitelabel.properties.dns.properties.owner_cname.properties.type.type: string
definitions.link_whitelabel.properties.dns.properties.owner_cname.properties.valid.description: Indicates
  if the DNS record is valid.
definitions.link_whitelabel.properties.dns.properties.owner_cname.properties.valid.enum.length: 2
definitions.link_whitelabel.properties.dns.properties.owner_cname.properties.valid.enum[0]: true
definitions.link_whitelabel.properties.dns.properties.owner_cname.properties.valid.enum[1]: false
definitions.link_whitelabel.properties.dns.properties.owner_cname.properties.valid.type: boolean
definitions.link_whitelabel.properties.dns.properties.owner_cname.required.length: 3
definitions.link_whitelabel.properties.dns.properties.owner_cname.required[0]: valid
definitions.link_whitelabel.properties.dns.properties.owner_cname.required[1]: host
definitions.link_whitelabel.properties.dns.properties.owner_cname.required[2]: data
definitions.link_whitelabel.properties.dns.properties.owner_cname.type: object
definitions.link_whitelabel.properties.dns.required.length: 1
definitions.link_whitelabel.properties.dns.required[0]: domain_cname
definitions.link_whitelabel.properties.dns.type: object
definitions.link_whitelabel.properties.domain.description: The root domain for this
  link whitelabel.
definitions.link_whitelabel.properties.domain.type: string
definitions.link_whitelabel.properties.id.description: The id of the link whitelabel.
definitions.link_whitelabel.properties.id.type: integer
definitions.link_whitelabel.properties.legacy.description: Indicates if this link
  whitelabel was created using the legacy whitelabel tool.
definitions.link_whitelabel.properties.legacy.enum.length: 2
definitions.link_whitelabel.properties.legacy.enum[0]: true
definitions.link_whitelabel.properties.legacy.enum[1]: false
definitions.link_whitelabel.properties.legacy.type: boolean
definitions.link_whitelabel.properties.subdomain.description: The subdomain used to
  generate the DNS records for this link whitelabel. This subdomain must be different
  from the subdomain used for your domain whitelabel.
definitions.link_whitelabel.properties.subdomain.type: string
definitions.link_whitelabel.properties.user_id.description: The id of the user that
  this whitelabel is associated with.
definitions.link_whitelabel.properties.user_id.type: integer
definitions.link_whitelabel.properties.username.description: The username of the account
  that this link whitelabel is associated with.
definitions.link_whitelabel.properties.username.type: string
definitions.link_whitelabel.properties.valid.description: Indicates if this link whitelabel
  is valid.
definitions.link_whitelabel.properties.valid.enum.length: 2
definitions.link_whitelabel.properties.valid.enum[0]: true
definitions.link_whitelabel.properties.valid.enum[1]: false
definitions.link_whitelabel.properties.valid.type: boolean
definitions.link_whitelabel.required.length: 9
definitions.link_whitelabel.required[0]: id
definitions.link_whitelabel.required[1]: domain
definitions.link_whitelabel.required[2]: subdomain
definitions.link_whitelabel.required[3]: username
definitions.link_whitelabel.required[4]: user_id
definitions.link_whitelabel.required[5]: default
definitions.link_whitelabel.required[6]: valid
definitions.link_whitelabel.required[7]: legacy
definitions.link_whitelabel.required[8]: dns
definitions.link_whitelabel.title: Whitelabel - Links
definitions.link_whitelabel.type: object
definitions.mail_batch_id.example.batch_id: HkJ5yLYULb7Rj8GKSx7u025ouWVlMgAi
definitions.mail_batch_id.properties.batch_id.pattern: ^[a-zA-Z0-9\-\_]
definitions.mail_batch_id.properties.batch_id.type: string
definitions.mail_batch_id.required.length: 1
definitions.mail_batch_id.required[0]: batch_id
definitions.mail_batch_id.title: 'Mail: Batch ID'
definitions.mail_batch_id.type: object
definitions.mail_settings_address_whitelabel.example.enabled: true
definitions.mail_settings_address_whitelabel.example.list.length: 2
definitions.mail_settings_address_whitelabel.example.list[0]: email1@example.com
definitions.mail_settings_address_whitelabel.example.list[1]: example.com
definitions.mail_settings_address_whitelabel.properties.enabled.description: 'Indicates
  if you have an email address whitelist enabled. '
definitions.mail_settings_address_whitelabel.properties.enabled.type: boolean
definitions.mail_settings_address_whitelabel.properties.list.description: All email
  address that are currently on the whitelist.
definitions.mail_settings_address_whitelabel.properties.list.items.type: string
definitions.mail_settings_address_whitelabel.properties.list.type: array
definitions.mail_settings_address_whitelabel.title: 'Mail Settings: Address Whitelabel'
definitions.mail_settings_address_whitelabel.type: object
definitions.mail_settings_bcc.example.email: example@example.com
definitions.mail_settings_bcc.example.enabled: false
definitions.mail_settings_bcc.properties.email.description: The email address that
  will be sent a blind carbon copy.
definitions.mail_settings_bcc.properties.email.type: string
definitions.mail_settings_bcc.properties.enabled.description: Indicates if the BCC
  setting is enabled.
definitions.mail_settings_bcc.properties.enabled.type: boolean
definitions.mail_settings_bcc.title: 'Mail Settings: BCC'
definitions.mail_settings_bcc.type: object
definitions.mail_settings_bounce_purge.example.enabled: false
definitions.mail_settings_bounce_purge.example.soft_bounces: 1234
definitions.mail_settings_bounce_purge.properties.enabled.description: Indicates if
  the bounce purge mail setting is enabled.
definitions.mail_settings_bounce_purge.properties.enabled.type: boolean
definitions.mail_settings_bounce_purge.properties.hard_bounces.description: The number
  of days, after which SendGrid will purge all contacts from your hard bounces suppression
  lists.
definitions.mail_settings_bounce_purge.properties.hard_bounces.type.length: 2
definitions.mail_settings_bounce_purge.properties.hard_bounces.type[0]: integer
definitions.mail_settings_bounce_purge.properties.hard_bounces.type[1]: "null"
definitions.mail_settings_bounce_purge.properties.soft_bounces.description: The number
  of days, after which SendGrid will purge all contacts from your soft bounces suppression
  lists.
definitions.mail_settings_bounce_purge.properties.soft_bounces.type.length: 2
definitions.mail_settings_bounce_purge.properties.soft_bounces.type[0]: integer
definitions.mail_settings_bounce_purge.properties.soft_bounces.type[1]: "null"
definitions.mail_settings_bounce_purge.title: 'Mail Settings: Bounce Purge'
definitions.mail_settings_bounce_purge.type: object
definitions.mail_settings_footer.example.enabled: true
definitions.mail_settings_footer.example.html_content: Example HTML content
definitions.mail_settings_footer.example.plain_content: Example plain content
definitions.mail_settings_footer.properties.enabled.description: Indicates if the
  Footer mail setting is currently enabled.
definitions.mail_settings_footer.properties.enabled.type: boolean
definitions.mail_settings_footer.properties.html_content.description: The custom HTML
  content of your email footer.
definitions.mail_settings_footer.properties.html_content.type: string
definitions.mail_settings_footer.properties.plain_content.description: The plain text
  content of your email footer.
definitions.mail_settings_footer.properties.plain_content.type: string
definitions.mail_settings_footer.title: 'Mail Settings: Footer'
definitions.mail_settings_footer.type: object
definitions.mail_settings_forward_bounce.example.enabled: false
definitions.mail_settings_forward_bounce.properties.email.description: The email address
  that you would like your bounce reports forwarded to.
definitions.mail_settings_forward_bounce.properties.email.type.length: 2
definitions.mail_settings_forward_bounce.properties.email.type[0]: string
definitions.mail_settings_forward_bounce.properties.email.type[1]: "null"
definitions.mail_settings_forward_bounce.properties.enabled.description: Indicates
  if the bounce forwarding mail setting is enabled.
definitions.mail_settings_forward_bounce.properties.enabled.type: boolean
definitions.mail_settings_forward_bounce.title: 'Mail Settings: Forward Bounce'
definitions.mail_settings_forward_bounce.type: object
definitions.mail_settings_forward_spam.example.email: ""
definitions.mail_settings_forward_spam.example.enabled: true
definitions.mail_settings_forward_spam.properties.email.description: The email address
  where you would like the spam reports to be forwarded.
definitions.mail_settings_forward_spam.properties.email.type: string
definitions.mail_settings_forward_spam.properties.enabled.description: Indicates if
  the Forward Spam setting is enabled.
definitions.mail_settings_forward_spam.properties.enabled.type: boolean
definitions.mail_settings_forward_spam.title: 'Mail Settings: Forward Spam'
definitions.mail_settings_forward_spam.type: object
definitions.mail_settings_patch.example.email: email@example.com
definitions.mail_settings_patch.example.enabled: true
definitions.mail_settings_patch.properties.email.description: The email address of
  the recipient.
definitions.mail_settings_patch.properties.email.type: string
definitions.mail_settings_patch.properties.enabled.description: Indicates if the mail
  setting is enabled.
definitions.mail_settings_patch.properties.enabled.type: boolean
definitions.mail_settings_patch.title: 'Mail Settings: Patch'
definitions.mail_settings_patch.type: object
definitions.mail_settings_spam_check.example.enabled: false
definitions.mail_settings_spam_check.example.max_score: 6
definitions.mail_settings_spam_check.example.url: http://example.com
definitions.mail_settings_spam_check.properties.enabled.description: Indicates if
  your Spam Checker mail setting is enabled.
definitions.mail_settings_spam_check.properties.enabled.type: boolean
definitions.mail_settings_spam_check.properties.max_score.default: 5
definitions.mail_settings_spam_check.properties.max_score.description: The spam threshold.
  Can range from 1 to 10. The lower the number, the more strict the filtering.
definitions.mail_settings_spam_check.properties.max_score.maximum: 10
definitions.mail_settings_spam_check.properties.max_score.minimum: 1
definitions.mail_settings_spam_check.properties.max_score.type: integer
definitions.mail_settings_spam_check.properties.url.description: The inbound parse
  URL where you would like the spam messages to be sent to.
definitions.mail_settings_spam_check.properties.url.type: string
definitions.mail_settings_spam_check.required.length: 1
definitions.mail_settings_spam_check.required[0]: enabled
definitions.mail_settings_spam_check.title: 'Mail Settings: Spam Check'
definitions.mail_settings_spam_check.type: object
definitions.mail_settings_template.example.enabled: false
definitions.mail_settings_template.example.html_content: |
  <p><% body %>Example</p>
definitions.mail_settings_template.properties.enabled.description: Indicates if the
  legacy email template setting is enabled.
definitions.mail_settings_template.properties.enabled.type: boolean
definitions.mail_settings_template.properties.html_content.description: The HTML content
  that you want to use for your legacy email template.
definitions.mail_settings_template.properties.html_content.type: string
definitions.mail_settings_template.title: 'Mail Settings: Template'
definitions.mail_settings_template.type: object
definitions.monitor.example.email: example@example.com
definitions.monitor.example.frequency: 50000
definitions.monitor.properties.email.description: The email address to send emails
  at the frequency specified for monitoring.
definitions.monitor.properties.email.format: email
definitions.monitor.properties.email.type: string
definitions.monitor.properties.frequency.description: 'The frequency by which to send
  the emails. An email will be sent, every time your subuser sends this {frequency}
  emails. '
definitions.monitor.properties.frequency.type: number
definitions.monitor.required.length: 2
definitions.monitor.required[0]: email
definitions.monitor.required[1]: frequency
definitions.monitor.title: Create monitor settings request
definitions.monitor.type: object
definitions.parse-setting.example.hostname: myhostname.com
definitions.parse-setting.example.send_raw: true
definitions.parse-setting.example.spam_check: false
definitions.parse-setting.example.url: http://email.myhostname.com
definitions.parse-setting.properties.hostname.description: A specific and unique domain
  or subdomain that you have created to use exclusively to parse your incoming email.
  For example, parse.yourdomain.com.
definitions.parse-setting.properties.hostname.type: string
definitions.parse-setting.properties.send_raw.description: 'Indicates if you would
  like SendGrid to post the original MIME-type content of your parsed email. When
  this parameter is set to "false", SendGrid will send a JSON payload of the content
  of your email. '
definitions.parse-setting.properties.send_raw.type: boolean
definitions.parse-setting.properties.spam_check.description: Indicates if you would
  like SendGrid to check the content parsed from your emails for spam before POSTing
  them to your domain.
definitions.parse-setting.properties.spam_check.type: boolean
definitions.parse-setting.properties.url.description: The public URL where you would
  like SendGrid to POST the data parsed from your email. Any emails sent with the
  given hostname provided (whose MX records have been updated to point to SendGrid)
  will be parsed and POSTed to this URL.
definitions.parse-setting.properties.url.type: string
definitions.parse-setting.title: Parse Setting
definitions.parse-setting.type: object
definitions.partner_settings_new_relic.properties.enable_subuser_statistics.description: Indicates
  if your subuser statistics will be sent to your New Relic Dashboard.
definitions.partner_settings_new_relic.properties.enable_subuser_statistics.type: boolean
definitions.partner_settings_new_relic.properties.enabled.description: 'Indicates
  if this setting is enabled. '
definitions.partner_settings_new_relic.properties.enabled.type: boolean
definitions.partner_settings_new_relic.properties.license_key.description: The license
  key provided with your New Relic account.
definitions.partner_settings_new_relic.properties.license_key.type: string
definitions.partner_settings_new_relic.required.length: 2
definitions.partner_settings_new_relic.required[0]: enabled
definitions.partner_settings_new_relic.required[1]: license_key
definitions.partner_settings_new_relic.title: 'Partner Settings: New Relic'
definitions.partner_settings_new_relic.type: object
definitions.senderID.example.address: 123 Elm St.
definitions.senderID.example.address_2: Apt. 456
definitions.senderID.example.city: Denver
definitions.senderID.example.country: United States
definitions.senderID.example.created_at: 1.4498721e+09
definitions.senderID.example.from.email: from@example.com
definitions.senderID.example.from.name: Example INC
definitions.senderID.example.id: 1
definitions.senderID.example.locked: false
definitions.senderID.example.nickname: My Sender ID
definitions.senderID.example.reply_to.email: replyto@example.com
definitions.senderID.example.reply_to.name: Example INC
definitions.senderID.example.state: Colorado
definitions.senderID.example.updated_at: 1.4498721e+09
definitions.senderID.example.verified: true
definitions.senderID.example.zip: "80202"
definitions.senderID.properties.address.description: The physical address of the sender
  identity.
definitions.senderID.properties.address.type: string
definitions.senderID.properties.address_2.description: Additional sender identity
  address information.
definitions.senderID.properties.address_2.type: string
definitions.senderID.properties.city.description: The city of the sender identity.
definitions.senderID.properties.city.type: string
definitions.senderID.properties.country.description: The country of the sender identity.
definitions.senderID.properties.country.type: string
definitions.senderID.properties.created_at.description: The time the sender identity
  was created.
definitions.senderID.properties.created_at.type: integer
definitions.senderID.properties.from.properties.email.description: This is where the
  email will appear to originate from for your recipient
definitions.senderID.properties.from.properties.email.type: string
definitions.senderID.properties.from.properties.name.description: This is the name
  appended to the from email field. IE - Your name or company name.
definitions.senderID.properties.from.properties.name.type: string
definitions.senderID.properties.from.required.length: 1
definitions.senderID.properties.from.required[0]: email
definitions.senderID.properties.from.type: object
definitions.senderID.properties.id.description: The unique identifier of the sender
  identity.
definitions.senderID.properties.id.type: integer
definitions.senderID.properties.locked.description: A sender identity is locked when
  it is associated to a campaign in the Draft, Scheduled, or In Progress status. You
  cannot update or delete a locked sender identity.
definitions.senderID.properties.locked.type: boolean
definitions.senderID.properties.nickname.description: A nickname for the sender identity.
  Not used for sending.
definitions.senderID.properties.nickname.type: string
definitions.senderID.properties.reply_to.properties.email.description: This is the
  email that your recipient will reply to.
definitions.senderID.properties.reply_to.properties.email.type: string
definitions.senderID.properties.reply_to.properties.name.description: This is the
  name appended to the reply to email field. IE - Your name or company name.
definitions.senderID.properties.reply_to.properties.name.type: string
definitions.senderID.properties.reply_to.type: object
definitions.senderID.properties.state.description: The state of the sender identity.
definitions.senderID.properties.state.type: string
definitions.senderID.properties.updated_at.description: The time the sender identity
  was last updated.
definitions.senderID.properties.updated_at.type: integer
definitions.senderID.properties.verified.description: If the sender identity is verified
  or not. Only verified sender identities can be used to send email.
definitions.senderID.properties.verified.type: boolean
definitions.senderID.properties.zip.description: The zipcode of the sender identity.
definitions.senderID.properties.zip.type: string
definitions.senderID.required.length: 4
definitions.senderID.required[0]: nickname
definitions.senderID.required[1]: address
definitions.senderID.required[2]: city
definitions.senderID.required[3]: country
definitions.senderID.title: Sender ID
definitions.senderID.type: object
definitions.stats.items.properties.date.description: The date that the statistics
  were gathered.
definitions.stats.items.properties.date.type: string
definitions.stats.items.properties.stats.description: The list of statistics.
definitions.stats.items.properties.stats.items.properties.metrics.description: The
  individual events and their statistics.
definitions.stats.items.properties.stats.items.properties.metrics.properties.blocks.description: The
  number of emails that were not allowed to be delivered by ISPs.
definitions.stats.items.properties.stats.items.properties.metrics.properties.blocks.type: integer
definitions.stats.items.properties.stats.items.properties.metrics.properties.bounce_drops.description: The
  number of emails that were dropped because of a bounce.
definitions.stats.items.properties.stats.items.properties.metrics.properties.bounce_drops.type: integer
definitions.stats.items.properties.stats.items.properties.metrics.properties.bounces.description: The
  number of emails that bounced instead of being delivered.
definitions.stats.items.properties.stats.items.properties.metrics.properties.bounces.type: integer
definitions.stats.items.properties.stats.items.properties.metrics.properties.clicks.description: The
  number of links that were clicked in your emails.
definitions.stats.items.properties.stats.items.properties.metrics.properties.clicks.type: integer
definitions.stats.items.properties.stats.items.properties.metrics.properties.deferred.description: 'The
  number of emails that temporarily could not be delivered. '
definitions.stats.items.properties.stats.items.properties.metrics.properties.deferred.type: integer
definitions.stats.items.properties.stats.items.properties.metrics.properties.delivered.description: The
  number of emails SendGrid was able to confirm were actually delivered to a recipient.
definitions.stats.items.properties.stats.items.properties.metrics.properties.delivered.type: integer
definitions.stats.items.properties.stats.items.properties.metrics.properties.invalid_emails.description: The
  number of recipients who had malformed email addresses or whose mail provider reported
  the address as invalid.
definitions.stats.items.properties.stats.items.properties.metrics.properties.invalid_emails.type: integer
definitions.stats.items.properties.stats.items.properties.metrics.properties.opens.description: The
  total number of times your emails were opened by recipients.
definitions.stats.items.properties.stats.items.properties.metrics.properties.opens.type: integer
definitions.stats.items.properties.stats.items.properties.metrics.properties.processed.description: Requests
  from your website, application, or mail client via SMTP Relay or the API that SendGrid
  processed.
definitions.stats.items.properties.stats.items.properties.metrics.properties.processed.type: integer
definitions.stats.items.properties.stats.items.properties.metrics.properties.requests.description: The
  number of emails that were requested to be delivered.
definitions.stats.items.properties.stats.items.properties.metrics.properties.requests.type: integer
definitions.stats.items.properties.stats.items.properties.metrics.properties.spam_report_drops.description: The
  number of emails that were dropped due to a recipient previously marking your emails
  as spam.
definitions.stats.items.properties.stats.items.properties.metrics.properties.spam_report_drops.type: integer
definitions.stats.items.properties.stats.items.properties.metrics.properties.spam_reports.description: The
  number of recipients who marked your email as spam.
definitions.stats.items.properties.stats.items.properties.metrics.properties.spam_reports.type: integer
definitions.stats.items.properties.stats.items.properties.metrics.properties.unique_clicks.description: The
  number of unique recipients who clicked links in your emails.
definitions.stats.items.properties.stats.items.properties.metrics.properties.unique_clicks.type: integer
definitions.stats.items.properties.stats.items.properties.metrics.properties.unique_opens.description: The
  number of unique recipients who opened your emails.
definitions.stats.items.properties.stats.items.properties.metrics.properties.unique_opens.type: integer
definitions.stats.items.properties.stats.items.properties.metrics.properties.unsubscribe_drops.description: The
  number of emails dropped due to a recipient unsubscribing from your emails.
definitions.stats.items.properties.stats.items.properties.metrics.properties.unsubscribe_drops.type: integer
definitions.stats.items.properties.stats.items.properties.metrics.properties.unsubscribes.description: The
  number of recipients who unsubscribed from your emails.
definitions.stats.items.properties.stats.items.properties.metrics.properties.unsubscribes.type: integer
definitions.stats.items.properties.stats.items.properties.metrics.type: object
definitions.stats.items.properties.stats.items.properties.name.description: The name
  of the specific segmentation.
definitions.stats.items.properties.stats.items.properties.name.type: string
definitions.stats.items.properties.stats.items.properties.type.description: The type
  of segmentation.
definitions.stats.items.properties.stats.items.properties.type.type: string
definitions.stats.items.properties.stats.items.type: object
definitions.stats.items.properties.stats.type: array
definitions.stats.items.type: object
definitions.stats.title: Stats
definitions.stats.type: array
definitions.subscription_tracking_settings.properties.enabled.description: Indicates
  if subscription tracking is enabled.
definitions.subscription_tracking_settings.properties.enabled.type: boolean
definitions.subscription_tracking_settings.properties.html_content.description: 'The
  information and HTML for your unsubscribe link. '
definitions.subscription_tracking_settings.properties.html_content.type: string
definitions.subscription_tracking_settings.properties.landing.description: The HTML
  that will be displayed on the page that your customers will see after clicking unsubscribe,
  hosted on SendGrid’s server.
definitions.subscription_tracking_settings.properties.landing.type: string
definitions.subscription_tracking_settings.properties.plain_content.description: The
  information in plain text for your unsubscribe link. You should have the “<% %>”
  tag in your content, otherwise the user will have no URL for unsubscribing.
definitions.subscription_tracking_settings.properties.plain_content.type: string
definitions.subscription_tracking_settings.properties.replace.description: Your custom
  defined replacement tag for your templates. Use this tag to place your unsubscribe
  content anywhere in your emailtemplate.
definitions.subscription_tracking_settings.properties.replace.type: string
definitions.subscription_tracking_settings.properties.url.description: The URL where
  you would like your users sent to unsubscribe.
definitions.subscription_tracking_settings.properties.url.type: string
definitions.subscription_tracking_settings.title: 'Settings: Subscription Tracking'
definitions.subscription_tracking_settings.type: object
definitions.subuser.example.disabled: false
definitions.subuser.example.email: example@example.com
definitions.subuser.example.id: 1234
definitions.subuser.example.username: example_subuser
definitions.subuser.properties.disabled.description: Whether or not the user is enabled
  or disabled.
definitions.subuser.properties.disabled.type: boolean
definitions.subuser.properties.email.description: The email address to contact this
  subuser.
definitions.subuser.properties.email.format: email
definitions.subuser.properties.email.type: string
definitions.subuser.properties.id.description: The ID of this subuser.
definitions.subuser.properties.id.type: number
definitions.subuser.properties.username.description: The name by which this subuser
  will be referred.
definitions.subuser.properties.username.type: string
definitions.subuser.required.length: 4
definitions.subuser.required[0]: disabled
definitions.subuser.required[1]: id
definitions.subuser.required[2]: username
definitions.subuser.required[3]: email
definitions.subuser.title: List all Subusers for a parent response
definitions.subuser.type: object
definitions.subuser_post.example.authorization_token: ""
definitions.subuser_post.example.credit_allocation.type: unlimited
definitions.subuser_post.example.email: example@example.com
definitions.subuser_post.example.signup_session_token: ""
definitions.subuser_post.example.user_id: 1234
definitions.subuser_post.example.username: example_subuser
definitions.subuser_post.properties.authorization_token.type: string
definitions.subuser_post.properties.credit_allocation.properties.type.type: string
definitions.subuser_post.properties.credit_allocation.type: object
definitions.subuser_post.properties.email.description: The email address for this
  subuser.
definitions.subuser_post.properties.email.format: email
definitions.subuser_post.properties.email.type: string
definitions.subuser_post.properties.signup_session_token.type: string
definitions.subuser_post.properties.user_id.description: The user ID for this subuser.
definitions.subuser_post.properties.user_id.type: number
definitions.subuser_post.properties.username.description: The username of the subuser.
definitions.subuser_post.properties.username.type: string
definitions.subuser_post.required.length: 3
definitions.subuser_post.required[0]: username
definitions.subuser_post.required[1]: user_id
definitions.subuser_post.required[2]: email
definitions.subuser_post.title: Subuser::POST
definitions.subuser_post.type: object
definitions.subuser_stats.properties.date.description: The date the statistics were
  gathered.
definitions.subuser_stats.properties.date.type: string
definitions.subuser_stats.properties.stats.description: The list of statistics.
definitions.subuser_stats.properties.stats.items.properties.first_name.description: The
  first name of the subuser.
definitions.subuser_stats.properties.stats.items.properties.first_name.type: string
definitions.subuser_stats.properties.stats.items.properties.last_name.description: The
  last name of the subuser.
definitions.subuser_stats.properties.stats.items.properties.last_name.type: string
definitions.subuser_stats.properties.stats.items.properties.metrics.properties.blocks.description: The
  number of emails that were not allowed to be delivered by ISPs.
definitions.subuser_stats.properties.stats.items.properties.metrics.properties.blocks.type: integer
definitions.subuser_stats.properties.stats.items.properties.metrics.properties.bounce_drops.description: The
  number of emails that were dropped because of a bounce.
definitions.subuser_stats.properties.stats.items.properties.metrics.properties.bounce_drops.type: integer
definitions.subuser_stats.properties.stats.items.properties.metrics.properties.bounces.description: The
  number of emails that bounced instead of being delivered.
definitions.subuser_stats.properties.stats.items.properties.metrics.properties.bounces.type: integer
definitions.subuser_stats.properties.stats.items.properties.metrics.properties.clicks.description: The
  number of links that were clicked in your emails.
definitions.subuser_stats.properties.stats.items.properties.metrics.properties.clicks.type: integer
definitions.subuser_stats.properties.stats.items.properties.metrics.properties.deferred.description: The
  number of emails that temporarily could not be delivered.
definitions.subuser_stats.properties.stats.items.properties.metrics.properties.deferred.type: integer
definitions.subuser_stats.properties.stats.items.properties.metrics.properties.delivered.description: The
  number of emails SendGrid was able to confirm were actually delivered to a recipient.
definitions.subuser_stats.properties.stats.items.properties.metrics.properties.delivered.type: integer
definitions.subuser_stats.properties.stats.items.properties.metrics.properties.invalid_emails.description: The
  number of recipients who had malformed email addresses or whose mail provider reported
  the address as invalid.
definitions.subuser_stats.properties.stats.items.properties.metrics.properties.invalid_emails.type: integer
definitions.subuser_stats.properties.stats.items.properties.metrics.properties.opens.description: The
  total number of times your emails were opened by recipients.
definitions.subuser_stats.properties.stats.items.properties.metrics.properties.opens.type: integer
definitions.subuser_stats.properties.stats.items.properties.metrics.properties.processed.description: Requests
  from your website, application, or mail client via SMTP Relay or the API that SendGrid
  processed.
definitions.subuser_stats.properties.stats.items.properties.metrics.properties.processed.type: integer
definitions.subuser_stats.properties.stats.items.properties.metrics.properties.requests.description: The
  number of emails that were requested to be delivered.
definitions.subuser_stats.properties.stats.items.properties.metrics.properties.requests.type: integer
definitions.subuser_stats.properties.stats.items.properties.metrics.properties.spam_report_drops.description: The
  number of emails that were dropped due to a recipient previously marking your emails
  as spam.
definitions.subuser_stats.properties.stats.items.properties.metrics.properties.spam_report_drops.type: integer
definitions.subuser_stats.properties.stats.items.properties.metrics.properties.spam_reports.description: The
  number of recipients who marked your email as spam.
definitions.subuser_stats.properties.stats.items.properties.metrics.properties.spam_reports.type: integer
definitions.subuser_stats.properties.stats.items.properties.metrics.properties.unique_clicks.description: The
  number of unique recipients who clicked links in your emails.
definitions.subuser_stats.properties.stats.items.properties.metrics.properties.unique_clicks.type: integer
definitions.subuser_stats.properties.stats.items.properties.metrics.properties.unique_opens.description: The
  number of unique recipients who opened your emails.
definitions.subuser_stats.properties.stats.items.properties.metrics.properties.unique_opens.type: integer
definitions.subuser_stats.properties.stats.items.properties.metrics.properties.unsubscribe_drops.description: The
  number of emails dropped due to a recipient unsubscribing from your emails.
definitions.subuser_stats.properties.stats.items.properties.metrics.properties.unsubscribe_drops.type: integer
definitions.subuser_stats.properties.stats.items.properties.metrics.properties.unsubscribes.description: The
  number of recipients who unsubscribed from your emails.
definitions.subuser_stats.properties.stats.items.properties.metrics.properties.unsubscribes.type: integer
definitions.subuser_stats.properties.stats.items.properties.metrics.type: object
definitions.subuser_stats.properties.stats.items.properties.name.description: The
  username of the subuser.
definitions.subuser_stats.properties.stats.items.properties.name.type: string
definitions.subuser_stats.properties.stats.items.properties.type.description: The
  type of account.
definitions.subuser_stats.properties.stats.items.properties.type.type: string
definitions.subuser_stats.properties.stats.items.type: object
definitions.subuser_stats.properties.stats.type: array
definitions.subuser_stats.title: subuser_stats
definitions.subuser_stats.type: object
definitions.suppression_bounce.example.created: 1.2503375e+09
definitions.suppression_bounce.example.email: example@example.com
definitions.suppression_bounce.example.reason: '550 5.1.1 The email account that you
  tried to reach does not exist. Please try double-checking the recipient''s email
  address for typos or unnecessary spaces. Learn more at  https://support.google.com/mail/answer/6596
  o186si2389584ioe.63 - gsmtp '
definitions.suppression_bounce.example.status: 5.1.1
definitions.suppression_bounce.properties.created.description: The unix timestamp
  for when the bounce record was created at SendGrid.
definitions.suppression_bounce.properties.created.type: number
definitions.suppression_bounce.properties.email.type: string
definitions.suppression_bounce.properties.reason.description: The reason for the bounce.
  This typically will be a bounce code, an enhanced code, and a description.
definitions.suppression_bounce.properties.reason.type: string
definitions.suppression_bounce.properties.status.description: Enhanced SMTP bounce
  response
definitions.suppression_bounce.properties.status.type: string
definitions.suppression_bounce.title: 'Suppression: Bounce'
definitions.suppression_bounce.type: object
definitions.suppression_group.properties.description.description: A description of
  the suppression group.
definitions.suppression_group.properties.description.maxLength: 100
definitions.suppression_group.properties.description.type: string
definitions.suppression_group.properties.id.description: The id of the suppression
  group.
definitions.suppression_group.properties.id.type: number
definitions.suppression_group.properties.is_default.default: false
definitions.suppression_group.properties.is_default.description: Indicates if this
  is the default suppression group.
definitions.suppression_group.properties.is_default.type: boolean
definitions.suppression_group.properties.last_email_sent_at.type: "null"
definitions.suppression_group.properties.name.description: The name of the suppression
  group. Each group created by a user must have a unique name.
definitions.suppression_group.properties.name.maxLength: 30
definitions.suppression_group.properties.name.type: string
definitions.suppression_group.required.length: 3
definitions.suppression_group.required[0]: id
definitions.suppression_group.required[1]: name
definitions.suppression_group.required[2]: description
definitions.suppression_group.title: 'Suppressions: Suppression Group'
definitions.suppression_group.type: object
definitions.suppression_group_unsubscribes.allOf.length: 2
definitions.suppression_group_unsubscribes.allOf[0].$ref: '#/definitions/suppression_group'
definitions.suppression_group_unsubscribes.allOf[1].properties.unsubscribes.description: The
  unsubscribes associated with this group.
definitions.suppression_group_unsubscribes.allOf[1].properties.unsubscribes.type: integer
definitions.suppression_group_unsubscribes.allOf[1].required.length: 1
definitions.suppression_group_unsubscribes.allOf[1].required[0]: unsubscribes
definitions.suppression_group_unsubscribes.title: 'Suppressions: Suppression Group
  with Unsubscribes'
definitions.suppression_group_unsubscribes.type: object
definitions.transactional_template.properties.id.description: The ID of the transactional
  template.
definitions.transactional_template.properties.id.type: string
definitions.transactional_template.properties.name.description: The name for the transactional
  template.
definitions.transactional_template.properties.name.maxLength: 100
definitions.transactional_template.properties.name.type: string
definitions.transactional_template.properties.versions.description: The different
  versions of this transactional template.
definitions.transactional_template.properties.versions.items.$ref: '#/definitions/transactional_template_version'
definitions.transactional_template.properties.versions.type: array
definitions.transactional_template.required.length: 2
definitions.transactional_template.required[0]: id
definitions.transactional_template.required[1]: name
definitions.transactional_template.title: 'Transactional Templates: Template'
definitions.transactional_template.type: object
definitions.transactional_template_version.properties.active.description: Set the
  new version as the active version associated with the template. Only one version
  of a template can be active. The first version created for a template will automatically
  be set to Active.
definitions.transactional_template_version.properties.active.enum.length: 2
definitions.transactional_template_version.properties.active.enum[0]: 0
definitions.transactional_template_version.properties.active.enum[1]: 1
definitions.transactional_template_version.properties.active.type: integer
definitions.transactional_template_version.properties.html_content.description: The
  HTML content of the new version. Must include <%body%> tag. Maximum of 1048576 bytes
  allowed for plain content.
definitions.transactional_template_version.properties.html_content.type: string
definitions.transactional_template_version.properties.name.description: Name of the
  new transactional template version.
definitions.transactional_template_version.properties.name.type: string
definitions.transactional_template_version.properties.plain_content.description: Text/plain
  content of the new transactional template version. Must include <%body%> tag. Maximum
  of 1048576 bytes allowed for plain content.
definitions.transactional_template_version.properties.plain_content.type: string
definitions.transactional_template_version.properties.subject.description: Subject
  of the new transactional template version. Must include <%subject%> tag.
definitions.transactional_template_version.properties.subject.type: string
definitions.transactional_template_version.properties.template_id.description: The
  name of the original transactional template.
definitions.transactional_template_version.properties.template_id.type: string
definitions.transactional_template_version.required.length: 6
definitions.transactional_template_version.required[0]: template_id
definitions.transactional_template_version.required[1]: active
definitions.transactional_template_version.required[2]: name
definitions.transactional_template_version.required[3]: html_content
definitions.transactional_template_version.required[4]: plain_content
definitions.transactional_template_version.required[5]: subject
definitions.transactional_template_version.title: 'Transactional Templates: Version'
definitions.transactional_template_version.type: object
definitions.user_profile.example.address: 1451 Larimer Street, 3rd floor
definitions.user_profile.example.address2: ""
definitions.user_profile.example.city: Denver, CO
definitions.user_profile.example.company: SendGrid
definitions.user_profile.example.country: US
definitions.user_profile.example.first_name: Matthew
definitions.user_profile.example.last_name: Bernier
definitions.user_profile.example.phone: "7208788003"
definitions.user_profile.example.state: CO
definitions.user_profile.example.website: http://sendgrid.com
definitions.user_profile.example.zip: "80202"
definitions.user_profile.properties.address.description: The street address for this
  user profile.
definitions.user_profile.properties.address.type: string
definitions.user_profile.properties.address2.description: An optional second line
  for the street address of this user profile.
definitions.user_profile.properties.address2.type: string
definitions.user_profile.properties.city.description: The city for the user profile.
definitions.user_profile.properties.city.type: string
definitions.user_profile.properties.company.description: That company that this user
  profile is associated with.
definitions.user_profile.properties.company.type: string
definitions.user_profile.properties.country.description: Th country of this user profile.
definitions.user_profile.properties.country.type: string
definitions.user_profile.properties.first_name.description: The first name of the
  user.
definitions.user_profile.properties.first_name.type: string
definitions.user_profile.properties.last_name.description: The last name of the user.
definitions.user_profile.properties.last_name.type: string
definitions.user_profile.properties.phone.description: The phone number for the user.
definitions.user_profile.properties.phone.type: string
definitions.user_profile.properties.state.description: The state for this user.
definitions.user_profile.properties.state.type: string
definitions.user_profile.properties.website.description: The website associated with
  this user.
definitions.user_profile.properties.website.type: string
definitions.user_profile.properties.zip.description: The zip code for this user.
definitions.user_profile.properties.zip.type: string
definitions.user_profile.title: 'User: Profile'
definitions.user_profile.type: object
definitions.user_scheduled_send_status.allOf.length: 2
definitions.user_scheduled_send_status.allOf[0].$ref: '#/definitions/mail_batch_id'
definitions.user_scheduled_send_status.allOf[1].description: The status of the scheduled
  send.
definitions.user_scheduled_send_status.allOf[1].properties.status.description: The
  status of the scheduled send.
definitions.user_scheduled_send_status.allOf[1].properties.status.enum.length: 2
definitions.user_scheduled_send_status.allOf[1].properties.status.enum[0]: cancel
definitions.user_scheduled_send_status.allOf[1].properties.status.enum[1]: pause
definitions.user_scheduled_send_status.allOf[1].properties.status.type: string
definitions.user_scheduled_send_status.allOf[1].required.length: 1
definitions.user_scheduled_send_status.allOf[1].required[0]: status
definitions.user_scheduled_send_status.allOf[1].type: object
definitions.user_scheduled_send_status.title: 'User: Scheduled Send status'
definitions.whitelabel::domain.properties.automatic_security.description: Indicates
  if this domain whitelabel uses automated security.
definitions.whitelabel::domain.properties.automatic_security.type: boolean
definitions.whitelabel::domain.properties.custom_spf.description: Indicates whether
  this domain whitelabel will use custom SPF.
definitions.whitelabel::domain.properties.custom_spf.type: boolean
definitions.whitelabel::domain.properties.default.description: Indicates if this domain
  whitelabel is the default whitelabel.
definitions.whitelabel::domain.properties.default.type: boolean
definitions.whitelabel::domain.properties.dns.description: The DNS records for this
  whitelabel that are used to authenticate the sending domain.
definitions.whitelabel::domain.properties.dns.properties.dkim1.description: A DNS
  record.
definitions.whitelabel::domain.properties.dns.properties.dkim1.properties.data.description: The
  DNS record.
definitions.whitelabel::domain.properties.dns.properties.dkim1.properties.data.type: string
definitions.whitelabel::domain.properties.dns.properties.dkim1.properties.host.description: The
  domain that this DNS record was created for.
definitions.whitelabel::domain.properties.dns.properties.dkim1.properties.host.type: string
definitions.whitelabel::domain.properties.dns.properties.dkim1.properties.type.description: The
  type of DNS record.
definitions.whitelabel::domain.properties.dns.properties.dkim1.properties.type.type: string
definitions.whitelabel::domain.properties.dns.properties.dkim1.properties.valid.description: Indicates
  if this is a valid DNS record.
definitions.whitelabel::domain.properties.dns.properties.dkim1.properties.valid.type: boolean
definitions.whitelabel::domain.properties.dns.properties.dkim1.required.length: 4
definitions.whitelabel::domain.properties.dns.properties.dkim1.required[0]: valid
definitions.whitelabel::domain.properties.dns.properties.dkim1.required[1]: type
definitions.whitelabel::domain.properties.dns.properties.dkim1.required[2]: host
definitions.whitelabel::domain.properties.dns.properties.dkim1.required[3]: data
definitions.whitelabel::domain.properties.dns.properties.dkim1.type: object
definitions.whitelabel::domain.properties.dns.properties.dkim2.description: A DNS
  record.
definitions.whitelabel::domain.properties.dns.properties.dkim2.properties.data.description: The
  DNS record.
definitions.whitelabel::domain.properties.dns.properties.dkim2.properties.data.type: string
definitions.whitelabel::domain.properties.dns.properties.dkim2.properties.host.description: The
  domain that this DNS record was created for.
definitions.whitelabel::domain.properties.dns.properties.dkim2.properties.host.type: string
definitions.whitelabel::domain.properties.dns.properties.dkim2.properties.type.description: The
  type of DNS record.
definitions.whitelabel::domain.properties.dns.properties.dkim2.properties.type.type: string
definitions.whitelabel::domain.properties.dns.properties.dkim2.properties.valid.description: Indicates
  if this is a valid DNS record.
definitions.whitelabel::domain.properties.dns.properties.dkim2.properties.valid.type: boolean
definitions.whitelabel::domain.properties.dns.properties.dkim2.required.length: 4
definitions.whitelabel::domain.properties.dns.properties.dkim2.required[0]: valid
definitions.whitelabel::domain.properties.dns.properties.dkim2.required[1]: type
definitions.whitelabel::domain.properties.dns.properties.dkim2.required[2]: host
definitions.whitelabel::domain.properties.dns.properties.dkim2.required[3]: data
definitions.whitelabel::domain.properties.dns.properties.dkim2.type: object
definitions.whitelabel::domain.properties.dns.properties.mail_cname.description: The
  CNAME for your sending domain that points to sendgrid.net.
definitions.whitelabel::domain.properties.dns.properties.mail_cname.properties.data.description: The
  CNAME record.
definitions.whitelabel::domain.properties.dns.properties.mail_cname.properties.data.type: string
definitions.whitelabel::domain.properties.dns.properties.mail_cname.properties.host.description: The
  domain that this CNAME is created for.
definitions.whitelabel::domain.properties.dns.properties.mail_cname.properties.host.format: hostname
definitions.whitelabel::domain.properties.dns.properties.mail_cname.properties.host.type: string
definitions.whitelabel::domain.properties.dns.properties.mail_cname.properties.type.description: The
  type of DNS record.
definitions.whitelabel::domain.properties.dns.properties.mail_cname.properties.type.type: string
definitions.whitelabel::domain.properties.dns.properties.mail_cname.properties.valid.description: Indicates
  if this is a valid CNAME.
definitions.whitelabel::domain.properties.dns.properties.mail_cname.properties.valid.type: boolean
definitions.whitelabel::domain.properties.dns.properties.mail_cname.required.length: 4
definitions.whitelabel::domain.properties.dns.properties.mail_cname.required[0]: valid
definitions.whitelabel::domain.properties.dns.properties.mail_cname.required[1]: type
definitions.whitelabel::domain.properties.dns.properties.mail_cname.required[2]: host
definitions.whitelabel::domain.properties.dns.properties.mail_cname.required[3]: data
definitions.whitelabel::domain.properties.dns.properties.mail_cname.type: object
definitions.whitelabel::domain.properties.dns.required.length: 3
definitions.whitelabel::domain.properties.dns.required[0]: mail_cname
definitions.whitelabel::domain.properties.dns.required[1]: dkim1
definitions.whitelabel::domain.properties.dns.required[2]: dkim2
definitions.whitelabel::domain.properties.dns.type: object
definitions.whitelabel::domain.properties.domain.description: The domain that this
  whitelabel is being created for.
definitions.whitelabel::domain.properties.domain.type: string
definitions.whitelabel::domain.properties.id.description: The ID of the domain whitelabel.
definitions.whitelabel::domain.properties.id.type: number
definitions.whitelabel::domain.properties.ips.description: The IPs to be included
  in the custom SPF record for this domain whitelabel.
definitions.whitelabel::domain.properties.ips.items.type: object
definitions.whitelabel::domain.properties.ips.type: array
definitions.whitelabel::domain.properties.legacy.description: Indicates if this domain
  whitelabel was created using the legacy whitelabel tool.
definitions.whitelabel::domain.properties.legacy.type: boolean
definitions.whitelabel::domain.properties.subdomain.description: The subdomain to
  use for this domain whitelabel.
definitions.whitelabel::domain.properties.subdomain.type: string
definitions.whitelabel::domain.properties.user_id.description: The ID of the user
  that this whitelabel will be associated with.
definitions.whitelabel::domain.properties.user_id.type: number
definitions.whitelabel::domain.properties.username.description: The username that
  this whitelabel will be associated with.
definitions.whitelabel::domain.properties.username.type: string
definitions.whitelabel::domain.properties.valid.description: Indicates if this is
  a valid whitelabel.
definitions.whitelabel::domain.properties.valid.type: boolean
definitions.whitelabel::domain.required.length: 12
definitions.whitelabel::domain.required[0]: id
definitions.whitelabel::domain.required[1]: user_id
definitions.whitelabel::domain.required[2]: subdomain
definitions.whitelabel::domain.required[3]: domain
definitions.whitelabel::domain.required[4]: username
definitions.whitelabel::domain.required[5]: ips
definitions.whitelabel::domain.required[6]: custom_spf
definitions.whitelabel::domain.required[7]: default
definitions.whitelabel::domain.required[8]: legacy
definitions.whitelabel::domain.required[9]: automatic_security
definitions.whitelabel::domain.required[10]: valid
definitions.whitelabel::domain.required[11]: dns
definitions.whitelabel::domain.title: Whitelabel - Domain
definitions.whitelabel::domain.type: object
definitions.whitelabel:domain_spf.properties.automatic_security.description: Indicates
  if this whitelabel uses automated security.
definitions.whitelabel:domain_spf.properties.automatic_security.type: boolean
definitions.whitelabel:domain_spf.properties.custom_spf.description: Indicates if
  this whitelabel uses custom SPF.
definitions.whitelabel:domain_spf.properties.custom_spf.type: boolean
definitions.whitelabel:domain_spf.properties.default.description: Indicates if this
  is the default whitelabel.
definitions.whitelabel:domain_spf.properties.default.type: boolean
definitions.whitelabel:domain_spf.properties.dns.description: The DNS records for
  this whitelabel.
definitions.whitelabel:domain_spf.properties.dns.properties.dkim.description: The
  DKIM record for messages sent using this whitelabel.
definitions.whitelabel:domain_spf.properties.dns.properties.dkim.properties.data.description: The
  DKIM record.
definitions.whitelabel:domain_spf.properties.dns.properties.dkim.properties.data.type: string
definitions.whitelabel:domain_spf.properties.dns.properties.dkim.properties.host.description: The
  DNS labels for the DKIM signature.
definitions.whitelabel:domain_spf.properties.dns.properties.dkim.properties.host.type: string
definitions.whitelabel:domain_spf.properties.dns.properties.dkim.properties.type.description: The
  type of data in the DKIM record.
definitions.whitelabel:domain_spf.properties.dns.properties.dkim.properties.type.type: string
definitions.whitelabel:domain_spf.properties.dns.properties.dkim.properties.valid.description: Indicates
  if the DKIM record is valid.
definitions.whitelabel:domain_spf.properties.dns.properties.dkim.properties.valid.type: boolean
definitions.whitelabel:domain_spf.properties.dns.properties.dkim.required.length: 4
definitions.whitelabel:domain_spf.properties.dns.properties.dkim.required[0]: host
definitions.whitelabel:domain_spf.properties.dns.properties.dkim.required[1]: type
definitions.whitelabel:domain_spf.properties.dns.properties.dkim.required[2]: data
definitions.whitelabel:domain_spf.properties.dns.properties.dkim.required[3]: valid
definitions.whitelabel:domain_spf.properties.dns.properties.dkim.type: object
definitions.whitelabel:domain_spf.properties.dns.properties.domain_spf.description: The
  SPF record for the root domain.
definitions.whitelabel:domain_spf.properties.dns.properties.domain_spf.properties.data.description: The
  SPF record.
definitions.whitelabel:domain_spf.properties.dns.properties.domain_spf.properties.data.type: string
definitions.whitelabel:domain_spf.properties.dns.properties.domain_spf.properties.host.description: The
  root domain that this SPF record will be used to authenticate.
definitions.whitelabel:domain_spf.properties.dns.properties.domain_spf.properties.host.type: string
definitions.whitelabel:domain_spf.properties.dns.properties.domain_spf.properties.type.description: The
  type of data in the SPF record.
definitions.whitelabel:domain_spf.properties.dns.properties.domain_spf.properties.type.type: string
definitions.whitelabel:domain_spf.properties.dns.properties.domain_spf.properties.valid.description: Indicates
  if the SPF record is valid.
definitions.whitelabel:domain_spf.properties.dns.properties.domain_spf.properties.valid.type: boolean
definitions.whitelabel:domain_spf.properties.dns.properties.domain_spf.required.length: 4
definitions.whitelabel:domain_spf.properties.dns.properties.domain_spf.required[0]: host
definitions.whitelabel:domain_spf.properties.dns.properties.domain_spf.required[1]: type
definitions.whitelabel:domain_spf.properties.dns.properties.domain_spf.required[2]: data
definitions.whitelabel:domain_spf.properties.dns.properties.domain_spf.required[3]: valid
definitions.whitelabel:domain_spf.properties.dns.properties.domain_spf.type: object
definitions.whitelabel:domain_spf.properties.dns.properties.mail_server.description: Designates
  which mail server is responsible for accepting messages from a domain.
definitions.whitelabel:domain_spf.properties.dns.properties.mail_server.properties.data.description: The
  mail server responsible for accepting messages from the sending domain.
definitions.whitelabel:domain_spf.properties.dns.properties.mail_server.properties.data.type: string
definitions.whitelabel:domain_spf.properties.dns.properties.mail_server.properties.host.description: The
  domain sending the messages.
definitions.whitelabel:domain_spf.properties.dns.properties.mail_server.properties.host.type: string
definitions.whitelabel:domain_spf.properties.dns.properties.mail_server.properties.type.description: They
  type of DNS record.
definitions.whitelabel:domain_spf.properties.dns.properties.mail_server.properties.type.type: string
definitions.whitelabel:domain_spf.properties.dns.properties.mail_server.properties.valid.description: Indicates
  if this is a valid DNS record.
definitions.whitelabel:domain_spf.properties.dns.properties.mail_server.properties.valid.type: boolean
definitions.whitelabel:domain_spf.properties.dns.properties.mail_server.required.length: 4
definitions.whitelabel:domain_spf.properties.dns.properties.mail_server.required[0]: host
definitions.whitelabel:domain_spf.properties.dns.properties.mail_server.required[1]: type
definitions.whitelabel:domain_spf.properties.dns.properties.mail_server.required[2]: data
definitions.whitelabel:domain_spf.properties.dns.properties.mail_server.required[3]: valid
definitions.whitelabel:domain_spf.properties.dns.properties.mail_server.type: object
definitions.whitelabel:domain_spf.properties.dns.properties.subdomain_spf.description: The
  SPF record for the subdomain used to create this whitelabel.
definitions.whitelabel:domain_spf.properties.dns.properties.subdomain_spf.properties.data.description: The
  SPF record.
definitions.whitelabel:domain_spf.properties.dns.properties.subdomain_spf.properties.data.type: string
definitions.whitelabel:domain_spf.properties.dns.properties.subdomain_spf.properties.host.description: The
  domain that this SPF record will be used to authenticate.
definitions.whitelabel:domain_spf.properties.dns.properties.subdomain_spf.properties.host.type: string
definitions.whitelabel:domain_spf.properties.dns.properties.subdomain_spf.properties.type.description: The
  type of data in the SPF record.
definitions.whitelabel:domain_spf.properties.dns.properties.subdomain_spf.properties.type.type: string
definitions.whitelabel:domain_spf.properties.dns.properties.subdomain_spf.properties.valid.description: Indicates
  if this is a valid SPF record.
definitions.whitelabel:domain_spf.properties.dns.properties.subdomain_spf.properties.valid.type: boolean
definitions.whitelabel:domain_spf.properties.dns.properties.subdomain_spf.required.length: 4
definitions.whitelabel:domain_spf.properties.dns.properties.subdomain_spf.required[0]: host
definitions.whitelabel:domain_spf.properties.dns.properties.subdomain_spf.required[1]: type
definitions.whitelabel:domain_spf.properties.dns.properties.subdomain_spf.required[2]: data
definitions.whitelabel:domain_spf.properties.dns.properties.subdomain_spf.required[3]: valid
definitions.whitelabel:domain_spf.properties.dns.properties.subdomain_spf.type: object
definitions.whitelabel:domain_spf.properties.dns.required.length: 4
definitions.whitelabel:domain_spf.properties.dns.required[0]: mail_server
definitions.whitelabel:domain_spf.properties.dns.required[1]: subdomain_spf
definitions.whitelabel:domain_spf.properties.dns.required[2]: domain_spf
definitions.whitelabel:domain_spf.properties.dns.required[3]: dkim
definitions.whitelabel:domain_spf.properties.dns.type: object
definitions.whitelabel:domain_spf.properties.domain.description: The domain that this
  whitelabel was created for.
definitions.whitelabel:domain_spf.properties.domain.type: string
definitions.whitelabel:domain_spf.properties.id.description: The ID of the domain
  whitelabel.
definitions.whitelabel:domain_spf.properties.id.type: integer
definitions.whitelabel:domain_spf.properties.ips.description: The IP addresses that
  are included in the SPF record for this whitelabel.
definitions.whitelabel:domain_spf.properties.ips.type: array
definitions.whitelabel:domain_spf.properties.legacy.description: Indicates if this
  whitelabel was created using the legacy whitelabel tool.
definitions.whitelabel:domain_spf.properties.legacy.type: boolean
definitions.whitelabel:domain_spf.properties.subdomain.description: The subdomain
  that was used to create this whitelabel.
definitions.whitelabel:domain_spf.properties.subdomain.type: string
definitions.whitelabel:domain_spf.properties.user_id.description: The user_id of the
  account that this whitelabel is associated with.
definitions.whitelabel:domain_spf.properties.user_id.type: integer
definitions.whitelabel:domain_spf.properties.username.description: The username of
  the account that this whitelabel is associated with.
definitions.whitelabel:domain_spf.properties.username.type: string
definitions.whitelabel:domain_spf.properties.valid.description: Indicates if this
  is a valid whitelabel.
definitions.whitelabel:domain_spf.properties.valid.type: boolean
definitions.whitelabel:domain_spf.required.length: 12
definitions.whitelabel:domain_spf.required[0]: id
definitions.whitelabel:domain_spf.required[1]: domain
definitions.whitelabel:domain_spf.required[2]: subdomain
definitions.whitelabel:domain_spf.required[3]: username
definitions.whitelabel:domain_spf.required[4]: user_id
definitions.whitelabel:domain_spf.required[5]: ips
definitions.whitelabel:domain_spf.required[6]: custom_spf
definitions.whitelabel:domain_spf.required[7]: default
definitions.whitelabel:domain_spf.required[8]: legacy
definitions.whitelabel:domain_spf.required[9]: automatic_security
definitions.whitelabel:domain_spf.required[10]: valid
definitions.whitelabel:domain_spf.required[11]: dns
definitions.whitelabel:domain_spf.title: Whitelabel - Domain
definitions.whitelabel:domain_spf.type: object
externalDocs.url: https://sendgrid.com/docs/API_Reference/Web_API_v3/index.html
host: api.sendgrid.com
info.description: "# The SendGrid Web API V3 Documentation\n\nThis is the entirety
  of the documented v3 endpoints. We have updated all the descriptions, parameters,
  requests, and responses.\n\n## Authentication \n\nEvery endpoint requires Authentication
  in the form of an Authorization Header:\n\nAuthorization: Bearer API_KEY"
info.title: SendGrid v3
info.version: "3.0"
info.x-apisguru-categories.length: 2
info.x-apisguru-categories[0]: email
info.x-apisguru-categories[1]: marketing
info.x-logo.url: https://api.apis.guru/v2/cache/logo/https_user-images.githubusercontent.com_21603_27865240-b4c0da22-6189-11e7-9f2c-f35f4c6fa57c.png
info.x-origin.length: 1
info.x-origin[0].format: swagger
info.x-origin[0].url: https://raw.githubusercontent.com/sendgrid/sendgrid-oai/master/oai.json
info.x-origin[0].version: "2.0"
info.x-preferred: true
info.x-providerName: sendgrid.com
parameters.trait:authorizationHeader:Authorization.default: Bearer <<apiKey>>
parameters.trait:authorizationHeader:Authorization.in: header
parameters.trait:authorizationHeader:Authorization.name: Authorization
parameters.trait:authorizationHeader:Authorization.required: true
parameters.trait:authorizationHeader:Authorization.type: string
parameters.trait:onBehalfOfSubuser:on-behalf-of.default: subuser_<user_name>
parameters.trait:onBehalfOfSubuser:on-behalf-of.in: header
parameters.trait:onBehalfOfSubuser:on-behalf-of.name: on-behalf-of
parameters.trait:onBehalfOfSubuser:on-behalf-of.type: string
paths./access_settings/activity.get.description: |-
  **This endpoint allows you to retrieve a list of all of the IP addresses that recently attempted to access your account either through the User Interface or the API.**

  IP Access Management allows you to control which IP addresses can be used to access your account, either through the User Interface or the API. There is no limit to the number of IP addresses that you can add to your whitelist. It is possible to remove your own IP address from the whitelist, thus preventing yourself from accessing your account.

  For more information, please see our [User Guide](http://sendgrid.com/docs/User_Guide/Settings/ip_access_management.html).
paths./access_settings/activity.get.operationId: GET_access_settings-activity
paths./access_settings/activity.get.parameters.length: 2
paths./access_settings/activity.get.parameters[0].default: 20
paths./access_settings/activity.get.parameters[0].description: Limits the number of
  IPs to return.
paths./access_settings/activity.get.parameters[0].in: query
paths./access_settings/activity.get.parameters[0].name: limit
paths./access_settings/activity.get.parameters[0].type: integer
paths./access_settings/activity.get.parameters[1].$ref: '#/parameters/trait:onBehalfOfSubuser:on-behalf-of'
paths./access_settings/activity.get.produces.length: 1
paths./access_settings/activity.get.produces[0]: application/json
paths./access_settings/activity.get.responses.200.description: ""
paths./access_settings/activity.get.responses.200.examples.application/json.result.length: 1
paths./access_settings/activity.get.responses.200.examples.application/json.result[0].allowed: false
paths./access_settings/activity.get.responses.200.examples.application/json.result[0].auth_method: basic
paths./access_settings/activity.get.responses.200.examples.application/json.result[0].first_at: 1.4440879e+09
paths./access_settings/activity.get.responses.200.examples.application/json.result[0].ip: 1.1.1.1
paths./access_settings/activity.get.responses.200.examples.application/json.result[0].last_at: 1.4444067e+09
paths./access_settings/activity.get.responses.200.examples.application/json.result[0].location: Australia
paths./access_settings/activity.get.responses.200.schema.properties.result.items.properties.allowed.type: boolean
paths./access_settings/activity.get.responses.200.schema.properties.result.items.properties.auth_method.type: string
paths./access_settings/activity.get.responses.200.schema.properties.result.items.properties.first_at.type: integer
paths./access_settings/activity.get.responses.200.schema.properties.result.items.properties.ip.type: string
paths./access_settings/activity.get.responses.200.schema.properties.result.items.properties.last_at.type: integer
paths./access_settings/activity.get.responses.200.schema.properties.result.items.properties.location.type: string
paths./access_settings/activity.get.responses.200.schema.properties.result.items.type: object
paths./access_settings/activity.get.responses.200.schema.properties.result.type: array
paths./access_settings/activity.get.responses.200.schema.type: object
paths./access_settings/activity.get.security.length: 1
paths./access_settings/activity.get.security[0].Authorization.length: 0
paths./access_settings/activity.get.summary: Retrieve all recent access attempts
paths./access_settings/activity.get.tags.length: 1
paths./access_settings/activity.get.tags[0]: IP Access Management
paths./access_settings/whitelist.delete.description: |-
  **This endpoint allows you to remove one or more IPs from your IP whitelist.**

  You can remove one IP at a time, or you can remove multiple IP addresses.

  IP Access Management allows you to control which IP addresses can be used to access your account, either through the User Interface or the API. There is no limit to the number of IP addresses that you can add to your whitelist. It is possible to remove your own IP address from the whitelist, thus preventing yourself from accessing your account.

  For more information, please see our [User Guide](http://sendgrid.com/docs/User_Guide/Settings/ip_access_management.html).
paths./access_settings/whitelist.delete.operationId: DELETE_access_settings-whitelist
paths./access_settings/whitelist.delete.parameters.length: 2
paths./access_settings/whitelist.delete.parameters[0].in: body
paths./access_settings/whitelist.delete.parameters[0].name: body
paths./access_settings/whitelist.delete.parameters[0].schema.example.ids.length: 3
paths./access_settings/whitelist.delete.parameters[0].schema.example.ids[0]: 1
paths./access_settings/whitelist.delete.parameters[0].schema.example.ids[1]: 2
paths./access_settings/whitelist.delete.parameters[0].schema.example.ids[2]: 3
paths./access_settings/whitelist.delete.parameters[0].schema.properties.ids.description: An
  array of the IDs of the IP address that you want to remove from your whitelist.
paths./access_settings/whitelist.delete.parameters[0].schema.properties.ids.items.type: integer
paths./access_settings/whitelist.delete.parameters[0].schema.properties.ids.type: array
paths./access_settings/whitelist.delete.parameters[0].schema.type: object
paths./access_settings/whitelist.delete.parameters[1].$ref: '#/parameters/trait:onBehalfOfSubuser:on-behalf-of'
paths./access_settings/whitelist.delete.produces.length: 1
paths./access_settings/whitelist.delete.produces[0]: application/json
paths./access_settings/whitelist.delete.responses.204.description: ""
paths./access_settings/whitelist.delete.responses.204.schema.type: object
paths./access_settings/whitelist.delete.security.length: 1
paths./access_settings/whitelist.delete.security[0].Authorization.length: 0
paths./access_settings/whitelist.delete.summary: Remove one or more IPs from the whitelist
paths./access_settings/whitelist.delete.tags.length: 1
paths./access_settings/whitelist.delete.tags[0]: IP Access Management
paths./access_settings/whitelist.get.description: |-
  **This endpoint allows you to retrieve a list of IP addresses that are currently whitelisted.**

  IP Access Management allows you to control which IP addresses can be used to access your account, either through the User Interface or the API. There is no limit to the number of IP addresses that you can add to your whitelist. It is possible to remove your own IP address from the whitelist, thus preventing yourself from accessing your account.

  For more information, please see our [User Guide](http://sendgrid.com/docs/User_Guide/Settings/ip_access_management.html).
paths./access_settings/whitelist.get.operationId: GET_access_settings-whitelist
paths./access_settings/whitelist.get.parameters.length: 1
paths./access_settings/whitelist.get.parameters[0].$ref: '#/parameters/trait:onBehalfOfSubuser:on-behalf-of'
paths./access_settings/whitelist.get.produces.length: 1
paths./access_settings/whitelist.get.produces[0]: application/json
paths./access_settings/whitelist.get.responses.200.description: ""
paths./access_settings/whitelist.get.responses.200.examples.application/json.result.length: 3
paths./access_settings/whitelist.get.responses.200.examples.application/json.result[0].created_at: 1.4418248e+09
paths./access_settings/whitelist.get.responses.200.examples.application/json.result[0].id: 1
paths./access_settings/whitelist.get.responses.200.examples.application/json.result[0].ip: 192.168.1.1/32
paths./access_settings/whitelist.get.responses.200.examples.application/json.result[0].updated_at: 1.4418248e+09
paths./access_settings/whitelist.get.responses.200.examples.application/json.result[1].created_at: 1.4418248e+09
paths./access_settings/whitelist.get.responses.200.examples.application/json.result[1].id: 2
paths./access_settings/whitelist.get.responses.200.examples.application/json.result[1].ip: 192.168.1.2/32
paths./access_settings/whitelist.get.responses.200.examples.application/json.result[1].updated_at: 1.4418248e+09
paths./access_settings/whitelist.get.responses.200.examples.application/json.result[2].created_at: 1.4418248e+09
paths./access_settings/whitelist.get.responses.200.examples.application/json.result[2].id: 3
paths./access_settings/whitelist.get.responses.200.examples.application/json.result[2].ip: 192.168.1.3/32
paths./access_settings/whitelist.get.responses.200.examples.application/json.result[2].updated_at: 1.4418248e+09
paths./access_settings/whitelist.get.responses.200.schema.properties.result.description: An
  array listing all of your whitelisted IPs.
paths./access_settings/whitelist.get.responses.200.schema.properties.result.items.properties.created_at.description: A
  Unix timestamp indicating when the IP was whitelisted.
paths./access_settings/whitelist.get.responses.200.schema.properties.result.items.properties.created_at.type: integer
paths./access_settings/whitelist.get.responses.200.schema.properties.result.items.properties.id.description: The
  ID of the whitelisted IP.
paths./access_settings/whitelist.get.responses.200.schema.properties.result.items.properties.id.type: integer
paths./access_settings/whitelist.get.responses.200.schema.properties.result.items.properties.ip.description: The
  whitelisted IP.
paths./access_settings/whitelist.get.responses.200.schema.properties.result.items.properties.ip.type: string
paths./access_settings/whitelist.get.responses.200.schema.properties.result.items.properties.updated_at.description: A
  Unix timestamp indicating when the IPs whitelisting status was most recently updated.
paths./access_settings/whitelist.get.responses.200.schema.properties.result.items.properties.updated_at.type: integer
paths./access_settings/whitelist.get.responses.200.schema.properties.result.items.required.length: 4
paths./access_settings/whitelist.get.responses.200.schema.properties.result.items.required[0]: id
paths./access_settings/whitelist.get.responses.200.schema.properties.result.items.required[1]: ip
paths./access_settings/whitelist.get.responses.200.schema.properties.result.items.required[2]: created_at
paths./access_settings/whitelist.get.responses.200.schema.properties.result.items.required[3]: updated_at
paths./access_settings/whitelist.get.responses.200.schema.properties.result.items.type: object
paths./access_settings/whitelist.get.responses.200.schema.properties.result.type: array
paths./access_settings/whitelist.get.responses.200.schema.required.length: 1
paths./access_settings/whitelist.get.responses.200.schema.required[0]: result
paths./access_settings/whitelist.get.responses.200.schema.type: object
paths./access_settings/whitelist.get.security.length: 1
paths./access_settings/whitelist.get.security[0].Authorization.length: 0
paths./access_settings/whitelist.get.summary: Retrieve a list of currently whitelisted
  IPs
paths./access_settings/whitelist.get.tags.length: 1
paths./access_settings/whitelist.get.tags[0]: IP Access Management
paths./access_settings/whitelist.post.consumes.length: 1
paths./access_settings/whitelist.post.consumes[0]: application/json
paths./access_settings/whitelist.post.description: |-
  **This endpoint allows you to add one or more IP addresses to your IP whitelist.**

  When adding an IP to your whitelist, include the IP address in an array. You can whitelist one IP at a time, or you can whitelist multiple IPs at once.

  IP Access Management allows you to control which IP addresses can be used to access your account, either through the User Interface or the API. There is no limit to the number of IP addresses that you can add to your whitelist. It is possible to remove your own IP address from the whitelist, thus preventing yourself from accessing your account.

  For more information, please see our [User Guide](http://sendgrid.com/docs/User_Guide/Settings/ip_access_management.html).
paths./access_settings/whitelist.post.operationId: POST_access_settings-whitelist
paths./access_settings/whitelist.post.parameters.length: 2
paths./access_settings/whitelist.post.parameters[0].in: body
paths./access_settings/whitelist.post.parameters[0].name: body
paths./access_settings/whitelist.post.parameters[0].schema.example.ips.length: 3
paths./access_settings/whitelist.post.parameters[0].schema.example.ips[0].ip: 192.168.1.1
paths./access_settings/whitelist.post.parameters[0].schema.example.ips[1].ip: 192.*.*.*
paths./access_settings/whitelist.post.parameters[0].schema.example.ips[2].ip: 192.168.1.3/32
paths./access_settings/whitelist.post.parameters[0].schema.properties.ips.description: An
  array containing the IP(s) you want to whitelist.
paths./access_settings/whitelist.post.parameters[0].schema.properties.ips.items.properties.ip.description: An
  IP address that you want to whitelist.
paths./access_settings/whitelist.post.parameters[0].schema.properties.ips.items.properties.ip.type: string
paths./access_settings/whitelist.post.parameters[0].schema.properties.ips.items.required.length: 1
paths./access_settings/whitelist.post.parameters[0].schema.properties.ips.items.required[0]: ip
paths./access_settings/whitelist.post.parameters[0].schema.properties.ips.items.type: object
paths./access_settings/whitelist.post.parameters[0].schema.properties.ips.type: array
paths./access_settings/whitelist.post.parameters[0].schema.required.length: 1
paths./access_settings/whitelist.post.parameters[0].schema.required[0]: ips
paths./access_settings/whitelist.post.parameters[0].schema.type: object
paths./access_settings/whitelist.post.parameters[1].$ref: '#/parameters/trait:onBehalfOfSubuser:on-behalf-of'
paths./access_settings/whitelist.post.produces.length: 1
paths./access_settings/whitelist.post.produces[0]: application/json
paths./access_settings/whitelist.post.responses.201.description: ""
paths./access_settings/whitelist.post.responses.201.examples.application/json.result.length: 3
paths./access_settings/whitelist.post.responses.201.examples.application/json.result[0].created_at: 1.4418248e+09
paths./access_settings/whitelist.post.responses.201.examples.application/json.result[0].id: 1
paths./access_settings/whitelist.post.responses.201.examples.application/json.result[0].ip: 192.168.1.1/32
paths./access_settings/whitelist.post.responses.201.examples.application/json.result[0].updated_at: 1.4418248e+09
paths./access_settings/whitelist.post.responses.201.examples.application/json.result[1].created_at: 1.4418248e+09
paths./access_settings/whitelist.post.responses.201.examples.application/json.result[1].id: 2
paths./access_settings/whitelist.post.responses.201.examples.application/json.result[1].ip: 192.0.0.0/8
paths./access_settings/whitelist.post.responses.201.examples.application/json.result[1].updated_at: 1.4418248e+09
paths./access_settings/whitelist.post.responses.201.examples.application/json.result[2].created_at: 1.4418248e+09
paths./access_settings/whitelist.post.responses.201.examples.application/json.result[2].id: 3
paths./access_settings/whitelist.post.responses.201.examples.application/json.result[2].ip: 192.168.1.3/32
paths./access_settings/whitelist.post.responses.201.examples.application/json.result[2].updated_at: 1.4418248e+09
paths./access_settings/whitelist.post.responses.201.schema.properties.result.description: An
  array listing all of your whitelisted IPs.
paths./access_settings/whitelist.post.responses.201.schema.properties.result.items.properties.created_at.description: A
  Unix timestamp indicating when the IP was whitelisted.
paths./access_settings/whitelist.post.responses.201.schema.properties.result.items.properties.created_at.type: integer
paths./access_settings/whitelist.post.responses.201.schema.properties.result.items.properties.id.description: The
  ID of the whitelisted IP.
paths./access_settings/whitelist.post.responses.201.schema.properties.result.items.properties.id.type: integer
paths./access_settings/whitelist.post.responses.201.schema.properties.result.items.properties.ip.description: The
  whitelisted IP.
paths./access_settings/whitelist.post.responses.201.schema.properties.result.items.properties.ip.type: string
paths./access_settings/whitelist.post.responses.201.schema.properties.result.items.properties.updated_at.description: A
  Unix timestamp indicating when the IPs whitelisting status was most recently updated.
paths./access_settings/whitelist.post.responses.201.schema.properties.result.items.properties.updated_at.type: integer
paths./access_settings/whitelist.post.responses.201.schema.properties.result.items.required.length: 4
paths./access_settings/whitelist.post.responses.201.schema.properties.result.items.required[0]: id
paths./access_settings/whitelist.post.responses.201.schema.properties.result.items.required[1]: ip
paths./access_settings/whitelist.post.responses.201.schema.properties.result.items.required[2]: created_at
paths./access_settings/whitelist.post.responses.201.schema.properties.result.items.required[3]: updated_at
paths./access_settings/whitelist.post.responses.201.schema.properties.result.items.type: object
paths./access_settings/whitelist.post.responses.201.schema.properties.result.type: array
paths./access_settings/whitelist.post.responses.201.schema.required.length: 1
paths./access_settings/whitelist.post.responses.201.schema.required[0]: result
paths./access_settings/whitelist.post.responses.201.schema.type: object
paths./access_settings/whitelist.post.security.length: 1
paths./access_settings/whitelist.post.security[0].Authorization.length: 0
paths./access_settings/whitelist.post.summary: Add one or more IPs to the whitelist
paths./access_settings/whitelist.post.tags.length: 1
paths./access_settings/whitelist.post.tags[0]: IP Access Management
paths./access_settings/whitelist/{rule_id}.delete.description: |-
  **This endpoint allows you to remove a specific IP address from your IP whitelist.**

  When removing a specific IP address from your whitelist, you must include the ID in your call.

  IP Access Management allows you to control which IP addresses can be used to access your account, either through the User Interface or the API. There is no limit to the number of IP addresses that you can add to your whitelist. It is possible to remove your own IP address from the whitelist, thus preventing yourself from accessing your account.

  For more information, please see our [User Guide](http://sendgrid.com/docs/User_Guide/Settings/ip_access_management.html).
paths./access_settings/whitelist/{rule_id}.delete.operationId: DELETE_access_settings-whitelist-rule_id
paths./access_settings/whitelist/{rule_id}.delete.parameters.length: 2
paths./access_settings/whitelist/{rule_id}.delete.parameters[0].in: body
paths./access_settings/whitelist/{rule_id}.delete.parameters[0].name: body
paths./access_settings/whitelist/{rule_id}.delete.parameters[0].schema.type: "null"
paths./access_settings/whitelist/{rule_id}.delete.parameters[1].$ref: '#/parameters/trait:onBehalfOfSubuser:on-behalf-of'
paths./access_settings/whitelist/{rule_id}.delete.responses.204.description: ""
paths./access_settings/whitelist/{rule_id}.delete.responses.204.schema.type: object
paths./access_settings/whitelist/{rule_id}.delete.security.length: 1
paths./access_settings/whitelist/{rule_id}.delete.security[0].Authorization.length: 0
paths./access_settings/whitelist/{rule_id}.delete.summary: Remove a specific IP from
  the whitelist
paths./access_settings/whitelist/{rule_id}.delete.tags.length: 1
paths./access_settings/whitelist/{rule_id}.delete.tags[0]: IP Access Management
paths./access_settings/whitelist/{rule_id}.get.description: |-
  **This endpoint allows you to retreive a specific IP address that has been whitelisted.**

  You must include the ID for the specific IP address you want to retrieve in your call.

  IP Access Management allows you to control which IP addresses can be used to access your account, either through the User Interface or the API. There is no limit to the number of IP addresses that you can add to your whitelist. It is possible to remove your own IP address from the whitelist, thus preventing yourself from accessing your account.

  For more information, please see our [User Guide](http://sendgrid.com/docs/User_Guide/Settings/ip_access_management.html).
paths./access_settings/whitelist/{rule_id}.get.operationId: GET_access_settings-whitelist-rule_id
paths./access_settings/whitelist/{rule_id}.get.parameters.length: 1
paths./access_settings/whitelist/{rule_id}.get.parameters[0].$ref: '#/parameters/trait:onBehalfOfSubuser:on-behalf-of'
paths./access_settings/whitelist/{rule_id}.get.produces.length: 1
paths./access_settings/whitelist/{rule_id}.get.produces[0]: application/json
paths./access_settings/whitelist/{rule_id}.get.responses.200.description: ""
paths./access_settings/whitelist/{rule_id}.get.responses.200.examples.application/json.created_at: 1.4418248e+09
paths./access_settings/whitelist/{rule_id}.get.responses.200.examples.application/json.id: 1
paths./access_settings/whitelist/{rule_id}.get.responses.200.examples.application/json.ip: 192.168.1.1
paths./access_settings/whitelist/{rule_id}.get.responses.200.examples.application/json.updated_at: 1.4418248e+09
paths./access_settings/whitelist/{rule_id}.get.responses.200.schema.properties.created_at.description: A
  Unix timestamp indicating when the IP was whitelisted.
paths./access_settings/whitelist/{rule_id}.get.responses.200.schema.properties.created_at.type: integer
paths./access_settings/whitelist/{rule_id}.get.responses.200.schema.properties.id.description: The
  ID of the IP address.
paths./access_settings/whitelist/{rule_id}.get.responses.200.schema.properties.id.type: integer
paths./access_settings/whitelist/{rule_id}.get.responses.200.schema.properties.ip.description: The
  IP address.
paths./access_settings/whitelist/{rule_id}.get.responses.200.schema.properties.ip.type: string
paths./access_settings/whitelist/{rule_id}.get.responses.200.schema.properties.updated_at.description: A
  Unix timestamp indicating when the IP address was last updated.
paths./access_settings/whitelist/{rule_id}.get.responses.200.schema.properties.updated_at.type: integer
paths./access_settings/whitelist/{rule_id}.get.responses.200.schema.required.length: 4
paths./access_settings/whitelist/{rule_id}.get.responses.200.schema.required[0]: id
paths./access_settings/whitelist/{rule_id}.get.responses.200.schema.required[1]: ip
paths./access_settings/whitelist/{rule_id}.get.responses.200.schema.required[2]: created_at
paths./access_settings/whitelist/{rule_id}.get.responses.200.schema.required[3]: updated_at
paths./access_settings/whitelist/{rule_id}.get.responses.200.schema.type: object
paths./access_settings/whitelist/{rule_id}.get.security.length: 1
paths./access_settings/whitelist/{rule_id}.get.security[0].Authorization.length: 0
paths./access_settings/whitelist/{rule_id}.get.summary: Retrieve a specific whitelisted
  IP
paths./access_settings/whitelist/{rule_id}.get.tags.length: 1
paths./access_settings/whitelist/{rule_id}.get.tags[0]: IP Access Management
paths./access_settings/whitelist/{rule_id}.parameters.length: 1
paths./access_settings/whitelist/{rule_id}.parameters[0].description: The ID of the
  whitelisted IP address that you want to retrieve.
paths./access_settings/whitelist/{rule_id}.parameters[0].in: path
paths./access_settings/whitelist/{rule_id}.parameters[0].name: rule_id
paths./access_settings/whitelist/{rule_id}.parameters[0].required: true
paths./access_settings/whitelist/{rule_id}.parameters[0].type: string
paths./alerts.get.description: "**This endpoint allows you to retieve all of your
  alerts.**\n\nAlerts allow you to specify an email address to receive notifications
  regarding your email usage or statistics. \n* Usage alerts allow you to set the
  threshold at which an alert will be sent.\n* Stats notifications allow you to set
  how frequently you would like to receive email statistics reports. For example,
  \"daily\", \"weekly\", or \"monthly\".\n\nFor more information about alerts, please
  see our [User Guide](https://sendgrid.com/docs/User_Guide/Settings/alerts.html)."
paths./alerts.get.operationId: GET_alerts
paths./alerts.get.parameters.length: 3
paths./alerts.get.parameters[0].in: body
paths./alerts.get.parameters[0].name: body
paths./alerts.get.parameters[0].schema.type: "null"
paths./alerts.get.parameters[1].in: header
paths./alerts.get.parameters[1].name: Authorization
paths./alerts.get.parameters[1].type: string
paths./alerts.get.parameters[2].$ref: '#/parameters/trait:onBehalfOfSubuser:on-behalf-of'
paths./alerts.get.produces.length: 1
paths./alerts.get.produces[0]: application/json
paths./alerts.get.responses.200.description: ""
paths./alerts.get.responses.200.examples.application/json.length: 3
paths./alerts.get.responses.200.examples.application/json[0].created_at: 1.4514988e+09
paths./alerts.get.responses.200.examples.application/json[0].email_to: example1@example.com
paths./alerts.get.responses.200.examples.application/json[0].id: 46
paths./alerts.get.responses.200.examples.application/json[0].percentage: 90
paths./alerts.get.responses.200.examples.application/json[0].type: usage_limit
paths./alerts.get.responses.200.examples.application/json[0].updated_at: 1.4514988e+09
paths./alerts.get.responses.200.examples.application/json[1].created_at: 1.4514988e+09
paths./alerts.get.responses.200.examples.application/json[1].email_to: example2@example.com
paths./alerts.get.responses.200.examples.application/json[1].frequency: monthly
paths./alerts.get.responses.200.examples.application/json[1].id: 47
paths./alerts.get.responses.200.examples.application/json[1].type: stats_notification
paths./alerts.get.responses.200.examples.application/json[1].updated_at: 1.4514988e+09
paths./alerts.get.responses.200.examples.application/json[2].created_at: 1.4515209e+09
paths./alerts.get.responses.200.examples.application/json[2].email_to: example3@example.com
paths./alerts.get.responses.200.examples.application/json[2].frequency: daily
paths./alerts.get.responses.200.examples.application/json[2].id: 48
paths./alerts.get.responses.200.examples.application/json[2].type: stats_notification
paths./alerts.get.responses.200.examples.application/json[2].updated_at: 1.4515209e+09
paths./alerts.get.responses.200.schema.description: The list of alerts.
paths./alerts.get.responses.200.schema.items.properties.created_at.description: A
  Unix timestamp indicating when the alert was created.
paths./alerts.get.responses.200.schema.items.properties.created_at.type: integer
paths./alerts.get.responses.200.schema.items.properties.email_to.description: The
  email address that the alert will be sent to.
paths./alerts.get.responses.200.schema.items.properties.email_to.type: string
paths./alerts.get.responses.200.schema.items.properties.frequency.description: If
  the alert is of type stats_notification, this indicates how frequently the stats
  notifications will be sent. For example, "daily", "weekly", or "monthly".
paths./alerts.get.responses.200.schema.items.properties.frequency.type: string
paths./alerts.get.responses.200.schema.items.properties.id.description: The ID of
  the alert.
paths./alerts.get.responses.200.schema.items.properties.id.type: integer
paths./alerts.get.responses.200.schema.items.properties.percentage.description: If
  the alert is of type usage_limit, this indicates the percentage of email usage that
  must be reached before the alert will be sent.
paths./alerts.get.responses.200.schema.items.properties.percentage.type: integer
paths./alerts.get.responses.200.schema.items.properties.type.description: The type
  of alert.
paths./alerts.get.responses.200.schema.items.properties.type.enum.length: 2
paths./alerts.get.responses.200.schema.items.properties.type.enum[0]: usage_limit
paths./alerts.get.responses.200.schema.items.properties.type.enum[1]: stats_notification
paths./alerts.get.responses.200.schema.items.properties.type.type: string
paths./alerts.get.responses.200.schema.items.properties.updated_at.description: A
  Unix timestamp indicating when the alert was last modified.
paths./alerts.get.responses.200.schema.items.properties.updated_at.type: integer
paths./alerts.get.responses.200.schema.items.required.length: 4
paths./alerts.get.responses.200.schema.items.required[0]: created_at
paths./alerts.get.responses.200.schema.items.required[1]: email_to
paths./alerts.get.responses.200.schema.items.required[2]: id
paths./alerts.get.responses.200.schema.items.required[3]: type
paths./alerts.get.responses.200.schema.items.type: object
paths./alerts.get.responses.200.schema.type: array
paths./alerts.get.security.length: 1
paths./alerts.get.security[0].Authorization.length: 0
paths./alerts.get.summary: Retrieve all alerts
paths./alerts.get.tags.length: 1
paths./alerts.get.tags[0]: Alerts
paths./alerts.post.consumes.length: 1
paths./alerts.post.consumes[0]: application/json
paths./alerts.post.description: |-
  **This endpoint allows you to create a new alert.**

  Alerts allow you to specify an email address to receive notifications regarding your email usage or statistics. There are two types of alerts that can be created with this endpoint:

  * `usage_limit` allows you to set the threshold at which an alert will be sent.
  * `stats_notification` allows you to set how frequently you would like to receive email statistics reports. For example, "daily", "weekly", or "monthly".

  For more information about alerts, please see our [User Guide](https://sendgrid.com/docs/User_Guide/Settings/alerts.html).
paths./alerts.post.operationId: POST_alerts
paths./alerts.post.parameters.length: 3
paths./alerts.post.parameters[0].in: body
paths./alerts.post.parameters[0].name: body
paths./alerts.post.parameters[0].schema.example.email_to: example@example.com
paths./alerts.post.parameters[0].schema.example.frequency: daily
paths./alerts.post.parameters[0].schema.example.type: stats_notification
paths./alerts.post.parameters[0].schema.properties.email_to.description: |-
  The email address the alert will be sent to.
  Example: test@example.com
paths./alerts.post.parameters[0].schema.properties.email_to.type.length: 2
paths./alerts.post.parameters[0].schema.properties.email_to.type[0]: string
paths./alerts.post.parameters[0].schema.properties.email_to.type[1]: "null"
paths./alerts.post.parameters[0].schema.properties.frequency.description: |-
  Required for stats_notification. How frequently the alert will be sent.
  Example: daily
paths./alerts.post.parameters[0].schema.properties.frequency.type: string
paths./alerts.post.parameters[0].schema.properties.percentage.description: |-
  Required for usage_alert. When this usage threshold is reached, the alert will be sent.
  Example: 90
paths./alerts.post.parameters[0].schema.properties.percentage.type: integer
paths./alerts.post.parameters[0].schema.properties.type.description: |-
  The type of alert you want to create. Can be either usage_limit or stats_notification.
  Example: usage_limit
paths./alerts.post.parameters[0].schema.properties.type.enum.length: 2
paths./alerts.post.parameters[0].schema.properties.type.enum[0]: stats_notification
paths./alerts.post.parameters[0].schema.properties.type.enum[1]: usage_limit
paths./alerts.post.parameters[0].schema.properties.type.type: string
paths./alerts.post.parameters[0].schema.required.length: 2
paths./alerts.post.parameters[0].schema.required[0]: type
paths./alerts.post.parameters[0].schema.required[1]: email_to
paths./alerts.post.parameters[0].schema.type: object
paths./alerts.post.parameters[1].in: header
paths./alerts.post.parameters[1].name: Authorization
paths./alerts.post.parameters[1].type: string
paths./alerts.post.parameters[2].in: header
paths./alerts.post.parameters[2].name: on-behalf-of
paths./alerts.post.parameters[2].type: string
paths./alerts.post.produces.length: 1
paths./alerts.post.produces[0]: application/json
paths./alerts.post.responses.201.description: ""
paths./alerts.post.responses.201.examples.application/json.created_at: 1.4515209e+09
paths./alerts.post.responses.201.examples.application/json.email_to: test@example.com
paths./alerts.post.responses.201.examples.application/json.frequency: daily
paths./alerts.post.responses.201.examples.application/json.id: 48
paths./alerts.post.responses.201.examples.application/json.type: stats_notification
paths./alerts.post.responses.201.examples.application/json.updated_at: 1.4515209e+09
paths./alerts.post.responses.201.schema.properties.created_at.description: A Unix
  timestamp indicating when the alert was created.
paths./alerts.post.responses.201.schema.properties.created_at.type: integer
paths./alerts.post.responses.201.schema.properties.email_to.description: The email
  address that the alert will be sent to.
paths./alerts.post.responses.201.schema.properties.email_to.type: string
paths./alerts.post.responses.201.schema.properties.frequency.description: If the alert
  is of type stats_notification, this indicates how frequently the stats notifications
  will be sent. For example, "daily", "weekly", or "monthly".
paths./alerts.post.responses.201.schema.properties.frequency.type: string
paths./alerts.post.responses.201.schema.properties.id.description: The ID of the alert.
paths./alerts.post.responses.201.schema.properties.id.type: integer
paths./alerts.post.responses.201.schema.properties.percentage.description: '"If the
  alert is of type usage_limit, this indicates the percentage of email usage that
  must be reached before the alert will be sent.'
paths./alerts.post.responses.201.schema.properties.percentage.type: integer
paths./alerts.post.responses.201.schema.properties.type.description: The type of alert.
paths./alerts.post.responses.201.schema.properties.type.type: string
paths./alerts.post.responses.201.schema.properties.updated_at.description: A Unix
  timestamp indicating when the alert was last modified.
paths./alerts.post.responses.201.schema.properties.updated_at.type: integer
paths./alerts.post.responses.201.schema.required.length: 5
paths./alerts.post.responses.201.schema.required[0]: created_at
paths./alerts.post.responses.201.schema.required[1]: email_to
paths./alerts.post.responses.201.schema.required[2]: id
paths./alerts.post.responses.201.schema.required[3]: type
paths./alerts.post.responses.201.schema.required[4]: updated_at
paths./alerts.post.responses.201.schema.type: object
paths./alerts.post.responses.400.description: ""
paths./alerts.post.responses.400.schema.properties.field.type: string
paths./alerts.post.responses.400.schema.properties.message.type: string
paths./alerts.post.responses.400.schema.type: object
paths./alerts.post.security.length: 1
paths./alerts.post.security[0].Authorization.length: 0
paths./alerts.post.summary: Create a new Alert
paths./alerts.post.tags.length: 1
paths./alerts.post.tags[0]: Alerts
paths./alerts/{alert_id}.delete.description: "**This endpoint allows you to delete
  an alert.**\n\nAlerts allow you to specify an email address to receive notifications
  regarding your email usage or statistics. \n* Usage alerts allow you to set the
  threshold at which an alert will be sent.\n* Stats notifications allow you to set
  how frequently you would like to receive email statistics reports. For example,
  \"daily\", \"weekly\", or \"monthly\".\n\nFor more information about alerts, please
  see our [User Guide](https://sendgrid.com/docs/User_Guide/Settings/alerts.html)."
paths./alerts/{alert_id}.delete.operationId: DELETE_alerts-alert_id
paths./alerts/{alert_id}.delete.parameters.length: 1
paths./alerts/{alert_id}.delete.parameters[0].$ref: '#/parameters/trait:onBehalfOfSubuser:on-behalf-of'
paths./alerts/{alert_id}.delete.responses.204.description: ""
paths./alerts/{alert_id}.delete.responses.204.schema.type: object
paths./alerts/{alert_id}.delete.security.length: 1
paths./alerts/{alert_id}.delete.security[0].Authorization.length: 0
paths./alerts/{alert_id}.delete.summary: Delete an alert
paths./alerts/{alert_id}.delete.tags.length: 1
paths./alerts/{alert_id}.delete.tags[0]: Alerts
paths./alerts/{alert_id}.get.description: "**This endpoint allows you to retrieve
  a specific alert.**\n\nAlerts allow you to specify an email address to receive notifications
  regarding your email usage or statistics. \n* Usage alerts allow you to set the
  threshold at which an alert will be sent.\n* Stats notifications allow you to set
  how frequently you would like to receive email statistics reports. For example,
  \"daily\", \"weekly\", or \"monthly\".\n\nFor more information about alerts, please
  see our [User Guide](https://sendgrid.com/docs/User_Guide/Settings/alerts.html)."
paths./alerts/{alert_id}.get.operationId: GET_alerts-alert_id
paths./alerts/{alert_id}.get.parameters.length: 2
paths./alerts/{alert_id}.get.parameters[0].in: header
paths./alerts/{alert_id}.get.parameters[0].name: Authorization
paths./alerts/{alert_id}.get.parameters[0].type: string
paths./alerts/{alert_id}.get.parameters[1].$ref: '#/parameters/trait:onBehalfOfSubuser:on-behalf-of'
paths./alerts/{alert_id}.get.produces.length: 1
paths./alerts/{alert_id}.get.produces[0]: application/json
paths./alerts/{alert_id}.get.responses.200.description: ""
paths./alerts/{alert_id}.get.responses.200.examples.application/json.created_at: 1.4515209e+09
paths./alerts/{alert_id}.get.responses.200.examples.application/json.email_to: example@example.com
paths./alerts/{alert_id}.get.responses.200.examples.application/json.frequency: daily
paths./alerts/{alert_id}.get.responses.200.examples.application/json.id: 48
paths./alerts/{alert_id}.get.responses.200.examples.application/json.type: stats_notification
paths./alerts/{alert_id}.get.responses.200.examples.application/json.updated_at: 1.4515209e+09
paths./alerts/{alert_id}.get.responses.200.schema.properties.created_at.description: A
  Unix timestamp indicating when the alert was created.
paths./alerts/{alert_id}.get.responses.200.schema.properties.created_at.type: integer
paths./alerts/{alert_id}.get.responses.200.schema.properties.email_to.description: The
  email address that the alert will be sent to.
paths./alerts/{alert_id}.get.responses.200.schema.properties.email_to.type: string
paths./alerts/{alert_id}.get.responses.200.schema.properties.frequency.description: 'If
  the alert is of type stats_notification, this indicates how frequently the stats
  notifications will be sent. For example: "daily", "weekly", or "monthly".'
paths./alerts/{alert_id}.get.responses.200.schema.properties.frequency.type: string
paths./alerts/{alert_id}.get.responses.200.schema.properties.id.description: The ID
  of the alert.
paths./alerts/{alert_id}.get.responses.200.schema.properties.id.type: integer
paths./alerts/{alert_id}.get.responses.200.schema.properties.percentage.description: If
  the alert is of type usage_limit, this indicates the percentage of email usage that
  must be reached before the alert will be sent.
paths./alerts/{alert_id}.get.responses.200.schema.properties.percentage.type: integer
paths./alerts/{alert_id}.get.responses.200.schema.properties.type.description: The
  type of alert.
paths./alerts/{alert_id}.get.responses.200.schema.properties.type.enum.length: 2
paths./alerts/{alert_id}.get.responses.200.schema.properties.type.enum[0]: usage_alert
paths./alerts/{alert_id}.get.responses.200.schema.properties.type.enum[1]: stats_notification
paths./alerts/{alert_id}.get.responses.200.schema.properties.type.type: string
paths./alerts/{alert_id}.get.responses.200.schema.properties.updated_at.description: A
  Unix timestamp indicating when the alert was last modified.
paths./alerts/{alert_id}.get.responses.200.schema.properties.updated_at.type: integer
paths./alerts/{alert_id}.get.responses.200.schema.required.length: 5
paths./alerts/{alert_id}.get.responses.200.schema.required[0]: created_at
paths./alerts/{alert_id}.get.responses.200.schema.required[1]: email_to
paths./alerts/{alert_id}.get.responses.200.schema.required[2]: id
paths./alerts/{alert_id}.get.responses.200.schema.required[3]: type
paths./alerts/{alert_id}.get.responses.200.schema.required[4]: updated_at
paths./alerts/{alert_id}.get.responses.200.schema.type: object
paths./alerts/{alert_id}.get.security.length: 1
paths./alerts/{alert_id}.get.security[0].Authorization.length: 0
paths./alerts/{alert_id}.get.summary: Retrieve a specific alert
paths./alerts/{alert_id}.get.tags.length: 1
paths./alerts/{alert_id}.get.tags[0]: Alerts
paths./alerts/{alert_id}.parameters.length: 1
paths./alerts/{alert_id}.parameters[0].description: The ID of the alert you would
  like to retrieve.
paths./alerts/{alert_id}.parameters[0].in: path
paths./alerts/{alert_id}.parameters[0].name: alert_id
paths./alerts/{alert_id}.parameters[0].required: true
paths./alerts/{alert_id}.parameters[0].type: integer
paths./alerts/{alert_id}.patch.consumes.length: 1
paths./alerts/{alert_id}.patch.consumes[0]: application/json
paths./alerts/{alert_id}.patch.description: "**This endpoint allows you to update
  an alert.**\n\nAlerts allow you to specify an email address to receive notifications
  regarding your email usage or statistics. \n* Usage alerts allow you to set the
  threshold at which an alert will be sent.\n* Stats notifications allow you to set
  how frequently you would like to receive email statistics reports. For example,
  \"daily\", \"weekly\", or \"monthly\".\n\nFor more information about alerts, please
  see our [User Guide](https://sendgrid.com/docs/User_Guide/Settings/alerts.html)."
paths./alerts/{alert_id}.patch.operationId: PATCH_alerts-alert_id
paths./alerts/{alert_id}.patch.parameters.length: 2
paths./alerts/{alert_id}.patch.parameters[0].in: body
paths./alerts/{alert_id}.patch.parameters[0].name: body
paths./alerts/{alert_id}.patch.parameters[0].schema.example.email_to: example@example.com
paths./alerts/{alert_id}.patch.parameters[0].schema.properties.email_to.description: |-
  The new email address you want your alert to be sent to.
  Example: test@example.com
paths./alerts/{alert_id}.patch.parameters[0].schema.properties.email_to.type: string
paths./alerts/{alert_id}.patch.parameters[0].schema.properties.frequency.description: |-
  The new frequency at which to send the stats_notification alert.
  Example: monthly
paths./alerts/{alert_id}.patch.parameters[0].schema.properties.frequency.type: string
paths./alerts/{alert_id}.patch.parameters[0].schema.properties.percentage.description: |-
  The new percentage threshold at which the usage_limit alert will be sent.
  Example: 90
paths./alerts/{alert_id}.patch.parameters[0].schema.properties.percentage.type: integer
paths./alerts/{alert_id}.patch.parameters[0].schema.type: object
paths./alerts/{alert_id}.patch.parameters[1].$ref: '#/parameters/trait:onBehalfOfSubuser:on-behalf-of'
paths./alerts/{alert_id}.patch.produces.length: 1
paths./alerts/{alert_id}.patch.produces[0]: application/json
paths./alerts/{alert_id}.patch.responses.200.description: ""
paths./alerts/{alert_id}.patch.responses.200.examples.application/json.created_at: 1.4515209e+09
paths./alerts/{alert_id}.patch.responses.200.examples.application/json.email_to: example@example.com
paths./alerts/{alert_id}.patch.responses.200.examples.application/json.frequency: daily
paths./alerts/{alert_id}.patch.responses.200.examples.application/json.id: 48
paths./alerts/{alert_id}.patch.responses.200.examples.application/json.type: stats_notification
paths./alerts/{alert_id}.patch.responses.200.examples.application/json.updated_at: 1.4515227e+09
paths./alerts/{alert_id}.patch.responses.200.schema.properties.created_at.description: A
  Unix timestamp indicating when the alert was created.
paths./alerts/{alert_id}.patch.responses.200.schema.properties.created_at.type: integer
paths./alerts/{alert_id}.patch.responses.200.schema.properties.email_to.description: The
  email address that the alert will be sent to.
paths./alerts/{alert_id}.patch.responses.200.schema.properties.email_to.type: string
paths./alerts/{alert_id}.patch.responses.200.schema.properties.frequency.description: 'If
  the alert is of type stats_notification, this indicates how frequently the stats
  notifications will be sent. For example: "daily", "weekly", or "monthly".'
paths./alerts/{alert_id}.patch.responses.200.schema.properties.frequency.type: string
paths./alerts/{alert_id}.patch.responses.200.schema.properties.id.description: The
  ID of the alert.
paths./alerts/{alert_id}.patch.responses.200.schema.properties.id.type: integer
paths./alerts/{alert_id}.patch.responses.200.schema.properties.percentage.description: If
  the alert is of type usage_limit, this indicates the percentage of email usage that
  must be reached before the alert will be sent.
paths./alerts/{alert_id}.patch.responses.200.schema.properties.percentage.type: integer
paths./alerts/{alert_id}.patch.responses.200.schema.properties.type.description: The
  type of alert.
paths./alerts/{alert_id}.patch.responses.200.schema.properties.type.enum.length: 2
paths./alerts/{alert_id}.patch.responses.200.schema.properties.type.enum[0]: usage_alert
paths./alerts/{alert_id}.patch.responses.200.schema.properties.type.enum[1]: stats_notification
paths./alerts/{alert_id}.patch.responses.200.schema.properties.type.type: string
paths./alerts/{alert_id}.patch.responses.200.schema.properties.updated_at.description: A
  Unix timestamp indicating when the alert was last modified.
paths./alerts/{alert_id}.patch.responses.200.schema.properties.updated_at.type: integer
paths./alerts/{alert_id}.patch.responses.200.schema.required.length: 5
paths./alerts/{alert_id}.patch.responses.200.schema.required[0]: created_at
paths./alerts/{alert_id}.patch.responses.200.schema.required[1]: email_to
paths./alerts/{alert_id}.patch.responses.200.schema.required[2]: id
paths./alerts/{alert_id}.patch.responses.200.schema.required[3]: type
paths./alerts/{alert_id}.patch.responses.200.schema.required[4]: updated_at
paths./alerts/{alert_id}.patch.responses.200.schema.type: object
paths./alerts/{alert_id}.patch.security.length: 1
paths./alerts/{alert_id}.patch.security[0].Authorization.length: 0
paths./alerts/{alert_id}.patch.summary: Update an alert
paths./alerts/{alert_id}.patch.tags.length: 1
paths./alerts/{alert_id}.patch.tags[0]: Alerts
paths./api_keys.get.description: |-
  **This endpoint allows you to retrieve all API Keys that belong to the authenticated user.**

  The API Keys feature allows customers to be able to generate an API Key credential which can be used for authentication with the SendGrid v3 Web API or the [Mail API Endpoint](https://sendgrid.com/docs/API_Reference/Web_API/mail.html).
paths./api_keys.get.operationId: GET_api_keys
paths./api_keys.get.parameters.length: 2
paths./api_keys.get.parameters[0].in: query
paths./api_keys.get.parameters[0].name: limit
paths./api_keys.get.parameters[0].type: integer
paths./api_keys.get.parameters[1].$ref: '#/parameters/trait:onBehalfOfSubuser:on-behalf-of'
paths./api_keys.get.produces.length: 1
paths./api_keys.get.produces[0]: application/json
paths./api_keys.get.responses.200.description: ""
paths./api_keys.get.responses.200.examples.application/json.result.length: 2
paths./api_keys.get.responses.200.examples.application/json.result[0].api_key_id: some-apikey-id
paths./api_keys.get.responses.200.examples.application/json.result[0].name: API Key
  Name
paths./api_keys.get.responses.200.examples.application/json.result[1].api_key_id: another-apikey-id
paths./api_keys.get.responses.200.examples.application/json.result[1].name: API Key
  Name 2
paths./api_keys.get.responses.200.schema.properties.result.items.$ref: '#/definitions/api_key_name_id'
paths./api_keys.get.responses.200.schema.properties.result.type: array
paths./api_keys.get.responses.200.schema.type: object
paths./api_keys.get.responses.401.description: ""
paths./api_keys.get.responses.401.examples.application/json.errors.length: 1
paths./api_keys.get.responses.401.examples.application/json.errors[0].message: authorization
  required
paths./api_keys.get.responses.401.schema.$ref: '#/definitions/global:ErrorResponse'
paths./api_keys.get.security.length: 1
paths./api_keys.get.security[0].Authorization.length: 0
paths./api_keys.get.summary: Retrieve all API Keys belonging to the authenticated
  user
paths./api_keys.get.tags.length: 1
paths./api_keys.get.tags[0]: API Keys
paths./api_keys.post.consumes.length: 1
paths./api_keys.post.consumes[0]: application/json
paths./api_keys.post.description: |-
  **This endpoint allows you to create a new random API Key for the user.**

  A JSON request body containing a "name" property is required. If number of maximum keys is reached, HTTP 403 will be returned.

  There is a limit of 100 API Keys on your account.

  The API Keys feature allows customers to be able to generate an API Key credential which can be used for authentication with the SendGrid v3 Web API or the [Mail API Endpoint](https://sendgrid.com/docs/API_Reference/Web_API/mail.html).

  See the [API Key Permissions List](https://sendgrid.com/docs/API_Reference/Web_API_v3/API_Keys/api_key_permissions_list.html) for a list of all available scopes.
paths./api_keys.post.operationId: create-api-keys
paths./api_keys.post.parameters.length: 2
paths./api_keys.post.parameters[0].in: body
paths./api_keys.post.parameters[0].name: body
paths./api_keys.post.parameters[0].schema.example.name: My API Key
paths./api_keys.post.parameters[0].schema.example.sample: data
paths./api_keys.post.parameters[0].schema.example.scopes.length: 3
paths./api_keys.post.parameters[0].schema.example.scopes[0]: mail.send
paths./api_keys.post.parameters[0].schema.example.scopes[1]: alerts.create
paths./api_keys.post.parameters[0].schema.example.scopes[2]: alerts.read
paths./api_keys.post.parameters[0].schema.properties.name.description: The name you
  will use to describe this API Key.
paths./api_keys.post.parameters[0].schema.properties.name.type: string
paths./api_keys.post.parameters[0].schema.properties.sample.type: string
paths./api_keys.post.parameters[0].schema.properties.scopes.description: The individual
  permissions that you are giving to this API Key.
paths./api_keys.post.parameters[0].schema.properties.scopes.items.type: string
paths./api_keys.post.parameters[0].schema.properties.scopes.type: array
paths./api_keys.post.parameters[0].schema.required.length: 1
paths./api_keys.post.parameters[0].schema.required[0]: name
paths./api_keys.post.parameters[0].schema.type: object
paths./api_keys.post.parameters[1].$ref: '#/parameters/trait:onBehalfOfSubuser:on-behalf-of'
paths./api_keys.post.produces.length: 1
paths./api_keys.post.produces[0]: application/json
paths./api_keys.post.responses.201.description: ""
paths./api_keys.post.responses.201.examples.application/json.api_key: SG.xxxxxxxx.yyyyyyyy
paths./api_keys.post.responses.201.examples.application/json.api_key_id: xxxxxxxx
paths./api_keys.post.responses.201.examples.application/json.name: My API Key
paths./api_keys.post.responses.201.examples.application/json.scopes.length: 3
paths./api_keys.post.responses.201.examples.application/json.scopes[0]: mail.send
paths./api_keys.post.responses.201.examples.application/json.scopes[1]: alerts.create
paths./api_keys.post.responses.201.examples.application/json.scopes[2]: alerts.read
paths./api_keys.post.responses.201.schema.properties.api_key.type: string
paths./api_keys.post.responses.201.schema.properties.api_key_id.type: string
paths./api_keys.post.responses.201.schema.properties.name.type: string
paths./api_keys.post.responses.201.schema.properties.scopes.items.type: string
paths./api_keys.post.responses.201.schema.properties.scopes.type: array
paths./api_keys.post.responses.201.schema.type: object
paths./api_keys.post.responses.400.description: ""
paths./api_keys.post.responses.400.examples.application/json.errors.length: 1
paths./api_keys.post.responses.400.examples.application/json.errors[0].field: name
paths./api_keys.post.responses.400.examples.application/json.errors[0].message: missing
  required argument
paths./api_keys.post.responses.400.schema.$ref: '#/definitions/global:ErrorResponse'
paths./api_keys.post.responses.401.description: ""
paths./api_keys.post.responses.401.examples.application/json.errors.length: 1
paths./api_keys.post.responses.401.examples.application/json.errors[0].message: authorization
  required
paths./api_keys.post.responses.401.schema.$ref: '#/definitions/global:ErrorResponse'
paths./api_keys.post.responses.403.description: ""
paths./api_keys.post.responses.403.examples.application/json.errors.length: 1
paths./api_keys.post.responses.403.examples.application/json.errors[0].message: Cannot
  create more than 100 API Keys
paths./api_keys.post.responses.403.schema.$ref: '#/definitions/global:ErrorResponse'
paths./api_keys.post.security.length: 1
paths./api_keys.post.security[0].Authorization.length: 0
paths./api_keys.post.summary: Create API keys
paths./api_keys.post.tags.length: 1
paths./api_keys.post.tags[0]: API Keys
paths./api_keys/{api_key_id}.delete.description: |-
  **This endpoint allows you to revoke an existing API Key**

  Authentications using this API Key will fail after this request is made, with some small propogation delay.If the API Key ID does not exist an HTTP 404 will be returned.

  The API Keys feature allows customers to be able to generate an API Key credential which can be used for authentication with the SendGrid v3 Web API or the [Mail API Endpoint](https://sendgrid.com/docs/API_Reference/Web_API/mail.html).

  ## URI Parameters

  | URI Parameter   | Type  | Required?  | Description  |
  |---|---|---|---|
  |api_key_id |string | required | The ID of the API Key you are deleting.|
paths./api_keys/{api_key_id}.delete.operationId: DELETE_api_keys-api_key_id
paths./api_keys/{api_key_id}.delete.parameters.length: 1
paths./api_keys/{api_key_id}.delete.parameters[0].$ref: '#/parameters/trait:onBehalfOfSubuser:on-behalf-of'
paths./api_keys/{api_key_id}.delete.produces.length: 1
paths./api_keys/{api_key_id}.delete.produces[0]: application/json
paths./api_keys/{api_key_id}.delete.responses.204.description: ""
paths./api_keys/{api_key_id}.delete.responses.204.schema.type: "null"
paths./api_keys/{api_key_id}.delete.responses.404.description: ""
paths./api_keys/{api_key_id}.delete.responses.404.examples.application/json.errors.length: 1
paths./api_keys/{api_key_id}.delete.responses.404.examples.application/json.errors[0].message: unable
  to find API Key
paths./api_keys/{api_key_id}.delete.responses.404.schema.$ref: '#/definitions/global:ErrorResponse'
paths./api_keys/{api_key_id}.delete.security.length: 1
paths./api_keys/{api_key_id}.delete.security[0].Authorization.length: 0
paths./api_keys/{api_key_id}.delete.summary: Delete API keys
paths./api_keys/{api_key_id}.delete.tags.length: 1
paths./api_keys/{api_key_id}.delete.tags[0]: API Keys
paths./api_keys/{api_key_id}.get.description: |-
  **This endpoint allows you to retrieve a single api key.**

  If the API Key ID does not exist an HTTP 404 will be returned.
paths./api_keys/{api_key_id}.get.operationId: GET_api_keys-api_key_id
paths./api_keys/{api_key_id}.get.parameters.length: 1
paths./api_keys/{api_key_id}.get.parameters[0].$ref: '#/parameters/trait:onBehalfOfSubuser:on-behalf-of'
paths./api_keys/{api_key_id}.get.produces.length: 1
paths./api_keys/{api_key_id}.get.produces[0]: application/json
paths./api_keys/{api_key_id}.get.responses.200.description: ""
paths./api_keys/{api_key_id}.get.responses.200.examples.application/json.result.length: 2
paths./api_keys/{api_key_id}.get.responses.200.examples.application/json.result[0].api_key_id: some-apikey-id
paths./api_keys/{api_key_id}.get.responses.200.examples.application/json.result[0].name: API
  Key Name
paths./api_keys/{api_key_id}.get.responses.200.examples.application/json.result[1].api_key_id: another-apikey-id
paths./api_keys/{api_key_id}.get.responses.200.examples.application/json.result[1].name: API
  Key Name 2
paths./api_keys/{api_key_id}.get.responses.200.schema.properties.result.items.$ref: '#/definitions/api_key_name_id_scopes'
paths./api_keys/{api_key_id}.get.responses.200.schema.properties.result.type: array
paths./api_keys/{api_key_id}.get.responses.200.schema.type: object
paths./api_keys/{api_key_id}.get.responses.401.description: ""
paths./api_keys/{api_key_id}.get.responses.401.examples.application/json.errors.length: 1
paths./api_keys/{api_key_id}.get.responses.401.examples.application/json.errors[0].message: authorization
  required
paths./api_keys/{api_key_id}.get.responses.401.schema.$ref: '#/definitions/global:ErrorResponse'
paths./api_keys/{api_key_id}.get.responses.404.description: Unexpected error in API
  call. See HTTP response body for details.
paths./api_keys/{api_key_id}.get.responses.404.examples.application/json.errors.length: 1
paths./api_keys/{api_key_id}.get.responses.404.examples.application/json.errors[0].message: unable
  to find API Key
paths./api_keys/{api_key_id}.get.responses.404.schema.type: object
paths./api_keys/{api_key_id}.get.security.length: 1
paths./api_keys/{api_key_id}.get.security[0].Authorization.length: 0
paths./api_keys/{api_key_id}.get.summary: Retrieve an existing API Key
paths./api_keys/{api_key_id}.get.tags.length: 1
paths./api_keys/{api_key_id}.get.tags[0]: API Keys
paths./api_keys/{api_key_id}.parameters.length: 1
paths./api_keys/{api_key_id}.parameters[0].description: The ID of the API Key for
  which you are requesting information.
paths./api_keys/{api_key_id}.parameters[0].in: path
paths./api_keys/{api_key_id}.parameters[0].name: api_key_id
paths./api_keys/{api_key_id}.parameters[0].required: true
paths./api_keys/{api_key_id}.parameters[0].type: string
paths./api_keys/{api_key_id}.patch.consumes.length: 1
paths./api_keys/{api_key_id}.patch.consumes[0]: application/json
paths./api_keys/{api_key_id}.patch.description: |-
  **This endpoint allows you to update the name of an existing API Key.**

  A JSON request body with a "name" property is required.

  The API Keys feature allows customers to be able to generate an API Key credential which can be used for authentication with the SendGrid v3 Web API or the [Mail API Endpoint](https://sendgrid.com/docs/API_Reference/Web_API/mail.html).

  ## URI Parameters

  | URI Parameter   | Type  | Required?  | Description  |
  |---|---|---|---|
  |api_key_id |string | required | The ID of the API Key you are updating.|
paths./api_keys/{api_key_id}.patch.operationId: PATCH_api_keys-api_key_id
paths./api_keys/{api_key_id}.patch.parameters.length: 2
paths./api_keys/{api_key_id}.patch.parameters[0].in: body
paths./api_keys/{api_key_id}.patch.parameters[0].name: body
paths./api_keys/{api_key_id}.patch.parameters[0].schema.example.name: A New Hope
paths./api_keys/{api_key_id}.patch.parameters[0].schema.properties.name.description: The
  new name of the API Key.
paths./api_keys/{api_key_id}.patch.parameters[0].schema.properties.name.type: string
paths./api_keys/{api_key_id}.patch.parameters[0].schema.type: object
paths./api_keys/{api_key_id}.patch.parameters[1].$ref: '#/parameters/trait:onBehalfOfSubuser:on-behalf-of'
paths./api_keys/{api_key_id}.patch.produces.length: 1
paths./api_keys/{api_key_id}.patch.produces[0]: application/json
paths./api_keys/{api_key_id}.patch.responses.200.description: ""
paths./api_keys/{api_key_id}.patch.responses.200.examples.application/json.api_key_id: qfTQ6KG0QBiwWdJ0-pCLCA
paths./api_keys/{api_key_id}.patch.responses.200.examples.application/json.name: A
  New Hope
paths./api_keys/{api_key_id}.patch.responses.200.schema.$ref: '#/definitions/api_key_name_id'
paths./api_keys/{api_key_id}.patch.responses.401.description: ""
paths./api_keys/{api_key_id}.patch.responses.401.examples.application/json.errors.length: 1
paths./api_keys/{api_key_id}.patch.responses.401.examples.application/json.errors[0].message: authorization
  required
paths./api_keys/{api_key_id}.patch.responses.401.schema.$ref: '#/definitions/global:ErrorResponse'
paths./api_keys/{api_key_id}.patch.security.length: 1
paths./api_keys/{api_key_id}.patch.security[0].Authorization.length: 0
paths./api_keys/{api_key_id}.patch.summary: Update API keys
paths./api_keys/{api_key_id}.patch.tags.length: 1
paths./api_keys/{api_key_id}.patch.tags[0]: API Keys
paths./api_keys/{api_key_id}.put.consumes.length: 1
paths./api_keys/{api_key_id}.put.consumes[0]: application/json
paths./api_keys/{api_key_id}.put.description: |-
  **This endpoint allows you to update the name and scopes of a given API key.**

  A JSON request body with a "name" property is required.
  Most provide the list of all the scopes an api key should have.

  The API Keys feature allows customers to be able to generate an API Key credential which can be used for authentication with the SendGrid v3 Web API or the [Mail API Endpoint](https://sendgrid.com/docs/API_Reference/Web_API/mail.html).
paths./api_keys/{api_key_id}.put.operationId: PUT_api_keys-api_key_id
paths./api_keys/{api_key_id}.put.parameters.length: 2
paths./api_keys/{api_key_id}.put.parameters[0].in: body
paths./api_keys/{api_key_id}.put.parameters[0].name: body
paths./api_keys/{api_key_id}.put.parameters[0].schema.example.name: A New Hope
paths./api_keys/{api_key_id}.put.parameters[0].schema.example.scopes.length: 2
paths./api_keys/{api_key_id}.put.parameters[0].schema.example.scopes[0]: user.profile.read
paths./api_keys/{api_key_id}.put.parameters[0].schema.example.scopes[1]: user.profile.update
paths./api_keys/{api_key_id}.put.parameters[0].schema.properties.name.type: string
paths./api_keys/{api_key_id}.put.parameters[0].schema.properties.scopes.items.type: string
paths./api_keys/{api_key_id}.put.parameters[0].schema.properties.scopes.type: array
paths./api_keys/{api_key_id}.put.parameters[0].schema.type: object
paths./api_keys/{api_key_id}.put.parameters[1].$ref: '#/parameters/trait:onBehalfOfSubuser:on-behalf-of'
paths./api_keys/{api_key_id}.put.produces.length: 1
paths./api_keys/{api_key_id}.put.produces[0]: application/json
paths./api_keys/{api_key_id}.put.responses.200.description: ""
paths./api_keys/{api_key_id}.put.responses.200.examples.application/json.api_key_id: qfTQ6KG0QBiwWdJ0-pCLCA
paths./api_keys/{api_key_id}.put.responses.200.examples.application/json.name: A New
  Hope
paths./api_keys/{api_key_id}.put.responses.200.examples.application/json.scopes.length: 2
paths./api_keys/{api_key_id}.put.responses.200.examples.application/json.scopes[0]: user.profile.read
paths./api_keys/{api_key_id}.put.responses.200.examples.application/json.scopes[1]: user.profile.update
paths./api_keys/{api_key_id}.put.responses.200.schema.$ref: '#/definitions/api_key_name_id_scopes'
paths./api_keys/{api_key_id}.put.responses.400.description: Unexpected error in API
  call. See HTTP response body for details.
paths./api_keys/{api_key_id}.put.responses.400.examples.application/json.errors.length: 1
paths./api_keys/{api_key_id}.put.responses.400.examples.application/json.errors[0].message: expected
  JSON request body with 'name' property
paths./api_keys/{api_key_id}.put.responses.400.schema.$ref: '#/definitions/global:ErrorResponse'
paths./api_keys/{api_key_id}.put.responses.401.description: ""
paths./api_keys/{api_key_id}.put.responses.401.schema.type: object
paths./api_keys/{api_key_id}.put.responses.404.description: Unexpected error in API
  call. See HTTP response body for details.
paths./api_keys/{api_key_id}.put.responses.404.examples.application/json.errors.length: 1
paths./api_keys/{api_key_id}.put.responses.404.examples.application/json.errors[0].message: unable
  to find API Key to update
paths./api_keys/{api_key_id}.put.responses.404.schema.$ref: '#/definitions/global:ErrorResponse'
paths./api_keys/{api_key_id}.put.security.length: 1
paths./api_keys/{api_key_id}.put.security[0].Authorization.length: 0
paths./api_keys/{api_key_id}.put.summary: Update the name & scopes of an API Key
paths./api_keys/{api_key_id}.put.tags.length: 1
paths./api_keys/{api_key_id}.put.tags[0]: API Keys
paths./asm/groups.get.description: |-
  **This endpoint allows you to retrieve information about multiple suppression groups.**

  This endpoint will return information for each group ID that you include in your request. To add a group ID to your request, simply append `&id=` followed by the group ID.

  Suppressions are a list of email addresses that will not receive content sent under a given [group](https://sendgrid.com/docs/API_Reference/Web_API_v3/Suppression_Management/groups.html).

  Suppression groups, or [unsubscribe groups](https://sendgrid.com/docs/API_Reference/Web_API_v3/Suppression_Management/groups.html), allow you to label a category of content that you regularly send. This gives your recipients the ability to opt out of a specific set of your email. For example, you might define a group for your transactional email, and one for your marketing email so that your users can continue recieving your transactional email witout having to receive your marketing content.
paths./asm/groups.get.operationId: GET_asm-groups
paths./asm/groups.get.parameters.length: 2
paths./asm/groups.get.parameters[0].description: The ID of a suppression group that
  you want to retrieve information for.
paths./asm/groups.get.parameters[0].in: query
paths./asm/groups.get.parameters[0].name: id
paths./asm/groups.get.parameters[0].type: integer
paths./asm/groups.get.parameters[1].$ref: '#/parameters/trait:onBehalfOfSubuser:on-behalf-of'
paths./asm/groups.get.produces.length: 1
paths./asm/groups.get.produces[0]: application/json
paths./asm/groups.get.responses.200.description: ""
paths./asm/groups.get.responses.200.examples.application/json.length: 2
paths./asm/groups.get.responses.200.examples.application/json[0].description: Our
  monthly newsletter.
paths./asm/groups.get.responses.200.examples.application/json[0].id: 100
paths./asm/groups.get.responses.200.examples.application/json[0].is_default: true
paths./asm/groups.get.responses.200.examples.application/json[0].name: Newsletters
paths./asm/groups.get.responses.200.examples.application/json[0].unsubscribes: 400
paths./asm/groups.get.responses.200.examples.application/json[1].description: Emails
  triggered by user-defined rules.
paths./asm/groups.get.responses.200.examples.application/json[1].id: 101
paths./asm/groups.get.responses.200.examples.application/json[1].is_default: false
paths./asm/groups.get.responses.200.examples.application/json[1].name: Alerts
paths./asm/groups.get.responses.200.examples.application/json[1].unsubscribes: 1
paths./asm/groups.get.responses.200.schema.items.$ref: '#/definitions/suppression_group'
paths./asm/groups.get.responses.200.schema.type: array
paths./asm/groups.get.security.length: 1
paths./asm/groups.get.security[0].Authorization.length: 0
paths./asm/groups.get.summary: Retrieve information about multiple suppression groups
paths./asm/groups.get.tags.length: 1
paths./asm/groups.get.tags[0]: Suppressions - Unsubscribe Groups
paths./asm/groups.post.consumes.length: 1
paths./asm/groups.post.consumes[0]: application/json
paths./asm/groups.post.description: |-
  **This endpoint allows you to create a new suppression group.**

  Suppression groups, or unsubscribe groups, are specific types or categories of email that you would like your recipients to be able to unsubscribe from. For example: Daily Newsletters, Invoices, System Alerts.

  The **name** and **description** of the unsubscribe group will be visible by recipients when they are managing their subscriptions.

  Each user can create up to 25 different suppression groups.
paths./asm/groups.post.operationId: POST_asm-groups
paths./asm/groups.post.parameters.length: 2
paths./asm/groups.post.parameters[0].in: body
paths./asm/groups.post.parameters[0].name: body
paths./asm/groups.post.parameters[0].schema.example.description: Suggestions for products
  our users might like.
paths./asm/groups.post.parameters[0].schema.example.is_default: true
paths./asm/groups.post.parameters[0].schema.example.name: Product Suggestions
paths./asm/groups.post.parameters[0].schema.properties.description.description: A
  brief description of your new suppression group.
paths./asm/groups.post.parameters[0].schema.properties.description.maxLength: 100
paths./asm/groups.post.parameters[0].schema.properties.description.type: string
paths./asm/groups.post.parameters[0].schema.properties.is_default.description: Indicates
  if you would like this to be your default suppression group.
paths./asm/groups.post.parameters[0].schema.properties.is_default.type: boolean
paths./asm/groups.post.parameters[0].schema.properties.name.description: The name
  that you would like to use for your new suppression group.
paths./asm/groups.post.parameters[0].schema.properties.name.maxLength: 30
paths./asm/groups.post.parameters[0].schema.properties.name.type: string
paths./asm/groups.post.parameters[0].schema.required.length: 2
paths./asm/groups.post.parameters[0].schema.required[0]: name
paths./asm/groups.post.parameters[0].schema.required[1]: description
paths./asm/groups.post.parameters[0].schema.type: object
paths./asm/groups.post.parameters[1].$ref: '#/parameters/trait:onBehalfOfSubuser:on-behalf-of'
paths./asm/groups.post.produces.length: 1
paths./asm/groups.post.produces[0]: application/json
paths./asm/groups.post.responses.201.description: ""
paths./asm/groups.post.responses.201.examples.application/json.description: Suggestions
  for products our users might like.
paths./asm/groups.post.responses.201.examples.application/json.id: 103
paths./asm/groups.post.responses.201.examples.application/json.is_default: false
paths./asm/groups.post.responses.201.examples.application/json.name: Product Suggestions
paths./asm/groups.post.responses.201.schema.properties.description.description: A
  brief description of the suppression group.
paths./asm/groups.post.responses.201.schema.properties.description.type: string
paths./asm/groups.post.responses.201.schema.properties.id.description: The ID of the
  suppression group.
paths./asm/groups.post.responses.201.schema.properties.id.type: integer
paths./asm/groups.post.responses.201.schema.properties.is_default.description: Indicates
  if this is the default suppression group.
paths./asm/groups.post.responses.201.schema.properties.is_default.type: boolean
paths./asm/groups.post.responses.201.schema.properties.name.description: The name
  of the suppression group.
paths./asm/groups.post.responses.201.schema.properties.name.type: string
paths./asm/groups.post.responses.201.schema.required.length: 4
paths./asm/groups.post.responses.201.schema.required[0]: id
paths./asm/groups.post.responses.201.schema.required[1]: name
paths./asm/groups.post.responses.201.schema.required[2]: description
paths./asm/groups.post.responses.201.schema.required[3]: is_default
paths./asm/groups.post.responses.201.schema.type: object
paths./asm/groups.post.security.length: 1
paths./asm/groups.post.security[0].Authorization.length: 0
paths./asm/groups.post.summary: Create a new suppression group
paths./asm/groups.post.tags.length: 1
paths./asm/groups.post.tags[0]: Suppressions - Unsubscribe Groups
paths./asm/groups/{group_id}.delete.description: |-
  **This endpoint allows you to delete a suppression group.**

  You can only delete groups that have not been attached to sent mail in the last 60 days. If a recipient uses the "one-click unsubscribe" option on an email associated with a deleted group, that recipient will be added to the global suppression list.

  Suppression groups, or unsubscribe groups, are specific types or categories of email that you would like your recipients to be able to unsubscribe from. For example: Daily Newsletters, Invoices, System Alerts.

  The **name** and **description** of the unsubscribe group will be visible by recipients when they are managing their subscriptions.

  Each user can create up to 25 different suppression groups.
paths./asm/groups/{group_id}.delete.operationId: DELETE_asm-groups-group_id
paths./asm/groups/{group_id}.delete.parameters.length: 2
paths./asm/groups/{group_id}.delete.parameters[0].in: body
paths./asm/groups/{group_id}.delete.parameters[0].name: body
paths./asm/groups/{group_id}.delete.parameters[0].schema.type: "null"
paths./asm/groups/{group_id}.delete.parameters[1].$ref: '#/parameters/trait:onBehalfOfSubuser:on-behalf-of'
paths./asm/groups/{group_id}.delete.produces.length: 1
paths./asm/groups/{group_id}.delete.produces[0]: application/json
paths./asm/groups/{group_id}.delete.responses.204.description: ""
paths./asm/groups/{group_id}.delete.responses.204.schema.type: object
paths./asm/groups/{group_id}.delete.security.length: 1
paths./asm/groups/{group_id}.delete.security[0].Authorization.length: 0
paths./asm/groups/{group_id}.delete.summary: Delete a suppression group.
paths./asm/groups/{group_id}.delete.tags.length: 1
paths./asm/groups/{group_id}.delete.tags[0]: Suppressions - Unsubscribe Groups
paths./asm/groups/{group_id}.get.description: |-
  **This endpoint allows you to retrieve a single suppression group.**

  Suppression groups, or unsubscribe groups, are specific types or categories of email that you would like your recipients to be able to unsubscribe from. For example: Daily Newsletters, Invoices, System Alerts.

  The **name** and **description** of the unsubscribe group will be visible by recipients when they are managing their subscriptions.

  Each user can create up to 25 different suppression groups.
paths./asm/groups/{group_id}.get.operationId: GET_asm-groups-group_id
paths./asm/groups/{group_id}.get.parameters.length: 1
paths./asm/groups/{group_id}.get.parameters[0].$ref: '#/parameters/trait:onBehalfOfSubuser:on-behalf-of'
paths./asm/groups/{group_id}.get.produces.length: 1
paths./asm/groups/{group_id}.get.produces[0]: application/json
paths./asm/groups/{group_id}.get.responses.200.description: ""
paths./asm/groups/{group_id}.get.responses.200.examples.application/json.description: Our
  monthly newsletter.
paths./asm/groups/{group_id}.get.responses.200.examples.application/json.id: 100
paths./asm/groups/{group_id}.get.responses.200.examples.application/json.is_default: true
paths./asm/groups/{group_id}.get.responses.200.examples.application/json.name: Newsletters
paths./asm/groups/{group_id}.get.responses.200.examples.application/json.unsubscribes: 400
paths./asm/groups/{group_id}.get.responses.200.schema.properties.description.description: The
  description of the suppression group.
paths./asm/groups/{group_id}.get.responses.200.schema.properties.description.type: string
paths./asm/groups/{group_id}.get.responses.200.schema.properties.id.description: The
  ID of the suppression group.
paths./asm/groups/{group_id}.get.responses.200.schema.properties.id.type: integer
paths./asm/groups/{group_id}.get.responses.200.schema.properties.is_default.description: Indicates
  if this is the default suppression group.
paths./asm/groups/{group_id}.get.responses.200.schema.properties.is_default.type: boolean
paths./asm/groups/{group_id}.get.responses.200.schema.properties.last_email_sent_at.description: A
  unix timestamp indicating the last time this group was assigned to an email.
paths./asm/groups/{group_id}.get.responses.200.schema.properties.last_email_sent_at.type: "null"
paths./asm/groups/{group_id}.get.responses.200.schema.properties.name.description: The
  name of the suppression group.
paths./asm/groups/{group_id}.get.responses.200.schema.properties.name.type: string
paths./asm/groups/{group_id}.get.responses.200.schema.properties.unsubscribes.description: The
  number of unsubscribes, or suppressions, in this group.
paths./asm/groups/{group_id}.get.responses.200.schema.properties.unsubscribes.type: integer
paths./asm/groups/{group_id}.get.responses.200.schema.type: object
paths./asm/groups/{group_id}.get.security.length: 1
paths./asm/groups/{group_id}.get.security[0].Authorization.length: 0
paths./asm/groups/{group_id}.get.summary: Get information on a single suppression
  group.
paths./asm/groups/{group_id}.get.tags.length: 1
paths./asm/groups/{group_id}.get.tags[0]: Suppressions - Unsubscribe Groups
paths./asm/groups/{group_id}.parameters.length: 1
paths./asm/groups/{group_id}.parameters[0].description: The ID of the suppression
  group you would like to retrieve.
paths./asm/groups/{group_id}.parameters[0].in: path
paths./asm/groups/{group_id}.parameters[0].name: group_id
paths./asm/groups/{group_id}.parameters[0].required: true
paths./asm/groups/{group_id}.parameters[0].type: string
paths./asm/groups/{group_id}.patch.consumes.length: 1
paths./asm/groups/{group_id}.patch.consumes[0]: application/json
paths./asm/groups/{group_id}.patch.description: |-
  **This endpoint allows you to update or change a suppression group.**

  Suppression groups, or unsubscribe groups, are specific types or categories of email that you would like your recipients to be able to unsubscribe from. For example: Daily Newsletters, Invoices, System Alerts.

  The **name** and **description** of the unsubscribe group will be visible by recipients when they are managing their subscriptions.

  Each user can create up to 25 different suppression groups.
paths./asm/groups/{group_id}.patch.operationId: PATCH_asm-groups-group_id
paths./asm/groups/{group_id}.patch.parameters.length: 3
paths./asm/groups/{group_id}.patch.parameters[0].in: body
paths./asm/groups/{group_id}.patch.parameters[0].name: body
paths./asm/groups/{group_id}.patch.parameters[0].schema.example.description: Suggestions
  for items our users might like.
paths./asm/groups/{group_id}.patch.parameters[0].schema.example.id: 103
paths./asm/groups/{group_id}.patch.parameters[0].schema.example.name: Item Suggestions
paths./asm/groups/{group_id}.patch.parameters[0].schema.properties.description.description: The
  description of the suppression group.
paths./asm/groups/{group_id}.patch.parameters[0].schema.properties.description.maxLength: 100
paths./asm/groups/{group_id}.patch.parameters[0].schema.properties.description.type: string
paths./asm/groups/{group_id}.patch.parameters[0].schema.properties.id.description: The
  id of the suppression group.
paths./asm/groups/{group_id}.patch.parameters[0].schema.properties.id.type: integer
paths./asm/groups/{group_id}.patch.parameters[0].schema.properties.is_default.description: Indicates
  if the suppression group is set as the default group.
paths./asm/groups/{group_id}.patch.parameters[0].schema.properties.is_default.type: boolean
paths./asm/groups/{group_id}.patch.parameters[0].schema.properties.name.description: The
  name of the suppression group. Each group created by a user must have a unique name.
paths./asm/groups/{group_id}.patch.parameters[0].schema.properties.name.maxLength: 30
paths./asm/groups/{group_id}.patch.parameters[0].schema.properties.name.type: string
paths./asm/groups/{group_id}.patch.parameters[0].schema.required.length: 1
paths./asm/groups/{group_id}.patch.parameters[0].schema.required[0]: name
paths./asm/groups/{group_id}.patch.parameters[0].schema.type: object
paths./asm/groups/{group_id}.patch.parameters[1].$ref: '#/parameters/trait:authorizationHeader:Authorization'
paths./asm/groups/{group_id}.patch.parameters[2].$ref: '#/parameters/trait:onBehalfOfSubuser:on-behalf-of'
paths./asm/groups/{group_id}.patch.produces.length: 1
paths./asm/groups/{group_id}.patch.produces[0]: application/json
paths./asm/groups/{group_id}.patch.responses.201.description: ""
paths./asm/groups/{group_id}.patch.responses.201.examples.application/json.description: Suggestions
  for items our users might like.
paths./asm/groups/{group_id}.patch.responses.201.examples.application/json.id: 103
paths./asm/groups/{group_id}.patch.responses.201.examples.application/json.name: Item
  Suggestions
paths./asm/groups/{group_id}.patch.responses.201.schema.$ref: '#/definitions/suppression_group'
paths./asm/groups/{group_id}.patch.summary: Update a suppression group.
paths./asm/groups/{group_id}.patch.tags.length: 1
paths./asm/groups/{group_id}.patch.tags[0]: Suppressions - Unsubscribe Groups
paths./asm/groups/{group_id}/suppressions.get.description: |-
  **This endpoint allows you to retrieve all suppressed email addresses belonging to the given group.**

  Suppressions are recipient email addresses that are added to [unsubscribe groups](https://sendgrid.com/docs/API_Reference/Web_API_v3/Suppression_Management/groups.html). Once a recipient's address is on the suppressions list for an unsubscribe group, they will not receive any emails that are tagged with that unsubscribe group.
paths./asm/groups/{group_id}/suppressions.get.operationId: GET_asm-groups-group_id-suppressions
paths./asm/groups/{group_id}/suppressions.get.parameters.length: 1
paths./asm/groups/{group_id}/suppressions.get.parameters[0].$ref: '#/parameters/trait:onBehalfOfSubuser:on-behalf-of'
paths./asm/groups/{group_id}/suppressions.get.produces.length: 1
paths./asm/groups/{group_id}/suppressions.get.produces[0]: application/json
paths./asm/groups/{group_id}/suppressions.get.responses.200.description: ""
paths./asm/groups/{group_id}/suppressions.get.responses.200.examples.application/json.length: 2
paths./asm/groups/{group_id}/suppressions.get.responses.200.examples.application/json[0]: example@example.com
paths./asm/groups/{group_id}/suppressions.get.responses.200.examples.application/json[1]: example2@example.com
paths./asm/groups/{group_id}/suppressions.get.responses.200.schema.description: The
  list of email addresses belonging to the given suppression group.
paths./asm/groups/{group_id}/suppressions.get.responses.200.schema.items.type: string
paths./asm/groups/{group_id}/suppressions.get.responses.200.schema.type: array
paths./asm/groups/{group_id}/suppressions.get.security.length: 1
paths./asm/groups/{group_id}/suppressions.get.security[0].Authorization.length: 0
paths./asm/groups/{group_id}/suppressions.get.summary: Retrieve all suppressions for
  a suppression group
paths./asm/groups/{group_id}/suppressions.get.tags.length: 1
paths./asm/groups/{group_id}/suppressions.get.tags[0]: Suppressions - Suppressions
paths./asm/groups/{group_id}/suppressions.parameters.length: 1
paths./asm/groups/{group_id}/suppressions.parameters[0].description: The id of the
  unsubscribe group that you are adding suppressions to.
paths./asm/groups/{group_id}/suppressions.parameters[0].in: path
paths./asm/groups/{group_id}/suppressions.parameters[0].name: group_id
paths./asm/groups/{group_id}/suppressions.parameters[0].required: true
paths./asm/groups/{group_id}/suppressions.parameters[0].type: string
paths./asm/groups/{group_id}/suppressions.post.consumes.length: 1
paths./asm/groups/{group_id}/suppressions.post.consumes[0]: application/json
paths./asm/groups/{group_id}/suppressions.post.description: |-
  **This endpoint allows you to add email addresses to an unsubscribe group.**

  If you attempt to add suppressions to a group that has been deleted or does not exist, the suppressions will be added to the global suppressions list.

  Suppressions are recipient email addresses that are added to [unsubscribe groups](https://sendgrid.com/docs/API_Reference/Web_API_v3/Suppression_Management/groups.html). Once a recipient's address is on the suppressions list for an unsubscribe group, they will not receive any emails that are tagged with that unsubscribe group.
paths./asm/groups/{group_id}/suppressions.post.operationId: POST_asm-groups-group_id-suppressions
paths./asm/groups/{group_id}/suppressions.post.parameters.length: 2
paths./asm/groups/{group_id}/suppressions.post.parameters[0].in: body
paths./asm/groups/{group_id}/suppressions.post.parameters[0].name: body
paths./asm/groups/{group_id}/suppressions.post.parameters[0].schema.example.recipient_emails.length: 2
paths./asm/groups/{group_id}/suppressions.post.parameters[0].schema.example.recipient_emails[0]: test1@example.com
paths./asm/groups/{group_id}/suppressions.post.parameters[0].schema.example.recipient_emails[1]: test2@example.com
paths./asm/groups/{group_id}/suppressions.post.parameters[0].schema.properties.recipient_emails.description: The
  email address that you want to add to the unsubscribe group.
paths./asm/groups/{group_id}/suppressions.post.parameters[0].schema.properties.recipient_emails.items.type: string
paths./asm/groups/{group_id}/suppressions.post.parameters[0].schema.properties.recipient_emails.type: array
paths./asm/groups/{group_id}/suppressions.post.parameters[0].schema.required.length: 1
paths./asm/groups/{group_id}/suppressions.post.parameters[0].schema.required[0]: recipient_emails
paths./asm/groups/{group_id}/suppressions.post.parameters[0].schema.type: object
paths./asm/groups/{group_id}/suppressions.post.parameters[1].$ref: '#/parameters/trait:onBehalfOfSubuser:on-behalf-of'
paths./asm/groups/{group_id}/suppressions.post.produces.length: 1
paths./asm/groups/{group_id}/suppressions.post.produces[0]: application/json
paths./asm/groups/{group_id}/suppressions.post.responses.201.description: ""
paths./asm/groups/{group_id}/suppressions.post.responses.201.examples.application/json.recipient_emails.length: 2
paths./asm/groups/{group_id}/suppressions.post.responses.201.examples.application/json.recipient_emails[0]: test1@example.com
paths./asm/groups/{group_id}/suppressions.post.responses.201.examples.application/json.recipient_emails[1]: test2@example.com
paths./asm/groups/{group_id}/suppressions.post.responses.201.schema.properties.recipient_emails.description: The
  email address that were added to the suppressions list.
paths./asm/groups/{group_id}/suppressions.post.responses.201.schema.properties.recipient_emails.items.type: string
paths./asm/groups/{group_id}/suppressions.post.responses.201.schema.properties.recipient_emails.type: array
paths./asm/groups/{group_id}/suppressions.post.responses.201.schema.required.length: 1
paths./asm/groups/{group_id}/suppressions.post.responses.201.schema.required[0]: recipient_emails
paths./asm/groups/{group_id}/suppressions.post.responses.201.schema.type: object
paths./asm/groups/{group_id}/suppressions.post.security.length: 1
paths./asm/groups/{group_id}/suppressions.post.security[0].Authorization.length: 0
paths./asm/groups/{group_id}/suppressions.post.summary: Add suppressions to a suppression
  group
paths./asm/groups/{group_id}/suppressions.post.tags.length: 1
paths./asm/groups/{group_id}/suppressions.post.tags[0]: Suppressions - Suppressions
paths./asm/groups/{group_id}/suppressions/{email}.delete.description: |-
  **This endpoint allows you to remove a suppressed email address from the given suppression group.**

  Suppressions are recipient email addresses that are added to [unsubscribe groups](https://sendgrid.com/docs/API_Reference/Web_API_v3/Suppression_Management/groups.html). Once a recipient's address is on the suppressions list for an unsubscribe group, they will not receive any emails that are tagged with that unsubscribe group.
paths./asm/groups/{group_id}/suppressions/{email}.delete.operationId: DELETE_asm-groups-group_id-suppressions-email
paths./asm/groups/{group_id}/suppressions/{email}.delete.parameters.length: 2
paths./asm/groups/{group_id}/suppressions/{email}.delete.parameters[0].in: body
paths./asm/groups/{group_id}/suppressions/{email}.delete.parameters[0].name: body
paths./asm/groups/{group_id}/suppressions/{email}.delete.parameters[0].schema.type: "null"
paths./asm/groups/{group_id}/suppressions/{email}.delete.parameters[1].$ref: '#/parameters/trait:onBehalfOfSubuser:on-behalf-of'
paths./asm/groups/{group_id}/suppressions/{email}.delete.responses.204.description: ""
paths./asm/groups/{group_id}/suppressions/{email}.delete.responses.204.schema.type: "null"
paths./asm/groups/{group_id}/suppressions/{email}.delete.security.length: 1
paths./asm/groups/{group_id}/suppressions/{email}.delete.security[0].Authorization.length: 0
paths./asm/groups/{group_id}/suppressions/{email}.delete.summary: Delete a suppression
  from a suppression group
paths./asm/groups/{group_id}/suppressions/{email}.delete.tags.length: 1
paths./asm/groups/{group_id}/suppressions/{email}.delete.tags[0]: Suppressions - Suppressions
paths./asm/groups/{group_id}/suppressions/{email}.parameters.length: 2
paths./asm/groups/{group_id}/suppressions/{email}.parameters[0].description: The id
  of the suppression group that you are removing an email address from.
paths./asm/groups/{group_id}/suppressions/{email}.parameters[0].in: path
paths./asm/groups/{group_id}/suppressions/{email}.parameters[0].name: group_id
paths./asm/groups/{group_id}/suppressions/{email}.parameters[0].required: true
paths./asm/groups/{group_id}/suppressions/{email}.parameters[0].type: string
paths./asm/groups/{group_id}/suppressions/{email}.parameters[1].description: The email
  address that you want to remove from the suppression group.
paths./asm/groups/{group_id}/suppressions/{email}.parameters[1].in: path
paths./asm/groups/{group_id}/suppressions/{email}.parameters[1].name: email
paths./asm/groups/{group_id}/suppressions/{email}.parameters[1].required: true
paths./asm/groups/{group_id}/suppressions/{email}.parameters[1].type: string
paths./asm/groups/{group_id}/suppressions/search.parameters.length: 1
paths./asm/groups/{group_id}/suppressions/search.parameters[0].description: The ID
  of the suppression group that you would like to search.
paths./asm/groups/{group_id}/suppressions/search.parameters[0].in: path
paths./asm/groups/{group_id}/suppressions/search.parameters[0].name: group_id
paths./asm/groups/{group_id}/suppressions/search.parameters[0].required: true
paths./asm/groups/{group_id}/suppressions/search.parameters[0].type: string
paths./asm/groups/{group_id}/suppressions/search.post.consumes.length: 1
paths./asm/groups/{group_id}/suppressions/search.post.consumes[0]: application/json
paths./asm/groups/{group_id}/suppressions/search.post.description: |-
  **This endpoint allows you to search a suppression group for multiple suppressions.**

  When given a list of email addresses and a group ID, this endpoint will return only the email addresses that have been unsubscribed from the given group.

  Suppressions are a list of email addresses that will not receive content sent under a given [group](https://sendgrid.com/docs/API_Reference/Web_API_v3/Suppression_Management/groups.html).
paths./asm/groups/{group_id}/suppressions/search.post.operationId: POST_asm-groups-group_id-suppressions-search
paths./asm/groups/{group_id}/suppressions/search.post.parameters.length: 2
paths./asm/groups/{group_id}/suppressions/search.post.parameters[0].in: body
paths./asm/groups/{group_id}/suppressions/search.post.parameters[0].name: body
paths./asm/groups/{group_id}/suppressions/search.post.parameters[0].schema.example.recipient_emails.length: 3
paths./asm/groups/{group_id}/suppressions/search.post.parameters[0].schema.example.recipient_emails[0]: exists1@example.com
paths./asm/groups/{group_id}/suppressions/search.post.parameters[0].schema.example.recipient_emails[1]: exists2@example.com
paths./asm/groups/{group_id}/suppressions/search.post.parameters[0].schema.example.recipient_emails[2]: doesnotexists@example.com
paths./asm/groups/{group_id}/suppressions/search.post.parameters[0].schema.properties.recipient_emails.description: The
  list of email address that you want to search the suppression group for.
paths./asm/groups/{group_id}/suppressions/search.post.parameters[0].schema.properties.recipient_emails.items.type: string
paths./asm/groups/{group_id}/suppressions/search.post.parameters[0].schema.properties.recipient_emails.type: array
paths./asm/groups/{group_id}/suppressions/search.post.parameters[0].schema.required.length: 1
paths./asm/groups/{group_id}/suppressions/search.post.parameters[0].schema.required[0]: recipient_emails
paths./asm/groups/{group_id}/suppressions/search.post.parameters[0].schema.type: object
paths./asm/groups/{group_id}/suppressions/search.post.parameters[1].$ref: '#/parameters/trait:onBehalfOfSubuser:on-behalf-of'
paths./asm/groups/{group_id}/suppressions/search.post.produces.length: 1
paths./asm/groups/{group_id}/suppressions/search.post.produces[0]: application/json
paths./asm/groups/{group_id}/suppressions/search.post.responses.200.description: ""
paths./asm/groups/{group_id}/suppressions/search.post.responses.200.examples.application/json.recipient_emails.length: 2
paths./asm/groups/{group_id}/suppressions/search.post.responses.200.examples.application/json.recipient_emails[0]: exists1@example.com
paths./asm/groups/{group_id}/suppressions/search.post.responses.200.examples.application/json.recipient_emails[1]: exists2@example.com
paths./asm/groups/{group_id}/suppressions/search.post.responses.200.schema.properties.recipient_emails.description: The
  email address from your search that do exist in the suppression group.
paths./asm/groups/{group_id}/suppressions/search.post.responses.200.schema.properties.recipient_emails.items.type: string
paths./asm/groups/{group_id}/suppressions/search.post.responses.200.schema.properties.recipient_emails.type: array
paths./asm/groups/{group_id}/suppressions/search.post.responses.200.schema.required.length: 1
paths./asm/groups/{group_id}/suppressions/search.post.responses.200.schema.required[0]: recipient_emails
paths./asm/groups/{group_id}/suppressions/search.post.responses.200.schema.type: object
paths./asm/groups/{group_id}/suppressions/search.post.security.length: 1
paths./asm/groups/{group_id}/suppressions/search.post.security[0].Authorization.length: 0
paths./asm/groups/{group_id}/suppressions/search.post.summary: Search for suppressions
  within a group
paths./asm/groups/{group_id}/suppressions/search.post.tags.length: 1
paths./asm/groups/{group_id}/suppressions/search.post.tags[0]: Suppressions - Suppressions
paths./asm/suppressions.get.description: |-
  **This endpoint allows you to retrieve a list of all suppressions.**

  Suppressions are a list of email addresses that will not receive content sent under a given [group](https://sendgrid.com/docs/API_Reference/Web_API_v3/Suppression_Management/groups.html).
paths./asm/suppressions.get.operationId: GET_asm-suppressions
paths./asm/suppressions.get.parameters.length: 1
paths./asm/suppressions.get.parameters[0].$ref: '#/parameters/trait:onBehalfOfSubuser:on-behalf-of'
paths./asm/suppressions.get.produces.length: 1
paths./asm/suppressions.get.produces[0]: application/json
paths./asm/suppressions.get.responses.200.description: ""
paths./asm/suppressions.get.responses.200.examples.application/json.length: 3
paths./asm/suppressions.get.responses.200.examples.application/json[0].created_at: 1.4109868e+09
paths./asm/suppressions.get.responses.200.examples.application/json[0].email: test1@example.com
paths./asm/suppressions.get.responses.200.examples.application/json[0].group_id: 1
paths./asm/suppressions.get.responses.200.examples.application/json[0].group_name: Weekly
  News
paths./asm/suppressions.get.responses.200.examples.application/json[1].created_at: 1.4114936e+09
paths./asm/suppressions.get.responses.200.examples.application/json[1].email: test1@example.com
paths./asm/suppressions.get.responses.200.examples.application/json[1].group_id: 2
paths./asm/suppressions.get.responses.200.examples.application/json[1].group_name: Daily
  News
paths./asm/suppressions.get.responses.200.examples.application/json[2].created_at: 1.4114936e+09
paths./asm/suppressions.get.responses.200.examples.application/json[2].email: test2@example.com
paths./asm/suppressions.get.responses.200.examples.application/json[2].group_id: 2
paths./asm/suppressions.get.responses.200.examples.application/json[2].group_name: Daily
  News
paths./asm/suppressions.get.responses.200.schema.items.properties.created_at.description: A
  UNIX timestamp indicating when the suppression was created.
paths./asm/suppressions.get.responses.200.schema.items.properties.created_at.type: integer
paths./asm/suppressions.get.responses.200.schema.items.properties.email.description: The
  email address that was suppressed.
paths./asm/suppressions.get.responses.200.schema.items.properties.email.type: string
paths./asm/suppressions.get.responses.200.schema.items.properties.group_id.description: The
  id of the suppression group that this email address belongs to.
paths./asm/suppressions.get.responses.200.schema.items.properties.group_id.type: integer
paths./asm/suppressions.get.responses.200.schema.items.properties.group_name.description: The
  name of the suppression group that this email address belongs to.
paths./asm/suppressions.get.responses.200.schema.items.properties.group_name.type: string
paths./asm/suppressions.get.responses.200.schema.items.required.length: 4
paths./asm/suppressions.get.responses.200.schema.items.required[0]: email
paths./asm/suppressions.get.responses.200.schema.items.required[1]: group_id
paths./asm/suppressions.get.responses.200.schema.items.required[2]: group_name
paths./asm/suppressions.get.responses.200.schema.items.required[3]: created_at
paths./asm/suppressions.get.responses.200.schema.items.type: object
paths./asm/suppressions.get.responses.200.schema.type: array
paths./asm/suppressions.get.security.length: 1
paths./asm/suppressions.get.security[0].Authorization.length: 0
paths./asm/suppressions.get.summary: Retrieve all suppressions
paths./asm/suppressions.get.tags.length: 1
paths./asm/suppressions.get.tags[0]: Suppressions - Suppressions
paths./asm/suppressions/{email}.get.description: |-
  **This endpoint returns the list of all groups that the given email address has been unsubscribed from.**

  Suppressions are a list of email addresses that will not receive content sent under a given [group](https://sendgrid.com/docs/API_Reference/Web_API_v3/Suppression_Management/groups.html).
paths./asm/suppressions/{email}.get.operationId: GET_asm-suppressions-email
paths./asm/suppressions/{email}.get.parameters.length: 1
paths./asm/suppressions/{email}.get.parameters[0].$ref: '#/parameters/trait:onBehalfOfSubuser:on-behalf-of'
paths./asm/suppressions/{email}.get.produces.length: 1
paths./asm/suppressions/{email}.get.produces[0]: application/json
paths./asm/suppressions/{email}.get.responses.200.description: ""
paths./asm/suppressions/{email}.get.responses.200.examples.application/json.suppressions.length: 3
paths./asm/suppressions/{email}.get.responses.200.examples.application/json.suppressions[0].description: Optional
  description.
paths./asm/suppressions/{email}.get.responses.200.examples.application/json.suppressions[0].id: 1
paths./asm/suppressions/{email}.get.responses.200.examples.application/json.suppressions[0].is_default: true
paths./asm/suppressions/{email}.get.responses.200.examples.application/json.suppressions[0].name: Weekly
  News
paths./asm/suppressions/{email}.get.responses.200.examples.application/json.suppressions[0].suppressed: true
paths./asm/suppressions/{email}.get.responses.200.examples.application/json.suppressions[1].description: Some
  daily news.
paths./asm/suppressions/{email}.get.responses.200.examples.application/json.suppressions[1].id: 2
paths./asm/suppressions/{email}.get.responses.200.examples.application/json.suppressions[1].is_default: true
paths./asm/suppressions/{email}.get.responses.200.examples.application/json.suppressions[1].name: Daily
  News
paths./asm/suppressions/{email}.get.responses.200.examples.application/json.suppressions[1].suppressed: true
paths./asm/suppressions/{email}.get.responses.200.examples.application/json.suppressions[2].description: An
  old group.
paths./asm/suppressions/{email}.get.responses.200.examples.application/json.suppressions[2].id: 2
paths./asm/suppressions/{email}.get.responses.200.examples.application/json.suppressions[2].is_default: false
paths./asm/suppressions/{email}.get.responses.200.examples.application/json.suppressions[2].name: Old
  News
paths./asm/suppressions/{email}.get.responses.200.examples.application/json.suppressions[2].suppressed: false
paths./asm/suppressions/{email}.get.responses.200.schema.properties.suppressions.description: The
  array of suppression groups.
paths./asm/suppressions/{email}.get.responses.200.schema.properties.suppressions.items.properties.description.description: The
  description of the suppression group.
paths./asm/suppressions/{email}.get.responses.200.schema.properties.suppressions.items.properties.description.type: string
paths./asm/suppressions/{email}.get.responses.200.schema.properties.suppressions.items.properties.id.description: The
  id of the suppression group.
paths./asm/suppressions/{email}.get.responses.200.schema.properties.suppressions.items.properties.id.type: integer
paths./asm/suppressions/{email}.get.responses.200.schema.properties.suppressions.items.properties.is_default.description: Indicates
  if the suppression group  is set as the default.
paths./asm/suppressions/{email}.get.responses.200.schema.properties.suppressions.items.properties.is_default.type: boolean
paths./asm/suppressions/{email}.get.responses.200.schema.properties.suppressions.items.properties.name.description: The
  name of the suppression group.
paths./asm/suppressions/{email}.get.responses.200.schema.properties.suppressions.items.properties.name.type: string
paths./asm/suppressions/{email}.get.responses.200.schema.properties.suppressions.items.properties.suppressed.description: Indicates
  if the given email address is suppressed for this group.
paths./asm/suppressions/{email}.get.responses.200.schema.properties.suppressions.items.properties.suppressed.type: boolean
paths./asm/suppressions/{email}.get.responses.200.schema.properties.suppressions.items.required.length: 5
paths./asm/suppressions/{email}.get.responses.200.schema.properties.suppressions.items.required[0]: description
paths./asm/suppressions/{email}.get.responses.200.schema.properties.suppressions.items.required[1]: id
paths./asm/suppressions/{email}.get.responses.200.schema.properties.suppressions.items.required[2]: is_default
paths./asm/suppressions/{email}.get.responses.200.schema.properties.suppressions.items.required[3]: name
paths./asm/suppressions/{email}.get.responses.200.schema.properties.suppressions.items.required[4]: suppressed
paths./asm/suppressions/{email}.get.responses.200.schema.properties.suppressions.items.type: object
paths./asm/suppressions/{email}.get.responses.200.schema.properties.suppressions.type: array
paths./asm/suppressions/{email}.get.responses.200.schema.required.length: 1
paths./asm/suppressions/{email}.get.responses.200.schema.required[0]: suppressions
paths./asm/suppressions/{email}.get.responses.200.schema.type: object
paths./asm/suppressions/{email}.get.security.length: 1
paths./asm/suppressions/{email}.get.security[0].Authorization.length: 0
paths./asm/suppressions/{email}.get.summary: Retrieve all suppression groups for an
  email address
paths./asm/suppressions/{email}.get.tags.length: 1
paths./asm/suppressions/{email}.get.tags[0]: Suppressions - Suppressions
paths./asm/suppressions/{email}.parameters.length: 1
paths./asm/suppressions/{email}.parameters[0].description: The email address that
  you want to search suppression groups for.
paths./asm/suppressions/{email}.parameters[0].in: path
paths./asm/suppressions/{email}.parameters[0].name: email
paths./asm/suppressions/{email}.parameters[0].required: true
paths./asm/suppressions/{email}.parameters[0].type: string
paths./asm/suppressions/global.post.consumes.length: 1
paths./asm/suppressions/global.post.consumes[0]: application/json
paths./asm/suppressions/global.post.description: |-
  **This endpoint allows you to add one or more email addresses to the global suppressions group.**

  A global suppression (or global unsubscribe) is an email address of a recipient who does not want to receive any of your messages. A globally suppressed recipient will be removed from any email you send. For more information, please see our [User Guide](https://sendgrid.com/docs/User_Guide/Suppressions/global_unsubscribes.html).
paths./asm/suppressions/global.post.operationId: POST_asm-suppressions-global
paths./asm/suppressions/global.post.parameters.length: 2
paths./asm/suppressions/global.post.parameters[0].in: body
paths./asm/suppressions/global.post.parameters[0].name: body
paths./asm/suppressions/global.post.parameters[0].schema.example.recipient_emails.length: 2
paths./asm/suppressions/global.post.parameters[0].schema.example.recipient_emails[0]: test1@example.com
paths./asm/suppressions/global.post.parameters[0].schema.example.recipient_emails[1]: test2@example.com
paths./asm/suppressions/global.post.parameters[0].schema.properties.recipient_emails.description: The
  email address, or addresses, that you want to add to the global suppressions group.
paths./asm/suppressions/global.post.parameters[0].schema.properties.recipient_emails.items.type: string
paths./asm/suppressions/global.post.parameters[0].schema.properties.recipient_emails.type: array
paths./asm/suppressions/global.post.parameters[0].schema.type: object
paths./asm/suppressions/global.post.parameters[1].$ref: '#/parameters/trait:onBehalfOfSubuser:on-behalf-of'
paths./asm/suppressions/global.post.produces.length: 1
paths./asm/suppressions/global.post.produces[0]: application/json
paths./asm/suppressions/global.post.responses.201.description: ""
paths./asm/suppressions/global.post.responses.201.examples.application/json.recipient_emails.length: 2
paths./asm/suppressions/global.post.responses.201.examples.application/json.recipient_emails[0]: test1@example.com
paths./asm/suppressions/global.post.responses.201.examples.application/json.recipient_emails[1]: test2@example.com
paths./asm/suppressions/global.post.responses.201.schema.properties.recipient_emails.description: The
  email addresses that are globally suppressed
paths./asm/suppressions/global.post.responses.201.schema.properties.recipient_emails.items.type: string
paths./asm/suppressions/global.post.responses.201.schema.properties.recipient_emails.type: array
paths./asm/suppressions/global.post.responses.201.schema.required.length: 1
paths./asm/suppressions/global.post.responses.201.schema.required[0]: recipient_emails
paths./asm/suppressions/global.post.responses.201.schema.type: object
paths./asm/suppressions/global.post.security.length: 1
paths./asm/suppressions/global.post.security[0].Authorization.length: 0
paths./asm/suppressions/global.post.summary: Add recipient addresses to the global
  suppression group.
paths./asm/suppressions/global.post.tags.length: 1
paths./asm/suppressions/global.post.tags[0]: Suppressions - Global Suppressions
paths./asm/suppressions/global/{email}.delete.description: |-
  **This endpoint allows you to remove an email address from the global suppressions group.**

  A global suppression (or global unsubscribe) is an email address of a recipient who does not want to receive any of your messages. A globally suppressed recipient will be removed from any email you send. For more information, please see our [User Guide](https://sendgrid.com/docs/User_Guide/Suppressions/global_unsubscribes.html).
paths./asm/suppressions/global/{email}.delete.operationId: DELETE_asm-suppressions-global-email
paths./asm/suppressions/global/{email}.delete.parameters.length: 2
paths./asm/suppressions/global/{email}.delete.parameters[0].in: body
paths./asm/suppressions/global/{email}.delete.parameters[0].name: body
paths./asm/suppressions/global/{email}.delete.parameters[0].schema.type: "null"
paths./asm/suppressions/global/{email}.delete.parameters[1].$ref: '#/parameters/trait:onBehalfOfSubuser:on-behalf-of'
paths./asm/suppressions/global/{email}.delete.responses.204.description: ""
paths./asm/suppressions/global/{email}.delete.responses.204.schema.type: object
paths./asm/suppressions/global/{email}.delete.security.length: 1
paths./asm/suppressions/global/{email}.delete.security[0].Authorization.length: 0
paths./asm/suppressions/global/{email}.delete.summary: Delete a Global Suppression
paths./asm/suppressions/global/{email}.delete.tags.length: 1
paths./asm/suppressions/global/{email}.delete.tags[0]: Suppressions - Global Suppressions
paths./asm/suppressions/global/{email}.get.description: |-
  **This endpoint allows you to retrieve a global suppression. You can also use this endpoint to confirm if an email address is already globally suppresed.**

  If the email address you include in the URL path parameter `{email}` is alreayd globally suppressed, the response will include that email address. If the address you enter for `{email}` is not globally suppressed, an empty JSON object `{}` will be returned.

  A global suppression (or global unsubscribe) is an email address of a recipient who does not want to receive any of your messages. A globally suppressed recipient will be removed from any email you send. For more information, please see our [User Guide](https://sendgrid.com/docs/User_Guide/Suppressions/global_unsubscribes.html).
paths./asm/suppressions/global/{email}.get.operationId: GET_asm-suppressions-global-email
paths./asm/suppressions/global/{email}.get.parameters.length: 1
paths./asm/suppressions/global/{email}.get.parameters[0].$ref: '#/parameters/trait:onBehalfOfSubuser:on-behalf-of'
paths./asm/suppressions/global/{email}.get.produces.length: 1
paths./asm/suppressions/global/{email}.get.produces[0]: application/json
paths./asm/suppressions/global/{email}.get.responses.200.description: ""
paths./asm/suppressions/global/{email}.get.responses.200.schema.properties.recipient_email.description: The
  email address that is globally suppressed. This will be an empty object if the email
  address you included in your call is not globally suppressed.
paths./asm/suppressions/global/{email}.get.responses.200.schema.properties.recipient_email.type: string
paths./asm/suppressions/global/{email}.get.responses.200.schema.required.length: 1
paths./asm/suppressions/global/{email}.get.responses.200.schema.required[0]: recipient_email
paths./asm/suppressions/global/{email}.get.responses.200.schema.title: Retrieve a
  Global Suppression response
paths./asm/suppressions/global/{email}.get.responses.200.schema.type: object
paths./asm/suppressions/global/{email}.get.security.length: 1
paths./asm/suppressions/global/{email}.get.security[0].Authorization.length: 0
paths./asm/suppressions/global/{email}.get.summary: Retrieve a Global Suppression
paths./asm/suppressions/global/{email}.get.tags.length: 1
paths./asm/suppressions/global/{email}.get.tags[0]: Suppressions - Global Suppressions
paths./asm/suppressions/global/{email}.parameters.length: 1
paths./asm/suppressions/global/{email}.parameters[0].description: The email address
  of the global suppression you want to retrieve. Or, if you want to check if an email
  address is on the global suppressions list, enter that email address here.
paths./asm/suppressions/global/{email}.parameters[0].in: path
paths./asm/suppressions/global/{email}.parameters[0].name: email
paths./asm/suppressions/global/{email}.parameters[0].required: true
paths./asm/suppressions/global/{email}.parameters[0].type: string
paths./browsers/stats.get.description: |-
  **This endpoint allows you to retrieve your email statistics segmented by browser type.**

  **We only store up to 7 days of email activity in our database.** By default, 500 items will be returned per request via the Advanced Stats API endpoints.

  Advanced Stats provide a more in-depth view of your email statistics and the actions taken by your recipients. You can segment these statistics by geographic location, device type, client type, browser, and mailbox provider. For more information about statistics, please see our [User Guide](https://sendgrid.com/docs/User_Guide/Statistics/index.html).
paths./browsers/stats.get.operationId: GET_browsers-stats
paths./browsers/stats.get.parameters.length: 7
paths./browsers/stats.get.parameters[0].description: The starting date of the statistics
  to retrieve. Must follow format YYYY-MM-DD.
paths./browsers/stats.get.parameters[0].in: query
paths./browsers/stats.get.parameters[0].name: start_date
paths./browsers/stats.get.parameters[0].required: true
paths./browsers/stats.get.parameters[0].type: string
paths./browsers/stats.get.parameters[1].description: The end date of the statistics
  to retrieve. Defaults to today.
paths./browsers/stats.get.parameters[1].in: query
paths./browsers/stats.get.parameters[1].name: end_date
paths./browsers/stats.get.parameters[1].required: false
paths./browsers/stats.get.parameters[1].type: string
paths./browsers/stats.get.parameters[2].description: The number of results to include
  on each page.
paths./browsers/stats.get.parameters[2].in: query
paths./browsers/stats.get.parameters[2].name: limit
paths./browsers/stats.get.parameters[2].required: false
paths./browsers/stats.get.parameters[2].type: string
paths./browsers/stats.get.parameters[3].description: The number of results to exclude.
paths./browsers/stats.get.parameters[3].in: query
paths./browsers/stats.get.parameters[3].name: offset
paths./browsers/stats.get.parameters[3].required: false
paths./browsers/stats.get.parameters[3].type: string
paths./browsers/stats.get.parameters[4].description: How to group the stats. Must
  be either "day", "week", or "month".
paths./browsers/stats.get.parameters[4].enum.length: 3
paths./browsers/stats.get.parameters[4].enum[0]: day
paths./browsers/stats.get.parameters[4].enum[1]: week
paths./browsers/stats.get.parameters[4].enum[2]: month
paths./browsers/stats.get.parameters[4].in: query
paths./browsers/stats.get.parameters[4].name: aggregated_by
paths./browsers/stats.get.parameters[4].required: false
paths./browsers/stats.get.parameters[4].type: string
paths./browsers/stats.get.parameters[5].description: The browsers to get statistics
  for. You can include up to 10 different browsers by including this parameter multiple
  times.
paths./browsers/stats.get.parameters[5].in: query
paths./browsers/stats.get.parameters[5].name: browsers
paths./browsers/stats.get.parameters[5].required: false
paths./browsers/stats.get.parameters[5].type: string
paths./browsers/stats.get.parameters[6].$ref: '#/parameters/trait:onBehalfOfSubuser:on-behalf-of'
paths./browsers/stats.get.produces.length: 1
paths./browsers/stats.get.produces[0]: application/json
paths./browsers/stats.get.responses.200.description: ""
paths./browsers/stats.get.responses.200.examples.application/json.length: 2
paths./browsers/stats.get.responses.200.examples.application/json[0].date: 2014-10-01
paths./browsers/stats.get.responses.200.examples.application/json[0].stats.length: 2
paths./browsers/stats.get.responses.200.examples.application/json[0].stats[0].metrics.clicks: 0
paths./browsers/stats.get.responses.200.examples.application/json[0].stats[0].metrics.unique_clicks: 0
paths./browsers/stats.get.responses.200.examples.application/json[0].stats[0].name: Chrome
paths./browsers/stats.get.responses.200.examples.application/json[0].stats[0].type: browser
paths./browsers/stats.get.responses.200.examples.application/json[0].stats[1].metrics.clicks: 1
paths./browsers/stats.get.responses.200.examples.application/json[0].stats[1].metrics.unique_clicks: 1
paths./browsers/stats.get.responses.200.examples.application/json[0].stats[1].name: Firefox
paths./browsers/stats.get.responses.200.examples.application/json[0].stats[1].type: browser
paths./browsers/stats.get.responses.200.examples.application/json[1].date: 2014-10-02
paths./browsers/stats.get.responses.200.examples.application/json[1].stats.length: 2
paths./browsers/stats.get.responses.200.examples.application/json[1].stats[0].metrics.clicks: 0
paths./browsers/stats.get.responses.200.examples.application/json[1].stats[0].metrics.unique_clicks: 0
paths./browsers/stats.get.responses.200.examples.application/json[1].stats[0].name: Chrome
paths./browsers/stats.get.responses.200.examples.application/json[1].stats[0].type: browser
paths./browsers/stats.get.responses.200.examples.application/json[1].stats[1].metrics.clicks: 1
paths./browsers/stats.get.responses.200.examples.application/json[1].stats[1].metrics.unique_clicks: 1
paths./browsers/stats.get.responses.200.examples.application/json[1].stats[1].name: Firefox
paths./browsers/stats.get.responses.200.examples.application/json[1].stats[1].type: browser
paths./browsers/stats.get.responses.200.schema.items.$ref: '#/definitions/advanced_stats_clicks'
paths./browsers/stats.get.responses.200.schema.type: array
paths./browsers/stats.get.security.length: 1
paths./browsers/stats.get.security[0].Authorization.length: 0
paths./browsers/stats.get.summary: Retrieve email statistics by browser.
paths./browsers/stats.get.tags.length: 1
paths./browsers/stats.get.tags[0]: Stats
paths./campaigns.get.description: |-
  **This endpoint allows you to retrieve a list of all of your campaigns.**

  Returns campaigns in reverse order they were created (newest first).

  Returns an empty array if no campaigns exist.

  For more information:

  * [User Guide > Marketing Campaigns](https://sendgrid.com/docs/User_Guide/Marketing_Campaigns/index.html)
paths./campaigns.get.operationId: GET_campaigns
paths./campaigns.get.parameters.length: 2
paths./campaigns.get.parameters[0].default: 10
paths./campaigns.get.parameters[0].description: The number of results you would like
  to receive at a time.
paths./campaigns.get.parameters[0].in: query
paths./campaigns.get.parameters[0].name: limit
paths./campaigns.get.parameters[0].type: integer
paths./campaigns.get.parameters[1].default: 0
paths./campaigns.get.parameters[1].description: The index of the first campaign to
  return, where 0 is the first campaign.
paths./campaigns.get.parameters[1].in: query
paths./campaigns.get.parameters[1].name: offset
paths./campaigns.get.parameters[1].type: integer
paths./campaigns.get.produces.length: 1
paths./campaigns.get.produces[0]: application/json
paths./campaigns.get.responses.200.description: ""
paths./campaigns.get.responses.200.examples.application/json.result.length: 1
paths./campaigns.get.responses.200.examples.application/json.result[0].categories.length: 1
paths./campaigns.get.responses.200.examples.application/json.result[0].categories[0]: spring
  line
paths./campaigns.get.responses.200.examples.application/json.result[0].custom_unsubscribe_url: ""
paths./campaigns.get.responses.200.examples.application/json.result[0].html_content: <html><head><title></title></head><body><p>Check
  out our spring line!</p></body></html>
paths./campaigns.get.responses.200.examples.application/json.result[0].id: 986724
paths./campaigns.get.responses.200.examples.application/json.result[0].ip_pool: marketing
paths./campaigns.get.responses.200.examples.application/json.result[0].list_ids.length: 1
paths./campaigns.get.responses.200.examples.application/json.result[0].list_ids[0]: 110
paths./campaigns.get.responses.200.examples.application/json.result[0].plain_content: Check
  out our spring line!
paths./campaigns.get.responses.200.examples.application/json.result[0].segment_ids.length: 1
paths./campaigns.get.responses.200.examples.application/json.result[0].segment_ids[0]: 110
paths./campaigns.get.responses.200.examples.application/json.result[0].sender_id: 124451
paths./campaigns.get.responses.200.examples.application/json.result[0].status: Draft
paths./campaigns.get.responses.200.examples.application/json.result[0].subject: New
  Products for Spring!
paths./campaigns.get.responses.200.examples.application/json.result[0].suppression_group_id: 42
paths./campaigns.get.responses.200.examples.application/json.result[0].title: March
  Newsletter
paths./campaigns.get.responses.200.schema.properties.result.items.properties.categories.items.type: string
paths./campaigns.get.responses.200.schema.properties.result.items.properties.categories.type: array
paths./campaigns.get.responses.200.schema.properties.result.items.properties.custom_unsubscribe_url.type: string
paths./campaigns.get.responses.200.schema.properties.result.items.properties.html_content.type: string
paths./campaigns.get.responses.200.schema.properties.result.items.properties.id.type: integer
paths./campaigns.get.responses.200.schema.properties.result.items.properties.ip_pool.type: string
paths./campaigns.get.responses.200.schema.properties.result.items.properties.list_ids.items.type: integer
paths./campaigns.get.responses.200.schema.properties.result.items.properties.list_ids.type: array
paths./campaigns.get.responses.200.schema.properties.result.items.properties.plain_content.type: string
paths./campaigns.get.responses.200.schema.properties.result.items.properties.segment_ids.items.type: integer
paths./campaigns.get.responses.200.schema.properties.result.items.properties.segment_ids.type: array
paths./campaigns.get.responses.200.schema.properties.result.items.properties.sender_id.type: integer
paths./campaigns.get.responses.200.schema.properties.result.items.properties.status.type: string
paths./campaigns.get.responses.200.schema.properties.result.items.properties.subject.type: string
paths./campaigns.get.responses.200.schema.properties.result.items.properties.suppression_group_id.type: integer
paths./campaigns.get.responses.200.schema.properties.result.items.properties.title.type: string
paths./campaigns.get.responses.200.schema.properties.result.items.type: object
paths./campaigns.get.responses.200.schema.properties.result.type: array
paths./campaigns.get.responses.200.schema.type: object
paths./campaigns.get.security.length: 1
paths./campaigns.get.security[0].Authorization.length: 0
paths./campaigns.get.summary: Retrieve all Campaigns
paths./campaigns.get.tags.length: 1
paths./campaigns.get.tags[0]: Campaigns API
paths./campaigns.post.consumes.length: 1
paths./campaigns.post.consumes[0]: application/json
paths./campaigns.post.description: |-
  **This endpoint allows you to create a campaign.**

  Our Marketing Campaigns API lets you create, manage, send, and schedule campaigns.

  Note: In order to send or schedule the campaign, you will be required to provide a subject, sender ID, content (we suggest both html and plain text), and at least one list or segment ID. This information is not required when you create a campaign.

  For more information:

  * [User Guide > Marketing Campaigns](https://sendgrid.com/docs/User_Guide/Marketing_Campaigns/index.html)
paths./campaigns.post.operationId: POST_campaigns
paths./campaigns.post.parameters.length: 1
paths./campaigns.post.parameters[0].in: body
paths./campaigns.post.parameters[0].name: body
paths./campaigns.post.parameters[0].schema.$ref: '#/definitions/campaign_request'
paths./campaigns.post.parameters[0].schema.example.categories.length: 1
paths./campaigns.post.parameters[0].schema.example.categories[0]: spring line
paths./campaigns.post.parameters[0].schema.example.custom_unsubscribe_url: ""
paths./campaigns.post.parameters[0].schema.example.html_content: <html><head><title></title></head><body><p>Check
  out our spring line!</p></body></html>
paths./campaigns.post.parameters[0].schema.example.ip_pool: marketing
paths./campaigns.post.parameters[0].schema.example.list_ids.length: 2
paths./campaigns.post.parameters[0].schema.example.list_ids[0]: 110
paths./campaigns.post.parameters[0].schema.example.list_ids[1]: 124
paths./campaigns.post.parameters[0].schema.example.plain_content: Check out our spring
  line!
paths./campaigns.post.parameters[0].schema.example.segment_ids.length: 1
paths./campaigns.post.parameters[0].schema.example.segment_ids[0]: 110
paths./campaigns.post.parameters[0].schema.example.sender_id: 124451
paths./campaigns.post.parameters[0].schema.example.subject: New Products for Spring!
paths./campaigns.post.parameters[0].schema.example.suppression_group_id: 42
paths./campaigns.post.parameters[0].schema.example.title: March Newsletter
paths./campaigns.post.produces.length: 1
paths./campaigns.post.produces[0]: application/json
paths./campaigns.post.responses.201.description: ""
paths./campaigns.post.responses.201.examples.application/json.categories.length: 1
paths./campaigns.post.responses.201.examples.application/json.categories[0]: spring
  line
paths./campaigns.post.responses.201.examples.application/json.custom_unsubscribe_url: ""
paths./campaigns.post.responses.201.examples.application/json.html_content: <html><head><title></title></head><body><p>Check
  out our spring line!</p></body></html>
paths./campaigns.post.responses.201.examples.application/json.id: 986724
paths./campaigns.post.responses.201.examples.application/json.ip_pool: marketing
paths./campaigns.post.responses.201.examples.application/json.list_ids.length: 2
paths./campaigns.post.responses.201.examples.application/json.list_ids[0]: 110
paths./campaigns.post.responses.201.examples.application/json.list_ids[1]: 124
paths./campaigns.post.responses.201.examples.application/json.plain_content: Check
  out our spring line!
paths./campaigns.post.responses.201.examples.application/json.segment_ids.length: 1
paths./campaigns.post.responses.201.examples.application/json.segment_ids[0]: 110
paths./campaigns.post.responses.201.examples.application/json.sender_id: 124451
paths./campaigns.post.responses.201.examples.application/json.status: Draft
paths./campaigns.post.responses.201.examples.application/json.subject: New Products
  for Spring!
paths./campaigns.post.responses.201.examples.application/json.suppression_group_id: 42
paths./campaigns.post.responses.201.examples.application/json.title: March Newsletter
paths./campaigns.post.responses.201.schema.$ref: '#/definitions/campaign_response'
paths./campaigns.post.responses.400.description: |-
  "title": "title can't be blank"
  "title": "title is too long (maximum is 100 characters)"
  "categories": "categories exceeds 10 category limit"
  "html_content": "html_content exceeds the 1MB limit"
  "plain_content": "plain_content exceeds the 1MB limit"
  "sender_id": "sender_id does not exist"
  "sender_id": "sender_id is not a verified sender identity"
  "list_ids": "list_ids do not all exist"
  "segment_ids": "segment_ids do not all exist"
  "ip_pool": "The ip pool you provided is invalid"
  "suppression_group_id": "suppression_group_id does not exist"
  "unsubscribes": "Either suppression_group_id or custom_unsubscribe_url may be set/used, but not both. Please remove one before setting the other."
  "": "The JSON you have submitted cannot be parsed."
  "": "You've reached your limit of 250 campaigns. Please delete one or more and try again."
paths./campaigns.post.responses.400.examples.application/json.errors.length: 14
paths./campaigns.post.responses.400.examples.application/json.errors[0].field: title
paths./campaigns.post.responses.400.examples.application/json.errors[0].message: title
  can't be blank
paths./campaigns.post.responses.400.examples.application/json.errors[1].field: title
paths./campaigns.post.responses.400.examples.application/json.errors[1].message: title
  is too long (maximum is 100 characters)
paths./campaigns.post.responses.400.examples.application/json.errors[2].field: categories
paths./campaigns.post.responses.400.examples.application/json.errors[2].message: categories
  exceeds 10 category limit
paths./campaigns.post.responses.400.examples.application/json.errors[3].field: html_content
paths./campaigns.post.responses.400.examples.application/json.errors[3].message: html_content
  exceeds the 1MB limit
paths./campaigns.post.responses.400.examples.application/json.errors[4].field: plain_content
paths./campaigns.post.responses.400.examples.application/json.errors[4].message: plain_content
  exceeds the 1MB limit
paths./campaigns.post.responses.400.examples.application/json.errors[5].field: sender_id
paths./campaigns.post.responses.400.examples.application/json.errors[5].message: sender_id
  does not exist
paths./campaigns.post.responses.400.examples.application/json.errors[6].field: sender_id
paths./campaigns.post.responses.400.examples.application/json.errors[6].message: sender_id
  is not a verified sender identity
paths./campaigns.post.responses.400.examples.application/json.errors[7].field: list_ids
paths./campaigns.post.responses.400.examples.application/json.errors[7].message: list_ids
  do not all exist
paths./campaigns.post.responses.400.examples.application/json.errors[8].field: segment_ids
paths./campaigns.post.responses.400.examples.application/json.errors[8].message: segment_ids
  do not all exist
paths./campaigns.post.responses.400.examples.application/json.errors[9].field: ip_pool
paths./campaigns.post.responses.400.examples.application/json.errors[9].message: The
  ip pool you provided is invalid
paths./campaigns.post.responses.400.examples.application/json.errors[10].field: suppression_group_id
paths./campaigns.post.responses.400.examples.application/json.errors[10].message: suppression_group_id
  does not exist
paths./campaigns.post.responses.400.examples.application/json.errors[11].field: unsubscribes
paths./campaigns.post.responses.400.examples.application/json.errors[11].message: Either
  suppression_group_id or custom_unsubscribe_url may be set/used, but not both. Please
  remove one before setting the other.
paths./campaigns.post.responses.400.examples.application/json.errors[12].message: The
  JSON you have submitted cannot be parsed.
paths./campaigns.post.responses.400.examples.application/json.errors[13].message: You've
  reached your limit of 250 campaigns. Please delete one or more and try again.
paths./campaigns.post.responses.400.schema.$ref: '#/definitions/global:ErrorResponse'
paths./campaigns.post.responses.401.description: ""
paths./campaigns.post.responses.401.schema.type: object
paths./campaigns.post.security.length: 1
paths./campaigns.post.security[0].Authorization.length: 0
paths./campaigns.post.summary: Create a Campaign
paths./campaigns.post.tags.length: 1
paths./campaigns.post.tags[0]: Campaigns API
paths./campaigns/{campaign_id}.delete.description: |-
  **This endpoint allows you to delete a specific campaign.**

  Our Marketing Campaigns API lets you create, manage, send, and schedule campaigns.

  For more information:

  * [User Guide > Marketing Campaigns](https://sendgrid.com/docs/User_Guide/Marketing_Campaigns/index.html)
paths./campaigns/{campaign_id}.delete.operationId: DELETE_campaigns-campaign_id
paths./campaigns/{campaign_id}.delete.parameters.length: 1
paths./campaigns/{campaign_id}.delete.parameters[0].in: body
paths./campaigns/{campaign_id}.delete.parameters[0].name: body
paths./campaigns/{campaign_id}.delete.parameters[0].schema.type: "null"
paths./campaigns/{campaign_id}.delete.produces.length: 1
paths./campaigns/{campaign_id}.delete.produces[0]: application/json
paths./campaigns/{campaign_id}.delete.responses.204.description: ""
paths./campaigns/{campaign_id}.delete.responses.204.schema.type: "null"
paths./campaigns/{campaign_id}.delete.responses.401.description: ""
paths./campaigns/{campaign_id}.delete.responses.401.examples.application/json.errors.length: 1
paths./campaigns/{campaign_id}.delete.responses.401.examples.application/json.errors[0].message: authorization
  required
paths./campaigns/{campaign_id}.delete.responses.401.schema.type: object
paths./campaigns/{campaign_id}.delete.responses.404.description: '"": "not found"'
paths./campaigns/{campaign_id}.delete.responses.404.schema.type: object
paths./campaigns/{campaign_id}.delete.security.length: 1
paths./campaigns/{campaign_id}.delete.security[0].Authorization.length: 0
paths./campaigns/{campaign_id}.delete.summary: Delete a Campaign
paths./campaigns/{campaign_id}.delete.tags.length: 1
paths./campaigns/{campaign_id}.delete.tags[0]: Campaigns API
paths./campaigns/{campaign_id}.get.description: |-
  **This endpoint allows you to retrieve a specific campaign.**

  Our Marketing Campaigns API lets you create, manage, send, and schedule campaigns.

  For more information:

  * [User Guide > Marketing Campaigns](https://sendgrid.com/docs/User_Guide/Marketing_Campaigns/index.html)
paths./campaigns/{campaign_id}.get.operationId: GET_campaigns-campaign_id
paths./campaigns/{campaign_id}.get.produces.length: 1
paths./campaigns/{campaign_id}.get.produces[0]: application/json
paths./campaigns/{campaign_id}.get.responses.200.description: ""
paths./campaigns/{campaign_id}.get.responses.200.examples.application/json.categories.length: 1
paths./campaigns/{campaign_id}.get.responses.200.examples.application/json.categories[0]: spring
  line
paths./campaigns/{campaign_id}.get.responses.200.examples.application/json.custom_unsubscribe_url: ""
paths./campaigns/{campaign_id}.get.responses.200.examples.application/json.html_content: <html><head><title></title></head><body><p>Check
  out our spring line!</p></body></html>
paths./campaigns/{campaign_id}.get.responses.200.examples.application/json.id: 986724
paths./campaigns/{campaign_id}.get.responses.200.examples.application/json.ip_pool: marketing
paths./campaigns/{campaign_id}.get.responses.200.examples.application/json.list_ids.length: 1
paths./campaigns/{campaign_id}.get.responses.200.examples.application/json.list_ids[0]: 110
paths./campaigns/{campaign_id}.get.responses.200.examples.application/json.plain_content: Check
  out our spring line!
paths./campaigns/{campaign_id}.get.responses.200.examples.application/json.segment_ids.length: 1
paths./campaigns/{campaign_id}.get.responses.200.examples.application/json.segment_ids[0]: 110
paths./campaigns/{campaign_id}.get.responses.200.examples.application/json.sender_id: 124451
paths./campaigns/{campaign_id}.get.responses.200.examples.application/json.status: Draft
paths./campaigns/{campaign_id}.get.responses.200.examples.application/json.subject: New
  Products for Spring!
paths./campaigns/{campaign_id}.get.responses.200.examples.application/json.suppression_group_id: 42
paths./campaigns/{campaign_id}.get.responses.200.examples.application/json.title: March
  Newsletter
paths./campaigns/{campaign_id}.get.responses.200.schema.properties.categories.items.type: string
paths./campaigns/{campaign_id}.get.responses.200.schema.properties.categories.type: array
paths./campaigns/{campaign_id}.get.responses.200.schema.properties.custom_unsubscribe_url.type: string
paths./campaigns/{campaign_id}.get.responses.200.schema.properties.html_content.type: string
paths./campaigns/{campaign_id}.get.responses.200.schema.properties.id.type: integer
paths./campaigns/{campaign_id}.get.responses.200.schema.properties.ip_pool.type: string
paths./campaigns/{campaign_id}.get.responses.200.schema.properties.list_ids.items.type: integer
paths./campaigns/{campaign_id}.get.responses.200.schema.properties.list_ids.type: array
paths./campaigns/{campaign_id}.get.responses.200.schema.properties.plain_content.type: string
paths./campaigns/{campaign_id}.get.responses.200.schema.properties.segment_ids.items.type: integer
paths./campaigns/{campaign_id}.get.responses.200.schema.properties.segment_ids.type: array
paths./campaigns/{campaign_id}.get.responses.200.schema.properties.sender_id.type: integer
paths./campaigns/{campaign_id}.get.responses.200.schema.properties.status.type: string
paths./campaigns/{campaign_id}.get.responses.200.schema.properties.subject.type: string
paths./campaigns/{campaign_id}.get.responses.200.schema.properties.suppression_group_id.type: integer
paths./campaigns/{campaign_id}.get.responses.200.schema.properties.title.type: string
paths./campaigns/{campaign_id}.get.responses.200.schema.type: object
paths./campaigns/{campaign_id}.get.responses.401.description: ""
paths./campaigns/{campaign_id}.get.responses.401.examples.application/json.errors.length: 1
paths./campaigns/{campaign_id}.get.responses.401.examples.application/json.errors[0].message: authorization
  required
paths./campaigns/{campaign_id}.get.responses.401.schema.type: object
paths./campaigns/{campaign_id}.get.responses.404.description: '"": "not found"'
paths./campaigns/{campaign_id}.get.responses.404.examples.application/json.errors.length: 1
paths./campaigns/{campaign_id}.get.responses.404.examples.application/json.errors[0].message: not
  found
paths./campaigns/{campaign_id}.get.responses.404.schema.type: object
paths./campaigns/{campaign_id}.get.security.length: 1
paths./campaigns/{campaign_id}.get.security[0].Authorization.length: 0
paths./campaigns/{campaign_id}.get.summary: Retrieve a single campaign
paths./campaigns/{campaign_id}.get.tags.length: 1
paths./campaigns/{campaign_id}.get.tags[0]: Campaigns API
paths./campaigns/{campaign_id}.parameters.length: 1
paths./campaigns/{campaign_id}.parameters[0].description: The id of the campaign you
  would like to retrieve.
paths./campaigns/{campaign_id}.parameters[0].in: path
paths./campaigns/{campaign_id}.parameters[0].name: campaign_id
paths./campaigns/{campaign_id}.parameters[0].required: true
paths./campaigns/{campaign_id}.parameters[0].type: integer
paths./campaigns/{campaign_id}.patch.consumes.length: 1
paths./campaigns/{campaign_id}.patch.consumes[0]: application/json
paths./campaigns/{campaign_id}.patch.description: |-
  Update a campaign. This is especially useful if you only set up the campaign using POST /campaigns, but didn't set many of the parameters.

  For more information:

  * [User Guide > Marketing Campaigns](https://sendgrid.com/docs/User_Guide/Marketing_Campaigns/index.html)
paths./campaigns/{campaign_id}.patch.operationId: PATCH_campaigns-campaign_id
paths./campaigns/{campaign_id}.patch.parameters.length: 1
paths./campaigns/{campaign_id}.patch.parameters[0].in: body
paths./campaigns/{campaign_id}.patch.parameters[0].name: body
paths./campaigns/{campaign_id}.patch.parameters[0].schema.example.categories.length: 1
paths./campaigns/{campaign_id}.patch.parameters[0].schema.example.categories[0]: summer
  line
paths./campaigns/{campaign_id}.patch.parameters[0].schema.example.html_content: <html><head><title></title></head><body><p>Check
  out our summer line!</p></body></html>
paths./campaigns/{campaign_id}.patch.parameters[0].schema.example.plain_content: Check
  out our summer line!
paths./campaigns/{campaign_id}.patch.parameters[0].schema.example.subject: New Products
  for Summer!
paths./campaigns/{campaign_id}.patch.parameters[0].schema.example.title: May Newsletter
paths./campaigns/{campaign_id}.patch.parameters[0].schema.properties.categories.description: The
  categories you want to tag on this campaign.
paths./campaigns/{campaign_id}.patch.parameters[0].schema.properties.categories.items.type: string
paths./campaigns/{campaign_id}.patch.parameters[0].schema.properties.categories.type: array
paths./campaigns/{campaign_id}.patch.parameters[0].schema.properties.html_content.description: The
  HTML content of this campaign.
paths./campaigns/{campaign_id}.patch.parameters[0].schema.properties.html_content.type: string
paths./campaigns/{campaign_id}.patch.parameters[0].schema.properties.plain_content.description: The
  plain content of this campaign.
paths./campaigns/{campaign_id}.patch.parameters[0].schema.properties.plain_content.type: string
paths./campaigns/{campaign_id}.patch.parameters[0].schema.properties.subject.description: The
  subject line for your campaign.
paths./campaigns/{campaign_id}.patch.parameters[0].schema.properties.subject.type: string
paths./campaigns/{campaign_id}.patch.parameters[0].schema.properties.title.description: The
  title of the campaign.
paths./campaigns/{campaign_id}.patch.parameters[0].schema.properties.title.type: string
paths./campaigns/{campaign_id}.patch.parameters[0].schema.required.length: 5
paths./campaigns/{campaign_id}.patch.parameters[0].schema.required[0]: title
paths./campaigns/{campaign_id}.patch.parameters[0].schema.required[1]: subject
paths./campaigns/{campaign_id}.patch.parameters[0].schema.required[2]: categories
paths./campaigns/{campaign_id}.patch.parameters[0].schema.required[3]: html_content
paths./campaigns/{campaign_id}.patch.parameters[0].schema.required[4]: plain_content
paths./campaigns/{campaign_id}.patch.parameters[0].schema.title: Update a Campaign
  request
paths./campaigns/{campaign_id}.patch.parameters[0].schema.type: object
paths./campaigns/{campaign_id}.patch.produces.length: 1
paths./campaigns/{campaign_id}.patch.produces[0]: application/json
paths./campaigns/{campaign_id}.patch.responses.200.description: ""
paths./campaigns/{campaign_id}.patch.responses.200.examples.application/json.categories.length: 1
paths./campaigns/{campaign_id}.patch.responses.200.examples.application/json.categories[0]: summer
  line
paths./campaigns/{campaign_id}.patch.responses.200.examples.application/json.custom_unsubscribe_url: ""
paths./campaigns/{campaign_id}.patch.responses.200.examples.application/json.html_content: <html><head><title></title></head><body><p>Check
  out our summer line!</p></body></html>
paths./campaigns/{campaign_id}.patch.responses.200.examples.application/json.id: 986724
paths./campaigns/{campaign_id}.patch.responses.200.examples.application/json.ip_pool: marketing
paths./campaigns/{campaign_id}.patch.responses.200.examples.application/json.list_ids.length: 2
paths./campaigns/{campaign_id}.patch.responses.200.examples.application/json.list_ids[0]: 110
paths./campaigns/{campaign_id}.patch.responses.200.examples.application/json.list_ids[1]: 124
paths./campaigns/{campaign_id}.patch.responses.200.examples.application/json.plain_content: Check
  out our summer line!
paths./campaigns/{campaign_id}.patch.responses.200.examples.application/json.segment_ids.length: 1
paths./campaigns/{campaign_id}.patch.responses.200.examples.application/json.segment_ids[0]: 110
paths./campaigns/{campaign_id}.patch.responses.200.examples.application/json.sender_id: 124451
paths./campaigns/{campaign_id}.patch.responses.200.examples.application/json.status: Draft
paths./campaigns/{campaign_id}.patch.responses.200.examples.application/json.subject: New
  Products for Summer!
paths./campaigns/{campaign_id}.patch.responses.200.examples.application/json.suppression_group_id: 42
paths./campaigns/{campaign_id}.patch.responses.200.examples.application/json.title: May
  Newsletter
paths./campaigns/{campaign_id}.patch.responses.200.schema.$ref: '#/definitions/campaign_response'
paths./campaigns/{campaign_id}.patch.responses.400.description: |-
  "title": "title can't be blank"
  "title": "title is too long (maximum is 100 characters)"
  "categories": "categories exceeds 10 category limit"
  "html_content": "html_content exceeds the 1MB limit"
  "plain_content": "plain_content exceeds the 1MB limit"
  "sender_id": "sender_id does not exist"
  "sender_id": "sender_id is not a verified sender identity"
  "list_ids": "list_ids do not all exist"
  "segment_ids": "segment_ids do not all exist"
  "ip_pool": "The ip pool you provided is invalid"
  "suppression_group_id": "suppression_group_id does not exist"
  "unsubscribes": "Either suppression_group_id or custom_unsubscribe_url may be set/used, but not both. Please remove one before setting the other."
  "": "The JSON you have submitted cannot be parsed."
paths./campaigns/{campaign_id}.patch.responses.400.examples.application/json.errors.length: 13
paths./campaigns/{campaign_id}.patch.responses.400.examples.application/json.errors[0].field: title
paths./campaigns/{campaign_id}.patch.responses.400.examples.application/json.errors[0].message: title
  can't be blank
paths./campaigns/{campaign_id}.patch.responses.400.examples.application/json.errors[1].field: title
paths./campaigns/{campaign_id}.patch.responses.400.examples.application/json.errors[1].message: title
  is too long (maximum is 100 characters)
paths./campaigns/{campaign_id}.patch.responses.400.examples.application/json.errors[2].field: categories
paths./campaigns/{campaign_id}.patch.responses.400.examples.application/json.errors[2].message: categories
  exceeds 10 category limit
paths./campaigns/{campaign_id}.patch.responses.400.examples.application/json.errors[3].field: html_content
paths./campaigns/{campaign_id}.patch.responses.400.examples.application/json.errors[3].message: html_content
  exceeds the 1MB limit
paths./campaigns/{campaign_id}.patch.responses.400.examples.application/json.errors[4].field: plain_content
paths./campaigns/{campaign_id}.patch.responses.400.examples.application/json.errors[4].message: plain_content
  exceeds the 1MB limit
paths./campaigns/{campaign_id}.patch.responses.400.examples.application/json.errors[5].field: sender_id
paths./campaigns/{campaign_id}.patch.responses.400.examples.application/json.errors[5].message: sender_id
  does not exist
paths./campaigns/{campaign_id}.patch.responses.400.examples.application/json.errors[6].field: sender_id
paths./campaigns/{campaign_id}.patch.responses.400.examples.application/json.errors[6].message: sender_id
  is not a verified sender identity
paths./campaigns/{campaign_id}.patch.responses.400.examples.application/json.errors[7].field: list_ids
paths./campaigns/{campaign_id}.patch.responses.400.examples.application/json.errors[7].message: list_ids
  do not all exist
paths./campaigns/{campaign_id}.patch.responses.400.examples.application/json.errors[8].field: segment_ids
paths./campaigns/{campaign_id}.patch.responses.400.examples.application/json.errors[8].message: segment_ids
  do not all exist
paths./campaigns/{campaign_id}.patch.responses.400.examples.application/json.errors[9].field: ip_pool
paths./campaigns/{campaign_id}.patch.responses.400.examples.application/json.errors[9].message: The
  ip pool you provided is invalid
paths./campaigns/{campaign_id}.patch.responses.400.examples.application/json.errors[10].field: suppression_group_id
paths./campaigns/{campaign_id}.patch.responses.400.examples.application/json.errors[10].message: suppression_group_id
  does not exist
paths./campaigns/{campaign_id}.patch.responses.400.examples.application/json.errors[11].field: unsubscribes
paths./campaigns/{campaign_id}.patch.responses.400.examples.application/json.errors[11].message: Either
  suppression_group_id or custom_unsubscribe_url may be set/used, but not both. Please
  remove one before setting the other.
paths./campaigns/{campaign_id}.patch.responses.400.examples.application/json.errors[12].message: The
  JSON you have submitted cannot be parsed.
paths./campaigns/{campaign_id}.patch.responses.400.schema.type: object
paths./campaigns/{campaign_id}.patch.responses.401.description: ""
paths./campaigns/{campaign_id}.patch.responses.401.examples.application/json.errors.length: 1
paths./campaigns/{campaign_id}.patch.responses.401.examples.application/json.errors[0].message: authorization
  required
paths./campaigns/{campaign_id}.patch.responses.401.schema.$ref: '#/definitions/global:ErrorResponse'
paths./campaigns/{campaign_id}.patch.responses.403.description: '"": "You may only
  update a campaign when it is in draft mode."'
paths./campaigns/{campaign_id}.patch.responses.403.examples.application/json.errors.length: 1
paths./campaigns/{campaign_id}.patch.responses.403.examples.application/json.errors[0].message: You
  may only update a campaign when it is in draft mode.
paths./campaigns/{campaign_id}.patch.responses.403.schema.type: object
paths./campaigns/{campaign_id}.patch.responses.404.description: '"": "not found"'
paths./campaigns/{campaign_id}.patch.responses.404.examples.application/json.errors.length: 1
paths./campaigns/{campaign_id}.patch.responses.404.examples.application/json.errors[0].message: not
  found
paths./campaigns/{campaign_id}.patch.responses.404.schema.$ref: '#/definitions/global:ErrorResponse'
paths./campaigns/{campaign_id}.patch.security.length: 1
paths./campaigns/{campaign_id}.patch.security[0].Authorization.length: 0
paths./campaigns/{campaign_id}.patch.summary: Update a Campaign
paths./campaigns/{campaign_id}.patch.tags.length: 1
paths./campaigns/{campaign_id}.patch.tags[0]: Campaigns API
paths./campaigns/{campaign_id}/schedules.delete.description: |-
  **This endpoint allows you to unschedule a campaign that has already been scheduled to be sent.**

  A successful unschedule will return a 204.
  If the specified campaign is in the process of being sent, the only option is to cancel (a different method).

  For more information:

  * [User Guide > Marketing Campaigns](https://sendgrid.com/docs/User_Guide/Marketing_Campaigns/index.html)
paths./campaigns/{campaign_id}/schedules.delete.operationId: DELETE_campaigns-campaign_id-schedules
paths./campaigns/{campaign_id}/schedules.delete.parameters.length: 1
paths./campaigns/{campaign_id}/schedules.delete.parameters[0].in: body
paths./campaigns/{campaign_id}/schedules.delete.parameters[0].name: body
paths./campaigns/{campaign_id}/schedules.delete.parameters[0].schema.type: "null"
paths./campaigns/{campaign_id}/schedules.delete.produces.length: 1
paths./campaigns/{campaign_id}/schedules.delete.produces[0]: application/json
paths./campaigns/{campaign_id}/schedules.delete.responses.204.description: ""
paths./campaigns/{campaign_id}/schedules.delete.responses.204.schema.type: "null"
paths./campaigns/{campaign_id}/schedules.delete.responses.403.description: |-
  "": "This campaign is already In Progress."
  "": "This campaign is already Sent."
  "": "This campaign is already Paused."
  "": "This campaign is already Canceled."
paths./campaigns/{campaign_id}/schedules.delete.responses.403.examples.application/json.errors.length: 4
paths./campaigns/{campaign_id}/schedules.delete.responses.403.examples.application/json.errors[0].message: This
  campaign is already In Progress.
paths./campaigns/{campaign_id}/schedules.delete.responses.403.examples.application/json.errors[1].message: This
  campaign is already Sent.
paths./campaigns/{campaign_id}/schedules.delete.responses.403.examples.application/json.errors[2].message: This
  campaign is already Paused.
paths./campaigns/{campaign_id}/schedules.delete.responses.403.examples.application/json.errors[3].message: This
  campaign is already Canceled.
paths./campaigns/{campaign_id}/schedules.delete.responses.403.schema.$ref: '#/definitions/global:ErrorResponse'
paths./campaigns/{campaign_id}/schedules.delete.responses.404.description: '"": "not
  found"'
paths./campaigns/{campaign_id}/schedules.delete.responses.404.examples.application/json.errors.length: 1
paths./campaigns/{campaign_id}/schedules.delete.responses.404.examples.application/json.errors[0].message: not
  found
paths./campaigns/{campaign_id}/schedules.delete.responses.404.schema.$ref: '#/definitions/global:ErrorResponse'
paths./campaigns/{campaign_id}/schedules.delete.security.length: 1
paths./campaigns/{campaign_id}/schedules.delete.security[0].Authorization.length: 0
paths./campaigns/{campaign_id}/schedules.delete.summary: Unschedule a Scheduled Campaign
paths./campaigns/{campaign_id}/schedules.delete.tags.length: 1
paths./campaigns/{campaign_id}/schedules.delete.tags[0]: Campaigns API
paths./campaigns/{campaign_id}/schedules.get.description: |-
  **This endpoint allows you to retrieve the date and time that the given campaign has been scheduled to be sent.**

  For more information:

  * [User Guide > Marketing Campaigns](https://sendgrid.com/docs/User_Guide/Marketing_Campaigns/index.html)
paths./campaigns/{campaign_id}/schedules.get.operationId: GET_campaigns-campaign_id-schedules
paths./campaigns/{campaign_id}/schedules.get.produces.length: 1
paths./campaigns/{campaign_id}/schedules.get.produces[0]: application/json
paths./campaigns/{campaign_id}/schedules.get.responses.200.description: ""
paths./campaigns/{campaign_id}/schedules.get.responses.200.examples.application/json.send_at: 1.4907785e+09
paths./campaigns/{campaign_id}/schedules.get.responses.200.schema.properties.send_at.format: int64
paths./campaigns/{campaign_id}/schedules.get.responses.200.schema.properties.send_at.type: integer
paths./campaigns/{campaign_id}/schedules.get.responses.200.schema.required.length: 1
paths./campaigns/{campaign_id}/schedules.get.responses.200.schema.required[0]: send_at
paths./campaigns/{campaign_id}/schedules.get.responses.200.schema.title: View Scheduled
  Time of a Campaign response
paths./campaigns/{campaign_id}/schedules.get.responses.200.schema.type: object
paths./campaigns/{campaign_id}/schedules.get.responses.404.description: '"": "not
  found"'
paths./campaigns/{campaign_id}/schedules.get.responses.404.examples.application/json.errors.length: 1
paths./campaigns/{campaign_id}/schedules.get.responses.404.examples.application/json.errors[0].message: not
  found
paths./campaigns/{campaign_id}/schedules.get.responses.404.schema.$ref: '#/definitions/global:ErrorResponse'
paths./campaigns/{campaign_id}/schedules.get.security.length: 1
paths./campaigns/{campaign_id}/schedules.get.security[0].Authorization.length: 0
paths./campaigns/{campaign_id}/schedules.get.summary: View Scheduled Time of a Campaign
paths./campaigns/{campaign_id}/schedules.get.tags.length: 1
paths./campaigns/{campaign_id}/schedules.get.tags[0]: Campaigns API
paths./campaigns/{campaign_id}/schedules.parameters.length: 1
paths./campaigns/{campaign_id}/schedules.parameters[0].in: path
paths./campaigns/{campaign_id}/schedules.parameters[0].name: campaign_id
paths./campaigns/{campaign_id}/schedules.parameters[0].required: true
paths./campaigns/{campaign_id}/schedules.parameters[0].type: integer
paths./campaigns/{campaign_id}/schedules.patch.consumes.length: 1
paths./campaigns/{campaign_id}/schedules.patch.consumes[0]: application/json
paths./campaigns/{campaign_id}/schedules.patch.description: |-
  **This endpoint allows to you change the scheduled time and date for a campaign to be sent.**

  For more information:

  * [User Guide > Marketing Campaigns](https://sendgrid.com/docs/User_Guide/Marketing_Campaigns/index.html)
paths./campaigns/{campaign_id}/schedules.patch.operationId: PATCH_campaigns-campaign_id-schedules
paths./campaigns/{campaign_id}/schedules.patch.parameters.length: 1
paths./campaigns/{campaign_id}/schedules.patch.parameters[0].in: body
paths./campaigns/{campaign_id}/schedules.patch.parameters[0].name: body
paths./campaigns/{campaign_id}/schedules.patch.parameters[0].schema.example.send_at: 1.4894514e+09
paths./campaigns/{campaign_id}/schedules.patch.parameters[0].schema.properties.send_at.format: int64
paths./campaigns/{campaign_id}/schedules.patch.parameters[0].schema.properties.send_at.type: integer
paths./campaigns/{campaign_id}/schedules.patch.parameters[0].schema.required.length: 1
paths./campaigns/{campaign_id}/schedules.patch.parameters[0].schema.required[0]: send_at
paths./campaigns/{campaign_id}/schedules.patch.parameters[0].schema.title: Update
  a Scheduled Campaign request
paths./campaigns/{campaign_id}/schedules.patch.parameters[0].schema.type: object
paths./campaigns/{campaign_id}/schedules.patch.produces.length: 1
paths./campaigns/{campaign_id}/schedules.patch.produces[0]: application/json
paths./campaigns/{campaign_id}/schedules.patch.responses.200.description: ""
paths./campaigns/{campaign_id}/schedules.patch.responses.200.schema.properties.id.description: The
  campaign ID
paths./campaigns/{campaign_id}/schedules.patch.responses.200.schema.properties.id.type: integer
paths./campaigns/{campaign_id}/schedules.patch.responses.200.schema.properties.send_at.description: The
  unix timestamp to send the campaign.
paths./campaigns/{campaign_id}/schedules.patch.responses.200.schema.properties.send_at.type: integer
paths./campaigns/{campaign_id}/schedules.patch.responses.200.schema.properties.status.description: The
  status of the schedule.
paths./campaigns/{campaign_id}/schedules.patch.responses.200.schema.properties.status.type: string
paths./campaigns/{campaign_id}/schedules.patch.responses.200.schema.required.length: 3
paths./campaigns/{campaign_id}/schedules.patch.responses.200.schema.required[0]: id
paths./campaigns/{campaign_id}/schedules.patch.responses.200.schema.required[1]: send_at
paths./campaigns/{campaign_id}/schedules.patch.responses.200.schema.required[2]: status
paths./campaigns/{campaign_id}/schedules.patch.responses.200.schema.title: Update
  a Scheduled Campaign response
paths./campaigns/{campaign_id}/schedules.patch.responses.200.schema.type: object
paths./campaigns/{campaign_id}/schedules.patch.responses.400.description: |-
  "": "The JSON you have submitted cannot be parsed."
  "send_at": "Please choose a future time for sending your campaign."
  "":"You do not have enough credits to send this campaign. Upgrade your plan to send more: https://app.sendgrid.com/settings/billing"
paths./campaigns/{campaign_id}/schedules.patch.responses.400.examples.application/json.errors.length: 3
paths./campaigns/{campaign_id}/schedules.patch.responses.400.examples.application/json.errors[0].field: send_at
paths./campaigns/{campaign_id}/schedules.patch.responses.400.examples.application/json.errors[0].message: Please
  choose a future time for sending your campaign.
paths./campaigns/{campaign_id}/schedules.patch.responses.400.examples.application/json.errors[1].message: The
  JSON you have submitted cannot be parsed.
paths./campaigns/{campaign_id}/schedules.patch.responses.400.examples.application/json.errors[2].message: You
  do not have enough credits to send this campaign. Upgrade your plan to send https://app.sendgrid.com/settings/billing
paths./campaigns/{campaign_id}/schedules.patch.responses.400.schema.$ref: '#/definitions/global:ErrorResponse'
paths./campaigns/{campaign_id}/schedules.patch.responses.403.description: '"send_at":
  "You cannot update the send_at value of non-scheduled campaign."'
paths./campaigns/{campaign_id}/schedules.patch.responses.403.examples.application/json.errors.length: 1
paths./campaigns/{campaign_id}/schedules.patch.responses.403.examples.application/json.errors[0].field: send_at
paths./campaigns/{campaign_id}/schedules.patch.responses.403.examples.application/json.errors[0].message: You
  cannot update the send_at value of non-scheduled campaign.
paths./campaigns/{campaign_id}/schedules.patch.responses.403.schema.$ref: '#/definitions/global:ErrorResponse'
paths./campaigns/{campaign_id}/schedules.patch.responses.404.description: '"": "not
  found"'
paths./campaigns/{campaign_id}/schedules.patch.responses.404.examples.application/json.errors.length: 1
paths./campaigns/{campaign_id}/schedules.patch.responses.404.examples.application/json.errors[0].message: not
  found
paths./campaigns/{campaign_id}/schedules.patch.responses.404.schema.$ref: '#/definitions/global:ErrorResponse'
paths./campaigns/{campaign_id}/schedules.patch.security.length: 1
paths./campaigns/{campaign_id}/schedules.patch.security[0].Authorization.length: 0
paths./campaigns/{campaign_id}/schedules.patch.summary: Update a Scheduled Campaign
paths./campaigns/{campaign_id}/schedules.patch.tags.length: 1
paths./campaigns/{campaign_id}/schedules.patch.tags[0]: Campaigns API
paths./campaigns/{campaign_id}/schedules.post.consumes.length: 1
paths./campaigns/{campaign_id}/schedules.post.consumes[0]: application/json
paths./campaigns/{campaign_id}/schedules.post.description: |-
  **This endpoint allows you to schedule a specific date and time for your campaign to be sent.**

  For more information:

  * [User Guide > Marketing Campaigns](https://sendgrid.com/docs/User_Guide/Marketing_Campaigns/index.html)
paths./campaigns/{campaign_id}/schedules.post.operationId: POST_campaigns-campaign_id-schedules
paths./campaigns/{campaign_id}/schedules.post.parameters.length: 1
paths./campaigns/{campaign_id}/schedules.post.parameters[0].in: body
paths./campaigns/{campaign_id}/schedules.post.parameters[0].name: body
paths./campaigns/{campaign_id}/schedules.post.parameters[0].schema.example.send_at: 1.4897715e+09
paths./campaigns/{campaign_id}/schedules.post.parameters[0].schema.properties.send_at.description: The
  unix timestamp for the date and time you would like your campaign to be sent out.
paths./campaigns/{campaign_id}/schedules.post.parameters[0].schema.properties.send_at.type: integer
paths./campaigns/{campaign_id}/schedules.post.parameters[0].schema.required.length: 1
paths./campaigns/{campaign_id}/schedules.post.parameters[0].schema.required[0]: send_at
paths./campaigns/{campaign_id}/schedules.post.parameters[0].schema.title: Schedule
  a Campaign request
paths./campaigns/{campaign_id}/schedules.post.parameters[0].schema.type: object
paths./campaigns/{campaign_id}/schedules.post.produces.length: 1
paths./campaigns/{campaign_id}/schedules.post.produces[0]: application/json
paths./campaigns/{campaign_id}/schedules.post.responses.201.description: ""
paths./campaigns/{campaign_id}/schedules.post.responses.201.examples.application/json.id: 1234
paths./campaigns/{campaign_id}/schedules.post.responses.201.examples.application/json.send_at: 1.4897715e+09
paths./campaigns/{campaign_id}/schedules.post.responses.201.examples.application/json.status: Scheduled
paths./campaigns/{campaign_id}/schedules.post.responses.201.schema.properties.id.description: The
  campaign ID.
paths./campaigns/{campaign_id}/schedules.post.responses.201.schema.properties.id.type: integer
paths./campaigns/{campaign_id}/schedules.post.responses.201.schema.properties.send_at.description: The
  date time you scheduled your campaign to be sent.
paths./campaigns/{campaign_id}/schedules.post.responses.201.schema.properties.send_at.type: integer
paths./campaigns/{campaign_id}/schedules.post.responses.201.schema.properties.status.description: The
  status of your campaign.
paths./campaigns/{campaign_id}/schedules.post.responses.201.schema.properties.status.enum.length: 1
paths./campaigns/{campaign_id}/schedules.post.responses.201.schema.properties.status.enum[0]: Scheduled
paths./campaigns/{campaign_id}/schedules.post.responses.201.schema.properties.status.type: string
paths./campaigns/{campaign_id}/schedules.post.responses.201.schema.required.length: 3
paths./campaigns/{campaign_id}/schedules.post.responses.201.schema.required[0]: id
paths./campaigns/{campaign_id}/schedules.post.responses.201.schema.required[1]: send_at
paths./campaigns/{campaign_id}/schedules.post.responses.201.schema.required[2]: status
paths./campaigns/{campaign_id}/schedules.post.responses.201.schema.title: Schedule
  a Campaign response
paths./campaigns/{campaign_id}/schedules.post.responses.201.schema.type: object
paths./campaigns/{campaign_id}/schedules.post.responses.400.description: |-
  "subject": "subject can't be blank"
  "sender_id": "sender_id can't be blank"
  "plain_content": "plain_content can't be blank, please provide plain text or html content"
  "list_ids": "You must select at least 1 segment or 1 list to send to."
  "send_at": "Please choose a future time for sending your campaign."
  "unsubscribe_tag": "An [unsubscribe] tag in both your html and plain content is required to send a campaign."
  "suppression_group_id": "Either a suppression_group_id or custom_unsubscribe_url is required to send a campaign."
  "": "The JSON you have submitted cannot be parsed."
  "":"You do not have enough credits to send this campaign. Upgrade your plan to send more: https://app.sendgrid.com/settings/billing"
paths./campaigns/{campaign_id}/schedules.post.responses.400.examples.application/json.errors.length: 7
paths./campaigns/{campaign_id}/schedules.post.responses.400.examples.application/json.errors[0].field: subject
paths./campaigns/{campaign_id}/schedules.post.responses.400.examples.application/json.errors[0].message: subject
  can't be blank
paths./campaigns/{campaign_id}/schedules.post.responses.400.examples.application/json.errors[1].field: sender_id
paths./campaigns/{campaign_id}/schedules.post.responses.400.examples.application/json.errors[1].message: sender_id
  can't be blank
paths./campaigns/{campaign_id}/schedules.post.responses.400.examples.application/json.errors[2].field: plain_content
paths./campaigns/{campaign_id}/schedules.post.responses.400.examples.application/json.errors[2].message: plain_content
  can't be blank, please provide plain text or html content
paths./campaigns/{campaign_id}/schedules.post.responses.400.examples.application/json.errors[3].field: list_id
paths./campaigns/{campaign_id}/schedules.post.responses.400.examples.application/json.errors[3].message: You
  must select at least 1 segment or 1 list to send to.
paths./campaigns/{campaign_id}/schedules.post.responses.400.examples.application/json.errors[4].field: unsubscribe_tag
paths./campaigns/{campaign_id}/schedules.post.responses.400.examples.application/json.errors[4].message: An
  [unsubscribe] tag in both your html and plain content is required to send a campaign.
paths./campaigns/{campaign_id}/schedules.post.responses.400.examples.application/json.errors[5].field: suppression_group_id
paths./campaigns/{campaign_id}/schedules.post.responses.400.examples.application/json.errors[5].message: Either
  a suppression_group_id or custom_unsubscribe_url is required to send a campaign.
paths./campaigns/{campaign_id}/schedules.post.responses.400.examples.application/json.errors[6].message: 'You
  do not have enough credits to send this campaign. Upgrade your plan to send more:
  https://app.sendgrid.com/settings/billing'
paths./campaigns/{campaign_id}/schedules.post.responses.400.schema.$ref: '#/definitions/global:ErrorResponse'
paths./campaigns/{campaign_id}/schedules.post.responses.401.description: ""
paths./campaigns/{campaign_id}/schedules.post.responses.401.examples.application/json.errors.length: 1
paths./campaigns/{campaign_id}/schedules.post.responses.401.examples.application/json.errors[0].message: authorization
  required
paths./campaigns/{campaign_id}/schedules.post.responses.401.schema.$ref: '#/definitions/global:ErrorResponse'
paths./campaigns/{campaign_id}/schedules.post.responses.403.description: '"": "You
  cannot POST to a campaign that has already sent or scheduled. However you can update
  a scheduled campaign with a PATCH."'
paths./campaigns/{campaign_id}/schedules.post.responses.403.examples.application/json.errors.length: 1
paths./campaigns/{campaign_id}/schedules.post.responses.403.examples.application/json.errors[0].message: You
  cannot POST to a campaign that has already sent or scheduled. However you can update
  a scheduled campaign with a PATCH.
paths./campaigns/{campaign_id}/schedules.post.responses.403.schema.$ref: '#/definitions/global:ErrorResponse'
paths./campaigns/{campaign_id}/schedules.post.responses.404.description: '"": "not
  found"'
paths./campaigns/{campaign_id}/schedules.post.responses.404.examples.application/json.errors.length: 1
paths./campaigns/{campaign_id}/schedules.post.responses.404.examples.application/json.errors[0].message: not
  found
paths./campaigns/{campaign_id}/schedules.post.responses.404.schema.$ref: '#/definitions/global:ErrorResponse'
paths./campaigns/{campaign_id}/schedules.post.security.length: 1
paths./campaigns/{campaign_id}/schedules.post.security[0].Authorization.length: 0
paths./campaigns/{campaign_id}/schedules.post.summary: Schedule a Campaign
paths./campaigns/{campaign_id}/schedules.post.tags.length: 1
paths./campaigns/{campaign_id}/schedules.post.tags[0]: Campaigns API
paths./campaigns/{campaign_id}/schedules/now.parameters.length: 1
paths./campaigns/{campaign_id}/schedules/now.parameters[0].in: path
paths./campaigns/{campaign_id}/schedules/now.parameters[0].name: campaign_id
paths./campaigns/{campaign_id}/schedules/now.parameters[0].required: true
paths./campaigns/{campaign_id}/schedules/now.parameters[0].type: integer
paths./campaigns/{campaign_id}/schedules/now.post.description: |-
  **This endpoint allows you to immediately send a campaign at the time you make the API call.**

  Normally a POST would have a request body, but since this endpoint is telling us to send a resource that is already created, a request body is not needed.

  For more information:

  * [User Guide > Marketing Campaigns](https://sendgrid.com/docs/User_Guide/Marketing_Campaigns/index.html)
paths./campaigns/{campaign_id}/schedules/now.post.operationId: POST_campaigns-campaign_id-schedules-now
paths./campaigns/{campaign_id}/schedules/now.post.parameters.length: 1
paths./campaigns/{campaign_id}/schedules/now.post.parameters[0].in: body
paths./campaigns/{campaign_id}/schedules/now.post.parameters[0].name: body
paths./campaigns/{campaign_id}/schedules/now.post.parameters[0].schema.type: "null"
paths./campaigns/{campaign_id}/schedules/now.post.produces.length: 1
paths./campaigns/{campaign_id}/schedules/now.post.produces[0]: application/json
paths./campaigns/{campaign_id}/schedules/now.post.responses.201.description: ""
paths./campaigns/{campaign_id}/schedules/now.post.responses.201.examples.application/json.id: 1234
paths./campaigns/{campaign_id}/schedules/now.post.responses.201.examples.application/json.status: Scheduled
paths./campaigns/{campaign_id}/schedules/now.post.responses.201.schema.properties.id.format: int64
paths./campaigns/{campaign_id}/schedules/now.post.responses.201.schema.properties.id.type: integer
paths./campaigns/{campaign_id}/schedules/now.post.responses.201.schema.properties.status.type: string
paths./campaigns/{campaign_id}/schedules/now.post.responses.201.schema.required.length: 2
paths./campaigns/{campaign_id}/schedules/now.post.responses.201.schema.required[0]: id
paths./campaigns/{campaign_id}/schedules/now.post.responses.201.schema.required[1]: status
paths./campaigns/{campaign_id}/schedules/now.post.responses.201.schema.title: Send
  a Campaign response
paths./campaigns/{campaign_id}/schedules/now.post.responses.201.schema.type: object
paths./campaigns/{campaign_id}/schedules/now.post.responses.400.description: |-
  "subject": "subject can't be blank"
  "sender_id": "sender_id can't be blank"
  "plain_content": "plain_content can't be blank, please provide plain text or html content"
  "list_ids": "You must select at least 1 segment or 1 list to send to."
  "unsubscribe_tag": "An [unsubscribe] tag in both your html and plain content is required to send a campaign."
  "suppression_group_id": "Either a suppression_group_id or custom_unsubscribe_url is required to send a campaign."
  "": "You do not have enough credits to send this campaign. Upgrade your plan to send more: https://app.sendgrid.com/settings/billing"
paths./campaigns/{campaign_id}/schedules/now.post.responses.400.examples.application/json.errors.length: 7
paths./campaigns/{campaign_id}/schedules/now.post.responses.400.examples.application/json.errors[0].field: subject
paths./campaigns/{campaign_id}/schedules/now.post.responses.400.examples.application/json.errors[0].message: subject
  can't be blank
paths./campaigns/{campaign_id}/schedules/now.post.responses.400.examples.application/json.errors[1].field: sender_id
paths./campaigns/{campaign_id}/schedules/now.post.responses.400.examples.application/json.errors[1].message: sender_id
  can't be blank
paths./campaigns/{campaign_id}/schedules/now.post.responses.400.examples.application/json.errors[2].field: plain_content
paths./campaigns/{campaign_id}/schedules/now.post.responses.400.examples.application/json.errors[2].message: plain_content
  can't be blank, please provide plain text or html content
paths./campaigns/{campaign_id}/schedules/now.post.responses.400.examples.application/json.errors[3].field: list_id
paths./campaigns/{campaign_id}/schedules/now.post.responses.400.examples.application/json.errors[3].message: You
  must select at least 1 segment or 1 list to send to.
paths./campaigns/{campaign_id}/schedules/now.post.responses.400.examples.application/json.errors[4].field: unsubscribe_tag
paths./campaigns/{campaign_id}/schedules/now.post.responses.400.examples.application/json.errors[4].message: An
  [unsubscribe] tag in both your html and plain content is required to send a campaign.
paths./campaigns/{campaign_id}/schedules/now.post.responses.400.examples.application/json.errors[5].field: suppression_group_id
paths./campaigns/{campaign_id}/schedules/now.post.responses.400.examples.application/json.errors[5].message: Either
  a suppression_group_id or custom_unsubscribe_url is required to send a campaign.
paths./campaigns/{campaign_id}/schedules/now.post.responses.400.examples.application/json.errors[6].message: 'You
  do not have enough credits to send this campaign. Upgrade your plan to send more:
  https://app.sendgrid.com/settings/billing'
paths./campaigns/{campaign_id}/schedules/now.post.responses.400.schema.$ref: '#/definitions/global:ErrorResponse'
paths./campaigns/{campaign_id}/schedules/now.post.responses.401.description: ""
paths./campaigns/{campaign_id}/schedules/now.post.responses.401.examples.application/json.errors.length: 1
paths./campaigns/{campaign_id}/schedules/now.post.responses.401.examples.application/json.errors[0].message: authorization
  required
paths./campaigns/{campaign_id}/schedules/now.post.responses.401.schema.$ref: '#/definitions/global:ErrorResponse'
paths./campaigns/{campaign_id}/schedules/now.post.responses.403.description: '"":
  "You may only send a campaign when it is in draft mode."'
paths./campaigns/{campaign_id}/schedules/now.post.responses.403.examples.application/json.errors.length: 1
paths./campaigns/{campaign_id}/schedules/now.post.responses.403.examples.application/json.errors[0].message: You
  may only send a campaign when it is in draft mode.
paths./campaigns/{campaign_id}/schedules/now.post.responses.403.schema.$ref: '#/definitions/global:ErrorResponse'
paths./campaigns/{campaign_id}/schedules/now.post.responses.404.description: '"":
  "not found"'
paths./campaigns/{campaign_id}/schedules/now.post.responses.404.examples.application/json.errors.length: 1
paths./campaigns/{campaign_id}/schedules/now.post.responses.404.examples.application/json.errors[0].message: not
  found
paths./campaigns/{campaign_id}/schedules/now.post.responses.404.schema.$ref: '#/definitions/global:ErrorResponse'
paths./campaigns/{campaign_id}/schedules/now.post.security.length: 1
paths./campaigns/{campaign_id}/schedules/now.post.security[0].Authorization.length: 0
paths./campaigns/{campaign_id}/schedules/now.post.summary: Send a Campaign
paths./campaigns/{campaign_id}/schedules/now.post.tags.length: 1
paths./campaigns/{campaign_id}/schedules/now.post.tags[0]: Campaigns API
paths./campaigns/{campaign_id}/schedules/test.parameters.length: 1
paths./campaigns/{campaign_id}/schedules/test.parameters[0].in: path
paths./campaigns/{campaign_id}/schedules/test.parameters[0].name: campaign_id
paths./campaigns/{campaign_id}/schedules/test.parameters[0].required: true
paths./campaigns/{campaign_id}/schedules/test.parameters[0].type: integer
paths./campaigns/{campaign_id}/schedules/test.post.consumes.length: 1
paths./campaigns/{campaign_id}/schedules/test.post.consumes[0]: application/json
paths./campaigns/{campaign_id}/schedules/test.post.description: |-
  **This endpoint allows you to send a test campaign.**

  To send to multiple addresses, use an array for the JSON "to" value ["one@address","two@address"]

  For more information:

  * [User Guide > Marketing Campaigns](https://sendgrid.com/docs/User_Guide/Marketing_Campaigns/index.html)
paths./campaigns/{campaign_id}/schedules/test.post.operationId: POST_campaigns-campaign_id-schedules-test
paths./campaigns/{campaign_id}/schedules/test.post.parameters.length: 1
paths./campaigns/{campaign_id}/schedules/test.post.parameters[0].in: body
paths./campaigns/{campaign_id}/schedules/test.post.parameters[0].name: body
paths./campaigns/{campaign_id}/schedules/test.post.parameters[0].schema.example.to: your.email@example.com
paths./campaigns/{campaign_id}/schedules/test.post.parameters[0].schema.properties.to.description: The
  email address that should receive the test campaign.
paths./campaigns/{campaign_id}/schedules/test.post.parameters[0].schema.properties.to.format: email
paths./campaigns/{campaign_id}/schedules/test.post.parameters[0].schema.properties.to.type: string
paths./campaigns/{campaign_id}/schedules/test.post.parameters[0].schema.required.length: 1
paths./campaigns/{campaign_id}/schedules/test.post.parameters[0].schema.required[0]: to
paths./campaigns/{campaign_id}/schedules/test.post.parameters[0].schema.type: object
paths./campaigns/{campaign_id}/schedules/test.post.produces.length: 1
paths./campaigns/{campaign_id}/schedules/test.post.produces[0]: application/json
paths./campaigns/{campaign_id}/schedules/test.post.responses.204.description: ""
paths./campaigns/{campaign_id}/schedules/test.post.responses.204.schema.properties.to.type: string
paths./campaigns/{campaign_id}/schedules/test.post.responses.204.schema.required.length: 1
paths./campaigns/{campaign_id}/schedules/test.post.responses.204.schema.required[0]: to
paths./campaigns/{campaign_id}/schedules/test.post.responses.204.schema.title: Send
  a Test Campaign request
paths./campaigns/{campaign_id}/schedules/test.post.responses.204.schema.type: object
paths./campaigns/{campaign_id}/schedules/test.post.responses.400.description: |-
  "": "The JSON you have submitted cannot be parsed."
  "to": "Please provide an email address to which the test should be sent."
  "to": "You can only send tests to 10 addresses at a time."
  "subject": "Please add a subject to your campaign before sending a test."
  "plain_content": "Plain content and html content can't both be blank. Please set one of these values before sending a test."
  "sender_id": "Please assign a sender identity to your campaign before sending a test."
paths./campaigns/{campaign_id}/schedules/test.post.responses.400.examples.application/json.errors.length: 3
paths./campaigns/{campaign_id}/schedules/test.post.responses.400.examples.application/json.errors[0].field: send_at
paths./campaigns/{campaign_id}/schedules/test.post.responses.400.examples.application/json.errors[0].message: Please
  choose a future time for sending your campaign.
paths./campaigns/{campaign_id}/schedules/test.post.responses.400.examples.application/json.errors[1].message: The
  JSON you have submitted cannot be parsed.
paths./campaigns/{campaign_id}/schedules/test.post.responses.400.examples.application/json.errors[2].message: 'You
  do not have enough credits to send this campaign. Upgrade your plan to send more:
  https://app.sendgrid.com/settings/billing'
paths./campaigns/{campaign_id}/schedules/test.post.responses.400.schema.$ref: '#/definitions/global:ErrorResponse'
paths./campaigns/{campaign_id}/schedules/test.post.responses.404.description: '"":
  "not found"'
paths./campaigns/{campaign_id}/schedules/test.post.responses.404.examples.application/json.errors.length: 1
paths./campaigns/{campaign_id}/schedules/test.post.responses.404.examples.application/json.errors[0].message: not
  found
paths./campaigns/{campaign_id}/schedules/test.post.responses.404.schema.$ref: '#/definitions/global:ErrorResponse'
paths./campaigns/{campaign_id}/schedules/test.post.security.length: 1
paths./campaigns/{campaign_id}/schedules/test.post.security[0].Authorization.length: 0
paths./campaigns/{campaign_id}/schedules/test.post.summary: Send a Test Campaign
paths./campaigns/{campaign_id}/schedules/test.post.tags.length: 1
paths./campaigns/{campaign_id}/schedules/test.post.tags[0]: Campaigns API
paths./categories.get.description: |-
  **This endpoint allows you to retrieve a list of all of your categories.**

  Categories can help organize your email analytics by enabling you to “tag” emails by type or broad topic. You can define your own custom categories. For more information, please see our [User Guide](https://sendgrid.com/docs/User_Guide/Statistics/categories.html).
paths./categories.get.operationId: GET_categories
paths./categories.get.parameters.length: 4
paths./categories.get.parameters[0].default: 50
paths./categories.get.parameters[0].description: The number of categories to display
  per page.
paths./categories.get.parameters[0].in: query
paths./categories.get.parameters[0].name: limit
paths./categories.get.parameters[0].type: integer
paths./categories.get.parameters[1].description: Allows you to perform a prefix search
  on this particular category.
paths./categories.get.parameters[1].in: query
paths./categories.get.parameters[1].name: category
paths./categories.get.parameters[1].type: string
paths./categories.get.parameters[2].default: 0
paths./categories.get.parameters[2].description: The point in the list that you would
  like to begin displaying results.
paths./categories.get.parameters[2].in: query
paths./categories.get.parameters[2].name: offset
paths./categories.get.parameters[2].type: integer
paths./categories.get.parameters[3].$ref: '#/parameters/trait:onBehalfOfSubuser:on-behalf-of'
paths./categories.get.produces.length: 1
paths./categories.get.produces[0]: application/json
paths./categories.get.responses.200.description: ""
paths./categories.get.responses.200.examples.application/json.length: 2
paths./categories.get.responses.200.examples.application/json[0].category: category
  1
paths./categories.get.responses.200.examples.application/json[1].category: category
  2
paths./categories.get.responses.200.schema.items.properties.category.description: A
  category used to group emails by broad topic.
paths./categories.get.responses.200.schema.items.properties.category.type: string
paths./categories.get.responses.200.schema.items.required.length: 1
paths./categories.get.responses.200.schema.items.required[0]: category
paths./categories.get.responses.200.schema.items.type: object
paths./categories.get.responses.200.schema.type: array
paths./categories.get.responses.400.description: ""
paths./categories.get.responses.400.examples.application/json.errors.length: 1
paths./categories.get.responses.400.examples.application/json.errors[0].field: sort_by
paths./categories.get.responses.400.examples.application/json.errors[0].message: invalid
  sort value
paths./categories.get.responses.400.schema.properties.errors.description: The error
  returned.
paths./categories.get.responses.400.schema.properties.errors.items.properties.field.type: string
paths./categories.get.responses.400.schema.properties.errors.items.properties.message.description: A
  message explaining why your categories could not be retrieved.
paths./categories.get.responses.400.schema.properties.errors.items.properties.message.type: string
paths./categories.get.responses.400.schema.properties.errors.items.required.length: 2
paths./categories.get.responses.400.schema.properties.errors.items.required[0]: field
paths./categories.get.responses.400.schema.properties.errors.items.required[1]: message
paths./categories.get.responses.400.schema.properties.errors.items.type: object
paths./categories.get.responses.400.schema.properties.errors.type: array
paths./categories.get.responses.400.schema.type: object
paths./categories.get.security.length: 1
paths./categories.get.security[0].Authorization.length: 0
paths./categories.get.summary: Retrieve all categories
paths./categories.get.tags.length: 1
paths./categories.get.tags[0]: Categories
paths./categories/stats.get.description: |-
  **This endpoint allows you to retrieve all of your email statistics for each of your categories.**

  If you do not define any query parameters, this endpoint will return a sum for each category in groups of 10.

  Categories allow you to group your emails together according to broad topics that you define. For more information, please see our [User Guide](https://sendgrid.com/docs/User_Guide/Statistics/categories.html).
paths./categories/stats.get.operationId: GET_categories-stats
paths./categories/stats.get.parameters.length: 7
paths./categories/stats.get.parameters[0].description: The starting date of the statistics
  to retrieve. Must follow format YYYY-MM-DD
paths./categories/stats.get.parameters[0].in: query
paths./categories/stats.get.parameters[0].name: start_date
paths./categories/stats.get.parameters[0].required: true
paths./categories/stats.get.parameters[0].type: string
paths./categories/stats.get.parameters[1].description: The end date of the statistics
  to retrieve. Defaults to today. Must follow format YYYY-MM-DD.
paths./categories/stats.get.parameters[1].in: query
paths./categories/stats.get.parameters[1].name: end_date
paths./categories/stats.get.parameters[1].required: false
paths./categories/stats.get.parameters[1].type: string
paths./categories/stats.get.parameters[2].description: The individual categories that
  you want to retrieve statistics for. You may include up to 10 different categories.
paths./categories/stats.get.parameters[2].in: query
paths./categories/stats.get.parameters[2].name: categories
paths./categories/stats.get.parameters[2].required: true
paths./categories/stats.get.parameters[2].type: string
paths./categories/stats.get.parameters[3].default: 500
paths./categories/stats.get.parameters[3].description: The number of results to include.
paths./categories/stats.get.parameters[3].in: query
paths./categories/stats.get.parameters[3].maximum: 500
paths./categories/stats.get.parameters[3].name: limit
paths./categories/stats.get.parameters[3].required: false
paths./categories/stats.get.parameters[3].type: integer
paths./categories/stats.get.parameters[4].description: The number of results to skip.
paths./categories/stats.get.parameters[4].in: query
paths./categories/stats.get.parameters[4].name: offset
paths./categories/stats.get.parameters[4].required: false
paths./categories/stats.get.parameters[4].type: integer
paths./categories/stats.get.parameters[5].description: How to group the statistics.
  Must be either "day", "week", or "month".
paths./categories/stats.get.parameters[5].enum.length: 3
paths./categories/stats.get.parameters[5].enum[0]: day
paths./categories/stats.get.parameters[5].enum[1]: week
paths./categories/stats.get.parameters[5].enum[2]: month
paths./categories/stats.get.parameters[5].in: query
paths./categories/stats.get.parameters[5].name: aggregated_by
paths./categories/stats.get.parameters[5].required: false
paths./categories/stats.get.parameters[5].type: string
paths./categories/stats.get.parameters[6].$ref: '#/parameters/trait:onBehalfOfSubuser:on-behalf-of'
paths./categories/stats.get.produces.length: 1
paths./categories/stats.get.produces[0]: application/json
paths./categories/stats.get.responses.200.description: ""
paths./categories/stats.get.responses.200.examples.application/json.length: 2
paths./categories/stats.get.responses.200.examples.application/json[0].date: 2015-10-01
paths./categories/stats.get.responses.200.examples.application/json[0].stats.length: 2
paths./categories/stats.get.responses.200.examples.application/json[0].stats[0].metrics.blocks: 0
paths./categories/stats.get.responses.200.examples.application/json[0].stats[0].metrics.bounce_drops: 0
paths./categories/stats.get.responses.200.examples.application/json[0].stats[0].metrics.bounces: 0
paths./categories/stats.get.responses.200.examples.application/json[0].stats[0].metrics.clicks: 0
paths./categories/stats.get.responses.200.examples.application/json[0].stats[0].metrics.deferred: 0
paths./categories/stats.get.responses.200.examples.application/json[0].stats[0].metrics.delivered: 0
paths./categories/stats.get.responses.200.examples.application/json[0].stats[0].metrics.invalid_emails: 0
paths./categories/stats.get.responses.200.examples.application/json[0].stats[0].metrics.opens: 0
paths./categories/stats.get.responses.200.examples.application/json[0].stats[0].metrics.processed: 0
paths./categories/stats.get.responses.200.examples.application/json[0].stats[0].metrics.requests: 0
paths./categories/stats.get.responses.200.examples.application/json[0].stats[0].metrics.spam_report_drops: 0
paths./categories/stats.get.responses.200.examples.application/json[0].stats[0].metrics.spam_reports: 0
paths./categories/stats.get.responses.200.examples.application/json[0].stats[0].metrics.unique_clicks: 0
paths./categories/stats.get.responses.200.examples.application/json[0].stats[0].metrics.unique_opens: 0
paths./categories/stats.get.responses.200.examples.application/json[0].stats[0].metrics.unsubscribe_drops: 0
paths./categories/stats.get.responses.200.examples.application/json[0].stats[0].metrics.unsubscribes: 0
paths./categories/stats.get.responses.200.examples.application/json[0].stats[0].name: docs
paths./categories/stats.get.responses.200.examples.application/json[0].stats[0].type: category
paths./categories/stats.get.responses.200.examples.application/json[0].stats[1].metrics.blocks: 0
paths./categories/stats.get.responses.200.examples.application/json[0].stats[1].metrics.bounce_drops: 0
paths./categories/stats.get.responses.200.examples.application/json[0].stats[1].metrics.bounces: 0
paths./categories/stats.get.responses.200.examples.application/json[0].stats[1].metrics.clicks: 0
paths./categories/stats.get.responses.200.examples.application/json[0].stats[1].metrics.deferred: 0
paths./categories/stats.get.responses.200.examples.application/json[0].stats[1].metrics.delivered: 0
paths./categories/stats.get.responses.200.examples.application/json[0].stats[1].metrics.invalid_emails: 0
paths./categories/stats.get.responses.200.examples.application/json[0].stats[1].metrics.opens: 0
paths./categories/stats.get.responses.200.examples.application/json[0].stats[1].metrics.processed: 0
paths./categories/stats.get.responses.200.examples.application/json[0].stats[1].metrics.requests: 0
paths./categories/stats.get.responses.200.examples.application/json[0].stats[1].metrics.spam_report_drops: 0
paths./categories/stats.get.responses.200.examples.application/json[0].stats[1].metrics.spam_reports: 0
paths./categories/stats.get.responses.200.examples.application/json[0].stats[1].metrics.unique_clicks: 0
paths./categories/stats.get.responses.200.examples.application/json[0].stats[1].metrics.unique_opens: 0
paths./categories/stats.get.responses.200.examples.application/json[0].stats[1].metrics.unsubscribe_drops: 0
paths./categories/stats.get.responses.200.examples.application/json[0].stats[1].metrics.unsubscribes: 0
paths./categories/stats.get.responses.200.examples.application/json[0].stats[1].name: mattscategory
paths./categories/stats.get.responses.200.examples.application/json[0].stats[1].type: category
paths./categories/stats.get.responses.200.examples.application/json[1].date: 2015-11-01
paths./categories/stats.get.responses.200.examples.application/json[1].stats.length: 2
paths./categories/stats.get.responses.200.examples.application/json[1].stats[0].metrics.blocks: 0
paths./categories/stats.get.responses.200.examples.application/json[1].stats[0].metrics.bounce_drops: 0
paths./categories/stats.get.responses.200.examples.application/json[1].stats[0].metrics.bounces: 0
paths./categories/stats.get.responses.200.examples.application/json[1].stats[0].metrics.clicks: 0
paths./categories/stats.get.responses.200.examples.application/json[1].stats[0].metrics.deferred: 0
paths./categories/stats.get.responses.200.examples.application/json[1].stats[0].metrics.delivered: 0
paths./categories/stats.get.responses.200.examples.application/json[1].stats[0].metrics.invalid_emails: 0
paths./categories/stats.get.responses.200.examples.application/json[1].stats[0].metrics.opens: 0
paths./categories/stats.get.responses.200.examples.application/json[1].stats[0].metrics.processed: 0
paths./categories/stats.get.responses.200.examples.application/json[1].stats[0].metrics.requests: 0
paths./categories/stats.get.responses.200.examples.application/json[1].stats[0].metrics.spam_report_drops: 0
paths./categories/stats.get.responses.200.examples.application/json[1].stats[0].metrics.spam_reports: 0
paths./categories/stats.get.responses.200.examples.application/json[1].stats[0].metrics.unique_clicks: 0
paths./categories/stats.get.responses.200.examples.application/json[1].stats[0].metrics.unique_opens: 0
paths./categories/stats.get.responses.200.examples.application/json[1].stats[0].metrics.unsubscribe_drops: 0
paths./categories/stats.get.responses.200.examples.application/json[1].stats[0].metrics.unsubscribes: 0
paths./categories/stats.get.responses.200.examples.application/json[1].stats[0].name: docs
paths./categories/stats.get.responses.200.examples.application/json[1].stats[0].type: category
paths./categories/stats.get.responses.200.examples.application/json[1].stats[1].metrics.blocks: 0
paths./categories/stats.get.responses.200.examples.application/json[1].stats[1].metrics.bounce_drops: 0
paths./categories/stats.get.responses.200.examples.application/json[1].stats[1].metrics.bounces: 0
paths./categories/stats.get.responses.200.examples.application/json[1].stats[1].metrics.clicks: 0
paths./categories/stats.get.responses.200.examples.application/json[1].stats[1].metrics.deferred: 0
paths./categories/stats.get.responses.200.examples.application/json[1].stats[1].metrics.delivered: 0
paths./categories/stats.get.responses.200.examples.application/json[1].stats[1].metrics.invalid_emails: 0
paths./categories/stats.get.responses.200.examples.application/json[1].stats[1].metrics.opens: 0
paths./categories/stats.get.responses.200.examples.application/json[1].stats[1].metrics.processed: 0
paths./categories/stats.get.responses.200.examples.application/json[1].stats[1].metrics.requests: 0
paths./categories/stats.get.responses.200.examples.application/json[1].stats[1].metrics.spam_report_drops: 0
paths./categories/stats.get.responses.200.examples.application/json[1].stats[1].metrics.spam_reports: 0
paths./categories/stats.get.responses.200.examples.application/json[1].stats[1].metrics.unique_clicks: 0
paths./categories/stats.get.responses.200.examples.application/json[1].stats[1].metrics.unique_opens: 0
paths./categories/stats.get.responses.200.examples.application/json[1].stats[1].metrics.unsubscribe_drops: 0
paths./categories/stats.get.responses.200.examples.application/json[1].stats[1].metrics.unsubscribes: 0
paths./categories/stats.get.responses.200.examples.application/json[1].stats[1].name: mattscategory
paths./categories/stats.get.responses.200.examples.application/json[1].stats[1].type: category
paths./categories/stats.get.responses.200.schema.items.$ref: '#/definitions/category_stats'
paths./categories/stats.get.responses.200.schema.type: array
paths./categories/stats.get.security.length: 1
paths./categories/stats.get.security[0].Authorization.length: 0
paths./categories/stats.get.summary: Retrieve Email Statistics for Categories
paths./categories/stats.get.tags.length: 1
paths./categories/stats.get.tags[0]: Categories
paths./categories/stats/sums.get.description: |-
  **This endpoint allows you to retrieve the total sum of each email statistic for every category over the given date range.**

  If you do not define any query parameters, this endpoint will return a sum for each category in groups of 10.

  Categories allow you to group your emails together according to broad topics that you define. For more information, please see our [User Guide](https://sendgrid.com/docs/User_Guide/Statistics/categories.html).
paths./categories/stats/sums.get.operationId: GET_categories-stats-sums
paths./categories/stats/sums.get.parameters.length: 8
paths./categories/stats/sums.get.parameters[0].default: delivered
paths./categories/stats/sums.get.parameters[0].description: The metric that you want
  to sort by.  Must be a single metric.
paths./categories/stats/sums.get.parameters[0].in: query
paths./categories/stats/sums.get.parameters[0].name: sort_by_metric
paths./categories/stats/sums.get.parameters[0].required: false
paths./categories/stats/sums.get.parameters[0].type: string
paths./categories/stats/sums.get.parameters[1].default: desc
paths./categories/stats/sums.get.parameters[1].description: The direction you want
  to sort.
paths./categories/stats/sums.get.parameters[1].enum.length: 2
paths./categories/stats/sums.get.parameters[1].enum[0]: desc
paths./categories/stats/sums.get.parameters[1].enum[1]: asc
paths./categories/stats/sums.get.parameters[1].in: query
paths./categories/stats/sums.get.parameters[1].name: sort_by_direction
paths./categories/stats/sums.get.parameters[1].required: false
paths./categories/stats/sums.get.parameters[1].type: string
paths./categories/stats/sums.get.parameters[2].description: The starting date of the
  statistics to retrieve. Must follow format YYYY-MM-DD.
paths./categories/stats/sums.get.parameters[2].in: query
paths./categories/stats/sums.get.parameters[2].name: start_date
paths./categories/stats/sums.get.parameters[2].required: true
paths./categories/stats/sums.get.parameters[2].type: string
paths./categories/stats/sums.get.parameters[3].description: The end date of the statistics
  to retrieve. Defaults to today. Must follow format YYYY-MM-DD.
paths./categories/stats/sums.get.parameters[3].in: query
paths./categories/stats/sums.get.parameters[3].name: end_date
paths./categories/stats/sums.get.parameters[3].required: false
paths./categories/stats/sums.get.parameters[3].type: string
paths./categories/stats/sums.get.parameters[4].default: 5
paths./categories/stats/sums.get.parameters[4].description: Limits the number of results
  returned.
paths./categories/stats/sums.get.parameters[4].in: query
paths./categories/stats/sums.get.parameters[4].name: limit
paths./categories/stats/sums.get.parameters[4].required: false
paths./categories/stats/sums.get.parameters[4].type: integer
paths./categories/stats/sums.get.parameters[5].default: 0
paths./categories/stats/sums.get.parameters[5].description: The point in the list
  to begin retrieving results.
paths./categories/stats/sums.get.parameters[5].in: query
paths./categories/stats/sums.get.parameters[5].name: offset
paths./categories/stats/sums.get.parameters[5].required: false
paths./categories/stats/sums.get.parameters[5].type: integer
paths./categories/stats/sums.get.parameters[6].description: How to group the statistics.
  Must be either "day", "week", or "month".
paths./categories/stats/sums.get.parameters[6].enum.length: 3
paths./categories/stats/sums.get.parameters[6].enum[0]: day
paths./categories/stats/sums.get.parameters[6].enum[1]: week
paths./categories/stats/sums.get.parameters[6].enum[2]: month
paths./categories/stats/sums.get.parameters[6].in: query
paths./categories/stats/sums.get.parameters[6].name: aggregated_by
paths./categories/stats/sums.get.parameters[6].required: false
paths./categories/stats/sums.get.parameters[6].type: string
paths./categories/stats/sums.get.parameters[7].$ref: '#/parameters/trait:onBehalfOfSubuser:on-behalf-of'
paths./categories/stats/sums.get.produces.length: 1
paths./categories/stats/sums.get.produces[0]: application/json
paths./categories/stats/sums.get.responses.200.description: ""
paths./categories/stats/sums.get.responses.200.examples.application/json.date: 2015-01-01
paths./categories/stats/sums.get.responses.200.examples.application/json.stats.length: 5
paths./categories/stats/sums.get.responses.200.examples.application/json.stats[0].metrics.blocks: 0
paths./categories/stats/sums.get.responses.200.examples.application/json.stats[0].metrics.bounce_drops: 0
paths./categories/stats/sums.get.responses.200.examples.application/json.stats[0].metrics.bounces: 0
paths./categories/stats/sums.get.responses.200.examples.application/json.stats[0].metrics.clicks: 20
paths./categories/stats/sums.get.responses.200.examples.application/json.stats[0].metrics.deferred: 0
paths./categories/stats/sums.get.responses.200.examples.application/json.stats[0].metrics.delivered: 20
paths./categories/stats/sums.get.responses.200.examples.application/json.stats[0].metrics.invalid_emails: 0
paths./categories/stats/sums.get.responses.200.examples.application/json.stats[0].metrics.opens: 20
paths./categories/stats/sums.get.responses.200.examples.application/json.stats[0].metrics.processed: 0
paths./categories/stats/sums.get.responses.200.examples.application/json.stats[0].metrics.requests: 20
paths./categories/stats/sums.get.responses.200.examples.application/json.stats[0].metrics.spam_report_drops: 0
paths./categories/stats/sums.get.responses.200.examples.application/json.stats[0].metrics.spam_reports: 0
paths./categories/stats/sums.get.responses.200.examples.application/json.stats[0].metrics.unique_clicks: 20
paths./categories/stats/sums.get.responses.200.examples.application/json.stats[0].metrics.unique_opens: 20
paths./categories/stats/sums.get.responses.200.examples.application/json.stats[0].metrics.unsubscribe_drops: 0
paths./categories/stats/sums.get.responses.200.examples.application/json.stats[0].metrics.unsubscribes: 20
paths./categories/stats/sums.get.responses.200.examples.application/json.stats[0].name: cat1
paths./categories/stats/sums.get.responses.200.examples.application/json.stats[0].type: category
paths./categories/stats/sums.get.responses.200.examples.application/json.stats[1].metrics.blocks: 1
paths./categories/stats/sums.get.responses.200.examples.application/json.stats[1].metrics.bounce_drops: 0
paths./categories/stats/sums.get.responses.200.examples.application/json.stats[1].metrics.bounces: 0
paths./categories/stats/sums.get.responses.200.examples.application/json.stats[1].metrics.clicks: 19
paths./categories/stats/sums.get.responses.200.examples.application/json.stats[1].metrics.deferred: 0
paths./categories/stats/sums.get.responses.200.examples.application/json.stats[1].metrics.delivered: 19
paths./categories/stats/sums.get.responses.200.examples.application/json.stats[1].metrics.invalid_emails: 0
paths./categories/stats/sums.get.responses.200.examples.application/json.stats[1].metrics.opens: 19
paths./categories/stats/sums.get.responses.200.examples.application/json.stats[1].metrics.processed: 0
paths./categories/stats/sums.get.responses.200.examples.application/json.stats[1].metrics.requests: 20
paths./categories/stats/sums.get.responses.200.examples.application/json.stats[1].metrics.spam_report_drops: 0
paths./categories/stats/sums.get.responses.200.examples.application/json.stats[1].metrics.spam_reports: 0
paths./categories/stats/sums.get.responses.200.examples.application/json.stats[1].metrics.unique_clicks: 19
paths./categories/stats/sums.get.responses.200.examples.application/json.stats[1].metrics.unique_opens: 19
paths./categories/stats/sums.get.responses.200.examples.application/json.stats[1].metrics.unsubscribe_drops: 0
paths./categories/stats/sums.get.responses.200.examples.application/json.stats[1].metrics.unsubscribes: 19
paths./categories/stats/sums.get.responses.200.examples.application/json.stats[1].name: cat2
paths./categories/stats/sums.get.responses.200.examples.application/json.stats[1].type: category
paths./categories/stats/sums.get.responses.200.examples.application/json.stats[2].metrics.blocks: 0
paths./categories/stats/sums.get.responses.200.examples.application/json.stats[2].metrics.bounce_drops: 0
paths./categories/stats/sums.get.responses.200.examples.application/json.stats[2].metrics.bounces: 0
paths./categories/stats/sums.get.responses.200.examples.application/json.stats[2].metrics.clicks: 5
paths./categories/stats/sums.get.responses.200.examples.application/json.stats[2].metrics.deferred: 0
paths./categories/stats/sums.get.responses.200.examples.application/json.stats[2].metrics.delivered: 5
paths./categories/stats/sums.get.responses.200.examples.application/json.stats[2].metrics.invalid_emails: 0
paths./categories/stats/sums.get.responses.200.examples.application/json.stats[2].metrics.opens: 5
paths./categories/stats/sums.get.responses.200.examples.application/json.stats[2].metrics.processed: 0
paths./categories/stats/sums.get.responses.200.examples.application/json.stats[2].metrics.requests: 5
paths./categories/stats/sums.get.responses.200.examples.application/json.stats[2].metrics.spam_report_drops: 0
paths./categories/stats/sums.get.responses.200.examples.application/json.stats[2].metrics.spam_reports: 0
paths./categories/stats/sums.get.responses.200.examples.application/json.stats[2].metrics.unique_clicks: 5
paths./categories/stats/sums.get.responses.200.examples.application/json.stats[2].metrics.unique_opens: 5
paths./categories/stats/sums.get.responses.200.examples.application/json.stats[2].metrics.unsubscribe_drops: 0
paths./categories/stats/sums.get.responses.200.examples.application/json.stats[2].metrics.unsubscribes: 5
paths./categories/stats/sums.get.responses.200.examples.application/json.stats[2].name: cat3
paths./categories/stats/sums.get.responses.200.examples.application/json.stats[2].type: category
paths./categories/stats/sums.get.responses.200.examples.application/json.stats[3].metrics.blocks: 0
paths./categories/stats/sums.get.responses.200.examples.application/json.stats[3].metrics.bounce_drops: 0
paths./categories/stats/sums.get.responses.200.examples.application/json.stats[3].metrics.bounces: 0
paths./categories/stats/sums.get.responses.200.examples.application/json.stats[3].metrics.clicks: 6
paths./categories/stats/sums.get.responses.200.examples.application/json.stats[3].metrics.deferred: 0
paths./categories/stats/sums.get.responses.200.examples.application/json.stats[3].metrics.delivered: 5
paths./categories/stats/sums.get.responses.200.examples.application/json.stats[3].metrics.invalid_emails: 0
paths./categories/stats/sums.get.responses.200.examples.application/json.stats[3].metrics.opens: 6
paths./categories/stats/sums.get.responses.200.examples.application/json.stats[3].metrics.processed: 0
paths./categories/stats/sums.get.responses.200.examples.application/json.stats[3].metrics.requests: 5
paths./categories/stats/sums.get.responses.200.examples.application/json.stats[3].metrics.spam_report_drops: 0
paths./categories/stats/sums.get.responses.200.examples.application/json.stats[3].metrics.spam_reports: 0
paths./categories/stats/sums.get.responses.200.examples.application/json.stats[3].metrics.unique_clicks: 5
paths./categories/stats/sums.get.responses.200.examples.application/json.stats[3].metrics.unique_opens: 5
paths./categories/stats/sums.get.responses.200.examples.application/json.stats[3].metrics.unsubscribe_drops: 0
paths./categories/stats/sums.get.responses.200.examples.application/json.stats[3].metrics.unsubscribes: 6
paths./categories/stats/sums.get.responses.200.examples.application/json.stats[3].name: cat4
paths./categories/stats/sums.get.responses.200.examples.application/json.stats[3].type: category
paths./categories/stats/sums.get.responses.200.examples.application/json.stats[4].metrics.blocks: 10
paths./categories/stats/sums.get.responses.200.examples.application/json.stats[4].metrics.bounce_drops: 0
paths./categories/stats/sums.get.responses.200.examples.application/json.stats[4].metrics.bounces: 0
paths./categories/stats/sums.get.responses.200.examples.application/json.stats[4].metrics.clicks: 0
paths./categories/stats/sums.get.responses.200.examples.application/json.stats[4].metrics.deferred: 0
paths./categories/stats/sums.get.responses.200.examples.application/json.stats[4].metrics.delivered: 0
paths./categories/stats/sums.get.responses.200.examples.application/json.stats[4].metrics.invalid_emails: 0
paths./categories/stats/sums.get.responses.200.examples.application/json.stats[4].metrics.opens: 0
paths./categories/stats/sums.get.responses.200.examples.application/json.stats[4].metrics.processed: 0
paths./categories/stats/sums.get.responses.200.examples.application/json.stats[4].metrics.requests: 10
paths./categories/stats/sums.get.responses.200.examples.application/json.stats[4].metrics.spam_report_drops: 0
paths./categories/stats/sums.get.responses.200.examples.application/json.stats[4].metrics.spam_reports: 0
paths./categories/stats/sums.get.responses.200.examples.application/json.stats[4].metrics.unique_clicks: 0
paths./categories/stats/sums.get.responses.200.examples.application/json.stats[4].metrics.unique_opens: 0
paths./categories/stats/sums.get.responses.200.examples.application/json.stats[4].metrics.unsubscribe_drops: 0
paths./categories/stats/sums.get.responses.200.examples.application/json.stats[4].metrics.unsubscribes: 0
paths./categories/stats/sums.get.responses.200.examples.application/json.stats[4].name: cat5
paths./categories/stats/sums.get.responses.200.examples.application/json.stats[4].type: category
paths./categories/stats/sums.get.responses.200.schema.$ref: '#/definitions/category_stats'
paths./categories/stats/sums.get.security.length: 1
paths./categories/stats/sums.get.security[0].Authorization.length: 0
paths./categories/stats/sums.get.summary: 'Retrieve sums of email stats for each category
  [Needs: Stats object defined, has category ID?]'
paths./categories/stats/sums.get.tags.length: 1
paths./categories/stats/sums.get.tags[0]: Categories
paths./clients/{client_type}/stats.get.description: |-
  **This endpoint allows you to retrieve your email statistics segmented by a specific client type.**

  **We only store up to 7 days of email activity in our database.** By default, 500 items will be returned per request via the Advanced Stats API endpoints.

  ## Available Client Types
  - phone
  - tablet
  - webmail
  - desktop

  Advanced Stats provide a more in-depth view of your email statistics and the actions taken by your recipients. You can segment these statistics by geographic location, device type, client type, browser, and mailbox provider. For more information about statistics, please see our [User Guide](https://sendgrid.com/docs/User_Guide/Statistics/index.html).
paths./clients/{client_type}/stats.get.operationId: GET_clients-client_type-stats
paths./clients/{client_type}/stats.get.parameters.length: 4
paths./clients/{client_type}/stats.get.parameters[0].description: The starting date
  of the statistics to retrieve. Must follow format YYYY-MM-DD.
paths./clients/{client_type}/stats.get.parameters[0].in: query
paths./clients/{client_type}/stats.get.parameters[0].name: start_date
paths./clients/{client_type}/stats.get.parameters[0].required: true
paths./clients/{client_type}/stats.get.parameters[0].type: string
paths./clients/{client_type}/stats.get.parameters[1].description: The end date of
  the statistics to retrieve. Defaults to today. Must follow format YYYY-MM-DD.
paths./clients/{client_type}/stats.get.parameters[1].in: query
paths./clients/{client_type}/stats.get.parameters[1].name: end_date
paths./clients/{client_type}/stats.get.parameters[1].required: false
paths./clients/{client_type}/stats.get.parameters[1].type: string
paths./clients/{client_type}/stats.get.parameters[2].description: How to group the
  statistics. Must be either "day", "week", or "month".
paths./clients/{client_type}/stats.get.parameters[2].enum.length: 3
paths./clients/{client_type}/stats.get.parameters[2].enum[0]: day
paths./clients/{client_type}/stats.get.parameters[2].enum[1]: week
paths./clients/{client_type}/stats.get.parameters[2].enum[2]: month
paths./clients/{client_type}/stats.get.parameters[2].in: query
paths./clients/{client_type}/stats.get.parameters[2].name: aggregated_by
paths./clients/{client_type}/stats.get.parameters[2].required: false
paths./clients/{client_type}/stats.get.parameters[2].type: string
paths./clients/{client_type}/stats.get.parameters[3].$ref: '#/parameters/trait:onBehalfOfSubuser:on-behalf-of'
paths./clients/{client_type}/stats.get.produces.length: 1
paths./clients/{client_type}/stats.get.produces[0]: application/json
paths./clients/{client_type}/stats.get.responses.200.description: ""
paths./clients/{client_type}/stats.get.responses.200.examples.application/json.length: 2
paths./clients/{client_type}/stats.get.responses.200.examples.application/json[0].date: 2014-10-01
paths./clients/{client_type}/stats.get.responses.200.examples.application/json[0].stats.length: 1
paths./clients/{client_type}/stats.get.responses.200.examples.application/json[0].stats[0].metrics.opens: 1
paths./clients/{client_type}/stats.get.responses.200.examples.application/json[0].stats[0].metrics.unique_opens: 1
paths./clients/{client_type}/stats.get.responses.200.examples.application/json[0].stats[0].name: Gmail
paths./clients/{client_type}/stats.get.responses.200.examples.application/json[0].stats[0].type: client
paths./clients/{client_type}/stats.get.responses.200.examples.application/json[1].date: 2014-10-02
paths./clients/{client_type}/stats.get.responses.200.examples.application/json[1].stats.length: 1
paths./clients/{client_type}/stats.get.responses.200.examples.application/json[1].stats[0].metrics.opens: 0
paths./clients/{client_type}/stats.get.responses.200.examples.application/json[1].stats[0].metrics.unique_opens: 0
paths./clients/{client_type}/stats.get.responses.200.examples.application/json[1].stats[0].name: Gmail
paths./clients/{client_type}/stats.get.responses.200.examples.application/json[1].stats[0].type: client
paths./clients/{client_type}/stats.get.responses.200.schema.items.$ref: '#/definitions/advanced_stats_opens'
paths./clients/{client_type}/stats.get.responses.200.schema.type: array
paths./clients/{client_type}/stats.get.security.length: 1
paths./clients/{client_type}/stats.get.security[0].Authorization.length: 0
paths./clients/{client_type}/stats.get.summary: Retrieve stats by a specific client
  type.
paths./clients/{client_type}/stats.get.tags.length: 1
paths./clients/{client_type}/stats.get.tags[0]: Stats
paths./clients/{client_type}/stats.parameters.length: 1
paths./clients/{client_type}/stats.parameters[0].description: Specifies the type of
  client to retrieve stats for. Must be either "phone", "tablet", "webmail", or "desktop".
paths./clients/{client_type}/stats.parameters[0].enum.length: 4
paths./clients/{client_type}/stats.parameters[0].enum[0]: phone
paths./clients/{client_type}/stats.parameters[0].enum[1]: tablet
paths./clients/{client_type}/stats.parameters[0].enum[2]: webmail
paths./clients/{client_type}/stats.parameters[0].enum[3]: desktop
paths./clients/{client_type}/stats.parameters[0].in: path
paths./clients/{client_type}/stats.parameters[0].name: client_type
paths./clients/{client_type}/stats.parameters[0].required: true
paths./clients/{client_type}/stats.parameters[0].type: string
paths./clients/stats.get.description: |-
  **This endpoint allows you to retrieve your email statistics segmented by client type.**

  **We only store up to 7 days of email activity in our database.** By default, 500 items will be returned per request via the Advanced Stats API endpoints.

  Advanced Stats provide a more in-depth view of your email statistics and the actions taken by your recipients. You can segment these statistics by geographic location, device type, client type, browser, and mailbox provider. For more information about statistics, please see our [User Guide](https://sendgrid.com/docs/User_Guide/Statistics/index.html).
paths./clients/stats.get.operationId: GET_clients-stats
paths./clients/stats.get.parameters.length: 4
paths./clients/stats.get.parameters[0].description: The starting date of the statistics
  to retrieve. Must follow format YYYY-MM-DD.
paths./clients/stats.get.parameters[0].in: query
paths./clients/stats.get.parameters[0].name: start_date
paths./clients/stats.get.parameters[0].required: true
paths./clients/stats.get.parameters[0].type: string
paths./clients/stats.get.parameters[1].description: The end date of the statistics
  to retrieve. Defaults to today. Must follow format YYYY-MM-DD.
paths./clients/stats.get.parameters[1].in: query
paths./clients/stats.get.parameters[1].name: end_date
paths./clients/stats.get.parameters[1].required: false
paths./clients/stats.get.parameters[1].type: string
paths./clients/stats.get.parameters[2].description: How to group the statistics. Must
  be either "day", "week", or "month".
paths./clients/stats.get.parameters[2].enum.length: 3
paths./clients/stats.get.parameters[2].enum[0]: day
paths./clients/stats.get.parameters[2].enum[1]: week
paths./clients/stats.get.parameters[2].enum[2]: month
paths./clients/stats.get.parameters[2].in: query
paths./clients/stats.get.parameters[2].name: aggregated_by
paths./clients/stats.get.parameters[2].required: false
paths./clients/stats.get.parameters[2].type: string
paths./clients/stats.get.parameters[3].$ref: '#/parameters/trait:onBehalfOfSubuser:on-behalf-of'
paths./clients/stats.get.produces.length: 1
paths./clients/stats.get.produces[0]: application/json
paths./clients/stats.get.responses.200.description: ""
paths./clients/stats.get.responses.200.examples.application/json.length: 2
paths./clients/stats.get.responses.200.examples.application/json[0].date: 2014-10-01
paths./clients/stats.get.responses.200.examples.application/json[0].stats.length: 1
paths./clients/stats.get.responses.200.examples.application/json[0].stats[0].metrics.opens: 1
paths./clients/stats.get.responses.200.examples.application/json[0].stats[0].metrics.unique_opens: 1
paths./clients/stats.get.responses.200.examples.application/json[0].stats[0].name: Gmail
paths./clients/stats.get.responses.200.examples.application/json[0].stats[0].type: client
paths./clients/stats.get.responses.200.examples.application/json[1].date: 2014-10-02
paths./clients/stats.get.responses.200.examples.application/json[1].stats.length: 1
paths./clients/stats.get.responses.200.examples.application/json[1].stats[0].metrics.opens: 0
paths./clients/stats.get.responses.200.examples.application/json[1].stats[0].metrics.unique_opens: 0
paths./clients/stats.get.responses.200.examples.application/json[1].stats[0].name: Gmail
paths./clients/stats.get.responses.200.examples.application/json[1].stats[0].type: client
paths./clients/stats.get.responses.200.schema.items.$ref: '#/definitions/advanced_stats_opens'
paths./clients/stats.get.responses.200.schema.type: array
paths./clients/stats.get.security.length: 1
paths./clients/stats.get.security[0].Authorization.length: 0
paths./clients/stats.get.summary: Retrieve email statistics by client type.
paths./clients/stats.get.tags.length: 1
paths./clients/stats.get.tags[0]: Stats
paths./contactdb/custom_fields.get.description: "**This endpoint allows you to retrieve
  all custom fields.** \n\nThe contactdb is a database of your contacts for [SendGrid
  Marketing Campaigns](https://sendgrid.com/docs/User_Guide/Marketing_Campaigns/index.html)."
paths./contactdb/custom_fields.get.operationId: GET_contactdb-custom_fields
paths./contactdb/custom_fields.get.parameters.length: 1
paths./contactdb/custom_fields.get.parameters[0].$ref: '#/parameters/trait:onBehalfOfSubuser:on-behalf-of'
paths./contactdb/custom_fields.get.produces.length: 1
paths./contactdb/custom_fields.get.produces[0]: application/json
paths./contactdb/custom_fields.get.responses.200.description: ""
paths./contactdb/custom_fields.get.responses.200.examples.application/json.custom_fields.length: 6
paths./contactdb/custom_fields.get.responses.200.examples.application/json.custom_fields[0].id: 6234
paths./contactdb/custom_fields.get.responses.200.examples.application/json.custom_fields[0].name: age
paths./contactdb/custom_fields.get.responses.200.examples.application/json.custom_fields[0].type: number
paths./contactdb/custom_fields.get.responses.200.examples.application/json.custom_fields[1].id: 6233
paths./contactdb/custom_fields.get.responses.200.examples.application/json.custom_fields[1].name: country
paths./contactdb/custom_fields.get.responses.200.examples.application/json.custom_fields[1].type: text
paths./contactdb/custom_fields.get.responses.200.examples.application/json.custom_fields[2].id: 6235
paths./contactdb/custom_fields.get.responses.200.examples.application/json.custom_fields[2].name: favorite_color
paths./contactdb/custom_fields.get.responses.200.examples.application/json.custom_fields[2].type: text
paths./contactdb/custom_fields.get.responses.200.examples.application/json.custom_fields[3].id: 6239
paths./contactdb/custom_fields.get.responses.200.examples.application/json.custom_fields[3].name: fname
paths./contactdb/custom_fields.get.responses.200.examples.application/json.custom_fields[3].type: text
paths./contactdb/custom_fields.get.responses.200.examples.application/json.custom_fields[4].id: 6240
paths./contactdb/custom_fields.get.responses.200.examples.application/json.custom_fields[4].name: lname
paths./contactdb/custom_fields.get.responses.200.examples.application/json.custom_fields[4].type: text
paths./contactdb/custom_fields.get.responses.200.examples.application/json.custom_fields[5].id: 49439
paths./contactdb/custom_fields.get.responses.200.examples.application/json.custom_fields[5].name: pet
paths./contactdb/custom_fields.get.responses.200.examples.application/json.custom_fields[5].type: text
paths./contactdb/custom_fields.get.responses.200.schema.properties.custom_fields.items.$ref: '#/definitions/contactdb_custom_field_with_id'
paths./contactdb/custom_fields.get.responses.200.schema.properties.custom_fields.type: array
paths./contactdb/custom_fields.get.responses.200.schema.required.length: 1
paths./contactdb/custom_fields.get.responses.200.schema.required[0]: custom_fields
paths./contactdb/custom_fields.get.responses.200.schema.title: List All Custom Fields
  response
paths./contactdb/custom_fields.get.responses.200.schema.type: object
paths./contactdb/custom_fields.get.responses.401.description: ""
paths./contactdb/custom_fields.get.responses.401.examples.application/json.errors.length: 1
paths./contactdb/custom_fields.get.responses.401.examples.application/json.errors[0].message: authorization
  required
paths./contactdb/custom_fields.get.responses.401.schema.$ref: '#/definitions/global:ErrorResponse'
paths./contactdb/custom_fields.get.security.length: 1
paths./contactdb/custom_fields.get.security[0].Authorization.length: 0
paths./contactdb/custom_fields.get.summary: Retrieve all custom fields
paths./contactdb/custom_fields.get.tags.length: 1
paths./contactdb/custom_fields.get.tags[0]: Contacts API - Custom Fields
paths./contactdb/custom_fields.post.consumes.length: 1
paths./contactdb/custom_fields.post.consumes[0]: application/json
paths./contactdb/custom_fields.post.description: |-
  **This endpoint allows you to create a custom field.**

  The contactdb is a database of your contacts for [SendGrid Marketing Campaigns](https://sendgrid.com/docs/User_Guide/Marketing_Campaigns/index.html).
paths./contactdb/custom_fields.post.operationId: POST_contactdb-custom_fields
paths./contactdb/custom_fields.post.parameters.length: 2
paths./contactdb/custom_fields.post.parameters[0].in: body
paths./contactdb/custom_fields.post.parameters[0].name: body
paths./contactdb/custom_fields.post.parameters[0].schema.example.name: pet
paths./contactdb/custom_fields.post.parameters[0].schema.example.type: text
paths./contactdb/custom_fields.post.parameters[0].schema.properties.name.type: string
paths./contactdb/custom_fields.post.parameters[0].schema.properties.type.type: string
paths./contactdb/custom_fields.post.parameters[0].schema.type: object
paths./contactdb/custom_fields.post.parameters[1].$ref: '#/parameters/trait:onBehalfOfSubuser:on-behalf-of'
paths./contactdb/custom_fields.post.produces.length: 1
paths./contactdb/custom_fields.post.produces[0]: application/json
paths./contactdb/custom_fields.post.responses.201.description: ""
paths./contactdb/custom_fields.post.responses.201.examples.application/json.id: 1
paths./contactdb/custom_fields.post.responses.201.examples.application/json.name: pet
paths./contactdb/custom_fields.post.responses.201.examples.application/json.type: text
paths./contactdb/custom_fields.post.responses.201.schema.properties.id.type: integer
paths./contactdb/custom_fields.post.responses.201.schema.properties.name.type: string
paths./contactdb/custom_fields.post.responses.201.schema.properties.type.type: string
paths./contactdb/custom_fields.post.responses.201.schema.type: object
paths./contactdb/custom_fields.post.responses.400.description: |-
  "" : "Returned if request body is invalid JSON"
  "type" : "Returned if custom field type is invalid or not provided"
  "name" : "Returned if custom field name is not provided"
paths./contactdb/custom_fields.post.responses.400.examples.application/json.errors.length: 3
paths./contactdb/custom_fields.post.responses.400.examples.application/json.errors[0].message: Returned
  if request body is invalid JSON
paths./contactdb/custom_fields.post.responses.400.examples.application/json.errors[1].field: type
paths./contactdb/custom_fields.post.responses.400.examples.application/json.errors[1].message: Returned
  if custom field type is invalid or not provided
paths./contactdb/custom_fields.post.responses.400.examples.application/json.errors[2].field: name
paths./contactdb/custom_fields.post.responses.400.examples.application/json.errors[2].message: Returned
  if custom field name is not provided
paths./contactdb/custom_fields.post.responses.400.schema.$ref: '#/definitions/errors'
paths./contactdb/custom_fields.post.security.length: 1
paths./contactdb/custom_fields.post.security[0].Authorization.length: 0
paths./contactdb/custom_fields.post.summary: Create a Custom Field
paths./contactdb/custom_fields.post.tags.length: 1
paths./contactdb/custom_fields.post.tags[0]: Contacts API - Custom Fields
paths./contactdb/custom_fields/{custom_field_id}.delete.description: |-
  **This endpoint allows you to delete a custom field by ID.**

  The contactdb is a database of your contacts for [SendGrid Marketing Campaigns](https://sendgrid.com/docs/User_Guide/Marketing_Campaigns/index.html).
paths./contactdb/custom_fields/{custom_field_id}.delete.operationId: DELETE_contactdb-custom_fields-custom_field_id
paths./contactdb/custom_fields/{custom_field_id}.delete.parameters.length: 2
paths./contactdb/custom_fields/{custom_field_id}.delete.parameters[0].in: body
paths./contactdb/custom_fields/{custom_field_id}.delete.parameters[0].name: body
paths./contactdb/custom_fields/{custom_field_id}.delete.parameters[0].schema.type: "null"
paths./contactdb/custom_fields/{custom_field_id}.delete.parameters[1].$ref: '#/parameters/trait:onBehalfOfSubuser:on-behalf-of'
paths./contactdb/custom_fields/{custom_field_id}.delete.produces.length: 1
paths./contactdb/custom_fields/{custom_field_id}.delete.produces[0]: application/json
paths./contactdb/custom_fields/{custom_field_id}.delete.responses.202.description: ""
paths./contactdb/custom_fields/{custom_field_id}.delete.responses.202.examples.application/json.message: Custom
  Field delete is processing.
paths./contactdb/custom_fields/{custom_field_id}.delete.responses.202.schema.$ref: '#/definitions/global:ErrorResponse'
paths./contactdb/custom_fields/{custom_field_id}.delete.responses.400.description: '"id"
  : "Returned if custom_field_id is not valid"'
paths./contactdb/custom_fields/{custom_field_id}.delete.responses.400.examples.application/json.errors.length: 2
paths./contactdb/custom_fields/{custom_field_id}.delete.responses.400.examples.application/json.errors[0].message: Custom
  field in use by one or more segment conditions
paths./contactdb/custom_fields/{custom_field_id}.delete.responses.400.examples.application/json.errors[1].message: Custom
  field ID does not exist
paths./contactdb/custom_fields/{custom_field_id}.delete.responses.400.schema.$ref: '#/definitions/global:ErrorResponse'
paths./contactdb/custom_fields/{custom_field_id}.delete.responses.401.description: ""
paths./contactdb/custom_fields/{custom_field_id}.delete.responses.401.examples.application/json.errors.length: 1
paths./contactdb/custom_fields/{custom_field_id}.delete.responses.401.examples.application/json.errors[0].message: authorization
  required
paths./contactdb/custom_fields/{custom_field_id}.delete.responses.401.schema.$ref: '#/definitions/global:ErrorResponse'
paths./contactdb/custom_fields/{custom_field_id}.delete.responses.404.description: '"custom_field_id"
  : "Returned if custom_field_id does not exist"'
paths./contactdb/custom_fields/{custom_field_id}.delete.responses.404.examples.application/json.errors.length: 1
paths./contactdb/custom_fields/{custom_field_id}.delete.responses.404.examples.application/json.errors[0].message: Custom
  field ID does not exist
paths./contactdb/custom_fields/{custom_field_id}.delete.responses.404.schema.$ref: '#/definitions/global:ErrorResponse'
paths./contactdb/custom_fields/{custom_field_id}.delete.security.length: 1
paths./contactdb/custom_fields/{custom_field_id}.delete.security[0].Authorization.length: 0
paths./contactdb/custom_fields/{custom_field_id}.delete.summary: Delete a Custom Field
paths./contactdb/custom_fields/{custom_field_id}.delete.tags.length: 1
paths./contactdb/custom_fields/{custom_field_id}.delete.tags[0]: Contacts API - Custom
  Fields
paths./contactdb/custom_fields/{custom_field_id}.get.description: |-
  **This endpoint allows you to retrieve a custom field by ID.**

  The contactdb is a database of your contacts for [SendGrid Marketing Campaigns](https://sendgrid.com/docs/User_Guide/Marketing_Campaigns/index.html).
paths./contactdb/custom_fields/{custom_field_id}.get.operationId: GET_contactdb-custom_fields-custom_field_id
paths./contactdb/custom_fields/{custom_field_id}.get.parameters.length: 1
paths./contactdb/custom_fields/{custom_field_id}.get.parameters[0].$ref: '#/parameters/trait:onBehalfOfSubuser:on-behalf-of'
paths./contactdb/custom_fields/{custom_field_id}.get.produces.length: 1
paths./contactdb/custom_fields/{custom_field_id}.get.produces[0]: application/json
paths./contactdb/custom_fields/{custom_field_id}.get.responses.200.description: ""
paths./contactdb/custom_fields/{custom_field_id}.get.responses.200.examples.application/json.id: 1
paths./contactdb/custom_fields/{custom_field_id}.get.responses.200.examples.application/json.name: pet
paths./contactdb/custom_fields/{custom_field_id}.get.responses.200.examples.application/json.type: text
paths./contactdb/custom_fields/{custom_field_id}.get.responses.200.schema.$ref: '#/definitions/contactdb_custom_field_with_id'
paths./contactdb/custom_fields/{custom_field_id}.get.responses.400.description: ""
paths./contactdb/custom_fields/{custom_field_id}.get.responses.400.examples.application/json.errors.length: 1
paths./contactdb/custom_fields/{custom_field_id}.get.responses.400.examples.application/json.errors[0].message: invalid
  id
paths./contactdb/custom_fields/{custom_field_id}.get.responses.400.schema.$ref: '#/definitions/global:ErrorResponse'
paths./contactdb/custom_fields/{custom_field_id}.get.responses.401.description: ""
paths./contactdb/custom_fields/{custom_field_id}.get.responses.401.examples.application/json.errors.length: 1
paths./contactdb/custom_fields/{custom_field_id}.get.responses.401.examples.application/json.errors[0].message: authorization
  required
paths./contactdb/custom_fields/{custom_field_id}.get.responses.401.schema.$ref: '#/definitions/global:ErrorResponse'
paths./contactdb/custom_fields/{custom_field_id}.get.responses.404.description: '"custom_field_id"
  : "Returned if custom_field_id does not exist"'
paths./contactdb/custom_fields/{custom_field_id}.get.responses.404.examples.application/json.errors.length: 1
paths./contactdb/custom_fields/{custom_field_id}.get.responses.404.examples.application/json.errors[0].message: Custom
  field ID does not exist
paths./contactdb/custom_fields/{custom_field_id}.get.responses.404.schema.$ref: '#/definitions/global:ErrorResponse'
paths./contactdb/custom_fields/{custom_field_id}.get.security.length: 1
paths./contactdb/custom_fields/{custom_field_id}.get.security[0].Authorization.length: 0
paths./contactdb/custom_fields/{custom_field_id}.get.summary: Retrieve a Custom Field
paths./contactdb/custom_fields/{custom_field_id}.get.tags.length: 1
paths./contactdb/custom_fields/{custom_field_id}.get.tags[0]: Contacts API - Custom
  Fields
paths./contactdb/custom_fields/{custom_field_id}.parameters.length: 1
paths./contactdb/custom_fields/{custom_field_id}.parameters[0].description: The ID
  of the custom field that you want to retrieve.
paths./contactdb/custom_fields/{custom_field_id}.parameters[0].in: path
paths./contactdb/custom_fields/{custom_field_id}.parameters[0].name: custom_field_id
paths./contactdb/custom_fields/{custom_field_id}.parameters[0].required: true
paths./contactdb/custom_fields/{custom_field_id}.parameters[0].type: integer
paths./contactdb/lists.delete.consumes.length: 1
paths./contactdb/lists.delete.consumes[0]: application/json
paths./contactdb/lists.delete.description: |-
  **This endpoint allows you to delete multiple recipient lists.**

  The Contacts API helps you manage your [Marketing Campaigns](https://sendgrid.com/docs/User_Guide/Marketing_Campaigns/index.html) recipients.
paths./contactdb/lists.delete.operationId: DELETE_contactdb-lists
paths./contactdb/lists.delete.parameters.length: 2
paths./contactdb/lists.delete.parameters[0].in: body
paths./contactdb/lists.delete.parameters[0].name: body
paths./contactdb/lists.delete.parameters[0].schema.example.length: 4
paths./contactdb/lists.delete.parameters[0].schema.example[0]: 1
paths./contactdb/lists.delete.parameters[0].schema.example[1]: 2
paths./contactdb/lists.delete.parameters[0].schema.example[2]: 3
paths./contactdb/lists.delete.parameters[0].schema.example[3]: 4
paths./contactdb/lists.delete.parameters[0].schema.items.type: integer
paths./contactdb/lists.delete.parameters[0].schema.type: array
paths./contactdb/lists.delete.parameters[1].$ref: '#/parameters/trait:onBehalfOfSubuser:on-behalf-of'
paths./contactdb/lists.delete.produces.length: 1
paths./contactdb/lists.delete.produces[0]: application/json
paths./contactdb/lists.delete.responses.204.description: ""
paths./contactdb/lists.delete.responses.204.schema.type: "null"
paths./contactdb/lists.delete.responses.400.description: '"id" : "Returned if all
  list ids are not valid"'
paths./contactdb/lists.delete.responses.400.examples.application/json.errors.length: 1
paths./contactdb/lists.delete.responses.400.examples.application/json.errors[0].message: list
  id was invalid
paths./contactdb/lists.delete.responses.400.schema.$ref: '#/definitions/global:ErrorResponse'
paths./contactdb/lists.delete.responses.401.description: ""
paths./contactdb/lists.delete.responses.401.examples.application/json.errors.length: 1
paths./contactdb/lists.delete.responses.401.examples.application/json.errors[0].message: authorization
  required
paths./contactdb/lists.delete.responses.401.schema.$ref: '#/definitions/global:ErrorResponse'
paths./contactdb/lists.delete.security.length: 1
paths./contactdb/lists.delete.security[0].Authorization.length: 0
paths./contactdb/lists.delete.summary: Delete Multiple lists
paths./contactdb/lists.delete.tags.length: 1
paths./contactdb/lists.delete.tags[0]: Contacts API - Lists
paths./contactdb/lists.get.description: |-
  **This endpoint allows you to retrieve all of your recipient lists. If you don't have any lists, an empty array will be returned.**

  The Contacts API helps you manage your [Marketing Campaigns](https://sendgrid.com/docs/User_Guide/Marketing_Campaigns/index.html) recipients.
paths./contactdb/lists.get.operationId: GET_contactdb-lists
paths./contactdb/lists.get.parameters.length: 1
paths./contactdb/lists.get.parameters[0].$ref: '#/parameters/trait:onBehalfOfSubuser:on-behalf-of'
paths./contactdb/lists.get.produces.length: 1
paths./contactdb/lists.get.produces[0]: application/json
paths./contactdb/lists.get.responses.200.description: ""
paths./contactdb/lists.get.responses.200.examples.application/json.lists.length: 1
paths./contactdb/lists.get.responses.200.examples.application/json.lists[0].id: 1
paths./contactdb/lists.get.responses.200.examples.application/json.lists[0].name: the
  jones
paths./contactdb/lists.get.responses.200.examples.application/json.lists[0].recipient_count: 1
paths./contactdb/lists.get.responses.200.schema.properties.lists.items.$ref: '#/definitions/contactdb_list'
paths./contactdb/lists.get.responses.200.schema.properties.lists.type: array
paths./contactdb/lists.get.responses.200.schema.required.length: 1
paths./contactdb/lists.get.responses.200.schema.required[0]: lists
paths./contactdb/lists.get.responses.200.schema.title: List All Lists response
paths./contactdb/lists.get.responses.200.schema.type: object
paths./contactdb/lists.get.security.length: 1
paths./contactdb/lists.get.security[0].Authorization.length: 0
paths./contactdb/lists.get.summary: Retrieve all lists
paths./contactdb/lists.get.tags.length: 1
paths./contactdb/lists.get.tags[0]: Contacts API - Lists
paths./contactdb/lists.post.consumes.length: 1
paths./contactdb/lists.post.consumes[0]: application/json
paths./contactdb/lists.post.description: |-
  **This endpoint allows you to create a list for your recipients.**

  The Contacts API helps you manage your [Marketing Campaigns](https://sendgrid.com/docs/User_Guide/Marketing_Campaigns/index.html) recipients.
paths./contactdb/lists.post.operationId: POST_contactdb-lists
paths./contactdb/lists.post.parameters.length: 2
paths./contactdb/lists.post.parameters[0].in: body
paths./contactdb/lists.post.parameters[0].name: body
paths./contactdb/lists.post.parameters[0].schema.example.name: your list name
paths./contactdb/lists.post.parameters[0].schema.properties.name.type: string
paths./contactdb/lists.post.parameters[0].schema.required.length: 1
paths./contactdb/lists.post.parameters[0].schema.required[0]: name
paths./contactdb/lists.post.parameters[0].schema.title: Create a List request
paths./contactdb/lists.post.parameters[0].schema.type: object
paths./contactdb/lists.post.parameters[1].$ref: '#/parameters/trait:onBehalfOfSubuser:on-behalf-of'
paths./contactdb/lists.post.produces.length: 1
paths./contactdb/lists.post.produces[0]: application/json
paths./contactdb/lists.post.responses.201.description: ""
paths./contactdb/lists.post.responses.201.examples.application/json.id: 1
paths./contactdb/lists.post.responses.201.examples.application/json.name: your list
  name
paths./contactdb/lists.post.responses.201.examples.application/json.recipient_count: 0
paths./contactdb/lists.post.responses.201.schema.$ref: '#/definitions/contactdb_list'
paths./contactdb/lists.post.responses.400.description: |-
  "name" : "Returned if list name is a duplicate of an existing list or segment"
  "name" : "Returned if list name is not a string"
  "" : "Returned if request body is invalid JSON"
paths./contactdb/lists.post.responses.400.examples.application/json.errors.length: 3
paths./contactdb/lists.post.responses.400.examples.application/json.errors[0].message: Returned
  if request body is invalid JSON
paths./contactdb/lists.post.responses.400.examples.application/json.errors[1].field: name
paths./contactdb/lists.post.responses.400.examples.application/json.errors[1].message: Returned
  if list name is not a string
paths./contactdb/lists.post.responses.400.examples.application/json.errors[2].field: name
paths./contactdb/lists.post.responses.400.examples.application/json.errors[2].message: Returned
  if list name is a duplicate of an existing list or segment
paths./contactdb/lists.post.responses.400.schema.$ref: '#/definitions/global:ErrorResponse'
paths./contactdb/lists.post.responses.401.description: ""
paths./contactdb/lists.post.responses.401.examples.application/json.errors.length: 1
paths./contactdb/lists.post.responses.401.examples.application/json.errors[0].message: authorization
  required
paths./contactdb/lists.post.responses.401.schema.$ref: '#/definitions/global:ErrorResponse'
paths./contactdb/lists.post.security.length: 1
paths./contactdb/lists.post.security[0].Authorization.length: 0
paths./contactdb/lists.post.summary: Create a List
paths./contactdb/lists.post.tags.length: 1
paths./contactdb/lists.post.tags[0]: Contacts API - Lists
paths./contactdb/lists/{list_id}.delete.description: |-
  **This endpoint allows you to delete a specific recipient list with the given ID.**

  The Contacts API helps you manage your [Marketing Campaigns](https://sendgrid.com/docs/User_Guide/Marketing_Campaigns/index.html) recipients.
paths./contactdb/lists/{list_id}.delete.operationId: DELETE_contactdb-lists-list_id
paths./contactdb/lists/{list_id}.delete.parameters.length: 3
paths./contactdb/lists/{list_id}.delete.parameters[0].description: Adds the ability
  to delete all contacts on the list in addition to deleting the list.
paths./contactdb/lists/{list_id}.delete.parameters[0].enum.length: 2
paths./contactdb/lists/{list_id}.delete.parameters[0].enum[0]: true
paths./contactdb/lists/{list_id}.delete.parameters[0].enum[1]: false
paths./contactdb/lists/{list_id}.delete.parameters[0].in: query
paths./contactdb/lists/{list_id}.delete.parameters[0].name: delete_contacts
paths./contactdb/lists/{list_id}.delete.parameters[0].type: boolean
paths./contactdb/lists/{list_id}.delete.parameters[1].in: body
paths./contactdb/lists/{list_id}.delete.parameters[1].name: body
paths./contactdb/lists/{list_id}.delete.parameters[1].schema.type: "null"
paths./contactdb/lists/{list_id}.delete.parameters[2].$ref: '#/parameters/trait:onBehalfOfSubuser:on-behalf-of'
paths./contactdb/lists/{list_id}.delete.produces.length: 1
paths./contactdb/lists/{list_id}.delete.produces[0]: application/json
paths./contactdb/lists/{list_id}.delete.responses.202.description: ""
paths./contactdb/lists/{list_id}.delete.responses.202.schema.type: "null"
paths./contactdb/lists/{list_id}.delete.responses.400.description: |-
  "list_id" : "Returned if list_id is not valid"
  "delete_contacts" : "Returned if delete_contacts is not valid"
paths./contactdb/lists/{list_id}.delete.responses.400.examples.application/json.errors.length: 2
paths./contactdb/lists/{list_id}.delete.responses.400.examples.application/json.errors[0].field: delete_contacts
paths./contactdb/lists/{list_id}.delete.responses.400.examples.application/json.errors[0].message: delete_contacts
  not a bool
paths./contactdb/lists/{list_id}.delete.responses.400.examples.application/json.errors[1].field: list_id
paths./contactdb/lists/{list_id}.delete.responses.400.examples.application/json.errors[1].message: Returned
  if list_id is not valid
paths./contactdb/lists/{list_id}.delete.responses.400.schema.$ref: '#/definitions/global:ErrorResponse'
paths./contactdb/lists/{list_id}.delete.responses.401.description: ""
paths./contactdb/lists/{list_id}.delete.responses.401.examples.application/json.errors.length: 1
paths./contactdb/lists/{list_id}.delete.responses.401.examples.application/json.errors[0].message: authorization
  required
paths./contactdb/lists/{list_id}.delete.responses.401.schema.$ref: '#/definitions/global:ErrorResponse'
paths./contactdb/lists/{list_id}.delete.responses.404.description: '"list_id" : "Returned
  if list_id does not exist"'
paths./contactdb/lists/{list_id}.delete.responses.404.examples.application/json.errors.length: 1
paths./contactdb/lists/{list_id}.delete.responses.404.examples.application/json.errors[0].message: 'List
  not found: 5'
paths./contactdb/lists/{list_id}.delete.responses.404.schema.$ref: '#/definitions/global:ErrorResponse'
paths./contactdb/lists/{list_id}.delete.security.length: 1
paths./contactdb/lists/{list_id}.delete.security[0].Authorization.length: 0
paths./contactdb/lists/{list_id}.delete.summary: Delete a List
paths./contactdb/lists/{list_id}.delete.tags.length: 1
paths./contactdb/lists/{list_id}.delete.tags[0]: Contacts API - Lists
paths./contactdb/lists/{list_id}.get.description: |-
  This endpoint allows you to retrieve a single recipient list.

  The Contacts API helps you manage your [Marketing Campaigns](https://sendgrid.com/docs/User_Guide/Marketing_Campaigns/index.html) recipients.
paths./contactdb/lists/{list_id}.get.operationId: GET_contactdb-lists-list_id
paths./contactdb/lists/{list_id}.get.parameters.length: 2
paths./contactdb/lists/{list_id}.get.parameters[0].description: The ID of the list
  to retrieve.
paths./contactdb/lists/{list_id}.get.parameters[0].in: query
paths./contactdb/lists/{list_id}.get.parameters[0].name: list_id
paths./contactdb/lists/{list_id}.get.parameters[0].type: integer
paths./contactdb/lists/{list_id}.get.parameters[1].$ref: '#/parameters/trait:onBehalfOfSubuser:on-behalf-of'
paths./contactdb/lists/{list_id}.get.produces.length: 1
paths./contactdb/lists/{list_id}.get.produces[0]: application/json
paths./contactdb/lists/{list_id}.get.responses.200.description: ""
paths./contactdb/lists/{list_id}.get.responses.200.examples.application/json.id: 1
paths./contactdb/lists/{list_id}.get.responses.200.examples.application/json.name: listname
paths./contactdb/lists/{list_id}.get.responses.200.examples.application/json.recipient_count: 0
paths./contactdb/lists/{list_id}.get.responses.200.schema.$ref: '#/definitions/contactdb_list'
paths./contactdb/lists/{list_id}.get.responses.400.description: '"list_id" : "Returned
  if list_id is not valid"'
paths./contactdb/lists/{list_id}.get.responses.400.examples.application/json.errors.length: 1
paths./contactdb/lists/{list_id}.get.responses.400.examples.application/json.errors[0].message: invalid
  id
paths./contactdb/lists/{list_id}.get.responses.400.schema.$ref: '#/definitions/global:ErrorResponse'
paths./contactdb/lists/{list_id}.get.responses.401.description: ""
paths./contactdb/lists/{list_id}.get.responses.401.examples.application/json.errors.length: 1
paths./contactdb/lists/{list_id}.get.responses.401.examples.application/json.errors[0].message: authorization
  required
paths./contactdb/lists/{list_id}.get.responses.401.schema.$ref: '#/definitions/global:ErrorResponse'
paths./contactdb/lists/{list_id}.get.responses.404.description: '"list_id" : "Returned
  if list_id does not exist"'
paths./contactdb/lists/{list_id}.get.responses.404.examples.application/json.errors.length: 1
paths./contactdb/lists/{list_id}.get.responses.404.examples.application/json.errors[0].message: List
  ID does not exist
paths./contactdb/lists/{list_id}.get.responses.404.schema.$ref: '#/definitions/global:ErrorResponse'
paths./contactdb/lists/{list_id}.get.security.length: 1
paths./contactdb/lists/{list_id}.get.security[0].Authorization.length: 0
paths./contactdb/lists/{list_id}.get.summary: Retrieve a single list
paths./contactdb/lists/{list_id}.get.tags.length: 1
paths./contactdb/lists/{list_id}.get.tags[0]: Contacts API - Lists
paths./contactdb/lists/{list_id}.parameters.length: 1
paths./contactdb/lists/{list_id}.parameters[0].in: path
paths./contactdb/lists/{list_id}.parameters[0].name: list_id
paths./contactdb/lists/{list_id}.parameters[0].required: true
paths./contactdb/lists/{list_id}.parameters[0].type: string
paths./contactdb/lists/{list_id}.patch.consumes.length: 1
paths./contactdb/lists/{list_id}.patch.consumes[0]: application/json
paths./contactdb/lists/{list_id}.patch.description: |-
  **This endpoint allows you to update the name of one of your recipient lists.**


  The Contacts API helps you manage your [Marketing Campaigns](https://sendgrid.com/docs/User_Guide/Marketing_Campaigns/index.html) recipients.
paths./contactdb/lists/{list_id}.patch.operationId: PATCH_contactdb-lists-list_id
paths./contactdb/lists/{list_id}.patch.parameters.length: 3
paths./contactdb/lists/{list_id}.patch.parameters[0].description: The ID of the list
  you are updating.
paths./contactdb/lists/{list_id}.patch.parameters[0].in: query
paths./contactdb/lists/{list_id}.patch.parameters[0].name: list_id
paths./contactdb/lists/{list_id}.patch.parameters[0].required: true
paths./contactdb/lists/{list_id}.patch.parameters[0].type: integer
paths./contactdb/lists/{list_id}.patch.parameters[1].in: body
paths./contactdb/lists/{list_id}.patch.parameters[1].name: body
paths./contactdb/lists/{list_id}.patch.parameters[1].schema.example.name: newlistname
paths./contactdb/lists/{list_id}.patch.parameters[1].schema.properties.name.description: 'The
  new name for your list. '
paths./contactdb/lists/{list_id}.patch.parameters[1].schema.properties.name.type: string
paths./contactdb/lists/{list_id}.patch.parameters[1].schema.required.length: 1
paths./contactdb/lists/{list_id}.patch.parameters[1].schema.required[0]: name
paths./contactdb/lists/{list_id}.patch.parameters[1].schema.title: Update a List request
paths./contactdb/lists/{list_id}.patch.parameters[1].schema.type: object
paths./contactdb/lists/{list_id}.patch.parameters[2].$ref: '#/parameters/trait:onBehalfOfSubuser:on-behalf-of'
paths./contactdb/lists/{list_id}.patch.produces.length: 1
paths./contactdb/lists/{list_id}.patch.produces[0]: application/json
paths./contactdb/lists/{list_id}.patch.responses.200.description: ""
paths./contactdb/lists/{list_id}.patch.responses.200.examples.application/json.id: 1234
paths./contactdb/lists/{list_id}.patch.responses.200.examples.application/json.name: 2016
  iPhone Users
paths./contactdb/lists/{list_id}.patch.responses.200.examples.application/json.recipient_count: 0
paths./contactdb/lists/{list_id}.patch.responses.200.schema.properties.id.description: The
  ID of the list
paths./contactdb/lists/{list_id}.patch.responses.200.schema.properties.id.type: integer
paths./contactdb/lists/{list_id}.patch.responses.200.schema.properties.name.description: The
  new name for the list
paths./contactdb/lists/{list_id}.patch.responses.200.schema.properties.name.type: string
paths./contactdb/lists/{list_id}.patch.responses.200.schema.properties.recipient_count.description: The
  number of recipients on the list
paths./contactdb/lists/{list_id}.patch.responses.200.schema.properties.recipient_count.type: integer
paths./contactdb/lists/{list_id}.patch.responses.200.schema.type: object
paths./contactdb/lists/{list_id}.patch.responses.400.description: |-
  "name" : "Returned if list name is a duplicate of existing list or segment"
  "name" : "Returned if list name is invalid or not provided"
  "list_id" : "Returned if list_id is not valid"
  "" : "Returned if request body is invalid JSON"
paths./contactdb/lists/{list_id}.patch.responses.400.examples.application/json.errors.length: 1
paths./contactdb/lists/{list_id}.patch.responses.400.examples.application/json.errors[0].message: invalid
  id
paths./contactdb/lists/{list_id}.patch.responses.400.schema.$ref: '#/definitions/global:ErrorResponse'
paths./contactdb/lists/{list_id}.patch.responses.404.description: '"list_id" : "Returned
  if list_id does not exist"'
paths./contactdb/lists/{list_id}.patch.responses.404.examples.application/json.errors.length: 1
paths./contactdb/lists/{list_id}.patch.responses.404.examples.application/json.errors[0].message: List
  ID does not exist
paths./contactdb/lists/{list_id}.patch.responses.404.schema.$ref: '#/definitions/global:ErrorResponse'
paths./contactdb/lists/{list_id}.patch.security.length: 1
paths./contactdb/lists/{list_id}.patch.security[0].Authorization.length: 0
paths./contactdb/lists/{list_id}.patch.summary: Update a List
paths./contactdb/lists/{list_id}.patch.tags.length: 1
paths./contactdb/lists/{list_id}.patch.tags[0]: Contacts API - Lists
paths./contactdb/lists/{list_id}/recipients.get.description: "**This endpoint allows
  you to retrieve all recipients on the list with the given ID.** \n\nThe Contacts
  API helps you manage your [Marketing Campaigns](https://sendgrid.com/docs/User_Guide/Marketing_Campaigns/index.html)
  recipients."
paths./contactdb/lists/{list_id}/recipients.get.operationId: GET_contactdb-lists-list_id-recipients
paths./contactdb/lists/{list_id}/recipients.get.parameters.length: 4
paths./contactdb/lists/{list_id}/recipients.get.parameters[0].description: Page index
  of first recipient to return (must be a positive integer)
paths./contactdb/lists/{list_id}/recipients.get.parameters[0].in: query
paths./contactdb/lists/{list_id}/recipients.get.parameters[0].name: page
paths./contactdb/lists/{list_id}/recipients.get.parameters[0].required: false
paths./contactdb/lists/{list_id}/recipients.get.parameters[0].type: integer
paths./contactdb/lists/{list_id}/recipients.get.parameters[1].description: Number
  of recipients to return at a time (must be a positive integer between 1 and 1000)
paths./contactdb/lists/{list_id}/recipients.get.parameters[1].in: query
paths./contactdb/lists/{list_id}/recipients.get.parameters[1].name: page_size
paths./contactdb/lists/{list_id}/recipients.get.parameters[1].required: false
paths./contactdb/lists/{list_id}/recipients.get.parameters[1].type: integer
paths./contactdb/lists/{list_id}/recipients.get.parameters[2].description: The ID
  of the list whose recipients you are requesting.
paths./contactdb/lists/{list_id}/recipients.get.parameters[2].in: query
paths./contactdb/lists/{list_id}/recipients.get.parameters[2].name: list_id
paths./contactdb/lists/{list_id}/recipients.get.parameters[2].required: true
paths./contactdb/lists/{list_id}/recipients.get.parameters[2].type: integer
paths./contactdb/lists/{list_id}/recipients.get.parameters[3].$ref: '#/parameters/trait:onBehalfOfSubuser:on-behalf-of'
paths./contactdb/lists/{list_id}/recipients.get.produces.length: 1
paths./contactdb/lists/{list_id}/recipients.get.produces[0]: application/json
paths./contactdb/lists/{list_id}/recipients.get.responses.200.description: ""
paths./contactdb/lists/{list_id}/recipients.get.responses.200.examples.application/json.recipients.length: 1
paths./contactdb/lists/{list_id}/recipients.get.responses.200.examples.application/json.recipients[0].created_at: 1.4333484e+09
paths./contactdb/lists/{list_id}/recipients.get.responses.200.examples.application/json.recipients[0].custom_fields.length: 5
paths./contactdb/lists/{list_id}/recipients.get.responses.200.examples.application/json.recipients[0].custom_fields[0].id: 6234
paths./contactdb/lists/{list_id}/recipients.get.responses.200.examples.application/json.recipients[0].custom_fields[0].name: age
paths./contactdb/lists/{list_id}/recipients.get.responses.200.examples.application/json.recipients[0].custom_fields[0].type: number
paths./contactdb/lists/{list_id}/recipients.get.responses.200.examples.application/json.recipients[0].custom_fields[1].id: 6233
paths./contactdb/lists/{list_id}/recipients.get.responses.200.examples.application/json.recipients[0].custom_fields[1].name: country
paths./contactdb/lists/{list_id}/recipients.get.responses.200.examples.application/json.recipients[0].custom_fields[1].type: text
paths./contactdb/lists/{list_id}/recipients.get.responses.200.examples.application/json.recipients[0].custom_fields[2].id: 6235
paths./contactdb/lists/{list_id}/recipients.get.responses.200.examples.application/json.recipients[0].custom_fields[2].name: fname
paths./contactdb/lists/{list_id}/recipients.get.responses.200.examples.application/json.recipients[0].custom_fields[2].type: text
paths./contactdb/lists/{list_id}/recipients.get.responses.200.examples.application/json.recipients[0].custom_fields[2].value: Example
paths./contactdb/lists/{list_id}/recipients.get.responses.200.examples.application/json.recipients[0].custom_fields[3].id: 6239
paths./contactdb/lists/{list_id}/recipients.get.responses.200.examples.application/json.recipients[0].custom_fields[3].name: lname
paths./contactdb/lists/{list_id}/recipients.get.responses.200.examples.application/json.recipients[0].custom_fields[3].type: text
paths./contactdb/lists/{list_id}/recipients.get.responses.200.examples.application/json.recipients[0].custom_fields[3].value: User
paths./contactdb/lists/{list_id}/recipients.get.responses.200.examples.application/json.recipients[0].custom_fields[4].id: 6240
paths./contactdb/lists/{list_id}/recipients.get.responses.200.examples.application/json.recipients[0].custom_fields[4].name: lname
paths./contactdb/lists/{list_id}/recipients.get.responses.200.examples.application/json.recipients[0].custom_fields[4].type: text
paths./contactdb/lists/{list_id}/recipients.get.responses.200.examples.application/json.recipients[0].email: example@example.com
paths./contactdb/lists/{list_id}/recipients.get.responses.200.examples.application/json.recipients[0].first_name: Example
paths./contactdb/lists/{list_id}/recipients.get.responses.200.examples.application/json.recipients[0].id: ZGVWfyZWsuYmFpbmVzQHNlbmRmCmLkLmNv==
paths./contactdb/lists/{list_id}/recipients.get.responses.200.examples.application/json.recipients[0].last_clicked: 1.438616e+09
paths./contactdb/lists/{list_id}/recipients.get.responses.200.examples.application/json.recipients[0].last_emailed: 1.4386132e+09
paths./contactdb/lists/{list_id}/recipients.get.responses.200.examples.application/json.recipients[0].last_name: User
paths./contactdb/lists/{list_id}/recipients.get.responses.200.examples.application/json.recipients[0].last_opened: 1.438616e+09
paths./contactdb/lists/{list_id}/recipients.get.responses.200.examples.application/json.recipients[0].updated_at: 1.438616e+09
paths./contactdb/lists/{list_id}/recipients.get.responses.200.schema.properties.recipients.items.$ref: '#/definitions/contactdb_recipient'
paths./contactdb/lists/{list_id}/recipients.get.responses.200.schema.properties.recipients.type: array
paths./contactdb/lists/{list_id}/recipients.get.responses.200.schema.type: object
paths./contactdb/lists/{list_id}/recipients.get.responses.400.description: |-
  "list_id" : "Returned if list_id is not a valid integer"
  "page" : "Returned if page is not a valid integer"
  "page" : "Returned if page is less than 1"
  "page_size" : "Returned if page_size is not a valid integer"
  "page_size" : "Returned if page_size is less than 1 or greater than 1000"
paths./contactdb/lists/{list_id}/recipients.get.responses.400.examples.application/json.errors.length: 5
paths./contactdb/lists/{list_id}/recipients.get.responses.400.examples.application/json.errors[0].field: list_id
paths./contactdb/lists/{list_id}/recipients.get.responses.400.examples.application/json.errors[0].message: Returned
  if list_id is not a valid integer
paths./contactdb/lists/{list_id}/recipients.get.responses.400.examples.application/json.errors[1].field: page
paths./contactdb/lists/{list_id}/recipients.get.responses.400.examples.application/json.errors[1].message: Returned
  if page is not a valid integer
paths./contactdb/lists/{list_id}/recipients.get.responses.400.examples.application/json.errors[2].field: page
paths./contactdb/lists/{list_id}/recipients.get.responses.400.examples.application/json.errors[2].message: Returned
  if page is less than 1
paths./contactdb/lists/{list_id}/recipients.get.responses.400.examples.application/json.errors[3].field: page_size
paths./contactdb/lists/{list_id}/recipients.get.responses.400.examples.application/json.errors[3].message: Returned
  if page_size is not a valid integer
paths./contactdb/lists/{list_id}/recipients.get.responses.400.examples.application/json.errors[4].field: page_size
paths./contactdb/lists/{list_id}/recipients.get.responses.400.examples.application/json.errors[4].message: Returned
  if page_size is less than 1 or greater than 1000
paths./contactdb/lists/{list_id}/recipients.get.responses.400.schema.$ref: '#/definitions/global:ErrorResponse'
paths./contactdb/lists/{list_id}/recipients.get.responses.404.description: '"list_id"
  : "Returned if list_id does not exist"'
paths./contactdb/lists/{list_id}/recipients.get.responses.404.examples.application/json.errors.length: 1
paths./contactdb/lists/{list_id}/recipients.get.responses.404.examples.application/json.errors[0].field: list_id
paths./contactdb/lists/{list_id}/recipients.get.responses.404.examples.application/json.errors[0].message: Returned
  if list_id is invalid
paths./contactdb/lists/{list_id}/recipients.get.responses.404.schema.type: object
paths./contactdb/lists/{list_id}/recipients.get.security.length: 1
paths./contactdb/lists/{list_id}/recipients.get.security[0].Authorization.length: 0
paths./contactdb/lists/{list_id}/recipients.get.summary: Retrieve all recipients on
  a List
paths./contactdb/lists/{list_id}/recipients.get.tags.length: 1
paths./contactdb/lists/{list_id}/recipients.get.tags[0]: Contacts API - Lists
paths./contactdb/lists/{list_id}/recipients.parameters.length: 1
paths./contactdb/lists/{list_id}/recipients.parameters[0].description: The id of the
  list of recipients you want to retrieve.
paths./contactdb/lists/{list_id}/recipients.parameters[0].in: path
paths./contactdb/lists/{list_id}/recipients.parameters[0].name: list_id
paths./contactdb/lists/{list_id}/recipients.parameters[0].required: true
paths./contactdb/lists/{list_id}/recipients.parameters[0].type: integer
paths./contactdb/lists/{list_id}/recipients.post.consumes.length: 1
paths./contactdb/lists/{list_id}/recipients.post.consumes[0]: application/json
paths./contactdb/lists/{list_id}/recipients.post.description: |-
  **This endpoint allows you to add multiple recipients to a list.**

  Adds existing recipients to a list, passing in the recipient IDs to add. Recipient IDs should be passed exactly as they are returned from recipient endpoints.

  The Contacts API helps you manage your [Marketing Campaigns](https://sendgrid.com/docs/User_Guide/Marketing_Campaigns/index.html) recipients.
paths./contactdb/lists/{list_id}/recipients.post.operationId: POST_contactdb-lists-list_id-recipients
paths./contactdb/lists/{list_id}/recipients.post.parameters.length: 2
paths./contactdb/lists/{list_id}/recipients.post.parameters[0].in: body
paths./contactdb/lists/{list_id}/recipients.post.parameters[0].name: body
paths./contactdb/lists/{list_id}/recipients.post.parameters[0].schema.example.length: 2
paths./contactdb/lists/{list_id}/recipients.post.parameters[0].schema.example[0]: recipient_id1
paths./contactdb/lists/{list_id}/recipients.post.parameters[0].schema.example[1]: recipient_id2
paths./contactdb/lists/{list_id}/recipients.post.parameters[0].schema.items.type: string
paths./contactdb/lists/{list_id}/recipients.post.parameters[0].schema.type: array
paths./contactdb/lists/{list_id}/recipients.post.parameters[1].$ref: '#/parameters/trait:onBehalfOfSubuser:on-behalf-of'
paths./contactdb/lists/{list_id}/recipients.post.produces.length: 1
paths./contactdb/lists/{list_id}/recipients.post.produces[0]: application/json
paths./contactdb/lists/{list_id}/recipients.post.responses.201.description: ""
paths./contactdb/lists/{list_id}/recipients.post.responses.201.schema.type: "null"
paths./contactdb/lists/{list_id}/recipients.post.responses.400.description: |-
  "list_id" : "Returned if list_id is not a valid integer"
  "" : "Returned if no valid recipient ids were passed"
  "" : "Returned if no recipients were added"
  "" : "Returned if request body is invalid JSON"
paths./contactdb/lists/{list_id}/recipients.post.responses.400.examples.application/json.errors.length: 4
paths./contactdb/lists/{list_id}/recipients.post.responses.400.examples.application/json.errors[0].field: list_id
paths./contactdb/lists/{list_id}/recipients.post.responses.400.examples.application/json.errors[0].message: list_id
  is invalid
paths./contactdb/lists/{list_id}/recipients.post.responses.400.examples.application/json.errors[1].field: recipient_id
paths./contactdb/lists/{list_id}/recipients.post.responses.400.examples.application/json.errors[1].message: no
  valid recipients were provided
paths./contactdb/lists/{list_id}/recipients.post.responses.400.examples.application/json.errors[2].message: no
  recipients were added
paths./contactdb/lists/{list_id}/recipients.post.responses.400.examples.application/json.errors[3].message: request
  body is invalid JSON
paths./contactdb/lists/{list_id}/recipients.post.responses.400.schema.$ref: '#/definitions/global:ErrorResponse'
paths./contactdb/lists/{list_id}/recipients.post.responses.401.description: ""
paths./contactdb/lists/{list_id}/recipients.post.responses.401.examples.application/json.errors.length: 1
paths./contactdb/lists/{list_id}/recipients.post.responses.401.examples.application/json.errors[0].message: authorization
  required
paths./contactdb/lists/{list_id}/recipients.post.responses.401.schema.$ref: '#/definitions/global:ErrorResponse'
paths./contactdb/lists/{list_id}/recipients.post.responses.404.description: '"list_id":
  "Returned if list_id does not exist"'
paths./contactdb/lists/{list_id}/recipients.post.responses.404.examples.application/json.errors.length: 2
paths./contactdb/lists/{list_id}/recipients.post.responses.404.examples.application/json.errors[0].field: list_id
paths./contactdb/lists/{list_id}/recipients.post.responses.404.examples.application/json.errors[0].message: list_id
  does not exist
paths./contactdb/lists/{list_id}/recipients.post.responses.404.examples.application/json.errors[1].field: recipient_id
paths./contactdb/lists/{list_id}/recipients.post.responses.404.examples.application/json.errors[1].message: recipient_id
  does not exist
paths./contactdb/lists/{list_id}/recipients.post.responses.404.schema.$ref: '#/definitions/global:ErrorResponse'
paths./contactdb/lists/{list_id}/recipients.post.security.length: 1
paths./contactdb/lists/{list_id}/recipients.post.security[0].Authorization.length: 0
paths./contactdb/lists/{list_id}/recipients.post.summary: Add Multiple Recipients
  to a List
paths./contactdb/lists/{list_id}/recipients.post.tags.length: 1
paths./contactdb/lists/{list_id}/recipients.post.tags[0]: Contacts API - Lists
paths./contactdb/lists/{list_id}/recipients/{recipient_id}.delete.description: |-
  **This endpoint allows you to delete a single recipient from a list.**

  The Contacts API helps you manage your [Marketing Campaigns](https://sendgrid.com/docs/User_Guide/Marketing_Campaigns/index.html) recipients.
paths./contactdb/lists/{list_id}/recipients/{recipient_id}.delete.operationId: DELETE_contactdb-lists-list_id-recipients-recipient_id
paths./contactdb/lists/{list_id}/recipients/{recipient_id}.delete.parameters.length: 4
paths./contactdb/lists/{list_id}/recipients/{recipient_id}.delete.parameters[0].description: The
  ID of the list you are taking this recipient away from.
paths./contactdb/lists/{list_id}/recipients/{recipient_id}.delete.parameters[0].in: query
paths./contactdb/lists/{list_id}/recipients/{recipient_id}.delete.parameters[0].name: list_id
paths./contactdb/lists/{list_id}/recipients/{recipient_id}.delete.parameters[0].required: true
paths./contactdb/lists/{list_id}/recipients/{recipient_id}.delete.parameters[0].type: integer
paths./contactdb/lists/{list_id}/recipients/{recipient_id}.delete.parameters[1].description: The
  ID of the recipient to take off the list.
paths./contactdb/lists/{list_id}/recipients/{recipient_id}.delete.parameters[1].in: query
paths./contactdb/lists/{list_id}/recipients/{recipient_id}.delete.parameters[1].name: recipient_id
paths./contactdb/lists/{list_id}/recipients/{recipient_id}.delete.parameters[1].required: true
paths./contactdb/lists/{list_id}/recipients/{recipient_id}.delete.parameters[1].type: integer
paths./contactdb/lists/{list_id}/recipients/{recipient_id}.delete.parameters[2].in: body
paths./contactdb/lists/{list_id}/recipients/{recipient_id}.delete.parameters[2].name: body
paths./contactdb/lists/{list_id}/recipients/{recipient_id}.delete.parameters[2].schema.type: "null"
paths./contactdb/lists/{list_id}/recipients/{recipient_id}.delete.parameters[3].$ref: '#/parameters/trait:onBehalfOfSubuser:on-behalf-of'
paths./contactdb/lists/{list_id}/recipients/{recipient_id}.delete.produces.length: 1
paths./contactdb/lists/{list_id}/recipients/{recipient_id}.delete.produces[0]: application/json
paths./contactdb/lists/{list_id}/recipients/{recipient_id}.delete.responses.204.description: ""
paths./contactdb/lists/{list_id}/recipients/{recipient_id}.delete.responses.204.schema.type: "null"
paths./contactdb/lists/{list_id}/recipients/{recipient_id}.delete.responses.400.description: |-
  "list_id" : "Returned if list_id is not valid"
  "recipient_id" : "Returned if recipient_id is not valid"
paths./contactdb/lists/{list_id}/recipients/{recipient_id}.delete.responses.400.examples.application/json.errors.length: 2
paths./contactdb/lists/{list_id}/recipients/{recipient_id}.delete.responses.400.examples.application/json.errors[0].field: list_id
paths./contactdb/lists/{list_id}/recipients/{recipient_id}.delete.responses.400.examples.application/json.errors[0].message: Returned
  if list_id is invalid
paths./contactdb/lists/{list_id}/recipients/{recipient_id}.delete.responses.400.examples.application/json.errors[1].field: recipient_id
paths./contactdb/lists/{list_id}/recipients/{recipient_id}.delete.responses.400.examples.application/json.errors[1].message: no
  valid recipients were provided
paths./contactdb/lists/{list_id}/recipients/{recipient_id}.delete.responses.400.schema.$ref: '#/definitions/global:ErrorResponse'
paths./contactdb/lists/{list_id}/recipients/{recipient_id}.delete.responses.401.description: ""
paths./contactdb/lists/{list_id}/recipients/{recipient_id}.delete.responses.401.examples.application/json.errors.length: 1
paths./contactdb/lists/{list_id}/recipients/{recipient_id}.delete.responses.401.examples.application/json.errors[0].message: authorization
  required
paths./contactdb/lists/{list_id}/recipients/{recipient_id}.delete.responses.401.schema.$ref: '#/definitions/global:ErrorResponse'
paths./contactdb/lists/{list_id}/recipients/{recipient_id}.delete.responses.404.description: |-
  "list_id" : "Returned if list_id does not exist"
  "recipient_id" : "Returned if recipient_id does not exist"
paths./contactdb/lists/{list_id}/recipients/{recipient_id}.delete.responses.404.examples.application/json.errors.length: 2
paths./contactdb/lists/{list_id}/recipients/{recipient_id}.delete.responses.404.examples.application/json.errors[0].field: list_id
paths./contactdb/lists/{list_id}/recipients/{recipient_id}.delete.responses.404.examples.application/json.errors[0].message: Returned
  if list_id does not exist
paths./contactdb/lists/{list_id}/recipients/{recipient_id}.delete.responses.404.examples.application/json.errors[1].field: recipient_id
paths./contactdb/lists/{list_id}/recipients/{recipient_id}.delete.responses.404.examples.application/json.errors[1].message: Returned
  if recipient_id does not exist
paths./contactdb/lists/{list_id}/recipients/{recipient_id}.delete.responses.404.schema.$ref: '#/definitions/global:ErrorResponse'
paths./contactdb/lists/{list_id}/recipients/{recipient_id}.delete.security.length: 1
paths./contactdb/lists/{list_id}/recipients/{recipient_id}.delete.security[0].Authorization.length: 0
paths./contactdb/lists/{list_id}/recipients/{recipient_id}.delete.summary: Delete
  a Single Recipient from a Single List
paths./contactdb/lists/{list_id}/recipients/{recipient_id}.delete.tags.length: 1
paths./contactdb/lists/{list_id}/recipients/{recipient_id}.delete.tags[0]: Contacts
  API - Lists
paths./contactdb/lists/{list_id}/recipients/{recipient_id}.parameters.length: 2
paths./contactdb/lists/{list_id}/recipients/{recipient_id}.parameters[0].description: The
  ID of the list that you want to add the recipient to.
paths./contactdb/lists/{list_id}/recipients/{recipient_id}.parameters[0].in: path
paths./contactdb/lists/{list_id}/recipients/{recipient_id}.parameters[0].name: list_id
paths./contactdb/lists/{list_id}/recipients/{recipient_id}.parameters[0].required: true
paths./contactdb/lists/{list_id}/recipients/{recipient_id}.parameters[0].type: integer
paths./contactdb/lists/{list_id}/recipients/{recipient_id}.parameters[1].description: The
  ID of the recipient you are adding to the list.
paths./contactdb/lists/{list_id}/recipients/{recipient_id}.parameters[1].in: path
paths./contactdb/lists/{list_id}/recipients/{recipient_id}.parameters[1].name: recipient_id
paths./contactdb/lists/{list_id}/recipients/{recipient_id}.parameters[1].required: true
paths./contactdb/lists/{list_id}/recipients/{recipient_id}.parameters[1].type: string
paths./contactdb/lists/{list_id}/recipients/{recipient_id}.post.description: |-
  **This endpoint allows you to add a single recipient to a list.**

  The Contacts API helps you manage your [Marketing Campaigns](https://sendgrid.com/docs/User_Guide/Marketing_Campaigns/index.html) recipients.
paths./contactdb/lists/{list_id}/recipients/{recipient_id}.post.operationId: POST_contactdb-lists-list_id-recipients-recipient_id
paths./contactdb/lists/{list_id}/recipients/{recipient_id}.post.parameters.length: 2
paths./contactdb/lists/{list_id}/recipients/{recipient_id}.post.parameters[0].in: body
paths./contactdb/lists/{list_id}/recipients/{recipient_id}.post.parameters[0].name: body
paths./contactdb/lists/{list_id}/recipients/{recipient_id}.post.parameters[0].schema.type: "null"
paths./contactdb/lists/{list_id}/recipients/{recipient_id}.post.parameters[1].$ref: '#/parameters/trait:onBehalfOfSubuser:on-behalf-of'
paths./contactdb/lists/{list_id}/recipients/{recipient_id}.post.produces.length: 1
paths./contactdb/lists/{list_id}/recipients/{recipient_id}.post.produces[0]: application/json
paths./contactdb/lists/{list_id}/recipients/{recipient_id}.post.responses.201.description: ""
paths./contactdb/lists/{list_id}/recipients/{recipient_id}.post.responses.201.schema.type: "null"
paths./contactdb/lists/{list_id}/recipients/{recipient_id}.post.responses.400.description: |-
  "list_id" : "Returned if list_id is invalid"
  "recipient_id" : "Returned if recipient_id is invalid"
paths./contactdb/lists/{list_id}/recipients/{recipient_id}.post.responses.400.examples.application/json.errors.length: 2
paths./contactdb/lists/{list_id}/recipients/{recipient_id}.post.responses.400.examples.application/json.errors[0].field: list_id
paths./contactdb/lists/{list_id}/recipients/{recipient_id}.post.responses.400.examples.application/json.errors[0].message: Returned
  if list_id is invalid
paths./contactdb/lists/{list_id}/recipients/{recipient_id}.post.responses.400.examples.application/json.errors[1].field: recipient_id
paths./contactdb/lists/{list_id}/recipients/{recipient_id}.post.responses.400.examples.application/json.errors[1].message: Returned
  if recipient_id is invalid
paths./contactdb/lists/{list_id}/recipients/{recipient_id}.post.responses.400.schema.$ref: '#/definitions/global:ErrorResponse'
paths./contactdb/lists/{list_id}/recipients/{recipient_id}.post.responses.401.description: ""
paths./contactdb/lists/{list_id}/recipients/{recipient_id}.post.responses.401.examples.application/json.errors.length: 1
paths./contactdb/lists/{list_id}/recipients/{recipient_id}.post.responses.401.examples.application/json.errors[0].message: authorization
  required
paths./contactdb/lists/{list_id}/recipients/{recipient_id}.post.responses.401.schema.$ref: '#/definitions/global:ErrorResponse'
paths./contactdb/lists/{list_id}/recipients/{recipient_id}.post.responses.404.description: |-
  "list_id" : "Returned if list_id does not exist"
  "recipient_id" : "Returned if recipient_id does not exist"
paths./contactdb/lists/{list_id}/recipients/{recipient_id}.post.responses.404.examples.application/json.errors.length: 2
paths./contactdb/lists/{list_id}/recipients/{recipient_id}.post.responses.404.examples.application/json.errors[0].field: list_id
paths./contactdb/lists/{list_id}/recipients/{recipient_id}.post.responses.404.examples.application/json.errors[0].message: Returned
  if list_id does not exist
paths./contactdb/lists/{list_id}/recipients/{recipient_id}.post.responses.404.examples.application/json.errors[1].field: recipient_id
paths./contactdb/lists/{list_id}/recipients/{recipient_id}.post.responses.404.examples.application/json.errors[1].message: Returned
  if recipient_id does not exist
paths./contactdb/lists/{list_id}/recipients/{recipient_id}.post.responses.404.schema.$ref: '#/definitions/global:ErrorResponse'
paths./contactdb/lists/{list_id}/recipients/{recipient_id}.post.security.length: 1
paths./contactdb/lists/{list_id}/recipients/{recipient_id}.post.security[0].Authorization.length: 0
paths./contactdb/lists/{list_id}/recipients/{recipient_id}.post.summary: Add a Single
  Recipient to a List
paths./contactdb/lists/{list_id}/recipients/{recipient_id}.post.tags.length: 1
paths./contactdb/lists/{list_id}/recipients/{recipient_id}.post.tags[0]: Contacts
  API - Lists
paths./contactdb/recipients.delete.consumes.length: 1
paths./contactdb/recipients.delete.consumes[0]: application/json
paths./contactdb/recipients.delete.description: |-
  **This endpoint allows you to deletes one or more recipients.**

  The body of an API call to this endpoint must include an array of recipient IDs of the recipients you want to delete.

  The contactdb is a database of your contacts for [SendGrid Marketing Campaigns](https://sendgrid.com/docs/User_Guide/Marketing_Campaigns/index.html).
paths./contactdb/recipients.delete.operationId: DELETE_contactdb-recipients
paths./contactdb/recipients.delete.parameters.length: 2
paths./contactdb/recipients.delete.parameters[0].in: body
paths./contactdb/recipients.delete.parameters[0].name: body
paths./contactdb/recipients.delete.parameters[0].schema.example.length: 2
paths./contactdb/recipients.delete.parameters[0].schema.example[0]: recipient_id1
paths./contactdb/recipients.delete.parameters[0].schema.example[1]: recipient_id2
paths./contactdb/recipients.delete.parameters[0].schema.items.type: string
paths./contactdb/recipients.delete.parameters[0].schema.type: array
paths./contactdb/recipients.delete.parameters[1].$ref: '#/parameters/trait:onBehalfOfSubuser:on-behalf-of'
paths./contactdb/recipients.delete.produces.length: 1
paths./contactdb/recipients.delete.produces[0]: application/json
paths./contactdb/recipients.delete.responses.200.description: ""
paths./contactdb/recipients.delete.responses.200.schema.type: object
paths./contactdb/recipients.delete.responses.400.description: |-
  "" : "Returned if no recipients are deleted"
  "" : "Returned if all of the provided recipient ids are invalid"
  "" : "Returned if request body is not valid json"
paths./contactdb/recipients.delete.responses.400.examples.application/json.errors.length: 1
paths./contactdb/recipients.delete.responses.400.examples.application/json.errors[0].message: No
  recipient ids provided
paths./contactdb/recipients.delete.responses.400.schema.$ref: '#/definitions/global:ErrorResponse'
paths./contactdb/recipients.delete.responses.401.description: ""
paths./contactdb/recipients.delete.responses.401.examples.application/json.errors.length: 1
paths./contactdb/recipients.delete.responses.401.examples.application/json.errors[0].message: authorization
  required
paths./contactdb/recipients.delete.responses.401.schema.$ref: '#/definitions/global:ErrorResponse'
paths./contactdb/recipients.delete.security.length: 1
paths./contactdb/recipients.delete.security[0].Authorization.length: 0
paths./contactdb/recipients.delete.summary: Delete Recipient
paths./contactdb/recipients.delete.tags.length: 1
paths./contactdb/recipients.delete.tags[0]: Contacts API - Recipients
paths./contactdb/recipients.get.description: |-
  **This endpoint allows you to retrieve all of your Marketing Campaigns recipients.**

  Batch deletion of a page makes it possible to receive an empty page of recipients before reaching the end of
  the list of recipients. To avoid this issue; iterate over pages until a 404 is retrieved.

  The Contacts API helps you manage your [Marketing Campaigns](https://sendgrid.com/docs/User_Guide/Marketing_Campaigns/index.html) recipients.
paths./contactdb/recipients.get.operationId: GET_contactdb-recipients
paths./contactdb/recipients.get.parameters.length: 3
paths./contactdb/recipients.get.parameters[0].description: Page index of first recipients
  to return (must be a positive integer)
paths./contactdb/recipients.get.parameters[0].in: query
paths./contactdb/recipients.get.parameters[0].name: page
paths./contactdb/recipients.get.parameters[0].type: integer
paths./contactdb/recipients.get.parameters[1].description: Number of recipients to
  return at a time (must be a positive integer between 1 and 1000)
paths./contactdb/recipients.get.parameters[1].in: query
paths./contactdb/recipients.get.parameters[1].name: page_size
paths./contactdb/recipients.get.parameters[1].type: integer
paths./contactdb/recipients.get.parameters[2].$ref: '#/parameters/trait:onBehalfOfSubuser:on-behalf-of'
paths./contactdb/recipients.get.produces.length: 1
paths./contactdb/recipients.get.produces[0]: application/json
paths./contactdb/recipients.get.responses.200.description: ""
paths./contactdb/recipients.get.responses.200.schema.properties.recipients.items.type: object
paths./contactdb/recipients.get.responses.200.schema.properties.recipients.type: array
paths./contactdb/recipients.get.responses.200.schema.required.length: 1
paths./contactdb/recipients.get.responses.200.schema.required[0]: recipients
paths./contactdb/recipients.get.responses.200.schema.title: List Recipients response
paths./contactdb/recipients.get.responses.200.schema.type: object
paths./contactdb/recipients.get.responses.400.description: |-
  "page" : "Returned if page is not a valid integer"
  "page" : "Returned if page is less than 1"
  "page_size" : "Returned if page_size is not a valid integer"
  "page_size" : "Returned if page_size is less than 1 or greater than 1000"
paths./contactdb/recipients.get.responses.400.schema.type: object
paths./contactdb/recipients.get.responses.401.description: ""
paths./contactdb/recipients.get.responses.401.examples.application/json.errors.length: 1
paths./contactdb/recipients.get.responses.401.examples.application/json.errors[0].message: authorization
  required
paths./contactdb/recipients.get.responses.401.schema.$ref: '#/definitions/global:ErrorResponse'
paths./contactdb/recipients.get.security.length: 1
paths./contactdb/recipients.get.security[0].Authorization.length: 0
paths./contactdb/recipients.get.summary: Retrieve recipients
paths./contactdb/recipients.get.tags.length: 1
paths./contactdb/recipients.get.tags[0]: Contacts API - Recipients
paths./contactdb/recipients.patch.consumes.length: 1
paths./contactdb/recipients.patch.consumes[0]: application/json
paths./contactdb/recipients.patch.description: |-
  **This endpoint allows you to update one or more recipients.**

  The body of an API call to this endpoint must include an array of one or more recipient objects.

  It is of note that you can add custom field data as parameters on recipient objects. We have provided an example using some of the default custom fields SendGrid provides.

  The contactdb is a database of your contacts for [SendGrid Marketing Campaigns](https://sendgrid.com/docs/User_Guide/Marketing_Campaigns/index.html).
paths./contactdb/recipients.patch.operationId: PATCH_contactdb-recipients
paths./contactdb/recipients.patch.parameters.length: 2
paths./contactdb/recipients.patch.parameters[0].in: body
paths./contactdb/recipients.patch.parameters[0].name: body
paths./contactdb/recipients.patch.parameters[0].schema.example.length: 1
paths./contactdb/recipients.patch.parameters[0].schema.example[0].email: jones@example.com
paths./contactdb/recipients.patch.parameters[0].schema.example[0].first_name: Guy
paths./contactdb/recipients.patch.parameters[0].schema.example[0].last_name: Jones
paths./contactdb/recipients.patch.parameters[0].schema.items.properties.email.format: email
paths./contactdb/recipients.patch.parameters[0].schema.items.properties.email.type: string
paths./contactdb/recipients.patch.parameters[0].schema.items.properties.first_name.description: The
  first name of the recipient. This is one of the default custom fields.
paths./contactdb/recipients.patch.parameters[0].schema.items.properties.first_name.type: string
paths./contactdb/recipients.patch.parameters[0].schema.items.properties.last_name.description: The
  last name of the recipient. This is one of the default custom fields.
paths./contactdb/recipients.patch.parameters[0].schema.items.properties.last_name.type: string
paths./contactdb/recipients.patch.parameters[0].schema.items.required.length: 1
paths./contactdb/recipients.patch.parameters[0].schema.items.required[0]: email
paths./contactdb/recipients.patch.parameters[0].schema.items.type: object
paths./contactdb/recipients.patch.parameters[0].schema.type: array
paths./contactdb/recipients.patch.parameters[1].$ref: '#/parameters/trait:onBehalfOfSubuser:on-behalf-of'
paths./contactdb/recipients.patch.produces.length: 1
paths./contactdb/recipients.patch.produces[0]: application/json
paths./contactdb/recipients.patch.responses.201.description: ""
paths./contactdb/recipients.patch.responses.201.schema.$ref: '#/definitions/contactdb_recipient_response'
paths./contactdb/recipients.patch.responses.400.description: '"" : "Returned if request
  body is not valid json"'
paths./contactdb/recipients.patch.responses.400.examples.application/json.errors.length: 1
paths./contactdb/recipients.patch.responses.400.examples.application/json.errors[0].message: Request
  body is not valid json
paths./contactdb/recipients.patch.responses.400.schema.$ref: '#/definitions/global:ErrorResponse'
paths./contactdb/recipients.patch.responses.401.description: ""
paths./contactdb/recipients.patch.responses.401.examples.application/json.errors.length: 1
paths./contactdb/recipients.patch.responses.401.examples.application/json.errors[0].message: authorization
  required
paths./contactdb/recipients.patch.responses.401.schema.$ref: '#/definitions/global:ErrorResponse'
paths./contactdb/recipients.patch.security.length: 1
paths./contactdb/recipients.patch.security[0].Authorization.length: 0
paths./contactdb/recipients.patch.summary: Update Recipient
paths./contactdb/recipients.patch.tags.length: 1
paths./contactdb/recipients.patch.tags[0]: Contacts API - Recipients
paths./contactdb/recipients.post.consumes.length: 1
paths./contactdb/recipients.post.consumes[0]: application/json
paths./contactdb/recipients.post.description: |-
  **This endpoint allows you to add a Marketing Campaigns recipient.**

  You can add custom field data as a parameter on this endpoint. We have provided an example using some of the default custom fields SendGrid provides.

  The Contacts API helps you manage your [Marketing Campaigns](https://sendgrid.com/docs/User_Guide/Marketing_Campaigns/index.html) recipients.
paths./contactdb/recipients.post.operationId: POST_contactdb-recipients
paths./contactdb/recipients.post.parameters.length: 2
paths./contactdb/recipients.post.parameters[0].in: body
paths./contactdb/recipients.post.parameters[0].name: body
paths./contactdb/recipients.post.parameters[0].schema.example.length: 2
paths./contactdb/recipients.post.parameters[0].schema.example[0].age: 25
paths./contactdb/recipients.post.parameters[0].schema.example[0].email: example@example.com
paths./contactdb/recipients.post.parameters[0].schema.example[0].first_name: ""
paths./contactdb/recipients.post.parameters[0].schema.example[0].last_name: User
paths./contactdb/recipients.post.parameters[0].schema.example[1].age: 25
paths./contactdb/recipients.post.parameters[0].schema.example[1].email: example2@example.com
paths./contactdb/recipients.post.parameters[0].schema.example[1].first_name: Example
paths./contactdb/recipients.post.parameters[0].schema.example[1].last_name: User
paths./contactdb/recipients.post.parameters[0].schema.items.properties.age.type: integer
paths./contactdb/recipients.post.parameters[0].schema.items.properties.email.description: The
  email address of the recipient.
paths./contactdb/recipients.post.parameters[0].schema.items.properties.email.format: email
paths./contactdb/recipients.post.parameters[0].schema.items.properties.email.type: string
paths./contactdb/recipients.post.parameters[0].schema.items.properties.first_name.description: The
  first name of the recipient.
paths./contactdb/recipients.post.parameters[0].schema.items.properties.first_name.type: string
paths./contactdb/recipients.post.parameters[0].schema.items.properties.last_name.description: The
  last name of the recipient.
paths./contactdb/recipients.post.parameters[0].schema.items.properties.last_name.type: string
paths./contactdb/recipients.post.parameters[0].schema.items.required.length: 1
paths./contactdb/recipients.post.parameters[0].schema.items.required[0]: email
paths./contactdb/recipients.post.parameters[0].schema.items.type: object
paths./contactdb/recipients.post.parameters[0].schema.type: array
paths./contactdb/recipients.post.parameters[1].$ref: '#/parameters/trait:onBehalfOfSubuser:on-behalf-of'
paths./contactdb/recipients.post.produces.length: 1
paths./contactdb/recipients.post.produces[0]: application/json
paths./contactdb/recipients.post.responses.201.description: ""
paths./contactdb/recipients.post.responses.201.examples.application/json.error_count: 1
paths./contactdb/recipients.post.responses.201.examples.application/json.error_indices.length: 1
paths./contactdb/recipients.post.responses.201.examples.application/json.error_indices[0]: 2
paths./contactdb/recipients.post.responses.201.examples.application/json.errors.length: 1
paths./contactdb/recipients.post.responses.201.examples.application/json.errors[0].error_indices.length: 1
paths./contactdb/recipients.post.responses.201.examples.application/json.errors[0].error_indices[0]: 2
paths./contactdb/recipients.post.responses.201.examples.application/json.errors[0].message: Invalid
  email.
paths./contactdb/recipients.post.responses.201.examples.application/json.new_count: 2
paths./contactdb/recipients.post.responses.201.examples.application/json.persisted_recipients.length: 2
paths./contactdb/recipients.post.responses.201.examples.application/json.persisted_recipients[0]: YUBh
paths./contactdb/recipients.post.responses.201.examples.application/json.persisted_recipients[1]: bWlsbGVyQG1pbGxlci50ZXN0
paths./contactdb/recipients.post.responses.201.examples.application/json.updated_count: 0
paths./contactdb/recipients.post.responses.201.schema.$ref: '#/definitions/contactdb_recipient_response'
paths./contactdb/recipients.post.responses.400.description: '"" : "Returned if request
  body is not valid json"'
paths./contactdb/recipients.post.responses.400.examples.application/json.errors.length: 1
paths./contactdb/recipients.post.responses.400.examples.application/json.errors[0].message: Request
  body is not valid json
paths./contactdb/recipients.post.responses.400.schema.$ref: '#/definitions/global:ErrorResponse'
paths./contactdb/recipients.post.responses.401.description: ""
paths./contactdb/recipients.post.responses.401.examples.application/json.errors.length: 1
paths./contactdb/recipients.post.responses.401.examples.application/json.errors[0].message: authorization
  required
paths./contactdb/recipients.post.responses.401.schema.$ref: '#/definitions/global:ErrorResponse'
paths./contactdb/recipients.post.security.length: 1
paths./contactdb/recipients.post.security[0].Authorization.length: 0
paths./contactdb/recipients.post.summary: Add recipients
paths./contactdb/recipients.post.tags.length: 1
paths./contactdb/recipients.post.tags[0]: Contacts API - Recipients
paths./contactdb/recipients/{recipient_id}.delete.description: |-
  **This endpoint allows you to delete a single recipient with the given ID from your contact database.**

  The Contacts API helps you manage your [Marketing Campaigns](https://sendgrid.com/docs/User_Guide/Marketing_Campaigns/index.html) recipients.
paths./contactdb/recipients/{recipient_id}.delete.operationId: DELETE_contactdb-recipients-recipient_id
paths./contactdb/recipients/{recipient_id}.delete.parameters.length: 2
paths./contactdb/recipients/{recipient_id}.delete.parameters[0].in: body
paths./contactdb/recipients/{recipient_id}.delete.parameters[0].name: body
paths./contactdb/recipients/{recipient_id}.delete.parameters[0].schema.type: "null"
paths./contactdb/recipients/{recipient_id}.delete.parameters[1].$ref: '#/parameters/trait:onBehalfOfSubuser:on-behalf-of'
paths./contactdb/recipients/{recipient_id}.delete.produces.length: 1
paths./contactdb/recipients/{recipient_id}.delete.produces[0]: application/json
paths./contactdb/recipients/{recipient_id}.delete.responses.204.description: ""
paths./contactdb/recipients/{recipient_id}.delete.responses.204.schema.type: object
paths./contactdb/recipients/{recipient_id}.delete.responses.400.description: '"recipient_id"
  : "Returned if recipient_id is not valid"'
paths./contactdb/recipients/{recipient_id}.delete.responses.400.examples.application/json.errors.length: 1
paths./contactdb/recipients/{recipient_id}.delete.responses.400.examples.application/json.errors[0].message: recipient
  not found
paths./contactdb/recipients/{recipient_id}.delete.responses.400.schema.$ref: '#/definitions/global:ErrorResponse'
paths./contactdb/recipients/{recipient_id}.delete.responses.401.description: ""
paths./contactdb/recipients/{recipient_id}.delete.responses.401.examples.application/json.errors.length: 1
paths./contactdb/recipients/{recipient_id}.delete.responses.401.examples.application/json.errors[0].message: authorization
  required
paths./contactdb/recipients/{recipient_id}.delete.responses.401.schema.$ref: '#/definitions/global:ErrorResponse'
paths./contactdb/recipients/{recipient_id}.delete.responses.404.description: '"recipient_id"
  : "Returned if record for recipient id does not exist"'
paths./contactdb/recipients/{recipient_id}.delete.responses.404.examples.application/json.errors.length: 1
paths./contactdb/recipients/{recipient_id}.delete.responses.404.examples.application/json.errors[0].message: recipient_id
  is not valid
paths./contactdb/recipients/{recipient_id}.delete.responses.404.schema.$ref: '#/definitions/global:ErrorResponse'
paths./contactdb/recipients/{recipient_id}.delete.security.length: 1
paths./contactdb/recipients/{recipient_id}.delete.security[0].Authorization.length: 0
paths./contactdb/recipients/{recipient_id}.delete.summary: Delete a Recipient
paths./contactdb/recipients/{recipient_id}.delete.tags.length: 1
paths./contactdb/recipients/{recipient_id}.delete.tags[0]: Contacts API - Recipients
paths./contactdb/recipients/{recipient_id}.get.description: |-
  **This endpoint allows you to retrieve a single recipient by ID from your contact database.**

  The Contacts API helps you manage your [Marketing Campaigns](https://sendgrid.com/docs/User_Guide/Marketing_Campaigns/index.html) recipients.
paths./contactdb/recipients/{recipient_id}.get.operationId: GET_contactdb-recipients-recipient_id
paths./contactdb/recipients/{recipient_id}.get.parameters.length: 1
paths./contactdb/recipients/{recipient_id}.get.parameters[0].$ref: '#/parameters/trait:onBehalfOfSubuser:on-behalf-of'
paths./contactdb/recipients/{recipient_id}.get.produces.length: 1
paths./contactdb/recipients/{recipient_id}.get.produces[0]: application/json
paths./contactdb/recipients/{recipient_id}.get.responses.200.description: ""
paths./contactdb/recipients/{recipient_id}.get.responses.200.schema.$ref: '#/definitions/contactdb_recipient'
paths./contactdb/recipients/{recipient_id}.get.responses.400.description: '"recipient_id"
  : "Returned if recipient_id is not valid"'
paths./contactdb/recipients/{recipient_id}.get.responses.400.schema.type: object
paths./contactdb/recipients/{recipient_id}.get.responses.401.description: ""
paths./contactdb/recipients/{recipient_id}.get.responses.401.examples.application/json.errors.length: 1
paths./contactdb/recipients/{recipient_id}.get.responses.401.examples.application/json.errors[0].message: authorization
  required
paths./contactdb/recipients/{recipient_id}.get.responses.401.schema.$ref: '#/definitions/global:ErrorResponse'
paths./contactdb/recipients/{recipient_id}.get.responses.404.description: '"recipient_id"
  : "Returned if record for recipient id does not exist"'
paths./contactdb/recipients/{recipient_id}.get.responses.404.schema.type: object
paths./contactdb/recipients/{recipient_id}.get.security.length: 1
paths./contactdb/recipients/{recipient_id}.get.security[0].Authorization.length: 0
paths./contactdb/recipients/{recipient_id}.get.summary: Retrieve a single recipient
paths./contactdb/recipients/{recipient_id}.get.tags.length: 1
paths./contactdb/recipients/{recipient_id}.get.tags[0]: Contacts API - Recipients
paths./contactdb/recipients/{recipient_id}.parameters.length: 1
paths./contactdb/recipients/{recipient_id}.parameters[0].description: The ID of the
  recipient that you want to retrieve.
paths./contactdb/recipients/{recipient_id}.parameters[0].in: path
paths./contactdb/recipients/{recipient_id}.parameters[0].name: recipient_id
paths./contactdb/recipients/{recipient_id}.parameters[0].required: true
paths./contactdb/recipients/{recipient_id}.parameters[0].type: string
paths./contactdb/recipients/{recipient_id}/lists.get.description: |-
  **This endpoint allows you to retrieve the lists that a given recipient belongs to.**

  Each recipient can be on many lists. This endpoint gives you all of the lists that any one recipient has been added to.

  The Contacts API helps you manage your [Marketing Campaigns](https://sendgrid.com/docs/User_Guide/Marketing_Campaigns/index.html) recipients.
paths./contactdb/recipients/{recipient_id}/lists.get.operationId: GET_contactdb-recipients-recipient_id-lists
paths./contactdb/recipients/{recipient_id}/lists.get.parameters.length: 1
paths./contactdb/recipients/{recipient_id}/lists.get.parameters[0].$ref: '#/parameters/trait:onBehalfOfSubuser:on-behalf-of'
paths./contactdb/recipients/{recipient_id}/lists.get.produces.length: 1
paths./contactdb/recipients/{recipient_id}/lists.get.produces[0]: application/json
paths./contactdb/recipients/{recipient_id}/lists.get.responses.200.description: ""
paths./contactdb/recipients/{recipient_id}/lists.get.responses.200.examples.application/json.lists.length: 1
paths./contactdb/recipients/{recipient_id}/lists.get.responses.200.examples.application/json.lists[0].id: 1234
paths./contactdb/recipients/{recipient_id}/lists.get.responses.200.examples.application/json.lists[0].name: Example
  list
paths./contactdb/recipients/{recipient_id}/lists.get.responses.200.examples.application/json.lists[0].recipient_count: 42
paths./contactdb/recipients/{recipient_id}/lists.get.responses.200.schema.properties.lists.items.$ref: '#/definitions/contactdb_list'
paths./contactdb/recipients/{recipient_id}/lists.get.responses.200.schema.properties.lists.type: array
paths./contactdb/recipients/{recipient_id}/lists.get.responses.200.schema.type: object
paths./contactdb/recipients/{recipient_id}/lists.get.responses.400.description: '"recipient_id"
  : "Returned if recipient_id is not valid"'
paths./contactdb/recipients/{recipient_id}/lists.get.responses.400.examples.application/json.errors.length: 1
paths./contactdb/recipients/{recipient_id}/lists.get.responses.400.examples.application/json.errors[0].message: recipient
  ID is invalid
paths./contactdb/recipients/{recipient_id}/lists.get.responses.400.schema.$ref: '#/definitions/global:ErrorResponse'
paths./contactdb/recipients/{recipient_id}/lists.get.responses.401.description: ""
paths./contactdb/recipients/{recipient_id}/lists.get.responses.401.examples.application/json.errors.length: 1
paths./contactdb/recipients/{recipient_id}/lists.get.responses.401.examples.application/json.errors[0].message: authorization
  required
paths./contactdb/recipients/{recipient_id}/lists.get.responses.401.schema.$ref: '#/definitions/global:ErrorResponse'
paths./contactdb/recipients/{recipient_id}/lists.get.responses.404.description: '"recipient_id"
  : "Returned if record for the recipient id does not exist"'
paths./contactdb/recipients/{recipient_id}/lists.get.responses.404.examples.application/json.errors.length: 1
paths./contactdb/recipients/{recipient_id}/lists.get.responses.404.examples.application/json.errors[0].message: recipient
  id not found
paths./contactdb/recipients/{recipient_id}/lists.get.responses.404.schema.$ref: '#/definitions/global:ErrorResponse'
paths./contactdb/recipients/{recipient_id}/lists.get.security.length: 1
paths./contactdb/recipients/{recipient_id}/lists.get.security[0].Authorization.length: 0
paths./contactdb/recipients/{recipient_id}/lists.get.summary: Retrieve the lists that
  a recipient is on
paths./contactdb/recipients/{recipient_id}/lists.get.tags.length: 1
paths./contactdb/recipients/{recipient_id}/lists.get.tags[0]: Contacts API - Recipients
paths./contactdb/recipients/{recipient_id}/lists.parameters.length: 1
paths./contactdb/recipients/{recipient_id}/lists.parameters[0].description: The ID
  of the recipient for whom you are retrieving lists.
paths./contactdb/recipients/{recipient_id}/lists.parameters[0].in: path
paths./contactdb/recipients/{recipient_id}/lists.parameters[0].name: recipient_id
paths./contactdb/recipients/{recipient_id}/lists.parameters[0].required: true
paths./contactdb/recipients/{recipient_id}/lists.parameters[0].type: string
paths./contactdb/recipients/billable_count.get.description: |-
  **This endpoint allows you to retrieve the number of Marketing Campaigns recipients that you will be billed for.**

  You are billed for marketing campaigns based on the highest number of recipients you have had in your account at one time. This endpoint will allow you to know the current billable count value.

  The Contacts API helps you manage your [Marketing Campaigns](https://sendgrid.com/docs/User_Guide/Marketing_Campaigns/index.html) recipients.
paths./contactdb/recipients/billable_count.get.operationId: GET_contactdb-recipients-billable_count
paths./contactdb/recipients/billable_count.get.parameters.length: 1
paths./contactdb/recipients/billable_count.get.parameters[0].$ref: '#/parameters/trait:onBehalfOfSubuser:on-behalf-of'
paths./contactdb/recipients/billable_count.get.produces.length: 1
paths./contactdb/recipients/billable_count.get.produces[0]: application/json
paths./contactdb/recipients/billable_count.get.responses.200.description: ""
paths./contactdb/recipients/billable_count.get.responses.200.examples.application/json.recipient_count: 1234
paths./contactdb/recipients/billable_count.get.responses.200.schema.$ref: '#/definitions/contactdb_recipient_count'
paths./contactdb/recipients/billable_count.get.responses.401.description: ""
paths./contactdb/recipients/billable_count.get.responses.401.examples.application/json.errors.length: 1
paths./contactdb/recipients/billable_count.get.responses.401.examples.application/json.errors[0].message: authorization
  required
paths./contactdb/recipients/billable_count.get.responses.401.schema.$ref: '#/definitions/global:ErrorResponse'
paths./contactdb/recipients/billable_count.get.security.length: 1
paths./contactdb/recipients/billable_count.get.security[0].Authorization.length: 0
paths./contactdb/recipients/billable_count.get.summary: Retrieve the count of billable
  recipients
paths./contactdb/recipients/billable_count.get.tags.length: 1
paths./contactdb/recipients/billable_count.get.tags[0]: Contacts API - Recipients
paths./contactdb/recipients/count.get.description: |-
  **This endpoint allows you to retrieve the total number of Marketing Campaigns recipients.**

  The contactdb is a database of your contacts for [SendGrid Marketing Campaigns](https://sendgrid.com/docs/User_Guide/Marketing_Campaigns/index.html).
paths./contactdb/recipients/count.get.operationId: GET_contactdb-recipients-count
paths./contactdb/recipients/count.get.parameters.length: 1
paths./contactdb/recipients/count.get.parameters[0].$ref: '#/parameters/trait:onBehalfOfSubuser:on-behalf-of'
paths./contactdb/recipients/count.get.produces.length: 1
paths./contactdb/recipients/count.get.produces[0]: application/json
paths./contactdb/recipients/count.get.responses.200.description: ""
paths./contactdb/recipients/count.get.responses.200.examples.application/json.recipient_count: 1234
paths./contactdb/recipients/count.get.responses.200.schema.$ref: '#/definitions/contactdb_recipient_count'
paths./contactdb/recipients/count.get.responses.401.description: ""
paths./contactdb/recipients/count.get.responses.401.examples.application/json.errors.length: 1
paths./contactdb/recipients/count.get.responses.401.examples.application/json.errors[0].message: authorization
  required
paths./contactdb/recipients/count.get.responses.401.schema.$ref: '#/definitions/global:ErrorResponse'
paths./contactdb/recipients/count.get.security.length: 1
paths./contactdb/recipients/count.get.security[0].Authorization.length: 0
paths./contactdb/recipients/count.get.summary: Retrieve a Count of Recipients
paths./contactdb/recipients/count.get.tags.length: 1
paths./contactdb/recipients/count.get.tags[0]: Contacts API - Recipients
paths./contactdb/recipients/search.get.description: |-
  **This endpoint allows you to perform a search on all of your Marketing Campaigns recipients.**

  field_name:

  * is a variable that is substituted for your actual custom field name from your recipient.
  * Text fields must be url-encoded. Date fields are searchable only by unix timestamp (e.g. 2/2/2015 becomes 1422835200)
  * If field_name is a 'reserved' date field, such as created_at or updated_at, the system will internally convert
  your epoch time to a date range encompassing the entire day. For example, an epoch time of 1422835600 converts to
  Mon, 02 Feb 2015 00:06:40 GMT, but internally the system will search from Mon, 02 Feb 2015 00:00:00 GMT through
  Mon, 02 Feb 2015 23:59:59 GMT.

  The contactdb is a database of your contacts for [SendGrid Marketing Campaigns](https://sendgrid.com/docs/User_Guide/Marketing_Campaigns/index.html).
paths./contactdb/recipients/search.get.operationId: GET_contactdb-recipients-search
paths./contactdb/recipients/search.get.parameters.length: 2
paths./contactdb/recipients/search.get.parameters[0].in: query
paths./contactdb/recipients/search.get.parameters[0].name: '{field_name}'
paths./contactdb/recipients/search.get.parameters[0].type: string
paths./contactdb/recipients/search.get.parameters[1].$ref: '#/parameters/trait:onBehalfOfSubuser:on-behalf-of'
paths./contactdb/recipients/search.get.produces.length: 1
paths./contactdb/recipients/search.get.produces[0]: application/json
paths./contactdb/recipients/search.get.responses.200.description: ""
paths./contactdb/recipients/search.get.responses.200.examples.application/json.recipients.length: 1
paths./contactdb/recipients/search.get.responses.200.examples.application/json.recipients[0].created_at: 1.4223136e+09
paths./contactdb/recipients/search.get.responses.200.examples.application/json.recipients[0].custom_fields.length: 1
paths./contactdb/recipients/search.get.responses.200.examples.application/json.recipients[0].custom_fields[0].id: 23
paths./contactdb/recipients/search.get.responses.200.examples.application/json.recipients[0].custom_fields[0].name: pet
paths./contactdb/recipients/search.get.responses.200.examples.application/json.recipients[0].custom_fields[0].type: text
paths./contactdb/recipients/search.get.responses.200.examples.application/json.recipients[0].custom_fields[0].value: Fluffy
paths./contactdb/recipients/search.get.responses.200.examples.application/json.recipients[0].email: jones@example.com
paths./contactdb/recipients/search.get.responses.200.examples.application/json.recipients[0].id: YUBh
paths./contactdb/recipients/search.get.responses.200.examples.application/json.recipients[0].last_name: Jones
paths./contactdb/recipients/search.get.responses.200.examples.application/json.recipients[0].updated_at: 1.4223137e+09
paths./contactdb/recipients/search.get.responses.200.schema.properties.recipients.items.$ref: '#/definitions/contactdb_recipient'
paths./contactdb/recipients/search.get.responses.200.schema.properties.recipients.type: array
paths./contactdb/recipients/search.get.responses.200.schema.type: object
paths./contactdb/recipients/search.get.responses.400.description: |-
  "" : "Returned if no search params are specified"
  "field" : "Returned if the provided field is invalid or does not exist"
paths./contactdb/recipients/search.get.responses.400.examples.application/json.errors.length: 2
paths./contactdb/recipients/search.get.responses.400.examples.application/json.errors[0].message: 'The
  following parameters are not custom fields or reserved fields: [{field_name}]'
paths./contactdb/recipients/search.get.responses.400.examples.application/json.errors[1].message: No
  search params are specified
paths./contactdb/recipients/search.get.responses.400.schema.$ref: '#/definitions/global:ErrorResponse'
paths./contactdb/recipients/search.get.responses.401.description: ""
paths./contactdb/recipients/search.get.responses.401.examples.application/json.errors.length: 1
paths./contactdb/recipients/search.get.responses.401.examples.application/json.errors[0].message: authorization
  required
paths./contactdb/recipients/search.get.responses.401.schema.$ref: '#/definitions/global:ErrorResponse'
paths./contactdb/recipients/search.get.security.length: 1
paths./contactdb/recipients/search.get.security[0].Authorization.length: 0
paths./contactdb/recipients/search.get.summary: Retrieve recipients matching search
  criteria
paths./contactdb/recipients/search.get.tags.length: 1
paths./contactdb/recipients/search.get.tags[0]: Contacts API - Recipients
paths./contactdb/reserved_fields.get.description: |-
  **This endpoint allows you to list all fields that are reserved and can't be used for custom field names.**

  The contactdb is a database of your contacts for [SendGrid Marketing Campaigns](https://sendgrid.com/docs/User_Guide/Marketing_Campaigns/index.html).
paths./contactdb/reserved_fields.get.operationId: GET_contactdb-reserved_fields
paths./contactdb/reserved_fields.get.parameters.length: 1
paths./contactdb/reserved_fields.get.parameters[0].$ref: '#/parameters/trait:onBehalfOfSubuser:on-behalf-of'
paths./contactdb/reserved_fields.get.produces.length: 1
paths./contactdb/reserved_fields.get.produces[0]: application/json
paths./contactdb/reserved_fields.get.responses.200.description: ""
paths./contactdb/reserved_fields.get.responses.200.examples.application/json.reserved_fields.length: 9
paths./contactdb/reserved_fields.get.responses.200.examples.application/json.reserved_fields[0].name: first_name
paths./contactdb/reserved_fields.get.responses.200.examples.application/json.reserved_fields[0].type: text
paths./contactdb/reserved_fields.get.responses.200.examples.application/json.reserved_fields[1].name: last_name
paths./contactdb/reserved_fields.get.responses.200.examples.application/json.reserved_fields[1].type: text
paths./contactdb/reserved_fields.get.responses.200.examples.application/json.reserved_fields[2].name: email
paths./contactdb/reserved_fields.get.responses.200.examples.application/json.reserved_fields[2].type: text
paths./contactdb/reserved_fields.get.responses.200.examples.application/json.reserved_fields[3].name: created_at
paths./contactdb/reserved_fields.get.responses.200.examples.application/json.reserved_fields[3].type: date
paths./contactdb/reserved_fields.get.responses.200.examples.application/json.reserved_fields[4].name: updated_at
paths./contactdb/reserved_fields.get.responses.200.examples.application/json.reserved_fields[4].type: date
paths./contactdb/reserved_fields.get.responses.200.examples.application/json.reserved_fields[5].name: last_emailed
paths./contactdb/reserved_fields.get.responses.200.examples.application/json.reserved_fields[5].type: date
paths./contactdb/reserved_fields.get.responses.200.examples.application/json.reserved_fields[6].name: last_clicked
paths./contactdb/reserved_fields.get.responses.200.examples.application/json.reserved_fields[6].type: date
paths./contactdb/reserved_fields.get.responses.200.examples.application/json.reserved_fields[7].name: last_opened
paths./contactdb/reserved_fields.get.responses.200.examples.application/json.reserved_fields[7].type: date
paths./contactdb/reserved_fields.get.responses.200.examples.application/json.reserved_fields[8].name: my_custom_field
paths./contactdb/reserved_fields.get.responses.200.examples.application/json.reserved_fields[8].type: text
paths./contactdb/reserved_fields.get.responses.200.schema.properties.reserved_fields.description: The
  reserved fields that are already set up within custom fields.
paths./contactdb/reserved_fields.get.responses.200.schema.properties.reserved_fields.items.$ref: '#/definitions/contactdb_custom_field'
paths./contactdb/reserved_fields.get.responses.200.schema.properties.reserved_fields.type: array
paths./contactdb/reserved_fields.get.responses.200.schema.required.length: 1
paths./contactdb/reserved_fields.get.responses.200.schema.required[0]: reserved_fields
paths./contactdb/reserved_fields.get.responses.200.schema.title: List fields that
  are reserved and can't be used for custom field names. response
paths./contactdb/reserved_fields.get.responses.200.schema.type: object
paths./contactdb/reserved_fields.get.responses.401.description: ""
paths./contactdb/reserved_fields.get.responses.401.examples.application/json.errors.length: 1
paths./contactdb/reserved_fields.get.responses.401.examples.application/json.errors[0].message: authorization
  required
paths./contactdb/reserved_fields.get.responses.401.schema.$ref: '#/definitions/global:ErrorResponse'
paths./contactdb/reserved_fields.get.security.length: 1
paths./contactdb/reserved_fields.get.security[0].Authorization.length: 0
paths./contactdb/reserved_fields.get.summary: Retrieve reserved fields
paths./contactdb/reserved_fields.get.tags.length: 1
paths./contactdb/reserved_fields.get.tags[0]: Contacts API - Custom Fields
paths./contactdb/segments.get.description: |-
  **This endpoint allows you to retrieve all of your segments.**

  The Contacts API helps you manage your [Marketing Campaigns](https://sendgrid.com/docs/User_Guide/Marketing_Campaigns/index.html) recipients.

  For more information about segments in Marketing Campaigns, please see our [User Guide](https://sendgrid.com/docs/User_Guide/Marketing_Campaigns/lists.html#-Create-a-Segment).
paths./contactdb/segments.get.operationId: GET_contactdb-segments
paths./contactdb/segments.get.parameters.length: 1
paths./contactdb/segments.get.parameters[0].$ref: '#/parameters/trait:onBehalfOfSubuser:on-behalf-of'
paths./contactdb/segments.get.produces.length: 1
paths./contactdb/segments.get.produces[0]: application/json
paths./contactdb/segments.get.responses.200.description: ""
paths./contactdb/segments.get.responses.200.examples.application/json.segments.length: 2
paths./contactdb/segments.get.responses.200.examples.application/json.segments[0].conditions.length: 1
paths./contactdb/segments.get.responses.200.examples.application/json.segments[0].conditions[0].field: age
paths./contactdb/segments.get.responses.200.examples.application/json.segments[0].conditions[0].operator: lt
paths./contactdb/segments.get.responses.200.examples.application/json.segments[0].conditions[0].value: "25"
paths./contactdb/segments.get.responses.200.examples.application/json.segments[0].id: 1234
paths./contactdb/segments.get.responses.200.examples.application/json.segments[0].name: Age
  segments < 25
paths./contactdb/segments.get.responses.200.examples.application/json.segments[0].recipient_count: 8
paths./contactdb/segments.get.responses.200.examples.application/json.segments[1].conditions.length: 1
paths./contactdb/segments.get.responses.200.examples.application/json.segments[1].conditions[0].field: email
paths./contactdb/segments.get.responses.200.examples.application/json.segments[1].conditions[0].operator: contains
paths./contactdb/segments.get.responses.200.examples.application/json.segments[1].conditions[0].value: '@gmail.com'
paths./contactdb/segments.get.responses.200.examples.application/json.segments[1].id: 2345
paths./contactdb/segments.get.responses.200.examples.application/json.segments[1].name: email
  address - gmail
paths./contactdb/segments.get.responses.200.examples.application/json.segments[1].recipient_count: 0
paths./contactdb/segments.get.responses.200.schema.properties.segments.items.$ref: '#/definitions/contactdb_segments'
paths./contactdb/segments.get.responses.200.schema.properties.segments.type: array
paths./contactdb/segments.get.responses.200.schema.required.length: 1
paths./contactdb/segments.get.responses.200.schema.required[0]: segments
paths./contactdb/segments.get.responses.200.schema.title: List All Segments response
paths./contactdb/segments.get.responses.200.schema.type: object
paths./contactdb/segments.get.responses.401.description: ""
paths./contactdb/segments.get.responses.401.examples.application/json.errors.length: 1
paths./contactdb/segments.get.responses.401.examples.application/json.errors[0].message: authorization
  required
paths./contactdb/segments.get.responses.401.schema.$ref: '#/definitions/global:ErrorResponse'
paths./contactdb/segments.get.security.length: 1
paths./contactdb/segments.get.security[0].Authorization.length: 0
paths./contactdb/segments.get.summary: Retrieve all segments
paths./contactdb/segments.get.tags.length: 1
paths./contactdb/segments.get.tags[0]: Contacts API - Segments
paths./contactdb/segments.post.consumes.length: 1
paths./contactdb/segments.post.consumes[0]: application/json
paths./contactdb/segments.post.description: "**This endpoint allows you to create
  a segment.**\n\nAll recipients in your contactdb will be added or removed automatically
  depending on whether they match the criteria for this segment.\n\nList Id:\n\n*
  Send this to segment from an existing list\n* Don't send this in order to segment
  from your entire contactdb.\n\nValid operators for create and update depend on the
  type of the field you are segmenting: \n\n* **Dates:** \"eq\", \"ne\", \"lt\" (before),
  \"gt\" (after) \n* **Text:** \"contains\", \"eq\" (is - matches the full field),
  \"ne\" (is not - matches any field where the entire field is not the condition value)
  \n* **Numbers:** \"eq\", \"lt\", \"gt\" \n* **Email Clicks and Opens:** \"eq\" (opened),
  \"ne\" (not opened) \n\nSegment conditions using \"eq\" or \"ne\" for email clicks
  and opens should provide a \"field\" of either *clicks.campaign_identifier* or *opens.campaign_identifier*.
  The condition value should be a string containing the id of a completed campaign.
  \n\nSegments may contain multiple condtions, joined by an \"and\" or \"or\" in the
  \"and_or\" field. The first condition in the conditions list must have an empty
  \"and_or\", and subsequent conditions must all specify an \"and_or\".\n\nThe Contacts
  API helps you manage your [Marketing Campaigns](https://sendgrid.com/docs/User_Guide/Marketing_Campaigns/index.html)
  recipients.\n\nFor more information about segments in Marketing Campaigns, please
  see our [User Guide](https://sendgrid.com/docs/User_Guide/Marketing_Campaigns/lists.html#-Create-a-Segment)."
paths./contactdb/segments.post.operationId: POST_contactdb-segments
paths./contactdb/segments.post.parameters.length: 2
paths./contactdb/segments.post.parameters[0].in: body
paths./contactdb/segments.post.parameters[0].name: body
paths./contactdb/segments.post.parameters[0].schema.$ref: '#/definitions/contactdb_segments'
paths./contactdb/segments.post.parameters[0].schema.example.conditions.length: 3
paths./contactdb/segments.post.parameters[0].schema.example.conditions[0].and_or: ""
paths./contactdb/segments.post.parameters[0].schema.example.conditions[0].field: last_name
paths./contactdb/segments.post.parameters[0].schema.example.conditions[0].operator: eq
paths./contactdb/segments.post.parameters[0].schema.example.conditions[0].value: Miller
paths./contactdb/segments.post.parameters[0].schema.example.conditions[1].and_or: and
paths./contactdb/segments.post.parameters[0].schema.example.conditions[1].field: last_clicked
paths./contactdb/segments.post.parameters[0].schema.example.conditions[1].operator: gt
paths./contactdb/segments.post.parameters[0].schema.example.conditions[1].value: 01/02/2015
paths./contactdb/segments.post.parameters[0].schema.example.conditions[2].and_or: or
paths./contactdb/segments.post.parameters[0].schema.example.conditions[2].field: clicks.campaign_identifier
paths./contactdb/segments.post.parameters[0].schema.example.conditions[2].operator: eq
paths./contactdb/segments.post.parameters[0].schema.example.conditions[2].value: "513"
paths./contactdb/segments.post.parameters[0].schema.example.list_id: 4
paths./contactdb/segments.post.parameters[0].schema.example.name: Last Name Miller
paths./contactdb/segments.post.parameters[1].$ref: '#/parameters/trait:onBehalfOfSubuser:on-behalf-of'
paths./contactdb/segments.post.produces.length: 1
paths./contactdb/segments.post.produces[0]: application/json
paths./contactdb/segments.post.responses.200.description: ""
paths./contactdb/segments.post.responses.200.examples.application/json.conditions.length: 3
paths./contactdb/segments.post.responses.200.examples.application/json.conditions[0].and_or: ""
paths./contactdb/segments.post.responses.200.examples.application/json.conditions[0].field: last_name
paths./contactdb/segments.post.responses.200.examples.application/json.conditions[0].operator: eq
paths./contactdb/segments.post.responses.200.examples.application/json.conditions[0].value: Miller
paths./contactdb/segments.post.responses.200.examples.application/json.conditions[1].and_or: and
paths./contactdb/segments.post.responses.200.examples.application/json.conditions[1].field: last_clicked
paths./contactdb/segments.post.responses.200.examples.application/json.conditions[1].operator: gt
paths./contactdb/segments.post.responses.200.examples.application/json.conditions[1].value: 01/02/2015
paths./contactdb/segments.post.responses.200.examples.application/json.conditions[2].and_or: or
paths./contactdb/segments.post.responses.200.examples.application/json.conditions[2].field: clicks.campaign_identifier
paths./contactdb/segments.post.responses.200.examples.application/json.conditions[2].operator: eq
paths./contactdb/segments.post.responses.200.examples.application/json.conditions[2].value: "513"
paths./contactdb/segments.post.responses.200.examples.application/json.id: 1
paths./contactdb/segments.post.responses.200.examples.application/json.list_id: 4
paths./contactdb/segments.post.responses.200.examples.application/json.name: Last
  Name Miller
paths./contactdb/segments.post.responses.200.examples.application/json.recipient_count: 0
paths./contactdb/segments.post.responses.200.schema.$ref: '#/definitions/contactdb_segments_with_id'
paths./contactdb/segments.post.responses.400.description: |-
  "name" : "Returned if the name is not valid"
  "list_id" : "Returned if the list_id is not valid"
  "and_or" : "Returned if and_or and set value is not passed into the request body"
  "and_or" : "Returned if and_or is set on the only condition passed"
  "and_or" : "Returned if and_or is set on all conditions"
  "and_or" : "Returned if and_or is not set on more than one condition and less than all conditions"
  "operator" : "Returned if operator and set value is not passed into the request body"
  "value" : "Returned if value and set value is not passed into the request body"
  "field" : "Returned if field and set value is not passed into the request body"
  "" : "Returned if request body is not valid json"
  "" : "Returned if invalid value is passed into one of the request body parameters"
paths./contactdb/segments.post.responses.400.examples.application/json.errors.length: 11
paths./contactdb/segments.post.responses.400.examples.application/json.errors[0].message: request
  body is not valid json
paths./contactdb/segments.post.responses.400.examples.application/json.errors[1].message: invalid
  value is passed into one of the request body parameters
paths./contactdb/segments.post.responses.400.examples.application/json.errors[2].field: field
paths./contactdb/segments.post.responses.400.examples.application/json.errors[2].message: field
  and set value is not passed into the request body
paths./contactdb/segments.post.responses.400.examples.application/json.errors[3].field: value
paths./contactdb/segments.post.responses.400.examples.application/json.errors[3].message: value
  and set value is not passed into the request body
paths./contactdb/segments.post.responses.400.examples.application/json.errors[4].field: operator
paths./contactdb/segments.post.responses.400.examples.application/json.errors[4].message: operator
  and set value is not passed into the request body
paths./contactdb/segments.post.responses.400.examples.application/json.errors[5].field: and_or
paths./contactdb/segments.post.responses.400.examples.application/json.errors[5].message: and_or
  is not set on more than one condition and less than all conditions
paths./contactdb/segments.post.responses.400.examples.application/json.errors[6].field: and_or
paths./contactdb/segments.post.responses.400.examples.application/json.errors[6].message: and_or
  is set on all conditions
paths./contactdb/segments.post.responses.400.examples.application/json.errors[7].field: and_or
paths./contactdb/segments.post.responses.400.examples.application/json.errors[7].message: and_or
  is set on the only condition passed
paths./contactdb/segments.post.responses.400.examples.application/json.errors[8].field: and_or
paths./contactdb/segments.post.responses.400.examples.application/json.errors[8].message: and_or
  and set value is not passed into the request body
paths./contactdb/segments.post.responses.400.examples.application/json.errors[9].field: list_id
paths./contactdb/segments.post.responses.400.examples.application/json.errors[9].message: the
  list_id is not valid
paths./contactdb/segments.post.responses.400.examples.application/json.errors[10].field: name
paths./contactdb/segments.post.responses.400.examples.application/json.errors[10].message: the
  name is not valid
paths./contactdb/segments.post.responses.400.schema.$ref: '#/definitions/global:ErrorResponse'
paths./contactdb/segments.post.responses.401.description: ""
paths./contactdb/segments.post.responses.401.examples.application/json.errors.length: 1
paths./contactdb/segments.post.responses.401.examples.application/json.errors[0].message: authorization
  required
paths./contactdb/segments.post.responses.401.schema.$ref: '#/definitions/global:ErrorResponse'
paths./contactdb/segments.post.security.length: 1
paths./contactdb/segments.post.security[0].Authorization.length: 0
paths./contactdb/segments.post.summary: Create a Segment
paths./contactdb/segments.post.tags.length: 1
paths./contactdb/segments.post.tags[0]: Contacts API - Segments
paths./contactdb/segments/{segment_id}.delete.description: |-
  **This endpoint allows you to delete a segment from your recipients database.**

  You also have the option to delete all the contacts from your Marketing Campaigns recipient database who were in this segment.

  The Contacts API helps you manage your [Marketing Campaigns](https://sendgrid.com/docs/User_Guide/Marketing_Campaigns/index.html) recipients.

  For more information about segments in Marketing Campaigns, please see our [User Guide](https://sendgrid.com/docs/User_Guide/Marketing_Campaigns/lists.html#-Create-a-Segment).
paths./contactdb/segments/{segment_id}.delete.operationId: DELETE_contactdb-segments-segment_id
paths./contactdb/segments/{segment_id}.delete.parameters.length: 3
paths./contactdb/segments/{segment_id}.delete.parameters[0].description: True to delete
  all contacts matching the segment in addition to deleting the segment
paths./contactdb/segments/{segment_id}.delete.parameters[0].in: query
paths./contactdb/segments/{segment_id}.delete.parameters[0].name: delete_contacts
paths./contactdb/segments/{segment_id}.delete.parameters[0].type: boolean
paths./contactdb/segments/{segment_id}.delete.parameters[1].in: body
paths./contactdb/segments/{segment_id}.delete.parameters[1].name: body
paths./contactdb/segments/{segment_id}.delete.parameters[1].schema.type: "null"
paths./contactdb/segments/{segment_id}.delete.parameters[2].$ref: '#/parameters/trait:onBehalfOfSubuser:on-behalf-of'
paths./contactdb/segments/{segment_id}.delete.produces.length: 1
paths./contactdb/segments/{segment_id}.delete.produces[0]: application/json
paths./contactdb/segments/{segment_id}.delete.responses.204.description: ""
paths./contactdb/segments/{segment_id}.delete.responses.204.schema.type: "null"
paths./contactdb/segments/{segment_id}.delete.responses.400.description: |-
  "segment_id" : "Returned if segment_id is not valid"
  "delete_contacts" : "Returned if delete_contacts is not a valid boolean"
paths./contactdb/segments/{segment_id}.delete.responses.400.examples.application/json.errors.length: 2
paths./contactdb/segments/{segment_id}.delete.responses.400.examples.application/json.errors[0].field: segment_id
paths./contactdb/segments/{segment_id}.delete.responses.400.examples.application/json.errors[0].message: Returned
  if segment_id is not valid
paths./contactdb/segments/{segment_id}.delete.responses.400.examples.application/json.errors[1].field: delete_contacts
paths./contactdb/segments/{segment_id}.delete.responses.400.examples.application/json.errors[1].message: Returned
  if delete_contacts is not a valid boolean
paths./contactdb/segments/{segment_id}.delete.responses.400.schema.$ref: '#/definitions/global:ErrorResponse'
paths./contactdb/segments/{segment_id}.delete.responses.401.description: ""
paths./contactdb/segments/{segment_id}.delete.responses.401.examples.application/json.errors.length: 1
paths./contactdb/segments/{segment_id}.delete.responses.401.examples.application/json.errors[0].message: authorization
  required
paths./contactdb/segments/{segment_id}.delete.responses.401.schema.$ref: '#/definitions/global:ErrorResponse'
paths./contactdb/segments/{segment_id}.delete.responses.404.description: '"segment_id"
  : "Returned if segment_id does not exist"'
paths./contactdb/segments/{segment_id}.delete.responses.404.examples.application/json.errors.length: 1
paths./contactdb/segments/{segment_id}.delete.responses.404.examples.application/json.errors[0].field: segment_id
paths./contactdb/segments/{segment_id}.delete.responses.404.examples.application/json.errors[0].message: segment_id
  does not exist
paths./contactdb/segments/{segment_id}.delete.responses.404.schema.$ref: '#/definitions/global:ErrorResponse'
paths./contactdb/segments/{segment_id}.delete.security.length: 1
paths./contactdb/segments/{segment_id}.delete.security[0].Authorization.length: 0
paths./contactdb/segments/{segment_id}.delete.summary: Delete a segment
paths./contactdb/segments/{segment_id}.delete.tags.length: 1
paths./contactdb/segments/{segment_id}.delete.tags[0]: Contacts API - Segments
paths./contactdb/segments/{segment_id}.get.description: |-
  **This endpoint allows you to retrieve a single segment with the given ID.**

  The Contacts API helps you manage your [Marketing Campaigns](https://sendgrid.com/docs/User_Guide/Marketing_Campaigns/index.html) recipients.

  For more information about segments in Marketing Campaigns, please see our [User Guide](https://sendgrid.com/docs/User_Guide/Marketing_Campaigns/lists.html#-Create-a-Segment).
paths./contactdb/segments/{segment_id}.get.operationId: GET_contactdb-segments-segment_id
paths./contactdb/segments/{segment_id}.get.parameters.length: 2
paths./contactdb/segments/{segment_id}.get.parameters[0].description: The ID of the
  segment you want to request.
paths./contactdb/segments/{segment_id}.get.parameters[0].in: query
paths./contactdb/segments/{segment_id}.get.parameters[0].name: segment_id
paths./contactdb/segments/{segment_id}.get.parameters[0].required: true
paths./contactdb/segments/{segment_id}.get.parameters[0].type: integer
paths./contactdb/segments/{segment_id}.get.parameters[1].$ref: '#/parameters/trait:onBehalfOfSubuser:on-behalf-of'
paths./contactdb/segments/{segment_id}.get.produces.length: 1
paths./contactdb/segments/{segment_id}.get.produces[0]: application/json
paths./contactdb/segments/{segment_id}.get.responses.200.description: ""
paths./contactdb/segments/{segment_id}.get.responses.200.examples.application/json.conditions.length: 1
paths./contactdb/segments/{segment_id}.get.responses.200.examples.application/json.conditions[0].and_or: ""
paths./contactdb/segments/{segment_id}.get.responses.200.examples.application/json.conditions[0].field: last_name
paths./contactdb/segments/{segment_id}.get.responses.200.examples.application/json.conditions[0].operator: eq
paths./contactdb/segments/{segment_id}.get.responses.200.examples.application/json.conditions[0].value: Miller
paths./contactdb/segments/{segment_id}.get.responses.200.examples.application/json.id: 1
paths./contactdb/segments/{segment_id}.get.responses.200.examples.application/json.list_id: 4
paths./contactdb/segments/{segment_id}.get.responses.200.examples.application/json.name: Last
  Name Miller
paths./contactdb/segments/{segment_id}.get.responses.200.examples.application/json.recipient_count: 1
paths./contactdb/segments/{segment_id}.get.responses.200.schema.$ref: '#/definitions/contactdb_segments'
paths./contactdb/segments/{segment_id}.get.responses.400.description: '"segment_id"
  : "Returned if segment_id is not valid"'
paths./contactdb/segments/{segment_id}.get.responses.400.examples.application/json.errors.length: 1
paths./contactdb/segments/{segment_id}.get.responses.400.examples.application/json.errors[0].message: if
  segment_id is not valid
paths./contactdb/segments/{segment_id}.get.responses.400.schema.$ref: '#/definitions/global:ErrorResponse'
paths./contactdb/segments/{segment_id}.get.responses.401.description: ""
paths./contactdb/segments/{segment_id}.get.responses.401.examples.application/json.errors.length: 1
paths./contactdb/segments/{segment_id}.get.responses.401.examples.application/json.errors[0].message: authorization
  required
paths./contactdb/segments/{segment_id}.get.responses.401.schema.$ref: '#/definitions/global:ErrorResponse'
paths./contactdb/segments/{segment_id}.get.responses.404.description: '"segment_id"
  : "Returned if segment_id does not exist"'
paths./contactdb/segments/{segment_id}.get.responses.404.examples.application/json.errors.length: 1
paths./contactdb/segments/{segment_id}.get.responses.404.examples.application/json.errors[0].message: segment_id
  not found
paths./contactdb/segments/{segment_id}.get.responses.404.schema.$ref: '#/definitions/global:ErrorResponse'
paths./contactdb/segments/{segment_id}.get.security.length: 1
paths./contactdb/segments/{segment_id}.get.security[0].Authorization.length: 0
paths./contactdb/segments/{segment_id}.get.summary: Retrieve a segment
paths./contactdb/segments/{segment_id}.get.tags.length: 1
paths./contactdb/segments/{segment_id}.get.tags[0]: Contacts API - Segments
paths./contactdb/segments/{segment_id}.parameters.length: 1
paths./contactdb/segments/{segment_id}.parameters[0].in: path
paths./contactdb/segments/{segment_id}.parameters[0].name: segment_id
paths./contactdb/segments/{segment_id}.parameters[0].required: true
paths./contactdb/segments/{segment_id}.parameters[0].type: string
paths./contactdb/segments/{segment_id}.patch.consumes.length: 1
paths./contactdb/segments/{segment_id}.patch.consumes[0]: application/json
paths./contactdb/segments/{segment_id}.patch.description: |-
  **This endpoint allows you to update a segment.**

  The Contacts API helps you manage your [Marketing Campaigns](https://sendgrid.com/docs/User_Guide/Marketing_Campaigns/index.html) recipients.

  For more information about segments in Marketing Campaigns, please see our [User Guide](https://sendgrid.com/docs/User_Guide/Marketing_Campaigns/lists.html#-Create-a-Segment).
paths./contactdb/segments/{segment_id}.patch.operationId: PATCH_contactdb-segments-segment_id
paths./contactdb/segments/{segment_id}.patch.parameters.length: 3
paths./contactdb/segments/{segment_id}.patch.parameters[0].description: The ID of
  the segment you are updating.
paths./contactdb/segments/{segment_id}.patch.parameters[0].in: query
paths./contactdb/segments/{segment_id}.patch.parameters[0].name: segment_id
paths./contactdb/segments/{segment_id}.patch.parameters[0].type: string
paths./contactdb/segments/{segment_id}.patch.parameters[1].in: body
paths./contactdb/segments/{segment_id}.patch.parameters[1].name: body
paths./contactdb/segments/{segment_id}.patch.parameters[1].schema.example.conditions.length: 1
paths./contactdb/segments/{segment_id}.patch.parameters[1].schema.example.conditions[0].and_or: ""
paths./contactdb/segments/{segment_id}.patch.parameters[1].schema.example.conditions[0].field: last_name
paths./contactdb/segments/{segment_id}.patch.parameters[1].schema.example.conditions[0].operator: eq
paths./contactdb/segments/{segment_id}.patch.parameters[1].schema.example.conditions[0].value: Miller
paths./contactdb/segments/{segment_id}.patch.parameters[1].schema.example.list_id: 5
paths./contactdb/segments/{segment_id}.patch.parameters[1].schema.example.name: The
  Millers
paths./contactdb/segments/{segment_id}.patch.parameters[1].schema.properties.conditions.description: The
  conditions by which this segment should be created.
paths./contactdb/segments/{segment_id}.patch.parameters[1].schema.properties.conditions.items.$ref: '#/definitions/contactdb_segments_conditions'
paths./contactdb/segments/{segment_id}.patch.parameters[1].schema.properties.conditions.type: array
paths./contactdb/segments/{segment_id}.patch.parameters[1].schema.properties.list_id.description: The
  list ID you would like this segment to be built from.
paths./contactdb/segments/{segment_id}.patch.parameters[1].schema.properties.list_id.type: number
paths./contactdb/segments/{segment_id}.patch.parameters[1].schema.properties.name.type: string
paths./contactdb/segments/{segment_id}.patch.parameters[1].schema.required.length: 1
paths./contactdb/segments/{segment_id}.patch.parameters[1].schema.required[0]: name
paths./contactdb/segments/{segment_id}.patch.parameters[1].schema.type: object
paths./contactdb/segments/{segment_id}.patch.parameters[2].$ref: '#/parameters/trait:onBehalfOfSubuser:on-behalf-of'
paths./contactdb/segments/{segment_id}.patch.produces.length: 1
paths./contactdb/segments/{segment_id}.patch.produces[0]: application/json
paths./contactdb/segments/{segment_id}.patch.responses.200.description: ""
paths./contactdb/segments/{segment_id}.patch.responses.200.examples.application/json.conditions.length: 1
paths./contactdb/segments/{segment_id}.patch.responses.200.examples.application/json.conditions[0].and_or: ""
paths./contactdb/segments/{segment_id}.patch.responses.200.examples.application/json.conditions[0].field: last_name
paths./contactdb/segments/{segment_id}.patch.responses.200.examples.application/json.conditions[0].operator: eq
paths./contactdb/segments/{segment_id}.patch.responses.200.examples.application/json.conditions[0].value: Miller
paths./contactdb/segments/{segment_id}.patch.responses.200.examples.application/json.id: 5
paths./contactdb/segments/{segment_id}.patch.responses.200.examples.application/json.list_id: 5
paths./contactdb/segments/{segment_id}.patch.responses.200.examples.application/json.name: The
  Millers
paths./contactdb/segments/{segment_id}.patch.responses.200.examples.application/json.recipient_count: 1
paths./contactdb/segments/{segment_id}.patch.responses.200.schema.$ref: '#/definitions/contactdb_segments'
paths./contactdb/segments/{segment_id}.patch.responses.400.description: ""
paths./contactdb/segments/{segment_id}.patch.responses.400.examples.application/json.errors.length: 12
paths./contactdb/segments/{segment_id}.patch.responses.400.examples.application/json.errors[0].message: request
  body is not valid json
paths./contactdb/segments/{segment_id}.patch.responses.400.examples.application/json.errors[1].message: invalid
  value is passed into one of the request body parameters
paths./contactdb/segments/{segment_id}.patch.responses.400.examples.application/json.errors[2].message: segment
  id is not valid
paths./contactdb/segments/{segment_id}.patch.responses.400.examples.application/json.errors[2].segment_id: segment_id
paths./contactdb/segments/{segment_id}.patch.responses.400.examples.application/json.errors[3].field: field
paths./contactdb/segments/{segment_id}.patch.responses.400.examples.application/json.errors[3].message: field
  and set value is not passed into the request body
paths./contactdb/segments/{segment_id}.patch.responses.400.examples.application/json.errors[4].field: value
paths./contactdb/segments/{segment_id}.patch.responses.400.examples.application/json.errors[4].message: value
  and set value is not passed into the request body
paths./contactdb/segments/{segment_id}.patch.responses.400.examples.application/json.errors[5].field: operator
paths./contactdb/segments/{segment_id}.patch.responses.400.examples.application/json.errors[5].message: operator
  and set value is not passed into the request body
paths./contactdb/segments/{segment_id}.patch.responses.400.examples.application/json.errors[6].field: and_or
paths./contactdb/segments/{segment_id}.patch.responses.400.examples.application/json.errors[6].message: and_or
  is not set on more than one condition and less than all conditions
paths./contactdb/segments/{segment_id}.patch.responses.400.examples.application/json.errors[7].field: and_or
paths./contactdb/segments/{segment_id}.patch.responses.400.examples.application/json.errors[7].message: and_or
  is set on all conditions
paths./contactdb/segments/{segment_id}.patch.responses.400.examples.application/json.errors[8].field: and_or
paths./contactdb/segments/{segment_id}.patch.responses.400.examples.application/json.errors[8].message: and_or
  is set on the only condition passed
paths./contactdb/segments/{segment_id}.patch.responses.400.examples.application/json.errors[9].field: and_or
paths./contactdb/segments/{segment_id}.patch.responses.400.examples.application/json.errors[9].message: and_or
  and set value is not passed into the request body
paths./contactdb/segments/{segment_id}.patch.responses.400.examples.application/json.errors[10].field: list_id
paths./contactdb/segments/{segment_id}.patch.responses.400.examples.application/json.errors[10].message: the
  list_id is not valid
paths./contactdb/segments/{segment_id}.patch.responses.400.examples.application/json.errors[11].field: name
paths./contactdb/segments/{segment_id}.patch.responses.400.examples.application/json.errors[11].message: the
  name is not valid
paths./contactdb/segments/{segment_id}.patch.responses.400.schema.$ref: '#/definitions/global:ErrorResponse'
paths./contactdb/segments/{segment_id}.patch.responses.401.description: ""
paths./contactdb/segments/{segment_id}.patch.responses.401.examples.application/json.errors.length: 1
paths./contactdb/segments/{segment_id}.patch.responses.401.examples.application/json.errors[0].message: authorization
  required
paths./contactdb/segments/{segment_id}.patch.responses.401.schema.$ref: '#/definitions/global:ErrorResponse'
paths./contactdb/segments/{segment_id}.patch.security.length: 1
paths./contactdb/segments/{segment_id}.patch.security[0].Authorization.length: 0
paths./contactdb/segments/{segment_id}.patch.summary: Update a segment
paths./contactdb/segments/{segment_id}.patch.tags.length: 1
paths./contactdb/segments/{segment_id}.patch.tags[0]: Contacts API - Segments
paths./contactdb/segments/{segment_id}/recipients.get.description: |-
  **This endpoint allows you to retrieve all of the recipients in a segment with the given ID.**

  The Contacts API helps you manage your [Marketing Campaigns](https://sendgrid.com/docs/User_Guide/Marketing_Campaigns/index.html) recipients.

  For more information about segments in Marketing Campaigns, please see our [User Guide](https://sendgrid.com/docs/User_Guide/Marketing_Campaigns/lists.html#-Create-a-Segment).
paths./contactdb/segments/{segment_id}/recipients.get.operationId: GET_contactdb-segments-segment_id-recipients
paths./contactdb/segments/{segment_id}/recipients.get.parameters.length: 3
paths./contactdb/segments/{segment_id}/recipients.get.parameters[0].in: query
paths./contactdb/segments/{segment_id}/recipients.get.parameters[0].name: page
paths./contactdb/segments/{segment_id}/recipients.get.parameters[0].type: integer
paths./contactdb/segments/{segment_id}/recipients.get.parameters[1].in: query
paths./contactdb/segments/{segment_id}/recipients.get.parameters[1].name: page_size
paths./contactdb/segments/{segment_id}/recipients.get.parameters[1].type: integer
paths./contactdb/segments/{segment_id}/recipients.get.parameters[2].$ref: '#/parameters/trait:onBehalfOfSubuser:on-behalf-of'
paths./contactdb/segments/{segment_id}/recipients.get.produces.length: 1
paths./contactdb/segments/{segment_id}/recipients.get.produces[0]: application/json
paths./contactdb/segments/{segment_id}/recipients.get.responses.200.description: ""
paths./contactdb/segments/{segment_id}/recipients.get.responses.200.examples.application/json.recipients.length: 1
paths./contactdb/segments/{segment_id}/recipients.get.responses.200.examples.application/json.recipients[0].created_at: 1.4223136e+09
paths./contactdb/segments/{segment_id}/recipients.get.responses.200.examples.application/json.recipients[0].custom_fields.length: 1
paths./contactdb/segments/{segment_id}/recipients.get.responses.200.examples.application/json.recipients[0].custom_fields[0].id: 23
? paths./contactdb/segments/{segment_id}/recipients.get.responses.200.examples.application/json.recipients[0].custom_fields[0].name
: pet
? paths./contactdb/segments/{segment_id}/recipients.get.responses.200.examples.application/json.recipients[0].custom_fields[0].type
: text
? paths./contactdb/segments/{segment_id}/recipients.get.responses.200.examples.application/json.recipients[0].custom_fields[0].value
: Indiana
paths./contactdb/segments/{segment_id}/recipients.get.responses.200.examples.application/json.recipients[0].email: jones@example.com
paths./contactdb/segments/{segment_id}/recipients.get.responses.200.examples.application/json.recipients[0].id: YUBh
paths./contactdb/segments/{segment_id}/recipients.get.responses.200.examples.application/json.recipients[0].last_name: Jones
paths./contactdb/segments/{segment_id}/recipients.get.responses.200.examples.application/json.recipients[0].updated_at: 1.4223137e+09
paths./contactdb/segments/{segment_id}/recipients.get.responses.200.schema.properties.recipients.items.$ref: '#/definitions/contactdb_recipient'
paths./contactdb/segments/{segment_id}/recipients.get.responses.200.schema.properties.recipients.type: array
paths./contactdb/segments/{segment_id}/recipients.get.responses.200.schema.required.length: 1
paths./contactdb/segments/{segment_id}/recipients.get.responses.200.schema.required[0]: recipients
paths./contactdb/segments/{segment_id}/recipients.get.responses.200.schema.title: List
  Recipients On a Segment response
paths./contactdb/segments/{segment_id}/recipients.get.responses.200.schema.type: object
paths./contactdb/segments/{segment_id}/recipients.get.responses.400.description: |-
  "page" : "Returned if page is not a valid integer"
  "page" : "Returned if page is less than 1"
  "page_size" : "Returned if page_size is not a valid integer"
paths./contactdb/segments/{segment_id}/recipients.get.responses.400.schema.type: object
paths./contactdb/segments/{segment_id}/recipients.get.responses.401.description: ""
paths./contactdb/segments/{segment_id}/recipients.get.responses.401.examples.application/json.errors.length: 1
paths./contactdb/segments/{segment_id}/recipients.get.responses.401.examples.application/json.errors[0].message: authorization
  required
paths./contactdb/segments/{segment_id}/recipients.get.responses.401.schema.$ref: '#/definitions/global:ErrorResponse'
paths./contactdb/segments/{segment_id}/recipients.get.responses.404.description: |-
  "segment_id" : "Returned if segment_id is not valid"
  "segment_id" : "Returned if segment_id does not exist"
paths./contactdb/segments/{segment_id}/recipients.get.responses.404.schema.type: object
paths./contactdb/segments/{segment_id}/recipients.get.security.length: 1
paths./contactdb/segments/{segment_id}/recipients.get.security[0].Authorization.length: 0
paths./contactdb/segments/{segment_id}/recipients.get.summary: Retrieve recipients
  on a segment
paths./contactdb/segments/{segment_id}/recipients.get.tags.length: 1
paths./contactdb/segments/{segment_id}/recipients.get.tags[0]: Contacts API - Segments
paths./contactdb/segments/{segment_id}/recipients.parameters.length: 1
paths./contactdb/segments/{segment_id}/recipients.parameters[0].description: The ID
  of the segment from which you want to retrieve recipients.
paths./contactdb/segments/{segment_id}/recipients.parameters[0].in: path
paths./contactdb/segments/{segment_id}/recipients.parameters[0].name: segment_id
paths./contactdb/segments/{segment_id}/recipients.parameters[0].required: true
paths./contactdb/segments/{segment_id}/recipients.parameters[0].type: integer
paths./contactdb/status.get.consumes.length: 1
paths./contactdb/status.get.consumes[0]: application/json
paths./contactdb/status.get.operationId: GET_contactdb-status
paths./contactdb/status.get.parameters.length: 2
paths./contactdb/status.get.parameters[0].$ref: '#/parameters/trait:authorizationHeader:Authorization'
paths./contactdb/status.get.parameters[1].$ref: '#/parameters/trait:onBehalfOfSubuser:on-behalf-of'
paths./contactdb/status.get.produces.length: 1
paths./contactdb/status.get.produces[0]: application/json
paths./contactdb/status.get.responses.200.description: ""
paths./contactdb/status.get.responses.200.examples.application/json.status.length: 2
paths./contactdb/status.get.responses.200.examples.application/json.status[0].id: worker_delay
paths./contactdb/status.get.responses.200.examples.application/json.status[0].value: delayed
paths./contactdb/status.get.responses.200.examples.application/json.status[1].id: worker_delay_seconds
paths./contactdb/status.get.responses.200.examples.application/json.status[1].value: "75.0"
paths./contactdb/status.get.responses.200.schema.properties.status.items.properties.id.type: string
paths./contactdb/status.get.responses.200.schema.properties.status.items.properties.value.type: string
paths./contactdb/status.get.responses.200.schema.properties.status.items.type: object
paths./contactdb/status.get.responses.200.schema.properties.status.type: array
paths./contactdb/status.get.responses.200.schema.type: object
paths./contactdb/status.get.summary: Get Contact Upload Status
paths./contactdb/status.get.tags.length: 1
paths./contactdb/status.get.tags[0]: Contacts API - Recipients
paths./devices/stats.get.description: "**This endpoint allows you to retrieve your
  email statistics segmented by the device type.**\n\n**We only store up to 7 days
  of email activity in our database.** By default, 500 items will be returned per
  request via the Advanced Stats API endpoints.\n\n## Available Device Types\n| **Device**
  | **Description** | **Example** |\n|---|---|---|\n| Desktop | Email software on
  desktop computer. | I.E., Outlook, Sparrow, or Apple Mail. |\n| Webmail |\tA web-based
  email client. | I.E., Yahoo, Google, AOL, or Outlook.com. |\n| Phone | A smart phone.
  | iPhone, Android, Blackberry, etc.\n| Tablet | A tablet computer. | iPad, android
  based tablet, etc. |\n| Other | An unrecognized device. |\n\nAdvanced Stats provide
  a more in-depth view of your email statistics and the actions taken by your recipients.
  You can segment these statistics by geographic location, device type, client type,
  browser, and mailbox provider. For more information about statistics, please see
  our [User Guide](https://sendgrid.com/docs/User_Guide/Statistics/index.html)."
paths./devices/stats.get.operationId: GET_devices-stats
paths./devices/stats.get.parameters.length: 6
paths./devices/stats.get.parameters[0].description: The end date of the statistics
  to retrieve. Defaults to today.
paths./devices/stats.get.parameters[0].in: query
paths./devices/stats.get.parameters[0].name: end_date
paths./devices/stats.get.parameters[0].required: false
paths./devices/stats.get.parameters[0].type: string
paths./devices/stats.get.parameters[1].description: How many results to include on
  each page.
paths./devices/stats.get.parameters[1].in: query
paths./devices/stats.get.parameters[1].name: limit
paths./devices/stats.get.parameters[1].required: false
paths./devices/stats.get.parameters[1].type: integer
paths./devices/stats.get.parameters[2].description: How many results to exclude.
paths./devices/stats.get.parameters[2].in: query
paths./devices/stats.get.parameters[2].name: offset
paths./devices/stats.get.parameters[2].required: false
paths./devices/stats.get.parameters[2].type: integer
paths./devices/stats.get.parameters[3].description: How to group the statistics. Must
  be either "day", "week", or "month".
paths./devices/stats.get.parameters[3].in: query
paths./devices/stats.get.parameters[3].name: aggregated_by
paths./devices/stats.get.parameters[3].required: false
paths./devices/stats.get.parameters[3].type: string
paths./devices/stats.get.parameters[4].description: The starting date of the statistics
  to retrieve.
paths./devices/stats.get.parameters[4].in: query
paths./devices/stats.get.parameters[4].name: start_date
paths./devices/stats.get.parameters[4].required: true
paths./devices/stats.get.parameters[4].type: string
paths./devices/stats.get.parameters[5].$ref: '#/parameters/trait:onBehalfOfSubuser:on-behalf-of'
paths./devices/stats.get.produces.length: 1
paths./devices/stats.get.produces[0]: application/json
paths./devices/stats.get.responses.200.description: ""
paths./devices/stats.get.responses.200.examples.application/json.length: 31
paths./devices/stats.get.responses.200.examples.application/json[0].date: 2015-10-11
paths./devices/stats.get.responses.200.examples.application/json[0].stats.length: 1
paths./devices/stats.get.responses.200.examples.application/json[0].stats[0].metrics.opens: 0
paths./devices/stats.get.responses.200.examples.application/json[0].stats[0].metrics.unique_opens: 0
paths./devices/stats.get.responses.200.examples.application/json[0].stats[0].name: Webmail
paths./devices/stats.get.responses.200.examples.application/json[0].stats[0].type: device
paths./devices/stats.get.responses.200.examples.application/json[1].date: 2015-10-12
paths./devices/stats.get.responses.200.examples.application/json[1].stats.length: 1
paths./devices/stats.get.responses.200.examples.application/json[1].stats[0].metrics.opens: 0
paths./devices/stats.get.responses.200.examples.application/json[1].stats[0].metrics.unique_opens: 0
paths./devices/stats.get.responses.200.examples.application/json[1].stats[0].name: Webmail
paths./devices/stats.get.responses.200.examples.application/json[1].stats[0].type: device
paths./devices/stats.get.responses.200.examples.application/json[2].date: 2015-10-13
paths./devices/stats.get.responses.200.examples.application/json[2].stats.length: 1
paths./devices/stats.get.responses.200.examples.application/json[2].stats[0].metrics.opens: 0
paths./devices/stats.get.responses.200.examples.application/json[2].stats[0].metrics.unique_opens: 0
paths./devices/stats.get.responses.200.examples.application/json[2].stats[0].name: Webmail
paths./devices/stats.get.responses.200.examples.application/json[2].stats[0].type: device
paths./devices/stats.get.responses.200.examples.application/json[3].date: 2015-10-14
paths./devices/stats.get.responses.200.examples.application/json[3].stats.length: 1
paths./devices/stats.get.responses.200.examples.application/json[3].stats[0].metrics.opens: 0
paths./devices/stats.get.responses.200.examples.application/json[3].stats[0].metrics.unique_opens: 0
paths./devices/stats.get.responses.200.examples.application/json[3].stats[0].name: Webmail
paths./devices/stats.get.responses.200.examples.application/json[3].stats[0].type: device
paths./devices/stats.get.responses.200.examples.application/json[4].date: 2015-10-15
paths./devices/stats.get.responses.200.examples.application/json[4].stats.length: 1
paths./devices/stats.get.responses.200.examples.application/json[4].stats[0].metrics.opens: 0
paths./devices/stats.get.responses.200.examples.application/json[4].stats[0].metrics.unique_opens: 0
paths./devices/stats.get.responses.200.examples.application/json[4].stats[0].name: Webmail
paths./devices/stats.get.responses.200.examples.application/json[4].stats[0].type: device
paths./devices/stats.get.responses.200.examples.application/json[5].date: 2015-10-16
paths./devices/stats.get.responses.200.examples.application/json[5].stats.length: 1
paths./devices/stats.get.responses.200.examples.application/json[5].stats[0].metrics.opens: 0
paths./devices/stats.get.responses.200.examples.application/json[5].stats[0].metrics.unique_opens: 0
paths./devices/stats.get.responses.200.examples.application/json[5].stats[0].name: Webmail
paths./devices/stats.get.responses.200.examples.application/json[5].stats[0].type: device
paths./devices/stats.get.responses.200.examples.application/json[6].date: 2015-10-17
paths./devices/stats.get.responses.200.examples.application/json[6].stats.length: 1
paths./devices/stats.get.responses.200.examples.application/json[6].stats[0].metrics.opens: 0
paths./devices/stats.get.responses.200.examples.application/json[6].stats[0].metrics.unique_opens: 0
paths./devices/stats.get.responses.200.examples.application/json[6].stats[0].name: Webmail
paths./devices/stats.get.responses.200.examples.application/json[6].stats[0].type: device
paths./devices/stats.get.responses.200.examples.application/json[7].date: 2015-10-18
paths./devices/stats.get.responses.200.examples.application/json[7].stats.length: 1
paths./devices/stats.get.responses.200.examples.application/json[7].stats[0].metrics.opens: 0
paths./devices/stats.get.responses.200.examples.application/json[7].stats[0].metrics.unique_opens: 0
paths./devices/stats.get.responses.200.examples.application/json[7].stats[0].name: Webmail
paths./devices/stats.get.responses.200.examples.application/json[7].stats[0].type: device
paths./devices/stats.get.responses.200.examples.application/json[8].date: 2015-10-19
paths./devices/stats.get.responses.200.examples.application/json[8].stats.length: 1
paths./devices/stats.get.responses.200.examples.application/json[8].stats[0].metrics.opens: 0
paths./devices/stats.get.responses.200.examples.application/json[8].stats[0].metrics.unique_opens: 0
paths./devices/stats.get.responses.200.examples.application/json[8].stats[0].name: Webmail
paths./devices/stats.get.responses.200.examples.application/json[8].stats[0].type: device
paths./devices/stats.get.responses.200.examples.application/json[9].date: 2015-10-20
paths./devices/stats.get.responses.200.examples.application/json[9].stats.length: 1
paths./devices/stats.get.responses.200.examples.application/json[9].stats[0].metrics.opens: 0
paths./devices/stats.get.responses.200.examples.application/json[9].stats[0].metrics.unique_opens: 0
paths./devices/stats.get.responses.200.examples.application/json[9].stats[0].name: Webmail
paths./devices/stats.get.responses.200.examples.application/json[9].stats[0].type: device
paths./devices/stats.get.responses.200.examples.application/json[10].date: 2015-10-21
paths./devices/stats.get.responses.200.examples.application/json[10].stats.length: 1
paths./devices/stats.get.responses.200.examples.application/json[10].stats[0].metrics.opens: 1
paths./devices/stats.get.responses.200.examples.application/json[10].stats[0].metrics.unique_opens: 1
paths./devices/stats.get.responses.200.examples.application/json[10].stats[0].name: Webmail
paths./devices/stats.get.responses.200.examples.application/json[10].stats[0].type: device
paths./devices/stats.get.responses.200.examples.application/json[11].date: 2015-10-22
paths./devices/stats.get.responses.200.examples.application/json[11].stats.length: 1
paths./devices/stats.get.responses.200.examples.application/json[11].stats[0].metrics.opens: 0
paths./devices/stats.get.responses.200.examples.application/json[11].stats[0].metrics.unique_opens: 0
paths./devices/stats.get.responses.200.examples.application/json[11].stats[0].name: Webmail
paths./devices/stats.get.responses.200.examples.application/json[11].stats[0].type: device
paths./devices/stats.get.responses.200.examples.application/json[12].date: 2015-10-23
paths./devices/stats.get.responses.200.examples.application/json[12].stats.length: 1
paths./devices/stats.get.responses.200.examples.application/json[12].stats[0].metrics.opens: 0
paths./devices/stats.get.responses.200.examples.application/json[12].stats[0].metrics.unique_opens: 0
paths./devices/stats.get.responses.200.examples.application/json[12].stats[0].name: Webmail
paths./devices/stats.get.responses.200.examples.application/json[12].stats[0].type: device
paths./devices/stats.get.responses.200.examples.application/json[13].date: 2015-10-24
paths./devices/stats.get.responses.200.examples.application/json[13].stats.length: 1
paths./devices/stats.get.responses.200.examples.application/json[13].stats[0].metrics.opens: 0
paths./devices/stats.get.responses.200.examples.application/json[13].stats[0].metrics.unique_opens: 0
paths./devices/stats.get.responses.200.examples.application/json[13].stats[0].name: Webmail
paths./devices/stats.get.responses.200.examples.application/json[13].stats[0].type: device
paths./devices/stats.get.responses.200.examples.application/json[14].date: 2015-10-25
paths./devices/stats.get.responses.200.examples.application/json[14].stats.length: 1
paths./devices/stats.get.responses.200.examples.application/json[14].stats[0].metrics.opens: 0
paths./devices/stats.get.responses.200.examples.application/json[14].stats[0].metrics.unique_opens: 0
paths./devices/stats.get.responses.200.examples.application/json[14].stats[0].name: Webmail
paths./devices/stats.get.responses.200.examples.application/json[14].stats[0].type: device
paths./devices/stats.get.responses.200.examples.application/json[15].date: 2015-10-26
paths./devices/stats.get.responses.200.examples.application/json[15].stats.length: 1
paths./devices/stats.get.responses.200.examples.application/json[15].stats[0].metrics.opens: 2
paths./devices/stats.get.responses.200.examples.application/json[15].stats[0].metrics.unique_opens: 2
paths./devices/stats.get.responses.200.examples.application/json[15].stats[0].name: Webmail
paths./devices/stats.get.responses.200.examples.application/json[15].stats[0].type: device
paths./devices/stats.get.responses.200.examples.application/json[16].date: 2015-10-27
paths./devices/stats.get.responses.200.examples.application/json[16].stats.length: 1
paths./devices/stats.get.responses.200.examples.application/json[16].stats[0].metrics.opens: 0
paths./devices/stats.get.responses.200.examples.application/json[16].stats[0].metrics.unique_opens: 0
paths./devices/stats.get.responses.200.examples.application/json[16].stats[0].name: Webmail
paths./devices/stats.get.responses.200.examples.application/json[16].stats[0].type: device
paths./devices/stats.get.responses.200.examples.application/json[17].date: 2015-10-28
paths./devices/stats.get.responses.200.examples.application/json[17].stats.length: 1
paths./devices/stats.get.responses.200.examples.application/json[17].stats[0].metrics.opens: 0
paths./devices/stats.get.responses.200.examples.application/json[17].stats[0].metrics.unique_opens: 0
paths./devices/stats.get.responses.200.examples.application/json[17].stats[0].name: Webmail
paths./devices/stats.get.responses.200.examples.application/json[17].stats[0].type: device
paths./devices/stats.get.responses.200.examples.application/json[18].date: 2015-10-29
paths./devices/stats.get.responses.200.examples.application/json[18].stats.length: 1
paths./devices/stats.get.responses.200.examples.application/json[18].stats[0].metrics.opens: 0
paths./devices/stats.get.responses.200.examples.application/json[18].stats[0].metrics.unique_opens: 0
paths./devices/stats.get.responses.200.examples.application/json[18].stats[0].name: Webmail
paths./devices/stats.get.responses.200.examples.application/json[18].stats[0].type: device
paths./devices/stats.get.responses.200.examples.application/json[19].date: 2015-10-30
paths./devices/stats.get.responses.200.examples.application/json[19].stats.length: 1
paths./devices/stats.get.responses.200.examples.application/json[19].stats[0].metrics.opens: 0
paths./devices/stats.get.responses.200.examples.application/json[19].stats[0].metrics.unique_opens: 0
paths./devices/stats.get.responses.200.examples.application/json[19].stats[0].name: Webmail
paths./devices/stats.get.responses.200.examples.application/json[19].stats[0].type: device
paths./devices/stats.get.responses.200.examples.application/json[20].date: 2015-10-31
paths./devices/stats.get.responses.200.examples.application/json[20].stats.length: 1
paths./devices/stats.get.responses.200.examples.application/json[20].stats[0].metrics.opens: 0
paths./devices/stats.get.responses.200.examples.application/json[20].stats[0].metrics.unique_opens: 0
paths./devices/stats.get.responses.200.examples.application/json[20].stats[0].name: Webmail
paths./devices/stats.get.responses.200.examples.application/json[20].stats[0].type: device
paths./devices/stats.get.responses.200.examples.application/json[21].date: 2015-11-01
paths./devices/stats.get.responses.200.examples.application/json[21].stats.length: 1
paths./devices/stats.get.responses.200.examples.application/json[21].stats[0].metrics.opens: 0
paths./devices/stats.get.responses.200.examples.application/json[21].stats[0].metrics.unique_opens: 0
paths./devices/stats.get.responses.200.examples.application/json[21].stats[0].name: Webmail
paths./devices/stats.get.responses.200.examples.application/json[21].stats[0].type: device
paths./devices/stats.get.responses.200.examples.application/json[22].date: 2015-11-02
paths./devices/stats.get.responses.200.examples.application/json[22].stats.length: 1
paths./devices/stats.get.responses.200.examples.application/json[22].stats[0].metrics.opens: 0
paths./devices/stats.get.responses.200.examples.application/json[22].stats[0].metrics.unique_opens: 0
paths./devices/stats.get.responses.200.examples.application/json[22].stats[0].name: Webmail
paths./devices/stats.get.responses.200.examples.application/json[22].stats[0].type: device
paths./devices/stats.get.responses.200.examples.application/json[23].date: 2015-11-03
paths./devices/stats.get.responses.200.examples.application/json[23].stats.length: 1
paths./devices/stats.get.responses.200.examples.application/json[23].stats[0].metrics.opens: 0
paths./devices/stats.get.responses.200.examples.application/json[23].stats[0].metrics.unique_opens: 0
paths./devices/stats.get.responses.200.examples.application/json[23].stats[0].name: Webmail
paths./devices/stats.get.responses.200.examples.application/json[23].stats[0].type: device
paths./devices/stats.get.responses.200.examples.application/json[24].date: 2015-11-04
paths./devices/stats.get.responses.200.examples.application/json[24].stats.length: 1
paths./devices/stats.get.responses.200.examples.application/json[24].stats[0].metrics.opens: 0
paths./devices/stats.get.responses.200.examples.application/json[24].stats[0].metrics.unique_opens: 0
paths./devices/stats.get.responses.200.examples.application/json[24].stats[0].name: Webmail
paths./devices/stats.get.responses.200.examples.application/json[24].stats[0].type: device
paths./devices/stats.get.responses.200.examples.application/json[25].date: 2015-11-05
paths./devices/stats.get.responses.200.examples.application/json[25].stats.length: 1
paths./devices/stats.get.responses.200.examples.application/json[25].stats[0].metrics.opens: 0
paths./devices/stats.get.responses.200.examples.application/json[25].stats[0].metrics.unique_opens: 0
paths./devices/stats.get.responses.200.examples.application/json[25].stats[0].name: Webmail
paths./devices/stats.get.responses.200.examples.application/json[25].stats[0].type: device
paths./devices/stats.get.responses.200.examples.application/json[26].date: 2015-11-06
paths./devices/stats.get.responses.200.examples.application/json[26].stats.length: 1
paths./devices/stats.get.responses.200.examples.application/json[26].stats[0].metrics.opens: 0
paths./devices/stats.get.responses.200.examples.application/json[26].stats[0].metrics.unique_opens: 0
paths./devices/stats.get.responses.200.examples.application/json[26].stats[0].name: Webmail
paths./devices/stats.get.responses.200.examples.application/json[26].stats[0].type: device
paths./devices/stats.get.responses.200.examples.application/json[27].date: 2015-11-07
paths./devices/stats.get.responses.200.examples.application/json[27].stats.length: 1
paths./devices/stats.get.responses.200.examples.application/json[27].stats[0].metrics.opens: 0
paths./devices/stats.get.responses.200.examples.application/json[27].stats[0].metrics.unique_opens: 0
paths./devices/stats.get.responses.200.examples.application/json[27].stats[0].name: Webmail
paths./devices/stats.get.responses.200.examples.application/json[27].stats[0].type: device
paths./devices/stats.get.responses.200.examples.application/json[28].date: 2015-11-08
paths./devices/stats.get.responses.200.examples.application/json[28].stats.length: 1
paths./devices/stats.get.responses.200.examples.application/json[28].stats[0].metrics.opens: 0
paths./devices/stats.get.responses.200.examples.application/json[28].stats[0].metrics.unique_opens: 0
paths./devices/stats.get.responses.200.examples.application/json[28].stats[0].name: Webmail
paths./devices/stats.get.responses.200.examples.application/json[28].stats[0].type: device
paths./devices/stats.get.responses.200.examples.application/json[29].date: 2015-11-09
paths./devices/stats.get.responses.200.examples.application/json[29].stats.length: 1
paths./devices/stats.get.responses.200.examples.application/json[29].stats[0].metrics.opens: 0
paths./devices/stats.get.responses.200.examples.application/json[29].stats[0].metrics.unique_opens: 0
paths./devices/stats.get.responses.200.examples.application/json[29].stats[0].name: Webmail
paths./devices/stats.get.responses.200.examples.application/json[29].stats[0].type: device
paths./devices/stats.get.responses.200.examples.application/json[30].date: 2015-11-10
paths./devices/stats.get.responses.200.examples.application/json[30].stats.length: 1
paths./devices/stats.get.responses.200.examples.application/json[30].stats[0].metrics.opens: 0
paths./devices/stats.get.responses.200.examples.application/json[30].stats[0].metrics.unique_opens: 0
paths./devices/stats.get.responses.200.examples.application/json[30].stats[0].name: Webmail
paths./devices/stats.get.responses.200.examples.application/json[30].stats[0].type: device
paths./devices/stats.get.responses.200.schema.items.$ref: '#/definitions/advanced_stats_opens'
paths./devices/stats.get.responses.200.schema.type: array
paths./devices/stats.get.security.length: 1
paths./devices/stats.get.security[0].Authorization.length: 0
paths./devices/stats.get.summary: Retrieve email statistics by device type.
paths./devices/stats.get.tags.length: 1
paths./devices/stats.get.tags[0]: Stats
paths./geo/stats.get.description: |-
  **This endpoint allows you to retrieve your email statistics segmented by country and state/province.**

  **We only store up to 7 days of email activity in our database.** By default, 500 items will be returned per request via the Advanced Stats API endpoints.

  Advanced Stats provide a more in-depth view of your email statistics and the actions taken by your recipients. You can segment these statistics by geographic location, device type, client type, browser, and mailbox provider. For more information about statistics, please see our [User Guide](https://sendgrid.com/docs/User_Guide/Statistics/index.html).
paths./geo/stats.get.operationId: GET_geo-stats
paths./geo/stats.get.parameters.length: 8
paths./geo/stats.get.parameters[0].description: How many results to include on each
  page.
paths./geo/stats.get.parameters[0].in: query
paths./geo/stats.get.parameters[0].name: limit
paths./geo/stats.get.parameters[0].required: false
paths./geo/stats.get.parameters[0].type: integer
paths./geo/stats.get.parameters[1].description: How many results to exclude.
paths./geo/stats.get.parameters[1].in: query
paths./geo/stats.get.parameters[1].name: offset
paths./geo/stats.get.parameters[1].required: false
paths./geo/stats.get.parameters[1].type: integer
paths./geo/stats.get.parameters[2].description: How you would like the statistics
  to be grouped. Must be either "day", "week", or "month".
paths./geo/stats.get.parameters[2].enum.length: 3
paths./geo/stats.get.parameters[2].enum[0]: day
paths./geo/stats.get.parameters[2].enum[1]: week
paths./geo/stats.get.parameters[2].enum[2]: month
paths./geo/stats.get.parameters[2].in: query
paths./geo/stats.get.parameters[2].name: aggregated_by
paths./geo/stats.get.parameters[2].required: false
paths./geo/stats.get.parameters[2].type: string
paths./geo/stats.get.parameters[3].description: The starting date of the statistics
  to retrieve. Must be in format YYYY-MM-DD
paths./geo/stats.get.parameters[3].in: query
paths./geo/stats.get.parameters[3].name: start_date
paths./geo/stats.get.parameters[3].required: true
paths./geo/stats.get.parameters[3].type: string
paths./geo/stats.get.parameters[4].default: The date the request is made.
paths./geo/stats.get.parameters[4].description: 'The end date of the statistics to
  retrieve. '
paths./geo/stats.get.parameters[4].in: query
paths./geo/stats.get.parameters[4].name: end_date
paths./geo/stats.get.parameters[4].required: false
paths./geo/stats.get.parameters[4].type: string
paths./geo/stats.get.parameters[5].description: The country you would like to see
  statistics for. Currently only supported for US and CA.
paths./geo/stats.get.parameters[5].enum.length: 2
paths./geo/stats.get.parameters[5].enum[0]: US
paths./geo/stats.get.parameters[5].enum[1]: CA
paths./geo/stats.get.parameters[5].in: query
paths./geo/stats.get.parameters[5].name: country
paths./geo/stats.get.parameters[5].required: false
paths./geo/stats.get.parameters[5].type: string
paths./geo/stats.get.parameters[6].$ref: '#/parameters/trait:authorizationHeader:Authorization'
paths./geo/stats.get.parameters[7].$ref: '#/parameters/trait:onBehalfOfSubuser:on-behalf-of'
paths./geo/stats.get.produces.length: 1
paths./geo/stats.get.produces[0]: application/json
paths./geo/stats.get.responses.200.description: ""
paths./geo/stats.get.responses.200.examples.application/json.length: 31
paths./geo/stats.get.responses.200.examples.application/json[0].date: 2015-10-11
paths./geo/stats.get.responses.200.examples.application/json[0].stats.length: 1
paths./geo/stats.get.responses.200.examples.application/json[0].stats[0].metrics.clicks: 0
paths./geo/stats.get.responses.200.examples.application/json[0].stats[0].metrics.opens: 0
paths./geo/stats.get.responses.200.examples.application/json[0].stats[0].metrics.unique_clicks: 0
paths./geo/stats.get.responses.200.examples.application/json[0].stats[0].metrics.unique_opens: 0
paths./geo/stats.get.responses.200.examples.application/json[0].stats[0].name: TX
paths./geo/stats.get.responses.200.examples.application/json[0].stats[0].type: province
paths./geo/stats.get.responses.200.examples.application/json[1].date: 2015-10-12
paths./geo/stats.get.responses.200.examples.application/json[1].stats.length: 1
paths./geo/stats.get.responses.200.examples.application/json[1].stats[0].metrics.clicks: 0
paths./geo/stats.get.responses.200.examples.application/json[1].stats[0].metrics.opens: 0
paths./geo/stats.get.responses.200.examples.application/json[1].stats[0].metrics.unique_clicks: 0
paths./geo/stats.get.responses.200.examples.application/json[1].stats[0].metrics.unique_opens: 0
paths./geo/stats.get.responses.200.examples.application/json[1].stats[0].name: TX
paths./geo/stats.get.responses.200.examples.application/json[1].stats[0].type: province
paths./geo/stats.get.responses.200.examples.application/json[2].date: 2015-10-13
paths./geo/stats.get.responses.200.examples.application/json[2].stats.length: 1
paths./geo/stats.get.responses.200.examples.application/json[2].stats[0].metrics.clicks: 0
paths./geo/stats.get.responses.200.examples.application/json[2].stats[0].metrics.opens: 0
paths./geo/stats.get.responses.200.examples.application/json[2].stats[0].metrics.unique_clicks: 0
paths./geo/stats.get.responses.200.examples.application/json[2].stats[0].metrics.unique_opens: 0
paths./geo/stats.get.responses.200.examples.application/json[2].stats[0].name: TX
paths./geo/stats.get.responses.200.examples.application/json[2].stats[0].type: province
paths./geo/stats.get.responses.200.examples.application/json[3].date: 2015-10-14
paths./geo/stats.get.responses.200.examples.application/json[3].stats.length: 1
paths./geo/stats.get.responses.200.examples.application/json[3].stats[0].metrics.clicks: 0
paths./geo/stats.get.responses.200.examples.application/json[3].stats[0].metrics.opens: 0
paths./geo/stats.get.responses.200.examples.application/json[3].stats[0].metrics.unique_clicks: 0
paths./geo/stats.get.responses.200.examples.application/json[3].stats[0].metrics.unique_opens: 0
paths./geo/stats.get.responses.200.examples.application/json[3].stats[0].name: TX
paths./geo/stats.get.responses.200.examples.application/json[3].stats[0].type: province
paths./geo/stats.get.responses.200.examples.application/json[4].date: 2015-10-15
paths./geo/stats.get.responses.200.examples.application/json[4].stats.length: 1
paths./geo/stats.get.responses.200.examples.application/json[4].stats[0].metrics.clicks: 0
paths./geo/stats.get.responses.200.examples.application/json[4].stats[0].metrics.opens: 0
paths./geo/stats.get.responses.200.examples.application/json[4].stats[0].metrics.unique_clicks: 0
paths./geo/stats.get.responses.200.examples.application/json[4].stats[0].metrics.unique_opens: 0
paths./geo/stats.get.responses.200.examples.application/json[4].stats[0].name: TX
paths./geo/stats.get.responses.200.examples.application/json[4].stats[0].type: province
paths./geo/stats.get.responses.200.examples.application/json[5].date: 2015-10-16
paths./geo/stats.get.responses.200.examples.application/json[5].stats.length: 1
paths./geo/stats.get.responses.200.examples.application/json[5].stats[0].metrics.clicks: 0
paths./geo/stats.get.responses.200.examples.application/json[5].stats[0].metrics.opens: 0
paths./geo/stats.get.responses.200.examples.application/json[5].stats[0].metrics.unique_clicks: 0
paths./geo/stats.get.responses.200.examples.application/json[5].stats[0].metrics.unique_opens: 0
paths./geo/stats.get.responses.200.examples.application/json[5].stats[0].name: TX
paths./geo/stats.get.responses.200.examples.application/json[5].stats[0].type: province
paths./geo/stats.get.responses.200.examples.application/json[6].date: 2015-10-17
paths./geo/stats.get.responses.200.examples.application/json[6].stats.length: 1
paths./geo/stats.get.responses.200.examples.application/json[6].stats[0].metrics.clicks: 0
paths./geo/stats.get.responses.200.examples.application/json[6].stats[0].metrics.opens: 0
paths./geo/stats.get.responses.200.examples.application/json[6].stats[0].metrics.unique_clicks: 0
paths./geo/stats.get.responses.200.examples.application/json[6].stats[0].metrics.unique_opens: 0
paths./geo/stats.get.responses.200.examples.application/json[6].stats[0].name: TX
paths./geo/stats.get.responses.200.examples.application/json[6].stats[0].type: province
paths./geo/stats.get.responses.200.examples.application/json[7].date: 2015-10-18
paths./geo/stats.get.responses.200.examples.application/json[7].stats.length: 1
paths./geo/stats.get.responses.200.examples.application/json[7].stats[0].metrics.clicks: 0
paths./geo/stats.get.responses.200.examples.application/json[7].stats[0].metrics.opens: 0
paths./geo/stats.get.responses.200.examples.application/json[7].stats[0].metrics.unique_clicks: 0
paths./geo/stats.get.responses.200.examples.application/json[7].stats[0].metrics.unique_opens: 0
paths./geo/stats.get.responses.200.examples.application/json[7].stats[0].name: TX
paths./geo/stats.get.responses.200.examples.application/json[7].stats[0].type: province
paths./geo/stats.get.responses.200.examples.application/json[8].date: 2015-10-19
paths./geo/stats.get.responses.200.examples.application/json[8].stats.length: 1
paths./geo/stats.get.responses.200.examples.application/json[8].stats[0].metrics.clicks: 0
paths./geo/stats.get.responses.200.examples.application/json[8].stats[0].metrics.opens: 0
paths./geo/stats.get.responses.200.examples.application/json[8].stats[0].metrics.unique_clicks: 0
paths./geo/stats.get.responses.200.examples.application/json[8].stats[0].metrics.unique_opens: 0
paths./geo/stats.get.responses.200.examples.application/json[8].stats[0].name: TX
paths./geo/stats.get.responses.200.examples.application/json[8].stats[0].type: province
paths./geo/stats.get.responses.200.examples.application/json[9].date: 2015-10-20
paths./geo/stats.get.responses.200.examples.application/json[9].stats.length: 1
paths./geo/stats.get.responses.200.examples.application/json[9].stats[0].metrics.clicks: 0
paths./geo/stats.get.responses.200.examples.application/json[9].stats[0].metrics.opens: 0
paths./geo/stats.get.responses.200.examples.application/json[9].stats[0].metrics.unique_clicks: 0
paths./geo/stats.get.responses.200.examples.application/json[9].stats[0].metrics.unique_opens: 0
paths./geo/stats.get.responses.200.examples.application/json[9].stats[0].name: TX
paths./geo/stats.get.responses.200.examples.application/json[9].stats[0].type: province
paths./geo/stats.get.responses.200.examples.application/json[10].date: 2015-10-21
paths./geo/stats.get.responses.200.examples.application/json[10].stats.length: 1
paths./geo/stats.get.responses.200.examples.application/json[10].stats[0].metrics.clicks: 0
paths./geo/stats.get.responses.200.examples.application/json[10].stats[0].metrics.opens: 1
paths./geo/stats.get.responses.200.examples.application/json[10].stats[0].metrics.unique_clicks: 0
paths./geo/stats.get.responses.200.examples.application/json[10].stats[0].metrics.unique_opens: 1
paths./geo/stats.get.responses.200.examples.application/json[10].stats[0].name: TX
paths./geo/stats.get.responses.200.examples.application/json[10].stats[0].type: province
paths./geo/stats.get.responses.200.examples.application/json[11].date: 2015-10-22
paths./geo/stats.get.responses.200.examples.application/json[11].stats.length: 1
paths./geo/stats.get.responses.200.examples.application/json[11].stats[0].metrics.clicks: 0
paths./geo/stats.get.responses.200.examples.application/json[11].stats[0].metrics.opens: 0
paths./geo/stats.get.responses.200.examples.application/json[11].stats[0].metrics.unique_clicks: 0
paths./geo/stats.get.responses.200.examples.application/json[11].stats[0].metrics.unique_opens: 0
paths./geo/stats.get.responses.200.examples.application/json[11].stats[0].name: TX
paths./geo/stats.get.responses.200.examples.application/json[11].stats[0].type: province
paths./geo/stats.get.responses.200.examples.application/json[12].date: 2015-10-23
paths./geo/stats.get.responses.200.examples.application/json[12].stats.length: 1
paths./geo/stats.get.responses.200.examples.application/json[12].stats[0].metrics.clicks: 0
paths./geo/stats.get.responses.200.examples.application/json[12].stats[0].metrics.opens: 0
paths./geo/stats.get.responses.200.examples.application/json[12].stats[0].metrics.unique_clicks: 0
paths./geo/stats.get.responses.200.examples.application/json[12].stats[0].metrics.unique_opens: 0
paths./geo/stats.get.responses.200.examples.application/json[12].stats[0].name: TX
paths./geo/stats.get.responses.200.examples.application/json[12].stats[0].type: province
paths./geo/stats.get.responses.200.examples.application/json[13].date: 2015-10-24
paths./geo/stats.get.responses.200.examples.application/json[13].stats.length: 1
paths./geo/stats.get.responses.200.examples.application/json[13].stats[0].metrics.clicks: 0
paths./geo/stats.get.responses.200.examples.application/json[13].stats[0].metrics.opens: 0
paths./geo/stats.get.responses.200.examples.application/json[13].stats[0].metrics.unique_clicks: 0
paths./geo/stats.get.responses.200.examples.application/json[13].stats[0].metrics.unique_opens: 0
paths./geo/stats.get.responses.200.examples.application/json[13].stats[0].name: TX
paths./geo/stats.get.responses.200.examples.application/json[13].stats[0].type: province
paths./geo/stats.get.responses.200.examples.application/json[14].date: 2015-10-25
paths./geo/stats.get.responses.200.examples.application/json[14].stats.length: 1
paths./geo/stats.get.responses.200.examples.application/json[14].stats[0].metrics.clicks: 0
paths./geo/stats.get.responses.200.examples.application/json[14].stats[0].metrics.opens: 0
paths./geo/stats.get.responses.200.examples.application/json[14].stats[0].metrics.unique_clicks: 0
paths./geo/stats.get.responses.200.examples.application/json[14].stats[0].metrics.unique_opens: 0
paths./geo/stats.get.responses.200.examples.application/json[14].stats[0].name: TX
paths./geo/stats.get.responses.200.examples.application/json[14].stats[0].type: province
paths./geo/stats.get.responses.200.examples.application/json[15].date: 2015-10-26
paths./geo/stats.get.responses.200.examples.application/json[15].stats.length: 1
paths./geo/stats.get.responses.200.examples.application/json[15].stats[0].metrics.clicks: 0
paths./geo/stats.get.responses.200.examples.application/json[15].stats[0].metrics.opens: 0
paths./geo/stats.get.responses.200.examples.application/json[15].stats[0].metrics.unique_clicks: 0
paths./geo/stats.get.responses.200.examples.application/json[15].stats[0].metrics.unique_opens: 0
paths./geo/stats.get.responses.200.examples.application/json[15].stats[0].name: TX
paths./geo/stats.get.responses.200.examples.application/json[15].stats[0].type: province
paths./geo/stats.get.responses.200.examples.application/json[16].date: 2015-10-27
paths./geo/stats.get.responses.200.examples.application/json[16].stats.length: 1
paths./geo/stats.get.responses.200.examples.application/json[16].stats[0].metrics.clicks: 0
paths./geo/stats.get.responses.200.examples.application/json[16].stats[0].metrics.opens: 0
paths./geo/stats.get.responses.200.examples.application/json[16].stats[0].metrics.unique_clicks: 0
paths./geo/stats.get.responses.200.examples.application/json[16].stats[0].metrics.unique_opens: 0
paths./geo/stats.get.responses.200.examples.application/json[16].stats[0].name: TX
paths./geo/stats.get.responses.200.examples.application/json[16].stats[0].type: province
paths./geo/stats.get.responses.200.examples.application/json[17].date: 2015-10-28
paths./geo/stats.get.responses.200.examples.application/json[17].stats.length: 1
paths./geo/stats.get.responses.200.examples.application/json[17].stats[0].metrics.clicks: 0
paths./geo/stats.get.responses.200.examples.application/json[17].stats[0].metrics.opens: 0
paths./geo/stats.get.responses.200.examples.application/json[17].stats[0].metrics.unique_clicks: 0
paths./geo/stats.get.responses.200.examples.application/json[17].stats[0].metrics.unique_opens: 0
paths./geo/stats.get.responses.200.examples.application/json[17].stats[0].name: TX
paths./geo/stats.get.responses.200.examples.application/json[17].stats[0].type: province
paths./geo/stats.get.responses.200.examples.application/json[18].date: 2015-10-29
paths./geo/stats.get.responses.200.examples.application/json[18].stats.length: 1
paths./geo/stats.get.responses.200.examples.application/json[18].stats[0].metrics.clicks: 0
paths./geo/stats.get.responses.200.examples.application/json[18].stats[0].metrics.opens: 0
paths./geo/stats.get.responses.200.examples.application/json[18].stats[0].metrics.unique_clicks: 0
paths./geo/stats.get.responses.200.examples.application/json[18].stats[0].metrics.unique_opens: 0
paths./geo/stats.get.responses.200.examples.application/json[18].stats[0].name: TX
paths./geo/stats.get.responses.200.examples.application/json[18].stats[0].type: province
paths./geo/stats.get.responses.200.examples.application/json[19].date: 2015-10-30
paths./geo/stats.get.responses.200.examples.application/json[19].stats.length: 1
paths./geo/stats.get.responses.200.examples.application/json[19].stats[0].metrics.clicks: 0
paths./geo/stats.get.responses.200.examples.application/json[19].stats[0].metrics.opens: 0
paths./geo/stats.get.responses.200.examples.application/json[19].stats[0].metrics.unique_clicks: 0
paths./geo/stats.get.responses.200.examples.application/json[19].stats[0].metrics.unique_opens: 0
paths./geo/stats.get.responses.200.examples.application/json[19].stats[0].name: TX
paths./geo/stats.get.responses.200.examples.application/json[19].stats[0].type: province
paths./geo/stats.get.responses.200.examples.application/json[20].date: 2015-10-31
paths./geo/stats.get.responses.200.examples.application/json[20].stats.length: 1
paths./geo/stats.get.responses.200.examples.application/json[20].stats[0].metrics.clicks: 0
paths./geo/stats.get.responses.200.examples.application/json[20].stats[0].metrics.opens: 0
paths./geo/stats.get.responses.200.examples.application/json[20].stats[0].metrics.unique_clicks: 0
paths./geo/stats.get.responses.200.examples.application/json[20].stats[0].metrics.unique_opens: 0
paths./geo/stats.get.responses.200.examples.application/json[20].stats[0].name: TX
paths./geo/stats.get.responses.200.examples.application/json[20].stats[0].type: province
paths./geo/stats.get.responses.200.examples.application/json[21].date: 2015-11-01
paths./geo/stats.get.responses.200.examples.application/json[21].stats.length: 1
paths./geo/stats.get.responses.200.examples.application/json[21].stats[0].metrics.clicks: 0
paths./geo/stats.get.responses.200.examples.application/json[21].stats[0].metrics.opens: 0
paths./geo/stats.get.responses.200.examples.application/json[21].stats[0].metrics.unique_clicks: 0
paths./geo/stats.get.responses.200.examples.application/json[21].stats[0].metrics.unique_opens: 0
paths./geo/stats.get.responses.200.examples.application/json[21].stats[0].name: TX
paths./geo/stats.get.responses.200.examples.application/json[21].stats[0].type: province
paths./geo/stats.get.responses.200.examples.application/json[22].date: 2015-11-02
paths./geo/stats.get.responses.200.examples.application/json[22].stats.length: 1
paths./geo/stats.get.responses.200.examples.application/json[22].stats[0].metrics.clicks: 0
paths./geo/stats.get.responses.200.examples.application/json[22].stats[0].metrics.opens: 0
paths./geo/stats.get.responses.200.examples.application/json[22].stats[0].metrics.unique_clicks: 0
paths./geo/stats.get.responses.200.examples.application/json[22].stats[0].metrics.unique_opens: 0
paths./geo/stats.get.responses.200.examples.application/json[22].stats[0].name: TX
paths./geo/stats.get.responses.200.examples.application/json[22].stats[0].type: province
paths./geo/stats.get.responses.200.examples.application/json[23].date: 2015-11-03
paths./geo/stats.get.responses.200.examples.application/json[23].stats.length: 1
paths./geo/stats.get.responses.200.examples.application/json[23].stats[0].metrics.clicks: 0
paths./geo/stats.get.responses.200.examples.application/json[23].stats[0].metrics.opens: 0
paths./geo/stats.get.responses.200.examples.application/json[23].stats[0].metrics.unique_clicks: 0
paths./geo/stats.get.responses.200.examples.application/json[23].stats[0].metrics.unique_opens: 0
paths./geo/stats.get.responses.200.examples.application/json[23].stats[0].name: TX
paths./geo/stats.get.responses.200.examples.application/json[23].stats[0].type: province
paths./geo/stats.get.responses.200.examples.application/json[24].date: 2015-11-04
paths./geo/stats.get.responses.200.examples.application/json[24].stats.length: 1
paths./geo/stats.get.responses.200.examples.application/json[24].stats[0].metrics.clicks: 0
paths./geo/stats.get.responses.200.examples.application/json[24].stats[0].metrics.opens: 0
paths./geo/stats.get.responses.200.examples.application/json[24].stats[0].metrics.unique_clicks: 0
paths./geo/stats.get.responses.200.examples.application/json[24].stats[0].metrics.unique_opens: 0
paths./geo/stats.get.responses.200.examples.application/json[24].stats[0].name: TX
paths./geo/stats.get.responses.200.examples.application/json[24].stats[0].type: province
paths./geo/stats.get.responses.200.examples.application/json[25].date: 2015-11-05
paths./geo/stats.get.responses.200.examples.application/json[25].stats.length: 1
paths./geo/stats.get.responses.200.examples.application/json[25].stats[0].metrics.clicks: 0
paths./geo/stats.get.responses.200.examples.application/json[25].stats[0].metrics.opens: 0
paths./geo/stats.get.responses.200.examples.application/json[25].stats[0].metrics.unique_clicks: 0
paths./geo/stats.get.responses.200.examples.application/json[25].stats[0].metrics.unique_opens: 0
paths./geo/stats.get.responses.200.examples.application/json[25].stats[0].name: TX
paths./geo/stats.get.responses.200.examples.application/json[25].stats[0].type: province
paths./geo/stats.get.responses.200.examples.application/json[26].date: 2015-11-06
paths./geo/stats.get.responses.200.examples.application/json[26].stats.length: 1
paths./geo/stats.get.responses.200.examples.application/json[26].stats[0].metrics.clicks: 0
paths./geo/stats.get.responses.200.examples.application/json[26].stats[0].metrics.opens: 0
paths./geo/stats.get.responses.200.examples.application/json[26].stats[0].metrics.unique_clicks: 0
paths./geo/stats.get.responses.200.examples.application/json[26].stats[0].metrics.unique_opens: 0
paths./geo/stats.get.responses.200.examples.application/json[26].stats[0].name: TX
paths./geo/stats.get.responses.200.examples.application/json[26].stats[0].type: province
paths./geo/stats.get.responses.200.examples.application/json[27].date: 2015-11-07
paths./geo/stats.get.responses.200.examples.application/json[27].stats.length: 1
paths./geo/stats.get.responses.200.examples.application/json[27].stats[0].metrics.clicks: 0
paths./geo/stats.get.responses.200.examples.application/json[27].stats[0].metrics.opens: 0
paths./geo/stats.get.responses.200.examples.application/json[27].stats[0].metrics.unique_clicks: 0
paths./geo/stats.get.responses.200.examples.application/json[27].stats[0].metrics.unique_opens: 0
paths./geo/stats.get.responses.200.examples.application/json[27].stats[0].name: TX
paths./geo/stats.get.responses.200.examples.application/json[27].stats[0].type: province
paths./geo/stats.get.responses.200.examples.application/json[28].date: 2015-11-08
paths./geo/stats.get.responses.200.examples.application/json[28].stats.length: 1
paths./geo/stats.get.responses.200.examples.application/json[28].stats[0].metrics.clicks: 0
paths./geo/stats.get.responses.200.examples.application/json[28].stats[0].metrics.opens: 0
paths./geo/stats.get.responses.200.examples.application/json[28].stats[0].metrics.unique_clicks: 0
paths./geo/stats.get.responses.200.examples.application/json[28].stats[0].metrics.unique_opens: 0
paths./geo/stats.get.responses.200.examples.application/json[28].stats[0].name: TX
paths./geo/stats.get.responses.200.examples.application/json[28].stats[0].type: province
paths./geo/stats.get.responses.200.examples.application/json[29].date: 2015-11-09
paths./geo/stats.get.responses.200.examples.application/json[29].stats.length: 1
paths./geo/stats.get.responses.200.examples.application/json[29].stats[0].metrics.clicks: 0
paths./geo/stats.get.responses.200.examples.application/json[29].stats[0].metrics.opens: 0
paths./geo/stats.get.responses.200.examples.application/json[29].stats[0].metrics.unique_clicks: 0
paths./geo/stats.get.responses.200.examples.application/json[29].stats[0].metrics.unique_opens: 0
paths./geo/stats.get.responses.200.examples.application/json[29].stats[0].name: TX
paths./geo/stats.get.responses.200.examples.application/json[29].stats[0].type: province
paths./geo/stats.get.responses.200.examples.application/json[30].date: 2015-11-10
paths./geo/stats.get.responses.200.examples.application/json[30].stats.length: 1
paths./geo/stats.get.responses.200.examples.application/json[30].stats[0].metrics.clicks: 0
paths./geo/stats.get.responses.200.examples.application/json[30].stats[0].metrics.opens: 0
paths./geo/stats.get.responses.200.examples.application/json[30].stats[0].metrics.unique_clicks: 0
paths./geo/stats.get.responses.200.examples.application/json[30].stats[0].metrics.unique_opens: 0
paths./geo/stats.get.responses.200.examples.application/json[30].stats[0].name: TX
paths./geo/stats.get.responses.200.examples.application/json[30].stats[0].type: province
paths./geo/stats.get.responses.200.schema.items.$ref: '#/definitions/advanced_stats_country'
paths./geo/stats.get.responses.200.schema.type: array
paths./geo/stats.get.summary: Retrieve email statistics by country and state/province.
paths./geo/stats.get.tags.length: 1
paths./geo/stats.get.tags[0]: Stats
paths./ips.get.description: |-
  **This endpoint allows you to retrieve a list of all assigned and unassigned IPs.**

  Response includes warm up status, pools, assigned subusers, and whitelabel info. The start_date field corresponds to when warmup started for that IP.

  A single IP address or a range of IP addresses may be dedicated to an account in order to send email for multiple domains. The reputation of this IP is based on the aggregate performance of all the senders who use it.
paths./ips.get.operationId: GET_ips
paths./ips.get.parameters.length: 6
paths./ips.get.parameters[0].description: The IP address to get
paths./ips.get.parameters[0].in: query
paths./ips.get.parameters[0].name: ip
paths./ips.get.parameters[0].type: string
paths./ips.get.parameters[1].description: Should we exclude whitelabels?
paths./ips.get.parameters[1].in: query
paths./ips.get.parameters[1].name: exclude_whitelabels
paths./ips.get.parameters[1].type: boolean
paths./ips.get.parameters[2].default: 10
paths./ips.get.parameters[2].description: The number of IPs you want returned at the
  same time.
paths./ips.get.parameters[2].in: query
paths./ips.get.parameters[2].name: limit
paths./ips.get.parameters[2].type: integer
paths./ips.get.parameters[3].default: 0
paths./ips.get.parameters[3].description: The offset for the number of IPs that you
  are requesting.
paths./ips.get.parameters[3].in: query
paths./ips.get.parameters[3].name: offset
paths./ips.get.parameters[3].type: integer
paths./ips.get.parameters[4].description: The subuser you are requesting for.
paths./ips.get.parameters[4].in: query
paths./ips.get.parameters[4].name: subuser
paths./ips.get.parameters[4].type: string
paths./ips.get.parameters[5].description: The direction to sort the results.
paths./ips.get.parameters[5].enum.length: 2
paths./ips.get.parameters[5].enum[0]: desc
paths./ips.get.parameters[5].enum[1]: asc
paths./ips.get.parameters[5].in: query
paths./ips.get.parameters[5].name: sort_by_direction
paths./ips.get.parameters[5].type: string
paths./ips.get.produces.length: 1
paths./ips.get.produces[0]: application/json
paths./ips.get.responses.200.description: ""
paths./ips.get.responses.200.examples.application/json.length: 2
paths./ips.get.responses.200.examples.application/json[0].assigned_at: 1.4828832e+09
paths./ips.get.responses.200.examples.application/json[0].ip: 192.168.1.1
paths./ips.get.responses.200.examples.application/json[0].pools.length: 2
paths./ips.get.responses.200.examples.application/json[0].pools[0]: pool1
paths./ips.get.responses.200.examples.application/json[0].pools[1]: pool2
paths./ips.get.responses.200.examples.application/json[0].start_date: 1.409616e+09
paths./ips.get.responses.200.examples.application/json[0].subusers.length: 1
paths./ips.get.responses.200.examples.application/json[0].subusers[0]: tim@sendgrid.net
paths./ips.get.responses.200.examples.application/json[0].warmup: false
paths./ips.get.responses.200.examples.application/json[0].whitelabeled: false
paths./ips.get.responses.200.examples.application/json[1].assigned_at: 1.4828832e+09
paths./ips.get.responses.200.examples.application/json[1].ip: 208.115.214.22
paths./ips.get.responses.200.examples.application/json[1].pools.length: 0
paths./ips.get.responses.200.examples.application/json[1].rdns: o1.email.burgermail.com
paths./ips.get.responses.200.examples.application/json[1].start_date: 1.409616e+09
paths./ips.get.responses.200.examples.application/json[1].subusers.length: 0
paths./ips.get.responses.200.examples.application/json[1].warmup: false
paths./ips.get.responses.200.examples.application/json[1].whitelabeled: true
paths./ips.get.responses.200.schema.items.properties.assigned_at.description: The
  date that the IP address was assigned to the user.
paths./ips.get.responses.200.schema.items.properties.assigned_at.type.length: 2
paths./ips.get.responses.200.schema.items.properties.assigned_at.type[0]: integer
paths./ips.get.responses.200.schema.items.properties.assigned_at.type[1]: "null"
paths./ips.get.responses.200.schema.items.properties.ip.description: An IP address.
paths./ips.get.responses.200.schema.items.properties.ip.type: string
paths./ips.get.responses.200.schema.items.properties.pools.description: The IP pools
  that this IP has been added to.
paths./ips.get.responses.200.schema.items.properties.pools.items.type: string
paths./ips.get.responses.200.schema.items.properties.pools.type: array
paths./ips.get.responses.200.schema.items.properties.rdns.description: The reverse
  DNS record for this IP address.
paths./ips.get.responses.200.schema.items.properties.rdns.type: string
paths./ips.get.responses.200.schema.items.properties.start_date.description: The date
  that the IP address was entered into warmup.
paths./ips.get.responses.200.schema.items.properties.start_date.type.length: 2
paths./ips.get.responses.200.schema.items.properties.start_date.type[0]: number
paths./ips.get.responses.200.schema.items.properties.start_date.type[1]: "null"
paths./ips.get.responses.200.schema.items.properties.subusers.description: The subusers
  that are able to send email from this IP.
paths./ips.get.responses.200.schema.items.properties.subusers.items.type: string
paths./ips.get.responses.200.schema.items.properties.subusers.type: array
paths./ips.get.responses.200.schema.items.properties.warmup.description: Indicates
  if this IP address is currently warming up.
paths./ips.get.responses.200.schema.items.properties.warmup.type: boolean
paths./ips.get.responses.200.schema.items.properties.whitelabeled.description: Indicates
  if this IP address has been whitelabeled.
paths./ips.get.responses.200.schema.items.properties.whitelabeled.type: boolean
paths./ips.get.responses.200.schema.items.required.length: 7
paths./ips.get.responses.200.schema.items.required[0]: ip
paths./ips.get.responses.200.schema.items.required[1]: subusers
paths./ips.get.responses.200.schema.items.required[2]: pools
paths./ips.get.responses.200.schema.items.required[3]: warmup
paths./ips.get.responses.200.schema.items.required[4]: start_date
paths./ips.get.responses.200.schema.items.required[5]: whitelabeled
paths./ips.get.responses.200.schema.items.required[6]: assigned_at
paths./ips.get.responses.200.schema.items.type: object
paths./ips.get.responses.200.schema.type: array
paths./ips.get.security.length: 1
paths./ips.get.security[0].Authorization.length: 0
paths./ips.get.summary: Retrieve all IP addresses
paths./ips.get.tags.length: 1
paths./ips.get.tags[0]: IP Addresses
paths./ips.post.consumes.length: 1
paths./ips.post.consumes[0]: application/json
paths./ips.post.description: This endpoint is for adding a(n) IP Address(es) to your
  account.
paths./ips.post.operationId: POST_ips
paths./ips.post.parameters.length: 1
paths./ips.post.parameters[0].in: body
paths./ips.post.parameters[0].name: body
paths./ips.post.parameters[0].schema.example.count: 9.032348e+07
paths./ips.post.parameters[0].schema.example.subusers.length: 2
paths./ips.post.parameters[0].schema.example.subusers[0]: subuser1
paths./ips.post.parameters[0].schema.example.subusers[1]: subuser2
paths./ips.post.parameters[0].schema.example.user_can_send: true
paths./ips.post.parameters[0].schema.example.warmup: true
paths./ips.post.parameters[0].schema.properties.count.description: The amount of IPs
  to add to the account.
paths./ips.post.parameters[0].schema.properties.count.type: integer
paths./ips.post.parameters[0].schema.properties.subusers.description: Array of usernames
  to be assigned a send IP.
paths./ips.post.parameters[0].schema.properties.subusers.items.type: string
paths./ips.post.parameters[0].schema.properties.subusers.type: array
paths./ips.post.parameters[0].schema.properties.warmup.default: false
paths./ips.post.parameters[0].schema.properties.warmup.description: Whether or not
  to warmup the IPs being added.
paths./ips.post.parameters[0].schema.properties.warmup.type: boolean
paths./ips.post.parameters[0].schema.required.length: 1
paths./ips.post.parameters[0].schema.required[0]: count
paths./ips.post.parameters[0].schema.type: object
paths./ips.post.produces.length: 1
paths./ips.post.produces[0]: application/json
paths./ips.post.responses.201.description: ""
paths./ips.post.responses.201.examples.application/json.ips.length: 2
paths./ips.post.responses.201.examples.application/json.ips[0].ip: 1.2.3.4
paths./ips.post.responses.201.examples.application/json.ips[0].subusers.length: 2
paths./ips.post.responses.201.examples.application/json.ips[0].subusers[0]: user
paths./ips.post.responses.201.examples.application/json.ips[0].subusers[1]: subuser1
paths./ips.post.responses.201.examples.application/json.ips[1].ip: 1.2.3.5
paths./ips.post.responses.201.examples.application/json.ips[1].subusers.length: 2
paths./ips.post.responses.201.examples.application/json.ips[1].subusers[0]: user
paths./ips.post.responses.201.examples.application/json.ips[1].subusers[1]: subuser1
paths./ips.post.responses.201.examples.application/json.remaining_ips: 1
paths./ips.post.responses.201.examples.application/json.warmup: true
paths./ips.post.responses.201.schema.properties.ips.description: List of IP objects.
paths./ips.post.responses.201.schema.properties.ips.items.properties.ip.description: IP
  added to account.
paths./ips.post.responses.201.schema.properties.ips.items.properties.ip.type: string
paths./ips.post.responses.201.schema.properties.ips.items.properties.subusers.description: Array
  of usernames assigned a send IP.
paths./ips.post.responses.201.schema.properties.ips.items.properties.subusers.items.type: string
paths./ips.post.responses.201.schema.properties.ips.items.properties.subusers.type: array
paths./ips.post.responses.201.schema.properties.ips.items.required.length: 2
paths./ips.post.responses.201.schema.properties.ips.items.required[0]: ip
paths./ips.post.responses.201.schema.properties.ips.items.required[1]: subusers
paths./ips.post.responses.201.schema.properties.ips.items.type: object
paths./ips.post.responses.201.schema.properties.ips.type: array
paths./ips.post.responses.201.schema.properties.remaining_ips.description: The number
  of IPs that can still be added to the user.
paths./ips.post.responses.201.schema.properties.remaining_ips.type: integer
paths./ips.post.responses.201.schema.properties.warmup.description: Whether or not
  the IPs are being warmed up.
paths./ips.post.responses.201.schema.properties.warmup.type: boolean
paths./ips.post.responses.201.schema.required.length: 3
paths./ips.post.responses.201.schema.required[0]: ips
paths./ips.post.responses.201.schema.required[1]: remaining_ips
paths./ips.post.responses.201.schema.required[2]: warmup
paths./ips.post.responses.201.schema.type: object
paths./ips.post.responses.400.description: ""
paths./ips.post.responses.400.examples.application/json.errors.length: 1
paths./ips.post.responses.400.examples.application/json.errors[0].message: one or
  more subusers do not belong to this user
paths./ips.post.responses.400.schema.$ref: '#/definitions/errors'
paths./ips.post.security.length: 1
paths./ips.post.security[0].Authorization.length: 0
paths./ips.post.summary: Add IPs
paths./ips.post.tags.length: 1
paths./ips.post.tags[0]: IP Addresses
paths./ips/{ip_address}.get.description: |-
  **This endpoint allows you to see which IP pools a particular IP address has been added to.**

  The same IP address can be added to multiple IP pools.

  A single IP address or a range of IP addresses may be dedicated to an account in order to send email for multiple domains. The reputation of this IP is based on the aggregate performance of all the senders who use it.
paths./ips/{ip_address}.get.operationId: GET_ips-ip_address
paths./ips/{ip_address}.get.produces.length: 1
paths./ips/{ip_address}.get.produces[0]: application/json
paths./ips/{ip_address}.get.responses.200.description: ""
paths./ips/{ip_address}.get.responses.200.examples.application/json.ip: 000.00.00.0
paths./ips/{ip_address}.get.responses.200.examples.application/json.pools.length: 1
paths./ips/{ip_address}.get.responses.200.examples.application/json.pools[0]: test1
paths./ips/{ip_address}.get.responses.200.examples.application/json.rdns: o1.em.example.com
paths./ips/{ip_address}.get.responses.200.examples.application/json.subusers.length: 2
paths./ips/{ip_address}.get.responses.200.examples.application/json.subusers[0]: subuser1
paths./ips/{ip_address}.get.responses.200.examples.application/json.subusers[1]: subuser2
paths./ips/{ip_address}.get.responses.200.examples.application/json.warmup: false
paths./ips/{ip_address}.get.responses.200.examples.application/json.whitelabeled: true
paths./ips/{ip_address}.get.responses.200.schema.properties.ip.description: The IP
  address.
paths./ips/{ip_address}.get.responses.200.schema.properties.ip.type: string
paths./ips/{ip_address}.get.responses.200.schema.properties.pools.description: The
  list of IP pools that this IP address belongs to.
paths./ips/{ip_address}.get.responses.200.schema.properties.pools.items.type: string
paths./ips/{ip_address}.get.responses.200.schema.properties.pools.type: array
paths./ips/{ip_address}.get.responses.200.schema.properties.rdns.description: The
  reverse DNS record for this IP address.
paths./ips/{ip_address}.get.responses.200.schema.properties.rdns.type: string
paths./ips/{ip_address}.get.responses.200.schema.properties.start_date.description: The
  date that the IP address was entered into warmup.
paths./ips/{ip_address}.get.responses.200.schema.properties.start_date.type.length: 2
paths./ips/{ip_address}.get.responses.200.schema.properties.start_date.type[0]: integer
paths./ips/{ip_address}.get.responses.200.schema.properties.start_date.type[1]: "null"
paths./ips/{ip_address}.get.responses.200.schema.properties.subusers.description: The
  subusers that can send email using this IP address.
paths./ips/{ip_address}.get.responses.200.schema.properties.subusers.items.type: string
paths./ips/{ip_address}.get.responses.200.schema.properties.subusers.type: array
paths./ips/{ip_address}.get.responses.200.schema.properties.warmup.description: Indicates
  if this IP address is currently warming up.
paths./ips/{ip_address}.get.responses.200.schema.properties.warmup.type: boolean
paths./ips/{ip_address}.get.responses.200.schema.properties.whitelabeled.description: Indicates
  if this IP address has been whitelabeled.
paths./ips/{ip_address}.get.responses.200.schema.properties.whitelabeled.type: boolean
paths./ips/{ip_address}.get.responses.200.schema.required.length: 7
paths./ips/{ip_address}.get.responses.200.schema.required[0]: ip
paths./ips/{ip_address}.get.responses.200.schema.required[1]: subusers
paths./ips/{ip_address}.get.responses.200.schema.required[2]: rdns
paths./ips/{ip_address}.get.responses.200.schema.required[3]: pools
paths./ips/{ip_address}.get.responses.200.schema.required[4]: warmup
paths./ips/{ip_address}.get.responses.200.schema.required[5]: start_date
paths./ips/{ip_address}.get.responses.200.schema.required[6]: whitelabeled
paths./ips/{ip_address}.get.responses.200.schema.type: object
paths./ips/{ip_address}.get.security.length: 1
paths./ips/{ip_address}.get.security[0].Authorization.length: 0
paths./ips/{ip_address}.get.summary: Retrieve all IP pools an IP address belongs to
paths./ips/{ip_address}.get.tags.length: 1
paths./ips/{ip_address}.get.tags[0]: IP Addresses
paths./ips/{ip_address}.parameters.length: 1
paths./ips/{ip_address}.parameters[0].description: The IP address you are retrieving
  the IP pools for.
paths./ips/{ip_address}.parameters[0].in: path
paths./ips/{ip_address}.parameters[0].name: ip_address
paths./ips/{ip_address}.parameters[0].required: true
paths./ips/{ip_address}.parameters[0].type: string
paths./ips/assigned.get.description: |-
  **This endpoint allows you to retrieve only assigned IP addresses.**

  A single IP address or a range of IP addresses may be dedicated to an account in order to send email for multiple domains. The reputation of this IP is based on the aggregate performance of all the senders who use it.
paths./ips/assigned.get.operationId: GET_ips-assigned
paths./ips/assigned.get.produces.length: 1
paths./ips/assigned.get.produces[0]: application/json
paths./ips/assigned.get.responses.200.description: ""
paths./ips/assigned.get.responses.200.examples.application/json.length: 1
paths./ips/assigned.get.responses.200.examples.application/json[0].ip: 167.89.21.3
paths./ips/assigned.get.responses.200.examples.application/json[0].pools.length: 1
paths./ips/assigned.get.responses.200.examples.application/json[0].pools[0]: new_test5
paths./ips/assigned.get.responses.200.examples.application/json[0].start_date: 1.409616e+09
paths./ips/assigned.get.responses.200.examples.application/json[0].warmup: true
paths./ips/assigned.get.responses.200.schema.items.properties.ip.description: The
  IP address.
paths./ips/assigned.get.responses.200.schema.items.properties.ip.type: string
paths./ips/assigned.get.responses.200.schema.items.properties.pools.description: The
  IP pools that this IP address has been added to.
paths./ips/assigned.get.responses.200.schema.items.properties.pools.items.type: string
paths./ips/assigned.get.responses.200.schema.items.properties.pools.type: array
paths./ips/assigned.get.responses.200.schema.items.properties.start_date.description: The
  start date that this IP address was entered into warmup.
paths./ips/assigned.get.responses.200.schema.items.properties.start_date.type: integer
paths./ips/assigned.get.responses.200.schema.items.properties.warmup.description: Indicates
  if this IP address is currently warming up.
paths./ips/assigned.get.responses.200.schema.items.properties.warmup.type: boolean
paths./ips/assigned.get.responses.200.schema.items.required.length: 4
paths./ips/assigned.get.responses.200.schema.items.required[0]: ip
paths./ips/assigned.get.responses.200.schema.items.required[1]: pools
paths./ips/assigned.get.responses.200.schema.items.required[2]: warmup
paths./ips/assigned.get.responses.200.schema.items.required[3]: start_date
paths./ips/assigned.get.responses.200.schema.items.type: object
paths./ips/assigned.get.responses.200.schema.title: List all assigned IPs response
paths./ips/assigned.get.responses.200.schema.type: array
paths./ips/assigned.get.security.length: 1
paths./ips/assigned.get.security[0].Authorization.length: 0
paths./ips/assigned.get.summary: Retrieve all assigned IPs
paths./ips/assigned.get.tags.length: 1
paths./ips/assigned.get.tags[0]: IP Addresses
paths./ips/pools.get.description: |-
  **This endpoint allows you to retreive all of your IP pools.**

  IP Pools allow you to group your dedicated SendGrid IP addresses together. For example, you could create separate pools for your transactional and marketing email. When sending marketing emails, specify that you want to use the marketing IP pool. This allows you to maintain separate reputations for your different email traffic.

  IP pools can only be used with whitelabeled IP addresses.

  If an IP pool is NOT specified for an email, it will use any IP available, including ones in pools.
paths./ips/pools.get.operationId: GET_ips-pools
paths./ips/pools.get.produces.length: 1
paths./ips/pools.get.produces[0]: application/json
paths./ips/pools.get.responses.200.description: ""
paths./ips/pools.get.responses.200.examples.application/json.length: 2
paths./ips/pools.get.responses.200.examples.application/json[0].name: marketing
paths./ips/pools.get.responses.200.examples.application/json[1].name: transactional
paths./ips/pools.get.responses.200.schema.items.$ref: '#/definitions/ip_pool'
paths./ips/pools.get.responses.200.schema.type: array
paths./ips/pools.get.security.length: 1
paths./ips/pools.get.security[0].Authorization.length: 0
paths./ips/pools.get.summary: Retrieve all IP pools.
paths./ips/pools.get.tags.length: 1
paths./ips/pools.get.tags[0]: IP Pools
paths./ips/pools.post.consumes.length: 1
paths./ips/pools.post.consumes[0]: application/json
paths./ips/pools.post.description: |-
  **This endpoint allows you to create an IP pool.**

  **Each user can create up to 10 different IP pools.**

  IP Pools allow you to group your dedicated SendGrid IP addresses together. For example, you could create separate pools for your transactional and marketing email. When sending marketing emails, specify that you want to use the marketing IP pool. This allows you to maintain separate reputations for your different email traffic.

  IP pools can only be used with whitelabeled IP addresses.

  If an IP pool is NOT specified for an email, it will use any IP available, including ones in pools.
paths./ips/pools.post.operationId: POST_ips-pools
paths./ips/pools.post.parameters.length: 1
paths./ips/pools.post.parameters[0].in: body
paths./ips/pools.post.parameters[0].name: body
paths./ips/pools.post.parameters[0].schema.example.name: marketing
paths./ips/pools.post.parameters[0].schema.properties.name.description: The name of
  your new IP pool.
paths./ips/pools.post.parameters[0].schema.properties.name.maxLength: 64
paths./ips/pools.post.parameters[0].schema.properties.name.type: string
paths./ips/pools.post.parameters[0].schema.required.length: 1
paths./ips/pools.post.parameters[0].schema.required[0]: name
paths./ips/pools.post.parameters[0].schema.type: object
paths./ips/pools.post.produces.length: 1
paths./ips/pools.post.produces[0]: application/json
paths./ips/pools.post.responses.200.description: ""
paths./ips/pools.post.responses.200.examples.application/json.name: marketing
paths./ips/pools.post.responses.200.schema.$ref: '#/definitions/ip_pool'
paths./ips/pools.post.security.length: 1
paths./ips/pools.post.security[0].Authorization.length: 0
paths./ips/pools.post.summary: Create an IP pool.
paths./ips/pools.post.tags.length: 1
paths./ips/pools.post.tags[0]: IP Pools
paths./ips/pools/{pool_name}.delete.description: |-
  **This endpoint allows you to delete an IP pool.**

  IP Pools allow you to group your dedicated SendGrid IP addresses together. For example, you could create separate pools for your transactional and marketing email. When sending marketing emails, specify that you want to use the marketing IP pool. This allows you to maintain separate reputations for your different email traffic.

  IP pools can only be used with whitelabeled IP addresses.

  If an IP pool is NOT specified for an email, it will use any IP available, including ones in pools.
paths./ips/pools/{pool_name}.delete.operationId: DELETE_ips-pools-pool_name
paths./ips/pools/{pool_name}.delete.parameters.length: 1
paths./ips/pools/{pool_name}.delete.parameters[0].in: body
paths./ips/pools/{pool_name}.delete.parameters[0].name: body
paths./ips/pools/{pool_name}.delete.parameters[0].schema.type: "null"
paths./ips/pools/{pool_name}.delete.produces.length: 1
paths./ips/pools/{pool_name}.delete.produces[0]: application/json
paths./ips/pools/{pool_name}.delete.responses.204.description: ""
paths./ips/pools/{pool_name}.delete.responses.204.schema.type: object
paths./ips/pools/{pool_name}.delete.responses.404.description: ""
paths./ips/pools/{pool_name}.delete.responses.404.examples.application/json.error: Unable
  to locate specified IPs Pool
paths./ips/pools/{pool_name}.delete.responses.404.schema.properties.error.description: An
  error explaining why the pool could not be deleted.
paths./ips/pools/{pool_name}.delete.responses.404.schema.properties.error.type: string
paths./ips/pools/{pool_name}.delete.responses.404.schema.type: object
paths./ips/pools/{pool_name}.delete.security.length: 1
paths./ips/pools/{pool_name}.delete.security[0].Authorization.length: 0
paths./ips/pools/{pool_name}.delete.summary: Delete an IP pool.
paths./ips/pools/{pool_name}.delete.tags.length: 1
paths./ips/pools/{pool_name}.delete.tags[0]: IP Pools
paths./ips/pools/{pool_name}.get.description: |-
  **This endpoint allows you to list all of the IP addresses that are in a specific IP pool.**

  IP Pools allow you to group your dedicated SendGrid IP addresses together. For example, you could create separate pools for your transactional and marketing email. When sending marketing emails, specify that you want to use the marketing IP pool. This allows you to maintain separate reputations for your different email traffic.

  IP pools can only be used with whitelabeled IP addresses.

  If an IP pool is NOT specified for an email, it will use any IP available, including ones in pools.
paths./ips/pools/{pool_name}.get.operationId: GET_ips-pools-pool_name
paths./ips/pools/{pool_name}.get.produces.length: 1
paths./ips/pools/{pool_name}.get.produces[0]: application/json
paths./ips/pools/{pool_name}.get.responses.200.description: ""
paths./ips/pools/{pool_name}.get.responses.200.schema.properties.ips.description: The
  list of IP addresses that belong to this IP pool.
paths./ips/pools/{pool_name}.get.responses.200.schema.properties.ips.items.type: string
paths./ips/pools/{pool_name}.get.responses.200.schema.properties.ips.type: array
paths./ips/pools/{pool_name}.get.responses.200.schema.properties.pool_name.description: The
  name of the IP pool.
paths./ips/pools/{pool_name}.get.responses.200.schema.properties.pool_name.maxLength: 64
paths./ips/pools/{pool_name}.get.responses.200.schema.properties.pool_name.type: string
paths./ips/pools/{pool_name}.get.responses.200.schema.required.length: 1
paths./ips/pools/{pool_name}.get.responses.200.schema.required[0]: pool_name
paths./ips/pools/{pool_name}.get.responses.200.schema.type: object
paths./ips/pools/{pool_name}.get.responses.404.description: ""
paths./ips/pools/{pool_name}.get.responses.404.examples.application/json.errors.length: 1
paths./ips/pools/{pool_name}.get.responses.404.examples.application/json.errors[0].field: error
paths./ips/pools/{pool_name}.get.responses.404.examples.application/json.errors[0].message: Unable
  to locate specified IPs Pool
paths./ips/pools/{pool_name}.get.responses.404.schema.properties.errors.items.properties.field.description: The
  name of the error.
paths./ips/pools/{pool_name}.get.responses.404.schema.properties.errors.items.properties.field.type: string
paths./ips/pools/{pool_name}.get.responses.404.schema.properties.errors.items.properties.message.description: A
  message explaining why the IP addresses could not be listed.
paths./ips/pools/{pool_name}.get.responses.404.schema.properties.errors.items.properties.message.type: string
paths./ips/pools/{pool_name}.get.responses.404.schema.properties.errors.items.type: object
paths./ips/pools/{pool_name}.get.responses.404.schema.properties.errors.type: array
paths./ips/pools/{pool_name}.get.responses.404.schema.type: object
paths./ips/pools/{pool_name}.get.security.length: 1
paths./ips/pools/{pool_name}.get.security[0].Authorization.length: 0
paths./ips/pools/{pool_name}.get.summary: Retrieve all IPs in a specified pool.
paths./ips/pools/{pool_name}.get.tags.length: 1
paths./ips/pools/{pool_name}.get.tags[0]: IP Pools
paths./ips/pools/{pool_name}.parameters.length: 1
paths./ips/pools/{pool_name}.parameters[0].description: The name of the IP pool that
  you want to retrieve the IP addresses from.
paths./ips/pools/{pool_name}.parameters[0].in: path
paths./ips/pools/{pool_name}.parameters[0].name: pool_name
paths./ips/pools/{pool_name}.parameters[0].required: true
paths./ips/pools/{pool_name}.parameters[0].type: string
paths./ips/pools/{pool_name}.put.consumes.length: 1
paths./ips/pools/{pool_name}.put.consumes[0]: application/json
paths./ips/pools/{pool_name}.put.description: |-
  **This endpoint allows you to update the name of an IP pool.**

  IP Pools allow you to group your dedicated SendGrid IP addresses together. For example, you could create separate pools for your transactional and marketing email. When sending marketing emails, specify that you want to use the marketing IP pool. This allows you to maintain separate reputations for your different email traffic.

  IP pools can only be used with whitelabeled IP addresses.

  If an IP pool is NOT specified for an email, it will use any IP available, including ones in pools.
paths./ips/pools/{pool_name}.put.operationId: PUT_ips-pools-pool_name
paths./ips/pools/{pool_name}.put.parameters.length: 1
paths./ips/pools/{pool_name}.put.parameters[0].in: body
paths./ips/pools/{pool_name}.put.parameters[0].name: body
paths./ips/pools/{pool_name}.put.parameters[0].schema.example.name: new_pool_name
paths./ips/pools/{pool_name}.put.parameters[0].schema.properties.name.description: The
  new name for your IP pool.
paths./ips/pools/{pool_name}.put.parameters[0].schema.properties.name.maxLength: 64
paths./ips/pools/{pool_name}.put.parameters[0].schema.properties.name.type: string
paths./ips/pools/{pool_name}.put.parameters[0].schema.type: object
paths./ips/pools/{pool_name}.put.produces.length: 1
paths./ips/pools/{pool_name}.put.produces[0]: application/json
paths./ips/pools/{pool_name}.put.responses.200.description: ""
paths./ips/pools/{pool_name}.put.responses.200.examples.application/json.name: new_pool_name
paths./ips/pools/{pool_name}.put.responses.200.schema.$ref: '#/definitions/ip_pool'
paths./ips/pools/{pool_name}.put.responses.404.description: ""
paths./ips/pools/{pool_name}.put.responses.404.examples.application/json.errors.length: 1
paths./ips/pools/{pool_name}.put.responses.404.examples.application/json.errors[0].message: ip
  pool not found
paths./ips/pools/{pool_name}.put.responses.404.schema.properties.errors.items.properties.field.type: "null"
paths./ips/pools/{pool_name}.put.responses.404.schema.properties.errors.items.properties.message.description: A
  message explaining why the name of your IP pool could not be updated.
paths./ips/pools/{pool_name}.put.responses.404.schema.properties.errors.items.properties.message.type: string
paths./ips/pools/{pool_name}.put.responses.404.schema.properties.errors.items.type: object
paths./ips/pools/{pool_name}.put.responses.404.schema.properties.errors.type: array
paths./ips/pools/{pool_name}.put.responses.404.schema.type: object
paths./ips/pools/{pool_name}.put.security.length: 1
paths./ips/pools/{pool_name}.put.security[0].Authorization.length: 0
paths./ips/pools/{pool_name}.put.summary: Update an IP pool’s name.
paths./ips/pools/{pool_name}.put.tags.length: 1
paths./ips/pools/{pool_name}.put.tags[0]: IP Pools
paths./ips/pools/{pool_name}/ips.parameters.length: 1
paths./ips/pools/{pool_name}/ips.parameters[0].description: The name of the IP pool
  that you want to add an IP address to.
paths./ips/pools/{pool_name}/ips.parameters[0].in: path
paths./ips/pools/{pool_name}/ips.parameters[0].name: pool_name
paths./ips/pools/{pool_name}/ips.parameters[0].required: true
paths./ips/pools/{pool_name}/ips.parameters[0].type: string
paths./ips/pools/{pool_name}/ips.post.consumes.length: 1
paths./ips/pools/{pool_name}/ips.post.consumes[0]: application/json
paths./ips/pools/{pool_name}/ips.post.description: |-
  **This endpoint allows you to add an IP address to an IP pool.**

  You can add the same IP address to multiple pools. It may take up to 60 seconds for your IP address to be added to a pool after your request is made.

  A single IP address or a range of IP addresses may be dedicated to an account in order to send email for multiple domains. The reputation of this IP is based on the aggregate performance of all the senders who use it.
paths./ips/pools/{pool_name}/ips.post.operationId: POST_ips-pools-pool_name-ips
paths./ips/pools/{pool_name}/ips.post.parameters.length: 1
paths./ips/pools/{pool_name}/ips.post.parameters[0].in: body
paths./ips/pools/{pool_name}/ips.post.parameters[0].name: body
paths./ips/pools/{pool_name}/ips.post.parameters[0].schema.example.ip: 0.0.0.0
paths./ips/pools/{pool_name}/ips.post.parameters[0].schema.properties.ip.description: The
  IP address that you want to add to an IP pool.
paths./ips/pools/{pool_name}/ips.post.parameters[0].schema.properties.ip.type: string
paths./ips/pools/{pool_name}/ips.post.parameters[0].schema.type: object
paths./ips/pools/{pool_name}/ips.post.produces.length: 1
paths./ips/pools/{pool_name}/ips.post.produces[0]: application/json
paths./ips/pools/{pool_name}/ips.post.responses.201.description: ""
paths./ips/pools/{pool_name}/ips.post.responses.201.examples.application/json.ip: 000.00.00.0
paths./ips/pools/{pool_name}/ips.post.responses.201.examples.application/json.pools.length: 1
paths./ips/pools/{pool_name}/ips.post.responses.201.examples.application/json.pools[0]: test1
paths./ips/pools/{pool_name}/ips.post.responses.201.examples.application/json.start_date: 1.409616e+09
paths./ips/pools/{pool_name}/ips.post.responses.201.examples.application/json.warmup: true
paths./ips/pools/{pool_name}/ips.post.responses.201.schema.properties.ip.description: The
  IP address.
paths./ips/pools/{pool_name}/ips.post.responses.201.schema.properties.ip.type: string
paths./ips/pools/{pool_name}/ips.post.responses.201.schema.properties.pools.description: The
  list of IP pools that this IP address has been added to.
paths./ips/pools/{pool_name}/ips.post.responses.201.schema.properties.pools.items.type: string
paths./ips/pools/{pool_name}/ips.post.responses.201.schema.properties.pools.type: array
paths./ips/pools/{pool_name}/ips.post.responses.201.schema.properties.start_date.description: A
  unix timestamp indicating when the warmup process began for the IP address.
paths./ips/pools/{pool_name}/ips.post.responses.201.schema.properties.start_date.type: integer
paths./ips/pools/{pool_name}/ips.post.responses.201.schema.properties.warmup.description: Indicates
  if the IP address is in warmup.
paths./ips/pools/{pool_name}/ips.post.responses.201.schema.properties.warmup.type: boolean
paths./ips/pools/{pool_name}/ips.post.responses.201.schema.required.length: 4
paths./ips/pools/{pool_name}/ips.post.responses.201.schema.required[0]: ip
paths./ips/pools/{pool_name}/ips.post.responses.201.schema.required[1]: pools
paths./ips/pools/{pool_name}/ips.post.responses.201.schema.required[2]: start_date
paths./ips/pools/{pool_name}/ips.post.responses.201.schema.required[3]: warmup
paths./ips/pools/{pool_name}/ips.post.responses.201.schema.type: object
paths./ips/pools/{pool_name}/ips.post.responses.404.description: ""
paths./ips/pools/{pool_name}/ips.post.responses.404.examples.application/json.errors.length: 1
paths./ips/pools/{pool_name}/ips.post.responses.404.examples.application/json.errors[0].message: resource
  not found
paths./ips/pools/{pool_name}/ips.post.responses.404.schema.properties.errors.description: The
  error returned.
paths./ips/pools/{pool_name}/ips.post.responses.404.schema.properties.errors.items.properties.field.type: "null"
paths./ips/pools/{pool_name}/ips.post.responses.404.schema.properties.errors.items.properties.message.description: A
  message explaining why the IP address could not be added to the IP Pool.
paths./ips/pools/{pool_name}/ips.post.responses.404.schema.properties.errors.items.properties.message.type: string
paths./ips/pools/{pool_name}/ips.post.responses.404.schema.properties.errors.items.type: object
paths./ips/pools/{pool_name}/ips.post.responses.404.schema.properties.errors.type: array
paths./ips/pools/{pool_name}/ips.post.responses.404.schema.type: object
paths./ips/pools/{pool_name}/ips.post.security.length: 1
paths./ips/pools/{pool_name}/ips.post.security[0].Authorization.length: 0
paths./ips/pools/{pool_name}/ips.post.summary: Add an IP address to a pool
paths./ips/pools/{pool_name}/ips.post.tags.length: 1
paths./ips/pools/{pool_name}/ips.post.tags[0]: IP Pools
paths./ips/pools/{pool_name}/ips/{ip}.delete.description: |-
  **This endpoint allows you to remove an IP address from an IP pool.**

  The same IP address can be added to multiple IP pools.

  A single IP address or a range of IP addresses may be dedicated to an account in order to send email for multiple domains. The reputation of this IP is based on the aggregate performance of all the senders who use it.
paths./ips/pools/{pool_name}/ips/{ip}.delete.operationId: DELETE_ips-pools-pool_name-ips-ip
paths./ips/pools/{pool_name}/ips/{ip}.delete.parameters.length: 1
paths./ips/pools/{pool_name}/ips/{ip}.delete.parameters[0].in: body
paths./ips/pools/{pool_name}/ips/{ip}.delete.parameters[0].name: body
paths./ips/pools/{pool_name}/ips/{ip}.delete.parameters[0].schema.type: "null"
paths./ips/pools/{pool_name}/ips/{ip}.delete.produces.length: 1
paths./ips/pools/{pool_name}/ips/{ip}.delete.produces[0]: application/json
paths./ips/pools/{pool_name}/ips/{ip}.delete.responses.204.description: ""
paths./ips/pools/{pool_name}/ips/{ip}.delete.responses.204.schema.type: object
paths./ips/pools/{pool_name}/ips/{ip}.delete.responses.404.description: ""
paths./ips/pools/{pool_name}/ips/{ip}.delete.responses.404.examples.application/json.error: Unable
  to locate specified IPs Pool
paths./ips/pools/{pool_name}/ips/{ip}.delete.responses.404.schema.properties.error.description: An
  error explaining why the IP address could not be removed from the IP pool.
paths./ips/pools/{pool_name}/ips/{ip}.delete.responses.404.schema.properties.error.type: string
paths./ips/pools/{pool_name}/ips/{ip}.delete.responses.404.schema.type: object
paths./ips/pools/{pool_name}/ips/{ip}.delete.security.length: 1
paths./ips/pools/{pool_name}/ips/{ip}.delete.security[0].Authorization.length: 0
paths./ips/pools/{pool_name}/ips/{ip}.delete.summary: Remove an IP address from a
  pool.
paths./ips/pools/{pool_name}/ips/{ip}.delete.tags.length: 1
paths./ips/pools/{pool_name}/ips/{ip}.delete.tags[0]: IP Pools
paths./ips/pools/{pool_name}/ips/{ip}.parameters.length: 2
paths./ips/pools/{pool_name}/ips/{ip}.parameters[0].description: The name of the IP
  pool that you are removing the IP address from.
paths./ips/pools/{pool_name}/ips/{ip}.parameters[0].in: path
paths./ips/pools/{pool_name}/ips/{ip}.parameters[0].name: pool_name
paths./ips/pools/{pool_name}/ips/{ip}.parameters[0].required: true
paths./ips/pools/{pool_name}/ips/{ip}.parameters[0].type: string
paths./ips/pools/{pool_name}/ips/{ip}.parameters[1].description: The IP address that
  you are removing.
paths./ips/pools/{pool_name}/ips/{ip}.parameters[1].in: path
paths./ips/pools/{pool_name}/ips/{ip}.parameters[1].name: ip
paths./ips/pools/{pool_name}/ips/{ip}.parameters[1].required: true
paths./ips/pools/{pool_name}/ips/{ip}.parameters[1].type: string
paths./ips/remaining.get.description: This endpoint gets amount of IP Addresses that
  can still be created during a given period and the price of those IPs.
paths./ips/remaining.get.operationId: GET_ips-remaining
paths./ips/remaining.get.produces.length: 1
paths./ips/remaining.get.produces[0]: application/json
paths./ips/remaining.get.responses.200.description: ""
paths./ips/remaining.get.responses.200.examples.application/json.results.length: 1
paths./ips/remaining.get.responses.200.examples.application/json.results[0].period: month
paths./ips/remaining.get.responses.200.examples.application/json.results[0].price_per_ip: 20
paths./ips/remaining.get.responses.200.examples.application/json.results[0].remaining: 2
paths./ips/remaining.get.responses.200.schema.properties.results.items.properties.period.description: The
  length of time until user can add more IPs.
paths./ips/remaining.get.responses.200.schema.properties.results.items.properties.period.type: string
paths./ips/remaining.get.responses.200.schema.properties.results.items.properties.price_per_ip.description: The
  current cost to add an IP.
paths./ips/remaining.get.responses.200.schema.properties.results.items.properties.price_per_ip.type: number
paths./ips/remaining.get.responses.200.schema.properties.results.items.properties.remaining.description: The
  number of IPs that can still be added to the user.
paths./ips/remaining.get.responses.200.schema.properties.results.items.properties.remaining.type: integer
paths./ips/remaining.get.responses.200.schema.properties.results.items.required.length: 3
paths./ips/remaining.get.responses.200.schema.properties.results.items.required[0]: remaining
paths./ips/remaining.get.responses.200.schema.properties.results.items.required[1]: period
paths./ips/remaining.get.responses.200.schema.properties.results.items.required[2]: price_per_ip
paths./ips/remaining.get.responses.200.schema.properties.results.items.type: object
paths./ips/remaining.get.responses.200.schema.properties.results.type: array
paths./ips/remaining.get.responses.200.schema.required.length: 1
paths./ips/remaining.get.responses.200.schema.required[0]: results
paths./ips/remaining.get.responses.200.schema.type: object
paths./ips/remaining.get.security.length: 1
paths./ips/remaining.get.security[0].Authorization.length: 0
paths./ips/remaining.get.summary: Get remaining IPs count
paths./ips/remaining.get.tags.length: 1
paths./ips/remaining.get.tags[0]: IP Addresses
paths./ips/warmup.get.description: |-
  **This endpoint allows you to retrieve all of your IP addresses that are currently warming up.**

  SendGrid can automatically warm up dedicated IP addresses by limiting the amount of mail that can be sent through them per hour, with the limit determined by how long the IP address has been in warmup. See the [warmup schedule](https://sendgrid.com/docs/API_Reference/Web_API_v3/IP_Management/ip_warmup_schedule.html) for more details on how SendGrid limits your email traffic for IPs in warmup.

  For more general information about warming up IPs, please see our [Classroom](https://sendgrid.com/docs/Classroom/Deliver/Delivery_Introduction/warming_up_ips.html).
paths./ips/warmup.get.operationId: GET_ips-warmup
paths./ips/warmup.get.parameters.length: 1
paths./ips/warmup.get.parameters[0].$ref: '#/parameters/trait:onBehalfOfSubuser:on-behalf-of'
paths./ips/warmup.get.produces.length: 1
paths./ips/warmup.get.produces[0]: application/json
paths./ips/warmup.get.responses.200.description: ""
paths./ips/warmup.get.responses.200.examples.application/json.length: 1
paths./ips/warmup.get.responses.200.examples.application/json[0].ip: 0.0.0.0
paths./ips/warmup.get.responses.200.examples.application/json[0].start_date: 1.409616e+09
paths./ips/warmup.get.responses.200.schema.$ref: '#/definitions/ip_warmup_response'
paths./ips/warmup.get.security.length: 1
paths./ips/warmup.get.security[0].Authorization.length: 0
paths./ips/warmup.get.summary: Retrieve all IPs currently in warmup
paths./ips/warmup.get.tags.length: 1
paths./ips/warmup.get.tags[0]: IP Warmup
paths./ips/warmup.post.consumes.length: 1
paths./ips/warmup.post.consumes[0]: application/json
paths./ips/warmup.post.description: |-
  **This endpoint allows you to enter an IP address into warmup mode.**

  SendGrid can automatically warm up dedicated IP addresses by limiting the amount of mail that can be sent through them per hour, with the limit determined by how long the IP address has been in warmup. See the [warmup schedule](https://sendgrid.com/docs/API_Reference/Web_API_v3/IP_Management/ip_warmup_schedule.html) for more details on how SendGrid limits your email traffic for IPs in warmup.

  For more general information about warming up IPs, please see our [Classroom](https://sendgrid.com/docs/Classroom/Deliver/Delivery_Introduction/warming_up_ips.html).
paths./ips/warmup.post.operationId: POST_ips-warmup
paths./ips/warmup.post.parameters.length: 2
paths./ips/warmup.post.parameters[0].in: body
paths./ips/warmup.post.parameters[0].name: body
paths./ips/warmup.post.parameters[0].schema.example.ip: 0.0.0.0
paths./ips/warmup.post.parameters[0].schema.properties.ip.description: The IP address
  that you want to begin warming up.
paths./ips/warmup.post.parameters[0].schema.properties.ip.type: string
paths./ips/warmup.post.parameters[0].schema.type: object
paths./ips/warmup.post.parameters[1].$ref: '#/parameters/trait:onBehalfOfSubuser:on-behalf-of'
paths./ips/warmup.post.produces.length: 1
paths./ips/warmup.post.produces[0]: application/json
paths./ips/warmup.post.responses.200.description: ""
paths./ips/warmup.post.responses.200.examples.application/json.length: 1
paths./ips/warmup.post.responses.200.examples.application/json[0].ip: 0.0.0.0
paths./ips/warmup.post.responses.200.examples.application/json[0].start_date: 1.409616e+09
paths./ips/warmup.post.responses.200.schema.$ref: '#/definitions/ip_warmup_response'
paths./ips/warmup.post.responses.404.description: ""
paths./ips/warmup.post.responses.404.examples.application/json.errors.length: 1
paths./ips/warmup.post.responses.404.examples.application/json.errors[0].message: resource
  not found
paths./ips/warmup.post.responses.404.schema.properties.errors.description: The errors
  that were encountered.
paths./ips/warmup.post.responses.404.schema.properties.errors.items.properties.field.type: "null"
paths./ips/warmup.post.responses.404.schema.properties.errors.items.properties.message.description: A
  message explaining why the IP couldn't entered into warmup mode.
paths./ips/warmup.post.responses.404.schema.properties.errors.items.properties.message.type: string
paths./ips/warmup.post.responses.404.schema.properties.errors.items.type: object
paths./ips/warmup.post.responses.404.schema.properties.errors.type: array
paths./ips/warmup.post.responses.404.schema.type: object
paths./ips/warmup.post.security.length: 1
paths./ips/warmup.post.security[0].Authorization.length: 0
paths./ips/warmup.post.summary: Add an IP to warmup
paths./ips/warmup.post.tags.length: 1
paths./ips/warmup.post.tags[0]: IP Warmup
paths./ips/warmup/{ip_address}.delete.description: |-
  **This endpoint allows you to remove an IP address from warmup mode.**

  SendGrid can automatically warm up dedicated IP addresses by limiting the amount of mail that can be sent through them per hour, with the limit determined by how long the IP address has been in warmup. See the [warmup schedule](https://sendgrid.com/docs/API_Reference/Web_API_v3/IP_Management/ip_warmup_schedule.html) for more details on how SendGrid limits your email traffic for IPs in warmup.

  For more general information about warming up IPs, please see our [Classroom](https://sendgrid.com/docs/Classroom/Deliver/Delivery_Introduction/warming_up_ips.html).
paths./ips/warmup/{ip_address}.delete.operationId: DELETE_ips-warmup-ip_address
paths./ips/warmup/{ip_address}.delete.parameters.length: 2
paths./ips/warmup/{ip_address}.delete.parameters[0].in: body
paths./ips/warmup/{ip_address}.delete.parameters[0].name: body
paths./ips/warmup/{ip_address}.delete.parameters[0].schema.type: "null"
paths./ips/warmup/{ip_address}.delete.parameters[1].$ref: '#/parameters/trait:onBehalfOfSubuser:on-behalf-of'
paths./ips/warmup/{ip_address}.delete.produces.length: 1
paths./ips/warmup/{ip_address}.delete.produces[0]: application/json
paths./ips/warmup/{ip_address}.delete.responses.204.description: ""
paths./ips/warmup/{ip_address}.delete.responses.204.schema.type: object
paths./ips/warmup/{ip_address}.delete.responses.404.description: ""
paths./ips/warmup/{ip_address}.delete.responses.404.examples.application/json.errors.length: 1
paths./ips/warmup/{ip_address}.delete.responses.404.examples.application/json.errors[0].message: resource
  not found
paths./ips/warmup/{ip_address}.delete.responses.404.schema.properties.errors.description: The
  errors that were encountered.
paths./ips/warmup/{ip_address}.delete.responses.404.schema.properties.errors.items.properties.field.type: "null"
paths./ips/warmup/{ip_address}.delete.responses.404.schema.properties.errors.items.properties.message.description: A
  message explaining why the IP couldn't be removed from warmup.
paths./ips/warmup/{ip_address}.delete.responses.404.schema.properties.errors.items.properties.message.type: string
paths./ips/warmup/{ip_address}.delete.responses.404.schema.properties.errors.items.type: object
paths./ips/warmup/{ip_address}.delete.responses.404.schema.properties.errors.type: array
paths./ips/warmup/{ip_address}.delete.responses.404.schema.type: object
paths./ips/warmup/{ip_address}.delete.security.length: 1
paths./ips/warmup/{ip_address}.delete.security[0].Authorization.length: 0
paths./ips/warmup/{ip_address}.delete.summary: Remove an IP from warmup
paths./ips/warmup/{ip_address}.delete.tags.length: 1
paths./ips/warmup/{ip_address}.delete.tags[0]: IP Warmup
paths./ips/warmup/{ip_address}.get.description: |-
  **This endpoint allows you to retrieve the warmup status for a specific IP address.**

  SendGrid can automatically warm up dedicated IP addresses by limiting the amount of mail that can be sent through them per hour, with the limit determined by how long the IP address has been in warmup. See the [warmup schedule](https://sendgrid.com/docs/API_Reference/Web_API_v3/IP_Management/ip_warmup_schedule.html) for more details on how SendGrid limits your email traffic for IPs in warmup.

  For more general information about warming up IPs, please see our [Classroom](https://sendgrid.com/docs/Classroom/Deliver/Delivery_Introduction/warming_up_ips.html).
paths./ips/warmup/{ip_address}.get.operationId: GET_ips-warmup-ip_address
paths./ips/warmup/{ip_address}.get.parameters.length: 1
paths./ips/warmup/{ip_address}.get.parameters[0].$ref: '#/parameters/trait:onBehalfOfSubuser:on-behalf-of'
paths./ips/warmup/{ip_address}.get.produces.length: 1
paths./ips/warmup/{ip_address}.get.produces[0]: application/json
paths./ips/warmup/{ip_address}.get.responses.200.description: ""
paths./ips/warmup/{ip_address}.get.responses.200.schema.$ref: '#/definitions/ip_warmup_response'
paths./ips/warmup/{ip_address}.get.responses.404.description: ""
paths./ips/warmup/{ip_address}.get.responses.404.examples.application/json.errors.length: 1
paths./ips/warmup/{ip_address}.get.responses.404.examples.application/json.errors[0].message: resource
  not found
paths./ips/warmup/{ip_address}.get.responses.404.schema.properties.errors.description: The
  errors that were encountered.
paths./ips/warmup/{ip_address}.get.responses.404.schema.properties.errors.items.properties.field.type: "null"
paths./ips/warmup/{ip_address}.get.responses.404.schema.properties.errors.items.properties.message.description: A
  message explaining why the warmup status could not be retrieved.
paths./ips/warmup/{ip_address}.get.responses.404.schema.properties.errors.items.properties.message.type: string
paths./ips/warmup/{ip_address}.get.responses.404.schema.properties.errors.items.type: object
paths./ips/warmup/{ip_address}.get.responses.404.schema.properties.errors.type: array
paths./ips/warmup/{ip_address}.get.responses.404.schema.type: object
paths./ips/warmup/{ip_address}.get.security.length: 1
paths./ips/warmup/{ip_address}.get.security[0].Authorization.length: 0
paths./ips/warmup/{ip_address}.get.summary: Retrieve warmup status for a specific
  IP address
paths./ips/warmup/{ip_address}.get.tags.length: 1
paths./ips/warmup/{ip_address}.get.tags[0]: IP Warmup
paths./ips/warmup/{ip_address}.parameters.length: 1
paths./ips/warmup/{ip_address}.parameters[0].description: The IP address that you
  want to retrieve the warmup status for.
paths./ips/warmup/{ip_address}.parameters[0].in: path
paths./ips/warmup/{ip_address}.parameters[0].name: ip_address
paths./ips/warmup/{ip_address}.parameters[0].required: true
paths./ips/warmup/{ip_address}.parameters[0].type: string
paths./mail/batch.post.description: "**This endpoint allows you to generate a new
  batch ID. This batch ID can be associated with scheduled sends via the mail/send
  endpoint.**\n\nIf you set the SMTPAPI header `batch_id`, it allows you to then associate
  multiple scheduled mail/send requests together with the same ID. Then at anytime
  up to 10 minutes before the schedule date, you can cancel all of the mail/send requests
  that have this batch ID by calling the Cancel Scheduled Send endpoint. \n\nMore
  Information:\n\n* [Scheduling Parameters > Batch ID](https://sendgrid.com/docs/API_Reference/SMTP_API/scheduling_parameters.html)"
paths./mail/batch.post.operationId: POST_mail-batch
paths./mail/batch.post.parameters.length: 1
paths./mail/batch.post.parameters[0].in: body
paths./mail/batch.post.parameters[0].name: body
paths./mail/batch.post.parameters[0].schema.type: "null"
paths./mail/batch.post.produces.length: 1
paths./mail/batch.post.produces[0]: application/json
paths./mail/batch.post.responses.201.description: ""
paths./mail/batch.post.responses.201.examples.application/json.batch_id: YOUR_BATCH_ID
paths./mail/batch.post.responses.201.schema.$ref: '#/definitions/mail_batch_id'
paths./mail/batch.post.responses.401.description: ""
paths./mail/batch.post.responses.401.examples.application/json.errors.length: 1
paths./mail/batch.post.responses.401.examples.application/json.errors[0].message: authorization
  required
paths./mail/batch.post.responses.401.schema.$ref: '#/definitions/global:ErrorResponse'
paths./mail/batch.post.security.length: 1
paths./mail/batch.post.security[0].Authorization.length: 0
paths./mail/batch.post.summary: Create a batch ID
paths./mail/batch.post.tags.length: 1
paths./mail/batch.post.tags[0]: Cancel Scheduled Sends
paths./mail/batch/{batch_id}.get.description: "**This endpoint allows you to validate
  a batch ID.**\n\nIf you set the SMTPAPI header `batch_id`, it allows you to then
  associate multiple scheduled mail/send requests together with the same ID. Then
  at anytime up to 10 minutes before the schedule date, you can cancel all of the
  mail/send requests that have this batch ID by calling the Cancel Scheduled Send
  endpoint. \n\nMore Information:\n\n* [Scheduling Parameters > Batch ID](https://sendgrid.com/docs/API_Reference/SMTP_API/scheduling_parameters.html)"
paths./mail/batch/{batch_id}.get.operationId: GET_mail-batch-batch_id
paths./mail/batch/{batch_id}.get.produces.length: 1
paths./mail/batch/{batch_id}.get.produces[0]: application/json
paths./mail/batch/{batch_id}.get.responses.200.description: ""
paths./mail/batch/{batch_id}.get.responses.200.examples.application/json.batch_id: HkJ5yLYULb7Rj8GKSx7u025ouWVlMgAi
paths./mail/batch/{batch_id}.get.responses.200.schema.$ref: '#/definitions/mail_batch_id'
paths./mail/batch/{batch_id}.get.responses.400.description: ""
paths./mail/batch/{batch_id}.get.responses.400.examples.application/json.errors.length: 1
paths./mail/batch/{batch_id}.get.responses.400.examples.application/json.errors[0].message: invalid
  batch id
paths./mail/batch/{batch_id}.get.responses.400.schema.$ref: '#/definitions/global:ErrorResponse'
paths./mail/batch/{batch_id}.get.responses.401.description: Unexpected error in API
  call. See HTTP response body for details.
paths./mail/batch/{batch_id}.get.responses.401.examples.application/json.errors.length: 1
paths./mail/batch/{batch_id}.get.responses.401.examples.application/json.errors[0].message: authorization
  required
paths./mail/batch/{batch_id}.get.responses.401.schema.$ref: '#/definitions/global:ErrorResponse'
paths./mail/batch/{batch_id}.get.security.length: 1
paths./mail/batch/{batch_id}.get.security[0].Authorization.length: 0
paths./mail/batch/{batch_id}.get.summary: Validate batch ID
paths./mail/batch/{batch_id}.get.tags.length: 1
paths./mail/batch/{batch_id}.get.tags[0]: Cancel Scheduled Sends
paths./mail/batch/{batch_id}.parameters.length: 1
paths./mail/batch/{batch_id}.parameters[0].in: path
paths./mail/batch/{batch_id}.parameters[0].name: batch_id
paths./mail/batch/{batch_id}.parameters[0].required: true
paths./mail/batch/{batch_id}.parameters[0].type: string
paths./mail/send.post.consumes.length: 1
paths./mail/send.post.consumes[0]: application/json
paths./mail/send.post.description: "This endpoint allows you to send email over SendGrid’s
  v3 Web API, the most recent version of our API. If you are looking for documentation
  about the v2 Mail Send endpoint, please see our [v2 API Reference](https://sendgrid.com/docs/API_Reference/Web_API/mail.html).\n\n*
  Top level parameters are referred to as \"global\".\n* Individual fields within
  the personalizations array will override any other global, or “message level”, parameters
  that are defined outside of personalizations.\n \n**SendGrid provides libraries
  to help you quickly and easily integrate with the v3 Web API in 7 different languages:
  [C#](https://github.com/sendgrid/sendgrid-csharp), [Go](https://github.com/sendgrid/sendgrid-go),
  [Java](https://github.com/sendgrid/sendgrid-java), [Node JS](https://github.com/sendgrid/sendgrid-nodejs),
  [PHP](https://github.com/sendgrid/sendgrid-php), [Python](https://github.com/sendgrid/sendgrid-python),
  and [Ruby](https://github.com/sendgrid/sendgrid-ruby).**\n\n\nFor more detailed
  information about how to use the v3 Mail Send endpoint, please visit our [Classroom](https://sendgrid.com/docs/Classroom/Send/v3_Mail_Send/index.html)."
paths./mail/send.post.operationId: POST_mail-send
paths./mail/send.post.parameters.length: 1
paths./mail/send.post.parameters[0].in: body
paths./mail/send.post.parameters[0].name: body
paths./mail/send.post.parameters[0].schema.example.content.length: 1
paths./mail/send.post.parameters[0].schema.example.content[0].type: text/html
paths./mail/send.post.parameters[0].schema.example.content[0].value: <html><p>Hello,
  world!</p></html>
paths./mail/send.post.parameters[0].schema.example.from.email: sam.smith@example.com
paths./mail/send.post.parameters[0].schema.example.from.name: Sam Smith
paths./mail/send.post.parameters[0].schema.example.personalizations.length: 1
paths./mail/send.post.parameters[0].schema.example.personalizations[0].subject: Hello,
  World!
paths./mail/send.post.parameters[0].schema.example.personalizations[0].to.length: 1
paths./mail/send.post.parameters[0].schema.example.personalizations[0].to[0].email: john.doe@example.com
paths./mail/send.post.parameters[0].schema.example.personalizations[0].to[0].name: John
  Doe
paths./mail/send.post.parameters[0].schema.example.reply_to.email: sam.smith@example.com
paths./mail/send.post.parameters[0].schema.example.reply_to.name: Sam Smith
paths./mail/send.post.parameters[0].schema.example.subject: Hello, World!
paths./mail/send.post.parameters[0].schema.properties.asm.description: An object allowing
  you to specify how to handle unsubscribes.
paths./mail/send.post.parameters[0].schema.properties.asm.properties.group_id.description: The
  unsubscribe group to associate with this email.
paths./mail/send.post.parameters[0].schema.properties.asm.properties.group_id.type: integer
paths./mail/send.post.parameters[0].schema.properties.asm.properties.groups_to_display.description: An
  array containing the unsubscribe groups that you would like to be displayed on the
  unsubscribe preferences page.
paths./mail/send.post.parameters[0].schema.properties.asm.properties.groups_to_display.items.type: integer
paths./mail/send.post.parameters[0].schema.properties.asm.properties.groups_to_display.maxItems: 25
paths./mail/send.post.parameters[0].schema.properties.asm.properties.groups_to_display.type: array
paths./mail/send.post.parameters[0].schema.properties.asm.required.length: 1
paths./mail/send.post.parameters[0].schema.properties.asm.required[0]: group_id
paths./mail/send.post.parameters[0].schema.properties.asm.type: object
paths./mail/send.post.parameters[0].schema.properties.attachments.description: An
  array of objects in which you can specify any attachments you want to include.
paths./mail/send.post.parameters[0].schema.properties.attachments.items.properties.content.description: The
  Base64 encoded content of the attachment.
paths./mail/send.post.parameters[0].schema.properties.attachments.items.properties.content.minLength: 1
paths./mail/send.post.parameters[0].schema.properties.attachments.items.properties.content.type: string
paths./mail/send.post.parameters[0].schema.properties.attachments.items.properties.content_id.description: The
  content id for the attachment. This is used when the disposition is set to “inline”
  and the attachment is an image, allowing the file to be displayed within the body
  of your email.
paths./mail/send.post.parameters[0].schema.properties.attachments.items.properties.content_id.type: string
paths./mail/send.post.parameters[0].schema.properties.attachments.items.properties.disposition.default: attachment
paths./mail/send.post.parameters[0].schema.properties.attachments.items.properties.disposition.description: The
  content-disposition of the attachment specifying how you would like the attachment
  to be displayed. For example, “inline” results in the attached file being displayed
  automatically within the message while “attachment” results in the attached file
  requiring some action to be taken before it is displayed (e.g. opening or downloading
  the file).
paths./mail/send.post.parameters[0].schema.properties.attachments.items.properties.disposition.enum.length: 2
paths./mail/send.post.parameters[0].schema.properties.attachments.items.properties.disposition.enum[0]: inline
paths./mail/send.post.parameters[0].schema.properties.attachments.items.properties.disposition.enum[1]: attachment
paths./mail/send.post.parameters[0].schema.properties.attachments.items.properties.disposition.type: string
paths./mail/send.post.parameters[0].schema.properties.attachments.items.properties.filename.description: The
  filename of the attachment.
paths./mail/send.post.parameters[0].schema.properties.attachments.items.properties.filename.type: string
paths./mail/send.post.parameters[0].schema.properties.attachments.items.properties.type.description: The
  mime type of the content you are attaching. For example, “text/plain” or “text/html”.
paths./mail/send.post.parameters[0].schema.properties.attachments.items.properties.type.minLength: 1
paths./mail/send.post.parameters[0].schema.properties.attachments.items.properties.type.type: string
paths./mail/send.post.parameters[0].schema.properties.attachments.items.required.length: 2
paths./mail/send.post.parameters[0].schema.properties.attachments.items.required[0]: content
paths./mail/send.post.parameters[0].schema.properties.attachments.items.required[1]: filename
paths./mail/send.post.parameters[0].schema.properties.attachments.items.type: object
paths./mail/send.post.parameters[0].schema.properties.attachments.type: array
paths./mail/send.post.parameters[0].schema.properties.batch_id.description: 'This
  ID represents a batch of emails to be sent at the same time. Including a batch_id
  in your request allows you include this email in that batch, and also enables you
  to cancel or pause the delivery of that batch. For more information, see https://sendgrid.com/docs/API_Reference/Web_API_v3/cancel_schedule_send.html '
paths./mail/send.post.parameters[0].schema.properties.batch_id.type: string
paths./mail/send.post.parameters[0].schema.properties.categories.description: 'An
  array of category names for this message. Each category name may not exceed 255
  characters. '
paths./mail/send.post.parameters[0].schema.properties.categories.items.maxLength: 255
paths./mail/send.post.parameters[0].schema.properties.categories.items.type: string
paths./mail/send.post.parameters[0].schema.properties.categories.maxItems: 10
paths./mail/send.post.parameters[0].schema.properties.categories.type: array
paths./mail/send.post.parameters[0].schema.properties.categories.uniqueItems: true
paths./mail/send.post.parameters[0].schema.properties.content.description: An array
  in which you may specify the content of your email. You can include multiple mime
  types of content, but you must specify at least one mime type. To include more than
  one mime type, simply add another object to the array containing the `type` and
  `value` parameters.
paths./mail/send.post.parameters[0].schema.properties.content.items.properties.type.description: The
  mime type of the content you are including in your email. For example, “text/plain”
  or “text/html”.
paths./mail/send.post.parameters[0].schema.properties.content.items.properties.type.minLength: 1
paths./mail/send.post.parameters[0].schema.properties.content.items.properties.type.type: string
paths./mail/send.post.parameters[0].schema.properties.content.items.properties.value.description: The
  actual content of the specified mime type that you are including in your email.
paths./mail/send.post.parameters[0].schema.properties.content.items.properties.value.minLength: 1
paths./mail/send.post.parameters[0].schema.properties.content.items.properties.value.type: string
paths./mail/send.post.parameters[0].schema.properties.content.items.required.length: 2
paths./mail/send.post.parameters[0].schema.properties.content.items.required[0]: type
paths./mail/send.post.parameters[0].schema.properties.content.items.required[1]: value
paths./mail/send.post.parameters[0].schema.properties.content.items.type: object
paths./mail/send.post.parameters[0].schema.properties.content.type: array
paths./mail/send.post.parameters[0].schema.properties.custom_args.description: Values
  that are specific to the entire send that will be carried along with the email and
  its activity data. Substitutions will not be made on custom arguments, so any string
  that is entered into this parameter will be assumed to be the custom argument that
  you would like to be used. This parameter is overridden by personalizations[x].custom_args
  if that parameter has been defined. Total custom args size may not exceed 10,000
  bytes.
paths./mail/send.post.parameters[0].schema.properties.custom_args.type: object
paths./mail/send.post.parameters[0].schema.properties.from.$ref: '#/definitions/email_object'
paths./mail/send.post.parameters[0].schema.properties.headers.description: An object
  containing key/value pairs of header names and the value to substitute for them.
  You must ensure these are properly encoded if they contain unicode characters. Must
  not be one of the reserved headers.
paths./mail/send.post.parameters[0].schema.properties.headers.type: object
paths./mail/send.post.parameters[0].schema.properties.ip_pool_name.description: The
  IP Pool that you would like to send this email from.
paths./mail/send.post.parameters[0].schema.properties.ip_pool_name.maxLength: 64
paths./mail/send.post.parameters[0].schema.properties.ip_pool_name.minLength: 2
paths./mail/send.post.parameters[0].schema.properties.ip_pool_name.type: string
paths./mail/send.post.parameters[0].schema.properties.mail_settings.description: A
  collection of different mail settings that you can use to specify how you would
  like this email to be handled.
paths./mail/send.post.parameters[0].schema.properties.mail_settings.properties.bcc.description: This
  allows you to have a blind carbon copy automatically sent to the specified email
  address for every email that is sent.
paths./mail/send.post.parameters[0].schema.properties.mail_settings.properties.bcc.properties.email.description: The
  email address that you would like to receive the BCC.
paths./mail/send.post.parameters[0].schema.properties.mail_settings.properties.bcc.properties.email.format: email
paths./mail/send.post.parameters[0].schema.properties.mail_settings.properties.bcc.properties.email.type: string
paths./mail/send.post.parameters[0].schema.properties.mail_settings.properties.bcc.properties.enable.description: Indicates
  if this setting is enabled.
paths./mail/send.post.parameters[0].schema.properties.mail_settings.properties.bcc.properties.enable.type: boolean
paths./mail/send.post.parameters[0].schema.properties.mail_settings.properties.bcc.type: object
paths./mail/send.post.parameters[0].schema.properties.mail_settings.properties.bypass_list_management.description: Allows
  you to bypass all unsubscribe groups and suppressions to ensure that the email is
  delivered to every single recipient. This should only be used in emergencies when
  it is absolutely necessary that every recipient receives your email.
? paths./mail/send.post.parameters[0].schema.properties.mail_settings.properties.bypass_list_management.properties.enable.description
: Indicates if this setting is enabled.
paths./mail/send.post.parameters[0].schema.properties.mail_settings.properties.bypass_list_management.properties.enable.type: boolean
paths./mail/send.post.parameters[0].schema.properties.mail_settings.properties.bypass_list_management.type: object
paths./mail/send.post.parameters[0].schema.properties.mail_settings.properties.footer.description: The
  default footer that you would like included on every email.
paths./mail/send.post.parameters[0].schema.properties.mail_settings.properties.footer.properties.enable.description: Indicates
  if this setting is enabled.
paths./mail/send.post.parameters[0].schema.properties.mail_settings.properties.footer.properties.enable.type: boolean
paths./mail/send.post.parameters[0].schema.properties.mail_settings.properties.footer.properties.html.description: The
  HTML content of your footer.
paths./mail/send.post.parameters[0].schema.properties.mail_settings.properties.footer.properties.html.type: string
paths./mail/send.post.parameters[0].schema.properties.mail_settings.properties.footer.properties.text.description: The
  plain text content of your footer.
paths./mail/send.post.parameters[0].schema.properties.mail_settings.properties.footer.properties.text.type: string
paths./mail/send.post.parameters[0].schema.properties.mail_settings.properties.footer.type: object
paths./mail/send.post.parameters[0].schema.properties.mail_settings.properties.sandbox_mode.description: This
  allows you to send a test email to ensure that your request body is valid and formatted
  correctly.
paths./mail/send.post.parameters[0].schema.properties.mail_settings.properties.sandbox_mode.properties.enable.description: Indicates
  if this setting is enabled.
paths./mail/send.post.parameters[0].schema.properties.mail_settings.properties.sandbox_mode.properties.enable.type: boolean
paths./mail/send.post.parameters[0].schema.properties.mail_settings.properties.sandbox_mode.type: object
paths./mail/send.post.parameters[0].schema.properties.mail_settings.properties.spam_check.description: This
  allows you to test the content of your email for spam.
paths./mail/send.post.parameters[0].schema.properties.mail_settings.properties.spam_check.properties.enable.description: Indicates
  if this setting is enabled.
paths./mail/send.post.parameters[0].schema.properties.mail_settings.properties.spam_check.properties.enable.type: boolean
paths./mail/send.post.parameters[0].schema.properties.mail_settings.properties.spam_check.properties.post_to_url.description: An
  Inbound Parse URL that you would like a copy of your email along with the spam report
  to be sent to.
paths./mail/send.post.parameters[0].schema.properties.mail_settings.properties.spam_check.properties.post_to_url.type: string
paths./mail/send.post.parameters[0].schema.properties.mail_settings.properties.spam_check.properties.threshold.description: The
  threshold used to determine if your content qualifies as spam on a scale from 1
  to 10, with 10 being most strict, or most likely to be considered as spam.
paths./mail/send.post.parameters[0].schema.properties.mail_settings.properties.spam_check.properties.threshold.maximum: 10
paths./mail/send.post.parameters[0].schema.properties.mail_settings.properties.spam_check.properties.threshold.minimum: 1
paths./mail/send.post.parameters[0].schema.properties.mail_settings.properties.spam_check.properties.threshold.type: integer
paths./mail/send.post.parameters[0].schema.properties.mail_settings.properties.spam_check.type: object
paths./mail/send.post.parameters[0].schema.properties.mail_settings.type: object
paths./mail/send.post.parameters[0].schema.properties.personalizations.description: An
  array of messages and their metadata. Each object within personalizations can be
  thought of as an envelope - it defines who should receive an individual message
  and how that message should be handled.
paths./mail/send.post.parameters[0].schema.properties.personalizations.items.properties.bcc.description: An
  array of recipients who will receive a blind carbon copy of your email. Each object
  within this array may contain the name, but must always contain the email, of a
  recipient.
paths./mail/send.post.parameters[0].schema.properties.personalizations.items.properties.bcc.items.$ref: '#/definitions/email_object'
paths./mail/send.post.parameters[0].schema.properties.personalizations.items.properties.bcc.maxItems: 1000
paths./mail/send.post.parameters[0].schema.properties.personalizations.items.properties.bcc.type: array
paths./mail/send.post.parameters[0].schema.properties.personalizations.items.properties.cc.description: An
  array of recipients who will receive a copy of your email. Each object within this
  array may contain the name, but must always contain the email, of a recipient.
paths./mail/send.post.parameters[0].schema.properties.personalizations.items.properties.cc.items.$ref: '#/definitions/email_object'
paths./mail/send.post.parameters[0].schema.properties.personalizations.items.properties.cc.maxItems: 1000
paths./mail/send.post.parameters[0].schema.properties.personalizations.items.properties.cc.type: array
paths./mail/send.post.parameters[0].schema.properties.personalizations.items.properties.custom_args.description: Values
  that are specific to this personalization that will be carried along with the email
  and its activity data. Substitutions will not be made on custom arguments, so any
  string that is entered into this parameter will be assumed to be the custom argument
  that you would like to be used. May not exceed 10,000 bytes.
paths./mail/send.post.parameters[0].schema.properties.personalizations.items.properties.custom_args.type: object
paths./mail/send.post.parameters[0].schema.properties.personalizations.items.properties.headers.description: 'A
  collection of JSON key/value pairs allowing you to specify specific handling instructions
  for your email. You may not overwrite the following headers: x-sg-id, x-sg-eid,
  received, dkim-signature, Content-Type, Content-Transfer-Encoding, To, From, Subject,
  Reply-To, CC, BCC'
paths./mail/send.post.parameters[0].schema.properties.personalizations.items.properties.headers.type: object
paths./mail/send.post.parameters[0].schema.properties.personalizations.items.properties.send_at.description: A
  unix timestamp allowing you to specify when you want your email to be delivered.
  Scheduling more than 72 hours in advance is forbidden.
paths./mail/send.post.parameters[0].schema.properties.personalizations.items.properties.send_at.type: integer
paths./mail/send.post.parameters[0].schema.properties.personalizations.items.properties.subject.description: The
  subject of your email. Char length requirements, according to the RFC - http://stackoverflow.com/questions/1592291/what-is-the-email-subject-length-limit#answer-1592310
paths./mail/send.post.parameters[0].schema.properties.personalizations.items.properties.subject.minLength: 1
paths./mail/send.post.parameters[0].schema.properties.personalizations.items.properties.subject.type: string
paths./mail/send.post.parameters[0].schema.properties.personalizations.items.properties.substitutions.description: A
  collection of key/value pairs following the pattern "substitution_tag":"value to
  substitute". All are assumed to be strings. These substitutions will apply to the
  text and html content of the body of your email, in addition to the `subject` and
  `reply-to` parameters.
paths./mail/send.post.parameters[0].schema.properties.personalizations.items.properties.substitutions.maxProperties: 10000
paths./mail/send.post.parameters[0].schema.properties.personalizations.items.properties.substitutions.type: object
paths./mail/send.post.parameters[0].schema.properties.personalizations.items.properties.to.description: An
  array of recipients. Each object within this array may contain the name, but must
  always contain the email, of a recipient.
paths./mail/send.post.parameters[0].schema.properties.personalizations.items.properties.to.items.$ref: '#/definitions/email_object'
paths./mail/send.post.parameters[0].schema.properties.personalizations.items.properties.to.maxItems: 1000
paths./mail/send.post.parameters[0].schema.properties.personalizations.items.properties.to.minItems: 1
paths./mail/send.post.parameters[0].schema.properties.personalizations.items.properties.to.type: array
paths./mail/send.post.parameters[0].schema.properties.personalizations.items.required.length: 1
paths./mail/send.post.parameters[0].schema.properties.personalizations.items.required[0]: to
paths./mail/send.post.parameters[0].schema.properties.personalizations.items.type: object
paths./mail/send.post.parameters[0].schema.properties.personalizations.maxItems: 1000
paths./mail/send.post.parameters[0].schema.properties.personalizations.type: array
paths./mail/send.post.parameters[0].schema.properties.personalizations.uniqueItems: false
paths./mail/send.post.parameters[0].schema.properties.reply_to.$ref: '#/definitions/email_object'
paths./mail/send.post.parameters[0].schema.properties.sections.description: An object
  of key/value pairs that define block sections of code to be used as substitutions.
paths./mail/send.post.parameters[0].schema.properties.sections.type: object
paths./mail/send.post.parameters[0].schema.properties.send_at.description: A unix
  timestamp allowing you to specify when you want your email to be delivered. This
  may be overridden by the personalizations[x].send_at parameter. Scheduling more
  ta 72 hours in advance is forbidden.
paths./mail/send.post.parameters[0].schema.properties.send_at.type: integer
paths./mail/send.post.parameters[0].schema.properties.subject.description: The global,
  or “message level”, subject of your email. This may be overridden by personalizations[x].subject.
paths./mail/send.post.parameters[0].schema.properties.subject.minLength: 1
paths./mail/send.post.parameters[0].schema.properties.subject.type: string
paths./mail/send.post.parameters[0].schema.properties.template_id.description: 'The
  id of a template that you would like to use. If you use a template that contains
  a subject and content (either text or html), you do not need to specify those at
  the personalizations nor message level. '
paths./mail/send.post.parameters[0].schema.properties.template_id.type: string
paths./mail/send.post.parameters[0].schema.properties.tracking_settings.description: Settings
  to determine how you would like to track the metrics of how your recipients interact
  with your email.
paths./mail/send.post.parameters[0].schema.properties.tracking_settings.properties.click_tracking.description: Allows
  you to track whether a recipient clicked a link in your email.
paths./mail/send.post.parameters[0].schema.properties.tracking_settings.properties.click_tracking.properties.enable.description: Indicates
  if this setting is enabled.
paths./mail/send.post.parameters[0].schema.properties.tracking_settings.properties.click_tracking.properties.enable.type: boolean
? paths./mail/send.post.parameters[0].schema.properties.tracking_settings.properties.click_tracking.properties.enable_text.description
: Indicates if this setting should be included in the text/plain portion of your email.
paths./mail/send.post.parameters[0].schema.properties.tracking_settings.properties.click_tracking.properties.enable_text.type: boolean
paths./mail/send.post.parameters[0].schema.properties.tracking_settings.properties.click_tracking.type: object
paths./mail/send.post.parameters[0].schema.properties.tracking_settings.properties.ganalytics.description: Allows
  you to enable tracking provided by Google Analytics.
paths./mail/send.post.parameters[0].schema.properties.tracking_settings.properties.ganalytics.properties.enable.description: Indicates
  if this setting is enabled.
paths./mail/send.post.parameters[0].schema.properties.tracking_settings.properties.ganalytics.properties.enable.type: boolean
? paths./mail/send.post.parameters[0].schema.properties.tracking_settings.properties.ganalytics.properties.utm_campaign.description
: "The name of the campaign.\t"
paths./mail/send.post.parameters[0].schema.properties.tracking_settings.properties.ganalytics.properties.utm_campaign.type: string
paths./mail/send.post.parameters[0].schema.properties.tracking_settings.properties.ganalytics.properties.utm_content.description: "Used
  to differentiate your campaign from advertisements.\t"
paths./mail/send.post.parameters[0].schema.properties.tracking_settings.properties.ganalytics.properties.utm_content.type: string
paths./mail/send.post.parameters[0].schema.properties.tracking_settings.properties.ganalytics.properties.utm_medium.description: Name
  of the marketing medium. (e.g. Email)
paths./mail/send.post.parameters[0].schema.properties.tracking_settings.properties.ganalytics.properties.utm_medium.type: string
paths./mail/send.post.parameters[0].schema.properties.tracking_settings.properties.ganalytics.properties.utm_source.description: Name
  of the referrer source. (e.g. Google, SomeDomain.com, or Marketing Email)
paths./mail/send.post.parameters[0].schema.properties.tracking_settings.properties.ganalytics.properties.utm_source.type: string
paths./mail/send.post.parameters[0].schema.properties.tracking_settings.properties.ganalytics.properties.utm_term.description: "Used
  to identify any paid keywords.\t"
paths./mail/send.post.parameters[0].schema.properties.tracking_settings.properties.ganalytics.properties.utm_term.type: string
paths./mail/send.post.parameters[0].schema.properties.tracking_settings.properties.ganalytics.type: object
paths./mail/send.post.parameters[0].schema.properties.tracking_settings.properties.open_tracking.description: Allows
  you to track whether the email was opened or not, but including a single pixel image
  in the body of the content. When the pixel is loaded, we can log that the email
  was opened.
paths./mail/send.post.parameters[0].schema.properties.tracking_settings.properties.open_tracking.properties.enable.description: Indicates
  if this setting is enabled.
paths./mail/send.post.parameters[0].schema.properties.tracking_settings.properties.open_tracking.properties.enable.type: boolean
? paths./mail/send.post.parameters[0].schema.properties.tracking_settings.properties.open_tracking.properties.substitution_tag.description
: Allows you to specify a substitution tag that you can insert in the body of your
  email at a location that you desire. This tag will be replaced by the open tracking
  pixel.
? paths./mail/send.post.parameters[0].schema.properties.tracking_settings.properties.open_tracking.properties.substitution_tag.type
: string
paths./mail/send.post.parameters[0].schema.properties.tracking_settings.properties.open_tracking.type: object
paths./mail/send.post.parameters[0].schema.properties.tracking_settings.properties.subscription_tracking.description: Allows
  you to insert a subscription management link at the bottom of the text and html
  bodies of your email. If you would like to specify the location of the link within
  your email, you may use the substitution_tag.
? paths./mail/send.post.parameters[0].schema.properties.tracking_settings.properties.subscription_tracking.properties.enable.description
: Indicates if this setting is enabled.
paths./mail/send.post.parameters[0].schema.properties.tracking_settings.properties.subscription_tracking.properties.enable.type: boolean
? paths./mail/send.post.parameters[0].schema.properties.tracking_settings.properties.subscription_tracking.properties.html.description
: HTML to be appended to the email, with the subscription tracking link. You may control
  where the link is by using the tag <% %>
paths./mail/send.post.parameters[0].schema.properties.tracking_settings.properties.subscription_tracking.properties.html.type: string
? paths./mail/send.post.parameters[0].schema.properties.tracking_settings.properties.subscription_tracking.properties.substitution_tag.description
: 'A tag that will be replaced with the unsubscribe URL. for example: [unsubscribe_url].
  If this parameter is used, it will override both the `text` and `html` parameters.
  The URL of the link will be placed at the substitution tag’s location, with no additional
  formatting.'
? paths./mail/send.post.parameters[0].schema.properties.tracking_settings.properties.subscription_tracking.properties.substitution_tag.type
: string
? paths./mail/send.post.parameters[0].schema.properties.tracking_settings.properties.subscription_tracking.properties.text.description
: Text to be appended to the email, with the subscription tracking link. You may control
  where the link is by using the tag <% %>
paths./mail/send.post.parameters[0].schema.properties.tracking_settings.properties.subscription_tracking.properties.text.type: string
paths./mail/send.post.parameters[0].schema.properties.tracking_settings.properties.subscription_tracking.type: object
paths./mail/send.post.parameters[0].schema.properties.tracking_settings.type: object
paths./mail/send.post.parameters[0].schema.required.length: 4
paths./mail/send.post.parameters[0].schema.required[0]: personalizations
paths./mail/send.post.parameters[0].schema.required[1]: from
paths./mail/send.post.parameters[0].schema.required[2]: subject
paths./mail/send.post.parameters[0].schema.required[3]: content
paths./mail/send.post.parameters[0].schema.type: object
paths./mail/send.post.produces.length: 1
paths./mail/send.post.produces[0]: application/json
paths./mail/send.post.responses.202.description: ""
paths./mail/send.post.responses.202.schema.type: "null"
paths./mail/send.post.responses.400.description: ""
paths./mail/send.post.responses.400.schema.$ref: '#/definitions/errors'
paths./mail/send.post.responses.401.description: ""
paths./mail/send.post.responses.401.schema.$ref: '#/definitions/errors'
paths./mail/send.post.responses.413.description: ""
paths./mail/send.post.responses.413.schema.$ref: '#/definitions/errors'
paths./mail/send.post.security.length: 1
paths./mail/send.post.security[0].Authorization.length: 0
paths./mail/send.post.summary: v3 Mail Send
paths./mail/send.post.tags.length: 1
paths./mail/send.post.tags[0]: Mail Send
paths./mail_settings.get.description: |-
  **This endpoint allows you to retrieve a list of all mail settings.**

  Mail settings allow you to tell SendGrid specific things to do to every email that you send to your recipients over SendGrid’s [Web API](https://sendgrid.com/docs/API_Reference/Web_API/mail.html) or [SMTP Relay](https://sendgrid.com/docs/API_Reference/SMTP_API/index.html).
paths./mail_settings.get.operationId: GET_mail_settings
paths./mail_settings.get.parameters.length: 3
paths./mail_settings.get.parameters[0].description: The number of settings to return.
paths./mail_settings.get.parameters[0].in: query
paths./mail_settings.get.parameters[0].name: limit
paths./mail_settings.get.parameters[0].type: integer
paths./mail_settings.get.parameters[1].description: Where in the list of results to
  begin displaying settings.
paths./mail_settings.get.parameters[1].in: query
paths./mail_settings.get.parameters[1].name: offset
paths./mail_settings.get.parameters[1].type: integer
paths./mail_settings.get.parameters[2].$ref: '#/parameters/trait:onBehalfOfSubuser:on-behalf-of'
paths./mail_settings.get.produces.length: 1
paths./mail_settings.get.produces[0]: application/json
paths./mail_settings.get.responses.200.description: ""
paths./mail_settings.get.responses.200.examples.application/json.result.length: 10
paths./mail_settings.get.responses.200.examples.application/json.result[0].description: Address
  / domains that should never have email suppressed.
paths./mail_settings.get.responses.200.examples.application/json.result[0].enabled: false
paths./mail_settings.get.responses.200.examples.application/json.result[0].name: address_whitelist
paths./mail_settings.get.responses.200.examples.application/json.result[0].title: Address
  Whitelist
paths./mail_settings.get.responses.200.examples.application/json.result[1].description: Automatically
  BCC an address for every e-mail sent.
paths./mail_settings.get.responses.200.examples.application/json.result[1].enabled: false
paths./mail_settings.get.responses.200.examples.application/json.result[1].name: bcc
paths./mail_settings.get.responses.200.examples.application/json.result[1].title: BCC
paths./mail_settings.get.responses.200.examples.application/json.result[2].description: Allows
  you to automatically purge bounce records from SendGrid after a specified number
  of days.
paths./mail_settings.get.responses.200.examples.application/json.result[2].enabled: false
paths./mail_settings.get.responses.200.examples.application/json.result[2].name: bounce_purge
paths./mail_settings.get.responses.200.examples.application/json.result[2].title: Bounce
  Purge
paths./mail_settings.get.responses.200.examples.application/json.result[3].description: Controls
  notifications for events, such as bounces, clicks, and opens.
paths./mail_settings.get.responses.200.examples.application/json.result[3].enabled: true
paths./mail_settings.get.responses.200.examples.application/json.result[3].name: event_notify
paths./mail_settings.get.responses.200.examples.application/json.result[3].title: Event
  Notification
paths./mail_settings.get.responses.200.examples.application/json.result[4].description: Allows
  you to add a custom footer to outgoing email.
paths./mail_settings.get.responses.200.examples.application/json.result[4].enabled: false
paths./mail_settings.get.responses.200.examples.application/json.result[4].name: footer
paths./mail_settings.get.responses.200.examples.application/json.result[4].title: Footer
paths./mail_settings.get.responses.200.examples.application/json.result[5].description: Allows
  you to forward bounces to a specific email address.
paths./mail_settings.get.responses.200.examples.application/json.result[5].enabled: true
paths./mail_settings.get.responses.200.examples.application/json.result[5].name: forward_bounce
paths./mail_settings.get.responses.200.examples.application/json.result[5].title: Forward
  Bounce
paths./mail_settings.get.responses.200.examples.application/json.result[6].description: Allows
  for a copy of spam reports to be forwarded to an email address.
paths./mail_settings.get.responses.200.examples.application/json.result[6].enabled: false
paths./mail_settings.get.responses.200.examples.application/json.result[6].name: forward_spam
paths./mail_settings.get.responses.200.examples.application/json.result[6].title: Forward
  Spam
paths./mail_settings.get.responses.200.examples.application/json.result[7].description: Allows
  you to customize your outgoing HTML emails.
paths./mail_settings.get.responses.200.examples.application/json.result[7].enabled: true
paths./mail_settings.get.responses.200.examples.application/json.result[7].name: template
paths./mail_settings.get.responses.200.examples.application/json.result[7].title: Legacy
  Email Template
paths./mail_settings.get.responses.200.examples.application/json.result[8].description: Convert
  your plain text emails to HTML.
paths./mail_settings.get.responses.200.examples.application/json.result[8].enabled: false
paths./mail_settings.get.responses.200.examples.application/json.result[8].name: plain_content
paths./mail_settings.get.responses.200.examples.application/json.result[8].title: Plain
  Content
paths./mail_settings.get.responses.200.examples.application/json.result[9].description: Check
  outbound messages for spam content.
paths./mail_settings.get.responses.200.examples.application/json.result[9].enabled: true
paths./mail_settings.get.responses.200.examples.application/json.result[9].name: spam_check
paths./mail_settings.get.responses.200.examples.application/json.result[9].title: Spam
  Checker
paths./mail_settings.get.responses.200.schema.properties.result.description: The list
  of all mail settings.
paths./mail_settings.get.responses.200.schema.properties.result.items.properties.description.description: A
  description of the mail setting.
paths./mail_settings.get.responses.200.schema.properties.result.items.properties.description.type: string
paths./mail_settings.get.responses.200.schema.properties.result.items.properties.enabled.description: Indicates
  if this mail setting is currently enabled.
paths./mail_settings.get.responses.200.schema.properties.result.items.properties.enabled.type: boolean
paths./mail_settings.get.responses.200.schema.properties.result.items.properties.name.description: The
  name of the mail setting.
paths./mail_settings.get.responses.200.schema.properties.result.items.properties.name.type: string
paths./mail_settings.get.responses.200.schema.properties.result.items.properties.title.description: The
  title of the mail setting.
paths./mail_settings.get.responses.200.schema.properties.result.items.properties.title.type: string
paths./mail_settings.get.responses.200.schema.properties.result.items.required.length: 4
paths./mail_settings.get.responses.200.schema.properties.result.items.required[0]: title
paths./mail_settings.get.responses.200.schema.properties.result.items.required[1]: enabled
paths./mail_settings.get.responses.200.schema.properties.result.items.required[2]: name
paths./mail_settings.get.responses.200.schema.properties.result.items.required[3]: description
paths./mail_settings.get.responses.200.schema.properties.result.items.type: object
paths./mail_settings.get.responses.200.schema.properties.result.type: array
paths./mail_settings.get.responses.200.schema.required.length: 1
paths./mail_settings.get.responses.200.schema.required[0]: result
paths./mail_settings.get.responses.200.schema.type: object
paths./mail_settings.get.security.length: 1
paths./mail_settings.get.security[0].Authorization.length: 0
paths./mail_settings.get.summary: Retrieve all mail settings
paths./mail_settings.get.tags.length: 1
paths./mail_settings.get.tags[0]: Settings - Mail
paths./mail_settings/address_whitelist.get.description: |-
  **This endpoint allows you to retrieve your current email address whitelist settings.**

  The address whitelist setting whitelists a specified email address or domain for which mail should never be suppressed. For example, you own the domain “example.com,” and one or more of your recipients use email@example.com addresses, by placing example.com in the address whitelist setting, all bounces, blocks, and unsubscribes logged for that domain will be ignored and sent as if under normal sending conditions.

  Mail settings allow you to tell SendGrid specific things to do to every email that you send to your recipients over SendGrid’s [Web API](https://sendgrid.com/docs/API_Reference/Web_API/mail.html) or [SMTP Relay](https://sendgrid.com/docs/API_Reference/SMTP_API/index.html).
paths./mail_settings/address_whitelist.get.operationId: GET_mail_settings-address_whitelist
paths./mail_settings/address_whitelist.get.parameters.length: 1
paths./mail_settings/address_whitelist.get.parameters[0].$ref: '#/parameters/trait:onBehalfOfSubuser:on-behalf-of'
paths./mail_settings/address_whitelist.get.produces.length: 1
paths./mail_settings/address_whitelist.get.produces[0]: application/json
paths./mail_settings/address_whitelist.get.responses.200.description: ""
paths./mail_settings/address_whitelist.get.responses.200.examples.application/json.enabled: false
paths./mail_settings/address_whitelist.get.responses.200.examples.application/json.list.length: 1
paths./mail_settings/address_whitelist.get.responses.200.examples.application/json.list[0]: example.com
paths./mail_settings/address_whitelist.get.responses.200.schema.$ref: '#/definitions/mail_settings_address_whitelabel'
paths./mail_settings/address_whitelist.get.security.length: 1
paths./mail_settings/address_whitelist.get.security[0].Authorization.length: 0
paths./mail_settings/address_whitelist.get.summary: Retrieve address whitelist mail
  settings
paths./mail_settings/address_whitelist.get.tags.length: 1
paths./mail_settings/address_whitelist.get.tags[0]: Settings - Mail
paths./mail_settings/address_whitelist.patch.consumes.length: 1
paths./mail_settings/address_whitelist.patch.consumes[0]: application/json
paths./mail_settings/address_whitelist.patch.description: |-
  **This endpoint allows you to update your current email address whitelist settings.**

  The address whitelist setting whitelists a specified email address or domain for which mail should never be suppressed. For example, you own the domain “example.com,” and one or more of your recipients use email@example.com addresses, by placing example.com in the address whitelist setting, all bounces, blocks, and unsubscribes logged for that domain will be ignored and sent as if under normal sending conditions.

  Mail settings allow you to tell SendGrid specific things to do to every email that you send to your recipients over SendGrid’s [Web API](https://sendgrid.com/docs/API_Reference/Web_API/mail.html) or [SMTP Relay](https://sendgrid.com/docs/API_Reference/SMTP_API/index.html).
paths./mail_settings/address_whitelist.patch.operationId: PATCH_mail_settings-address_whitelist
paths./mail_settings/address_whitelist.patch.parameters.length: 2
paths./mail_settings/address_whitelist.patch.parameters[0].in: body
paths./mail_settings/address_whitelist.patch.parameters[0].name: body
paths./mail_settings/address_whitelist.patch.parameters[0].schema.example.enabled: true
paths./mail_settings/address_whitelist.patch.parameters[0].schema.example.list.length: 2
paths./mail_settings/address_whitelist.patch.parameters[0].schema.example.list[0]: email1@example.com
paths./mail_settings/address_whitelist.patch.parameters[0].schema.example.list[1]: example.com
paths./mail_settings/address_whitelist.patch.parameters[0].schema.properties.enabled.description: Indicates
  if your email address whitelist is enabled.
paths./mail_settings/address_whitelist.patch.parameters[0].schema.properties.enabled.type: boolean
paths./mail_settings/address_whitelist.patch.parameters[0].schema.properties.list.description: Either
  a single email address that you want whitelisted or a domain, for which all email
  addresses belonging to this domain will be whitelisted.
paths./mail_settings/address_whitelist.patch.parameters[0].schema.properties.list.items.type: string
paths./mail_settings/address_whitelist.patch.parameters[0].schema.properties.list.type: array
paths./mail_settings/address_whitelist.patch.parameters[0].schema.type: object
paths./mail_settings/address_whitelist.patch.parameters[1].$ref: '#/parameters/trait:onBehalfOfSubuser:on-behalf-of'
paths./mail_settings/address_whitelist.patch.produces.length: 1
paths./mail_settings/address_whitelist.patch.produces[0]: application/json
paths./mail_settings/address_whitelist.patch.responses.200.description: ""
paths./mail_settings/address_whitelist.patch.responses.200.examples.application/json.enabled: true
paths./mail_settings/address_whitelist.patch.responses.200.examples.application/json.list.length: 1
paths./mail_settings/address_whitelist.patch.responses.200.examples.application/json.list[0]: email1@example.com
paths./mail_settings/address_whitelist.patch.responses.200.schema.$ref: '#/definitions/mail_settings_address_whitelabel'
paths./mail_settings/address_whitelist.patch.security.length: 1
paths./mail_settings/address_whitelist.patch.security[0].Authorization.length: 0
paths./mail_settings/address_whitelist.patch.summary: Update address whitelist mail
  settings
paths./mail_settings/address_whitelist.patch.tags.length: 1
paths./mail_settings/address_whitelist.patch.tags[0]: Settings - Mail
paths./mail_settings/bcc.get.description: |-
  **This endpoint allows you to retrieve your current BCC mail settings.**

  When the BCC mail setting is enabled, SendGrid will automatically send a blind carbon copy (BCC) to an address for every email sent without adding that address to the header. Please note that only one email address may be entered in this field, if you wish to distribute BCCs to multiple addresses you will need to create a distribution group or use forwarding rules.

  Mail settings allow you to tell SendGrid specific things to do to every email that you send to your recipients over SendGrid’s [Web API](https://sendgrid.com/docs/API_Reference/Web_API/mail.html) or [SMTP Relay](https://sendgrid.com/docs/API_Reference/SMTP_API/index.html).
paths./mail_settings/bcc.get.operationId: GET_mail_settings-bcc
paths./mail_settings/bcc.get.parameters.length: 1
paths./mail_settings/bcc.get.parameters[0].$ref: '#/parameters/trait:onBehalfOfSubuser:on-behalf-of'
paths./mail_settings/bcc.get.produces.length: 1
paths./mail_settings/bcc.get.produces[0]: application/json
paths./mail_settings/bcc.get.responses.200.description: ""
paths./mail_settings/bcc.get.responses.200.examples.application/json.email: example@example.com
paths./mail_settings/bcc.get.responses.200.examples.application/json.enabled: false
paths./mail_settings/bcc.get.responses.200.schema.$ref: '#/definitions/mail_settings_bcc'
paths./mail_settings/bcc.get.security.length: 1
paths./mail_settings/bcc.get.security[0].Authorization.length: 0
paths./mail_settings/bcc.get.summary: Retrieve all BCC mail settings
paths./mail_settings/bcc.get.tags.length: 1
paths./mail_settings/bcc.get.tags[0]: Settings - Mail
paths./mail_settings/bcc.patch.consumes.length: 1
paths./mail_settings/bcc.patch.consumes[0]: application/json
paths./mail_settings/bcc.patch.description: |-
  **This endpoint allows you to update your current BCC mail settings.**

  When the BCC mail setting is enabled, SendGrid will automatically send a blind carbon copy (BCC) to an address for every email sent without adding that address to the header. Please note that only one email address may be entered in this field, if you wish to distribute BCCs to multiple addresses you will need to create a distribution group or use forwarding rules.

  Mail settings allow you to tell SendGrid specific things to do to every email that you send to your recipients over SendGrid’s [Web API](https://sendgrid.com/docs/API_Reference/Web_API/mail.html) or [SMTP Relay](https://sendgrid.com/docs/API_Reference/SMTP_API/index.html).
paths./mail_settings/bcc.patch.operationId: PATCH_mail_settings-bcc
paths./mail_settings/bcc.patch.parameters.length: 2
paths./mail_settings/bcc.patch.parameters[0].in: body
paths./mail_settings/bcc.patch.parameters[0].name: body
paths./mail_settings/bcc.patch.parameters[0].schema.$ref: '#/definitions/mail_settings_patch'
paths./mail_settings/bcc.patch.parameters[0].schema.example.email: email@example.com
paths./mail_settings/bcc.patch.parameters[0].schema.example.enabled: false
paths./mail_settings/bcc.patch.parameters[1].$ref: '#/parameters/trait:onBehalfOfSubuser:on-behalf-of'
paths./mail_settings/bcc.patch.produces.length: 1
paths./mail_settings/bcc.patch.produces[0]: application/json
paths./mail_settings/bcc.patch.responses.200.description: ""
paths./mail_settings/bcc.patch.responses.200.examples.application/json.email: example@example.com
paths./mail_settings/bcc.patch.responses.200.examples.application/json.enabled: false
paths./mail_settings/bcc.patch.responses.200.schema.$ref: '#/definitions/mail_settings_patch'
paths./mail_settings/bcc.patch.security.length: 1
paths./mail_settings/bcc.patch.security[0].Authorization.length: 0
paths./mail_settings/bcc.patch.summary: Update BCC mail settings
paths./mail_settings/bcc.patch.tags.length: 1
paths./mail_settings/bcc.patch.tags[0]: Settings - Mail
paths./mail_settings/bounce_purge.get.description: |-
  **This endpoint allows you to retrieve your current bounce purge settings.**

  This setting allows you to set a schedule for SendGrid to automatically delete contacts from your soft and hard bounce suppression lists.

  Mail settings allow you to tell SendGrid specific things to do to every email that you send to your recipients over SendGrid’s [Web API](https://sendgrid.com/docs/API_Reference/Web_API/mail.html) or [SMTP Relay](https://sendgrid.com/docs/API_Reference/SMTP_API/index.html).
paths./mail_settings/bounce_purge.get.operationId: GET_mail_settings-bounce_purge
paths./mail_settings/bounce_purge.get.parameters.length: 1
paths./mail_settings/bounce_purge.get.parameters[0].$ref: '#/parameters/trait:onBehalfOfSubuser:on-behalf-of'
paths./mail_settings/bounce_purge.get.produces.length: 1
paths./mail_settings/bounce_purge.get.produces[0]: application/json
paths./mail_settings/bounce_purge.get.responses.200.description: ""
paths./mail_settings/bounce_purge.get.responses.200.examples.application/json.enabled: false
paths./mail_settings/bounce_purge.get.responses.200.examples.application/json.soft_bounces: 1234
paths./mail_settings/bounce_purge.get.responses.200.schema.$ref: '#/definitions/mail_settings_bounce_purge'
paths./mail_settings/bounce_purge.get.security.length: 1
paths./mail_settings/bounce_purge.get.security[0].Authorization.length: 0
paths./mail_settings/bounce_purge.get.summary: Retrieve bounce purge mail settings
paths./mail_settings/bounce_purge.get.tags.length: 1
paths./mail_settings/bounce_purge.get.tags[0]: Settings - Mail
paths./mail_settings/bounce_purge.patch.consumes.length: 1
paths./mail_settings/bounce_purge.patch.consumes[0]: application/json
paths./mail_settings/bounce_purge.patch.description: |-
  **This endpoint allows you to update your current bounce purge settings.**

  This setting allows you to set a schedule for SendGrid to automatically delete contacts from your soft and hard bounce suppression lists.

  Mail settings allow you to tell SendGrid specific things to do to every email that you send to your recipients over SendGrid’s [Web API](https://sendgrid.com/docs/API_Reference/Web_API/mail.html) or [SMTP Relay](https://sendgrid.com/docs/API_Reference/SMTP_API/index.html).
paths./mail_settings/bounce_purge.patch.operationId: PATCH_mail_settings-bounce_purge
paths./mail_settings/bounce_purge.patch.parameters.length: 2
paths./mail_settings/bounce_purge.patch.parameters[0].in: body
paths./mail_settings/bounce_purge.patch.parameters[0].name: body
paths./mail_settings/bounce_purge.patch.parameters[0].schema.$ref: '#/definitions/mail_settings_bounce_purge'
paths./mail_settings/bounce_purge.patch.parameters[0].schema.example.enabled: true
paths./mail_settings/bounce_purge.patch.parameters[0].schema.example.hard_bounces: 5
paths./mail_settings/bounce_purge.patch.parameters[0].schema.example.soft_bounces: 5
paths./mail_settings/bounce_purge.patch.parameters[1].$ref: '#/parameters/trait:onBehalfOfSubuser:on-behalf-of'
paths./mail_settings/bounce_purge.patch.produces.length: 1
paths./mail_settings/bounce_purge.patch.produces[0]: application/json
paths./mail_settings/bounce_purge.patch.responses.200.description: ""
paths./mail_settings/bounce_purge.patch.responses.200.examples.application/json.enabled: false
paths./mail_settings/bounce_purge.patch.responses.200.schema.$ref: '#/definitions/mail_settings_bounce_purge'
paths./mail_settings/bounce_purge.patch.security.length: 1
paths./mail_settings/bounce_purge.patch.security[0].Authorization.length: 0
paths./mail_settings/bounce_purge.patch.summary: Update bounce purge mail settings
paths./mail_settings/bounce_purge.patch.tags.length: 1
paths./mail_settings/bounce_purge.patch.tags[0]: Settings - Mail
paths./mail_settings/footer.get.description: |-
  **This endpoint allows you to retrieve your current Footer mail settings.**

  The footer setting will insert a custom footer at the bottom of the text and HTML bodies. Use the embedded HTML editor and plain text entry fields to create the content of the footers to be inserted into your emails.

  Mail settings allow you to tell SendGrid specific things to do to every email that you send to your recipients over SendGrid’s [Web API](https://sendgrid.com/docs/API_Reference/Web_API/mail.html) or [SMTP Relay](https://sendgrid.com/docs/API_Reference/SMTP_API/index.html).
paths./mail_settings/footer.get.operationId: GET_mail_settings-footer
paths./mail_settings/footer.get.parameters.length: 1
paths./mail_settings/footer.get.parameters[0].$ref: '#/parameters/trait:onBehalfOfSubuser:on-behalf-of'
paths./mail_settings/footer.get.produces.length: 1
paths./mail_settings/footer.get.produces[0]: application/json
paths./mail_settings/footer.get.responses.200.description: ""
paths./mail_settings/footer.get.responses.200.examples.application/json.enabled: true
paths./mail_settings/footer.get.responses.200.examples.application/json.html_content: Example
  HTML content
paths./mail_settings/footer.get.responses.200.examples.application/json.plain_content: Example
  plain content
paths./mail_settings/footer.get.responses.200.schema.$ref: '#/definitions/mail_settings_footer'
paths./mail_settings/footer.get.security.length: 1
paths./mail_settings/footer.get.security[0].Authorization.length: 0
paths./mail_settings/footer.get.summary: Retrieve footer mail settings
paths./mail_settings/footer.get.tags.length: 1
paths./mail_settings/footer.get.tags[0]: Settings - Mail
paths./mail_settings/footer.patch.consumes.length: 1
paths./mail_settings/footer.patch.consumes[0]: application/json
paths./mail_settings/footer.patch.description: |-
  **This endpoint allows you to update your current Footer mail settings.**

  The footer setting will insert a custom footer at the bottom of the text and HTML bodies. Use the embedded HTML editor and plain text entry fields to create the content of the footers to be inserted into your emails.

  Mail settings allow you to tell SendGrid specific things to do to every email that you send to your recipients over SendGrid’s [Web API](https://sendgrid.com/docs/API_Reference/Web_API/mail.html) or [SMTP Relay](https://sendgrid.com/docs/API_Reference/SMTP_API/index.html).
paths./mail_settings/footer.patch.operationId: PATCH_mail_settings-footer
paths./mail_settings/footer.patch.parameters.length: 2
paths./mail_settings/footer.patch.parameters[0].in: body
paths./mail_settings/footer.patch.parameters[0].name: body
paths./mail_settings/footer.patch.parameters[0].schema.$ref: '#/definitions/mail_settings_footer'
paths./mail_settings/footer.patch.parameters[0].schema.example.enabled: true
paths./mail_settings/footer.patch.parameters[0].schema.example.html_content: '...'
paths./mail_settings/footer.patch.parameters[0].schema.example.plain_content: '...'
paths./mail_settings/footer.patch.parameters[1].$ref: '#/parameters/trait:onBehalfOfSubuser:on-behalf-of'
paths./mail_settings/footer.patch.produces.length: 1
paths./mail_settings/footer.patch.produces[0]: application/json
paths./mail_settings/footer.patch.responses.200.description: ""
paths./mail_settings/footer.patch.responses.200.examples.application/json.enabled: true
paths./mail_settings/footer.patch.responses.200.examples.application/json.html_content: Example
  HTML content
paths./mail_settings/footer.patch.responses.200.examples.application/json.plain_content: Example
  plain content
paths./mail_settings/footer.patch.responses.200.schema.$ref: '#/definitions/mail_settings_footer'
paths./mail_settings/footer.patch.security.length: 1
paths./mail_settings/footer.patch.security[0].Authorization.length: 0
paths./mail_settings/footer.patch.summary: Update footer mail settings
paths./mail_settings/footer.patch.tags.length: 1
paths./mail_settings/footer.patch.tags[0]: Settings - Mail
paths./mail_settings/forward_bounce.get.description: |-
  **This endpoint allows you to retrieve your current bounce forwarding mail settings.**

  Activating this setting allows you to specify an email address to which bounce reports are forwarded.

  Mail settings allow you to tell SendGrid specific things to do to every email that you send to your recipients over SendGrid’s [Web API](https://sendgrid.com/docs/API_Reference/Web_API/mail.html) or [SMTP Relay](https://sendgrid.com/docs/API_Reference/SMTP_API/index.html).
paths./mail_settings/forward_bounce.get.operationId: GET_mail_settings-forward_bounce
paths./mail_settings/forward_bounce.get.parameters.length: 1
paths./mail_settings/forward_bounce.get.parameters[0].$ref: '#/parameters/trait:onBehalfOfSubuser:on-behalf-of'
paths./mail_settings/forward_bounce.get.produces.length: 1
paths./mail_settings/forward_bounce.get.produces[0]: application/json
paths./mail_settings/forward_bounce.get.responses.200.description: ""
paths./mail_settings/forward_bounce.get.responses.200.examples.application/json.enabled: false
paths./mail_settings/forward_bounce.get.responses.200.schema.$ref: '#/definitions/mail_settings_forward_bounce'
paths./mail_settings/forward_bounce.get.security.length: 1
paths./mail_settings/forward_bounce.get.security[0].Authorization.length: 0
paths./mail_settings/forward_bounce.get.summary: Retrieve forward bounce mail settings
paths./mail_settings/forward_bounce.get.tags.length: 1
paths./mail_settings/forward_bounce.get.tags[0]: Settings - Mail
paths./mail_settings/forward_bounce.patch.consumes.length: 1
paths./mail_settings/forward_bounce.patch.consumes[0]: application/json
paths./mail_settings/forward_bounce.patch.description: |-
  **This endpoint allows you to update your current bounce forwarding mail settings.**

  Activating this setting allows you to specify an email address to which bounce reports are forwarded.

  Mail settings allow you to tell SendGrid specific things to do to every email that you send to your recipients over SendGrid’s [Web API](https://sendgrid.com/docs/API_Reference/Web_API/mail.html) or [SMTP Relay](https://sendgrid.com/docs/API_Reference/SMTP_API/index.html).
paths./mail_settings/forward_bounce.patch.operationId: PATCH_mail_settings-forward_bounce
paths./mail_settings/forward_bounce.patch.parameters.length: 2
paths./mail_settings/forward_bounce.patch.parameters[0].in: body
paths./mail_settings/forward_bounce.patch.parameters[0].name: body
paths./mail_settings/forward_bounce.patch.parameters[0].schema.$ref: '#/definitions/mail_settings_forward_bounce'
paths./mail_settings/forward_bounce.patch.parameters[0].schema.example.email: example@example.com
paths./mail_settings/forward_bounce.patch.parameters[0].schema.example.enabled: true
paths./mail_settings/forward_bounce.patch.parameters[1].$ref: '#/parameters/trait:onBehalfOfSubuser:on-behalf-of'
paths./mail_settings/forward_bounce.patch.produces.length: 1
paths./mail_settings/forward_bounce.patch.produces[0]: application/json
paths./mail_settings/forward_bounce.patch.responses.200.description: ""
paths./mail_settings/forward_bounce.patch.responses.200.examples.application/json.email: ""
paths./mail_settings/forward_bounce.patch.responses.200.examples.application/json.enabled: true
paths./mail_settings/forward_bounce.patch.responses.200.schema.$ref: '#/definitions/mail_settings_forward_bounce'
paths./mail_settings/forward_bounce.patch.security.length: 1
paths./mail_settings/forward_bounce.patch.security[0].Authorization.length: 0
paths./mail_settings/forward_bounce.patch.summary: Update forward bounce mail settings
paths./mail_settings/forward_bounce.patch.tags.length: 1
paths./mail_settings/forward_bounce.patch.tags[0]: Settings - Mail
paths./mail_settings/forward_spam.get.description: |-
  **This endpoint allows you to retrieve your current Forward Spam mail settings.**

  Enabling the forward spam setting allows you to specify an email address to which spam reports will be forwarded.

  Mail settings allow you to tell SendGrid specific things to do to every email that you send to your recipients over SendGrid’s [Web API](https://sendgrid.com/docs/API_Reference/Web_API/mail.html) or [SMTP Relay](https://sendgrid.com/docs/API_Reference/SMTP_API/index.html).
paths./mail_settings/forward_spam.get.operationId: GET_mail_settings-forward_spam
paths./mail_settings/forward_spam.get.parameters.length: 1
paths./mail_settings/forward_spam.get.parameters[0].$ref: '#/parameters/trait:onBehalfOfSubuser:on-behalf-of'
paths./mail_settings/forward_spam.get.produces.length: 1
paths./mail_settings/forward_spam.get.produces[0]: application/json
paths./mail_settings/forward_spam.get.responses.200.description: ""
paths./mail_settings/forward_spam.get.responses.200.examples.application/json.email: ""
paths./mail_settings/forward_spam.get.responses.200.examples.application/json.enabled: true
paths./mail_settings/forward_spam.get.responses.200.schema.$ref: '#/definitions/mail_settings_forward_spam'
paths./mail_settings/forward_spam.get.security.length: 1
paths./mail_settings/forward_spam.get.security[0].Authorization.length: 0
paths./mail_settings/forward_spam.get.summary: Retrieve forward spam mail settings
paths./mail_settings/forward_spam.get.tags.length: 1
paths./mail_settings/forward_spam.get.tags[0]: Settings - Mail
paths./mail_settings/forward_spam.patch.consumes.length: 1
paths./mail_settings/forward_spam.patch.consumes[0]: application/json
paths./mail_settings/forward_spam.patch.description: |-
  **This endpoint allows you to update your current Forward Spam mail settings.**

  Enabling the forward spam setting allows you to specify an email address to which spam reports will be forwarded.

  Mail settings allow you to tell SendGrid specific things to do to every email that you send to your recipients over SendGrid’s [Web API](https://sendgrid.com/docs/API_Reference/Web_API/mail.html) or [SMTP Relay](https://sendgrid.com/docs/API_Reference/SMTP_API/index.html).
paths./mail_settings/forward_spam.patch.operationId: PATCH_mail_settings-forward_spam
paths./mail_settings/forward_spam.patch.parameters.length: 2
paths./mail_settings/forward_spam.patch.parameters[0].in: body
paths./mail_settings/forward_spam.patch.parameters[0].name: body
paths./mail_settings/forward_spam.patch.parameters[0].schema.$ref: '#/definitions/mail_settings_forward_spam'
paths./mail_settings/forward_spam.patch.parameters[0].schema.example.email: ""
paths./mail_settings/forward_spam.patch.parameters[0].schema.example.enabled: false
paths./mail_settings/forward_spam.patch.parameters[1].$ref: '#/parameters/trait:onBehalfOfSubuser:on-behalf-of'
paths./mail_settings/forward_spam.patch.produces.length: 1
paths./mail_settings/forward_spam.patch.produces[0]: application/json
paths./mail_settings/forward_spam.patch.responses.200.description: ""
paths./mail_settings/forward_spam.patch.responses.200.examples.application/json.email: ""
paths./mail_settings/forward_spam.patch.responses.200.examples.application/json.enabled: false
paths./mail_settings/forward_spam.patch.responses.200.schema.$ref: '#/definitions/mail_settings_forward_spam'
paths./mail_settings/forward_spam.patch.security.length: 1
paths./mail_settings/forward_spam.patch.security[0].Authorization.length: 0
paths./mail_settings/forward_spam.patch.summary: Update forward spam mail settings
paths./mail_settings/forward_spam.patch.tags.length: 1
paths./mail_settings/forward_spam.patch.tags[0]: Settings - Mail
paths./mail_settings/plain_content.get.description: |-
  **This endpoint allows you to retrieve your current Plain Content mail settings.**

  The plain content setting will automatically convert any plain text emails that you send to HTML before sending.

  Mail settings allow you to tell SendGrid specific things to do to every email that you send to your recipients over SendGrid’s [Web API](https://sendgrid.com/docs/API_Reference/Web_API/mail.html) or [SMTP Relay](https://sendgrid.com/docs/API_Reference/SMTP_API/index.html).
paths./mail_settings/plain_content.get.operationId: GET_mail_settings-plain_content
paths./mail_settings/plain_content.get.parameters.length: 1
paths./mail_settings/plain_content.get.parameters[0].$ref: '#/parameters/trait:onBehalfOfSubuser:on-behalf-of'
paths./mail_settings/plain_content.get.produces.length: 1
paths./mail_settings/plain_content.get.produces[0]: application/json
paths./mail_settings/plain_content.get.responses.200.description: ""
paths./mail_settings/plain_content.get.responses.200.examples.application/json.enabled: false
paths./mail_settings/plain_content.get.responses.200.schema.properties.enabled.description: Indicates
  if the Plain Content mail setting is enabled.
paths./mail_settings/plain_content.get.responses.200.schema.properties.enabled.type: boolean
paths./mail_settings/plain_content.get.responses.200.schema.type: object
paths./mail_settings/plain_content.get.security.length: 1
paths./mail_settings/plain_content.get.security[0].Authorization.length: 0
paths./mail_settings/plain_content.get.summary: Retrieve plain content mail settings
paths./mail_settings/plain_content.get.tags.length: 1
paths./mail_settings/plain_content.get.tags[0]: Settings - Mail
paths./mail_settings/plain_content.patch.consumes.length: 1
paths./mail_settings/plain_content.patch.consumes[0]: application/json
paths./mail_settings/plain_content.patch.description: |-
  **This endpoint allows you to update your current Plain Content mail settings.**

  The plain content setting will automatically convert any plain text emails that you send to HTML before sending.

  Mail settings allow you to tell SendGrid specific things to do to every email that you send to your recipients over SendGrid’s [Web API](https://sendgrid.com/docs/API_Reference/Web_API/mail.html) or [SMTP Relay](https://sendgrid.com/docs/API_Reference/SMTP_API/index.html).
paths./mail_settings/plain_content.patch.operationId: PATCH_mail_settings-plain_content
paths./mail_settings/plain_content.patch.parameters.length: 2
paths./mail_settings/plain_content.patch.parameters[0].in: body
paths./mail_settings/plain_content.patch.parameters[0].name: body
paths./mail_settings/plain_content.patch.parameters[0].schema.example.enabled: false
paths./mail_settings/plain_content.patch.parameters[0].schema.properties.enabled.description: The
  new setting you would like to use for your Plain Content mail setting.
paths./mail_settings/plain_content.patch.parameters[0].schema.properties.enabled.type: boolean
paths./mail_settings/plain_content.patch.parameters[0].schema.type: object
paths./mail_settings/plain_content.patch.parameters[1].$ref: '#/parameters/trait:onBehalfOfSubuser:on-behalf-of'
paths./mail_settings/plain_content.patch.produces.length: 1
paths./mail_settings/plain_content.patch.produces[0]: application/json
paths./mail_settings/plain_content.patch.responses.200.description: ""
paths./mail_settings/plain_content.patch.responses.200.examples.application/json.enabled: false
paths./mail_settings/plain_content.patch.responses.200.schema.properties.enabled.description: Indicates
  if your Plain Content mail setting is enabled.
paths./mail_settings/plain_content.patch.responses.200.schema.properties.enabled.type: boolean
paths./mail_settings/plain_content.patch.responses.200.schema.type: object
paths./mail_settings/plain_content.patch.security.length: 1
paths./mail_settings/plain_content.patch.security[0].Authorization.length: 0
paths./mail_settings/plain_content.patch.summary: Update plain content mail settings
paths./mail_settings/plain_content.patch.tags.length: 1
paths./mail_settings/plain_content.patch.tags[0]: Settings - Mail
paths./mail_settings/spam_check.get.description: |-
  **This endpoint allows you to retrieve your current Spam Checker mail settings.**

  The spam checker filter notifies you when emails are detected that exceed a predefined spam threshold.

  Mail settings allow you to tell SendGrid specific things to do to every email that you send to your recipients over SendGrid’s [Web API](https://sendgrid.com/docs/API_Reference/Web_API/mail.html) or [SMTP Relay](https://sendgrid.com/docs/API_Reference/SMTP_API/index.html).
paths./mail_settings/spam_check.get.operationId: GET_mail_settings-spam_check
paths./mail_settings/spam_check.get.parameters.length: 1
paths./mail_settings/spam_check.get.parameters[0].$ref: '#/parameters/trait:onBehalfOfSubuser:on-behalf-of'
paths./mail_settings/spam_check.get.produces.length: 1
paths./mail_settings/spam_check.get.produces[0]: application/json
paths./mail_settings/spam_check.get.responses.200.description: ""
paths./mail_settings/spam_check.get.responses.200.examples.application/json.enabled: false
paths./mail_settings/spam_check.get.responses.200.examples.application/json.max_score: 6
paths./mail_settings/spam_check.get.responses.200.examples.application/json.url: http://example.com
paths./mail_settings/spam_check.get.responses.200.schema.$ref: '#/definitions/mail_settings_spam_check'
paths./mail_settings/spam_check.get.security.length: 1
paths./mail_settings/spam_check.get.security[0].Authorization.length: 0
paths./mail_settings/spam_check.get.summary: Retrieve spam check mail settings
paths./mail_settings/spam_check.get.tags.length: 1
paths./mail_settings/spam_check.get.tags[0]: Settings - Mail
paths./mail_settings/spam_check.patch.consumes.length: 1
paths./mail_settings/spam_check.patch.consumes[0]: application/json
paths./mail_settings/spam_check.patch.description: |-
  **This endpoint allows you to update your current spam checker mail settings.**

  The spam checker filter notifies you when emails are detected that exceed a predefined spam threshold.

  Mail settings allow you to tell SendGrid specific things to do to every email that you send to your recipients over SendGrid’s [Web API](https://sendgrid.com/docs/API_Reference/Web_API/mail.html) or [SMTP Relay](https://sendgrid.com/docs/API_Reference/SMTP_API/index.html).
paths./mail_settings/spam_check.patch.operationId: PATCH_mail_settings-spam_check
paths./mail_settings/spam_check.patch.parameters.length: 2
paths./mail_settings/spam_check.patch.parameters[0].in: body
paths./mail_settings/spam_check.patch.parameters[0].name: body
paths./mail_settings/spam_check.patch.parameters[0].schema.example.enabled: true
paths./mail_settings/spam_check.patch.parameters[0].schema.example.max_score: 5
paths./mail_settings/spam_check.patch.parameters[0].schema.example.url: url
paths./mail_settings/spam_check.patch.parameters[0].schema.properties.enabled.description: Indicates
  if you want the spam check mail setting to be enabled or not.
paths./mail_settings/spam_check.patch.parameters[0].schema.properties.enabled.type: boolean
paths./mail_settings/spam_check.patch.parameters[0].schema.properties.max_score.default: 5
paths./mail_settings/spam_check.patch.parameters[0].schema.properties.max_score.description: The
  new max score, or spam threshold that you would like to set for the spam checker.
paths./mail_settings/spam_check.patch.parameters[0].schema.properties.max_score.maximum: 10
paths./mail_settings/spam_check.patch.parameters[0].schema.properties.max_score.minimum: 1
paths./mail_settings/spam_check.patch.parameters[0].schema.properties.max_score.type: integer
paths./mail_settings/spam_check.patch.parameters[0].schema.properties.url.description: The
  Inbound Parse URL where you would like your spam reports to be sent to.
paths./mail_settings/spam_check.patch.parameters[0].schema.properties.url.type: string
paths./mail_settings/spam_check.patch.parameters[0].schema.type: object
paths./mail_settings/spam_check.patch.parameters[1].$ref: '#/parameters/trait:onBehalfOfSubuser:on-behalf-of'
paths./mail_settings/spam_check.patch.produces.length: 1
paths./mail_settings/spam_check.patch.produces[0]: application/json
paths./mail_settings/spam_check.patch.responses.200.description: ""
paths./mail_settings/spam_check.patch.responses.200.examples.application/json.enabled: false
paths./mail_settings/spam_check.patch.responses.200.examples.application/json.max_score: 6
paths./mail_settings/spam_check.patch.responses.200.examples.application/json.url: http://example.com
paths./mail_settings/spam_check.patch.responses.200.schema.$ref: '#/definitions/mail_settings_spam_check'
paths./mail_settings/spam_check.patch.security.length: 1
paths./mail_settings/spam_check.patch.security[0].Authorization.length: 0
paths./mail_settings/spam_check.patch.summary: Update spam check mail settings
paths./mail_settings/spam_check.patch.tags.length: 1
paths./mail_settings/spam_check.patch.tags[0]: Settings - Mail
paths./mail_settings/template.get.description: "**This endpoint allows you to retrieve
  your current legacy email template settings.**\n\nThis setting refers to our original
  email templates. We currently support more fully featured [transactional templates](https://sendgrid.com/docs/User_Guide/Transactional_Templates/index.html).
  \n\nThe legacy email template setting wraps an HTML template around your email content.
  This can be useful for sending out marketing email and/or other HTML formatted messages.\n\nMail
  settings allow you to tell SendGrid specific things to do to every email that you
  send to your recipients over SendGrid’s [Web API](https://sendgrid.com/docs/API_Reference/Web_API/mail.html)
  or [SMTP Relay](https://sendgrid.com/docs/API_Reference/SMTP_API/index.html)."
paths./mail_settings/template.get.operationId: GET_mail_settings-template
paths./mail_settings/template.get.parameters.length: 1
paths./mail_settings/template.get.parameters[0].$ref: '#/parameters/trait:onBehalfOfSubuser:on-behalf-of'
paths./mail_settings/template.get.produces.length: 1
paths./mail_settings/template.get.produces[0]: application/json
paths./mail_settings/template.get.responses.200.description: ""
paths./mail_settings/template.get.responses.200.examples.application/json.enabled: false
paths./mail_settings/template.get.responses.200.examples.application/json.html_content: |
  <p><% body %>Example</p>
paths./mail_settings/template.get.responses.200.schema.$ref: '#/definitions/mail_settings_template'
paths./mail_settings/template.get.security.length: 1
paths./mail_settings/template.get.security[0].Authorization.length: 0
paths./mail_settings/template.get.summary: Retrieve legacy template mail settings
paths./mail_settings/template.get.tags.length: 1
paths./mail_settings/template.get.tags[0]: Settings - Mail
paths./mail_settings/template.patch.consumes.length: 1
paths./mail_settings/template.patch.consumes[0]: application/json
paths./mail_settings/template.patch.description: "**This endpoint allows you to update
  your current legacy email template settings.**\n\nThis setting refers to our original
  email templates. We currently support more fully featured [transactional templates](https://sendgrid.com/docs/User_Guide/Transactional_Templates/index.html).
  \n\nThe legacy email template setting wraps an HTML template around your email content.
  This can be useful for sending out marketing email and/or other HTML formatted messages.\n\nMail
  settings allow you to tell SendGrid specific things to do to every email that you
  send to your recipients over SendGrid’s [Web API](https://sendgrid.com/docs/API_Reference/Web_API/mail.html)
  or [SMTP Relay](https://sendgrid.com/docs/API_Reference/SMTP_API/index.html)."
paths./mail_settings/template.patch.operationId: PATCH_mail_settings-template
paths./mail_settings/template.patch.parameters.length: 2
paths./mail_settings/template.patch.parameters[0].in: body
paths./mail_settings/template.patch.parameters[0].name: body
paths./mail_settings/template.patch.parameters[0].schema.example.enabled: true
paths./mail_settings/template.patch.parameters[0].schema.example.html_content: <%
  body %>
paths./mail_settings/template.patch.parameters[0].schema.properties.enabled.description: Indicates
  if you want to enable the legacy email template mail setting.
paths./mail_settings/template.patch.parameters[0].schema.properties.enabled.type: boolean
paths./mail_settings/template.patch.parameters[0].schema.properties.html_content.description: The
  new HTML content for your legacy email template.
paths./mail_settings/template.patch.parameters[0].schema.properties.html_content.type: string
paths./mail_settings/template.patch.parameters[0].schema.type: object
paths./mail_settings/template.patch.parameters[1].$ref: '#/parameters/trait:onBehalfOfSubuser:on-behalf-of'
paths./mail_settings/template.patch.produces.length: 1
paths./mail_settings/template.patch.produces[0]: application/json
paths./mail_settings/template.patch.responses.200.description: ""
paths./mail_settings/template.patch.responses.200.examples.application/json.enabled: false
paths./mail_settings/template.patch.responses.200.examples.application/json.html_content: |
  <p><% body %>Example</p>
paths./mail_settings/template.patch.responses.200.schema.properties.enabled.description: Indicates
  if the legacy email template mail setting is enabled.
paths./mail_settings/template.patch.responses.200.schema.properties.enabled.type: boolean
paths./mail_settings/template.patch.responses.200.schema.properties.html_content.description: The
  HTML content of your legacy email template.
paths./mail_settings/template.patch.responses.200.schema.properties.html_content.type: string
paths./mail_settings/template.patch.responses.200.schema.required.length: 2
paths./mail_settings/template.patch.responses.200.schema.required[0]: enabled
paths./mail_settings/template.patch.responses.200.schema.required[1]: html_content
paths./mail_settings/template.patch.responses.200.schema.type: object
paths./mail_settings/template.patch.security.length: 1
paths./mail_settings/template.patch.security[0].Authorization.length: 0
paths./mail_settings/template.patch.summary: Update template mail settings
paths./mail_settings/template.patch.tags.length: 1
paths./mail_settings/template.patch.tags[0]: Settings - Mail
paths./mailbox_providers/stats.get.description: |-
  **This endpoint allows you to retrieve your email statistics segmented by recipient mailbox provider.**

  **We only store up to 7 days of email activity in our database.** By default, 500 items will be returned per request via the Advanced Stats API endpoints.

  Advanced Stats provide a more in-depth view of your email statistics and the actions taken by your recipients. You can segment these statistics by geographic location, device type, client type, browser, and mailbox provider. For more information about statistics, please see our [User Guide](https://sendgrid.com/docs/User_Guide/Statistics/index.html).
paths./mailbox_providers/stats.get.operationId: GET_mailbox_providers-stats
paths./mailbox_providers/stats.get.parameters.length: 7
paths./mailbox_providers/stats.get.parameters[0].description: The number of results
  to include on each page.
paths./mailbox_providers/stats.get.parameters[0].in: query
paths./mailbox_providers/stats.get.parameters[0].name: limit
paths./mailbox_providers/stats.get.parameters[0].required: false
paths./mailbox_providers/stats.get.parameters[0].type: integer
paths./mailbox_providers/stats.get.parameters[1].description: The number of results
  to exclude.
paths./mailbox_providers/stats.get.parameters[1].in: query
paths./mailbox_providers/stats.get.parameters[1].name: offset
paths./mailbox_providers/stats.get.parameters[1].required: false
paths./mailbox_providers/stats.get.parameters[1].type: integer
paths./mailbox_providers/stats.get.parameters[2].description: How to group the stats.
  Must be either "day", "wee", or "month".
paths./mailbox_providers/stats.get.parameters[2].enum.length: 3
paths./mailbox_providers/stats.get.parameters[2].enum[0]: day
paths./mailbox_providers/stats.get.parameters[2].enum[1]: week
paths./mailbox_providers/stats.get.parameters[2].enum[2]: month
paths./mailbox_providers/stats.get.parameters[2].in: query
paths./mailbox_providers/stats.get.parameters[2].name: aggregated_by
paths./mailbox_providers/stats.get.parameters[2].required: false
paths./mailbox_providers/stats.get.parameters[2].type: string
paths./mailbox_providers/stats.get.parameters[3].description: The starting date of
  the statistics to retrieve. Must follow format YYYY-MM-DD.
paths./mailbox_providers/stats.get.parameters[3].in: query
paths./mailbox_providers/stats.get.parameters[3].name: start_date
paths./mailbox_providers/stats.get.parameters[3].required: true
paths./mailbox_providers/stats.get.parameters[3].type: string
paths./mailbox_providers/stats.get.parameters[4].description: The end date of the
  statistics to retrieve. Defaults to today. Must follow format YYYY-MM-DD.
paths./mailbox_providers/stats.get.parameters[4].in: query
paths./mailbox_providers/stats.get.parameters[4].name: end_date
paths./mailbox_providers/stats.get.parameters[4].required: false
paths./mailbox_providers/stats.get.parameters[4].type: string
paths./mailbox_providers/stats.get.parameters[5].description: The mail box providers
  to get statistics for. You can include up to 10 by including this parameter multiple
  times.
paths./mailbox_providers/stats.get.parameters[5].in: query
paths./mailbox_providers/stats.get.parameters[5].name: mailbox_providers
paths./mailbox_providers/stats.get.parameters[5].required: false
paths./mailbox_providers/stats.get.parameters[5].type: string
paths./mailbox_providers/stats.get.parameters[6].$ref: '#/parameters/trait:onBehalfOfSubuser:on-behalf-of'
paths./mailbox_providers/stats.get.produces.length: 1
paths./mailbox_providers/stats.get.produces[0]: application/json
paths./mailbox_providers/stats.get.responses.200.description: ""
paths./mailbox_providers/stats.get.responses.200.examples.application/json.length: 31
paths./mailbox_providers/stats.get.responses.200.examples.application/json[0].date: 2015-10-11
paths./mailbox_providers/stats.get.responses.200.examples.application/json[0].stats.length: 1
paths./mailbox_providers/stats.get.responses.200.examples.application/json[0].stats[0].metrics.blocks: 0
paths./mailbox_providers/stats.get.responses.200.examples.application/json[0].stats[0].metrics.bounces: 0
paths./mailbox_providers/stats.get.responses.200.examples.application/json[0].stats[0].metrics.clicks: 0
paths./mailbox_providers/stats.get.responses.200.examples.application/json[0].stats[0].metrics.deferred: 0
paths./mailbox_providers/stats.get.responses.200.examples.application/json[0].stats[0].metrics.delivered: 0
paths./mailbox_providers/stats.get.responses.200.examples.application/json[0].stats[0].metrics.drops: 0
paths./mailbox_providers/stats.get.responses.200.examples.application/json[0].stats[0].metrics.opens: 0
paths./mailbox_providers/stats.get.responses.200.examples.application/json[0].stats[0].metrics.spam_reports: 0
paths./mailbox_providers/stats.get.responses.200.examples.application/json[0].stats[0].metrics.unique_clicks: 0
paths./mailbox_providers/stats.get.responses.200.examples.application/json[0].stats[0].metrics.unique_opens: 0
paths./mailbox_providers/stats.get.responses.200.examples.application/json[0].stats[0].name: Gmail
paths./mailbox_providers/stats.get.responses.200.examples.application/json[0].stats[0].type: mailbox_provider
paths./mailbox_providers/stats.get.responses.200.examples.application/json[1].date: 2015-10-12
paths./mailbox_providers/stats.get.responses.200.examples.application/json[1].stats.length: 1
paths./mailbox_providers/stats.get.responses.200.examples.application/json[1].stats[0].metrics.blocks: 0
paths./mailbox_providers/stats.get.responses.200.examples.application/json[1].stats[0].metrics.bounces: 0
paths./mailbox_providers/stats.get.responses.200.examples.application/json[1].stats[0].metrics.clicks: 0
paths./mailbox_providers/stats.get.responses.200.examples.application/json[1].stats[0].metrics.deferred: 0
paths./mailbox_providers/stats.get.responses.200.examples.application/json[1].stats[0].metrics.delivered: 0
paths./mailbox_providers/stats.get.responses.200.examples.application/json[1].stats[0].metrics.drops: 0
paths./mailbox_providers/stats.get.responses.200.examples.application/json[1].stats[0].metrics.opens: 0
paths./mailbox_providers/stats.get.responses.200.examples.application/json[1].stats[0].metrics.spam_reports: 0
paths./mailbox_providers/stats.get.responses.200.examples.application/json[1].stats[0].metrics.unique_clicks: 0
paths./mailbox_providers/stats.get.responses.200.examples.application/json[1].stats[0].metrics.unique_opens: 0
paths./mailbox_providers/stats.get.responses.200.examples.application/json[1].stats[0].name: Gmail
paths./mailbox_providers/stats.get.responses.200.examples.application/json[1].stats[0].type: mailbox_provider
paths./mailbox_providers/stats.get.responses.200.examples.application/json[2].date: 2015-10-13
paths./mailbox_providers/stats.get.responses.200.examples.application/json[2].stats.length: 1
paths./mailbox_providers/stats.get.responses.200.examples.application/json[2].stats[0].metrics.blocks: 0
paths./mailbox_providers/stats.get.responses.200.examples.application/json[2].stats[0].metrics.bounces: 0
paths./mailbox_providers/stats.get.responses.200.examples.application/json[2].stats[0].metrics.clicks: 0
paths./mailbox_providers/stats.get.responses.200.examples.application/json[2].stats[0].metrics.deferred: 0
paths./mailbox_providers/stats.get.responses.200.examples.application/json[2].stats[0].metrics.delivered: 0
paths./mailbox_providers/stats.get.responses.200.examples.application/json[2].stats[0].metrics.drops: 0
paths./mailbox_providers/stats.get.responses.200.examples.application/json[2].stats[0].metrics.opens: 0
paths./mailbox_providers/stats.get.responses.200.examples.application/json[2].stats[0].metrics.spam_reports: 0
paths./mailbox_providers/stats.get.responses.200.examples.application/json[2].stats[0].metrics.unique_clicks: 0
paths./mailbox_providers/stats.get.responses.200.examples.application/json[2].stats[0].metrics.unique_opens: 0
paths./mailbox_providers/stats.get.responses.200.examples.application/json[2].stats[0].name: Gmail
paths./mailbox_providers/stats.get.responses.200.examples.application/json[2].stats[0].type: mailbox_provider
paths./mailbox_providers/stats.get.responses.200.examples.application/json[3].date: 2015-10-14
paths./mailbox_providers/stats.get.responses.200.examples.application/json[3].stats.length: 1
paths./mailbox_providers/stats.get.responses.200.examples.application/json[3].stats[0].metrics.blocks: 0
paths./mailbox_providers/stats.get.responses.200.examples.application/json[3].stats[0].metrics.bounces: 0
paths./mailbox_providers/stats.get.responses.200.examples.application/json[3].stats[0].metrics.clicks: 0
paths./mailbox_providers/stats.get.responses.200.examples.application/json[3].stats[0].metrics.deferred: 0
paths./mailbox_providers/stats.get.responses.200.examples.application/json[3].stats[0].metrics.delivered: 0
paths./mailbox_providers/stats.get.responses.200.examples.application/json[3].stats[0].metrics.drops: 0
paths./mailbox_providers/stats.get.responses.200.examples.application/json[3].stats[0].metrics.opens: 0
paths./mailbox_providers/stats.get.responses.200.examples.application/json[3].stats[0].metrics.spam_reports: 0
paths./mailbox_providers/stats.get.responses.200.examples.application/json[3].stats[0].metrics.unique_clicks: 0
paths./mailbox_providers/stats.get.responses.200.examples.application/json[3].stats[0].metrics.unique_opens: 0
paths./mailbox_providers/stats.get.responses.200.examples.application/json[3].stats[0].name: Gmail
paths./mailbox_providers/stats.get.responses.200.examples.application/json[3].stats[0].type: mailbox_provider
paths./mailbox_providers/stats.get.responses.200.examples.application/json[4].date: 2015-10-15
paths./mailbox_providers/stats.get.responses.200.examples.application/json[4].stats.length: 1
paths./mailbox_providers/stats.get.responses.200.examples.application/json[4].stats[0].metrics.blocks: 0
paths./mailbox_providers/stats.get.responses.200.examples.application/json[4].stats[0].metrics.bounces: 0
paths./mailbox_providers/stats.get.responses.200.examples.application/json[4].stats[0].metrics.clicks: 0
paths./mailbox_providers/stats.get.responses.200.examples.application/json[4].stats[0].metrics.deferred: 0
paths./mailbox_providers/stats.get.responses.200.examples.application/json[4].stats[0].metrics.delivered: 0
paths./mailbox_providers/stats.get.responses.200.examples.application/json[4].stats[0].metrics.drops: 0
paths./mailbox_providers/stats.get.responses.200.examples.application/json[4].stats[0].metrics.opens: 0
paths./mailbox_providers/stats.get.responses.200.examples.application/json[4].stats[0].metrics.spam_reports: 0
paths./mailbox_providers/stats.get.responses.200.examples.application/json[4].stats[0].metrics.unique_clicks: 0
paths./mailbox_providers/stats.get.responses.200.examples.application/json[4].stats[0].metrics.unique_opens: 0
paths./mailbox_providers/stats.get.responses.200.examples.application/json[4].stats[0].name: Gmail
paths./mailbox_providers/stats.get.responses.200.examples.application/json[4].stats[0].type: mailbox_provider
paths./mailbox_providers/stats.get.responses.200.examples.application/json[5].date: 2015-10-16
paths./mailbox_providers/stats.get.responses.200.examples.application/json[5].stats.length: 1
paths./mailbox_providers/stats.get.responses.200.examples.application/json[5].stats[0].metrics.blocks: 0
paths./mailbox_providers/stats.get.responses.200.examples.application/json[5].stats[0].metrics.bounces: 0
paths./mailbox_providers/stats.get.responses.200.examples.application/json[5].stats[0].metrics.clicks: 0
paths./mailbox_providers/stats.get.responses.200.examples.application/json[5].stats[0].metrics.deferred: 0
paths./mailbox_providers/stats.get.responses.200.examples.application/json[5].stats[0].metrics.delivered: 0
paths./mailbox_providers/stats.get.responses.200.examples.application/json[5].stats[0].metrics.drops: 0
paths./mailbox_providers/stats.get.responses.200.examples.application/json[5].stats[0].metrics.opens: 0
paths./mailbox_providers/stats.get.responses.200.examples.application/json[5].stats[0].metrics.spam_reports: 0
paths./mailbox_providers/stats.get.responses.200.examples.application/json[5].stats[0].metrics.unique_clicks: 0
paths./mailbox_providers/stats.get.responses.200.examples.application/json[5].stats[0].metrics.unique_opens: 0
paths./mailbox_providers/stats.get.responses.200.examples.application/json[5].stats[0].name: Gmail
paths./mailbox_providers/stats.get.responses.200.examples.application/json[5].stats[0].type: mailbox_provider
paths./mailbox_providers/stats.get.responses.200.examples.application/json[6].date: 2015-10-17
paths./mailbox_providers/stats.get.responses.200.examples.application/json[6].stats.length: 1
paths./mailbox_providers/stats.get.responses.200.examples.application/json[6].stats[0].metrics.blocks: 0
paths./mailbox_providers/stats.get.responses.200.examples.application/json[6].stats[0].metrics.bounces: 0
paths./mailbox_providers/stats.get.responses.200.examples.application/json[6].stats[0].metrics.clicks: 0
paths./mailbox_providers/stats.get.responses.200.examples.application/json[6].stats[0].metrics.deferred: 0
paths./mailbox_providers/stats.get.responses.200.examples.application/json[6].stats[0].metrics.delivered: 0
paths./mailbox_providers/stats.get.responses.200.examples.application/json[6].stats[0].metrics.drops: 0
paths./mailbox_providers/stats.get.responses.200.examples.application/json[6].stats[0].metrics.opens: 0
paths./mailbox_providers/stats.get.responses.200.examples.application/json[6].stats[0].metrics.spam_reports: 0
paths./mailbox_providers/stats.get.responses.200.examples.application/json[6].stats[0].metrics.unique_clicks: 0
paths./mailbox_providers/stats.get.responses.200.examples.application/json[6].stats[0].metrics.unique_opens: 0
paths./mailbox_providers/stats.get.responses.200.examples.application/json[6].stats[0].name: Gmail
paths./mailbox_providers/stats.get.responses.200.examples.application/json[6].stats[0].type: mailbox_provider
paths./mailbox_providers/stats.get.responses.200.examples.application/json[7].date: 2015-10-18
paths./mailbox_providers/stats.get.responses.200.examples.application/json[7].stats.length: 1
paths./mailbox_providers/stats.get.responses.200.examples.application/json[7].stats[0].metrics.blocks: 0
paths./mailbox_providers/stats.get.responses.200.examples.application/json[7].stats[0].metrics.bounces: 0
paths./mailbox_providers/stats.get.responses.200.examples.application/json[7].stats[0].metrics.clicks: 0
paths./mailbox_providers/stats.get.responses.200.examples.application/json[7].stats[0].metrics.deferred: 0
paths./mailbox_providers/stats.get.responses.200.examples.application/json[7].stats[0].metrics.delivered: 0
paths./mailbox_providers/stats.get.responses.200.examples.application/json[7].stats[0].metrics.drops: 0
paths./mailbox_providers/stats.get.responses.200.examples.application/json[7].stats[0].metrics.opens: 0
paths./mailbox_providers/stats.get.responses.200.examples.application/json[7].stats[0].metrics.spam_reports: 0
paths./mailbox_providers/stats.get.responses.200.examples.application/json[7].stats[0].metrics.unique_clicks: 0
paths./mailbox_providers/stats.get.responses.200.examples.application/json[7].stats[0].metrics.unique_opens: 0
paths./mailbox_providers/stats.get.responses.200.examples.application/json[7].stats[0].name: Gmail
paths./mailbox_providers/stats.get.responses.200.examples.application/json[7].stats[0].type: mailbox_provider
paths./mailbox_providers/stats.get.responses.200.examples.application/json[8].date: 2015-10-19
paths./mailbox_providers/stats.get.responses.200.examples.application/json[8].stats.length: 1
paths./mailbox_providers/stats.get.responses.200.examples.application/json[8].stats[0].metrics.blocks: 0
paths./mailbox_providers/stats.get.responses.200.examples.application/json[8].stats[0].metrics.bounces: 0
paths./mailbox_providers/stats.get.responses.200.examples.application/json[8].stats[0].metrics.clicks: 0
paths./mailbox_providers/stats.get.responses.200.examples.application/json[8].stats[0].metrics.deferred: 0
paths./mailbox_providers/stats.get.responses.200.examples.application/json[8].stats[0].metrics.delivered: 0
paths./mailbox_providers/stats.get.responses.200.examples.application/json[8].stats[0].metrics.drops: 0
paths./mailbox_providers/stats.get.responses.200.examples.application/json[8].stats[0].metrics.opens: 0
paths./mailbox_providers/stats.get.responses.200.examples.application/json[8].stats[0].metrics.spam_reports: 0
paths./mailbox_providers/stats.get.responses.200.examples.application/json[8].stats[0].metrics.unique_clicks: 0
paths./mailbox_providers/stats.get.responses.200.examples.application/json[8].stats[0].metrics.unique_opens: 0
paths./mailbox_providers/stats.get.responses.200.examples.application/json[8].stats[0].name: Gmail
paths./mailbox_providers/stats.get.responses.200.examples.application/json[8].stats[0].type: mailbox_provider
paths./mailbox_providers/stats.get.responses.200.examples.application/json[9].date: 2015-10-20
paths./mailbox_providers/stats.get.responses.200.examples.application/json[9].stats.length: 1
paths./mailbox_providers/stats.get.responses.200.examples.application/json[9].stats[0].metrics.blocks: 0
paths./mailbox_providers/stats.get.responses.200.examples.application/json[9].stats[0].metrics.bounces: 0
paths./mailbox_providers/stats.get.responses.200.examples.application/json[9].stats[0].metrics.clicks: 0
paths./mailbox_providers/stats.get.responses.200.examples.application/json[9].stats[0].metrics.deferred: 0
paths./mailbox_providers/stats.get.responses.200.examples.application/json[9].stats[0].metrics.delivered: 0
paths./mailbox_providers/stats.get.responses.200.examples.application/json[9].stats[0].metrics.drops: 0
paths./mailbox_providers/stats.get.responses.200.examples.application/json[9].stats[0].metrics.opens: 0
paths./mailbox_providers/stats.get.responses.200.examples.application/json[9].stats[0].metrics.spam_reports: 0
paths./mailbox_providers/stats.get.responses.200.examples.application/json[9].stats[0].metrics.unique_clicks: 0
paths./mailbox_providers/stats.get.responses.200.examples.application/json[9].stats[0].metrics.unique_opens: 0
paths./mailbox_providers/stats.get.responses.200.examples.application/json[9].stats[0].name: Gmail
paths./mailbox_providers/stats.get.responses.200.examples.application/json[9].stats[0].type: mailbox_provider
paths./mailbox_providers/stats.get.responses.200.examples.application/json[10].date: 2015-10-21
paths./mailbox_providers/stats.get.responses.200.examples.application/json[10].stats.length: 1
paths./mailbox_providers/stats.get.responses.200.examples.application/json[10].stats[0].metrics.blocks: 0
paths./mailbox_providers/stats.get.responses.200.examples.application/json[10].stats[0].metrics.bounces: 0
paths./mailbox_providers/stats.get.responses.200.examples.application/json[10].stats[0].metrics.clicks: 0
paths./mailbox_providers/stats.get.responses.200.examples.application/json[10].stats[0].metrics.deferred: 0
paths./mailbox_providers/stats.get.responses.200.examples.application/json[10].stats[0].metrics.delivered: 1
paths./mailbox_providers/stats.get.responses.200.examples.application/json[10].stats[0].metrics.drops: 0
paths./mailbox_providers/stats.get.responses.200.examples.application/json[10].stats[0].metrics.opens: 1
paths./mailbox_providers/stats.get.responses.200.examples.application/json[10].stats[0].metrics.spam_reports: 0
paths./mailbox_providers/stats.get.responses.200.examples.application/json[10].stats[0].metrics.unique_clicks: 0
paths./mailbox_providers/stats.get.responses.200.examples.application/json[10].stats[0].metrics.unique_opens: 1
paths./mailbox_providers/stats.get.responses.200.examples.application/json[10].stats[0].name: Gmail
paths./mailbox_providers/stats.get.responses.200.examples.application/json[10].stats[0].type: mailbox_provider
paths./mailbox_providers/stats.get.responses.200.examples.application/json[11].date: 2015-10-22
paths./mailbox_providers/stats.get.responses.200.examples.application/json[11].stats.length: 1
paths./mailbox_providers/stats.get.responses.200.examples.application/json[11].stats[0].metrics.blocks: 0
paths./mailbox_providers/stats.get.responses.200.examples.application/json[11].stats[0].metrics.bounces: 0
paths./mailbox_providers/stats.get.responses.200.examples.application/json[11].stats[0].metrics.clicks: 0
paths./mailbox_providers/stats.get.responses.200.examples.application/json[11].stats[0].metrics.deferred: 0
paths./mailbox_providers/stats.get.responses.200.examples.application/json[11].stats[0].metrics.delivered: 0
paths./mailbox_providers/stats.get.responses.200.examples.application/json[11].stats[0].metrics.drops: 0
paths./mailbox_providers/stats.get.responses.200.examples.application/json[11].stats[0].metrics.opens: 0
paths./mailbox_providers/stats.get.responses.200.examples.application/json[11].stats[0].metrics.spam_reports: 0
paths./mailbox_providers/stats.get.responses.200.examples.application/json[11].stats[0].metrics.unique_clicks: 0
paths./mailbox_providers/stats.get.responses.200.examples.application/json[11].stats[0].metrics.unique_opens: 0
paths./mailbox_providers/stats.get.responses.200.examples.application/json[11].stats[0].name: Gmail
paths./mailbox_providers/stats.get.responses.200.examples.application/json[11].stats[0].type: mailbox_provider
paths./mailbox_providers/stats.get.responses.200.examples.application/json[12].date: 2015-10-23
paths./mailbox_providers/stats.get.responses.200.examples.application/json[12].stats.length: 1
paths./mailbox_providers/stats.get.responses.200.examples.application/json[12].stats[0].metrics.blocks: 0
paths./mailbox_providers/stats.get.responses.200.examples.application/json[12].stats[0].metrics.bounces: 0
paths./mailbox_providers/stats.get.responses.200.examples.application/json[12].stats[0].metrics.clicks: 0
paths./mailbox_providers/stats.get.responses.200.examples.application/json[12].stats[0].metrics.deferred: 0
paths./mailbox_providers/stats.get.responses.200.examples.application/json[12].stats[0].metrics.delivered: 0
paths./mailbox_providers/stats.get.responses.200.examples.application/json[12].stats[0].metrics.drops: 0
paths./mailbox_providers/stats.get.responses.200.examples.application/json[12].stats[0].metrics.opens: 0
paths./mailbox_providers/stats.get.responses.200.examples.application/json[12].stats[0].metrics.spam_reports: 0
paths./mailbox_providers/stats.get.responses.200.examples.application/json[12].stats[0].metrics.unique_clicks: 0
paths./mailbox_providers/stats.get.responses.200.examples.application/json[12].stats[0].metrics.unique_opens: 0
paths./mailbox_providers/stats.get.responses.200.examples.application/json[12].stats[0].name: Gmail
paths./mailbox_providers/stats.get.responses.200.examples.application/json[12].stats[0].type: mailbox_provider
paths./mailbox_providers/stats.get.responses.200.examples.application/json[13].date: 2015-10-24
paths./mailbox_providers/stats.get.responses.200.examples.application/json[13].stats.length: 1
paths./mailbox_providers/stats.get.responses.200.examples.application/json[13].stats[0].metrics.blocks: 0
paths./mailbox_providers/stats.get.responses.200.examples.application/json[13].stats[0].metrics.bounces: 0
paths./mailbox_providers/stats.get.responses.200.examples.application/json[13].stats[0].metrics.clicks: 0
paths./mailbox_providers/stats.get.responses.200.examples.application/json[13].stats[0].metrics.deferred: 0
paths./mailbox_providers/stats.get.responses.200.examples.application/json[13].stats[0].metrics.delivered: 0
paths./mailbox_providers/stats.get.responses.200.examples.application/json[13].stats[0].metrics.drops: 0
paths./mailbox_providers/stats.get.responses.200.examples.application/json[13].stats[0].metrics.opens: 0
paths./mailbox_providers/stats.get.responses.200.examples.application/json[13].stats[0].metrics.spam_reports: 0
paths./mailbox_providers/stats.get.responses.200.examples.application/json[13].stats[0].metrics.unique_clicks: 0
paths./mailbox_providers/stats.get.responses.200.examples.application/json[13].stats[0].metrics.unique_opens: 0
paths./mailbox_providers/stats.get.responses.200.examples.application/json[13].stats[0].name: Gmail
paths./mailbox_providers/stats.get.responses.200.examples.application/json[13].stats[0].type: mailbox_provider
paths./mailbox_providers/stats.get.responses.200.examples.application/json[14].date: 2015-10-25
paths./mailbox_providers/stats.get.responses.200.examples.application/json[14].stats.length: 1
paths./mailbox_providers/stats.get.responses.200.examples.application/json[14].stats[0].metrics.blocks: 0
paths./mailbox_providers/stats.get.responses.200.examples.application/json[14].stats[0].metrics.bounces: 0
paths./mailbox_providers/stats.get.responses.200.examples.application/json[14].stats[0].metrics.clicks: 0
paths./mailbox_providers/stats.get.responses.200.examples.application/json[14].stats[0].metrics.deferred: 0
paths./mailbox_providers/stats.get.responses.200.examples.application/json[14].stats[0].metrics.delivered: 0
paths./mailbox_providers/stats.get.responses.200.examples.application/json[14].stats[0].metrics.drops: 0
paths./mailbox_providers/stats.get.responses.200.examples.application/json[14].stats[0].metrics.opens: 0
paths./mailbox_providers/stats.get.responses.200.examples.application/json[14].stats[0].metrics.spam_reports: 0
paths./mailbox_providers/stats.get.responses.200.examples.application/json[14].stats[0].metrics.unique_clicks: 0
paths./mailbox_providers/stats.get.responses.200.examples.application/json[14].stats[0].metrics.unique_opens: 0
paths./mailbox_providers/stats.get.responses.200.examples.application/json[14].stats[0].name: Gmail
paths./mailbox_providers/stats.get.responses.200.examples.application/json[14].stats[0].type: mailbox_provider
paths./mailbox_providers/stats.get.responses.200.examples.application/json[15].date: 2015-10-26
paths./mailbox_providers/stats.get.responses.200.examples.application/json[15].stats.length: 1
paths./mailbox_providers/stats.get.responses.200.examples.application/json[15].stats[0].metrics.blocks: 0
paths./mailbox_providers/stats.get.responses.200.examples.application/json[15].stats[0].metrics.bounces: 0
paths./mailbox_providers/stats.get.responses.200.examples.application/json[15].stats[0].metrics.clicks: 0
paths./mailbox_providers/stats.get.responses.200.examples.application/json[15].stats[0].metrics.deferred: 0
paths./mailbox_providers/stats.get.responses.200.examples.application/json[15].stats[0].metrics.delivered: 2
paths./mailbox_providers/stats.get.responses.200.examples.application/json[15].stats[0].metrics.drops: 0
paths./mailbox_providers/stats.get.responses.200.examples.application/json[15].stats[0].metrics.opens: 2
paths./mailbox_providers/stats.get.responses.200.examples.application/json[15].stats[0].metrics.spam_reports: 0
paths./mailbox_providers/stats.get.responses.200.examples.application/json[15].stats[0].metrics.unique_clicks: 0
paths./mailbox_providers/stats.get.responses.200.examples.application/json[15].stats[0].metrics.unique_opens: 2
paths./mailbox_providers/stats.get.responses.200.examples.application/json[15].stats[0].name: Gmail
paths./mailbox_providers/stats.get.responses.200.examples.application/json[15].stats[0].type: mailbox_provider
paths./mailbox_providers/stats.get.responses.200.examples.application/json[16].date: 2015-10-27
paths./mailbox_providers/stats.get.responses.200.examples.application/json[16].stats.length: 1
paths./mailbox_providers/stats.get.responses.200.examples.application/json[16].stats[0].metrics.blocks: 0
paths./mailbox_providers/stats.get.responses.200.examples.application/json[16].stats[0].metrics.bounces: 0
paths./mailbox_providers/stats.get.responses.200.examples.application/json[16].stats[0].metrics.clicks: 0
paths./mailbox_providers/stats.get.responses.200.examples.application/json[16].stats[0].metrics.deferred: 0
paths./mailbox_providers/stats.get.responses.200.examples.application/json[16].stats[0].metrics.delivered: 0
paths./mailbox_providers/stats.get.responses.200.examples.application/json[16].stats[0].metrics.drops: 0
paths./mailbox_providers/stats.get.responses.200.examples.application/json[16].stats[0].metrics.opens: 0
paths./mailbox_providers/stats.get.responses.200.examples.application/json[16].stats[0].metrics.spam_reports: 0
paths./mailbox_providers/stats.get.responses.200.examples.application/json[16].stats[0].metrics.unique_clicks: 0
paths./mailbox_providers/stats.get.responses.200.examples.application/json[16].stats[0].metrics.unique_opens: 0
paths./mailbox_providers/stats.get.responses.200.examples.application/json[16].stats[0].name: Gmail
paths./mailbox_providers/stats.get.responses.200.examples.application/json[16].stats[0].type: mailbox_provider
paths./mailbox_providers/stats.get.responses.200.examples.application/json[17].date: 2015-10-28
paths./mailbox_providers/stats.get.responses.200.examples.application/json[17].stats.length: 1
paths./mailbox_providers/stats.get.responses.200.examples.application/json[17].stats[0].metrics.blocks: 0
paths./mailbox_providers/stats.get.responses.200.examples.application/json[17].stats[0].metrics.bounces: 0
paths./mailbox_providers/stats.get.responses.200.examples.application/json[17].stats[0].metrics.clicks: 0
paths./mailbox_providers/stats.get.responses.200.examples.application/json[17].stats[0].metrics.deferred: 0
paths./mailbox_providers/stats.get.responses.200.examples.application/json[17].stats[0].metrics.delivered: 0
paths./mailbox_providers/stats.get.responses.200.examples.application/json[17].stats[0].metrics.drops: 0
paths./mailbox_providers/stats.get.responses.200.examples.application/json[17].stats[0].metrics.opens: 0
paths./mailbox_providers/stats.get.responses.200.examples.application/json[17].stats[0].metrics.spam_reports: 0
paths./mailbox_providers/stats.get.responses.200.examples.application/json[17].stats[0].metrics.unique_clicks: 0
paths./mailbox_providers/stats.get.responses.200.examples.application/json[17].stats[0].metrics.unique_opens: 0
paths./mailbox_providers/stats.get.responses.200.examples.application/json[17].stats[0].name: Gmail
paths./mailbox_providers/stats.get.responses.200.examples.application/json[17].stats[0].type: mailbox_provider
paths./mailbox_providers/stats.get.responses.200.examples.application/json[18].date: 2015-10-29
paths./mailbox_providers/stats.get.responses.200.examples.application/json[18].stats.length: 1
paths./mailbox_providers/stats.get.responses.200.examples.application/json[18].stats[0].metrics.blocks: 0
paths./mailbox_providers/stats.get.responses.200.examples.application/json[18].stats[0].metrics.bounces: 0
paths./mailbox_providers/stats.get.responses.200.examples.application/json[18].stats[0].metrics.clicks: 0
paths./mailbox_providers/stats.get.responses.200.examples.application/json[18].stats[0].metrics.deferred: 0
paths./mailbox_providers/stats.get.responses.200.examples.application/json[18].stats[0].metrics.delivered: 0
paths./mailbox_providers/stats.get.responses.200.examples.application/json[18].stats[0].metrics.drops: 0
paths./mailbox_providers/stats.get.responses.200.examples.application/json[18].stats[0].metrics.opens: 0
paths./mailbox_providers/stats.get.responses.200.examples.application/json[18].stats[0].metrics.spam_reports: 0
paths./mailbox_providers/stats.get.responses.200.examples.application/json[18].stats[0].metrics.unique_clicks: 0
paths./mailbox_providers/stats.get.responses.200.examples.application/json[18].stats[0].metrics.unique_opens: 0
paths./mailbox_providers/stats.get.responses.200.examples.application/json[18].stats[0].name: Gmail
paths./mailbox_providers/stats.get.responses.200.examples.application/json[18].stats[0].type: mailbox_provider
paths./mailbox_providers/stats.get.responses.200.examples.application/json[19].date: 2015-10-30
paths./mailbox_providers/stats.get.responses.200.examples.application/json[19].stats.length: 1
paths./mailbox_providers/stats.get.responses.200.examples.application/json[19].stats[0].metrics.blocks: 0
paths./mailbox_providers/stats.get.responses.200.examples.application/json[19].stats[0].metrics.bounces: 0
paths./mailbox_providers/stats.get.responses.200.examples.application/json[19].stats[0].metrics.clicks: 0
paths./mailbox_providers/stats.get.responses.200.examples.application/json[19].stats[0].metrics.deferred: 0
paths./mailbox_providers/stats.get.responses.200.examples.application/json[19].stats[0].metrics.delivered: 0
paths./mailbox_providers/stats.get.responses.200.examples.application/json[19].stats[0].metrics.drops: 0
paths./mailbox_providers/stats.get.responses.200.examples.application/json[19].stats[0].metrics.opens: 0
paths./mailbox_providers/stats.get.responses.200.examples.application/json[19].stats[0].metrics.spam_reports: 0
paths./mailbox_providers/stats.get.responses.200.examples.application/json[19].stats[0].metrics.unique_clicks: 0
paths./mailbox_providers/stats.get.responses.200.examples.application/json[19].stats[0].metrics.unique_opens: 0
paths./mailbox_providers/stats.get.responses.200.examples.application/json[19].stats[0].name: Gmail
paths./mailbox_providers/stats.get.responses.200.examples.application/json[19].stats[0].type: mailbox_provider
paths./mailbox_providers/stats.get.responses.200.examples.application/json[20].date: 2015-10-31
paths./mailbox_providers/stats.get.responses.200.examples.application/json[20].stats.length: 1
paths./mailbox_providers/stats.get.responses.200.examples.application/json[20].stats[0].metrics.blocks: 0
paths./mailbox_providers/stats.get.responses.200.examples.application/json[20].stats[0].metrics.bounces: 0
paths./mailbox_providers/stats.get.responses.200.examples.application/json[20].stats[0].metrics.clicks: 0
paths./mailbox_providers/stats.get.responses.200.examples.application/json[20].stats[0].metrics.deferred: 0
paths./mailbox_providers/stats.get.responses.200.examples.application/json[20].stats[0].metrics.delivered: 0
paths./mailbox_providers/stats.get.responses.200.examples.application/json[20].stats[0].metrics.drops: 0
paths./mailbox_providers/stats.get.responses.200.examples.application/json[20].stats[0].metrics.opens: 0
paths./mailbox_providers/stats.get.responses.200.examples.application/json[20].stats[0].metrics.spam_reports: 0
paths./mailbox_providers/stats.get.responses.200.examples.application/json[20].stats[0].metrics.unique_clicks: 0
paths./mailbox_providers/stats.get.responses.200.examples.application/json[20].stats[0].metrics.unique_opens: 0
paths./mailbox_providers/stats.get.responses.200.examples.application/json[20].stats[0].name: Gmail
paths./mailbox_providers/stats.get.responses.200.examples.application/json[20].stats[0].type: mailbox_provider
paths./mailbox_providers/stats.get.responses.200.examples.application/json[21].date: 2015-11-01
paths./mailbox_providers/stats.get.responses.200.examples.application/json[21].stats.length: 1
paths./mailbox_providers/stats.get.responses.200.examples.application/json[21].stats[0].metrics.blocks: 0
paths./mailbox_providers/stats.get.responses.200.examples.application/json[21].stats[0].metrics.bounces: 0
paths./mailbox_providers/stats.get.responses.200.examples.application/json[21].stats[0].metrics.clicks: 0
paths./mailbox_providers/stats.get.responses.200.examples.application/json[21].stats[0].metrics.deferred: 0
paths./mailbox_providers/stats.get.responses.200.examples.application/json[21].stats[0].metrics.delivered: 0
paths./mailbox_providers/stats.get.responses.200.examples.application/json[21].stats[0].metrics.drops: 0
paths./mailbox_providers/stats.get.responses.200.examples.application/json[21].stats[0].metrics.opens: 0
paths./mailbox_providers/stats.get.responses.200.examples.application/json[21].stats[0].metrics.spam_reports: 0
paths./mailbox_providers/stats.get.responses.200.examples.application/json[21].stats[0].metrics.unique_clicks: 0
paths./mailbox_providers/stats.get.responses.200.examples.application/json[21].stats[0].metrics.unique_opens: 0
paths./mailbox_providers/stats.get.responses.200.examples.application/json[21].stats[0].name: Gmail
paths./mailbox_providers/stats.get.responses.200.examples.application/json[21].stats[0].type: mailbox_provider
paths./mailbox_providers/stats.get.responses.200.examples.application/json[22].date: 2015-11-02
paths./mailbox_providers/stats.get.responses.200.examples.application/json[22].stats.length: 1
paths./mailbox_providers/stats.get.responses.200.examples.application/json[22].stats[0].metrics.blocks: 0
paths./mailbox_providers/stats.get.responses.200.examples.application/json[22].stats[0].metrics.bounces: 0
paths./mailbox_providers/stats.get.responses.200.examples.application/json[22].stats[0].metrics.clicks: 0
paths./mailbox_providers/stats.get.responses.200.examples.application/json[22].stats[0].metrics.deferred: 0
paths./mailbox_providers/stats.get.responses.200.examples.application/json[22].stats[0].metrics.delivered: 0
paths./mailbox_providers/stats.get.responses.200.examples.application/json[22].stats[0].metrics.drops: 0
paths./mailbox_providers/stats.get.responses.200.examples.application/json[22].stats[0].metrics.opens: 0
paths./mailbox_providers/stats.get.responses.200.examples.application/json[22].stats[0].metrics.spam_reports: 0
paths./mailbox_providers/stats.get.responses.200.examples.application/json[22].stats[0].metrics.unique_clicks: 0
paths./mailbox_providers/stats.get.responses.200.examples.application/json[22].stats[0].metrics.unique_opens: 0
paths./mailbox_providers/stats.get.responses.200.examples.application/json[22].stats[0].name: Gmail
paths./mailbox_providers/stats.get.responses.200.examples.application/json[22].stats[0].type: mailbox_provider
paths./mailbox_providers/stats.get.responses.200.examples.application/json[23].date: 2015-11-03
paths./mailbox_providers/stats.get.responses.200.examples.application/json[23].stats.length: 1
paths./mailbox_providers/stats.get.responses.200.examples.application/json[23].stats[0].metrics.blocks: 0
paths./mailbox_providers/stats.get.responses.200.examples.application/json[23].stats[0].metrics.bounces: 0
paths./mailbox_providers/stats.get.responses.200.examples.application/json[23].stats[0].metrics.clicks: 0
paths./mailbox_providers/stats.get.responses.200.examples.application/json[23].stats[0].metrics.deferred: 0
paths./mailbox_providers/stats.get.responses.200.examples.application/json[23].stats[0].metrics.delivered: 0
paths./mailbox_providers/stats.get.responses.200.examples.application/json[23].stats[0].metrics.drops: 0
paths./mailbox_providers/stats.get.responses.200.examples.application/json[23].stats[0].metrics.opens: 0
paths./mailbox_providers/stats.get.responses.200.examples.application/json[23].stats[0].metrics.spam_reports: 0
paths./mailbox_providers/stats.get.responses.200.examples.application/json[23].stats[0].metrics.unique_clicks: 0
paths./mailbox_providers/stats.get.responses.200.examples.application/json[23].stats[0].metrics.unique_opens: 0
paths./mailbox_providers/stats.get.responses.200.examples.application/json[23].stats[0].name: Gmail
paths./mailbox_providers/stats.get.responses.200.examples.application/json[23].stats[0].type: mailbox_provider
paths./mailbox_providers/stats.get.responses.200.examples.application/json[24].date: 2015-11-04
paths./mailbox_providers/stats.get.responses.200.examples.application/json[24].stats.length: 1
paths./mailbox_providers/stats.get.responses.200.examples.application/json[24].stats[0].metrics.blocks: 0
paths./mailbox_providers/stats.get.responses.200.examples.application/json[24].stats[0].metrics.bounces: 0
paths./mailbox_providers/stats.get.responses.200.examples.application/json[24].stats[0].metrics.clicks: 0
paths./mailbox_providers/stats.get.responses.200.examples.application/json[24].stats[0].metrics.deferred: 0
paths./mailbox_providers/stats.get.responses.200.examples.application/json[24].stats[0].metrics.delivered: 0
paths./mailbox_providers/stats.get.responses.200.examples.application/json[24].stats[0].metrics.drops: 0
paths./mailbox_providers/stats.get.responses.200.examples.application/json[24].stats[0].metrics.opens: 0
paths./mailbox_providers/stats.get.responses.200.examples.application/json[24].stats[0].metrics.spam_reports: 0
paths./mailbox_providers/stats.get.responses.200.examples.application/json[24].stats[0].metrics.unique_clicks: 0
paths./mailbox_providers/stats.get.responses.200.examples.application/json[24].stats[0].metrics.unique_opens: 0
paths./mailbox_providers/stats.get.responses.200.examples.application/json[24].stats[0].name: Gmail
paths./mailbox_providers/stats.get.responses.200.examples.application/json[24].stats[0].type: mailbox_provider
paths./mailbox_providers/stats.get.responses.200.examples.application/json[25].date: 2015-11-05
paths./mailbox_providers/stats.get.responses.200.examples.application/json[25].stats.length: 1
paths./mailbox_providers/stats.get.responses.200.examples.application/json[25].stats[0].metrics.blocks: 0
paths./mailbox_providers/stats.get.responses.200.examples.application/json[25].stats[0].metrics.bounces: 0
paths./mailbox_providers/stats.get.responses.200.examples.application/json[25].stats[0].metrics.clicks: 0
paths./mailbox_providers/stats.get.responses.200.examples.application/json[25].stats[0].metrics.deferred: 0
paths./mailbox_providers/stats.get.responses.200.examples.application/json[25].stats[0].metrics.delivered: 0
paths./mailbox_providers/stats.get.responses.200.examples.application/json[25].stats[0].metrics.drops: 0
paths./mailbox_providers/stats.get.responses.200.examples.application/json[25].stats[0].metrics.opens: 0
paths./mailbox_providers/stats.get.responses.200.examples.application/json[25].stats[0].metrics.spam_reports: 0
paths./mailbox_providers/stats.get.responses.200.examples.application/json[25].stats[0].metrics.unique_clicks: 0
paths./mailbox_providers/stats.get.responses.200.examples.application/json[25].stats[0].metrics.unique_opens: 0
paths./mailbox_providers/stats.get.responses.200.examples.application/json[25].stats[0].name: Gmail
paths./mailbox_providers/stats.get.responses.200.examples.application/json[25].stats[0].type: mailbox_provider
paths./mailbox_providers/stats.get.responses.200.examples.application/json[26].date: 2015-11-06
paths./mailbox_providers/stats.get.responses.200.examples.application/json[26].stats.length: 1
paths./mailbox_providers/stats.get.responses.200.examples.application/json[26].stats[0].metrics.blocks: 0
paths./mailbox_providers/stats.get.responses.200.examples.application/json[26].stats[0].metrics.bounces: 0
paths./mailbox_providers/stats.get.responses.200.examples.application/json[26].stats[0].metrics.clicks: 0
paths./mailbox_providers/stats.get.responses.200.examples.application/json[26].stats[0].metrics.deferred: 0
paths./mailbox_providers/stats.get.responses.200.examples.application/json[26].stats[0].metrics.delivered: 0
paths./mailbox_providers/stats.get.responses.200.examples.application/json[26].stats[0].metrics.drops: 0
paths./mailbox_providers/stats.get.responses.200.examples.application/json[26].stats[0].metrics.opens: 0
paths./mailbox_providers/stats.get.responses.200.examples.application/json[26].stats[0].metrics.spam_reports: 0
paths./mailbox_providers/stats.get.responses.200.examples.application/json[26].stats[0].metrics.unique_clicks: 0
paths./mailbox_providers/stats.get.responses.200.examples.application/json[26].stats[0].metrics.unique_opens: 0
paths./mailbox_providers/stats.get.responses.200.examples.application/json[26].stats[0].name: Gmail
paths./mailbox_providers/stats.get.responses.200.examples.application/json[26].stats[0].type: mailbox_provider
paths./mailbox_providers/stats.get.responses.200.examples.application/json[27].date: 2015-11-07
paths./mailbox_providers/stats.get.responses.200.examples.application/json[27].stats.length: 1
paths./mailbox_providers/stats.get.responses.200.examples.application/json[27].stats[0].metrics.blocks: 0
paths./mailbox_providers/stats.get.responses.200.examples.application/json[27].stats[0].metrics.bounces: 0
paths./mailbox_providers/stats.get.responses.200.examples.application/json[27].stats[0].metrics.clicks: 0
paths./mailbox_providers/stats.get.responses.200.examples.application/json[27].stats[0].metrics.deferred: 0
paths./mailbox_providers/stats.get.responses.200.examples.application/json[27].stats[0].metrics.delivered: 0
paths./mailbox_providers/stats.get.responses.200.examples.application/json[27].stats[0].metrics.drops: 0
paths./mailbox_providers/stats.get.responses.200.examples.application/json[27].stats[0].metrics.opens: 0
paths./mailbox_providers/stats.get.responses.200.examples.application/json[27].stats[0].metrics.spam_reports: 0
paths./mailbox_providers/stats.get.responses.200.examples.application/json[27].stats[0].metrics.unique_clicks: 0
paths./mailbox_providers/stats.get.responses.200.examples.application/json[27].stats[0].metrics.unique_opens: 0
paths./mailbox_providers/stats.get.responses.200.examples.application/json[27].stats[0].name: Gmail
paths./mailbox_providers/stats.get.responses.200.examples.application/json[27].stats[0].type: mailbox_provider
paths./mailbox_providers/stats.get.responses.200.examples.application/json[28].date: 2015-11-08
paths./mailbox_providers/stats.get.responses.200.examples.application/json[28].stats.length: 1
paths./mailbox_providers/stats.get.responses.200.examples.application/json[28].stats[0].metrics.blocks: 0
paths./mailbox_providers/stats.get.responses.200.examples.application/json[28].stats[0].metrics.bounces: 0
paths./mailbox_providers/stats.get.responses.200.examples.application/json[28].stats[0].metrics.clicks: 0
paths./mailbox_providers/stats.get.responses.200.examples.application/json[28].stats[0].metrics.deferred: 0
paths./mailbox_providers/stats.get.responses.200.examples.application/json[28].stats[0].metrics.delivered: 0
paths./mailbox_providers/stats.get.responses.200.examples.application/json[28].stats[0].metrics.drops: 0
paths./mailbox_providers/stats.get.responses.200.examples.application/json[28].stats[0].metrics.opens: 0
paths./mailbox_providers/stats.get.responses.200.examples.application/json[28].stats[0].metrics.spam_reports: 0
paths./mailbox_providers/stats.get.responses.200.examples.application/json[28].stats[0].metrics.unique_clicks: 0
paths./mailbox_providers/stats.get.responses.200.examples.application/json[28].stats[0].metrics.unique_opens: 0
paths./mailbox_providers/stats.get.responses.200.examples.application/json[28].stats[0].name: Gmail
paths./mailbox_providers/stats.get.responses.200.examples.application/json[28].stats[0].type: mailbox_provider
paths./mailbox_providers/stats.get.responses.200.examples.application/json[29].date: 2015-11-09
paths./mailbox_providers/stats.get.responses.200.examples.application/json[29].stats.length: 1
paths./mailbox_providers/stats.get.responses.200.examples.application/json[29].stats[0].metrics.blocks: 0
paths./mailbox_providers/stats.get.responses.200.examples.application/json[29].stats[0].metrics.bounces: 0
paths./mailbox_providers/stats.get.responses.200.examples.application/json[29].stats[0].metrics.clicks: 0
paths./mailbox_providers/stats.get.responses.200.examples.application/json[29].stats[0].metrics.deferred: 0
paths./mailbox_providers/stats.get.responses.200.examples.application/json[29].stats[0].metrics.delivered: 0
paths./mailbox_providers/stats.get.responses.200.examples.application/json[29].stats[0].metrics.drops: 0
paths./mailbox_providers/stats.get.responses.200.examples.application/json[29].stats[0].metrics.opens: 0
paths./mailbox_providers/stats.get.responses.200.examples.application/json[29].stats[0].metrics.spam_reports: 0
paths./mailbox_providers/stats.get.responses.200.examples.application/json[29].stats[0].metrics.unique_clicks: 0
paths./mailbox_providers/stats.get.responses.200.examples.application/json[29].stats[0].metrics.unique_opens: 0
paths./mailbox_providers/stats.get.responses.200.examples.application/json[29].stats[0].name: Gmail
paths./mailbox_providers/stats.get.responses.200.examples.application/json[29].stats[0].type: mailbox_provider
paths./mailbox_providers/stats.get.responses.200.examples.application/json[30].date: 2015-11-10
paths./mailbox_providers/stats.get.responses.200.examples.application/json[30].stats.length: 1
paths./mailbox_providers/stats.get.responses.200.examples.application/json[30].stats[0].metrics.blocks: 0
paths./mailbox_providers/stats.get.responses.200.examples.application/json[30].stats[0].metrics.bounces: 0
paths./mailbox_providers/stats.get.responses.200.examples.application/json[30].stats[0].metrics.clicks: 0
paths./mailbox_providers/stats.get.responses.200.examples.application/json[30].stats[0].metrics.deferred: 0
paths./mailbox_providers/stats.get.responses.200.examples.application/json[30].stats[0].metrics.delivered: 0
paths./mailbox_providers/stats.get.responses.200.examples.application/json[30].stats[0].metrics.drops: 0
paths./mailbox_providers/stats.get.responses.200.examples.application/json[30].stats[0].metrics.opens: 0
paths./mailbox_providers/stats.get.responses.200.examples.application/json[30].stats[0].metrics.spam_reports: 0
paths./mailbox_providers/stats.get.responses.200.examples.application/json[30].stats[0].metrics.unique_clicks: 0
paths./mailbox_providers/stats.get.responses.200.examples.application/json[30].stats[0].metrics.unique_opens: 0
paths./mailbox_providers/stats.get.responses.200.examples.application/json[30].stats[0].name: Gmail
paths./mailbox_providers/stats.get.responses.200.examples.application/json[30].stats[0].type: mailbox_provider
paths./mailbox_providers/stats.get.responses.200.schema.items.$ref: '#/definitions/advanced_stats_mailbox_provider'
paths./mailbox_providers/stats.get.responses.200.schema.type: array
paths./mailbox_providers/stats.get.security.length: 1
paths./mailbox_providers/stats.get.security[0].Authorization.length: 0
paths./mailbox_providers/stats.get.summary: Retrieve email statistics by mailbox provider.
paths./mailbox_providers/stats.get.tags.length: 1
paths./mailbox_providers/stats.get.tags[0]: Stats
paths./partner_settings.get.description: |-
  **This endpoint allows you to retrieve a list of all partner settings that you can enable.**

  Our partner settings allow you to integrate your SendGrid account with our partners to increase your SendGrid experience and functionality. For more information about our partners, and how you can begin integrating with them, please visit our [User Guide](https://sendgrid.com/docs/User_Guide/Settings/partners.html).
paths./partner_settings.get.operationId: GET_partner_settings
paths./partner_settings.get.parameters.length: 2
paths./partner_settings.get.parameters[0].description: The number of settings to return
  per page.
paths./partner_settings.get.parameters[0].in: query
paths./partner_settings.get.parameters[0].name: limit
paths./partner_settings.get.parameters[0].type: integer
paths./partner_settings.get.parameters[1].description: The paging offset.
paths./partner_settings.get.parameters[1].in: query
paths./partner_settings.get.parameters[1].name: offset
paths./partner_settings.get.parameters[1].type: integer
paths./partner_settings.get.produces.length: 1
paths./partner_settings.get.produces[0]: application/json
paths./partner_settings.get.responses.200.description: ""
paths./partner_settings.get.responses.200.examples.application/json.result.length: 1
paths./partner_settings.get.responses.200.examples.application/json.result[0].description: A
  description of a partner.
paths./partner_settings.get.responses.200.examples.application/json.result[0].enabled: true
paths./partner_settings.get.responses.200.examples.application/json.result[0].name: partner_name
paths./partner_settings.get.responses.200.examples.application/json.result[0].title: Partner
  title
paths./partner_settings.get.responses.200.schema.properties.result.items.properties.description.description: A
  description of this partner setting.
paths./partner_settings.get.responses.200.schema.properties.result.items.properties.description.type: string
paths./partner_settings.get.responses.200.schema.properties.result.items.properties.enabled.description: Indicates
  if this partner setting has been enabled.
paths./partner_settings.get.responses.200.schema.properties.result.items.properties.enabled.type: boolean
paths./partner_settings.get.responses.200.schema.properties.result.items.properties.name.description: The
  name of the partner setting.
paths./partner_settings.get.responses.200.schema.properties.result.items.properties.name.type: string
paths./partner_settings.get.responses.200.schema.properties.result.items.properties.title.description: The
  title of the partner.
paths./partner_settings.get.responses.200.schema.properties.result.items.properties.title.type: string
paths./partner_settings.get.responses.200.schema.properties.result.items.required.length: 4
paths./partner_settings.get.responses.200.schema.properties.result.items.required[0]: title
paths./partner_settings.get.responses.200.schema.properties.result.items.required[1]: enabled
paths./partner_settings.get.responses.200.schema.properties.result.items.required[2]: name
paths./partner_settings.get.responses.200.schema.properties.result.items.required[3]: description
paths./partner_settings.get.responses.200.schema.properties.result.items.type: object
paths./partner_settings.get.responses.200.schema.properties.result.type: array
paths./partner_settings.get.responses.200.schema.type: object
paths./partner_settings.get.security.length: 1
paths./partner_settings.get.security[0].Authorization.length: 0
paths./partner_settings.get.summary: Returns a list of all partner settings.
paths./partner_settings.get.tags.length: 1
paths./partner_settings.get.tags[0]: Settings - Partner
paths./partner_settings/new_relic.get.description: |-
  **This endpoint allows you to retrieve your current New Relic partner settings.**

  Our partner settings allow you to integrate your SendGrid account with our partners to increase your SendGrid experience and functionality. For more information about our partners, and how you can begin integrating with them, please visit our [User Guide](https://sendgrid.com/docs/User_Guide/Settings/partners.html).

  By integrating with New Relic, you can send your SendGrid email statistics to your New Relic Dashboard. If you enable this setting, your stats will be sent to New Relic every 5 minutes. You will need your New Relic License Key to enable this setting. For more information, please see our [Classroom](https://sendgrid.com/docs/Classroom/Track/Collecting_Data/new_relic.html).
paths./partner_settings/new_relic.get.operationId: GET_partner_settings-new_relic
paths./partner_settings/new_relic.get.produces.length: 1
paths./partner_settings/new_relic.get.produces[0]: application/json
paths./partner_settings/new_relic.get.responses.200.description: ""
paths./partner_settings/new_relic.get.responses.200.examples.application/json.enable_subuser_statistics: false
paths./partner_settings/new_relic.get.responses.200.examples.application/json.enabled: true
paths./partner_settings/new_relic.get.responses.200.examples.application/json.license_key: ""
paths./partner_settings/new_relic.get.responses.200.schema.$ref: '#/definitions/partner_settings_new_relic'
paths./partner_settings/new_relic.get.security.length: 1
paths./partner_settings/new_relic.get.security[0].Authorization.length: 0
paths./partner_settings/new_relic.get.summary: Returns all New Relic partner settings.
paths./partner_settings/new_relic.get.tags.length: 1
paths./partner_settings/new_relic.get.tags[0]: Settings - Partner
paths./partner_settings/new_relic.patch.consumes.length: 1
paths./partner_settings/new_relic.patch.consumes[0]: application/json
paths./partner_settings/new_relic.patch.description: |-
  **This endpoint allows you to update or change your New Relic partner settings.**

  Our partner settings allow you to integrate your SendGrid account with our partners to increase your SendGrid experience and functionality. For more information about our partners, and how you can begin integrating with them, please visit our [User Guide](https://sendgrid.com/docs/User_Guide/Settings/partners.html).

  By integrating with New Relic, you can send your SendGrid email statistics to your New Relic Dashboard. If you enable this setting, your stats will be sent to New Relic every 5 minutes. You will need your New Relic License Key to enable this setting. For more information, please see our [Classroom](https://sendgrid.com/docs/Classroom/Track/Collecting_Data/new_relic.html).
paths./partner_settings/new_relic.patch.operationId: PATCH_partner_settings-new_relic
paths./partner_settings/new_relic.patch.parameters.length: 1
paths./partner_settings/new_relic.patch.parameters[0].in: body
paths./partner_settings/new_relic.patch.parameters[0].name: body
paths./partner_settings/new_relic.patch.parameters[0].schema.example.enable_subuser_statistics: true
paths./partner_settings/new_relic.patch.parameters[0].schema.example.enabled: true
paths./partner_settings/new_relic.patch.parameters[0].schema.example.license_key: ""
paths./partner_settings/new_relic.patch.parameters[0].schema.properties.enable_subuser_statistics.description: Indicates
  if your subuser statistics will be sent to your New Relic Dashboard.
paths./partner_settings/new_relic.patch.parameters[0].schema.properties.enable_subuser_statistics.type: boolean
paths./partner_settings/new_relic.patch.parameters[0].schema.properties.enabled.description: Indicates
  if this partner setting is enabled.
paths./partner_settings/new_relic.patch.parameters[0].schema.properties.enabled.type: boolean
paths./partner_settings/new_relic.patch.parameters[0].schema.properties.license_key.description: The
  license key for your New Relic account.
paths./partner_settings/new_relic.patch.parameters[0].schema.properties.license_key.type: string
paths./partner_settings/new_relic.patch.parameters[0].schema.type: object
paths./partner_settings/new_relic.patch.produces.length: 1
paths./partner_settings/new_relic.patch.produces[0]: application/json
paths./partner_settings/new_relic.patch.responses.200.description: ""
paths./partner_settings/new_relic.patch.responses.200.examples.application/json.enable_subuser_statistics: true
paths./partner_settings/new_relic.patch.responses.200.examples.application/json.enabled: true
paths./partner_settings/new_relic.patch.responses.200.examples.application/json.license_key: ""
paths./partner_settings/new_relic.patch.responses.200.schema.$ref: '#/definitions/partner_settings_new_relic'
paths./partner_settings/new_relic.patch.security.length: 1
paths./partner_settings/new_relic.patch.security[0].Authorization.length: 0
paths./partner_settings/new_relic.patch.summary: Updates New Relic partner settings.
paths./partner_settings/new_relic.patch.tags.length: 1
paths./partner_settings/new_relic.patch.tags[0]: Settings - Partner
paths./scopes.get.description: |-
  **This endpoint returns a list of all scopes that this user has access to.**

  API Keys can be used to authenticate the use of [SendGrid’s v3 Web API](https://sendgrid.com/docs/API_Reference/Web_API_v3/index.html), or the [Mail API Endpoint](https://sendgrid.com/docs/API_Reference/Web_API/mail.html). API Keys may be assigned certain permissions, or scopes, that limit which API endpoints they are able to access. For a more detailed explanation of how you can use API Key permissios, please visit our [User Guide](https://sendgrid.com/docs/User_Guide/Settings/api_keys.html#-API-Key-Permissions) or [Classroom](https://sendgrid.com/docs/Classroom/Basics/API/api_key_permissions.html).
paths./scopes.get.operationId: GET_scopes
paths./scopes.get.parameters.length: 1
paths./scopes.get.parameters[0].$ref: '#/parameters/trait:onBehalfOfSubuser:on-behalf-of'
paths./scopes.get.produces.length: 1
paths./scopes.get.produces[0]: application/json
paths./scopes.get.responses.200.description: ""
paths./scopes.get.responses.200.examples.application/json.scopes.length: 3
paths./scopes.get.responses.200.examples.application/json.scopes[0]: mail.send
paths./scopes.get.responses.200.examples.application/json.scopes[1]: alerts.create
paths./scopes.get.responses.200.examples.application/json.scopes[2]: alerts.read
paths./scopes.get.responses.200.schema.properties.scopes.description: The list of
  scopes for which this user has access.
paths./scopes.get.responses.200.schema.properties.scopes.items.type: string
paths./scopes.get.responses.200.schema.properties.scopes.type: array
paths./scopes.get.responses.200.schema.properties.scopes.uniqueItems: true
paths./scopes.get.responses.200.schema.required.length: 1
paths./scopes.get.responses.200.schema.required[0]: scopes
paths./scopes.get.responses.200.schema.type: object
paths./scopes.get.responses.401.description: ""
paths./scopes.get.responses.401.examples.application/json.errors.length: 1
paths./scopes.get.responses.401.examples.application/json.errors[0].message: authorization
  required
paths./scopes.get.responses.401.schema.properties.errors.description: This 401 response
  indicates that the user making the call doesn't have the authorization to view the
  list of scopes.
paths./scopes.get.responses.401.schema.properties.errors.items.properties.field.description: This
  empty field is returned instead of the list of scopes if the user making the call
  doesn't have the authorization required.
paths./scopes.get.responses.401.schema.properties.errors.items.properties.field.type: "null"
paths./scopes.get.responses.401.schema.properties.errors.items.properties.message.description: Explains
  why the scopes cannot be returned.
paths./scopes.get.responses.401.schema.properties.errors.items.properties.message.type: string
paths./scopes.get.responses.401.schema.properties.errors.items.required.length: 1
paths./scopes.get.responses.401.schema.properties.errors.items.required[0]: message
paths./scopes.get.responses.401.schema.properties.errors.items.type: object
paths./scopes.get.responses.401.schema.properties.errors.type: array
paths./scopes.get.responses.401.schema.required.length: 1
paths./scopes.get.responses.401.schema.required[0]: errors
paths./scopes.get.responses.401.schema.type: object
paths./scopes.get.security.length: 1
paths./scopes.get.security[0].Authorization.length: 0
paths./scopes.get.summary: Retrieve a list of scopes for which this user has access.
paths./scopes.get.tags.length: 1
paths./scopes.get.tags[0]: API Key Permissions
paths./scopes/requests.get.description: |-
  This endpoint allows you to retrieve a list of all recent access requests.

  **Note:** The Response Header's 'link' parameter will include pagination info. For example:

  link: ```<https://api.sendgrid.com/v3/scopes/requests?limit=10&offset=0>; rel="first"; title="1", <https://api.sendgrid.com/v3/scopes/requests?limit=10&offset=10>; rel="last"; title="2", <https://api.sendgrid.com/v3/scopes/requests?limit=10&offset=0>; rel="prev"; title="1"```
paths./scopes/requests.get.operationId: GET_v3-scopes-requests
paths./scopes/requests.get.parameters.length: 2
paths./scopes/requests.get.parameters[0].default: 50
paths./scopes/requests.get.parameters[0].description: Optional field to limit the
  number of results returned.
paths./scopes/requests.get.parameters[0].in: query
paths./scopes/requests.get.parameters[0].name: limit
paths./scopes/requests.get.parameters[0].type: integer
paths./scopes/requests.get.parameters[1].default: 0
paths./scopes/requests.get.parameters[1].description: Optional beginning point in
  the list to retrieve from.
paths./scopes/requests.get.parameters[1].in: query
paths./scopes/requests.get.parameters[1].name: offset
paths./scopes/requests.get.parameters[1].type: integer
paths./scopes/requests.get.produces.length: 1
paths./scopes/requests.get.produces[0]: application/json
paths./scopes/requests.get.responses.200.description: ""
paths./scopes/requests.get.responses.200.examples.application/json.length: 2
paths./scopes/requests.get.responses.200.examples.application/json[0].email: teammate1@example.com
paths./scopes/requests.get.responses.200.examples.application/json[0].first_name: Teammate
paths./scopes/requests.get.responses.200.examples.application/json[0].id: 1
paths./scopes/requests.get.responses.200.examples.application/json[0].last_name: One
paths./scopes/requests.get.responses.200.examples.application/json[0].scope_group_name: Mail
  Settings
paths./scopes/requests.get.responses.200.examples.application/json[0].username: teammate1
paths./scopes/requests.get.responses.200.examples.application/json[1].email: teammate2@example.com
paths./scopes/requests.get.responses.200.examples.application/json[1].first_name: Teammate
paths./scopes/requests.get.responses.200.examples.application/json[1].id: 2
paths./scopes/requests.get.responses.200.examples.application/json[1].last_name: Two
paths./scopes/requests.get.responses.200.examples.application/json[1].scope_group_name: Stats
paths./scopes/requests.get.responses.200.examples.application/json[1].username: teammate2
paths./scopes/requests.get.responses.200.schema.items.properties.email.description: Teammate's
  email
paths./scopes/requests.get.responses.200.schema.items.properties.email.type: string
paths./scopes/requests.get.responses.200.schema.items.properties.first_name.description: Teammate's
  first name
paths./scopes/requests.get.responses.200.schema.items.properties.first_name.type: string
paths./scopes/requests.get.responses.200.schema.items.properties.id.description: Request
  ID
paths./scopes/requests.get.responses.200.schema.items.properties.id.type: integer
paths./scopes/requests.get.responses.200.schema.items.properties.last_name.description: Teammate's
  last name
paths./scopes/requests.get.responses.200.schema.items.properties.last_name.type: string
paths./scopes/requests.get.responses.200.schema.items.properties.scope_group_name.description: Name
  of group of scopes associated to page teammate is requesting access to
paths./scopes/requests.get.responses.200.schema.items.properties.scope_group_name.type: string
paths./scopes/requests.get.responses.200.schema.items.properties.username.description: Teammate's
  username
paths./scopes/requests.get.responses.200.schema.items.properties.username.type: string
paths./scopes/requests.get.responses.200.schema.items.type: object
paths./scopes/requests.get.responses.200.schema.type: array
paths./scopes/requests.get.security.length: 1
paths./scopes/requests.get.security[0].Authorization.length: 0
paths./scopes/requests.get.summary: Retrieve access requests
paths./scopes/requests.get.tags.length: 1
paths./scopes/requests.get.tags[0]: Teammates
paths./scopes/requests/{request_id}.delete.consumes.length: 1
paths./scopes/requests/{request_id}.delete.consumes[0]: application/json
paths./scopes/requests/{request_id}.delete.description: |-
  This endpoint allows you to deny an attempt to access your account.

  **Note:** Only teammate admins may delete a teammate's access request.
paths./scopes/requests/{request_id}.delete.operationId: DELETE_v3-scopes-requests-request_id
paths./scopes/requests/{request_id}.delete.produces.length: 1
paths./scopes/requests/{request_id}.delete.produces[0]: application/json
paths./scopes/requests/{request_id}.delete.responses.204.description: ""
paths./scopes/requests/{request_id}.delete.responses.401.description: ""
paths./scopes/requests/{request_id}.delete.responses.404.description: ""
paths./scopes/requests/{request_id}.delete.responses.404.examples.application/json.errors.length: 1
paths./scopes/requests/{request_id}.delete.responses.404.examples.application/json.errors[0].field: request_id
paths./scopes/requests/{request_id}.delete.responses.404.examples.application/json.errors[0].message: Cannot
  find request
paths./scopes/requests/{request_id}.delete.responses.404.schema.properties.errors.items.properties.field.type: string
paths./scopes/requests/{request_id}.delete.responses.404.schema.properties.errors.items.properties.message.type: string
paths./scopes/requests/{request_id}.delete.responses.404.schema.properties.errors.items.type: object
paths./scopes/requests/{request_id}.delete.responses.404.schema.properties.errors.type: array
paths./scopes/requests/{request_id}.delete.responses.404.schema.type: object
paths./scopes/requests/{request_id}.delete.security.length: 1
paths./scopes/requests/{request_id}.delete.security[0].Authorization.length: 0
paths./scopes/requests/{request_id}.delete.summary: Deny access request
paths./scopes/requests/{request_id}.delete.tags.length: 1
paths./scopes/requests/{request_id}.delete.tags[0]: Teammates
paths./scopes/requests/{request_id}.parameters.length: 1
paths./scopes/requests/{request_id}.parameters[0].description: The ID of the request
  that you want to deny.
paths./scopes/requests/{request_id}.parameters[0].in: path
paths./scopes/requests/{request_id}.parameters[0].name: request_id
paths./scopes/requests/{request_id}.parameters[0].required: true
paths./scopes/requests/{request_id}.parameters[0].type: string
paths./scopes/requests/{request_id}/approve.parameters.length: 1
paths./scopes/requests/{request_id}/approve.parameters[0].description: The ID of the
  request that you want to approve.
paths./scopes/requests/{request_id}/approve.parameters[0].in: path
paths./scopes/requests/{request_id}/approve.parameters[0].name: request_id
paths./scopes/requests/{request_id}/approve.parameters[0].required: true
paths./scopes/requests/{request_id}/approve.parameters[0].type: string
paths./scopes/requests/{request_id}/approve.patch.consumes.length: 1
paths./scopes/requests/{request_id}/approve.patch.consumes[0]: application/json
paths./scopes/requests/{request_id}/approve.patch.description: |-
  This endpoint allows you to approve an access attempt.

  **Note:** Only teammate admins may approve another teammate’s access request.
paths./scopes/requests/{request_id}/approve.patch.operationId: PATCH_v3-scopes-requests-approve-id
paths./scopes/requests/{request_id}/approve.patch.produces.length: 1
paths./scopes/requests/{request_id}/approve.patch.produces[0]: application/json
paths./scopes/requests/{request_id}/approve.patch.responses.200.description: ""
paths./scopes/requests/{request_id}/approve.patch.responses.200.examples.application/json.scope_group_name: Stats
paths./scopes/requests/{request_id}/approve.patch.responses.200.schema.properties.scope_group_name.description: name
  of feature teammate will be given access to
paths./scopes/requests/{request_id}/approve.patch.responses.200.schema.properties.scope_group_name.type: string
paths./scopes/requests/{request_id}/approve.patch.responses.200.schema.type: object
paths./scopes/requests/{request_id}/approve.patch.responses.401.description: ""
paths./scopes/requests/{request_id}/approve.patch.responses.401.schema.type: object
paths./scopes/requests/{request_id}/approve.patch.responses.404.description: ""
paths./scopes/requests/{request_id}/approve.patch.responses.404.schema.properties.errors.items.properties.field.type: string
paths./scopes/requests/{request_id}/approve.patch.responses.404.schema.properties.errors.items.properties.message.type: string
paths./scopes/requests/{request_id}/approve.patch.responses.404.schema.properties.errors.items.type: object
paths./scopes/requests/{request_id}/approve.patch.responses.404.schema.properties.errors.type: array
paths./scopes/requests/{request_id}/approve.patch.responses.404.schema.type: object
paths./scopes/requests/{request_id}/approve.patch.security.length: 1
paths./scopes/requests/{request_id}/approve.patch.security[0].Authorization.length: 0
paths./scopes/requests/{request_id}/approve.patch.summary: Approve access request
paths./scopes/requests/{request_id}/approve.patch.tags.length: 1
paths./scopes/requests/{request_id}/approve.patch.tags[0]: Teammates
paths./senders.get.description: |-
  **This endpoint allows you to retrieve a list of all sender identities that have been created for your account.**

  Sender Identities are required to be verified before use. If your domain has been whitelabeled it will auto verify on creation. Otherwise an email will be sent to the `from.email`.
paths./senders.get.operationId: GET_v3-senders
paths./senders.get.parameters.length: 1
paths./senders.get.parameters[0].$ref: '#/parameters/trait:onBehalfOfSubuser:on-behalf-of'
paths./senders.get.produces.length: 1
paths./senders.get.produces[0]: application/json
paths./senders.get.responses.200.description: ""
paths./senders.get.responses.200.examples.application/json.result.length: 1
paths./senders.get.responses.200.examples.application/json.result[0].address: 123
  Elm St.
paths./senders.get.responses.200.examples.application/json.result[0].address_2: Apt.
  456
paths./senders.get.responses.200.examples.application/json.result[0].city: Denver
paths./senders.get.responses.200.examples.application/json.result[0].country: United
  States
paths./senders.get.responses.200.examples.application/json.result[0].created_at: 1.4498721e+09
paths./senders.get.responses.200.examples.application/json.result[0].from.email: from@example.com
paths./senders.get.responses.200.examples.application/json.result[0].from.name: Example
  INC
paths./senders.get.responses.200.examples.application/json.result[0].id: 1
paths./senders.get.responses.200.examples.application/json.result[0].locked: false
paths./senders.get.responses.200.examples.application/json.result[0].nickname: My
  Sender ID
paths./senders.get.responses.200.examples.application/json.result[0].reply_to.email: replyto@example.com
paths./senders.get.responses.200.examples.application/json.result[0].reply_to.name: Example
  INC
paths./senders.get.responses.200.examples.application/json.result[0].state: Colorado
paths./senders.get.responses.200.examples.application/json.result[0].updated_at: 1.4498721e+09
paths./senders.get.responses.200.examples.application/json.result[0].verified: true
paths./senders.get.responses.200.examples.application/json.result[0].zip: "80202"
paths./senders.get.responses.200.schema.properties.result.items.$ref: '#/definitions/senderID'
paths./senders.get.responses.200.schema.properties.result.type: array
paths./senders.get.responses.200.schema.type: object
paths./senders.get.security.length: 1
paths./senders.get.security[0].Authorization.length: 0
paths./senders.get.summary: Get all Sender Identities
paths./senders.get.tags.length: 1
paths./senders.get.tags[0]: Sender Identities API
paths./senders.post.consumes.length: 1
paths./senders.post.consumes[0]: application/json
paths./senders.post.description: |-
  **This endpoint allows you to create a new sender identity.**

  *You may create up to 100 unique sender identities.*

  Sender Identities are required to be verified before use. If your domain has been whitelabeled it will auto verify on creation. Otherwise an email will be sent to the `from.email`.
paths./senders.post.operationId: POST_senders
paths./senders.post.parameters.length: 2
paths./senders.post.parameters[0].in: body
paths./senders.post.parameters[0].name: body
paths./senders.post.parameters[0].schema.example.address: 123 Elm St.
paths./senders.post.parameters[0].schema.example.address_2: Apt. 456
paths./senders.post.parameters[0].schema.example.city: Denver
paths./senders.post.parameters[0].schema.example.country: United States
paths./senders.post.parameters[0].schema.example.from.email: from@example.com
paths./senders.post.parameters[0].schema.example.from.name: Example INC
paths./senders.post.parameters[0].schema.example.nickname: My Sender ID
paths./senders.post.parameters[0].schema.example.reply_to.email: replyto@example.com
paths./senders.post.parameters[0].schema.example.reply_to.name: Example INC
paths./senders.post.parameters[0].schema.example.state: Colorado
paths./senders.post.parameters[0].schema.example.zip: "80202"
paths./senders.post.parameters[0].schema.properties.address.description: The physical
  address of the sender identity.
paths./senders.post.parameters[0].schema.properties.address.type: string
paths./senders.post.parameters[0].schema.properties.address_2.description: Additional
  sender identity address information.
paths./senders.post.parameters[0].schema.properties.address_2.type: string
paths./senders.post.parameters[0].schema.properties.city.description: The city of
  the sender identity.
paths./senders.post.parameters[0].schema.properties.city.type: string
paths./senders.post.parameters[0].schema.properties.country.description: The country
  of the sender identity.
paths./senders.post.parameters[0].schema.properties.country.type: string
paths./senders.post.parameters[0].schema.properties.from.properties.email.description: This
  is where the email will appear to originate from for your recipient
paths./senders.post.parameters[0].schema.properties.from.properties.email.type: string
paths./senders.post.parameters[0].schema.properties.from.properties.name.description: This
  is the name appended to the from email field. IE - Your name or company name.
paths./senders.post.parameters[0].schema.properties.from.properties.name.type: string
paths./senders.post.parameters[0].schema.properties.from.required.length: 1
paths./senders.post.parameters[0].schema.properties.from.required[0]: email
paths./senders.post.parameters[0].schema.properties.from.type: object
paths./senders.post.parameters[0].schema.properties.nickname.description: A nickname
  for the sender identity. Not used for sending.
paths./senders.post.parameters[0].schema.properties.nickname.type: string
paths./senders.post.parameters[0].schema.properties.reply_to.properties.email.description: This
  is the email that your recipient will reply to.
paths./senders.post.parameters[0].schema.properties.reply_to.properties.email.type: string
paths./senders.post.parameters[0].schema.properties.reply_to.properties.name.description: This
  is the name appended to the reply to email field. IE - Your name or company name.
paths./senders.post.parameters[0].schema.properties.reply_to.properties.name.type: string
paths./senders.post.parameters[0].schema.properties.reply_to.required.length: 1
paths./senders.post.parameters[0].schema.properties.reply_to.required[0]: email
paths./senders.post.parameters[0].schema.properties.reply_to.type: object
paths./senders.post.parameters[0].schema.properties.state.description: The state of
  the sender identity.
paths./senders.post.parameters[0].schema.properties.state.type: string
paths./senders.post.parameters[0].schema.properties.zip.description: The zipcode of
  the sender identity.
paths./senders.post.parameters[0].schema.properties.zip.type: string
paths./senders.post.parameters[0].schema.required.length: 4
paths./senders.post.parameters[0].schema.required[0]: nickname
paths./senders.post.parameters[0].schema.required[1]: address
paths./senders.post.parameters[0].schema.required[2]: city
paths./senders.post.parameters[0].schema.required[3]: country
paths./senders.post.parameters[0].schema.type: object
paths./senders.post.parameters[1].$ref: '#/parameters/trait:onBehalfOfSubuser:on-behalf-of'
paths./senders.post.produces.length: 1
paths./senders.post.produces[0]: application/json
paths./senders.post.responses.201.description: ""
paths./senders.post.responses.201.examples.application/json.address: 123 Elm St.
paths./senders.post.responses.201.examples.application/json.address_2: Apt. 456
paths./senders.post.responses.201.examples.application/json.city: Denver
paths./senders.post.responses.201.examples.application/json.country: United States
paths./senders.post.responses.201.examples.application/json.created_at: 1.4498721e+09
paths./senders.post.responses.201.examples.application/json.from.email: from@example.com
paths./senders.post.responses.201.examples.application/json.from.name: Example INC
paths./senders.post.responses.201.examples.application/json.id: 1
paths./senders.post.responses.201.examples.application/json.locked: false
paths./senders.post.responses.201.examples.application/json.nickname: My Sender ID
paths./senders.post.responses.201.examples.application/json.reply_to.email: replyto@example.com
paths./senders.post.responses.201.examples.application/json.reply_to.name: Example
  INC
paths./senders.post.responses.201.examples.application/json.state: Colorado
paths./senders.post.responses.201.examples.application/json.updated_at: 1.4498721e+09
paths./senders.post.responses.201.examples.application/json.verified: true
paths./senders.post.responses.201.examples.application/json.zip: "80202"
paths./senders.post.responses.201.schema.$ref: '#/definitions/senderID'
paths./senders.post.responses.400.description: ""
paths./senders.post.responses.400.examples.application/json.errors.length: 12
paths./senders.post.responses.400.examples.application/json.errors[0].field: ""
paths./senders.post.responses.400.examples.application/json.errors[0].message: The
  JSON you have submitted cannot be parsed.
paths./senders.post.responses.400.examples.application/json.errors[1].field: ""
paths./senders.post.responses.400.examples.application/json.errors[1].message: You've
  reached your limit of 100 sender identities. Please delete one or more and try again.
paths./senders.post.responses.400.examples.application/json.errors[2].field: nickname
paths./senders.post.responses.400.examples.application/json.errors[2].message: nickname
  is required.
paths./senders.post.responses.400.examples.application/json.errors[3].field: nickname
paths./senders.post.responses.400.examples.application/json.errors[3].message: You
  already have a sender identity with the same nickname.
paths./senders.post.responses.400.examples.application/json.errors[4].field: from_name
paths./senders.post.responses.400.examples.application/json.errors[4].message: from_name
  is required.
paths./senders.post.responses.400.examples.application/json.errors[5].field: from_email
paths./senders.post.responses.400.examples.application/json.errors[5].message: from_email
  is required.
paths./senders.post.responses.400.examples.application/json.errors[6].field: from_email
paths./senders.post.responses.400.examples.application/json.errors[6].message: From
  email is not a valid email address.
paths./senders.post.responses.400.examples.application/json.errors[7].field: reply_to
paths./senders.post.responses.400.examples.application/json.errors[7].message: reply_to
  is required.
paths./senders.post.responses.400.examples.application/json.errors[8].field: reply_to
paths./senders.post.responses.400.examples.application/json.errors[8].message: Reply
  to email is not a valid email address.
paths./senders.post.responses.400.examples.application/json.errors[9].field: address
paths./senders.post.responses.400.examples.application/json.errors[9].message: address
  is required.
paths./senders.post.responses.400.examples.application/json.errors[10].field: city
paths./senders.post.responses.400.examples.application/json.errors[10].message: city
  is required.
paths./senders.post.responses.400.examples.application/json.errors[11].field: country
paths./senders.post.responses.400.examples.application/json.errors[11].message: country
  is required.
paths./senders.post.responses.400.schema.properties.errors.items.properties.field.type: string
paths./senders.post.responses.400.schema.properties.errors.items.properties.message.type: string
paths./senders.post.responses.400.schema.properties.errors.items.type: object
paths./senders.post.responses.400.schema.properties.errors.type: array
paths./senders.post.responses.400.schema.type: object
paths./senders.post.security.length: 1
paths./senders.post.security[0].Authorization.length: 0
paths./senders.post.summary: Create a Sender Identity
paths./senders.post.tags.length: 1
paths./senders.post.tags[0]: Sender Identities API
paths./senders/{sender_id}.delete.description: |-
  **This endoint allows you to delete one of your sender identities.**

  Sender Identities are required to be verified before use. If your domain has been whitelabeled it will auto verify on creation. Otherwise an email will be sent to the `from.email`.
paths./senders/{sender_id}.delete.operationId: DELETE_v3-senders-sender_id
paths./senders/{sender_id}.delete.parameters.length: 1
paths./senders/{sender_id}.delete.parameters[0].$ref: '#/parameters/trait:onBehalfOfSubuser:on-behalf-of'
paths./senders/{sender_id}.delete.produces.length: 1
paths./senders/{sender_id}.delete.produces[0]: application/json
paths./senders/{sender_id}.delete.responses.204.description: ""
paths./senders/{sender_id}.delete.responses.204.schema.type: object
paths./senders/{sender_id}.delete.responses.403.description: ""
paths./senders/{sender_id}.delete.responses.403.examples.application/json.errors.length: 1
paths./senders/{sender_id}.delete.responses.403.examples.application/json.errors[0].field: locked
paths./senders/{sender_id}.delete.responses.403.examples.application/json.errors[0].message: You
  may only delete a sender identity when it is unlocked.
paths./senders/{sender_id}.delete.responses.403.schema.properties.errors.items.properties.field.type: string
paths./senders/{sender_id}.delete.responses.403.schema.properties.errors.items.properties.message.type: string
paths./senders/{sender_id}.delete.responses.403.schema.properties.errors.items.type: object
paths./senders/{sender_id}.delete.responses.403.schema.properties.errors.type: array
paths./senders/{sender_id}.delete.responses.403.schema.type: object
paths./senders/{sender_id}.delete.responses.404.description: ""
paths./senders/{sender_id}.delete.responses.404.examples.application/json.errors.length: 1
paths./senders/{sender_id}.delete.responses.404.examples.application/json.errors[0].field: id
paths./senders/{sender_id}.delete.responses.404.examples.application/json.errors[0].message: resource
  not found
paths./senders/{sender_id}.delete.responses.404.schema.properties.errors.items.properties.field.type: string
paths./senders/{sender_id}.delete.responses.404.schema.properties.errors.items.properties.message.type: string
paths./senders/{sender_id}.delete.responses.404.schema.properties.errors.items.type: object
paths./senders/{sender_id}.delete.responses.404.schema.properties.errors.type: array
paths./senders/{sender_id}.delete.responses.404.schema.type: object
paths./senders/{sender_id}.delete.security.length: 1
paths./senders/{sender_id}.delete.security[0].Authorization.length: 0
paths./senders/{sender_id}.delete.summary: Delete a Sender Identity
paths./senders/{sender_id}.delete.tags.length: 1
paths./senders/{sender_id}.delete.tags[0]: Sender Identities API
paths./senders/{sender_id}.get.description: |-
  **This endpoint allows you to retrieve a specific sender identity.**

  Sender Identities are required to be verified before use. If your domain has been whitelabeled it will auto verify on creation. Otherwise an email will be sent to the `from.email`.
paths./senders/{sender_id}.get.operationId: GET_v3-senders-sender_id
paths./senders/{sender_id}.get.parameters.length: 1
paths./senders/{sender_id}.get.parameters[0].$ref: '#/parameters/trait:onBehalfOfSubuser:on-behalf-of'
paths./senders/{sender_id}.get.produces.length: 1
paths./senders/{sender_id}.get.produces[0]: application/json
paths./senders/{sender_id}.get.responses.200.description: ""
paths./senders/{sender_id}.get.responses.200.examples.application/json.address: 123
  Elm St.
paths./senders/{sender_id}.get.responses.200.examples.application/json.address_2: Apt.
  456
paths./senders/{sender_id}.get.responses.200.examples.application/json.city: Denver
paths./senders/{sender_id}.get.responses.200.examples.application/json.country: United
  States
paths./senders/{sender_id}.get.responses.200.examples.application/json.created_at: 1.4498721e+09
paths./senders/{sender_id}.get.responses.200.examples.application/json.from.email: from@example.com
paths./senders/{sender_id}.get.responses.200.examples.application/json.from.name: Example
  INC
paths./senders/{sender_id}.get.responses.200.examples.application/json.id: 1
paths./senders/{sender_id}.get.responses.200.examples.application/json.locked: false
paths./senders/{sender_id}.get.responses.200.examples.application/json.nickname: My
  Sender ID
paths./senders/{sender_id}.get.responses.200.examples.application/json.reply_to.email: replyto@example.com
paths./senders/{sender_id}.get.responses.200.examples.application/json.reply_to.name: Example
  INC
paths./senders/{sender_id}.get.responses.200.examples.application/json.state: Colorado
paths./senders/{sender_id}.get.responses.200.examples.application/json.updated_at: 1.4498721e+09
paths./senders/{sender_id}.get.responses.200.examples.application/json.verified: true
paths./senders/{sender_id}.get.responses.200.examples.application/json.zip: "80202"
paths./senders/{sender_id}.get.responses.200.schema.$ref: '#/definitions/senderID'
paths./senders/{sender_id}.get.responses.404.description: ""
paths./senders/{sender_id}.get.responses.404.examples.application/json.errors.length: 1
paths./senders/{sender_id}.get.responses.404.examples.application/json.errors[0].field: id
paths./senders/{sender_id}.get.responses.404.examples.application/json.errors[0].message: resource
  not found
paths./senders/{sender_id}.get.responses.404.schema.properties.errors.items.properties.field.type: string
paths./senders/{sender_id}.get.responses.404.schema.properties.errors.items.properties.message.type: string
paths./senders/{sender_id}.get.responses.404.schema.properties.errors.items.type: object
paths./senders/{sender_id}.get.responses.404.schema.properties.errors.type: array
paths./senders/{sender_id}.get.responses.404.schema.type: object
paths./senders/{sender_id}.get.security.length: 1
paths./senders/{sender_id}.get.security[0].Authorization.length: 0
paths./senders/{sender_id}.get.summary: View a Sender Identity
paths./senders/{sender_id}.get.tags.length: 1
paths./senders/{sender_id}.get.tags[0]: Sender Identities API
paths./senders/{sender_id}.parameters.length: 1
paths./senders/{sender_id}.parameters[0].description: The ID of the sender identity
  that you want to update.
paths./senders/{sender_id}.parameters[0].in: path
paths./senders/{sender_id}.parameters[0].name: sender_id
paths./senders/{sender_id}.parameters[0].required: true
paths./senders/{sender_id}.parameters[0].type: integer
paths./senders/{sender_id}.patch.consumes.length: 1
paths./senders/{sender_id}.patch.consumes[0]: application/json
paths./senders/{sender_id}.patch.description: |-
  **This endpoint allows you to update a sender identity.**

  Updates to `from.email` require re-verification. If your domain has been whitelabeled it will auto verify on creation. Otherwise an email will be sent to the `from.email`.

  Partial updates are allowed, but fields that are marked as "required" in the POST (create) endpoint must not be nil if that field is included in the PATCH request.
paths./senders/{sender_id}.patch.operationId: PATCH_v3-senders-sender_id
paths./senders/{sender_id}.patch.parameters.length: 2
paths./senders/{sender_id}.patch.parameters[0].in: body
paths./senders/{sender_id}.patch.parameters[0].name: body
paths./senders/{sender_id}.patch.parameters[0].schema.example.address: 123 Elm St.
paths./senders/{sender_id}.patch.parameters[0].schema.example.address_2: Apt. 456
paths./senders/{sender_id}.patch.parameters[0].schema.example.city: Denver
paths./senders/{sender_id}.patch.parameters[0].schema.example.country: United States
paths./senders/{sender_id}.patch.parameters[0].schema.example.from.email: from@example.com
paths./senders/{sender_id}.patch.parameters[0].schema.example.from.name: Example INC
paths./senders/{sender_id}.patch.parameters[0].schema.example.nickname: My Sender
  ID
paths./senders/{sender_id}.patch.parameters[0].schema.example.reply_to.email: replyto@example.com
paths./senders/{sender_id}.patch.parameters[0].schema.example.reply_to.name: Example
  INC
paths./senders/{sender_id}.patch.parameters[0].schema.example.state: Colorado
paths./senders/{sender_id}.patch.parameters[0].schema.example.zip: "80202"
paths./senders/{sender_id}.patch.parameters[0].schema.properties.address.description: The
  physical address of the sender identity.
paths./senders/{sender_id}.patch.parameters[0].schema.properties.address.type: string
paths./senders/{sender_id}.patch.parameters[0].schema.properties.address_2.description: Additional
  sender identity address information.
paths./senders/{sender_id}.patch.parameters[0].schema.properties.address_2.type: string
paths./senders/{sender_id}.patch.parameters[0].schema.properties.city.description: The
  city of the sender identity.
paths./senders/{sender_id}.patch.parameters[0].schema.properties.city.type: string
paths./senders/{sender_id}.patch.parameters[0].schema.properties.country.description: The
  country of the sender identity.
paths./senders/{sender_id}.patch.parameters[0].schema.properties.country.type: string
paths./senders/{sender_id}.patch.parameters[0].schema.properties.from.properties.email.description: This
  is where the email will appear to originate from for your recipient
paths./senders/{sender_id}.patch.parameters[0].schema.properties.from.properties.email.type: string
paths./senders/{sender_id}.patch.parameters[0].schema.properties.from.properties.name.description: This
  is the name appended to the from email field. IE - Your name or company name.
paths./senders/{sender_id}.patch.parameters[0].schema.properties.from.properties.name.type: string
paths./senders/{sender_id}.patch.parameters[0].schema.properties.from.type: object
paths./senders/{sender_id}.patch.parameters[0].schema.properties.nickname.description: A
  nickname for the sender identity. Not used for sending.
paths./senders/{sender_id}.patch.parameters[0].schema.properties.nickname.type: string
paths./senders/{sender_id}.patch.parameters[0].schema.properties.reply_to.properties.email.description: This
  is the email that your recipient will reply to.
paths./senders/{sender_id}.patch.parameters[0].schema.properties.reply_to.properties.email.type: string
paths./senders/{sender_id}.patch.parameters[0].schema.properties.reply_to.properties.name.description: This
  is the name appended to the reply to email field. IE - Your name or company name.
paths./senders/{sender_id}.patch.parameters[0].schema.properties.reply_to.properties.name.type: string
paths./senders/{sender_id}.patch.parameters[0].schema.properties.reply_to.type: object
paths./senders/{sender_id}.patch.parameters[0].schema.properties.state.description: The
  state of the sender identity.
paths./senders/{sender_id}.patch.parameters[0].schema.properties.state.type: string
paths./senders/{sender_id}.patch.parameters[0].schema.properties.zip.description: The
  zipcode of the sender identity.
paths./senders/{sender_id}.patch.parameters[0].schema.properties.zip.type: string
paths./senders/{sender_id}.patch.parameters[0].schema.type: object
paths./senders/{sender_id}.patch.parameters[1].$ref: '#/parameters/trait:onBehalfOfSubuser:on-behalf-of'
paths./senders/{sender_id}.patch.produces.length: 1
paths./senders/{sender_id}.patch.produces[0]: application/json
paths./senders/{sender_id}.patch.responses.200.description: ""
paths./senders/{sender_id}.patch.responses.200.examples.application/json.address: 123
  Elm St.
paths./senders/{sender_id}.patch.responses.200.examples.application/json.address_2: Apt.
  456
paths./senders/{sender_id}.patch.responses.200.examples.application/json.city: Denver
paths./senders/{sender_id}.patch.responses.200.examples.application/json.country: United
  States
paths./senders/{sender_id}.patch.responses.200.examples.application/json.created_at: 1.4498721e+09
paths./senders/{sender_id}.patch.responses.200.examples.application/json.from.email: from@example.com
paths./senders/{sender_id}.patch.responses.200.examples.application/json.from.name: Example
  INC
paths./senders/{sender_id}.patch.responses.200.examples.application/json.id: 1
paths./senders/{sender_id}.patch.responses.200.examples.application/json.locked: false
paths./senders/{sender_id}.patch.responses.200.examples.application/json.nickname: My
  Sender ID
paths./senders/{sender_id}.patch.responses.200.examples.application/json.reply_to.email: replyto@example.com
paths./senders/{sender_id}.patch.responses.200.examples.application/json.reply_to.name: Example
  INC
paths./senders/{sender_id}.patch.responses.200.examples.application/json.state: Colorado
paths./senders/{sender_id}.patch.responses.200.examples.application/json.updated_at: 1.4498721e+09
paths./senders/{sender_id}.patch.responses.200.examples.application/json.verified: true
paths./senders/{sender_id}.patch.responses.200.examples.application/json.zip: "80202"
paths./senders/{sender_id}.patch.responses.200.schema.$ref: '#/definitions/senderID'
paths./senders/{sender_id}.patch.responses.400.description: ""
paths./senders/{sender_id}.patch.responses.400.examples.application/json.errors.length: 11
paths./senders/{sender_id}.patch.responses.400.examples.application/json.errors[0].field: ""
paths./senders/{sender_id}.patch.responses.400.examples.application/json.errors[0].message: The
  JSON you have submitted cannot be parsed.
paths./senders/{sender_id}.patch.responses.400.examples.application/json.errors[1].field: nickname
paths./senders/{sender_id}.patch.responses.400.examples.application/json.errors[1].message: nickname
  is required.
paths./senders/{sender_id}.patch.responses.400.examples.application/json.errors[2].field: nickname
paths./senders/{sender_id}.patch.responses.400.examples.application/json.errors[2].message: You
  already have a sender identity with the same nickname.
paths./senders/{sender_id}.patch.responses.400.examples.application/json.errors[3].field: from_name
paths./senders/{sender_id}.patch.responses.400.examples.application/json.errors[3].message: from_name
  is required.
paths./senders/{sender_id}.patch.responses.400.examples.application/json.errors[4].field: from_email
paths./senders/{sender_id}.patch.responses.400.examples.application/json.errors[4].message: from_email
  is required.
paths./senders/{sender_id}.patch.responses.400.examples.application/json.errors[5].field: from_email
paths./senders/{sender_id}.patch.responses.400.examples.application/json.errors[5].message: From
  email is not a valid email address.
paths./senders/{sender_id}.patch.responses.400.examples.application/json.errors[6].field: reply_to
paths./senders/{sender_id}.patch.responses.400.examples.application/json.errors[6].message: reply_to
  is required.
paths./senders/{sender_id}.patch.responses.400.examples.application/json.errors[7].field: reply_to
paths./senders/{sender_id}.patch.responses.400.examples.application/json.errors[7].message: Reply
  to email is not a valid email address.
paths./senders/{sender_id}.patch.responses.400.examples.application/json.errors[8].field: address
paths./senders/{sender_id}.patch.responses.400.examples.application/json.errors[8].message: address
  is required.
paths./senders/{sender_id}.patch.responses.400.examples.application/json.errors[9].field: city
paths./senders/{sender_id}.patch.responses.400.examples.application/json.errors[9].message: city
  is required.
paths./senders/{sender_id}.patch.responses.400.examples.application/json.errors[10].field: country
paths./senders/{sender_id}.patch.responses.400.examples.application/json.errors[10].message: country
  is required.
paths./senders/{sender_id}.patch.responses.400.schema.properties.errors.items.properties.field.type: string
paths./senders/{sender_id}.patch.responses.400.schema.properties.errors.items.properties.message.type: string
paths./senders/{sender_id}.patch.responses.400.schema.properties.errors.items.type: object
paths./senders/{sender_id}.patch.responses.400.schema.properties.errors.type: array
paths./senders/{sender_id}.patch.responses.400.schema.type: object
paths./senders/{sender_id}.patch.responses.403.description: ""
paths./senders/{sender_id}.patch.responses.403.examples.application/json.errors.length: 1
paths./senders/{sender_id}.patch.responses.403.examples.application/json.errors[0].field: locked
paths./senders/{sender_id}.patch.responses.403.examples.application/json.errors[0].message: You
  may only update a sender identity when it is unlocked.
paths./senders/{sender_id}.patch.responses.403.schema.properties.errors.items.properties.field.type: string
paths./senders/{sender_id}.patch.responses.403.schema.properties.errors.items.properties.message.type: string
paths./senders/{sender_id}.patch.responses.403.schema.properties.errors.items.type: object
paths./senders/{sender_id}.patch.responses.403.schema.properties.errors.type: array
paths./senders/{sender_id}.patch.responses.403.schema.type: object
paths./senders/{sender_id}.patch.responses.404.description: ""
paths./senders/{sender_id}.patch.responses.404.examples.application/json.errors.length: 1
paths./senders/{sender_id}.patch.responses.404.examples.application/json.errors[0].field: id
paths./senders/{sender_id}.patch.responses.404.examples.application/json.errors[0].message: resource
  not found
paths./senders/{sender_id}.patch.responses.404.schema.properties.errors.items.properties.field.type: string
paths./senders/{sender_id}.patch.responses.404.schema.properties.errors.items.properties.message.type: string
paths./senders/{sender_id}.patch.responses.404.schema.properties.errors.items.type: object
paths./senders/{sender_id}.patch.responses.404.schema.properties.errors.type: array
paths./senders/{sender_id}.patch.responses.404.schema.type: object
paths./senders/{sender_id}.patch.security.length: 1
paths./senders/{sender_id}.patch.security[0].Authorization.length: 0
paths./senders/{sender_id}.patch.summary: Update a Sender Identity
paths./senders/{sender_id}.patch.tags.length: 1
paths./senders/{sender_id}.patch.tags[0]: Sender Identities API
paths./senders/{sender_id}/resend_verification.parameters.length: 1
paths./senders/{sender_id}/resend_verification.parameters[0].description: The ID of
  the sender identity for which you would like to resend a verification email.
paths./senders/{sender_id}/resend_verification.parameters[0].in: path
paths./senders/{sender_id}/resend_verification.parameters[0].name: sender_id
paths./senders/{sender_id}/resend_verification.parameters[0].required: true
paths./senders/{sender_id}/resend_verification.parameters[0].type: integer
paths./senders/{sender_id}/resend_verification.post.description: |-
  **This enpdoint allows you to resend a sender identity verification email.**

  Sender Identities are required to be verified before use. If your domain has been whitelabeled it will auto verify on creation. Otherwise an email will be sent to the `from.email`.
paths./senders/{sender_id}/resend_verification.post.operationId: POST_v3-senders-sender_id-resend_verification
paths./senders/{sender_id}/resend_verification.post.parameters.length: 1
paths./senders/{sender_id}/resend_verification.post.parameters[0].$ref: '#/parameters/trait:onBehalfOfSubuser:on-behalf-of'
paths./senders/{sender_id}/resend_verification.post.produces.length: 1
paths./senders/{sender_id}/resend_verification.post.produces[0]: application/json
paths./senders/{sender_id}/resend_verification.post.responses.204.description: ""
paths./senders/{sender_id}/resend_verification.post.responses.204.schema.type: object
paths./senders/{sender_id}/resend_verification.post.responses.400.description: ""
paths./senders/{sender_id}/resend_verification.post.responses.400.examples.application/json.errors.length: 1
paths./senders/{sender_id}/resend_verification.post.responses.400.examples.application/json.errors[0].field: ""
paths./senders/{sender_id}/resend_verification.post.responses.400.examples.application/json.errors[0].message: The
  Sender Identity is already verified.  No email sent.
paths./senders/{sender_id}/resend_verification.post.responses.400.schema.properties.errors.items.properties.field.type: string
paths./senders/{sender_id}/resend_verification.post.responses.400.schema.properties.errors.items.properties.message.type: string
paths./senders/{sender_id}/resend_verification.post.responses.400.schema.properties.errors.items.type: object
paths./senders/{sender_id}/resend_verification.post.responses.400.schema.properties.errors.type: array
paths./senders/{sender_id}/resend_verification.post.responses.400.schema.type: object
paths./senders/{sender_id}/resend_verification.post.responses.404.description: ""
paths./senders/{sender_id}/resend_verification.post.responses.404.examples.application/json.errors.length: 1
paths./senders/{sender_id}/resend_verification.post.responses.404.examples.application/json.errors[0].field: id
paths./senders/{sender_id}/resend_verification.post.responses.404.examples.application/json.errors[0].message: resource
  not found
paths./senders/{sender_id}/resend_verification.post.responses.404.schema.properties.errors.items.properties.field.type: string
paths./senders/{sender_id}/resend_verification.post.responses.404.schema.properties.errors.items.properties.message.type: string
paths./senders/{sender_id}/resend_verification.post.responses.404.schema.properties.errors.items.type: object
paths./senders/{sender_id}/resend_verification.post.responses.404.schema.properties.errors.type: array
paths./senders/{sender_id}/resend_verification.post.responses.404.schema.type: object
paths./senders/{sender_id}/resend_verification.post.security.length: 1
paths./senders/{sender_id}/resend_verification.post.security[0].Authorization.length: 0
paths./senders/{sender_id}/resend_verification.post.summary: Resend Sender Identity
  Verification
paths./senders/{sender_id}/resend_verification.post.tags.length: 1
paths./senders/{sender_id}/resend_verification.post.tags[0]: Sender Identities API
paths./stats.get.description: |-
  **This endpoint allows you to retrieve all of your global email statistics between a given date range.**

  Parent accounts will see aggregated stats for their account and all subuser accounts. Subuser accounts will only see their own stats.
paths./stats.get.operationId: GET_stats
paths./stats.get.parameters.length: 6
paths./stats.get.parameters[0].description: The number of results to return.
paths./stats.get.parameters[0].in: query
paths./stats.get.parameters[0].name: limit
paths./stats.get.parameters[0].required: false
paths./stats.get.parameters[0].type: integer
paths./stats.get.parameters[1].description: The point in the list to begin retrieving
  results.
paths./stats.get.parameters[1].in: query
paths./stats.get.parameters[1].name: offset
paths./stats.get.parameters[1].required: false
paths./stats.get.parameters[1].type: integer
paths./stats.get.parameters[2].description: How to group the statistics. Must be either
  "day", "week", or "month".
paths./stats.get.parameters[2].enum.length: 3
paths./stats.get.parameters[2].enum[0]: day
paths./stats.get.parameters[2].enum[1]: week
paths./stats.get.parameters[2].enum[2]: month
paths./stats.get.parameters[2].in: query
paths./stats.get.parameters[2].name: aggregated_by
paths./stats.get.parameters[2].required: false
paths./stats.get.parameters[2].type: string
paths./stats.get.parameters[3].description: The starting date of the statistics to
  retrieve. Must follow format YYYY-MM-DD.
paths./stats.get.parameters[3].in: query
paths./stats.get.parameters[3].name: start_date
paths./stats.get.parameters[3].required: true
paths./stats.get.parameters[3].type: string
paths./stats.get.parameters[4].description: The end date of the statistics to retrieve.
  Defaults to today. Must follow format YYYY-MM-DD.
paths./stats.get.parameters[4].in: query
paths./stats.get.parameters[4].name: end_date
paths./stats.get.parameters[4].required: false
paths./stats.get.parameters[4].type: string
paths./stats.get.parameters[5].$ref: '#/parameters/trait:onBehalfOfSubuser:on-behalf-of'
paths./stats.get.produces.length: 1
paths./stats.get.produces[0]: application/json
paths./stats.get.responses.200.description: ""
paths./stats.get.responses.200.examples.application/json.length: 7
paths./stats.get.responses.200.examples.application/json[0].date: 2015-11-03
paths./stats.get.responses.200.examples.application/json[0].stats.length: 1
paths./stats.get.responses.200.examples.application/json[0].stats[0].metrics.blocks: 0
paths./stats.get.responses.200.examples.application/json[0].stats[0].metrics.bounce_drops: 0
paths./stats.get.responses.200.examples.application/json[0].stats[0].metrics.bounces: 0
paths./stats.get.responses.200.examples.application/json[0].stats[0].metrics.clicks: 0
paths./stats.get.responses.200.examples.application/json[0].stats[0].metrics.deferred: 0
paths./stats.get.responses.200.examples.application/json[0].stats[0].metrics.delivered: 0
paths./stats.get.responses.200.examples.application/json[0].stats[0].metrics.invalid_emails: 0
paths./stats.get.responses.200.examples.application/json[0].stats[0].metrics.opens: 0
paths./stats.get.responses.200.examples.application/json[0].stats[0].metrics.processed: 0
paths./stats.get.responses.200.examples.application/json[0].stats[0].metrics.requests: 0
paths./stats.get.responses.200.examples.application/json[0].stats[0].metrics.spam_report_drops: 0
paths./stats.get.responses.200.examples.application/json[0].stats[0].metrics.spam_reports: 0
paths./stats.get.responses.200.examples.application/json[0].stats[0].metrics.unique_clicks: 0
paths./stats.get.responses.200.examples.application/json[0].stats[0].metrics.unique_opens: 0
paths./stats.get.responses.200.examples.application/json[0].stats[0].metrics.unsubscribe_drops: 0
paths./stats.get.responses.200.examples.application/json[0].stats[0].metrics.unsubscribes: 0
paths./stats.get.responses.200.examples.application/json[1].date: 2015-11-04
paths./stats.get.responses.200.examples.application/json[1].stats.length: 1
paths./stats.get.responses.200.examples.application/json[1].stats[0].metrics.blocks: 0
paths./stats.get.responses.200.examples.application/json[1].stats[0].metrics.bounce_drops: 0
paths./stats.get.responses.200.examples.application/json[1].stats[0].metrics.bounces: 0
paths./stats.get.responses.200.examples.application/json[1].stats[0].metrics.clicks: 0
paths./stats.get.responses.200.examples.application/json[1].stats[0].metrics.deferred: 0
paths./stats.get.responses.200.examples.application/json[1].stats[0].metrics.delivered: 0
paths./stats.get.responses.200.examples.application/json[1].stats[0].metrics.invalid_emails: 0
paths./stats.get.responses.200.examples.application/json[1].stats[0].metrics.opens: 0
paths./stats.get.responses.200.examples.application/json[1].stats[0].metrics.processed: 0
paths./stats.get.responses.200.examples.application/json[1].stats[0].metrics.requests: 0
paths./stats.get.responses.200.examples.application/json[1].stats[0].metrics.spam_report_drops: 0
paths./stats.get.responses.200.examples.application/json[1].stats[0].metrics.spam_reports: 0
paths./stats.get.responses.200.examples.application/json[1].stats[0].metrics.unique_clicks: 0
paths./stats.get.responses.200.examples.application/json[1].stats[0].metrics.unique_opens: 0
paths./stats.get.responses.200.examples.application/json[1].stats[0].metrics.unsubscribe_drops: 0
paths./stats.get.responses.200.examples.application/json[1].stats[0].metrics.unsubscribes: 0
paths./stats.get.responses.200.examples.application/json[2].date: 2015-11-05
paths./stats.get.responses.200.examples.application/json[2].stats.length: 1
paths./stats.get.responses.200.examples.application/json[2].stats[0].metrics.blocks: 0
paths./stats.get.responses.200.examples.application/json[2].stats[0].metrics.bounce_drops: 0
paths./stats.get.responses.200.examples.application/json[2].stats[0].metrics.bounces: 0
paths./stats.get.responses.200.examples.application/json[2].stats[0].metrics.clicks: 0
paths./stats.get.responses.200.examples.application/json[2].stats[0].metrics.deferred: 0
paths./stats.get.responses.200.examples.application/json[2].stats[0].metrics.delivered: 0
paths./stats.get.responses.200.examples.application/json[2].stats[0].metrics.invalid_emails: 0
paths./stats.get.responses.200.examples.application/json[2].stats[0].metrics.opens: 0
paths./stats.get.responses.200.examples.application/json[2].stats[0].metrics.processed: 0
paths./stats.get.responses.200.examples.application/json[2].stats[0].metrics.requests: 0
paths./stats.get.responses.200.examples.application/json[2].stats[0].metrics.spam_report_drops: 0
paths./stats.get.responses.200.examples.application/json[2].stats[0].metrics.spam_reports: 0
paths./stats.get.responses.200.examples.application/json[2].stats[0].metrics.unique_clicks: 0
paths./stats.get.responses.200.examples.application/json[2].stats[0].metrics.unique_opens: 0
paths./stats.get.responses.200.examples.application/json[2].stats[0].metrics.unsubscribe_drops: 0
paths./stats.get.responses.200.examples.application/json[2].stats[0].metrics.unsubscribes: 0
paths./stats.get.responses.200.examples.application/json[3].date: 2015-11-06
paths./stats.get.responses.200.examples.application/json[3].stats.length: 1
paths./stats.get.responses.200.examples.application/json[3].stats[0].metrics.blocks: 0
paths./stats.get.responses.200.examples.application/json[3].stats[0].metrics.bounce_drops: 0
paths./stats.get.responses.200.examples.application/json[3].stats[0].metrics.bounces: 0
paths./stats.get.responses.200.examples.application/json[3].stats[0].metrics.clicks: 0
paths./stats.get.responses.200.examples.application/json[3].stats[0].metrics.deferred: 0
paths./stats.get.responses.200.examples.application/json[3].stats[0].metrics.delivered: 0
paths./stats.get.responses.200.examples.application/json[3].stats[0].metrics.invalid_emails: 0
paths./stats.get.responses.200.examples.application/json[3].stats[0].metrics.opens: 0
paths./stats.get.responses.200.examples.application/json[3].stats[0].metrics.processed: 0
paths./stats.get.responses.200.examples.application/json[3].stats[0].metrics.requests: 0
paths./stats.get.responses.200.examples.application/json[3].stats[0].metrics.spam_report_drops: 0
paths./stats.get.responses.200.examples.application/json[3].stats[0].metrics.spam_reports: 0
paths./stats.get.responses.200.examples.application/json[3].stats[0].metrics.unique_clicks: 0
paths./stats.get.responses.200.examples.application/json[3].stats[0].metrics.unique_opens: 0
paths./stats.get.responses.200.examples.application/json[3].stats[0].metrics.unsubscribe_drops: 0
paths./stats.get.responses.200.examples.application/json[3].stats[0].metrics.unsubscribes: 0
paths./stats.get.responses.200.examples.application/json[4].date: 2015-11-07
paths./stats.get.responses.200.examples.application/json[4].stats.length: 1
paths./stats.get.responses.200.examples.application/json[4].stats[0].metrics.blocks: 0
paths./stats.get.responses.200.examples.application/json[4].stats[0].metrics.bounce_drops: 0
paths./stats.get.responses.200.examples.application/json[4].stats[0].metrics.bounces: 0
paths./stats.get.responses.200.examples.application/json[4].stats[0].metrics.clicks: 0
paths./stats.get.responses.200.examples.application/json[4].stats[0].metrics.deferred: 0
paths./stats.get.responses.200.examples.application/json[4].stats[0].metrics.delivered: 0
paths./stats.get.responses.200.examples.application/json[4].stats[0].metrics.invalid_emails: 0
paths./stats.get.responses.200.examples.application/json[4].stats[0].metrics.opens: 0
paths./stats.get.responses.200.examples.application/json[4].stats[0].metrics.processed: 0
paths./stats.get.responses.200.examples.application/json[4].stats[0].metrics.requests: 0
paths./stats.get.responses.200.examples.application/json[4].stats[0].metrics.spam_report_drops: 0
paths./stats.get.responses.200.examples.application/json[4].stats[0].metrics.spam_reports: 0
paths./stats.get.responses.200.examples.application/json[4].stats[0].metrics.unique_clicks: 0
paths./stats.get.responses.200.examples.application/json[4].stats[0].metrics.unique_opens: 0
paths./stats.get.responses.200.examples.application/json[4].stats[0].metrics.unsubscribe_drops: 0
paths./stats.get.responses.200.examples.application/json[4].stats[0].metrics.unsubscribes: 0
paths./stats.get.responses.200.examples.application/json[5].date: 2015-11-08
paths./stats.get.responses.200.examples.application/json[5].stats.length: 1
paths./stats.get.responses.200.examples.application/json[5].stats[0].metrics.blocks: 0
paths./stats.get.responses.200.examples.application/json[5].stats[0].metrics.bounce_drops: 0
paths./stats.get.responses.200.examples.application/json[5].stats[0].metrics.bounces: 0
paths./stats.get.responses.200.examples.application/json[5].stats[0].metrics.clicks: 0
paths./stats.get.responses.200.examples.application/json[5].stats[0].metrics.deferred: 0
paths./stats.get.responses.200.examples.application/json[5].stats[0].metrics.delivered: 0
paths./stats.get.responses.200.examples.application/json[5].stats[0].metrics.invalid_emails: 0
paths./stats.get.responses.200.examples.application/json[5].stats[0].metrics.opens: 0
paths./stats.get.responses.200.examples.application/json[5].stats[0].metrics.processed: 0
paths./stats.get.responses.200.examples.application/json[5].stats[0].metrics.requests: 0
paths./stats.get.responses.200.examples.application/json[5].stats[0].metrics.spam_report_drops: 0
paths./stats.get.responses.200.examples.application/json[5].stats[0].metrics.spam_reports: 0
paths./stats.get.responses.200.examples.application/json[5].stats[0].metrics.unique_clicks: 0
paths./stats.get.responses.200.examples.application/json[5].stats[0].metrics.unique_opens: 0
paths./stats.get.responses.200.examples.application/json[5].stats[0].metrics.unsubscribe_drops: 0
paths./stats.get.responses.200.examples.application/json[5].stats[0].metrics.unsubscribes: 0
paths./stats.get.responses.200.examples.application/json[6].date: 2015-11-09
paths./stats.get.responses.200.examples.application/json[6].stats.length: 1
paths./stats.get.responses.200.examples.application/json[6].stats[0].metrics.blocks: 0
paths./stats.get.responses.200.examples.application/json[6].stats[0].metrics.bounce_drops: 0
paths./stats.get.responses.200.examples.application/json[6].stats[0].metrics.bounces: 0
paths./stats.get.responses.200.examples.application/json[6].stats[0].metrics.clicks: 0
paths./stats.get.responses.200.examples.application/json[6].stats[0].metrics.deferred: 0
paths./stats.get.responses.200.examples.application/json[6].stats[0].metrics.delivered: 0
paths./stats.get.responses.200.examples.application/json[6].stats[0].metrics.invalid_emails: 0
paths./stats.get.responses.200.examples.application/json[6].stats[0].metrics.opens: 0
paths./stats.get.responses.200.examples.application/json[6].stats[0].metrics.processed: 0
paths./stats.get.responses.200.examples.application/json[6].stats[0].metrics.requests: 0
paths./stats.get.responses.200.examples.application/json[6].stats[0].metrics.spam_report_drops: 0
paths./stats.get.responses.200.examples.application/json[6].stats[0].metrics.spam_reports: 0
paths./stats.get.responses.200.examples.application/json[6].stats[0].metrics.unique_clicks: 0
paths./stats.get.responses.200.examples.application/json[6].stats[0].metrics.unique_opens: 0
paths./stats.get.responses.200.examples.application/json[6].stats[0].metrics.unsubscribe_drops: 0
paths./stats.get.responses.200.examples.application/json[6].stats[0].metrics.unsubscribes: 0
paths./stats.get.responses.200.schema.items.properties.date.description: The date
  the stats were gathered.
paths./stats.get.responses.200.schema.items.properties.date.type: string
paths./stats.get.responses.200.schema.items.properties.stats.description: The individual
  email activity stats.
paths./stats.get.responses.200.schema.items.properties.stats.items.properties.metrics.properties.blocks.description: The
  number of emails that were not allowed to be delivered by ISPs.
paths./stats.get.responses.200.schema.items.properties.stats.items.properties.metrics.properties.blocks.type: integer
paths./stats.get.responses.200.schema.items.properties.stats.items.properties.metrics.properties.bounce_drops.description: The
  number of emails that were dropped because of a bounce.
paths./stats.get.responses.200.schema.items.properties.stats.items.properties.metrics.properties.bounce_drops.type: integer
paths./stats.get.responses.200.schema.items.properties.stats.items.properties.metrics.properties.bounces.description: The
  number of emails that bounced instead of being delivered.
paths./stats.get.responses.200.schema.items.properties.stats.items.properties.metrics.properties.bounces.type: integer
paths./stats.get.responses.200.schema.items.properties.stats.items.properties.metrics.properties.clicks.description: The
  number of links that were clicked in your emails.
paths./stats.get.responses.200.schema.items.properties.stats.items.properties.metrics.properties.clicks.type: integer
paths./stats.get.responses.200.schema.items.properties.stats.items.properties.metrics.properties.deferred.description: 'The
  number of emails that temporarily could not be delivered. '
paths./stats.get.responses.200.schema.items.properties.stats.items.properties.metrics.properties.deferred.type: integer
paths./stats.get.responses.200.schema.items.properties.stats.items.properties.metrics.properties.delivered.description: The
  number of emails SendGrid was able to confirm were actually delivered to a recipient.
paths./stats.get.responses.200.schema.items.properties.stats.items.properties.metrics.properties.delivered.type: integer
paths./stats.get.responses.200.schema.items.properties.stats.items.properties.metrics.properties.invalid_emails.description: The
  number of recipients who had malformed email addresses or whose mail provider reported
  the address as invalid.
paths./stats.get.responses.200.schema.items.properties.stats.items.properties.metrics.properties.invalid_emails.type: integer
paths./stats.get.responses.200.schema.items.properties.stats.items.properties.metrics.properties.opens.description: The
  total number of times your emails were opened by recipients.
paths./stats.get.responses.200.schema.items.properties.stats.items.properties.metrics.properties.opens.type: integer
paths./stats.get.responses.200.schema.items.properties.stats.items.properties.metrics.properties.processed.description: Requests
  from your website, application, or mail client via SMTP Relay or the API that SendGrid
  processed.
paths./stats.get.responses.200.schema.items.properties.stats.items.properties.metrics.properties.processed.type: integer
paths./stats.get.responses.200.schema.items.properties.stats.items.properties.metrics.properties.requests.description: The
  number of emails that were requested to be delivered.
paths./stats.get.responses.200.schema.items.properties.stats.items.properties.metrics.properties.requests.type: integer
paths./stats.get.responses.200.schema.items.properties.stats.items.properties.metrics.properties.spam_report_drops.description: The
  number of emails that were dropped due to a recipient previously marking your emails
  as spam.
paths./stats.get.responses.200.schema.items.properties.stats.items.properties.metrics.properties.spam_report_drops.type: integer
paths./stats.get.responses.200.schema.items.properties.stats.items.properties.metrics.properties.spam_reports.description: The
  number of recipients who marked your email as spam.
paths./stats.get.responses.200.schema.items.properties.stats.items.properties.metrics.properties.spam_reports.type: integer
paths./stats.get.responses.200.schema.items.properties.stats.items.properties.metrics.properties.unique_clicks.description: The
  number of unique recipients who clicked links in your emails.
paths./stats.get.responses.200.schema.items.properties.stats.items.properties.metrics.properties.unique_clicks.type: integer
paths./stats.get.responses.200.schema.items.properties.stats.items.properties.metrics.properties.unique_opens.description: The
  number of unique recipients who opened your emails.
paths./stats.get.responses.200.schema.items.properties.stats.items.properties.metrics.properties.unique_opens.type: integer
paths./stats.get.responses.200.schema.items.properties.stats.items.properties.metrics.properties.unsubscribe_drops.description: The
  number of emails dropped due to a recipient unsubscribing from your emails.
paths./stats.get.responses.200.schema.items.properties.stats.items.properties.metrics.properties.unsubscribe_drops.type: integer
paths./stats.get.responses.200.schema.items.properties.stats.items.properties.metrics.properties.unsubscribes.description: The
  number of recipients who unsubscribed from your emails.
paths./stats.get.responses.200.schema.items.properties.stats.items.properties.metrics.properties.unsubscribes.type: integer
paths./stats.get.responses.200.schema.items.properties.stats.items.properties.metrics.type: object
paths./stats.get.responses.200.schema.items.properties.stats.items.type: object
paths./stats.get.responses.200.schema.items.properties.stats.type: array
paths./stats.get.responses.200.schema.items.required.length: 2
paths./stats.get.responses.200.schema.items.required[0]: date
paths./stats.get.responses.200.schema.items.required[1]: stats
paths./stats.get.responses.200.schema.items.type: object
paths./stats.get.responses.200.schema.type: array
paths./stats.get.security.length: 1
paths./stats.get.security[0].Authorization.length: 0
paths./stats.get.summary: Retrieve global email statistics
paths./stats.get.tags.length: 1
paths./stats.get.tags[0]: Stats
paths./subusers.get.description: |-
  This endpoint allows you to retrieve a list of all of your subusers. You can choose to retrieve specific subusers as well as limit the results that come back from the API.

  For more information about Subusers:

  * [User Guide > Subusers](https://sendgrid.com/docs/User_Guide/Settings/Subusers/index.html)
  * [Classroom > How do I add more subusers to my account?](https://sendgrid.com/docs/Classroom/Basics/Account/how_do_i_add_more_subusers_to_my_account.html)
paths./subusers.get.operationId: GET_subusers
paths./subusers.get.parameters.length: 3
paths./subusers.get.parameters[0].description: The username of this subuser.
paths./subusers.get.parameters[0].in: query
paths./subusers.get.parameters[0].name: username
paths./subusers.get.parameters[0].type: string
paths./subusers.get.parameters[1].description: The number of results you would like
  to get in each request.
paths./subusers.get.parameters[1].in: query
paths./subusers.get.parameters[1].name: limit
paths./subusers.get.parameters[1].type: integer
paths./subusers.get.parameters[2].description: The number of subusers to skip.
paths./subusers.get.parameters[2].in: query
paths./subusers.get.parameters[2].name: offset
paths./subusers.get.parameters[2].type: integer
paths./subusers.get.produces.length: 1
paths./subusers.get.produces[0]: application/json
paths./subusers.get.responses.200.description: ""
paths./subusers.get.responses.200.examples.application/json.length: 2
paths./subusers.get.responses.200.examples.application/json[0].disabled: false
paths./subusers.get.responses.200.examples.application/json[0].email: example@example.com
paths./subusers.get.responses.200.examples.application/json[0].id: 1234
paths./subusers.get.responses.200.examples.application/json[0].username: example_subuser
paths./subusers.get.responses.200.examples.application/json[1].disabled: false
paths./subusers.get.responses.200.examples.application/json[1].email: example2@example.com
paths./subusers.get.responses.200.examples.application/json[1].id: 1234
paths./subusers.get.responses.200.examples.application/json[1].username: example_subuser2
paths./subusers.get.responses.200.schema.items.$ref: '#/definitions/subuser'
paths./subusers.get.responses.200.schema.type: array
paths./subusers.get.responses.401.description: Unexpected error in API call. See HTTP
  response body for details.
paths./subusers.get.responses.401.examples.application/json.errors.length: 1
paths./subusers.get.responses.401.examples.application/json.errors[0].message: authorization
  required
paths./subusers.get.responses.401.schema.$ref: '#/definitions/global:ErrorResponse'
paths./subusers.get.security.length: 1
paths./subusers.get.security[0].Authorization.length: 0
paths./subusers.get.summary: List all Subusers
paths./subusers.get.tags.length: 1
paths./subusers.get.tags[0]: Subusers API
paths./subusers.post.consumes.length: 1
paths./subusers.post.consumes[0]: application/json
paths./subusers.post.description: |-
  This endpoint allows you to retrieve a list of all of your subusers. You can choose to retrieve specific subusers as well as limit the results that come back from the API.

  For more information about Subusers:

  * [User Guide > Subusers](https://sendgrid.com/docs/User_Guide/Settings/Subusers/index.html)
  * [Classroom > How do I add more subusers to my account?](https://sendgrid.com/docs/Classroom/Basics/Account/how_do_i_add_more_subusers_to_my_account.html)
paths./subusers.post.operationId: POST_subusers
paths./subusers.post.parameters.length: 1
paths./subusers.post.parameters[0].in: body
paths./subusers.post.parameters[0].name: body
paths./subusers.post.parameters[0].schema.example.email: John@example.com
paths./subusers.post.parameters[0].schema.example.ips.length: 2
paths./subusers.post.parameters[0].schema.example.ips[0]: 1.1.1.1
paths./subusers.post.parameters[0].schema.example.ips[1]: 2.2.2.2
paths./subusers.post.parameters[0].schema.example.password: johns_password
paths./subusers.post.parameters[0].schema.example.username: John@example.com
paths./subusers.post.parameters[0].schema.properties.email.description: The email
  address of the subuser.
paths./subusers.post.parameters[0].schema.properties.email.format: email
paths./subusers.post.parameters[0].schema.properties.email.type: string
paths./subusers.post.parameters[0].schema.properties.ips.description: The IP addresses
  that should be assigned to this subuser.
paths./subusers.post.parameters[0].schema.properties.ips.items.format: ipv4
paths./subusers.post.parameters[0].schema.properties.ips.items.type: string
paths./subusers.post.parameters[0].schema.properties.ips.type: array
paths./subusers.post.parameters[0].schema.properties.password.description: The password
  this subuser will use when logging into SendGrid.
paths./subusers.post.parameters[0].schema.properties.password.type: string
paths./subusers.post.parameters[0].schema.properties.username.description: The username
  for this subuser.
paths./subusers.post.parameters[0].schema.properties.username.type: string
paths./subusers.post.parameters[0].schema.required.length: 4
paths./subusers.post.parameters[0].schema.required[0]: username
paths./subusers.post.parameters[0].schema.required[1]: email
paths./subusers.post.parameters[0].schema.required[2]: password
paths./subusers.post.parameters[0].schema.required[3]: ips
paths./subusers.post.parameters[0].schema.type: object
paths./subusers.post.produces.length: 1
paths./subusers.post.produces[0]: application/json
paths./subusers.post.responses.200.description: ""
paths./subusers.post.responses.200.examples.application/json.authorization_token: ""
paths./subusers.post.responses.200.examples.application/json.credit_allocation.type: unlimited
paths./subusers.post.responses.200.examples.application/json.email: example@example.com
paths./subusers.post.responses.200.examples.application/json.signup_session_token: ""
paths./subusers.post.responses.200.examples.application/json.user_id: 1234
paths./subusers.post.responses.200.examples.application/json.username: example_subuser
paths./subusers.post.responses.200.schema.$ref: '#/definitions/subuser_post'
paths./subusers.post.responses.400.description: ""
paths./subusers.post.responses.400.examples.application/json.errors.length: 2
paths./subusers.post.responses.400.examples.application/json.errors[0].message: username
  exists
paths./subusers.post.responses.400.examples.application/json.errors[1].message: unable
  to validate IPs at this time
paths./subusers.post.responses.400.schema.$ref: '#/definitions/global:ErrorResponse'
paths./subusers.post.responses.401.description: ""
paths./subusers.post.responses.401.examples.application/json.errors.length: 1
paths./subusers.post.responses.401.examples.application/json.errors[0].message: authorization
  required
paths./subusers.post.responses.401.schema.$ref: '#/definitions/global:ErrorResponse'
paths./subusers.post.responses.403.description: ""
paths./subusers.post.responses.403.examples.application/json.errors.length: 1
paths./subusers.post.responses.403.examples.application/json.errors[0].message: you
  dont have permission to access this resource
paths./subusers.post.responses.403.schema.$ref: '#/definitions/global:ErrorResponse'
paths./subusers.post.responses.500.description: ""
paths./subusers.post.responses.500.examples.application/json.errors.length: 1
paths./subusers.post.responses.500.examples.application/json.errors[0].message: unable
  to validate IPs at this time
paths./subusers.post.responses.500.schema.type: object
paths./subusers.post.security.length: 1
paths./subusers.post.security[0].Authorization.length: 0
paths./subusers.post.summary: Create Subuser
paths./subusers.post.tags.length: 1
paths./subusers.post.tags[0]: Subusers API
paths./subusers/{subuser_name}.delete.description: |-
  This endpoint allows you to delete a subuser. This is a permanent action, once deleted a subuser cannot be retrieved.

  For more information about Subusers:

  * [User Guide > Subusers](https://sendgrid.com/docs/User_Guide/Settings/Subusers/index.html)
  * [Classroom > How do I add more subusers to my account?](https://sendgrid.com/docs/Classroom/Basics/Account/how_do_i_add_more_subusers_to_my_account.html)
paths./subusers/{subuser_name}.delete.operationId: DELETE_subusers-subuser_name
paths./subusers/{subuser_name}.delete.parameters.length: 1
paths./subusers/{subuser_name}.delete.parameters[0].in: body
paths./subusers/{subuser_name}.delete.parameters[0].name: body
paths./subusers/{subuser_name}.delete.parameters[0].schema.type: "null"
paths./subusers/{subuser_name}.delete.produces.length: 1
paths./subusers/{subuser_name}.delete.produces[0]: application/json
paths./subusers/{subuser_name}.delete.responses.204.description: ""
paths./subusers/{subuser_name}.delete.responses.204.schema.type: object
paths./subusers/{subuser_name}.delete.responses.401.description: ""
paths./subusers/{subuser_name}.delete.responses.401.examples.application/json.errors.length: 1
paths./subusers/{subuser_name}.delete.responses.401.examples.application/json.errors[0].message: authorization
  required
paths./subusers/{subuser_name}.delete.responses.401.schema.$ref: '#/definitions/global:ErrorResponse'
paths./subusers/{subuser_name}.delete.security.length: 1
paths./subusers/{subuser_name}.delete.security[0].Authorization.length: 0
paths./subusers/{subuser_name}.delete.summary: Delete a subuser
paths./subusers/{subuser_name}.delete.tags.length: 1
paths./subusers/{subuser_name}.delete.tags[0]: Subusers API
paths./subusers/{subuser_name}.parameters.length: 1
paths./subusers/{subuser_name}.parameters[0].in: path
paths./subusers/{subuser_name}.parameters[0].name: subuser_name
paths./subusers/{subuser_name}.parameters[0].required: true
paths./subusers/{subuser_name}.parameters[0].type: string
paths./subusers/{subuser_name}.patch.consumes.length: 1
paths./subusers/{subuser_name}.patch.consumes[0]: application/json
paths./subusers/{subuser_name}.patch.description: |-
  This endpoint allows you to enable or disable a subuser.

  For more information about Subusers:

  * [User Guide > Subusers](https://sendgrid.com/docs/User_Guide/Settings/Subusers/index.html)
  * [Classroom > How do I add more subusers to my account?](https://sendgrid.com/docs/Classroom/Basics/Account/how_do_i_add_more_subusers_to_my_account.html)
paths./subusers/{subuser_name}.patch.operationId: PATCH_subusers-subuser_name
paths./subusers/{subuser_name}.patch.parameters.length: 1
paths./subusers/{subuser_name}.patch.parameters[0].in: body
paths./subusers/{subuser_name}.patch.parameters[0].name: body
paths./subusers/{subuser_name}.patch.parameters[0].schema.example.disabled: false
paths./subusers/{subuser_name}.patch.parameters[0].schema.properties.disabled.description: Whether
  or not this subuser is disabled. True means disabled, False means enabled.
paths./subusers/{subuser_name}.patch.parameters[0].schema.properties.disabled.type: boolean
paths./subusers/{subuser_name}.patch.parameters[0].schema.type: object
paths./subusers/{subuser_name}.patch.produces.length: 1
paths./subusers/{subuser_name}.patch.produces[0]: application/json
paths./subusers/{subuser_name}.patch.responses.204.description: ""
paths./subusers/{subuser_name}.patch.responses.204.schema.type: object
paths./subusers/{subuser_name}.patch.responses.400.description: ""
paths./subusers/{subuser_name}.patch.responses.400.examples.application/json.errors.length: 2
paths./subusers/{subuser_name}.patch.responses.400.examples.application/json.errors[0].message: invalid
  username
paths./subusers/{subuser_name}.patch.responses.400.examples.application/json.errors[1].message: no
  fields provided
paths./subusers/{subuser_name}.patch.responses.400.schema.$ref: '#/definitions/global:ErrorResponse'
paths./subusers/{subuser_name}.patch.responses.401.description: ""
paths./subusers/{subuser_name}.patch.responses.401.examples.application/json.errors.length: 1
paths./subusers/{subuser_name}.patch.responses.401.examples.application/json.errors[0].message: authorization
  required
paths./subusers/{subuser_name}.patch.responses.401.schema.$ref: '#/definitions/global:ErrorResponse'
paths./subusers/{subuser_name}.patch.responses.500.description: ""
paths./subusers/{subuser_name}.patch.responses.500.examples.application/json.errors.length: 1
paths./subusers/{subuser_name}.patch.responses.500.examples.application/json.errors[0].message: unable
  to enable user
paths./subusers/{subuser_name}.patch.responses.500.schema.$ref: '#/definitions/global:ErrorResponse'
paths./subusers/{subuser_name}.patch.security.length: 1
paths./subusers/{subuser_name}.patch.security[0].Authorization.length: 0
paths./subusers/{subuser_name}.patch.summary: Enable/disable a subuser
paths./subusers/{subuser_name}.patch.tags.length: 1
paths./subusers/{subuser_name}.patch.tags[0]: Subusers API
paths./subusers/{subuser_name}/ips.parameters.length: 1
paths./subusers/{subuser_name}/ips.parameters[0].in: path
paths./subusers/{subuser_name}/ips.parameters[0].name: subuser_name
paths./subusers/{subuser_name}/ips.parameters[0].required: true
paths./subusers/{subuser_name}/ips.parameters[0].type: string
paths./subusers/{subuser_name}/ips.put.consumes.length: 1
paths./subusers/{subuser_name}/ips.put.consumes[0]: application/json
paths./subusers/{subuser_name}/ips.put.description: "Each subuser should be assigned
  to an IP address, from which all of this subuser's mail will be sent. Often, this
  is the same IP as the parent account, but each subuser can have their own, or multiple,
  IP addresses as well. \n\nMore information:\n\n* [How to request more IPs](https://sendgrid.com/docs/Classroom/Basics/Account/adding_an_additional_dedicated_ip_to_your_account.html)\n*
  [IPs can be whitelabeled](https://sendgrid.com/docs/User_Guide/Settings/Whitelabel/ips.html)"
paths./subusers/{subuser_name}/ips.put.operationId: PUT_subusers-subuser_name-ips
paths./subusers/{subuser_name}/ips.put.parameters.length: 2
paths./subusers/{subuser_name}/ips.put.parameters[0].in: body
paths./subusers/{subuser_name}/ips.put.parameters[0].name: body
paths./subusers/{subuser_name}/ips.put.parameters[0].schema.description: The IP addresses
  you would like to assign to the subuser.
paths./subusers/{subuser_name}/ips.put.parameters[0].schema.example.length: 1
paths./subusers/{subuser_name}/ips.put.parameters[0].schema.example[0]: 127.0.0.1
paths./subusers/{subuser_name}/ips.put.parameters[0].schema.items.format: ipv4
paths./subusers/{subuser_name}/ips.put.parameters[0].schema.items.type: string
paths./subusers/{subuser_name}/ips.put.parameters[0].schema.type: array
paths./subusers/{subuser_name}/ips.put.parameters[1].$ref: '#/parameters/trait:authorizationHeader:Authorization'
paths./subusers/{subuser_name}/ips.put.produces.length: 1
paths./subusers/{subuser_name}/ips.put.produces[0]: application/json
paths./subusers/{subuser_name}/ips.put.responses.200.description: ""
paths./subusers/{subuser_name}/ips.put.responses.200.examples.application/json.ips.length: 1
paths./subusers/{subuser_name}/ips.put.responses.200.examples.application/json.ips[0]: 127.0.0.1
paths./subusers/{subuser_name}/ips.put.responses.200.schema.properties.ips.description: The
  IP addresses that are assigned to the subuser.
paths./subusers/{subuser_name}/ips.put.responses.200.schema.properties.ips.items.format: ipv4
paths./subusers/{subuser_name}/ips.put.responses.200.schema.properties.ips.items.type: string
paths./subusers/{subuser_name}/ips.put.responses.200.schema.properties.ips.type: array
paths./subusers/{subuser_name}/ips.put.responses.200.schema.type: object
paths./subusers/{subuser_name}/ips.put.responses.401.description: ""
paths./subusers/{subuser_name}/ips.put.responses.401.examples.application/json.errors.length: 1
paths./subusers/{subuser_name}/ips.put.responses.401.examples.application/json.errors[0].message: authorization
  required
paths./subusers/{subuser_name}/ips.put.responses.401.schema.$ref: '#/definitions/global:ErrorResponse'
paths./subusers/{subuser_name}/ips.put.summary: Update IPs assigned to a subuser
paths./subusers/{subuser_name}/ips.put.tags.length: 1
paths./subusers/{subuser_name}/ips.put.tags[0]: Subusers API
paths./subusers/{subuser_name}/monitor.delete.description: Subuser monitor settings
  allow you to receive a sample of an outgoing message by a specific customer at a
  specific frequency of emails.
paths./subusers/{subuser_name}/monitor.delete.operationId: DELETE_subusers-subuser_name-monitor
paths./subusers/{subuser_name}/monitor.delete.parameters.length: 2
paths./subusers/{subuser_name}/monitor.delete.parameters[0].in: body
paths./subusers/{subuser_name}/monitor.delete.parameters[0].name: body
paths./subusers/{subuser_name}/monitor.delete.parameters[0].schema.type: "null"
paths./subusers/{subuser_name}/monitor.delete.parameters[1].$ref: '#/parameters/trait:authorizationHeader:Authorization'
paths./subusers/{subuser_name}/monitor.delete.produces.length: 1
paths./subusers/{subuser_name}/monitor.delete.produces[0]: application/json
paths./subusers/{subuser_name}/monitor.delete.responses.204.description: ""
paths./subusers/{subuser_name}/monitor.delete.responses.204.schema.type: object
paths./subusers/{subuser_name}/monitor.delete.responses.401.description: ""
paths./subusers/{subuser_name}/monitor.delete.responses.401.examples.application/json.errors.length: 1
paths./subusers/{subuser_name}/monitor.delete.responses.401.examples.application/json.errors[0].message: authorization
  required
paths./subusers/{subuser_name}/monitor.delete.responses.401.schema.$ref: '#/definitions/global:ErrorResponse'
paths./subusers/{subuser_name}/monitor.delete.responses.404.description: ""
paths./subusers/{subuser_name}/monitor.delete.responses.404.examples.application/json.errors.length: 1
paths./subusers/{subuser_name}/monitor.delete.responses.404.examples.application/json.errors[0].message: No
  monitor settings for this user
paths./subusers/{subuser_name}/monitor.delete.responses.404.schema.$ref: '#/definitions/global:ErrorResponse'
paths./subusers/{subuser_name}/monitor.delete.summary: Delete monitor settings
paths./subusers/{subuser_name}/monitor.delete.tags.length: 1
paths./subusers/{subuser_name}/monitor.delete.tags[0]: Subusers API
paths./subusers/{subuser_name}/monitor.get.description: Subuser monitor settings allow
  you to receive a sample of an outgoing message by a specific customer at a specific
  frequency of emails.
paths./subusers/{subuser_name}/monitor.get.operationId: GET_subusers-subuser_name-monitor
paths./subusers/{subuser_name}/monitor.get.produces.length: 1
paths./subusers/{subuser_name}/monitor.get.produces[0]: application/json
paths./subusers/{subuser_name}/monitor.get.responses.200.description: ""
paths./subusers/{subuser_name}/monitor.get.responses.200.examples.application/json.email: example@example.com
paths./subusers/{subuser_name}/monitor.get.responses.200.examples.application/json.frequency: 500
paths./subusers/{subuser_name}/monitor.get.responses.200.schema.$ref: '#/definitions/monitor'
paths./subusers/{subuser_name}/monitor.get.responses.401.description: ""
paths./subusers/{subuser_name}/monitor.get.responses.401.examples.application/json.errors.length: 1
paths./subusers/{subuser_name}/monitor.get.responses.401.examples.application/json.errors[0].message: authorization
  required
paths./subusers/{subuser_name}/monitor.get.responses.401.schema.$ref: '#/definitions/global:ErrorResponse'
paths./subusers/{subuser_name}/monitor.get.responses.404.description: ""
paths./subusers/{subuser_name}/monitor.get.responses.404.examples.application/json.errors.length: 1
paths./subusers/{subuser_name}/monitor.get.responses.404.examples.application/json.errors[0].message: No
  monitor settings for this user
paths./subusers/{subuser_name}/monitor.get.responses.404.schema.$ref: '#/definitions/global:ErrorResponse'
paths./subusers/{subuser_name}/monitor.get.security.length: 1
paths./subusers/{subuser_name}/monitor.get.security[0].Authorization.length: 0
paths./subusers/{subuser_name}/monitor.get.summary: Retrieve monitor settings for
  a subuser
paths./subusers/{subuser_name}/monitor.get.tags.length: 1
paths./subusers/{subuser_name}/monitor.get.tags[0]: Subusers API
paths./subusers/{subuser_name}/monitor.parameters.length: 1
paths./subusers/{subuser_name}/monitor.parameters[0].description: The name of the
  subuser for which to retrieve monitor settings.
paths./subusers/{subuser_name}/monitor.parameters[0].in: path
paths./subusers/{subuser_name}/monitor.parameters[0].name: subuser_name
paths./subusers/{subuser_name}/monitor.parameters[0].required: true
paths./subusers/{subuser_name}/monitor.parameters[0].type: string
paths./subusers/{subuser_name}/monitor.post.consumes.length: 1
paths./subusers/{subuser_name}/monitor.post.consumes[0]: application/json
paths./subusers/{subuser_name}/monitor.post.description: Subuser monitor settings
  allow you to receive a sample of an outgoing message by a specific customer at a
  specific frequency of emails.
paths./subusers/{subuser_name}/monitor.post.operationId: POST_subusers-subuser_name-monitor
paths./subusers/{subuser_name}/monitor.post.parameters.length: 1
paths./subusers/{subuser_name}/monitor.post.parameters[0].in: body
paths./subusers/{subuser_name}/monitor.post.parameters[0].name: body
paths./subusers/{subuser_name}/monitor.post.parameters[0].schema.$ref: '#/definitions/monitor'
paths./subusers/{subuser_name}/monitor.post.parameters[0].schema.example.email: example@example.com
paths./subusers/{subuser_name}/monitor.post.parameters[0].schema.example.frequency: 50000
paths./subusers/{subuser_name}/monitor.post.produces.length: 1
paths./subusers/{subuser_name}/monitor.post.produces[0]: application/json
paths./subusers/{subuser_name}/monitor.post.responses.200.description: ""
paths./subusers/{subuser_name}/monitor.post.responses.200.examples.application/json.email: example@example.com
paths./subusers/{subuser_name}/monitor.post.responses.200.examples.application/json.frequency: 50000
paths./subusers/{subuser_name}/monitor.post.responses.200.schema.$ref: '#/definitions/monitor'
paths./subusers/{subuser_name}/monitor.post.responses.400.description: ""
paths./subusers/{subuser_name}/monitor.post.responses.400.examples.application/json.errors.length: 1
paths./subusers/{subuser_name}/monitor.post.responses.400.examples.application/json.errors[0].message: User
  already has a monitor
paths./subusers/{subuser_name}/monitor.post.responses.400.schema.$ref: '#/definitions/global:ErrorResponse'
paths./subusers/{subuser_name}/monitor.post.responses.401.description: ""
paths./subusers/{subuser_name}/monitor.post.responses.401.examples.application/json.errors.length: 1
paths./subusers/{subuser_name}/monitor.post.responses.401.examples.application/json.errors[0].message: authorization
  required
paths./subusers/{subuser_name}/monitor.post.responses.401.schema.$ref: '#/definitions/global:ErrorResponse'
paths./subusers/{subuser_name}/monitor.post.security.length: 1
paths./subusers/{subuser_name}/monitor.post.security[0].Authorization.length: 0
paths./subusers/{subuser_name}/monitor.post.summary: Create monitor settings
paths./subusers/{subuser_name}/monitor.post.tags.length: 1
paths./subusers/{subuser_name}/monitor.post.tags[0]: Subusers API
paths./subusers/{subuser_name}/monitor.put.consumes.length: 1
paths./subusers/{subuser_name}/monitor.put.consumes[0]: application/json
paths./subusers/{subuser_name}/monitor.put.description: Subuser monitor settings allow
  you to receive a sample of an outgoing message by a specific customer at a specific
  frequency of emails.
paths./subusers/{subuser_name}/monitor.put.operationId: PUT_subusers-subuser_name-monitor
paths./subusers/{subuser_name}/monitor.put.parameters.length: 1
paths./subusers/{subuser_name}/monitor.put.parameters[0].in: body
paths./subusers/{subuser_name}/monitor.put.parameters[0].name: body
paths./subusers/{subuser_name}/monitor.put.parameters[0].schema.$ref: '#/definitions/monitor'
paths./subusers/{subuser_name}/monitor.put.parameters[0].schema.example.email: example@example.com
paths./subusers/{subuser_name}/monitor.put.parameters[0].schema.example.frequency: 500
paths./subusers/{subuser_name}/monitor.put.produces.length: 1
paths./subusers/{subuser_name}/monitor.put.produces[0]: application/json
paths./subusers/{subuser_name}/monitor.put.responses.200.description: ""
paths./subusers/{subuser_name}/monitor.put.responses.200.examples.application/json.email: example@example.com
paths./subusers/{subuser_name}/monitor.put.responses.200.examples.application/json.frequency: 500
paths./subusers/{subuser_name}/monitor.put.responses.200.schema.$ref: '#/definitions/monitor'
paths./subusers/{subuser_name}/monitor.put.responses.400.description: ""
paths./subusers/{subuser_name}/monitor.put.responses.400.examples.application/json.errors.length: 1
paths./subusers/{subuser_name}/monitor.put.responses.400.examples.application/json.errors[0].field: email
paths./subusers/{subuser_name}/monitor.put.responses.400.examples.application/json.errors[0].message: Email
  is required
paths./subusers/{subuser_name}/monitor.put.responses.400.schema.$ref: '#/definitions/global:ErrorResponse'
paths./subusers/{subuser_name}/monitor.put.responses.401.description: ""
paths./subusers/{subuser_name}/monitor.put.responses.401.examples.application/json.errors.length: 1
paths./subusers/{subuser_name}/monitor.put.responses.401.examples.application/json.errors[0].message: authorization
  required
paths./subusers/{subuser_name}/monitor.put.responses.401.schema.$ref: '#/definitions/global:ErrorResponse'
paths./subusers/{subuser_name}/monitor.put.security.length: 1
paths./subusers/{subuser_name}/monitor.put.security[0].Authorization.length: 0
paths./subusers/{subuser_name}/monitor.put.summary: Update Monitor Settings for a
  subuser
paths./subusers/{subuser_name}/monitor.put.tags.length: 1
paths./subusers/{subuser_name}/monitor.put.tags[0]: Subusers API
paths./subusers/{subuser_name}/stats/monthly.get.description: |-
  **This endpoint allows you to retrive the monthly email statistics for a specific subuser.**

  While you can always view the statistics for all email activity on your account, subuser statistics enable you to view specific segments of your stats for your subusers. Emails sent, bounces, and spam reports are always tracked for subusers. Unsubscribes, clicks, and opens are tracked if you have enabled the required settings.

  When using the `sort_by_metric` to sort your stats by a specific metric, you can not sort by the following metrics:
  `bounce_drops`, `deferred`, `invalid_emails`, `processed`, `spam_report_drops`, `spam_reports`, or `unsubscribe_drops`.

  For more information, see our [User Guide](https://sendgrid.com/docs/User_Guide/Statistics/subuser.html).
paths./subusers/{subuser_name}/stats/monthly.get.operationId: GET_subusers-subuser_name-stats-monthly
paths./subusers/{subuser_name}/stats/monthly.get.parameters.length: 5
paths./subusers/{subuser_name}/stats/monthly.get.parameters[0].description: The date
  of the month to retrieve statistics for. Must be formatted YYYY-MM-DD
paths./subusers/{subuser_name}/stats/monthly.get.parameters[0].in: query
paths./subusers/{subuser_name}/stats/monthly.get.parameters[0].name: date
paths./subusers/{subuser_name}/stats/monthly.get.parameters[0].required: true
paths./subusers/{subuser_name}/stats/monthly.get.parameters[0].type: string
paths./subusers/{subuser_name}/stats/monthly.get.parameters[1].default: delivered
paths./subusers/{subuser_name}/stats/monthly.get.parameters[1].description: 'The metric
  that you want to sort by. Metrics that you can sort by are: `blocks`, `bounces`,
  `clicks`, `delivered`, `opens`, `requests`, `unique_clicks`, `unique_opens`, and
  `unsubscribes`.'''
paths./subusers/{subuser_name}/stats/monthly.get.parameters[1].in: query
paths./subusers/{subuser_name}/stats/monthly.get.parameters[1].name: sort_by_metric
paths./subusers/{subuser_name}/stats/monthly.get.parameters[1].required: false
paths./subusers/{subuser_name}/stats/monthly.get.parameters[1].type: string
paths./subusers/{subuser_name}/stats/monthly.get.parameters[2].default: desc
paths./subusers/{subuser_name}/stats/monthly.get.parameters[2].description: The direction
  you want to sort.
paths./subusers/{subuser_name}/stats/monthly.get.parameters[2].enum.length: 2
paths./subusers/{subuser_name}/stats/monthly.get.parameters[2].enum[0]: desc
paths./subusers/{subuser_name}/stats/monthly.get.parameters[2].enum[1]: asc
paths./subusers/{subuser_name}/stats/monthly.get.parameters[2].in: query
paths./subusers/{subuser_name}/stats/monthly.get.parameters[2].name: sort_by_direction
paths./subusers/{subuser_name}/stats/monthly.get.parameters[2].required: false
paths./subusers/{subuser_name}/stats/monthly.get.parameters[2].type: string
paths./subusers/{subuser_name}/stats/monthly.get.parameters[3].default: 5
paths./subusers/{subuser_name}/stats/monthly.get.parameters[3].description: Optional
  field to limit the number of results returned.
paths./subusers/{subuser_name}/stats/monthly.get.parameters[3].in: query
paths./subusers/{subuser_name}/stats/monthly.get.parameters[3].name: limit
paths./subusers/{subuser_name}/stats/monthly.get.parameters[3].required: false
paths./subusers/{subuser_name}/stats/monthly.get.parameters[3].type: integer
paths./subusers/{subuser_name}/stats/monthly.get.parameters[4].default: 0
paths./subusers/{subuser_name}/stats/monthly.get.parameters[4].description: Optional
  beginning point in the list to retrieve from.
paths./subusers/{subuser_name}/stats/monthly.get.parameters[4].in: query
paths./subusers/{subuser_name}/stats/monthly.get.parameters[4].name: offset
paths./subusers/{subuser_name}/stats/monthly.get.parameters[4].required: false
paths./subusers/{subuser_name}/stats/monthly.get.parameters[4].type: integer
paths./subusers/{subuser_name}/stats/monthly.get.produces.length: 1
paths./subusers/{subuser_name}/stats/monthly.get.produces[0]: application/json
paths./subusers/{subuser_name}/stats/monthly.get.responses.200.description: ""
paths./subusers/{subuser_name}/stats/monthly.get.responses.200.examples.application/json.date: 2016-02-01
paths./subusers/{subuser_name}/stats/monthly.get.responses.200.examples.application/json.stats.length: 1
paths./subusers/{subuser_name}/stats/monthly.get.responses.200.examples.application/json.stats[0].first_name: John
paths./subusers/{subuser_name}/stats/monthly.get.responses.200.examples.application/json.stats[0].last_name: Doe
paths./subusers/{subuser_name}/stats/monthly.get.responses.200.examples.application/json.stats[0].metrics.blocks: 0
paths./subusers/{subuser_name}/stats/monthly.get.responses.200.examples.application/json.stats[0].metrics.bounce_drops: 0
paths./subusers/{subuser_name}/stats/monthly.get.responses.200.examples.application/json.stats[0].metrics.bounces: 0
paths./subusers/{subuser_name}/stats/monthly.get.responses.200.examples.application/json.stats[0].metrics.clicks: 5
paths./subusers/{subuser_name}/stats/monthly.get.responses.200.examples.application/json.stats[0].metrics.deferred: 0
paths./subusers/{subuser_name}/stats/monthly.get.responses.200.examples.application/json.stats[0].metrics.delivered: 0
paths./subusers/{subuser_name}/stats/monthly.get.responses.200.examples.application/json.stats[0].metrics.invalid_emails: 0
paths./subusers/{subuser_name}/stats/monthly.get.responses.200.examples.application/json.stats[0].metrics.opens: 10
paths./subusers/{subuser_name}/stats/monthly.get.responses.200.examples.application/json.stats[0].metrics.processed: 10
paths./subusers/{subuser_name}/stats/monthly.get.responses.200.examples.application/json.stats[0].metrics.requests: 10
paths./subusers/{subuser_name}/stats/monthly.get.responses.200.examples.application/json.stats[0].metrics.spam_report_drops: 0
paths./subusers/{subuser_name}/stats/monthly.get.responses.200.examples.application/json.stats[0].metrics.spam_reports: 0
paths./subusers/{subuser_name}/stats/monthly.get.responses.200.examples.application/json.stats[0].metrics.unique_clicks: 0
paths./subusers/{subuser_name}/stats/monthly.get.responses.200.examples.application/json.stats[0].metrics.unique_opens: 0
paths./subusers/{subuser_name}/stats/monthly.get.responses.200.examples.application/json.stats[0].metrics.unsubscribe_drops: 0
paths./subusers/{subuser_name}/stats/monthly.get.responses.200.examples.application/json.stats[0].metrics.unsubscribes: 0
paths./subusers/{subuser_name}/stats/monthly.get.responses.200.examples.application/json.stats[0].name: user1
paths./subusers/{subuser_name}/stats/monthly.get.responses.200.examples.application/json.stats[0].type: subuser
paths./subusers/{subuser_name}/stats/monthly.get.responses.200.schema.$ref: '#/definitions/subuser_stats'
paths./subusers/{subuser_name}/stats/monthly.get.security.length: 1
paths./subusers/{subuser_name}/stats/monthly.get.security[0].Authorization.length: 0
paths./subusers/{subuser_name}/stats/monthly.get.summary: Retrieve the monthly email
  statistics for a single subuser
paths./subusers/{subuser_name}/stats/monthly.get.tags.length: 1
paths./subusers/{subuser_name}/stats/monthly.get.tags[0]: Subusers API
paths./subusers/{subuser_name}/stats/monthly.parameters.length: 1
paths./subusers/{subuser_name}/stats/monthly.parameters[0].in: path
paths./subusers/{subuser_name}/stats/monthly.parameters[0].name: subuser_name
paths./subusers/{subuser_name}/stats/monthly.parameters[0].required: true
paths./subusers/{subuser_name}/stats/monthly.parameters[0].type: string
paths./subusers/reputations.get.description: |-
  Subuser sender reputations give a good idea how well a sender is doing with regards to how recipients and recipient servers react to the mail that is being received. When a bounce, spam report, or other negative action happens on a sent email, it will effect your sender rating.

  This endpoint allows you to request the reputations for your subusers.
paths./subusers/reputations.get.operationId: GET_subusers-reputations
paths./subusers/reputations.get.parameters.length: 1
paths./subusers/reputations.get.parameters[0].in: query
paths./subusers/reputations.get.parameters[0].name: usernames
paths./subusers/reputations.get.parameters[0].type: string
paths./subusers/reputations.get.produces.length: 1
paths./subusers/reputations.get.produces[0]: application/json
paths./subusers/reputations.get.responses.200.description: ""
paths./subusers/reputations.get.responses.200.examples.application/json.length: 2
paths./subusers/reputations.get.responses.200.examples.application/json[0].reputation: 99
paths./subusers/reputations.get.responses.200.examples.application/json[0].username: example_subuser
paths./subusers/reputations.get.responses.200.examples.application/json[1].reputation: 95.2
paths./subusers/reputations.get.responses.200.examples.application/json[1].username: example_subuser2
paths./subusers/reputations.get.responses.200.schema.items.properties.reputation.description: The
  sender reputation this subuser has attained.
paths./subusers/reputations.get.responses.200.schema.items.properties.reputation.type: number
paths./subusers/reputations.get.responses.200.schema.items.properties.username.description: The
  subuser that has this reputation.f
paths./subusers/reputations.get.responses.200.schema.items.properties.username.type: string
paths./subusers/reputations.get.responses.200.schema.items.required.length: 2
paths./subusers/reputations.get.responses.200.schema.items.required[0]: reputation
paths./subusers/reputations.get.responses.200.schema.items.required[1]: username
paths./subusers/reputations.get.responses.200.schema.items.type: object
paths./subusers/reputations.get.responses.200.schema.type: array
paths./subusers/reputations.get.security.length: 1
paths./subusers/reputations.get.security[0].Authorization.length: 0
paths./subusers/reputations.get.summary: Retrieve Subuser Reputations
paths./subusers/reputations.get.tags.length: 1
paths./subusers/reputations.get.tags[0]: Subusers API
paths./subusers/stats.get.description: |-
  **This endpoint allows you to retrieve the email statistics for the given subusers.**

  You may retrieve statistics for up to 10 different subusers by including an additional _subusers_ parameter for each additional subuser.

  While you can always view the statistics for all email activity on your account, subuser statistics enable you to view specific segments of your stats. Emails sent, bounces, and spam reports are always tracked for subusers. Unsubscribes, clicks, and opens are tracked if you have enabled the required settings.

  For more information, see our [User Guide](https://sendgrid.com/docs/User_Guide/Statistics/subuser.html).
paths./subusers/stats.get.operationId: GET_subusers-stats
paths./subusers/stats.get.parameters.length: 6
paths./subusers/stats.get.parameters[0].description: Limits the number of results
  returned per page.
paths./subusers/stats.get.parameters[0].in: query
paths./subusers/stats.get.parameters[0].name: limit
paths./subusers/stats.get.parameters[0].required: false
paths./subusers/stats.get.parameters[0].type: integer
paths./subusers/stats.get.parameters[1].description: The point in the list to begin
  retrieving results from.
paths./subusers/stats.get.parameters[1].in: query
paths./subusers/stats.get.parameters[1].name: offset
paths./subusers/stats.get.parameters[1].required: false
paths./subusers/stats.get.parameters[1].type: integer
paths./subusers/stats.get.parameters[2].description: How to group the statistics.
  Must be either "day", "week", or "month".
paths./subusers/stats.get.parameters[2].enum.length: 3
paths./subusers/stats.get.parameters[2].enum[0]: day
paths./subusers/stats.get.parameters[2].enum[1]: week
paths./subusers/stats.get.parameters[2].enum[2]: month
paths./subusers/stats.get.parameters[2].in: query
paths./subusers/stats.get.parameters[2].name: aggregated_by
paths./subusers/stats.get.parameters[2].required: false
paths./subusers/stats.get.parameters[2].type: string
paths./subusers/stats.get.parameters[3].description: The subuser you want to retrieve
  statistics for. You may include this parameter up to 10 times to retrieve statistics
  for multiple subusers.
paths./subusers/stats.get.parameters[3].in: query
paths./subusers/stats.get.parameters[3].name: subusers
paths./subusers/stats.get.parameters[3].required: true
paths./subusers/stats.get.parameters[3].type: string
paths./subusers/stats.get.parameters[4].description: The starting date of the statistics
  to retrieve. Must follow format YYYY-MM-DD.
paths./subusers/stats.get.parameters[4].in: query
paths./subusers/stats.get.parameters[4].name: start_date
paths./subusers/stats.get.parameters[4].required: true
paths./subusers/stats.get.parameters[4].type: string
paths./subusers/stats.get.parameters[5].description: The end date of the statistics
  to retrieve. Defaults to today.
paths./subusers/stats.get.parameters[5].in: query
paths./subusers/stats.get.parameters[5].name: end_date
paths./subusers/stats.get.parameters[5].required: false
paths./subusers/stats.get.parameters[5].type: string
paths./subusers/stats.get.produces.length: 1
paths./subusers/stats.get.produces[0]: application/json
paths./subusers/stats.get.responses.200.description: ""
paths./subusers/stats.get.responses.200.examples.application/json.length: 10
paths./subusers/stats.get.responses.200.examples.application/json[0].date: 2015-10-01
paths./subusers/stats.get.responses.200.examples.application/json[0].stats.length: 1
paths./subusers/stats.get.responses.200.examples.application/json[0].stats[0].metrics.blocks: 0
paths./subusers/stats.get.responses.200.examples.application/json[0].stats[0].metrics.bounce_drops: 0
paths./subusers/stats.get.responses.200.examples.application/json[0].stats[0].metrics.bounces: 0
paths./subusers/stats.get.responses.200.examples.application/json[0].stats[0].metrics.clicks: 0
paths./subusers/stats.get.responses.200.examples.application/json[0].stats[0].metrics.deferred: 0
paths./subusers/stats.get.responses.200.examples.application/json[0].stats[0].metrics.delivered: 0
paths./subusers/stats.get.responses.200.examples.application/json[0].stats[0].metrics.invalid_emails: 0
paths./subusers/stats.get.responses.200.examples.application/json[0].stats[0].metrics.opens: 0
paths./subusers/stats.get.responses.200.examples.application/json[0].stats[0].metrics.processed: 0
paths./subusers/stats.get.responses.200.examples.application/json[0].stats[0].metrics.requests: 0
paths./subusers/stats.get.responses.200.examples.application/json[0].stats[0].metrics.spam_report_drops: 0
paths./subusers/stats.get.responses.200.examples.application/json[0].stats[0].metrics.spam_reports: 0
paths./subusers/stats.get.responses.200.examples.application/json[0].stats[0].metrics.unique_clicks: 0
paths./subusers/stats.get.responses.200.examples.application/json[0].stats[0].metrics.unique_opens: 0
paths./subusers/stats.get.responses.200.examples.application/json[0].stats[0].metrics.unsubscribe_drops: 0
paths./subusers/stats.get.responses.200.examples.application/json[0].stats[0].metrics.unsubscribes: 0
paths./subusers/stats.get.responses.200.examples.application/json[0].stats[0].name: Matt_subuser
paths./subusers/stats.get.responses.200.examples.application/json[0].stats[0].type: subuser
paths./subusers/stats.get.responses.200.examples.application/json[1].date: 2015-10-02
paths./subusers/stats.get.responses.200.examples.application/json[1].stats.length: 1
paths./subusers/stats.get.responses.200.examples.application/json[1].stats[0].metrics.blocks: 0
paths./subusers/stats.get.responses.200.examples.application/json[1].stats[0].metrics.bounce_drops: 0
paths./subusers/stats.get.responses.200.examples.application/json[1].stats[0].metrics.bounces: 0
paths./subusers/stats.get.responses.200.examples.application/json[1].stats[0].metrics.clicks: 0
paths./subusers/stats.get.responses.200.examples.application/json[1].stats[0].metrics.deferred: 0
paths./subusers/stats.get.responses.200.examples.application/json[1].stats[0].metrics.delivered: 0
paths./subusers/stats.get.responses.200.examples.application/json[1].stats[0].metrics.invalid_emails: 0
paths./subusers/stats.get.responses.200.examples.application/json[1].stats[0].metrics.opens: 0
paths./subusers/stats.get.responses.200.examples.application/json[1].stats[0].metrics.processed: 0
paths./subusers/stats.get.responses.200.examples.application/json[1].stats[0].metrics.requests: 0
paths./subusers/stats.get.responses.200.examples.application/json[1].stats[0].metrics.spam_report_drops: 0
paths./subusers/stats.get.responses.200.examples.application/json[1].stats[0].metrics.spam_reports: 0
paths./subusers/stats.get.responses.200.examples.application/json[1].stats[0].metrics.unique_clicks: 0
paths./subusers/stats.get.responses.200.examples.application/json[1].stats[0].metrics.unique_opens: 0
paths./subusers/stats.get.responses.200.examples.application/json[1].stats[0].metrics.unsubscribe_drops: 0
paths./subusers/stats.get.responses.200.examples.application/json[1].stats[0].metrics.unsubscribes: 0
paths./subusers/stats.get.responses.200.examples.application/json[1].stats[0].name: Matt_subuser
paths./subusers/stats.get.responses.200.examples.application/json[1].stats[0].type: subuser
paths./subusers/stats.get.responses.200.examples.application/json[2].date: 2015-10-03
paths./subusers/stats.get.responses.200.examples.application/json[2].stats.length: 1
paths./subusers/stats.get.responses.200.examples.application/json[2].stats[0].metrics.blocks: 0
paths./subusers/stats.get.responses.200.examples.application/json[2].stats[0].metrics.bounce_drops: 0
paths./subusers/stats.get.responses.200.examples.application/json[2].stats[0].metrics.bounces: 0
paths./subusers/stats.get.responses.200.examples.application/json[2].stats[0].metrics.clicks: 0
paths./subusers/stats.get.responses.200.examples.application/json[2].stats[0].metrics.deferred: 0
paths./subusers/stats.get.responses.200.examples.application/json[2].stats[0].metrics.delivered: 0
paths./subusers/stats.get.responses.200.examples.application/json[2].stats[0].metrics.invalid_emails: 0
paths./subusers/stats.get.responses.200.examples.application/json[2].stats[0].metrics.opens: 0
paths./subusers/stats.get.responses.200.examples.application/json[2].stats[0].metrics.processed: 0
paths./subusers/stats.get.responses.200.examples.application/json[2].stats[0].metrics.requests: 0
paths./subusers/stats.get.responses.200.examples.application/json[2].stats[0].metrics.spam_report_drops: 0
paths./subusers/stats.get.responses.200.examples.application/json[2].stats[0].metrics.spam_reports: 0
paths./subusers/stats.get.responses.200.examples.application/json[2].stats[0].metrics.unique_clicks: 0
paths./subusers/stats.get.responses.200.examples.application/json[2].stats[0].metrics.unique_opens: 0
paths./subusers/stats.get.responses.200.examples.application/json[2].stats[0].metrics.unsubscribe_drops: 0
paths./subusers/stats.get.responses.200.examples.application/json[2].stats[0].metrics.unsubscribes: 0
paths./subusers/stats.get.responses.200.examples.application/json[2].stats[0].name: Matt_subuser
paths./subusers/stats.get.responses.200.examples.application/json[2].stats[0].type: subuser
paths./subusers/stats.get.responses.200.examples.application/json[3].date: 2015-10-04
paths./subusers/stats.get.responses.200.examples.application/json[3].stats.length: 1
paths./subusers/stats.get.responses.200.examples.application/json[3].stats[0].metrics.blocks: 0
paths./subusers/stats.get.responses.200.examples.application/json[3].stats[0].metrics.bounce_drops: 0
paths./subusers/stats.get.responses.200.examples.application/json[3].stats[0].metrics.bounces: 0
paths./subusers/stats.get.responses.200.examples.application/json[3].stats[0].metrics.clicks: 0
paths./subusers/stats.get.responses.200.examples.application/json[3].stats[0].metrics.deferred: 0
paths./subusers/stats.get.responses.200.examples.application/json[3].stats[0].metrics.delivered: 0
paths./subusers/stats.get.responses.200.examples.application/json[3].stats[0].metrics.invalid_emails: 0
paths./subusers/stats.get.responses.200.examples.application/json[3].stats[0].metrics.opens: 0
paths./subusers/stats.get.responses.200.examples.application/json[3].stats[0].metrics.processed: 0
paths./subusers/stats.get.responses.200.examples.application/json[3].stats[0].metrics.requests: 0
paths./subusers/stats.get.responses.200.examples.application/json[3].stats[0].metrics.spam_report_drops: 0
paths./subusers/stats.get.responses.200.examples.application/json[3].stats[0].metrics.spam_reports: 0
paths./subusers/stats.get.responses.200.examples.application/json[3].stats[0].metrics.unique_clicks: 0
paths./subusers/stats.get.responses.200.examples.application/json[3].stats[0].metrics.unique_opens: 0
paths./subusers/stats.get.responses.200.examples.application/json[3].stats[0].metrics.unsubscribe_drops: 0
paths./subusers/stats.get.responses.200.examples.application/json[3].stats[0].metrics.unsubscribes: 0
paths./subusers/stats.get.responses.200.examples.application/json[3].stats[0].name: Matt_subuser
paths./subusers/stats.get.responses.200.examples.application/json[3].stats[0].type: subuser
paths./subusers/stats.get.responses.200.examples.application/json[4].date: 2015-10-05
paths./subusers/stats.get.responses.200.examples.application/json[4].stats.length: 1
paths./subusers/stats.get.responses.200.examples.application/json[4].stats[0].metrics.blocks: 0
paths./subusers/stats.get.responses.200.examples.application/json[4].stats[0].metrics.bounce_drops: 0
paths./subusers/stats.get.responses.200.examples.application/json[4].stats[0].metrics.bounces: 0
paths./subusers/stats.get.responses.200.examples.application/json[4].stats[0].metrics.clicks: 0
paths./subusers/stats.get.responses.200.examples.application/json[4].stats[0].metrics.deferred: 0
paths./subusers/stats.get.responses.200.examples.application/json[4].stats[0].metrics.delivered: 0
paths./subusers/stats.get.responses.200.examples.application/json[4].stats[0].metrics.invalid_emails: 0
paths./subusers/stats.get.responses.200.examples.application/json[4].stats[0].metrics.opens: 0
paths./subusers/stats.get.responses.200.examples.application/json[4].stats[0].metrics.processed: 0
paths./subusers/stats.get.responses.200.examples.application/json[4].stats[0].metrics.requests: 0
paths./subusers/stats.get.responses.200.examples.application/json[4].stats[0].metrics.spam_report_drops: 0
paths./subusers/stats.get.responses.200.examples.application/json[4].stats[0].metrics.spam_reports: 0
paths./subusers/stats.get.responses.200.examples.application/json[4].stats[0].metrics.unique_clicks: 0
paths./subusers/stats.get.responses.200.examples.application/json[4].stats[0].metrics.unique_opens: 0
paths./subusers/stats.get.responses.200.examples.application/json[4].stats[0].metrics.unsubscribe_drops: 0
paths./subusers/stats.get.responses.200.examples.application/json[4].stats[0].metrics.unsubscribes: 0
paths./subusers/stats.get.responses.200.examples.application/json[4].stats[0].name: Matt_subuser
paths./subusers/stats.get.responses.200.examples.application/json[4].stats[0].type: subuser
paths./subusers/stats.get.responses.200.examples.application/json[5].date: 2015-10-06
paths./subusers/stats.get.responses.200.examples.application/json[5].stats.length: 1
paths./subusers/stats.get.responses.200.examples.application/json[5].stats[0].metrics.blocks: 0
paths./subusers/stats.get.responses.200.examples.application/json[5].stats[0].metrics.bounce_drops: 0
paths./subusers/stats.get.responses.200.examples.application/json[5].stats[0].metrics.bounces: 0
paths./subusers/stats.get.responses.200.examples.application/json[5].stats[0].metrics.clicks: 0
paths./subusers/stats.get.responses.200.examples.application/json[5].stats[0].metrics.deferred: 0
paths./subusers/stats.get.responses.200.examples.application/json[5].stats[0].metrics.delivered: 0
paths./subusers/stats.get.responses.200.examples.application/json[5].stats[0].metrics.invalid_emails: 0
paths./subusers/stats.get.responses.200.examples.application/json[5].stats[0].metrics.opens: 0
paths./subusers/stats.get.responses.200.examples.application/json[5].stats[0].metrics.processed: 0
paths./subusers/stats.get.responses.200.examples.application/json[5].stats[0].metrics.requests: 0
paths./subusers/stats.get.responses.200.examples.application/json[5].stats[0].metrics.spam_report_drops: 0
paths./subusers/stats.get.responses.200.examples.application/json[5].stats[0].metrics.spam_reports: 0
paths./subusers/stats.get.responses.200.examples.application/json[5].stats[0].metrics.unique_clicks: 0
paths./subusers/stats.get.responses.200.examples.application/json[5].stats[0].metrics.unique_opens: 0
paths./subusers/stats.get.responses.200.examples.application/json[5].stats[0].metrics.unsubscribe_drops: 0
paths./subusers/stats.get.responses.200.examples.application/json[5].stats[0].metrics.unsubscribes: 0
paths./subusers/stats.get.responses.200.examples.application/json[5].stats[0].name: Matt_subuser
paths./subusers/stats.get.responses.200.examples.application/json[5].stats[0].type: subuser
paths./subusers/stats.get.responses.200.examples.application/json[6].date: 2015-10-07
paths./subusers/stats.get.responses.200.examples.application/json[6].stats.length: 1
paths./subusers/stats.get.responses.200.examples.application/json[6].stats[0].metrics.blocks: 0
paths./subusers/stats.get.responses.200.examples.application/json[6].stats[0].metrics.bounce_drops: 0
paths./subusers/stats.get.responses.200.examples.application/json[6].stats[0].metrics.bounces: 0
paths./subusers/stats.get.responses.200.examples.application/json[6].stats[0].metrics.clicks: 0
paths./subusers/stats.get.responses.200.examples.application/json[6].stats[0].metrics.deferred: 0
paths./subusers/stats.get.responses.200.examples.application/json[6].stats[0].metrics.delivered: 0
paths./subusers/stats.get.responses.200.examples.application/json[6].stats[0].metrics.invalid_emails: 0
paths./subusers/stats.get.responses.200.examples.application/json[6].stats[0].metrics.opens: 0
paths./subusers/stats.get.responses.200.examples.application/json[6].stats[0].metrics.processed: 0
paths./subusers/stats.get.responses.200.examples.application/json[6].stats[0].metrics.requests: 0
paths./subusers/stats.get.responses.200.examples.application/json[6].stats[0].metrics.spam_report_drops: 0
paths./subusers/stats.get.responses.200.examples.application/json[6].stats[0].metrics.spam_reports: 0
paths./subusers/stats.get.responses.200.examples.application/json[6].stats[0].metrics.unique_clicks: 0
paths./subusers/stats.get.responses.200.examples.application/json[6].stats[0].metrics.unique_opens: 0
paths./subusers/stats.get.responses.200.examples.application/json[6].stats[0].metrics.unsubscribe_drops: 0
paths./subusers/stats.get.responses.200.examples.application/json[6].stats[0].metrics.unsubscribes: 0
paths./subusers/stats.get.responses.200.examples.application/json[6].stats[0].name: Matt_subuser
paths./subusers/stats.get.responses.200.examples.application/json[6].stats[0].type: subuser
paths./subusers/stats.get.responses.200.examples.application/json[7].date: 2015-10-08
paths./subusers/stats.get.responses.200.examples.application/json[7].stats.length: 1
paths./subusers/stats.get.responses.200.examples.application/json[7].stats[0].metrics.blocks: 0
paths./subusers/stats.get.responses.200.examples.application/json[7].stats[0].metrics.bounce_drops: 0
paths./subusers/stats.get.responses.200.examples.application/json[7].stats[0].metrics.bounces: 0
paths./subusers/stats.get.responses.200.examples.application/json[7].stats[0].metrics.clicks: 0
paths./subusers/stats.get.responses.200.examples.application/json[7].stats[0].metrics.deferred: 0
paths./subusers/stats.get.responses.200.examples.application/json[7].stats[0].metrics.delivered: 0
paths./subusers/stats.get.responses.200.examples.application/json[7].stats[0].metrics.invalid_emails: 0
paths./subusers/stats.get.responses.200.examples.application/json[7].stats[0].metrics.opens: 0
paths./subusers/stats.get.responses.200.examples.application/json[7].stats[0].metrics.processed: 0
paths./subusers/stats.get.responses.200.examples.application/json[7].stats[0].metrics.requests: 0
paths./subusers/stats.get.responses.200.examples.application/json[7].stats[0].metrics.spam_report_drops: 0
paths./subusers/stats.get.responses.200.examples.application/json[7].stats[0].metrics.spam_reports: 0
paths./subusers/stats.get.responses.200.examples.application/json[7].stats[0].metrics.unique_clicks: 0
paths./subusers/stats.get.responses.200.examples.application/json[7].stats[0].metrics.unique_opens: 0
paths./subusers/stats.get.responses.200.examples.application/json[7].stats[0].metrics.unsubscribe_drops: 0
paths./subusers/stats.get.responses.200.examples.application/json[7].stats[0].metrics.unsubscribes: 0
paths./subusers/stats.get.responses.200.examples.application/json[7].stats[0].name: Matt_subuser
paths./subusers/stats.get.responses.200.examples.application/json[7].stats[0].type: subuser
paths./subusers/stats.get.responses.200.examples.application/json[8].date: 2015-10-09
paths./subusers/stats.get.responses.200.examples.application/json[8].stats.length: 1
paths./subusers/stats.get.responses.200.examples.application/json[8].stats[0].metrics.blocks: 0
paths./subusers/stats.get.responses.200.examples.application/json[8].stats[0].metrics.bounce_drops: 0
paths./subusers/stats.get.responses.200.examples.application/json[8].stats[0].metrics.bounces: 0
paths./subusers/stats.get.responses.200.examples.application/json[8].stats[0].metrics.clicks: 0
paths./subusers/stats.get.responses.200.examples.application/json[8].stats[0].metrics.deferred: 0
paths./subusers/stats.get.responses.200.examples.application/json[8].stats[0].metrics.delivered: 0
paths./subusers/stats.get.responses.200.examples.application/json[8].stats[0].metrics.invalid_emails: 0
paths./subusers/stats.get.responses.200.examples.application/json[8].stats[0].metrics.opens: 0
paths./subusers/stats.get.responses.200.examples.application/json[8].stats[0].metrics.processed: 0
paths./subusers/stats.get.responses.200.examples.application/json[8].stats[0].metrics.requests: 0
paths./subusers/stats.get.responses.200.examples.application/json[8].stats[0].metrics.spam_report_drops: 0
paths./subusers/stats.get.responses.200.examples.application/json[8].stats[0].metrics.spam_reports: 0
paths./subusers/stats.get.responses.200.examples.application/json[8].stats[0].metrics.unique_clicks: 0
paths./subusers/stats.get.responses.200.examples.application/json[8].stats[0].metrics.unique_opens: 0
paths./subusers/stats.get.responses.200.examples.application/json[8].stats[0].metrics.unsubscribe_drops: 0
paths./subusers/stats.get.responses.200.examples.application/json[8].stats[0].metrics.unsubscribes: 0
paths./subusers/stats.get.responses.200.examples.application/json[8].stats[0].name: Matt_subuser
paths./subusers/stats.get.responses.200.examples.application/json[8].stats[0].type: subuser
paths./subusers/stats.get.responses.200.examples.application/json[9].date: 2015-10-10
paths./subusers/stats.get.responses.200.examples.application/json[9].stats.length: 1
paths./subusers/stats.get.responses.200.examples.application/json[9].stats[0].metrics.blocks: 0
paths./subusers/stats.get.responses.200.examples.application/json[9].stats[0].metrics.bounce_drops: 0
paths./subusers/stats.get.responses.200.examples.application/json[9].stats[0].metrics.bounces: 0
paths./subusers/stats.get.responses.200.examples.application/json[9].stats[0].metrics.clicks: 0
paths./subusers/stats.get.responses.200.examples.application/json[9].stats[0].metrics.deferred: 0
paths./subusers/stats.get.responses.200.examples.application/json[9].stats[0].metrics.delivered: 0
paths./subusers/stats.get.responses.200.examples.application/json[9].stats[0].metrics.invalid_emails: 0
paths./subusers/stats.get.responses.200.examples.application/json[9].stats[0].metrics.opens: 0
paths./subusers/stats.get.responses.200.examples.application/json[9].stats[0].metrics.processed: 0
paths./subusers/stats.get.responses.200.examples.application/json[9].stats[0].metrics.requests: 0
paths./subusers/stats.get.responses.200.examples.application/json[9].stats[0].metrics.spam_report_drops: 0
paths./subusers/stats.get.responses.200.examples.application/json[9].stats[0].metrics.spam_reports: 0
paths./subusers/stats.get.responses.200.examples.application/json[9].stats[0].metrics.unique_clicks: 0
paths./subusers/stats.get.responses.200.examples.application/json[9].stats[0].metrics.unique_opens: 0
paths./subusers/stats.get.responses.200.examples.application/json[9].stats[0].metrics.unsubscribe_drops: 0
paths./subusers/stats.get.responses.200.examples.application/json[9].stats[0].metrics.unsubscribes: 0
paths./subusers/stats.get.responses.200.examples.application/json[9].stats[0].name: Matt_subuser
paths./subusers/stats.get.responses.200.examples.application/json[9].stats[0].type: subuser
paths./subusers/stats.get.responses.200.schema.$ref: '#/definitions/stats'
paths./subusers/stats.get.security.length: 1
paths./subusers/stats.get.security[0].Authorization.length: 0
paths./subusers/stats.get.summary: Retrieve email statistics for your subusers.
paths./subusers/stats.get.tags.length: 1
paths./subusers/stats.get.tags[0]: Subusers API
paths./subusers/stats/monthly.get.description: |-
  **This endpoint allows you to retrieve the monthly email statistics for all subusers over the given date range.**

  While you can always view the statistics for all email activity on your account, subuser statistics enable you to view specific segments of your stats for your subusers. Emails sent, bounces, and spam reports are always tracked for subusers. Unsubscribes, clicks, and opens are tracked if you have enabled the required settings.

  When using the `sort_by_metric` to sort your stats by a specific metric, you can not sort by the following metrics:
  `bounce_drops`, `deferred`, `invalid_emails`, `processed`, `spam_report_drops`, `spam_reports`, or `unsubscribe_drops`.

  For more information, see our [User Guide](https://sendgrid.com/docs/User_Guide/Statistics/subuser.html).
paths./subusers/stats/monthly.get.operationId: GET_subusers-stats-monthly
paths./subusers/stats/monthly.get.parameters.length: 6
paths./subusers/stats/monthly.get.parameters[0].description: The date of the month
  to retrieve statistics for. Must be formatted YYYY-MM-DD
paths./subusers/stats/monthly.get.parameters[0].in: query
paths./subusers/stats/monthly.get.parameters[0].name: date
paths./subusers/stats/monthly.get.parameters[0].required: true
paths./subusers/stats/monthly.get.parameters[0].type: string
paths./subusers/stats/monthly.get.parameters[1].description: A substring search of
  your subusers.
paths./subusers/stats/monthly.get.parameters[1].in: query
paths./subusers/stats/monthly.get.parameters[1].name: subuser
paths./subusers/stats/monthly.get.parameters[1].required: false
paths./subusers/stats/monthly.get.parameters[1].type: string
paths./subusers/stats/monthly.get.parameters[2].default: delivered
paths./subusers/stats/monthly.get.parameters[2].description: 'The metric that you
  want to sort by. Metrics that you can sort by are: `blocks`, `bounces`, `clicks`,
  `delivered`, `opens`, `requests`, `unique_clicks`, `unique_opens`, and `unsubscribes`.'''
paths./subusers/stats/monthly.get.parameters[2].in: query
paths./subusers/stats/monthly.get.parameters[2].name: sort_by_metric
paths./subusers/stats/monthly.get.parameters[2].required: false
paths./subusers/stats/monthly.get.parameters[2].type: string
paths./subusers/stats/monthly.get.parameters[3].default: desc
paths./subusers/stats/monthly.get.parameters[3].description: The direction you want
  to sort.
paths./subusers/stats/monthly.get.parameters[3].enum.length: 2
paths./subusers/stats/monthly.get.parameters[3].enum[0]: desc
paths./subusers/stats/monthly.get.parameters[3].enum[1]: asc
paths./subusers/stats/monthly.get.parameters[3].in: query
paths./subusers/stats/monthly.get.parameters[3].name: sort_by_direction
paths./subusers/stats/monthly.get.parameters[3].required: false
paths./subusers/stats/monthly.get.parameters[3].type: string
paths./subusers/stats/monthly.get.parameters[4].default: 5
paths./subusers/stats/monthly.get.parameters[4].description: Optional field to limit
  the number of results returned.
paths./subusers/stats/monthly.get.parameters[4].in: query
paths./subusers/stats/monthly.get.parameters[4].name: limit
paths./subusers/stats/monthly.get.parameters[4].required: false
paths./subusers/stats/monthly.get.parameters[4].type: integer
paths./subusers/stats/monthly.get.parameters[5].default: 0
paths./subusers/stats/monthly.get.parameters[5].description: Optional beginning point
  in the list to retrieve from.
paths./subusers/stats/monthly.get.parameters[5].in: query
paths./subusers/stats/monthly.get.parameters[5].name: offset
paths./subusers/stats/monthly.get.parameters[5].required: false
paths./subusers/stats/monthly.get.parameters[5].type: integer
paths./subusers/stats/monthly.get.produces.length: 1
paths./subusers/stats/monthly.get.produces[0]: application/json
paths./subusers/stats/monthly.get.responses.200.description: ""
paths./subusers/stats/monthly.get.responses.200.examples.application/json.date: 2016-02-01
paths./subusers/stats/monthly.get.responses.200.examples.application/json.stats.length: 2
paths./subusers/stats/monthly.get.responses.200.examples.application/json.stats[0].first_name: John
paths./subusers/stats/monthly.get.responses.200.examples.application/json.stats[0].last_name: Doe
paths./subusers/stats/monthly.get.responses.200.examples.application/json.stats[0].metrics.blocks: 0
paths./subusers/stats/monthly.get.responses.200.examples.application/json.stats[0].metrics.bounce_drops: 0
paths./subusers/stats/monthly.get.responses.200.examples.application/json.stats[0].metrics.bounces: 0
paths./subusers/stats/monthly.get.responses.200.examples.application/json.stats[0].metrics.clicks: 0
paths./subusers/stats/monthly.get.responses.200.examples.application/json.stats[0].metrics.deferred: 0
paths./subusers/stats/monthly.get.responses.200.examples.application/json.stats[0].metrics.delivered: 0
paths./subusers/stats/monthly.get.responses.200.examples.application/json.stats[0].metrics.invalid_emails: 0
paths./subusers/stats/monthly.get.responses.200.examples.application/json.stats[0].metrics.opens: 1
paths./subusers/stats/monthly.get.responses.200.examples.application/json.stats[0].metrics.processed: 0
paths./subusers/stats/monthly.get.responses.200.examples.application/json.stats[0].metrics.requests: 100
paths./subusers/stats/monthly.get.responses.200.examples.application/json.stats[0].metrics.spam_report_drops: 0
paths./subusers/stats/monthly.get.responses.200.examples.application/json.stats[0].metrics.spam_reports: 99
paths./subusers/stats/monthly.get.responses.200.examples.application/json.stats[0].metrics.unique_clicks: 0
paths./subusers/stats/monthly.get.responses.200.examples.application/json.stats[0].metrics.unique_opens: 0
paths./subusers/stats/monthly.get.responses.200.examples.application/json.stats[0].metrics.unsubscribe_drops: 0
paths./subusers/stats/monthly.get.responses.200.examples.application/json.stats[0].metrics.unsubscribes: 0
paths./subusers/stats/monthly.get.responses.200.examples.application/json.stats[0].name: user1
paths./subusers/stats/monthly.get.responses.200.examples.application/json.stats[0].type: subuser
paths./subusers/stats/monthly.get.responses.200.examples.application/json.stats[1].first_name: Jane
paths./subusers/stats/monthly.get.responses.200.examples.application/json.stats[1].last_name: Doe
paths./subusers/stats/monthly.get.responses.200.examples.application/json.stats[1].metrics.blocks: 0
paths./subusers/stats/monthly.get.responses.200.examples.application/json.stats[1].metrics.bounce_drops: 0
paths./subusers/stats/monthly.get.responses.200.examples.application/json.stats[1].metrics.bounces: 0
paths./subusers/stats/monthly.get.responses.200.examples.application/json.stats[1].metrics.clicks: 5
paths./subusers/stats/monthly.get.responses.200.examples.application/json.stats[1].metrics.deferred: 0
paths./subusers/stats/monthly.get.responses.200.examples.application/json.stats[1].metrics.delivered: 0
paths./subusers/stats/monthly.get.responses.200.examples.application/json.stats[1].metrics.invalid_emails: 0
paths./subusers/stats/monthly.get.responses.200.examples.application/json.stats[1].metrics.opens: 10
paths./subusers/stats/monthly.get.responses.200.examples.application/json.stats[1].metrics.processed: 10
paths./subusers/stats/monthly.get.responses.200.examples.application/json.stats[1].metrics.requests: 10
paths./subusers/stats/monthly.get.responses.200.examples.application/json.stats[1].metrics.spam_report_drops: 0
paths./subusers/stats/monthly.get.responses.200.examples.application/json.stats[1].metrics.spam_reports: 0
paths./subusers/stats/monthly.get.responses.200.examples.application/json.stats[1].metrics.unique_clicks: 0
paths./subusers/stats/monthly.get.responses.200.examples.application/json.stats[1].metrics.unique_opens: 0
paths./subusers/stats/monthly.get.responses.200.examples.application/json.stats[1].metrics.unsubscribe_drops: 0
paths./subusers/stats/monthly.get.responses.200.examples.application/json.stats[1].metrics.unsubscribes: 0
paths./subusers/stats/monthly.get.responses.200.examples.application/json.stats[1].name: user2
paths./subusers/stats/monthly.get.responses.200.examples.application/json.stats[1].type: subuser
paths./subusers/stats/monthly.get.responses.200.schema.$ref: '#/definitions/subuser_stats'
paths./subusers/stats/monthly.get.security.length: 1
paths./subusers/stats/monthly.get.security[0].Authorization.length: 0
paths./subusers/stats/monthly.get.summary: Retrieve monthly stats for all subusers
paths./subusers/stats/monthly.get.tags.length: 1
paths./subusers/stats/monthly.get.tags[0]: Subusers API
paths./subusers/stats/sums.get.description: |-
  **This endpoint allows you to retrieve the total sums of each email statistic metric for all subusers over the given date range.**


  While you can always view the statistics for all email activity on your account, subuser statistics enable you to view specific segments of your stats. Emails sent, bounces, and spam reports are always tracked for subusers. Unsubscribes, clicks, and opens are tracked if you have enabled the required settings.

  For more information, see our [User Guide](https://sendgrid.com/docs/User_Guide/Statistics/subuser.html).
paths./subusers/stats/sums.get.operationId: GET_subusers-stats-sums
paths./subusers/stats/sums.get.parameters.length: 7
paths./subusers/stats/sums.get.parameters[0].default: desc
paths./subusers/stats/sums.get.parameters[0].description: 'The direction you want
  to sort. '
paths./subusers/stats/sums.get.parameters[0].enum.length: 2
paths./subusers/stats/sums.get.parameters[0].enum[0]: desc
paths./subusers/stats/sums.get.parameters[0].enum[1]: asc
paths./subusers/stats/sums.get.parameters[0].in: query
paths./subusers/stats/sums.get.parameters[0].name: sort_by_direction
paths./subusers/stats/sums.get.parameters[0].required: false
paths./subusers/stats/sums.get.parameters[0].type: string
paths./subusers/stats/sums.get.parameters[1].description: The starting date of the
  statistics to retrieve. Must follow format YYYY-MM-DD.
paths./subusers/stats/sums.get.parameters[1].in: query
paths./subusers/stats/sums.get.parameters[1].name: start_date
paths./subusers/stats/sums.get.parameters[1].required: true
paths./subusers/stats/sums.get.parameters[1].type: string
paths./subusers/stats/sums.get.parameters[2].description: The end date of the statistics
  to retrieve. Defaults to today. Must follow format YYYY-MM-DD.
paths./subusers/stats/sums.get.parameters[2].in: query
paths./subusers/stats/sums.get.parameters[2].name: end_date
paths./subusers/stats/sums.get.parameters[2].required: false
paths./subusers/stats/sums.get.parameters[2].type: string
paths./subusers/stats/sums.get.parameters[3].default: 5
paths./subusers/stats/sums.get.parameters[3].description: Limits the number of results
  returned per page.
paths./subusers/stats/sums.get.parameters[3].in: query
paths./subusers/stats/sums.get.parameters[3].name: limit
paths./subusers/stats/sums.get.parameters[3].required: false
paths./subusers/stats/sums.get.parameters[3].type: integer
paths./subusers/stats/sums.get.parameters[4].default: 0
paths./subusers/stats/sums.get.parameters[4].description: The point in the list to
  begin retrieving results from.
paths./subusers/stats/sums.get.parameters[4].in: query
paths./subusers/stats/sums.get.parameters[4].name: offset
paths./subusers/stats/sums.get.parameters[4].required: false
paths./subusers/stats/sums.get.parameters[4].type: integer
paths./subusers/stats/sums.get.parameters[5].description: How to group the statistics.
  Defaults to today. Must follow format YYYY-MM-DD.
paths./subusers/stats/sums.get.parameters[5].in: query
paths./subusers/stats/sums.get.parameters[5].name: aggregated_by
paths./subusers/stats/sums.get.parameters[5].required: false
paths./subusers/stats/sums.get.parameters[5].type: string
paths./subusers/stats/sums.get.parameters[6].default: delivered
paths./subusers/stats/sums.get.parameters[6].description: The metric that you want
  to sort by.  Must be a single metric.
paths./subusers/stats/sums.get.parameters[6].in: query
paths./subusers/stats/sums.get.parameters[6].name: sort_by_metric
paths./subusers/stats/sums.get.parameters[6].required: false
paths./subusers/stats/sums.get.parameters[6].type: string
paths./subusers/stats/sums.get.produces.length: 1
paths./subusers/stats/sums.get.produces[0]: application/json
paths./subusers/stats/sums.get.responses.200.description: ""
paths./subusers/stats/sums.get.responses.200.examples.application/json.date: 2015-10-11
paths./subusers/stats/sums.get.responses.200.examples.application/json.stats.length: 0
paths./subusers/stats/sums.get.responses.200.schema.$ref: '#/definitions/category_stats'
paths./subusers/stats/sums.get.security.length: 1
paths./subusers/stats/sums.get.security[0].Authorization.length: 0
paths./subusers/stats/sums.get.summary: ' Retrieve the totals for each email statistic
  metric for all subusers.'
paths./subusers/stats/sums.get.tags.length: 1
paths./subusers/stats/sums.get.tags[0]: Subusers API
paths./suppression/blocks.delete.description: "**This endpoint allows you to delete
  all email addresses on your blocks list.**\n\nThere are two options for deleting
  blocked emails: \n\n1. You can delete all blocked emails by setting `delete_all`
  to true in the request body. \n2. You can delete some blocked emails by specifying
  the email addresses in an array in the request body.\n\n[Blocks](https://sendgrid.com/docs/Glossary/blocks.html)
  happen when your message was rejected for a reason related to the message, not the
  recipient address. This can happen when your mail server IP address has been added
  to a blacklist or blocked by an ISP, or if the message content is flagged by a filter
  on the receiving server.\n\nFor more information, please see our [User Guide](https://sendgrid.com/docs/User_Guide/Suppressions/blocks.html)."
paths./suppression/blocks.delete.operationId: DELETE_suppression-blocks
paths./suppression/blocks.delete.parameters.length: 2
paths./suppression/blocks.delete.parameters[0].in: body
paths./suppression/blocks.delete.parameters[0].name: body
paths./suppression/blocks.delete.parameters[0].schema.example.delete_all: false
paths./suppression/blocks.delete.parameters[0].schema.example.emails.length: 2
paths./suppression/blocks.delete.parameters[0].schema.example.emails[0]: example1@example.com
paths./suppression/blocks.delete.parameters[0].schema.example.emails[1]: example2@example.com
paths./suppression/blocks.delete.parameters[0].schema.properties.delete_all.description: Indicates
  if you want to delete all blocked email addresses.
paths./suppression/blocks.delete.parameters[0].schema.properties.delete_all.type: boolean
paths./suppression/blocks.delete.parameters[0].schema.properties.emails.description: The
  specific blocked email addresses that you want to delete.
paths./suppression/blocks.delete.parameters[0].schema.properties.emails.items.type: string
paths./suppression/blocks.delete.parameters[0].schema.properties.emails.type: array
paths./suppression/blocks.delete.parameters[0].schema.type: object
paths./suppression/blocks.delete.parameters[1].$ref: '#/parameters/trait:onBehalfOfSubuser:on-behalf-of'
paths./suppression/blocks.delete.produces.length: 1
paths./suppression/blocks.delete.produces[0]: application/json
paths./suppression/blocks.delete.responses.204.description: ""
paths./suppression/blocks.delete.responses.204.schema.type: object
paths./suppression/blocks.delete.security.length: 1
paths./suppression/blocks.delete.security[0].Authorization.length: 0
paths./suppression/blocks.delete.summary: Delete blocks
paths./suppression/blocks.delete.tags.length: 1
paths./suppression/blocks.delete.tags[0]: Blocks API
paths./suppression/blocks.get.description: |-
  **This endpoint allows you to retrieve a list of all email addresses that are currently on your blocks list.**

  There are several causes for [blocked](https://sendgrid.com/docs/Glossary/blocks.html) emails: for example, your mail server IP address is on an ISP blacklist, or blocked by an ISP, or if the receiving server flags the message content.

  For more information, please see our [User Guide](https://sendgrid.com/docs/User_Guide/Suppressions/blocks.html).
paths./suppression/blocks.get.operationId: GET_suppression-blocks
paths./suppression/blocks.get.parameters.length: 5
paths./suppression/blocks.get.parameters[0].description: Refers start of the time
  range in unix timestamp when a blocked email was created (inclusive).
paths./suppression/blocks.get.parameters[0].in: query
paths./suppression/blocks.get.parameters[0].name: start_time
paths./suppression/blocks.get.parameters[0].type: integer
paths./suppression/blocks.get.parameters[1].description: Refers end of the time range
  in unix timestamp when a blocked email was created (inclusive).
paths./suppression/blocks.get.parameters[1].in: query
paths./suppression/blocks.get.parameters[1].name: end_time
paths./suppression/blocks.get.parameters[1].type: integer
paths./suppression/blocks.get.parameters[2].description: Limit the number of results
  to be displayed per page.
paths./suppression/blocks.get.parameters[2].in: query
paths./suppression/blocks.get.parameters[2].name: limit
paths./suppression/blocks.get.parameters[2].type: integer
paths./suppression/blocks.get.parameters[3].description: The point in the list to
  begin displaying results.
paths./suppression/blocks.get.parameters[3].in: query
paths./suppression/blocks.get.parameters[3].name: offset
paths./suppression/blocks.get.parameters[3].type: integer
paths./suppression/blocks.get.parameters[4].$ref: '#/parameters/trait:onBehalfOfSubuser:on-behalf-of'
paths./suppression/blocks.get.produces.length: 1
paths./suppression/blocks.get.produces[0]: application/json
paths./suppression/blocks.get.responses.200.description: ""
paths./suppression/blocks.get.responses.200.examples.application/json.length: 1
paths./suppression/blocks.get.responses.200.examples.application/json[0].created: 1.4436512e+09
paths./suppression/blocks.get.responses.200.examples.application/json[0].email: example@example.com
paths./suppression/blocks.get.responses.200.examples.application/json[0].reason: 'error
  dialing remote address: dial tcp 10.57.152.165:25: no route to host'
paths./suppression/blocks.get.responses.200.examples.application/json[0].status: 4.0.0
paths./suppression/blocks.get.responses.200.schema.items.properties.created.description: A
  Unix timestamp indicating when the email address was added to the blocks list.
paths./suppression/blocks.get.responses.200.schema.items.properties.created.type: integer
paths./suppression/blocks.get.responses.200.schema.items.properties.email.description: The
  email address that was added to the block list.
paths./suppression/blocks.get.responses.200.schema.items.properties.email.type: string
paths./suppression/blocks.get.responses.200.schema.items.properties.reason.description: An
  explanation for the reason of the block.
paths./suppression/blocks.get.responses.200.schema.items.properties.reason.type: string
paths./suppression/blocks.get.responses.200.schema.items.properties.status.description: The
  status of the block.
paths./suppression/blocks.get.responses.200.schema.items.properties.status.type: string
paths./suppression/blocks.get.responses.200.schema.items.required.length: 4
paths./suppression/blocks.get.responses.200.schema.items.required[0]: created
paths./suppression/blocks.get.responses.200.schema.items.required[1]: email
paths./suppression/blocks.get.responses.200.schema.items.required[2]: reason
paths./suppression/blocks.get.responses.200.schema.items.required[3]: status
paths./suppression/blocks.get.responses.200.schema.items.type: object
paths./suppression/blocks.get.responses.200.schema.type: array
paths./suppression/blocks.get.security.length: 1
paths./suppression/blocks.get.security[0].Authorization.length: 0
paths./suppression/blocks.get.summary: Retrieve all blocks
paths./suppression/blocks.get.tags.length: 1
paths./suppression/blocks.get.tags[0]: Blocks API
paths./suppression/blocks/{email}.delete.description: |-
  **This endpoint allows you to delete a specific email address from your blocks list.**

  [Blocks](https://sendgrid.com/docs/Glossary/blocks.html) happen when your message was rejected for a reason related to the message, not the recipient address. This can happen when your mail server IP address has been added to a blacklist or blocked by an ISP, or if the message content is flagged by a filter on the receiving server.

  For more information, please see our [User Guide](https://sendgrid.com/docs/User_Guide/Suppressions/blocks.html).
paths./suppression/blocks/{email}.delete.operationId: DELETE_suppression-blocks-email
paths./suppression/blocks/{email}.delete.parameters.length: 3
paths./suppression/blocks/{email}.delete.parameters[0].in: body
paths./suppression/blocks/{email}.delete.parameters[0].name: body
paths./suppression/blocks/{email}.delete.parameters[0].schema.type: "null"
paths./suppression/blocks/{email}.delete.parameters[1].$ref: '#/parameters/trait:authorizationHeader:Authorization'
paths./suppression/blocks/{email}.delete.parameters[2].$ref: '#/parameters/trait:onBehalfOfSubuser:on-behalf-of'
paths./suppression/blocks/{email}.delete.responses.204.description: ""
paths./suppression/blocks/{email}.delete.responses.204.schema.type: object
paths./suppression/blocks/{email}.delete.summary: Delete a specific block
paths./suppression/blocks/{email}.delete.tags.length: 1
paths./suppression/blocks/{email}.delete.tags[0]: Blocks API
paths./suppression/blocks/{email}.get.description: |-
  **This endpoint allows you to retrieve a specific email address from your blocks list.**

  [Blocks](https://sendgrid.com/docs/Glossary/blocks.html) happen when your message was rejected for a reason related to the message, not the recipient address. This can happen when your mail server IP address has been added to a blacklist or blocked by an ISP, or if the message content is flagged by a filter on the receiving server.

  For more information, please see our [User Guide](https://sendgrid.com/docs/User_Guide/Suppressions/blocks.html).
paths./suppression/blocks/{email}.get.operationId: GET_suppression-blocks-email
paths./suppression/blocks/{email}.get.parameters.length: 1
paths./suppression/blocks/{email}.get.parameters[0].$ref: '#/parameters/trait:onBehalfOfSubuser:on-behalf-of'
paths./suppression/blocks/{email}.get.produces.length: 1
paths./suppression/blocks/{email}.get.produces[0]: application/json
paths./suppression/blocks/{email}.get.responses.200.description: ""
paths./suppression/blocks/{email}.get.responses.200.examples.application/json.length: 1
paths./suppression/blocks/{email}.get.responses.200.examples.application/json[0].created: 1.4436512e+09
paths./suppression/blocks/{email}.get.responses.200.examples.application/json[0].email: example@example.com
paths./suppression/blocks/{email}.get.responses.200.examples.application/json[0].reason: 'error
  dialing remote address: dial tcp 10.57.152.165:25: no route to host'
paths./suppression/blocks/{email}.get.responses.200.examples.application/json[0].status: 4.0.0
paths./suppression/blocks/{email}.get.responses.200.schema.items.properties.created.description: A
  Unix timestamp indicating when the block was created.
paths./suppression/blocks/{email}.get.responses.200.schema.items.properties.created.type: integer
paths./suppression/blocks/{email}.get.responses.200.schema.items.properties.email.description: The
  email address of the recipient that was blocked.
paths./suppression/blocks/{email}.get.responses.200.schema.items.properties.email.type: string
paths./suppression/blocks/{email}.get.responses.200.schema.items.properties.reason.description: The
  reason why the email was blocked.
paths./suppression/blocks/{email}.get.responses.200.schema.items.properties.reason.type: string
paths./suppression/blocks/{email}.get.responses.200.schema.items.properties.status.description: The
  status of the block.
paths./suppression/blocks/{email}.get.responses.200.schema.items.properties.status.type: string
paths./suppression/blocks/{email}.get.responses.200.schema.items.required.length: 3
paths./suppression/blocks/{email}.get.responses.200.schema.items.required[0]: created
paths./suppression/blocks/{email}.get.responses.200.schema.items.required[1]: email
paths./suppression/blocks/{email}.get.responses.200.schema.items.required[2]: reason
paths./suppression/blocks/{email}.get.responses.200.schema.items.type: object
paths./suppression/blocks/{email}.get.responses.200.schema.type: array
paths./suppression/blocks/{email}.get.security.length: 1
paths./suppression/blocks/{email}.get.security[0].Authorization.length: 0
paths./suppression/blocks/{email}.get.summary: Retrieve a specific block
paths./suppression/blocks/{email}.get.tags.length: 1
paths./suppression/blocks/{email}.get.tags[0]: Blocks API
paths./suppression/blocks/{email}.parameters.length: 1
paths./suppression/blocks/{email}.parameters[0].description: The email address of
  the specific block.
paths./suppression/blocks/{email}.parameters[0].in: path
paths./suppression/blocks/{email}.parameters[0].name: email
paths./suppression/blocks/{email}.parameters[0].required: true
paths./suppression/blocks/{email}.parameters[0].type: string
paths./suppression/bounces.delete.consumes.length: 1
paths./suppression/bounces.delete.consumes[0]: application/json
paths./suppression/bounces.delete.description: "**This endpoint allows you to delete
  all of your bounces. You can also use this endpoint to remove a specific email address
  from your bounce list.**\n\nA bounced email is when the message is undeliverable
  and then returned to the server that sent it.\n\nFor more information see: \n\n*
  [User Guide > Bounces](https://sendgrid.com/docs/User_Guide/Suppressions/bounces.html)
  for more information\n* [Glossary > Bounces](https://sendgrid.com/docs/Glossary/Bounces.html)\n*
  [Classroom > List Scrubbing Guide](https://sendgrid.com/docs/Classroom/Deliver/list_scrubbing.html)\n\nNote:
  the `delete_all` and `emails` parameters should be used independently of each other
  as they have different purposes."
paths./suppression/bounces.delete.operationId: DELETE_suppression-bounces
paths./suppression/bounces.delete.parameters.length: 2
paths./suppression/bounces.delete.parameters[0].in: body
paths./suppression/bounces.delete.parameters[0].name: body
paths./suppression/bounces.delete.parameters[0].schema.example.delete_all: true
paths./suppression/bounces.delete.parameters[0].schema.example.emails.length: 2
paths./suppression/bounces.delete.parameters[0].schema.example.emails[0]: example@example.com
paths./suppression/bounces.delete.parameters[0].schema.example.emails[1]: example2@example.com
paths./suppression/bounces.delete.parameters[0].schema.properties.delete_all.description: This
  parameter allows you to delete **every** email in your bounce list. This should
  not be used with the emails parameter.
paths./suppression/bounces.delete.parameters[0].schema.properties.delete_all.type: boolean
paths./suppression/bounces.delete.parameters[0].schema.properties.emails.description: Delete
  multiple emails from your bounce list at the same time. This should not be used
  with the delete_all parameter.
paths./suppression/bounces.delete.parameters[0].schema.properties.emails.items.type: string
paths./suppression/bounces.delete.parameters[0].schema.properties.emails.type: array
paths./suppression/bounces.delete.parameters[0].schema.type: object
paths./suppression/bounces.delete.parameters[1].$ref: '#/parameters/trait:onBehalfOfSubuser:on-behalf-of'
paths./suppression/bounces.delete.produces.length: 1
paths./suppression/bounces.delete.produces[0]: application/json
paths./suppression/bounces.delete.responses.204.description: ""
paths./suppression/bounces.delete.responses.204.schema.type: "null"
paths./suppression/bounces.delete.responses.401.description: ""
paths./suppression/bounces.delete.responses.401.examples.application/json.errors.length: 1
paths./suppression/bounces.delete.responses.401.examples.application/json.errors[0].message: authorization
  required
paths./suppression/bounces.delete.responses.401.schema.$ref: '#/definitions/global:ErrorResponse'
paths./suppression/bounces.delete.security.length: 1
paths./suppression/bounces.delete.security[0].Authorization.length: 0
paths./suppression/bounces.delete.summary: Delete bounces
paths./suppression/bounces.delete.tags.length: 1
paths./suppression/bounces.delete.tags[0]: Bounces API
paths./suppression/bounces.get.description: "**This endpoint allows you to retrieve
  all of your bounces.**\n\nA bounced email is when the message is undeliverable and
  then returned to the server that sent it.  \n\nFor more information see: \n\n* [User
  Guide > Bounces](https://sendgrid.com/docs/User_Guide/Suppressions/bounces.html)
  for more information\n* [Glossary > Bounces](https://sendgrid.com/docs/Glossary/Bounces.html)"
paths./suppression/bounces.get.operationId: GET_suppression-bounces
paths./suppression/bounces.get.parameters.length: 4
paths./suppression/bounces.get.parameters[0].description: Refers start of the time
  range in unix timestamp when a bounce was created (inclusive).
paths./suppression/bounces.get.parameters[0].in: query
paths./suppression/bounces.get.parameters[0].name: start_time
paths./suppression/bounces.get.parameters[0].type: integer
paths./suppression/bounces.get.parameters[1].description: Refers end of the time range
  in unix timestamp when a bounce was created (inclusive).
paths./suppression/bounces.get.parameters[1].in: query
paths./suppression/bounces.get.parameters[1].name: end_time
paths./suppression/bounces.get.parameters[1].type: integer
paths./suppression/bounces.get.parameters[2].default: application/json
paths./suppression/bounces.get.parameters[2].in: header
paths./suppression/bounces.get.parameters[2].name: Accept
paths./suppression/bounces.get.parameters[2].required: true
paths./suppression/bounces.get.parameters[2].type: string
paths./suppression/bounces.get.parameters[3].$ref: '#/parameters/trait:onBehalfOfSubuser:on-behalf-of'
paths./suppression/bounces.get.produces.length: 1
paths./suppression/bounces.get.produces[0]: application/json
paths./suppression/bounces.get.responses.200.description: ""
paths./suppression/bounces.get.responses.200.examples.application/json.length: 2
paths./suppression/bounces.get.responses.200.examples.application/json[0].created: 1.2503375e+09
paths./suppression/bounces.get.responses.200.examples.application/json[0].email: example@example.com
paths./suppression/bounces.get.responses.200.examples.application/json[0].reason: '550
  5.1.1 The email account that you tried to reach does not exist. Please try double-checking
  the recipient''s email address for typos or unnecessary spaces. Learn more at  https://support.google.com/mail/answer/6596
  o186si2389584ioe.63 - gsmtp '
paths./suppression/bounces.get.responses.200.examples.application/json[0].status: 5.1.1
paths./suppression/bounces.get.responses.200.examples.application/json[1].created: 1.2503375e+09
paths./suppression/bounces.get.responses.200.examples.application/json[1].email: example@example.com
paths./suppression/bounces.get.responses.200.examples.application/json[1].reason: '550
  5.1.1 <testemail2@testing.com>: Recipient address rejected: User unknown in virtual
  alias table '
paths./suppression/bounces.get.responses.200.examples.application/json[1].status: 5.1.1
paths./suppression/bounces.get.responses.200.schema.items.properties.created.type: number
paths./suppression/bounces.get.responses.200.schema.items.properties.email.type: string
paths./suppression/bounces.get.responses.200.schema.items.properties.reason.type: string
paths./suppression/bounces.get.responses.200.schema.items.properties.status.type: string
paths./suppression/bounces.get.responses.200.schema.items.type: object
paths./suppression/bounces.get.responses.200.schema.type: array
paths./suppression/bounces.get.responses.401.description: ""
paths./suppression/bounces.get.responses.401.examples.application/json.errors.length: 1
paths./suppression/bounces.get.responses.401.examples.application/json.errors[0].message: authorization
  required
paths./suppression/bounces.get.responses.401.schema.$ref: '#/definitions/global:ErrorResponse'
paths./suppression/bounces.get.security.length: 1
paths./suppression/bounces.get.security[0].Authorization.length: 0
paths./suppression/bounces.get.summary: Retrieve all bounces
paths./suppression/bounces.get.tags.length: 1
paths./suppression/bounces.get.tags[0]: Bounces API
paths./suppression/bounces/{email}.delete.description: "**This endpoint allows you
  to remove an email address from your bounce list.**\n\nA bounced email is when the
  message is undeliverable and then returned to the server that sent it. This endpoint
  allows you to delete a single email addresses from your bounce list. \n\nFor more
  information see: \n\n* [User Guide > Bounces](https://sendgrid.com/docs/User_Guide/Suppressions/bounces.html)
  for more information\n* [Glossary > Bounces](https://sendgrid.com/docs/Glossary/Bounces.html)\n*
  [Classroom > List Scrubbing Guide](https://sendgrid.com/docs/Classroom/Deliver/list_scrubbing.html)"
paths./suppression/bounces/{email}.delete.operationId: DELETE_suppression-bounces-email
paths./suppression/bounces/{email}.delete.parameters.length: 3
paths./suppression/bounces/{email}.delete.parameters[0].description: The email address
  you would like to remove from the bounce list.
paths./suppression/bounces/{email}.delete.parameters[0].format: email
paths./suppression/bounces/{email}.delete.parameters[0].in: query
paths./suppression/bounces/{email}.delete.parameters[0].name: email_address
paths./suppression/bounces/{email}.delete.parameters[0].required: true
paths./suppression/bounces/{email}.delete.parameters[0].type: string
paths./suppression/bounces/{email}.delete.parameters[1].in: body
paths./suppression/bounces/{email}.delete.parameters[1].name: body
paths./suppression/bounces/{email}.delete.parameters[1].schema.type: "null"
paths./suppression/bounces/{email}.delete.parameters[2].$ref: '#/parameters/trait:onBehalfOfSubuser:on-behalf-of'
paths./suppression/bounces/{email}.delete.produces.length: 1
paths./suppression/bounces/{email}.delete.produces[0]: application/json
paths./suppression/bounces/{email}.delete.responses.204.description: ""
paths./suppression/bounces/{email}.delete.responses.204.schema.type: object
paths./suppression/bounces/{email}.delete.responses.401.description: ""
paths./suppression/bounces/{email}.delete.responses.401.examples.application/json.errors.length: 1
paths./suppression/bounces/{email}.delete.responses.401.examples.application/json.errors[0].message: authorization
  required
paths./suppression/bounces/{email}.delete.responses.401.schema.$ref: '#/definitions/global:ErrorResponse'
paths./suppression/bounces/{email}.delete.security.length: 1
paths./suppression/bounces/{email}.delete.security[0].Authorization.length: 0
paths./suppression/bounces/{email}.delete.summary: Delete a bounce
paths./suppression/bounces/{email}.delete.tags.length: 1
paths./suppression/bounces/{email}.delete.tags[0]: Bounces API
paths./suppression/bounces/{email}.get.description: "**This endpoint allows you to
  retrieve a specific bounce for a given email address.**\n\nA bounced email is when
  the message is undeliverable and then returned to the server that sent it.\n\nFor
  more information see: \n\n* [User Guide > Bounces](https://sendgrid.com/docs/User_Guide/Suppressions/bounces.html)
  for more information\n* [Glossary > Bounces](https://sendgrid.com/docs/Glossary/Bounces.html)\n*
  [Classroom > List Scrubbing Guide](https://sendgrid.com/docs/Classroom/Deliver/list_scrubbing.html)"
paths./suppression/bounces/{email}.get.operationId: GET_suppression-bounces-email
paths./suppression/bounces/{email}.get.parameters.length: 1
paths./suppression/bounces/{email}.get.parameters[0].$ref: '#/parameters/trait:onBehalfOfSubuser:on-behalf-of'
paths./suppression/bounces/{email}.get.produces.length: 1
paths./suppression/bounces/{email}.get.produces[0]: application/json
paths./suppression/bounces/{email}.get.responses.200.description: ""
paths./suppression/bounces/{email}.get.responses.200.examples.application/json.length: 1
paths./suppression/bounces/{email}.get.responses.200.examples.application/json[0].created: 1.4436511e+09
paths./suppression/bounces/{email}.get.responses.200.examples.application/json[0].email: bounce1@test.com
paths./suppression/bounces/{email}.get.responses.200.examples.application/json[0].reason: '550
  5.1.1 The email account that you tried to reach does not exist. Please try double-checking
  the recipient''s email address for typos or unnecessary spaces. Learn more at  https://support.google.com/mail/answer/6596
  o186si2389584ioe.63 - gsmtp '
paths./suppression/bounces/{email}.get.responses.200.examples.application/json[0].status: 5.1.1
paths./suppression/bounces/{email}.get.responses.200.schema.items.properties.created.type: integer
paths./suppression/bounces/{email}.get.responses.200.schema.items.properties.email.type: string
paths./suppression/bounces/{email}.get.responses.200.schema.items.properties.reason.type: string
paths./suppression/bounces/{email}.get.responses.200.schema.items.properties.status.type: string
paths./suppression/bounces/{email}.get.responses.200.schema.items.type: object
paths./suppression/bounces/{email}.get.responses.200.schema.type: array
paths./suppression/bounces/{email}.get.security.length: 1
paths./suppression/bounces/{email}.get.security[0].Authorization.length: 0
paths./suppression/bounces/{email}.get.summary: Retrieve a Bounce
paths./suppression/bounces/{email}.get.tags.length: 1
paths./suppression/bounces/{email}.get.tags[0]: Bounces API
paths./suppression/bounces/{email}.parameters.length: 1
paths./suppression/bounces/{email}.parameters[0].in: path
paths./suppression/bounces/{email}.parameters[0].name: email
paths./suppression/bounces/{email}.parameters[0].required: true
paths./suppression/bounces/{email}.parameters[0].type: string
paths./suppression/invalid_emails.delete.description: "**This endpoint allows you
  to remove email addresses from your invalid email address list.**\n\nThere are two
  options for deleting invalid email addresses: \n\n1) You can delete all invalid
  email addresses by setting `delete_all` to true in the request body.\n2) You can
  delete some invalid email addresses by specifying certain addresses in an array
  in the request body.\n\nAn invalid email occurs when you attempt to send email to
  an address that is formatted in a manner that does not meet internet email format
  standards or the email does not exist at the recipient’s mail server.\n\nExamples
  include addresses without the “@” sign or addresses that include certain special
  characters and/or spaces. This response can come from our own server or the recipient
  mail server.\n\nFor more information, please see our [User Guide](https://sendgrid.com/docs/User_Guide/Suppressions/invalid_emails.html)."
paths./suppression/invalid_emails.delete.operationId: DELETE_suppression-invalid_emails
paths./suppression/invalid_emails.delete.parameters.length: 2
paths./suppression/invalid_emails.delete.parameters[0].in: body
paths./suppression/invalid_emails.delete.parameters[0].name: body
paths./suppression/invalid_emails.delete.parameters[0].schema.example.delete_all: false
paths./suppression/invalid_emails.delete.parameters[0].schema.example.emails.length: 2
paths./suppression/invalid_emails.delete.parameters[0].schema.example.emails[0]: example1@example.com
paths./suppression/invalid_emails.delete.parameters[0].schema.example.emails[1]: example2@example.com
paths./suppression/invalid_emails.delete.parameters[0].schema.properties.delete_all.description: Indicates
  if you want to remove all email address from the invalid emails list.
paths./suppression/invalid_emails.delete.parameters[0].schema.properties.delete_all.type: boolean
paths./suppression/invalid_emails.delete.parameters[0].schema.properties.emails.description: The
  list of specific email addresses that you want to remove.
paths./suppression/invalid_emails.delete.parameters[0].schema.properties.emails.items.type: string
paths./suppression/invalid_emails.delete.parameters[0].schema.properties.emails.type: array
paths./suppression/invalid_emails.delete.parameters[0].schema.type: object
paths./suppression/invalid_emails.delete.parameters[1].$ref: '#/parameters/trait:onBehalfOfSubuser:on-behalf-of'
paths./suppression/invalid_emails.delete.produces.length: 1
paths./suppression/invalid_emails.delete.produces[0]: application/json
paths./suppression/invalid_emails.delete.responses.204.description: ""
paths./suppression/invalid_emails.delete.responses.204.schema.type: object
paths./suppression/invalid_emails.delete.security.length: 1
paths./suppression/invalid_emails.delete.security[0].Authorization.length: 0
paths./suppression/invalid_emails.delete.summary: Delete invalid emails
paths./suppression/invalid_emails.delete.tags.length: 1
paths./suppression/invalid_emails.delete.tags[0]: Invalid Emails API
paths./suppression/invalid_emails.get.description: |-
  **This endpoint allows you to retrieve a list of all invalid email addresses.**

  An invalid email occurs when you attempt to send email to an address that is formatted in a manner that does not meet internet email format standards or the email does not exist at the recipient’s mail server.

  Examples include addresses without the “@” sign or addresses that include certain special characters and/or spaces. This response can come from our own server or the recipient mail server.

  For more information, please see our [User Guide](https://sendgrid.com/docs/User_Guide/Suppressions/invalid_emails.html).
paths./suppression/invalid_emails.get.operationId: GET_suppression-invalid_emails
paths./suppression/invalid_emails.get.parameters.length: 5
paths./suppression/invalid_emails.get.parameters[0].description: Refers start of the
  time range in unix timestamp when an invalid email was created (inclusive).
paths./suppression/invalid_emails.get.parameters[0].in: query
paths./suppression/invalid_emails.get.parameters[0].name: start_time
paths./suppression/invalid_emails.get.parameters[0].type: integer
paths./suppression/invalid_emails.get.parameters[1].description: Refers end of the
  time range in unix timestamp when an invalid email was created (inclusive).
paths./suppression/invalid_emails.get.parameters[1].in: query
paths./suppression/invalid_emails.get.parameters[1].name: end_time
paths./suppression/invalid_emails.get.parameters[1].type: integer
paths./suppression/invalid_emails.get.parameters[2].description: Limit the number
  of results to be displayed per page.
paths./suppression/invalid_emails.get.parameters[2].in: query
paths./suppression/invalid_emails.get.parameters[2].name: limit
paths./suppression/invalid_emails.get.parameters[2].type: integer
paths./suppression/invalid_emails.get.parameters[3].description: Paging offset. The
  point in the list to begin displaying results.
paths./suppression/invalid_emails.get.parameters[3].in: query
paths./suppression/invalid_emails.get.parameters[3].name: offset
paths./suppression/invalid_emails.get.parameters[3].type: integer
paths./suppression/invalid_emails.get.parameters[4].$ref: '#/parameters/trait:onBehalfOfSubuser:on-behalf-of'
paths./suppression/invalid_emails.get.produces.length: 1
paths./suppression/invalid_emails.get.produces[0]: application/json
paths./suppression/invalid_emails.get.responses.200.description: ""
paths./suppression/invalid_emails.get.responses.200.examples.application/json.length: 2
paths./suppression/invalid_emails.get.responses.200.examples.application/json[0].created: 1.4499537e+09
paths./suppression/invalid_emails.get.responses.200.examples.application/json[0].email: user1@example.com
paths./suppression/invalid_emails.get.responses.200.examples.application/json[0].reason: Mail
  domain mentioned in email address is unknown
paths./suppression/invalid_emails.get.responses.200.examples.application/json[1].created: 1.4499393e+09
paths./suppression/invalid_emails.get.responses.200.examples.application/json[1].email: user1@example.com
paths./suppression/invalid_emails.get.responses.200.examples.application/json[1].reason: Mail
  domain mentioned in email address is unknown
paths./suppression/invalid_emails.get.responses.200.schema.description: The list of
  invalid email addresses.
paths./suppression/invalid_emails.get.responses.200.schema.items.properties.created.description: A
  Unix timestamp indicating when the email address was added to the invalid emails
  list.
paths./suppression/invalid_emails.get.responses.200.schema.items.properties.created.type: integer
paths./suppression/invalid_emails.get.responses.200.schema.items.properties.email.description: The
  email address that was marked as invalid.
paths./suppression/invalid_emails.get.responses.200.schema.items.properties.email.type: string
paths./suppression/invalid_emails.get.responses.200.schema.items.properties.reason.description: The
  reason that the email address was marked as invalid.
paths./suppression/invalid_emails.get.responses.200.schema.items.properties.reason.type: string
paths./suppression/invalid_emails.get.responses.200.schema.items.required.length: 3
paths./suppression/invalid_emails.get.responses.200.schema.items.required[0]: created
paths./suppression/invalid_emails.get.responses.200.schema.items.required[1]: email
paths./suppression/invalid_emails.get.responses.200.schema.items.required[2]: reason
paths./suppression/invalid_emails.get.responses.200.schema.items.type: object
paths./suppression/invalid_emails.get.responses.200.schema.type: array
paths./suppression/invalid_emails.get.security.length: 1
paths./suppression/invalid_emails.get.security[0].Authorization.length: 0
paths./suppression/invalid_emails.get.summary: Retrieve all invalid emails
paths./suppression/invalid_emails.get.tags.length: 1
paths./suppression/invalid_emails.get.tags[0]: Invalid Emails API
paths./suppression/invalid_emails/{email}.delete.description: |-
  **This endpoint allows you to remove a specific email address from the invalid email address list.**

  An invalid email occurs when you attempt to send email to an address that is formatted in a manner that does not meet internet email format standards or the email does not exist at the recipient’s mail server.

  Examples include addresses without the “@” sign or addresses that include certain special characters and/or spaces. This response can come from our own server or the recipient mail server.

  For more information, please see our [User Guide](https://sendgrid.com/docs/User_Guide/Suppressions/invalid_emails.html).
paths./suppression/invalid_emails/{email}.delete.operationId: DELETE_suppression-invalid_emails-email
paths./suppression/invalid_emails/{email}.delete.parameters.length: 3
paths./suppression/invalid_emails/{email}.delete.parameters[0].in: body
paths./suppression/invalid_emails/{email}.delete.parameters[0].name: body
paths./suppression/invalid_emails/{email}.delete.parameters[0].schema.type: "null"
paths./suppression/invalid_emails/{email}.delete.parameters[1].$ref: '#/parameters/trait:authorizationHeader:Authorization'
paths./suppression/invalid_emails/{email}.delete.parameters[2].$ref: '#/parameters/trait:onBehalfOfSubuser:on-behalf-of'
paths./suppression/invalid_emails/{email}.delete.responses.204.description: ""
paths./suppression/invalid_emails/{email}.delete.responses.204.schema.type: object
paths./suppression/invalid_emails/{email}.delete.summary: Delete a specific invalid
  email
paths./suppression/invalid_emails/{email}.delete.tags.length: 1
paths./suppression/invalid_emails/{email}.delete.tags[0]: Invalid Emails API
paths./suppression/invalid_emails/{email}.get.description: |-
  **This endpoint allows you to retrieve a specific invalid email addresses.**

  An invalid email occurs when you attempt to send email to an address that is formatted in a manner that does not meet internet email format standards or the email does not exist at the recipient’s mail server.

  Examples include addresses without the “@” sign or addresses that include certain special characters and/or spaces. This response can come from our own server or the recipient mail server.

  For more information, please see our [User Guide](https://sendgrid.com/docs/User_Guide/Suppressions/invalid_emails.html).
paths./suppression/invalid_emails/{email}.get.operationId: GET_suppression-invalid_emails-email
paths./suppression/invalid_emails/{email}.get.parameters.length: 2
paths./suppression/invalid_emails/{email}.get.parameters[0].$ref: '#/parameters/trait:authorizationHeader:Authorization'
paths./suppression/invalid_emails/{email}.get.parameters[1].$ref: '#/parameters/trait:onBehalfOfSubuser:on-behalf-of'
paths./suppression/invalid_emails/{email}.get.produces.length: 1
paths./suppression/invalid_emails/{email}.get.produces[0]: application/json
paths./suppression/invalid_emails/{email}.get.responses.200.description: ""
paths./suppression/invalid_emails/{email}.get.responses.200.examples.application/json.length: 1
paths./suppression/invalid_emails/{email}.get.responses.200.examples.application/json[0].created: 1.4544332e+09
paths./suppression/invalid_emails/{email}.get.responses.200.examples.application/json[0].email: test1@example.com
paths./suppression/invalid_emails/{email}.get.responses.200.examples.application/json[0].reason: Mail
  domain mentioned in email address is unknown
paths./suppression/invalid_emails/{email}.get.responses.200.schema.items.properties.created.description: A
  Unix timestamp indicating when the email address was added to the invalid emails
  list.
paths./suppression/invalid_emails/{email}.get.responses.200.schema.items.properties.created.type: integer
paths./suppression/invalid_emails/{email}.get.responses.200.schema.items.properties.email.description: The
  email address that was marked as invalid.
paths./suppression/invalid_emails/{email}.get.responses.200.schema.items.properties.email.type: string
paths./suppression/invalid_emails/{email}.get.responses.200.schema.items.properties.reason.description: A
  reason explaining why the email address was marked as invalid.
paths./suppression/invalid_emails/{email}.get.responses.200.schema.items.properties.reason.type: string
paths./suppression/invalid_emails/{email}.get.responses.200.schema.items.required.length: 3
paths./suppression/invalid_emails/{email}.get.responses.200.schema.items.required[0]: created
paths./suppression/invalid_emails/{email}.get.responses.200.schema.items.required[1]: email
paths./suppression/invalid_emails/{email}.get.responses.200.schema.items.required[2]: reason
paths./suppression/invalid_emails/{email}.get.responses.200.schema.items.type: object
paths./suppression/invalid_emails/{email}.get.responses.200.schema.type: array
paths./suppression/invalid_emails/{email}.get.summary: Retrieve a specific invalid
  email
paths./suppression/invalid_emails/{email}.get.tags.length: 1
paths./suppression/invalid_emails/{email}.get.tags[0]: Invalid Emails API
paths./suppression/invalid_emails/{email}.parameters.length: 1
paths./suppression/invalid_emails/{email}.parameters[0].description: The specific
  email address of the invalid email entry that you want to retrieve.
paths./suppression/invalid_emails/{email}.parameters[0].in: path
paths./suppression/invalid_emails/{email}.parameters[0].name: email
paths./suppression/invalid_emails/{email}.parameters[0].required: true
paths./suppression/invalid_emails/{email}.parameters[0].type: string
paths./suppression/spam_reports.delete.description: "**This endpoint allows you to
  delete your spam reports.**\n\nThere are two options for deleting spam reports:
  \n\n1) You can delete all spam reports by setting \"delete_all\" to true in the
  request body. \n2) You can delete some spam reports by specifying the email addresses
  in an array in the request body.\n\n[Spam reports](https://sendgrid.com/docs/Glossary/spam_reports.html)
  happen when a recipient indicates that they think your email is [spam](https://sendgrid.com/docs/Glossary/spam.html)
  and then their email provider reports this to SendGrid.\n\nFor more information,
  please see our [User Guide](https://sendgrid.com/docs/User_Guide/Suppressions/spam_reports.html)."
paths./suppression/spam_reports.delete.operationId: DELETE_suppression-spam_reports
paths./suppression/spam_reports.delete.parameters.length: 2
paths./suppression/spam_reports.delete.parameters[0].in: body
paths./suppression/spam_reports.delete.parameters[0].name: body
paths./suppression/spam_reports.delete.parameters[0].schema.example.delete_all: false
paths./suppression/spam_reports.delete.parameters[0].schema.example.emails.length: 2
paths./suppression/spam_reports.delete.parameters[0].schema.example.emails[0]: example1@example.com
paths./suppression/spam_reports.delete.parameters[0].schema.example.emails[1]: example2@example.com
paths./suppression/spam_reports.delete.parameters[0].schema.properties.delete_all.description: Indicates
  if you want to delete all email addresses on the spam report list.
paths./suppression/spam_reports.delete.parameters[0].schema.properties.delete_all.type: boolean
paths./suppression/spam_reports.delete.parameters[0].schema.properties.emails.description: A
  list of specific email addresses that you want to remove from the spam report list.
paths./suppression/spam_reports.delete.parameters[0].schema.properties.emails.items.type: string
paths./suppression/spam_reports.delete.parameters[0].schema.properties.emails.type: array
paths./suppression/spam_reports.delete.parameters[0].schema.type: object
paths./suppression/spam_reports.delete.parameters[1].$ref: '#/parameters/trait:onBehalfOfSubuser:on-behalf-of'
paths./suppression/spam_reports.delete.produces.length: 1
paths./suppression/spam_reports.delete.produces[0]: application/json
paths./suppression/spam_reports.delete.responses.204.description: ""
paths./suppression/spam_reports.delete.responses.204.schema.type: object
paths./suppression/spam_reports.delete.security.length: 1
paths./suppression/spam_reports.delete.security[0].Authorization.length: 0
paths./suppression/spam_reports.delete.summary: Delete spam reports
paths./suppression/spam_reports.delete.tags.length: 1
paths./suppression/spam_reports.delete.tags[0]: Spam Reports API
paths./suppression/spam_reports.get.description: |-
  **This endpoint allows you to retrieve all spam reports.**

  [Spam reports](https://sendgrid.com/docs/Glossary/spam_reports.html) happen when a recipient indicates that they think your email is [spam](https://sendgrid.com/docs/Glossary/spam.html) and then their email provider reports this to SendGrid.

  For more information, please see our [User Guide](https://sendgrid.com/docs/User_Guide/Suppressions/spam_reports.html).
paths./suppression/spam_reports.get.operationId: GET_suppression-spam_reports
paths./suppression/spam_reports.get.parameters.length: 5
paths./suppression/spam_reports.get.parameters[0].description: Refers start of the
  time range in unix timestamp when a spam report was created (inclusive).
paths./suppression/spam_reports.get.parameters[0].in: query
paths./suppression/spam_reports.get.parameters[0].name: start_time
paths./suppression/spam_reports.get.parameters[0].type: integer
paths./suppression/spam_reports.get.parameters[1].description: Refers end of the time
  range in unix timestamp when a spam report was created (inclusive).
paths./suppression/spam_reports.get.parameters[1].in: query
paths./suppression/spam_reports.get.parameters[1].name: end_time
paths./suppression/spam_reports.get.parameters[1].type: integer
paths./suppression/spam_reports.get.parameters[2].description: Limit the number of
  results to be displayed per page.
paths./suppression/spam_reports.get.parameters[2].in: query
paths./suppression/spam_reports.get.parameters[2].name: limit
paths./suppression/spam_reports.get.parameters[2].type: integer
paths./suppression/spam_reports.get.parameters[3].description: Paging offset. The
  point in the list to begin displaying results.
paths./suppression/spam_reports.get.parameters[3].in: query
paths./suppression/spam_reports.get.parameters[3].name: offset
paths./suppression/spam_reports.get.parameters[3].type: integer
paths./suppression/spam_reports.get.parameters[4].$ref: '#/parameters/trait:onBehalfOfSubuser:on-behalf-of'
paths./suppression/spam_reports.get.produces.length: 1
paths./suppression/spam_reports.get.produces[0]: application/json
paths./suppression/spam_reports.get.responses.200.description: ""
paths./suppression/spam_reports.get.responses.200.examples.application/json.length: 2
paths./suppression/spam_reports.get.responses.200.examples.application/json[0].created: 1.4436512e+09
paths./suppression/spam_reports.get.responses.200.examples.application/json[0].email: user1@example.com
paths./suppression/spam_reports.get.responses.200.examples.application/json[0].ip: 10.63.202.100
paths./suppression/spam_reports.get.responses.200.examples.application/json[1].created: 1.4436512e+09
paths./suppression/spam_reports.get.responses.200.examples.application/json[1].email: user2@example.com
paths./suppression/spam_reports.get.responses.200.examples.application/json[1].ip: 10.63.202.100
paths./suppression/spam_reports.get.responses.200.schema.items.properties.created.description: A
  Unix timestamp indicating when the spam report was made.
paths./suppression/spam_reports.get.responses.200.schema.items.properties.created.type: integer
paths./suppression/spam_reports.get.responses.200.schema.items.properties.email.description: The
  email address of the recipient who marked your message as spam.
paths./suppression/spam_reports.get.responses.200.schema.items.properties.email.type: string
paths./suppression/spam_reports.get.responses.200.schema.items.properties.ip.description: The
  IP address that the message was sent on.
paths./suppression/spam_reports.get.responses.200.schema.items.properties.ip.type: string
paths./suppression/spam_reports.get.responses.200.schema.items.required.length: 3
paths./suppression/spam_reports.get.responses.200.schema.items.required[0]: created
paths./suppression/spam_reports.get.responses.200.schema.items.required[1]: email
paths./suppression/spam_reports.get.responses.200.schema.items.required[2]: ip
paths./suppression/spam_reports.get.responses.200.schema.items.type: object
paths./suppression/spam_reports.get.responses.200.schema.type: array
paths./suppression/spam_reports.get.security.length: 1
paths./suppression/spam_reports.get.security[0].Authorization.length: 0
paths./suppression/spam_reports.get.summary: Retrieve all spam reports
paths./suppression/spam_reports.get.tags.length: 1
paths./suppression/spam_reports.get.tags[0]: Spam Reports API
paths./suppression/spam_reports/{email}.delete.description: |-
  **This endpoint allows you to delete a specific spam report.**

  [Spam reports](https://sendgrid.com/docs/Glossary/spam_reports.html) happen when a recipient indicates that they think your email is [spam](https://sendgrid.com/docs/Glossary/spam.html) and then their email provider reports this to SendGrid.

  For more information, please see our [User Guide](https://sendgrid.com/docs/User_Guide/Suppressions/spam_reports.html).
paths./suppression/spam_reports/{email}.delete.operationId: DELETE_suppression-spam_reports-email
paths./suppression/spam_reports/{email}.delete.parameters.length: 2
paths./suppression/spam_reports/{email}.delete.parameters[0].in: body
paths./suppression/spam_reports/{email}.delete.parameters[0].name: body
paths./suppression/spam_reports/{email}.delete.parameters[0].schema.type: "null"
paths./suppression/spam_reports/{email}.delete.parameters[1].$ref: '#/parameters/trait:onBehalfOfSubuser:on-behalf-of'
paths./suppression/spam_reports/{email}.delete.responses.204.description: ""
paths./suppression/spam_reports/{email}.delete.responses.204.schema.type: object
paths./suppression/spam_reports/{email}.delete.security.length: 1
paths./suppression/spam_reports/{email}.delete.security[0].Authorization.length: 0
paths./suppression/spam_reports/{email}.delete.summary: Delete a specific spam report
paths./suppression/spam_reports/{email}.delete.tags.length: 1
paths./suppression/spam_reports/{email}.delete.tags[0]: Spam Reports API
paths./suppression/spam_reports/{email}.get.description: |-
  **This endpoint allows you to retrieve a specific spam report.**

  [Spam reports](https://sendgrid.com/docs/Glossary/spam_reports.html) happen when a recipient indicates that they think your email is [spam](https://sendgrid.com/docs/Glossary/spam.html) and then their email provider reports this to SendGrid.

  For more information, please see our [User Guide](https://sendgrid.com/docs/User_Guide/Suppressions/spam_reports.html).
paths./suppression/spam_reports/{email}.get.operationId: GET_suppression-spam_reports-email
paths./suppression/spam_reports/{email}.get.parameters.length: 1
paths./suppression/spam_reports/{email}.get.parameters[0].$ref: '#/parameters/trait:onBehalfOfSubuser:on-behalf-of'
paths./suppression/spam_reports/{email}.get.produces.length: 1
paths./suppression/spam_reports/{email}.get.produces[0]: application/json
paths./suppression/spam_reports/{email}.get.responses.200.description: ""
paths./suppression/spam_reports/{email}.get.responses.200.examples.application/json.length: 1
paths./suppression/spam_reports/{email}.get.responses.200.examples.application/json[0].created: 1.4544332e+09
paths./suppression/spam_reports/{email}.get.responses.200.examples.application/json[0].email: test1@example.com
paths./suppression/spam_reports/{email}.get.responses.200.examples.application/json[0].ip: 10.89.32.5
paths./suppression/spam_reports/{email}.get.responses.200.schema.items.properties.created.description: A
  Unix timestamp that indicates when the recipient marked your message as spam.
paths./suppression/spam_reports/{email}.get.responses.200.schema.items.properties.created.type: integer
paths./suppression/spam_reports/{email}.get.responses.200.schema.items.properties.email.description: The
  email address of the recipient that marked your message as spam.
paths./suppression/spam_reports/{email}.get.responses.200.schema.items.properties.email.type: string
paths./suppression/spam_reports/{email}.get.responses.200.schema.items.properties.ip.description: The
  IP address that the message was sent from.
paths./suppression/spam_reports/{email}.get.responses.200.schema.items.properties.ip.type: string
paths./suppression/spam_reports/{email}.get.responses.200.schema.items.required.length: 3
paths./suppression/spam_reports/{email}.get.responses.200.schema.items.required[0]: created
paths./suppression/spam_reports/{email}.get.responses.200.schema.items.required[1]: email
paths./suppression/spam_reports/{email}.get.responses.200.schema.items.required[2]: ip
paths./suppression/spam_reports/{email}.get.responses.200.schema.items.type: object
paths./suppression/spam_reports/{email}.get.responses.200.schema.type: array
paths./suppression/spam_reports/{email}.get.security.length: 1
paths./suppression/spam_reports/{email}.get.security[0].Authorization.length: 0
paths./suppression/spam_reports/{email}.get.summary: Retrieve a specific spam report
paths./suppression/spam_reports/{email}.get.tags.length: 1
paths./suppression/spam_reports/{email}.get.tags[0]: Spam Reports API
paths./suppression/spam_reports/{email}.parameters.length: 1
paths./suppression/spam_reports/{email}.parameters[0].description: The email address
  of a specific spam report that you want to retrieve.
paths./suppression/spam_reports/{email}.parameters[0].in: path
paths./suppression/spam_reports/{email}.parameters[0].name: email
paths./suppression/spam_reports/{email}.parameters[0].required: true
paths./suppression/spam_reports/{email}.parameters[0].type: string
paths./suppression/unsubscribes.get.description: |-
  **This endpoint allows you to retrieve a list of all email address that are globally suppressed.**

  A global suppression (or global unsubscribe) is an email address of a recipient who does not want to receive any of your messages. A globally suppressed recipient will be removed from any email you send. For more information, please see our [User Guide](https://sendgrid.com/docs/User_Guide/Suppressions/global_unsubscribes.html).
paths./suppression/unsubscribes.get.operationId: GET_suppression-unsubscribes
paths./suppression/unsubscribes.get.parameters.length: 5
paths./suppression/unsubscribes.get.parameters[0].description: Refers start of the
  time range in unix timestamp when an unsubscribe email was created (inclusive).
paths./suppression/unsubscribes.get.parameters[0].in: query
paths./suppression/unsubscribes.get.parameters[0].name: start_time
paths./suppression/unsubscribes.get.parameters[0].type: integer
paths./suppression/unsubscribes.get.parameters[1].description: Refers end of the time
  range in unix timestamp when an unsubscribe email was created (inclusive).
paths./suppression/unsubscribes.get.parameters[1].in: query
paths./suppression/unsubscribes.get.parameters[1].name: end_time
paths./suppression/unsubscribes.get.parameters[1].type: integer
paths./suppression/unsubscribes.get.parameters[2].description: The number of results
  to display on each page.
paths./suppression/unsubscribes.get.parameters[2].in: query
paths./suppression/unsubscribes.get.parameters[2].name: limit
paths./suppression/unsubscribes.get.parameters[2].type: integer
paths./suppression/unsubscribes.get.parameters[3].description: The point in the list
  of results to begin displaying global suppressions.
paths./suppression/unsubscribes.get.parameters[3].in: query
paths./suppression/unsubscribes.get.parameters[3].name: offset
paths./suppression/unsubscribes.get.parameters[3].type: integer
paths./suppression/unsubscribes.get.parameters[4].$ref: '#/parameters/trait:onBehalfOfSubuser:on-behalf-of'
paths./suppression/unsubscribes.get.produces.length: 1
paths./suppression/unsubscribes.get.produces[0]: application/json
paths./suppression/unsubscribes.get.responses.200.description: ""
paths./suppression/unsubscribes.get.responses.200.examples.application/json.length: 2
paths./suppression/unsubscribes.get.responses.200.examples.application/json[0].created: 1.4436512e+09
paths./suppression/unsubscribes.get.responses.200.examples.application/json[0].email: user1@example.com
paths./suppression/unsubscribes.get.responses.200.examples.application/json[1].created: 1.4436512e+09
paths./suppression/unsubscribes.get.responses.200.examples.application/json[1].email: user2@example.com
paths./suppression/unsubscribes.get.responses.200.schema.items.properties.created.description: A
  Unix timestamp indicating when the recipient was added to the global suppression
  list.
paths./suppression/unsubscribes.get.responses.200.schema.items.properties.created.type: integer
paths./suppression/unsubscribes.get.responses.200.schema.items.properties.email.description: The
  email address of the recipient who is globally suppressed.
paths./suppression/unsubscribes.get.responses.200.schema.items.properties.email.type: string
paths./suppression/unsubscribes.get.responses.200.schema.items.required.length: 2
paths./suppression/unsubscribes.get.responses.200.schema.items.required[0]: created
paths./suppression/unsubscribes.get.responses.200.schema.items.required[1]: email
paths./suppression/unsubscribes.get.responses.200.schema.items.type: object
paths./suppression/unsubscribes.get.responses.200.schema.type: array
paths./suppression/unsubscribes.get.security.length: 1
paths./suppression/unsubscribes.get.security[0].Authorization.length: 0
paths./suppression/unsubscribes.get.summary: Retrieve all global suppressions
paths./suppression/unsubscribes.get.tags.length: 1
paths./suppression/unsubscribes.get.tags[0]: Suppressions - Global Suppressions
paths./teammates.get.description: |-
  This endpoint allows you to retrieve a list of all current teammates.

  **Note:** The Response Header will include pagination info. For example:

  link: ```<https://api.sendgrid.com/v3/teammates?limit=10&offset=0>; rel="first"; title="1", <https://api.sendgrid.com/v3/teammates?limit=10&offset=10>; rel="last"; title="2", <https://api.sendgrid.com/v3/teammates?limit=10&offset=0>; rel="prev"; title="1"```
paths./teammates.get.operationId: GET_v3-teammates
paths./teammates.get.parameters.length: 2
paths./teammates.get.parameters[0].default: 500
paths./teammates.get.parameters[0].description: Number of items to return
paths./teammates.get.parameters[0].in: query
paths./teammates.get.parameters[0].maximum: 500
paths./teammates.get.parameters[0].minimum: 0
paths./teammates.get.parameters[0].name: limit
paths./teammates.get.parameters[0].type: integer
paths./teammates.get.parameters[1].default: 0
paths./teammates.get.parameters[1].description: Paging offset
paths./teammates.get.parameters[1].in: query
paths./teammates.get.parameters[1].minimum: 0
paths./teammates.get.parameters[1].name: offset
paths./teammates.get.parameters[1].type: integer
paths./teammates.get.responses.200.description: ""
paths./teammates.get.responses.200.schema.properties.result.items.properties.address.description: (optional)
  Teammate's address
paths./teammates.get.responses.200.schema.properties.result.items.properties.address.type: string
paths./teammates.get.responses.200.schema.properties.result.items.properties.address2.description: (optional)
  Teammate's address
paths./teammates.get.responses.200.schema.properties.result.items.properties.address2.type: string
paths./teammates.get.responses.200.schema.properties.result.items.properties.city.description: (optional)
  Teammate's city
paths./teammates.get.responses.200.schema.properties.result.items.properties.city.type: string
paths./teammates.get.responses.200.schema.properties.result.items.properties.country.description: (optional)
  Teammate's country
paths./teammates.get.responses.200.schema.properties.result.items.properties.country.type: string
paths./teammates.get.responses.200.schema.properties.result.items.properties.email.description: Teammate's
  email
paths./teammates.get.responses.200.schema.properties.result.items.properties.email.type: string
paths./teammates.get.responses.200.schema.properties.result.items.properties.first_name.description: Teammate's
  first name
paths./teammates.get.responses.200.schema.properties.result.items.properties.first_name.type: string
paths./teammates.get.responses.200.schema.properties.result.items.properties.is_admin.description: Set
  to true if teammate has admin privileges
paths./teammates.get.responses.200.schema.properties.result.items.properties.is_admin.type: boolean
paths./teammates.get.responses.200.schema.properties.result.items.properties.last_name.description: Teammate's
  last name
paths./teammates.get.responses.200.schema.properties.result.items.properties.last_name.type: string
paths./teammates.get.responses.200.schema.properties.result.items.properties.phone.description: (optional)
  Teammate's phone number
paths./teammates.get.responses.200.schema.properties.result.items.properties.phone.type: string
paths./teammates.get.responses.200.schema.properties.result.items.properties.state.description: (optional)
  Teammate's state
paths./teammates.get.responses.200.schema.properties.result.items.properties.state.type: string
paths./teammates.get.responses.200.schema.properties.result.items.properties.user_type.description: 'Indicate
  the type of user: owner user, teammate admin user, or normal teammate'
paths./teammates.get.responses.200.schema.properties.result.items.properties.user_type.enum.length: 3
paths./teammates.get.responses.200.schema.properties.result.items.properties.user_type.enum[0]: admin
paths./teammates.get.responses.200.schema.properties.result.items.properties.user_type.enum[1]: owner
paths./teammates.get.responses.200.schema.properties.result.items.properties.user_type.enum[2]: teammate
paths./teammates.get.responses.200.schema.properties.result.items.properties.user_type.type: string
paths./teammates.get.responses.200.schema.properties.result.items.properties.username.description: Teammate's
  username
paths./teammates.get.responses.200.schema.properties.result.items.properties.username.type: string
paths./teammates.get.responses.200.schema.properties.result.items.properties.website.description: (optional)
  Teammate's website
paths./teammates.get.responses.200.schema.properties.result.items.properties.website.type: string
paths./teammates.get.responses.200.schema.properties.result.items.properties.zip.description: (optional)
  Teammate's zip
paths./teammates.get.responses.200.schema.properties.result.items.properties.zip.type: string
paths./teammates.get.responses.200.schema.properties.result.items.type: object
paths./teammates.get.responses.200.schema.properties.result.type: array
paths./teammates.get.responses.200.schema.type: object
paths./teammates.get.security.length: 1
paths./teammates.get.security[0].Authorization.length: 0
paths./teammates.get.summary: Retrieve all teammates
paths./teammates.get.tags.length: 1
paths./teammates.get.tags[0]: Teammates
paths./teammates.post.consumes.length: 1
paths./teammates.post.consumes[0]: application/json
paths./teammates.post.description: |-
  This endpoint allows you to send a teammate invitation via email with a predefined set of scopes, or permissions.

  **Note:** A teammate invite will expire after 7 days, but you may resend the invite at any time to reset the expiration date.

  Essentials, [Legacy Lite](https://sendgrid.com/docs/Classroom/Basics/Billing/legacy_lite_plan.html), and Free Trial users may create up to one teammate per account. There are no limits for how many teammates a Pro or higher account may create.
paths./teammates.post.operationId: POST_v3-teammates
paths./teammates.post.parameters.length: 1
paths./teammates.post.parameters[0].in: body
paths./teammates.post.parameters[0].name: body
paths./teammates.post.parameters[0].schema.example.email: teammate1@example.com
paths./teammates.post.parameters[0].schema.example.is_admin: false
paths./teammates.post.parameters[0].schema.example.scopes.length: 2
paths./teammates.post.parameters[0].schema.example.scopes[0]: user.profile.read
paths./teammates.post.parameters[0].schema.example.scopes[1]: user.profile.update
paths./teammates.post.parameters[0].schema.properties.email.description: New teammate's
  email
paths./teammates.post.parameters[0].schema.properties.email.maxLength: 255
paths./teammates.post.parameters[0].schema.properties.email.minLength: 5
paths./teammates.post.parameters[0].schema.properties.email.pattern: ^.*@.*\..*
paths./teammates.post.parameters[0].schema.properties.email.type: string
paths./teammates.post.parameters[0].schema.properties.is_admin.default: false
paths./teammates.post.parameters[0].schema.properties.is_admin.description: Set to
  true if teammate should be an admin user
paths./teammates.post.parameters[0].schema.properties.is_admin.type: boolean
paths./teammates.post.parameters[0].schema.properties.scopes.description: Set to specify
  list of scopes that teammate should have. Should be empty if teammate is an admin.
paths./teammates.post.parameters[0].schema.properties.scopes.items.type: string
paths./teammates.post.parameters[0].schema.properties.scopes.type: array
paths./teammates.post.parameters[0].schema.required.length: 3
paths./teammates.post.parameters[0].schema.required[0]: email
paths./teammates.post.parameters[0].schema.required[1]: scopes
paths./teammates.post.parameters[0].schema.required[2]: is_admin
paths./teammates.post.parameters[0].schema.type: object
paths./teammates.post.produces.length: 1
paths./teammates.post.produces[0]: application/json
paths./teammates.post.responses.201.description: ""
paths./teammates.post.responses.201.examples.application/json.email: teammate1@example.com
paths./teammates.post.responses.201.examples.application/json.is_admin: false
paths./teammates.post.responses.201.examples.application/json.scopes.length: 2
paths./teammates.post.responses.201.examples.application/json.scopes[0]: user.profile.read
paths./teammates.post.responses.201.examples.application/json.scopes[1]: user.profile.update
paths./teammates.post.responses.201.schema.properties.email.description: Teammate's
  email address
paths./teammates.post.responses.201.schema.properties.email.type: string
paths./teammates.post.responses.201.schema.properties.is_admin.description: Set to
  true if teammate should have admin privileges
paths./teammates.post.responses.201.schema.properties.is_admin.type: boolean
paths./teammates.post.responses.201.schema.properties.scopes.description: Initial
  set of permissions to give to teammate if they accept the invite
paths./teammates.post.responses.201.schema.properties.scopes.type: array
paths./teammates.post.responses.201.schema.properties.token.description: Token to
  identify invite
paths./teammates.post.responses.201.schema.properties.token.type: string
paths./teammates.post.responses.201.schema.type: object
paths./teammates.post.responses.400.description: ""
paths./teammates.post.responses.400.schema.properties.errors.items.properties.field.type: string
paths./teammates.post.responses.400.schema.properties.errors.items.properties.message.type: string
paths./teammates.post.responses.400.schema.properties.errors.items.type: object
paths./teammates.post.responses.400.schema.properties.errors.type: array
paths./teammates.post.responses.400.schema.type: object
paths./teammates.post.security.length: 1
paths./teammates.post.security[0].Authorization.length: 0
paths./teammates.post.summary: Invite teammate
paths./teammates.post.tags.length: 1
paths./teammates.post.tags[0]: Teammates
paths./teammates/{username}.delete.consumes.length: 1
paths./teammates/{username}.delete.consumes[0]: application/json
paths./teammates/{username}.delete.description: |-
  This endpoint allows you to delete a teammate.

  **Only the parent user or an admin teammate can delete another teammate.**
paths./teammates/{username}.delete.operationId: DELETE_v3-teammates-username
paths./teammates/{username}.delete.produces.length: 1
paths./teammates/{username}.delete.produces[0]: application/json
paths./teammates/{username}.delete.responses.204.description: ""
paths./teammates/{username}.delete.responses.204.schema.properties.errors.items.properties.field.type: string
paths./teammates/{username}.delete.responses.204.schema.properties.errors.items.properties.message.type: string
paths./teammates/{username}.delete.responses.204.schema.properties.errors.items.type: object
paths./teammates/{username}.delete.responses.204.schema.properties.errors.type: array
paths./teammates/{username}.delete.responses.204.schema.type: object
paths./teammates/{username}.delete.responses.404.description: ""
paths./teammates/{username}.delete.responses.404.examples.application/json.errors.length: 1
paths./teammates/{username}.delete.responses.404.examples.application/json.errors[0].field: username
paths./teammates/{username}.delete.responses.404.examples.application/json.errors[0].message: username
  not found
paths./teammates/{username}.delete.responses.404.schema.properties.errors.items.properties.field.type: string
paths./teammates/{username}.delete.responses.404.schema.properties.errors.items.properties.message.type: string
paths./teammates/{username}.delete.responses.404.schema.properties.errors.items.type: object
paths./teammates/{username}.delete.responses.404.schema.properties.errors.type: array
paths./teammates/{username}.delete.responses.404.schema.type: object
paths./teammates/{username}.delete.security.length: 1
paths./teammates/{username}.delete.security[0].Authorization.length: 0
paths./teammates/{username}.delete.summary: Delete teammate
paths./teammates/{username}.delete.tags.length: 1
paths./teammates/{username}.delete.tags[0]: Teammates
paths./teammates/{username}.get.description: This endpoint allows you to retrieve
  a specific teammate by username.
paths./teammates/{username}.get.operationId: GET_v3-teammates-username
paths./teammates/{username}.get.produces.length: 1
paths./teammates/{username}.get.produces[0]: application/json
paths./teammates/{username}.get.responses.200.description: ""
paths./teammates/{username}.get.responses.200.examples.application/json.address: 123
  Acme St
paths./teammates/{username}.get.responses.200.examples.application/json.address2: ""
paths./teammates/{username}.get.responses.200.examples.application/json.city: City
paths./teammates/{username}.get.responses.200.examples.application/json.company: ACME
  Inc.
paths./teammates/{username}.get.responses.200.examples.application/json.country: USA
paths./teammates/{username}.get.responses.200.examples.application/json.email: teammate1@example.com
paths./teammates/{username}.get.responses.200.examples.application/json.first_name: Jane
paths./teammates/{username}.get.responses.200.examples.application/json.is_admin: true
paths./teammates/{username}.get.responses.200.examples.application/json.last_name: Doe
paths./teammates/{username}.get.responses.200.examples.application/json.phone: 123-345-3453
paths./teammates/{username}.get.responses.200.examples.application/json.scopes.length: 3
paths./teammates/{username}.get.responses.200.examples.application/json.scopes[0]: user.profile.read
paths./teammates/{username}.get.responses.200.examples.application/json.scopes[1]: user.profile.update
paths./teammates/{username}.get.responses.200.examples.application/json.scopes[2]: '...'
paths./teammates/{username}.get.responses.200.examples.application/json.state: CA
paths./teammates/{username}.get.responses.200.examples.application/json.user_type: admin
paths./teammates/{username}.get.responses.200.examples.application/json.username: teammate1
paths./teammates/{username}.get.responses.200.examples.application/json.website: www.example.com
paths./teammates/{username}.get.responses.200.examples.application/json.zip: "12345"
paths./teammates/{username}.get.responses.200.schema.properties.address.description: (optional)
  Teammate's address
paths./teammates/{username}.get.responses.200.schema.properties.address.type: string
paths./teammates/{username}.get.responses.200.schema.properties.address2.description: (optional)
  Teammate's address
paths./teammates/{username}.get.responses.200.schema.properties.address2.type: string
paths./teammates/{username}.get.responses.200.schema.properties.city.description: (optional)
  Teammate's city
paths./teammates/{username}.get.responses.200.schema.properties.city.type: string
paths./teammates/{username}.get.responses.200.schema.properties.country.description: (optional)
  Teammate's country
paths./teammates/{username}.get.responses.200.schema.properties.country.type: string
paths./teammates/{username}.get.responses.200.schema.properties.email.description: Teammate's
  email
paths./teammates/{username}.get.responses.200.schema.properties.email.type: string
paths./teammates/{username}.get.responses.200.schema.properties.first_name.description: Teammate's
  first name
paths./teammates/{username}.get.responses.200.schema.properties.first_name.type: string
paths./teammates/{username}.get.responses.200.schema.properties.is_admin.description: Set
  to true if teammate has admin privileges
paths./teammates/{username}.get.responses.200.schema.properties.is_admin.type: boolean
paths./teammates/{username}.get.responses.200.schema.properties.last_name.description: Teammate's
  last name
paths./teammates/{username}.get.responses.200.schema.properties.last_name.type: string
paths./teammates/{username}.get.responses.200.schema.properties.phone.description: (optional)
  Teammate's phone number
paths./teammates/{username}.get.responses.200.schema.properties.phone.type: string
paths./teammates/{username}.get.responses.200.schema.properties.scopes.description: Scopes
  associated to teammate
paths./teammates/{username}.get.responses.200.schema.properties.scopes.type: array
paths./teammates/{username}.get.responses.200.schema.properties.state.description: (optional)
  Teammate's state
paths./teammates/{username}.get.responses.200.schema.properties.state.type: string
paths./teammates/{username}.get.responses.200.schema.properties.user_type.description: 'Indicate
  the type of user: account owner, teammate admin user, or normal teammate'
paths./teammates/{username}.get.responses.200.schema.properties.user_type.enum.length: 3
paths./teammates/{username}.get.responses.200.schema.properties.user_type.enum[0]: admin
paths./teammates/{username}.get.responses.200.schema.properties.user_type.enum[1]: owner
paths./teammates/{username}.get.responses.200.schema.properties.user_type.enum[2]: teammate
paths./teammates/{username}.get.responses.200.schema.properties.user_type.type: string
paths./teammates/{username}.get.responses.200.schema.properties.username.description: Teammate's
  username
paths./teammates/{username}.get.responses.200.schema.properties.username.type: string
paths./teammates/{username}.get.responses.200.schema.properties.website.description: (optional)
  Teammate's website
paths./teammates/{username}.get.responses.200.schema.properties.website.type: string
paths./teammates/{username}.get.responses.200.schema.properties.zip.description: (optional)
  Teammate's zip
paths./teammates/{username}.get.responses.200.schema.properties.zip.type: string
paths./teammates/{username}.get.responses.200.schema.type: object
paths./teammates/{username}.get.security.length: 1
paths./teammates/{username}.get.security[0].Authorization.length: 0
paths./teammates/{username}.get.summary: Retrieve specific teammate
paths./teammates/{username}.get.tags.length: 1
paths./teammates/{username}.get.tags[0]: Teammates
paths./teammates/{username}.parameters.length: 1
paths./teammates/{username}.parameters[0].description: The username of the teammate
  that you want to retrieve.
paths./teammates/{username}.parameters[0].in: path
paths./teammates/{username}.parameters[0].name: username
paths./teammates/{username}.parameters[0].required: true
paths./teammates/{username}.parameters[0].type: string
paths./teammates/{username}.patch.consumes.length: 1
paths./teammates/{username}.patch.consumes[0]: application/json
paths./teammates/{username}.patch.description: |-
  This endpoint allows you to update a teammate’s permissions.

  To turn a teammate into an admin, the request body should contain an `is_admin` set to `true`. Otherwise, set `is_admin` to `false` and pass in all the scopes that a teammate should have.

  **Only the parent user or other admin teammates can update another teammate’s permissions.**

  **Admin users can only update permissions.**
paths./teammates/{username}.patch.operationId: PATCH_v3-teammates-username
paths./teammates/{username}.patch.parameters.length: 1
paths./teammates/{username}.patch.parameters[0].in: body
paths./teammates/{username}.patch.parameters[0].name: body
paths./teammates/{username}.patch.parameters[0].schema.example.is_admin: false
paths./teammates/{username}.patch.parameters[0].schema.example.scopes.length: 2
paths./teammates/{username}.patch.parameters[0].schema.example.scopes[0]: user.profile.read
paths./teammates/{username}.patch.parameters[0].schema.example.scopes[1]: user.profile.edit
paths./teammates/{username}.patch.parameters[0].schema.properties.is_admin.description: Set
  to True if this teammate should be promoted to an admin user. If True, scopes should
  be an empty array.
paths./teammates/{username}.patch.parameters[0].schema.properties.is_admin.type: boolean
paths./teammates/{username}.patch.parameters[0].schema.properties.scopes.description: Provide
  list of scopes that should be given to teammate. If specifying list of scopes, is_admin
  should be set to False.
paths./teammates/{username}.patch.parameters[0].schema.properties.scopes.items.type: string
paths./teammates/{username}.patch.parameters[0].schema.properties.scopes.type: array
paths./teammates/{username}.patch.parameters[0].schema.required.length: 2
paths./teammates/{username}.patch.parameters[0].schema.required[0]: scopes
paths./teammates/{username}.patch.parameters[0].schema.required[1]: is_admin
paths./teammates/{username}.patch.parameters[0].schema.type: object
paths./teammates/{username}.patch.produces.length: 1
paths./teammates/{username}.patch.produces[0]: application/json
paths./teammates/{username}.patch.responses.200.description: ""
paths./teammates/{username}.patch.responses.200.examples.application/json.address: 123
  Acme St
paths./teammates/{username}.patch.responses.200.examples.application/json.address2: ""
paths./teammates/{username}.patch.responses.200.examples.application/json.city: City
paths./teammates/{username}.patch.responses.200.examples.application/json.company: ACME
  Inc.
paths./teammates/{username}.patch.responses.200.examples.application/json.country: USA
paths./teammates/{username}.patch.responses.200.examples.application/json.email: teammate1@example.com
paths./teammates/{username}.patch.responses.200.examples.application/json.first_name: Jane
paths./teammates/{username}.patch.responses.200.examples.application/json.is_admin: false
paths./teammates/{username}.patch.responses.200.examples.application/json.last_name: Doe
paths./teammates/{username}.patch.responses.200.examples.application/json.phone: 123-345-3453
paths./teammates/{username}.patch.responses.200.examples.application/json.scopes.length: 2
paths./teammates/{username}.patch.responses.200.examples.application/json.scopes[0]: user.profile.read
paths./teammates/{username}.patch.responses.200.examples.application/json.scopes[1]: user.profile.edit
paths./teammates/{username}.patch.responses.200.examples.application/json.state: CA
paths./teammates/{username}.patch.responses.200.examples.application/json.user_type: teammate
paths./teammates/{username}.patch.responses.200.examples.application/json.username: teammate1
paths./teammates/{username}.patch.responses.200.examples.application/json.website: www.example.com
paths./teammates/{username}.patch.responses.200.examples.application/json.zip: "12345"
paths./teammates/{username}.patch.responses.200.schema.properties.address.description: (optional)
  Teammate's address
paths./teammates/{username}.patch.responses.200.schema.properties.address.type: string
paths./teammates/{username}.patch.responses.200.schema.properties.address2.description: (optional)
  Teammate's address
paths./teammates/{username}.patch.responses.200.schema.properties.address2.type: string
paths./teammates/{username}.patch.responses.200.schema.properties.city.description: (optional)
  Teammate's city
paths./teammates/{username}.patch.responses.200.schema.properties.city.type: string
paths./teammates/{username}.patch.responses.200.schema.properties.country.description: (optional)
  Teammate's country
paths./teammates/{username}.patch.responses.200.schema.properties.country.type: string
paths./teammates/{username}.patch.responses.200.schema.properties.email.description: Teammate's
  email address
paths./teammates/{username}.patch.responses.200.schema.properties.email.type: string
paths./teammates/{username}.patch.responses.200.schema.properties.first_name.description: Teammate's
  first name
paths./teammates/{username}.patch.responses.200.schema.properties.first_name.type: string
paths./teammates/{username}.patch.responses.200.schema.properties.is_admin.description: Set
  to true if teammate has admin priveleges
paths./teammates/{username}.patch.responses.200.schema.properties.is_admin.type: boolean
paths./teammates/{username}.patch.responses.200.schema.properties.last_name.description: Teammate's
  last name
paths./teammates/{username}.patch.responses.200.schema.properties.last_name.type: string
paths./teammates/{username}.patch.responses.200.schema.properties.phone.description: (optional)
  Teammate's phone number
paths./teammates/{username}.patch.responses.200.schema.properties.phone.type: string
paths./teammates/{username}.patch.responses.200.schema.properties.scopes.description: Scopes
  given to teammate
paths./teammates/{username}.patch.responses.200.schema.properties.scopes.items.type: string
paths./teammates/{username}.patch.responses.200.schema.properties.scopes.type: array
paths./teammates/{username}.patch.responses.200.schema.properties.state.description: (optional)
  Teammate's state
paths./teammates/{username}.patch.responses.200.schema.properties.state.type: string
paths./teammates/{username}.patch.responses.200.schema.properties.user_type.description: 'Indicate
  the type of user: owner user, teammate admin user, or normal teammate'
paths./teammates/{username}.patch.responses.200.schema.properties.user_type.enum.length: 3
paths./teammates/{username}.patch.responses.200.schema.properties.user_type.enum[0]: admin
paths./teammates/{username}.patch.responses.200.schema.properties.user_type.enum[1]: owner
paths./teammates/{username}.patch.responses.200.schema.properties.user_type.enum[2]: teammate
paths./teammates/{username}.patch.responses.200.schema.properties.user_type.type: string
paths./teammates/{username}.patch.responses.200.schema.properties.username.description: Teammate's
  username
paths./teammates/{username}.patch.responses.200.schema.properties.username.type: string
paths./teammates/{username}.patch.responses.200.schema.properties.website.description: (optional)
  Teammate's website
paths./teammates/{username}.patch.responses.200.schema.properties.website.type: string
paths./teammates/{username}.patch.responses.200.schema.properties.zip.description: (optional)
  Teammate's zip
paths./teammates/{username}.patch.responses.200.schema.properties.zip.type: string
paths./teammates/{username}.patch.responses.200.schema.type: object
paths./teammates/{username}.patch.responses.400.description: ""
paths./teammates/{username}.patch.responses.400.examples.application/json.errors.length: 1
paths./teammates/{username}.patch.responses.400.examples.application/json.errors[0].field: scopes
paths./teammates/{username}.patch.responses.400.examples.application/json.errors[0].message: one
  or more of given scopes are invalid
paths./teammates/{username}.patch.responses.400.schema.properties.errors.items.properties.field.type: string
paths./teammates/{username}.patch.responses.400.schema.properties.errors.items.properties.message.type: string
paths./teammates/{username}.patch.responses.400.schema.properties.errors.items.type: object
paths./teammates/{username}.patch.responses.400.schema.properties.errors.type: array
paths./teammates/{username}.patch.responses.400.schema.type: object
paths./teammates/{username}.patch.responses.404.description: ""
paths./teammates/{username}.patch.responses.404.examples.application/json.errors.length: 1
paths./teammates/{username}.patch.responses.404.examples.application/json.errors[0].field: username
paths./teammates/{username}.patch.responses.404.examples.application/json.errors[0].message: username
  not found
paths./teammates/{username}.patch.responses.404.schema.properties.errors.items.properties.field.type: string
paths./teammates/{username}.patch.responses.404.schema.properties.errors.items.properties.message.type: string
paths./teammates/{username}.patch.responses.404.schema.properties.errors.items.type: object
paths./teammates/{username}.patch.responses.404.schema.properties.errors.type: array
paths./teammates/{username}.patch.responses.404.schema.type: object
paths./teammates/{username}.patch.security.length: 1
paths./teammates/{username}.patch.security[0].Authorization.length: 0
paths./teammates/{username}.patch.summary: Update teammate's permissions
paths./teammates/{username}.patch.tags.length: 1
paths./teammates/{username}.patch.tags[0]: Teammates
paths./teammates/pending.get.consumes.length: 1
paths./teammates/pending.get.consumes[0]: application/json
paths./teammates/pending.get.description: |-
  This endpoint allows you to retrieve a list of all pending teammate invitations.

  **Note:** Each teammate invitation is valid for 7 days. Users may resend the invite to refresh the expiration date.
paths./teammates/pending.get.operationId: GET_v3-teammates-pending
paths./teammates/pending.get.produces.length: 1
paths./teammates/pending.get.produces[0]: application/json
paths./teammates/pending.get.responses.200.description: ""
paths./teammates/pending.get.responses.200.examples.application/json.result.length: 2
paths./teammates/pending.get.responses.200.examples.application/json.result[0].email: user1@example.com
paths./teammates/pending.get.responses.200.examples.application/json.result[0].expiration_date: 1.4564243e+09
paths./teammates/pending.get.responses.200.examples.application/json.result[0].is_admin: false
paths./teammates/pending.get.responses.200.examples.application/json.result[0].pending_id: abcd123abc
paths./teammates/pending.get.responses.200.examples.application/json.result[0].scopes.length: 2
paths./teammates/pending.get.responses.200.examples.application/json.result[0].scopes[0]: user.profile.read
paths./teammates/pending.get.responses.200.examples.application/json.result[0].scopes[1]: user.profile.edit
paths./teammates/pending.get.responses.200.examples.application/json.result[1].email: user2@example.com
paths./teammates/pending.get.responses.200.examples.application/json.result[1].expiration_date: 1.4564243e+09
paths./teammates/pending.get.responses.200.examples.application/json.result[1].is_admin: true
paths./teammates/pending.get.responses.200.examples.application/json.result[1].pending_id: bcde234bcd
paths./teammates/pending.get.responses.200.examples.application/json.result[1].scopes.length: 0
paths./teammates/pending.get.responses.200.schema.properties.result.items.properties.email.description: Email
  address teammate invite will be sent to
paths./teammates/pending.get.responses.200.schema.properties.result.items.properties.email.type: string
paths./teammates/pending.get.responses.200.schema.properties.result.items.properties.expiration_date.description: timestamp
  indicates when invite will expire. Expiration is 7 days after invite creation
paths./teammates/pending.get.responses.200.schema.properties.result.items.properties.expiration_date.type: integer
paths./teammates/pending.get.responses.200.schema.properties.result.items.properties.is_admin.description: Set
  to true to indicate teammate should have the same set of permissions as parent user
paths./teammates/pending.get.responses.200.schema.properties.result.items.properties.is_admin.type: boolean
paths./teammates/pending.get.responses.200.schema.properties.result.items.properties.scopes.description: List
  of permissions to give teammate if they accept
paths./teammates/pending.get.responses.200.schema.properties.result.items.properties.scopes.items.type: string
paths./teammates/pending.get.responses.200.schema.properties.result.items.properties.scopes.type: array
paths./teammates/pending.get.responses.200.schema.properties.result.items.properties.token.description: Invitation
  token used to identify user
paths./teammates/pending.get.responses.200.schema.properties.result.items.properties.token.type: string
paths./teammates/pending.get.responses.200.schema.properties.result.items.type: object
paths./teammates/pending.get.responses.200.schema.properties.result.type: array
paths./teammates/pending.get.responses.200.schema.type: object
paths./teammates/pending.get.security.length: 1
paths./teammates/pending.get.security[0].Authorization.length: 0
paths./teammates/pending.get.summary: Retrieve all pending teammates
paths./teammates/pending.get.tags.length: 1
paths./teammates/pending.get.tags[0]: Teammates
paths./teammates/pending/{token}.delete.consumes.length: 1
paths./teammates/pending/{token}.delete.consumes[0]: application/json
paths./teammates/pending/{token}.delete.description: This endpoint allows you to delete
  a pending teammate invite.
paths./teammates/pending/{token}.delete.operationId: DELETE_v3-teammates-pending-token
paths./teammates/pending/{token}.delete.produces.length: 1
paths./teammates/pending/{token}.delete.produces[0]: application/json
paths./teammates/pending/{token}.delete.responses.204.description: ""
paths./teammates/pending/{token}.delete.responses.404.description: ""
paths./teammates/pending/{token}.delete.responses.404.schema.properties.errors.items.properties.field.type: string
paths./teammates/pending/{token}.delete.responses.404.schema.properties.errors.items.properties.message.type: string
paths./teammates/pending/{token}.delete.responses.404.schema.properties.errors.items.type: object
paths./teammates/pending/{token}.delete.responses.404.schema.properties.errors.type: array
paths./teammates/pending/{token}.delete.responses.404.schema.type: object
paths./teammates/pending/{token}.delete.security.length: 1
paths./teammates/pending/{token}.delete.security[0].Authorization.length: 0
paths./teammates/pending/{token}.delete.summary: Delete pending teammate
paths./teammates/pending/{token}.delete.tags.length: 1
paths./teammates/pending/{token}.delete.tags[0]: Teammates
paths./teammates/pending/{token}.parameters.length: 1
paths./teammates/pending/{token}.parameters[0].description: The token for the invite
  you want to delete.
paths./teammates/pending/{token}.parameters[0].in: path
paths./teammates/pending/{token}.parameters[0].name: token
paths./teammates/pending/{token}.parameters[0].required: true
paths./teammates/pending/{token}.parameters[0].type: string
paths./teammates/pending/{token}/resend.parameters.length: 1
paths./teammates/pending/{token}/resend.parameters[0].description: The token for the
  invite that you want to resend.
paths./teammates/pending/{token}/resend.parameters[0].in: path
paths./teammates/pending/{token}/resend.parameters[0].name: token
paths./teammates/pending/{token}/resend.parameters[0].required: true
paths./teammates/pending/{token}/resend.parameters[0].type: string
paths./teammates/pending/{token}/resend.post.consumes.length: 1
paths./teammates/pending/{token}/resend.post.consumes[0]: application/json
paths./teammates/pending/{token}/resend.post.description: |-
  This endpoint allows you to resend a teammate invite.

  **Note:** Teammate invitations will expire after 7 days. Resending an invite will reset the expiration date.
paths./teammates/pending/{token}/resend.post.operationId: POST_v3-teammates-pending-token-resend
paths./teammates/pending/{token}/resend.post.produces.length: 1
paths./teammates/pending/{token}/resend.post.produces[0]: application/json
paths./teammates/pending/{token}/resend.post.responses.200.description: ""
paths./teammates/pending/{token}/resend.post.responses.200.examples.application/json.email: teammate1@example.com
paths./teammates/pending/{token}/resend.post.responses.200.examples.application/json.is_admin: false
paths./teammates/pending/{token}/resend.post.responses.200.examples.application/json.pending_id: abc123abc
paths./teammates/pending/{token}/resend.post.responses.200.examples.application/json.scopes.length: 2
paths./teammates/pending/{token}/resend.post.responses.200.examples.application/json.scopes[0]: user.profile.read
paths./teammates/pending/{token}/resend.post.responses.200.examples.application/json.scopes[1]: user.profile.update
paths./teammates/pending/{token}/resend.post.responses.200.schema.properties.email.description: Teammate's
  email address
paths./teammates/pending/{token}/resend.post.responses.200.schema.properties.email.type: string
paths./teammates/pending/{token}/resend.post.responses.200.schema.properties.is_admin.description: Set
  to true if teammate should have admin privileges
paths./teammates/pending/{token}/resend.post.responses.200.schema.properties.is_admin.type: boolean
paths./teammates/pending/{token}/resend.post.responses.200.schema.properties.scopes.description: Initial
  set of permissions to give to teammate if they accept the invite
paths./teammates/pending/{token}/resend.post.responses.200.schema.properties.scopes.items.type: string
paths./teammates/pending/{token}/resend.post.responses.200.schema.properties.scopes.type: array
paths./teammates/pending/{token}/resend.post.responses.200.schema.properties.token.description: ID
  to identify invite
paths./teammates/pending/{token}/resend.post.responses.200.schema.properties.token.type: string
paths./teammates/pending/{token}/resend.post.responses.200.schema.type: object
paths./teammates/pending/{token}/resend.post.responses.404.description: ""
paths./teammates/pending/{token}/resend.post.responses.404.examples.application/json.errors.length: 1
paths./teammates/pending/{token}/resend.post.responses.404.examples.application/json.errors[0].field: pending_key
paths./teammates/pending/{token}/resend.post.responses.404.examples.application/json.errors[0].message: invalid
  pending key
paths./teammates/pending/{token}/resend.post.responses.404.schema.properties.errors.items.properties.field.type: string
paths./teammates/pending/{token}/resend.post.responses.404.schema.properties.errors.items.properties.message.type: string
paths./teammates/pending/{token}/resend.post.responses.404.schema.properties.errors.items.type: object
paths./teammates/pending/{token}/resend.post.responses.404.schema.properties.errors.type: array
paths./teammates/pending/{token}/resend.post.responses.404.schema.type: object
paths./teammates/pending/{token}/resend.post.security.length: 1
paths./teammates/pending/{token}/resend.post.security[0].Authorization.length: 0
paths./teammates/pending/{token}/resend.post.summary: Resend teammate invite
paths./teammates/pending/{token}/resend.post.tags.length: 1
paths./teammates/pending/{token}/resend.post.tags[0]: Teammates
paths./templates.get.description: |-
  **This endpoint allows you to retrieve all transactional templates.**

  Each user can create up to 300 different transactional templates. Transactional templates are specific to accounts and subusers. Templates created on a parent account will not be accessible from the subuser accounts.

  Transactional templates are templates created specifically for transactional email and are not to be confused with [Marketing Campaigns templates](https://sendgrid.com/docs/User_Guide/Marketing_Campaigns/templates.html). For more information about transactional templates, please see our [User Guide](https://sendgrid.com/docs/User_Guide/Transactional_Templates/index.html).
paths./templates.get.operationId: GET_templates
paths./templates.get.parameters.length: 1
paths./templates.get.parameters[0].$ref: '#/parameters/trait:onBehalfOfSubuser:on-behalf-of'
paths./templates.get.produces.length: 1
paths./templates.get.produces[0]: application/json
paths./templates.get.responses.200.description: ""
paths./templates.get.responses.200.schema.items.$ref: '#/definitions/transactional_template'
paths./templates.get.responses.200.schema.type: array
paths./templates.get.security.length: 1
paths./templates.get.security[0].Authorization.length: 0
paths./templates.get.summary: Retrieve all transactional templates.
paths./templates.get.tags.length: 1
paths./templates.get.tags[0]: Transactional Templates
paths./templates.post.consumes.length: 1
paths./templates.post.consumes[0]: application/json
paths./templates.post.description: |-
  **This endpoint allows you to create a transactional template.**

  Each user can create up to 300 different transactional templates. Transactional templates are specific to accounts and subusers. Templates created on a parent account will not be accessible from the subuser accounts.

  Transactional templates are templates created specifically for transactional email and are not to be confused with [Marketing Campaigns templates](https://sendgrid.com/docs/User_Guide/Marketing_Campaigns/templates.html). For more information about transactional templates, please see our [User Guide](https://sendgrid.com/docs/User_Guide/Transactional_Templates/index.html).
paths./templates.post.operationId: POST_templates
paths./templates.post.parameters.length: 2
paths./templates.post.parameters[0].in: body
paths./templates.post.parameters[0].name: body
paths./templates.post.parameters[0].schema.example.name: example_name
paths./templates.post.parameters[0].schema.properties.name.description: The name for
  the new transactional template.
paths./templates.post.parameters[0].schema.properties.name.maxLength: 100
paths./templates.post.parameters[0].schema.properties.name.type: string
paths./templates.post.parameters[0].schema.required.length: 1
paths./templates.post.parameters[0].schema.required[0]: name
paths./templates.post.parameters[0].schema.type: object
paths./templates.post.parameters[1].$ref: '#/parameters/trait:onBehalfOfSubuser:on-behalf-of'
paths./templates.post.produces.length: 1
paths./templates.post.produces[0]: application/json
paths./templates.post.responses.201.description: ""
paths./templates.post.responses.201.examples.application/json.id: 733ba07f-ead1-41fc-933a-3976baa23716
paths./templates.post.responses.201.examples.application/json.name: example_name
paths./templates.post.responses.201.examples.application/json.versions.length: 0
paths./templates.post.responses.201.schema.$ref: '#/definitions/transactional_template'
paths./templates.post.security.length: 1
paths./templates.post.security[0].Authorization.length: 0
paths./templates.post.summary: Create a transactional template.
paths./templates.post.tags.length: 1
paths./templates.post.tags[0]: Transactional Templates
paths./templates/{template_id}.delete.description: |-
  **This endpoint allows you to delete a transactional template.**

  Each user can create up to 300 different transactional templates. Transactional templates are specific to accounts and subusers. Templates created on a parent account will not be accessible from the subuser accounts.

  Transactional templates are templates created specifically for transactional email and are not to be confused with [Marketing Campaigns templates](https://sendgrid.com/docs/User_Guide/Marketing_Campaigns/templates.html). For more information about transactional templates, please see our [User Guide](https://sendgrid.com/docs/User_Guide/Transactional_Templates/index.html).
paths./templates/{template_id}.delete.operationId: DELETE_templates-template_id
paths./templates/{template_id}.delete.parameters.length: 2
paths./templates/{template_id}.delete.parameters[0].in: body
paths./templates/{template_id}.delete.parameters[0].name: body
paths./templates/{template_id}.delete.parameters[0].schema.type: "null"
paths./templates/{template_id}.delete.parameters[1].$ref: '#/parameters/trait:onBehalfOfSubuser:on-behalf-of'
paths./templates/{template_id}.delete.responses.204.description: ""
paths./templates/{template_id}.delete.responses.204.schema.type: object
paths./templates/{template_id}.delete.security.length: 1
paths./templates/{template_id}.delete.security[0].Authorization.length: 0
paths./templates/{template_id}.delete.summary: Delete a template.
paths./templates/{template_id}.delete.tags.length: 1
paths./templates/{template_id}.delete.tags[0]: Transactional Templates
paths./templates/{template_id}.get.description: |-
  **This endpoint allows you to retrieve a single transactional template.**

  Each user can create up to 300 different transactional templates. Transactional templates are specific to accounts and subusers. Templates created on a parent account will not be accessible from the subuser accounts.

  Transactional templates are templates created specifically for transactional email and are not to be confused with [Marketing Campaigns templates](https://sendgrid.com/docs/User_Guide/Marketing_Campaigns/templates.html). For more information about transactional templates, please see our [User Guide](https://sendgrid.com/docs/User_Guide/Transactional_Templates/index.html).
paths./templates/{template_id}.get.operationId: GET_templates-template_id
paths./templates/{template_id}.get.parameters.length: 1
paths./templates/{template_id}.get.parameters[0].$ref: '#/parameters/trait:onBehalfOfSubuser:on-behalf-of'
paths./templates/{template_id}.get.produces.length: 1
paths./templates/{template_id}.get.produces[0]: application/json
paths./templates/{template_id}.get.responses.200.description: ""
paths./templates/{template_id}.get.responses.200.schema.$ref: '#/definitions/transactional_template'
paths./templates/{template_id}.get.security.length: 1
paths./templates/{template_id}.get.security[0].Authorization.length: 0
paths./templates/{template_id}.get.summary: Retrieve a single transactional template.
paths./templates/{template_id}.get.tags.length: 1
paths./templates/{template_id}.get.tags[0]: Transactional Templates
paths./templates/{template_id}.parameters.length: 1
paths./templates/{template_id}.parameters[0].description: The id of the transactional
  template you want to retrieve.
paths./templates/{template_id}.parameters[0].in: path
paths./templates/{template_id}.parameters[0].name: template_id
paths./templates/{template_id}.parameters[0].required: true
paths./templates/{template_id}.parameters[0].type: string
paths./templates/{template_id}.patch.consumes.length: 1
paths./templates/{template_id}.patch.consumes[0]: application/json
paths./templates/{template_id}.patch.description: |-
  **This endpoint allows you to edit a transactional template.**

  Each user can create up to 300 different transactional templates. Transactional templates are specific to accounts and subusers. Templates created on a parent account will not be accessible from the subuser accounts.

  Transactional templates are templates created specifically for transactional email and are not to be confused with [Marketing Campaigns templates](https://sendgrid.com/docs/User_Guide/Marketing_Campaigns/templates.html). For more information about transactional templates, please see our [User Guide](https://sendgrid.com/docs/User_Guide/Transactional_Templates/index.html).
paths./templates/{template_id}.patch.operationId: PATCH_templates-template_id
paths./templates/{template_id}.patch.parameters.length: 2
paths./templates/{template_id}.patch.parameters[0].in: body
paths./templates/{template_id}.patch.parameters[0].name: body
paths./templates/{template_id}.patch.parameters[0].schema.example.name: new_example_name
paths./templates/{template_id}.patch.parameters[0].schema.properties.name.description: The
  name of the transactional template.
paths./templates/{template_id}.patch.parameters[0].schema.properties.name.maxLength: 100
paths./templates/{template_id}.patch.parameters[0].schema.properties.name.type: string
paths./templates/{template_id}.patch.parameters[0].schema.type: object
paths./templates/{template_id}.patch.parameters[1].$ref: '#/parameters/trait:onBehalfOfSubuser:on-behalf-of'
paths./templates/{template_id}.patch.produces.length: 1
paths./templates/{template_id}.patch.produces[0]: application/json
paths./templates/{template_id}.patch.responses.200.description: ""
paths./templates/{template_id}.patch.responses.200.examples.application/json.id: 733ba07f-ead1-41fc-933a-3976baa23716
paths./templates/{template_id}.patch.responses.200.examples.application/json.name: new_example_name
paths./templates/{template_id}.patch.responses.200.examples.application/json.versions.length: 0
paths./templates/{template_id}.patch.responses.200.schema.$ref: '#/definitions/transactional_template'
paths./templates/{template_id}.patch.security.length: 1
paths./templates/{template_id}.patch.security[0].Authorization.length: 0
paths./templates/{template_id}.patch.summary: Edit a transactional template.
paths./templates/{template_id}.patch.tags.length: 1
paths./templates/{template_id}.patch.tags[0]: Transactional Templates
paths./templates/{template_id}/versions.parameters.length: 1
paths./templates/{template_id}/versions.parameters[0].in: path
paths./templates/{template_id}/versions.parameters[0].name: template_id
paths./templates/{template_id}/versions.parameters[0].required: true
paths./templates/{template_id}/versions.parameters[0].type: string
paths./templates/{template_id}/versions.post.consumes.length: 1
paths./templates/{template_id}/versions.post.consumes[0]: application/json
paths./templates/{template_id}/versions.post.description: |-
  **This endpoint allows you to create a new version of a template.**

  Each transactional template can have multiple versions, each version with its own subject and content. Each user can have up to 300 versions across across all templates.

  For more information about transactional templates, please see our [User Guide](https://sendgrid.com/docs/User_Guide/Transactional_Templates/index.html).
paths./templates/{template_id}/versions.post.operationId: POST_templates-template_id-versions
paths./templates/{template_id}/versions.post.parameters.length: 2
paths./templates/{template_id}/versions.post.parameters[0].in: body
paths./templates/{template_id}/versions.post.parameters[0].name: body
paths./templates/{template_id}/versions.post.parameters[0].schema.$ref: '#/definitions/transactional_template_version'
paths./templates/{template_id}/versions.post.parameters[0].schema.example.active: 1
paths./templates/{template_id}/versions.post.parameters[0].schema.example.html_content: <%body%>
paths./templates/{template_id}/versions.post.parameters[0].schema.example.name: example_version_name
paths./templates/{template_id}/versions.post.parameters[0].schema.example.plain_content: <%body%>
paths./templates/{template_id}/versions.post.parameters[0].schema.example.subject: <%subject%>
paths./templates/{template_id}/versions.post.parameters[0].schema.example.template_id: ddb96bbc-9b92-425e-8979-99464621b543
paths./templates/{template_id}/versions.post.parameters[1].$ref: '#/parameters/trait:onBehalfOfSubuser:on-behalf-of'
paths./templates/{template_id}/versions.post.produces.length: 1
paths./templates/{template_id}/versions.post.produces[0]: application/json
paths./templates/{template_id}/versions.post.responses.201.description: ""
paths./templates/{template_id}/versions.post.responses.201.examples.application/json.active: 1
paths./templates/{template_id}/versions.post.responses.201.examples.application/json.html_content: <%body%>
paths./templates/{template_id}/versions.post.responses.201.examples.application/json.id: 8aefe0ee-f12b-4575-b5b7-c97e21cb36f3
paths./templates/{template_id}/versions.post.responses.201.examples.application/json.name: example_version_name
paths./templates/{template_id}/versions.post.responses.201.examples.application/json.plain_content: <%body%>
paths./templates/{template_id}/versions.post.responses.201.examples.application/json.subject: <%subject%>
paths./templates/{template_id}/versions.post.responses.201.examples.application/json.template_id: ddb96bbc-9b92-425e-8979-99464621b543
paths./templates/{template_id}/versions.post.responses.201.examples.application/json.updated_at: 2014-03-19
  18:56:33
paths./templates/{template_id}/versions.post.responses.201.schema.properties.Transactional Template Version.$ref: '#/definitions/transactional_template_version'
paths./templates/{template_id}/versions.post.responses.201.schema.properties.id.description: The
  id of the new transactional template version.
paths./templates/{template_id}/versions.post.responses.201.schema.properties.id.type: string
paths./templates/{template_id}/versions.post.responses.201.schema.properties.updated_at.description: The
  date and time that this transactional template version was updated.
paths./templates/{template_id}/versions.post.responses.201.schema.properties.updated_at.type: string
paths./templates/{template_id}/versions.post.responses.201.schema.required.length: 2
paths./templates/{template_id}/versions.post.responses.201.schema.required[0]: id
paths./templates/{template_id}/versions.post.responses.201.schema.required[1]: updated_at
paths./templates/{template_id}/versions.post.responses.201.schema.type: object
paths./templates/{template_id}/versions.post.security.length: 1
paths./templates/{template_id}/versions.post.security[0].Authorization.length: 0
paths./templates/{template_id}/versions.post.summary: Create a new transactional template
  version.
paths./templates/{template_id}/versions.post.tags.length: 1
paths./templates/{template_id}/versions.post.tags[0]: Transactional Templates Versions
paths./templates/{template_id}/versions/{version_id}.delete.description: |-
  **This endpoint allows you to delete one of your transactional template versions.**

  Each transactional template can have multiple versions, each version with its own subject and content. Each user can have up to 300 versions across across all templates.

  For more information about transactional templates, please see our [User Guide](https://sendgrid.com/docs/User_Guide/Transactional_Templates/index.html).

  ## URI Parameters
  | URI Parameter | Type | Description |
  |---|---|---|
  | template_id | string | The ID of the original template |
  | version_id | string | The ID of the template version |
paths./templates/{template_id}/versions/{version_id}.delete.operationId: DELETE_templates-template_id-versions-version_id
paths./templates/{template_id}/versions/{version_id}.delete.parameters.length: 2
paths./templates/{template_id}/versions/{version_id}.delete.parameters[0].in: body
paths./templates/{template_id}/versions/{version_id}.delete.parameters[0].name: body
paths./templates/{template_id}/versions/{version_id}.delete.parameters[0].schema.type: "null"
paths./templates/{template_id}/versions/{version_id}.delete.parameters[1].$ref: '#/parameters/trait:onBehalfOfSubuser:on-behalf-of'
paths./templates/{template_id}/versions/{version_id}.delete.responses.204.description: ""
paths./templates/{template_id}/versions/{version_id}.delete.responses.204.schema.type: "null"
paths./templates/{template_id}/versions/{version_id}.delete.security.length: 1
paths./templates/{template_id}/versions/{version_id}.delete.security[0].Authorization.length: 0
paths./templates/{template_id}/versions/{version_id}.delete.summary: Delete a transactional
  template version.
paths./templates/{template_id}/versions/{version_id}.delete.tags.length: 1
paths./templates/{template_id}/versions/{version_id}.delete.tags[0]: Transactional
  Templates Versions
paths./templates/{template_id}/versions/{version_id}.get.description: |-
  **This endpoint allows you to retrieve a specific version of a template.**

  Each transactional template can have multiple versions, each version with its own subject and content. Each user can have up to 300 versions across across all templates.

  For more information about transactional templates, please see our [User Guide](https://sendgrid.com/docs/User_Guide/Transactional_Templates/index.html).

  ## URI Parameters
  | URI Parameter | Type | Description |
  |---|---|---|
  | template_id | string | The ID of the original template |
  | version_id | string |  The ID of the template version |
paths./templates/{template_id}/versions/{version_id}.get.operationId: GET_templates-template_id-versions-version_id
paths./templates/{template_id}/versions/{version_id}.get.parameters.length: 1
paths./templates/{template_id}/versions/{version_id}.get.parameters[0].$ref: '#/parameters/trait:onBehalfOfSubuser:on-behalf-of'
paths./templates/{template_id}/versions/{version_id}.get.produces.length: 1
paths./templates/{template_id}/versions/{version_id}.get.produces[0]: application/json
paths./templates/{template_id}/versions/{version_id}.get.responses.200.description: ""
paths./templates/{template_id}/versions/{version_id}.get.responses.200.examples.application/json.active: 1
paths./templates/{template_id}/versions/{version_id}.get.responses.200.examples.application/json.html_content: <%body%>
paths./templates/{template_id}/versions/{version_id}.get.responses.200.examples.application/json.id: 5997fcf6-2b9f-484d-acd5-7e9a99f0dc1f
paths./templates/{template_id}/versions/{version_id}.get.responses.200.examples.application/json.name: version
  1 name
paths./templates/{template_id}/versions/{version_id}.get.responses.200.examples.application/json.plain_content: <%body%>
paths./templates/{template_id}/versions/{version_id}.get.responses.200.examples.application/json.subject: <%subject%>
paths./templates/{template_id}/versions/{version_id}.get.responses.200.examples.application/json.template_id: d51480ca-ca3f-465c-bc3e-ceb71d73c38d
paths./templates/{template_id}/versions/{version_id}.get.responses.200.examples.application/json.updated_at: 2014-03-19
  18:56:33
paths./templates/{template_id}/versions/{version_id}.get.responses.200.schema.properties.Transactional Template Version.$ref: '#/definitions/transactional_template_version'
paths./templates/{template_id}/versions/{version_id}.get.responses.200.schema.properties.id.description: The
  ID of the template version.
paths./templates/{template_id}/versions/{version_id}.get.responses.200.schema.properties.id.type: string
paths./templates/{template_id}/versions/{version_id}.get.responses.200.schema.properties.updated_at.description: The
  date and time that the template version was last updated.
paths./templates/{template_id}/versions/{version_id}.get.responses.200.schema.properties.updated_at.type: string
paths./templates/{template_id}/versions/{version_id}.get.responses.200.schema.required.length: 2
paths./templates/{template_id}/versions/{version_id}.get.responses.200.schema.required[0]: id
paths./templates/{template_id}/versions/{version_id}.get.responses.200.schema.required[1]: updated_at
paths./templates/{template_id}/versions/{version_id}.get.responses.200.schema.type: object
paths./templates/{template_id}/versions/{version_id}.get.security.length: 1
paths./templates/{template_id}/versions/{version_id}.get.security[0].Authorization.length: 0
paths./templates/{template_id}/versions/{version_id}.get.summary: Retrieve a specific
  transactional template version.
paths./templates/{template_id}/versions/{version_id}.get.tags.length: 1
paths./templates/{template_id}/versions/{version_id}.get.tags[0]: Transactional Templates
  Versions
paths./templates/{template_id}/versions/{version_id}.parameters.length: 2
paths./templates/{template_id}/versions/{version_id}.parameters[0].in: path
paths./templates/{template_id}/versions/{version_id}.parameters[0].name: template_id
paths./templates/{template_id}/versions/{version_id}.parameters[0].required: true
paths./templates/{template_id}/versions/{version_id}.parameters[0].type: string
paths./templates/{template_id}/versions/{version_id}.parameters[1].in: path
paths./templates/{template_id}/versions/{version_id}.parameters[1].name: version_id
paths./templates/{template_id}/versions/{version_id}.parameters[1].required: true
paths./templates/{template_id}/versions/{version_id}.parameters[1].type: string
paths./templates/{template_id}/versions/{version_id}.patch.consumes.length: 1
paths./templates/{template_id}/versions/{version_id}.patch.consumes[0]: application/json
paths./templates/{template_id}/versions/{version_id}.patch.description: |-
  **This endpoint allows you to edit a version of one of your transactional templates.**

  Each transactional template can have multiple versions, each version with its own subject and content. Each user can have up to 300 versions across across all templates.

  For more information about transactional templates, please see our [User Guide](https://sendgrid.com/docs/User_Guide/Transactional_Templates/index.html).

  ## URI Parameters
  | URI Parameter | Type | Description |
  |---|---|---|
  | template_id | string | The ID of the original template |
  | version_id | string | The ID of the template version |
paths./templates/{template_id}/versions/{version_id}.patch.operationId: PATCH_templates-template_id-versions-version_id
paths./templates/{template_id}/versions/{version_id}.patch.parameters.length: 2
paths./templates/{template_id}/versions/{version_id}.patch.parameters[0].in: body
paths./templates/{template_id}/versions/{version_id}.patch.parameters[0].name: body
paths./templates/{template_id}/versions/{version_id}.patch.parameters[0].schema.example.active: 1
paths./templates/{template_id}/versions/{version_id}.patch.parameters[0].schema.example.html_content: <%body%>
paths./templates/{template_id}/versions/{version_id}.patch.parameters[0].schema.example.name: updated_example_name
paths./templates/{template_id}/versions/{version_id}.patch.parameters[0].schema.example.plain_content: <%body%>
paths./templates/{template_id}/versions/{version_id}.patch.parameters[0].schema.example.subject: <%subject%>
paths./templates/{template_id}/versions/{version_id}.patch.parameters[0].schema.properties.active.description: Indicates
  if the template version is active.
paths./templates/{template_id}/versions/{version_id}.patch.parameters[0].schema.properties.active.type: integer
paths./templates/{template_id}/versions/{version_id}.patch.parameters[0].schema.properties.html_content.description: The
  HTML content of the template version.
paths./templates/{template_id}/versions/{version_id}.patch.parameters[0].schema.properties.html_content.type: string
paths./templates/{template_id}/versions/{version_id}.patch.parameters[0].schema.properties.name.description: The
  name of the template version.
paths./templates/{template_id}/versions/{version_id}.patch.parameters[0].schema.properties.name.type: string
paths./templates/{template_id}/versions/{version_id}.patch.parameters[0].schema.properties.plain_content.description: The
  text/plain content of the template version.
paths./templates/{template_id}/versions/{version_id}.patch.parameters[0].schema.properties.plain_content.type: string
paths./templates/{template_id}/versions/{version_id}.patch.parameters[0].schema.properties.subject.description: The
  subject of the template version.
paths./templates/{template_id}/versions/{version_id}.patch.parameters[0].schema.properties.subject.type: string
paths./templates/{template_id}/versions/{version_id}.patch.parameters[0].schema.type: object
paths./templates/{template_id}/versions/{version_id}.patch.parameters[1].$ref: '#/parameters/trait:onBehalfOfSubuser:on-behalf-of'
paths./templates/{template_id}/versions/{version_id}.patch.produces.length: 1
paths./templates/{template_id}/versions/{version_id}.patch.produces[0]: application/json
paths./templates/{template_id}/versions/{version_id}.patch.responses.200.description: ""
paths./templates/{template_id}/versions/{version_id}.patch.responses.200.examples.application/json.active: 1
paths./templates/{template_id}/versions/{version_id}.patch.responses.200.examples.application/json.html_content: <%body%>
paths./templates/{template_id}/versions/{version_id}.patch.responses.200.examples.application/json.id: 5997fcf6-2b9f-484d-acd5-7e9a99f0dc1f
paths./templates/{template_id}/versions/{version_id}.patch.responses.200.examples.application/json.name: version
  1 name
paths./templates/{template_id}/versions/{version_id}.patch.responses.200.examples.application/json.plain_content: <%body%>
paths./templates/{template_id}/versions/{version_id}.patch.responses.200.examples.application/json.subject: <%subject%>
paths./templates/{template_id}/versions/{version_id}.patch.responses.200.examples.application/json.template_id: d51480ca-ca3f-465c-bc3e-ceb71d73c38d
paths./templates/{template_id}/versions/{version_id}.patch.responses.200.examples.application/json.updated_at: 2014-03-19
  18:56:33
paths./templates/{template_id}/versions/{version_id}.patch.responses.200.schema.properties.Transactional Template Version.$ref: '#/definitions/transactional_template_version'
paths./templates/{template_id}/versions/{version_id}.patch.responses.200.schema.properties.id.description: The
  ID of the template version.
paths./templates/{template_id}/versions/{version_id}.patch.responses.200.schema.properties.id.type: string
paths./templates/{template_id}/versions/{version_id}.patch.responses.200.schema.properties.updated_at.description: The
  date and time that the template version was last updated.
paths./templates/{template_id}/versions/{version_id}.patch.responses.200.schema.properties.updated_at.type: string
paths./templates/{template_id}/versions/{version_id}.patch.responses.200.schema.required.length: 2
paths./templates/{template_id}/versions/{version_id}.patch.responses.200.schema.required[0]: id
paths./templates/{template_id}/versions/{version_id}.patch.responses.200.schema.required[1]: updated_at
paths./templates/{template_id}/versions/{version_id}.patch.responses.200.schema.type: object
paths./templates/{template_id}/versions/{version_id}.patch.security.length: 1
paths./templates/{template_id}/versions/{version_id}.patch.security[0].Authorization.length: 0
paths./templates/{template_id}/versions/{version_id}.patch.summary: Edit a transactional
  template version.
paths./templates/{template_id}/versions/{version_id}.patch.tags.length: 1
paths./templates/{template_id}/versions/{version_id}.patch.tags[0]: Transactional
  Templates Versions
paths./templates/{template_id}/versions/{version_id}/activate.parameters.length: 2
paths./templates/{template_id}/versions/{version_id}/activate.parameters[0].in: path
paths./templates/{template_id}/versions/{version_id}/activate.parameters[0].name: template_id
paths./templates/{template_id}/versions/{version_id}/activate.parameters[0].required: true
paths./templates/{template_id}/versions/{version_id}/activate.parameters[0].type: string
paths./templates/{template_id}/versions/{version_id}/activate.parameters[1].in: path
paths./templates/{template_id}/versions/{version_id}/activate.parameters[1].name: version_id
paths./templates/{template_id}/versions/{version_id}/activate.parameters[1].required: true
paths./templates/{template_id}/versions/{version_id}/activate.parameters[1].type: string
paths./templates/{template_id}/versions/{version_id}/activate.post.description: |-
  **This endpoint allows you to activate a version of one of your templates.**

  Each transactional template can have multiple versions, each version with its own subject and content. Each user can have up to 300 versions across across all templates.


  For more information about transactional templates, please see our [User Guide](https://sendgrid.com/docs/User_Guide/Transactional_Templates/index.html).

  ## URI Parameters
  | URI Parameter | Type | Description |
  |---|---|---|
  | template_id | string | The ID of the original template |
  | version_id | string |  The ID of the template version |
paths./templates/{template_id}/versions/{version_id}/activate.post.operationId: POST_templates-template_id-versions-version_id-activate
paths./templates/{template_id}/versions/{version_id}/activate.post.parameters.length: 2
paths./templates/{template_id}/versions/{version_id}/activate.post.parameters[0].in: body
paths./templates/{template_id}/versions/{version_id}/activate.post.parameters[0].name: body
paths./templates/{template_id}/versions/{version_id}/activate.post.parameters[0].schema.type: "null"
paths./templates/{template_id}/versions/{version_id}/activate.post.parameters[1].$ref: '#/parameters/trait:onBehalfOfSubuser:on-behalf-of'
paths./templates/{template_id}/versions/{version_id}/activate.post.produces.length: 1
paths./templates/{template_id}/versions/{version_id}/activate.post.produces[0]: application/json
paths./templates/{template_id}/versions/{version_id}/activate.post.responses.200.description: ""
paths./templates/{template_id}/versions/{version_id}/activate.post.responses.200.examples.application/json.active: 1
paths./templates/{template_id}/versions/{version_id}/activate.post.responses.200.examples.application/json.html_content: <%body%>
paths./templates/{template_id}/versions/{version_id}/activate.post.responses.200.examples.application/json.id: 8aefe0ee-f12b-4575-b5b7-c97e21cb36f3
paths./templates/{template_id}/versions/{version_id}/activate.post.responses.200.examples.application/json.name: example_version_name
paths./templates/{template_id}/versions/{version_id}/activate.post.responses.200.examples.application/json.plain_content: <%body%>
paths./templates/{template_id}/versions/{version_id}/activate.post.responses.200.examples.application/json.subject: <%subject%>
paths./templates/{template_id}/versions/{version_id}/activate.post.responses.200.examples.application/json.template_id: e3a61852-1acb-4b32-a1bc-b44b3814ab78
paths./templates/{template_id}/versions/{version_id}/activate.post.responses.200.examples.application/json.updated_at: 2014-06-12
  11:33:00
? paths./templates/{template_id}/versions/{version_id}/activate.post.responses.200.schema.properties.Transactional
  Template Version.$ref
: '#/definitions/transactional_template_version'
paths./templates/{template_id}/versions/{version_id}/activate.post.responses.200.schema.properties.id.description: The
  ID of the template version.
paths./templates/{template_id}/versions/{version_id}/activate.post.responses.200.schema.properties.id.type: string
paths./templates/{template_id}/versions/{version_id}/activate.post.responses.200.schema.properties.updated_at.description: The
  date and time that the version was last updated.
paths./templates/{template_id}/versions/{version_id}/activate.post.responses.200.schema.properties.updated_at.type: string
paths./templates/{template_id}/versions/{version_id}/activate.post.responses.200.schema.required.length: 2
paths./templates/{template_id}/versions/{version_id}/activate.post.responses.200.schema.required[0]: id
paths./templates/{template_id}/versions/{version_id}/activate.post.responses.200.schema.required[1]: updated_at
paths./templates/{template_id}/versions/{version_id}/activate.post.responses.200.schema.type: object
paths./templates/{template_id}/versions/{version_id}/activate.post.security.length: 1
paths./templates/{template_id}/versions/{version_id}/activate.post.security[0].Authorization.length: 0
paths./templates/{template_id}/versions/{version_id}/activate.post.summary: Activate
  a transactional template version.
paths./templates/{template_id}/versions/{version_id}/activate.post.tags.length: 1
paths./templates/{template_id}/versions/{version_id}/activate.post.tags[0]: Transactional
  Templates Versions
paths./tracking_settings.get.description: |-
  **This endpoint allows you to retrieve a list of all tracking settings that you can enable on your account.**

  You can track a variety of the actions your recipients may take when interacting with your emails including opening your emails, clicking on links in your emails, and subscribing to (or unsubscribing from) your emails.

  For more information about tracking, please see our [User Guide](https://sendgrid.com/docs/User_Guide/Settings/tracking.html).
paths./tracking_settings.get.operationId: GET_tracking_settings
paths./tracking_settings.get.parameters.length: 3
paths./tracking_settings.get.parameters[0].description: The number of settings to
  return.
paths./tracking_settings.get.parameters[0].in: query
paths./tracking_settings.get.parameters[0].name: limit
paths./tracking_settings.get.parameters[0].type: integer
paths./tracking_settings.get.parameters[1].description: Where in the list of results
  you want to begin retrieving settings.
paths./tracking_settings.get.parameters[1].in: query
paths./tracking_settings.get.parameters[1].name: offset
paths./tracking_settings.get.parameters[1].type: integer
paths./tracking_settings.get.parameters[2].$ref: '#/parameters/trait:onBehalfOfSubuser:on-behalf-of'
paths./tracking_settings.get.produces.length: 1
paths./tracking_settings.get.produces[0]: application/json
paths./tracking_settings.get.responses.200.description: ""
paths./tracking_settings.get.responses.200.examples.application/json.result.length: 1
paths./tracking_settings.get.responses.200.examples.application/json.result[0].description: lorem
  ipsum... .
paths./tracking_settings.get.responses.200.examples.application/json.result[0].enabled: true
paths./tracking_settings.get.responses.200.examples.application/json.result[0].name: open
paths./tracking_settings.get.responses.200.examples.application/json.result[0].title: Open
  Tracking
paths./tracking_settings.get.responses.200.schema.properties.result.description: The
  list of all tracking settings.
paths./tracking_settings.get.responses.200.schema.properties.result.items.properties.description.description: A
  description about the event that is being tracked.
paths./tracking_settings.get.responses.200.schema.properties.result.items.properties.description.type: string
paths./tracking_settings.get.responses.200.schema.properties.result.items.properties.enabled.description: Indicates
  if this tracking setting is currently enabled.
paths./tracking_settings.get.responses.200.schema.properties.result.items.properties.enabled.type: boolean
paths./tracking_settings.get.responses.200.schema.properties.result.items.properties.name.description: The
  name of the event being tracked.
paths./tracking_settings.get.responses.200.schema.properties.result.items.properties.name.type: string
paths./tracking_settings.get.responses.200.schema.properties.result.items.properties.title.description: The
  title of the tracking setting.
paths./tracking_settings.get.responses.200.schema.properties.result.items.properties.title.type: string
paths./tracking_settings.get.responses.200.schema.properties.result.items.type: object
paths./tracking_settings.get.responses.200.schema.properties.result.type: array
paths./tracking_settings.get.responses.200.schema.type: object
paths./tracking_settings.get.security.length: 1
paths./tracking_settings.get.security[0].Authorization.length: 0
paths./tracking_settings.get.summary: Retrieve Tracking Settings
paths./tracking_settings.get.tags.length: 1
paths./tracking_settings.get.tags[0]: Settings - Tracking
paths./tracking_settings/click.get.description: |-
  **This endpoint allows you to retrieve your current click tracking setting.**

  You can track a variety of the actions your recipients may take when interacting with your emails including opening your emails, clicking on links in your emails, and subscribing to (or unsubscribing from) your emails.

  For more information about tracking, please see our [User Guide](https://sendgrid.com/docs/User_Guide/Settings/tracking.html).
paths./tracking_settings/click.get.operationId: GET_tracking_settings-click
paths./tracking_settings/click.get.parameters.length: 1
paths./tracking_settings/click.get.parameters[0].$ref: '#/parameters/trait:onBehalfOfSubuser:on-behalf-of'
paths./tracking_settings/click.get.produces.length: 1
paths./tracking_settings/click.get.produces[0]: application/json
paths./tracking_settings/click.get.responses.200.description: ""
paths./tracking_settings/click.get.responses.200.examples.application/json.enable_text: false
paths./tracking_settings/click.get.responses.200.examples.application/json.enabled: true
paths./tracking_settings/click.get.responses.200.schema.properties.enable_text.description: Indicates
  if click tracking is enabled for plain text emails.
paths./tracking_settings/click.get.responses.200.schema.properties.enable_text.type: boolean
paths./tracking_settings/click.get.responses.200.schema.properties.enabled.description: Indicates
  if click tracking is enabled or disabled.
paths./tracking_settings/click.get.responses.200.schema.properties.enabled.type: boolean
paths./tracking_settings/click.get.responses.200.schema.required.length: 2
paths./tracking_settings/click.get.responses.200.schema.required[0]: enable_text
paths./tracking_settings/click.get.responses.200.schema.required[1]: enabled
paths./tracking_settings/click.get.responses.200.schema.type: object
paths./tracking_settings/click.get.security.length: 1
paths./tracking_settings/click.get.security[0].Authorization.length: 0
paths./tracking_settings/click.get.summary: Retrieve Click Track Settings
paths./tracking_settings/click.get.tags.length: 1
paths./tracking_settings/click.get.tags[0]: Settings - Tracking
paths./tracking_settings/click.patch.consumes.length: 1
paths./tracking_settings/click.patch.consumes[0]: application/json
paths./tracking_settings/click.patch.description: |-
  **This endpoint allows you to change your current click tracking setting. You can enable, or disable, click tracking using this endpoint.**

  You can track a variety of the actions your recipients may take when interacting with your emails including opening your emails, clicking on links in your emails, and subscribing to (or unsubscribing from) your emails.

  For more information about tracking, please see our [User Guide](https://sendgrid.com/docs/User_Guide/Settings/tracking.html).
paths./tracking_settings/click.patch.operationId: PATCH_tracking_settings-click
paths./tracking_settings/click.patch.parameters.length: 2
paths./tracking_settings/click.patch.parameters[0].in: body
paths./tracking_settings/click.patch.parameters[0].name: body
paths./tracking_settings/click.patch.parameters[0].schema.example.enabled: true
paths./tracking_settings/click.patch.parameters[0].schema.properties.enabled.description: The
  setting you want to use for click tracking.
paths./tracking_settings/click.patch.parameters[0].schema.properties.enabled.type: boolean
paths./tracking_settings/click.patch.parameters[0].schema.type: object
paths./tracking_settings/click.patch.parameters[1].$ref: '#/parameters/trait:onBehalfOfSubuser:on-behalf-of'
paths./tracking_settings/click.patch.produces.length: 1
paths./tracking_settings/click.patch.produces[0]: application/json
paths./tracking_settings/click.patch.responses.200.description: ""
paths./tracking_settings/click.patch.responses.200.examples.application/json.enable_text: false
paths./tracking_settings/click.patch.responses.200.examples.application/json.enabled: true
paths./tracking_settings/click.patch.responses.200.schema.properties.enable_text.description: Indicates
  if click tracking is enabled for plain text emails
paths./tracking_settings/click.patch.responses.200.schema.properties.enable_text.type: boolean
paths./tracking_settings/click.patch.responses.200.schema.properties.enabled.description: The
  new setting new setting for click tracking.
paths./tracking_settings/click.patch.responses.200.schema.properties.enabled.type: boolean
paths./tracking_settings/click.patch.responses.200.schema.required.length: 2
paths./tracking_settings/click.patch.responses.200.schema.required[0]: enable_text
paths./tracking_settings/click.patch.responses.200.schema.required[1]: enabled
paths./tracking_settings/click.patch.responses.200.schema.type: object
paths./tracking_settings/click.patch.security.length: 1
paths./tracking_settings/click.patch.security[0].Authorization.length: 0
paths./tracking_settings/click.patch.summary: Update Click Tracking Settings
paths./tracking_settings/click.patch.tags.length: 1
paths./tracking_settings/click.patch.tags[0]: Settings - Tracking
paths./tracking_settings/google_analytics.get.description: |-
  **This endpoint allows you to retrieve your current setting for Google Analytics.**

  For more information about using Google Analytics, please refer to [Google’s URL Builder](https://support.google.com/analytics/answer/1033867?hl=en) and their article on ["Best Practices for Campaign Building"](https://support.google.com/analytics/answer/1037445).

  We default the settings to Google’s recommendations. For more information, see [Google Analytics Demystified](https://sendgrid.com/docs/Classroom/Track/Collecting_Data/google_analytics_demystified_ga_statistics_vs_sg_statistics.html).

  You can track a variety of the actions your recipients may take when interacting with your emails including opening your emails, clicking on links in your emails, and subscribing to (or unsubscribing from) your emails.

  For more information about tracking, please see our [User Guide](https://sendgrid.com/docs/User_Guide/Settings/tracking.html).
paths./tracking_settings/google_analytics.get.operationId: GET_tracking_settings-google_analytics
paths./tracking_settings/google_analytics.get.parameters.length: 1
paths./tracking_settings/google_analytics.get.parameters[0].$ref: '#/parameters/trait:onBehalfOfSubuser:on-behalf-of'
paths./tracking_settings/google_analytics.get.produces.length: 1
paths./tracking_settings/google_analytics.get.produces[0]: application/json
paths./tracking_settings/google_analytics.get.responses.200.description: ""
paths./tracking_settings/google_analytics.get.responses.200.examples.application/json.enabled: true
paths./tracking_settings/google_analytics.get.responses.200.examples.application/json.utm_campaign: ""
paths./tracking_settings/google_analytics.get.responses.200.examples.application/json.utm_content: lotsandlotsofcontent
paths./tracking_settings/google_analytics.get.responses.200.examples.application/json.utm_medium: ""
paths./tracking_settings/google_analytics.get.responses.200.examples.application/json.utm_source: ""
paths./tracking_settings/google_analytics.get.responses.200.examples.application/json.utm_term: ""
paths./tracking_settings/google_analytics.get.responses.200.schema.$ref: '#/definitions/google_analytics_settings'
paths./tracking_settings/google_analytics.get.security.length: 1
paths./tracking_settings/google_analytics.get.security[0].Authorization.length: 0
paths./tracking_settings/google_analytics.get.summary: Retrieve Google Analytics Settings
paths./tracking_settings/google_analytics.get.tags.length: 1
paths./tracking_settings/google_analytics.get.tags[0]: Settings - Tracking
paths./tracking_settings/google_analytics.patch.consumes.length: 1
paths./tracking_settings/google_analytics.patch.consumes[0]: application/json
paths./tracking_settings/google_analytics.patch.description: |-
  **This endpoint allows you to update your current setting for Google Analytics.**

  For more information about using Google Analytics, please refer to [Google’s URL Builder](https://support.google.com/analytics/answer/1033867?hl=en) and their article on ["Best Practices for Campaign Building"](https://support.google.com/analytics/answer/1037445).

  We default the settings to Google’s recommendations. For more information, see [Google Analytics Demystified](https://sendgrid.com/docs/Classroom/Track/Collecting_Data/google_analytics_demystified_ga_statistics_vs_sg_statistics.html).

  You can track a variety of the actions your recipients may take when interacting with your emails including opening your emails, clicking on links in your emails, and subscribing to (or unsubscribing from) your emails.

  For more information about tracking, please see our [User Guide](https://sendgrid.com/docs/User_Guide/Settings/tracking.html).
paths./tracking_settings/google_analytics.patch.operationId: PATCH_tracking_settings-google_analytics
paths./tracking_settings/google_analytics.patch.parameters.length: 2
paths./tracking_settings/google_analytics.patch.parameters[0].in: body
paths./tracking_settings/google_analytics.patch.parameters[0].name: body
paths./tracking_settings/google_analytics.patch.parameters[0].schema.$ref: '#/definitions/google_analytics_settings'
paths./tracking_settings/google_analytics.patch.parameters[0].schema.example.enabled: true
paths./tracking_settings/google_analytics.patch.parameters[0].schema.example.utm_campaign: website
paths./tracking_settings/google_analytics.patch.parameters[0].schema.example.utm_content: ""
paths./tracking_settings/google_analytics.patch.parameters[0].schema.example.utm_medium: email
paths./tracking_settings/google_analytics.patch.parameters[0].schema.example.utm_source: sendgrid.com
paths./tracking_settings/google_analytics.patch.parameters[0].schema.example.utm_term: ""
paths./tracking_settings/google_analytics.patch.parameters[1].$ref: '#/parameters/trait:onBehalfOfSubuser:on-behalf-of'
paths./tracking_settings/google_analytics.patch.produces.length: 1
paths./tracking_settings/google_analytics.patch.produces[0]: application/json
paths./tracking_settings/google_analytics.patch.responses.200.description: ""
paths./tracking_settings/google_analytics.patch.responses.200.examples.application/json.enabled: true
paths./tracking_settings/google_analytics.patch.responses.200.examples.application/json.utm_campaign: ""
paths./tracking_settings/google_analytics.patch.responses.200.examples.application/json.utm_content: lotsandlotsofcontent
paths./tracking_settings/google_analytics.patch.responses.200.examples.application/json.utm_medium: ""
paths./tracking_settings/google_analytics.patch.responses.200.examples.application/json.utm_source: ""
paths./tracking_settings/google_analytics.patch.responses.200.examples.application/json.utm_term: ""
paths./tracking_settings/google_analytics.patch.responses.200.schema.$ref: '#/definitions/google_analytics_settings'
paths./tracking_settings/google_analytics.patch.security.length: 1
paths./tracking_settings/google_analytics.patch.security[0].Authorization.length: 0
paths./tracking_settings/google_analytics.patch.summary: Update Google Analytics Settings
paths./tracking_settings/google_analytics.patch.tags.length: 1
paths./tracking_settings/google_analytics.patch.tags[0]: Settings - Tracking
paths./tracking_settings/open.get.description: |-
  **This endpoint allows you to retrieve your current settings for open tracking.**

  Open Tracking adds an invisible image at the end of the email which can track email opens. If the email recipient has images enabled on their email client, a request to SendGrid’s server for the invisible image is executed and an open event is logged. These events are logged in the Statistics portal, Email Activity interface, and are reported by the Event Webhook.

  You can track a variety of the actions your recipients may take when interacting with your emails including opening your emails, clicking on links in your emails, and subscribing to (or unsubscribing from) your emails.

  For more information about tracking, please see our [User Guide](https://sendgrid.com/docs/User_Guide/Settings/tracking.html).
paths./tracking_settings/open.get.operationId: GET_tracking_settings-open
paths./tracking_settings/open.get.parameters.length: 1
paths./tracking_settings/open.get.parameters[0].$ref: '#/parameters/trait:onBehalfOfSubuser:on-behalf-of'
paths./tracking_settings/open.get.produces.length: 1
paths./tracking_settings/open.get.produces[0]: application/json
paths./tracking_settings/open.get.responses.200.description: ""
paths./tracking_settings/open.get.responses.200.examples.application/json.enabled: true
paths./tracking_settings/open.get.responses.200.schema.properties.enabled.description: Indicates
  if open tracking is enabled.
paths./tracking_settings/open.get.responses.200.schema.properties.enabled.type: boolean
paths./tracking_settings/open.get.responses.200.schema.required.length: 1
paths./tracking_settings/open.get.responses.200.schema.required[0]: enabled
paths./tracking_settings/open.get.responses.200.schema.type: object
paths./tracking_settings/open.get.security.length: 1
paths./tracking_settings/open.get.security[0].Authorization.length: 0
paths./tracking_settings/open.get.summary: Get Open Tracking Settings
paths./tracking_settings/open.get.tags.length: 1
paths./tracking_settings/open.get.tags[0]: Settings - Tracking
paths./tracking_settings/open.patch.consumes.length: 1
paths./tracking_settings/open.patch.consumes[0]: application/json
paths./tracking_settings/open.patch.description: |-
  **This endpoint allows you to update your current settings for open tracking.**

  Open Tracking adds an invisible image at the end of the email which can track email opens. If the email recipient has images enabled on their email client, a request to SendGrid’s server for the invisible image is executed and an open event is logged. These events are logged in the Statistics portal, Email Activity interface, and are reported by the Event Webhook.

  You can track a variety of the actions your recipients may take when interacting with your emails including opening your emails, clicking on links in your emails, and subscribing to (or unsubscribing from) your emails.

  For more information about tracking, please see our [User Guide](https://sendgrid.com/docs/User_Guide/Settings/tracking.html).
paths./tracking_settings/open.patch.operationId: PATCH_tracking_settings-open
paths./tracking_settings/open.patch.parameters.length: 2
paths./tracking_settings/open.patch.parameters[0].in: body
paths./tracking_settings/open.patch.parameters[0].name: body
paths./tracking_settings/open.patch.parameters[0].schema.example.enabled: true
paths./tracking_settings/open.patch.parameters[0].schema.properties.enabled.description: The
  new status that you want to set for open tracking.
paths./tracking_settings/open.patch.parameters[0].schema.properties.enabled.type: boolean
paths./tracking_settings/open.patch.parameters[0].schema.type: object
paths./tracking_settings/open.patch.parameters[1].$ref: '#/parameters/trait:onBehalfOfSubuser:on-behalf-of'
paths./tracking_settings/open.patch.produces.length: 1
paths./tracking_settings/open.patch.produces[0]: application/json
paths./tracking_settings/open.patch.responses.200.description: ""
paths./tracking_settings/open.patch.responses.200.examples.application/json.enabled: true
paths./tracking_settings/open.patch.responses.200.schema.properties.enabled.description: Indicates
  if open tracking is enabled.
paths./tracking_settings/open.patch.responses.200.schema.properties.enabled.type: boolean
paths./tracking_settings/open.patch.responses.200.schema.required.length: 1
paths./tracking_settings/open.patch.responses.200.schema.required[0]: enabled
paths./tracking_settings/open.patch.responses.200.schema.type: object
paths./tracking_settings/open.patch.security.length: 1
paths./tracking_settings/open.patch.security[0].Authorization.length: 0
paths./tracking_settings/open.patch.summary: Update Open Tracking Settings
paths./tracking_settings/open.patch.tags.length: 1
paths./tracking_settings/open.patch.tags[0]: Settings - Tracking
paths./tracking_settings/subscription.get.description: |-
  **This endpoint allows you to retrieve your current settings for subscription tracking.**

  Subscription tracking adds links to the bottom of your emails that allows your recipients to subscribe to, or unsubscribe from, your emails.

  You can track a variety of the actions your recipients may take when interacting with your emails including opening your emails, clicking on links in your emails, and subscribing to (or unsubscribing from) your emails.

  For more information about tracking, please see our [User Guide](https://sendgrid.com/docs/User_Guide/Settings/tracking.html).
paths./tracking_settings/subscription.get.operationId: GET_tracking_settings-subscription
paths./tracking_settings/subscription.get.parameters.length: 1
paths./tracking_settings/subscription.get.parameters[0].$ref: '#/parameters/trait:onBehalfOfSubuser:on-behalf-of'
paths./tracking_settings/subscription.get.produces.length: 1
paths./tracking_settings/subscription.get.produces[0]: application/json
paths./tracking_settings/subscription.get.responses.200.description: ""
paths./tracking_settings/subscription.get.responses.200.examples.application/json.enabled: true
paths./tracking_settings/subscription.get.responses.200.examples.application/json.html_content: |
  <p>Something something unsubscribe <% %> something something</p>
paths./tracking_settings/subscription.get.responses.200.examples.application/json.landing: |
  <p>subscribehere</p>
paths./tracking_settings/subscription.get.responses.200.examples.application/json.plain_content: Something
  something unsubscribe <% %> something something
paths./tracking_settings/subscription.get.responses.200.examples.application/json.replace: thetag
paths./tracking_settings/subscription.get.responses.200.examples.application/json.url: ""
paths./tracking_settings/subscription.get.responses.200.schema.$ref: '#/definitions/subscription_tracking_settings'
paths./tracking_settings/subscription.get.security.length: 1
paths./tracking_settings/subscription.get.security[0].Authorization.length: 0
paths./tracking_settings/subscription.get.summary: Retrieve Subscription Tracking
  Settings
paths./tracking_settings/subscription.get.tags.length: 1
paths./tracking_settings/subscription.get.tags[0]: Settings - Tracking
paths./tracking_settings/subscription.patch.consumes.length: 1
paths./tracking_settings/subscription.patch.consumes[0]: application/json
paths./tracking_settings/subscription.patch.description: |-
  **This endpoint allows you to update your current settings for subscription tracking.**

  Subscription tracking adds links to the bottom of your emails that allows your recipients to subscribe to, or unsubscribe from, your emails.

  You can track a variety of the actions your recipients may take when interacting with your emails including opening your emails, clicking on links in your emails, and subscribing to (or unsubscribing from) your emails.

  For more information about tracking, please see our [User Guide](https://sendgrid.com/docs/User_Guide/Settings/tracking.html).
paths./tracking_settings/subscription.patch.operationId: PATCH_tracking_settings-subscription
paths./tracking_settings/subscription.patch.parameters.length: 2
paths./tracking_settings/subscription.patch.parameters[0].in: body
paths./tracking_settings/subscription.patch.parameters[0].name: body
paths./tracking_settings/subscription.patch.parameters[0].schema.$ref: '#/definitions/subscription_tracking_settings'
paths./tracking_settings/subscription.patch.parameters[0].schema.example.enabled: true
paths./tracking_settings/subscription.patch.parameters[0].schema.example.html_content: html
  content
paths./tracking_settings/subscription.patch.parameters[0].schema.example.landing: landing
  page html
paths./tracking_settings/subscription.patch.parameters[0].schema.example.plain_content: text
  content
paths./tracking_settings/subscription.patch.parameters[0].schema.example.replace: replacement
  tag
paths./tracking_settings/subscription.patch.parameters[0].schema.example.url: url
paths./tracking_settings/subscription.patch.parameters[1].$ref: '#/parameters/trait:onBehalfOfSubuser:on-behalf-of'
paths./tracking_settings/subscription.patch.produces.length: 1
paths./tracking_settings/subscription.patch.produces[0]: application/json
paths./tracking_settings/subscription.patch.responses.200.description: ""
paths./tracking_settings/subscription.patch.responses.200.examples.application/json.enabled: true
paths./tracking_settings/subscription.patch.responses.200.examples.application/json.html_content: html
  content
paths./tracking_settings/subscription.patch.responses.200.examples.application/json.landing: landing
  page html
paths./tracking_settings/subscription.patch.responses.200.examples.application/json.plain_content: text
  content
paths./tracking_settings/subscription.patch.responses.200.examples.application/json.replace: replacement
  tag
paths./tracking_settings/subscription.patch.responses.200.examples.application/json.url: url
paths./tracking_settings/subscription.patch.responses.200.schema.$ref: '#/definitions/subscription_tracking_settings'
paths./tracking_settings/subscription.patch.security.length: 1
paths./tracking_settings/subscription.patch.security[0].Authorization.length: 0
paths./tracking_settings/subscription.patch.summary: Update Subscription Tracking
  Settings
paths./tracking_settings/subscription.patch.tags.length: 1
paths./tracking_settings/subscription.patch.tags[0]: Settings - Tracking
paths./user/account.get.description: |-
  **This endpoint allows you to retrieve your user account details.**

  Your user's account information includes the user's account type and reputation.

  Keeping your user profile up to date is important. This will help SendGrid to verify who you are as well as contact you should we need to.

  For more information about your user profile:

  * [SendGrid Account Settings](https://sendgrid.com/docs/User_Guide/Settings/account.html)
paths./user/account.get.operationId: GET_user-account
paths./user/account.get.parameters.length: 1
paths./user/account.get.parameters[0].$ref: '#/parameters/trait:onBehalfOfSubuser:on-behalf-of'
paths./user/account.get.produces.length: 1
paths./user/account.get.produces[0]: application/json
paths./user/account.get.responses.200.description: ""
paths./user/account.get.responses.200.examples.application/json.reputation: 100
paths./user/account.get.responses.200.examples.application/json.type: paid
paths./user/account.get.responses.200.schema.properties.reputation.description: The
  sender reputation for this user.
paths./user/account.get.responses.200.schema.properties.reputation.type: number
paths./user/account.get.responses.200.schema.properties.type.description: The type
  of account for this user.
paths./user/account.get.responses.200.schema.properties.type.enum.length: 2
paths./user/account.get.responses.200.schema.properties.type.enum[0]: free
paths./user/account.get.responses.200.schema.properties.type.enum[1]: paid
paths./user/account.get.responses.200.schema.properties.type.type: string
paths./user/account.get.responses.200.schema.required.length: 2
paths./user/account.get.responses.200.schema.required[0]: type
paths./user/account.get.responses.200.schema.required[1]: reputation
paths./user/account.get.responses.200.schema.title: GET User Account response
paths./user/account.get.responses.200.schema.type: object
paths./user/account.get.security.length: 1
paths./user/account.get.security[0].Authorization.length: 0
paths./user/account.get.summary: Get a user's account information.
paths./user/account.get.tags.length: 1
paths./user/account.get.tags[0]: Users API
paths./user/credits.get.description: |-
  **This endpoint allows you to retrieve the current credit balance for your account.**

  Your monthly credit allotment limits the number of emails you may send before incurring overage charges. For more information about credits and billing, please visit our [Clssroom](https://sendgrid.com/docs/Classroom/Basics/Billing/billing_info_and_faqs.html).
paths./user/credits.get.operationId: GET_user-credits
paths./user/credits.get.parameters.length: 1
paths./user/credits.get.parameters[0].$ref: '#/parameters/trait:onBehalfOfSubuser:on-behalf-of'
paths./user/credits.get.produces.length: 1
paths./user/credits.get.produces[0]: application/json
paths./user/credits.get.responses.200.description: ""
paths./user/credits.get.responses.200.examples.application/json.last_reset: 2013-01-01
paths./user/credits.get.responses.200.examples.application/json.next_reset: 2013-02-01
paths./user/credits.get.responses.200.examples.application/json.overage: 0
paths./user/credits.get.responses.200.examples.application/json.remain: 200
paths./user/credits.get.responses.200.examples.application/json.reset_frequency: monthly
paths./user/credits.get.responses.200.examples.application/json.total: 200
paths./user/credits.get.responses.200.examples.application/json.used: 0
paths./user/credits.get.responses.200.schema.properties.last_reset.description: The
  date that your credit balance was last reset.
paths./user/credits.get.responses.200.schema.properties.last_reset.type: string
paths./user/credits.get.responses.200.schema.properties.next_reset.description: The
  next date that your credit balance will be reset.
paths./user/credits.get.responses.200.schema.properties.next_reset.type: string
paths./user/credits.get.responses.200.schema.properties.overage.description: The number
  of overdrawn credits for your account.
paths./user/credits.get.responses.200.schema.properties.overage.type: integer
paths./user/credits.get.responses.200.schema.properties.remain.description: The remaining
  number of credits available on your account.
paths./user/credits.get.responses.200.schema.properties.remain.type: integer
paths./user/credits.get.responses.200.schema.properties.reset_frequency.description: The
  frequency at which your credit balance will be reset.
paths./user/credits.get.responses.200.schema.properties.reset_frequency.type: string
paths./user/credits.get.responses.200.schema.properties.total.description: The total
  number of credits assigned to your account.
paths./user/credits.get.responses.200.schema.properties.total.type: integer
paths./user/credits.get.responses.200.schema.properties.used.description: The number
  of credits that you have used.
paths./user/credits.get.responses.200.schema.properties.used.type: integer
paths./user/credits.get.responses.200.schema.required.length: 7
paths./user/credits.get.responses.200.schema.required[0]: remain
paths./user/credits.get.responses.200.schema.required[1]: total
paths./user/credits.get.responses.200.schema.required[2]: overage
paths./user/credits.get.responses.200.schema.required[3]: used
paths./user/credits.get.responses.200.schema.required[4]: last_reset
paths./user/credits.get.responses.200.schema.required[5]: next_reset
paths./user/credits.get.responses.200.schema.required[6]: reset_frequency
paths./user/credits.get.responses.200.schema.type: object
paths./user/credits.get.security.length: 1
paths./user/credits.get.security[0].Authorization.length: 0
paths./user/credits.get.summary: Retrieve your credit balance
paths./user/credits.get.tags.length: 1
paths./user/credits.get.tags[0]: Users API
paths./user/email.get.description: |-
  **This endpoint allows you to retrieve the email address currently on file for your account.**

  Keeping your user profile up to date is important. This will help SendGrid to verify who you are as well as contact you should we need to.

  For more information about your user profile:

  * [SendGrid Account Settings](https://sendgrid.com/docs/User_Guide/Settings/account.html)
paths./user/email.get.operationId: GET_user-email
paths./user/email.get.parameters.length: 1
paths./user/email.get.parameters[0].$ref: '#/parameters/trait:onBehalfOfSubuser:on-behalf-of'
paths./user/email.get.produces.length: 1
paths./user/email.get.produces[0]: application/json
paths./user/email.get.responses.200.description: ""
paths./user/email.get.responses.200.examples.application/json.email: test@example.com
paths./user/email.get.responses.200.schema.properties.email.description: The email
  address currently on file for your account.
paths./user/email.get.responses.200.schema.properties.email.type: string
paths./user/email.get.responses.200.schema.required.length: 1
paths./user/email.get.responses.200.schema.required[0]: email
paths./user/email.get.responses.200.schema.type: object
paths./user/email.get.security.length: 1
paths./user/email.get.security[0].Authorization.length: 0
paths./user/email.get.summary: Retrieve your account email address
paths./user/email.get.tags.length: 1
paths./user/email.get.tags[0]: Users API
paths./user/email.put.consumes.length: 1
paths./user/email.put.consumes[0]: application/json
paths./user/email.put.description: |-
  **This endpoint allows you to update the email address currently on file for your account.**

  Keeping your user profile up to date is important. This will help SendGrid to verify who you are as well as contact you should we need to.

  For more information about your user profile:

  * [SendGrid Account Settings](https://sendgrid.com/docs/User_Guide/Settings/account.html)
paths./user/email.put.operationId: PUT_user-email
paths./user/email.put.parameters.length: 2
paths./user/email.put.parameters[0].in: body
paths./user/email.put.parameters[0].name: body
paths./user/email.put.parameters[0].schema.example.email: example@example.com
paths./user/email.put.parameters[0].schema.properties.email.description: The new email
  address that you would like to use for your account.
paths./user/email.put.parameters[0].schema.properties.email.type: string
paths./user/email.put.parameters[0].schema.type: object
paths./user/email.put.parameters[1].$ref: '#/parameters/trait:onBehalfOfSubuser:on-behalf-of'
paths./user/email.put.produces.length: 1
paths./user/email.put.produces[0]: application/json
paths./user/email.put.responses.200.description: ""
paths./user/email.put.responses.200.schema.properties.email.description: The current
  email address on file for your account.
paths./user/email.put.responses.200.schema.properties.email.type: string
paths./user/email.put.responses.200.schema.required.length: 1
paths./user/email.put.responses.200.schema.required[0]: email
paths./user/email.put.responses.200.schema.type: object
paths./user/email.put.security.length: 1
paths./user/email.put.security[0].Authorization.length: 0
paths./user/email.put.summary: Update your account email address
paths./user/email.put.tags.length: 1
paths./user/email.put.tags[0]: Users API
paths./user/password.put.description: |-
  **This endpoint allows you to update your password.**

  Keeping your user profile up to date is important. This will help SendGrid to verify who you are as well as contact you should we need to.

  For more information about your user profile:

  * [SendGrid Account Settings](https://sendgrid.com/docs/User_Guide/Settings/account.html)
paths./user/password.put.operationId: PUT_user-password
paths./user/password.put.parameters.length: 2
paths./user/password.put.parameters[0].in: body
paths./user/password.put.parameters[0].name: body
paths./user/password.put.parameters[0].schema.example.new_password: new_password
paths./user/password.put.parameters[0].schema.example.old_password: old_password
paths./user/password.put.parameters[0].schema.properties.new_password.description: The
  new password you would like to use for your account.
paths./user/password.put.parameters[0].schema.properties.new_password.type: string
paths./user/password.put.parameters[0].schema.properties.old_password.description: The
  old password for your account.
paths./user/password.put.parameters[0].schema.properties.old_password.type: string
paths./user/password.put.parameters[0].schema.required.length: 2
paths./user/password.put.parameters[0].schema.required[0]: new_password
paths./user/password.put.parameters[0].schema.required[1]: old_password
paths./user/password.put.parameters[0].schema.type: object
paths./user/password.put.parameters[1].$ref: '#/parameters/trait:onBehalfOfSubuser:on-behalf-of'
paths./user/password.put.produces.length: 1
paths./user/password.put.produces[0]: application/json
paths./user/password.put.responses.200.description: ""
paths./user/password.put.responses.200.schema.type: object
paths./user/password.put.security.length: 1
paths./user/password.put.security[0].Authorization.length: 0
paths./user/password.put.summary: Update your password
paths./user/password.put.tags.length: 1
paths./user/password.put.tags[0]: Users API
paths./user/profile.get.description: |-
  Keeping your user profile up to date is important. This will help SendGrid to verify who you are as well as contact you should we need to.

  For more information about your user profile:

  * [SendGrid Account Settings](https://sendgrid.com/docs/User_Guide/Settings/account.html)
paths./user/profile.get.operationId: GET_user-profile
paths./user/profile.get.parameters.length: 1
paths./user/profile.get.parameters[0].$ref: '#/parameters/trait:onBehalfOfSubuser:on-behalf-of'
paths./user/profile.get.produces.length: 1
paths./user/profile.get.produces[0]: application/json
paths./user/profile.get.responses.200.description: ""
paths./user/profile.get.responses.200.examples.application/json.address: 814 West
  Chapman Avenue
paths./user/profile.get.responses.200.examples.application/json.address2: ""
paths./user/profile.get.responses.200.examples.application/json.city: Orange
paths./user/profile.get.responses.200.examples.application/json.company: SendGrid
paths./user/profile.get.responses.200.examples.application/json.country: US
paths./user/profile.get.responses.200.examples.application/json.first_name: Test
paths./user/profile.get.responses.200.examples.application/json.last_name: User
paths./user/profile.get.responses.200.examples.application/json.phone: 555-555-5555
paths./user/profile.get.responses.200.examples.application/json.state: CA
paths./user/profile.get.responses.200.examples.application/json.website: http://www.sendgrid.com
paths./user/profile.get.responses.200.examples.application/json.zip: "92868"
paths./user/profile.get.responses.200.schema.properties.address.description: The user's
  address.
paths./user/profile.get.responses.200.schema.properties.address.type: string
paths./user/profile.get.responses.200.schema.properties.address2.description: The
  second line of the user's address.
paths./user/profile.get.responses.200.schema.properties.address2.type: string
paths./user/profile.get.responses.200.schema.properties.city.description: The user's
  city.
paths./user/profile.get.responses.200.schema.properties.city.type: string
paths./user/profile.get.responses.200.schema.properties.company.description: The name
  of the user's company.
paths./user/profile.get.responses.200.schema.properties.company.type: string
paths./user/profile.get.responses.200.schema.properties.country.description: The user's
  country.
paths./user/profile.get.responses.200.schema.properties.country.type: string
paths./user/profile.get.responses.200.schema.properties.first_name.description: The
  user's first name.
paths./user/profile.get.responses.200.schema.properties.first_name.type: string
paths./user/profile.get.responses.200.schema.properties.last_name.description: The
  user's last name.
paths./user/profile.get.responses.200.schema.properties.last_name.type: string
paths./user/profile.get.responses.200.schema.properties.phone.description: The user's
  phone number.
paths./user/profile.get.responses.200.schema.properties.phone.type: string
paths./user/profile.get.responses.200.schema.properties.state.description: The user's
  state.
paths./user/profile.get.responses.200.schema.properties.state.type: string
paths./user/profile.get.responses.200.schema.properties.website.description: The user's
  website URL.
paths./user/profile.get.responses.200.schema.properties.website.type: string
paths./user/profile.get.responses.200.schema.properties.zip.description: The user's
  zip code.
paths./user/profile.get.responses.200.schema.properties.zip.type: string
paths./user/profile.get.responses.200.schema.required.length: 10
paths./user/profile.get.responses.200.schema.required[0]: address
paths./user/profile.get.responses.200.schema.required[1]: city
paths./user/profile.get.responses.200.schema.required[2]: company
paths./user/profile.get.responses.200.schema.required[3]: country
paths./user/profile.get.responses.200.schema.required[4]: first_name
paths./user/profile.get.responses.200.schema.required[5]: last_name
paths./user/profile.get.responses.200.schema.required[6]: phone
paths./user/profile.get.responses.200.schema.required[7]: state
paths./user/profile.get.responses.200.schema.required[8]: website
paths./user/profile.get.responses.200.schema.required[9]: zip
paths./user/profile.get.responses.200.schema.title: GET User Profile response
paths./user/profile.get.responses.200.schema.type: object
paths./user/profile.get.security.length: 1
paths./user/profile.get.security[0].Authorization.length: 0
paths./user/profile.get.summary: Get a user's profile
paths./user/profile.get.tags.length: 1
paths./user/profile.get.tags[0]: Users API
paths./user/profile.patch.consumes.length: 1
paths./user/profile.patch.consumes[0]: application/json
paths./user/profile.patch.description: |-
  **This endpoint allows you to update your current profile details.**

  Keeping your user profile up to date is important. This will help SendGrid to verify who you are as well as contact you should we need to.

  For more information about your user profile:

  * [SendGrid Account Settings](https://sendgrid.com/docs/User_Guide/Settings/account.html)

  It should be noted that any one or more of the parameters can be updated via the PATCH /user/profile endpoint. The only requirement is that you include at least one when you PATCH.
paths./user/profile.patch.operationId: PATCH_user-profile
paths./user/profile.patch.parameters.length: 2
paths./user/profile.patch.parameters[0].in: body
paths./user/profile.patch.parameters[0].name: body
paths./user/profile.patch.parameters[0].schema.$ref: '#/definitions/user_profile'
paths./user/profile.patch.parameters[0].schema.example.city: Orange
paths./user/profile.patch.parameters[0].schema.example.first_name: Example
paths./user/profile.patch.parameters[0].schema.example.last_name: User
paths./user/profile.patch.parameters[1].$ref: '#/parameters/trait:onBehalfOfSubuser:on-behalf-of'
paths./user/profile.patch.produces.length: 1
paths./user/profile.patch.produces[0]: application/json
paths./user/profile.patch.responses.200.description: ""
paths./user/profile.patch.responses.200.examples.application/json.address: 814 West
  Chapman Avenue
paths./user/profile.patch.responses.200.examples.application/json.address2: ""
paths./user/profile.patch.responses.200.examples.application/json.city: Orange
paths./user/profile.patch.responses.200.examples.application/json.company: SendGrid
paths./user/profile.patch.responses.200.examples.application/json.country: US
paths./user/profile.patch.responses.200.examples.application/json.first_name: Example
paths./user/profile.patch.responses.200.examples.application/json.last_name: User
paths./user/profile.patch.responses.200.examples.application/json.phone: 555-555-5555
paths./user/profile.patch.responses.200.examples.application/json.state: CA
paths./user/profile.patch.responses.200.examples.application/json.website: http://www.sendgrid.com
paths./user/profile.patch.responses.200.examples.application/json.zip: "92868"
paths./user/profile.patch.responses.200.schema.$ref: '#/definitions/user_profile'
paths./user/profile.patch.responses.401.description: ""
paths./user/profile.patch.responses.401.examples.application/json.errors.length: 1
paths./user/profile.patch.responses.401.examples.application/json.errors[0].message: authorization
  required
paths./user/profile.patch.responses.401.schema.$ref: '#/definitions/global:ErrorResponse'
paths./user/profile.patch.security.length: 1
paths./user/profile.patch.security[0].Authorization.length: 0
paths./user/profile.patch.summary: Update a user's profile
paths./user/profile.patch.tags.length: 1
paths./user/profile.patch.tags[0]: Users API
paths./user/scheduled_sends.get.description: |-
  **This endpoint allows you to retrieve all cancel/paused scheduled send information.**

  The Cancel Scheduled Sends feature allows the customer to cancel a scheduled send based on a Batch ID included in the SMTPAPI header. Scheduled sends cancelled less than 10 minutes before the scheduled time are not guaranteed to be cancelled.
paths./user/scheduled_sends.get.operationId: GET_user-scheduled_sends
paths./user/scheduled_sends.get.produces.length: 1
paths./user/scheduled_sends.get.produces[0]: application/json
paths./user/scheduled_sends.get.responses.200.description: ""
paths./user/scheduled_sends.get.responses.200.examples.application/json.length: 2
paths./user/scheduled_sends.get.responses.200.examples.application/json[0].batch_id: YzJlNTkxMmEtOWM3Ny0xMWU1LTkwM2UtNTI1NDAwNmQzZmYzLTVlM2NhNWIwYg
paths./user/scheduled_sends.get.responses.200.examples.application/json[0].status: cancel
paths./user/scheduled_sends.get.responses.200.examples.application/json[1].batch_id: UtNTI1NDAwNmQzZmYzLTVlM2NhNWIwYgYzJlNTkxMmEtOWM3Ny0xMWU1LTkwM2
paths./user/scheduled_sends.get.responses.200.examples.application/json[1].status: cancel
paths./user/scheduled_sends.get.responses.200.schema.items.$ref: '#/definitions/user_scheduled_send_status'
paths./user/scheduled_sends.get.responses.200.schema.type: array
paths./user/scheduled_sends.get.responses.401.description: ""
paths./user/scheduled_sends.get.responses.401.examples.application/json.errors.length: 1
paths./user/scheduled_sends.get.responses.401.examples.application/json.errors[0].message: authorization
  required
paths./user/scheduled_sends.get.responses.401.schema.$ref: '#/definitions/global:ErrorResponse'
paths./user/scheduled_sends.get.security.length: 1
paths./user/scheduled_sends.get.security[0].Authorization.length: 0
paths./user/scheduled_sends.get.summary: Retrieve all scheduled sends
paths./user/scheduled_sends.get.tags.length: 1
paths./user/scheduled_sends.get.tags[0]: Cancel Scheduled Sends
paths./user/scheduled_sends.post.consumes.length: 1
paths./user/scheduled_sends.post.consumes[0]: application/json
paths./user/scheduled_sends.post.description: |-
  **This endpoint allows you to cancel or pause an email that has been scheduled to be sent.**

  If the maximum number of cancellations/pauses are added, HTTP 400 will
  be returned.

  The Cancel Scheduled Sends feature allows the customer to cancel a scheduled send based on a Batch ID included in the SMTPAPI header. Scheduled sends cancelled less than 10 minutes before the scheduled time are not guaranteed to be cancelled.
paths./user/scheduled_sends.post.operationId: POST_user-scheduled_sends
paths./user/scheduled_sends.post.parameters.length: 1
paths./user/scheduled_sends.post.parameters[0].in: body
paths./user/scheduled_sends.post.parameters[0].name: body
paths./user/scheduled_sends.post.parameters[0].schema.example.batch_id: YOUR_BATCH_ID
paths./user/scheduled_sends.post.parameters[0].schema.example.status: pause
paths./user/scheduled_sends.post.parameters[0].schema.properties.batch_id.description: The
  batch ID is the identifier that your scheduled mail sends share.
paths./user/scheduled_sends.post.parameters[0].schema.properties.batch_id.pattern: ^[a-zA-Z0-9]
paths./user/scheduled_sends.post.parameters[0].schema.properties.batch_id.type: string
paths./user/scheduled_sends.post.parameters[0].schema.properties.status.default: pause
paths./user/scheduled_sends.post.parameters[0].schema.properties.status.description: The
  status of the send you would like to implement. This can be pause or cancel. To
  delete a pause or cancel status see DELETE /v3/user/scheduled_sends/{batch_id}
paths./user/scheduled_sends.post.parameters[0].schema.properties.status.enum.length: 2
paths./user/scheduled_sends.post.parameters[0].schema.properties.status.enum[0]: pause
paths./user/scheduled_sends.post.parameters[0].schema.properties.status.enum[1]: cancel
paths./user/scheduled_sends.post.parameters[0].schema.properties.status.type: string
paths./user/scheduled_sends.post.parameters[0].schema.required.length: 2
paths./user/scheduled_sends.post.parameters[0].schema.required[0]: batch_id
paths./user/scheduled_sends.post.parameters[0].schema.required[1]: status
paths./user/scheduled_sends.post.parameters[0].schema.title: Cancel or pause a scheduled
  send request
paths./user/scheduled_sends.post.parameters[0].schema.type: object
paths./user/scheduled_sends.post.produces.length: 1
paths./user/scheduled_sends.post.produces[0]: application/json
paths./user/scheduled_sends.post.responses.201.description: ""
paths./user/scheduled_sends.post.responses.201.schema.$ref: '#/definitions/user_scheduled_send_status'
paths./user/scheduled_sends.post.responses.400.description: |-
  "" : "max limit reached"
  "batch_id" : "invalid batch id"
  "batch_id" : "a status for this batch id exists, try PATCH to update the status"
paths./user/scheduled_sends.post.responses.400.examples.application/json.errors.length: 3
paths./user/scheduled_sends.post.responses.400.examples.application/json.errors[0].message: max
  limit reached
paths./user/scheduled_sends.post.responses.400.examples.application/json.errors[1].field: batch_id
paths./user/scheduled_sends.post.responses.400.examples.application/json.errors[1].message: invalid
  batch id
paths./user/scheduled_sends.post.responses.400.examples.application/json.errors[2].field: batch_id
paths./user/scheduled_sends.post.responses.400.examples.application/json.errors[2].message: a
  status for this batch id exists, try PATCH to update the status
paths./user/scheduled_sends.post.responses.400.schema.type: object
paths./user/scheduled_sends.post.responses.401.description: ""
paths./user/scheduled_sends.post.responses.401.examples.application/json.errors.length: 1
paths./user/scheduled_sends.post.responses.401.examples.application/json.errors[0].message: authorization
  required
paths./user/scheduled_sends.post.responses.401.schema.type: object
paths./user/scheduled_sends.post.security.length: 1
paths./user/scheduled_sends.post.security[0].Authorization.length: 0
paths./user/scheduled_sends.post.summary: Cancel or pause a scheduled send
paths./user/scheduled_sends.post.tags.length: 1
paths./user/scheduled_sends.post.tags[0]: Cancel Scheduled Sends
paths./user/scheduled_sends/{batch_id}.delete.description: |-
  **This endpoint allows you to delete the cancellation/pause of a scheduled send.**

  The Cancel Scheduled Sends feature allows the customer to cancel a scheduled send based on a Batch ID included in the SMTPAPI header. Scheduled sends cancelled less than 10 minutes before the scheduled time are not guaranteed to be cancelled.
paths./user/scheduled_sends/{batch_id}.delete.operationId: DELETE_user-scheduled_sends-batch_id
paths./user/scheduled_sends/{batch_id}.delete.parameters.length: 1
paths./user/scheduled_sends/{batch_id}.delete.parameters[0].in: body
paths./user/scheduled_sends/{batch_id}.delete.parameters[0].name: body
paths./user/scheduled_sends/{batch_id}.delete.parameters[0].schema.type: "null"
paths./user/scheduled_sends/{batch_id}.delete.produces.length: 1
paths./user/scheduled_sends/{batch_id}.delete.produces[0]: application/json
paths./user/scheduled_sends/{batch_id}.delete.responses.204.description: ""
paths./user/scheduled_sends/{batch_id}.delete.responses.204.schema.type: "null"
paths./user/scheduled_sends/{batch_id}.delete.responses.401.description: ""
paths./user/scheduled_sends/{batch_id}.delete.responses.401.examples.application/json.errors.length: 1
paths./user/scheduled_sends/{batch_id}.delete.responses.401.examples.application/json.errors[0].message: authorization
  required
paths./user/scheduled_sends/{batch_id}.delete.responses.401.schema.$ref: '#/definitions/global:ErrorResponse'
paths./user/scheduled_sends/{batch_id}.delete.responses.404.description: ""
paths./user/scheduled_sends/{batch_id}.delete.responses.404.examples.application/json.errors.length: 1
paths./user/scheduled_sends/{batch_id}.delete.responses.404.examples.application/json.errors[0].message: batch
  id not found
paths./user/scheduled_sends/{batch_id}.delete.responses.404.schema.$ref: '#/definitions/global:ErrorResponse'
paths./user/scheduled_sends/{batch_id}.delete.security.length: 1
paths./user/scheduled_sends/{batch_id}.delete.security[0].Authorization.length: 0
paths./user/scheduled_sends/{batch_id}.delete.summary: Delete a cancellation or pause
  of a scheduled send
paths./user/scheduled_sends/{batch_id}.delete.tags.length: 1
paths./user/scheduled_sends/{batch_id}.delete.tags[0]: Cancel Scheduled Sends
paths./user/scheduled_sends/{batch_id}.get.description: |-
  **This endpoint allows you to retrieve the cancel/paused scheduled send information for a specific `batch_id`.**

  The Cancel Scheduled Sends feature allows the customer to cancel a scheduled send based on a Batch ID included in the SMTPAPI header. Scheduled sends cancelled less than 10 minutes before the scheduled time are not guaranteed to be cancelled.
paths./user/scheduled_sends/{batch_id}.get.operationId: GET_user-scheduled_sends-batch_id
paths./user/scheduled_sends/{batch_id}.get.produces.length: 1
paths./user/scheduled_sends/{batch_id}.get.produces[0]: application/json
paths./user/scheduled_sends/{batch_id}.get.responses.200.description: ""
paths./user/scheduled_sends/{batch_id}.get.responses.200.examples.application/json.length: 2
paths./user/scheduled_sends/{batch_id}.get.responses.200.examples.application/json[0].batch_id: HkJ5yLYULb7Rj8GKSx7u025ouWVlMgAi
paths./user/scheduled_sends/{batch_id}.get.responses.200.examples.application/json[0].status: cancel
paths./user/scheduled_sends/{batch_id}.get.responses.200.examples.application/json[1].batch_id: IbLdyLYULb7Rj8GKSx7u025ouWVlAiMg
paths./user/scheduled_sends/{batch_id}.get.responses.200.examples.application/json[1].status: pause
paths./user/scheduled_sends/{batch_id}.get.responses.200.schema.items.$ref: '#/definitions/user_scheduled_send_status'
paths./user/scheduled_sends/{batch_id}.get.responses.200.schema.title: Retrieve scheduled
  send response
paths./user/scheduled_sends/{batch_id}.get.responses.200.schema.type: array
paths./user/scheduled_sends/{batch_id}.get.responses.401.description: ""
paths./user/scheduled_sends/{batch_id}.get.responses.401.examples.application/json.errors.length: 1
paths./user/scheduled_sends/{batch_id}.get.responses.401.examples.application/json.errors[0].message: authorization
  required
paths./user/scheduled_sends/{batch_id}.get.responses.401.schema.$ref: '#/definitions/global:ErrorResponse'
paths./user/scheduled_sends/{batch_id}.get.security.length: 1
paths./user/scheduled_sends/{batch_id}.get.security[0].Authorization.length: 0
paths./user/scheduled_sends/{batch_id}.get.summary: Retrieve scheduled send
paths./user/scheduled_sends/{batch_id}.get.tags.length: 1
paths./user/scheduled_sends/{batch_id}.get.tags[0]: Cancel Scheduled Sends
paths./user/scheduled_sends/{batch_id}.parameters.length: 1
paths./user/scheduled_sends/{batch_id}.parameters[0].in: path
paths./user/scheduled_sends/{batch_id}.parameters[0].name: batch_id
paths./user/scheduled_sends/{batch_id}.parameters[0].required: true
paths./user/scheduled_sends/{batch_id}.parameters[0].type: string
paths./user/scheduled_sends/{batch_id}.patch.consumes.length: 1
paths./user/scheduled_sends/{batch_id}.patch.consumes[0]: application/json
paths./user/scheduled_sends/{batch_id}.patch.description: |-
  **This endpoint allows you to update the status of a scheduled send for the given `batch_id`.**

  The Cancel Scheduled Sends feature allows the customer to cancel a scheduled send based on a Batch ID included in the SMTPAPI header. Scheduled sends cancelled less than 10 minutes before the scheduled time are not guaranteed to be cancelled.
paths./user/scheduled_sends/{batch_id}.patch.operationId: PATCH_user-scheduled_sends-batch_id
paths./user/scheduled_sends/{batch_id}.patch.parameters.length: 1
paths./user/scheduled_sends/{batch_id}.patch.parameters[0].in: body
paths./user/scheduled_sends/{batch_id}.patch.parameters[0].name: body
paths./user/scheduled_sends/{batch_id}.patch.parameters[0].schema.example.status: pause
paths./user/scheduled_sends/{batch_id}.patch.parameters[0].schema.properties.status.description: The
  status you would like the scheduled send to have.
paths./user/scheduled_sends/{batch_id}.patch.parameters[0].schema.properties.status.enum.length: 2
paths./user/scheduled_sends/{batch_id}.patch.parameters[0].schema.properties.status.enum[0]: cancel
paths./user/scheduled_sends/{batch_id}.patch.parameters[0].schema.properties.status.enum[1]: pause
paths./user/scheduled_sends/{batch_id}.patch.parameters[0].schema.properties.status.type: string
paths./user/scheduled_sends/{batch_id}.patch.parameters[0].schema.required.length: 1
paths./user/scheduled_sends/{batch_id}.patch.parameters[0].schema.required[0]: status
paths./user/scheduled_sends/{batch_id}.patch.parameters[0].schema.type: object
paths./user/scheduled_sends/{batch_id}.patch.produces.length: 1
paths./user/scheduled_sends/{batch_id}.patch.produces[0]: application/json
paths./user/scheduled_sends/{batch_id}.patch.responses.204.description: ""
paths./user/scheduled_sends/{batch_id}.patch.responses.204.schema.type: "null"
paths./user/scheduled_sends/{batch_id}.patch.responses.400.description: ""
paths./user/scheduled_sends/{batch_id}.patch.responses.400.examples.application/json.errors.length: 1
paths./user/scheduled_sends/{batch_id}.patch.responses.400.examples.application/json.errors[0].field: status
paths./user/scheduled_sends/{batch_id}.patch.responses.400.examples.application/json.errors[0].message: status
  must be either cancel or pause
paths./user/scheduled_sends/{batch_id}.patch.responses.400.schema.$ref: '#/definitions/global:ErrorResponse'
paths./user/scheduled_sends/{batch_id}.patch.responses.401.description: ""
paths./user/scheduled_sends/{batch_id}.patch.responses.401.examples.application/json.errors.length: 1
paths./user/scheduled_sends/{batch_id}.patch.responses.401.examples.application/json.errors[0].message: authorization
  required
paths./user/scheduled_sends/{batch_id}.patch.responses.401.schema.$ref: '#/definitions/global:ErrorResponse'
paths./user/scheduled_sends/{batch_id}.patch.responses.404.description: '"" : "batch
  id not found"'
paths./user/scheduled_sends/{batch_id}.patch.responses.404.examples.application/json.errors.length: 1
paths./user/scheduled_sends/{batch_id}.patch.responses.404.examples.application/json.errors[0].message: batch
  id not found
paths./user/scheduled_sends/{batch_id}.patch.responses.404.schema.$ref: '#/definitions/global:ErrorResponse'
paths./user/scheduled_sends/{batch_id}.patch.security.length: 1
paths./user/scheduled_sends/{batch_id}.patch.security[0].Authorization.length: 0
paths./user/scheduled_sends/{batch_id}.patch.summary: Update user scheduled send information
paths./user/scheduled_sends/{batch_id}.patch.tags.length: 1
paths./user/scheduled_sends/{batch_id}.patch.tags[0]: Cancel Scheduled Sends
paths./user/settings/enforced_tls.get.description: |-
  **This endpoint allows you to retrieve your current Enforced TLS settings.**

  The Enforced TLS settings specify whether or not the recipient is required to support TLS or have a valid certificate. See the [SMTP Ports User Guide](https://sendgrid.com/docs/Classroom/Basics/Email_Infrastructure/smtp_ports.html) for more information on opportunistic TLS.

  **Note:** If either setting is enabled and the recipient does not support TLS or have a valid certificate, we drop the message and send a block event with “TLS required but not supported” as the description.
paths./user/settings/enforced_tls.get.operationId: GET_user-settings-enforced_tls
paths./user/settings/enforced_tls.get.parameters.length: 1
paths./user/settings/enforced_tls.get.parameters[0].$ref: '#/parameters/trait:onBehalfOfSubuser:on-behalf-of'
paths./user/settings/enforced_tls.get.produces.length: 1
paths./user/settings/enforced_tls.get.produces[0]: application/json
paths./user/settings/enforced_tls.get.responses.200.description: ""
paths./user/settings/enforced_tls.get.responses.200.examples.application/json.require_tls: false
paths./user/settings/enforced_tls.get.responses.200.examples.application/json.require_valid_cert: false
paths./user/settings/enforced_tls.get.responses.200.schema.properties.require_tls.description: Indicates
  if the recipient is required to support TLS.
paths./user/settings/enforced_tls.get.responses.200.schema.properties.require_tls.type: boolean
paths./user/settings/enforced_tls.get.responses.200.schema.properties.require_valid_cert.description: Indicates
  if the recipient is required to have a valid certificate.
paths./user/settings/enforced_tls.get.responses.200.schema.properties.require_valid_cert.type: boolean
paths./user/settings/enforced_tls.get.responses.200.schema.required.length: 2
paths./user/settings/enforced_tls.get.responses.200.schema.required[0]: require_tls
paths./user/settings/enforced_tls.get.responses.200.schema.required[1]: require_valid_cert
paths./user/settings/enforced_tls.get.responses.200.schema.type: object
paths./user/settings/enforced_tls.get.security.length: 1
paths./user/settings/enforced_tls.get.security[0].Authorization.length: 0
paths./user/settings/enforced_tls.get.summary: Retrieve current Enforced TLS settings.
paths./user/settings/enforced_tls.get.tags.length: 1
paths./user/settings/enforced_tls.get.tags[0]: Settings - Enforced TLS
paths./user/settings/enforced_tls.patch.consumes.length: 1
paths./user/settings/enforced_tls.patch.consumes[0]: application/json
paths./user/settings/enforced_tls.patch.description: |-
  **This endpoint allows you to update your current Enforced TLS settings.**

  The Enforced TLS settings specify whether or not the recipient is required to support TLS or have a valid certificate. See the [SMTP Ports User Guide](https://sendgrid.com/docs/Classroom/Basics/Email_Infrastructure/smtp_ports.html) for more information on opportunistic TLS.

  **Note:** If either setting is enabled and the recipient does not support TLS or have a valid certificate, we drop the message and send a block event with “TLS required but not supported” as the description.
paths./user/settings/enforced_tls.patch.operationId: PATCH_user-settings-enforced_tls
paths./user/settings/enforced_tls.patch.parameters.length: 2
paths./user/settings/enforced_tls.patch.parameters[0].in: body
paths./user/settings/enforced_tls.patch.parameters[0].name: body
paths./user/settings/enforced_tls.patch.parameters[0].schema.example.require_tls: true
paths./user/settings/enforced_tls.patch.parameters[0].schema.example.require_valid_cert: false
paths./user/settings/enforced_tls.patch.parameters[0].schema.properties.require_tls.description: 'Indicates
  if you want to require your recipients to support TLS. '
paths./user/settings/enforced_tls.patch.parameters[0].schema.properties.require_tls.type: boolean
paths./user/settings/enforced_tls.patch.parameters[0].schema.properties.require_valid_cert.description: Indicates
  if you want to require your recipients to have a valid certificate.
paths./user/settings/enforced_tls.patch.parameters[0].schema.properties.require_valid_cert.type: boolean
paths./user/settings/enforced_tls.patch.parameters[0].schema.type: object
paths./user/settings/enforced_tls.patch.parameters[1].$ref: '#/parameters/trait:onBehalfOfSubuser:on-behalf-of'
paths./user/settings/enforced_tls.patch.produces.length: 1
paths./user/settings/enforced_tls.patch.produces[0]: application/json
paths./user/settings/enforced_tls.patch.responses.200.description: ""
paths./user/settings/enforced_tls.patch.responses.200.examples.application/json.require_tls: true
paths./user/settings/enforced_tls.patch.responses.200.examples.application/json.require_valid_cert: false
paths./user/settings/enforced_tls.patch.responses.200.schema.properties.require_tls.description: Indicates
  if your recipients are required to support TLS.
paths./user/settings/enforced_tls.patch.responses.200.schema.properties.require_tls.type: boolean
paths./user/settings/enforced_tls.patch.responses.200.schema.properties.require_valid_cert.description: Indicates
  if your recipients are required to have a valid certificate.
paths./user/settings/enforced_tls.patch.responses.200.schema.properties.require_valid_cert.type: boolean
paths./user/settings/enforced_tls.patch.responses.200.schema.required.length: 2
paths./user/settings/enforced_tls.patch.responses.200.schema.required[0]: require_tls
paths./user/settings/enforced_tls.patch.responses.200.schema.required[1]: require_valid_cert
paths./user/settings/enforced_tls.patch.responses.200.schema.type: object
paths./user/settings/enforced_tls.patch.security.length: 1
paths./user/settings/enforced_tls.patch.security[0].Authorization.length: 0
paths./user/settings/enforced_tls.patch.summary: Update Enforced TLS settings
paths./user/settings/enforced_tls.patch.tags.length: 1
paths./user/settings/enforced_tls.patch.tags[0]: Settings - Enforced TLS
paths./user/username.get.description: |-
  **This endpoint allows you to retrieve your current account username.**

  Keeping your user profile up to date is important. This will help SendGrid to verify who you are as well as contact you should we need to.

  For more information about your user profile:

  * [SendGrid Account Settings](https://sendgrid.com/docs/User_Guide/Settings/account.html)
paths./user/username.get.operationId: GET_user-username
paths./user/username.get.parameters.length: 1
paths./user/username.get.parameters[0].$ref: '#/parameters/trait:onBehalfOfSubuser:on-behalf-of'
paths./user/username.get.produces.length: 1
paths./user/username.get.produces[0]: application/json
paths./user/username.get.responses.200.description: ""
paths./user/username.get.responses.200.examples.application/json.user_id: 1
paths./user/username.get.responses.200.examples.application/json.username: test_username
paths./user/username.get.responses.200.schema.properties.user_id.description: The
  user ID for your account.
paths./user/username.get.responses.200.schema.properties.user_id.type: integer
paths./user/username.get.responses.200.schema.properties.username.description: Your
  account username.
paths./user/username.get.responses.200.schema.properties.username.type: string
paths./user/username.get.responses.200.schema.required.length: 2
paths./user/username.get.responses.200.schema.required[0]: username
paths./user/username.get.responses.200.schema.required[1]: user_id
paths./user/username.get.responses.200.schema.type: object
paths./user/username.get.security.length: 1
paths./user/username.get.security[0].Authorization.length: 0
paths./user/username.get.summary: Retrieve your username
paths./user/username.get.tags.length: 1
paths./user/username.get.tags[0]: Users API
paths./user/username.put.consumes.length: 1
paths./user/username.put.consumes[0]: application/json
paths./user/username.put.description: |-
  **This endpoint allows you to update the username for your account.**

  Keeping your user profile up to date is important. This will help SendGrid to verify who you are as well as contact you should we need to.

  For more information about your user profile:

  * [SendGrid Account Settings](https://sendgrid.com/docs/User_Guide/Settings/account.html)
paths./user/username.put.operationId: PUT_user-username
paths./user/username.put.parameters.length: 2
paths./user/username.put.parameters[0].in: body
paths./user/username.put.parameters[0].name: body
paths./user/username.put.parameters[0].schema.example.username: test_username
paths./user/username.put.parameters[0].schema.properties.username.description: The
  new username you would like to use for your account.
paths./user/username.put.parameters[0].schema.properties.username.type: string
paths./user/username.put.parameters[0].schema.type: object
paths./user/username.put.parameters[1].$ref: '#/parameters/trait:onBehalfOfSubuser:on-behalf-of'
paths./user/username.put.produces.length: 1
paths./user/username.put.produces[0]: application/json
paths./user/username.put.responses.200.description: ""
paths./user/username.put.responses.200.examples.application/json.username: test_username
paths./user/username.put.responses.200.schema.properties.username.description: The
  current username on file for your account.
paths./user/username.put.responses.200.schema.properties.username.type: string
paths./user/username.put.responses.200.schema.required.length: 1
paths./user/username.put.responses.200.schema.required[0]: username
paths./user/username.put.responses.200.schema.type: object
paths./user/username.put.security.length: 1
paths./user/username.put.security[0].Authorization.length: 0
paths./user/username.put.summary: Update your username
paths./user/username.put.tags.length: 1
paths./user/username.put.tags[0]: Users API
paths./user/webhooks/event/settings.get.description: |-
  **This endpoint allows you to retrieve your current event webhook settings.**

  If an event type is marked as `true`, then the event webhook will include information about that event.

  SendGrid’s Event Webhook will notify a URL of your choice via HTTP POST with information about events that occur as SendGrid processes your email.

  Common uses of this data are to remove unsubscribes, react to spam reports, determine unengaged recipients, identify bounced email addresses, or create advanced analytics of your email program.
paths./user/webhooks/event/settings.get.operationId: GET_user-webhooks-event-settings
paths./user/webhooks/event/settings.get.parameters.length: 1
paths./user/webhooks/event/settings.get.parameters[0].$ref: '#/parameters/trait:onBehalfOfSubuser:on-behalf-of'
paths./user/webhooks/event/settings.get.produces.length: 1
paths./user/webhooks/event/settings.get.produces[0]: application/json
paths./user/webhooks/event/settings.get.responses.200.description: ""
paths./user/webhooks/event/settings.get.responses.200.examples.application/json.bounce: true
paths./user/webhooks/event/settings.get.responses.200.examples.application/json.click: true
paths./user/webhooks/event/settings.get.responses.200.examples.application/json.deferred: true
paths./user/webhooks/event/settings.get.responses.200.examples.application/json.delivered: true
paths./user/webhooks/event/settings.get.responses.200.examples.application/json.dropped: true
paths./user/webhooks/event/settings.get.responses.200.examples.application/json.enabled: true
paths./user/webhooks/event/settings.get.responses.200.examples.application/json.group_resubscribe: true
paths./user/webhooks/event/settings.get.responses.200.examples.application/json.group_unsubscribe: true
paths./user/webhooks/event/settings.get.responses.200.examples.application/json.open: true
paths./user/webhooks/event/settings.get.responses.200.examples.application/json.processed: true
paths./user/webhooks/event/settings.get.responses.200.examples.application/json.spam_report: true
paths./user/webhooks/event/settings.get.responses.200.examples.application/json.unsubscribe: true
paths./user/webhooks/event/settings.get.responses.200.examples.application/json.url: url
paths./user/webhooks/event/settings.get.responses.200.schema.$ref: '#/definitions/event_webhook_settings'
paths./user/webhooks/event/settings.get.security.length: 1
paths./user/webhooks/event/settings.get.security[0].Authorization.length: 0
paths./user/webhooks/event/settings.get.summary: Retrieve Event Webhook settings
paths./user/webhooks/event/settings.get.tags.length: 1
paths./user/webhooks/event/settings.get.tags[0]: Webhooks
paths./user/webhooks/event/settings.patch.consumes.length: 1
paths./user/webhooks/event/settings.patch.consumes[0]: application/json
paths./user/webhooks/event/settings.patch.description: |-
  **This endpoint allows you to update your current event webhook settings.**

  If an event type is marked as `true`, then the event webhook will include information about that event.

  SendGrid’s Event Webhook will notify a URL of your choice via HTTP POST with information about events that occur as SendGrid processes your email.

  Common uses of this data are to remove unsubscribes, react to spam reports, determine unengaged recipients, identify bounced email addresses, or create advanced analytics of your email program.
paths./user/webhooks/event/settings.patch.operationId: PATCH_user-webhooks-event-settings
paths./user/webhooks/event/settings.patch.parameters.length: 2
paths./user/webhooks/event/settings.patch.parameters[0].in: body
paths./user/webhooks/event/settings.patch.parameters[0].name: body
paths./user/webhooks/event/settings.patch.parameters[0].schema.$ref: '#/definitions/event_webhook_settings'
paths./user/webhooks/event/settings.patch.parameters[0].schema.example.bounce: true
paths./user/webhooks/event/settings.patch.parameters[0].schema.example.click: true
paths./user/webhooks/event/settings.patch.parameters[0].schema.example.deferred: true
paths./user/webhooks/event/settings.patch.parameters[0].schema.example.delivered: true
paths./user/webhooks/event/settings.patch.parameters[0].schema.example.dropped: true
paths./user/webhooks/event/settings.patch.parameters[0].schema.example.enabled: true
paths./user/webhooks/event/settings.patch.parameters[0].schema.example.group_resubscribe: true
paths./user/webhooks/event/settings.patch.parameters[0].schema.example.group_unsubscribe: true
paths./user/webhooks/event/settings.patch.parameters[0].schema.example.open: true
paths./user/webhooks/event/settings.patch.parameters[0].schema.example.processed: true
paths./user/webhooks/event/settings.patch.parameters[0].schema.example.spam_report: true
paths./user/webhooks/event/settings.patch.parameters[0].schema.example.unsubscribe: true
paths./user/webhooks/event/settings.patch.parameters[0].schema.example.url: url
paths./user/webhooks/event/settings.patch.parameters[1].$ref: '#/parameters/trait:onBehalfOfSubuser:on-behalf-of'
paths./user/webhooks/event/settings.patch.produces.length: 1
paths./user/webhooks/event/settings.patch.produces[0]: application/json
paths./user/webhooks/event/settings.patch.responses.200.description: ""
paths./user/webhooks/event/settings.patch.responses.200.examples.application/json.bounce: true
paths./user/webhooks/event/settings.patch.responses.200.examples.application/json.click: true
paths./user/webhooks/event/settings.patch.responses.200.examples.application/json.deferred: true
paths./user/webhooks/event/settings.patch.responses.200.examples.application/json.delivered: true
paths./user/webhooks/event/settings.patch.responses.200.examples.application/json.dropped: true
paths./user/webhooks/event/settings.patch.responses.200.examples.application/json.enabled: true
paths./user/webhooks/event/settings.patch.responses.200.examples.application/json.group_resubscribe: true
paths./user/webhooks/event/settings.patch.responses.200.examples.application/json.group_unsubscribe: true
paths./user/webhooks/event/settings.patch.responses.200.examples.application/json.open: true
paths./user/webhooks/event/settings.patch.responses.200.examples.application/json.processed: true
paths./user/webhooks/event/settings.patch.responses.200.examples.application/json.spam_report: true
paths./user/webhooks/event/settings.patch.responses.200.examples.application/json.unsubscribe: true
paths./user/webhooks/event/settings.patch.responses.200.examples.application/json.url: url
paths./user/webhooks/event/settings.patch.responses.200.schema.$ref: '#/definitions/event_webhook_settings'
paths./user/webhooks/event/settings.patch.security.length: 1
paths./user/webhooks/event/settings.patch.security[0].Authorization.length: 0
paths./user/webhooks/event/settings.patch.summary: Update Event Notification Settings
paths./user/webhooks/event/settings.patch.tags.length: 1
paths./user/webhooks/event/settings.patch.tags[0]: Webhooks
paths./user/webhooks/event/test.post.description: |-
  **This endpoint allows you to test your event webhook by sending a fake event notification post to the provided URL.**

  SendGrid’s Event Webhook will notify a URL of your choice via HTTP POST with information about events that occur as SendGrid processes your email.

  Common uses of this data are to remove unsubscribes, react to spam reports, determine unengaged recipients, identify bounced email addresses, or create advanced analytics of your email program.
paths./user/webhooks/event/test.post.operationId: POST_user-webhooks-event-test
paths./user/webhooks/event/test.post.parameters.length: 2
paths./user/webhooks/event/test.post.parameters[0].in: body
paths./user/webhooks/event/test.post.parameters[0].name: body
paths./user/webhooks/event/test.post.parameters[0].schema.example.url: url
paths./user/webhooks/event/test.post.parameters[0].schema.properties.url.description: The
  URL where you would like the test notification to be sent.
paths./user/webhooks/event/test.post.parameters[0].schema.properties.url.type: string
paths./user/webhooks/event/test.post.parameters[0].schema.type: object
paths./user/webhooks/event/test.post.parameters[1].$ref: '#/parameters/trait:onBehalfOfSubuser:on-behalf-of'
paths./user/webhooks/event/test.post.produces.length: 1
paths./user/webhooks/event/test.post.produces[0]: application/json
paths./user/webhooks/event/test.post.responses.204.description: ""
paths./user/webhooks/event/test.post.responses.204.schema.type: object
paths./user/webhooks/event/test.post.security.length: 1
paths./user/webhooks/event/test.post.security[0].Authorization.length: 0
paths./user/webhooks/event/test.post.summary: Test Event Notification Settings
paths./user/webhooks/event/test.post.tags.length: 1
paths./user/webhooks/event/test.post.tags[0]: Webhooks
paths./user/webhooks/parse/settings.get.description: |-
  **This endpoint allows you to retrieve all of your current inbound parse settings.**

  The inbound parse webhook allows you to have incoming emails parsed, extracting some or all of the contnet, and then have that content POSTed by SendGrid to a URL of your choosing. For more information, please see our [User Guide](https://sendgrid.com/docs/API_Reference/Webhooks/parse.html).
paths./user/webhooks/parse/settings.get.operationId: GET_user-webhooks-parse-settings
paths./user/webhooks/parse/settings.get.parameters.length: 1
paths./user/webhooks/parse/settings.get.parameters[0].$ref: '#/parameters/trait:onBehalfOfSubuser:on-behalf-of'
paths./user/webhooks/parse/settings.get.produces.length: 1
paths./user/webhooks/parse/settings.get.produces[0]: application/json
paths./user/webhooks/parse/settings.get.responses.200.description: ""
paths./user/webhooks/parse/settings.get.responses.200.examples.application/json.result.length: 1
paths./user/webhooks/parse/settings.get.responses.200.examples.application/json.result[0].hostname: mail.mydomain.com
paths./user/webhooks/parse/settings.get.responses.200.examples.application/json.result[0].send_raw: true
paths./user/webhooks/parse/settings.get.responses.200.examples.application/json.result[0].spam_check: true
paths./user/webhooks/parse/settings.get.responses.200.examples.application/json.result[0].url: http://mydomain.com/parse
paths./user/webhooks/parse/settings.get.responses.200.schema.properties.result.description: The
  list of your current inbound parse settings.
paths./user/webhooks/parse/settings.get.responses.200.schema.properties.result.items.$ref: '#/definitions/parse-setting'
paths./user/webhooks/parse/settings.get.responses.200.schema.properties.result.type: array
paths./user/webhooks/parse/settings.get.responses.200.schema.type: object
paths./user/webhooks/parse/settings.get.security.length: 1
paths./user/webhooks/parse/settings.get.security[0].Authorization.length: 0
paths./user/webhooks/parse/settings.get.summary: Retrieve all parse settings
paths./user/webhooks/parse/settings.get.tags.length: 1
paths./user/webhooks/parse/settings.get.tags[0]: Settings - Inbound Parse
paths./user/webhooks/parse/settings.post.consumes.length: 1
paths./user/webhooks/parse/settings.post.consumes[0]: application/json
paths./user/webhooks/parse/settings.post.description: |-
  **This endpoint allows you to create a new inbound parse setting.**

  The inbound parse webhook allows you to have incoming emails parsed, extracting some or all of the content, and then have that content POSTed by SendGrid to a URL of your choosing. For more information, please see our [User Guide](https://sendgrid.com/docs/API_Reference/Webhooks/parse.html).
paths./user/webhooks/parse/settings.post.operationId: POST_user-webhooks-parse-settings
paths./user/webhooks/parse/settings.post.parameters.length: 2
paths./user/webhooks/parse/settings.post.parameters[0].in: body
paths./user/webhooks/parse/settings.post.parameters[0].name: body
paths./user/webhooks/parse/settings.post.parameters[0].schema.$ref: '#/definitions/parse-setting'
paths./user/webhooks/parse/settings.post.parameters[0].schema.example.hostname: myhostname.com
paths./user/webhooks/parse/settings.post.parameters[0].schema.example.send_raw: false
paths./user/webhooks/parse/settings.post.parameters[0].schema.example.spam_check: true
paths./user/webhooks/parse/settings.post.parameters[0].schema.example.url: http://email.myhosthame.com
paths./user/webhooks/parse/settings.post.parameters[1].$ref: '#/parameters/trait:onBehalfOfSubuser:on-behalf-of'
paths./user/webhooks/parse/settings.post.produces.length: 1
paths./user/webhooks/parse/settings.post.produces[0]: application/json
paths./user/webhooks/parse/settings.post.responses.201.description: ""
paths./user/webhooks/parse/settings.post.responses.201.examples.application/json.hostname: myhostname.com
paths./user/webhooks/parse/settings.post.responses.201.examples.application/json.send_raw: true
paths./user/webhooks/parse/settings.post.responses.201.examples.application/json.spam_check: false
paths./user/webhooks/parse/settings.post.responses.201.examples.application/json.url: http://email.myhostname.com
paths./user/webhooks/parse/settings.post.responses.201.schema.$ref: '#/definitions/parse-setting'
paths./user/webhooks/parse/settings.post.security.length: 1
paths./user/webhooks/parse/settings.post.security[0].Authorization.length: 0
paths./user/webhooks/parse/settings.post.summary: Create a parse setting
paths./user/webhooks/parse/settings.post.tags.length: 1
paths./user/webhooks/parse/settings.post.tags[0]: Settings - Inbound Parse
paths./user/webhooks/parse/settings/{hostname}.delete.description: |-
  **This endpoint allows you to delete a specific inbound parse setting.**

  The inbound parse webhook allows you to have incoming emails parsed, extracting some or all of the contnet, and then have that content POSTed by SendGrid to a URL of your choosing. For more information, please see our [User Guide](https://sendgrid.com/docs/API_Reference/Webhooks/parse.html).
paths./user/webhooks/parse/settings/{hostname}.delete.operationId: DELETE_user-webhooks-parse-settings-hostname
paths./user/webhooks/parse/settings/{hostname}.delete.parameters.length: 1
paths./user/webhooks/parse/settings/{hostname}.delete.parameters[0].$ref: '#/parameters/trait:onBehalfOfSubuser:on-behalf-of'
paths./user/webhooks/parse/settings/{hostname}.delete.responses.204.description: ""
paths./user/webhooks/parse/settings/{hostname}.delete.responses.204.schema.type: object
paths./user/webhooks/parse/settings/{hostname}.delete.security.length: 1
paths./user/webhooks/parse/settings/{hostname}.delete.security[0].Authorization.length: 0
paths./user/webhooks/parse/settings/{hostname}.delete.summary: Delete a parse setting
paths./user/webhooks/parse/settings/{hostname}.delete.tags.length: 1
paths./user/webhooks/parse/settings/{hostname}.delete.tags[0]: Settings - Inbound
  Parse
paths./user/webhooks/parse/settings/{hostname}.get.description: |-
  **This endpoint allows you to retrieve a specific inbound parse setting.**

  The inbound parse webhook allows you to have incoming emails parsed, extracting some or all of the contnet, and then have that content POSTed by SendGrid to a URL of your choosing. For more information, please see our [User Guide](https://sendgrid.com/docs/API_Reference/Webhooks/parse.html).
paths./user/webhooks/parse/settings/{hostname}.get.operationId: GET_user-webhooks-parse-settings-hostname
paths./user/webhooks/parse/settings/{hostname}.get.parameters.length: 1
paths./user/webhooks/parse/settings/{hostname}.get.parameters[0].$ref: '#/parameters/trait:onBehalfOfSubuser:on-behalf-of'
paths./user/webhooks/parse/settings/{hostname}.get.produces.length: 1
paths./user/webhooks/parse/settings/{hostname}.get.produces[0]: application/json
paths./user/webhooks/parse/settings/{hostname}.get.responses.200.description: ""
paths./user/webhooks/parse/settings/{hostname}.get.responses.200.examples.application/json.hostname: mail.mydomain.com
paths./user/webhooks/parse/settings/{hostname}.get.responses.200.examples.application/json.send_raw: true
paths./user/webhooks/parse/settings/{hostname}.get.responses.200.examples.application/json.spam_check: true
paths./user/webhooks/parse/settings/{hostname}.get.responses.200.examples.application/json.url: http://mydomain.com/parse
paths./user/webhooks/parse/settings/{hostname}.get.responses.200.schema.$ref: '#/definitions/parse-setting'
paths./user/webhooks/parse/settings/{hostname}.get.security.length: 1
paths./user/webhooks/parse/settings/{hostname}.get.security[0].Authorization.length: 0
paths./user/webhooks/parse/settings/{hostname}.get.summary: Retrieve a specific parse
  setting
paths./user/webhooks/parse/settings/{hostname}.get.tags.length: 1
paths./user/webhooks/parse/settings/{hostname}.get.tags[0]: Settings - Inbound Parse
paths./user/webhooks/parse/settings/{hostname}.parameters.length: 1
paths./user/webhooks/parse/settings/{hostname}.parameters[0].description: The hostname
  associated with the inbound parse setting that you would like to retrieve.
paths./user/webhooks/parse/settings/{hostname}.parameters[0].in: path
paths./user/webhooks/parse/settings/{hostname}.parameters[0].name: hostname
paths./user/webhooks/parse/settings/{hostname}.parameters[0].required: true
paths./user/webhooks/parse/settings/{hostname}.parameters[0].type: string
paths./user/webhooks/parse/settings/{hostname}.patch.consumes.length: 1
paths./user/webhooks/parse/settings/{hostname}.patch.consumes[0]: application/json
paths./user/webhooks/parse/settings/{hostname}.patch.description: |-
  **This endpoint allows you to update a specific inbound parse setting.**

  The inbound parse webhook allows you to have incoming emails parsed, extracting some or all of the contnet, and then have that content POSTed by SendGrid to a URL of your choosing. For more information, please see our [User Guide](https://sendgrid.com/docs/API_Reference/Webhooks/parse.html).
paths./user/webhooks/parse/settings/{hostname}.patch.operationId: PATCH_user-webhooks-parse-settings-hostname
paths./user/webhooks/parse/settings/{hostname}.patch.parameters.length: 2
paths./user/webhooks/parse/settings/{hostname}.patch.parameters[0].in: body
paths./user/webhooks/parse/settings/{hostname}.patch.parameters[0].name: body
paths./user/webhooks/parse/settings/{hostname}.patch.parameters[0].schema.$ref: '#/definitions/parse-setting'
paths./user/webhooks/parse/settings/{hostname}.patch.parameters[0].schema.example.send_raw: true
paths./user/webhooks/parse/settings/{hostname}.patch.parameters[0].schema.example.spam_check: false
paths./user/webhooks/parse/settings/{hostname}.patch.parameters[0].schema.example.url: http://newdomain.com/parse
paths./user/webhooks/parse/settings/{hostname}.patch.parameters[1].$ref: '#/parameters/trait:onBehalfOfSubuser:on-behalf-of'
paths./user/webhooks/parse/settings/{hostname}.patch.produces.length: 1
paths./user/webhooks/parse/settings/{hostname}.patch.produces[0]: application/json
paths./user/webhooks/parse/settings/{hostname}.patch.responses.200.description: ""
paths./user/webhooks/parse/settings/{hostname}.patch.responses.200.examples.application/json.hostname: mail.mydomain.com
paths./user/webhooks/parse/settings/{hostname}.patch.responses.200.examples.application/json.send_raw: true
paths./user/webhooks/parse/settings/{hostname}.patch.responses.200.examples.application/json.spam_check: true
paths./user/webhooks/parse/settings/{hostname}.patch.responses.200.examples.application/json.url: http://mydomain.com/parse
paths./user/webhooks/parse/settings/{hostname}.patch.responses.200.schema.$ref: '#/definitions/parse-setting'
paths./user/webhooks/parse/settings/{hostname}.patch.security.length: 1
paths./user/webhooks/parse/settings/{hostname}.patch.security[0].Authorization.length: 0
paths./user/webhooks/parse/settings/{hostname}.patch.summary: Update a parse setting
paths./user/webhooks/parse/settings/{hostname}.patch.tags.length: 1
paths./user/webhooks/parse/settings/{hostname}.patch.tags[0]: Settings - Inbound Parse
paths./user/webhooks/parse/stats.get.description: |-
  **This endpoint allows you to retrieve the statistics for your Parse Webhook useage.**

  SendGrid's Inbound Parse Webhook allows you to parse the contents and attachments of incomming emails. The Parse API can then POST the parsed emails to a URL that you specify. The Inbound Parse Webhook cannot parse messages greater than 20MB in size, including all attachments.

  There are a number of pre-made integrations for the SendGrid Parse Webhook which make processing events easy. You can find these integrations in the [Library Index](https://sendgrid.com/docs/Integrate/libraries.html#-Webhook-Libraries).
paths./user/webhooks/parse/stats.get.operationId: GET_user-webhooks-parse-stats
paths./user/webhooks/parse/stats.get.parameters.length: 6
paths./user/webhooks/parse/stats.get.parameters[0].description: The number of statistics
  to return on each page.
paths./user/webhooks/parse/stats.get.parameters[0].in: query
paths./user/webhooks/parse/stats.get.parameters[0].name: limit
paths./user/webhooks/parse/stats.get.parameters[0].required: false
paths./user/webhooks/parse/stats.get.parameters[0].type: string
paths./user/webhooks/parse/stats.get.parameters[1].description: The number of statistics
  to skip.
paths./user/webhooks/parse/stats.get.parameters[1].in: query
paths./user/webhooks/parse/stats.get.parameters[1].name: offset
paths./user/webhooks/parse/stats.get.parameters[1].required: false
paths./user/webhooks/parse/stats.get.parameters[1].type: string
paths./user/webhooks/parse/stats.get.parameters[2].description: 'How you would like
  the statistics to by grouped. '
paths./user/webhooks/parse/stats.get.parameters[2].enum.length: 3
paths./user/webhooks/parse/stats.get.parameters[2].enum[0]: day
paths./user/webhooks/parse/stats.get.parameters[2].enum[1]: week
paths./user/webhooks/parse/stats.get.parameters[2].enum[2]: month
paths./user/webhooks/parse/stats.get.parameters[2].in: query
paths./user/webhooks/parse/stats.get.parameters[2].name: aggregated_by
paths./user/webhooks/parse/stats.get.parameters[2].required: false
paths./user/webhooks/parse/stats.get.parameters[2].type: string
paths./user/webhooks/parse/stats.get.parameters[3].description: The starting date
  of the statistics you want to retrieve. Must be in the format YYYY-MM-DD
paths./user/webhooks/parse/stats.get.parameters[3].in: query
paths./user/webhooks/parse/stats.get.parameters[3].name: start_date
paths./user/webhooks/parse/stats.get.parameters[3].required: true
paths./user/webhooks/parse/stats.get.parameters[3].type: string
paths./user/webhooks/parse/stats.get.parameters[4].default: The day the request is
  made.
paths./user/webhooks/parse/stats.get.parameters[4].description: The end date of the
  statistics you want to retrieve. Must be in the format YYYY-MM-DD
paths./user/webhooks/parse/stats.get.parameters[4].in: query
paths./user/webhooks/parse/stats.get.parameters[4].name: end_date
paths./user/webhooks/parse/stats.get.parameters[4].required: false
paths./user/webhooks/parse/stats.get.parameters[4].type: string
paths./user/webhooks/parse/stats.get.parameters[5].$ref: '#/parameters/trait:onBehalfOfSubuser:on-behalf-of'
paths./user/webhooks/parse/stats.get.produces.length: 1
paths./user/webhooks/parse/stats.get.produces[0]: application/json
paths./user/webhooks/parse/stats.get.responses.200.description: ""
paths./user/webhooks/parse/stats.get.responses.200.examples.application/json.length: 31
paths./user/webhooks/parse/stats.get.responses.200.examples.application/json[0].date: 2015-10-11
paths./user/webhooks/parse/stats.get.responses.200.examples.application/json[0].stats.length: 1
paths./user/webhooks/parse/stats.get.responses.200.examples.application/json[0].stats[0].metrics.received: 0
paths./user/webhooks/parse/stats.get.responses.200.examples.application/json[1].date: 2015-10-12
paths./user/webhooks/parse/stats.get.responses.200.examples.application/json[1].stats.length: 1
paths./user/webhooks/parse/stats.get.responses.200.examples.application/json[1].stats[0].metrics.received: 0
paths./user/webhooks/parse/stats.get.responses.200.examples.application/json[2].date: 2015-10-13
paths./user/webhooks/parse/stats.get.responses.200.examples.application/json[2].stats.length: 1
paths./user/webhooks/parse/stats.get.responses.200.examples.application/json[2].stats[0].metrics.received: 0
paths./user/webhooks/parse/stats.get.responses.200.examples.application/json[3].date: 2015-10-14
paths./user/webhooks/parse/stats.get.responses.200.examples.application/json[3].stats.length: 1
paths./user/webhooks/parse/stats.get.responses.200.examples.application/json[3].stats[0].metrics.received: 0
paths./user/webhooks/parse/stats.get.responses.200.examples.application/json[4].date: 2015-10-15
paths./user/webhooks/parse/stats.get.responses.200.examples.application/json[4].stats.length: 1
paths./user/webhooks/parse/stats.get.responses.200.examples.application/json[4].stats[0].metrics.received: 0
paths./user/webhooks/parse/stats.get.responses.200.examples.application/json[5].date: 2015-10-16
paths./user/webhooks/parse/stats.get.responses.200.examples.application/json[5].stats.length: 1
paths./user/webhooks/parse/stats.get.responses.200.examples.application/json[5].stats[0].metrics.received: 0
paths./user/webhooks/parse/stats.get.responses.200.examples.application/json[6].date: 2015-10-17
paths./user/webhooks/parse/stats.get.responses.200.examples.application/json[6].stats.length: 1
paths./user/webhooks/parse/stats.get.responses.200.examples.application/json[6].stats[0].metrics.received: 0
paths./user/webhooks/parse/stats.get.responses.200.examples.application/json[7].date: 2015-10-18
paths./user/webhooks/parse/stats.get.responses.200.examples.application/json[7].stats.length: 1
paths./user/webhooks/parse/stats.get.responses.200.examples.application/json[7].stats[0].metrics.received: 0
paths./user/webhooks/parse/stats.get.responses.200.examples.application/json[8].date: 2015-10-19
paths./user/webhooks/parse/stats.get.responses.200.examples.application/json[8].stats.length: 1
paths./user/webhooks/parse/stats.get.responses.200.examples.application/json[8].stats[0].metrics.received: 0
paths./user/webhooks/parse/stats.get.responses.200.examples.application/json[9].date: 2015-10-20
paths./user/webhooks/parse/stats.get.responses.200.examples.application/json[9].stats.length: 1
paths./user/webhooks/parse/stats.get.responses.200.examples.application/json[9].stats[0].metrics.received: 0
paths./user/webhooks/parse/stats.get.responses.200.examples.application/json[10].date: 2015-10-21
paths./user/webhooks/parse/stats.get.responses.200.examples.application/json[10].stats.length: 1
paths./user/webhooks/parse/stats.get.responses.200.examples.application/json[10].stats[0].metrics.received: 0
paths./user/webhooks/parse/stats.get.responses.200.examples.application/json[11].date: 2015-10-22
paths./user/webhooks/parse/stats.get.responses.200.examples.application/json[11].stats.length: 1
paths./user/webhooks/parse/stats.get.responses.200.examples.application/json[11].stats[0].metrics.received: 0
paths./user/webhooks/parse/stats.get.responses.200.examples.application/json[12].date: 2015-10-23
paths./user/webhooks/parse/stats.get.responses.200.examples.application/json[12].stats.length: 1
paths./user/webhooks/parse/stats.get.responses.200.examples.application/json[12].stats[0].metrics.received: 0
paths./user/webhooks/parse/stats.get.responses.200.examples.application/json[13].date: 2015-10-24
paths./user/webhooks/parse/stats.get.responses.200.examples.application/json[13].stats.length: 1
paths./user/webhooks/parse/stats.get.responses.200.examples.application/json[13].stats[0].metrics.received: 0
paths./user/webhooks/parse/stats.get.responses.200.examples.application/json[14].date: 2015-10-25
paths./user/webhooks/parse/stats.get.responses.200.examples.application/json[14].stats.length: 1
paths./user/webhooks/parse/stats.get.responses.200.examples.application/json[14].stats[0].metrics.received: 0
paths./user/webhooks/parse/stats.get.responses.200.examples.application/json[15].date: 2015-10-26
paths./user/webhooks/parse/stats.get.responses.200.examples.application/json[15].stats.length: 1
paths./user/webhooks/parse/stats.get.responses.200.examples.application/json[15].stats[0].metrics.received: 0
paths./user/webhooks/parse/stats.get.responses.200.examples.application/json[16].date: 2015-10-27
paths./user/webhooks/parse/stats.get.responses.200.examples.application/json[16].stats.length: 1
paths./user/webhooks/parse/stats.get.responses.200.examples.application/json[16].stats[0].metrics.received: 0
paths./user/webhooks/parse/stats.get.responses.200.examples.application/json[17].date: 2015-10-28
paths./user/webhooks/parse/stats.get.responses.200.examples.application/json[17].stats.length: 1
paths./user/webhooks/parse/stats.get.responses.200.examples.application/json[17].stats[0].metrics.received: 0
paths./user/webhooks/parse/stats.get.responses.200.examples.application/json[18].date: 2015-10-29
paths./user/webhooks/parse/stats.get.responses.200.examples.application/json[18].stats.length: 1
paths./user/webhooks/parse/stats.get.responses.200.examples.application/json[18].stats[0].metrics.received: 0
paths./user/webhooks/parse/stats.get.responses.200.examples.application/json[19].date: 2015-10-30
paths./user/webhooks/parse/stats.get.responses.200.examples.application/json[19].stats.length: 1
paths./user/webhooks/parse/stats.get.responses.200.examples.application/json[19].stats[0].metrics.received: 0
paths./user/webhooks/parse/stats.get.responses.200.examples.application/json[20].date: 2015-10-31
paths./user/webhooks/parse/stats.get.responses.200.examples.application/json[20].stats.length: 1
paths./user/webhooks/parse/stats.get.responses.200.examples.application/json[20].stats[0].metrics.received: 0
paths./user/webhooks/parse/stats.get.responses.200.examples.application/json[21].date: 2015-11-01
paths./user/webhooks/parse/stats.get.responses.200.examples.application/json[21].stats.length: 1
paths./user/webhooks/parse/stats.get.responses.200.examples.application/json[21].stats[0].metrics.received: 0
paths./user/webhooks/parse/stats.get.responses.200.examples.application/json[22].date: 2015-11-02
paths./user/webhooks/parse/stats.get.responses.200.examples.application/json[22].stats.length: 1
paths./user/webhooks/parse/stats.get.responses.200.examples.application/json[22].stats[0].metrics.received: 0
paths./user/webhooks/parse/stats.get.responses.200.examples.application/json[23].date: 2015-11-03
paths./user/webhooks/parse/stats.get.responses.200.examples.application/json[23].stats.length: 1
paths./user/webhooks/parse/stats.get.responses.200.examples.application/json[23].stats[0].metrics.received: 0
paths./user/webhooks/parse/stats.get.responses.200.examples.application/json[24].date: 2015-11-04
paths./user/webhooks/parse/stats.get.responses.200.examples.application/json[24].stats.length: 1
paths./user/webhooks/parse/stats.get.responses.200.examples.application/json[24].stats[0].metrics.received: 0
paths./user/webhooks/parse/stats.get.responses.200.examples.application/json[25].date: 2015-11-05
paths./user/webhooks/parse/stats.get.responses.200.examples.application/json[25].stats.length: 1
paths./user/webhooks/parse/stats.get.responses.200.examples.application/json[25].stats[0].metrics.received: 0
paths./user/webhooks/parse/stats.get.responses.200.examples.application/json[26].date: 2015-11-06
paths./user/webhooks/parse/stats.get.responses.200.examples.application/json[26].stats.length: 1
paths./user/webhooks/parse/stats.get.responses.200.examples.application/json[26].stats[0].metrics.received: 0
paths./user/webhooks/parse/stats.get.responses.200.examples.application/json[27].date: 2015-11-07
paths./user/webhooks/parse/stats.get.responses.200.examples.application/json[27].stats.length: 1
paths./user/webhooks/parse/stats.get.responses.200.examples.application/json[27].stats[0].metrics.received: 0
paths./user/webhooks/parse/stats.get.responses.200.examples.application/json[28].date: 2015-11-08
paths./user/webhooks/parse/stats.get.responses.200.examples.application/json[28].stats.length: 1
paths./user/webhooks/parse/stats.get.responses.200.examples.application/json[28].stats[0].metrics.received: 0
paths./user/webhooks/parse/stats.get.responses.200.examples.application/json[29].date: 2015-11-09
paths./user/webhooks/parse/stats.get.responses.200.examples.application/json[29].stats.length: 1
paths./user/webhooks/parse/stats.get.responses.200.examples.application/json[29].stats[0].metrics.received: 0
paths./user/webhooks/parse/stats.get.responses.200.examples.application/json[30].date: 2015-11-10
paths./user/webhooks/parse/stats.get.responses.200.examples.application/json[30].stats.length: 1
paths./user/webhooks/parse/stats.get.responses.200.examples.application/json[30].stats[0].metrics.received: 0
paths./user/webhooks/parse/stats.get.responses.200.schema.items.properties.date.description: The
  date that the stats were collected.
paths./user/webhooks/parse/stats.get.responses.200.schema.items.properties.date.type: string
paths./user/webhooks/parse/stats.get.responses.200.schema.items.properties.stats.description: The
  Parse Webhook usage statistics.
? paths./user/webhooks/parse/stats.get.responses.200.schema.items.properties.stats.items.properties.metrics.properties.received.description
: The number of emails received and parsed by the Parse Webhook.
? paths./user/webhooks/parse/stats.get.responses.200.schema.items.properties.stats.items.properties.metrics.properties.received.type
: number
paths./user/webhooks/parse/stats.get.responses.200.schema.items.properties.stats.items.properties.metrics.required.length: 1
paths./user/webhooks/parse/stats.get.responses.200.schema.items.properties.stats.items.properties.metrics.required[0]: received
paths./user/webhooks/parse/stats.get.responses.200.schema.items.properties.stats.items.properties.metrics.type: object
paths./user/webhooks/parse/stats.get.responses.200.schema.items.properties.stats.items.type: object
paths./user/webhooks/parse/stats.get.responses.200.schema.items.properties.stats.type: array
paths./user/webhooks/parse/stats.get.responses.200.schema.items.required.length: 2
paths./user/webhooks/parse/stats.get.responses.200.schema.items.required[0]: date
paths./user/webhooks/parse/stats.get.responses.200.schema.items.required[1]: stats
paths./user/webhooks/parse/stats.get.responses.200.schema.items.type: object
paths./user/webhooks/parse/stats.get.responses.200.schema.type: array
paths./user/webhooks/parse/stats.get.security.length: 1
paths./user/webhooks/parse/stats.get.security[0].Authorization.length: 0
paths./user/webhooks/parse/stats.get.summary: Retrieves Inbound Parse Webhook statistics.
paths./user/webhooks/parse/stats.get.tags.length: 1
paths./user/webhooks/parse/stats.get.tags[0]: Webhooks
paths./whitelabel/domains.get.description: |-
  **This endpoint allows you to retrieve a list of all domain whitelabels you have created.**

  A domain whitelabel allows you to remove the “via” or “sent on behalf of” message that your recipients see when they read your emails. Whitelabeling a domain allows you to replace sendgrid.net with your personal sending domain. You will be required to create a subdomain so that SendGrid can generate the DNS records which you must give to your host provider. If you choose to use Automated Security, SendGrid will provide you with 3 CNAME records. If you turn Automated Security off, you will be given 2 TXT records and 1 MX record.

  For more information on whitelabeling, please see our [User Guide](https://sendgrid.com/docs/User_Guide/Settings/Whitelabel/index.html)
paths./whitelabel/domains.get.operationId: GET_whitelabel-domains
paths./whitelabel/domains.get.parameters.length: 6
paths./whitelabel/domains.get.parameters[0].description: Number of domains to return.
paths./whitelabel/domains.get.parameters[0].in: query
paths./whitelabel/domains.get.parameters[0].name: limit
paths./whitelabel/domains.get.parameters[0].type: integer
paths./whitelabel/domains.get.parameters[1].description: Paging offset.
paths./whitelabel/domains.get.parameters[1].in: query
paths./whitelabel/domains.get.parameters[1].name: offset
paths./whitelabel/domains.get.parameters[1].type: integer
paths./whitelabel/domains.get.parameters[2].description: Exclude subuser domains from
  the result.
paths./whitelabel/domains.get.parameters[2].in: query
paths./whitelabel/domains.get.parameters[2].name: exclude_subusers
paths./whitelabel/domains.get.parameters[2].type: boolean
paths./whitelabel/domains.get.parameters[3].description: The username associated with
  a whitelabel.
paths./whitelabel/domains.get.parameters[3].in: query
paths./whitelabel/domains.get.parameters[3].name: username
paths./whitelabel/domains.get.parameters[3].type: string
paths./whitelabel/domains.get.parameters[4].description: Search for domain whitelabels
  that match the given domain.
paths./whitelabel/domains.get.parameters[4].in: query
paths./whitelabel/domains.get.parameters[4].name: domain
paths./whitelabel/domains.get.parameters[4].type: string
paths./whitelabel/domains.get.parameters[5].$ref: '#/parameters/trait:onBehalfOfSubuser:on-behalf-of'
paths./whitelabel/domains.get.produces.length: 1
paths./whitelabel/domains.get.produces[0]: application/json
paths./whitelabel/domains.get.responses.200.description: ""
paths./whitelabel/domains.get.responses.200.examples.application/json.length: 2
paths./whitelabel/domains.get.responses.200.examples.application/json[0].automatic_security: true
paths./whitelabel/domains.get.responses.200.examples.application/json[0].custom_spf: true
paths./whitelabel/domains.get.responses.200.examples.application/json[0].default: true
paths./whitelabel/domains.get.responses.200.examples.application/json[0].dns.dkim1.data: s1._domainkey.u7.wl.sendgrid.net
paths./whitelabel/domains.get.responses.200.examples.application/json[0].dns.dkim1.host: s1._domainkey.example.com
paths./whitelabel/domains.get.responses.200.examples.application/json[0].dns.dkim1.type: cname
paths./whitelabel/domains.get.responses.200.examples.application/json[0].dns.dkim1.valid: true
paths./whitelabel/domains.get.responses.200.examples.application/json[0].dns.dkim2.data: s2._domainkey.u7.wl.sendgrid.net
paths./whitelabel/domains.get.responses.200.examples.application/json[0].dns.dkim2.host: s2._domainkey.example.com
paths./whitelabel/domains.get.responses.200.examples.application/json[0].dns.dkim2.type: cname
paths./whitelabel/domains.get.responses.200.examples.application/json[0].dns.dkim2.valid: true
paths./whitelabel/domains.get.responses.200.examples.application/json[0].dns.mail_cname.data: u7.wl.sendgrid.net
paths./whitelabel/domains.get.responses.200.examples.application/json[0].dns.mail_cname.host: mail.example.com
paths./whitelabel/domains.get.responses.200.examples.application/json[0].dns.mail_cname.type: cname
paths./whitelabel/domains.get.responses.200.examples.application/json[0].dns.mail_cname.valid: true
paths./whitelabel/domains.get.responses.200.examples.application/json[0].dns.spf.data: v=spf1
  include:u7.wl.sendgrid.net -all
paths./whitelabel/domains.get.responses.200.examples.application/json[0].dns.spf.host: example.com
paths./whitelabel/domains.get.responses.200.examples.application/json[0].dns.spf.type: txt
paths./whitelabel/domains.get.responses.200.examples.application/json[0].dns.spf.valid: true
paths./whitelabel/domains.get.responses.200.examples.application/json[0].domain: example.com
paths./whitelabel/domains.get.responses.200.examples.application/json[0].id: 1
paths./whitelabel/domains.get.responses.200.examples.application/json[0].ips.length: 2
paths./whitelabel/domains.get.responses.200.examples.application/json[0].ips[0]: 192.168.1.1
paths./whitelabel/domains.get.responses.200.examples.application/json[0].ips[1]: 192.168.1.2
paths./whitelabel/domains.get.responses.200.examples.application/json[0].legacy: false
paths./whitelabel/domains.get.responses.200.examples.application/json[0].subdomain: mail
paths./whitelabel/domains.get.responses.200.examples.application/json[0].user_id: 7
paths./whitelabel/domains.get.responses.200.examples.application/json[0].username: john@example.com
paths./whitelabel/domains.get.responses.200.examples.application/json[0].valid: true
paths./whitelabel/domains.get.responses.200.examples.application/json[1].automatic_security: true
paths./whitelabel/domains.get.responses.200.examples.application/json[1].custom_spf: false
paths./whitelabel/domains.get.responses.200.examples.application/json[1].default: true
paths./whitelabel/domains.get.responses.200.examples.application/json[1].dns.dkim.data: k=rsa;
  t=s; p=publicKey
paths./whitelabel/domains.get.responses.200.examples.application/json[1].dns.dkim.host: example2.com
paths./whitelabel/domains.get.responses.200.examples.application/json[1].dns.dkim.type: txt
paths./whitelabel/domains.get.responses.200.examples.application/json[1].dns.dkim.valid: false
paths./whitelabel/domains.get.responses.200.examples.application/json[1].dns.domain_spf.data: v=spf1
  include:news.example2.com -all
paths./whitelabel/domains.get.responses.200.examples.application/json[1].dns.domain_spf.host: example2.com
paths./whitelabel/domains.get.responses.200.examples.application/json[1].dns.domain_spf.type: txt
paths./whitelabel/domains.get.responses.200.examples.application/json[1].dns.domain_spf.valid: false
paths./whitelabel/domains.get.responses.200.examples.application/json[1].dns.mail_server.data: sendgrid.net
paths./whitelabel/domains.get.responses.200.examples.application/json[1].dns.mail_server.host: news.example2.com
paths./whitelabel/domains.get.responses.200.examples.application/json[1].dns.mail_server.type: mx
paths./whitelabel/domains.get.responses.200.examples.application/json[1].dns.mail_server.valid: false
paths./whitelabel/domains.get.responses.200.examples.application/json[1].dns.subdomain_spf.data: v=spf1
  include:sendgrid.net ~all
paths./whitelabel/domains.get.responses.200.examples.application/json[1].dns.subdomain_spf.host: news.example2.com
paths./whitelabel/domains.get.responses.200.examples.application/json[1].dns.subdomain_spf.type: txt
paths./whitelabel/domains.get.responses.200.examples.application/json[1].dns.subdomain_spf.valid: false
paths./whitelabel/domains.get.responses.200.examples.application/json[1].domain: example2.com
paths./whitelabel/domains.get.responses.200.examples.application/json[1].id: 2
paths./whitelabel/domains.get.responses.200.examples.application/json[1].ips.length: 0
paths./whitelabel/domains.get.responses.200.examples.application/json[1].legacy: false
paths./whitelabel/domains.get.responses.200.examples.application/json[1].subdomain: news
paths./whitelabel/domains.get.responses.200.examples.application/json[1].user_id: 8
paths./whitelabel/domains.get.responses.200.examples.application/json[1].username: jane@example2.com
paths./whitelabel/domains.get.responses.200.examples.application/json[1].valid: false
paths./whitelabel/domains.get.responses.200.schema.items.properties.automatic_security.description: Indicates
  if this whitelabel uses automated security.
paths./whitelabel/domains.get.responses.200.schema.items.properties.automatic_security.type: boolean
paths./whitelabel/domains.get.responses.200.schema.items.properties.custom_spf.description: Indicates
  if this whitelabel has custom SPF.
paths./whitelabel/domains.get.responses.200.schema.items.properties.custom_spf.type: boolean
paths./whitelabel/domains.get.responses.200.schema.items.properties.default.description: Indicates
  if this whitelabel has been set as the default whitelabel.
paths./whitelabel/domains.get.responses.200.schema.items.properties.default.type: boolean
paths./whitelabel/domains.get.responses.200.schema.items.properties.dns.description: The
  DNS records for this whitelabel that are used for authenticating the sending domain.
paths./whitelabel/domains.get.responses.200.schema.items.properties.dns.properties.dkim.description: The
  DNS record used when creating the DKIM signature.
paths./whitelabel/domains.get.responses.200.schema.items.properties.dns.properties.dkim.properties.data.description: The
  DNS record.
paths./whitelabel/domains.get.responses.200.schema.items.properties.dns.properties.dkim.properties.data.type: string
paths./whitelabel/domains.get.responses.200.schema.items.properties.dns.properties.dkim.properties.host.description: The
  domain that these DNS records will be applied to.
paths./whitelabel/domains.get.responses.200.schema.items.properties.dns.properties.dkim.properties.host.format: hostname
paths./whitelabel/domains.get.responses.200.schema.items.properties.dns.properties.dkim.properties.host.type: string
paths./whitelabel/domains.get.responses.200.schema.items.properties.dns.properties.dkim.properties.type.description: The
  type of DNS record.
paths./whitelabel/domains.get.responses.200.schema.items.properties.dns.properties.dkim.properties.type.enum.length: 3
paths./whitelabel/domains.get.responses.200.schema.items.properties.dns.properties.dkim.properties.type.enum[0]: cname
paths./whitelabel/domains.get.responses.200.schema.items.properties.dns.properties.dkim.properties.type.enum[1]: mx
paths./whitelabel/domains.get.responses.200.schema.items.properties.dns.properties.dkim.properties.type.enum[2]: txt
paths./whitelabel/domains.get.responses.200.schema.items.properties.dns.properties.dkim.properties.type.type: string
paths./whitelabel/domains.get.responses.200.schema.items.properties.dns.properties.dkim.properties.valid.description: Indicates
  if this DNS record is valid.
paths./whitelabel/domains.get.responses.200.schema.items.properties.dns.properties.dkim.properties.valid.type: boolean
paths./whitelabel/domains.get.responses.200.schema.items.properties.dns.properties.dkim.type: object
paths./whitelabel/domains.get.responses.200.schema.items.properties.dns.properties.mail_server.description: Designates
  which mail server is responsible for accepting messages from a domain.
paths./whitelabel/domains.get.responses.200.schema.items.properties.dns.properties.mail_server.properties.data.description: The
  mail server responsible for accepting messages.
paths./whitelabel/domains.get.responses.200.schema.items.properties.dns.properties.mail_server.properties.data.type: string
paths./whitelabel/domains.get.responses.200.schema.items.properties.dns.properties.mail_server.properties.host.description: The
  domain sending the messages.
paths./whitelabel/domains.get.responses.200.schema.items.properties.dns.properties.mail_server.properties.host.type: string
paths./whitelabel/domains.get.responses.200.schema.items.properties.dns.properties.mail_server.properties.type.description: The
  type of DNS record.
paths./whitelabel/domains.get.responses.200.schema.items.properties.dns.properties.mail_server.properties.type.type: string
paths./whitelabel/domains.get.responses.200.schema.items.properties.dns.properties.mail_server.properties.valid.description: Indicates
  if this is a valid DNS record with no conflicts.
paths./whitelabel/domains.get.responses.200.schema.items.properties.dns.properties.mail_server.properties.valid.type: boolean
paths./whitelabel/domains.get.responses.200.schema.items.properties.dns.properties.mail_server.type: object
paths./whitelabel/domains.get.responses.200.schema.items.properties.dns.properties.subdomain_spf.description: The
  SPF record for the subdomain used to create this whitelabel.
paths./whitelabel/domains.get.responses.200.schema.items.properties.dns.properties.subdomain_spf.properties.data.description: The
  SPF record.
paths./whitelabel/domains.get.responses.200.schema.items.properties.dns.properties.subdomain_spf.properties.data.type: string
paths./whitelabel/domains.get.responses.200.schema.items.properties.dns.properties.subdomain_spf.properties.host.description: The
  domain that this SPF record will be used to authenticate.
paths./whitelabel/domains.get.responses.200.schema.items.properties.dns.properties.subdomain_spf.properties.host.type: string
paths./whitelabel/domains.get.responses.200.schema.items.properties.dns.properties.subdomain_spf.properties.type.description: The
  type of data in the SPF record.
paths./whitelabel/domains.get.responses.200.schema.items.properties.dns.properties.subdomain_spf.properties.type.type: string
paths./whitelabel/domains.get.responses.200.schema.items.properties.dns.properties.subdomain_spf.properties.valid.description: Indicates
  if the SPF record is valid.
paths./whitelabel/domains.get.responses.200.schema.items.properties.dns.properties.subdomain_spf.properties.valid.type: boolean
paths./whitelabel/domains.get.responses.200.schema.items.properties.dns.properties.subdomain_spf.type: object
paths./whitelabel/domains.get.responses.200.schema.items.properties.dns.type: object
paths./whitelabel/domains.get.responses.200.schema.items.properties.domain.description: The
  domain that this whitelabel was created for.
paths./whitelabel/domains.get.responses.200.schema.items.properties.domain.type: string
paths./whitelabel/domains.get.responses.200.schema.items.properties.id.description: The
  ID of the domain whitelabel.
paths./whitelabel/domains.get.responses.200.schema.items.properties.id.type: number
paths./whitelabel/domains.get.responses.200.schema.items.properties.ips.description: The
  IPs that will be included in the custom SPF record.
paths./whitelabel/domains.get.responses.200.schema.items.properties.ips.items.type: string
paths./whitelabel/domains.get.responses.200.schema.items.properties.ips.type: array
paths./whitelabel/domains.get.responses.200.schema.items.properties.legacy.description: Indicates
  if this is whitelabel was created with the legacy whitelabel tool.
paths./whitelabel/domains.get.responses.200.schema.items.properties.legacy.type: boolean
paths./whitelabel/domains.get.responses.200.schema.items.properties.subdomain.description: The
  subdomain created for this domain whitelabel.
paths./whitelabel/domains.get.responses.200.schema.items.properties.subdomain.type: string
paths./whitelabel/domains.get.responses.200.schema.items.properties.user_id.description: The
  ID of the user that this whitelabel will be associated with.
paths./whitelabel/domains.get.responses.200.schema.items.properties.user_id.type: number
paths./whitelabel/domains.get.responses.200.schema.items.properties.username.description: The
  username that this whitelabel is associated with.
paths./whitelabel/domains.get.responses.200.schema.items.properties.username.type: string
paths./whitelabel/domains.get.responses.200.schema.items.properties.valid.description: Indicates
  if this is a valid whitelabel or not.
paths./whitelabel/domains.get.responses.200.schema.items.properties.valid.type: boolean
paths./whitelabel/domains.get.responses.200.schema.items.required.length: 12
paths./whitelabel/domains.get.responses.200.schema.items.required[0]: id
paths./whitelabel/domains.get.responses.200.schema.items.required[1]: user_id
paths./whitelabel/domains.get.responses.200.schema.items.required[2]: subdomain
paths./whitelabel/domains.get.responses.200.schema.items.required[3]: domain
paths./whitelabel/domains.get.responses.200.schema.items.required[4]: username
paths./whitelabel/domains.get.responses.200.schema.items.required[5]: ips
paths./whitelabel/domains.get.responses.200.schema.items.required[6]: custom_spf
paths./whitelabel/domains.get.responses.200.schema.items.required[7]: default
paths./whitelabel/domains.get.responses.200.schema.items.required[8]: legacy
paths./whitelabel/domains.get.responses.200.schema.items.required[9]: automatic_security
paths./whitelabel/domains.get.responses.200.schema.items.required[10]: valid
paths./whitelabel/domains.get.responses.200.schema.items.required[11]: dns
paths./whitelabel/domains.get.responses.200.schema.items.type: object
paths./whitelabel/domains.get.responses.200.schema.type: array
paths./whitelabel/domains.get.security.length: 1
paths./whitelabel/domains.get.security[0].Authorization.length: 0
paths./whitelabel/domains.get.summary: List all domain whitelabels.
paths./whitelabel/domains.get.tags.length: 1
paths./whitelabel/domains.get.tags[0]: Whitelabel - Domains
paths./whitelabel/domains.post.consumes.length: 1
paths./whitelabel/domains.post.consumes[0]: application/json
paths./whitelabel/domains.post.description: |-
  **This endpoint allows you to create a whitelabel for one of your domains.**

  If you are creating a domain whitelabel that you would like a subuser to use, you have two options:
  1. Use the "username" parameter. This allows you to create a whitelabel on behalf of your subuser. This means the subuser is able to see and modify the created whitelabel.
  2. Use the Association workflow (see Associate Domain section). This allows you to assign a whitelabel created by the parent to a subuser. This means the subuser will default to the assigned whitelabel, but will not be able to see or modify that whitelabel. However, if the subuser creates their own whitelabel it will overwrite the assigned whitelabel.

  A domain whitelabel allows you to remove the “via” or “sent on behalf of” message that your recipients see when they read your emails. Whitelabeling a domain allows you to replace sendgrid.net with your personal sending domain. You will be required to create a subdomain so that SendGrid can generate the DNS records which you must give to your host provider. If you choose to use Automated Security, SendGrid will provide you with 3 CNAME records. If you turn Automated Security off, you will be given 2 TXT records and 1 MX record.

  For more information on whitelabeling, please see our [User Guide](https://sendgrid.com/docs/User_Guide/Settings/Whitelabel/index.html)
paths./whitelabel/domains.post.operationId: POST_whitelabel-domains
paths./whitelabel/domains.post.parameters.length: 2
paths./whitelabel/domains.post.parameters[0].in: body
paths./whitelabel/domains.post.parameters[0].name: body
paths./whitelabel/domains.post.parameters[0].schema.example.automatic_security: false
paths./whitelabel/domains.post.parameters[0].schema.example.custom_spf: true
paths./whitelabel/domains.post.parameters[0].schema.example.default: true
paths./whitelabel/domains.post.parameters[0].schema.example.domain: example.com
paths./whitelabel/domains.post.parameters[0].schema.example.ips.length: 2
paths./whitelabel/domains.post.parameters[0].schema.example.ips[0]: 192.168.1.1
paths./whitelabel/domains.post.parameters[0].schema.example.ips[1]: 192.168.1.2
paths./whitelabel/domains.post.parameters[0].schema.example.subdomain: news
paths./whitelabel/domains.post.parameters[0].schema.example.username: john@example.com
paths./whitelabel/domains.post.parameters[0].schema.properties.automatic_security.description: Whether
  to allow SendGrid to manage your SPF records, DKIM keys, and DKIM key rotation.
paths./whitelabel/domains.post.parameters[0].schema.properties.automatic_security.type: boolean
paths./whitelabel/domains.post.parameters[0].schema.properties.custom_spf.description: Specify
  whether to use a custom SPF or allow SendGrid to manage your SPF. This option is
  only available to domain whitelabels setup for manual security.
paths./whitelabel/domains.post.parameters[0].schema.properties.custom_spf.type: boolean
paths./whitelabel/domains.post.parameters[0].schema.properties.default.description: Whether
  to use this whitelabel as the fallback if no domain whitelabels match the sender's
  domain.
paths./whitelabel/domains.post.parameters[0].schema.properties.default.type: boolean
paths./whitelabel/domains.post.parameters[0].schema.properties.domain.description: Domain
  being whitelabeled.
paths./whitelabel/domains.post.parameters[0].schema.properties.domain.type: string
paths./whitelabel/domains.post.parameters[0].schema.properties.ips.description: The
  IP addresses that will be included in the custom SPF record for this whitelabel.
paths./whitelabel/domains.post.parameters[0].schema.properties.ips.items.type: string
paths./whitelabel/domains.post.parameters[0].schema.properties.ips.type: array
paths./whitelabel/domains.post.parameters[0].schema.properties.subdomain.description: The
  subdomain to use for this domain whitelabel.
paths./whitelabel/domains.post.parameters[0].schema.properties.subdomain.type: string
paths./whitelabel/domains.post.parameters[0].schema.properties.username.description: The
  username that this whitelabel will be associated with.
paths./whitelabel/domains.post.parameters[0].schema.properties.username.type: string
paths./whitelabel/domains.post.parameters[0].schema.required.length: 2
paths./whitelabel/domains.post.parameters[0].schema.required[0]: domain
paths./whitelabel/domains.post.parameters[0].schema.required[1]: subdomain
paths./whitelabel/domains.post.parameters[0].schema.type: object
paths./whitelabel/domains.post.parameters[1].$ref: '#/parameters/trait:onBehalfOfSubuser:on-behalf-of'
paths./whitelabel/domains.post.produces.length: 1
paths./whitelabel/domains.post.produces[0]: application/json
paths./whitelabel/domains.post.responses.201.description: ""
paths./whitelabel/domains.post.responses.201.examples.application/json.automatic_security: true
paths./whitelabel/domains.post.responses.201.examples.application/json.custom_spf: false
paths./whitelabel/domains.post.responses.201.examples.application/json.default: true
paths./whitelabel/domains.post.responses.201.examples.application/json.dns.dkim1.data: s1.domainkey.u1446226.wl.sendgrid.net
paths./whitelabel/domains.post.responses.201.examples.application/json.dns.dkim1.host: s1._domainkey.example.com
paths./whitelabel/domains.post.responses.201.examples.application/json.dns.dkim1.type: cname
paths./whitelabel/domains.post.responses.201.examples.application/json.dns.dkim1.valid: false
paths./whitelabel/domains.post.responses.201.examples.application/json.dns.dkim2.data: s2.domainkey.u1446226.wl.sendgrid.net
paths./whitelabel/domains.post.responses.201.examples.application/json.dns.dkim2.host: s2._domainkey.example.com
paths./whitelabel/domains.post.responses.201.examples.application/json.dns.dkim2.type: cname
paths./whitelabel/domains.post.responses.201.examples.application/json.dns.dkim2.valid: false
paths./whitelabel/domains.post.responses.201.examples.application/json.dns.mail_cname.data: u1446226.wl.sendgrid.net
paths./whitelabel/domains.post.responses.201.examples.application/json.dns.mail_cname.host: example.example.com
paths./whitelabel/domains.post.responses.201.examples.application/json.dns.mail_cname.type: cname
paths./whitelabel/domains.post.responses.201.examples.application/json.dns.mail_cname.valid: false
paths./whitelabel/domains.post.responses.201.examples.application/json.domain: example.com
paths./whitelabel/domains.post.responses.201.examples.application/json.id: 302183
paths./whitelabel/domains.post.responses.201.examples.application/json.ips.length: 0
paths./whitelabel/domains.post.responses.201.examples.application/json.legacy: false
paths./whitelabel/domains.post.responses.201.examples.application/json.subdomain: example
paths./whitelabel/domains.post.responses.201.examples.application/json.user_id: 1.446226e+06
paths./whitelabel/domains.post.responses.201.examples.application/json.username: mbernier
paths./whitelabel/domains.post.responses.201.examples.application/json.valid: false
paths./whitelabel/domains.post.responses.201.schema.$ref: '#/definitions/whitelabel::domain'
paths./whitelabel/domains.post.security.length: 1
paths./whitelabel/domains.post.security[0].Authorization.length: 0
paths./whitelabel/domains.post.summary: Create a domain whitelabel.
paths./whitelabel/domains.post.tags.length: 1
paths./whitelabel/domains.post.tags[0]: Whitelabel - Domains
paths./whitelabel/domains/{domain_id}.delete.description: |-
  **This endpoint allows you to delete a domain whitelabel.**

  A domain whitelabel allows you to remove the “via” or “sent on behalf of” message that your recipients see when they read your emails. Whitelabeling a domain allows you to replace sendgrid.net with your personal sending domain. You will be required to create a subdomain so that SendGrid can generate the DNS records which you must give to your host provider. If you choose to use Automated Security, SendGrid will provide you with 3 CNAME records. If you turn Automated Security off, you will be given 2 TXT records and 1 MX record.

  For more information on whitelabeling, please see our [User Guide](https://sendgrid.com/docs/User_Guide/Settings/Whitelabel/index.html)
paths./whitelabel/domains/{domain_id}.delete.operationId: DELETE_whitelabel-domains-domain_id
paths./whitelabel/domains/{domain_id}.delete.parameters.length: 2
paths./whitelabel/domains/{domain_id}.delete.parameters[0].in: body
paths./whitelabel/domains/{domain_id}.delete.parameters[0].name: body
paths./whitelabel/domains/{domain_id}.delete.parameters[0].schema.type: "null"
paths./whitelabel/domains/{domain_id}.delete.parameters[1].$ref: '#/parameters/trait:onBehalfOfSubuser:on-behalf-of'
paths./whitelabel/domains/{domain_id}.delete.responses.204.description: ""
paths./whitelabel/domains/{domain_id}.delete.responses.204.schema.type: object
paths./whitelabel/domains/{domain_id}.delete.security.length: 1
paths./whitelabel/domains/{domain_id}.delete.security[0].Authorization.length: 0
paths./whitelabel/domains/{domain_id}.delete.summary: Delete a domain whitelabel.
paths./whitelabel/domains/{domain_id}.delete.tags.length: 1
paths./whitelabel/domains/{domain_id}.delete.tags[0]: Whitelabel - Domains
paths./whitelabel/domains/{domain_id}.get.description: |-
  **This endpoint allows you to retrieve a specific domain whitelabel.**

  A domain whitelabel allows you to remove the “via” or “sent on behalf of” message that your recipients see when they read your emails. Whitelabeling a domain allows you to replace sendgrid.net with your personal sending domain. You will be required to create a subdomain so that SendGrid can generate the DNS records which you must give to your host provider. If you choose to use Automated Security, SendGrid will provide you with 3 CNAME records. If you turn Automated Security off, you will be given 2 TXT records and 1 MX record.

  For more information on whitelabeling, please see our [User Guide](https://sendgrid.com/docs/User_Guide/Settings/Whitelabel/index.html)
paths./whitelabel/domains/{domain_id}.get.operationId: GET_whitelabel-domains-domain_id
paths./whitelabel/domains/{domain_id}.get.parameters.length: 1
paths./whitelabel/domains/{domain_id}.get.parameters[0].$ref: '#/parameters/trait:onBehalfOfSubuser:on-behalf-of'
paths./whitelabel/domains/{domain_id}.get.produces.length: 1
paths./whitelabel/domains/{domain_id}.get.produces[0]: application/json
paths./whitelabel/domains/{domain_id}.get.responses.200.description: ""
paths./whitelabel/domains/{domain_id}.get.responses.200.schema.$ref: '#/definitions/whitelabel::domain'
paths./whitelabel/domains/{domain_id}.get.security.length: 1
paths./whitelabel/domains/{domain_id}.get.security[0].Authorization.length: 0
paths./whitelabel/domains/{domain_id}.get.summary: Retrieve a domain whitelabel.
paths./whitelabel/domains/{domain_id}.get.tags.length: 1
paths./whitelabel/domains/{domain_id}.get.tags[0]: Whitelabel - Domains
paths./whitelabel/domains/{domain_id}.parameters.length: 1
paths./whitelabel/domains/{domain_id}.parameters[0].in: path
paths./whitelabel/domains/{domain_id}.parameters[0].name: domain_id
paths./whitelabel/domains/{domain_id}.parameters[0].required: true
paths./whitelabel/domains/{domain_id}.parameters[0].type: string
paths./whitelabel/domains/{domain_id}.patch.consumes.length: 1
paths./whitelabel/domains/{domain_id}.patch.consumes[0]: application/json
paths./whitelabel/domains/{domain_id}.patch.description: |-
  **This endpoint allows you to update the settings for a domain whitelabel.**

  A domain whitelabel allows you to remove the “via” or “sent on behalf of” message that your recipients see when they read your emails. Whitelabeling a domain allows you to replace sendgrid.net with your personal sending domain. You will be required to create a subdomain so that SendGrid can generate the DNS records which you must give to your host provider. If you choose to use Automated Security, SendGrid will provide you with 3 CNAME records. If you turn Automated Security off, you will be given 2 TXT records and 1 MX record.

  For more information on whitelabeling, please see our [User Guide](https://sendgrid.com/docs/User_Guide/Settings/Whitelabel/index.html)
paths./whitelabel/domains/{domain_id}.patch.operationId: PATCH_whitelabel-domains-domain_id
paths./whitelabel/domains/{domain_id}.patch.parameters.length: 2
paths./whitelabel/domains/{domain_id}.patch.parameters[0].in: body
paths./whitelabel/domains/{domain_id}.patch.parameters[0].name: body
paths./whitelabel/domains/{domain_id}.patch.parameters[0].schema.example.custom_spf: true
paths./whitelabel/domains/{domain_id}.patch.parameters[0].schema.example.default: false
paths./whitelabel/domains/{domain_id}.patch.parameters[0].schema.properties.custom_spf.default: false
paths./whitelabel/domains/{domain_id}.patch.parameters[0].schema.properties.custom_spf.description: Indicates
  whether to generate a custom SPF record for manual security.
paths./whitelabel/domains/{domain_id}.patch.parameters[0].schema.properties.custom_spf.type: boolean
paths./whitelabel/domains/{domain_id}.patch.parameters[0].schema.properties.default.default: false
paths./whitelabel/domains/{domain_id}.patch.parameters[0].schema.properties.default.description: Indicates
  whether this domain whitelabel should be considered the default.
paths./whitelabel/domains/{domain_id}.patch.parameters[0].schema.properties.default.type: boolean
paths./whitelabel/domains/{domain_id}.patch.parameters[0].schema.type: object
paths./whitelabel/domains/{domain_id}.patch.parameters[1].$ref: '#/parameters/trait:onBehalfOfSubuser:on-behalf-of'
paths./whitelabel/domains/{domain_id}.patch.produces.length: 1
paths./whitelabel/domains/{domain_id}.patch.produces[0]: application/json
paths./whitelabel/domains/{domain_id}.patch.responses.200.description: ""
paths./whitelabel/domains/{domain_id}.patch.responses.200.schema.properties.custom_spf false.description: Indicates
  whether to generate a custom SPF record for manual security.  Defaults to false.
paths./whitelabel/domains/{domain_id}.patch.responses.200.schema.properties.custom_spf false.type: boolean
paths./whitelabel/domains/{domain_id}.patch.responses.200.schema.properties.default false.description: Inidcates
  whether this domain whitelabel should be considered the default.  Defaults to false.
paths./whitelabel/domains/{domain_id}.patch.responses.200.schema.properties.default false.type: boolean
paths./whitelabel/domains/{domain_id}.patch.responses.200.schema.title: Update a Domain
  response
paths./whitelabel/domains/{domain_id}.patch.responses.200.schema.type: object
paths./whitelabel/domains/{domain_id}.patch.security.length: 1
paths./whitelabel/domains/{domain_id}.patch.security[0].Authorization.length: 0
paths./whitelabel/domains/{domain_id}.patch.summary: Update a domain whitelabel.
paths./whitelabel/domains/{domain_id}.patch.tags.length: 1
paths./whitelabel/domains/{domain_id}.patch.tags[0]: Whitelabel - Domains
paths./whitelabel/domains/{domain_id}/subuser.parameters.length: 1
paths./whitelabel/domains/{domain_id}/subuser.parameters[0].in: path
paths./whitelabel/domains/{domain_id}/subuser.parameters[0].name: domain_id
paths./whitelabel/domains/{domain_id}/subuser.parameters[0].required: true
paths./whitelabel/domains/{domain_id}/subuser.parameters[0].type: string
paths./whitelabel/domains/{domain_id}/subuser.post.consumes.length: 1
paths./whitelabel/domains/{domain_id}/subuser.post.consumes[0]: application/json
paths./whitelabel/domains/{domain_id}/subuser.post.description: |-
  **This endpoint allows you to associate a specific domain whitelabel with a subuser.**

  A domain whitelabel allows you to remove the “via” or “sent on behalf of” message that your recipients see when they read your emails. Whitelabeling a domain allows you to replace sendgrid.net with your personal sending domain. You will be required to create a subdomain so that SendGrid can generate the DNS records which you must give to your host provider. If you choose to use Automated Security, SendGrid will provide you with 3 CNAME records. If you turn Automated Security off, you will be given 2 TXT records and 1 MX record.

  Domain whitelabels can be associated with (i.e. assigned to) subusers from a parent account. This functionality allows subusers to send mail using their parent's whitelabels. To associate a whitelabel with a subuser, the parent account must first create the whitelabel and validate it. The the parent may then associate the whitelabel via the subuser management tools.

  For more information on whitelabeling, please see our [User Guide](https://sendgrid.com/docs/User_Guide/Settings/Whitelabel/index.html)

  ## URI Parameters
  | URI Parameter   | Type   | Description  |
  |---|---|---|
  | domain_id | integer   | ID of the domain whitelabel to associate with the subuser. |
paths./whitelabel/domains/{domain_id}/subuser.post.operationId: POST_whitelabel-domains-domain_id-subuser
paths./whitelabel/domains/{domain_id}/subuser.post.parameters.length: 2
paths./whitelabel/domains/{domain_id}/subuser.post.parameters[0].in: body
paths./whitelabel/domains/{domain_id}/subuser.post.parameters[0].name: body
paths./whitelabel/domains/{domain_id}/subuser.post.parameters[0].schema.example.username: jane@example.com
paths./whitelabel/domains/{domain_id}/subuser.post.parameters[0].schema.properties.username.description: Username
  to associate with the domain whitelabel.
paths./whitelabel/domains/{domain_id}/subuser.post.parameters[0].schema.properties.username.type: string
paths./whitelabel/domains/{domain_id}/subuser.post.parameters[0].schema.required.length: 1
paths./whitelabel/domains/{domain_id}/subuser.post.parameters[0].schema.required[0]: username
paths./whitelabel/domains/{domain_id}/subuser.post.parameters[0].schema.type: object
paths./whitelabel/domains/{domain_id}/subuser.post.parameters[1].$ref: '#/parameters/trait:onBehalfOfSubuser:on-behalf-of'
paths./whitelabel/domains/{domain_id}/subuser.post.produces.length: 1
paths./whitelabel/domains/{domain_id}/subuser.post.produces[0]: application/json
paths./whitelabel/domains/{domain_id}/subuser.post.responses.201.description: ""
paths./whitelabel/domains/{domain_id}/subuser.post.responses.201.examples.application/json.automatic_security: false
paths./whitelabel/domains/{domain_id}/subuser.post.responses.201.examples.application/json.custom_spf: true
paths./whitelabel/domains/{domain_id}/subuser.post.responses.201.examples.application/json.default: false
paths./whitelabel/domains/{domain_id}/subuser.post.responses.201.examples.application/json.dns.dkim.data: k=rsa;
  t=s; p=publicKey
paths./whitelabel/domains/{domain_id}/subuser.post.responses.201.examples.application/json.dns.dkim.host: s1._domainkey.example.com
paths./whitelabel/domains/{domain_id}/subuser.post.responses.201.examples.application/json.dns.dkim.type: txt
paths./whitelabel/domains/{domain_id}/subuser.post.responses.201.examples.application/json.dns.dkim.valid: false
paths./whitelabel/domains/{domain_id}/subuser.post.responses.201.examples.application/json.dns.domain_spf.data: v=spf1
  include:mail.example.com -all
paths./whitelabel/domains/{domain_id}/subuser.post.responses.201.examples.application/json.dns.domain_spf.host: example.com
paths./whitelabel/domains/{domain_id}/subuser.post.responses.201.examples.application/json.dns.domain_spf.type: txt
paths./whitelabel/domains/{domain_id}/subuser.post.responses.201.examples.application/json.dns.domain_spf.valid: false
paths./whitelabel/domains/{domain_id}/subuser.post.responses.201.examples.application/json.dns.mail_server.data: sendgrid.net
paths./whitelabel/domains/{domain_id}/subuser.post.responses.201.examples.application/json.dns.mail_server.host: mail.example.com
paths./whitelabel/domains/{domain_id}/subuser.post.responses.201.examples.application/json.dns.mail_server.type: mx
paths./whitelabel/domains/{domain_id}/subuser.post.responses.201.examples.application/json.dns.mail_server.valid: false
paths./whitelabel/domains/{domain_id}/subuser.post.responses.201.examples.application/json.dns.subdomain_spf.data: v=spf1
  ip4:192.168.1.1 ip4:192.168.0.1 -all
paths./whitelabel/domains/{domain_id}/subuser.post.responses.201.examples.application/json.dns.subdomain_spf.host: mail.example.com
paths./whitelabel/domains/{domain_id}/subuser.post.responses.201.examples.application/json.dns.subdomain_spf.type: txt
paths./whitelabel/domains/{domain_id}/subuser.post.responses.201.examples.application/json.dns.subdomain_spf.valid: false
paths./whitelabel/domains/{domain_id}/subuser.post.responses.201.examples.application/json.domain: example.com
paths./whitelabel/domains/{domain_id}/subuser.post.responses.201.examples.application/json.id: 1
paths./whitelabel/domains/{domain_id}/subuser.post.responses.201.examples.application/json.ips.length: 0
paths./whitelabel/domains/{domain_id}/subuser.post.responses.201.examples.application/json.legacy: false
paths./whitelabel/domains/{domain_id}/subuser.post.responses.201.examples.application/json.subdomain: mail
paths./whitelabel/domains/{domain_id}/subuser.post.responses.201.examples.application/json.user_id: 7
paths./whitelabel/domains/{domain_id}/subuser.post.responses.201.examples.application/json.username: mail@example.com
paths./whitelabel/domains/{domain_id}/subuser.post.responses.201.examples.application/json.valid: false
paths./whitelabel/domains/{domain_id}/subuser.post.responses.201.schema.$ref: '#/definitions/whitelabel:domain_spf'
paths./whitelabel/domains/{domain_id}/subuser.post.security.length: 1
paths./whitelabel/domains/{domain_id}/subuser.post.security[0].Authorization.length: 0
paths./whitelabel/domains/{domain_id}/subuser.post.summary: Associate a domain whitelabel
  with a given user.
paths./whitelabel/domains/{domain_id}/subuser.post.tags.length: 1
paths./whitelabel/domains/{domain_id}/subuser.post.tags[0]: Whitelabel - Domains
paths./whitelabel/domains/{id}/ips.parameters.length: 1
paths./whitelabel/domains/{id}/ips.parameters[0].in: path
paths./whitelabel/domains/{id}/ips.parameters[0].name: id
paths./whitelabel/domains/{id}/ips.parameters[0].required: true
paths./whitelabel/domains/{id}/ips.parameters[0].type: string
paths./whitelabel/domains/{id}/ips.post.consumes.length: 1
paths./whitelabel/domains/{id}/ips.post.consumes[0]: application/json
paths./whitelabel/domains/{id}/ips.post.description: |-
  **This endpoint allows you to add an IP address to a domain whitelabel.**

  A domain whitelabel allows you to remove the “via” or “sent on behalf of” message that your recipients see when they read your emails. Whitelabeling a domain allows you to replace sendgrid.net with your personal sending domain. You will be required to create a subdomain so that SendGrid can generate the DNS records which you must give to your host provider. If you choose to use Automated Security, SendGrid will provide you with 3 CNAME records. If you turn Automated Security off, you will be given 2 TXT records and 1 MX record.

  For more information on whitelabeling, please see our [User Guide](https://sendgrid.com/docs/User_Guide/Settings/Whitelabel/index.html)

  ## URI Parameters
  | URI Parameter   | Type  |  Description  |
  |---|---|---|
  | id | integer  | ID of the domain to which you are adding an IP |
paths./whitelabel/domains/{id}/ips.post.operationId: POST_whitelabel-domains-id-ips
paths./whitelabel/domains/{id}/ips.post.parameters.length: 2
paths./whitelabel/domains/{id}/ips.post.parameters[0].in: body
paths./whitelabel/domains/{id}/ips.post.parameters[0].name: body
paths./whitelabel/domains/{id}/ips.post.parameters[0].schema.example.ip: 192.168.0.1
paths./whitelabel/domains/{id}/ips.post.parameters[0].schema.properties.ip.description: IP
  to associate with the domain. Used for manually specifying IPs for custom SPF.
paths./whitelabel/domains/{id}/ips.post.parameters[0].schema.properties.ip.type: string
paths./whitelabel/domains/{id}/ips.post.parameters[0].schema.required.length: 1
paths./whitelabel/domains/{id}/ips.post.parameters[0].schema.required[0]: ip
paths./whitelabel/domains/{id}/ips.post.parameters[0].schema.type: object
paths./whitelabel/domains/{id}/ips.post.parameters[1].$ref: '#/parameters/trait:onBehalfOfSubuser:on-behalf-of'
paths./whitelabel/domains/{id}/ips.post.produces.length: 1
paths./whitelabel/domains/{id}/ips.post.produces[0]: application/json
paths./whitelabel/domains/{id}/ips.post.responses.200.description: ""
paths./whitelabel/domains/{id}/ips.post.responses.200.examples.application/json.automatic_security: false
paths./whitelabel/domains/{id}/ips.post.responses.200.examples.application/json.custom_spf: true
paths./whitelabel/domains/{id}/ips.post.responses.200.examples.application/json.default: false
paths./whitelabel/domains/{id}/ips.post.responses.200.examples.application/json.dns.dkim.data: k=rsa;
  t=s; p=publicKey
paths./whitelabel/domains/{id}/ips.post.responses.200.examples.application/json.dns.dkim.host: s1._domainkey.example.com
paths./whitelabel/domains/{id}/ips.post.responses.200.examples.application/json.dns.dkim.type: txt
paths./whitelabel/domains/{id}/ips.post.responses.200.examples.application/json.dns.dkim.valid: false
paths./whitelabel/domains/{id}/ips.post.responses.200.examples.application/json.dns.domain_spf.data: v=spf1
  include:mail.example.com -all
paths./whitelabel/domains/{id}/ips.post.responses.200.examples.application/json.dns.domain_spf.host: example.com
paths./whitelabel/domains/{id}/ips.post.responses.200.examples.application/json.dns.domain_spf.type: txt
paths./whitelabel/domains/{id}/ips.post.responses.200.examples.application/json.dns.domain_spf.valid: false
paths./whitelabel/domains/{id}/ips.post.responses.200.examples.application/json.dns.mail_server.data: sendgrid.net
paths./whitelabel/domains/{id}/ips.post.responses.200.examples.application/json.dns.mail_server.host: mail.example.com
paths./whitelabel/domains/{id}/ips.post.responses.200.examples.application/json.dns.mail_server.type: mx
paths./whitelabel/domains/{id}/ips.post.responses.200.examples.application/json.dns.mail_server.valid: false
paths./whitelabel/domains/{id}/ips.post.responses.200.examples.application/json.dns.subdomain_spf.data: v=spf1
  ip4:192.168.1.1 ip4:192.168.0.1 -all
paths./whitelabel/domains/{id}/ips.post.responses.200.examples.application/json.dns.subdomain_spf.host: mail.example.com
paths./whitelabel/domains/{id}/ips.post.responses.200.examples.application/json.dns.subdomain_spf.type: txt
paths./whitelabel/domains/{id}/ips.post.responses.200.examples.application/json.dns.subdomain_spf.valid: false
paths./whitelabel/domains/{id}/ips.post.responses.200.examples.application/json.domain: example.com
paths./whitelabel/domains/{id}/ips.post.responses.200.examples.application/json.id: 1
paths./whitelabel/domains/{id}/ips.post.responses.200.examples.application/json.ips.length: 0
paths./whitelabel/domains/{id}/ips.post.responses.200.examples.application/json.legacy: false
paths./whitelabel/domains/{id}/ips.post.responses.200.examples.application/json.subdomain: mail
paths./whitelabel/domains/{id}/ips.post.responses.200.examples.application/json.user_id: 7
paths./whitelabel/domains/{id}/ips.post.responses.200.examples.application/json.username: john@example.com
paths./whitelabel/domains/{id}/ips.post.responses.200.examples.application/json.valid: false
paths./whitelabel/domains/{id}/ips.post.responses.200.schema.$ref: '#/definitions/whitelabel:domain_spf'
paths./whitelabel/domains/{id}/ips.post.security.length: 1
paths./whitelabel/domains/{id}/ips.post.security[0].Authorization.length: 0
paths./whitelabel/domains/{id}/ips.post.summary: Add an IP to a domain whitelabel.
paths./whitelabel/domains/{id}/ips.post.tags.length: 1
paths./whitelabel/domains/{id}/ips.post.tags[0]: Whitelabel - Domains
paths./whitelabel/domains/{id}/ips/{ip}.delete.description: |-
  **This endpoint allows you to remove a domain's IP address from that domain's whitelabel.**

  A domain whitelabel allows you to remove the “via” or “sent on behalf of” message that your recipients see when they read your emails. Whitelabeling a domain allows you to replace sendgrid.net with your personal sending domain. You will be required to create a subdomain so that SendGrid can generate the DNS records which you must give to your host provider. If you choose to use Automated Security, SendGrid will provide you with 3 CNAME records. If you turn Automated Security off, you will be given 2 TXT records and 1 MX record.

  For more information on whitelabeling, please see our [User Guide](https://sendgrid.com/docs/User_Guide/Settings/Whitelabel/index.html)

  ## URI Parameters
  | URI Parameter   | Type  | Description  |
  |---|---|---|
  | id | integer  | ID of the domain whitelabel to delete the IP from. |
  | ip | string | IP to remove from the domain whitelabel. |
paths./whitelabel/domains/{id}/ips/{ip}.delete.operationId: DELETE_whitelabel-domains-id-ips-ip
paths./whitelabel/domains/{id}/ips/{ip}.delete.parameters.length: 2
paths./whitelabel/domains/{id}/ips/{ip}.delete.parameters[0].in: body
paths./whitelabel/domains/{id}/ips/{ip}.delete.parameters[0].name: body
paths./whitelabel/domains/{id}/ips/{ip}.delete.parameters[0].schema.type: "null"
paths./whitelabel/domains/{id}/ips/{ip}.delete.parameters[1].$ref: '#/parameters/trait:onBehalfOfSubuser:on-behalf-of'
paths./whitelabel/domains/{id}/ips/{ip}.delete.produces.length: 1
paths./whitelabel/domains/{id}/ips/{ip}.delete.produces[0]: application/json
paths./whitelabel/domains/{id}/ips/{ip}.delete.responses.200.description: ""
paths./whitelabel/domains/{id}/ips/{ip}.delete.responses.200.examples.application/json.automatic_security: false
paths./whitelabel/domains/{id}/ips/{ip}.delete.responses.200.examples.application/json.custom_spf: true
paths./whitelabel/domains/{id}/ips/{ip}.delete.responses.200.examples.application/json.default: false
paths./whitelabel/domains/{id}/ips/{ip}.delete.responses.200.examples.application/json.dns.dkim.data: k=rsa;
  t=s; p=publicKey
paths./whitelabel/domains/{id}/ips/{ip}.delete.responses.200.examples.application/json.dns.dkim.host: s1._domainkey.example.com
paths./whitelabel/domains/{id}/ips/{ip}.delete.responses.200.examples.application/json.dns.dkim.type: txt
paths./whitelabel/domains/{id}/ips/{ip}.delete.responses.200.examples.application/json.dns.dkim.valid: false
paths./whitelabel/domains/{id}/ips/{ip}.delete.responses.200.examples.application/json.dns.domain_spf.data: v=spf1
  include:mail.example.com -all
paths./whitelabel/domains/{id}/ips/{ip}.delete.responses.200.examples.application/json.dns.domain_spf.host: example.com
paths./whitelabel/domains/{id}/ips/{ip}.delete.responses.200.examples.application/json.dns.domain_spf.type: txt
paths./whitelabel/domains/{id}/ips/{ip}.delete.responses.200.examples.application/json.dns.domain_spf.valid: false
paths./whitelabel/domains/{id}/ips/{ip}.delete.responses.200.examples.application/json.dns.mail_server.data: sendgrid.net
paths./whitelabel/domains/{id}/ips/{ip}.delete.responses.200.examples.application/json.dns.mail_server.host: mail.example.com
paths./whitelabel/domains/{id}/ips/{ip}.delete.responses.200.examples.application/json.dns.mail_server.type: mx
paths./whitelabel/domains/{id}/ips/{ip}.delete.responses.200.examples.application/json.dns.mail_server.valid: false
paths./whitelabel/domains/{id}/ips/{ip}.delete.responses.200.examples.application/json.dns.subdomain_spf.data: v=spf1
  ip4:192.168.1.1 ip4:192.168.0.1 -all
paths./whitelabel/domains/{id}/ips/{ip}.delete.responses.200.examples.application/json.dns.subdomain_spf.host: mail.example.com
paths./whitelabel/domains/{id}/ips/{ip}.delete.responses.200.examples.application/json.dns.subdomain_spf.type: txt
paths./whitelabel/domains/{id}/ips/{ip}.delete.responses.200.examples.application/json.dns.subdomain_spf.valid: false
paths./whitelabel/domains/{id}/ips/{ip}.delete.responses.200.examples.application/json.domain: example.com
paths./whitelabel/domains/{id}/ips/{ip}.delete.responses.200.examples.application/json.id: 1
paths./whitelabel/domains/{id}/ips/{ip}.delete.responses.200.examples.application/json.ips.length: 0
paths./whitelabel/domains/{id}/ips/{ip}.delete.responses.200.examples.application/json.legacy: false
paths./whitelabel/domains/{id}/ips/{ip}.delete.responses.200.examples.application/json.subdomain: mail
paths./whitelabel/domains/{id}/ips/{ip}.delete.responses.200.examples.application/json.user_id: 7
paths./whitelabel/domains/{id}/ips/{ip}.delete.responses.200.examples.application/json.username: mail@example.com
paths./whitelabel/domains/{id}/ips/{ip}.delete.responses.200.examples.application/json.valid: false
paths./whitelabel/domains/{id}/ips/{ip}.delete.responses.200.schema.$ref: '#/definitions/whitelabel:domain_spf'
paths./whitelabel/domains/{id}/ips/{ip}.delete.security.length: 1
paths./whitelabel/domains/{id}/ips/{ip}.delete.security[0].Authorization.length: 0
paths./whitelabel/domains/{id}/ips/{ip}.delete.summary: Remove an IP from a domain
  whitelabel.
paths./whitelabel/domains/{id}/ips/{ip}.delete.tags.length: 1
paths./whitelabel/domains/{id}/ips/{ip}.delete.tags[0]: Whitelabel - Domains
paths./whitelabel/domains/{id}/ips/{ip}.parameters.length: 2
paths./whitelabel/domains/{id}/ips/{ip}.parameters[0].in: path
paths./whitelabel/domains/{id}/ips/{ip}.parameters[0].name: id
paths./whitelabel/domains/{id}/ips/{ip}.parameters[0].required: true
paths./whitelabel/domains/{id}/ips/{ip}.parameters[0].type: string
paths./whitelabel/domains/{id}/ips/{ip}.parameters[1].in: path
paths./whitelabel/domains/{id}/ips/{ip}.parameters[1].name: ip
paths./whitelabel/domains/{id}/ips/{ip}.parameters[1].required: true
paths./whitelabel/domains/{id}/ips/{ip}.parameters[1].type: string
paths./whitelabel/domains/{id}/validate.parameters.length: 1
paths./whitelabel/domains/{id}/validate.parameters[0].in: path
paths./whitelabel/domains/{id}/validate.parameters[0].name: id
paths./whitelabel/domains/{id}/validate.parameters[0].required: true
paths./whitelabel/domains/{id}/validate.parameters[0].type: string
paths./whitelabel/domains/{id}/validate.post.description: |-
  **This endpoint allows you to validate a domain whitelabel. If it fails, it will return an error message describing why the whitelabel could not be validated.**

  A domain whitelabel allows you to remove the “via” or “sent on behalf of” message that your recipients see when they read your emails. Whitelabeling a domain allows you to replace sendgrid.net with your personal sending domain. You will be required to create a subdomain so that SendGrid can generate the DNS records which you must give to your host provider. If you choose to use Automated Security, SendGrid will provide you with 3 CNAME records. If you turn Automated Security off, you will be given 2 TXT records and 1 MX record.

  For more information on whitelabeling, please see our [User Guide](https://sendgrid.com/docs/User_Guide/Settings/Whitelabel/index.html)

  ## URI Parameters
  | URI Parameter   | Type   | Description  |
  |---|---|---|
  | id | integer  |ID of the domain whitelabel to validate. |
paths./whitelabel/domains/{id}/validate.post.operationId: POST_whitelabel-domains-id-validate
paths./whitelabel/domains/{id}/validate.post.parameters.length: 2
paths./whitelabel/domains/{id}/validate.post.parameters[0].in: body
paths./whitelabel/domains/{id}/validate.post.parameters[0].name: body
paths./whitelabel/domains/{id}/validate.post.parameters[0].schema.type: "null"
paths./whitelabel/domains/{id}/validate.post.parameters[1].$ref: '#/parameters/trait:onBehalfOfSubuser:on-behalf-of'
paths./whitelabel/domains/{id}/validate.post.produces.length: 1
paths./whitelabel/domains/{id}/validate.post.produces[0]: application/json
paths./whitelabel/domains/{id}/validate.post.responses.200.description: ""
paths./whitelabel/domains/{id}/validate.post.responses.200.examples.application/json.id: 1
paths./whitelabel/domains/{id}/validate.post.responses.200.examples.application/json.valid: true
paths./whitelabel/domains/{id}/validate.post.responses.200.examples.application/json.validation_resuts.dkim1.valid: true
paths./whitelabel/domains/{id}/validate.post.responses.200.examples.application/json.validation_resuts.dkim2.valid: true
paths./whitelabel/domains/{id}/validate.post.responses.200.examples.application/json.validation_resuts.mail_cname.reason: Expected
  your MX record to be "mx.sendgrid.net" but found "example.com".
paths./whitelabel/domains/{id}/validate.post.responses.200.examples.application/json.validation_resuts.mail_cname.valid: false
paths./whitelabel/domains/{id}/validate.post.responses.200.examples.application/json.validation_resuts.spf.valid: true
paths./whitelabel/domains/{id}/validate.post.responses.200.schema.properties.id.description: The
  ID of the domain whitelabel.
paths./whitelabel/domains/{id}/validate.post.responses.200.schema.properties.id.type: integer
paths./whitelabel/domains/{id}/validate.post.responses.200.schema.properties.valid.description: Indicates
  if this is a valid whitelabel.
paths./whitelabel/domains/{id}/validate.post.responses.200.schema.properties.valid.type: boolean
paths./whitelabel/domains/{id}/validate.post.responses.200.schema.properties.validation_resuts.description: The
  individual DNS records that are checked when validating, including the reason for
  any invalid DNS records.
paths./whitelabel/domains/{id}/validate.post.responses.200.schema.properties.validation_resuts.properties.dkim1.description: A
  DNS record for this domain whitelabel.
? paths./whitelabel/domains/{id}/validate.post.responses.200.schema.properties.validation_resuts.properties.dkim1.properties.reason.type
: "null"
? paths./whitelabel/domains/{id}/validate.post.responses.200.schema.properties.validation_resuts.properties.dkim1.properties.valid.description
: Indicates if the DNS record is valid.
? paths./whitelabel/domains/{id}/validate.post.responses.200.schema.properties.validation_resuts.properties.dkim1.properties.valid.type
: boolean
paths./whitelabel/domains/{id}/validate.post.responses.200.schema.properties.validation_resuts.properties.dkim1.type: object
paths./whitelabel/domains/{id}/validate.post.responses.200.schema.properties.validation_resuts.properties.dkim2.description: A
  DNS record for this whitelabel.
? paths./whitelabel/domains/{id}/validate.post.responses.200.schema.properties.validation_resuts.properties.dkim2.properties.reason.type
: "null"
? paths./whitelabel/domains/{id}/validate.post.responses.200.schema.properties.validation_resuts.properties.dkim2.properties.valid.description
: Indicates if the DNS record is valid.
? paths./whitelabel/domains/{id}/validate.post.responses.200.schema.properties.validation_resuts.properties.dkim2.properties.valid.type
: boolean
paths./whitelabel/domains/{id}/validate.post.responses.200.schema.properties.validation_resuts.properties.dkim2.type: object
paths./whitelabel/domains/{id}/validate.post.responses.200.schema.properties.validation_resuts.properties.mail_cname.description: The
  CNAME record for the domain whitelabel.
? paths./whitelabel/domains/{id}/validate.post.responses.200.schema.properties.validation_resuts.properties.mail_cname.properties.reason.description
: The reason this record is invalid.
? paths./whitelabel/domains/{id}/validate.post.responses.200.schema.properties.validation_resuts.properties.mail_cname.properties.reason.type
: string
? paths./whitelabel/domains/{id}/validate.post.responses.200.schema.properties.validation_resuts.properties.mail_cname.properties.valid.description
: Indicates if this DNS record is valid.
? paths./whitelabel/domains/{id}/validate.post.responses.200.schema.properties.validation_resuts.properties.mail_cname.properties.valid.type
: boolean
paths./whitelabel/domains/{id}/validate.post.responses.200.schema.properties.validation_resuts.properties.mail_cname.type: object
paths./whitelabel/domains/{id}/validate.post.responses.200.schema.properties.validation_resuts.properties.spf.description: The
  SPF record for the whitelabel.
? paths./whitelabel/domains/{id}/validate.post.responses.200.schema.properties.validation_resuts.properties.spf.properties.reason.type
: "null"
? paths./whitelabel/domains/{id}/validate.post.responses.200.schema.properties.validation_resuts.properties.spf.properties.valid.description
: Indicates if the SPF record is valid.
? paths./whitelabel/domains/{id}/validate.post.responses.200.schema.properties.validation_resuts.properties.spf.properties.valid.type
: boolean
paths./whitelabel/domains/{id}/validate.post.responses.200.schema.properties.validation_resuts.properties.spf.type: object
paths./whitelabel/domains/{id}/validate.post.responses.200.schema.properties.validation_resuts.type: object
paths./whitelabel/domains/{id}/validate.post.responses.200.schema.type: object
paths./whitelabel/domains/{id}/validate.post.responses.500.description: ""
paths./whitelabel/domains/{id}/validate.post.responses.500.examples.application/json.errors.length: 1
paths./whitelabel/domains/{id}/validate.post.responses.500.examples.application/json.errors[0].message: internal
  error getting TXT
paths./whitelabel/domains/{id}/validate.post.responses.500.schema.properties.errors.items.properties.message.description: A
  message explaining the reason for the error.
paths./whitelabel/domains/{id}/validate.post.responses.500.schema.properties.errors.items.properties.message.type: string
paths./whitelabel/domains/{id}/validate.post.responses.500.schema.properties.errors.items.required.length: 1
paths./whitelabel/domains/{id}/validate.post.responses.500.schema.properties.errors.items.required[0]: message
paths./whitelabel/domains/{id}/validate.post.responses.500.schema.properties.errors.items.type: object
paths./whitelabel/domains/{id}/validate.post.responses.500.schema.properties.errors.type: array
paths./whitelabel/domains/{id}/validate.post.responses.500.schema.type: object
paths./whitelabel/domains/{id}/validate.post.security.length: 1
paths./whitelabel/domains/{id}/validate.post.security[0].Authorization.length: 0
paths./whitelabel/domains/{id}/validate.post.summary: Validate a domain whitelabel.
paths./whitelabel/domains/{id}/validate.post.tags.length: 1
paths./whitelabel/domains/{id}/validate.post.tags[0]: Whitelabel - Domains
paths./whitelabel/domains/default.get.description: |-
  **This endpoint allows you to retrieve the default whitelabel for a domain.**

  A domain whitelabel allows you to remove the “via” or “sent on behalf of” message that your recipients see when they read your emails. Whitelabeling a domain allows you to replace sendgrid.net with your personal sending domain. You will be required to create a subdomain so that SendGrid can generate the DNS records which you must give to your host provider. If you choose to use Automated Security, SendGrid will provide you with 3 CNAME records. If you turn Automated Security off, you will be given 2 TXT records and 1 MX record.

  For more information on whitelabeling, please see our [User Guide](https://sendgrid.com/docs/User_Guide/Settings/Whitelabel/index.html)

  ## URI Parameters
  | URI Parameter   | Type   | Description  |
  |---|---|---|
  | domain | string  |The domain to find a default domain whitelabel for. |
paths./whitelabel/domains/default.get.operationId: GET_whitelabel-domains-default
paths./whitelabel/domains/default.get.parameters.length: 1
paths./whitelabel/domains/default.get.parameters[0].$ref: '#/parameters/trait:onBehalfOfSubuser:on-behalf-of'
paths./whitelabel/domains/default.get.produces.length: 1
paths./whitelabel/domains/default.get.produces[0]: application/json
paths./whitelabel/domains/default.get.responses.200.description: ""
paths./whitelabel/domains/default.get.responses.200.schema.$ref: '#/definitions/whitelabel:domain_spf'
paths./whitelabel/domains/default.get.security.length: 1
paths./whitelabel/domains/default.get.security[0].Authorization.length: 0
paths./whitelabel/domains/default.get.summary: Get the default domain whitelabel.
paths./whitelabel/domains/default.get.tags.length: 1
paths./whitelabel/domains/default.get.tags[0]: Whitelabel - Domains
paths./whitelabel/domains/subuser.delete.description: |-
  **This endpoint allows you to disassociate a specific whitelabel from a subuser.**

  A domain whitelabel allows you to remove the “via” or “sent on behalf of” message that your recipients see when they read your emails. Whitelabeling a domain allows you to replace sendgrid.net with your personal sending domain. You will be required to create a subdomain so that SendGrid can generate the DNS records which you must give to your host provider. If you choose to use Automated Security, SendGrid will provide you with 3 CNAME records. If you turn Automated Security off, you will be given 2 TXT records and 1 MX record.

  Domain whitelabels can be associated with (i.e. assigned to) subusers from a parent account. This functionality allows subusers to send mail using their parent's whitelabels. To associate a whitelabel with a subuser, the parent account must first create the whitelabel and validate it. The the parent may then associate the whitelabel via the subuser management tools.

  For more information on whitelabeling, please see our [User Guide](https://sendgrid.com/docs/User_Guide/Settings/Whitelabel/index.html)

  ## URI Parameters
  | URI Parameter   | Type  | Required?  | Description  |
  |---|---|---|---|
  | username | string  | required  | Username for the subuser to find associated whitelabels for. |
paths./whitelabel/domains/subuser.delete.operationId: DELETE_whitelabel-domains-subuser
paths./whitelabel/domains/subuser.delete.parameters.length: 2
paths./whitelabel/domains/subuser.delete.parameters[0].in: body
paths./whitelabel/domains/subuser.delete.parameters[0].name: body
paths./whitelabel/domains/subuser.delete.parameters[0].schema.type: "null"
paths./whitelabel/domains/subuser.delete.parameters[1].$ref: '#/parameters/trait:onBehalfOfSubuser:on-behalf-of'
paths./whitelabel/domains/subuser.delete.responses.204.description: ""
paths./whitelabel/domains/subuser.delete.responses.204.schema.type: object
paths./whitelabel/domains/subuser.delete.security.length: 1
paths./whitelabel/domains/subuser.delete.security[0].Authorization.length: 0
paths./whitelabel/domains/subuser.delete.summary: Disassociate a domain whitelabel
  from a given user.
paths./whitelabel/domains/subuser.delete.tags.length: 1
paths./whitelabel/domains/subuser.delete.tags[0]: Whitelabel - Domains
paths./whitelabel/domains/subuser.get.description: |-
  **This endpoint allows you to retrieve all of the whitelabels that have been assigned to a specific subuser.**

  A domain whitelabel allows you to remove the “via” or “sent on behalf of” message that your recipients see when they read your emails. Whitelabeling a domain allows you to replace sendgrid.net with your personal sending domain. You will be required to create a subdomain so that SendGrid can generate the DNS records which you must give to your host provider. If you choose to use Automated Security, SendGrid will provide you with 3 CNAME records. If you turn Automated Security off, you will be given 2 TXT records and 1 MX record.

  Domain whitelabels can be associated with (i.e. assigned to) subusers from a parent account. This functionality allows subusers to send mail using their parent's whitelabels. To associate a whitelabel with a subuser, the parent account must first create the whitelabel and validate it. The the parent may then associate the whitelabel via the subuser management tools.

  For more information on whitelabeling, please see our [User Guide](https://sendgrid.com/docs/User_Guide/Settings/Whitelabel/index.html)

  ## URI Parameters
  | URI Parameter   | Type  | Description  |
  |---|---|---|
  | username | string  | Username of the subuser to find associated whitelabels for. |
paths./whitelabel/domains/subuser.get.operationId: GET_whitelabel-domains-subuser
paths./whitelabel/domains/subuser.get.parameters.length: 1
paths./whitelabel/domains/subuser.get.parameters[0].$ref: '#/parameters/trait:onBehalfOfSubuser:on-behalf-of'
paths./whitelabel/domains/subuser.get.produces.length: 1
paths./whitelabel/domains/subuser.get.produces[0]: application/json
paths./whitelabel/domains/subuser.get.responses.200.description: ""
paths./whitelabel/domains/subuser.get.responses.200.examples.application/json.automatic_security: false
paths./whitelabel/domains/subuser.get.responses.200.examples.application/json.custom_spf: true
paths./whitelabel/domains/subuser.get.responses.200.examples.application/json.default: false
paths./whitelabel/domains/subuser.get.responses.200.examples.application/json.dns.dkim.data: k=rsa;
  t=s; p=publicKey
paths./whitelabel/domains/subuser.get.responses.200.examples.application/json.dns.dkim.host: s1._domainkey.example.com
paths./whitelabel/domains/subuser.get.responses.200.examples.application/json.dns.dkim.type: txt
paths./whitelabel/domains/subuser.get.responses.200.examples.application/json.dns.dkim.valid: false
paths./whitelabel/domains/subuser.get.responses.200.examples.application/json.dns.domain_spf.data: v=spf1
  include:mail.example.com -all
paths./whitelabel/domains/subuser.get.responses.200.examples.application/json.dns.domain_spf.host: example.com
paths./whitelabel/domains/subuser.get.responses.200.examples.application/json.dns.domain_spf.type: txt
paths./whitelabel/domains/subuser.get.responses.200.examples.application/json.dns.domain_spf.valid: false
paths./whitelabel/domains/subuser.get.responses.200.examples.application/json.dns.mail_server.data: sendgrid.net
paths./whitelabel/domains/subuser.get.responses.200.examples.application/json.dns.mail_server.host: mail.example.com
paths./whitelabel/domains/subuser.get.responses.200.examples.application/json.dns.mail_server.type: mx
paths./whitelabel/domains/subuser.get.responses.200.examples.application/json.dns.mail_server.valid: false
paths./whitelabel/domains/subuser.get.responses.200.examples.application/json.dns.subdomain_spf.data: v=spf1
  ip4:192.168.1.1 ip4:192.168.0.1 -all
paths./whitelabel/domains/subuser.get.responses.200.examples.application/json.dns.subdomain_spf.host: mail.example.com
paths./whitelabel/domains/subuser.get.responses.200.examples.application/json.dns.subdomain_spf.type: txt
paths./whitelabel/domains/subuser.get.responses.200.examples.application/json.dns.subdomain_spf.valid: false
paths./whitelabel/domains/subuser.get.responses.200.examples.application/json.domain: example.com
paths./whitelabel/domains/subuser.get.responses.200.examples.application/json.id: 1
paths./whitelabel/domains/subuser.get.responses.200.examples.application/json.ips.length: 0
paths./whitelabel/domains/subuser.get.responses.200.examples.application/json.legacy: false
paths./whitelabel/domains/subuser.get.responses.200.examples.application/json.subdomain: mail
paths./whitelabel/domains/subuser.get.responses.200.examples.application/json.user_id: 7
paths./whitelabel/domains/subuser.get.responses.200.examples.application/json.username: mail@example.com
paths./whitelabel/domains/subuser.get.responses.200.examples.application/json.valid: false
paths./whitelabel/domains/subuser.get.responses.200.schema.$ref: '#/definitions/whitelabel:domain_spf'
paths./whitelabel/domains/subuser.get.security.length: 1
paths./whitelabel/domains/subuser.get.security[0].Authorization.length: 0
paths./whitelabel/domains/subuser.get.summary: List the domain whitelabel associated
  with the given user.
paths./whitelabel/domains/subuser.get.tags.length: 1
paths./whitelabel/domains/subuser.get.tags[0]: Whitelabel - Domains
paths./whitelabel/ips.get.description: |-
  **This endpoint allows you to retrieve all of the IP whitelabels that have been createdy by this account.**

  You may include a search key by using the "ip" parameter. This enables you to perform a prefix search for a given IP segment (e.g. "192.").

  A IP whitelabel consists of a subdomain and domain that will be used to generate a reverse DNS record for a given IP. Once SendGrid has verified that the appropriate A record for the IP has been created, the appropriate reverse DNS record for the IP is generated.

  For more information, please see our [User Guide](https://sendgrid.com/docs/API_Reference/Web_API_v3/Whitelabel/ips.html).
paths./whitelabel/ips.get.operationId: GET_whitelabel-ips
paths./whitelabel/ips.get.parameters.length: 4
paths./whitelabel/ips.get.parameters[0].description: The number of results to retrieve.
paths./whitelabel/ips.get.parameters[0].in: query
paths./whitelabel/ips.get.parameters[0].name: limit
paths./whitelabel/ips.get.parameters[0].type: integer
paths./whitelabel/ips.get.parameters[1].description: The point in the list of results
  to begin retrieving IPs from.
paths./whitelabel/ips.get.parameters[1].in: query
paths./whitelabel/ips.get.parameters[1].name: offset
paths./whitelabel/ips.get.parameters[1].type: integer
paths./whitelabel/ips.get.parameters[2].description: The IP segment that you would
  like to use in a prefix search.
paths./whitelabel/ips.get.parameters[2].in: query
paths./whitelabel/ips.get.parameters[2].name: ip
paths./whitelabel/ips.get.parameters[2].type: string
paths./whitelabel/ips.get.parameters[3].$ref: '#/parameters/trait:onBehalfOfSubuser:on-behalf-of'
paths./whitelabel/ips.get.produces.length: 1
paths./whitelabel/ips.get.produces[0]: application/json
paths./whitelabel/ips.get.responses.200.description: ""
paths./whitelabel/ips.get.responses.200.examples.application/json.length: 2
paths./whitelabel/ips.get.responses.200.examples.application/json[0].a_record.data: 192.168.1.1
paths./whitelabel/ips.get.responses.200.examples.application/json[0].a_record.host: o1.email.example.com
paths./whitelabel/ips.get.responses.200.examples.application/json[0].a_record.type: a
paths./whitelabel/ips.get.responses.200.examples.application/json[0].a_record.valid: true
paths./whitelabel/ips.get.responses.200.examples.application/json[0].domain: example.com
paths./whitelabel/ips.get.responses.200.examples.application/json[0].id: 1
paths./whitelabel/ips.get.responses.200.examples.application/json[0].ip: 192.168.1.1
paths./whitelabel/ips.get.responses.200.examples.application/json[0].legacy: false
paths./whitelabel/ips.get.responses.200.examples.application/json[0].rdns: o1.email.example.com
paths./whitelabel/ips.get.responses.200.examples.application/json[0].subdomain: email
paths./whitelabel/ips.get.responses.200.examples.application/json[0].users.length: 2
paths./whitelabel/ips.get.responses.200.examples.application/json[0].users[0].user_id: 7
paths./whitelabel/ips.get.responses.200.examples.application/json[0].users[0].username: john@example.com
paths./whitelabel/ips.get.responses.200.examples.application/json[0].users[1].user_id: 8
paths./whitelabel/ips.get.responses.200.examples.application/json[0].users[1].username: jane@example.com
paths./whitelabel/ips.get.responses.200.examples.application/json[0].valid: true
paths./whitelabel/ips.get.responses.200.examples.application/json[1].a_record.data: 192.168.1.2
paths./whitelabel/ips.get.responses.200.examples.application/json[1].a_record.host: o2.email.example.com
paths./whitelabel/ips.get.responses.200.examples.application/json[1].a_record.type: a
paths./whitelabel/ips.get.responses.200.examples.application/json[1].a_record.valid: true
paths./whitelabel/ips.get.responses.200.examples.application/json[1].domain: example.com
paths./whitelabel/ips.get.responses.200.examples.application/json[1].id: 2
paths./whitelabel/ips.get.responses.200.examples.application/json[1].ip: 192.168.1.2
paths./whitelabel/ips.get.responses.200.examples.application/json[1].legacy: false
paths./whitelabel/ips.get.responses.200.examples.application/json[1].rdns: o2.email.example.com
paths./whitelabel/ips.get.responses.200.examples.application/json[1].subdomain: email
paths./whitelabel/ips.get.responses.200.examples.application/json[1].users.length: 2
paths./whitelabel/ips.get.responses.200.examples.application/json[1].users[0].user_id: 7
paths./whitelabel/ips.get.responses.200.examples.application/json[1].users[0].username: john@example.com
paths./whitelabel/ips.get.responses.200.examples.application/json[1].users[1].user_id: 9
paths./whitelabel/ips.get.responses.200.examples.application/json[1].users[1].username: jane@example2.com
paths./whitelabel/ips.get.responses.200.examples.application/json[1].valid: true
paths./whitelabel/ips.get.responses.200.schema.items.$ref: '#/definitions/ip_whitelabel'
paths./whitelabel/ips.get.responses.200.schema.type: array
paths./whitelabel/ips.get.security.length: 1
paths./whitelabel/ips.get.security[0].Authorization.length: 0
paths./whitelabel/ips.get.summary: Retrieve all IP whitelabels
paths./whitelabel/ips.get.tags.length: 1
paths./whitelabel/ips.get.tags[0]: Whitelabel - IPs
paths./whitelabel/ips.post.consumes.length: 1
paths./whitelabel/ips.post.consumes[0]: application/json
paths./whitelabel/ips.post.description: |-
  **This endpoint allows you to create an IP whitelabel.**

  When creating an IP whitelable, you should use the same subdomain that you used when you created a domain whitelabel.

  A IP whitelabel consists of a subdomain and domain that will be used to generate a reverse DNS record for a given IP. Once SendGrid has verified that the appropriate A record for the IP has been created, the appropriate reverse DNS record for the IP is generated.

  For more information, please see our [User Guide](https://sendgrid.com/docs/API_Reference/Web_API_v3/Whitelabel/ips.html).
paths./whitelabel/ips.post.operationId: POST_whitelabel-ips
paths./whitelabel/ips.post.parameters.length: 2
paths./whitelabel/ips.post.parameters[0].in: body
paths./whitelabel/ips.post.parameters[0].name: body
paths./whitelabel/ips.post.parameters[0].schema.example.domain: example.com
paths./whitelabel/ips.post.parameters[0].schema.example.ip: 192.168.1.1
paths./whitelabel/ips.post.parameters[0].schema.example.subdomain: email
paths./whitelabel/ips.post.parameters[0].schema.properties.domain.description: The
  root, or sending, domain that will be used to send message from the IP.
paths./whitelabel/ips.post.parameters[0].schema.properties.domain.type: string
paths./whitelabel/ips.post.parameters[0].schema.properties.ip.description: The IP
  address that you want to whitelabel.
paths./whitelabel/ips.post.parameters[0].schema.properties.ip.type: string
paths./whitelabel/ips.post.parameters[0].schema.properties.subdomain.description: The
  subdomain that will be used to send emails from the IP. Should be the same as the
  subdomain used for your domain whitelabel.
paths./whitelabel/ips.post.parameters[0].schema.properties.subdomain.type: string
paths./whitelabel/ips.post.parameters[0].schema.required.length: 3
paths./whitelabel/ips.post.parameters[0].schema.required[0]: ip
paths./whitelabel/ips.post.parameters[0].schema.required[1]: subdomain
paths./whitelabel/ips.post.parameters[0].schema.required[2]: domain
paths./whitelabel/ips.post.parameters[0].schema.type: object
paths./whitelabel/ips.post.parameters[1].$ref: '#/parameters/trait:onBehalfOfSubuser:on-behalf-of'
paths./whitelabel/ips.post.produces.length: 1
paths./whitelabel/ips.post.produces[0]: application/json
paths./whitelabel/ips.post.responses.201.description: ""
paths./whitelabel/ips.post.responses.201.examples.application/json.a_record.data: 192.168.1.2
paths./whitelabel/ips.post.responses.201.examples.application/json.a_record.host: o1.email.example.com
paths./whitelabel/ips.post.responses.201.examples.application/json.a_record.type: a
paths./whitelabel/ips.post.responses.201.examples.application/json.a_record.valid: true
paths./whitelabel/ips.post.responses.201.examples.application/json.domain: example.com
paths./whitelabel/ips.post.responses.201.examples.application/json.id: 123
paths./whitelabel/ips.post.responses.201.examples.application/json.ip: 192.168.1.2
paths./whitelabel/ips.post.responses.201.examples.application/json.legacy: false
paths./whitelabel/ips.post.responses.201.examples.application/json.rdns: o1.email.example.com
paths./whitelabel/ips.post.responses.201.examples.application/json.subdomain: email
paths./whitelabel/ips.post.responses.201.examples.application/json.users.length: 0
paths./whitelabel/ips.post.responses.201.examples.application/json.valid: true
paths./whitelabel/ips.post.responses.201.schema.$ref: '#/definitions/ip_whitelabel'
paths./whitelabel/ips.post.security.length: 1
paths./whitelabel/ips.post.security[0].Authorization.length: 0
paths./whitelabel/ips.post.summary: Create an IP whitelabel
paths./whitelabel/ips.post.tags.length: 1
paths./whitelabel/ips.post.tags[0]: Whitelabel - IPs
paths./whitelabel/ips/{id}.delete.description: |-
  **This endpoint allows you to delete an IP whitelabel.**

  A IP whitelabel consists of a subdomain and domain that will be used to generate a reverse DNS record for a given IP. Once SendGrid has verified that the appropriate A record for the IP has been created, the appropriate reverse DNS record for the IP is generated.

  For more information, please see our [User Guide](https://sendgrid.com/docs/API_Reference/Web_API_v3/Whitelabel/ips.html).
paths./whitelabel/ips/{id}.delete.operationId: DELETE_whitelabel-ips-id
paths./whitelabel/ips/{id}.delete.parameters.length: 2
paths./whitelabel/ips/{id}.delete.parameters[0].in: body
paths./whitelabel/ips/{id}.delete.parameters[0].name: body
paths./whitelabel/ips/{id}.delete.parameters[0].schema.type: "null"
paths./whitelabel/ips/{id}.delete.parameters[1].$ref: '#/parameters/trait:onBehalfOfSubuser:on-behalf-of'
paths./whitelabel/ips/{id}.delete.produces.length: 1
paths./whitelabel/ips/{id}.delete.produces[0]: application/json
paths./whitelabel/ips/{id}.delete.responses.204.description: ""
paths./whitelabel/ips/{id}.delete.responses.204.schema.type: object
paths./whitelabel/ips/{id}.delete.responses.404.description: ""
paths./whitelabel/ips/{id}.delete.responses.404.examples.application/json.errors.length: 1
paths./whitelabel/ips/{id}.delete.responses.404.examples.application/json.errors[0].message: Whitelabel
  ip not found.
paths./whitelabel/ips/{id}.delete.responses.404.schema.properties.errors.description: The
  errors preventing the IP whitelabel from being deleted.
paths./whitelabel/ips/{id}.delete.responses.404.schema.properties.errors.items.properties.message.description: A
  message explaining why the IP whitelabel could not be deleted.
paths./whitelabel/ips/{id}.delete.responses.404.schema.properties.errors.items.properties.message.type: string
paths./whitelabel/ips/{id}.delete.responses.404.schema.properties.errors.items.type: object
paths./whitelabel/ips/{id}.delete.responses.404.schema.properties.errors.type: array
paths./whitelabel/ips/{id}.delete.responses.404.schema.type: object
paths./whitelabel/ips/{id}.delete.security.length: 1
paths./whitelabel/ips/{id}.delete.security[0].Authorization.length: 0
paths./whitelabel/ips/{id}.delete.summary: Delete an IP whitelabel
paths./whitelabel/ips/{id}.delete.tags.length: 1
paths./whitelabel/ips/{id}.delete.tags[0]: Whitelabel - IPs
paths./whitelabel/ips/{id}.get.description: |-
  **This endpoint allows you to retrieve an IP whitelabel.**

  A IP whitelabel consists of a subdomain and domain that will be used to generate a reverse DNS record for a given IP. Once SendGrid has verified that the appropriate A record for the IP has been created, the appropriate reverse DNS record for the IP is generated.

  For more information, please see our [User Guide](https://sendgrid.com/docs/API_Reference/Web_API_v3/Whitelabel/ips.html).
paths./whitelabel/ips/{id}.get.operationId: GET_whitelabel-ips-id
paths./whitelabel/ips/{id}.get.parameters.length: 1
paths./whitelabel/ips/{id}.get.parameters[0].$ref: '#/parameters/trait:onBehalfOfSubuser:on-behalf-of'
paths./whitelabel/ips/{id}.get.produces.length: 1
paths./whitelabel/ips/{id}.get.produces[0]: application/json
paths./whitelabel/ips/{id}.get.responses.200.description: ""
paths./whitelabel/ips/{id}.get.responses.200.examples.application/json.a_record.data: 192.168.1.1
paths./whitelabel/ips/{id}.get.responses.200.examples.application/json.a_record.host: o1.email.example.com
paths./whitelabel/ips/{id}.get.responses.200.examples.application/json.a_record.type: a
paths./whitelabel/ips/{id}.get.responses.200.examples.application/json.a_record.valid: true
paths./whitelabel/ips/{id}.get.responses.200.examples.application/json.domain: example.com
paths./whitelabel/ips/{id}.get.responses.200.examples.application/json.id: 123
paths./whitelabel/ips/{id}.get.responses.200.examples.application/json.ip: 192.168.1.1
paths./whitelabel/ips/{id}.get.responses.200.examples.application/json.legacy: false
paths./whitelabel/ips/{id}.get.responses.200.examples.application/json.rdns: o1.email.example.com
paths./whitelabel/ips/{id}.get.responses.200.examples.application/json.subdomain: email
paths./whitelabel/ips/{id}.get.responses.200.examples.application/json.users.length: 1
paths./whitelabel/ips/{id}.get.responses.200.examples.application/json.users[0].user_id: 7
paths./whitelabel/ips/{id}.get.responses.200.examples.application/json.users[0].username: john@example.com
paths./whitelabel/ips/{id}.get.responses.200.examples.application/json.valid: true
paths./whitelabel/ips/{id}.get.responses.200.schema.$ref: '#/definitions/ip_whitelabel'
paths./whitelabel/ips/{id}.get.responses.404.description: ""
paths./whitelabel/ips/{id}.get.responses.404.examples.application/json.errors.length: 1
paths./whitelabel/ips/{id}.get.responses.404.examples.application/json.errors[0].message: Whitelabel
  ip not found.
paths./whitelabel/ips/{id}.get.responses.404.schema.properties.errors.description: The
  errors preventing the retrieval of the IP whitelabel.
paths./whitelabel/ips/{id}.get.responses.404.schema.properties.errors.items.properties.message.description: A
  message explaining why the IP whitelabel could not be found.
paths./whitelabel/ips/{id}.get.responses.404.schema.properties.errors.items.properties.message.type: string
paths./whitelabel/ips/{id}.get.responses.404.schema.properties.errors.items.required.length: 1
paths./whitelabel/ips/{id}.get.responses.404.schema.properties.errors.items.required[0]: message
paths./whitelabel/ips/{id}.get.responses.404.schema.properties.errors.items.type: object
paths./whitelabel/ips/{id}.get.responses.404.schema.properties.errors.type: array
paths./whitelabel/ips/{id}.get.responses.404.schema.required.length: 1
paths./whitelabel/ips/{id}.get.responses.404.schema.required[0]: errors
paths./whitelabel/ips/{id}.get.responses.404.schema.type: object
paths./whitelabel/ips/{id}.get.security.length: 1
paths./whitelabel/ips/{id}.get.security[0].Authorization.length: 0
paths./whitelabel/ips/{id}.get.summary: Retrieve an IP whitelabel
paths./whitelabel/ips/{id}.get.tags.length: 1
paths./whitelabel/ips/{id}.get.tags[0]: Whitelabel - IPs
paths./whitelabel/ips/{id}.parameters.length: 1
paths./whitelabel/ips/{id}.parameters[0].description: The id of the IP whitelabel
  that you would like to retrieve.
paths./whitelabel/ips/{id}.parameters[0].in: path
paths./whitelabel/ips/{id}.parameters[0].name: id
paths./whitelabel/ips/{id}.parameters[0].required: true
paths./whitelabel/ips/{id}.parameters[0].type: string
paths./whitelabel/ips/{id}/validate.parameters.length: 1
paths./whitelabel/ips/{id}/validate.parameters[0].in: path
paths./whitelabel/ips/{id}/validate.parameters[0].name: id
paths./whitelabel/ips/{id}/validate.parameters[0].required: true
paths./whitelabel/ips/{id}/validate.parameters[0].type: integer
paths./whitelabel/ips/{id}/validate.post.description: |-
  **This endpoint allows you to validate an IP whitelabel.**

  A IP whitelabel consists of a subdomain and domain that will be used to generate a reverse DNS record for a given IP. Once SendGrid has verified that the appropriate A record for the IP has been created, the appropriate reverse DNS record for the IP is generated.

  For more information, please see our [User Guide](https://sendgrid.com/docs/API_Reference/Web_API_v3/Whitelabel/ips.html).
paths./whitelabel/ips/{id}/validate.post.operationId: POST_whitelabel-ips-id-validate
paths./whitelabel/ips/{id}/validate.post.parameters.length: 2
paths./whitelabel/ips/{id}/validate.post.parameters[0].in: body
paths./whitelabel/ips/{id}/validate.post.parameters[0].name: body
paths./whitelabel/ips/{id}/validate.post.parameters[0].schema.type: "null"
paths./whitelabel/ips/{id}/validate.post.parameters[1].$ref: '#/parameters/trait:onBehalfOfSubuser:on-behalf-of'
paths./whitelabel/ips/{id}/validate.post.produces.length: 1
paths./whitelabel/ips/{id}/validate.post.produces[0]: application/json
paths./whitelabel/ips/{id}/validate.post.responses.200.description: ""
paths./whitelabel/ips/{id}/validate.post.responses.200.examples.application/json.id: 1
paths./whitelabel/ips/{id}/validate.post.responses.200.examples.application/json.valid: true
paths./whitelabel/ips/{id}/validate.post.responses.200.examples.application/json.validation_results.a_record.valid: true
paths./whitelabel/ips/{id}/validate.post.responses.200.schema.properties.id.description: The
  id of the IP whitelabel.
paths./whitelabel/ips/{id}/validate.post.responses.200.schema.properties.id.type: integer
paths./whitelabel/ips/{id}/validate.post.responses.200.schema.properties.valid.description: Indicates
  if the IP whitelabel is valid.
paths./whitelabel/ips/{id}/validate.post.responses.200.schema.properties.valid.enum.length: 2
paths./whitelabel/ips/{id}/validate.post.responses.200.schema.properties.valid.enum[0]: true
paths./whitelabel/ips/{id}/validate.post.responses.200.schema.properties.valid.enum[1]: false
paths./whitelabel/ips/{id}/validate.post.responses.200.schema.properties.valid.type: boolean
paths./whitelabel/ips/{id}/validate.post.responses.200.schema.properties.validation_results.description: The
  specific results of the validation.
? paths./whitelabel/ips/{id}/validate.post.responses.200.schema.properties.validation_results.properties.a_record.properties.reason.description
: The reason the IP whitelabel could not be validated. Is null if the whitelabel was
  validated.
? paths./whitelabel/ips/{id}/validate.post.responses.200.schema.properties.validation_results.properties.a_record.properties.reason.type.length
: 2
? paths./whitelabel/ips/{id}/validate.post.responses.200.schema.properties.validation_results.properties.a_record.properties.reason.type[0]
: "null"
? paths./whitelabel/ips/{id}/validate.post.responses.200.schema.properties.validation_results.properties.a_record.properties.reason.type[1]
: string
? paths./whitelabel/ips/{id}/validate.post.responses.200.schema.properties.validation_results.properties.a_record.properties.valid.description
: Indicates if the IP whitelabel could be validated.
? paths./whitelabel/ips/{id}/validate.post.responses.200.schema.properties.validation_results.properties.a_record.properties.valid.enum.length
: 2
? paths./whitelabel/ips/{id}/validate.post.responses.200.schema.properties.validation_results.properties.a_record.properties.valid.enum[0]
: true
? paths./whitelabel/ips/{id}/validate.post.responses.200.schema.properties.validation_results.properties.a_record.properties.valid.enum[1]
: false
? paths./whitelabel/ips/{id}/validate.post.responses.200.schema.properties.validation_results.properties.a_record.properties.valid.type
: boolean
paths./whitelabel/ips/{id}/validate.post.responses.200.schema.properties.validation_results.properties.a_record.required.length: 2
paths./whitelabel/ips/{id}/validate.post.responses.200.schema.properties.validation_results.properties.a_record.required[0]: valid
paths./whitelabel/ips/{id}/validate.post.responses.200.schema.properties.validation_results.properties.a_record.required[1]: reason
paths./whitelabel/ips/{id}/validate.post.responses.200.schema.properties.validation_results.properties.a_record.type: object
paths./whitelabel/ips/{id}/validate.post.responses.200.schema.properties.validation_results.type: object
paths./whitelabel/ips/{id}/validate.post.responses.200.schema.required.length: 3
paths./whitelabel/ips/{id}/validate.post.responses.200.schema.required[0]: id
paths./whitelabel/ips/{id}/validate.post.responses.200.schema.required[1]: valid
paths./whitelabel/ips/{id}/validate.post.responses.200.schema.required[2]: validation_results
paths./whitelabel/ips/{id}/validate.post.responses.200.schema.type: object
paths./whitelabel/ips/{id}/validate.post.responses.404.description: Unexpected error
  in API call. See HTTP response body for details.
paths./whitelabel/ips/{id}/validate.post.responses.404.examples.application/json.errors.length: 1
paths./whitelabel/ips/{id}/validate.post.responses.404.examples.application/json.errors[0].message: Whitelabel
  ip not found.
paths./whitelabel/ips/{id}/validate.post.responses.404.schema.properties.errors.description: The
  error messages for the failed validation.
paths./whitelabel/ips/{id}/validate.post.responses.404.schema.properties.errors.items.properties.message.description: A
  message describing why the IP could not be validated.
paths./whitelabel/ips/{id}/validate.post.responses.404.schema.properties.errors.items.properties.message.type: string
paths./whitelabel/ips/{id}/validate.post.responses.404.schema.properties.errors.items.required.length: 1
paths./whitelabel/ips/{id}/validate.post.responses.404.schema.properties.errors.items.required[0]: message
paths./whitelabel/ips/{id}/validate.post.responses.404.schema.properties.errors.items.type: object
paths./whitelabel/ips/{id}/validate.post.responses.404.schema.properties.errors.type: array
paths./whitelabel/ips/{id}/validate.post.responses.404.schema.required.length: 1
paths./whitelabel/ips/{id}/validate.post.responses.404.schema.required[0]: errors
paths./whitelabel/ips/{id}/validate.post.responses.404.schema.type: object
paths./whitelabel/ips/{id}/validate.post.responses.500.description: ""
paths./whitelabel/ips/{id}/validate.post.responses.500.examples.application/json.errors.length: 1
paths./whitelabel/ips/{id}/validate.post.responses.500.examples.application/json.errors[0].message: internal
  error getting rDNS
paths./whitelabel/ips/{id}/validate.post.responses.500.schema.properties.errors.description: The
  error messages for the failed validation.
paths./whitelabel/ips/{id}/validate.post.responses.500.schema.properties.errors.items.properties.message.description: A
  message describing why the IP whitelabel could not be validated.
paths./whitelabel/ips/{id}/validate.post.responses.500.schema.properties.errors.items.properties.message.type: string
paths./whitelabel/ips/{id}/validate.post.responses.500.schema.properties.errors.items.required.length: 1
paths./whitelabel/ips/{id}/validate.post.responses.500.schema.properties.errors.items.required[0]: message
paths./whitelabel/ips/{id}/validate.post.responses.500.schema.properties.errors.items.type: object
paths./whitelabel/ips/{id}/validate.post.responses.500.schema.properties.errors.type: array
paths./whitelabel/ips/{id}/validate.post.responses.500.schema.required.length: 1
paths./whitelabel/ips/{id}/validate.post.responses.500.schema.required[0]: errors
paths./whitelabel/ips/{id}/validate.post.responses.500.schema.type: object
paths./whitelabel/ips/{id}/validate.post.security.length: 1
paths./whitelabel/ips/{id}/validate.post.security[0].Authorization.length: 0
paths./whitelabel/ips/{id}/validate.post.summary: Validate an IP whitelabel
paths./whitelabel/ips/{id}/validate.post.tags.length: 1
paths./whitelabel/ips/{id}/validate.post.tags[0]: Whitelabel - IPs
paths./whitelabel/links.get.description: |-
  **This endpoint allows you to retrieve all link whitelabels.**

  Email link whitelabels allow all of the click-tracked links you send in your emails to include the URL of your domain instead of sendgrid.net.

  For more information, please see our [User Guide](https://sendgrid.com/docs/API_Reference/Web_API_v3/Whitelabel/links.html).
paths./whitelabel/links.get.operationId: GET_whitelabel-links
paths./whitelabel/links.get.parameters.length: 2
paths./whitelabel/links.get.parameters[0].description: Limits the number of results
  returned per page.
paths./whitelabel/links.get.parameters[0].in: query
paths./whitelabel/links.get.parameters[0].name: limit
paths./whitelabel/links.get.parameters[0].type: integer
paths./whitelabel/links.get.parameters[1].$ref: '#/parameters/trait:onBehalfOfSubuser:on-behalf-of'
paths./whitelabel/links.get.produces.length: 1
paths./whitelabel/links.get.produces[0]: application/json
paths./whitelabel/links.get.responses.200.description: ""
paths./whitelabel/links.get.responses.200.examples.application/json.length: 2
paths./whitelabel/links.get.responses.200.examples.application/json[0].default: true
paths./whitelabel/links.get.responses.200.examples.application/json[0].dns.domain_cname.data: sendgrid.net
paths./whitelabel/links.get.responses.200.examples.application/json[0].dns.domain_cname.host: mail.example.com
paths./whitelabel/links.get.responses.200.examples.application/json[0].dns.domain_cname.type: cname
paths./whitelabel/links.get.responses.200.examples.application/json[0].dns.domain_cname.valid: true
paths./whitelabel/links.get.responses.200.examples.application/json[0].dns.owner_cname.data: sendgrid.net
paths./whitelabel/links.get.responses.200.examples.application/json[0].dns.owner_cname.host: 7.example.com
paths./whitelabel/links.get.responses.200.examples.application/json[0].dns.owner_cname.type: cname
paths./whitelabel/links.get.responses.200.examples.application/json[0].dns.owner_cname.valid: true
paths./whitelabel/links.get.responses.200.examples.application/json[0].domain: example.com
paths./whitelabel/links.get.responses.200.examples.application/json[0].id: 1
paths./whitelabel/links.get.responses.200.examples.application/json[0].legacy: false
paths./whitelabel/links.get.responses.200.examples.application/json[0].subdomain: mail
paths./whitelabel/links.get.responses.200.examples.application/json[0].user_id: 7
paths./whitelabel/links.get.responses.200.examples.application/json[0].username: john@example.com
paths./whitelabel/links.get.responses.200.examples.application/json[0].valid: true
paths./whitelabel/links.get.responses.200.examples.application/json[1].default: false
paths./whitelabel/links.get.responses.200.examples.application/json[1].dns.domain_cname.data: sendgrid.net
paths./whitelabel/links.get.responses.200.examples.application/json[1].dns.domain_cname.host: news.example2.com
paths./whitelabel/links.get.responses.200.examples.application/json[1].dns.domain_cname.type: cname
paths./whitelabel/links.get.responses.200.examples.application/json[1].dns.domain_cname.valid: true
paths./whitelabel/links.get.responses.200.examples.application/json[1].dns.owner_cname.data: sendgrid.net
paths./whitelabel/links.get.responses.200.examples.application/json[1].dns.owner_cname.host: 8.example2.com
paths./whitelabel/links.get.responses.200.examples.application/json[1].dns.owner_cname.type: cname
paths./whitelabel/links.get.responses.200.examples.application/json[1].dns.owner_cname.valid: false
paths./whitelabel/links.get.responses.200.examples.application/json[1].domain: example2.com
paths./whitelabel/links.get.responses.200.examples.application/json[1].id: 2
paths./whitelabel/links.get.responses.200.examples.application/json[1].legacy: false
paths./whitelabel/links.get.responses.200.examples.application/json[1].subdomain: news
paths./whitelabel/links.get.responses.200.examples.application/json[1].user_id: 8
paths./whitelabel/links.get.responses.200.examples.application/json[1].username: john@example.com
paths./whitelabel/links.get.responses.200.examples.application/json[1].valid: false
paths./whitelabel/links.get.responses.200.schema.items.$ref: '#/definitions/link_whitelabel'
paths./whitelabel/links.get.responses.200.schema.type: array
paths./whitelabel/links.get.security.length: 1
paths./whitelabel/links.get.security[0].Authorization.length: 0
paths./whitelabel/links.get.summary: Retrieve all link whitelabels
paths./whitelabel/links.get.tags.length: 1
paths./whitelabel/links.get.tags[0]: Whitelabel - Links
paths./whitelabel/links.post.consumes.length: 1
paths./whitelabel/links.post.consumes[0]: application/json
paths./whitelabel/links.post.description: |-
  **This endpoint allows you to create a new link whitelabel.**

  Email link whitelabels allow all of the click-tracked links you send in your emails to include the URL of your domain instead of sendgrid.net.

  For more information, please see our [User Guide](https://sendgrid.com/docs/API_Reference/Web_API_v3/Whitelabel/links.html).
paths./whitelabel/links.post.operationId: POST_whitelabel-links
paths./whitelabel/links.post.parameters.length: 4
paths./whitelabel/links.post.parameters[0].default: 50
paths./whitelabel/links.post.parameters[0].description: Number of domains to return.
paths./whitelabel/links.post.parameters[0].in: query
paths./whitelabel/links.post.parameters[0].name: limit
paths./whitelabel/links.post.parameters[0].type: integer
paths./whitelabel/links.post.parameters[1].default: 0
paths./whitelabel/links.post.parameters[1].description: Paging offset.
paths./whitelabel/links.post.parameters[1].in: query
paths./whitelabel/links.post.parameters[1].name: offset
paths./whitelabel/links.post.parameters[1].type: integer
paths./whitelabel/links.post.parameters[2].in: body
paths./whitelabel/links.post.parameters[2].name: body
paths./whitelabel/links.post.parameters[2].schema.example.default: true
paths./whitelabel/links.post.parameters[2].schema.example.domain: example.com
paths./whitelabel/links.post.parameters[2].schema.example.subdomain: mail
paths./whitelabel/links.post.parameters[2].schema.properties.default.description: Indicates
  if you want to use this link whitelabel as the fallback, or default, whitelabel.
paths./whitelabel/links.post.parameters[2].schema.properties.default.enum.length: 2
paths./whitelabel/links.post.parameters[2].schema.properties.default.enum[0]: true
paths./whitelabel/links.post.parameters[2].schema.properties.default.enum[1]: false
paths./whitelabel/links.post.parameters[2].schema.properties.default.type: boolean
paths./whitelabel/links.post.parameters[2].schema.properties.domain.description: The
  root domain for your subdomain that you are creating the whitelabel for. This should
  match your FROM email address.
paths./whitelabel/links.post.parameters[2].schema.properties.domain.type: string
paths./whitelabel/links.post.parameters[2].schema.properties.subdomain.description: The
  subdomain to create the link whitelabel for. Must be different from the subdomain
  you used for a domain whitelabel.
paths./whitelabel/links.post.parameters[2].schema.properties.subdomain.type: string
paths./whitelabel/links.post.parameters[2].schema.required.length: 2
paths./whitelabel/links.post.parameters[2].schema.required[0]: domain
paths./whitelabel/links.post.parameters[2].schema.required[1]: subdomain
paths./whitelabel/links.post.parameters[2].schema.type: object
paths./whitelabel/links.post.parameters[3].$ref: '#/parameters/trait:onBehalfOfSubuser:on-behalf-of'
paths./whitelabel/links.post.produces.length: 1
paths./whitelabel/links.post.produces[0]: application/json
paths./whitelabel/links.post.responses.201.description: ""
paths./whitelabel/links.post.responses.201.examples.application/json.default: false
paths./whitelabel/links.post.responses.201.examples.application/json.dns.domain_cname.data: sendgrid.net
paths./whitelabel/links.post.responses.201.examples.application/json.dns.domain_cname.host: mail.example.com
paths./whitelabel/links.post.responses.201.examples.application/json.dns.domain_cname.type: cname
paths./whitelabel/links.post.responses.201.examples.application/json.dns.domain_cname.valid: true
paths./whitelabel/links.post.responses.201.examples.application/json.dns.owner_cname.data: sendgrid.net
paths./whitelabel/links.post.responses.201.examples.application/json.dns.owner_cname.host: 7.example.com
paths./whitelabel/links.post.responses.201.examples.application/json.dns.owner_cname.type: cname
paths./whitelabel/links.post.responses.201.examples.application/json.dns.owner_cname.valid: true
paths./whitelabel/links.post.responses.201.examples.application/json.domain: example.com
paths./whitelabel/links.post.responses.201.examples.application/json.id: 1
paths./whitelabel/links.post.responses.201.examples.application/json.legacy: false
paths./whitelabel/links.post.responses.201.examples.application/json.subdomain: mail
paths./whitelabel/links.post.responses.201.examples.application/json.user_id: 7
paths./whitelabel/links.post.responses.201.examples.application/json.username: john@example.com
paths./whitelabel/links.post.responses.201.examples.application/json.valid: true
paths./whitelabel/links.post.responses.201.schema.$ref: '#/definitions/link_whitelabel'
paths./whitelabel/links.post.security.length: 1
paths./whitelabel/links.post.security[0].Authorization.length: 0
paths./whitelabel/links.post.summary: Create a Link Whitelabel
paths./whitelabel/links.post.tags.length: 1
paths./whitelabel/links.post.tags[0]: Whitelabel - Links
paths./whitelabel/links/{id}.delete.description: |-
  **This endpoint allows you to delete a link whitelabel.**

  Email link whitelabels allow all of the click-tracked links you send in your emails to include the URL of your domain instead of sendgrid.net.

  For more information, please see our [User Guide](https://sendgrid.com/docs/API_Reference/Web_API_v3/Whitelabel/links.html).
paths./whitelabel/links/{id}.delete.operationId: DELETE_whitelabel-links-id
paths./whitelabel/links/{id}.delete.parameters.length: 2
paths./whitelabel/links/{id}.delete.parameters[0].in: body
paths./whitelabel/links/{id}.delete.parameters[0].name: body
paths./whitelabel/links/{id}.delete.parameters[0].schema.type: "null"
paths./whitelabel/links/{id}.delete.parameters[1].$ref: '#/parameters/trait:onBehalfOfSubuser:on-behalf-of'
paths./whitelabel/links/{id}.delete.responses.204.description: ""
paths./whitelabel/links/{id}.delete.responses.204.schema.type: object
paths./whitelabel/links/{id}.delete.security.length: 1
paths./whitelabel/links/{id}.delete.security[0].Authorization.length: 0
paths./whitelabel/links/{id}.delete.summary: Delete a Link Whitelabel
paths./whitelabel/links/{id}.delete.tags.length: 1
paths./whitelabel/links/{id}.delete.tags[0]: Whitelabel - Links
paths./whitelabel/links/{id}.get.description: |-
  **This endpoint allows you to retrieve a specific link whitelabel.**

  Email link whitelabels allow all of the click-tracked links you send in your emails to include the URL of your domain instead of sendgrid.net.

  For more information, please see our [User Guide](https://sendgrid.com/docs/API_Reference/Web_API_v3/Whitelabel/links.html).
paths./whitelabel/links/{id}.get.operationId: GET_whitelabel-links-id
paths./whitelabel/links/{id}.get.parameters.length: 1
paths./whitelabel/links/{id}.get.parameters[0].$ref: '#/parameters/trait:onBehalfOfSubuser:on-behalf-of'
paths./whitelabel/links/{id}.get.produces.length: 1
paths./whitelabel/links/{id}.get.produces[0]: application/json
paths./whitelabel/links/{id}.get.responses.200.description: ""
paths./whitelabel/links/{id}.get.responses.200.examples.application/json.default: false
paths./whitelabel/links/{id}.get.responses.200.examples.application/json.dns.domain_cname.data: sendgrid.net
paths./whitelabel/links/{id}.get.responses.200.examples.application/json.dns.domain_cname.host: mail.example.com
paths./whitelabel/links/{id}.get.responses.200.examples.application/json.dns.domain_cname.type: cname
paths./whitelabel/links/{id}.get.responses.200.examples.application/json.dns.domain_cname.valid: true
paths./whitelabel/links/{id}.get.responses.200.examples.application/json.dns.owner_cname.data: sendgrid.net
paths./whitelabel/links/{id}.get.responses.200.examples.application/json.dns.owner_cname.host: 7.example.com
paths./whitelabel/links/{id}.get.responses.200.examples.application/json.dns.owner_cname.type: cname
paths./whitelabel/links/{id}.get.responses.200.examples.application/json.dns.owner_cname.valid: true
paths./whitelabel/links/{id}.get.responses.200.examples.application/json.domain: example.com
paths./whitelabel/links/{id}.get.responses.200.examples.application/json.id: 1
paths./whitelabel/links/{id}.get.responses.200.examples.application/json.legacy: false
paths./whitelabel/links/{id}.get.responses.200.examples.application/json.subdomain: mail
paths./whitelabel/links/{id}.get.responses.200.examples.application/json.user_id: 7
paths./whitelabel/links/{id}.get.responses.200.examples.application/json.username: john@example.com
paths./whitelabel/links/{id}.get.responses.200.examples.application/json.valid: true
paths./whitelabel/links/{id}.get.responses.200.schema.$ref: '#/definitions/link_whitelabel'
paths./whitelabel/links/{id}.get.security.length: 1
paths./whitelabel/links/{id}.get.security[0].Authorization.length: 0
paths./whitelabel/links/{id}.get.summary: Retrieve a Link Whitelabel
paths./whitelabel/links/{id}.get.tags.length: 1
paths./whitelabel/links/{id}.get.tags[0]: Whitelabel - Links
paths./whitelabel/links/{id}.parameters.length: 1
paths./whitelabel/links/{id}.parameters[0].description: The id of the link whitelabel
  you want to retrieve.
paths./whitelabel/links/{id}.parameters[0].in: path
paths./whitelabel/links/{id}.parameters[0].name: id
paths./whitelabel/links/{id}.parameters[0].required: true
paths./whitelabel/links/{id}.parameters[0].type: integer
paths./whitelabel/links/{id}.patch.consumes.length: 1
paths./whitelabel/links/{id}.patch.consumes[0]: application/json
paths./whitelabel/links/{id}.patch.description: |-
  **This endpoint allows you to update a specific link whitelabel. You can use this endpoint to change a link whitelabel's default status.**

  Email link whitelabels allow all of the click-tracked links you send in your emails to include the URL of your domain instead of sendgrid.net.

  For more information, please see our [User Guide](https://sendgrid.com/docs/API_Reference/Web_API_v3/Whitelabel/links.html).
paths./whitelabel/links/{id}.patch.operationId: PATCH_whitelabel-links-id
paths./whitelabel/links/{id}.patch.parameters.length: 2
paths./whitelabel/links/{id}.patch.parameters[0].in: body
paths./whitelabel/links/{id}.patch.parameters[0].name: body
paths./whitelabel/links/{id}.patch.parameters[0].schema.example.default: true
paths./whitelabel/links/{id}.patch.parameters[0].schema.properties.default.description: Indicates
  if the link whitelabel is set as the default, or fallback, whitelabel.
paths./whitelabel/links/{id}.patch.parameters[0].schema.properties.default.enum.length: 2
paths./whitelabel/links/{id}.patch.parameters[0].schema.properties.default.enum[0]: true
paths./whitelabel/links/{id}.patch.parameters[0].schema.properties.default.enum[1]: false
paths./whitelabel/links/{id}.patch.parameters[0].schema.properties.default.type: boolean
paths./whitelabel/links/{id}.patch.parameters[0].schema.type: object
paths./whitelabel/links/{id}.patch.parameters[1].$ref: '#/parameters/trait:onBehalfOfSubuser:on-behalf-of'
paths./whitelabel/links/{id}.patch.produces.length: 1
paths./whitelabel/links/{id}.patch.produces[0]: application/json
paths./whitelabel/links/{id}.patch.responses.200.description: ""
paths./whitelabel/links/{id}.patch.responses.200.examples.application/json.default: true
paths./whitelabel/links/{id}.patch.responses.200.examples.application/json.dns.domain_cname.data: sendgrid.net
paths./whitelabel/links/{id}.patch.responses.200.examples.application/json.dns.domain_cname.host: mail.example.com
paths./whitelabel/links/{id}.patch.responses.200.examples.application/json.dns.domain_cname.type: cname
paths./whitelabel/links/{id}.patch.responses.200.examples.application/json.dns.domain_cname.valid: true
paths./whitelabel/links/{id}.patch.responses.200.examples.application/json.dns.owner_cname.data: sendgrid.net
paths./whitelabel/links/{id}.patch.responses.200.examples.application/json.dns.owner_cname.host: 7.example.com
paths./whitelabel/links/{id}.patch.responses.200.examples.application/json.dns.owner_cname.type: cname
paths./whitelabel/links/{id}.patch.responses.200.examples.application/json.dns.owner_cname.valid: true
paths./whitelabel/links/{id}.patch.responses.200.examples.application/json.domain: example.com
paths./whitelabel/links/{id}.patch.responses.200.examples.application/json.id: 1
paths./whitelabel/links/{id}.patch.responses.200.examples.application/json.legacy: false
paths./whitelabel/links/{id}.patch.responses.200.examples.application/json.subdomain: mail
paths./whitelabel/links/{id}.patch.responses.200.examples.application/json.user_id: 7
paths./whitelabel/links/{id}.patch.responses.200.examples.application/json.username: john@example.com
paths./whitelabel/links/{id}.patch.responses.200.examples.application/json.valid: true
paths./whitelabel/links/{id}.patch.responses.200.schema.$ref: '#/definitions/link_whitelabel'
paths./whitelabel/links/{id}.patch.security.length: 1
paths./whitelabel/links/{id}.patch.security[0].Authorization.length: 0
paths./whitelabel/links/{id}.patch.summary: Update a Link Whitelabel
paths./whitelabel/links/{id}.patch.tags.length: 1
paths./whitelabel/links/{id}.patch.tags[0]: Whitelabel - Links
paths./whitelabel/links/{id}/validate.parameters.length: 1
paths./whitelabel/links/{id}/validate.parameters[0].description: The id of the link
  whitelabel that you want to validate.
paths./whitelabel/links/{id}/validate.parameters[0].in: path
paths./whitelabel/links/{id}/validate.parameters[0].name: id
paths./whitelabel/links/{id}/validate.parameters[0].required: true
paths./whitelabel/links/{id}/validate.parameters[0].type: integer
paths./whitelabel/links/{id}/validate.post.description: |-
  **This endpoint allows you to validate a link whitelabel.**

  Email link whitelabels allow all of the click-tracked links you send in your emails to include the URL of your domain instead of sendgrid.net.

  For more information, please see our [User Guide](https://sendgrid.com/docs/API_Reference/Web_API_v3/Whitelabel/links.html).
paths./whitelabel/links/{id}/validate.post.operationId: POST_whitelabel-links-id-validate
paths./whitelabel/links/{id}/validate.post.parameters.length: 2
paths./whitelabel/links/{id}/validate.post.parameters[0].in: body
paths./whitelabel/links/{id}/validate.post.parameters[0].name: body
paths./whitelabel/links/{id}/validate.post.parameters[0].schema.type: "null"
paths./whitelabel/links/{id}/validate.post.parameters[1].$ref: '#/parameters/trait:onBehalfOfSubuser:on-behalf-of'
paths./whitelabel/links/{id}/validate.post.produces.length: 1
paths./whitelabel/links/{id}/validate.post.produces[0]: application/json
paths./whitelabel/links/{id}/validate.post.responses.200.description: ""
paths./whitelabel/links/{id}/validate.post.responses.200.examples.application/json.id: 1
paths./whitelabel/links/{id}/validate.post.responses.200.examples.application/json.valid: true
paths./whitelabel/links/{id}/validate.post.responses.200.examples.application/json.validation_results.domain_cname.reason: Expected
  CNAME to match "sendgrid.net." but found "example.com.".
paths./whitelabel/links/{id}/validate.post.responses.200.examples.application/json.validation_results.domain_cname.valid: false
paths./whitelabel/links/{id}/validate.post.responses.200.examples.application/json.validation_results.owner_cname.valid: true
paths./whitelabel/links/{id}/validate.post.responses.200.schema.properties.id.description: The
  id of the link whitelabel.
paths./whitelabel/links/{id}/validate.post.responses.200.schema.properties.id.type: integer
paths./whitelabel/links/{id}/validate.post.responses.200.schema.properties.valid.description: Indicates
  if the link whitelabel is valid.
paths./whitelabel/links/{id}/validate.post.responses.200.schema.properties.valid.enum.length: 2
paths./whitelabel/links/{id}/validate.post.responses.200.schema.properties.valid.enum[0]: true
paths./whitelabel/links/{id}/validate.post.responses.200.schema.properties.valid.enum[1]: false
paths./whitelabel/links/{id}/validate.post.responses.200.schema.properties.valid.type: boolean
paths./whitelabel/links/{id}/validate.post.responses.200.schema.properties.validation_results.description: The
  individual validations results for each of the DNS records associated with this
  link whitelabel.
? paths./whitelabel/links/{id}/validate.post.responses.200.schema.properties.validation_results.properties.domain_cname.description
: The DNS record generated for the sending domain used for this link whitelabel.
? paths./whitelabel/links/{id}/validate.post.responses.200.schema.properties.validation_results.properties.domain_cname.properties.reason.description
: Null if the DNS record is valid. If the DNS record is invalid, this will explain
  why.
? paths./whitelabel/links/{id}/validate.post.responses.200.schema.properties.validation_results.properties.domain_cname.properties.reason.type.length
: 2
? paths./whitelabel/links/{id}/validate.post.responses.200.schema.properties.validation_results.properties.domain_cname.properties.reason.type[0]
: string
? paths./whitelabel/links/{id}/validate.post.responses.200.schema.properties.validation_results.properties.domain_cname.properties.reason.type[1]
: "null"
? paths./whitelabel/links/{id}/validate.post.responses.200.schema.properties.validation_results.properties.domain_cname.properties.valid.description
: Indicates if this DNS record is valid.
? paths./whitelabel/links/{id}/validate.post.responses.200.schema.properties.validation_results.properties.domain_cname.properties.valid.enum.length
: 2
? paths./whitelabel/links/{id}/validate.post.responses.200.schema.properties.validation_results.properties.domain_cname.properties.valid.enum[0]
: true
? paths./whitelabel/links/{id}/validate.post.responses.200.schema.properties.validation_results.properties.domain_cname.properties.valid.enum[1]
: false
? paths./whitelabel/links/{id}/validate.post.responses.200.schema.properties.validation_results.properties.domain_cname.properties.valid.type
: boolean
? paths./whitelabel/links/{id}/validate.post.responses.200.schema.properties.validation_results.properties.domain_cname.required.length
: 2
? paths./whitelabel/links/{id}/validate.post.responses.200.schema.properties.validation_results.properties.domain_cname.required[0]
: valid
? paths./whitelabel/links/{id}/validate.post.responses.200.schema.properties.validation_results.properties.domain_cname.required[1]
: reason
paths./whitelabel/links/{id}/validate.post.responses.200.schema.properties.validation_results.properties.domain_cname.type: object
paths./whitelabel/links/{id}/validate.post.responses.200.schema.properties.validation_results.properties.owner_cname.description: The
  DNS record created to verify the link whitelabel.
? paths./whitelabel/links/{id}/validate.post.responses.200.schema.properties.validation_results.properties.owner_cname.properties.reason.description
: Null if valid. If the DNS record is invalid, this will explain why.
? paths./whitelabel/links/{id}/validate.post.responses.200.schema.properties.validation_results.properties.owner_cname.properties.reason.type.length
: 2
? paths./whitelabel/links/{id}/validate.post.responses.200.schema.properties.validation_results.properties.owner_cname.properties.reason.type[0]
: "null"
? paths./whitelabel/links/{id}/validate.post.responses.200.schema.properties.validation_results.properties.owner_cname.properties.reason.type[1]
: string
? paths./whitelabel/links/{id}/validate.post.responses.200.schema.properties.validation_results.properties.owner_cname.properties.valid.description
: Indicates if the DNS record is valid.
? paths./whitelabel/links/{id}/validate.post.responses.200.schema.properties.validation_results.properties.owner_cname.properties.valid.enum.length
: 2
? paths./whitelabel/links/{id}/validate.post.responses.200.schema.properties.validation_results.properties.owner_cname.properties.valid.enum[0]
: true
? paths./whitelabel/links/{id}/validate.post.responses.200.schema.properties.validation_results.properties.owner_cname.properties.valid.enum[1]
: false
? paths./whitelabel/links/{id}/validate.post.responses.200.schema.properties.validation_results.properties.owner_cname.properties.valid.type
: boolean
? paths./whitelabel/links/{id}/validate.post.responses.200.schema.properties.validation_results.properties.owner_cname.required.length
: 2
paths./whitelabel/links/{id}/validate.post.responses.200.schema.properties.validation_results.properties.owner_cname.required[0]: valid
paths./whitelabel/links/{id}/validate.post.responses.200.schema.properties.validation_results.properties.owner_cname.required[1]: reason
paths./whitelabel/links/{id}/validate.post.responses.200.schema.properties.validation_results.properties.owner_cname.type: object
paths./whitelabel/links/{id}/validate.post.responses.200.schema.properties.validation_results.required.length: 1
paths./whitelabel/links/{id}/validate.post.responses.200.schema.properties.validation_results.required[0]: domain_cname
paths./whitelabel/links/{id}/validate.post.responses.200.schema.properties.validation_results.type: object
paths./whitelabel/links/{id}/validate.post.responses.200.schema.required.length: 3
paths./whitelabel/links/{id}/validate.post.responses.200.schema.required[0]: id
paths./whitelabel/links/{id}/validate.post.responses.200.schema.required[1]: valid
paths./whitelabel/links/{id}/validate.post.responses.200.schema.required[2]: validation_results
paths./whitelabel/links/{id}/validate.post.responses.200.schema.type: object
paths./whitelabel/links/{id}/validate.post.responses.500.description: ""
paths./whitelabel/links/{id}/validate.post.responses.500.examples.application/json.errors.length: 1
paths./whitelabel/links/{id}/validate.post.responses.500.examples.application/json.errors[0].message: internal
  error getting CNAME
paths./whitelabel/links/{id}/validate.post.responses.500.schema.properties.errors.description: The
  reasons why the validation failed.
paths./whitelabel/links/{id}/validate.post.responses.500.schema.properties.errors.items.properties.message.description: The
  reason why the link whitelabel could not be validated.
paths./whitelabel/links/{id}/validate.post.responses.500.schema.properties.errors.items.properties.message.type: string
paths./whitelabel/links/{id}/validate.post.responses.500.schema.properties.errors.items.required.length: 1
paths./whitelabel/links/{id}/validate.post.responses.500.schema.properties.errors.items.required[0]: message
paths./whitelabel/links/{id}/validate.post.responses.500.schema.properties.errors.items.type: object
paths./whitelabel/links/{id}/validate.post.responses.500.schema.properties.errors.type: array
paths./whitelabel/links/{id}/validate.post.responses.500.schema.required.length: 1
paths./whitelabel/links/{id}/validate.post.responses.500.schema.required[0]: errors
paths./whitelabel/links/{id}/validate.post.responses.500.schema.type: object
paths./whitelabel/links/{id}/validate.post.security.length: 1
paths./whitelabel/links/{id}/validate.post.security[0].Authorization.length: 0
paths./whitelabel/links/{id}/validate.post.summary: Validate a Link Whitelabel
paths./whitelabel/links/{id}/validate.post.tags.length: 1
paths./whitelabel/links/{id}/validate.post.tags[0]: Whitelabel - Links
paths./whitelabel/links/{link_id}/subuser.parameters.length: 1
paths./whitelabel/links/{link_id}/subuser.parameters[0].description: The id of the
  link whitelabel you want to associate.
paths./whitelabel/links/{link_id}/subuser.parameters[0].in: path
paths./whitelabel/links/{link_id}/subuser.parameters[0].name: link_id
paths./whitelabel/links/{link_id}/subuser.parameters[0].required: true
paths./whitelabel/links/{link_id}/subuser.parameters[0].type: integer
paths./whitelabel/links/{link_id}/subuser.post.consumes.length: 1
paths./whitelabel/links/{link_id}/subuser.post.consumes[0]: application/json
paths./whitelabel/links/{link_id}/subuser.post.description: |-
  **This endpoint allows you to associate a link whitelabel with a subuser account.**

  Link whitelables can be associated with subusers from the parent account. This functionality allows
  subusers to send mail using their parent's linke whitelabels. To associate a link whitelabel, the parent account
  must first create a whitelabel and validate it. The parent may then associate that whitelabel with a subuser via the API or the Subuser Management page in the user interface.

  Email link whitelabels allow all of the click-tracked links you send in your emails to include the URL of your domain instead of sendgrid.net.

  For more information, please see our [User Guide](https://sendgrid.com/docs/API_Reference/Web_API_v3/Whitelabel/links.html).
paths./whitelabel/links/{link_id}/subuser.post.operationId: POST_whitelabel-links-link_id-subuser
paths./whitelabel/links/{link_id}/subuser.post.parameters.length: 2
paths./whitelabel/links/{link_id}/subuser.post.parameters[0].in: body
paths./whitelabel/links/{link_id}/subuser.post.parameters[0].name: body
paths./whitelabel/links/{link_id}/subuser.post.parameters[0].schema.example.username: jane@example.com
paths./whitelabel/links/{link_id}/subuser.post.parameters[0].schema.properties.username.description: The
  username of the subuser account that you want to associate the link whitelabel with.
paths./whitelabel/links/{link_id}/subuser.post.parameters[0].schema.properties.username.type: string
paths./whitelabel/links/{link_id}/subuser.post.parameters[0].schema.type: object
paths./whitelabel/links/{link_id}/subuser.post.parameters[1].$ref: '#/parameters/trait:onBehalfOfSubuser:on-behalf-of'
paths./whitelabel/links/{link_id}/subuser.post.produces.length: 1
paths./whitelabel/links/{link_id}/subuser.post.produces[0]: application/json
paths./whitelabel/links/{link_id}/subuser.post.responses.200.description: ""
paths./whitelabel/links/{link_id}/subuser.post.responses.200.examples.application/json.default: false
paths./whitelabel/links/{link_id}/subuser.post.responses.200.examples.application/json.dns.domain_cname.data: sendgrid.net
paths./whitelabel/links/{link_id}/subuser.post.responses.200.examples.application/json.dns.domain_cname.host: mail.example.com
paths./whitelabel/links/{link_id}/subuser.post.responses.200.examples.application/json.dns.domain_cname.type: cname
paths./whitelabel/links/{link_id}/subuser.post.responses.200.examples.application/json.dns.domain_cname.valid: true
paths./whitelabel/links/{link_id}/subuser.post.responses.200.examples.application/json.dns.owner_cname.data: sendgrid.net
paths./whitelabel/links/{link_id}/subuser.post.responses.200.examples.application/json.dns.owner_cname.host: 7.example.com
paths./whitelabel/links/{link_id}/subuser.post.responses.200.examples.application/json.dns.owner_cname.type: cname
paths./whitelabel/links/{link_id}/subuser.post.responses.200.examples.application/json.dns.owner_cname.valid: true
paths./whitelabel/links/{link_id}/subuser.post.responses.200.examples.application/json.domain: example.com
paths./whitelabel/links/{link_id}/subuser.post.responses.200.examples.application/json.id: 1
paths./whitelabel/links/{link_id}/subuser.post.responses.200.examples.application/json.legacy: false
paths./whitelabel/links/{link_id}/subuser.post.responses.200.examples.application/json.subdomain: mail
paths./whitelabel/links/{link_id}/subuser.post.responses.200.examples.application/json.user_id: 7
paths./whitelabel/links/{link_id}/subuser.post.responses.200.examples.application/json.username: john@example.com
paths./whitelabel/links/{link_id}/subuser.post.responses.200.examples.application/json.valid: true
paths./whitelabel/links/{link_id}/subuser.post.responses.200.schema.$ref: '#/definitions/link_whitelabel'
paths./whitelabel/links/{link_id}/subuser.post.security.length: 1
paths./whitelabel/links/{link_id}/subuser.post.security[0].Authorization.length: 0
paths./whitelabel/links/{link_id}/subuser.post.summary: Associate a Link Whitelabel
paths./whitelabel/links/{link_id}/subuser.post.tags.length: 1
paths./whitelabel/links/{link_id}/subuser.post.tags[0]: Whitelabel - Links
paths./whitelabel/links/default.get.description: |-
  **This endpoint allows you to retrieve the default link whitelabel.**

  Default link whitelabel is the actual link whitelabel to be used when sending messages. If there are multiple link whitelabels, the default is determined by the following order:
  <ul>
    <li>Validated link whitelabels marked as "default"</li>
    <li>Legacy link whitelabels (migrated from the whitelabel wizard)</li>
    <li>Default SendGrid link whitelabel (i.e. 100.ct.sendgrid.net)</li>
  </ul>

  Email link whitelabels allow all of the click-tracked links you send in your emails to include the URL of your domain instead of sendgrid.net.

  For more information, please see our [User Guide](https://sendgrid.com/docs/API_Reference/Web_API_v3/Whitelabel/links.html).
paths./whitelabel/links/default.get.operationId: GET_whitelabel-links-default
paths./whitelabel/links/default.get.parameters.length: 2
paths./whitelabel/links/default.get.parameters[0].description: The domain to match
  against when finding a corresponding link whitelabel.
paths./whitelabel/links/default.get.parameters[0].in: query
paths./whitelabel/links/default.get.parameters[0].name: domain
paths./whitelabel/links/default.get.parameters[0].type: string
paths./whitelabel/links/default.get.parameters[1].$ref: '#/parameters/trait:onBehalfOfSubuser:on-behalf-of'
paths./whitelabel/links/default.get.produces.length: 1
paths./whitelabel/links/default.get.produces[0]: application/json
paths./whitelabel/links/default.get.responses.200.description: ""
paths./whitelabel/links/default.get.responses.200.examples.application/json.default: false
paths./whitelabel/links/default.get.responses.200.examples.application/json.dns.domain_cname.data: sendgrid.net
paths./whitelabel/links/default.get.responses.200.examples.application/json.dns.domain_cname.host: mail.example.com
paths./whitelabel/links/default.get.responses.200.examples.application/json.dns.domain_cname.type: cname
paths./whitelabel/links/default.get.responses.200.examples.application/json.dns.domain_cname.valid: true
paths./whitelabel/links/default.get.responses.200.examples.application/json.dns.owner_cname.data: sendgrid.net
paths./whitelabel/links/default.get.responses.200.examples.application/json.dns.owner_cname.host: 7.example.com
paths./whitelabel/links/default.get.responses.200.examples.application/json.dns.owner_cname.type: cname
paths./whitelabel/links/default.get.responses.200.examples.application/json.dns.owner_cname.valid: true
paths./whitelabel/links/default.get.responses.200.examples.application/json.domain: example.com
paths./whitelabel/links/default.get.responses.200.examples.application/json.id: 1
paths./whitelabel/links/default.get.responses.200.examples.application/json.legacy: false
paths./whitelabel/links/default.get.responses.200.examples.application/json.subdomain: mail
paths./whitelabel/links/default.get.responses.200.examples.application/json.user_id: 7
paths./whitelabel/links/default.get.responses.200.examples.application/json.username: john@example.com
paths./whitelabel/links/default.get.responses.200.examples.application/json.valid: true
paths./whitelabel/links/default.get.responses.200.schema.$ref: '#/definitions/link_whitelabel'
paths./whitelabel/links/default.get.security.length: 1
paths./whitelabel/links/default.get.security[0].Authorization.length: 0
paths./whitelabel/links/default.get.summary: Retrieve a Default Link Whitelabel
paths./whitelabel/links/default.get.tags.length: 1
paths./whitelabel/links/default.get.tags[0]: Whitelabel - Links
paths./whitelabel/links/subuser.delete.description: |-
  **This endpoint allows you to disassociate a link whitelabel from a subuser.**

  Link whitelables can be associated with subusers from the parent account. This functionality allows
  subusers to send mail using their parent's linke whitelabels. To associate a link whitelabel, the parent account
  must first create a whitelabel and validate it. The parent may then associate that whitelabel with a subuser via the API or the Subuser Management page in the user interface.

  Email link whitelabels allow all of the click-tracked links you send in your emails to include the URL of your domain instead of sendgrid.net.

  For more information, please see our [User Guide](https://sendgrid.com/docs/API_Reference/Web_API_v3/Whitelabel/links.html).
paths./whitelabel/links/subuser.delete.operationId: DELETE_whitelabel-links-subuser
paths./whitelabel/links/subuser.delete.parameters.length: 3
paths./whitelabel/links/subuser.delete.parameters[0].description: The username of
  the subuser account that you want to disassociate a link whitelabel from.
paths./whitelabel/links/subuser.delete.parameters[0].in: query
paths./whitelabel/links/subuser.delete.parameters[0].name: username
paths./whitelabel/links/subuser.delete.parameters[0].required: true
paths./whitelabel/links/subuser.delete.parameters[0].type: string
paths./whitelabel/links/subuser.delete.parameters[1].in: body
paths./whitelabel/links/subuser.delete.parameters[1].name: body
paths./whitelabel/links/subuser.delete.parameters[1].schema.type: "null"
paths./whitelabel/links/subuser.delete.parameters[2].$ref: '#/parameters/trait:onBehalfOfSubuser:on-behalf-of'
paths./whitelabel/links/subuser.delete.responses.204.description: ""
paths./whitelabel/links/subuser.delete.responses.204.schema.type: object
paths./whitelabel/links/subuser.delete.security.length: 1
paths./whitelabel/links/subuser.delete.security[0].Authorization.length: 0
paths./whitelabel/links/subuser.delete.summary: Disassociate a Link Whitelabel
paths./whitelabel/links/subuser.delete.tags.length: 1
paths./whitelabel/links/subuser.delete.tags[0]: Whitelabel - Links
paths./whitelabel/links/subuser.get.description: |-
  **This endpoint allows you to retrieve the associated link whitelabel for a subuser.**

  Link whitelables can be associated with subusers from the parent account. This functionality allows
  subusers to send mail using their parent's linke whitelabels. To associate a link whitelabel, the parent account
  must first create a whitelabel and validate it. The parent may then associate that whitelabel with a subuser via the API or the Subuser Management page in the user interface.

  Email link whitelabels allow all of the click-tracked links you send in your emails to include the URL of your domain instead of sendgrid.net.

  For more information, please see our [User Guide](https://sendgrid.com/docs/API_Reference/Web_API_v3/Whitelabel/links.html).
paths./whitelabel/links/subuser.get.operationId: GET_whitelabel-links-subuser
paths./whitelabel/links/subuser.get.parameters.length: 2
paths./whitelabel/links/subuser.get.parameters[0].description: The username of the
  subuser to retrieve associated link whitelabels for.
paths./whitelabel/links/subuser.get.parameters[0].in: query
paths./whitelabel/links/subuser.get.parameters[0].name: username
paths./whitelabel/links/subuser.get.parameters[0].required: true
paths./whitelabel/links/subuser.get.parameters[0].type: string
paths./whitelabel/links/subuser.get.parameters[1].$ref: '#/parameters/trait:onBehalfOfSubuser:on-behalf-of'
paths./whitelabel/links/subuser.get.produces.length: 1
paths./whitelabel/links/subuser.get.produces[0]: application/json
paths./whitelabel/links/subuser.get.responses.200.description: ""
paths./whitelabel/links/subuser.get.responses.200.examples.application/json.default: false
paths./whitelabel/links/subuser.get.responses.200.examples.application/json.dns.domain_cname.data: sendgrid.net
paths./whitelabel/links/subuser.get.responses.200.examples.application/json.dns.domain_cname.host: mail.example.com
paths./whitelabel/links/subuser.get.responses.200.examples.application/json.dns.domain_cname.type: cname
paths./whitelabel/links/subuser.get.responses.200.examples.application/json.dns.domain_cname.valid: true
paths./whitelabel/links/subuser.get.responses.200.examples.application/json.dns.owner_cname.data: sendgrid.net
paths./whitelabel/links/subuser.get.responses.200.examples.application/json.dns.owner_cname.host: 7.example.com
paths./whitelabel/links/subuser.get.responses.200.examples.application/json.dns.owner_cname.type: cname
paths./whitelabel/links/subuser.get.responses.200.examples.application/json.dns.owner_cname.valid: true
paths./whitelabel/links/subuser.get.responses.200.examples.application/json.domain: example.com
paths./whitelabel/links/subuser.get.responses.200.examples.application/json.id: 1
paths./whitelabel/links/subuser.get.responses.200.examples.application/json.legacy: false
paths./whitelabel/links/subuser.get.responses.200.examples.application/json.subdomain: mail
paths./whitelabel/links/subuser.get.responses.200.examples.application/json.user_id: 7
paths./whitelabel/links/subuser.get.responses.200.examples.application/json.username: john@example.com
paths./whitelabel/links/subuser.get.responses.200.examples.application/json.valid: true
paths./whitelabel/links/subuser.get.responses.200.schema.$ref: '#/definitions/link_whitelabel'
paths./whitelabel/links/subuser.get.security.length: 1
paths./whitelabel/links/subuser.get.security[0].Authorization.length: 0
paths./whitelabel/links/subuser.get.summary: Retrieve Associated Link Whitelabel
paths./whitelabel/links/subuser.get.tags.length: 1
paths./whitelabel/links/subuser.get.tags[0]: Whitelabel - Links
schemes.length: 2
schemes[0]: http
schemes[1]: https
securityDefinitions.Authorization.in: header
securityDefinitions.Authorization.name: Authorization
securityDefinitions.Authorization.type: apiKey
swagger: "2.0"
