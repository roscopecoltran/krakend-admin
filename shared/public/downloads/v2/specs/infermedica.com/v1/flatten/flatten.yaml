basePath: /v1
definitions.Choice.properties.id.enum.length: 3
definitions.Choice.properties.id.enum[0]: present
definitions.Choice.properties.id.enum[1]: absent
definitions.Choice.properties.id.enum[2]: unknown
definitions.Choice.properties.id.type: string
definitions.Choice.properties.label.type: string
definitions.Choice.required.length: 2
definitions.Choice.required[0]: id
definitions.Choice.required[1]: label
definitions.Choice.type: object
definitions.Condition.properties.acuteness.enum.length: 4
definitions.Condition.properties.acuteness.enum[0]: chronic
definitions.Condition.properties.acuteness.enum[1]: chronic_with_exacerbations
definitions.Condition.properties.acuteness.enum[2]: acute_potentially_chronic
definitions.Condition.properties.acuteness.enum[3]: acute
definitions.Condition.properties.acuteness.type: string
definitions.Condition.properties.categories.items.type: string
definitions.Condition.properties.categories.type: array
definitions.Condition.properties.id.type: string
definitions.Condition.properties.name.type: string
definitions.Condition.properties.prevalence.enum.length: 4
definitions.Condition.properties.prevalence.enum[0]: very_rare
definitions.Condition.properties.prevalence.enum[1]: rare
definitions.Condition.properties.prevalence.enum[2]: moderate
definitions.Condition.properties.prevalence.enum[3]: common
definitions.Condition.properties.prevalence.type: string
definitions.Condition.properties.severity.enum.length: 3
definitions.Condition.properties.severity.enum[0]: mild
definitions.Condition.properties.severity.enum[1]: moderate
definitions.Condition.properties.severity.enum[2]: severe
definitions.Condition.properties.severity.type: string
definitions.Condition.properties.sex_filter.enum.length: 3
definitions.Condition.properties.sex_filter.enum[0]: female
definitions.Condition.properties.sex_filter.enum[1]: male
definitions.Condition.properties.sex_filter.enum[2]: both
definitions.Condition.properties.sex_filter.type: string
definitions.Condition.required.length: 4
definitions.Condition.required[0]: categories
definitions.Condition.required[1]: id
definitions.Condition.required[2]: name
definitions.Condition.required[3]: sex_filter
definitions.Condition.type: object
definitions.ConditionProbability.properties.id.description: condition id
definitions.ConditionProbability.properties.id.type: string
definitions.ConditionProbability.properties.name.description: condition name
definitions.ConditionProbability.properties.name.type: string
definitions.ConditionProbability.properties.probability.format: double
definitions.ConditionProbability.properties.probability.type: number
definitions.ConditionProbability.required.length: 3
definitions.ConditionProbability.required[0]: id
definitions.ConditionProbability.required[1]: name
definitions.ConditionProbability.required[2]: probability
definitions.ConditionProbability.type: object
definitions.DatabaseInfo.properties.conditions_count.format: int32
definitions.DatabaseInfo.properties.conditions_count.type: integer
definitions.DatabaseInfo.properties.observations_count.format: int32
definitions.DatabaseInfo.properties.observations_count.type: integer
definitions.DatabaseInfo.properties.updated_at.description: time of last database
  update in ISO 8601 format
definitions.DatabaseInfo.properties.updated_at.type: string
definitions.DatabaseInfo.required.length: 3
definitions.DatabaseInfo.required[0]: conditions_count
definitions.DatabaseInfo.required[1]: observations_count
definitions.DatabaseInfo.required[2]: updated_at
definitions.DatabaseInfo.type: object
definitions.DiagnosisRequest.properties.age.format: int32
definitions.DiagnosisRequest.properties.age.type: integer
definitions.DiagnosisRequest.properties.evaluated_at.description: time when diagnosis
  was evaluated in ISO 8601 format
definitions.DiagnosisRequest.properties.evaluated_at.type: string
definitions.DiagnosisRequest.properties.evidence.items.$ref: '#/definitions/Evidence'
definitions.DiagnosisRequest.properties.evidence.type: array
definitions.DiagnosisRequest.properties.extras.additionalProperties.type: object
definitions.DiagnosisRequest.properties.extras.type: object
definitions.DiagnosisRequest.properties.pursued.description: list of ids of pursued
  conditions
definitions.DiagnosisRequest.properties.pursued.items.type: string
definitions.DiagnosisRequest.properties.pursued.type: array
definitions.DiagnosisRequest.properties.sex.enum.length: 2
definitions.DiagnosisRequest.properties.sex.enum[0]: female
definitions.DiagnosisRequest.properties.sex.enum[1]: male
definitions.DiagnosisRequest.properties.sex.type: string
definitions.DiagnosisRequest.required.length: 2
definitions.DiagnosisRequest.required[0]: age
definitions.DiagnosisRequest.required[1]: sex
definitions.DiagnosisRequest.type: object
definitions.DiagnosisResponse.properties.conditions.items.$ref: '#/definitions/ConditionProbability'
definitions.DiagnosisResponse.properties.conditions.type: array
definitions.DiagnosisResponse.properties.extras.additionalProperties.type: object
definitions.DiagnosisResponse.properties.extras.type: object
definitions.DiagnosisResponse.properties.question.$ref: '#/definitions/Question'
definitions.DiagnosisResponse.type: object
definitions.Evidence.properties.choice_id.enum.length: 3
definitions.Evidence.properties.choice_id.enum[0]: present
definitions.Evidence.properties.choice_id.enum[1]: absent
definitions.Evidence.properties.choice_id.enum[2]: unknown
definitions.Evidence.properties.choice_id.type: string
definitions.Evidence.properties.id.description: id of observation, risk factor or
  condition
definitions.Evidence.properties.id.type: string
definitions.Evidence.properties.observed_at.description: time when evidence was observed
  in ISO 8601 format
definitions.Evidence.properties.observed_at.type: string
definitions.Evidence.required.length: 2
definitions.Evidence.required[0]: choice_id
definitions.Evidence.required[1]: id
definitions.Evidence.type: object
definitions.Observation.properties.category.type: string
definitions.Observation.properties.children.description: ids of child observations
  grouped by their relation with this observation
definitions.Observation.properties.children.type: object
definitions.Observation.properties.id.type: string
definitions.Observation.properties.name.type: string
definitions.Observation.properties.parent_id.description: id of parent observation
definitions.Observation.properties.parent_id.type: string
definitions.Observation.properties.parent_relation_type.description: type of relation
  with parent observation
definitions.Observation.properties.parent_relation_type.enum.length: 8
definitions.Observation.properties.parent_relation_type.enum[0]: base
definitions.Observation.properties.parent_relation_type.enum[1]: duration
definitions.Observation.properties.parent_relation_type.enum[2]: severity
definitions.Observation.properties.parent_relation_type.enum[3]: character
definitions.Observation.properties.parent_relation_type.enum[4]: exacerbating_factor
definitions.Observation.properties.parent_relation_type.enum[5]: diminishing_factor
definitions.Observation.properties.parent_relation_type.enum[6]: location
definitions.Observation.properties.parent_relation_type.enum[7]: radiation
definitions.Observation.properties.parent_relation_type.type: string
definitions.Observation.properties.sex_filter.enum.length: 3
definitions.Observation.properties.sex_filter.enum[0]: female
definitions.Observation.properties.sex_filter.enum[1]: male
definitions.Observation.properties.sex_filter.enum[2]: both
definitions.Observation.properties.sex_filter.type: string
definitions.Observation.properties.valid_for.description: number of days that this
  observation remains valid
definitions.Observation.properties.valid_for.format: int32
definitions.Observation.properties.valid_for.type: integer
definitions.Observation.required.length: 3
definitions.Observation.required[0]: id
definitions.Observation.required[1]: name
definitions.Observation.required[2]: sex_filter
definitions.Observation.type: object
definitions.Question.properties.items.description: one or more observations to evaluate
definitions.Question.properties.items.items.$ref: '#/definitions/QuestionItem'
definitions.Question.properties.items.type: array
definitions.Question.properties.text.description: question text
definitions.Question.properties.text.type: string
definitions.Question.properties.type.enum.length: 3
definitions.Question.properties.type.enum[0]: single
definitions.Question.properties.type.enum[1]: group_single
definitions.Question.properties.type.enum[2]: group_multiple
definitions.Question.properties.type.type: string
definitions.Question.required.length: 2
definitions.Question.required[0]: items
definitions.Question.required[1]: text
definitions.Question.type: object
definitions.QuestionItem.properties.choices.description: list of available answer
  choices
definitions.QuestionItem.properties.choices.items.$ref: '#/definitions/Choice'
definitions.QuestionItem.properties.choices.type: array
definitions.QuestionItem.properties.id.description: observation id
definitions.QuestionItem.properties.id.type: string
definitions.QuestionItem.properties.name.description: name or alias of observation
definitions.QuestionItem.properties.name.type: string
definitions.QuestionItem.required.length: 3
definitions.QuestionItem.required[0]: choices
definitions.QuestionItem.required[1]: id
definitions.QuestionItem.required[2]: name
definitions.QuestionItem.type: object
definitions.RiskFactor.properties.id.type: string
definitions.RiskFactor.properties.name.type: string
definitions.RiskFactor.required.length: 2
definitions.RiskFactor.required[0]: id
definitions.RiskFactor.required[1]: name
definitions.RiskFactor.type: object
host: api.infermedica.com
info.description: Empower your healthcare services with intelligent diagnostic insights
  of Infermedica API.
info.title: Infermedica
info.version: v1
info.x-logo.backgroundColor: '#1576D1'
info.x-logo.url: https://api.apis.guru/v2/cache/logo/https_pbs.twimg.com_profile_images_760115506867208192_mwND7blL_400x400.jpg
info.x-origin.length: 1
info.x-origin[0].format: swagger
info.x-origin[0].url: https://api.infermedica.com/v1/swagger.json
info.x-origin[0].version: "2.0"
info.x-preferred: true
info.x-providerName: infermedica.com
paths./conditions.get.description: Returns a list of all available conditions.
paths./conditions.get.operationId: getAllConditions
paths./conditions.get.parameters.length: 0
paths./conditions.get.responses.200.description: successful operation
paths./conditions.get.responses.200.schema.items.$ref: '#/definitions/Condition'
paths./conditions.get.responses.200.schema.type: array
paths./conditions.get.summary: List all conditions
paths./conditions.get.tags.length: 1
paths./conditions.get.tags[0]: conditions
paths./conditions/{id}.get.description: Returns details of a single condition specified
  by id parameter.
paths./conditions/{id}.get.operationId: getCondition
paths./conditions/{id}.get.parameters.length: 1
paths./conditions/{id}.get.parameters[0].description: condition id
paths./conditions/{id}.get.parameters[0].in: path
paths./conditions/{id}.get.parameters[0].name: id
paths./conditions/{id}.get.parameters[0].required: true
paths./conditions/{id}.get.parameters[0].type: string
paths./conditions/{id}.get.responses.200.description: successful operation
paths./conditions/{id}.get.responses.200.schema.$ref: '#/definitions/Condition'
paths./conditions/{id}.get.responses.400.description: Invalid id specified
paths./conditions/{id}.get.responses.404.description: Condition not found
paths./conditions/{id}.get.summary: Get condition by id
paths./conditions/{id}.get.tags.length: 1
paths./conditions/{id}.get.tags[0]: conditions
paths./diagnosis.post.consumes.length: 1
paths./diagnosis.post.consumes[0]: application/json
paths./diagnosis.post.description: Computes possible diagnoses and relevant observations
  based on provided patient information.
paths./diagnosis.post.operationId: computeDiagnosis
paths./diagnosis.post.parameters.length: 1
paths./diagnosis.post.parameters[0].in: body
paths./diagnosis.post.parameters[0].name: body
paths./diagnosis.post.parameters[0].required: true
paths./diagnosis.post.parameters[0].schema.$ref: '#/definitions/DiagnosisRequest'
paths./diagnosis.post.responses.200.description: successful operation
paths./diagnosis.post.responses.200.schema.$ref: '#/definitions/DiagnosisResponse'
paths./diagnosis.post.summary: Query diagnostic engine
paths./diagnosis.post.tags.length: 1
paths./diagnosis.post.tags[0]: diagnosis
paths./info.get.description: Returns information about data used by diagnostic engine.
paths./info.get.operationId: getDatabaseInfo
paths./info.get.parameters.length: 0
paths./info.get.responses.200.description: successful operation
paths./info.get.responses.200.schema.$ref: '#/definitions/DatabaseInfo'
paths./info.get.summary: Get database information
paths./info.get.tags.length: 1
paths./info.get.tags[0]: info
paths./lookup.get.description: Returns details of a single observation if matched
  by the given phrase.
paths./lookup.get.operationId: getMatchingObservation
paths./lookup.get.parameters.length: 2
paths./lookup.get.parameters[0].description: phrase to match
paths./lookup.get.parameters[0].in: query
paths./lookup.get.parameters[0].name: phrase
paths./lookup.get.parameters[0].required: true
paths./lookup.get.parameters[0].type: string
paths./lookup.get.parameters[1].description: sex filter
paths./lookup.get.parameters[1].enum.length: 2
paths./lookup.get.parameters[1].enum[0]: female
paths./lookup.get.parameters[1].enum[1]: male
paths./lookup.get.parameters[1].in: query
paths./lookup.get.parameters[1].name: sex
paths./lookup.get.parameters[1].required: false
paths./lookup.get.parameters[1].type: string
paths./lookup.get.responses.200.description: successful operation
paths./lookup.get.responses.200.schema.$ref: '#/definitions/Observation'
paths./lookup.get.responses.400.description: Phrase missing or invalid sex specified
paths./lookup.get.responses.404.description: No observation matches given phrase
paths./lookup.get.summary: Find observation matching given phrase
paths./lookup.get.tags.length: 1
paths./lookup.get.tags[0]: lookup
paths./observations.get.description: Returns a list of all available observations.
paths./observations.get.operationId: getAllObservations
paths./observations.get.parameters.length: 0
paths./observations.get.responses.200.description: successful operation
paths./observations.get.responses.200.schema.items.$ref: '#/definitions/Observation'
paths./observations.get.responses.200.schema.type: array
paths./observations.get.summary: List all observations
paths./observations.get.tags.length: 1
paths./observations.get.tags[0]: observations
paths./observations/{id}.get.description: Returns details of a single observation
  specified by id parameter.
paths./observations/{id}.get.operationId: getObservation
paths./observations/{id}.get.parameters.length: 1
paths./observations/{id}.get.parameters[0].description: observation id
paths./observations/{id}.get.parameters[0].in: path
paths./observations/{id}.get.parameters[0].name: id
paths./observations/{id}.get.parameters[0].required: true
paths./observations/{id}.get.parameters[0].type: string
paths./observations/{id}.get.responses.200.description: successful operation
paths./observations/{id}.get.responses.200.schema.$ref: '#/definitions/Observation'
paths./observations/{id}.get.responses.400.description: Invalid id specified
paths./observations/{id}.get.responses.404.description: Observation not found
paths./observations/{id}.get.summary: Get observation by id
paths./observations/{id}.get.tags.length: 1
paths./observations/{id}.get.tags[0]: observations
paths./risk_factors.get.description: Returns a list of all available risk factors.
paths./risk_factors.get.operationId: getAllRiskFactors
paths./risk_factors.get.parameters.length: 0
paths./risk_factors.get.responses.200.description: successful operation
paths./risk_factors.get.responses.200.schema.items.$ref: '#/definitions/RiskFactor'
paths./risk_factors.get.responses.200.schema.type: array
paths./risk_factors.get.summary: List all risk factors
paths./risk_factors.get.tags.length: 1
paths./risk_factors.get.tags[0]: risk_factors
paths./risk_factors/{id}.get.description: Returns details of a single risk factor
  specified by id parameter.
paths./risk_factors/{id}.get.operationId: getRiskFactor
paths./risk_factors/{id}.get.parameters.length: 1
paths./risk_factors/{id}.get.parameters[0].description: risk factor id
paths./risk_factors/{id}.get.parameters[0].in: path
paths./risk_factors/{id}.get.parameters[0].name: id
paths./risk_factors/{id}.get.parameters[0].required: true
paths./risk_factors/{id}.get.parameters[0].type: string
paths./risk_factors/{id}.get.responses.200.description: successful operation
paths./risk_factors/{id}.get.responses.200.schema.$ref: '#/definitions/RiskFactor'
paths./risk_factors/{id}.get.responses.400.description: Invalid id specified
paths./risk_factors/{id}.get.responses.404.description: Risk factor not found
paths./risk_factors/{id}.get.summary: Get risk factor by id
paths./risk_factors/{id}.get.tags.length: 1
paths./risk_factors/{id}.get.tags[0]: risk_factors
produces.length: 1
produces[0]: application/json
schemes.length: 1
schemes[0]: https
swagger: "2.0"
tags.length: 6
tags[0].name: info
tags[1].name: risk_factors
tags[2].name: diagnosis
tags[3].name: conditions
tags[4].name: observations
tags[5].name: lookup
