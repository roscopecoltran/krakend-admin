{
	"consumes.length": 2,
	"consumes[0]": "application/json",
	"consumes[1]": "text/json",
	"definitions.ClassicAdministrator.description": "Classic Administrators",
	"definitions.ClassicAdministrator.properties.id.description": "The ID of the administrator.",
	"definitions.ClassicAdministrator.properties.id.type": "string",
	"definitions.ClassicAdministrator.properties.name.description": "The name of the administrator.",
	"definitions.ClassicAdministrator.properties.name.type": "string",
	"definitions.ClassicAdministrator.properties.properties.$ref": "#/definitions/ClassicAdministratorProperties",
	"definitions.ClassicAdministrator.properties.properties.description": "Properties for the classic administrator.",
	"definitions.ClassicAdministrator.properties.type.description": "The type of the administrator.",
	"definitions.ClassicAdministrator.properties.type.type": "string",
	"definitions.ClassicAdministratorListResult.description": "ClassicAdministrator list result information.",
	"definitions.ClassicAdministratorListResult.properties.nextLink.description": "The URL to use for getting the next set of results.",
	"definitions.ClassicAdministratorListResult.properties.nextLink.type": "string",
	"definitions.ClassicAdministratorListResult.properties.value.description": "An array of administrators.",
	"definitions.ClassicAdministratorListResult.properties.value.items.$ref": "#/definitions/ClassicAdministrator",
	"definitions.ClassicAdministratorListResult.properties.value.type": "array",
	"definitions.ClassicAdministratorProperties.description": "Classic Administrator properties.",
	"definitions.ClassicAdministratorProperties.properties.emailAddress.description": "The email address of the administrator.",
	"definitions.ClassicAdministratorProperties.properties.emailAddress.type": "string",
	"definitions.ClassicAdministratorProperties.properties.role.description": "The role of the administrator.",
	"definitions.ClassicAdministratorProperties.properties.role.type": "string",
	"definitions.Permission.description": "Role definition permissions.",
	"definitions.Permission.properties.actions.description": "Allowed actions.",
	"definitions.Permission.properties.actions.items.type": "string",
	"definitions.Permission.properties.actions.type": "array",
	"definitions.Permission.properties.notActions.description": "Denied actions.",
	"definitions.Permission.properties.notActions.items.type": "string",
	"definitions.Permission.properties.notActions.type": "array",
	"definitions.PermissionGetResult.description": "Permissions information.",
	"definitions.PermissionGetResult.properties.nextLink.description": "The URL to use for getting the next set of results.",
	"definitions.PermissionGetResult.properties.nextLink.type": "string",
	"definitions.PermissionGetResult.properties.value.description": "An array of permissions.",
	"definitions.PermissionGetResult.properties.value.items.$ref": "#/definitions/Permission",
	"definitions.PermissionGetResult.properties.value.type": "array",
	"definitions.ProviderOperation.description": "Operation",
	"definitions.ProviderOperation.properties.description.description": "The operation description.",
	"definitions.ProviderOperation.properties.description.type": "string",
	"definitions.ProviderOperation.properties.displayName.description": "The operation display name.",
	"definitions.ProviderOperation.properties.displayName.type": "string",
	"definitions.ProviderOperation.properties.name.description": "The operation name.",
	"definitions.ProviderOperation.properties.name.type": "string",
	"definitions.ProviderOperation.properties.origin.description": "The operation origin.",
	"definitions.ProviderOperation.properties.origin.type": "string",
	"definitions.ProviderOperation.properties.properties.description": "The operation properties.",
	"definitions.ProviderOperation.properties.properties.type": "object",
	"definitions.ProviderOperationsMetadata.description": "Provider Operations metadata",
	"definitions.ProviderOperationsMetadata.properties.displayName.description": "The provider display name.",
	"definitions.ProviderOperationsMetadata.properties.displayName.type": "string",
	"definitions.ProviderOperationsMetadata.properties.id.description": "The provider id.",
	"definitions.ProviderOperationsMetadata.properties.id.type": "string",
	"definitions.ProviderOperationsMetadata.properties.name.description": "The provider name.",
	"definitions.ProviderOperationsMetadata.properties.name.type": "string",
	"definitions.ProviderOperationsMetadata.properties.operations.description": "The provider operations.",
	"definitions.ProviderOperationsMetadata.properties.operations.items.$ref": "#/definitions/ProviderOperation",
	"definitions.ProviderOperationsMetadata.properties.operations.type": "array",
	"definitions.ProviderOperationsMetadata.properties.resourceTypes.description": "The provider resource types",
	"definitions.ProviderOperationsMetadata.properties.resourceTypes.items.$ref": "#/definitions/ResourceType",
	"definitions.ProviderOperationsMetadata.properties.resourceTypes.type": "array",
	"definitions.ProviderOperationsMetadata.properties.type.description": "The provider type.",
	"definitions.ProviderOperationsMetadata.properties.type.type": "string",
	"definitions.ProviderOperationsMetadataListResult.description": "Provider operations metadata list",
	"definitions.ProviderOperationsMetadataListResult.properties.nextLink.description": "The URL to use for getting the next set of results.",
	"definitions.ProviderOperationsMetadataListResult.properties.nextLink.type": "string",
	"definitions.ProviderOperationsMetadataListResult.properties.value.description": "The list of providers.",
	"definitions.ProviderOperationsMetadataListResult.properties.value.items.$ref": "#/definitions/ProviderOperationsMetadata",
	"definitions.ProviderOperationsMetadataListResult.properties.value.type": "array",
	"definitions.ResourceType.description": "Resource Type",
	"definitions.ResourceType.properties.displayName.description": "The resource type display name.",
	"definitions.ResourceType.properties.displayName.type": "string",
	"definitions.ResourceType.properties.name.description": "The resource type name.",
	"definitions.ResourceType.properties.name.type": "string",
	"definitions.ResourceType.properties.operations.description": "The resource type operations.",
	"definitions.ResourceType.properties.operations.items.$ref": "#/definitions/ProviderOperation",
	"definitions.ResourceType.properties.operations.type": "array",
	"definitions.RoleAssignment.description": "Role Assignments",
	"definitions.RoleAssignment.properties.id.description": "The role assignment ID.",
	"definitions.RoleAssignment.properties.id.type": "string",
	"definitions.RoleAssignment.properties.name.description": "The role assignment name.",
	"definitions.RoleAssignment.properties.name.type": "string",
	"definitions.RoleAssignment.properties.properties.$ref": "#/definitions/RoleAssignmentPropertiesWithScope",
	"definitions.RoleAssignment.properties.properties.description": "Role assignment properties.",
	"definitions.RoleAssignment.properties.type.description": "The role assignment type.",
	"definitions.RoleAssignment.properties.type.type": "string",
	"definitions.RoleAssignmentCreateParameters.description": "Role assignment create parameters.",
	"definitions.RoleAssignmentCreateParameters.properties.properties.$ref": "#/definitions/RoleAssignmentProperties",
	"definitions.RoleAssignmentCreateParameters.properties.properties.description": "Role assignment properties.",
	"definitions.RoleAssignmentFilter.description": "Role Assignments filter",
	"definitions.RoleAssignmentFilter.properties.principalId.description": "Returns role assignment of the specific principal.",
	"definitions.RoleAssignmentFilter.properties.principalId.type": "string",
	"definitions.RoleAssignmentListResult.description": "Role assignment list operation result.",
	"definitions.RoleAssignmentListResult.properties.nextLink.description": "The URL to use for getting the next set of results.",
	"definitions.RoleAssignmentListResult.properties.nextLink.type": "string",
	"definitions.RoleAssignmentListResult.properties.value.description": "Role assignment list.",
	"definitions.RoleAssignmentListResult.properties.value.items.$ref": "#/definitions/RoleAssignment",
	"definitions.RoleAssignmentListResult.properties.value.type": "array",
	"definitions.RoleAssignmentProperties.description": "Role assignment properties.",
	"definitions.RoleAssignmentProperties.properties.principalId.description": "The principal ID assigned to the role. This maps to the ID inside the Active Directory. It can point to a user, service principal, or security group.",
	"definitions.RoleAssignmentProperties.properties.principalId.type": "string",
	"definitions.RoleAssignmentProperties.properties.roleDefinitionId.description": "The role definition ID used in the role assignment.",
	"definitions.RoleAssignmentProperties.properties.roleDefinitionId.type": "string",
	"definitions.RoleAssignmentPropertiesWithScope.description": "Role assignment properties with scope.",
	"definitions.RoleAssignmentPropertiesWithScope.properties.principalId.description": "The principal ID.",
	"definitions.RoleAssignmentPropertiesWithScope.properties.principalId.type": "string",
	"definitions.RoleAssignmentPropertiesWithScope.properties.roleDefinitionId.description": "The role definition ID.",
	"definitions.RoleAssignmentPropertiesWithScope.properties.roleDefinitionId.type": "string",
	"definitions.RoleAssignmentPropertiesWithScope.properties.scope.description": "The role assignment scope.",
	"definitions.RoleAssignmentPropertiesWithScope.properties.scope.type": "string",
	"definitions.RoleDefinition.description": "Role definition.",
	"definitions.RoleDefinition.properties.id.description": "The role definition ID.",
	"definitions.RoleDefinition.properties.id.type": "string",
	"definitions.RoleDefinition.properties.name.description": "The role definition name.",
	"definitions.RoleDefinition.properties.name.type": "string",
	"definitions.RoleDefinition.properties.properties.$ref": "#/definitions/RoleDefinitionProperties",
	"definitions.RoleDefinition.properties.properties.description": "Role definition properties.",
	"definitions.RoleDefinition.properties.type.description": "The role definition type.",
	"definitions.RoleDefinition.properties.type.type": "string",
	"definitions.RoleDefinitionFilter.description": "Role Definitions filter",
	"definitions.RoleDefinitionFilter.properties.roleName.description": "Returns role definition with the specific name.",
	"definitions.RoleDefinitionFilter.properties.roleName.type": "string",
	"definitions.RoleDefinitionListResult.description": "Role definition list operation result.",
	"definitions.RoleDefinitionListResult.properties.nextLink.description": "The URL to use for getting the next set of results.",
	"definitions.RoleDefinitionListResult.properties.nextLink.type": "string",
	"definitions.RoleDefinitionListResult.properties.value.description": "Role definition list.",
	"definitions.RoleDefinitionListResult.properties.value.items.$ref": "#/definitions/RoleDefinition",
	"definitions.RoleDefinitionListResult.properties.value.type": "array",
	"definitions.RoleDefinitionProperties.description": "Role definition properties.",
	"definitions.RoleDefinitionProperties.properties.assignableScopes.description": "Role definition assignable scopes.",
	"definitions.RoleDefinitionProperties.properties.assignableScopes.items.type": "string",
	"definitions.RoleDefinitionProperties.properties.assignableScopes.type": "array",
	"definitions.RoleDefinitionProperties.properties.description.description": "The role definition description.",
	"definitions.RoleDefinitionProperties.properties.description.type": "string",
	"definitions.RoleDefinitionProperties.properties.permissions.description": "Role definition permissions.",
	"definitions.RoleDefinitionProperties.properties.permissions.items.$ref": "#/definitions/Permission",
	"definitions.RoleDefinitionProperties.properties.permissions.type": "array",
	"definitions.RoleDefinitionProperties.properties.roleName.description": "The role name.",
	"definitions.RoleDefinitionProperties.properties.roleName.type": "string",
	"definitions.RoleDefinitionProperties.properties.type.description": "The role type.",
	"definitions.RoleDefinitionProperties.properties.type.type": "string",
	"host": "management.azure.com",
	"info.description": "Role based access control provides you a way to apply granular level policy administration down to individual resources or resource groups. These operations enable you to manage role definitions and role assignments. A role definition describes the set of actions that can be performed on resources. A role assignment grants access to Azure Active Directory users.",
	"info.title": "AuthorizationManagementClient",
	"info.version": "2015-07-01",
	"info.x-apisguru-categories.length": 1,
	"info.x-apisguru-categories[0]": "cloud",
	"info.x-logo.url": "https://api.apis.guru/v2/cache/logo/https_assets.onestore.ms_cdnfiles_onestorerolling-1606-01000_shell_v3_images_logo_microsoft.png",
	"info.x-origin.length": 1,
	"info.x-origin[0].format": "swagger",
	"info.x-origin[0].url": "https://raw.githubusercontent.com/Azure/azure-rest-api-specs/master/arm-authorization/2015-07-01/swagger/authorization.json",
	"info.x-origin[0].version": "2.0",
	"info.x-preferred": true,
	"info.x-providerName": "azure.com",
	"info.x-serviceName": "arm-authorization",
	"info.x-tags.length": 2,
	"info.x-tags[0]": "Azure",
	"info.x-tags[1]": "Microsoft",
	"parameters.ApiVersionParameter.description": "The API version to use for this operation.",
	"parameters.ApiVersionParameter.in": "query",
	"parameters.ApiVersionParameter.name": "api-version",
	"parameters.ApiVersionParameter.required": true,
	"parameters.ApiVersionParameter.type": "string",
	"parameters.SubscriptionIdParameter.description": "The ID of the target subscription.",
	"parameters.SubscriptionIdParameter.in": "path",
	"parameters.SubscriptionIdParameter.name": "subscriptionId",
	"parameters.SubscriptionIdParameter.required": true,
	"parameters.SubscriptionIdParameter.type": "string",
	"paths./providers/Microsoft.Authorization/providerOperations.get.description": "Gets provider operations metadata for all resource providers.",
	"paths./providers/Microsoft.Authorization/providerOperations.get.operationId": "ProviderOperationsMetadata_List",
	"paths./providers/Microsoft.Authorization/providerOperations.get.parameters.length": 2,
	"paths./providers/Microsoft.Authorization/providerOperations.get.parameters[0].description": "The API version to use for this operation.",
	"paths./providers/Microsoft.Authorization/providerOperations.get.parameters[0].in": "query",
	"paths./providers/Microsoft.Authorization/providerOperations.get.parameters[0].name": "api-version",
	"paths./providers/Microsoft.Authorization/providerOperations.get.parameters[0].required": true,
	"paths./providers/Microsoft.Authorization/providerOperations.get.parameters[0].type": "string",
	"paths./providers/Microsoft.Authorization/providerOperations.get.parameters[1].default": "resourceTypes",
	"paths./providers/Microsoft.Authorization/providerOperations.get.parameters[1].description": "Specifies whether to expand the values.",
	"paths./providers/Microsoft.Authorization/providerOperations.get.parameters[1].in": "query",
	"paths./providers/Microsoft.Authorization/providerOperations.get.parameters[1].name": "$expand",
	"paths./providers/Microsoft.Authorization/providerOperations.get.parameters[1].required": false,
	"paths./providers/Microsoft.Authorization/providerOperations.get.parameters[1].type": "string",
	"paths./providers/Microsoft.Authorization/providerOperations.get.responses.200.description": "OK - Returns an array of the operations metadata.",
	"paths./providers/Microsoft.Authorization/providerOperations.get.responses.200.schema.$ref": "#/definitions/ProviderOperationsMetadataListResult",
	"paths./providers/Microsoft.Authorization/providerOperations.get.tags.length": 1,
	"paths./providers/Microsoft.Authorization/providerOperations.get.tags[0]": "ProviderOperationsMetadata",
	"paths./providers/Microsoft.Authorization/providerOperations.get.x-ms-pageable.nextLinkName": "nextLink",
	"paths./providers/Microsoft.Authorization/providerOperations/{resourceProviderNamespace}.get.description": "Gets provider operations metadata for the specified resource provider.",
	"paths./providers/Microsoft.Authorization/providerOperations/{resourceProviderNamespace}.get.operationId": "ProviderOperationsMetadata_Get",
	"paths./providers/Microsoft.Authorization/providerOperations/{resourceProviderNamespace}.get.parameters.length": 3,
	"paths./providers/Microsoft.Authorization/providerOperations/{resourceProviderNamespace}.get.parameters[0].description": "The namespace of the resource provider.",
	"paths./providers/Microsoft.Authorization/providerOperations/{resourceProviderNamespace}.get.parameters[0].in": "path",
	"paths./providers/Microsoft.Authorization/providerOperations/{resourceProviderNamespace}.get.parameters[0].name": "resourceProviderNamespace",
	"paths./providers/Microsoft.Authorization/providerOperations/{resourceProviderNamespace}.get.parameters[0].required": true,
	"paths./providers/Microsoft.Authorization/providerOperations/{resourceProviderNamespace}.get.parameters[0].type": "string",
	"paths./providers/Microsoft.Authorization/providerOperations/{resourceProviderNamespace}.get.parameters[1].description": "The API version to use for the operation.",
	"paths./providers/Microsoft.Authorization/providerOperations/{resourceProviderNamespace}.get.parameters[1].in": "query",
	"paths./providers/Microsoft.Authorization/providerOperations/{resourceProviderNamespace}.get.parameters[1].name": "api-version",
	"paths./providers/Microsoft.Authorization/providerOperations/{resourceProviderNamespace}.get.parameters[1].required": true,
	"paths./providers/Microsoft.Authorization/providerOperations/{resourceProviderNamespace}.get.parameters[1].type": "string",
	"paths./providers/Microsoft.Authorization/providerOperations/{resourceProviderNamespace}.get.parameters[2].default": "resourceTypes",
	"paths./providers/Microsoft.Authorization/providerOperations/{resourceProviderNamespace}.get.parameters[2].description": "Specifies whether to expand the values.",
	"paths./providers/Microsoft.Authorization/providerOperations/{resourceProviderNamespace}.get.parameters[2].in": "query",
	"paths./providers/Microsoft.Authorization/providerOperations/{resourceProviderNamespace}.get.parameters[2].name": "$expand",
	"paths./providers/Microsoft.Authorization/providerOperations/{resourceProviderNamespace}.get.parameters[2].required": false,
	"paths./providers/Microsoft.Authorization/providerOperations/{resourceProviderNamespace}.get.parameters[2].type": "string",
	"paths./providers/Microsoft.Authorization/providerOperations/{resourceProviderNamespace}.get.responses.200.description": "OK - Returns the operations metadata.",
	"paths./providers/Microsoft.Authorization/providerOperations/{resourceProviderNamespace}.get.responses.200.schema.$ref": "#/definitions/ProviderOperationsMetadata",
	"paths./providers/Microsoft.Authorization/providerOperations/{resourceProviderNamespace}.get.tags.length": 1,
	"paths./providers/Microsoft.Authorization/providerOperations/{resourceProviderNamespace}.get.tags[0]": "ProviderOperationsMetadata",
	"paths./subscriptions/{subscriptionId}/providers/Microsoft.Authorization/classicAdministrators.get.description": "Gets service administrator, account administrator, and co-administrators for the subscription.",
	"paths./subscriptions/{subscriptionId}/providers/Microsoft.Authorization/classicAdministrators.get.operationId": "ClassicAdministrators_List",
	"paths./subscriptions/{subscriptionId}/providers/Microsoft.Authorization/classicAdministrators.get.parameters.length": 2,
	"paths./subscriptions/{subscriptionId}/providers/Microsoft.Authorization/classicAdministrators.get.parameters[0].description": "The API version to use for this operation.",
	"paths./subscriptions/{subscriptionId}/providers/Microsoft.Authorization/classicAdministrators.get.parameters[0].in": "query",
	"paths./subscriptions/{subscriptionId}/providers/Microsoft.Authorization/classicAdministrators.get.parameters[0].name": "api-version",
	"paths./subscriptions/{subscriptionId}/providers/Microsoft.Authorization/classicAdministrators.get.parameters[0].required": true,
	"paths./subscriptions/{subscriptionId}/providers/Microsoft.Authorization/classicAdministrators.get.parameters[0].type": "string",
	"paths./subscriptions/{subscriptionId}/providers/Microsoft.Authorization/classicAdministrators.get.parameters[1].$ref": "#/parameters/SubscriptionIdParameter",
	"paths./subscriptions/{subscriptionId}/providers/Microsoft.Authorization/classicAdministrators.get.responses.200.description": "Returns an array of administrators.",
	"paths./subscriptions/{subscriptionId}/providers/Microsoft.Authorization/classicAdministrators.get.responses.200.schema.$ref": "#/definitions/ClassicAdministratorListResult",
	"paths./subscriptions/{subscriptionId}/providers/Microsoft.Authorization/classicAdministrators.get.tags.length": 1,
	"paths./subscriptions/{subscriptionId}/providers/Microsoft.Authorization/classicAdministrators.get.tags[0]": "ClassicAdministrators",
	"paths./subscriptions/{subscriptionId}/providers/Microsoft.Authorization/classicAdministrators.get.x-ms-pageable.nextLinkName": "nextLink",
	"paths./subscriptions/{subscriptionId}/providers/Microsoft.Authorization/roleAssignments.get.description": "Gets all role assignments for the subscription.",
	"paths./subscriptions/{subscriptionId}/providers/Microsoft.Authorization/roleAssignments.get.operationId": "RoleAssignments_List",
	"paths./subscriptions/{subscriptionId}/providers/Microsoft.Authorization/roleAssignments.get.parameters.length": 3,
	"paths./subscriptions/{subscriptionId}/providers/Microsoft.Authorization/roleAssignments.get.parameters[0].description": "The filter to apply on the operation. Use $filter=atScope() to return all role assignments at or above the scope. Use $filter=principalId eq {id} to return all role assignments at, above or below the scope for the specified principal.",
	"paths./subscriptions/{subscriptionId}/providers/Microsoft.Authorization/roleAssignments.get.parameters[0].in": "query",
	"paths./subscriptions/{subscriptionId}/providers/Microsoft.Authorization/roleAssignments.get.parameters[0].name": "$filter",
	"paths./subscriptions/{subscriptionId}/providers/Microsoft.Authorization/roleAssignments.get.parameters[0].required": false,
	"paths./subscriptions/{subscriptionId}/providers/Microsoft.Authorization/roleAssignments.get.parameters[0].type": "string",
	"paths./subscriptions/{subscriptionId}/providers/Microsoft.Authorization/roleAssignments.get.parameters[1].$ref": "#/parameters/ApiVersionParameter",
	"paths./subscriptions/{subscriptionId}/providers/Microsoft.Authorization/roleAssignments.get.parameters[2].$ref": "#/parameters/SubscriptionIdParameter",
	"paths./subscriptions/{subscriptionId}/providers/Microsoft.Authorization/roleAssignments.get.responses.200.description": "OK - Returns an array of role assignments.",
	"paths./subscriptions/{subscriptionId}/providers/Microsoft.Authorization/roleAssignments.get.responses.200.schema.$ref": "#/definitions/RoleAssignmentListResult",
	"paths./subscriptions/{subscriptionId}/providers/Microsoft.Authorization/roleAssignments.get.tags.length": 1,
	"paths./subscriptions/{subscriptionId}/providers/Microsoft.Authorization/roleAssignments.get.tags[0]": "RoleAssignments",
	"paths./subscriptions/{subscriptionId}/providers/Microsoft.Authorization/roleAssignments.get.x-ms-odata": "#/definitions/RoleAssignmentFilter",
	"paths./subscriptions/{subscriptionId}/providers/Microsoft.Authorization/roleAssignments.get.x-ms-pageable.nextLinkName": "nextLink",
	"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Authorization/roleAssignments.get.description": "Gets role assignments for a resource group.",
	"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Authorization/roleAssignments.get.operationId": "RoleAssignments_ListForResourceGroup",
	"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Authorization/roleAssignments.get.parameters.length": 4,
	"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Authorization/roleAssignments.get.parameters[0].description": "The name of the resource group.",
	"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Authorization/roleAssignments.get.parameters[0].in": "path",
	"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Authorization/roleAssignments.get.parameters[0].name": "resourceGroupName",
	"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Authorization/roleAssignments.get.parameters[0].required": true,
	"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Authorization/roleAssignments.get.parameters[0].type": "string",
	"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Authorization/roleAssignments.get.parameters[1].description": "The filter to apply on the operation. Use $filter=atScope() to return all role assignments at or above the scope. Use $filter=principalId eq {id} to return all role assignments at, above or below the scope for the specified principal.",
	"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Authorization/roleAssignments.get.parameters[1].in": "query",
	"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Authorization/roleAssignments.get.parameters[1].name": "$filter",
	"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Authorization/roleAssignments.get.parameters[1].required": false,
	"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Authorization/roleAssignments.get.parameters[1].type": "string",
	"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Authorization/roleAssignments.get.parameters[2].$ref": "#/parameters/ApiVersionParameter",
	"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Authorization/roleAssignments.get.parameters[3].$ref": "#/parameters/SubscriptionIdParameter",
	"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Authorization/roleAssignments.get.responses.200.description": "OK - Returns an array of role assignments.",
	"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Authorization/roleAssignments.get.responses.200.schema.$ref": "#/definitions/RoleAssignmentListResult",
	"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Authorization/roleAssignments.get.tags.length": 1,
	"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Authorization/roleAssignments.get.tags[0]": "RoleAssignments",
	"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Authorization/roleAssignments.get.x-ms-odata": "#/definitions/RoleAssignmentFilter",
	"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Authorization/roleAssignments.get.x-ms-pageable.nextLinkName": "nextLink",
	"paths./subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.Authorization/permissions.get.description": "Gets all permissions the caller has for a resource group.",
	"paths./subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.Authorization/permissions.get.operationId": "Permissions_ListForResourceGroup",
	"paths./subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.Authorization/permissions.get.parameters.length": 3,
	"paths./subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.Authorization/permissions.get.parameters[0].description": "The name of the resource group to get the permissions for. The name is case insensitive.",
	"paths./subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.Authorization/permissions.get.parameters[0].in": "path",
	"paths./subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.Authorization/permissions.get.parameters[0].name": "resourceGroupName",
	"paths./subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.Authorization/permissions.get.parameters[0].required": true,
	"paths./subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.Authorization/permissions.get.parameters[0].type": "string",
	"paths./subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.Authorization/permissions.get.parameters[1].$ref": "#/parameters/ApiVersionParameter",
	"paths./subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.Authorization/permissions.get.parameters[2].$ref": "#/parameters/SubscriptionIdParameter",
	"paths./subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.Authorization/permissions.get.responses.200.description": "OK - Returns an array of permissions.",
	"paths./subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.Authorization/permissions.get.responses.200.schema.$ref": "#/definitions/PermissionGetResult",
	"paths./subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.Authorization/permissions.get.tags.length": 1,
	"paths./subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.Authorization/permissions.get.tags[0]": "Permissions",
	"paths./subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.Authorization/permissions.get.x-ms-pageable.nextLinkName": "nextLink",
	"paths./subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{parentResourcePath}/{resourceType}/{resourceName}/providers/Microsoft.Authorization/permissions.get.description": "Gets all permissions the caller has for a resource.",
	"paths./subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{parentResourcePath}/{resourceType}/{resourceName}/providers/Microsoft.Authorization/permissions.get.operationId": "Permissions_ListForResource",
	"paths./subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{parentResourcePath}/{resourceType}/{resourceName}/providers/Microsoft.Authorization/permissions.get.parameters.length": 7,
	"paths./subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{parentResourcePath}/{resourceType}/{resourceName}/providers/Microsoft.Authorization/permissions.get.parameters[0].description": "The name of the resource group containing the resource. The name is case insensitive.",
	"paths./subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{parentResourcePath}/{resourceType}/{resourceName}/providers/Microsoft.Authorization/permissions.get.parameters[0].in": "path",
	"paths./subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{parentResourcePath}/{resourceType}/{resourceName}/providers/Microsoft.Authorization/permissions.get.parameters[0].name": "resourceGroupName",
	"paths./subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{parentResourcePath}/{resourceType}/{resourceName}/providers/Microsoft.Authorization/permissions.get.parameters[0].required": true,
	"paths./subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{parentResourcePath}/{resourceType}/{resourceName}/providers/Microsoft.Authorization/permissions.get.parameters[0].type": "string",
	"paths./subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{parentResourcePath}/{resourceType}/{resourceName}/providers/Microsoft.Authorization/permissions.get.parameters[1].description": "The namespace of the resource provider.",
	"paths./subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{parentResourcePath}/{resourceType}/{resourceName}/providers/Microsoft.Authorization/permissions.get.parameters[1].in": "path",
	"paths./subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{parentResourcePath}/{resourceType}/{resourceName}/providers/Microsoft.Authorization/permissions.get.parameters[1].name": "resourceProviderNamespace",
	"paths./subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{parentResourcePath}/{resourceType}/{resourceName}/providers/Microsoft.Authorization/permissions.get.parameters[1].required": true,
	"paths./subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{parentResourcePath}/{resourceType}/{resourceName}/providers/Microsoft.Authorization/permissions.get.parameters[1].type": "string",
	"paths./subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{parentResourcePath}/{resourceType}/{resourceName}/providers/Microsoft.Authorization/permissions.get.parameters[2].description": "The parent resource identity.",
	"paths./subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{parentResourcePath}/{resourceType}/{resourceName}/providers/Microsoft.Authorization/permissions.get.parameters[2].in": "path",
	"paths./subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{parentResourcePath}/{resourceType}/{resourceName}/providers/Microsoft.Authorization/permissions.get.parameters[2].name": "parentResourcePath",
	"paths./subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{parentResourcePath}/{resourceType}/{resourceName}/providers/Microsoft.Authorization/permissions.get.parameters[2].required": true,
	"paths./subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{parentResourcePath}/{resourceType}/{resourceName}/providers/Microsoft.Authorization/permissions.get.parameters[2].type": "string",
	"paths./subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{parentResourcePath}/{resourceType}/{resourceName}/providers/Microsoft.Authorization/permissions.get.parameters[2].x-ms-skip-url-encoding": true,
	"paths./subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{parentResourcePath}/{resourceType}/{resourceName}/providers/Microsoft.Authorization/permissions.get.parameters[3].description": "The resource type of the resource.",
	"paths./subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{parentResourcePath}/{resourceType}/{resourceName}/providers/Microsoft.Authorization/permissions.get.parameters[3].in": "path",
	"paths./subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{parentResourcePath}/{resourceType}/{resourceName}/providers/Microsoft.Authorization/permissions.get.parameters[3].name": "resourceType",
	"paths./subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{parentResourcePath}/{resourceType}/{resourceName}/providers/Microsoft.Authorization/permissions.get.parameters[3].required": true,
	"paths./subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{parentResourcePath}/{resourceType}/{resourceName}/providers/Microsoft.Authorization/permissions.get.parameters[3].type": "string",
	"paths./subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{parentResourcePath}/{resourceType}/{resourceName}/providers/Microsoft.Authorization/permissions.get.parameters[3].x-ms-skip-url-encoding": true,
	"paths./subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{parentResourcePath}/{resourceType}/{resourceName}/providers/Microsoft.Authorization/permissions.get.parameters[4].description": "The name of the resource to get the permissions for.",
	"paths./subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{parentResourcePath}/{resourceType}/{resourceName}/providers/Microsoft.Authorization/permissions.get.parameters[4].in": "path",
	"paths./subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{parentResourcePath}/{resourceType}/{resourceName}/providers/Microsoft.Authorization/permissions.get.parameters[4].name": "resourceName",
	"paths./subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{parentResourcePath}/{resourceType}/{resourceName}/providers/Microsoft.Authorization/permissions.get.parameters[4].required": true,
	"paths./subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{parentResourcePath}/{resourceType}/{resourceName}/providers/Microsoft.Authorization/permissions.get.parameters[4].type": "string",
	"paths./subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{parentResourcePath}/{resourceType}/{resourceName}/providers/Microsoft.Authorization/permissions.get.parameters[5].$ref": "#/parameters/ApiVersionParameter",
	"paths./subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{parentResourcePath}/{resourceType}/{resourceName}/providers/Microsoft.Authorization/permissions.get.parameters[6].$ref": "#/parameters/SubscriptionIdParameter",
	"paths./subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{parentResourcePath}/{resourceType}/{resourceName}/providers/Microsoft.Authorization/permissions.get.responses.200.description": "OK - Returns an array of permissions.",
	"paths./subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{parentResourcePath}/{resourceType}/{resourceName}/providers/Microsoft.Authorization/permissions.get.responses.200.schema.$ref": "#/definitions/PermissionGetResult",
	"paths./subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{parentResourcePath}/{resourceType}/{resourceName}/providers/Microsoft.Authorization/permissions.get.tags.length": 1,
	"paths./subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{parentResourcePath}/{resourceType}/{resourceName}/providers/Microsoft.Authorization/permissions.get.tags[0]": "Permissions",
	"paths./subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{parentResourcePath}/{resourceType}/{resourceName}/providers/Microsoft.Authorization/permissions.get.x-ms-pageable.nextLinkName": "nextLink",
	"paths./subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{parentResourcePath}/{resourceType}/{resourceName}/providers/Microsoft.Authorization/roleAssignments.get.description": "Gets role assignments for a resource.",
	"paths./subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{parentResourcePath}/{resourceType}/{resourceName}/providers/Microsoft.Authorization/roleAssignments.get.operationId": "RoleAssignments_ListForResource",
	"paths./subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{parentResourcePath}/{resourceType}/{resourceName}/providers/Microsoft.Authorization/roleAssignments.get.parameters.length": 8,
	"paths./subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{parentResourcePath}/{resourceType}/{resourceName}/providers/Microsoft.Authorization/roleAssignments.get.parameters[0].description": "The name of the resource group.",
	"paths./subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{parentResourcePath}/{resourceType}/{resourceName}/providers/Microsoft.Authorization/roleAssignments.get.parameters[0].in": "path",
	"paths./subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{parentResourcePath}/{resourceType}/{resourceName}/providers/Microsoft.Authorization/roleAssignments.get.parameters[0].name": "resourceGroupName",
	"paths./subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{parentResourcePath}/{resourceType}/{resourceName}/providers/Microsoft.Authorization/roleAssignments.get.parameters[0].required": true,
	"paths./subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{parentResourcePath}/{resourceType}/{resourceName}/providers/Microsoft.Authorization/roleAssignments.get.parameters[0].type": "string",
	"paths./subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{parentResourcePath}/{resourceType}/{resourceName}/providers/Microsoft.Authorization/roleAssignments.get.parameters[1].description": "The namespace of the resource provider.",
	"paths./subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{parentResourcePath}/{resourceType}/{resourceName}/providers/Microsoft.Authorization/roleAssignments.get.parameters[1].in": "path",
	"paths./subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{parentResourcePath}/{resourceType}/{resourceName}/providers/Microsoft.Authorization/roleAssignments.get.parameters[1].name": "resourceProviderNamespace",
	"paths./subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{parentResourcePath}/{resourceType}/{resourceName}/providers/Microsoft.Authorization/roleAssignments.get.parameters[1].required": true,
	"paths./subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{parentResourcePath}/{resourceType}/{resourceName}/providers/Microsoft.Authorization/roleAssignments.get.parameters[1].type": "string",
	"paths./subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{parentResourcePath}/{resourceType}/{resourceName}/providers/Microsoft.Authorization/roleAssignments.get.parameters[2].description": "The parent resource identity.",
	"paths./subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{parentResourcePath}/{resourceType}/{resourceName}/providers/Microsoft.Authorization/roleAssignments.get.parameters[2].in": "path",
	"paths./subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{parentResourcePath}/{resourceType}/{resourceName}/providers/Microsoft.Authorization/roleAssignments.get.parameters[2].name": "parentResourcePath",
	"paths./subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{parentResourcePath}/{resourceType}/{resourceName}/providers/Microsoft.Authorization/roleAssignments.get.parameters[2].required": true,
	"paths./subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{parentResourcePath}/{resourceType}/{resourceName}/providers/Microsoft.Authorization/roleAssignments.get.parameters[2].type": "string",
	"paths./subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{parentResourcePath}/{resourceType}/{resourceName}/providers/Microsoft.Authorization/roleAssignments.get.parameters[2].x-ms-skip-url-encoding": true,
	"paths./subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{parentResourcePath}/{resourceType}/{resourceName}/providers/Microsoft.Authorization/roleAssignments.get.parameters[3].description": "The resource type of the resource.",
	"paths./subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{parentResourcePath}/{resourceType}/{resourceName}/providers/Microsoft.Authorization/roleAssignments.get.parameters[3].in": "path",
	"paths./subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{parentResourcePath}/{resourceType}/{resourceName}/providers/Microsoft.Authorization/roleAssignments.get.parameters[3].name": "resourceType",
	"paths./subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{parentResourcePath}/{resourceType}/{resourceName}/providers/Microsoft.Authorization/roleAssignments.get.parameters[3].required": true,
	"paths./subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{parentResourcePath}/{resourceType}/{resourceName}/providers/Microsoft.Authorization/roleAssignments.get.parameters[3].type": "string",
	"paths./subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{parentResourcePath}/{resourceType}/{resourceName}/providers/Microsoft.Authorization/roleAssignments.get.parameters[3].x-ms-skip-url-encoding": true,
	"paths./subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{parentResourcePath}/{resourceType}/{resourceName}/providers/Microsoft.Authorization/roleAssignments.get.parameters[4].description": "The name of the resource to get role assignments for.",
	"paths./subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{parentResourcePath}/{resourceType}/{resourceName}/providers/Microsoft.Authorization/roleAssignments.get.parameters[4].in": "path",
	"paths./subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{parentResourcePath}/{resourceType}/{resourceName}/providers/Microsoft.Authorization/roleAssignments.get.parameters[4].name": "resourceName",
	"paths./subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{parentResourcePath}/{resourceType}/{resourceName}/providers/Microsoft.Authorization/roleAssignments.get.parameters[4].required": true,
	"paths./subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{parentResourcePath}/{resourceType}/{resourceName}/providers/Microsoft.Authorization/roleAssignments.get.parameters[4].type": "string",
	"paths./subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{parentResourcePath}/{resourceType}/{resourceName}/providers/Microsoft.Authorization/roleAssignments.get.parameters[5].description": "The filter to apply on the operation. Use $filter=atScope() to return all role assignments at or above the scope. Use $filter=principalId eq {id} to return all role assignments at, above or below the scope for the specified principal.",
	"paths./subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{parentResourcePath}/{resourceType}/{resourceName}/providers/Microsoft.Authorization/roleAssignments.get.parameters[5].in": "query",
	"paths./subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{parentResourcePath}/{resourceType}/{resourceName}/providers/Microsoft.Authorization/roleAssignments.get.parameters[5].name": "$filter",
	"paths./subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{parentResourcePath}/{resourceType}/{resourceName}/providers/Microsoft.Authorization/roleAssignments.get.parameters[5].required": false,
	"paths./subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{parentResourcePath}/{resourceType}/{resourceName}/providers/Microsoft.Authorization/roleAssignments.get.parameters[5].type": "string",
	"paths./subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{parentResourcePath}/{resourceType}/{resourceName}/providers/Microsoft.Authorization/roleAssignments.get.parameters[6].$ref": "#/parameters/ApiVersionParameter",
	"paths./subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{parentResourcePath}/{resourceType}/{resourceName}/providers/Microsoft.Authorization/roleAssignments.get.parameters[7].$ref": "#/parameters/SubscriptionIdParameter",
	"paths./subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{parentResourcePath}/{resourceType}/{resourceName}/providers/Microsoft.Authorization/roleAssignments.get.responses.200.description": "OK - Returns an array of role assignments.",
	"paths./subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{parentResourcePath}/{resourceType}/{resourceName}/providers/Microsoft.Authorization/roleAssignments.get.responses.200.schema.$ref": "#/definitions/RoleAssignmentListResult",
	"paths./subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{parentResourcePath}/{resourceType}/{resourceName}/providers/Microsoft.Authorization/roleAssignments.get.tags.length": 1,
	"paths./subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{parentResourcePath}/{resourceType}/{resourceName}/providers/Microsoft.Authorization/roleAssignments.get.tags[0]": "RoleAssignments",
	"paths./subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{parentResourcePath}/{resourceType}/{resourceName}/providers/Microsoft.Authorization/roleAssignments.get.x-ms-odata": "#/definitions/RoleAssignmentFilter",
	"paths./subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{parentResourcePath}/{resourceType}/{resourceName}/providers/Microsoft.Authorization/roleAssignments.get.x-ms-pageable.nextLinkName": "nextLink",
	"paths./{roleAssignmentId}.delete.description": "Deletes a role assignment.",
	"paths./{roleAssignmentId}.delete.operationId": "RoleAssignments_DeleteById",
	"paths./{roleAssignmentId}.delete.parameters.length": 2,
	"paths./{roleAssignmentId}.delete.parameters[0].description": "The ID of the role assignment to delete.",
	"paths./{roleAssignmentId}.delete.parameters[0].in": "path",
	"paths./{roleAssignmentId}.delete.parameters[0].name": "roleAssignmentId",
	"paths./{roleAssignmentId}.delete.parameters[0].required": true,
	"paths./{roleAssignmentId}.delete.parameters[0].type": "string",
	"paths./{roleAssignmentId}.delete.parameters[0].x-ms-skip-url-encoding": true,
	"paths./{roleAssignmentId}.delete.parameters[1].$ref": "#/parameters/ApiVersionParameter",
	"paths./{roleAssignmentId}.delete.responses.200.description": "OK - Returns information about the role assignment.",
	"paths./{roleAssignmentId}.delete.responses.200.schema.$ref": "#/definitions/RoleAssignment",
	"paths./{roleAssignmentId}.delete.tags.length": 1,
	"paths./{roleAssignmentId}.delete.tags[0]": "RoleAssignments",
	"paths./{roleAssignmentId}.get.description": "Gets a role assignment by ID.",
	"paths./{roleAssignmentId}.get.operationId": "RoleAssignments_GetById",
	"paths./{roleAssignmentId}.get.parameters.length": 2,
	"paths./{roleAssignmentId}.get.parameters[0].description": "The ID of the role assignment to get.",
	"paths./{roleAssignmentId}.get.parameters[0].in": "path",
	"paths./{roleAssignmentId}.get.parameters[0].name": "roleAssignmentId",
	"paths./{roleAssignmentId}.get.parameters[0].required": true,
	"paths./{roleAssignmentId}.get.parameters[0].type": "string",
	"paths./{roleAssignmentId}.get.parameters[0].x-ms-skip-url-encoding": true,
	"paths./{roleAssignmentId}.get.parameters[1].$ref": "#/parameters/ApiVersionParameter",
	"paths./{roleAssignmentId}.get.responses.200.description": "OK - Returns the role assignment.",
	"paths./{roleAssignmentId}.get.responses.200.schema.$ref": "#/definitions/RoleAssignment",
	"paths./{roleAssignmentId}.get.tags.length": 1,
	"paths./{roleAssignmentId}.get.tags[0]": "RoleAssignments",
	"paths./{roleAssignmentId}.put.description": "Creates a role assignment by ID.",
	"paths./{roleAssignmentId}.put.operationId": "RoleAssignments_CreateById",
	"paths./{roleAssignmentId}.put.parameters.length": 3,
	"paths./{roleAssignmentId}.put.parameters[0].description": "The ID of the role assignment to create.",
	"paths./{roleAssignmentId}.put.parameters[0].in": "path",
	"paths./{roleAssignmentId}.put.parameters[0].name": "roleAssignmentId",
	"paths./{roleAssignmentId}.put.parameters[0].required": true,
	"paths./{roleAssignmentId}.put.parameters[0].type": "string",
	"paths./{roleAssignmentId}.put.parameters[0].x-ms-skip-url-encoding": true,
	"paths./{roleAssignmentId}.put.parameters[1].description": "Parameters for the role assignment.",
	"paths./{roleAssignmentId}.put.parameters[1].in": "body",
	"paths./{roleAssignmentId}.put.parameters[1].name": "parameters",
	"paths./{roleAssignmentId}.put.parameters[1].required": true,
	"paths./{roleAssignmentId}.put.parameters[1].schema.$ref": "#/definitions/RoleAssignmentCreateParameters",
	"paths./{roleAssignmentId}.put.parameters[2].$ref": "#/parameters/ApiVersionParameter",
	"paths./{roleAssignmentId}.put.responses.201.description": "Created - Returns the role assignment.",
	"paths./{roleAssignmentId}.put.responses.201.schema.$ref": "#/definitions/RoleAssignment",
	"paths./{roleAssignmentId}.put.tags.length": 1,
	"paths./{roleAssignmentId}.put.tags[0]": "RoleAssignments",
	"paths./{roleDefinitionId}.get.description": "Gets a role definition by ID.",
	"paths./{roleDefinitionId}.get.operationId": "RoleDefinitions_GetById",
	"paths./{roleDefinitionId}.get.parameters.length": 2,
	"paths./{roleDefinitionId}.get.parameters[0].description": "The fully qualified role definition ID to get.",
	"paths./{roleDefinitionId}.get.parameters[0].in": "path",
	"paths./{roleDefinitionId}.get.parameters[0].name": "roleDefinitionId",
	"paths./{roleDefinitionId}.get.parameters[0].required": true,
	"paths./{roleDefinitionId}.get.parameters[0].type": "string",
	"paths./{roleDefinitionId}.get.parameters[0].x-ms-skip-url-encoding": true,
	"paths./{roleDefinitionId}.get.parameters[1].$ref": "#/parameters/ApiVersionParameter",
	"paths./{roleDefinitionId}.get.responses.200.description": "OK - Returns information about the role definition.",
	"paths./{roleDefinitionId}.get.responses.200.schema.$ref": "#/definitions/RoleDefinition",
	"paths./{roleDefinitionId}.get.tags.length": 1,
	"paths./{roleDefinitionId}.get.tags[0]": "RoleDefinitions",
	"paths./{scope}/providers/Microsoft.Authorization/roleAssignments.get.description": "Gets role assignments for a scope.",
	"paths./{scope}/providers/Microsoft.Authorization/roleAssignments.get.operationId": "RoleAssignments_ListForScope",
	"paths./{scope}/providers/Microsoft.Authorization/roleAssignments.get.parameters.length": 3,
	"paths./{scope}/providers/Microsoft.Authorization/roleAssignments.get.parameters[0].description": "The scope of the role assignments.",
	"paths./{scope}/providers/Microsoft.Authorization/roleAssignments.get.parameters[0].in": "path",
	"paths./{scope}/providers/Microsoft.Authorization/roleAssignments.get.parameters[0].name": "scope",
	"paths./{scope}/providers/Microsoft.Authorization/roleAssignments.get.parameters[0].required": true,
	"paths./{scope}/providers/Microsoft.Authorization/roleAssignments.get.parameters[0].type": "string",
	"paths./{scope}/providers/Microsoft.Authorization/roleAssignments.get.parameters[0].x-ms-skip-url-encoding": true,
	"paths./{scope}/providers/Microsoft.Authorization/roleAssignments.get.parameters[1].description": "The filter to apply on the operation. Use $filter=atScope() to return all role assignments at or above the scope. Use $filter=principalId eq {id} to return all role assignments at, above or below the scope for the specified principal.",
	"paths./{scope}/providers/Microsoft.Authorization/roleAssignments.get.parameters[1].in": "query",
	"paths./{scope}/providers/Microsoft.Authorization/roleAssignments.get.parameters[1].name": "$filter",
	"paths./{scope}/providers/Microsoft.Authorization/roleAssignments.get.parameters[1].required": false,
	"paths./{scope}/providers/Microsoft.Authorization/roleAssignments.get.parameters[1].type": "string",
	"paths./{scope}/providers/Microsoft.Authorization/roleAssignments.get.parameters[2].$ref": "#/parameters/ApiVersionParameter",
	"paths./{scope}/providers/Microsoft.Authorization/roleAssignments.get.responses.200.description": "OK - Returns an array of role assignments.",
	"paths./{scope}/providers/Microsoft.Authorization/roleAssignments.get.responses.200.schema.$ref": "#/definitions/RoleAssignmentListResult",
	"paths./{scope}/providers/Microsoft.Authorization/roleAssignments.get.tags.length": 1,
	"paths./{scope}/providers/Microsoft.Authorization/roleAssignments.get.tags[0]": "RoleAssignments",
	"paths./{scope}/providers/Microsoft.Authorization/roleAssignments.get.x-ms-odata": "#/definitions/RoleAssignmentFilter",
	"paths./{scope}/providers/Microsoft.Authorization/roleAssignments.get.x-ms-pageable.nextLinkName": "nextLink",
	"paths./{scope}/providers/Microsoft.Authorization/roleAssignments/{roleAssignmentName}.delete.description": "Deletes a role assignment.",
	"paths./{scope}/providers/Microsoft.Authorization/roleAssignments/{roleAssignmentName}.delete.operationId": "RoleAssignments_Delete",
	"paths./{scope}/providers/Microsoft.Authorization/roleAssignments/{roleAssignmentName}.delete.parameters.length": 3,
	"paths./{scope}/providers/Microsoft.Authorization/roleAssignments/{roleAssignmentName}.delete.parameters[0].description": "The scope of the role assignment to delete.",
	"paths./{scope}/providers/Microsoft.Authorization/roleAssignments/{roleAssignmentName}.delete.parameters[0].in": "path",
	"paths./{scope}/providers/Microsoft.Authorization/roleAssignments/{roleAssignmentName}.delete.parameters[0].name": "scope",
	"paths./{scope}/providers/Microsoft.Authorization/roleAssignments/{roleAssignmentName}.delete.parameters[0].required": true,
	"paths./{scope}/providers/Microsoft.Authorization/roleAssignments/{roleAssignmentName}.delete.parameters[0].type": "string",
	"paths./{scope}/providers/Microsoft.Authorization/roleAssignments/{roleAssignmentName}.delete.parameters[0].x-ms-skip-url-encoding": true,
	"paths./{scope}/providers/Microsoft.Authorization/roleAssignments/{roleAssignmentName}.delete.parameters[1].description": "The name of the role assignment to delete.",
	"paths./{scope}/providers/Microsoft.Authorization/roleAssignments/{roleAssignmentName}.delete.parameters[1].in": "path",
	"paths./{scope}/providers/Microsoft.Authorization/roleAssignments/{roleAssignmentName}.delete.parameters[1].name": "roleAssignmentName",
	"paths./{scope}/providers/Microsoft.Authorization/roleAssignments/{roleAssignmentName}.delete.parameters[1].required": true,
	"paths./{scope}/providers/Microsoft.Authorization/roleAssignments/{roleAssignmentName}.delete.parameters[1].type": "string",
	"paths./{scope}/providers/Microsoft.Authorization/roleAssignments/{roleAssignmentName}.delete.parameters[2].$ref": "#/parameters/ApiVersionParameter",
	"paths./{scope}/providers/Microsoft.Authorization/roleAssignments/{roleAssignmentName}.delete.responses.200.description": "OK - Returns information about the role assignment.",
	"paths./{scope}/providers/Microsoft.Authorization/roleAssignments/{roleAssignmentName}.delete.responses.200.schema.$ref": "#/definitions/RoleAssignment",
	"paths./{scope}/providers/Microsoft.Authorization/roleAssignments/{roleAssignmentName}.delete.tags.length": 1,
	"paths./{scope}/providers/Microsoft.Authorization/roleAssignments/{roleAssignmentName}.delete.tags[0]": "RoleAssignments",
	"paths./{scope}/providers/Microsoft.Authorization/roleAssignments/{roleAssignmentName}.get.description": "Get the specified role assignment.",
	"paths./{scope}/providers/Microsoft.Authorization/roleAssignments/{roleAssignmentName}.get.operationId": "RoleAssignments_Get",
	"paths./{scope}/providers/Microsoft.Authorization/roleAssignments/{roleAssignmentName}.get.parameters.length": 3,
	"paths./{scope}/providers/Microsoft.Authorization/roleAssignments/{roleAssignmentName}.get.parameters[0].description": "The scope of the role assignment.",
	"paths./{scope}/providers/Microsoft.Authorization/roleAssignments/{roleAssignmentName}.get.parameters[0].in": "path",
	"paths./{scope}/providers/Microsoft.Authorization/roleAssignments/{roleAssignmentName}.get.parameters[0].name": "scope",
	"paths./{scope}/providers/Microsoft.Authorization/roleAssignments/{roleAssignmentName}.get.parameters[0].required": true,
	"paths./{scope}/providers/Microsoft.Authorization/roleAssignments/{roleAssignmentName}.get.parameters[0].type": "string",
	"paths./{scope}/providers/Microsoft.Authorization/roleAssignments/{roleAssignmentName}.get.parameters[0].x-ms-skip-url-encoding": true,
	"paths./{scope}/providers/Microsoft.Authorization/roleAssignments/{roleAssignmentName}.get.parameters[1].description": "The name of the role assignment to get.",
	"paths./{scope}/providers/Microsoft.Authorization/roleAssignments/{roleAssignmentName}.get.parameters[1].in": "path",
	"paths./{scope}/providers/Microsoft.Authorization/roleAssignments/{roleAssignmentName}.get.parameters[1].name": "roleAssignmentName",
	"paths./{scope}/providers/Microsoft.Authorization/roleAssignments/{roleAssignmentName}.get.parameters[1].required": true,
	"paths./{scope}/providers/Microsoft.Authorization/roleAssignments/{roleAssignmentName}.get.parameters[1].type": "string",
	"paths./{scope}/providers/Microsoft.Authorization/roleAssignments/{roleAssignmentName}.get.parameters[2].$ref": "#/parameters/ApiVersionParameter",
	"paths./{scope}/providers/Microsoft.Authorization/roleAssignments/{roleAssignmentName}.get.responses.200.description": "OK - Returns information about the role assignment.",
	"paths./{scope}/providers/Microsoft.Authorization/roleAssignments/{roleAssignmentName}.get.responses.200.schema.$ref": "#/definitions/RoleAssignment",
	"paths./{scope}/providers/Microsoft.Authorization/roleAssignments/{roleAssignmentName}.get.tags.length": 1,
	"paths./{scope}/providers/Microsoft.Authorization/roleAssignments/{roleAssignmentName}.get.tags[0]": "RoleAssignments",
	"paths./{scope}/providers/Microsoft.Authorization/roleAssignments/{roleAssignmentName}.put.description": "Creates a role assignment.",
	"paths./{scope}/providers/Microsoft.Authorization/roleAssignments/{roleAssignmentName}.put.operationId": "RoleAssignments_Create",
	"paths./{scope}/providers/Microsoft.Authorization/roleAssignments/{roleAssignmentName}.put.parameters.length": 4,
	"paths./{scope}/providers/Microsoft.Authorization/roleAssignments/{roleAssignmentName}.put.parameters[0].description": "The scope of the role assignment to create. The scope can be any REST resource instance. For example, use '/subscriptions/{subscription-id}/' for a subscription, '/subscriptions/{subscription-id}/resourceGroups/{resource-group-name}' for a resource group, and '/subscriptions/{subscription-id}/resourceGroups/{resource-group-name}/providers/{resource-provider}/{resource-type}/{resource-name}' for a resource.",
	"paths./{scope}/providers/Microsoft.Authorization/roleAssignments/{roleAssignmentName}.put.parameters[0].in": "path",
	"paths./{scope}/providers/Microsoft.Authorization/roleAssignments/{roleAssignmentName}.put.parameters[0].name": "scope",
	"paths./{scope}/providers/Microsoft.Authorization/roleAssignments/{roleAssignmentName}.put.parameters[0].required": true,
	"paths./{scope}/providers/Microsoft.Authorization/roleAssignments/{roleAssignmentName}.put.parameters[0].type": "string",
	"paths./{scope}/providers/Microsoft.Authorization/roleAssignments/{roleAssignmentName}.put.parameters[0].x-ms-skip-url-encoding": true,
	"paths./{scope}/providers/Microsoft.Authorization/roleAssignments/{roleAssignmentName}.put.parameters[1].description": "The name of the role assignment to create. It can be any valid GUID.",
	"paths./{scope}/providers/Microsoft.Authorization/roleAssignments/{roleAssignmentName}.put.parameters[1].in": "path",
	"paths./{scope}/providers/Microsoft.Authorization/roleAssignments/{roleAssignmentName}.put.parameters[1].name": "roleAssignmentName",
	"paths./{scope}/providers/Microsoft.Authorization/roleAssignments/{roleAssignmentName}.put.parameters[1].required": true,
	"paths./{scope}/providers/Microsoft.Authorization/roleAssignments/{roleAssignmentName}.put.parameters[1].type": "string",
	"paths./{scope}/providers/Microsoft.Authorization/roleAssignments/{roleAssignmentName}.put.parameters[2].description": "Parameters for the role assignment.",
	"paths./{scope}/providers/Microsoft.Authorization/roleAssignments/{roleAssignmentName}.put.parameters[2].in": "body",
	"paths./{scope}/providers/Microsoft.Authorization/roleAssignments/{roleAssignmentName}.put.parameters[2].name": "parameters",
	"paths./{scope}/providers/Microsoft.Authorization/roleAssignments/{roleAssignmentName}.put.parameters[2].required": true,
	"paths./{scope}/providers/Microsoft.Authorization/roleAssignments/{roleAssignmentName}.put.parameters[2].schema.$ref": "#/definitions/RoleAssignmentCreateParameters",
	"paths./{scope}/providers/Microsoft.Authorization/roleAssignments/{roleAssignmentName}.put.parameters[3].$ref": "#/parameters/ApiVersionParameter",
	"paths./{scope}/providers/Microsoft.Authorization/roleAssignments/{roleAssignmentName}.put.responses.201.description": "Created - Returns information about the role assignment.",
	"paths./{scope}/providers/Microsoft.Authorization/roleAssignments/{roleAssignmentName}.put.responses.201.schema.$ref": "#/definitions/RoleAssignment",
	"paths./{scope}/providers/Microsoft.Authorization/roleAssignments/{roleAssignmentName}.put.tags.length": 1,
	"paths./{scope}/providers/Microsoft.Authorization/roleAssignments/{roleAssignmentName}.put.tags[0]": "RoleAssignments",
	"paths./{scope}/providers/Microsoft.Authorization/roleDefinitions.get.description": "Get all role definitions that are applicable at scope and above.",
	"paths./{scope}/providers/Microsoft.Authorization/roleDefinitions.get.operationId": "RoleDefinitions_List",
	"paths./{scope}/providers/Microsoft.Authorization/roleDefinitions.get.parameters.length": 3,
	"paths./{scope}/providers/Microsoft.Authorization/roleDefinitions.get.parameters[0].description": "The scope of the role definition.",
	"paths./{scope}/providers/Microsoft.Authorization/roleDefinitions.get.parameters[0].in": "path",
	"paths./{scope}/providers/Microsoft.Authorization/roleDefinitions.get.parameters[0].name": "scope",
	"paths./{scope}/providers/Microsoft.Authorization/roleDefinitions.get.parameters[0].required": true,
	"paths./{scope}/providers/Microsoft.Authorization/roleDefinitions.get.parameters[0].type": "string",
	"paths./{scope}/providers/Microsoft.Authorization/roleDefinitions.get.parameters[0].x-ms-skip-url-encoding": true,
	"paths./{scope}/providers/Microsoft.Authorization/roleDefinitions.get.parameters[1].description": "The filter to apply on the operation. Use atScopeAndBelow filter to search below the given scope as well.",
	"paths./{scope}/providers/Microsoft.Authorization/roleDefinitions.get.parameters[1].in": "query",
	"paths./{scope}/providers/Microsoft.Authorization/roleDefinitions.get.parameters[1].name": "$filter",
	"paths./{scope}/providers/Microsoft.Authorization/roleDefinitions.get.parameters[1].required": false,
	"paths./{scope}/providers/Microsoft.Authorization/roleDefinitions.get.parameters[1].type": "string",
	"paths./{scope}/providers/Microsoft.Authorization/roleDefinitions.get.parameters[2].$ref": "#/parameters/ApiVersionParameter",
	"paths./{scope}/providers/Microsoft.Authorization/roleDefinitions.get.responses.200.description": "OK - Returns an array of role definitions.",
	"paths./{scope}/providers/Microsoft.Authorization/roleDefinitions.get.responses.200.schema.$ref": "#/definitions/RoleDefinitionListResult",
	"paths./{scope}/providers/Microsoft.Authorization/roleDefinitions.get.tags.length": 1,
	"paths./{scope}/providers/Microsoft.Authorization/roleDefinitions.get.tags[0]": "RoleDefinitions",
	"paths./{scope}/providers/Microsoft.Authorization/roleDefinitions.get.x-ms-odata": "#/definitions/RoleDefinitionFilter",
	"paths./{scope}/providers/Microsoft.Authorization/roleDefinitions.get.x-ms-pageable.nextLinkName": "nextLink",
	"paths./{scope}/providers/Microsoft.Authorization/roleDefinitions/{roleDefinitionId}.delete.description": "Deletes a role definition.",
	"paths./{scope}/providers/Microsoft.Authorization/roleDefinitions/{roleDefinitionId}.delete.operationId": "RoleDefinitions_Delete",
	"paths./{scope}/providers/Microsoft.Authorization/roleDefinitions/{roleDefinitionId}.delete.parameters.length": 3,
	"paths./{scope}/providers/Microsoft.Authorization/roleDefinitions/{roleDefinitionId}.delete.parameters[0].description": "The scope of the role definition.",
	"paths./{scope}/providers/Microsoft.Authorization/roleDefinitions/{roleDefinitionId}.delete.parameters[0].in": "path",
	"paths./{scope}/providers/Microsoft.Authorization/roleDefinitions/{roleDefinitionId}.delete.parameters[0].name": "scope",
	"paths./{scope}/providers/Microsoft.Authorization/roleDefinitions/{roleDefinitionId}.delete.parameters[0].required": true,
	"paths./{scope}/providers/Microsoft.Authorization/roleDefinitions/{roleDefinitionId}.delete.parameters[0].type": "string",
	"paths./{scope}/providers/Microsoft.Authorization/roleDefinitions/{roleDefinitionId}.delete.parameters[0].x-ms-skip-url-encoding": true,
	"paths./{scope}/providers/Microsoft.Authorization/roleDefinitions/{roleDefinitionId}.delete.parameters[1].description": "The ID of the role definition to delete.",
	"paths./{scope}/providers/Microsoft.Authorization/roleDefinitions/{roleDefinitionId}.delete.parameters[1].in": "path",
	"paths./{scope}/providers/Microsoft.Authorization/roleDefinitions/{roleDefinitionId}.delete.parameters[1].name": "roleDefinitionId",
	"paths./{scope}/providers/Microsoft.Authorization/roleDefinitions/{roleDefinitionId}.delete.parameters[1].required": true,
	"paths./{scope}/providers/Microsoft.Authorization/roleDefinitions/{roleDefinitionId}.delete.parameters[1].type": "string",
	"paths./{scope}/providers/Microsoft.Authorization/roleDefinitions/{roleDefinitionId}.delete.parameters[2].$ref": "#/parameters/ApiVersionParameter",
	"paths./{scope}/providers/Microsoft.Authorization/roleDefinitions/{roleDefinitionId}.delete.responses.200.description": "OK - Returns information about the role definition.",
	"paths./{scope}/providers/Microsoft.Authorization/roleDefinitions/{roleDefinitionId}.delete.responses.200.schema.$ref": "#/definitions/RoleDefinition",
	"paths./{scope}/providers/Microsoft.Authorization/roleDefinitions/{roleDefinitionId}.delete.tags.length": 1,
	"paths./{scope}/providers/Microsoft.Authorization/roleDefinitions/{roleDefinitionId}.delete.tags[0]": "RoleDefinitions",
	"paths./{scope}/providers/Microsoft.Authorization/roleDefinitions/{roleDefinitionId}.get.description": "Get role definition by name (GUID).",
	"paths./{scope}/providers/Microsoft.Authorization/roleDefinitions/{roleDefinitionId}.get.operationId": "RoleDefinitions_Get",
	"paths./{scope}/providers/Microsoft.Authorization/roleDefinitions/{roleDefinitionId}.get.parameters.length": 3,
	"paths./{scope}/providers/Microsoft.Authorization/roleDefinitions/{roleDefinitionId}.get.parameters[0].description": "The scope of the role definition.",
	"paths./{scope}/providers/Microsoft.Authorization/roleDefinitions/{roleDefinitionId}.get.parameters[0].in": "path",
	"paths./{scope}/providers/Microsoft.Authorization/roleDefinitions/{roleDefinitionId}.get.parameters[0].name": "scope",
	"paths./{scope}/providers/Microsoft.Authorization/roleDefinitions/{roleDefinitionId}.get.parameters[0].required": true,
	"paths./{scope}/providers/Microsoft.Authorization/roleDefinitions/{roleDefinitionId}.get.parameters[0].type": "string",
	"paths./{scope}/providers/Microsoft.Authorization/roleDefinitions/{roleDefinitionId}.get.parameters[0].x-ms-skip-url-encoding": true,
	"paths./{scope}/providers/Microsoft.Authorization/roleDefinitions/{roleDefinitionId}.get.parameters[1].description": "The ID of the role definition.",
	"paths./{scope}/providers/Microsoft.Authorization/roleDefinitions/{roleDefinitionId}.get.parameters[1].in": "path",
	"paths./{scope}/providers/Microsoft.Authorization/roleDefinitions/{roleDefinitionId}.get.parameters[1].name": "roleDefinitionId",
	"paths./{scope}/providers/Microsoft.Authorization/roleDefinitions/{roleDefinitionId}.get.parameters[1].required": true,
	"paths./{scope}/providers/Microsoft.Authorization/roleDefinitions/{roleDefinitionId}.get.parameters[1].type": "string",
	"paths./{scope}/providers/Microsoft.Authorization/roleDefinitions/{roleDefinitionId}.get.parameters[2].$ref": "#/parameters/ApiVersionParameter",
	"paths./{scope}/providers/Microsoft.Authorization/roleDefinitions/{roleDefinitionId}.get.responses.200.description": "OK - Returns information about the role definition.",
	"paths./{scope}/providers/Microsoft.Authorization/roleDefinitions/{roleDefinitionId}.get.responses.200.schema.$ref": "#/definitions/RoleDefinition",
	"paths./{scope}/providers/Microsoft.Authorization/roleDefinitions/{roleDefinitionId}.get.tags.length": 1,
	"paths./{scope}/providers/Microsoft.Authorization/roleDefinitions/{roleDefinitionId}.get.tags[0]": "RoleDefinitions",
	"paths./{scope}/providers/Microsoft.Authorization/roleDefinitions/{roleDefinitionId}.put.description": "Creates or updates a role definition.",
	"paths./{scope}/providers/Microsoft.Authorization/roleDefinitions/{roleDefinitionId}.put.operationId": "RoleDefinitions_CreateOrUpdate",
	"paths./{scope}/providers/Microsoft.Authorization/roleDefinitions/{roleDefinitionId}.put.parameters.length": 4,
	"paths./{scope}/providers/Microsoft.Authorization/roleDefinitions/{roleDefinitionId}.put.parameters[0].description": "The scope of the role definition.",
	"paths./{scope}/providers/Microsoft.Authorization/roleDefinitions/{roleDefinitionId}.put.parameters[0].in": "path",
	"paths./{scope}/providers/Microsoft.Authorization/roleDefinitions/{roleDefinitionId}.put.parameters[0].name": "scope",
	"paths./{scope}/providers/Microsoft.Authorization/roleDefinitions/{roleDefinitionId}.put.parameters[0].required": true,
	"paths./{scope}/providers/Microsoft.Authorization/roleDefinitions/{roleDefinitionId}.put.parameters[0].type": "string",
	"paths./{scope}/providers/Microsoft.Authorization/roleDefinitions/{roleDefinitionId}.put.parameters[0].x-ms-skip-url-encoding": true,
	"paths./{scope}/providers/Microsoft.Authorization/roleDefinitions/{roleDefinitionId}.put.parameters[1].description": "The ID of the role definition.",
	"paths./{scope}/providers/Microsoft.Authorization/roleDefinitions/{roleDefinitionId}.put.parameters[1].in": "path",
	"paths./{scope}/providers/Microsoft.Authorization/roleDefinitions/{roleDefinitionId}.put.parameters[1].name": "roleDefinitionId",
	"paths./{scope}/providers/Microsoft.Authorization/roleDefinitions/{roleDefinitionId}.put.parameters[1].required": true,
	"paths./{scope}/providers/Microsoft.Authorization/roleDefinitions/{roleDefinitionId}.put.parameters[1].type": "string",
	"paths./{scope}/providers/Microsoft.Authorization/roleDefinitions/{roleDefinitionId}.put.parameters[2].description": "The values for the role definition.",
	"paths./{scope}/providers/Microsoft.Authorization/roleDefinitions/{roleDefinitionId}.put.parameters[2].in": "body",
	"paths./{scope}/providers/Microsoft.Authorization/roleDefinitions/{roleDefinitionId}.put.parameters[2].name": "roleDefinition",
	"paths./{scope}/providers/Microsoft.Authorization/roleDefinitions/{roleDefinitionId}.put.parameters[2].required": true,
	"paths./{scope}/providers/Microsoft.Authorization/roleDefinitions/{roleDefinitionId}.put.parameters[2].schema.$ref": "#/definitions/RoleDefinition",
	"paths./{scope}/providers/Microsoft.Authorization/roleDefinitions/{roleDefinitionId}.put.parameters[3].$ref": "#/parameters/ApiVersionParameter",
	"paths./{scope}/providers/Microsoft.Authorization/roleDefinitions/{roleDefinitionId}.put.responses.201.description": "OK - Returns information about the role definition.",
	"paths./{scope}/providers/Microsoft.Authorization/roleDefinitions/{roleDefinitionId}.put.responses.201.schema.$ref": "#/definitions/RoleDefinition",
	"paths./{scope}/providers/Microsoft.Authorization/roleDefinitions/{roleDefinitionId}.put.tags.length": 1,
	"paths./{scope}/providers/Microsoft.Authorization/roleDefinitions/{roleDefinitionId}.put.tags[0]": "RoleDefinitions",
	"produces.length": 2,
	"produces[0]": "application/json",
	"produces[1]": "text/json",
	"schemes.length": 1,
	"schemes[0]": "https",
	"security.length": 1,
	"securityDefinitions.azure_auth.authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
	"securityDefinitions.azure_auth.description": "Azure Active Directory OAuth2 Flow",
	"securityDefinitions.azure_auth.flow": "implicit",
	"securityDefinitions.azure_auth.scopes.user_impersonation": "impersonate your user account",
	"securityDefinitions.azure_auth.type": "oauth2",
	"security[0].azure_auth.length": 1,
	"security[0].azure_auth[0]": "user_impersonation",
	"swagger": "2.0",
	"x-hasEquivalentPaths": true
}