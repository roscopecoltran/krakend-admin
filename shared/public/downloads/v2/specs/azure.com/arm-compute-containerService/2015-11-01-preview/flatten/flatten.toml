"consumes.length" = 2
"consumes[0]" = "application/json"
"consumes[1]" = "text/json"
"definitions.ContainerService.allOf.length" = 1
"definitions.ContainerService.allOf[0].$ref" = "#/definitions/Resource"
"definitions.ContainerService.description" = "Container service"
"definitions.ContainerService.properties.properties.$ref" = "#/definitions/ContainerServiceProperties"
"definitions.ContainerService.properties.properties.x-ms-client-flatten" = true
"definitions.ContainerServiceAgentPoolProfile.description" = "Profile for container service agent pool"
"definitions.ContainerServiceAgentPoolProfile.properties.count.description" = "No. of agents (VMs) that will host docker containers"
"definitions.ContainerServiceAgentPoolProfile.properties.count.format" = "int32"
"definitions.ContainerServiceAgentPoolProfile.properties.count.maximum" = 100.0
"definitions.ContainerServiceAgentPoolProfile.properties.count.minimum" = 1.0
"definitions.ContainerServiceAgentPoolProfile.properties.count.type" = "integer"
"definitions.ContainerServiceAgentPoolProfile.properties.dnsPrefix.description" = "DNS prefix to be used to create FQDN for this agent pool"
"definitions.ContainerServiceAgentPoolProfile.properties.dnsPrefix.type" = "string"
"definitions.ContainerServiceAgentPoolProfile.properties.fqdn.description" = "FDQN for the agent pool"
"definitions.ContainerServiceAgentPoolProfile.properties.fqdn.readOnly" = true
"definitions.ContainerServiceAgentPoolProfile.properties.fqdn.type" = "string"
"definitions.ContainerServiceAgentPoolProfile.properties.name.description" = "Unique name of the agent pool profile within the context of the subscription and resource group"
"definitions.ContainerServiceAgentPoolProfile.properties.name.type" = "string"
"definitions.ContainerServiceAgentPoolProfile.properties.vmSize.description" = "Size of agent VMs"
"definitions.ContainerServiceAgentPoolProfile.properties.vmSize.enum.length" = 47
"definitions.ContainerServiceAgentPoolProfile.properties.vmSize.enum[0]" = "Standard_A0"
"definitions.ContainerServiceAgentPoolProfile.properties.vmSize.enum[10]" = "Standard_A10"
"definitions.ContainerServiceAgentPoolProfile.properties.vmSize.enum[11]" = "Standard_A11"
"definitions.ContainerServiceAgentPoolProfile.properties.vmSize.enum[12]" = "Standard_D1"
"definitions.ContainerServiceAgentPoolProfile.properties.vmSize.enum[13]" = "Standard_D2"
"definitions.ContainerServiceAgentPoolProfile.properties.vmSize.enum[14]" = "Standard_D3"
"definitions.ContainerServiceAgentPoolProfile.properties.vmSize.enum[15]" = "Standard_D4"
"definitions.ContainerServiceAgentPoolProfile.properties.vmSize.enum[16]" = "Standard_D11"
"definitions.ContainerServiceAgentPoolProfile.properties.vmSize.enum[17]" = "Standard_D12"
"definitions.ContainerServiceAgentPoolProfile.properties.vmSize.enum[18]" = "Standard_D13"
"definitions.ContainerServiceAgentPoolProfile.properties.vmSize.enum[19]" = "Standard_D14"
"definitions.ContainerServiceAgentPoolProfile.properties.vmSize.enum[1]" = "Standard_A1"
"definitions.ContainerServiceAgentPoolProfile.properties.vmSize.enum[20]" = "Standard_D1_v2"
"definitions.ContainerServiceAgentPoolProfile.properties.vmSize.enum[21]" = "Standard_D2_v2"
"definitions.ContainerServiceAgentPoolProfile.properties.vmSize.enum[22]" = "Standard_D3_v2"
"definitions.ContainerServiceAgentPoolProfile.properties.vmSize.enum[23]" = "Standard_D4_v2"
"definitions.ContainerServiceAgentPoolProfile.properties.vmSize.enum[24]" = "Standard_D5_v2"
"definitions.ContainerServiceAgentPoolProfile.properties.vmSize.enum[25]" = "Standard_D11_v2"
"definitions.ContainerServiceAgentPoolProfile.properties.vmSize.enum[26]" = "Standard_D12_v2"
"definitions.ContainerServiceAgentPoolProfile.properties.vmSize.enum[27]" = "Standard_D13_v2"
"definitions.ContainerServiceAgentPoolProfile.properties.vmSize.enum[28]" = "Standard_D14_v2"
"definitions.ContainerServiceAgentPoolProfile.properties.vmSize.enum[29]" = "Standard_G1"
"definitions.ContainerServiceAgentPoolProfile.properties.vmSize.enum[2]" = "Standard_A2"
"definitions.ContainerServiceAgentPoolProfile.properties.vmSize.enum[30]" = "Standard_G2"
"definitions.ContainerServiceAgentPoolProfile.properties.vmSize.enum[31]" = "Standard_G3"
"definitions.ContainerServiceAgentPoolProfile.properties.vmSize.enum[32]" = "Standard_G4"
"definitions.ContainerServiceAgentPoolProfile.properties.vmSize.enum[33]" = "Standard_G5"
"definitions.ContainerServiceAgentPoolProfile.properties.vmSize.enum[34]" = "Standard_DS1"
"definitions.ContainerServiceAgentPoolProfile.properties.vmSize.enum[35]" = "Standard_DS2"
"definitions.ContainerServiceAgentPoolProfile.properties.vmSize.enum[36]" = "Standard_DS3"
"definitions.ContainerServiceAgentPoolProfile.properties.vmSize.enum[37]" = "Standard_DS4"
"definitions.ContainerServiceAgentPoolProfile.properties.vmSize.enum[38]" = "Standard_DS11"
"definitions.ContainerServiceAgentPoolProfile.properties.vmSize.enum[39]" = "Standard_DS12"
"definitions.ContainerServiceAgentPoolProfile.properties.vmSize.enum[3]" = "Standard_A3"
"definitions.ContainerServiceAgentPoolProfile.properties.vmSize.enum[40]" = "Standard_DS13"
"definitions.ContainerServiceAgentPoolProfile.properties.vmSize.enum[41]" = "Standard_DS14"
"definitions.ContainerServiceAgentPoolProfile.properties.vmSize.enum[42]" = "Standard_GS1"
"definitions.ContainerServiceAgentPoolProfile.properties.vmSize.enum[43]" = "Standard_GS2"
"definitions.ContainerServiceAgentPoolProfile.properties.vmSize.enum[44]" = "Standard_GS3"
"definitions.ContainerServiceAgentPoolProfile.properties.vmSize.enum[45]" = "Standard_GS4"
"definitions.ContainerServiceAgentPoolProfile.properties.vmSize.enum[46]" = "Standard_GS5"
"definitions.ContainerServiceAgentPoolProfile.properties.vmSize.enum[4]" = "Standard_A4"
"definitions.ContainerServiceAgentPoolProfile.properties.vmSize.enum[5]" = "Standard_A5"
"definitions.ContainerServiceAgentPoolProfile.properties.vmSize.enum[6]" = "Standard_A6"
"definitions.ContainerServiceAgentPoolProfile.properties.vmSize.enum[7]" = "Standard_A7"
"definitions.ContainerServiceAgentPoolProfile.properties.vmSize.enum[8]" = "Standard_A8"
"definitions.ContainerServiceAgentPoolProfile.properties.vmSize.enum[9]" = "Standard_A9"
"definitions.ContainerServiceAgentPoolProfile.properties.vmSize.type" = "string"
"definitions.ContainerServiceAgentPoolProfile.properties.vmSize.x-ms-enum.modelAsString" = true
"definitions.ContainerServiceAgentPoolProfile.properties.vmSize.x-ms-enum.name" = "ContainerServiceVMSizeTypes"
"definitions.ContainerServiceAgentPoolProfile.required.length" = 2
"definitions.ContainerServiceAgentPoolProfile.required[0]" = "name"
"definitions.ContainerServiceAgentPoolProfile.required[1]" = "dnsPrefix"
"definitions.ContainerServiceDiagnosticsProfile.properties.vmDiagnostics.$ref" = "#/definitions/ContainerServiceVMDiagnostics"
"definitions.ContainerServiceDiagnosticsProfile.properties.vmDiagnostics.description" = "Profile for container service VM diagnostic agent"
"definitions.ContainerServiceLinuxProfile.description" = "Profile for Linux VM"
"definitions.ContainerServiceLinuxProfile.properties.adminUsername.description" = "The administrator username to use for all Linux VMs"
"definitions.ContainerServiceLinuxProfile.properties.adminUsername.type" = "string"
"definitions.ContainerServiceLinuxProfile.properties.ssh.$ref" = "#/definitions/ContainerServiceSshConfiguration"
"definitions.ContainerServiceLinuxProfile.properties.ssh.description" = "Specifies the ssh key configuration for Linux VMs"
"definitions.ContainerServiceLinuxProfile.required.length" = 2
"definitions.ContainerServiceLinuxProfile.required[0]" = "adminUsername"
"definitions.ContainerServiceLinuxProfile.required[1]" = "ssh"
"definitions.ContainerServiceListResult.description" = "The List Container Service operation response"
"definitions.ContainerServiceListResult.properties.value.description" = "Gets or sets the list of container services."
"definitions.ContainerServiceListResult.properties.value.items.$ref" = "#/definitions/ContainerService"
"definitions.ContainerServiceListResult.properties.value.type" = "array"
"definitions.ContainerServiceMasterProfile.description" = "Profile for container service master"
"definitions.ContainerServiceMasterProfile.properties.count.description" = "Number of masters (VMs) in the container cluster"
"definitions.ContainerServiceMasterProfile.properties.count.enum.length" = 3
"definitions.ContainerServiceMasterProfile.properties.count.enum[0]" = 1.0
"definitions.ContainerServiceMasterProfile.properties.count.enum[1]" = 3.0
"definitions.ContainerServiceMasterProfile.properties.count.enum[2]" = 5.0
"definitions.ContainerServiceMasterProfile.properties.count.format" = "int32"
"definitions.ContainerServiceMasterProfile.properties.count.type" = "integer"
"definitions.ContainerServiceMasterProfile.properties.dnsPrefix.description" = "DNS prefix to be used to create FQDN for master"
"definitions.ContainerServiceMasterProfile.properties.dnsPrefix.type" = "string"
"definitions.ContainerServiceMasterProfile.properties.fqdn.description" = "FDQN for the master"
"definitions.ContainerServiceMasterProfile.properties.fqdn.readOnly" = true
"definitions.ContainerServiceMasterProfile.properties.fqdn.type" = "string"
"definitions.ContainerServiceMasterProfile.required.length" = 1
"definitions.ContainerServiceMasterProfile.required[0]" = "dnsPrefix"
"definitions.ContainerServiceOrchestratorProfile.description" = "Profile for Orchestrator"
"definitions.ContainerServiceOrchestratorProfile.properties.orchestratorType.description" = "Specifies what orchestrator will be used to manage container cluster resources."
"definitions.ContainerServiceOrchestratorProfile.properties.orchestratorType.enum.length" = 3
"definitions.ContainerServiceOrchestratorProfile.properties.orchestratorType.enum[0]" = "Mesos"
"definitions.ContainerServiceOrchestratorProfile.properties.orchestratorType.enum[1]" = "SwarmPreview"
"definitions.ContainerServiceOrchestratorProfile.properties.orchestratorType.enum[2]" = "DCOS"
"definitions.ContainerServiceOrchestratorProfile.properties.orchestratorType.type" = "string"
"definitions.ContainerServiceOrchestratorProfile.properties.orchestratorType.x-ms-enum.modelAsString" = false
"definitions.ContainerServiceOrchestratorProfile.properties.orchestratorType.x-ms-enum.name" = "ContainerServiceOchestratorTypes"
"definitions.ContainerServiceProperties.description" = "Properties of container service"
"definitions.ContainerServiceProperties.properties.agentPoolProfiles.description" = "Properties of agent pools"
"definitions.ContainerServiceProperties.properties.agentPoolProfiles.items.$ref" = "#/definitions/ContainerServiceAgentPoolProfile"
"definitions.ContainerServiceProperties.properties.agentPoolProfiles.type" = "array"
"definitions.ContainerServiceProperties.properties.diagnosticsProfile.$ref" = "#/definitions/ContainerServiceDiagnosticsProfile"
"definitions.ContainerServiceProperties.properties.diagnosticsProfile.description" = "Properties for Diagnostic Agent"
"definitions.ContainerServiceProperties.properties.linuxProfile.$ref" = "#/definitions/ContainerServiceLinuxProfile"
"definitions.ContainerServiceProperties.properties.linuxProfile.description" = "Properties for Linux VMs"
"definitions.ContainerServiceProperties.properties.masterProfile.$ref" = "#/definitions/ContainerServiceMasterProfile"
"definitions.ContainerServiceProperties.properties.masterProfile.description" = "Properties of master agents"
"definitions.ContainerServiceProperties.properties.orchestratorProfile.$ref" = "#/definitions/ContainerServiceOrchestratorProfile"
"definitions.ContainerServiceProperties.properties.orchestratorProfile.description" = "Properties of orchestrator"
"definitions.ContainerServiceProperties.properties.provisioningState.description" = "Gets the provisioning state, which only appears in the response."
"definitions.ContainerServiceProperties.properties.provisioningState.readOnly" = true
"definitions.ContainerServiceProperties.properties.provisioningState.type" = "string"
"definitions.ContainerServiceProperties.properties.windowsProfile.$ref" = "#/definitions/ContainerServiceWindowsProfile"
"definitions.ContainerServiceProperties.properties.windowsProfile.description" = "Properties of Windows VMs"
"definitions.ContainerServiceProperties.required.length" = 3
"definitions.ContainerServiceProperties.required[0]" = "masterProfile"
"definitions.ContainerServiceProperties.required[1]" = "agentPoolProfiles"
"definitions.ContainerServiceProperties.required[2]" = "linuxProfile"
"definitions.ContainerServiceSshConfiguration.description" = "SSH configuration for Linux based VMs running on Azure"
"definitions.ContainerServiceSshConfiguration.properties.publicKeys.description" = "Gets or sets the list of SSH public keys used to authenticate with Linux based VMs"
"definitions.ContainerServiceSshConfiguration.properties.publicKeys.items.$ref" = "#/definitions/ContainerServiceSshPublicKey"
"definitions.ContainerServiceSshConfiguration.properties.publicKeys.type" = "array"
"definitions.ContainerServiceSshPublicKey.description" = "Contains information about SSH certificate public key data."
"definitions.ContainerServiceSshPublicKey.properties.keyData.description" = "Gets or sets Certificate public key used to authenticate with VM through SSH. The certificate must be in Pem format with or without headers."
"definitions.ContainerServiceSshPublicKey.properties.keyData.type" = "string"
"definitions.ContainerServiceSshPublicKey.required.length" = 1
"definitions.ContainerServiceSshPublicKey.required[0]" = "keyData"
"definitions.ContainerServiceVMDiagnostics.description" = "Describes VM Diagnostics."
"definitions.ContainerServiceVMDiagnostics.properties.enabled.description" = "Gets or sets whether VM Diagnostic Agent should be provisioned on the Virtual Machine."
"definitions.ContainerServiceVMDiagnostics.properties.enabled.type" = "boolean"
"definitions.ContainerServiceVMDiagnostics.properties.storageUri.description" = "Gets or sets whether VM Diagnostic Agent should be provisioned on the Virtual Machine."
"definitions.ContainerServiceVMDiagnostics.properties.storageUri.readOnly" = true
"definitions.ContainerServiceVMDiagnostics.properties.storageUri.type" = "string"
"definitions.ContainerServiceWindowsProfile.description" = "Profile for Windows jumpbox"
"definitions.ContainerServiceWindowsProfile.properties.adminPassword.description" = "The administrator password to use for Windows jumpbox"
"definitions.ContainerServiceWindowsProfile.properties.adminPassword.type" = "string"
"definitions.ContainerServiceWindowsProfile.properties.adminUsername.description" = "The administrator username to use for Windows jumpbox"
"definitions.ContainerServiceWindowsProfile.properties.adminUsername.type" = "string"
"definitions.ContainerServiceWindowsProfile.required.length" = 2
"definitions.ContainerServiceWindowsProfile.required[0]" = "adminUsername"
"definitions.ContainerServiceWindowsProfile.required[1]" = "adminPassword"
"definitions.Resource.description" = "The Resource model definition."
"definitions.Resource.properties.id.description" = "Resource Id"
"definitions.Resource.properties.id.readOnly" = true
"definitions.Resource.properties.id.type" = "string"
"definitions.Resource.properties.location.description" = "Resource location"
"definitions.Resource.properties.location.type" = "string"
"definitions.Resource.properties.name.description" = "Resource name"
"definitions.Resource.properties.name.readOnly" = true
"definitions.Resource.properties.name.type" = "string"
"definitions.Resource.properties.tags.additionalProperties.type" = "string"
"definitions.Resource.properties.tags.description" = "Resource tags"
"definitions.Resource.properties.tags.type" = "object"
"definitions.Resource.properties.type.description" = "Resource type"
"definitions.Resource.properties.type.readOnly" = true
"definitions.Resource.properties.type.type" = "string"
"definitions.Resource.required.length" = 1
"definitions.Resource.required[0]" = "location"
"definitions.Resource.x-ms-azure-resource" = true
host = "management.azure.com"
"info.description" = "The Container Service Client."
"info.title" = "ContainerServiceClient"
"info.version" = "2015-11-01-preview"
"info.x-apisguru-categories.length" = 1
"info.x-apisguru-categories[0]" = "cloud"
"info.x-logo.url" = "https://api.apis.guru/v2/cache/logo/https_assets.onestore.ms_cdnfiles_onestorerolling-1606-01000_shell_v3_images_logo_microsoft.png"
"info.x-origin.length" = 1
"info.x-origin[0].format" = "swagger"
"info.x-origin[0].url" = "https://raw.githubusercontent.com/Azure/azure-rest-api-specs/master/arm-compute/2015-11-01-preview/swagger/containerService.json"
"info.x-origin[0].version" = "2.0"
"info.x-preferred" = false
"info.x-providerName" = "azure.com"
"info.x-serviceName" = "arm-compute-containerService"
"info.x-tags.length" = 4
"info.x-tags[0]" = "Azure"
"info.x-tags[1]" = "Microsoft"
"info.x-tags[2]" = "virtual machines"
"info.x-tags[3]" = "docker"
"parameters.ApiVersionParameter.description" = "Client Api Version."
"parameters.ApiVersionParameter.in" = "query"
"parameters.ApiVersionParameter.name" = "api-version"
"parameters.ApiVersionParameter.required" = true
"parameters.ApiVersionParameter.type" = "string"
"parameters.SubscriptionIdParameter.description" = "Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call."
"parameters.SubscriptionIdParameter.in" = "path"
"parameters.SubscriptionIdParameter.name" = "subscriptionId"
"parameters.SubscriptionIdParameter.required" = true
"parameters.SubscriptionIdParameter.type" = "string"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerService/containerServices.get.description" = "The operation to list container services."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerService/containerServices.get.operationId" = "ContainerService_ListByResourceGroup"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerService/containerServices.get.parameters.length" = 3
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerService/containerServices.get.parameters[0].description" = "The name of the resource group."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerService/containerServices.get.parameters[0].in" = "path"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerService/containerServices.get.parameters[0].name" = "resourceGroupName"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerService/containerServices.get.parameters[0].required" = true
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerService/containerServices.get.parameters[0].type" = "string"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerService/containerServices.get.parameters[1].$ref" = "#/parameters/ApiVersionParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerService/containerServices.get.parameters[2].$ref" = "#/parameters/SubscriptionIdParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerService/containerServices.get.responses.200.description" = ""
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerService/containerServices.get.responses.200.schema.$ref" = "#/definitions/ContainerServiceListResult"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerService/containerServices.get.tags.length" = 1
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerService/containerServices.get.tags[0]" = "ContainerService"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerService/containerServices/{containerServiceName}.delete.description" = "The operation to delete a container service."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerService/containerServices/{containerServiceName}.delete.operationId" = "ContainerService_Delete"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerService/containerServices/{containerServiceName}.delete.parameters.length" = 4
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerService/containerServices/{containerServiceName}.delete.parameters[0].description" = "The name of the resource group."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerService/containerServices/{containerServiceName}.delete.parameters[0].in" = "path"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerService/containerServices/{containerServiceName}.delete.parameters[0].name" = "resourceGroupName"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerService/containerServices/{containerServiceName}.delete.parameters[0].required" = true
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerService/containerServices/{containerServiceName}.delete.parameters[0].type" = "string"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerService/containerServices/{containerServiceName}.delete.parameters[1].description" = "The name of the container service within the given subscription and resource group."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerService/containerServices/{containerServiceName}.delete.parameters[1].in" = "path"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerService/containerServices/{containerServiceName}.delete.parameters[1].name" = "containerServiceName"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerService/containerServices/{containerServiceName}.delete.parameters[1].required" = true
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerService/containerServices/{containerServiceName}.delete.parameters[1].type" = "string"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerService/containerServices/{containerServiceName}.delete.parameters[2].$ref" = "#/parameters/ApiVersionParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerService/containerServices/{containerServiceName}.delete.parameters[3].$ref" = "#/parameters/SubscriptionIdParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerService/containerServices/{containerServiceName}.delete.responses.202.description" = ""
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerService/containerServices/{containerServiceName}.delete.responses.204.description" = ""
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerService/containerServices/{containerServiceName}.delete.tags.length" = 1
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerService/containerServices/{containerServiceName}.delete.tags[0]" = "ContainerService"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerService/containerServices/{containerServiceName}.delete.x-ms-long-running-operation" = true
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerService/containerServices/{containerServiceName}.get.description" = "The operation to get a container service."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerService/containerServices/{containerServiceName}.get.operationId" = "ContainerService_Get"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerService/containerServices/{containerServiceName}.get.parameters.length" = 4
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerService/containerServices/{containerServiceName}.get.parameters[0].description" = "The name of the resource group."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerService/containerServices/{containerServiceName}.get.parameters[0].in" = "path"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerService/containerServices/{containerServiceName}.get.parameters[0].name" = "resourceGroupName"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerService/containerServices/{containerServiceName}.get.parameters[0].required" = true
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerService/containerServices/{containerServiceName}.get.parameters[0].type" = "string"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerService/containerServices/{containerServiceName}.get.parameters[1].description" = "The name of the container service within the given subscription and resource group."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerService/containerServices/{containerServiceName}.get.parameters[1].in" = "path"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerService/containerServices/{containerServiceName}.get.parameters[1].name" = "containerServiceName"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerService/containerServices/{containerServiceName}.get.parameters[1].required" = true
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerService/containerServices/{containerServiceName}.get.parameters[1].type" = "string"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerService/containerServices/{containerServiceName}.get.parameters[2].$ref" = "#/parameters/ApiVersionParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerService/containerServices/{containerServiceName}.get.parameters[3].$ref" = "#/parameters/SubscriptionIdParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerService/containerServices/{containerServiceName}.get.responses.200.description" = ""
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerService/containerServices/{containerServiceName}.get.responses.200.schema.$ref" = "#/definitions/ContainerService"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerService/containerServices/{containerServiceName}.get.tags.length" = 1
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerService/containerServices/{containerServiceName}.get.tags[0]" = "ContainerService"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerService/containerServices/{containerServiceName}.put.description" = "The operation to create or update a container service."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerService/containerServices/{containerServiceName}.put.operationId" = "ContainerService_CreateOrUpdate"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerService/containerServices/{containerServiceName}.put.parameters.length" = 5
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerService/containerServices/{containerServiceName}.put.parameters[0].description" = "The name of the resource group."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerService/containerServices/{containerServiceName}.put.parameters[0].in" = "path"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerService/containerServices/{containerServiceName}.put.parameters[0].name" = "resourceGroupName"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerService/containerServices/{containerServiceName}.put.parameters[0].required" = true
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerService/containerServices/{containerServiceName}.put.parameters[0].type" = "string"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerService/containerServices/{containerServiceName}.put.parameters[1].description" = "The name of the container service within the given subscription and resource group."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerService/containerServices/{containerServiceName}.put.parameters[1].in" = "path"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerService/containerServices/{containerServiceName}.put.parameters[1].name" = "containerServiceName"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerService/containerServices/{containerServiceName}.put.parameters[1].required" = true
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerService/containerServices/{containerServiceName}.put.parameters[1].type" = "string"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerService/containerServices/{containerServiceName}.put.parameters[2].description" = "Parameters supplied to the Create Container Service operation."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerService/containerServices/{containerServiceName}.put.parameters[2].in" = "body"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerService/containerServices/{containerServiceName}.put.parameters[2].name" = "parameters"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerService/containerServices/{containerServiceName}.put.parameters[2].required" = true
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerService/containerServices/{containerServiceName}.put.parameters[2].schema.$ref" = "#/definitions/ContainerService"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerService/containerServices/{containerServiceName}.put.parameters[3].$ref" = "#/parameters/ApiVersionParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerService/containerServices/{containerServiceName}.put.parameters[4].$ref" = "#/parameters/SubscriptionIdParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerService/containerServices/{containerServiceName}.put.responses.200.description" = ""
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerService/containerServices/{containerServiceName}.put.responses.200.schema.$ref" = "#/definitions/ContainerService"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerService/containerServices/{containerServiceName}.put.responses.201.description" = ""
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerService/containerServices/{containerServiceName}.put.responses.201.schema.$ref" = "#/definitions/ContainerService"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerService/containerServices/{containerServiceName}.put.responses.202.description" = ""
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerService/containerServices/{containerServiceName}.put.responses.202.schema.$ref" = "#/definitions/ContainerService"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerService/containerServices/{containerServiceName}.put.tags.length" = 1
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerService/containerServices/{containerServiceName}.put.tags[0]" = "ContainerService"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerService/containerServices/{containerServiceName}.put.x-ms-long-running-operation" = true
"produces.length" = 2
"produces[0]" = "application/json"
"produces[1]" = "text/json"
"schemes.length" = 1
"schemes[0]" = "https"
"security.length" = 1
"securityDefinitions.azure_auth.authorizationUrl" = "https://login.microsoftonline.com/common/oauth2/authorize"
"securityDefinitions.azure_auth.description" = "Azure Active Directory OAuth2 Flow"
"securityDefinitions.azure_auth.flow" = "implicit"
"securityDefinitions.azure_auth.scopes.user_impersonation" = "impersonate your user account"
"securityDefinitions.azure_auth.type" = "oauth2"
"security[0].azure_auth.length" = 1
"security[0].azure_auth[0]" = "user_impersonation"
swagger = "2.0"
