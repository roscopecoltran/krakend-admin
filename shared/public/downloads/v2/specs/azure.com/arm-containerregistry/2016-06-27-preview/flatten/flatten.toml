"consumes.length" = 1
"consumes[0]" = "application/json"
"definitions.Registry.allOf.length" = 1
"definitions.Registry.allOf[0].$ref" = "#/definitions/Resource"
"definitions.Registry.description" = "An object that represents a container registry."
"definitions.Registry.properties.properties.$ref" = "#/definitions/RegistryProperties"
"definitions.Registry.properties.properties.description" = "The properties of the container registry."
"definitions.Registry.properties.properties.x-ms-client-flatten" = true
"definitions.RegistryCredentials.description" = "The result of a request to get the administrator login credentials for a container registry."
"definitions.RegistryCredentials.properties.password.description" = "The administrator password."
"definitions.RegistryCredentials.properties.password.type" = "string"
"definitions.RegistryCredentials.properties.username.description" = "The administrator username."
"definitions.RegistryCredentials.properties.username.type" = "string"
"definitions.RegistryListResult.description" = "The result of a request to list container registries."
"definitions.RegistryListResult.properties.nextLink.description" = "The URI that can be used to request the next list of container registries."
"definitions.RegistryListResult.properties.nextLink.type" = "string"
"definitions.RegistryListResult.properties.value.description" = "The list of container registries. Since this list may be incomplete, the nextLink field should be used to request the next list of container registries."
"definitions.RegistryListResult.properties.value.items.$ref" = "#/definitions/Registry"
"definitions.RegistryListResult.properties.value.type" = "array"
"definitions.RegistryNameCheckRequest.description" = "A request to check whether the container registry name is available."
"definitions.RegistryNameCheckRequest.properties.name.description" = "The name of the container registry."
"definitions.RegistryNameCheckRequest.properties.name.type" = "string"
"definitions.RegistryNameCheckRequest.properties.type.description" = "The resource type of the container registry. This field must be set to \"Microsoft.ContainerRegistry/registries\"."
"definitions.RegistryNameCheckRequest.properties.type.enum.length" = 1
"definitions.RegistryNameCheckRequest.properties.type.enum[0]" = "Microsoft.ContainerRegistry/registries"
"definitions.RegistryNameCheckRequest.properties.type.type" = "string"
"definitions.RegistryNameCheckRequest.properties.type.x-ms-enum.modelAsString" = false
"definitions.RegistryNameCheckRequest.properties.type.x-ms-enum.name" = "ContainerRegistryResourceType"
"definitions.RegistryNameCheckRequest.required.length" = 2
"definitions.RegistryNameCheckRequest.required[0]" = "name"
"definitions.RegistryNameCheckRequest.required[1]" = "type"
"definitions.RegistryNameStatus.description" = "The result of a request to check the availability of a container registry name."
"definitions.RegistryNameStatus.properties.message.description" = "If any, the error message that provides more detail for the reason that the name is not available."
"definitions.RegistryNameStatus.properties.message.type" = "string"
"definitions.RegistryNameStatus.properties.nameAvailable.description" = "The value that indicates whether the name is available."
"definitions.RegistryNameStatus.properties.nameAvailable.type" = "boolean"
"definitions.RegistryNameStatus.properties.reason.description" = "If any, the reason that the name is not available."
"definitions.RegistryNameStatus.properties.reason.type" = "string"
"definitions.RegistryProperties.description" = "The properties of a container registry."
"definitions.RegistryProperties.properties.adminUserEnabled.default" = false
"definitions.RegistryProperties.properties.adminUserEnabled.description" = "The value that indicates whether the admin user is enabled. This value is false by default."
"definitions.RegistryProperties.properties.adminUserEnabled.type" = "boolean"
"definitions.RegistryProperties.properties.creationDate.description" = "The creation date of the container registry in ISO8601 format."
"definitions.RegistryProperties.properties.creationDate.format" = "date-time"
"definitions.RegistryProperties.properties.creationDate.readOnly" = true
"definitions.RegistryProperties.properties.creationDate.type" = "string"
"definitions.RegistryProperties.properties.loginServer.description" = "The URL that can be used to log into the container registry."
"definitions.RegistryProperties.properties.loginServer.readOnly" = true
"definitions.RegistryProperties.properties.loginServer.type" = "string"
"definitions.RegistryProperties.properties.storageAccount.$ref" = "#/definitions/StorageAccountProperties"
"definitions.RegistryProperties.properties.storageAccount.description" = "The properties of the storage account for the container registry. If specified, the storage account must be in the same physical location as the container registry."
"definitions.RegistryProperties.required.length" = 1
"definitions.RegistryProperties.required[0]" = "storageAccount"
"definitions.RegistryPropertiesUpdateParameters.description" = "The parameters for updating the properties of a container registry."
"definitions.RegistryPropertiesUpdateParameters.properties.adminUserEnabled.description" = "The value that indicates whether the admin user is enabled. This value is false by default."
"definitions.RegistryPropertiesUpdateParameters.properties.adminUserEnabled.type" = "boolean"
"definitions.RegistryPropertiesUpdateParameters.properties.storageAccount.$ref" = "#/definitions/StorageAccountProperties"
"definitions.RegistryPropertiesUpdateParameters.properties.storageAccount.description" = "The properties of a storage account for the container registry. If specified, the storage account must be in the same physical location as the container registry."
"definitions.RegistryUpdateParameters.description" = "The parameters for updating a container registry."
"definitions.RegistryUpdateParameters.properties.properties.$ref" = "#/definitions/RegistryPropertiesUpdateParameters"
"definitions.RegistryUpdateParameters.properties.properties.description" = "The properties that the container registry will be updated with."
"definitions.RegistryUpdateParameters.properties.properties.x-ms-client-flatten" = true
"definitions.RegistryUpdateParameters.properties.tags.additionalProperties.type" = "string"
"definitions.RegistryUpdateParameters.properties.tags.description" = "The resource tags for the container registry."
"definitions.RegistryUpdateParameters.properties.tags.type" = "object"
"definitions.Resource.description" = "An Azure resource."
"definitions.Resource.properties.id.description" = "The resource ID."
"definitions.Resource.properties.id.readOnly" = true
"definitions.Resource.properties.id.type" = "string"
"definitions.Resource.properties.location.description" = "The location of the resource. This cannot be changed after the resource is created."
"definitions.Resource.properties.location.type" = "string"
"definitions.Resource.properties.name.description" = "The name of the resource."
"definitions.Resource.properties.name.readOnly" = true
"definitions.Resource.properties.name.type" = "string"
"definitions.Resource.properties.tags.additionalProperties.type" = "string"
"definitions.Resource.properties.tags.description" = "The tags of the resource."
"definitions.Resource.properties.tags.type" = "object"
"definitions.Resource.properties.type.description" = "The type of the resource."
"definitions.Resource.properties.type.readOnly" = true
"definitions.Resource.properties.type.type" = "string"
"definitions.Resource.required.length" = 1
"definitions.Resource.required[0]" = "location"
"definitions.Resource.x-ms-azure-resource" = true
"definitions.StorageAccountProperties.description" = "The properties of a storage account for a container registry."
"definitions.StorageAccountProperties.properties.accessKey.description" = "The access key to the storage account."
"definitions.StorageAccountProperties.properties.accessKey.type" = "string"
"definitions.StorageAccountProperties.properties.name.description" = "The name of the storage account."
"definitions.StorageAccountProperties.properties.name.type" = "string"
"definitions.StorageAccountProperties.required.length" = 2
"definitions.StorageAccountProperties.required[0]" = "name"
"definitions.StorageAccountProperties.required[1]" = "accessKey"
host = "management.azure.com"
"info.title" = "ContainerRegistryManagementClient"
"info.version" = "2016-06-27-preview"
"info.x-apisguru-categories.length" = 1
"info.x-apisguru-categories[0]" = "cloud"
"info.x-logo.url" = "https://api.apis.guru/v2/cache/logo/https_assets.onestore.ms_cdnfiles_onestorerolling-1606-01000_shell_v3_images_logo_microsoft.png"
"info.x-origin.length" = 1
"info.x-origin[0].format" = "swagger"
"info.x-origin[0].url" = "https://raw.githubusercontent.com/Azure/azure-rest-api-specs/master/arm-containerregistry/2016-06-27-preview/swagger/containerregistry.json"
"info.x-origin[0].version" = "2.0"
"info.x-preferred" = true
"info.x-providerName" = "azure.com"
"info.x-serviceName" = "arm-containerregistry"
"info.x-tags.length" = 2
"info.x-tags[0]" = "Azure"
"info.x-tags[1]" = "Microsoft"
"parameters.ApiVersionParameter.description" = "The client API version."
"parameters.ApiVersionParameter.in" = "query"
"parameters.ApiVersionParameter.name" = "api-version"
"parameters.ApiVersionParameter.required" = true
"parameters.ApiVersionParameter.type" = "string"
"parameters.RegistryNameParameter.description" = "The name of the container registry."
"parameters.RegistryNameParameter.in" = "path"
"parameters.RegistryNameParameter.name" = "registryName"
"parameters.RegistryNameParameter.required" = true
"parameters.RegistryNameParameter.type" = "string"
"parameters.RegistryNameParameter.x-ms-parameter-location" = "method"
"parameters.ResourceGroupParameter.description" = "The name of the resource group to which the container registry belongs."
"parameters.ResourceGroupParameter.in" = "path"
"parameters.ResourceGroupParameter.name" = "resourceGroupName"
"parameters.ResourceGroupParameter.required" = true
"parameters.ResourceGroupParameter.type" = "string"
"parameters.ResourceGroupParameter.x-ms-parameter-location" = "method"
"parameters.SubscriptionIdParameter.description" = "The Microsoft Azure subscription ID."
"parameters.SubscriptionIdParameter.in" = "path"
"parameters.SubscriptionIdParameter.name" = "subscriptionId"
"parameters.SubscriptionIdParameter.required" = true
"parameters.SubscriptionIdParameter.type" = "string"
"paths./subscriptions/{subscriptionId}/providers/Microsoft.ContainerRegistry/checkNameAvailability.post.description" = "Checks whether the container registry name is available for use. The name must contain only alphanumeric characters, be globally unique, and between 5 and 60 characters in length."
"paths./subscriptions/{subscriptionId}/providers/Microsoft.ContainerRegistry/checkNameAvailability.post.operationId" = "Registries_CheckNameAvailability"
"paths./subscriptions/{subscriptionId}/providers/Microsoft.ContainerRegistry/checkNameAvailability.post.parameters.length" = 3
"paths./subscriptions/{subscriptionId}/providers/Microsoft.ContainerRegistry/checkNameAvailability.post.parameters[0].$ref" = "#/parameters/ApiVersionParameter"
"paths./subscriptions/{subscriptionId}/providers/Microsoft.ContainerRegistry/checkNameAvailability.post.parameters[1].$ref" = "#/parameters/SubscriptionIdParameter"
"paths./subscriptions/{subscriptionId}/providers/Microsoft.ContainerRegistry/checkNameAvailability.post.parameters[2].description" = "The object containing information for the availability request."
"paths./subscriptions/{subscriptionId}/providers/Microsoft.ContainerRegistry/checkNameAvailability.post.parameters[2].in" = "body"
"paths./subscriptions/{subscriptionId}/providers/Microsoft.ContainerRegistry/checkNameAvailability.post.parameters[2].name" = "registryNameCheckRequest"
"paths./subscriptions/{subscriptionId}/providers/Microsoft.ContainerRegistry/checkNameAvailability.post.parameters[2].required" = true
"paths./subscriptions/{subscriptionId}/providers/Microsoft.ContainerRegistry/checkNameAvailability.post.parameters[2].schema.$ref" = "#/definitions/RegistryNameCheckRequest"
"paths./subscriptions/{subscriptionId}/providers/Microsoft.ContainerRegistry/checkNameAvailability.post.responses.200.description" = "The request was successful; the request was well-formed and received properly."
"paths./subscriptions/{subscriptionId}/providers/Microsoft.ContainerRegistry/checkNameAvailability.post.responses.200.schema.$ref" = "#/definitions/RegistryNameStatus"
"paths./subscriptions/{subscriptionId}/providers/Microsoft.ContainerRegistry/checkNameAvailability.post.tags.length" = 1
"paths./subscriptions/{subscriptionId}/providers/Microsoft.ContainerRegistry/checkNameAvailability.post.tags[0]" = "Operation"
"paths./subscriptions/{subscriptionId}/providers/Microsoft.ContainerRegistry/registries.get.description" = "Lists all the available container registries under the specified subscription."
"paths./subscriptions/{subscriptionId}/providers/Microsoft.ContainerRegistry/registries.get.operationId" = "Registries_List"
"paths./subscriptions/{subscriptionId}/providers/Microsoft.ContainerRegistry/registries.get.parameters.length" = 2
"paths./subscriptions/{subscriptionId}/providers/Microsoft.ContainerRegistry/registries.get.parameters[0].$ref" = "#/parameters/ApiVersionParameter"
"paths./subscriptions/{subscriptionId}/providers/Microsoft.ContainerRegistry/registries.get.parameters[1].$ref" = "#/parameters/SubscriptionIdParameter"
"paths./subscriptions/{subscriptionId}/providers/Microsoft.ContainerRegistry/registries.get.responses.200.description" = "The request was successful; the request was well-formed and received properly."
"paths./subscriptions/{subscriptionId}/providers/Microsoft.ContainerRegistry/registries.get.responses.200.schema.$ref" = "#/definitions/RegistryListResult"
"paths./subscriptions/{subscriptionId}/providers/Microsoft.ContainerRegistry/registries.get.tags.length" = 1
"paths./subscriptions/{subscriptionId}/providers/Microsoft.ContainerRegistry/registries.get.tags[0]" = "Registries"
"paths./subscriptions/{subscriptionId}/providers/Microsoft.ContainerRegistry/registries.get.x-ms-pageable.nextLinkName" = "nextLink"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries.get.description" = "Lists all the available container registries under the specified resource group."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries.get.operationId" = "Registries_ListByResourceGroup"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries.get.parameters.length" = 3
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries.get.parameters[0].$ref" = "#/parameters/ApiVersionParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries.get.parameters[1].$ref" = "#/parameters/SubscriptionIdParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries.get.parameters[2].$ref" = "#/parameters/ResourceGroupParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries.get.responses.200.description" = "The request was successful; the request was well-formed and received properly."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries.get.responses.200.schema.$ref" = "#/definitions/RegistryListResult"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries.get.tags.length" = 1
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries.get.tags[0]" = "Registries"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries.get.x-ms-pageable.nextLinkName" = "nextLink"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}.delete.description" = "Deletes a container registry."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}.delete.operationId" = "Registries_Delete"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}.delete.parameters.length" = 4
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}.delete.parameters[0].$ref" = "#/parameters/ApiVersionParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}.delete.parameters[1].$ref" = "#/parameters/SubscriptionIdParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}.delete.parameters[2].$ref" = "#/parameters/ResourceGroupParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}.delete.parameters[3].$ref" = "#/parameters/RegistryNameParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}.delete.responses.200.description" = "The request was successful; the request was well-formed and received properly."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}.delete.responses.204.description" = "The container registry does not exist in the subscription."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}.delete.tags.length" = 1
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}.delete.tags[0]" = "Registries"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}.get.description" = "Gets the properties of the specified container registry."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}.get.operationId" = "Registries_GetProperties"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}.get.parameters.length" = 4
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}.get.parameters[0].$ref" = "#/parameters/ApiVersionParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}.get.parameters[1].$ref" = "#/parameters/SubscriptionIdParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}.get.parameters[2].$ref" = "#/parameters/ResourceGroupParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}.get.parameters[3].$ref" = "#/parameters/RegistryNameParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}.get.responses.200.description" = "The request was successful; the request was well-formed and received properly."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}.get.responses.200.schema.$ref" = "#/definitions/Registry"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}.get.tags.length" = 1
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}.get.tags[0]" = "Registries"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}.patch.description" = "Updates a container registry with the specified parameters."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}.patch.operationId" = "Registries_Update"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}.patch.parameters.length" = 5
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}.patch.parameters[0].$ref" = "#/parameters/ApiVersionParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}.patch.parameters[1].$ref" = "#/parameters/SubscriptionIdParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}.patch.parameters[2].$ref" = "#/parameters/ResourceGroupParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}.patch.parameters[3].$ref" = "#/parameters/RegistryNameParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}.patch.parameters[4].description" = "The parameters for updating a container registry."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}.patch.parameters[4].in" = "body"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}.patch.parameters[4].name" = "registryUpdateParameters"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}.patch.parameters[4].required" = true
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}.patch.parameters[4].schema.$ref" = "#/definitions/RegistryUpdateParameters"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}.patch.responses.200.description" = "The request was successful; the request was well-formed and received properly."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}.patch.responses.200.schema.$ref" = "#/definitions/Registry"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}.patch.tags.length" = 1
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}.patch.tags[0]" = "Registries"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}.put.description" = "Creates or updates a container registry with the specified parameters."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}.put.operationId" = "Registries_CreateOrUpdate"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}.put.parameters.length" = 5
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}.put.parameters[0].$ref" = "#/parameters/ApiVersionParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}.put.parameters[1].$ref" = "#/parameters/SubscriptionIdParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}.put.parameters[2].$ref" = "#/parameters/ResourceGroupParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}.put.parameters[3].$ref" = "#/parameters/RegistryNameParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}.put.parameters[4].description" = "The parameters for creating or updating a container registry."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}.put.parameters[4].in" = "body"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}.put.parameters[4].name" = "registry"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}.put.parameters[4].required" = true
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}.put.parameters[4].schema.$ref" = "#/definitions/Registry"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}.put.responses.200.description" = "The request was successful; the request was well-formed and received properly."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}.put.responses.200.schema.$ref" = "#/definitions/Registry"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}.put.responses.202.description" = "The request was successful; the operation will complete asynchronously."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}.put.tags.length" = 1
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}.put.tags[0]" = "Registries"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}/getCredentials.post.description" = "Gets the administrator login credentials for the specified container registry."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}/getCredentials.post.operationId" = "Registries_GetCredentials"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}/getCredentials.post.parameters.length" = 4
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}/getCredentials.post.parameters[0].$ref" = "#/parameters/ApiVersionParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}/getCredentials.post.parameters[1].$ref" = "#/parameters/SubscriptionIdParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}/getCredentials.post.parameters[2].$ref" = "#/parameters/ResourceGroupParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}/getCredentials.post.parameters[3].$ref" = "#/parameters/RegistryNameParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}/getCredentials.post.responses.200.description" = "The request was successful; the request was well-formed and received properly."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}/getCredentials.post.responses.200.schema.$ref" = "#/definitions/RegistryCredentials"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}/getCredentials.post.tags.length" = 1
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}/getCredentials.post.tags[0]" = "Registries"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}/regenerateCredentials.post.description" = "Regenerates the administrator login credentials for the specified container registry."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}/regenerateCredentials.post.operationId" = "Registries_RegenerateCredentials"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}/regenerateCredentials.post.parameters.length" = 4
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}/regenerateCredentials.post.parameters[0].$ref" = "#/parameters/ApiVersionParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}/regenerateCredentials.post.parameters[1].$ref" = "#/parameters/SubscriptionIdParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}/regenerateCredentials.post.parameters[2].$ref" = "#/parameters/ResourceGroupParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}/regenerateCredentials.post.parameters[3].$ref" = "#/parameters/RegistryNameParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}/regenerateCredentials.post.responses.200.description" = "The request was successful; the request was well-formed and received properly."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}/regenerateCredentials.post.responses.200.schema.$ref" = "#/definitions/RegistryCredentials"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}/regenerateCredentials.post.tags.length" = 1
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}/regenerateCredentials.post.tags[0]" = "Registries"
"produces.length" = 1
"produces[0]" = "application/json"
"schemes.length" = 1
"schemes[0]" = "https"
swagger = "2.0"
