"consumes.length" = 1
"consumes[0]" = "application/json"
"definitions.AccessInformationContract.description" = "Tenant access information contract of the API Management service."
"definitions.AccessInformationContract.properties.enabled.description" = "Tenant access information of the API Management service."
"definitions.AccessInformationContract.properties.enabled.type" = "boolean"
"definitions.AccessInformationContract.properties.id.description" = "Identifier."
"definitions.AccessInformationContract.properties.id.type" = "string"
"definitions.AccessInformationContract.properties.primaryKey.description" = "Primary access key."
"definitions.AccessInformationContract.properties.primaryKey.type" = "string"
"definitions.AccessInformationContract.properties.secondaryKey.description" = "Secondary access key."
"definitions.AccessInformationContract.properties.secondaryKey.type" = "string"
"definitions.AccessInformationUpdateParameters.description" = "Tenant access information update parameters of the API Management service."
"definitions.AccessInformationUpdateParameters.properties.enabled.description" = "Tenant access information of the API Management service."
"definitions.AccessInformationUpdateParameters.properties.enabled.type" = "boolean"
"definitions.AccessInformationUpdateParameters.required.length" = 1
"definitions.AccessInformationUpdateParameters.required[0]" = "enabled"
"definitions.ApiCollection.description" = "Paged Api list representation."
"definitions.ApiCollection.properties.count.description" = "Total records count number."
"definitions.ApiCollection.properties.count.format" = "int64"
"definitions.ApiCollection.properties.count.type" = "integer"
"definitions.ApiCollection.properties.nextLink.description" = "Next page link if any."
"definitions.ApiCollection.properties.nextLink.type" = "string"
"definitions.ApiCollection.properties.value.description" = "Page values."
"definitions.ApiCollection.properties.value.items.$ref" = "#/definitions/ApiContract"
"definitions.ApiCollection.properties.value.type" = "array"
"definitions.ApiContract.description" = "API details."
"definitions.ApiContract.properties.authenticationSettings.$ref" = "#/definitions/AuthenticationSettingsContract"
"definitions.ApiContract.properties.authenticationSettings.description" = "Collection of authentication settings included into this API."
"definitions.ApiContract.properties.description.description" = "Description of the API. May include HTML formatting tags."
"definitions.ApiContract.properties.description.type" = "string"
"definitions.ApiContract.properties.id.description" = "API identifier path: /apis/{apiId}"
"definitions.ApiContract.properties.id.readOnly" = true
"definitions.ApiContract.properties.id.type" = "string"
"definitions.ApiContract.properties.name.description" = "API name."
"definitions.ApiContract.properties.name.maxLength" = 300.0
"definitions.ApiContract.properties.name.minLength" = 1.0
"definitions.ApiContract.properties.name.type" = "string"
"definitions.ApiContract.properties.path.description" = "Relative URL uniquely identifying this API and all of its resource paths within the API Management service instance. It is appended to the API endpoint base URL specified during the service instance creation to form a public URL for this API."
"definitions.ApiContract.properties.path.maxLength" = 400.0
"definitions.ApiContract.properties.path.minLength" = 0.0
"definitions.ApiContract.properties.path.type" = "string"
"definitions.ApiContract.properties.protocols.description" = "Describes on which protocols the operations in this API can be invoked."
"definitions.ApiContract.properties.protocols.items.enum.length" = 2
"definitions.ApiContract.properties.protocols.items.enum[0]" = "Http"
"definitions.ApiContract.properties.protocols.items.enum[1]" = "Https"
"definitions.ApiContract.properties.protocols.items.type" = "string"
"definitions.ApiContract.properties.protocols.items.x-ms-enum.modelAsString" = false
"definitions.ApiContract.properties.protocols.items.x-ms-enum.name" = "ApiProtocolContract"
"definitions.ApiContract.properties.protocols.type" = "array"
"definitions.ApiContract.properties.serviceUrl.description" = "Absolute URL of the backend service implementing this API."
"definitions.ApiContract.properties.serviceUrl.maxLength" = 2000.0
"definitions.ApiContract.properties.serviceUrl.minLength" = 1.0
"definitions.ApiContract.properties.serviceUrl.type" = "string"
"definitions.ApiContract.properties.subscriptionKeyParameterNames.$ref" = "#/definitions/SubscriptionKeyParameterNamesContract"
"definitions.ApiContract.properties.subscriptionKeyParameterNames.description" = "Protocols over which API is made available."
"definitions.ApiContract.properties.type.description" = "Type of API."
"definitions.ApiContract.properties.type.enum.length" = 2
"definitions.ApiContract.properties.type.enum[0]" = "Http"
"definitions.ApiContract.properties.type.enum[1]" = "Soap"
"definitions.ApiContract.properties.type.type" = "string"
"definitions.ApiContract.properties.type.x-ms-enum.modelAsString" = false
"definitions.ApiContract.properties.type.x-ms-enum.name" = "ApiTypeContract"
"definitions.ApiContract.required.length" = 4
"definitions.ApiContract.required[0]" = "name"
"definitions.ApiContract.required[1]" = "serviceUrl"
"definitions.ApiContract.required[2]" = "path"
"definitions.ApiContract.required[3]" = "protocols"
"definitions.ApiExportResult.description" = "The response model for the export API output operation."
"definitions.ApiExportResult.properties.content.description" = "Response content bytes."
"definitions.ApiExportResult.properties.content.format" = "byte"
"definitions.ApiExportResult.properties.content.type" = "string"
"definitions.ApiExportResult.properties.requestId.type" = "string"
"definitions.ApiExportResult.properties.statusCode.enum.length" = 6
"definitions.ApiExportResult.properties.statusCode.enum[0]" = "Continue"
"definitions.ApiExportResult.properties.statusCode.enum[1]" = "OK"
"definitions.ApiExportResult.properties.statusCode.enum[2]" = "Created"
"definitions.ApiExportResult.properties.statusCode.enum[3]" = "Accepted"
"definitions.ApiExportResult.properties.statusCode.enum[4]" = "NotFound"
"definitions.ApiExportResult.properties.statusCode.enum[5]" = "Conflict"
"definitions.ApiExportResult.properties.statusCode.type" = "string"
"definitions.ApiExportResult.properties.statusCode.x-ms-enum.modelAsString" = false
"definitions.ApiExportResult.properties.statusCode.x-ms-enum.name" = "HttpStatusCode"
"definitions.AuthenticationSettingsContract.description" = "API Authentication Settings."
"definitions.AuthenticationSettingsContract.properties.oAuth2.$ref" = "#/definitions/OAuth2AuthenticationSettingsContract"
"definitions.AuthorizationServerCollection.description" = "Paged OAuth2 Authorization Servers list representation."
"definitions.AuthorizationServerCollection.properties.count.description" = "Total records count number."
"definitions.AuthorizationServerCollection.properties.count.format" = "int64"
"definitions.AuthorizationServerCollection.properties.count.type" = "integer"
"definitions.AuthorizationServerCollection.properties.nextLink.description" = "Next page link if any."
"definitions.AuthorizationServerCollection.properties.nextLink.type" = "string"
"definitions.AuthorizationServerCollection.properties.value.description" = "Page values."
"definitions.AuthorizationServerCollection.properties.value.items.$ref" = "#/definitions/OAuth2AuthorizationServerContract"
"definitions.AuthorizationServerCollection.properties.value.type" = "array"
"definitions.BackendCollection.description" = "Paged Backend list representation."
"definitions.BackendCollection.properties.count.description" = "Total records count number."
"definitions.BackendCollection.properties.count.format" = "int64"
"definitions.BackendCollection.properties.count.type" = "integer"
"definitions.BackendCollection.properties.nextLink.description" = "Next page link if any."
"definitions.BackendCollection.properties.nextLink.type" = "string"
"definitions.BackendCollection.properties.value.description" = "Backend values."
"definitions.BackendCollection.properties.value.items.$ref" = "#/definitions/BackendResponse"
"definitions.BackendCollection.properties.value.type" = "array"
"definitions.BackendContract.description" = "Parameters supplied to the Create Backend operation."
"definitions.BackendContract.properties.host.description" = "Host attribute of the backend. Host is a pure hostname without a port or suffix, for example backend.contoso.com. Must not be empty."
"definitions.BackendContract.properties.host.maxLength" = 255.0
"definitions.BackendContract.properties.host.minLength" = 1.0
"definitions.BackendContract.properties.host.type" = "string"
"definitions.BackendContract.properties.skipCertificateChainValidation.default" = false
"definitions.BackendContract.properties.skipCertificateChainValidation.description" = "Flag indicating whether SSL certificate chain validation should be skipped when using self-signed certificates for this backend host."
"definitions.BackendContract.properties.skipCertificateChainValidation.type" = "boolean"
"definitions.BackendContract.required.length" = 1
"definitions.BackendContract.required[0]" = "host"
"definitions.BackendResponse.allOf.length" = 1
"definitions.BackendResponse.allOf[0].$ref" = "#/definitions/BackendContract"
"definitions.BackendResponse.description" = "The Backend entity in API Management represents a backend service that is configured to skip certification chain validation when using a self-signed certificate to test mutual certificate authentication."
"definitions.BackendResponse.properties.id.description" = "Uniquely identifies the backend within the current API Management service instance. The value is a valid relative URL in the format of /backends/{backendId} where {backendId} is a backend identifier."
"definitions.BackendResponse.properties.id.readOnly" = true
"definitions.BackendResponse.properties.id.type" = "string"
"definitions.BackendUpdateParameters.description" = "Parameters supplied to the Update Backend operation."
"definitions.BackendUpdateParameters.properties.host.description" = "Host attribute of the backend. Host is a pure hostname without a port or suffix, for example backend.contoso.com. Must not be empty."
"definitions.BackendUpdateParameters.properties.host.maxLength" = 255.0
"definitions.BackendUpdateParameters.properties.host.minLength" = 1.0
"definitions.BackendUpdateParameters.properties.host.type" = "string"
"definitions.BackendUpdateParameters.properties.skipCertificateChainValidation.default" = false
"definitions.BackendUpdateParameters.properties.skipCertificateChainValidation.description" = "Flag indicating whether SSL certificate chain validation should be skipped when using self-signed certificates for this backend host."
"definitions.BackendUpdateParameters.properties.skipCertificateChainValidation.type" = "boolean"
"definitions.CertificateCollection.description" = "Paged Certificates list representation."
"definitions.CertificateCollection.properties.count.description" = "Total records count number."
"definitions.CertificateCollection.properties.count.format" = "int64"
"definitions.CertificateCollection.properties.count.type" = "integer"
"definitions.CertificateCollection.properties.nextLink.description" = "Next page link if any."
"definitions.CertificateCollection.properties.nextLink.type" = "string"
"definitions.CertificateCollection.properties.value.description" = "Page values."
"definitions.CertificateCollection.properties.value.items.$ref" = "#/definitions/CertificateContract"
"definitions.CertificateCollection.properties.value.type" = "array"
"definitions.CertificateContract.description" = "Certificate details."
"definitions.CertificateContract.properties.expirationDate.description" = "Expiration date of the certificate. The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard.\n"
"definitions.CertificateContract.properties.expirationDate.format" = "date-time"
"definitions.CertificateContract.properties.expirationDate.type" = "string"
"definitions.CertificateContract.properties.id.description" = "Certificate identifier path: /certificates/{certificateId}"
"definitions.CertificateContract.properties.id.readOnly" = true
"definitions.CertificateContract.properties.id.type" = "string"
"definitions.CertificateContract.properties.subject.description" = "Subject attribute of the certificate."
"definitions.CertificateContract.properties.subject.type" = "string"
"definitions.CertificateContract.properties.thumbprint.description" = "Thumbprint of the certificate."
"definitions.CertificateContract.properties.thumbprint.type" = "string"
"definitions.CertificateContract.required.length" = 3
"definitions.CertificateContract.required[0]" = "subject"
"definitions.CertificateContract.required[1]" = "thumbprint"
"definitions.CertificateContract.required[2]" = "expirationDate"
"definitions.CertificateCreateOrUpdateParameters.description" = "Parameters supplied to the CreateOrUpdate certificate operation."
"definitions.CertificateCreateOrUpdateParameters.properties.data.description" = "Base 64 encoded certificate using the application/x-pkcs12 representation."
"definitions.CertificateCreateOrUpdateParameters.properties.data.type" = "string"
"definitions.CertificateCreateOrUpdateParameters.properties.password.description" = "Password for the Certificate"
"definitions.CertificateCreateOrUpdateParameters.properties.password.type" = "string"
"definitions.CertificateCreateOrUpdateParameters.required.length" = 2
"definitions.CertificateCreateOrUpdateParameters.required[0]" = "data"
"definitions.CertificateCreateOrUpdateParameters.required[1]" = "password"
"definitions.DeployConfigurationParameters.description" = "Parameters supplied to the Deploy Configuration operation."
"definitions.DeployConfigurationParameters.properties.branch.description" = "The name of the Git branch from which the configuration is to be deployed to the configuration database."
"definitions.DeployConfigurationParameters.properties.branch.type" = "string"
"definitions.DeployConfigurationParameters.properties.force.description" = "The value enforcing deleting subscriptions to products that are deleted in this update."
"definitions.DeployConfigurationParameters.properties.force.type" = "boolean"
"definitions.DeployConfigurationParameters.required.length" = 1
"definitions.DeployConfigurationParameters.required[0]" = "branch"
"definitions.ErrorBodyContract.description" = "Error Body contract."
"definitions.ErrorBodyContract.properties.code.description" = "Service-defined error code. This code serves as a sub-status for the HTTP error code specified in the response."
"definitions.ErrorBodyContract.properties.code.type" = "string"
"definitions.ErrorBodyContract.properties.details.description" = "The list of invalid fields send in request, in case of validation error."
"definitions.ErrorBodyContract.properties.details.items.$ref" = "#/definitions/ErrorFieldContract"
"definitions.ErrorBodyContract.properties.details.type" = "array"
"definitions.ErrorBodyContract.properties.message.description" = "Human-readable representation of the error."
"definitions.ErrorBodyContract.properties.message.type" = "string"
"definitions.ErrorFieldContract.description" = "Error Field contract."
"definitions.ErrorFieldContract.properties.code.description" = "Property level error code."
"definitions.ErrorFieldContract.properties.code.type" = "string"
"definitions.ErrorFieldContract.properties.message.description" = "Human-readable representation of property-level error."
"definitions.ErrorFieldContract.properties.message.type" = "string"
"definitions.ErrorFieldContract.properties.target.description" = "Property name."
"definitions.ErrorFieldContract.properties.target.type" = "string"
"definitions.GenerateSsoUrlResult.description" = "Generate SSO Url operations response details."
"definitions.GenerateSsoUrlResult.properties.value.description" = "Redirect Url containing the SSO URL value."
"definitions.GenerateSsoUrlResult.properties.value.type" = "string"
"definitions.GroupCollection.description" = "Paged Group list representation."
"definitions.GroupCollection.properties.count.description" = "Total records count number."
"definitions.GroupCollection.properties.count.format" = "int64"
"definitions.GroupCollection.properties.count.type" = "integer"
"definitions.GroupCollection.properties.nextLink.description" = "Next page link if any."
"definitions.GroupCollection.properties.nextLink.type" = "string"
"definitions.GroupCollection.properties.value.description" = "Page values."
"definitions.GroupCollection.properties.value.items.$ref" = "#/definitions/GroupContract"
"definitions.GroupCollection.properties.value.type" = "array"
"definitions.GroupContract.description" = "Developer group."
"definitions.GroupContract.properties.builtIn.description" = "true if the group is one of the three system groups (Administrators, Developers, or Guests); otherwise false."
"definitions.GroupContract.properties.builtIn.readOnly" = true
"definitions.GroupContract.properties.builtIn.type" = "boolean"
"definitions.GroupContract.properties.description.description" = "Group description. Can contain HTML formatting tags."
"definitions.GroupContract.properties.description.maxLength" = 1000.0
"definitions.GroupContract.properties.description.type" = "string"
"definitions.GroupContract.properties.externalId.description" = "For external groups, this property contains the id of the group from the external identity provider, e.g. Azure Active Directory; otherwise the value is null."
"definitions.GroupContract.properties.externalId.readOnly" = true
"definitions.GroupContract.properties.externalId.type" = "string"
"definitions.GroupContract.properties.id.description" = "Uniquely identifies the group within the current API Management service instance. The value is a valid relative URL in the format of /groups/{groupid} where {groupid} is a group identifier."
"definitions.GroupContract.properties.id.readOnly" = true
"definitions.GroupContract.properties.id.type" = "string"
"definitions.GroupContract.properties.name.description" = "Group name."
"definitions.GroupContract.properties.name.maxLength" = 300.0
"definitions.GroupContract.properties.name.minLength" = 1.0
"definitions.GroupContract.properties.name.type" = "string"
"definitions.GroupContract.properties.type.description" = "Group type."
"definitions.GroupContract.properties.type.enum.length" = 3
"definitions.GroupContract.properties.type.enum[0]" = "Custom"
"definitions.GroupContract.properties.type.enum[1]" = "System"
"definitions.GroupContract.properties.type.enum[2]" = "External"
"definitions.GroupContract.properties.type.readOnly" = true
"definitions.GroupContract.properties.type.type" = "string"
"definitions.GroupContract.properties.type.x-ms-enum.modelAsString" = false
"definitions.GroupContract.properties.type.x-ms-enum.name" = "GroupTypeContract"
"definitions.GroupContract.required.length" = 1
"definitions.GroupContract.required[0]" = "name"
"definitions.GroupCreateParameters.description" = "Parameters supplied to the Create Group operation."
"definitions.GroupCreateParameters.properties.description.description" = "Group description."
"definitions.GroupCreateParameters.properties.description.type" = "string"
"definitions.GroupCreateParameters.properties.externalId.description" = "Identifier for an external group."
"definitions.GroupCreateParameters.properties.externalId.type" = "string"
"definitions.GroupCreateParameters.properties.name.description" = "Group name."
"definitions.GroupCreateParameters.properties.name.maxLength" = 300.0
"definitions.GroupCreateParameters.properties.name.minLength" = 1.0
"definitions.GroupCreateParameters.properties.name.type" = "string"
"definitions.GroupCreateParameters.properties.type.description" = "Group type."
"definitions.GroupCreateParameters.properties.type.enum.length" = 3
"definitions.GroupCreateParameters.properties.type.enum[0]" = "Custom"
"definitions.GroupCreateParameters.properties.type.enum[1]" = "System"
"definitions.GroupCreateParameters.properties.type.enum[2]" = "External"
"definitions.GroupCreateParameters.properties.type.type" = "string"
"definitions.GroupCreateParameters.properties.type.x-ms-enum.modelAsString" = false
"definitions.GroupCreateParameters.properties.type.x-ms-enum.name" = "GroupTypeContract"
"definitions.GroupCreateParameters.required.length" = 1
"definitions.GroupCreateParameters.required[0]" = "name"
"definitions.GroupUpdateParameters.description" = "Parameters supplied to the Update Group operation."
"definitions.GroupUpdateParameters.properties.description.description" = "Group description."
"definitions.GroupUpdateParameters.properties.description.type" = "string"
"definitions.GroupUpdateParameters.properties.externalId.description" = "Identifier for an external group."
"definitions.GroupUpdateParameters.properties.externalId.type" = "string"
"definitions.GroupUpdateParameters.properties.name.description" = "Group name."
"definitions.GroupUpdateParameters.properties.name.maxLength" = 300.0
"definitions.GroupUpdateParameters.properties.name.minLength" = 1.0
"definitions.GroupUpdateParameters.properties.name.type" = "string"
"definitions.GroupUpdateParameters.properties.type.description" = "Group type."
"definitions.GroupUpdateParameters.properties.type.enum.length" = 3
"definitions.GroupUpdateParameters.properties.type.enum[0]" = "Custom"
"definitions.GroupUpdateParameters.properties.type.enum[1]" = "System"
"definitions.GroupUpdateParameters.properties.type.enum[2]" = "External"
"definitions.GroupUpdateParameters.properties.type.type" = "string"
"definitions.GroupUpdateParameters.properties.type.x-ms-enum.modelAsString" = false
"definitions.GroupUpdateParameters.properties.type.x-ms-enum.name" = "GroupTypeContract"
"definitions.IdentityProviderContract.description" = "The external Identity Providers like Facebook, Google, Microsoft, Twitter or Azure Active Directory which can be used to enable access to the API Management service developer portal for all users."
"definitions.IdentityProviderContract.externalDocs.url" = "https://docs.microsoft.com/en-us/azure/api-management/api-management-howto-aad#how-to-authorize-developer-accounts-using-azure-active-directory"
"definitions.IdentityProviderContract.properties.allowedTenants.description" = "List of Allowed Tenants when configuring Azure Active Directory login."
"definitions.IdentityProviderContract.properties.allowedTenants.items.type" = "string"
"definitions.IdentityProviderContract.properties.allowedTenants.maxItems" = 32.0
"definitions.IdentityProviderContract.properties.allowedTenants.type" = "array"
"definitions.IdentityProviderContract.properties.clientId.description" = "Client Id of the Application in the external Identity Provider. It is App ID for Facebook login, Client ID for Google login, App ID for Microsoft."
"definitions.IdentityProviderContract.properties.clientId.minLength" = 1.0
"definitions.IdentityProviderContract.properties.clientId.type" = "string"
"definitions.IdentityProviderContract.properties.clientSecret.description" = "Client secret of the Application in external Identity Provider, used to authenticate login request. For example, it is App Secret for Facebook login, API Key for Google login, Public Key for Microsoft."
"definitions.IdentityProviderContract.properties.clientSecret.minLength" = 1.0
"definitions.IdentityProviderContract.properties.clientSecret.type" = "string"
"definitions.IdentityProviderContract.properties.type.description" = "Identity Provider Type identifier."
"definitions.IdentityProviderContract.properties.type.enum.length" = 5
"definitions.IdentityProviderContract.properties.type.enum[0]" = "facebook"
"definitions.IdentityProviderContract.properties.type.enum[1]" = "google"
"definitions.IdentityProviderContract.properties.type.enum[2]" = "microsoft"
"definitions.IdentityProviderContract.properties.type.enum[3]" = "twitter"
"definitions.IdentityProviderContract.properties.type.enum[4]" = "aad"
"definitions.IdentityProviderContract.properties.type.type" = "string"
"definitions.IdentityProviderContract.properties.type.x-ms-enum.modelAsString" = true
"definitions.IdentityProviderContract.properties.type.x-ms-enum.name" = "IdentityProviderNameType"
"definitions.IdentityProviderContract.required.length" = 2
"definitions.IdentityProviderContract.required[0]" = "clientId"
"definitions.IdentityProviderContract.required[1]" = "clientSecret"
"definitions.IdentityProviderList.description" = "List of all the Identity Providers configured on the service instance."
"definitions.IdentityProviderList.properties.value.description" = "Identity Provider configuration values."
"definitions.IdentityProviderList.properties.value.items.$ref" = "#/definitions/IdentityProviderContract"
"definitions.IdentityProviderList.properties.value.type" = "array"
"definitions.IdentityProviderUpdateParameters.description" = "Parameters supplied to the Update Identity Provider operation."
"definitions.IdentityProviderUpdateParameters.properties.allowedTenants.description" = "List of Allowed Tenants when configuring Azure Active Directory login."
"definitions.IdentityProviderUpdateParameters.properties.allowedTenants.items.type" = "string"
"definitions.IdentityProviderUpdateParameters.properties.allowedTenants.maxItems" = 32.0
"definitions.IdentityProviderUpdateParameters.properties.allowedTenants.type" = "array"
"definitions.IdentityProviderUpdateParameters.properties.clientId.description" = "Client Id of the Application in the external Identity Provider. It is App ID for Facebook login, Client ID for Google login, App ID for Microsoft."
"definitions.IdentityProviderUpdateParameters.properties.clientId.minLength" = 1.0
"definitions.IdentityProviderUpdateParameters.properties.clientId.type" = "string"
"definitions.IdentityProviderUpdateParameters.properties.clientSecret.description" = "Client secret of the Application in external Identity Provider, used to authenticate login request. For example, it is App Secret for Facebook login, API Key for Google login, Public Key for Microsoft."
"definitions.IdentityProviderUpdateParameters.properties.clientSecret.minLength" = 1.0
"definitions.IdentityProviderUpdateParameters.properties.clientSecret.type" = "string"
"definitions.LoggerCollection.description" = "Paged Logger list representation."
"definitions.LoggerCollection.properties.count.description" = "Total records count number."
"definitions.LoggerCollection.properties.count.format" = "int64"
"definitions.LoggerCollection.properties.count.type" = "integer"
"definitions.LoggerCollection.properties.nextLink.description" = "Next page link if any."
"definitions.LoggerCollection.properties.nextLink.type" = "string"
"definitions.LoggerCollection.properties.value.description" = "Logger values."
"definitions.LoggerCollection.properties.value.items.$ref" = "#/definitions/LoggerResponse"
"definitions.LoggerCollection.properties.value.type" = "array"
"definitions.LoggerCreateParameters.description" = "Parameters supplied to the Create Logger operation."
"definitions.LoggerCreateParameters.properties.credentials.additionalProperties.type" = "string"
"definitions.LoggerCreateParameters.properties.credentials.description" = "The name and SendRule connection string of the event hub."
"definitions.LoggerCreateParameters.properties.credentials.example.connectionString" = "Endpoint=endpoint and key from Azure classic portal. This property in credentials is must."
"definitions.LoggerCreateParameters.properties.credentials.example.name" = "Event hub name. This is optional."
"definitions.LoggerCreateParameters.properties.credentials.type" = "object"
"definitions.LoggerCreateParameters.properties.description.description" = "Logger description."
"definitions.LoggerCreateParameters.properties.description.type" = "string"
"definitions.LoggerCreateParameters.properties.isBuffered.description" = "Whether records are buffered in the logger before publishing. Default is assumed to be true."
"definitions.LoggerCreateParameters.properties.isBuffered.type" = "boolean"
"definitions.LoggerCreateParameters.properties.type.description" = "Logger type."
"definitions.LoggerCreateParameters.properties.type.enum.length" = 1
"definitions.LoggerCreateParameters.properties.type.enum[0]" = "AzureEventHub"
"definitions.LoggerCreateParameters.properties.type.type" = "string"
"definitions.LoggerCreateParameters.properties.type.x-ms-enum.modelAsString" = false
"definitions.LoggerCreateParameters.properties.type.x-ms-enum.name" = "LoggerTypeContract"
"definitions.LoggerCreateParameters.required.length" = 2
"definitions.LoggerCreateParameters.required[0]" = "type"
"definitions.LoggerCreateParameters.required[1]" = "credentials"
"definitions.LoggerResponse.description" = "The Logger entity in API Management represents an event sink that you can use to log API Management events. Currently the Logger entity supports logging API Management events to Azure Event Hubs."
"definitions.LoggerResponse.properties.credentials.additionalProperties.type" = "string"
"definitions.LoggerResponse.properties.credentials.description" = "The name and SendRule connection string of the event hub."
"definitions.LoggerResponse.properties.credentials.example.connectionString" = "Endpoint=sb://contoso-ns.servicebus.windows.net/;SharedAccessKeyName=Sender;SharedAccessKey=..."
"definitions.LoggerResponse.properties.credentials.example.name" = "apim"
"definitions.LoggerResponse.properties.credentials.type" = "object"
"definitions.LoggerResponse.properties.description.description" = "Logger description."
"definitions.LoggerResponse.properties.description.maxLength" = 256.0
"definitions.LoggerResponse.properties.description.type" = "string"
"definitions.LoggerResponse.properties.id.description" = "Uniquely identifies the logger within the current API Management service instance. The value is a valid relative URL in the format of /loggers/{loggerId} where {loggerId} is a logger identifier."
"definitions.LoggerResponse.properties.id.readOnly" = true
"definitions.LoggerResponse.properties.id.type" = "string"
"definitions.LoggerResponse.properties.isBuffered.default" = true
"definitions.LoggerResponse.properties.isBuffered.description" = "Whether records are buffered in the logger before publishing. Default is assumed to be true."
"definitions.LoggerResponse.properties.isBuffered.type" = "boolean"
"definitions.LoggerResponse.properties.type.description" = "Logger type."
"definitions.LoggerResponse.properties.type.enum.length" = 1
"definitions.LoggerResponse.properties.type.enum[0]" = "AzureEventHub"
"definitions.LoggerResponse.properties.type.type" = "string"
"definitions.LoggerResponse.properties.type.x-ms-enum.modelAsString" = false
"definitions.LoggerResponse.properties.type.x-ms-enum.name" = "LoggerTypeContract"
"definitions.LoggerResponse.required.length" = 2
"definitions.LoggerResponse.required[0]" = "type"
"definitions.LoggerResponse.required[1]" = "credentials"
"definitions.LoggerUpdateParameters.description" = "Parameters supplied to the Update Logger operation."
"definitions.LoggerUpdateParameters.properties.credentials.additionalProperties.type" = "string"
"definitions.LoggerUpdateParameters.properties.credentials.description" = "Logger credentials."
"definitions.LoggerUpdateParameters.properties.credentials.type" = "object"
"definitions.LoggerUpdateParameters.properties.description.description" = "Logger description."
"definitions.LoggerUpdateParameters.properties.description.type" = "string"
"definitions.LoggerUpdateParameters.properties.isBuffered.description" = "whether records are buffered in the logger before publishing. Default is assumed to be true."
"definitions.LoggerUpdateParameters.properties.isBuffered.type" = "boolean"
"definitions.LoggerUpdateParameters.properties.type.description" = "Logger type."
"definitions.LoggerUpdateParameters.properties.type.enum.length" = 1
"definitions.LoggerUpdateParameters.properties.type.enum[0]" = "AzureEventHub"
"definitions.LoggerUpdateParameters.properties.type.type" = "string"
"definitions.LoggerUpdateParameters.properties.type.x-ms-enum.modelAsString" = false
"definitions.LoggerUpdateParameters.properties.type.x-ms-enum.name" = "LoggerTypeContract"
"definitions.LoggerUpdateParameters.required.length" = 1
"definitions.LoggerUpdateParameters.required[0]" = "type"
"definitions.OAuth2AuthenticationSettingsContract.description" = "API OAuth2 Authentication settings details."
"definitions.OAuth2AuthenticationSettingsContract.properties.authorizationServerId.description" = "OAuth authorization server identifier."
"definitions.OAuth2AuthenticationSettingsContract.properties.authorizationServerId.type" = "string"
"definitions.OAuth2AuthenticationSettingsContract.properties.scope.description" = "operations scope."
"definitions.OAuth2AuthenticationSettingsContract.properties.scope.type" = "string"
"definitions.OAuth2AuthorizationServerContract.description" = "External OAuth authorization server settings."
"definitions.OAuth2AuthorizationServerContract.example.authorizationEndpoint" = "https://login.microsoftonline.com/55abb68a-8ews-4565-8675-927722a8a005/oauth2/authorize?api-version=1.0"
"definitions.OAuth2AuthorizationServerContract.example.authorizationMethods.length" = 1
"definitions.OAuth2AuthorizationServerContract.example.authorizationMethods[0]" = "GET"
"definitions.OAuth2AuthorizationServerContract.example.bearerTokenSendingMethods.length" = 1
"definitions.OAuth2AuthorizationServerContract.example.bearerTokenSendingMethods[0]" = "authorizationHeader"
"definitions.OAuth2AuthorizationServerContract.example.clientAuthenticationMethod.length" = 1
"definitions.OAuth2AuthorizationServerContract.example.clientAuthenticationMethod[0]" = "Body"
"definitions.OAuth2AuthorizationServerContract.example.clientId" = "demo"
"definitions.OAuth2AuthorizationServerContract.example.clientRegistrationEndpoint" = "https://contoso.com/"
"definitions.OAuth2AuthorizationServerContract.example.clientSecret" = "demo"
"definitions.OAuth2AuthorizationServerContract.example.grantTypes.length" = 1
"definitions.OAuth2AuthorizationServerContract.example.grantTypes[0]" = "authorizationCode"
"definitions.OAuth2AuthorizationServerContract.example.id" = "/authorizationServers/554be23d0fce600674232c33"
"definitions.OAuth2AuthorizationServerContract.example.name" = "AAD OAuth A/S"
"definitions.OAuth2AuthorizationServerContract.example.supportState" = false
"definitions.OAuth2AuthorizationServerContract.example.tokenBodyParameters.length" = 0
"definitions.OAuth2AuthorizationServerContract.example.tokenEndpoint" = "https://login.microsoftonline.com/55abb68a-8ews-4565-8675-927722a8a005/oauth2/token?api-version=1.0"
"definitions.OAuth2AuthorizationServerContract.properties.authorizationEndpoint.description" = "OAuth authorization endpoint. See http://tools.ietf.org/html/rfc6749#section-3.2."
"definitions.OAuth2AuthorizationServerContract.properties.authorizationEndpoint.type" = "string"
"definitions.OAuth2AuthorizationServerContract.properties.authorizationMethods.description" = "HTTP verbs supported by the authorization endpoint. GET must be always present. POST is optional."
"definitions.OAuth2AuthorizationServerContract.properties.authorizationMethods.items.enum.length" = 8
"definitions.OAuth2AuthorizationServerContract.properties.authorizationMethods.items.enum[0]" = "HEAD"
"definitions.OAuth2AuthorizationServerContract.properties.authorizationMethods.items.enum[1]" = "OPTIONS"
"definitions.OAuth2AuthorizationServerContract.properties.authorizationMethods.items.enum[2]" = "TRACE"
"definitions.OAuth2AuthorizationServerContract.properties.authorizationMethods.items.enum[3]" = "GET"
"definitions.OAuth2AuthorizationServerContract.properties.authorizationMethods.items.enum[4]" = "POST"
"definitions.OAuth2AuthorizationServerContract.properties.authorizationMethods.items.enum[5]" = "PUT"
"definitions.OAuth2AuthorizationServerContract.properties.authorizationMethods.items.enum[6]" = "PATCH"
"definitions.OAuth2AuthorizationServerContract.properties.authorizationMethods.items.enum[7]" = "DELETE"
"definitions.OAuth2AuthorizationServerContract.properties.authorizationMethods.items.type" = "string"
"definitions.OAuth2AuthorizationServerContract.properties.authorizationMethods.items.x-ms-enum.modelAsString" = false
"definitions.OAuth2AuthorizationServerContract.properties.authorizationMethods.items.x-ms-enum.name" = "MethodContract"
"definitions.OAuth2AuthorizationServerContract.properties.authorizationMethods.type" = "array"
"definitions.OAuth2AuthorizationServerContract.properties.bearerTokenSendingMethods.description" = "Specifies the mechanism by which access token is passed to the API. "
"definitions.OAuth2AuthorizationServerContract.properties.bearerTokenSendingMethods.externalDocs.url" = "http://tools.ietf.org/html/rfc6749#section-4"
"definitions.OAuth2AuthorizationServerContract.properties.bearerTokenSendingMethods.items.enum.length" = 2
"definitions.OAuth2AuthorizationServerContract.properties.bearerTokenSendingMethods.items.enum[0]" = "authorizationHeader"
"definitions.OAuth2AuthorizationServerContract.properties.bearerTokenSendingMethods.items.enum[1]" = "query"
"definitions.OAuth2AuthorizationServerContract.properties.bearerTokenSendingMethods.items.type" = "string"
"definitions.OAuth2AuthorizationServerContract.properties.bearerTokenSendingMethods.items.x-ms-enum.modelAsString" = false
"definitions.OAuth2AuthorizationServerContract.properties.bearerTokenSendingMethods.items.x-ms-enum.name" = "BearerTokenSendingMethodsContract"
"definitions.OAuth2AuthorizationServerContract.properties.bearerTokenSendingMethods.type" = "array"
"definitions.OAuth2AuthorizationServerContract.properties.clientAuthenticationMethod.description" = "Method of authentication supported by the token endpoint of this authorization server. Possible values are Basic and/or Body. When Body is specified, client credentials and other parameters are passed within the request body in the application/x-www-form-urlencoded format."
"definitions.OAuth2AuthorizationServerContract.properties.clientAuthenticationMethod.items.enum.length" = 2
"definitions.OAuth2AuthorizationServerContract.properties.clientAuthenticationMethod.items.enum[0]" = "Basic"
"definitions.OAuth2AuthorizationServerContract.properties.clientAuthenticationMethod.items.enum[1]" = "Body"
"definitions.OAuth2AuthorizationServerContract.properties.clientAuthenticationMethod.items.type" = "string"
"definitions.OAuth2AuthorizationServerContract.properties.clientAuthenticationMethod.items.x-ms-enum.modelAsString" = false
"definitions.OAuth2AuthorizationServerContract.properties.clientAuthenticationMethod.items.x-ms-enum.name" = "ClientAuthenticationMethodContract"
"definitions.OAuth2AuthorizationServerContract.properties.clientAuthenticationMethod.type" = "array"
"definitions.OAuth2AuthorizationServerContract.properties.clientId.description" = "Client or app id registered with this authorization server."
"definitions.OAuth2AuthorizationServerContract.properties.clientId.type" = "string"
"definitions.OAuth2AuthorizationServerContract.properties.clientRegistrationEndpoint.description" = "Optional reference to a page where client or app registration for this authorization server is performed. Contains absolute URL to entity being referenced."
"definitions.OAuth2AuthorizationServerContract.properties.clientRegistrationEndpoint.type" = "string"
"definitions.OAuth2AuthorizationServerContract.properties.clientSecret.description" = "Client or app secret registered with this authorization server."
"definitions.OAuth2AuthorizationServerContract.properties.clientSecret.type" = "string"
"definitions.OAuth2AuthorizationServerContract.properties.defaultScope.description" = "Access token scope that is going to be requested by default. Can be overridden at the API level. Should be provided in the form of a string containing space-delimited values."
"definitions.OAuth2AuthorizationServerContract.properties.defaultScope.externalDocs.url" = "http://tools.ietf.org/html/rfc6749#section-3.3"
"definitions.OAuth2AuthorizationServerContract.properties.defaultScope.type" = "string"
"definitions.OAuth2AuthorizationServerContract.properties.description.description" = "Description of the authorization server. Can contain HTML formatting tags."
"definitions.OAuth2AuthorizationServerContract.properties.description.type" = "string"
"definitions.OAuth2AuthorizationServerContract.properties.grantTypes.description" = "Form of an authorization grant, which the client uses to request the access token."
"definitions.OAuth2AuthorizationServerContract.properties.grantTypes.externalDocs.url" = "http://tools.ietf.org/html/rfc6749#section-4"
"definitions.OAuth2AuthorizationServerContract.properties.grantTypes.items.enum.length" = 4
"definitions.OAuth2AuthorizationServerContract.properties.grantTypes.items.enum[0]" = "authorizationCode"
"definitions.OAuth2AuthorizationServerContract.properties.grantTypes.items.enum[1]" = "implicit"
"definitions.OAuth2AuthorizationServerContract.properties.grantTypes.items.enum[2]" = "resourceOwnerPassword"
"definitions.OAuth2AuthorizationServerContract.properties.grantTypes.items.enum[3]" = "clientCredentials"
"definitions.OAuth2AuthorizationServerContract.properties.grantTypes.items.type" = "string"
"definitions.OAuth2AuthorizationServerContract.properties.grantTypes.items.x-ms-enum.modelAsString" = false
"definitions.OAuth2AuthorizationServerContract.properties.grantTypes.items.x-ms-enum.name" = "GrantTypesContract"
"definitions.OAuth2AuthorizationServerContract.properties.grantTypes.type" = "array"
"definitions.OAuth2AuthorizationServerContract.properties.id.description" = "Uniquely identifies the authorization server within the current API Management service instance. The value is a valid relative URL in the format of /authorizationServers/{authsid} where {authsid} is an authorization server identifier."
"definitions.OAuth2AuthorizationServerContract.properties.id.readOnly" = true
"definitions.OAuth2AuthorizationServerContract.properties.id.type" = "string"
"definitions.OAuth2AuthorizationServerContract.properties.name.description" = "User-friendly authorization server name."
"definitions.OAuth2AuthorizationServerContract.properties.name.maxLength" = 50.0
"definitions.OAuth2AuthorizationServerContract.properties.name.minLength" = 1.0
"definitions.OAuth2AuthorizationServerContract.properties.name.type" = "string"
"definitions.OAuth2AuthorizationServerContract.properties.resourceOwnerPassword.description" = "Can be optionally specified when resource owner password grant type is supported by this authorization server. Default resource owner password."
"definitions.OAuth2AuthorizationServerContract.properties.resourceOwnerPassword.type" = "string"
"definitions.OAuth2AuthorizationServerContract.properties.resourceOwnerUsername.description" = "Can be optionally specified when resource owner password grant type is supported by this authorization server. Default resource owner username."
"definitions.OAuth2AuthorizationServerContract.properties.resourceOwnerUsername.type" = "string"
"definitions.OAuth2AuthorizationServerContract.properties.supportState.description" = "If true, authorization server will include state parameter from the authorization request to its response. Client may use state parameter to raise protocol security."
"definitions.OAuth2AuthorizationServerContract.properties.supportState.externalDocs.url" = "http://tools.ietf.org/html/rfc6749#section-3.1"
"definitions.OAuth2AuthorizationServerContract.properties.supportState.type" = "boolean"
"definitions.OAuth2AuthorizationServerContract.properties.tokenBodyParameters.description" = "Additional parameters required by the token endpoint of this authorization server represented as an array of JSON objects with name and value string properties, i.e. {\"name\" : \"name value\", \"value\": \"a value\"}."
"definitions.OAuth2AuthorizationServerContract.properties.tokenBodyParameters.items.$ref" = "#/definitions/TokenBodyParameterContract"
"definitions.OAuth2AuthorizationServerContract.properties.tokenBodyParameters.type" = "array"
"definitions.OAuth2AuthorizationServerContract.properties.tokenEndpoint.description" = "OAuth token endpoint. Contains absolute URI to entity being referenced."
"definitions.OAuth2AuthorizationServerContract.properties.tokenEndpoint.externalDocs.url" = "http://tools.ietf.org/html/rfc6749#section-3.1"
"definitions.OAuth2AuthorizationServerContract.properties.tokenEndpoint.type" = "string"
"definitions.OAuth2AuthorizationServerContract.required.length" = 5
"definitions.OAuth2AuthorizationServerContract.required[0]" = "name"
"definitions.OAuth2AuthorizationServerContract.required[1]" = "clientRegistrationEndpoint"
"definitions.OAuth2AuthorizationServerContract.required[2]" = "authorizationEndpoint"
"definitions.OAuth2AuthorizationServerContract.required[3]" = "clientId"
"definitions.OAuth2AuthorizationServerContract.required[4]" = "grantTypes"
"definitions.OAuth2AuthorizationServerUpdateContract.description" = "External OAuth authorization server Update settings contract."
"definitions.OAuth2AuthorizationServerUpdateContract.properties.authorizationEndpoint.description" = "OAuth authorization endpoint. See http://tools.ietf.org/html/rfc6749#section-3.2."
"definitions.OAuth2AuthorizationServerUpdateContract.properties.authorizationEndpoint.type" = "string"
"definitions.OAuth2AuthorizationServerUpdateContract.properties.authorizationMethods.description" = "HTTP verbs supported by the authorization endpoint. GET must be always present. POST is optional."
"definitions.OAuth2AuthorizationServerUpdateContract.properties.authorizationMethods.items.enum.length" = 8
"definitions.OAuth2AuthorizationServerUpdateContract.properties.authorizationMethods.items.enum[0]" = "HEAD"
"definitions.OAuth2AuthorizationServerUpdateContract.properties.authorizationMethods.items.enum[1]" = "OPTIONS"
"definitions.OAuth2AuthorizationServerUpdateContract.properties.authorizationMethods.items.enum[2]" = "TRACE"
"definitions.OAuth2AuthorizationServerUpdateContract.properties.authorizationMethods.items.enum[3]" = "GET"
"definitions.OAuth2AuthorizationServerUpdateContract.properties.authorizationMethods.items.enum[4]" = "POST"
"definitions.OAuth2AuthorizationServerUpdateContract.properties.authorizationMethods.items.enum[5]" = "PUT"
"definitions.OAuth2AuthorizationServerUpdateContract.properties.authorizationMethods.items.enum[6]" = "PATCH"
"definitions.OAuth2AuthorizationServerUpdateContract.properties.authorizationMethods.items.enum[7]" = "DELETE"
"definitions.OAuth2AuthorizationServerUpdateContract.properties.authorizationMethods.items.type" = "string"
"definitions.OAuth2AuthorizationServerUpdateContract.properties.authorizationMethods.items.x-ms-enum.modelAsString" = false
"definitions.OAuth2AuthorizationServerUpdateContract.properties.authorizationMethods.items.x-ms-enum.name" = "MethodContract"
"definitions.OAuth2AuthorizationServerUpdateContract.properties.authorizationMethods.type" = "array"
"definitions.OAuth2AuthorizationServerUpdateContract.properties.bearerTokenSendingMethods.description" = "Specifies the mechanism by which access token is passed to the API. "
"definitions.OAuth2AuthorizationServerUpdateContract.properties.bearerTokenSendingMethods.externalDocs.url" = "http://tools.ietf.org/html/rfc6749#section-4"
"definitions.OAuth2AuthorizationServerUpdateContract.properties.bearerTokenSendingMethods.items.enum.length" = 2
"definitions.OAuth2AuthorizationServerUpdateContract.properties.bearerTokenSendingMethods.items.enum[0]" = "authorizationHeader"
"definitions.OAuth2AuthorizationServerUpdateContract.properties.bearerTokenSendingMethods.items.enum[1]" = "query"
"definitions.OAuth2AuthorizationServerUpdateContract.properties.bearerTokenSendingMethods.items.type" = "string"
"definitions.OAuth2AuthorizationServerUpdateContract.properties.bearerTokenSendingMethods.items.x-ms-enum.modelAsString" = false
"definitions.OAuth2AuthorizationServerUpdateContract.properties.bearerTokenSendingMethods.items.x-ms-enum.name" = "BearerTokenSendingMethodsContract"
"definitions.OAuth2AuthorizationServerUpdateContract.properties.bearerTokenSendingMethods.type" = "array"
"definitions.OAuth2AuthorizationServerUpdateContract.properties.clientAuthenticationMethod.description" = "Method of authentication supported by the token endpoint of this authorization server. Possible values are Basic and/or Body. When Body is specified, client credentials and other parameters are passed within the request body in the application/x-www-form-urlencoded format."
"definitions.OAuth2AuthorizationServerUpdateContract.properties.clientAuthenticationMethod.items.enum.length" = 2
"definitions.OAuth2AuthorizationServerUpdateContract.properties.clientAuthenticationMethod.items.enum[0]" = "Basic"
"definitions.OAuth2AuthorizationServerUpdateContract.properties.clientAuthenticationMethod.items.enum[1]" = "Body"
"definitions.OAuth2AuthorizationServerUpdateContract.properties.clientAuthenticationMethod.items.type" = "string"
"definitions.OAuth2AuthorizationServerUpdateContract.properties.clientAuthenticationMethod.items.x-ms-enum.modelAsString" = false
"definitions.OAuth2AuthorizationServerUpdateContract.properties.clientAuthenticationMethod.items.x-ms-enum.name" = "ClientAuthenticationMethodContract"
"definitions.OAuth2AuthorizationServerUpdateContract.properties.clientAuthenticationMethod.type" = "array"
"definitions.OAuth2AuthorizationServerUpdateContract.properties.clientId.description" = "Client or app id registered with this authorization server."
"definitions.OAuth2AuthorizationServerUpdateContract.properties.clientId.type" = "string"
"definitions.OAuth2AuthorizationServerUpdateContract.properties.clientRegistrationEndpoint.description" = "Optional reference to a page where client or app registration for this authorization server is performed. Contains absolute URL to entity being referenced."
"definitions.OAuth2AuthorizationServerUpdateContract.properties.clientRegistrationEndpoint.type" = "string"
"definitions.OAuth2AuthorizationServerUpdateContract.properties.clientSecret.description" = "Client or app secret registered with this authorization server."
"definitions.OAuth2AuthorizationServerUpdateContract.properties.clientSecret.type" = "string"
"definitions.OAuth2AuthorizationServerUpdateContract.properties.defaultScope.description" = "Access token scope that is going to be requested by default. Can be overridden at the API level. Should be provided in the form of a string containing space-delimited values."
"definitions.OAuth2AuthorizationServerUpdateContract.properties.defaultScope.externalDocs.url" = "http://tools.ietf.org/html/rfc6749#section-3.3"
"definitions.OAuth2AuthorizationServerUpdateContract.properties.defaultScope.type" = "string"
"definitions.OAuth2AuthorizationServerUpdateContract.properties.description.description" = "Description of the authorization server. Can contain HTML formatting tags."
"definitions.OAuth2AuthorizationServerUpdateContract.properties.description.type" = "string"
"definitions.OAuth2AuthorizationServerUpdateContract.properties.grantTypes.description" = "Form of an authorization grant, which the client uses to request the access token."
"definitions.OAuth2AuthorizationServerUpdateContract.properties.grantTypes.externalDocs.url" = "http://tools.ietf.org/html/rfc6749#section-4"
"definitions.OAuth2AuthorizationServerUpdateContract.properties.grantTypes.items.enum.length" = 4
"definitions.OAuth2AuthorizationServerUpdateContract.properties.grantTypes.items.enum[0]" = "authorizationCode"
"definitions.OAuth2AuthorizationServerUpdateContract.properties.grantTypes.items.enum[1]" = "implicit"
"definitions.OAuth2AuthorizationServerUpdateContract.properties.grantTypes.items.enum[2]" = "resourceOwnerPassword"
"definitions.OAuth2AuthorizationServerUpdateContract.properties.grantTypes.items.enum[3]" = "clientCredentials"
"definitions.OAuth2AuthorizationServerUpdateContract.properties.grantTypes.items.type" = "string"
"definitions.OAuth2AuthorizationServerUpdateContract.properties.grantTypes.items.x-ms-enum.modelAsString" = false
"definitions.OAuth2AuthorizationServerUpdateContract.properties.grantTypes.items.x-ms-enum.name" = "GrantTypesContract"
"definitions.OAuth2AuthorizationServerUpdateContract.properties.grantTypes.type" = "array"
"definitions.OAuth2AuthorizationServerUpdateContract.properties.name.description" = "User-friendly authorization server name."
"definitions.OAuth2AuthorizationServerUpdateContract.properties.name.maxLength" = 50.0
"definitions.OAuth2AuthorizationServerUpdateContract.properties.name.minLength" = 1.0
"definitions.OAuth2AuthorizationServerUpdateContract.properties.name.type" = "string"
"definitions.OAuth2AuthorizationServerUpdateContract.properties.resourceOwnerPassword.description" = "Can be optionally specified when resource owner password grant type is supported by this authorization server. Default resource owner password."
"definitions.OAuth2AuthorizationServerUpdateContract.properties.resourceOwnerPassword.type" = "string"
"definitions.OAuth2AuthorizationServerUpdateContract.properties.resourceOwnerUsername.description" = "Can be optionally specified when resource owner password grant type is supported by this authorization server. Default resource owner username."
"definitions.OAuth2AuthorizationServerUpdateContract.properties.resourceOwnerUsername.type" = "string"
"definitions.OAuth2AuthorizationServerUpdateContract.properties.supportState.description" = "If true, authorization server will include state parameter from the authorization request to its response. Client may use state parameter to raise protocol security."
"definitions.OAuth2AuthorizationServerUpdateContract.properties.supportState.externalDocs.url" = "http://tools.ietf.org/html/rfc6749#section-3.1"
"definitions.OAuth2AuthorizationServerUpdateContract.properties.supportState.type" = "boolean"
"definitions.OAuth2AuthorizationServerUpdateContract.properties.tokenBodyParameters.description" = "Additional parameters required by the token endpoint of this authorization server represented as an array of JSON objects with name and value string properties, i.e. {\"name\" : \"name value\", \"value\": \"a value\"}."
"definitions.OAuth2AuthorizationServerUpdateContract.properties.tokenBodyParameters.items.$ref" = "#/definitions/TokenBodyParameterContract"
"definitions.OAuth2AuthorizationServerUpdateContract.properties.tokenBodyParameters.type" = "array"
"definitions.OAuth2AuthorizationServerUpdateContract.properties.tokenEndpoint.description" = "OAuth token endpoint. Contains absolute URI to entity being referenced."
"definitions.OAuth2AuthorizationServerUpdateContract.properties.tokenEndpoint.externalDocs.url" = "http://tools.ietf.org/html/rfc6749#section-3.1"
"definitions.OAuth2AuthorizationServerUpdateContract.properties.tokenEndpoint.type" = "string"
"definitions.OpenIdConnectProviderCollection.description" = "Paged OpenIdProviders list representation."
"definitions.OpenIdConnectProviderCollection.properties.count.description" = "Total records count number."
"definitions.OpenIdConnectProviderCollection.properties.count.format" = "int64"
"definitions.OpenIdConnectProviderCollection.properties.count.type" = "integer"
"definitions.OpenIdConnectProviderCollection.properties.nextLink.description" = "Next page link if any."
"definitions.OpenIdConnectProviderCollection.properties.nextLink.type" = "string"
"definitions.OpenIdConnectProviderCollection.properties.value.description" = "Page values."
"definitions.OpenIdConnectProviderCollection.properties.value.items.$ref" = "#/definitions/OpenidConnectProviderContract"
"definitions.OpenIdConnectProviderCollection.properties.value.type" = "array"
"definitions.OpenidConnectProviderContract.description" = "OpenID Connect Providers Contract."
"definitions.OpenidConnectProviderContract.properties.clientId.description" = "Client ID of developer console which is the client application."
"definitions.OpenidConnectProviderContract.properties.clientId.type" = "string"
"definitions.OpenidConnectProviderContract.properties.clientSecret.description" = "Client Secret of developer console which is the client application."
"definitions.OpenidConnectProviderContract.properties.clientSecret.type" = "string"
"definitions.OpenidConnectProviderContract.properties.description.description" = "User-friendly description of OpenID Connect Provider."
"definitions.OpenidConnectProviderContract.properties.description.type" = "string"
"definitions.OpenidConnectProviderContract.properties.id.description" = "OpenID Connect Provider identifier."
"definitions.OpenidConnectProviderContract.properties.id.type" = "string"
"definitions.OpenidConnectProviderContract.properties.metadataEndpoint.description" = "Metadata endpoint URI."
"definitions.OpenidConnectProviderContract.properties.metadataEndpoint.type" = "string"
"definitions.OpenidConnectProviderContract.properties.name.description" = "User-friendly OpenID Connect Provider name."
"definitions.OpenidConnectProviderContract.properties.name.maxLength" = 50.0
"definitions.OpenidConnectProviderContract.properties.name.type" = "string"
"definitions.OpenidConnectProviderContract.required.length" = 3
"definitions.OpenidConnectProviderContract.required[0]" = "name"
"definitions.OpenidConnectProviderContract.required[1]" = "metadataEndpoint"
"definitions.OpenidConnectProviderContract.required[2]" = "clientId"
"definitions.OpenidConnectProviderCreateContract.description" = "Parameters supplied to the Create OpenID Connect Provider operation."
"definitions.OpenidConnectProviderCreateContract.properties.clientId.description" = "Client ID of developer console which is the client application."
"definitions.OpenidConnectProviderCreateContract.properties.clientId.type" = "string"
"definitions.OpenidConnectProviderCreateContract.properties.clientSecret.description" = "Client Secret of developer console which is the client application."
"definitions.OpenidConnectProviderCreateContract.properties.clientSecret.type" = "string"
"definitions.OpenidConnectProviderCreateContract.properties.description.description" = "User-friendly description of OpenID Connect Provider."
"definitions.OpenidConnectProviderCreateContract.properties.description.type" = "string"
"definitions.OpenidConnectProviderCreateContract.properties.metadataEndpoint.description" = "Metadata endpoint URI."
"definitions.OpenidConnectProviderCreateContract.properties.metadataEndpoint.type" = "string"
"definitions.OpenidConnectProviderCreateContract.properties.name.description" = "User-friendly OpenID Connect Provider name."
"definitions.OpenidConnectProviderCreateContract.properties.name.maxLength" = 50.0
"definitions.OpenidConnectProviderCreateContract.properties.name.type" = "string"
"definitions.OpenidConnectProviderCreateContract.required.length" = 3
"definitions.OpenidConnectProviderCreateContract.required[0]" = "name"
"definitions.OpenidConnectProviderCreateContract.required[1]" = "metadataEndpoint"
"definitions.OpenidConnectProviderCreateContract.required[2]" = "clientId"
"definitions.OpenidConnectProviderUpdateContract.description" = "Parameters supplied to the Update OpenID Connect Provider operation."
"definitions.OpenidConnectProviderUpdateContract.properties.clientId.description" = "Client ID of developer console which is the client application."
"definitions.OpenidConnectProviderUpdateContract.properties.clientId.type" = "string"
"definitions.OpenidConnectProviderUpdateContract.properties.clientSecret.description" = "Client Secret of developer console which is the client application."
"definitions.OpenidConnectProviderUpdateContract.properties.clientSecret.type" = "string"
"definitions.OpenidConnectProviderUpdateContract.properties.description.description" = "User-friendly description of OpenID Connect Provider."
"definitions.OpenidConnectProviderUpdateContract.properties.description.type" = "string"
"definitions.OpenidConnectProviderUpdateContract.properties.metadataEndpoint.description" = "Metadata endpoint URI."
"definitions.OpenidConnectProviderUpdateContract.properties.metadataEndpoint.type" = "string"
"definitions.OpenidConnectProviderUpdateContract.properties.name.description" = "User-friendly OpenID Connect Provider name."
"definitions.OpenidConnectProviderUpdateContract.properties.name.maxLength" = 50.0
"definitions.OpenidConnectProviderUpdateContract.properties.name.type" = "string"
"definitions.OperationCollection.description" = "Paged Operation list representation."
"definitions.OperationCollection.properties.count.description" = "Total records count number."
"definitions.OperationCollection.properties.count.format" = "int64"
"definitions.OperationCollection.properties.count.type" = "integer"
"definitions.OperationCollection.properties.nextLink.description" = "Next page link if any."
"definitions.OperationCollection.properties.nextLink.type" = "string"
"definitions.OperationCollection.properties.value.description" = "Page values."
"definitions.OperationCollection.properties.value.items.$ref" = "#/definitions/OperationContract"
"definitions.OperationCollection.properties.value.type" = "array"
"definitions.OperationContract.description" = "Api Operation details."
"definitions.OperationContract.properties.description.description" = "Description of the operation. May include HTML formatting tags."
"definitions.OperationContract.properties.description.maxLength" = 1000.0
"definitions.OperationContract.properties.description.type" = "string"
"definitions.OperationContract.properties.id.description" = "Uniquely identifies the operation within the current API Management service instance. The value is a valid relative URL in the format of /apis/{aid}/operations/{id} where {aid} is an API identifier and {id} is an operation identifier."
"definitions.OperationContract.properties.id.readOnly" = true
"definitions.OperationContract.properties.id.type" = "string"
"definitions.OperationContract.properties.method.description" = "A Valid HTTP Operation Method. Typical Http Methods like GET, PUT, POST but not limited by only them."
"definitions.OperationContract.properties.method.externalDocs.description" = "As defined by RFC."
"definitions.OperationContract.properties.method.externalDocs.url" = "http://www.rfc-editor.org/rfc/rfc7230.txt"
"definitions.OperationContract.properties.method.type" = "string"
"definitions.OperationContract.properties.name.description" = "Operation Name."
"definitions.OperationContract.properties.name.maxLength" = 300.0
"definitions.OperationContract.properties.name.minLength" = 1.0
"definitions.OperationContract.properties.name.type" = "string"
"definitions.OperationContract.properties.request.$ref" = "#/definitions/RequestContract"
"definitions.OperationContract.properties.request.description" = "An entity containing request details."
"definitions.OperationContract.properties.responses.description" = "Array of Operation responses."
"definitions.OperationContract.properties.responses.items.$ref" = "#/definitions/ResultContract"
"definitions.OperationContract.properties.responses.type" = "array"
"definitions.OperationContract.properties.templateParameters.description" = "Collection of URL template parameters."
"definitions.OperationContract.properties.templateParameters.items.$ref" = "#/definitions/ParameterContract"
"definitions.OperationContract.properties.templateParameters.type" = "array"
"definitions.OperationContract.properties.urlTemplate.description" = "Relative URL template identifying the target resource for this operation. May include parameters. Example: /customers/{cid}/orders/{oid}/?date={date}"
"definitions.OperationContract.properties.urlTemplate.maxLength" = 1000.0
"definitions.OperationContract.properties.urlTemplate.minLength" = 1.0
"definitions.OperationContract.properties.urlTemplate.type" = "string"
"definitions.OperationContract.required.length" = 3
"definitions.OperationContract.required[0]" = "name"
"definitions.OperationContract.required[1]" = "method"
"definitions.OperationContract.required[2]" = "urlTemplate"
"definitions.OperationResultContract.description" = "Operation Result."
"definitions.OperationResultContract.properties.error.$ref" = "#/definitions/ErrorBodyContract"
"definitions.OperationResultContract.properties.id.description" = "Operation result identifier."
"definitions.OperationResultContract.properties.id.type" = "string"
"definitions.OperationResultContract.properties.resultInfo.description" = "Optional result info."
"definitions.OperationResultContract.properties.resultInfo.type" = "string"
"definitions.OperationResultContract.properties.started.description" = "Start time of an async operation. The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard.\n"
"definitions.OperationResultContract.properties.started.format" = "date-time"
"definitions.OperationResultContract.properties.started.type" = "string"
"definitions.OperationResultContract.properties.status.description" = "Status of an async operation."
"definitions.OperationResultContract.properties.status.enum.length" = 4
"definitions.OperationResultContract.properties.status.enum[0]" = "Started"
"definitions.OperationResultContract.properties.status.enum[1]" = "InProgress"
"definitions.OperationResultContract.properties.status.enum[2]" = "Succeeded"
"definitions.OperationResultContract.properties.status.enum[3]" = "Failed"
"definitions.OperationResultContract.properties.status.type" = "string"
"definitions.OperationResultContract.properties.status.x-ms-enum.modelAsString" = false
"definitions.OperationResultContract.properties.status.x-ms-enum.name" = "AsyncOperationState"
"definitions.OperationResultContract.properties.updated.description" = "Last update time of an async operation. The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard.\n"
"definitions.OperationResultContract.properties.updated.format" = "date-time"
"definitions.OperationResultContract.properties.updated.type" = "string"
"definitions.ParameterContract.description" = "Operation parameters details."
"definitions.ParameterContract.properties.defaultValue.description" = "Default parameter value."
"definitions.ParameterContract.properties.defaultValue.type" = "string"
"definitions.ParameterContract.properties.description.description" = "Parameter description."
"definitions.ParameterContract.properties.description.type" = "string"
"definitions.ParameterContract.properties.name.description" = "Parameter name."
"definitions.ParameterContract.properties.name.type" = "string"
"definitions.ParameterContract.properties.required.description" = "whether parameter is required or not."
"definitions.ParameterContract.properties.required.type" = "boolean"
"definitions.ParameterContract.properties.type.description" = "Parameter type."
"definitions.ParameterContract.properties.type.type" = "string"
"definitions.ParameterContract.properties.values.description" = "Parameter values."
"definitions.ParameterContract.properties.values.items.type" = "string"
"definitions.ParameterContract.properties.values.type" = "array"
"definitions.ParameterContract.required.length" = 2
"definitions.ParameterContract.required[0]" = "name"
"definitions.ParameterContract.required[1]" = "type"
"definitions.PatchParameters.description" = "Parameters supplied to the Patch operations."
"definitions.PatchParameters.properties.RawJson.description" = "json value."
"definitions.PatchParameters.properties.RawJson.type" = "object"
"definitions.PatchParameters.required.length" = 1
"definitions.PatchParameters.required[0]" = "RawJson"
"definitions.PolicySnippetContract.description" = "Policy snippet."
"definitions.PolicySnippetContract.properties.content.description" = "Snippet content."
"definitions.PolicySnippetContract.properties.content.readOnly" = true
"definitions.PolicySnippetContract.properties.content.type" = "string"
"definitions.PolicySnippetContract.properties.name.description" = "Snippet name."
"definitions.PolicySnippetContract.properties.name.readOnly" = true
"definitions.PolicySnippetContract.properties.name.type" = "string"
"definitions.PolicySnippetContract.properties.scope.description" = "Snippet scope."
"definitions.PolicySnippetContract.properties.scope.enum.length" = 5
"definitions.PolicySnippetContract.properties.scope.enum[0]" = "Tenant"
"definitions.PolicySnippetContract.properties.scope.enum[1]" = "Product"
"definitions.PolicySnippetContract.properties.scope.enum[2]" = "Api"
"definitions.PolicySnippetContract.properties.scope.enum[3]" = "Operation"
"definitions.PolicySnippetContract.properties.scope.enum[4]" = "All"
"definitions.PolicySnippetContract.properties.scope.readOnly" = true
"definitions.PolicySnippetContract.properties.scope.type" = "string"
"definitions.PolicySnippetContract.properties.scope.x-ms-enum.modelAsString" = false
"definitions.PolicySnippetContract.properties.scope.x-ms-enum.name" = "PolicyScopeContract"
"definitions.PolicySnippetContract.properties.toolTip.description" = "Snippet toolTip."
"definitions.PolicySnippetContract.properties.toolTip.readOnly" = true
"definitions.PolicySnippetContract.properties.toolTip.type" = "string"
"definitions.ProductCollection.description" = "Paged Products list representation."
"definitions.ProductCollection.properties.count.description" = "Total records count number."
"definitions.ProductCollection.properties.count.format" = "int64"
"definitions.ProductCollection.properties.count.type" = "integer"
"definitions.ProductCollection.properties.nextLink.description" = "Next page link if any."
"definitions.ProductCollection.properties.nextLink.type" = "string"
"definitions.ProductCollection.properties.value.description" = "Page values."
"definitions.ProductCollection.properties.value.items.$ref" = "#/definitions/ProductContract"
"definitions.ProductCollection.properties.value.type" = "array"
"definitions.ProductContract.description" = "Product profile."
"definitions.ProductContract.properties.approvalRequired.description" = "whether subscription approval is required. If false, new subscriptions will be approved automatically enabling developers to call the product’s APIs immediately after subscribing. If true, administrators must manually approve the subscription before the developer can any of the product’s APIs. Can be present only if subscriptionRequired property is present and has a value of false."
"definitions.ProductContract.properties.approvalRequired.type" = "boolean"
"definitions.ProductContract.properties.description.description" = "Product description. May include HTML formatting tags."
"definitions.ProductContract.properties.description.maxLength" = 1000.0
"definitions.ProductContract.properties.description.minLength" = 1.0
"definitions.ProductContract.properties.description.type" = "string"
"definitions.ProductContract.properties.id.description" = "Uniquely identifies the product within the current API Management service instance. The value is a valid relative URL in the format of /products/{productId} where {productId} is a product identifier."
"definitions.ProductContract.properties.id.readOnly" = true
"definitions.ProductContract.properties.id.type" = "string"
"definitions.ProductContract.properties.name.description" = "Product name."
"definitions.ProductContract.properties.name.maxLength" = 300.0
"definitions.ProductContract.properties.name.minLength" = 1.0
"definitions.ProductContract.properties.name.type" = "string"
"definitions.ProductContract.properties.state.default" = "NotPublished"
"definitions.ProductContract.properties.state.description" = "whether product is published or not. Published products are discoverable by users of developer portal. Non published products are visible only to administrators. Default state of Product is NotPublished."
"definitions.ProductContract.properties.state.enum.length" = 2
"definitions.ProductContract.properties.state.enum[0]" = "NotPublished"
"definitions.ProductContract.properties.state.enum[1]" = "Published"
"definitions.ProductContract.properties.state.type" = "string"
"definitions.ProductContract.properties.state.x-ms-enum.modelAsString" = false
"definitions.ProductContract.properties.state.x-ms-enum.name" = "ProductStateContract"
"definitions.ProductContract.properties.subscriptionRequired.default" = true
"definitions.ProductContract.properties.subscriptionRequired.description" = "Whether a product subscription is required for accessing APIs included in this product. If true, the product is referred to as \"protected\" and a valid subscription key is required for a request to an API included in the product to succeed. If false, the product is referred to as \"open\" and requests to an API included in the product can be made without a subscription key. If property is omitted when creating a new product it's value is assumed to be true."
"definitions.ProductContract.properties.subscriptionRequired.type" = "boolean"
"definitions.ProductContract.properties.subscriptionsLimit.description" = "Whether the number of subscriptions a user can have to this product at the same time. Set to null or omit to allow unlimited per user subscriptions. Can be present only if subscriptionRequired property is present and has a value of false."
"definitions.ProductContract.properties.subscriptionsLimit.format" = "int32"
"definitions.ProductContract.properties.subscriptionsLimit.type" = "integer"
"definitions.ProductContract.properties.terms.description" = "Product terms of use. Developers trying to subscribe to the product will be presented and required to accept these terms before they can complete the subscription process."
"definitions.ProductContract.properties.terms.type" = "string"
"definitions.ProductContract.required.length" = 1
"definitions.ProductContract.required[0]" = "name"
"definitions.ProductUpdateParameters.description" = "Parameters supplied to the CreateOrUpdate Product operation."
"definitions.ProductUpdateParameters.properties.approvalRequired.description" = "whether subscription approval is required. If false, new subscriptions will be approved automatically enabling developers to call the product’s APIs immediately after subscribing. If true, administrators must manually approve the subscription before the developer can any of the product’s APIs. Can be present only if subscriptionRequired property is present and has a value of false."
"definitions.ProductUpdateParameters.properties.approvalRequired.type" = "boolean"
"definitions.ProductUpdateParameters.properties.description.description" = "Product description."
"definitions.ProductUpdateParameters.properties.description.maxLength" = 500.0
"definitions.ProductUpdateParameters.properties.description.minLength" = 1.0
"definitions.ProductUpdateParameters.properties.description.type" = "string"
"definitions.ProductUpdateParameters.properties.name.description" = "Product name."
"definitions.ProductUpdateParameters.properties.name.maxLength" = 300.0
"definitions.ProductUpdateParameters.properties.name.minLength" = 1.0
"definitions.ProductUpdateParameters.properties.name.type" = "string"
"definitions.ProductUpdateParameters.properties.state.description" = "whether product is published or not. Published products are discoverable by users of developer portal. Non published products are visible only to administrators."
"definitions.ProductUpdateParameters.properties.state.enum.length" = 2
"definitions.ProductUpdateParameters.properties.state.enum[0]" = "NotPublished"
"definitions.ProductUpdateParameters.properties.state.enum[1]" = "Published"
"definitions.ProductUpdateParameters.properties.state.type" = "string"
"definitions.ProductUpdateParameters.properties.state.x-ms-enum.modelAsString" = false
"definitions.ProductUpdateParameters.properties.state.x-ms-enum.name" = "ProductStateContract"
"definitions.ProductUpdateParameters.properties.subscriptionRequired.description" = "whether a product subscription is required for accessing APIs included in this product. If true, the product is referred to as \"protected\" and a valid subscription key is required for a request to an API included in the product to succeed. If false, the product is referred to as \"open\" and requests to an API included in the product can be made without a subscription key. If property is omitted when creating a new product it's value is assumed to be true."
"definitions.ProductUpdateParameters.properties.subscriptionRequired.type" = "boolean"
"definitions.ProductUpdateParameters.properties.subscriptionsLimit.description" = "whether the number of subscriptions a user can have to this product at the same time. Set to null or omit to allow unlimited per user subscriptions. Can be present only if subscriptionRequired property is present and has a value of false."
"definitions.ProductUpdateParameters.properties.subscriptionsLimit.format" = "int32"
"definitions.ProductUpdateParameters.properties.subscriptionsLimit.type" = "integer"
"definitions.ProductUpdateParameters.properties.terms.description" = "Product terms and conditions. Developer will have to accept these terms before he's allowed to call product API."
"definitions.ProductUpdateParameters.properties.terms.type" = "string"
"definitions.PropertyCollection.description" = "Paged Property list representation."
"definitions.PropertyCollection.properties.count.description" = "Total records count number."
"definitions.PropertyCollection.properties.count.format" = "int64"
"definitions.PropertyCollection.properties.count.type" = "integer"
"definitions.PropertyCollection.properties.nextLink.description" = "Next page link if any."
"definitions.PropertyCollection.properties.nextLink.type" = "string"
"definitions.PropertyCollection.properties.value.description" = "Page values."
"definitions.PropertyCollection.properties.value.items.$ref" = "#/definitions/PropertyContract"
"definitions.PropertyCollection.properties.value.type" = "array"
"definitions.PropertyContract.description" = "Property details."
"definitions.PropertyContract.properties.id.description" = "Uniquely identifies the property within the current API Management service instance. The value is a valid relative URL in the format of /properties/{propId} where {propId} is a property identifier."
"definitions.PropertyContract.properties.id.readOnly" = true
"definitions.PropertyContract.properties.id.type" = "string"
"definitions.PropertyContract.properties.name.description" = "Unique name of Property. It may contain only letters, digits, period, dash, and underscore characters."
"definitions.PropertyContract.properties.name.maxLength" = 256.0
"definitions.PropertyContract.properties.name.minLength" = 1.0
"definitions.PropertyContract.properties.name.pattern" = "^[A-Z0-9-._]+$"
"definitions.PropertyContract.properties.name.type" = "string"
"definitions.PropertyContract.properties.secret.description" = "Determines whether the value is a secret and should be encrypted or not. Default value is false."
"definitions.PropertyContract.properties.secret.type" = "boolean"
"definitions.PropertyContract.properties.tags.description" = "Optional tags that when provided can be used to filter the property list."
"definitions.PropertyContract.properties.tags.items.type" = "string"
"definitions.PropertyContract.properties.tags.maxItems" = 32.0
"definitions.PropertyContract.properties.tags.type" = "array"
"definitions.PropertyContract.properties.value.description" = "Value of the property. Can contain policy expressions. It may not be empty or consist only of whitespace."
"definitions.PropertyContract.properties.value.maxLength" = 4096.0
"definitions.PropertyContract.properties.value.minLength" = 1.0
"definitions.PropertyContract.properties.value.type" = "string"
"definitions.PropertyContract.required.length" = 2
"definitions.PropertyContract.required[0]" = "name"
"definitions.PropertyContract.required[1]" = "value"
"definitions.PropertyCreateParameters.description" = "Parameters supplied to the Create Property operation."
"definitions.PropertyCreateParameters.properties.name.description" = "Unique name of Property. It may contain only letters, digits, period, dash, and underscore characters."
"definitions.PropertyCreateParameters.properties.name.maxLength" = 256.0
"definitions.PropertyCreateParameters.properties.name.minLength" = 1.0
"definitions.PropertyCreateParameters.properties.name.pattern" = "^[A-Z0-9-._]+$"
"definitions.PropertyCreateParameters.properties.name.type" = "string"
"definitions.PropertyCreateParameters.properties.secret.description" = "Determines whether the value is a secret and should be encrypted or not. Default value is false."
"definitions.PropertyCreateParameters.properties.secret.type" = "boolean"
"definitions.PropertyCreateParameters.properties.tags.description" = "Optional tags that when provided can be used to filter the property list."
"definitions.PropertyCreateParameters.properties.tags.items.type" = "string"
"definitions.PropertyCreateParameters.properties.tags.maxItems" = 32.0
"definitions.PropertyCreateParameters.properties.tags.type" = "array"
"definitions.PropertyCreateParameters.properties.value.description" = "Value of the property. Can contain policy expressions. It may not be empty or consist only of whitespace."
"definitions.PropertyCreateParameters.properties.value.maxLength" = 4096.0
"definitions.PropertyCreateParameters.properties.value.minLength" = 1.0
"definitions.PropertyCreateParameters.properties.value.type" = "string"
"definitions.PropertyCreateParameters.required.length" = 2
"definitions.PropertyCreateParameters.required[0]" = "name"
"definitions.PropertyCreateParameters.required[1]" = "value"
"definitions.PropertyUpdateParameters.description" = "Parameters supplied to the Update Property operation."
"definitions.PropertyUpdateParameters.properties.name.description" = "Unique name of Property. It may contain only letters, digits, period, dash, and underscore characters."
"definitions.PropertyUpdateParameters.properties.name.maxLength" = 256.0
"definitions.PropertyUpdateParameters.properties.name.minLength" = 1.0
"definitions.PropertyUpdateParameters.properties.name.pattern" = "^[A-Z0-9-._]+$"
"definitions.PropertyUpdateParameters.properties.name.type" = "string"
"definitions.PropertyUpdateParameters.properties.secret.description" = "Determines whether the value is a secret and should be encrypted or not. Default value is false."
"definitions.PropertyUpdateParameters.properties.secret.type" = "boolean"
"definitions.PropertyUpdateParameters.properties.tags.description" = "Optional tags that when provided can be used to filter the property list."
"definitions.PropertyUpdateParameters.properties.tags.items.type" = "string"
"definitions.PropertyUpdateParameters.properties.tags.maxItems" = 32.0
"definitions.PropertyUpdateParameters.properties.tags.type" = "array"
"definitions.PropertyUpdateParameters.properties.value.description" = "Value of the property. Can contain policy expressions. It may not be empty or consist only of whitespace."
"definitions.PropertyUpdateParameters.properties.value.maxLength" = 4096.0
"definitions.PropertyUpdateParameters.properties.value.minLength" = 1.0
"definitions.PropertyUpdateParameters.properties.value.type" = "string"
"definitions.QuotaCounterCollection.description" = "Paged Quota Counter list representation."
"definitions.QuotaCounterCollection.properties.count.description" = "Total records count number."
"definitions.QuotaCounterCollection.properties.count.format" = "int64"
"definitions.QuotaCounterCollection.properties.count.type" = "integer"
"definitions.QuotaCounterCollection.properties.nextLink.description" = "Next page link if any."
"definitions.QuotaCounterCollection.properties.nextLink.type" = "string"
"definitions.QuotaCounterCollection.properties.value.description" = "Quota counter values."
"definitions.QuotaCounterCollection.properties.value.items.$ref" = "#/definitions/QuotaCounterContract"
"definitions.QuotaCounterCollection.properties.value.type" = "array"
"definitions.QuotaCounterContract.allOf.length" = 1
"definitions.QuotaCounterContract.allOf[0].$ref" = "#/definitions/QuotaCounterValueContract"
"definitions.QuotaCounterContract.description" = "Quota counter details."
"definitions.QuotaCounterContract.properties.counterKey.description" = "The Key value of the Counter. Must not be empty."
"definitions.QuotaCounterContract.properties.counterKey.minLength" = 1.0
"definitions.QuotaCounterContract.properties.counterKey.type" = "string"
"definitions.QuotaCounterContract.properties.periodEndTime.description" = "The date of the end of Counter Period. The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard.\n"
"definitions.QuotaCounterContract.properties.periodEndTime.format" = "date-time"
"definitions.QuotaCounterContract.properties.periodEndTime.type" = "string"
"definitions.QuotaCounterContract.properties.periodKey.description" = "Identifier of the Period for which the counter was collected. Must not be empty."
"definitions.QuotaCounterContract.properties.periodKey.minLength" = 1.0
"definitions.QuotaCounterContract.properties.periodKey.type" = "string"
"definitions.QuotaCounterContract.properties.periodStartTime.description" = "The date of the start of Counter Period. The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard.\n"
"definitions.QuotaCounterContract.properties.periodStartTime.format" = "date-time"
"definitions.QuotaCounterContract.properties.periodStartTime.type" = "string"
"definitions.QuotaCounterContract.required.length" = 4
"definitions.QuotaCounterContract.required[0]" = "counterKey"
"definitions.QuotaCounterContract.required[1]" = "periodKey"
"definitions.QuotaCounterContract.required[2]" = "periodStartTime"
"definitions.QuotaCounterContract.required[3]" = "periodEndTime"
"definitions.QuotaCounterValueContract.description" = "Quota counter value details."
"definitions.QuotaCounterValueContract.properties.callsCount.description" = "Number of times Counter was called."
"definitions.QuotaCounterValueContract.properties.callsCount.format" = "int32"
"definitions.QuotaCounterValueContract.properties.callsCount.type" = "integer"
"definitions.QuotaCounterValueContract.properties.kbTransferred.description" = "Data Transferred in KiloBytes."
"definitions.QuotaCounterValueContract.properties.kbTransferred.format" = "double"
"definitions.QuotaCounterValueContract.properties.kbTransferred.type" = "number"
"definitions.RegionContract.description" = "Region profile."
"definitions.RegionContract.properties.isMasterRegion.description" = "whether Region is the master region."
"definitions.RegionContract.properties.isMasterRegion.type" = "boolean"
"definitions.RegionContract.properties.name.description" = "Region name."
"definitions.RegionContract.properties.name.type" = "string"
"definitions.RegionContract.required.length" = 2
"definitions.RegionContract.required[0]" = "name"
"definitions.RegionContract.required[1]" = "isMasterRegion"
"definitions.RegionListResult.description" = "Lists Regions operation response details."
"definitions.RegionListResult.properties.value.description" = "Lists of Regions."
"definitions.RegionListResult.properties.value.items.$ref" = "#/definitions/RegionContract"
"definitions.RegionListResult.properties.value.type" = "array"
"definitions.ReportCollection.description" = "Paged Report records list representation."
"definitions.ReportCollection.properties.count.description" = "Total records count number."
"definitions.ReportCollection.properties.count.format" = "int64"
"definitions.ReportCollection.properties.count.type" = "integer"
"definitions.ReportCollection.properties.nextLink.description" = "Next page link if any."
"definitions.ReportCollection.properties.nextLink.type" = "string"
"definitions.ReportCollection.properties.value.description" = "Page values."
"definitions.ReportCollection.properties.value.items.$ref" = "#/definitions/ReportRecordContract"
"definitions.ReportCollection.properties.value.type" = "array"
"definitions.ReportRecordContract.description" = "Report data."
"definitions.ReportRecordContract.properties.apiId.description" = "API identifier path. /apis/{apiId}"
"definitions.ReportRecordContract.properties.apiId.type" = "string"
"definitions.ReportRecordContract.properties.apiRegion.description" = "API region identifier."
"definitions.ReportRecordContract.properties.apiRegion.type" = "string"
"definitions.ReportRecordContract.properties.apiTimeAvg.description" = "Average time it took to process request."
"definitions.ReportRecordContract.properties.apiTimeAvg.format" = "double"
"definitions.ReportRecordContract.properties.apiTimeAvg.type" = "number"
"definitions.ReportRecordContract.properties.apiTimeMax.description" = "Maximum time it took to process request."
"definitions.ReportRecordContract.properties.apiTimeMax.format" = "double"
"definitions.ReportRecordContract.properties.apiTimeMax.type" = "number"
"definitions.ReportRecordContract.properties.apiTimeMin.description" = "Minimum time it took to process request."
"definitions.ReportRecordContract.properties.apiTimeMin.format" = "double"
"definitions.ReportRecordContract.properties.apiTimeMin.type" = "number"
"definitions.ReportRecordContract.properties.bandwidth.description" = "Bandwidth consumed."
"definitions.ReportRecordContract.properties.bandwidth.format" = "int64"
"definitions.ReportRecordContract.properties.bandwidth.type" = "integer"
"definitions.ReportRecordContract.properties.cacheHitCount.description" = "Number of times when content was served from cache policy."
"definitions.ReportRecordContract.properties.cacheHitCount.format" = "int32"
"definitions.ReportRecordContract.properties.cacheHitCount.type" = "integer"
"definitions.ReportRecordContract.properties.cacheMissCount.description" = "Number of times content was fetched from backend."
"definitions.ReportRecordContract.properties.cacheMissCount.format" = "int32"
"definitions.ReportRecordContract.properties.cacheMissCount.type" = "integer"
"definitions.ReportRecordContract.properties.callCountBlocked.description" = "Number of calls blocked due to invalid credentials."
"definitions.ReportRecordContract.properties.callCountBlocked.format" = "int32"
"definitions.ReportRecordContract.properties.callCountBlocked.type" = "integer"
"definitions.ReportRecordContract.properties.callCountFailed.description" = "Number of calls failed due to proxy or backend errors."
"definitions.ReportRecordContract.properties.callCountFailed.format" = "int32"
"definitions.ReportRecordContract.properties.callCountFailed.type" = "integer"
"definitions.ReportRecordContract.properties.callCountOther.description" = "Number of other calls."
"definitions.ReportRecordContract.properties.callCountOther.format" = "int32"
"definitions.ReportRecordContract.properties.callCountOther.type" = "integer"
"definitions.ReportRecordContract.properties.callCountSuccess.description" = "Number of succesful calls."
"definitions.ReportRecordContract.properties.callCountSuccess.format" = "int32"
"definitions.ReportRecordContract.properties.callCountSuccess.type" = "integer"
"definitions.ReportRecordContract.properties.callCountTotal.description" = "Total number of calls."
"definitions.ReportRecordContract.properties.callCountTotal.format" = "int32"
"definitions.ReportRecordContract.properties.callCountTotal.type" = "integer"
"definitions.ReportRecordContract.properties.country.description" = "Country to which this record data is related."
"definitions.ReportRecordContract.properties.country.type" = "string"
"definitions.ReportRecordContract.properties.interval.description" = "Length of agregation period."
"definitions.ReportRecordContract.properties.interval.format" = "int64"
"definitions.ReportRecordContract.properties.interval.type" = "integer"
"definitions.ReportRecordContract.properties.name.description" = "Name depending on report endpoint specifies product, API, operation or developer name."
"definitions.ReportRecordContract.properties.name.type" = "string"
"definitions.ReportRecordContract.properties.operationId.description" = "Operation identifier path. /apis/{apiId}/operations/{operationId}"
"definitions.ReportRecordContract.properties.operationId.type" = "string"
"definitions.ReportRecordContract.properties.productId.description" = "Product identifier path. /products/{productId}"
"definitions.ReportRecordContract.properties.productId.readOnly" = true
"definitions.ReportRecordContract.properties.productId.type" = "string"
"definitions.ReportRecordContract.properties.region.description" = "Country region to which this record data is related."
"definitions.ReportRecordContract.properties.region.type" = "string"
"definitions.ReportRecordContract.properties.serviceTimeAvg.description" = "Average time it took to process request on backend."
"definitions.ReportRecordContract.properties.serviceTimeAvg.format" = "double"
"definitions.ReportRecordContract.properties.serviceTimeAvg.type" = "number"
"definitions.ReportRecordContract.properties.serviceTimeMax.description" = "Maximum time it took to process request on backend."
"definitions.ReportRecordContract.properties.serviceTimeMax.format" = "double"
"definitions.ReportRecordContract.properties.serviceTimeMax.type" = "number"
"definitions.ReportRecordContract.properties.serviceTimeMin.description" = "Minimum time it took to process request on backend."
"definitions.ReportRecordContract.properties.serviceTimeMin.format" = "double"
"definitions.ReportRecordContract.properties.serviceTimeMin.type" = "number"
"definitions.ReportRecordContract.properties.subscriptionId.description" = "Subscription identifier path. /subscriptions/{subscriptionId}"
"definitions.ReportRecordContract.properties.subscriptionId.type" = "string"
"definitions.ReportRecordContract.properties.timestamp.description" = "Start of aggregation period. The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard.\n"
"definitions.ReportRecordContract.properties.timestamp.format" = "date-time"
"definitions.ReportRecordContract.properties.timestamp.type" = "string"
"definitions.ReportRecordContract.properties.userId.description" = "User identifier path. /users/{userId}"
"definitions.ReportRecordContract.properties.userId.readOnly" = true
"definitions.ReportRecordContract.properties.userId.type" = "string"
"definitions.ReportRecordContract.properties.zip.description" = "Zip code to which this record data is related."
"definitions.ReportRecordContract.properties.zip.type" = "string"
"definitions.RepresentationContract.description" = "Operation request/response representation details."
"definitions.RepresentationContract.properties.contentType.description" = "Specifies a registered or custom content type for this representation, e.g. application/xml."
"definitions.RepresentationContract.properties.contentType.type" = "string"
"definitions.RepresentationContract.properties.sample.description" = "An example of the representation."
"definitions.RepresentationContract.properties.sample.type" = "string"
"definitions.RepresentationContract.required.length" = 1
"definitions.RepresentationContract.required[0]" = "contentType"
"definitions.RequestContract.description" = "Operation request details."
"definitions.RequestContract.properties.description.description" = "Operation request description."
"definitions.RequestContract.properties.description.type" = "string"
"definitions.RequestContract.properties.headers.description" = "Collection of operation request headers."
"definitions.RequestContract.properties.headers.items.$ref" = "#/definitions/ParameterContract"
"definitions.RequestContract.properties.headers.type" = "array"
"definitions.RequestContract.properties.queryParameters.description" = "Collection of operation request query parameters."
"definitions.RequestContract.properties.queryParameters.items.$ref" = "#/definitions/ParameterContract"
"definitions.RequestContract.properties.queryParameters.type" = "array"
"definitions.RequestContract.properties.representations.description" = "Collection of operation request representations."
"definitions.RequestContract.properties.representations.items.$ref" = "#/definitions/RepresentationContract"
"definitions.RequestContract.properties.representations.type" = "array"
"definitions.ResultContract.description" = "Operation response details."
"definitions.ResultContract.properties.description.description" = "Operation response description."
"definitions.ResultContract.properties.description.type" = "string"
"definitions.ResultContract.properties.representations.description" = "Collection of operation response representations."
"definitions.ResultContract.properties.representations.items.$ref" = "#/definitions/RepresentationContract"
"definitions.ResultContract.properties.representations.type" = "array"
"definitions.ResultContract.properties.statusCode.description" = "Operation response HTTP status code."
"definitions.ResultContract.properties.statusCode.format" = "int32"
"definitions.ResultContract.properties.statusCode.maximum" = 599.0
"definitions.ResultContract.properties.statusCode.minimum" = 100.0
"definitions.ResultContract.properties.statusCode.type" = "integer"
"definitions.ResultContract.required.length" = 1
"definitions.ResultContract.required[0]" = "statusCode"
"definitions.SaveConfigurationParameter.description" = "Parameters supplied to the Save Tenant Configuration operation."
"definitions.SaveConfigurationParameter.properties.branch.description" = "The name of the Git branch in which to commit the current configuration snapshot."
"definitions.SaveConfigurationParameter.properties.branch.type" = "string"
"definitions.SaveConfigurationParameter.properties.force.description" = "The value if true, the current configuration database is committed to the Git repository, even if the Git repository has newer changes that would be overwritten."
"definitions.SaveConfigurationParameter.properties.force.type" = "boolean"
"definitions.SaveConfigurationParameter.required.length" = 1
"definitions.SaveConfigurationParameter.required[0]" = "branch"
"definitions.SubscriptionCollection.description" = "Paged Subsctions list representation."
"definitions.SubscriptionCollection.properties.count.description" = "Total records count number."
"definitions.SubscriptionCollection.properties.count.format" = "int64"
"definitions.SubscriptionCollection.properties.count.type" = "integer"
"definitions.SubscriptionCollection.properties.nextLink.description" = "Next page link if any."
"definitions.SubscriptionCollection.properties.nextLink.type" = "string"
"definitions.SubscriptionCollection.properties.value.description" = "Page values."
"definitions.SubscriptionCollection.properties.value.items.$ref" = "#/definitions/SubscriptionContract"
"definitions.SubscriptionCollection.properties.value.type" = "array"
"definitions.SubscriptionContract.description" = "Subscription details."
"definitions.SubscriptionContract.properties.createdDate.description" = "Subscription creation date. The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard.\n"
"definitions.SubscriptionContract.properties.createdDate.format" = "date-time"
"definitions.SubscriptionContract.properties.createdDate.readOnly" = true
"definitions.SubscriptionContract.properties.createdDate.type" = "string"
"definitions.SubscriptionContract.properties.endDate.description" = "Date when subscription was cancelled or expired. The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard.\n"
"definitions.SubscriptionContract.properties.endDate.format" = "date-time"
"definitions.SubscriptionContract.properties.endDate.type" = "string"
"definitions.SubscriptionContract.properties.expirationDate.description" = "Subscription expiration date. The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard.\n"
"definitions.SubscriptionContract.properties.expirationDate.format" = "date-time"
"definitions.SubscriptionContract.properties.expirationDate.type" = "string"
"definitions.SubscriptionContract.properties.id.description" = "Uniquely identifies the subscription within the current API Management service instance. The value is a valid relative URL in the format of /subscriptions/{sid} where {sid} is a subscription identifier."
"definitions.SubscriptionContract.properties.id.readOnly" = true
"definitions.SubscriptionContract.properties.id.type" = "string"
"definitions.SubscriptionContract.properties.name.description" = "The name of the subscription, or null if the subscription has no name."
"definitions.SubscriptionContract.properties.name.maxLength" = 100.0
"definitions.SubscriptionContract.properties.name.minLength" = 0.0
"definitions.SubscriptionContract.properties.name.type" = "string"
"definitions.SubscriptionContract.properties.notificationDate.description" = "Upcoming subscription expiration notification date. The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard.\n"
"definitions.SubscriptionContract.properties.notificationDate.format" = "date-time"
"definitions.SubscriptionContract.properties.notificationDate.type" = "string"
"definitions.SubscriptionContract.properties.primaryKey.description" = "Subscription primary key."
"definitions.SubscriptionContract.properties.primaryKey.maxLength" = 256.0
"definitions.SubscriptionContract.properties.primaryKey.minLength" = 1.0
"definitions.SubscriptionContract.properties.primaryKey.type" = "string"
"definitions.SubscriptionContract.properties.productId.description" = "The product resource identifier of the subscribed product. The value is a valid relative URL in the format of /products/{productId} where {productId} is a product identifier."
"definitions.SubscriptionContract.properties.productId.type" = "string"
"definitions.SubscriptionContract.properties.secondaryKey.description" = "Subscription secondary key."
"definitions.SubscriptionContract.properties.secondaryKey.maxLength" = 256.0
"definitions.SubscriptionContract.properties.secondaryKey.minLength" = 1.0
"definitions.SubscriptionContract.properties.secondaryKey.type" = "string"
"definitions.SubscriptionContract.properties.startDate.description" = "Subscription activation date. The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard.\n"
"definitions.SubscriptionContract.properties.startDate.format" = "date-time"
"definitions.SubscriptionContract.properties.startDate.type" = "string"
"definitions.SubscriptionContract.properties.state.description" = "Subscription state. Possible states are * active – the subscription is active, * suspended – the subscription is blocked, and the subscriber cannot call any APIs of the product, * submitted – the subscription request has been made by the developer, but has not yet been approved or rejected, * rejected – the subscription request has been denied by an administrator, * cancelled – the subscription has been cancelled by the developer or administrator, * expired – the subscription reached its expiration date and was deactivated."
"definitions.SubscriptionContract.properties.state.enum.length" = 6
"definitions.SubscriptionContract.properties.state.enum[0]" = "Suspended"
"definitions.SubscriptionContract.properties.state.enum[1]" = "Active"
"definitions.SubscriptionContract.properties.state.enum[2]" = "Expired"
"definitions.SubscriptionContract.properties.state.enum[3]" = "Submitted"
"definitions.SubscriptionContract.properties.state.enum[4]" = "Rejected"
"definitions.SubscriptionContract.properties.state.enum[5]" = "Cancelled"
"definitions.SubscriptionContract.properties.state.type" = "string"
"definitions.SubscriptionContract.properties.state.x-ms-enum.modelAsString" = false
"definitions.SubscriptionContract.properties.state.x-ms-enum.name" = "SubscriptionStateContract"
"definitions.SubscriptionContract.properties.stateComment.description" = "Optional subscription comment added by an administrator."
"definitions.SubscriptionContract.properties.stateComment.type" = "string"
"definitions.SubscriptionContract.properties.userId.description" = "The user resource identifier of the subscription owner. The value is a valid relative URL in the format of /users/{uid} where {uid} is a user identifier."
"definitions.SubscriptionContract.properties.userId.type" = "string"
"definitions.SubscriptionCreateParameters.description" = "Parameters supplied to the Create subscription operation."
"definitions.SubscriptionCreateParameters.properties.name.description" = "Subscription name."
"definitions.SubscriptionCreateParameters.properties.name.maxLength" = 100.0
"definitions.SubscriptionCreateParameters.properties.name.minLength" = 1.0
"definitions.SubscriptionCreateParameters.properties.name.type" = "string"
"definitions.SubscriptionCreateParameters.properties.primaryKey.description" = "Primary subscription key. If not specified during request key will be generated automatically."
"definitions.SubscriptionCreateParameters.properties.primaryKey.maxLength" = 256.0
"definitions.SubscriptionCreateParameters.properties.primaryKey.minLength" = 1.0
"definitions.SubscriptionCreateParameters.properties.primaryKey.type" = "string"
"definitions.SubscriptionCreateParameters.properties.productId.description" = "Product (product id path) for which subscription is being created in form /products/{productid}"
"definitions.SubscriptionCreateParameters.properties.productId.type" = "string"
"definitions.SubscriptionCreateParameters.properties.secondaryKey.description" = "Secondary subscription key. If not specified during request key will be generated automatically."
"definitions.SubscriptionCreateParameters.properties.secondaryKey.maxLength" = 256.0
"definitions.SubscriptionCreateParameters.properties.secondaryKey.minLength" = 1.0
"definitions.SubscriptionCreateParameters.properties.secondaryKey.type" = "string"
"definitions.SubscriptionCreateParameters.properties.state.description" = "Initial subscription state. If no value is specified, subscription is created with Submitted state. Possible states are * active – the subscription is active, * suspended – the subscription is blocked, and the subscriber cannot call any APIs of the product, * submitted – the subscription request has been made by the developer, but has not yet been approved or rejected, * rejected – the subscription request has been denied by an administrator, * cancelled – the subscription has been cancelled by the developer or administrator, * expired – the subscription reached its expiration date and was deactivated."
"definitions.SubscriptionCreateParameters.properties.state.enum.length" = 6
"definitions.SubscriptionCreateParameters.properties.state.enum[0]" = "Suspended"
"definitions.SubscriptionCreateParameters.properties.state.enum[1]" = "Active"
"definitions.SubscriptionCreateParameters.properties.state.enum[2]" = "Expired"
"definitions.SubscriptionCreateParameters.properties.state.enum[3]" = "Submitted"
"definitions.SubscriptionCreateParameters.properties.state.enum[4]" = "Rejected"
"definitions.SubscriptionCreateParameters.properties.state.enum[5]" = "Cancelled"
"definitions.SubscriptionCreateParameters.properties.state.type" = "string"
"definitions.SubscriptionCreateParameters.properties.state.x-ms-enum.modelAsString" = false
"definitions.SubscriptionCreateParameters.properties.state.x-ms-enum.name" = "SubscriptionStateContract"
"definitions.SubscriptionCreateParameters.properties.userId.description" = "User (user id path) for whom subscription is being created in form /users/{uid}"
"definitions.SubscriptionCreateParameters.properties.userId.type" = "string"
"definitions.SubscriptionCreateParameters.required.length" = 3
"definitions.SubscriptionCreateParameters.required[0]" = "userId"
"definitions.SubscriptionCreateParameters.required[1]" = "productId"
"definitions.SubscriptionCreateParameters.required[2]" = "name"
"definitions.SubscriptionKeyParameterNamesContract.description" = "Subscription key parameter names details."
"definitions.SubscriptionKeyParameterNamesContract.example.subscriptionKeyParameterNames.header" = "customHeaderParameterName"
"definitions.SubscriptionKeyParameterNamesContract.example.subscriptionKeyParameterNames.query" = "customQueryParameterName"
"definitions.SubscriptionKeyParameterNamesContract.properties.header.description" = "Subscription key header name."
"definitions.SubscriptionKeyParameterNamesContract.properties.header.type" = "string"
"definitions.SubscriptionKeyParameterNamesContract.properties.query.description" = "Subscription key query string parameter name."
"definitions.SubscriptionKeyParameterNamesContract.properties.query.type" = "string"
"definitions.SubscriptionUpdateParameters.description" = "Parameters supplied to the Update subscription operation."
"definitions.SubscriptionUpdateParameters.properties.expirationDate.description" = "New subscription expiration date."
"definitions.SubscriptionUpdateParameters.properties.expirationDate.format" = "date-time"
"definitions.SubscriptionUpdateParameters.properties.expirationDate.type" = "string"
"definitions.SubscriptionUpdateParameters.properties.name.description" = "Subscription name."
"definitions.SubscriptionUpdateParameters.properties.name.type" = "string"
"definitions.SubscriptionUpdateParameters.properties.primaryKey.description" = "Primary subscription key."
"definitions.SubscriptionUpdateParameters.properties.primaryKey.maxLength" = 256.0
"definitions.SubscriptionUpdateParameters.properties.primaryKey.minLength" = 1.0
"definitions.SubscriptionUpdateParameters.properties.primaryKey.type" = "string"
"definitions.SubscriptionUpdateParameters.properties.productId.description" = "Product identifier path: /products/{productId}"
"definitions.SubscriptionUpdateParameters.properties.productId.type" = "string"
"definitions.SubscriptionUpdateParameters.properties.secondaryKey.description" = "Secondary subscription key."
"definitions.SubscriptionUpdateParameters.properties.secondaryKey.maxLength" = 256.0
"definitions.SubscriptionUpdateParameters.properties.secondaryKey.minLength" = 1.0
"definitions.SubscriptionUpdateParameters.properties.secondaryKey.type" = "string"
"definitions.SubscriptionUpdateParameters.properties.state.description" = "Subscription state. Possible states are * active – the subscription is active, * suspended – the subscription is blocked, and the subscriber cannot call any APIs of the product, * submitted – the subscription request has been made by the developer, but has not yet been approved or rejected, * rejected – the subscription request has been denied by an administrator, * cancelled – the subscription has been cancelled by the developer or administrator, * expired – the subscription reached its expiration date and was deactivated."
"definitions.SubscriptionUpdateParameters.properties.state.enum.length" = 6
"definitions.SubscriptionUpdateParameters.properties.state.enum[0]" = "Suspended"
"definitions.SubscriptionUpdateParameters.properties.state.enum[1]" = "Active"
"definitions.SubscriptionUpdateParameters.properties.state.enum[2]" = "Expired"
"definitions.SubscriptionUpdateParameters.properties.state.enum[3]" = "Submitted"
"definitions.SubscriptionUpdateParameters.properties.state.enum[4]" = "Rejected"
"definitions.SubscriptionUpdateParameters.properties.state.enum[5]" = "Cancelled"
"definitions.SubscriptionUpdateParameters.properties.state.type" = "string"
"definitions.SubscriptionUpdateParameters.properties.state.x-ms-enum.modelAsString" = false
"definitions.SubscriptionUpdateParameters.properties.state.x-ms-enum.name" = "SubscriptionStateContract"
"definitions.SubscriptionUpdateParameters.properties.stateComment.description" = "Comments describing subscription state change by the administrator."
"definitions.SubscriptionUpdateParameters.properties.stateComment.type" = "string"
"definitions.SubscriptionUpdateParameters.properties.userId.description" = "User identifier path: /users/{uid}"
"definitions.SubscriptionUpdateParameters.properties.userId.type" = "string"
"definitions.TenantConfigurationSyncStateContract.description" = "Tenant Configuration Synchronization State."
"definitions.TenantConfigurationSyncStateContract.properties.branch.description" = "The name of Git branch."
"definitions.TenantConfigurationSyncStateContract.properties.branch.type" = "string"
"definitions.TenantConfigurationSyncStateContract.properties.commitId.description" = "The latest commit Id."
"definitions.TenantConfigurationSyncStateContract.properties.commitId.type" = "string"
"definitions.TenantConfigurationSyncStateContract.properties.configurationChangeDate.description" = "The date of the latest configuration change. The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard.\n"
"definitions.TenantConfigurationSyncStateContract.properties.configurationChangeDate.format" = "date-time"
"definitions.TenantConfigurationSyncStateContract.properties.configurationChangeDate.type" = "string"
"definitions.TenantConfigurationSyncStateContract.properties.isExport.description" = "value indicating if last sync was save (true) or deploy (false) operation."
"definitions.TenantConfigurationSyncStateContract.properties.isExport.type" = "boolean"
"definitions.TenantConfigurationSyncStateContract.properties.isGitEnabled.description" = "value indicating whether Git configuration access is enabled."
"definitions.TenantConfigurationSyncStateContract.properties.isGitEnabled.type" = "boolean"
"definitions.TenantConfigurationSyncStateContract.properties.isSynced.description" = "value indicating if last synchronization was later than the configuration change."
"definitions.TenantConfigurationSyncStateContract.properties.isSynced.type" = "boolean"
"definitions.TenantConfigurationSyncStateContract.properties.syncDate.description" = "The date of the latest synchronization. The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard.\n"
"definitions.TenantConfigurationSyncStateContract.properties.syncDate.format" = "date-time"
"definitions.TenantConfigurationSyncStateContract.properties.syncDate.type" = "string"
"definitions.TenantLongRunningOperationResult.description" = "A standard service response for long running tenant operations."
"definitions.TenantLongRunningOperationResult.properties.operationStatusLink.description" = "operation status link."
"definitions.TenantLongRunningOperationResult.properties.operationStatusLink.type" = "string"
"definitions.TenantLongRunningOperationResult.properties.requestId.type" = "string"
"definitions.TenantLongRunningOperationResult.properties.retryAfter.description" = "The number of minutes to retry the operation after."
"definitions.TenantLongRunningOperationResult.properties.retryAfter.format" = "int32"
"definitions.TenantLongRunningOperationResult.properties.retryAfter.type" = "integer"
"definitions.TenantLongRunningOperationResult.properties.status.description" = "Current status of the operation."
"definitions.TenantLongRunningOperationResult.properties.status.enum.length" = 3
"definitions.TenantLongRunningOperationResult.properties.status.enum[0]" = "InProgress"
"definitions.TenantLongRunningOperationResult.properties.status.enum[1]" = "Succeeded"
"definitions.TenantLongRunningOperationResult.properties.status.enum[2]" = "Failed"
"definitions.TenantLongRunningOperationResult.properties.status.type" = "string"
"definitions.TenantLongRunningOperationResult.properties.status.x-ms-enum.modelAsString" = false
"definitions.TenantLongRunningOperationResult.properties.status.x-ms-enum.name" = "OperationStatus"
"definitions.TenantLongRunningOperationResult.properties.statusCode.enum.length" = 6
"definitions.TenantLongRunningOperationResult.properties.statusCode.enum[0]" = "Continue"
"definitions.TenantLongRunningOperationResult.properties.statusCode.enum[1]" = "OK"
"definitions.TenantLongRunningOperationResult.properties.statusCode.enum[2]" = "Created"
"definitions.TenantLongRunningOperationResult.properties.statusCode.enum[3]" = "Accepted"
"definitions.TenantLongRunningOperationResult.properties.statusCode.enum[4]" = "NotFound"
"definitions.TenantLongRunningOperationResult.properties.statusCode.enum[5]" = "Conflict"
"definitions.TenantLongRunningOperationResult.properties.statusCode.type" = "string"
"definitions.TenantLongRunningOperationResult.properties.statusCode.x-ms-enum.modelAsString" = false
"definitions.TenantLongRunningOperationResult.properties.statusCode.x-ms-enum.name" = "HttpStatusCode"
"definitions.TokenBodyParameterContract.description" = "OAuth acquire token request body parameter (www-url-form-encoded)."
"definitions.TokenBodyParameterContract.properties.name.description" = "body parameter name."
"definitions.TokenBodyParameterContract.properties.name.type" = "string"
"definitions.TokenBodyParameterContract.properties.value.description" = "body parameter value."
"definitions.TokenBodyParameterContract.properties.value.type" = "string"
"definitions.TokenBodyParameterContract.required.length" = 2
"definitions.TokenBodyParameterContract.required[0]" = "name"
"definitions.TokenBodyParameterContract.required[1]" = "value"
"definitions.UserCollection.description" = "Paged Users list representation."
"definitions.UserCollection.properties.count.description" = "Total records count number."
"definitions.UserCollection.properties.count.format" = "int64"
"definitions.UserCollection.properties.count.type" = "integer"
"definitions.UserCollection.properties.nextLink.description" = "Next page link if any."
"definitions.UserCollection.properties.nextLink.type" = "string"
"definitions.UserCollection.properties.value.description" = "Page values."
"definitions.UserCollection.properties.value.items.$ref" = "#/definitions/UserContract"
"definitions.UserCollection.properties.value.type" = "array"
"definitions.UserContract.description" = "User profile."
"definitions.UserContract.properties.email.description" = "Email address."
"definitions.UserContract.properties.email.type" = "string"
"definitions.UserContract.properties.firstName.description" = "First name."
"definitions.UserContract.properties.firstName.type" = "string"
"definitions.UserContract.properties.id.description" = "User identifier path."
"definitions.UserContract.properties.id.type" = "string"
"definitions.UserContract.properties.identities.description" = "Collection of user identities."
"definitions.UserContract.properties.identities.items.$ref" = "#/definitions/UserIdentityContract"
"definitions.UserContract.properties.identities.readOnly" = true
"definitions.UserContract.properties.identities.type" = "array"
"definitions.UserContract.properties.lastName.description" = "Last name."
"definitions.UserContract.properties.lastName.type" = "string"
"definitions.UserContract.properties.note.description" = "Administrator's note about given user."
"definitions.UserContract.properties.note.type" = "string"
"definitions.UserContract.properties.registrationDate.description" = "Date of user registration. The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard.\n"
"definitions.UserContract.properties.registrationDate.format" = "date-time"
"definitions.UserContract.properties.registrationDate.type" = "string"
"definitions.UserContract.properties.state.description" = "User state."
"definitions.UserContract.properties.state.enum.length" = 2
"definitions.UserContract.properties.state.enum[0]" = "Active"
"definitions.UserContract.properties.state.enum[1]" = "Blocked"
"definitions.UserContract.properties.state.type" = "string"
"definitions.UserContract.properties.state.x-ms-enum.modelAsString" = false
"definitions.UserContract.properties.state.x-ms-enum.name" = "UserStateContract"
"definitions.UserCreateParameters.description" = "Parameters supplied to the Create User operation."
"definitions.UserCreateParameters.properties.email.description" = "Email address. Must not be empty and must be unique within the service instance."
"definitions.UserCreateParameters.properties.email.maxLength" = 254.0
"definitions.UserCreateParameters.properties.email.minLength" = 1.0
"definitions.UserCreateParameters.properties.email.type" = "string"
"definitions.UserCreateParameters.properties.firstName.description" = "First name."
"definitions.UserCreateParameters.properties.firstName.maxLength" = 100.0
"definitions.UserCreateParameters.properties.firstName.minLength" = 1.0
"definitions.UserCreateParameters.properties.firstName.type" = "string"
"definitions.UserCreateParameters.properties.lastName.description" = "Last name."
"definitions.UserCreateParameters.properties.lastName.maxLength" = 100.0
"definitions.UserCreateParameters.properties.lastName.minLength" = 1.0
"definitions.UserCreateParameters.properties.lastName.type" = "string"
"definitions.UserCreateParameters.properties.note.description" = "Optional note about a user set by the administrator."
"definitions.UserCreateParameters.properties.note.type" = "string"
"definitions.UserCreateParameters.properties.password.description" = "User Password."
"definitions.UserCreateParameters.properties.password.type" = "string"
"definitions.UserCreateParameters.properties.state.default" = "Active"
"definitions.UserCreateParameters.properties.state.description" = "Account state. Specifies whether the user is active or not. Blocked users are unable to sign into the developer portal or call any APIs of subscribed products. Default state is Active."
"definitions.UserCreateParameters.properties.state.enum.length" = 2
"definitions.UserCreateParameters.properties.state.enum[0]" = "Active"
"definitions.UserCreateParameters.properties.state.enum[1]" = "Blocked"
"definitions.UserCreateParameters.properties.state.type" = "string"
"definitions.UserCreateParameters.properties.state.x-ms-enum.modelAsString" = false
"definitions.UserCreateParameters.properties.state.x-ms-enum.name" = "UserStateContract"
"definitions.UserCreateParameters.required.length" = 4
"definitions.UserCreateParameters.required[0]" = "email"
"definitions.UserCreateParameters.required[1]" = "password"
"definitions.UserCreateParameters.required[2]" = "firstName"
"definitions.UserCreateParameters.required[3]" = "lastName"
"definitions.UserIdentityContract.description" = "User identity details."
"definitions.UserIdentityContract.properties.id.description" = "Identifier value within provider."
"definitions.UserIdentityContract.properties.id.type" = "string"
"definitions.UserIdentityContract.properties.provider.description" = "Identity provider name."
"definitions.UserIdentityContract.properties.provider.type" = "string"
"definitions.UserUpdateParameters.description" = "Parameters supplied to the Update User operation."
"definitions.UserUpdateParameters.properties.email.description" = "Email address."
"definitions.UserUpdateParameters.properties.email.type" = "string"
"definitions.UserUpdateParameters.properties.firstName.description" = "First name."
"definitions.UserUpdateParameters.properties.firstName.maxLength" = 100.0
"definitions.UserUpdateParameters.properties.firstName.minLength" = 1.0
"definitions.UserUpdateParameters.properties.firstName.type" = "string"
"definitions.UserUpdateParameters.properties.lastName.description" = "Last name."
"definitions.UserUpdateParameters.properties.lastName.maxLength" = 100.0
"definitions.UserUpdateParameters.properties.lastName.minLength" = 1.0
"definitions.UserUpdateParameters.properties.lastName.type" = "string"
"definitions.UserUpdateParameters.properties.note.description" = "Note about user."
"definitions.UserUpdateParameters.properties.note.type" = "string"
"definitions.UserUpdateParameters.properties.password.description" = "Password."
"definitions.UserUpdateParameters.properties.password.type" = "string"
"definitions.UserUpdateParameters.properties.state.description" = "Account state."
"definitions.UserUpdateParameters.properties.state.enum.length" = 2
"definitions.UserUpdateParameters.properties.state.enum[0]" = "Active"
"definitions.UserUpdateParameters.properties.state.enum[1]" = "Blocked"
"definitions.UserUpdateParameters.properties.state.type" = "string"
"definitions.UserUpdateParameters.properties.state.x-ms-enum.modelAsString" = false
"definitions.UserUpdateParameters.properties.state.x-ms-enum.name" = "UserStateContract"
host = "management.azure.com"
"info.description" = "Use these REST APIs for performing operations on entities like API, Product, and Subscription associated with your Azure API Management deployment."
"info.title" = "ApiManagementClient"
"info.version" = "2016-07-07"
"info.x-apisguru-categories.length" = 1
"info.x-apisguru-categories[0]" = "cloud"
"info.x-logo.url" = "https://api.apis.guru/v2/cache/logo/https_assets.onestore.ms_cdnfiles_onestorerolling-1606-01000_shell_v3_images_logo_microsoft.png"
"info.x-origin.length" = 1
"info.x-origin[0].format" = "swagger"
"info.x-origin[0].url" = "https://raw.githubusercontent.com/Azure/azure-rest-api-specs/master/arm-apimanagement/2016-07-07/swagger/apimanagement.json"
"info.x-origin[0].version" = "2.0"
"info.x-preferred" = true
"info.x-providerName" = "azure.com"
"info.x-serviceName" = "arm-apimanagement"
"info.x-tags.length" = 2
"info.x-tags[0]" = "Azure"
"info.x-tags[1]" = "Microsoft"
"parameters.ApiIdParameter.description" = "API identifier. Must be unique in the current API Management service instance."
"parameters.ApiIdParameter.in" = "path"
"parameters.ApiIdParameter.maxLength" = 256.0
"parameters.ApiIdParameter.minLength" = 1.0
"parameters.ApiIdParameter.name" = "apiId"
"parameters.ApiIdParameter.pattern" = "^[^*#&+:<>?]+$"
"parameters.ApiIdParameter.required" = true
"parameters.ApiIdParameter.type" = "string"
"parameters.ApiIdParameter.x-ms-parameter-location" = "method"
"parameters.ApiVersionParameter.description" = "Version of the API to be used with the client request."
"parameters.ApiVersionParameter.in" = "query"
"parameters.ApiVersionParameter.name" = "api-version"
"parameters.ApiVersionParameter.required" = true
"parameters.ApiVersionParameter.type" = "string"
"parameters.BackendIdParameter.description" = "User identifier. Must be unique in the current API Management service instance."
"parameters.BackendIdParameter.in" = "path"
"parameters.BackendIdParameter.maxLength" = 255.0
"parameters.BackendIdParameter.minLength" = 1.0
"parameters.BackendIdParameter.name" = "backendid"
"parameters.BackendIdParameter.pattern" = "^[^*#&+:<>?]+$"
"parameters.BackendIdParameter.required" = true
"parameters.BackendIdParameter.type" = "string"
"parameters.BackendIdParameter.x-ms-parameter-location" = "method"
"parameters.GroupIdParameter.description" = "Group identifier. Must be unique in the current API Management service instance."
"parameters.GroupIdParameter.in" = "path"
"parameters.GroupIdParameter.maxLength" = 256.0
"parameters.GroupIdParameter.minLength" = 1.0
"parameters.GroupIdParameter.name" = "groupId"
"parameters.GroupIdParameter.pattern" = "^[^*#&+:<>?]+$"
"parameters.GroupIdParameter.required" = true
"parameters.GroupIdParameter.type" = "string"
"parameters.GroupIdParameter.x-ms-parameter-location" = "method"
"parameters.IdentityProviderNameParameter.description" = "Identity Provider Type identifier."
"parameters.IdentityProviderNameParameter.enum.length" = 5
"parameters.IdentityProviderNameParameter.enum[0]" = "facebook"
"parameters.IdentityProviderNameParameter.enum[1]" = "google"
"parameters.IdentityProviderNameParameter.enum[2]" = "microsoft"
"parameters.IdentityProviderNameParameter.enum[3]" = "twitter"
"parameters.IdentityProviderNameParameter.enum[4]" = "aad"
"parameters.IdentityProviderNameParameter.in" = "path"
"parameters.IdentityProviderNameParameter.name" = "identityProviderName"
"parameters.IdentityProviderNameParameter.required" = true
"parameters.IdentityProviderNameParameter.type" = "string"
"parameters.IdentityProviderNameParameter.x-ms-enum.modelAsString" = true
"parameters.IdentityProviderNameParameter.x-ms-enum.name" = "IdentityProviderNameType"
"parameters.IdentityProviderNameParameter.x-ms-parameter-location" = "method"
"parameters.OperationIdParameter.description" = "Operation identifier within an API. Must be unique in the current API Management service instance."
"parameters.OperationIdParameter.in" = "path"
"parameters.OperationIdParameter.maxLength" = 256.0
"parameters.OperationIdParameter.minLength" = 1.0
"parameters.OperationIdParameter.name" = "operationId"
"parameters.OperationIdParameter.pattern" = "^[^*#&+:<>?]+$"
"parameters.OperationIdParameter.required" = true
"parameters.OperationIdParameter.type" = "string"
"parameters.OperationIdParameter.x-ms-parameter-location" = "method"
"parameters.ProductIdParameter.description" = "Product identifier. Must be unique in the current API Management service instance."
"parameters.ProductIdParameter.in" = "path"
"parameters.ProductIdParameter.maxLength" = 256.0
"parameters.ProductIdParameter.minLength" = 1.0
"parameters.ProductIdParameter.name" = "productId"
"parameters.ProductIdParameter.pattern" = "^[^*#&+:<>?]+$"
"parameters.ProductIdParameter.required" = true
"parameters.ProductIdParameter.type" = "string"
"parameters.ProductIdParameter.x-ms-parameter-location" = "method"
"parameters.QuotaCounterKeyParameter.description" = "Quota counter key identifier."
"parameters.QuotaCounterKeyParameter.in" = "path"
"parameters.QuotaCounterKeyParameter.name" = "quotaCounterKey"
"parameters.QuotaCounterKeyParameter.required" = true
"parameters.QuotaCounterKeyParameter.type" = "string"
"parameters.QuotaCounterKeyParameter.x-ms-parameter-location" = "method"
"parameters.QuotaPeriodKeyParameter.description" = "Quota period key identifier."
"parameters.QuotaPeriodKeyParameter.in" = "path"
"parameters.QuotaPeriodKeyParameter.name" = "quotaPeriodKey"
"parameters.QuotaPeriodKeyParameter.required" = true
"parameters.QuotaPeriodKeyParameter.type" = "string"
"parameters.QuotaPeriodKeyParameter.x-ms-parameter-location" = "method"
"parameters.ResourceGroupNameParameter.description" = "The name of the resource group."
"parameters.ResourceGroupNameParameter.in" = "path"
"parameters.ResourceGroupNameParameter.name" = "resourceGroupName"
"parameters.ResourceGroupNameParameter.required" = true
"parameters.ResourceGroupNameParameter.type" = "string"
"parameters.ResourceGroupNameParameter.x-ms-parameter-location" = "method"
"parameters.ServiceNameParameter.description" = "The name of the API Management service."
"parameters.ServiceNameParameter.in" = "path"
"parameters.ServiceNameParameter.maxLength" = 50.0
"parameters.ServiceNameParameter.minLength" = 1.0
"parameters.ServiceNameParameter.name" = "serviceName"
"parameters.ServiceNameParameter.pattern" = "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
"parameters.ServiceNameParameter.required" = true
"parameters.ServiceNameParameter.type" = "string"
"parameters.ServiceNameParameter.x-ms-parameter-location" = "method"
"parameters.SkipQueryParameter.description" = "Number of records to skip."
"parameters.SkipQueryParameter.format" = "int32"
"parameters.SkipQueryParameter.in" = "query"
"parameters.SkipQueryParameter.minimum" = 0.0
"parameters.SkipQueryParameter.name" = "$skip"
"parameters.SkipQueryParameter.required" = false
"parameters.SkipQueryParameter.type" = "integer"
"parameters.SkipQueryParameter.x-ms-parameter-location" = "method"
"parameters.SubscriptionIdParameter.description" = "Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call."
"parameters.SubscriptionIdParameter.in" = "path"
"parameters.SubscriptionIdParameter.name" = "subscriptionId"
"parameters.SubscriptionIdParameter.required" = true
"parameters.SubscriptionIdParameter.type" = "string"
"parameters.TopQueryParameter.description" = "Number of records to return."
"parameters.TopQueryParameter.format" = "int32"
"parameters.TopQueryParameter.in" = "query"
"parameters.TopQueryParameter.minimum" = 1.0
"parameters.TopQueryParameter.name" = "$top"
"parameters.TopQueryParameter.required" = false
"parameters.TopQueryParameter.type" = "integer"
"parameters.TopQueryParameter.x-ms-parameter-location" = "method"
"parameters.UserIdParameter.description" = "User identifier. Must be unique in the current API Management service instance."
"parameters.UserIdParameter.in" = "path"
"parameters.UserIdParameter.maxLength" = 256.0
"parameters.UserIdParameter.minLength" = 1.0
"parameters.UserIdParameter.name" = "uid"
"parameters.UserIdParameter.pattern" = "^[^*#&+:<>?]+$"
"parameters.UserIdParameter.required" = true
"parameters.UserIdParameter.type" = "string"
"parameters.UserIdParameter.x-ms-parameter-location" = "method"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis.get.description" = "Lists all APIs of the API Management service instance."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis.get.externalDocs.url" = "https://msdn.microsoft.com/en-us/library/azure/dn781423.aspx"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis.get.operationId" = "Apis_ListByService"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis.get.parameters.length" = 7
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis.get.parameters[0].$ref" = "#/parameters/ResourceGroupNameParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis.get.parameters[1].$ref" = "#/parameters/ServiceNameParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis.get.parameters[2].description" = "| Field       | Supported operators    | Supported functions               |\n|-------------|------------------------|-----------------------------------|\n| id          | ge, le, eq, ne, gt, lt | substringof, startswith, endswith |\n| name        | ge, le, eq, ne, gt, lt | substringof, startswith, endswith |\n| description | ge, le, eq, ne, gt, lt | substringof, startswith, endswith |\n| serviceUrl  | ge, le, eq, ne, gt, lt | substringof, startswith, endswith |\n| path        | ge, le, eq, ne, gt, lt | substringof, startswith, endswith |"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis.get.parameters[2].in" = "query"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis.get.parameters[2].name" = "$filter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis.get.parameters[2].required" = false
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis.get.parameters[2].type" = "string"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis.get.parameters[3].$ref" = "#/parameters/TopQueryParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis.get.parameters[4].$ref" = "#/parameters/SkipQueryParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis.get.parameters[5].$ref" = "#/parameters/ApiVersionParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis.get.parameters[6].$ref" = "#/parameters/SubscriptionIdParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis.get.responses.200.description" = "Paged Result reponse of Apis."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis.get.responses.200.schema.$ref" = "#/definitions/ApiCollection"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis.get.responses.default.description" = "Error response describing why the operation failed."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis.get.responses.default.schema.$ref" = "#/definitions/ErrorBodyContract"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis.get.tags.length" = 1
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis.get.tags[0]" = "Apis"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis.get.x-ms-odata" = "#/definitions/ApiContract"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis.get.x-ms-pageable.nextLinkName" = "nextLink"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}.delete.description" = "Deletes the specified API of the API Management service instance."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}.delete.operationId" = "Apis_Delete"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}.delete.parameters.length" = 6
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}.delete.parameters[0].$ref" = "#/parameters/ResourceGroupNameParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}.delete.parameters[1].$ref" = "#/parameters/ServiceNameParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}.delete.parameters[2].$ref" = "#/parameters/ApiIdParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}.delete.parameters[3].description" = "ETag of the API Entity. ETag should match the current entity state from the header response of the GET request or it should be * for unconditional update."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}.delete.parameters[3].in" = "header"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}.delete.parameters[3].name" = "If-Match"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}.delete.parameters[3].required" = true
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}.delete.parameters[3].type" = "string"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}.delete.parameters[4].$ref" = "#/parameters/ApiVersionParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}.delete.parameters[5].$ref" = "#/parameters/SubscriptionIdParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}.delete.responses.204.description" = "The API was successfully deleted."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}.delete.responses.default.description" = "Error response describing why the operation failed."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}.delete.responses.default.schema.$ref" = "#/definitions/ErrorBodyContract"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}.delete.tags.length" = 1
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}.delete.tags[0]" = "Apis"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}.get.description" = "Gets the details of the API specified by its identifier."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}.get.operationId" = "Apis_Get"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}.get.parameters.length" = 5
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}.get.parameters[0].$ref" = "#/parameters/ResourceGroupNameParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}.get.parameters[1].$ref" = "#/parameters/ServiceNameParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}.get.parameters[2].$ref" = "#/parameters/ApiIdParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}.get.parameters[3].$ref" = "#/parameters/ApiVersionParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}.get.parameters[4].$ref" = "#/parameters/SubscriptionIdParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}.get.produces.length" = 4
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}.get.produces[0]" = "application/json"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}.get.produces[1]" = "application/vnd.sun.wadl+xml"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}.get.produces[2]" = "application/vnd.swagger.doc+json"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}.get.produces[3]" = "application/wsdl+xml"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}.get.responses.200.description" = "The response body contains the specified API entity."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}.get.responses.200.headers.ETag.description" = "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}.get.responses.200.headers.ETag.type" = "string"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}.get.responses.200.schema.$ref" = "#/definitions/ApiContract"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}.get.responses.default.description" = "Error response describing why the operation failed."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}.get.responses.default.schema.$ref" = "#/definitions/ErrorBodyContract"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}.get.tags.length" = 1
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}.get.tags[0]" = "Apis"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}.patch.description" = "Updates the specified API of the API Management service instance."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}.patch.operationId" = "Apis_Update"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}.patch.parameters.length" = 7
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}.patch.parameters[0].$ref" = "#/parameters/ResourceGroupNameParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}.patch.parameters[1].$ref" = "#/parameters/ServiceNameParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}.patch.parameters[2].$ref" = "#/parameters/ApiIdParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}.patch.parameters[3].description" = "Patch parameters."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}.patch.parameters[3].in" = "body"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}.patch.parameters[3].name" = "parameters"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}.patch.parameters[3].required" = true
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}.patch.parameters[3].schema.$ref" = "#/definitions/PatchParameters"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}.patch.parameters[4].description" = "ETag of the API entity. ETag should match the current entity state in the header response of the GET request or it should be * for unconditional update."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}.patch.parameters[4].in" = "header"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}.patch.parameters[4].name" = "If-Match"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}.patch.parameters[4].required" = true
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}.patch.parameters[4].type" = "string"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}.patch.parameters[5].$ref" = "#/parameters/ApiVersionParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}.patch.parameters[6].$ref" = "#/parameters/SubscriptionIdParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}.patch.responses.204.description" = "The API was successfully updated."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}.patch.responses.default.description" = "Error response describing why the operation failed."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}.patch.responses.default.schema.$ref" = "#/definitions/ErrorBodyContract"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}.patch.tags.length" = 1
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}.patch.tags[0]" = "Apis"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}.put.description" = "Creates new or updates existing specified API of the API Management service instance."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}.put.operationId" = "Apis_CreateOrUpdate"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}.put.parameters.length" = 7
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}.put.parameters[0].$ref" = "#/parameters/ResourceGroupNameParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}.put.parameters[1].$ref" = "#/parameters/ServiceNameParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}.put.parameters[2].$ref" = "#/parameters/ApiIdParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}.put.parameters[3].description" = "Create or update parameters."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}.put.parameters[3].in" = "body"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}.put.parameters[3].name" = "parameters"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}.put.parameters[3].required" = true
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}.put.parameters[3].schema.$ref" = "#/definitions/ApiContract"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}.put.parameters[4].description" = "ETag of the Api Entity. For Create Api Etag should not be specified. For Update Etag should match the existing Entity or it can be * for unconditional update."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}.put.parameters[4].in" = "header"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}.put.parameters[4].name" = "If-Match"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}.put.parameters[4].required" = false
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}.put.parameters[4].type" = "string"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}.put.parameters[5].$ref" = "#/parameters/ApiVersionParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}.put.parameters[6].$ref" = "#/parameters/SubscriptionIdParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}.put.responses.201.description" = "API was successfully created."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}.put.responses.204.description" = "API was successfully updated."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}.put.responses.default.description" = "Error response describing why the operation failed."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}.put.responses.default.schema.$ref" = "#/definitions/ErrorBodyContract"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}.put.tags.length" = 1
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}.put.tags[0]" = "Apis"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/operations.get.description" = "Lists a collection of the operations for the specified API."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/operations.get.operationId" = "ApiOperations_ListByApi"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/operations.get.parameters.length" = 8
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/operations.get.parameters[0].$ref" = "#/parameters/ResourceGroupNameParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/operations.get.parameters[1].$ref" = "#/parameters/ServiceNameParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/operations.get.parameters[2].$ref" = "#/parameters/ApiIdParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/operations.get.parameters[3].description" = "| Field       | Supported operators    | Supported functions               |\n|-------------|------------------------|-----------------------------------|\n| name        | ge, le, eq, ne, gt, lt | substringof, startswith, endswith |\n| method      | ge, le, eq, ne, gt, lt | substringof, startswith, endswith |\n| description | ge, le, eq, ne, gt, lt | substringof, startswith, endswith |\n| urlTemplate | ge, le, eq, ne, gt, lt | substringof, startswith, endswith |"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/operations.get.parameters[3].in" = "query"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/operations.get.parameters[3].name" = "$filter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/operations.get.parameters[3].required" = false
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/operations.get.parameters[3].type" = "string"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/operations.get.parameters[4].$ref" = "#/parameters/TopQueryParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/operations.get.parameters[5].$ref" = "#/parameters/SkipQueryParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/operations.get.parameters[6].$ref" = "#/parameters/ApiVersionParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/operations.get.parameters[7].$ref" = "#/parameters/SubscriptionIdParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/operations.get.responses.200.description" = "A collection of operation summary entities at the API level."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/operations.get.responses.200.schema.$ref" = "#/definitions/OperationCollection"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/operations.get.responses.default.description" = "Error response describing why the operation failed."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/operations.get.responses.default.schema.$ref" = "#/definitions/ErrorBodyContract"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/operations.get.tags.length" = 1
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/operations.get.tags[0]" = "ApiOperations"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/operations.get.x-ms-odata" = "#/definitions/OperationContract"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/operations.get.x-ms-pageable.nextLinkName" = "nextLink"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/operations/{operationId}.delete.description" = "Deletes the specified operation."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/operations/{operationId}.delete.operationId" = "ApiOperations_Delete"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/operations/{operationId}.delete.parameters.length" = 7
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/operations/{operationId}.delete.parameters[0].$ref" = "#/parameters/ResourceGroupNameParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/operations/{operationId}.delete.parameters[1].$ref" = "#/parameters/ServiceNameParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/operations/{operationId}.delete.parameters[2].$ref" = "#/parameters/ApiIdParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/operations/{operationId}.delete.parameters[3].$ref" = "#/parameters/OperationIdParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/operations/{operationId}.delete.parameters[4].description" = "ETag of the API Operation Entity. ETag should match the current entity state from the header response of the GET request or it should be * for unconditional update."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/operations/{operationId}.delete.parameters[4].in" = "header"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/operations/{operationId}.delete.parameters[4].name" = "If-Match"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/operations/{operationId}.delete.parameters[4].required" = true
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/operations/{operationId}.delete.parameters[4].type" = "string"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/operations/{operationId}.delete.parameters[5].$ref" = "#/parameters/ApiVersionParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/operations/{operationId}.delete.parameters[6].$ref" = "#/parameters/SubscriptionIdParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/operations/{operationId}.delete.responses.204.description" = "The operation was successfully deleted."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/operations/{operationId}.delete.responses.default.description" = "Error response describing why the operation failed."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/operations/{operationId}.delete.responses.default.schema.$ref" = "#/definitions/ErrorBodyContract"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/operations/{operationId}.delete.tags.length" = 1
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/operations/{operationId}.delete.tags[0]" = "ApiOperations"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/operations/{operationId}.get.description" = "Gets the details of the API Operation specified by its identifier."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/operations/{operationId}.get.operationId" = "ApiOperations_Get"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/operations/{operationId}.get.parameters.length" = 6
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/operations/{operationId}.get.parameters[0].$ref" = "#/parameters/ResourceGroupNameParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/operations/{operationId}.get.parameters[1].$ref" = "#/parameters/ServiceNameParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/operations/{operationId}.get.parameters[2].$ref" = "#/parameters/ApiIdParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/operations/{operationId}.get.parameters[3].$ref" = "#/parameters/OperationIdParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/operations/{operationId}.get.parameters[4].$ref" = "#/parameters/ApiVersionParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/operations/{operationId}.get.parameters[5].$ref" = "#/parameters/SubscriptionIdParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/operations/{operationId}.get.responses.200.description" = "The response body contains the specified Operation entity."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/operations/{operationId}.get.responses.200.headers.ETag.description" = "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/operations/{operationId}.get.responses.200.headers.ETag.type" = "string"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/operations/{operationId}.get.responses.200.schema.$ref" = "#/definitions/OperationContract"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/operations/{operationId}.get.responses.default.description" = "Error response describing why the operation failed."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/operations/{operationId}.get.responses.default.schema.$ref" = "#/definitions/ErrorBodyContract"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/operations/{operationId}.get.tags.length" = 1
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/operations/{operationId}.get.tags[0]" = "ApiOperations"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/operations/{operationId}.patch.description" = "Updates the details of the operation specified by its identifier."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/operations/{operationId}.patch.operationId" = "ApiOperations_Update"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/operations/{operationId}.patch.parameters.length" = 8
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/operations/{operationId}.patch.parameters[0].$ref" = "#/parameters/ResourceGroupNameParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/operations/{operationId}.patch.parameters[1].$ref" = "#/parameters/ServiceNameParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/operations/{operationId}.patch.parameters[2].$ref" = "#/parameters/ApiIdParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/operations/{operationId}.patch.parameters[3].$ref" = "#/parameters/OperationIdParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/operations/{operationId}.patch.parameters[4].description" = "Update parameters."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/operations/{operationId}.patch.parameters[4].in" = "body"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/operations/{operationId}.patch.parameters[4].name" = "parameters"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/operations/{operationId}.patch.parameters[4].required" = true
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/operations/{operationId}.patch.parameters[4].schema.$ref" = "#/definitions/PatchParameters"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/operations/{operationId}.patch.parameters[5].description" = "ETag of the API Operation Entity. ETag should match the current entity state from the header response of the GET request or it should be * for unconditional update."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/operations/{operationId}.patch.parameters[5].in" = "header"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/operations/{operationId}.patch.parameters[5].name" = "If-Match"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/operations/{operationId}.patch.parameters[5].required" = true
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/operations/{operationId}.patch.parameters[5].type" = "string"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/operations/{operationId}.patch.parameters[6].$ref" = "#/parameters/ApiVersionParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/operations/{operationId}.patch.parameters[7].$ref" = "#/parameters/SubscriptionIdParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/operations/{operationId}.patch.responses.204.description" = "The operation was successfully updated."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/operations/{operationId}.patch.responses.default.description" = "Error response describing why the operation failed."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/operations/{operationId}.patch.responses.default.schema.$ref" = "#/definitions/ErrorBodyContract"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/operations/{operationId}.patch.tags.length" = 1
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/operations/{operationId}.patch.tags[0]" = "ApiOperations"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/operations/{operationId}.put.description" = "Creates a new API operation or updates an existing one."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/operations/{operationId}.put.operationId" = "ApiOperations_CreateOrUpdate"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/operations/{operationId}.put.parameters.length" = 7
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/operations/{operationId}.put.parameters[0].$ref" = "#/parameters/ResourceGroupNameParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/operations/{operationId}.put.parameters[1].$ref" = "#/parameters/ServiceNameParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/operations/{operationId}.put.parameters[2].$ref" = "#/parameters/ApiIdParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/operations/{operationId}.put.parameters[3].$ref" = "#/parameters/OperationIdParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/operations/{operationId}.put.parameters[4].description" = "Create parameters."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/operations/{operationId}.put.parameters[4].in" = "body"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/operations/{operationId}.put.parameters[4].name" = "parameters"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/operations/{operationId}.put.parameters[4].required" = true
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/operations/{operationId}.put.parameters[4].schema.$ref" = "#/definitions/OperationContract"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/operations/{operationId}.put.parameters[5].$ref" = "#/parameters/ApiVersionParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/operations/{operationId}.put.parameters[6].$ref" = "#/parameters/SubscriptionIdParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/operations/{operationId}.put.responses.201.description" = "Operation was successfully created."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/operations/{operationId}.put.responses.204.description" = "Operation was successfully updated."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/operations/{operationId}.put.responses.default.description" = "Error response describing why the operation failed."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/operations/{operationId}.put.responses.default.schema.$ref" = "#/definitions/ErrorBodyContract"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/operations/{operationId}.put.tags.length" = 1
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/operations/{operationId}.put.tags[0]" = "ApiOperations"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/products.get.description" = "Lists all API associated products."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/products.get.operationId" = "ApiProducts_ListByApi"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/products.get.parameters.length" = 8
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/products.get.parameters[0].$ref" = "#/parameters/ResourceGroupNameParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/products.get.parameters[1].$ref" = "#/parameters/ServiceNameParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/products.get.parameters[2].$ref" = "#/parameters/ApiIdParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/products.get.parameters[3].description" = "| Field | Supported operators    | Supported functions                         |\n|-------|------------------------|---------------------------------------------|\n| name  | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/products.get.parameters[3].in" = "query"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/products.get.parameters[3].name" = "$filter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/products.get.parameters[3].required" = false
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/products.get.parameters[3].type" = "string"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/products.get.parameters[4].$ref" = "#/parameters/TopQueryParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/products.get.parameters[5].$ref" = "#/parameters/SkipQueryParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/products.get.parameters[6].$ref" = "#/parameters/ApiVersionParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/products.get.parameters[7].$ref" = "#/parameters/SubscriptionIdParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/products.get.responses.200.description" = "The operation returns a collection of products which have the Api entity."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/products.get.responses.200.schema.$ref" = "#/definitions/ProductCollection"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/products.get.responses.default.description" = "Error response describing why the operation failed."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/products.get.responses.default.schema.$ref" = "#/definitions/ErrorBodyContract"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/products.get.tags.length" = 1
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/products.get.tags[0]" = "ApiProducts"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/products.get.x-ms-odata" = "#/definitions/ProductContract"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/products.get.x-ms-pageable.nextLinkName" = "nextLink"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/authorizationServers.get.description" = "Lists a collection of authorization servers defined within a service instance."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/authorizationServers.get.externalDocs.url" = "https://msdn.microsoft.com/en-us/library/azure/dn879064.aspx"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/authorizationServers.get.operationId" = "AuthorizationServers_ListByService"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/authorizationServers.get.parameters.length" = 7
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/authorizationServers.get.parameters[0].$ref" = "#/parameters/ResourceGroupNameParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/authorizationServers.get.parameters[1].$ref" = "#/parameters/ServiceNameParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/authorizationServers.get.parameters[2].description" = "| Field | Supported operators    | Supported functions                         |\n|-------|------------------------|---------------------------------------------|\n| id    | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |\n| name  | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/authorizationServers.get.parameters[2].in" = "query"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/authorizationServers.get.parameters[2].name" = "$filter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/authorizationServers.get.parameters[2].required" = false
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/authorizationServers.get.parameters[2].type" = "string"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/authorizationServers.get.parameters[3].$ref" = "#/parameters/TopQueryParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/authorizationServers.get.parameters[4].$ref" = "#/parameters/SkipQueryParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/authorizationServers.get.parameters[5].$ref" = "#/parameters/ApiVersionParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/authorizationServers.get.parameters[6].$ref" = "#/parameters/SubscriptionIdParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/authorizationServers.get.responses.200.description" = "A Collection of the Authorization Server entities for the specified API Management service instance."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/authorizationServers.get.responses.200.schema.$ref" = "#/definitions/AuthorizationServerCollection"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/authorizationServers.get.tags.length" = 1
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/authorizationServers.get.tags[0]" = "AuthorizationServers"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/authorizationServers.get.x-ms-odata" = "#/definitions/OAuth2AuthorizationServerContract"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/authorizationServers.get.x-ms-pageable.nextLinkName" = "nextLink"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/authorizationServers/{authsid}.delete.description" = "Deletes specific authorization server instance."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/authorizationServers/{authsid}.delete.operationId" = "AuthorizationServers_Delete"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/authorizationServers/{authsid}.delete.parameters.length" = 6
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/authorizationServers/{authsid}.delete.parameters[0].$ref" = "#/parameters/ResourceGroupNameParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/authorizationServers/{authsid}.delete.parameters[1].$ref" = "#/parameters/ServiceNameParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/authorizationServers/{authsid}.delete.parameters[2].description" = "Identifier of the authorization server."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/authorizationServers/{authsid}.delete.parameters[2].in" = "path"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/authorizationServers/{authsid}.delete.parameters[2].name" = "authsid"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/authorizationServers/{authsid}.delete.parameters[2].required" = true
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/authorizationServers/{authsid}.delete.parameters[2].type" = "string"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/authorizationServers/{authsid}.delete.parameters[3].description" = "The entity state (Etag) version of the authentication server to delete. A value of \"*\" can be used for If-Match to unconditionally apply the operation."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/authorizationServers/{authsid}.delete.parameters[3].in" = "header"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/authorizationServers/{authsid}.delete.parameters[3].name" = "If-Match"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/authorizationServers/{authsid}.delete.parameters[3].required" = true
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/authorizationServers/{authsid}.delete.parameters[3].type" = "string"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/authorizationServers/{authsid}.delete.parameters[4].$ref" = "#/parameters/ApiVersionParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/authorizationServers/{authsid}.delete.parameters[5].$ref" = "#/parameters/SubscriptionIdParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/authorizationServers/{authsid}.delete.responses.204.description" = "The authorization server settings were successfully deleted."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/authorizationServers/{authsid}.delete.responses.default.description" = "Error response describing why the operation failed."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/authorizationServers/{authsid}.delete.responses.default.schema.$ref" = "#/definitions/ErrorBodyContract"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/authorizationServers/{authsid}.delete.tags.length" = 1
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/authorizationServers/{authsid}.delete.tags[0]" = "AuthorizationServers"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/authorizationServers/{authsid}.get.description" = "Gets the details of the authorization server specified by its identifier."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/authorizationServers/{authsid}.get.operationId" = "AuthorizationServers_Get"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/authorizationServers/{authsid}.get.parameters.length" = 5
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/authorizationServers/{authsid}.get.parameters[0].$ref" = "#/parameters/ResourceGroupNameParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/authorizationServers/{authsid}.get.parameters[1].$ref" = "#/parameters/ServiceNameParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/authorizationServers/{authsid}.get.parameters[2].description" = "Identifier of the authorization server."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/authorizationServers/{authsid}.get.parameters[2].in" = "path"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/authorizationServers/{authsid}.get.parameters[2].maxLength" = 256.0
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/authorizationServers/{authsid}.get.parameters[2].name" = "authsid"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/authorizationServers/{authsid}.get.parameters[2].pattern" = "^[^*#&+:<>?]+$"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/authorizationServers/{authsid}.get.parameters[2].required" = true
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/authorizationServers/{authsid}.get.parameters[2].type" = "string"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/authorizationServers/{authsid}.get.parameters[3].$ref" = "#/parameters/ApiVersionParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/authorizationServers/{authsid}.get.parameters[4].$ref" = "#/parameters/SubscriptionIdParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/authorizationServers/{authsid}.get.responses.200.description" = "Gets the details of the specified authorization server."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/authorizationServers/{authsid}.get.responses.200.headers.ETag.description" = "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/authorizationServers/{authsid}.get.responses.200.headers.ETag.type" = "string"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/authorizationServers/{authsid}.get.responses.200.schema.$ref" = "#/definitions/OAuth2AuthorizationServerContract"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/authorizationServers/{authsid}.get.responses.default.description" = "Error response describing why the operation failed."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/authorizationServers/{authsid}.get.responses.default.schema.$ref" = "#/definitions/ErrorBodyContract"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/authorizationServers/{authsid}.get.tags.length" = 1
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/authorizationServers/{authsid}.get.tags[0]" = "AuthorizationServers"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/authorizationServers/{authsid}.patch.description" = "Updates the details of the authorization server specified by its identifier."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/authorizationServers/{authsid}.patch.operationId" = "AuthorizationServers_Update"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/authorizationServers/{authsid}.patch.parameters.length" = 7
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/authorizationServers/{authsid}.patch.parameters[0].$ref" = "#/parameters/ResourceGroupNameParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/authorizationServers/{authsid}.patch.parameters[1].$ref" = "#/parameters/ServiceNameParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/authorizationServers/{authsid}.patch.parameters[2].description" = "Identifier of the authorization server."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/authorizationServers/{authsid}.patch.parameters[2].in" = "path"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/authorizationServers/{authsid}.patch.parameters[2].name" = "authsid"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/authorizationServers/{authsid}.patch.parameters[2].required" = true
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/authorizationServers/{authsid}.patch.parameters[2].type" = "string"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/authorizationServers/{authsid}.patch.parameters[3].description" = "OAuth2 Server settings Update parameters."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/authorizationServers/{authsid}.patch.parameters[3].in" = "body"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/authorizationServers/{authsid}.patch.parameters[3].name" = "parameters"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/authorizationServers/{authsid}.patch.parameters[3].required" = true
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/authorizationServers/{authsid}.patch.parameters[3].schema.$ref" = "#/definitions/OAuth2AuthorizationServerUpdateContract"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/authorizationServers/{authsid}.patch.parameters[4].description" = "The entity state (Etag) version of the authorization server to update. A value of \"*\" can be used for If-Match to unconditionally apply the operation."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/authorizationServers/{authsid}.patch.parameters[4].in" = "header"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/authorizationServers/{authsid}.patch.parameters[4].name" = "If-Match"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/authorizationServers/{authsid}.patch.parameters[4].required" = true
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/authorizationServers/{authsid}.patch.parameters[4].type" = "string"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/authorizationServers/{authsid}.patch.parameters[5].$ref" = "#/parameters/ApiVersionParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/authorizationServers/{authsid}.patch.parameters[6].$ref" = "#/parameters/SubscriptionIdParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/authorizationServers/{authsid}.patch.responses.204.description" = "The authorization server settings were successfully updated."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/authorizationServers/{authsid}.patch.responses.default.description" = "Error response describing why the operation failed."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/authorizationServers/{authsid}.patch.responses.default.schema.$ref" = "#/definitions/ErrorBodyContract"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/authorizationServers/{authsid}.patch.tags.length" = 1
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/authorizationServers/{authsid}.patch.tags[0]" = "AuthorizationServers"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/authorizationServers/{authsid}.put.description" = "Creates new authorization server or updates an existing authorization server."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/authorizationServers/{authsid}.put.operationId" = "AuthorizationServers_CreateOrUpdate"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/authorizationServers/{authsid}.put.parameters.length" = 6
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/authorizationServers/{authsid}.put.parameters[0].$ref" = "#/parameters/ResourceGroupNameParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/authorizationServers/{authsid}.put.parameters[1].$ref" = "#/parameters/ServiceNameParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/authorizationServers/{authsid}.put.parameters[2].description" = "Identifier of the authorization server."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/authorizationServers/{authsid}.put.parameters[2].in" = "path"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/authorizationServers/{authsid}.put.parameters[2].maxLength" = 256.0
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/authorizationServers/{authsid}.put.parameters[2].name" = "authsid"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/authorizationServers/{authsid}.put.parameters[2].pattern" = "^[^*#&+:<>?]+$"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/authorizationServers/{authsid}.put.parameters[2].required" = true
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/authorizationServers/{authsid}.put.parameters[2].type" = "string"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/authorizationServers/{authsid}.put.parameters[3].description" = "Create or update parameters."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/authorizationServers/{authsid}.put.parameters[3].in" = "body"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/authorizationServers/{authsid}.put.parameters[3].name" = "parameters"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/authorizationServers/{authsid}.put.parameters[3].required" = true
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/authorizationServers/{authsid}.put.parameters[3].schema.$ref" = "#/definitions/OAuth2AuthorizationServerContract"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/authorizationServers/{authsid}.put.parameters[4].$ref" = "#/parameters/ApiVersionParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/authorizationServers/{authsid}.put.parameters[5].$ref" = "#/parameters/SubscriptionIdParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/authorizationServers/{authsid}.put.responses.201.description" = "Authorization server was successfully registered."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/authorizationServers/{authsid}.put.responses.204.description" = "Authorization server is already registered."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/authorizationServers/{authsid}.put.responses.default.description" = "Error response describing why the operation failed."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/authorizationServers/{authsid}.put.responses.default.schema.$ref" = "#/definitions/ErrorBodyContract"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/authorizationServers/{authsid}.put.tags.length" = 1
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/authorizationServers/{authsid}.put.tags[0]" = "AuthorizationServers"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/backends.get.description" = "Lists a collection of backends in the specified service instance."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/backends.get.externalDocs.url" = "https://msdn.microsoft.com/en-us/library/dn935030.aspx"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/backends.get.operationId" = "Backends_ListByService"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/backends.get.parameters.length" = 7
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/backends.get.parameters[0].$ref" = "#/parameters/ResourceGroupNameParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/backends.get.parameters[1].$ref" = "#/parameters/ServiceNameParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/backends.get.parameters[2].description" = "| Field | Supported operators    | Supported functions                         |\n|-------|------------------------|---------------------------------------------|\n| id    | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |\n| host  | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/backends.get.parameters[2].in" = "query"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/backends.get.parameters[2].name" = "$filter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/backends.get.parameters[2].required" = false
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/backends.get.parameters[2].type" = "string"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/backends.get.parameters[3].$ref" = "#/parameters/TopQueryParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/backends.get.parameters[4].$ref" = "#/parameters/SkipQueryParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/backends.get.parameters[5].$ref" = "#/parameters/ApiVersionParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/backends.get.parameters[6].$ref" = "#/parameters/SubscriptionIdParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/backends.get.responses.200.description" = "Lists a collection of Backend entities."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/backends.get.responses.200.schema.$ref" = "#/definitions/BackendCollection"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/backends.get.responses.default.description" = "Error response describing why the operation failed."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/backends.get.responses.default.schema.$ref" = "#/definitions/ErrorBodyContract"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/backends.get.tags.length" = 1
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/backends.get.tags[0]" = "Backends"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/backends.get.x-ms-odata" = "#/definitions/BackendResponse"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/backends.get.x-ms-pageable.nextLinkName" = "nextLink"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/backends/{backendid}.delete.description" = "Deletes the specified backend."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/backends/{backendid}.delete.operationId" = "Backends_Delete"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/backends/{backendid}.delete.parameters.length" = 6
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/backends/{backendid}.delete.parameters[0].$ref" = "#/parameters/ResourceGroupNameParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/backends/{backendid}.delete.parameters[1].$ref" = "#/parameters/ServiceNameParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/backends/{backendid}.delete.parameters[2].$ref" = "#/parameters/BackendIdParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/backends/{backendid}.delete.parameters[3].description" = "The entity state (Etag) version of the backend to delete. A value of \"*\" can be used for If-Match to unconditionally apply the operation."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/backends/{backendid}.delete.parameters[3].in" = "header"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/backends/{backendid}.delete.parameters[3].name" = "If-Match"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/backends/{backendid}.delete.parameters[3].required" = true
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/backends/{backendid}.delete.parameters[3].type" = "string"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/backends/{backendid}.delete.parameters[4].$ref" = "#/parameters/ApiVersionParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/backends/{backendid}.delete.parameters[5].$ref" = "#/parameters/SubscriptionIdParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/backends/{backendid}.delete.responses.204.description" = "The backend was successfully deleted."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/backends/{backendid}.delete.responses.default.description" = "Error response describing why the operation failed."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/backends/{backendid}.delete.responses.default.schema.$ref" = "#/definitions/ErrorBodyContract"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/backends/{backendid}.delete.tags.length" = 1
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/backends/{backendid}.delete.tags[0]" = "Backends"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/backends/{backendid}.get.description" = "Gets the details of the backend specified by its identifier."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/backends/{backendid}.get.operationId" = "Backends_Get"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/backends/{backendid}.get.parameters.length" = 5
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/backends/{backendid}.get.parameters[0].$ref" = "#/parameters/ResourceGroupNameParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/backends/{backendid}.get.parameters[1].$ref" = "#/parameters/ServiceNameParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/backends/{backendid}.get.parameters[2].$ref" = "#/parameters/BackendIdParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/backends/{backendid}.get.parameters[3].$ref" = "#/parameters/ApiVersionParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/backends/{backendid}.get.parameters[4].$ref" = "#/parameters/SubscriptionIdParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/backends/{backendid}.get.responses.200.description" = "The response body contains the specified Backend entity."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/backends/{backendid}.get.responses.200.headers.ETag.description" = "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/backends/{backendid}.get.responses.200.headers.ETag.type" = "string"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/backends/{backendid}.get.responses.200.schema.$ref" = "#/definitions/BackendResponse"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/backends/{backendid}.get.responses.default.description" = "Error response describing why the operation failed."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/backends/{backendid}.get.responses.default.schema.$ref" = "#/definitions/ErrorBodyContract"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/backends/{backendid}.get.tags.length" = 1
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/backends/{backendid}.get.tags[0]" = "Backends"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/backends/{backendid}.patch.description" = "Updates an existing backend."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/backends/{backendid}.patch.operationId" = "Backends_Update"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/backends/{backendid}.patch.parameters.length" = 7
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/backends/{backendid}.patch.parameters[0].$ref" = "#/parameters/ResourceGroupNameParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/backends/{backendid}.patch.parameters[1].$ref" = "#/parameters/ServiceNameParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/backends/{backendid}.patch.parameters[2].$ref" = "#/parameters/BackendIdParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/backends/{backendid}.patch.parameters[3].description" = "Update parameters."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/backends/{backendid}.patch.parameters[3].in" = "body"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/backends/{backendid}.patch.parameters[3].name" = "parameters"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/backends/{backendid}.patch.parameters[3].required" = true
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/backends/{backendid}.patch.parameters[3].schema.$ref" = "#/definitions/BackendUpdateParameters"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/backends/{backendid}.patch.parameters[4].description" = "The entity state (Etag) version of the backend to update. A value of \"*\" can be used for If-Match to unconditionally apply the operation."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/backends/{backendid}.patch.parameters[4].in" = "header"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/backends/{backendid}.patch.parameters[4].name" = "If-Match"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/backends/{backendid}.patch.parameters[4].required" = true
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/backends/{backendid}.patch.parameters[4].type" = "string"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/backends/{backendid}.patch.parameters[5].$ref" = "#/parameters/ApiVersionParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/backends/{backendid}.patch.parameters[6].$ref" = "#/parameters/SubscriptionIdParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/backends/{backendid}.patch.responses.204.description" = "The existing backend was successfully updated."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/backends/{backendid}.patch.responses.default.description" = "Error response describing why the operation failed."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/backends/{backendid}.patch.responses.default.schema.$ref" = "#/definitions/ErrorBodyContract"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/backends/{backendid}.patch.tags.length" = 1
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/backends/{backendid}.patch.tags[0]" = "Backends"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/backends/{backendid}.put.description" = "Creates or Updates a backend."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/backends/{backendid}.put.operationId" = "Backends_CreateOrUpdate"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/backends/{backendid}.put.parameters.length" = 6
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/backends/{backendid}.put.parameters[0].$ref" = "#/parameters/ResourceGroupNameParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/backends/{backendid}.put.parameters[1].$ref" = "#/parameters/ServiceNameParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/backends/{backendid}.put.parameters[2].$ref" = "#/parameters/BackendIdParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/backends/{backendid}.put.parameters[3].description" = "Create parameters."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/backends/{backendid}.put.parameters[3].in" = "body"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/backends/{backendid}.put.parameters[3].name" = "parameters"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/backends/{backendid}.put.parameters[3].required" = true
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/backends/{backendid}.put.parameters[3].schema.$ref" = "#/definitions/BackendContract"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/backends/{backendid}.put.parameters[4].$ref" = "#/parameters/ApiVersionParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/backends/{backendid}.put.parameters[5].$ref" = "#/parameters/SubscriptionIdParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/backends/{backendid}.put.responses.201.description" = "Backend was successfully created."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/backends/{backendid}.put.responses.204.description" = "The existing backend was successfully updated."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/backends/{backendid}.put.responses.default.description" = "Error response describing why the operation failed."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/backends/{backendid}.put.responses.default.schema.$ref" = "#/definitions/ErrorBodyContract"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/backends/{backendid}.put.tags.length" = 1
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/backends/{backendid}.put.tags[0]" = "Backends"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/certificates.get.description" = "Lists a collection of all certificates in the specified service instance."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/certificates.get.externalDocs.url" = "https://msdn.microsoft.com/en-us/library/azure/dn783483.aspx"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/certificates.get.operationId" = "Certificates_ListByService"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/certificates.get.parameters.length" = 7
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/certificates.get.parameters[0].$ref" = "#/parameters/ResourceGroupNameParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/certificates.get.parameters[1].$ref" = "#/parameters/ServiceNameParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/certificates.get.parameters[2].description" = "| Field          | Supported operators    | Supported functions                         |\n|----------------|------------------------|---------------------------------------------|\n| id             | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |\n| subject        | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |\n| thumbprint     | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |\n| expirationDate | ge, le, eq, ne, gt, lt | N/A                                         |"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/certificates.get.parameters[2].in" = "query"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/certificates.get.parameters[2].name" = "$filter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/certificates.get.parameters[2].required" = false
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/certificates.get.parameters[2].type" = "string"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/certificates.get.parameters[3].$ref" = "#/parameters/TopQueryParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/certificates.get.parameters[4].$ref" = "#/parameters/SkipQueryParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/certificates.get.parameters[5].$ref" = "#/parameters/ApiVersionParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/certificates.get.parameters[6].$ref" = "#/parameters/SubscriptionIdParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/certificates.get.responses.200.description" = "Returns a collection of Certificate entity."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/certificates.get.responses.200.schema.$ref" = "#/definitions/CertificateCollection"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/certificates.get.responses.default.description" = "Error response describing why the operation failed."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/certificates.get.responses.default.schema.$ref" = "#/definitions/ErrorBodyContract"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/certificates.get.tags.length" = 1
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/certificates.get.tags[0]" = "Certificates"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/certificates.get.x-ms-odata" = "#/definitions/CertificateContract"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/certificates.get.x-ms-pageable.nextLinkName" = "nextLink"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/certificates/{certificateId}.delete.description" = "Deletes specific certificate."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/certificates/{certificateId}.delete.operationId" = "Certificates_Delete"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/certificates/{certificateId}.delete.parameters.length" = 6
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/certificates/{certificateId}.delete.parameters[0].$ref" = "#/parameters/ResourceGroupNameParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/certificates/{certificateId}.delete.parameters[1].$ref" = "#/parameters/ServiceNameParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/certificates/{certificateId}.delete.parameters[2].description" = "Identifier of the certificate."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/certificates/{certificateId}.delete.parameters[2].in" = "path"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/certificates/{certificateId}.delete.parameters[2].name" = "certificateId"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/certificates/{certificateId}.delete.parameters[2].required" = true
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/certificates/{certificateId}.delete.parameters[2].type" = "string"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/certificates/{certificateId}.delete.parameters[3].description" = "The entity state (Etag) version of the certificate to delete. A value of \"*\" can be used for If-Match to unconditionally apply the operation."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/certificates/{certificateId}.delete.parameters[3].in" = "header"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/certificates/{certificateId}.delete.parameters[3].name" = "If-Match"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/certificates/{certificateId}.delete.parameters[3].required" = true
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/certificates/{certificateId}.delete.parameters[3].type" = "string"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/certificates/{certificateId}.delete.parameters[4].$ref" = "#/parameters/ApiVersionParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/certificates/{certificateId}.delete.parameters[5].$ref" = "#/parameters/SubscriptionIdParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/certificates/{certificateId}.delete.responses.204.description" = "The certificate was successfully deleted."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/certificates/{certificateId}.delete.responses.default.description" = "Error response describing why the operation failed."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/certificates/{certificateId}.delete.responses.default.schema.$ref" = "#/definitions/ErrorBodyContract"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/certificates/{certificateId}.delete.tags.length" = 1
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/certificates/{certificateId}.delete.tags[0]" = "Certificates"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/certificates/{certificateId}.get.description" = "Gets the details of the certificate specified by its identifier."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/certificates/{certificateId}.get.operationId" = "Certificates_Get"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/certificates/{certificateId}.get.parameters.length" = 5
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/certificates/{certificateId}.get.parameters[0].$ref" = "#/parameters/ResourceGroupNameParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/certificates/{certificateId}.get.parameters[1].$ref" = "#/parameters/ServiceNameParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/certificates/{certificateId}.get.parameters[2].description" = "Identifier of the certificate."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/certificates/{certificateId}.get.parameters[2].in" = "path"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/certificates/{certificateId}.get.parameters[2].name" = "certificateId"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/certificates/{certificateId}.get.parameters[2].required" = true
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/certificates/{certificateId}.get.parameters[2].type" = "string"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/certificates/{certificateId}.get.parameters[3].$ref" = "#/parameters/ApiVersionParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/certificates/{certificateId}.get.parameters[4].$ref" = "#/parameters/SubscriptionIdParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/certificates/{certificateId}.get.responses.200.description" = "The response body contains the specified Certificate entity."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/certificates/{certificateId}.get.responses.200.headers.ETag.description" = "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/certificates/{certificateId}.get.responses.200.headers.ETag.type" = "string"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/certificates/{certificateId}.get.responses.200.schema.$ref" = "#/definitions/CertificateContract"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/certificates/{certificateId}.get.responses.default.description" = "Error response describing why the operation failed."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/certificates/{certificateId}.get.responses.default.schema.$ref" = "#/definitions/ErrorBodyContract"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/certificates/{certificateId}.get.tags.length" = 1
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/certificates/{certificateId}.get.tags[0]" = "Certificates"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/certificates/{certificateId}.put.description" = "Creates or updates the certificate being used for authentication with the backend."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/certificates/{certificateId}.put.externalDocs.description" = "How to secure back-end services using client certificate authentication in Azure API Management"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/certificates/{certificateId}.put.externalDocs.url" = "https://azure.microsoft.com/en-us/documentation/articles/api-management-howto-mutual-certificates/"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/certificates/{certificateId}.put.operationId" = "Certificates_CreateOrUpdate"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/certificates/{certificateId}.put.parameters.length" = 7
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/certificates/{certificateId}.put.parameters[0].$ref" = "#/parameters/ResourceGroupNameParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/certificates/{certificateId}.put.parameters[1].$ref" = "#/parameters/ServiceNameParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/certificates/{certificateId}.put.parameters[2].description" = "Identifier of the certificate entity. Must be unique in the current API Management service instance."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/certificates/{certificateId}.put.parameters[2].in" = "path"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/certificates/{certificateId}.put.parameters[2].maxLength" = 256.0
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/certificates/{certificateId}.put.parameters[2].minLength" = 1.0
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/certificates/{certificateId}.put.parameters[2].name" = "certificateId"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/certificates/{certificateId}.put.parameters[2].pattern" = "^[^*#&+:<>?]+$"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/certificates/{certificateId}.put.parameters[2].required" = true
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/certificates/{certificateId}.put.parameters[2].type" = "string"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/certificates/{certificateId}.put.parameters[3].description" = "Create parameters."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/certificates/{certificateId}.put.parameters[3].in" = "body"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/certificates/{certificateId}.put.parameters[3].name" = "parameters"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/certificates/{certificateId}.put.parameters[3].required" = true
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/certificates/{certificateId}.put.parameters[3].schema.$ref" = "#/definitions/CertificateCreateOrUpdateParameters"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/certificates/{certificateId}.put.parameters[4].description" = "The entity state (Etag) version of the certificate to update. A value of \"*\" can be used for If-Match to unconditionally apply the operation.."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/certificates/{certificateId}.put.parameters[4].in" = "header"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/certificates/{certificateId}.put.parameters[4].name" = "If-Match"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/certificates/{certificateId}.put.parameters[4].required" = false
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/certificates/{certificateId}.put.parameters[4].type" = "string"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/certificates/{certificateId}.put.parameters[5].$ref" = "#/parameters/ApiVersionParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/certificates/{certificateId}.put.parameters[6].$ref" = "#/parameters/SubscriptionIdParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/certificates/{certificateId}.put.responses.201.description" = "The new certificate was successfully added."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/certificates/{certificateId}.put.responses.204.description" = "The certificate details were successfully updated."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/certificates/{certificateId}.put.responses.default.description" = "Error response describing why the operation failed."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/certificates/{certificateId}.put.responses.default.schema.$ref" = "#/definitions/ErrorBodyContract"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/certificates/{certificateId}.put.tags.length" = 1
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/certificates/{certificateId}.put.tags[0]" = "Certificates"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/groups.get.description" = "Lists a collection of groups defined within a service instance."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/groups.get.externalDocs.url" = "https://msdn.microsoft.com/en-us/library/azure/dn776329.aspx"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/groups.get.operationId" = "Groups_ListByService"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/groups.get.parameters.length" = 7
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/groups.get.parameters[0].$ref" = "#/parameters/ResourceGroupNameParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/groups.get.parameters[1].$ref" = "#/parameters/ServiceNameParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/groups.get.parameters[2].description" = "| Field       | Supported operators    | Supported functions                         |\n|-------------|------------------------|---------------------------------------------|\n| id          | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |\n| name        | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |\n| description | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |\n| type        | eq, ne                 | N/A                                         |"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/groups.get.parameters[2].in" = "query"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/groups.get.parameters[2].name" = "$filter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/groups.get.parameters[2].required" = false
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/groups.get.parameters[2].type" = "string"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/groups.get.parameters[3].$ref" = "#/parameters/TopQueryParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/groups.get.parameters[4].$ref" = "#/parameters/SkipQueryParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/groups.get.parameters[5].$ref" = "#/parameters/ApiVersionParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/groups.get.parameters[6].$ref" = "#/parameters/SubscriptionIdParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/groups.get.responses.200.description" = "Lists a collection of Group entities."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/groups.get.responses.200.schema.$ref" = "#/definitions/GroupCollection"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/groups.get.tags.length" = 1
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/groups.get.tags[0]" = "Groups"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/groups.get.x-ms-odata" = "#/definitions/GroupContract"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/groups.get.x-ms-pageable.nextLinkName" = "nextLink"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/groups/{groupId}.delete.description" = "Deletes specific group of the API Management service instance."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/groups/{groupId}.delete.operationId" = "Groups_Delete"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/groups/{groupId}.delete.parameters.length" = 6
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/groups/{groupId}.delete.parameters[0].$ref" = "#/parameters/ResourceGroupNameParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/groups/{groupId}.delete.parameters[1].$ref" = "#/parameters/ServiceNameParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/groups/{groupId}.delete.parameters[2].$ref" = "#/parameters/GroupIdParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/groups/{groupId}.delete.parameters[3].description" = "ETag of the Group Entity. ETag should match the current entity state from the header response of the GET request or it should be * for unconditional update."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/groups/{groupId}.delete.parameters[3].in" = "header"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/groups/{groupId}.delete.parameters[3].name" = "If-Match"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/groups/{groupId}.delete.parameters[3].required" = true
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/groups/{groupId}.delete.parameters[3].type" = "string"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/groups/{groupId}.delete.parameters[4].$ref" = "#/parameters/ApiVersionParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/groups/{groupId}.delete.parameters[5].$ref" = "#/parameters/SubscriptionIdParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/groups/{groupId}.delete.responses.204.description" = "The group was successfully deleted."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/groups/{groupId}.delete.responses.405.description" = "The specified group cannot be updated because it is a built-in group."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/groups/{groupId}.delete.responses.405.schema.$ref" = "#/definitions/ErrorBodyContract"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/groups/{groupId}.delete.responses.default.description" = "Error response describing why the operation failed."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/groups/{groupId}.delete.responses.default.schema.$ref" = "#/definitions/ErrorBodyContract"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/groups/{groupId}.delete.tags.length" = 1
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/groups/{groupId}.delete.tags[0]" = "Groups"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/groups/{groupId}.get.description" = "Gets the details of the group specified by its identifier."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/groups/{groupId}.get.operationId" = "Groups_Get"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/groups/{groupId}.get.parameters.length" = 5
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/groups/{groupId}.get.parameters[0].$ref" = "#/parameters/ResourceGroupNameParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/groups/{groupId}.get.parameters[1].$ref" = "#/parameters/ServiceNameParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/groups/{groupId}.get.parameters[2].$ref" = "#/parameters/GroupIdParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/groups/{groupId}.get.parameters[3].$ref" = "#/parameters/ApiVersionParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/groups/{groupId}.get.parameters[4].$ref" = "#/parameters/SubscriptionIdParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/groups/{groupId}.get.responses.200.description" = "The response body contains the specified Group entity."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/groups/{groupId}.get.responses.200.headers.ETag.description" = "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/groups/{groupId}.get.responses.200.headers.ETag.type" = "string"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/groups/{groupId}.get.responses.200.schema.$ref" = "#/definitions/GroupContract"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/groups/{groupId}.get.responses.default.description" = "Error response describing why the operation failed."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/groups/{groupId}.get.responses.default.schema.$ref" = "#/definitions/ErrorBodyContract"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/groups/{groupId}.get.tags.length" = 1
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/groups/{groupId}.get.tags[0]" = "Groups"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/groups/{groupId}.patch.description" = "Updates the details of the group specified by its identifier."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/groups/{groupId}.patch.operationId" = "Groups_Update"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/groups/{groupId}.patch.parameters.length" = 7
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/groups/{groupId}.patch.parameters[0].$ref" = "#/parameters/ResourceGroupNameParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/groups/{groupId}.patch.parameters[1].$ref" = "#/parameters/ServiceNameParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/groups/{groupId}.patch.parameters[2].$ref" = "#/parameters/GroupIdParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/groups/{groupId}.patch.parameters[3].description" = "Update parameters."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/groups/{groupId}.patch.parameters[3].in" = "body"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/groups/{groupId}.patch.parameters[3].name" = "parameters"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/groups/{groupId}.patch.parameters[3].required" = true
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/groups/{groupId}.patch.parameters[3].schema.$ref" = "#/definitions/GroupUpdateParameters"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/groups/{groupId}.patch.parameters[4].description" = "ETag of the Group Entity. ETag should match the current entity state from the header response of the GET request or it should be * for unconditional update."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/groups/{groupId}.patch.parameters[4].in" = "header"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/groups/{groupId}.patch.parameters[4].name" = "If-Match"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/groups/{groupId}.patch.parameters[4].required" = true
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/groups/{groupId}.patch.parameters[4].type" = "string"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/groups/{groupId}.patch.parameters[5].$ref" = "#/parameters/ApiVersionParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/groups/{groupId}.patch.parameters[6].$ref" = "#/parameters/SubscriptionIdParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/groups/{groupId}.patch.responses.204.description" = "The group details were successfully updated."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/groups/{groupId}.patch.responses.405.description" = "The specified group cannot be updated because it is a built-in group."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/groups/{groupId}.patch.responses.405.schema.$ref" = "#/definitions/ErrorBodyContract"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/groups/{groupId}.patch.responses.default.description" = "Error response describing why the operation failed."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/groups/{groupId}.patch.responses.default.schema.$ref" = "#/definitions/ErrorBodyContract"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/groups/{groupId}.patch.tags.length" = 1
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/groups/{groupId}.patch.tags[0]" = "Groups"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/groups/{groupId}.put.description" = "Creates or Updates a group."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/groups/{groupId}.put.operationId" = "Groups_CreateOrUpdate"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/groups/{groupId}.put.parameters.length" = 6
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/groups/{groupId}.put.parameters[0].$ref" = "#/parameters/ResourceGroupNameParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/groups/{groupId}.put.parameters[1].$ref" = "#/parameters/ServiceNameParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/groups/{groupId}.put.parameters[2].$ref" = "#/parameters/GroupIdParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/groups/{groupId}.put.parameters[3].description" = "Create parameters."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/groups/{groupId}.put.parameters[3].in" = "body"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/groups/{groupId}.put.parameters[3].name" = "parameters"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/groups/{groupId}.put.parameters[3].required" = true
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/groups/{groupId}.put.parameters[3].schema.$ref" = "#/definitions/GroupCreateParameters"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/groups/{groupId}.put.parameters[4].$ref" = "#/parameters/ApiVersionParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/groups/{groupId}.put.parameters[5].$ref" = "#/parameters/SubscriptionIdParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/groups/{groupId}.put.responses.201.description" = "Group was created succesfully."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/groups/{groupId}.put.responses.204.description" = "Group already exists."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/groups/{groupId}.put.responses.default.description" = "Error response describing why the operation failed."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/groups/{groupId}.put.responses.default.schema.$ref" = "#/definitions/ErrorBodyContract"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/groups/{groupId}.put.tags.length" = 1
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/groups/{groupId}.put.tags[0]" = "Groups"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/groups/{groupId}/users.get.description" = "Lists a collection of the members of the group, specified by its identifier."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/groups/{groupId}/users.get.operationId" = "GroupUsers_ListByGroup"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/groups/{groupId}/users.get.parameters.length" = 8
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/groups/{groupId}/users.get.parameters[0].$ref" = "#/parameters/ResourceGroupNameParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/groups/{groupId}/users.get.parameters[1].$ref" = "#/parameters/ServiceNameParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/groups/{groupId}/users.get.parameters[2].$ref" = "#/parameters/GroupIdParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/groups/{groupId}/users.get.parameters[3].description" = "| Field            | Supported operators    | Supported functions               |\n|------------------|------------------------|-----------------------------------|\n| id               | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |\n| firstName        | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |\n| lastName         | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |\n| email            | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |\n| state            | eq                     | N/A                               |\n| registrationDate | ge, le, eq, ne, gt, lt | N/A                               |\n| note             | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/groups/{groupId}/users.get.parameters[3].in" = "query"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/groups/{groupId}/users.get.parameters[3].name" = "$filter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/groups/{groupId}/users.get.parameters[3].required" = false
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/groups/{groupId}/users.get.parameters[3].type" = "string"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/groups/{groupId}/users.get.parameters[4].$ref" = "#/parameters/TopQueryParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/groups/{groupId}/users.get.parameters[5].$ref" = "#/parameters/SkipQueryParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/groups/{groupId}/users.get.parameters[6].$ref" = "#/parameters/ApiVersionParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/groups/{groupId}/users.get.parameters[7].$ref" = "#/parameters/SubscriptionIdParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/groups/{groupId}/users.get.responses.200.description" = "Lists a collection of user entities associated with the group."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/groups/{groupId}/users.get.responses.200.schema.$ref" = "#/definitions/UserCollection"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/groups/{groupId}/users.get.responses.default.description" = "Error response describing why the operation failed."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/groups/{groupId}/users.get.responses.default.schema.$ref" = "#/definitions/ErrorBodyContract"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/groups/{groupId}/users.get.tags.length" = 1
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/groups/{groupId}/users.get.tags[0]" = "GroupUsers"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/groups/{groupId}/users.get.x-ms-odata" = "#/definitions/UserContract"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/groups/{groupId}/users.get.x-ms-pageable.nextLinkName" = "nextLink"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/groups/{groupId}/users/{uid}.delete.description" = "Remove existing user from existing group."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/groups/{groupId}/users/{uid}.delete.operationId" = "GroupUsers_Remove"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/groups/{groupId}/users/{uid}.delete.parameters.length" = 6
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/groups/{groupId}/users/{uid}.delete.parameters[0].$ref" = "#/parameters/ResourceGroupNameParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/groups/{groupId}/users/{uid}.delete.parameters[1].$ref" = "#/parameters/ServiceNameParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/groups/{groupId}/users/{uid}.delete.parameters[2].$ref" = "#/parameters/GroupIdParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/groups/{groupId}/users/{uid}.delete.parameters[3].$ref" = "#/parameters/UserIdParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/groups/{groupId}/users/{uid}.delete.parameters[4].$ref" = "#/parameters/ApiVersionParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/groups/{groupId}/users/{uid}.delete.parameters[5].$ref" = "#/parameters/SubscriptionIdParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/groups/{groupId}/users/{uid}.delete.responses.204.description" = "The user was successfully removed from the group.."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/groups/{groupId}/users/{uid}.delete.responses.405.description" = "Attempt was made to add a user to a built-in group. Built-in group membership is managed by the system."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/groups/{groupId}/users/{uid}.delete.responses.405.schema.$ref" = "#/definitions/ErrorBodyContract"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/groups/{groupId}/users/{uid}.delete.responses.default.description" = "Error response describing why the operation failed."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/groups/{groupId}/users/{uid}.delete.responses.default.schema.$ref" = "#/definitions/ErrorBodyContract"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/groups/{groupId}/users/{uid}.delete.tags.length" = 1
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/groups/{groupId}/users/{uid}.delete.tags[0]" = "GroupUsers"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/groups/{groupId}/users/{uid}.put.description" = "Adds a user to the specified group."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/groups/{groupId}/users/{uid}.put.operationId" = "GroupUsers_Add"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/groups/{groupId}/users/{uid}.put.parameters.length" = 6
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/groups/{groupId}/users/{uid}.put.parameters[0].$ref" = "#/parameters/ResourceGroupNameParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/groups/{groupId}/users/{uid}.put.parameters[1].$ref" = "#/parameters/ServiceNameParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/groups/{groupId}/users/{uid}.put.parameters[2].$ref" = "#/parameters/GroupIdParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/groups/{groupId}/users/{uid}.put.parameters[3].$ref" = "#/parameters/UserIdParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/groups/{groupId}/users/{uid}.put.parameters[4].$ref" = "#/parameters/ApiVersionParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/groups/{groupId}/users/{uid}.put.parameters[5].$ref" = "#/parameters/SubscriptionIdParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/groups/{groupId}/users/{uid}.put.responses.201.description" = "The user was successfully added to the group."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/groups/{groupId}/users/{uid}.put.responses.204.description" = "The specified user is already a member of the specified group."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/groups/{groupId}/users/{uid}.put.responses.405.description" = "Attempt was made to add a user to a built-in group. Built-in group membership is managed by the system."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/groups/{groupId}/users/{uid}.put.responses.405.schema.$ref" = "#/definitions/ErrorBodyContract"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/groups/{groupId}/users/{uid}.put.responses.default.description" = "Error response describing why the operation failed."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/groups/{groupId}/users/{uid}.put.responses.default.schema.$ref" = "#/definitions/ErrorBodyContract"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/groups/{groupId}/users/{uid}.put.tags.length" = 1
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/groups/{groupId}/users/{uid}.put.tags[0]" = "GroupUsers"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/identityProviders.get.description" = "Lists a collection of Identity Provider configured in the specified service instance."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/identityProviders.get.operationId" = "IdentityProviders_ListByService"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/identityProviders.get.parameters.length" = 4
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/identityProviders.get.parameters[0].$ref" = "#/parameters/SubscriptionIdParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/identityProviders.get.parameters[1].$ref" = "#/parameters/ResourceGroupNameParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/identityProviders.get.parameters[2].$ref" = "#/parameters/ServiceNameParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/identityProviders.get.parameters[3].$ref" = "#/parameters/ApiVersionParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/identityProviders.get.responses.200.description" = "Lists a collection of Identity Providers."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/identityProviders.get.responses.200.schema.$ref" = "#/definitions/IdentityProviderList"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/identityProviders.get.responses.default.description" = "Error response describing why the operation failed."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/identityProviders.get.responses.default.schema.$ref" = "#/definitions/ErrorBodyContract"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/identityProviders.get.tags.length" = 1
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/identityProviders.get.tags[0]" = "IdentityProvider"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/identityProviders/{identityProviderName}.delete.description" = "Deletes the specified identity provider configuration."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/identityProviders/{identityProviderName}.delete.operationId" = "IdentityProviders_Delete"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/identityProviders/{identityProviderName}.delete.parameters.length" = 6
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/identityProviders/{identityProviderName}.delete.parameters[0].$ref" = "#/parameters/ResourceGroupNameParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/identityProviders/{identityProviderName}.delete.parameters[1].$ref" = "#/parameters/ServiceNameParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/identityProviders/{identityProviderName}.delete.parameters[2].$ref" = "#/parameters/IdentityProviderNameParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/identityProviders/{identityProviderName}.delete.parameters[3].description" = "The entity state (Etag) version of the backend to delete. A value of \"*\" can be used for If-Match to unconditionally apply the operation."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/identityProviders/{identityProviderName}.delete.parameters[3].in" = "header"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/identityProviders/{identityProviderName}.delete.parameters[3].name" = "If-Match"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/identityProviders/{identityProviderName}.delete.parameters[3].required" = true
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/identityProviders/{identityProviderName}.delete.parameters[3].type" = "string"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/identityProviders/{identityProviderName}.delete.parameters[4].$ref" = "#/parameters/ApiVersionParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/identityProviders/{identityProviderName}.delete.parameters[5].$ref" = "#/parameters/SubscriptionIdParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/identityProviders/{identityProviderName}.delete.responses.204.description" = "The identity provider configuration was successfully deleted."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/identityProviders/{identityProviderName}.delete.responses.default.description" = "Error response describing why the operation failed."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/identityProviders/{identityProviderName}.delete.responses.default.schema.$ref" = "#/definitions/ErrorBodyContract"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/identityProviders/{identityProviderName}.delete.tags.length" = 1
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/identityProviders/{identityProviderName}.delete.tags[0]" = "IdentityProvider"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/identityProviders/{identityProviderName}.get.description" = "Gets the configuration details of the identity Provider configured in specified service instance."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/identityProviders/{identityProviderName}.get.operationId" = "IdentityProviders_Get"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/identityProviders/{identityProviderName}.get.parameters.length" = 5
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/identityProviders/{identityProviderName}.get.parameters[0].$ref" = "#/parameters/SubscriptionIdParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/identityProviders/{identityProviderName}.get.parameters[1].$ref" = "#/parameters/ResourceGroupNameParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/identityProviders/{identityProviderName}.get.parameters[2].$ref" = "#/parameters/ServiceNameParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/identityProviders/{identityProviderName}.get.parameters[3].$ref" = "#/parameters/IdentityProviderNameParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/identityProviders/{identityProviderName}.get.parameters[4].$ref" = "#/parameters/ApiVersionParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/identityProviders/{identityProviderName}.get.responses.200.description" = "The response body contains the specified IdentityProvider entity configuration details."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/identityProviders/{identityProviderName}.get.responses.200.headers.ETag.description" = "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/identityProviders/{identityProviderName}.get.responses.200.headers.ETag.type" = "string"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/identityProviders/{identityProviderName}.get.responses.200.schema.$ref" = "#/definitions/IdentityProviderContract"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/identityProviders/{identityProviderName}.get.responses.default.description" = "Error response describing why the operation failed."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/identityProviders/{identityProviderName}.get.responses.default.schema.$ref" = "#/definitions/ErrorBodyContract"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/identityProviders/{identityProviderName}.get.tags.length" = 1
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/identityProviders/{identityProviderName}.get.tags[0]" = "IdentityProvider"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/identityProviders/{identityProviderName}.patch.description" = "Updates an existing IdentityProvider configuration."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/identityProviders/{identityProviderName}.patch.operationId" = "IdentityProviders_Update"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/identityProviders/{identityProviderName}.patch.parameters.length" = 7
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/identityProviders/{identityProviderName}.patch.parameters[0].$ref" = "#/parameters/ResourceGroupNameParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/identityProviders/{identityProviderName}.patch.parameters[1].$ref" = "#/parameters/ServiceNameParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/identityProviders/{identityProviderName}.patch.parameters[2].$ref" = "#/parameters/IdentityProviderNameParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/identityProviders/{identityProviderName}.patch.parameters[3].description" = "Update parameters."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/identityProviders/{identityProviderName}.patch.parameters[3].in" = "body"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/identityProviders/{identityProviderName}.patch.parameters[3].name" = "parameters"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/identityProviders/{identityProviderName}.patch.parameters[3].required" = true
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/identityProviders/{identityProviderName}.patch.parameters[3].schema.$ref" = "#/definitions/IdentityProviderUpdateParameters"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/identityProviders/{identityProviderName}.patch.parameters[4].description" = "The entity state (Etag) version of the identity provider configuration to update. A value of \"*\" can be used for If-Match to unconditionally apply the operation."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/identityProviders/{identityProviderName}.patch.parameters[4].in" = "header"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/identityProviders/{identityProviderName}.patch.parameters[4].name" = "If-Match"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/identityProviders/{identityProviderName}.patch.parameters[4].required" = true
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/identityProviders/{identityProviderName}.patch.parameters[4].type" = "string"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/identityProviders/{identityProviderName}.patch.parameters[5].$ref" = "#/parameters/ApiVersionParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/identityProviders/{identityProviderName}.patch.parameters[6].$ref" = "#/parameters/SubscriptionIdParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/identityProviders/{identityProviderName}.patch.responses.204.description" = "The existing identity provider configuration was successfully updated."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/identityProviders/{identityProviderName}.patch.responses.default.description" = "Error response describing why the operation failed."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/identityProviders/{identityProviderName}.patch.responses.default.schema.$ref" = "#/definitions/ErrorBodyContract"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/identityProviders/{identityProviderName}.patch.tags.length" = 1
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/identityProviders/{identityProviderName}.patch.tags[0]" = "IdentityProviders"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/identityProviders/{identityProviderName}.put.description" = "Creates or Updates the IdentityProvider configuration."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/identityProviders/{identityProviderName}.put.operationId" = "IdentityProviders_CreateOrUpdate"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/identityProviders/{identityProviderName}.put.parameters.length" = 6
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/identityProviders/{identityProviderName}.put.parameters[0].$ref" = "#/parameters/ResourceGroupNameParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/identityProviders/{identityProviderName}.put.parameters[1].$ref" = "#/parameters/ServiceNameParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/identityProviders/{identityProviderName}.put.parameters[2].$ref" = "#/parameters/IdentityProviderNameParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/identityProviders/{identityProviderName}.put.parameters[3].description" = "Create parameters."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/identityProviders/{identityProviderName}.put.parameters[3].in" = "body"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/identityProviders/{identityProviderName}.put.parameters[3].name" = "parameters"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/identityProviders/{identityProviderName}.put.parameters[3].required" = true
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/identityProviders/{identityProviderName}.put.parameters[3].schema.$ref" = "#/definitions/IdentityProviderContract"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/identityProviders/{identityProviderName}.put.parameters[4].$ref" = "#/parameters/ApiVersionParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/identityProviders/{identityProviderName}.put.parameters[5].$ref" = "#/parameters/SubscriptionIdParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/identityProviders/{identityProviderName}.put.responses.201.description" = "IdentityProvider configuration were successfully created."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/identityProviders/{identityProviderName}.put.responses.204.description" = "The existing Identity Provider was successfully updated."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/identityProviders/{identityProviderName}.put.responses.default.description" = "Error response describing why the operation failed."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/identityProviders/{identityProviderName}.put.responses.default.schema.$ref" = "#/definitions/ErrorBodyContract"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/identityProviders/{identityProviderName}.put.tags.length" = 1
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/identityProviders/{identityProviderName}.put.tags[0]" = "IdentityProvider"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/loggers.get.description" = "Lists a collection of loggers in the specified service instance."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/loggers.get.externalDocs.url" = "https://msdn.microsoft.com/en-us/library/azure/mt592020.aspx"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/loggers.get.operationId" = "Loggers_ListByService"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/loggers.get.parameters.length" = 7
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/loggers.get.parameters[0].$ref" = "#/parameters/ResourceGroupNameParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/loggers.get.parameters[1].$ref" = "#/parameters/ServiceNameParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/loggers.get.parameters[2].description" = "| Field | Supported operators    | Supported functions                         |\n|-------|------------------------|---------------------------------------------|\n| id    | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |\n| type  | eq                     |                                             |"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/loggers.get.parameters[2].in" = "query"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/loggers.get.parameters[2].name" = "$filter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/loggers.get.parameters[2].required" = false
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/loggers.get.parameters[2].type" = "string"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/loggers.get.parameters[3].$ref" = "#/parameters/TopQueryParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/loggers.get.parameters[4].$ref" = "#/parameters/SkipQueryParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/loggers.get.parameters[5].$ref" = "#/parameters/ApiVersionParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/loggers.get.parameters[6].$ref" = "#/parameters/SubscriptionIdParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/loggers.get.responses.200.description" = "Lists a collection of Logger entities."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/loggers.get.responses.200.schema.$ref" = "#/definitions/LoggerCollection"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/loggers.get.responses.default.description" = "Error response describing why the operation failed."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/loggers.get.responses.default.schema.$ref" = "#/definitions/ErrorBodyContract"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/loggers.get.tags.length" = 1
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/loggers.get.tags[0]" = "Loggers"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/loggers.get.x-ms-odata" = "#/definitions/LoggerResponse"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/loggers.get.x-ms-pageable.nextLinkName" = "nextLink"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/loggers/{loggerid}.delete.description" = "Deletes the specified logger."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/loggers/{loggerid}.delete.operationId" = "Loggers_Delete"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/loggers/{loggerid}.delete.parameters.length" = 6
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/loggers/{loggerid}.delete.parameters[0].$ref" = "#/parameters/ResourceGroupNameParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/loggers/{loggerid}.delete.parameters[1].$ref" = "#/parameters/ServiceNameParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/loggers/{loggerid}.delete.parameters[2].description" = "Identifier of the logger."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/loggers/{loggerid}.delete.parameters[2].in" = "path"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/loggers/{loggerid}.delete.parameters[2].name" = "loggerid"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/loggers/{loggerid}.delete.parameters[2].required" = true
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/loggers/{loggerid}.delete.parameters[2].type" = "string"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/loggers/{loggerid}.delete.parameters[3].description" = "The entity state (Etag) version of the logger to delete. A value of \"*\" can be used for If-Match to unconditionally apply the operation."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/loggers/{loggerid}.delete.parameters[3].in" = "header"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/loggers/{loggerid}.delete.parameters[3].name" = "If-Match"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/loggers/{loggerid}.delete.parameters[3].required" = true
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/loggers/{loggerid}.delete.parameters[3].type" = "string"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/loggers/{loggerid}.delete.parameters[4].$ref" = "#/parameters/ApiVersionParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/loggers/{loggerid}.delete.parameters[5].$ref" = "#/parameters/SubscriptionIdParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/loggers/{loggerid}.delete.responses.204.description" = "The logger was successfully deleted."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/loggers/{loggerid}.delete.responses.default.description" = "Error response describing why the operation failed."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/loggers/{loggerid}.delete.responses.default.schema.$ref" = "#/definitions/ErrorBodyContract"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/loggers/{loggerid}.delete.tags.length" = 1
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/loggers/{loggerid}.delete.tags[0]" = "Loggers"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/loggers/{loggerid}.get.description" = "Gets the details of the logger specified by its identifier."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/loggers/{loggerid}.get.operationId" = "Loggers_Get"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/loggers/{loggerid}.get.parameters.length" = 5
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/loggers/{loggerid}.get.parameters[0].$ref" = "#/parameters/ResourceGroupNameParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/loggers/{loggerid}.get.parameters[1].$ref" = "#/parameters/ServiceNameParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/loggers/{loggerid}.get.parameters[2].description" = "Identifier of the logger."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/loggers/{loggerid}.get.parameters[2].in" = "path"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/loggers/{loggerid}.get.parameters[2].name" = "loggerid"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/loggers/{loggerid}.get.parameters[2].required" = true
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/loggers/{loggerid}.get.parameters[2].type" = "string"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/loggers/{loggerid}.get.parameters[3].$ref" = "#/parameters/ApiVersionParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/loggers/{loggerid}.get.parameters[4].$ref" = "#/parameters/SubscriptionIdParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/loggers/{loggerid}.get.responses.200.description" = "The response body contains the specified Logger entity."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/loggers/{loggerid}.get.responses.200.headers.ETag.description" = "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/loggers/{loggerid}.get.responses.200.headers.ETag.type" = "string"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/loggers/{loggerid}.get.responses.200.schema.$ref" = "#/definitions/LoggerResponse"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/loggers/{loggerid}.get.responses.default.description" = "Error response describing why the operation failed."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/loggers/{loggerid}.get.responses.default.schema.$ref" = "#/definitions/ErrorBodyContract"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/loggers/{loggerid}.get.tags.length" = 1
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/loggers/{loggerid}.get.tags[0]" = "Loggers"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/loggers/{loggerid}.patch.description" = "Updates an existing logger."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/loggers/{loggerid}.patch.operationId" = "Loggers_Update"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/loggers/{loggerid}.patch.parameters.length" = 7
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/loggers/{loggerid}.patch.parameters[0].$ref" = "#/parameters/ResourceGroupNameParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/loggers/{loggerid}.patch.parameters[1].$ref" = "#/parameters/ServiceNameParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/loggers/{loggerid}.patch.parameters[2].description" = "Identifier of the logger."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/loggers/{loggerid}.patch.parameters[2].in" = "path"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/loggers/{loggerid}.patch.parameters[2].name" = "loggerid"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/loggers/{loggerid}.patch.parameters[2].required" = true
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/loggers/{loggerid}.patch.parameters[2].type" = "string"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/loggers/{loggerid}.patch.parameters[3].description" = "Update parameters."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/loggers/{loggerid}.patch.parameters[3].in" = "body"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/loggers/{loggerid}.patch.parameters[3].name" = "parameters"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/loggers/{loggerid}.patch.parameters[3].required" = true
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/loggers/{loggerid}.patch.parameters[3].schema.$ref" = "#/definitions/LoggerUpdateParameters"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/loggers/{loggerid}.patch.parameters[4].description" = "The entity state (Etag) version of the logger to update. A value of \"*\" can be used for If-Match to unconditionally apply the operation."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/loggers/{loggerid}.patch.parameters[4].in" = "header"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/loggers/{loggerid}.patch.parameters[4].name" = "If-Match"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/loggers/{loggerid}.patch.parameters[4].required" = true
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/loggers/{loggerid}.patch.parameters[4].type" = "string"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/loggers/{loggerid}.patch.parameters[5].$ref" = "#/parameters/ApiVersionParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/loggers/{loggerid}.patch.parameters[6].$ref" = "#/parameters/SubscriptionIdParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/loggers/{loggerid}.patch.responses.204.description" = "The existing logger was successfully updated."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/loggers/{loggerid}.patch.responses.default.description" = "Error response describing why the operation failed."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/loggers/{loggerid}.patch.responses.default.schema.$ref" = "#/definitions/ErrorBodyContract"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/loggers/{loggerid}.patch.tags.length" = 1
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/loggers/{loggerid}.patch.tags[0]" = "Loggers"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/loggers/{loggerid}.put.description" = "Creates or Updates a logger."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/loggers/{loggerid}.put.operationId" = "Loggers_CreateOrUpdate"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/loggers/{loggerid}.put.parameters.length" = 6
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/loggers/{loggerid}.put.parameters[0].$ref" = "#/parameters/ResourceGroupNameParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/loggers/{loggerid}.put.parameters[1].$ref" = "#/parameters/ServiceNameParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/loggers/{loggerid}.put.parameters[2].description" = "Identifier of the logger."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/loggers/{loggerid}.put.parameters[2].in" = "path"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/loggers/{loggerid}.put.parameters[2].maxLength" = 256.0
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/loggers/{loggerid}.put.parameters[2].name" = "loggerid"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/loggers/{loggerid}.put.parameters[2].pattern" = "^[^*#&+:<>?]+$"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/loggers/{loggerid}.put.parameters[2].required" = true
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/loggers/{loggerid}.put.parameters[2].type" = "string"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/loggers/{loggerid}.put.parameters[3].description" = "Create parameters."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/loggers/{loggerid}.put.parameters[3].in" = "body"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/loggers/{loggerid}.put.parameters[3].name" = "parameters"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/loggers/{loggerid}.put.parameters[3].required" = true
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/loggers/{loggerid}.put.parameters[3].schema.$ref" = "#/definitions/LoggerCreateParameters"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/loggers/{loggerid}.put.parameters[4].$ref" = "#/parameters/ApiVersionParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/loggers/{loggerid}.put.parameters[5].$ref" = "#/parameters/SubscriptionIdParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/loggers/{loggerid}.put.responses.201.description" = "Logger was successfully created."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/loggers/{loggerid}.put.responses.204.description" = "The existing logger was successfully updated."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/loggers/{loggerid}.put.responses.default.description" = "Error response describing why the operation failed."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/loggers/{loggerid}.put.responses.default.schema.$ref" = "#/definitions/ErrorBodyContract"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/loggers/{loggerid}.put.tags.length" = 1
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/loggers/{loggerid}.put.tags[0]" = "Loggers"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/openidConnectProviders.get.description" = "Lists all OpenID Connect Providers."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/openidConnectProviders.get.operationId" = "OpenIdConnectProviders_ListByService"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/openidConnectProviders.get.parameters.length" = 7
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/openidConnectProviders.get.parameters[0].$ref" = "#/parameters/ResourceGroupNameParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/openidConnectProviders.get.parameters[1].$ref" = "#/parameters/ServiceNameParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/openidConnectProviders.get.parameters[2].description" = "| Field | Supported operators    | Supported functions                         |\n|-------|------------------------|---------------------------------------------|\n| id    | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |\n| name  | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/openidConnectProviders.get.parameters[2].in" = "query"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/openidConnectProviders.get.parameters[2].name" = "$filter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/openidConnectProviders.get.parameters[2].required" = false
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/openidConnectProviders.get.parameters[2].type" = "string"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/openidConnectProviders.get.parameters[3].$ref" = "#/parameters/TopQueryParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/openidConnectProviders.get.parameters[4].$ref" = "#/parameters/SkipQueryParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/openidConnectProviders.get.parameters[5].$ref" = "#/parameters/ApiVersionParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/openidConnectProviders.get.parameters[6].$ref" = "#/parameters/SubscriptionIdParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/openidConnectProviders.get.responses.200.description" = "Lists of all the OpenId Connect Providers."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/openidConnectProviders.get.responses.200.schema.$ref" = "#/definitions/OpenIdConnectProviderCollection"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/openidConnectProviders.get.tags.length" = 1
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/openidConnectProviders.get.tags[0]" = "OpenIdConnectProviders"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/openidConnectProviders.get.x-ms-odata" = "#/definitions/OpenidConnectProviderContract"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/openidConnectProviders.get.x-ms-pageable.nextLinkName" = "nextLink"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/openidConnectProviders/{opid}.delete.description" = "Deletes specific OpenID Connect Provider of the API Management service instance."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/openidConnectProviders/{opid}.delete.operationId" = "OpenIdConnectProviders_Delete"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/openidConnectProviders/{opid}.delete.parameters.length" = 6
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/openidConnectProviders/{opid}.delete.parameters[0].$ref" = "#/parameters/ResourceGroupNameParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/openidConnectProviders/{opid}.delete.parameters[1].$ref" = "#/parameters/ServiceNameParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/openidConnectProviders/{opid}.delete.parameters[2].description" = "Identifier of the OpenID Connect Provider."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/openidConnectProviders/{opid}.delete.parameters[2].in" = "path"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/openidConnectProviders/{opid}.delete.parameters[2].name" = "opid"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/openidConnectProviders/{opid}.delete.parameters[2].required" = true
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/openidConnectProviders/{opid}.delete.parameters[2].type" = "string"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/openidConnectProviders/{opid}.delete.parameters[3].description" = "The entity state (Etag) version of the OpenID Connect Provider to delete. A value of \"*\" can be used for If-Match to unconditionally apply the operation."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/openidConnectProviders/{opid}.delete.parameters[3].in" = "header"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/openidConnectProviders/{opid}.delete.parameters[3].name" = "If-Match"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/openidConnectProviders/{opid}.delete.parameters[3].required" = true
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/openidConnectProviders/{opid}.delete.parameters[3].type" = "string"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/openidConnectProviders/{opid}.delete.parameters[4].$ref" = "#/parameters/ApiVersionParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/openidConnectProviders/{opid}.delete.parameters[5].$ref" = "#/parameters/SubscriptionIdParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/openidConnectProviders/{opid}.delete.responses.204.description" = "OpenId Connect Provider was successfully deleted."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/openidConnectProviders/{opid}.delete.responses.405.description" = "The specified OpenIdConnect Provider cannot be deleted because it is in use in a policy. You must remove all references to this property before it can be deleted."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/openidConnectProviders/{opid}.delete.responses.405.schema.$ref" = "#/definitions/ErrorBodyContract"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/openidConnectProviders/{opid}.delete.responses.default.description" = "Error response describing why the operation failed."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/openidConnectProviders/{opid}.delete.responses.default.schema.$ref" = "#/definitions/ErrorBodyContract"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/openidConnectProviders/{opid}.delete.tags.length" = 1
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/openidConnectProviders/{opid}.delete.tags[0]" = "OpenIdConnectProviders"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/openidConnectProviders/{opid}.get.description" = "Gets specific OpenID Connect Provider."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/openidConnectProviders/{opid}.get.operationId" = "OpenIdConnectProviders_Get"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/openidConnectProviders/{opid}.get.parameters.length" = 5
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/openidConnectProviders/{opid}.get.parameters[0].$ref" = "#/parameters/ResourceGroupNameParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/openidConnectProviders/{opid}.get.parameters[1].$ref" = "#/parameters/ServiceNameParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/openidConnectProviders/{opid}.get.parameters[2].description" = "Identifier of the OpenID Connect Provider."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/openidConnectProviders/{opid}.get.parameters[2].in" = "path"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/openidConnectProviders/{opid}.get.parameters[2].name" = "opid"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/openidConnectProviders/{opid}.get.parameters[2].required" = true
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/openidConnectProviders/{opid}.get.parameters[2].type" = "string"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/openidConnectProviders/{opid}.get.parameters[3].$ref" = "#/parameters/ApiVersionParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/openidConnectProviders/{opid}.get.parameters[4].$ref" = "#/parameters/SubscriptionIdParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/openidConnectProviders/{opid}.get.responses.200.description" = "The response body contains the specified OpenId Connect Provider entity."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/openidConnectProviders/{opid}.get.responses.200.headers.ETag.description" = "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/openidConnectProviders/{opid}.get.responses.200.headers.ETag.type" = "string"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/openidConnectProviders/{opid}.get.responses.200.schema.$ref" = "#/definitions/OpenidConnectProviderContract"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/openidConnectProviders/{opid}.get.responses.default.description" = "Error response describing why the operation failed."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/openidConnectProviders/{opid}.get.responses.default.schema.$ref" = "#/definitions/ErrorBodyContract"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/openidConnectProviders/{opid}.get.tags.length" = 1
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/openidConnectProviders/{opid}.get.tags[0]" = "OpenIdConnectProviders"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/openidConnectProviders/{opid}.patch.description" = "Updates the specific OpenID Connect Provider."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/openidConnectProviders/{opid}.patch.operationId" = "OpenIdConnectProviders_Update"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/openidConnectProviders/{opid}.patch.parameters.length" = 7
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/openidConnectProviders/{opid}.patch.parameters[0].$ref" = "#/parameters/ResourceGroupNameParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/openidConnectProviders/{opid}.patch.parameters[1].$ref" = "#/parameters/ServiceNameParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/openidConnectProviders/{opid}.patch.parameters[2].description" = "Identifier of the OpenID Connect Provider."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/openidConnectProviders/{opid}.patch.parameters[2].in" = "path"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/openidConnectProviders/{opid}.patch.parameters[2].name" = "opid"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/openidConnectProviders/{opid}.patch.parameters[2].required" = true
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/openidConnectProviders/{opid}.patch.parameters[2].type" = "string"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/openidConnectProviders/{opid}.patch.parameters[3].description" = "Update parameters."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/openidConnectProviders/{opid}.patch.parameters[3].in" = "body"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/openidConnectProviders/{opid}.patch.parameters[3].name" = "parameters"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/openidConnectProviders/{opid}.patch.parameters[3].required" = true
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/openidConnectProviders/{opid}.patch.parameters[3].schema.$ref" = "#/definitions/OpenidConnectProviderUpdateContract"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/openidConnectProviders/{opid}.patch.parameters[4].description" = "The entity state (Etag) version of the OpenID Connect Provider to update. A value of \"*\" can be used for If-Match to unconditionally apply the operation."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/openidConnectProviders/{opid}.patch.parameters[4].in" = "header"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/openidConnectProviders/{opid}.patch.parameters[4].name" = "If-Match"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/openidConnectProviders/{opid}.patch.parameters[4].required" = true
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/openidConnectProviders/{opid}.patch.parameters[4].type" = "string"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/openidConnectProviders/{opid}.patch.parameters[5].$ref" = "#/parameters/ApiVersionParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/openidConnectProviders/{opid}.patch.parameters[6].$ref" = "#/parameters/SubscriptionIdParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/openidConnectProviders/{opid}.patch.responses.204.description" = "OpenId Connect Provider was successfully updated."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/openidConnectProviders/{opid}.patch.responses.default.description" = "Error response describing why the operation failed."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/openidConnectProviders/{opid}.patch.responses.default.schema.$ref" = "#/definitions/ErrorBodyContract"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/openidConnectProviders/{opid}.patch.tags.length" = 1
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/openidConnectProviders/{opid}.patch.tags[0]" = "OpenIdConnectProviders"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/openidConnectProviders/{opid}.put.description" = "Creates or updates the OpenID Connect Provider."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/openidConnectProviders/{opid}.put.operationId" = "OpenIdConnectProviders_CreateOrUpdate"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/openidConnectProviders/{opid}.put.parameters.length" = 6
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/openidConnectProviders/{opid}.put.parameters[0].$ref" = "#/parameters/ResourceGroupNameParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/openidConnectProviders/{opid}.put.parameters[1].$ref" = "#/parameters/ServiceNameParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/openidConnectProviders/{opid}.put.parameters[2].description" = "Identifier of the OpenID Connect Provider."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/openidConnectProviders/{opid}.put.parameters[2].in" = "path"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/openidConnectProviders/{opid}.put.parameters[2].maxLength" = 256.0
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/openidConnectProviders/{opid}.put.parameters[2].name" = "opid"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/openidConnectProviders/{opid}.put.parameters[2].pattern" = "^[^*#&+:<>?]+$"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/openidConnectProviders/{opid}.put.parameters[2].required" = true
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/openidConnectProviders/{opid}.put.parameters[2].type" = "string"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/openidConnectProviders/{opid}.put.parameters[3].description" = "Create parameters."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/openidConnectProviders/{opid}.put.parameters[3].in" = "body"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/openidConnectProviders/{opid}.put.parameters[3].name" = "parameters"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/openidConnectProviders/{opid}.put.parameters[3].required" = true
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/openidConnectProviders/{opid}.put.parameters[3].schema.$ref" = "#/definitions/OpenidConnectProviderCreateContract"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/openidConnectProviders/{opid}.put.parameters[4].$ref" = "#/parameters/ApiVersionParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/openidConnectProviders/{opid}.put.parameters[5].$ref" = "#/parameters/SubscriptionIdParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/openidConnectProviders/{opid}.put.responses.201.description" = "OpenIdConnect Provider was successfully created."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/openidConnectProviders/{opid}.put.responses.204.description" = "OpenIdConnect Provider was successfully updated."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/openidConnectProviders/{opid}.put.responses.default.description" = "Error response describing why the operation failed."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/openidConnectProviders/{opid}.put.responses.default.schema.$ref" = "#/definitions/ErrorBodyContract"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/openidConnectProviders/{opid}.put.tags.length" = 1
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/openidConnectProviders/{opid}.put.tags[0]" = "OpenIdConnectProviders"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/policySnippets.get.description" = "Lists all policy snippets."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/policySnippets.get.operationId" = "PolicySnippets_ListByService"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/policySnippets.get.parameters.length" = 5
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/policySnippets.get.parameters[0].$ref" = "#/parameters/ResourceGroupNameParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/policySnippets.get.parameters[1].$ref" = "#/parameters/ServiceNameParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/policySnippets.get.parameters[2].description" = "Policy scope."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/policySnippets.get.parameters[2].enum.length" = 5
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/policySnippets.get.parameters[2].enum[0]" = "Tenant"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/policySnippets.get.parameters[2].enum[1]" = "Product"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/policySnippets.get.parameters[2].enum[2]" = "Api"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/policySnippets.get.parameters[2].enum[3]" = "Operation"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/policySnippets.get.parameters[2].enum[4]" = "All"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/policySnippets.get.parameters[2].in" = "query"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/policySnippets.get.parameters[2].name" = "scope"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/policySnippets.get.parameters[2].required" = false
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/policySnippets.get.parameters[2].type" = "string"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/policySnippets.get.parameters[2].x-ms-enum.modelAsString" = false
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/policySnippets.get.parameters[2].x-ms-enum.name" = "PolicyScopeContract"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/policySnippets.get.parameters[3].$ref" = "#/parameters/ApiVersionParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/policySnippets.get.parameters[4].$ref" = "#/parameters/SubscriptionIdParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/policySnippets.get.responses.200.description" = "Returns an array of Policy Contracts."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/policySnippets.get.responses.200.schema.items.$ref" = "#/definitions/PolicySnippetContract"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/policySnippets.get.responses.200.schema.type" = "array"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/policySnippets.get.tags.length" = 1
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/policySnippets.get.tags[0]" = "PolicySnippets"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products.get.description" = "Lists a collection of products in the specified service instance."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products.get.externalDocs.url" = "https://msdn.microsoft.com/en-us/library/azure/dn776336.aspx"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products.get.operationId" = "Products_ListByService"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products.get.parameters.length" = 8
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products.get.parameters[0].$ref" = "#/parameters/ResourceGroupNameParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products.get.parameters[1].$ref" = "#/parameters/ServiceNameParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products.get.parameters[2].description" = "| Field       | Supported operators    | Supported functions                         |\n|-------------|------------------------|---------------------------------------------|\n| id          | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |\n| name        | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |\n| description | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |\n| terms       | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |\n| state       | eq                     |                                             |"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products.get.parameters[2].in" = "query"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products.get.parameters[2].name" = "$filter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products.get.parameters[2].required" = false
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products.get.parameters[2].type" = "string"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products.get.parameters[3].$ref" = "#/parameters/TopQueryParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products.get.parameters[4].$ref" = "#/parameters/SkipQueryParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products.get.parameters[5].description" = "When set to true, the response contains an array of groups that have visibility to the product. The default is false."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products.get.parameters[5].in" = "query"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products.get.parameters[5].name" = "expandGroups"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products.get.parameters[5].required" = false
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products.get.parameters[5].type" = "boolean"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products.get.parameters[6].$ref" = "#/parameters/ApiVersionParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products.get.parameters[7].$ref" = "#/parameters/SubscriptionIdParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products.get.responses.200.description" = "A Collection of the Product entities for the specified API Management service instance."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products.get.responses.200.schema.$ref" = "#/definitions/ProductCollection"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products.get.responses.default.description" = "Error response describing why the operation failed."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products.get.responses.default.schema.$ref" = "#/definitions/ErrorBodyContract"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products.get.tags.length" = 1
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products.get.tags[0]" = "Products"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products.get.x-ms-odata" = "#/definitions/ProductContract"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products.get.x-ms-pageable.nextLinkName" = "nextLink"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}.delete.description" = "Delete product."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}.delete.operationId" = "Products_Delete"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}.delete.parameters.length" = 7
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}.delete.parameters[0].$ref" = "#/parameters/ResourceGroupNameParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}.delete.parameters[1].$ref" = "#/parameters/ServiceNameParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}.delete.parameters[2].$ref" = "#/parameters/ProductIdParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}.delete.parameters[3].description" = "Delete existing subscriptions to the product or not."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}.delete.parameters[3].in" = "query"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}.delete.parameters[3].name" = "deleteSubscriptions"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}.delete.parameters[3].required" = false
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}.delete.parameters[3].type" = "boolean"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}.delete.parameters[4].description" = "ETag of the Product Entity. ETag should match the current entity state from the header response of the GET request or it should be * for unconditional update."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}.delete.parameters[4].in" = "header"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}.delete.parameters[4].name" = "If-Match"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}.delete.parameters[4].required" = true
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}.delete.parameters[4].type" = "string"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}.delete.parameters[5].$ref" = "#/parameters/ApiVersionParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}.delete.parameters[6].$ref" = "#/parameters/SubscriptionIdParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}.delete.responses.204.description" = "The product was successfully deleted."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}.delete.responses.default.description" = "Error response describing why the operation failed."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}.delete.responses.default.schema.$ref" = "#/definitions/ErrorBodyContract"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}.delete.tags.length" = 1
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}.delete.tags[0]" = "Products"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}.get.description" = "Gets the details of the product specified by its identifier."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}.get.operationId" = "Products_Get"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}.get.parameters.length" = 5
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}.get.parameters[0].$ref" = "#/parameters/ResourceGroupNameParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}.get.parameters[1].$ref" = "#/parameters/ServiceNameParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}.get.parameters[2].$ref" = "#/parameters/ProductIdParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}.get.parameters[3].$ref" = "#/parameters/ApiVersionParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}.get.parameters[4].$ref" = "#/parameters/SubscriptionIdParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}.get.responses.200.description" = "The response body contains the specified Product entity."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}.get.responses.200.headers.ETag.description" = "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}.get.responses.200.headers.ETag.type" = "string"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}.get.responses.200.schema.$ref" = "#/definitions/ProductContract"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}.get.responses.default.description" = "Error response describing why the operation failed."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}.get.responses.default.schema.$ref" = "#/definitions/ErrorBodyContract"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}.get.tags.length" = 1
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}.get.tags[0]" = "Products"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}.patch.description" = "Update product."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}.patch.operationId" = "Products_Update"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}.patch.parameters.length" = 7
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}.patch.parameters[0].$ref" = "#/parameters/ResourceGroupNameParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}.patch.parameters[1].$ref" = "#/parameters/ServiceNameParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}.patch.parameters[2].$ref" = "#/parameters/ProductIdParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}.patch.parameters[3].description" = "Update parameters."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}.patch.parameters[3].in" = "body"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}.patch.parameters[3].name" = "parameters"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}.patch.parameters[3].required" = true
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}.patch.parameters[3].schema.$ref" = "#/definitions/ProductUpdateParameters"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}.patch.parameters[4].description" = "ETag of the Product Entity. ETag should match the current entity state from the header response of the GET request or it should be * for unconditional update."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}.patch.parameters[4].in" = "header"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}.patch.parameters[4].name" = "If-Match"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}.patch.parameters[4].required" = true
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}.patch.parameters[4].type" = "string"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}.patch.parameters[5].$ref" = "#/parameters/ApiVersionParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}.patch.parameters[6].$ref" = "#/parameters/SubscriptionIdParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}.patch.responses.204.description" = "No Content in case of Update Successfull."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}.patch.responses.default.description" = "Error response describing why the operation failed."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}.patch.responses.default.schema.$ref" = "#/definitions/ErrorBodyContract"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}.patch.tags.length" = 1
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}.patch.tags[0]" = "Products"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}.put.description" = "Creates or Updates a product."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}.put.operationId" = "Products_CreateOrUpdate"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}.put.parameters.length" = 6
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}.put.parameters[0].$ref" = "#/parameters/ResourceGroupNameParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}.put.parameters[1].$ref" = "#/parameters/ServiceNameParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}.put.parameters[2].$ref" = "#/parameters/ProductIdParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}.put.parameters[3].description" = "Create or update parameters."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}.put.parameters[3].in" = "body"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}.put.parameters[3].name" = "parameters"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}.put.parameters[3].required" = true
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}.put.parameters[3].schema.$ref" = "#/definitions/ProductContract"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}.put.parameters[4].$ref" = "#/parameters/ApiVersionParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}.put.parameters[5].$ref" = "#/parameters/SubscriptionIdParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}.put.responses.201.description" = "Product was successfully created."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}.put.responses.204.description" = "Product already exists."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}.put.responses.default.description" = "Error response describing why the operation failed."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}.put.responses.default.schema.$ref" = "#/definitions/ErrorBodyContract"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}.put.tags.length" = 1
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}.put.tags[0]" = "Products"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}/apis.get.description" = "Lists a collection of the APIs associated with a product."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}/apis.get.operationId" = "ProductApis_ListByProduct"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}/apis.get.parameters.length" = 8
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}/apis.get.parameters[0].$ref" = "#/parameters/ResourceGroupNameParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}/apis.get.parameters[1].$ref" = "#/parameters/ServiceNameParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}/apis.get.parameters[2].$ref" = "#/parameters/ProductIdParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}/apis.get.parameters[3].description" = "| Field       | Supported operators    | Supported functions                         |\n|-------------|------------------------|---------------------------------------------|\n| id          | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |\n| name        | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |\n| description | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |\n| serviceUrl  | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |\n| path        | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |\n"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}/apis.get.parameters[3].in" = "query"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}/apis.get.parameters[3].name" = "$filter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}/apis.get.parameters[3].required" = false
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}/apis.get.parameters[3].type" = "string"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}/apis.get.parameters[4].$ref" = "#/parameters/TopQueryParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}/apis.get.parameters[5].$ref" = "#/parameters/SkipQueryParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}/apis.get.parameters[6].$ref" = "#/parameters/ApiVersionParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}/apis.get.parameters[7].$ref" = "#/parameters/SubscriptionIdParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}/apis.get.responses.200.description" = "The response body contains a collection of Api entities in the product."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}/apis.get.responses.200.schema.$ref" = "#/definitions/ApiCollection"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}/apis.get.responses.default.description" = "Error response describing why the operation failed."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}/apis.get.responses.default.schema.$ref" = "#/definitions/ErrorBodyContract"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}/apis.get.tags.length" = 1
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}/apis.get.tags[0]" = "ProductApis"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}/apis.get.x-ms-odata" = "#/definitions/ApiContract"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}/apis.get.x-ms-pageable.nextLinkName" = "nextLink"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}/apis/{apiId}.delete.description" = "Deletes the specified API from the specified product."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}/apis/{apiId}.delete.operationId" = "ProductApis_Remove"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}/apis/{apiId}.delete.parameters.length" = 6
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}/apis/{apiId}.delete.parameters[0].$ref" = "#/parameters/ResourceGroupNameParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}/apis/{apiId}.delete.parameters[1].$ref" = "#/parameters/ServiceNameParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}/apis/{apiId}.delete.parameters[2].$ref" = "#/parameters/ProductIdParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}/apis/{apiId}.delete.parameters[3].$ref" = "#/parameters/ApiIdParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}/apis/{apiId}.delete.parameters[4].$ref" = "#/parameters/ApiVersionParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}/apis/{apiId}.delete.parameters[5].$ref" = "#/parameters/SubscriptionIdParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}/apis/{apiId}.delete.responses.204.description" = "The API was successfully removed from the product."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}/apis/{apiId}.delete.responses.default.description" = "Error response describing why the operation failed."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}/apis/{apiId}.delete.responses.default.schema.$ref" = "#/definitions/ErrorBodyContract"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}/apis/{apiId}.delete.tags.length" = 1
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}/apis/{apiId}.delete.tags[0]" = "ProductApis"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}/apis/{apiId}.put.description" = "Adds an API to the specified product."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}/apis/{apiId}.put.operationId" = "ProductApis_Add"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}/apis/{apiId}.put.parameters.length" = 6
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}/apis/{apiId}.put.parameters[0].$ref" = "#/parameters/ResourceGroupNameParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}/apis/{apiId}.put.parameters[1].$ref" = "#/parameters/ServiceNameParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}/apis/{apiId}.put.parameters[2].$ref" = "#/parameters/ProductIdParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}/apis/{apiId}.put.parameters[3].$ref" = "#/parameters/ApiIdParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}/apis/{apiId}.put.parameters[4].$ref" = "#/parameters/ApiVersionParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}/apis/{apiId}.put.parameters[5].$ref" = "#/parameters/SubscriptionIdParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}/apis/{apiId}.put.responses.201.description" = "The API was successfully added to the product."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}/apis/{apiId}.put.responses.204.description" = "The specified API is already added to the product."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}/apis/{apiId}.put.responses.default.description" = "Error response describing why the operation failed."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}/apis/{apiId}.put.responses.default.schema.$ref" = "#/definitions/ErrorBodyContract"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}/apis/{apiId}.put.tags.length" = 1
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}/apis/{apiId}.put.tags[0]" = "ProductApis"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}/groups.get.description" = "Lists the collection of developer groups associated with the specified product."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}/groups.get.operationId" = "ProductGroups_ListByProduct"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}/groups.get.parameters.length" = 8
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}/groups.get.parameters[0].$ref" = "#/parameters/ResourceGroupNameParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}/groups.get.parameters[1].$ref" = "#/parameters/ServiceNameParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}/groups.get.parameters[2].$ref" = "#/parameters/ProductIdParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}/groups.get.parameters[3].description" = "| Field       | Supported operators    | Supported functions                         |\n|-------------|------------------------|---------------------------------------------|\n| id          | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |\n| name        | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |\n| description | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |\n| type        | eq, ne                 | N/A                                         |"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}/groups.get.parameters[3].in" = "query"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}/groups.get.parameters[3].name" = "$filter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}/groups.get.parameters[3].required" = false
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}/groups.get.parameters[3].type" = "string"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}/groups.get.parameters[4].$ref" = "#/parameters/TopQueryParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}/groups.get.parameters[5].$ref" = "#/parameters/SkipQueryParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}/groups.get.parameters[6].$ref" = "#/parameters/ApiVersionParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}/groups.get.parameters[7].$ref" = "#/parameters/SubscriptionIdParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}/groups.get.responses.200.description" = "Lists a collection of Group entities."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}/groups.get.responses.200.schema.$ref" = "#/definitions/GroupCollection"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}/groups.get.responses.default.description" = "Error response describing why the operation failed."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}/groups.get.responses.default.schema.$ref" = "#/definitions/ErrorBodyContract"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}/groups.get.tags.length" = 1
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}/groups.get.tags[0]" = "ProductGroups"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}/groups.get.x-ms-odata" = "#/definitions/GroupContract"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}/groups.get.x-ms-pageable.nextLinkName" = "nextLink"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}/groups/{groupId}.delete.description" = "Deletes the association between the specified group and product."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}/groups/{groupId}.delete.operationId" = "ProductGroups_Remove"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}/groups/{groupId}.delete.parameters.length" = 6
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}/groups/{groupId}.delete.parameters[0].$ref" = "#/parameters/ResourceGroupNameParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}/groups/{groupId}.delete.parameters[1].$ref" = "#/parameters/ServiceNameParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}/groups/{groupId}.delete.parameters[2].$ref" = "#/parameters/ProductIdParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}/groups/{groupId}.delete.parameters[3].$ref" = "#/parameters/GroupIdParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}/groups/{groupId}.delete.parameters[4].$ref" = "#/parameters/ApiVersionParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}/groups/{groupId}.delete.parameters[5].$ref" = "#/parameters/SubscriptionIdParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}/groups/{groupId}.delete.responses.204.description" = "The group was successfully disassociated with the product."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}/groups/{groupId}.delete.responses.400.description" = "Request validation failed.This is typically caused by an invalid product or group id."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}/groups/{groupId}.delete.responses.400.schema.$ref" = "#/definitions/ErrorBodyContract"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}/groups/{groupId}.delete.responses.default.description" = "Error response describing why the operation failed."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}/groups/{groupId}.delete.responses.default.schema.$ref" = "#/definitions/ErrorBodyContract"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}/groups/{groupId}.delete.tags.length" = 1
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}/groups/{groupId}.delete.tags[0]" = "ProductGroups"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}/groups/{groupId}.put.description" = "Adds the association between the specified developer group with the specified product."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}/groups/{groupId}.put.operationId" = "ProductGroups_Add"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}/groups/{groupId}.put.parameters.length" = 6
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}/groups/{groupId}.put.parameters[0].$ref" = "#/parameters/ResourceGroupNameParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}/groups/{groupId}.put.parameters[1].$ref" = "#/parameters/ServiceNameParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}/groups/{groupId}.put.parameters[2].$ref" = "#/parameters/ProductIdParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}/groups/{groupId}.put.parameters[3].$ref" = "#/parameters/GroupIdParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}/groups/{groupId}.put.parameters[4].$ref" = "#/parameters/ApiVersionParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}/groups/{groupId}.put.parameters[5].$ref" = "#/parameters/SubscriptionIdParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}/groups/{groupId}.put.responses.201.description" = "The group was successfully associated with the product.."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}/groups/{groupId}.put.responses.204.description" = "The specified group is already associated with the product."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}/groups/{groupId}.put.responses.default.description" = "Error response describing why the operation failed."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}/groups/{groupId}.put.responses.default.schema.$ref" = "#/definitions/ErrorBodyContract"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}/groups/{groupId}.put.tags.length" = 1
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}/groups/{groupId}.put.tags[0]" = "ProductGroups"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}/subscriptions.get.description" = "Lists the collection of subscriptions to the specified product."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}/subscriptions.get.operationId" = "ProductSubscriptions_ListByProduct"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}/subscriptions.get.parameters.length" = 8
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}/subscriptions.get.parameters[0].$ref" = "#/parameters/ResourceGroupNameParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}/subscriptions.get.parameters[1].$ref" = "#/parameters/ServiceNameParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}/subscriptions.get.parameters[2].$ref" = "#/parameters/ProductIdParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}/subscriptions.get.parameters[3].description" = "| Field        | Supported operators    | Supported functions                         |\n|--------------|------------------------|---------------------------------------------|\n| id           | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |\n| name         | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |\n| stateComment | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |\n| userId       | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |\n| productId    | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |\n| state        | eq                     |                                             |"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}/subscriptions.get.parameters[3].in" = "query"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}/subscriptions.get.parameters[3].name" = "$filter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}/subscriptions.get.parameters[3].required" = false
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}/subscriptions.get.parameters[3].type" = "string"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}/subscriptions.get.parameters[4].$ref" = "#/parameters/TopQueryParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}/subscriptions.get.parameters[5].$ref" = "#/parameters/SkipQueryParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}/subscriptions.get.parameters[6].$ref" = "#/parameters/ApiVersionParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}/subscriptions.get.parameters[7].$ref" = "#/parameters/SubscriptionIdParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}/subscriptions.get.responses.200.description" = "Lists a collection of subscription entities."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}/subscriptions.get.responses.200.schema.$ref" = "#/definitions/SubscriptionCollection"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}/subscriptions.get.responses.default.description" = "Error response describing why the operation failed."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}/subscriptions.get.responses.default.schema.$ref" = "#/definitions/ErrorBodyContract"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}/subscriptions.get.tags.length" = 1
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}/subscriptions.get.tags[0]" = "ProductSubscriptions"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}/subscriptions.get.x-ms-odata" = "#/definitions/SubscriptionContract"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}/subscriptions.get.x-ms-pageable.nextLinkName" = "nextLink"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/properties.get.description" = "Lists a collection of properties defined within a service instance."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/properties.get.externalDocs.url" = "https://msdn.microsoft.com/en-us/library/azure/mt651775.aspx"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/properties.get.operationId" = "Property_ListByService"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/properties.get.parameters.length" = 7
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/properties.get.parameters[0].$ref" = "#/parameters/ResourceGroupNameParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/properties.get.parameters[1].$ref" = "#/parameters/ServiceNameParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/properties.get.parameters[2].description" = "| Field | Supported operators    | Supported functions                                   |\n|-------|------------------------|-------------------------------------------------------|\n| tags  | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith, any, all |\n| name  | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith           |"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/properties.get.parameters[2].in" = "query"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/properties.get.parameters[2].name" = "$filter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/properties.get.parameters[2].required" = false
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/properties.get.parameters[2].type" = "string"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/properties.get.parameters[3].$ref" = "#/parameters/TopQueryParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/properties.get.parameters[4].$ref" = "#/parameters/SkipQueryParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/properties.get.parameters[5].$ref" = "#/parameters/ApiVersionParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/properties.get.parameters[6].$ref" = "#/parameters/SubscriptionIdParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/properties.get.responses.200.description" = "A Collection of the Property entities for the specified API Management service instance."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/properties.get.responses.200.schema.$ref" = "#/definitions/PropertyCollection"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/properties.get.tags.length" = 1
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/properties.get.tags[0]" = "Property"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/properties.get.x-ms-odata" = "#/definitions/PropertyContract"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/properties.get.x-ms-pageable.nextLinkName" = "nextLink"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/properties/{propId}.delete.description" = "Deletes specific property from the the API Management service instance."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/properties/{propId}.delete.operationId" = "Property_Delete"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/properties/{propId}.delete.parameters.length" = 6
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/properties/{propId}.delete.parameters[0].$ref" = "#/parameters/ResourceGroupNameParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/properties/{propId}.delete.parameters[1].$ref" = "#/parameters/ServiceNameParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/properties/{propId}.delete.parameters[2].description" = "Identifier of the property."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/properties/{propId}.delete.parameters[2].in" = "path"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/properties/{propId}.delete.parameters[2].name" = "propId"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/properties/{propId}.delete.parameters[2].required" = true
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/properties/{propId}.delete.parameters[2].type" = "string"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/properties/{propId}.delete.parameters[3].description" = "The entity state (Etag) version of the property to delete. A value of \"*\" can be used for If-Match to unconditionally apply the operation."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/properties/{propId}.delete.parameters[3].in" = "header"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/properties/{propId}.delete.parameters[3].name" = "If-Match"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/properties/{propId}.delete.parameters[3].required" = true
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/properties/{propId}.delete.parameters[3].type" = "string"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/properties/{propId}.delete.parameters[4].$ref" = "#/parameters/ApiVersionParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/properties/{propId}.delete.parameters[5].$ref" = "#/parameters/SubscriptionIdParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/properties/{propId}.delete.responses.204.description" = "Property was successfully deleted."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/properties/{propId}.delete.responses.405.description" = "The specified property cannot be deleted because it is in use in a policy. You must remove all references to this property before it can be deleted."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/properties/{propId}.delete.responses.405.schema.$ref" = "#/definitions/ErrorBodyContract"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/properties/{propId}.delete.responses.default.description" = "Error response describing why the operation failed."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/properties/{propId}.delete.responses.default.schema.$ref" = "#/definitions/ErrorBodyContract"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/properties/{propId}.delete.tags.length" = 1
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/properties/{propId}.delete.tags[0]" = "Property"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/properties/{propId}.get.description" = "Gets the details of the property specified by its identifier."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/properties/{propId}.get.operationId" = "Property_Get"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/properties/{propId}.get.parameters.length" = 5
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/properties/{propId}.get.parameters[0].$ref" = "#/parameters/ResourceGroupNameParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/properties/{propId}.get.parameters[1].$ref" = "#/parameters/ServiceNameParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/properties/{propId}.get.parameters[2].description" = "Identifier of the property."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/properties/{propId}.get.parameters[2].in" = "path"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/properties/{propId}.get.parameters[2].name" = "propId"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/properties/{propId}.get.parameters[2].required" = true
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/properties/{propId}.get.parameters[2].type" = "string"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/properties/{propId}.get.parameters[3].$ref" = "#/parameters/ApiVersionParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/properties/{propId}.get.parameters[4].$ref" = "#/parameters/SubscriptionIdParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/properties/{propId}.get.responses.200.description" = "The response body contains the specified Property entity."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/properties/{propId}.get.responses.200.headers.ETag.description" = "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/properties/{propId}.get.responses.200.headers.ETag.type" = "string"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/properties/{propId}.get.responses.200.schema.$ref" = "#/definitions/PropertyContract"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/properties/{propId}.get.responses.default.description" = "Error response describing why the operation failed."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/properties/{propId}.get.responses.default.schema.$ref" = "#/definitions/ErrorBodyContract"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/properties/{propId}.get.tags.length" = 1
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/properties/{propId}.get.tags[0]" = "Property"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/properties/{propId}.patch.description" = "Updates the specific property."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/properties/{propId}.patch.operationId" = "Property_Update"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/properties/{propId}.patch.parameters.length" = 7
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/properties/{propId}.patch.parameters[0].$ref" = "#/parameters/ResourceGroupNameParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/properties/{propId}.patch.parameters[1].$ref" = "#/parameters/ServiceNameParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/properties/{propId}.patch.parameters[2].description" = "Identifier of the property."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/properties/{propId}.patch.parameters[2].in" = "path"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/properties/{propId}.patch.parameters[2].name" = "propId"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/properties/{propId}.patch.parameters[2].required" = true
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/properties/{propId}.patch.parameters[2].type" = "string"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/properties/{propId}.patch.parameters[3].description" = "Update parameters."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/properties/{propId}.patch.parameters[3].in" = "body"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/properties/{propId}.patch.parameters[3].name" = "parameters"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/properties/{propId}.patch.parameters[3].required" = true
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/properties/{propId}.patch.parameters[3].schema.$ref" = "#/definitions/PropertyUpdateParameters"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/properties/{propId}.patch.parameters[4].description" = "The entity state (Etag) version of the property to update. A value of \"*\" can be used for If-Match to unconditionally apply the operation."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/properties/{propId}.patch.parameters[4].in" = "header"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/properties/{propId}.patch.parameters[4].name" = "If-Match"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/properties/{propId}.patch.parameters[4].required" = true
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/properties/{propId}.patch.parameters[4].type" = "string"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/properties/{propId}.patch.parameters[5].$ref" = "#/parameters/ApiVersionParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/properties/{propId}.patch.parameters[6].$ref" = "#/parameters/SubscriptionIdParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/properties/{propId}.patch.responses.204.description" = "Property was successfully updated."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/properties/{propId}.patch.responses.default.description" = "Error response describing why the operation failed."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/properties/{propId}.patch.responses.default.schema.$ref" = "#/definitions/ErrorBodyContract"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/properties/{propId}.patch.tags.length" = 1
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/properties/{propId}.patch.tags[0]" = "Property"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/properties/{propId}.put.description" = "Creates or updates a property."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/properties/{propId}.put.operationId" = "Property_CreateOrUpdate"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/properties/{propId}.put.parameters.length" = 6
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/properties/{propId}.put.parameters[0].$ref" = "#/parameters/ResourceGroupNameParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/properties/{propId}.put.parameters[1].$ref" = "#/parameters/ServiceNameParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/properties/{propId}.put.parameters[2].description" = "Identifier of the property."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/properties/{propId}.put.parameters[2].in" = "path"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/properties/{propId}.put.parameters[2].maxLength" = 256.0
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/properties/{propId}.put.parameters[2].name" = "propId"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/properties/{propId}.put.parameters[2].pattern" = "^[^*#&+:<>?]+$"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/properties/{propId}.put.parameters[2].required" = true
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/properties/{propId}.put.parameters[2].type" = "string"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/properties/{propId}.put.parameters[3].description" = "Create parameters."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/properties/{propId}.put.parameters[3].in" = "body"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/properties/{propId}.put.parameters[3].name" = "parameters"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/properties/{propId}.put.parameters[3].required" = true
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/properties/{propId}.put.parameters[3].schema.$ref" = "#/definitions/PropertyCreateParameters"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/properties/{propId}.put.parameters[4].$ref" = "#/parameters/ApiVersionParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/properties/{propId}.put.parameters[5].$ref" = "#/parameters/SubscriptionIdParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/properties/{propId}.put.responses.201.description" = "Property was successfully created."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/properties/{propId}.put.responses.204.description" = "Property was successfully updated."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/properties/{propId}.put.responses.default.description" = "Error response describing why the operation failed."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/properties/{propId}.put.responses.default.schema.$ref" = "#/definitions/ErrorBodyContract"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/properties/{propId}.put.tags.length" = 1
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/properties/{propId}.put.tags[0]" = "Property"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/quotas/{quotaCounterKey}.get.description" = "Lists a collection of current quota counter periods associated with the counter-key configured in the policy on the specified service instance. The api does not support paging yet."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/quotas/{quotaCounterKey}.get.externalDocs.description" = "Document describing how to configure the quota policies."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/quotas/{quotaCounterKey}.get.externalDocs.url" = "https://docs.microsoft.com/en-us/azure/api-management/api-management-howto-product-with-rules#a-namepolicies-ato-configure-call-rate-limit-and-quota-policies"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/quotas/{quotaCounterKey}.get.operationId" = "QuotaByCounterKeys_ListByService"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/quotas/{quotaCounterKey}.get.parameters.length" = 5
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/quotas/{quotaCounterKey}.get.parameters[0].$ref" = "#/parameters/SubscriptionIdParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/quotas/{quotaCounterKey}.get.parameters[1].$ref" = "#/parameters/ResourceGroupNameParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/quotas/{quotaCounterKey}.get.parameters[2].$ref" = "#/parameters/ServiceNameParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/quotas/{quotaCounterKey}.get.parameters[3].$ref" = "#/parameters/QuotaCounterKeyParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/quotas/{quotaCounterKey}.get.parameters[4].$ref" = "#/parameters/ApiVersionParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/quotas/{quotaCounterKey}.get.responses.200.description" = "Lists a collection of the quota counter values."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/quotas/{quotaCounterKey}.get.responses.200.schema.$ref" = "#/definitions/QuotaCounterCollection"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/quotas/{quotaCounterKey}.get.responses.default.description" = "Error response describing why the operation failed."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/quotas/{quotaCounterKey}.get.responses.default.schema.$ref" = "#/definitions/ErrorBodyContract"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/quotas/{quotaCounterKey}.get.tags.length" = 1
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/quotas/{quotaCounterKey}.get.tags[0]" = "QuotaByCounterKeys"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/quotas/{quotaCounterKey}.patch.description" = "Updates all the quota counter values specified with the existing quota counter key to a value in the specified service instance. This should be used for reset of the quota counter values."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/quotas/{quotaCounterKey}.patch.operationId" = "QuotaByCounterKeys_Update"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/quotas/{quotaCounterKey}.patch.parameters.length" = 6
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/quotas/{quotaCounterKey}.patch.parameters[0].$ref" = "#/parameters/ResourceGroupNameParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/quotas/{quotaCounterKey}.patch.parameters[1].$ref" = "#/parameters/ServiceNameParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/quotas/{quotaCounterKey}.patch.parameters[2].$ref" = "#/parameters/QuotaCounterKeyParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/quotas/{quotaCounterKey}.patch.parameters[3].description" = "The value of the quota counter to be applied to all quota counter periods."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/quotas/{quotaCounterKey}.patch.parameters[3].in" = "body"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/quotas/{quotaCounterKey}.patch.parameters[3].name" = "parameters"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/quotas/{quotaCounterKey}.patch.parameters[3].required" = true
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/quotas/{quotaCounterKey}.patch.parameters[3].schema.$ref" = "#/definitions/QuotaCounterValueContract"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/quotas/{quotaCounterKey}.patch.parameters[4].$ref" = "#/parameters/ApiVersionParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/quotas/{quotaCounterKey}.patch.parameters[5].$ref" = "#/parameters/SubscriptionIdParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/quotas/{quotaCounterKey}.patch.responses.204.description" = "All the quota counter periods were successfully updated."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/quotas/{quotaCounterKey}.patch.responses.default.description" = "Error response describing why the operation failed."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/quotas/{quotaCounterKey}.patch.responses.default.schema.$ref" = "#/definitions/ErrorBodyContract"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/quotas/{quotaCounterKey}.patch.tags.length" = 1
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/quotas/{quotaCounterKey}.patch.tags[0]" = "QuotaByCounterKeys"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/quotas/{quotaCounterKey}/{quotaPeriodKey}.get.description" = "Gets the value of the quota counter associated with the counter-key in the policy for the specific period in service instance."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/quotas/{quotaCounterKey}/{quotaPeriodKey}.get.externalDocs.description" = "Document describing how to configure the quota policies."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/quotas/{quotaCounterKey}/{quotaPeriodKey}.get.externalDocs.url" = "https://docs.microsoft.com/en-us/azure/api-management/api-management-howto-product-with-rules#a-namepolicies-ato-configure-call-rate-limit-and-quota-policies"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/quotas/{quotaCounterKey}/{quotaPeriodKey}.get.operationId" = "QuotaByPeriodKeys_Get"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/quotas/{quotaCounterKey}/{quotaPeriodKey}.get.parameters.length" = 6
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/quotas/{quotaCounterKey}/{quotaPeriodKey}.get.parameters[0].$ref" = "#/parameters/SubscriptionIdParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/quotas/{quotaCounterKey}/{quotaPeriodKey}.get.parameters[1].$ref" = "#/parameters/ResourceGroupNameParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/quotas/{quotaCounterKey}/{quotaPeriodKey}.get.parameters[2].$ref" = "#/parameters/ServiceNameParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/quotas/{quotaCounterKey}/{quotaPeriodKey}.get.parameters[3].$ref" = "#/parameters/QuotaCounterKeyParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/quotas/{quotaCounterKey}/{quotaPeriodKey}.get.parameters[4].$ref" = "#/parameters/QuotaPeriodKeyParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/quotas/{quotaCounterKey}/{quotaPeriodKey}.get.parameters[5].$ref" = "#/parameters/ApiVersionParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/quotas/{quotaCounterKey}/{quotaPeriodKey}.get.responses.200.description" = "The response body contains the Quota counter details for the specified period."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/quotas/{quotaCounterKey}/{quotaPeriodKey}.get.responses.200.schema.$ref" = "#/definitions/QuotaCounterContract"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/quotas/{quotaCounterKey}/{quotaPeriodKey}.get.responses.default.description" = "Error response describing why the operation failed."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/quotas/{quotaCounterKey}/{quotaPeriodKey}.get.responses.default.schema.$ref" = "#/definitions/ErrorBodyContract"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/quotas/{quotaCounterKey}/{quotaPeriodKey}.get.tags.length" = 1
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/quotas/{quotaCounterKey}/{quotaPeriodKey}.get.tags[0]" = "QuotaByPeriodKeys"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/quotas/{quotaCounterKey}/{quotaPeriodKey}.patch.description" = "Updates an existing quota counter value in the specified service instance."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/quotas/{quotaCounterKey}/{quotaPeriodKey}.patch.operationId" = "QuotaByPeriodKeys_Update"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/quotas/{quotaCounterKey}/{quotaPeriodKey}.patch.parameters.length" = 7
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/quotas/{quotaCounterKey}/{quotaPeriodKey}.patch.parameters[0].$ref" = "#/parameters/ResourceGroupNameParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/quotas/{quotaCounterKey}/{quotaPeriodKey}.patch.parameters[1].$ref" = "#/parameters/ServiceNameParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/quotas/{quotaCounterKey}/{quotaPeriodKey}.patch.parameters[2].$ref" = "#/parameters/QuotaCounterKeyParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/quotas/{quotaCounterKey}/{quotaPeriodKey}.patch.parameters[3].$ref" = "#/parameters/QuotaPeriodKeyParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/quotas/{quotaCounterKey}/{quotaPeriodKey}.patch.parameters[4].description" = "The value of the Quota counter to be applied on the specified period."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/quotas/{quotaCounterKey}/{quotaPeriodKey}.patch.parameters[4].in" = "body"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/quotas/{quotaCounterKey}/{quotaPeriodKey}.patch.parameters[4].name" = "parameters"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/quotas/{quotaCounterKey}/{quotaPeriodKey}.patch.parameters[4].required" = true
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/quotas/{quotaCounterKey}/{quotaPeriodKey}.patch.parameters[4].schema.$ref" = "#/definitions/QuotaCounterValueContract"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/quotas/{quotaCounterKey}/{quotaPeriodKey}.patch.parameters[5].$ref" = "#/parameters/ApiVersionParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/quotas/{quotaCounterKey}/{quotaPeriodKey}.patch.parameters[6].$ref" = "#/parameters/SubscriptionIdParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/quotas/{quotaCounterKey}/{quotaPeriodKey}.patch.responses.204.description" = "The quota counter value was successfully updated."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/quotas/{quotaCounterKey}/{quotaPeriodKey}.patch.responses.default.description" = "Error response describing why the operation failed."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/quotas/{quotaCounterKey}/{quotaPeriodKey}.patch.responses.default.schema.$ref" = "#/definitions/ErrorBodyContract"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/quotas/{quotaCounterKey}/{quotaPeriodKey}.patch.tags.length" = 1
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/quotas/{quotaCounterKey}/{quotaPeriodKey}.patch.tags[0]" = "QuotaByPeriodKeys"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/regions.get.description" = "Lists all azure regions in which the service exists."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/regions.get.operationId" = "Regions_ListByService"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/regions.get.parameters.length" = 4
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/regions.get.parameters[0].$ref" = "#/parameters/ResourceGroupNameParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/regions.get.parameters[1].$ref" = "#/parameters/ServiceNameParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/regions.get.parameters[2].$ref" = "#/parameters/ApiVersionParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/regions.get.parameters[3].$ref" = "#/parameters/SubscriptionIdParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/regions.get.responses.200.description" = "Lists of Regions in which the service is deployed."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/regions.get.responses.200.schema.$ref" = "#/definitions/RegionListResult"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/regions.get.tags.length" = 1
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/regions.get.tags[0]" = "Regions"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/reports/{aggregation}.get.description" = "Lists report records."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/reports/{aggregation}.get.operationId" = "Reports_ListByService"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/reports/{aggregation}.get.parameters.length" = 9
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/reports/{aggregation}.get.parameters[0].$ref" = "#/parameters/ResourceGroupNameParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/reports/{aggregation}.get.parameters[1].$ref" = "#/parameters/ServiceNameParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/reports/{aggregation}.get.parameters[2].description" = "Report aggregation."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/reports/{aggregation}.get.parameters[2].enum.length" = 7
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/reports/{aggregation}.get.parameters[2].enum[0]" = "byApi"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/reports/{aggregation}.get.parameters[2].enum[1]" = "byGeo"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/reports/{aggregation}.get.parameters[2].enum[2]" = "byOperation"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/reports/{aggregation}.get.parameters[2].enum[3]" = "byProduct"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/reports/{aggregation}.get.parameters[2].enum[4]" = "bySubscription"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/reports/{aggregation}.get.parameters[2].enum[5]" = "byTime"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/reports/{aggregation}.get.parameters[2].enum[6]" = "byUser"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/reports/{aggregation}.get.parameters[2].in" = "path"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/reports/{aggregation}.get.parameters[2].name" = "aggregation"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/reports/{aggregation}.get.parameters[2].required" = true
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/reports/{aggregation}.get.parameters[2].type" = "string"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/reports/{aggregation}.get.parameters[2].x-ms-enum.modelAsString" = false
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/reports/{aggregation}.get.parameters[2].x-ms-enum.name" = "ReportsAggregation"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/reports/{aggregation}.get.parameters[3].description" = "The filter to apply on the operation."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/reports/{aggregation}.get.parameters[3].in" = "query"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/reports/{aggregation}.get.parameters[3].name" = "$filter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/reports/{aggregation}.get.parameters[3].required" = false
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/reports/{aggregation}.get.parameters[3].type" = "string"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/reports/{aggregation}.get.parameters[4].$ref" = "#/parameters/TopQueryParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/reports/{aggregation}.get.parameters[5].$ref" = "#/parameters/SkipQueryParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/reports/{aggregation}.get.parameters[6].description" = "By time interval. This value is only applicable to ByTime aggregation. Interval must be multiple of 15 minutes and may not be zero. The value should be in ISO  8601 format (http://en.wikipedia.org/wiki/ISO_8601#Durations).This code can be used to convert TimSpan to a valid interval string: XmlConvert.ToString(new TimeSpan(hours, minutes, secconds))"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/reports/{aggregation}.get.parameters[6].in" = "query"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/reports/{aggregation}.get.parameters[6].name" = "interval"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/reports/{aggregation}.get.parameters[6].required" = false
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/reports/{aggregation}.get.parameters[6].type" = "string"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/reports/{aggregation}.get.parameters[7].$ref" = "#/parameters/ApiVersionParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/reports/{aggregation}.get.parameters[8].$ref" = "#/parameters/SubscriptionIdParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/reports/{aggregation}.get.responses.200.description" = "Lists a collection of Report record."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/reports/{aggregation}.get.responses.200.schema.$ref" = "#/definitions/ReportCollection"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/reports/{aggregation}.get.tags.length" = 1
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/reports/{aggregation}.get.tags[0]" = "Reports"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/reports/{aggregation}.get.x-ms-odata" = "#/definitions/ReportRecordContract"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/reports/{aggregation}.get.x-ms-pageable.nextLinkName" = "nextLink"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/subscriptions.get.description" = "Lists all subscriptions of the API Management service instance."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/subscriptions.get.externalDocs.url" = "https://msdn.microsoft.com/en-us/library/azure/dn776325.aspx"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/subscriptions.get.operationId" = "Subscriptions_ListByService"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/subscriptions.get.parameters.length" = 7
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/subscriptions.get.parameters[0].$ref" = "#/parameters/ResourceGroupNameParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/subscriptions.get.parameters[1].$ref" = "#/parameters/ServiceNameParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/subscriptions.get.parameters[2].description" = "| Field        | Supported operators    | Supported functions                         |\n|--------------|------------------------|---------------------------------------------|\n| id           | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |\n| name         | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |\n| stateComment | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |\n| userId       | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |\n| productId    | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |\n| state        | eq                     |                                             |"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/subscriptions.get.parameters[2].in" = "query"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/subscriptions.get.parameters[2].name" = "$filter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/subscriptions.get.parameters[2].required" = false
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/subscriptions.get.parameters[2].type" = "string"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/subscriptions.get.parameters[3].$ref" = "#/parameters/TopQueryParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/subscriptions.get.parameters[4].$ref" = "#/parameters/SkipQueryParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/subscriptions.get.parameters[5].$ref" = "#/parameters/ApiVersionParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/subscriptions.get.parameters[6].$ref" = "#/parameters/SubscriptionIdParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/subscriptions.get.responses.200.description" = "A collection of the Subscription entities for the specified API Management service instance."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/subscriptions.get.responses.200.schema.$ref" = "#/definitions/SubscriptionCollection"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/subscriptions.get.responses.default.description" = "Error response describing why the operation failed."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/subscriptions.get.responses.default.schema.$ref" = "#/definitions/ErrorBodyContract"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/subscriptions.get.tags.length" = 1
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/subscriptions.get.tags[0]" = "Subscriptions"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/subscriptions.get.x-ms-odata" = "#/definitions/SubscriptionContract"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/subscriptions.get.x-ms-pageable.nextLinkName" = "nextLink"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/subscriptions/{sid}.delete.description" = "Deletes the specified subscription."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/subscriptions/{sid}.delete.operationId" = "Subscriptions_Delete"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/subscriptions/{sid}.delete.parameters.length" = 6
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/subscriptions/{sid}.delete.parameters[0].$ref" = "#/parameters/ResourceGroupNameParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/subscriptions/{sid}.delete.parameters[1].$ref" = "#/parameters/ServiceNameParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/subscriptions/{sid}.delete.parameters[2].description" = "Identifier of the subscription."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/subscriptions/{sid}.delete.parameters[2].in" = "path"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/subscriptions/{sid}.delete.parameters[2].name" = "sid"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/subscriptions/{sid}.delete.parameters[2].required" = true
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/subscriptions/{sid}.delete.parameters[2].type" = "string"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/subscriptions/{sid}.delete.parameters[3].description" = "ETag of the Subscription Entity. ETag should match the current entity state from the header response of the GET request or it should be * for unconditional update."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/subscriptions/{sid}.delete.parameters[3].in" = "header"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/subscriptions/{sid}.delete.parameters[3].name" = "If-Match"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/subscriptions/{sid}.delete.parameters[3].required" = true
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/subscriptions/{sid}.delete.parameters[3].type" = "string"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/subscriptions/{sid}.delete.parameters[4].$ref" = "#/parameters/ApiVersionParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/subscriptions/{sid}.delete.parameters[5].$ref" = "#/parameters/SubscriptionIdParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/subscriptions/{sid}.delete.responses.204.description" = "The subscription details were successfully deleted."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/subscriptions/{sid}.delete.responses.default.description" = "Error response describing why the operation failed."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/subscriptions/{sid}.delete.responses.default.schema.$ref" = "#/definitions/ErrorBodyContract"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/subscriptions/{sid}.delete.tags.length" = 1
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/subscriptions/{sid}.delete.tags[0]" = "Subscriptions"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/subscriptions/{sid}.get.description" = "Gets the specified Subscription entity."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/subscriptions/{sid}.get.operationId" = "Subscriptions_Get"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/subscriptions/{sid}.get.parameters.length" = 5
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/subscriptions/{sid}.get.parameters[0].$ref" = "#/parameters/ResourceGroupNameParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/subscriptions/{sid}.get.parameters[1].$ref" = "#/parameters/ServiceNameParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/subscriptions/{sid}.get.parameters[2].description" = "Identifier of the subscription."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/subscriptions/{sid}.get.parameters[2].in" = "path"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/subscriptions/{sid}.get.parameters[2].name" = "sid"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/subscriptions/{sid}.get.parameters[2].required" = true
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/subscriptions/{sid}.get.parameters[2].type" = "string"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/subscriptions/{sid}.get.parameters[3].$ref" = "#/parameters/ApiVersionParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/subscriptions/{sid}.get.parameters[4].$ref" = "#/parameters/SubscriptionIdParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/subscriptions/{sid}.get.responses.200.description" = "The response body contains the specified Subscription entity."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/subscriptions/{sid}.get.responses.200.headers.ETag.description" = "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/subscriptions/{sid}.get.responses.200.headers.ETag.type" = "string"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/subscriptions/{sid}.get.responses.200.schema.$ref" = "#/definitions/SubscriptionContract"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/subscriptions/{sid}.get.responses.default.description" = "Error response describing why the operation failed."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/subscriptions/{sid}.get.responses.default.schema.$ref" = "#/definitions/ErrorBodyContract"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/subscriptions/{sid}.get.tags.length" = 1
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/subscriptions/{sid}.get.tags[0]" = "Subscriptions"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/subscriptions/{sid}.patch.description" = "Updates the details of a subscription specificied by its identifier."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/subscriptions/{sid}.patch.operationId" = "Subscriptions_Update"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/subscriptions/{sid}.patch.parameters.length" = 7
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/subscriptions/{sid}.patch.parameters[0].$ref" = "#/parameters/ResourceGroupNameParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/subscriptions/{sid}.patch.parameters[1].$ref" = "#/parameters/ServiceNameParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/subscriptions/{sid}.patch.parameters[2].description" = "Identifier of the subscription."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/subscriptions/{sid}.patch.parameters[2].in" = "path"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/subscriptions/{sid}.patch.parameters[2].name" = "sid"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/subscriptions/{sid}.patch.parameters[2].required" = true
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/subscriptions/{sid}.patch.parameters[2].type" = "string"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/subscriptions/{sid}.patch.parameters[3].description" = "Update parameters."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/subscriptions/{sid}.patch.parameters[3].in" = "body"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/subscriptions/{sid}.patch.parameters[3].name" = "parameters"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/subscriptions/{sid}.patch.parameters[3].required" = true
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/subscriptions/{sid}.patch.parameters[3].schema.$ref" = "#/definitions/SubscriptionUpdateParameters"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/subscriptions/{sid}.patch.parameters[4].description" = "ETag of the Subscription Entity. ETag should match the current entity state from the header response of the GET request or it should be * for unconditional update."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/subscriptions/{sid}.patch.parameters[4].in" = "header"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/subscriptions/{sid}.patch.parameters[4].name" = "If-Match"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/subscriptions/{sid}.patch.parameters[4].required" = true
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/subscriptions/{sid}.patch.parameters[4].type" = "string"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/subscriptions/{sid}.patch.parameters[5].$ref" = "#/parameters/ApiVersionParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/subscriptions/{sid}.patch.parameters[6].$ref" = "#/parameters/SubscriptionIdParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/subscriptions/{sid}.patch.responses.204.description" = "The subscription details were successfully updated."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/subscriptions/{sid}.patch.responses.default.description" = "Error response describing why the operation failed."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/subscriptions/{sid}.patch.responses.default.schema.$ref" = "#/definitions/ErrorBodyContract"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/subscriptions/{sid}.patch.tags.length" = 1
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/subscriptions/{sid}.patch.tags[0]" = "Subscriptions"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/subscriptions/{sid}.put.description" = "Creates or updates the subscription of specified user to the specified product."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/subscriptions/{sid}.put.operationId" = "Subscriptions_CreateOrUpdate"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/subscriptions/{sid}.put.parameters.length" = 6
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/subscriptions/{sid}.put.parameters[0].$ref" = "#/parameters/ResourceGroupNameParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/subscriptions/{sid}.put.parameters[1].$ref" = "#/parameters/ServiceNameParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/subscriptions/{sid}.put.parameters[2].description" = "Identifier of the subscription."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/subscriptions/{sid}.put.parameters[2].in" = "path"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/subscriptions/{sid}.put.parameters[2].maxLength" = 256.0
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/subscriptions/{sid}.put.parameters[2].minLength" = 1.0
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/subscriptions/{sid}.put.parameters[2].name" = "sid"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/subscriptions/{sid}.put.parameters[2].pattern" = "^[^*#&+:<>?]+$"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/subscriptions/{sid}.put.parameters[2].required" = true
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/subscriptions/{sid}.put.parameters[2].type" = "string"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/subscriptions/{sid}.put.parameters[3].description" = "Create parameters."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/subscriptions/{sid}.put.parameters[3].in" = "body"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/subscriptions/{sid}.put.parameters[3].name" = "parameters"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/subscriptions/{sid}.put.parameters[3].required" = true
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/subscriptions/{sid}.put.parameters[3].schema.$ref" = "#/definitions/SubscriptionCreateParameters"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/subscriptions/{sid}.put.parameters[4].$ref" = "#/parameters/ApiVersionParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/subscriptions/{sid}.put.parameters[5].$ref" = "#/parameters/SubscriptionIdParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/subscriptions/{sid}.put.responses.201.description" = "The user was successfully subscribed to the product."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/subscriptions/{sid}.put.responses.204.description" = "The user already subscribed to the product."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/subscriptions/{sid}.put.responses.default.description" = "Error response describing why the operation failed."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/subscriptions/{sid}.put.responses.default.schema.$ref" = "#/definitions/ErrorBodyContract"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/subscriptions/{sid}.put.tags.length" = 1
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/subscriptions/{sid}.put.tags[0]" = "Subscriptions"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/subscriptions/{sid}/regeneratePrimaryKey.post.description" = "Regenerates primary key of existing subscription of the API Management service instance."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/subscriptions/{sid}/regeneratePrimaryKey.post.operationId" = "Subscriptions_RegeneratePrimaryKey"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/subscriptions/{sid}/regeneratePrimaryKey.post.parameters.length" = 5
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/subscriptions/{sid}/regeneratePrimaryKey.post.parameters[0].$ref" = "#/parameters/ResourceGroupNameParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/subscriptions/{sid}/regeneratePrimaryKey.post.parameters[1].$ref" = "#/parameters/ServiceNameParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/subscriptions/{sid}/regeneratePrimaryKey.post.parameters[2].description" = "Identifier of the subscription."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/subscriptions/{sid}/regeneratePrimaryKey.post.parameters[2].in" = "path"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/subscriptions/{sid}/regeneratePrimaryKey.post.parameters[2].name" = "sid"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/subscriptions/{sid}/regeneratePrimaryKey.post.parameters[2].required" = true
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/subscriptions/{sid}/regeneratePrimaryKey.post.parameters[2].type" = "string"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/subscriptions/{sid}/regeneratePrimaryKey.post.parameters[3].$ref" = "#/parameters/ApiVersionParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/subscriptions/{sid}/regeneratePrimaryKey.post.parameters[4].$ref" = "#/parameters/SubscriptionIdParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/subscriptions/{sid}/regeneratePrimaryKey.post.responses.204.description" = "The primary key was successfully regenerated."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/subscriptions/{sid}/regeneratePrimaryKey.post.responses.default.description" = "Error response describing why the operation failed."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/subscriptions/{sid}/regeneratePrimaryKey.post.responses.default.schema.$ref" = "#/definitions/ErrorBodyContract"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/subscriptions/{sid}/regeneratePrimaryKey.post.tags.length" = 1
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/subscriptions/{sid}/regeneratePrimaryKey.post.tags[0]" = "Subscriptions"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/subscriptions/{sid}/regenerateSecondaryKey.post.description" = "Regenerates secondary key of existing subscription of the API Management service instance."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/subscriptions/{sid}/regenerateSecondaryKey.post.operationId" = "Subscriptions_RegenerateSecondaryKey"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/subscriptions/{sid}/regenerateSecondaryKey.post.parameters.length" = 5
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/subscriptions/{sid}/regenerateSecondaryKey.post.parameters[0].$ref" = "#/parameters/ResourceGroupNameParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/subscriptions/{sid}/regenerateSecondaryKey.post.parameters[1].$ref" = "#/parameters/ServiceNameParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/subscriptions/{sid}/regenerateSecondaryKey.post.parameters[2].description" = "Identifier of the subscription."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/subscriptions/{sid}/regenerateSecondaryKey.post.parameters[2].in" = "path"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/subscriptions/{sid}/regenerateSecondaryKey.post.parameters[2].name" = "sid"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/subscriptions/{sid}/regenerateSecondaryKey.post.parameters[2].required" = true
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/subscriptions/{sid}/regenerateSecondaryKey.post.parameters[2].type" = "string"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/subscriptions/{sid}/regenerateSecondaryKey.post.parameters[3].$ref" = "#/parameters/ApiVersionParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/subscriptions/{sid}/regenerateSecondaryKey.post.parameters[4].$ref" = "#/parameters/SubscriptionIdParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/subscriptions/{sid}/regenerateSecondaryKey.post.responses.204.description" = "The secondary key was successfully regenerated."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/subscriptions/{sid}/regenerateSecondaryKey.post.responses.default.description" = "Error response describing why the operation failed."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/subscriptions/{sid}/regenerateSecondaryKey.post.responses.default.schema.$ref" = "#/definitions/ErrorBodyContract"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/subscriptions/{sid}/regenerateSecondaryKey.post.tags.length" = 1
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/subscriptions/{sid}/regenerateSecondaryKey.post.tags[0]" = "Subscriptions"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/tenant/access.get.description" = "Get tenant access information details."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/tenant/access.get.operationId" = "TenantAccess_Get"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/tenant/access.get.parameters.length" = 4
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/tenant/access.get.parameters[0].$ref" = "#/parameters/ResourceGroupNameParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/tenant/access.get.parameters[1].$ref" = "#/parameters/ServiceNameParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/tenant/access.get.parameters[2].$ref" = "#/parameters/ApiVersionParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/tenant/access.get.parameters[3].$ref" = "#/parameters/SubscriptionIdParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/tenant/access.get.responses.200.description" = "Tenant Access information."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/tenant/access.get.responses.200.headers.ETag.description" = "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/tenant/access.get.responses.200.headers.ETag.type" = "string"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/tenant/access.get.responses.200.schema.$ref" = "#/definitions/AccessInformationContract"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/tenant/access.get.tags.length" = 1
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/tenant/access.get.tags[0]" = "TenantAccess"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/tenant/access.patch.description" = "Update tenant access information details."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/tenant/access.patch.operationId" = "TenantAccess_Update"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/tenant/access.patch.parameters.length" = 6
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/tenant/access.patch.parameters[0].$ref" = "#/parameters/ResourceGroupNameParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/tenant/access.patch.parameters[1].$ref" = "#/parameters/ServiceNameParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/tenant/access.patch.parameters[2].description" = "Parameters."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/tenant/access.patch.parameters[2].in" = "body"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/tenant/access.patch.parameters[2].name" = "parameters"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/tenant/access.patch.parameters[2].required" = true
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/tenant/access.patch.parameters[2].schema.$ref" = "#/definitions/AccessInformationUpdateParameters"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/tenant/access.patch.parameters[3].description" = "The entity state (Etag) version of the tenant access settings to update. A value of \"*\" can be used for If-Match to unconditionally apply the operation."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/tenant/access.patch.parameters[3].in" = "header"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/tenant/access.patch.parameters[3].name" = "If-Match"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/tenant/access.patch.parameters[3].required" = true
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/tenant/access.patch.parameters[3].type" = "string"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/tenant/access.patch.parameters[4].$ref" = "#/parameters/ApiVersionParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/tenant/access.patch.parameters[5].$ref" = "#/parameters/SubscriptionIdParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/tenant/access.patch.responses.201.description" = "Tenant's access information updated successfully."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/tenant/access.patch.responses.default.description" = "Error response describing why the operation failed."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/tenant/access.patch.responses.default.schema.$ref" = "#/definitions/ErrorBodyContract"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/tenant/access.patch.tags.length" = 1
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/tenant/access.patch.tags[0]" = "TenantAccess"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/tenant/access/git.get.description" = "Gets the Git access configuration for the tenant."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/tenant/access/git.get.operationId" = "TenantAccessGit_Get"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/tenant/access/git.get.parameters.length" = 4
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/tenant/access/git.get.parameters[0].$ref" = "#/parameters/ResourceGroupNameParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/tenant/access/git.get.parameters[1].$ref" = "#/parameters/ServiceNameParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/tenant/access/git.get.parameters[2].$ref" = "#/parameters/ApiVersionParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/tenant/access/git.get.parameters[3].$ref" = "#/parameters/SubscriptionIdParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/tenant/access/git.get.responses.200.description" = "Git Access Information for the Service."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/tenant/access/git.get.responses.200.headers.ETag.description" = "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/tenant/access/git.get.responses.200.headers.ETag.type" = "string"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/tenant/access/git.get.responses.200.schema.$ref" = "#/definitions/AccessInformationContract"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/tenant/access/git.get.responses.default.description" = "Error response describing why the operation failed."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/tenant/access/git.get.responses.default.schema.$ref" = "#/definitions/ErrorBodyContract"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/tenant/access/git.get.tags.length" = 1
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/tenant/access/git.get.tags[0]" = "TenantAccessGit"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/tenant/access/git/regeneratePrimaryKey.post.description" = "Regenerate primary access key for GIT."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/tenant/access/git/regeneratePrimaryKey.post.operationId" = "TenantAccessGit_RegeneratePrimaryKey"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/tenant/access/git/regeneratePrimaryKey.post.parameters.length" = 4
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/tenant/access/git/regeneratePrimaryKey.post.parameters[0].$ref" = "#/parameters/ResourceGroupNameParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/tenant/access/git/regeneratePrimaryKey.post.parameters[1].$ref" = "#/parameters/ServiceNameParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/tenant/access/git/regeneratePrimaryKey.post.parameters[2].$ref" = "#/parameters/ApiVersionParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/tenant/access/git/regeneratePrimaryKey.post.parameters[3].$ref" = "#/parameters/SubscriptionIdParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/tenant/access/git/regeneratePrimaryKey.post.responses.204.description" = "The primary key was successfully regenerated."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/tenant/access/git/regeneratePrimaryKey.post.responses.default.description" = "Error response describing why the operation failed."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/tenant/access/git/regeneratePrimaryKey.post.responses.default.schema.$ref" = "#/definitions/ErrorBodyContract"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/tenant/access/git/regeneratePrimaryKey.post.tags.length" = 1
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/tenant/access/git/regeneratePrimaryKey.post.tags[0]" = "TenantAccessGit"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/tenant/access/git/regenerateSecondaryKey.post.description" = "Regenerate secondary access key for GIT."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/tenant/access/git/regenerateSecondaryKey.post.operationId" = "TenantAccessGit_RegenerateSecondaryKey"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/tenant/access/git/regenerateSecondaryKey.post.parameters.length" = 4
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/tenant/access/git/regenerateSecondaryKey.post.parameters[0].$ref" = "#/parameters/ResourceGroupNameParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/tenant/access/git/regenerateSecondaryKey.post.parameters[1].$ref" = "#/parameters/ServiceNameParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/tenant/access/git/regenerateSecondaryKey.post.parameters[2].$ref" = "#/parameters/ApiVersionParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/tenant/access/git/regenerateSecondaryKey.post.parameters[3].$ref" = "#/parameters/SubscriptionIdParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/tenant/access/git/regenerateSecondaryKey.post.responses.204.description" = "The secondary key was successfully regenerated."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/tenant/access/git/regenerateSecondaryKey.post.responses.default.description" = "Error response describing why the operation failed."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/tenant/access/git/regenerateSecondaryKey.post.responses.default.schema.$ref" = "#/definitions/ErrorBodyContract"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/tenant/access/git/regenerateSecondaryKey.post.tags.length" = 1
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/tenant/access/git/regenerateSecondaryKey.post.tags[0]" = "TenantAccessGit"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/tenant/access/regeneratePrimaryKey.post.description" = "Regenerate primary access key."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/tenant/access/regeneratePrimaryKey.post.operationId" = "TenantAccess_RegeneratePrimaryKey"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/tenant/access/regeneratePrimaryKey.post.parameters.length" = 4
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/tenant/access/regeneratePrimaryKey.post.parameters[0].$ref" = "#/parameters/ResourceGroupNameParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/tenant/access/regeneratePrimaryKey.post.parameters[1].$ref" = "#/parameters/ServiceNameParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/tenant/access/regeneratePrimaryKey.post.parameters[2].$ref" = "#/parameters/ApiVersionParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/tenant/access/regeneratePrimaryKey.post.parameters[3].$ref" = "#/parameters/SubscriptionIdParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/tenant/access/regeneratePrimaryKey.post.responses.204.description" = "The primary key was successfully regenerated."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/tenant/access/regeneratePrimaryKey.post.responses.default.description" = "Error response describing why the operation failed."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/tenant/access/regeneratePrimaryKey.post.responses.default.schema.$ref" = "#/definitions/ErrorBodyContract"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/tenant/access/regeneratePrimaryKey.post.tags.length" = 1
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/tenant/access/regeneratePrimaryKey.post.tags[0]" = "TenantAccess"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/tenant/access/regenerateSecondaryKey.post.description" = "Regenerate secondary access key."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/tenant/access/regenerateSecondaryKey.post.operationId" = "TenantAccess_RegenerateSecondaryKey"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/tenant/access/regenerateSecondaryKey.post.parameters.length" = 4
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/tenant/access/regenerateSecondaryKey.post.parameters[0].$ref" = "#/parameters/ResourceGroupNameParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/tenant/access/regenerateSecondaryKey.post.parameters[1].$ref" = "#/parameters/ServiceNameParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/tenant/access/regenerateSecondaryKey.post.parameters[2].$ref" = "#/parameters/ApiVersionParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/tenant/access/regenerateSecondaryKey.post.parameters[3].$ref" = "#/parameters/SubscriptionIdParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/tenant/access/regenerateSecondaryKey.post.responses.204.description" = "The secondary key was successfully regenerated."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/tenant/access/regenerateSecondaryKey.post.responses.default.description" = "Error response describing why the operation failed."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/tenant/access/regenerateSecondaryKey.post.responses.default.schema.$ref" = "#/definitions/ErrorBodyContract"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/tenant/access/regenerateSecondaryKey.post.tags.length" = 1
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/tenant/access/regenerateSecondaryKey.post.tags[0]" = "TenantAccess"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/tenant/configuration/deploy.post.description" = "This operation applies changes from the specified Git branch to the configuration database. This is a long running operation and could take several minutes to complete."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/tenant/configuration/deploy.post.externalDocs.description" = "To deploy any service configuration changes to the API Management service instance"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/tenant/configuration/deploy.post.externalDocs.url" = "https://azure.microsoft.com/en-us/documentation/articles/api-management-configuration-repository-git/#to-deploy-any-service-configuration-changes-to-the-api-management-service-instance"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/tenant/configuration/deploy.post.operationId" = "TenantConfiguration_Deploy"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/tenant/configuration/deploy.post.parameters.length" = 5
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/tenant/configuration/deploy.post.parameters[0].$ref" = "#/parameters/ResourceGroupNameParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/tenant/configuration/deploy.post.parameters[1].$ref" = "#/parameters/ServiceNameParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/tenant/configuration/deploy.post.parameters[2].description" = "Deploy Configuration parameters."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/tenant/configuration/deploy.post.parameters[2].in" = "body"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/tenant/configuration/deploy.post.parameters[2].name" = "parameters"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/tenant/configuration/deploy.post.parameters[2].required" = true
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/tenant/configuration/deploy.post.parameters[2].schema.$ref" = "#/definitions/DeployConfigurationParameters"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/tenant/configuration/deploy.post.parameters[3].$ref" = "#/parameters/ApiVersionParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/tenant/configuration/deploy.post.parameters[4].$ref" = "#/parameters/SubscriptionIdParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/tenant/configuration/deploy.post.responses.200.description" = "Result of appplying changes from Git branch to database."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/tenant/configuration/deploy.post.responses.200.schema.$ref" = "#/definitions/OperationResultContract"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/tenant/configuration/deploy.post.responses.default.description" = "Error response describing why the operation failed."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/tenant/configuration/deploy.post.responses.default.schema.$ref" = "#/definitions/ErrorBodyContract"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/tenant/configuration/deploy.post.tags.length" = 1
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/tenant/configuration/deploy.post.tags[0]" = "TenantConfiguration"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/tenant/configuration/deploy.post.x-ms-long-running-operation" = true
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/tenant/configuration/save.post.description" = "This operation creates a commit with the current configuration snapshot to the specified branch in the repository. This is a long running operation and could take several minutes to complete."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/tenant/configuration/save.post.externalDocs.description" = "To save the service configuration to the Git repository"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/tenant/configuration/save.post.externalDocs.url" = "https://azure.microsoft.com/en-us/documentation/articles/api-management-configuration-repository-git/#to-save-the-service-configuration-to-the-git-repository"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/tenant/configuration/save.post.operationId" = "TenantConfiguration_Save"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/tenant/configuration/save.post.parameters.length" = 5
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/tenant/configuration/save.post.parameters[0].$ref" = "#/parameters/ResourceGroupNameParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/tenant/configuration/save.post.parameters[1].$ref" = "#/parameters/ServiceNameParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/tenant/configuration/save.post.parameters[2].description" = "Save Configuration parameters."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/tenant/configuration/save.post.parameters[2].in" = "body"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/tenant/configuration/save.post.parameters[2].name" = "parameters"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/tenant/configuration/save.post.parameters[2].required" = true
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/tenant/configuration/save.post.parameters[2].schema.$ref" = "#/definitions/SaveConfigurationParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/tenant/configuration/save.post.parameters[3].$ref" = "#/parameters/ApiVersionParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/tenant/configuration/save.post.parameters[4].$ref" = "#/parameters/SubscriptionIdParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/tenant/configuration/save.post.responses.200.description" = "Result of creating a commit in the repository."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/tenant/configuration/save.post.responses.200.schema.$ref" = "#/definitions/OperationResultContract"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/tenant/configuration/save.post.responses.default.description" = "Error response describing why the operation failed."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/tenant/configuration/save.post.responses.default.schema.$ref" = "#/definitions/ErrorBodyContract"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/tenant/configuration/save.post.tags.length" = 1
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/tenant/configuration/save.post.tags[0]" = "TenantConfiguration"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/tenant/configuration/save.post.x-ms-long-running-operation" = true
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/tenant/configuration/syncState.get.description" = "Gets the status of the most recent synchronization between the configuration database and the Git repository."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/tenant/configuration/syncState.get.operationId" = "TenantConfigurationSyncState_Get"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/tenant/configuration/syncState.get.parameters.length" = 4
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/tenant/configuration/syncState.get.parameters[0].$ref" = "#/parameters/ResourceGroupNameParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/tenant/configuration/syncState.get.parameters[1].$ref" = "#/parameters/ServiceNameParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/tenant/configuration/syncState.get.parameters[2].$ref" = "#/parameters/ApiVersionParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/tenant/configuration/syncState.get.parameters[3].$ref" = "#/parameters/SubscriptionIdParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/tenant/configuration/syncState.get.responses.200.description" = "Sync state result."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/tenant/configuration/syncState.get.responses.200.schema.$ref" = "#/definitions/TenantConfigurationSyncStateContract"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/tenant/configuration/syncState.get.tags.length" = 1
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/tenant/configuration/syncState.get.tags[0]" = "TenantConfigurationSyncState"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/tenant/configuration/validate.post.description" = "This operation validates the changes in the specified Git branch. This is a long running operation and could take several minutes to complete."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/tenant/configuration/validate.post.operationId" = "TenantConfiguration_Validate"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/tenant/configuration/validate.post.parameters.length" = 5
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/tenant/configuration/validate.post.parameters[0].$ref" = "#/parameters/ResourceGroupNameParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/tenant/configuration/validate.post.parameters[1].$ref" = "#/parameters/ServiceNameParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/tenant/configuration/validate.post.parameters[2].description" = "Validate Configuration parameters."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/tenant/configuration/validate.post.parameters[2].in" = "body"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/tenant/configuration/validate.post.parameters[2].name" = "parameters"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/tenant/configuration/validate.post.parameters[2].required" = true
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/tenant/configuration/validate.post.parameters[2].schema.$ref" = "#/definitions/DeployConfigurationParameters"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/tenant/configuration/validate.post.parameters[3].$ref" = "#/parameters/ApiVersionParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/tenant/configuration/validate.post.parameters[4].$ref" = "#/parameters/SubscriptionIdParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/tenant/configuration/validate.post.responses.200.description" = "Result of validating the changes in the specified Git branch."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/tenant/configuration/validate.post.responses.200.schema.$ref" = "#/definitions/OperationResultContract"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/tenant/configuration/validate.post.responses.default.description" = "Error response describing why the operation failed."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/tenant/configuration/validate.post.responses.default.schema.$ref" = "#/definitions/ErrorBodyContract"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/tenant/configuration/validate.post.tags.length" = 1
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/tenant/configuration/validate.post.tags[0]" = "TenantConfiguration"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/tenant/configuration/validate.post.x-ms-long-running-operation" = true
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/users.get.description" = "Lists a collection of registered users in the specified service instance."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/users.get.externalDocs.url" = "https://msdn.microsoft.com/en-us/library/azure/dn776330.aspx"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/users.get.operationId" = "Users_ListByService"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/users.get.parameters.length" = 7
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/users.get.parameters[0].$ref" = "#/parameters/ResourceGroupNameParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/users.get.parameters[1].$ref" = "#/parameters/ServiceNameParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/users.get.parameters[2].description" = "| Field            | Supported operators    | Supported functions               |\n|------------------|------------------------|-----------------------------------|\n| id               | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |\n| firstName        | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |\n| lastName         | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |\n| email            | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |\n| state            | eq                     | N/A                               |\n| registrationDate | ge, le, eq, ne, gt, lt | N/A                               |\n| note             | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/users.get.parameters[2].in" = "query"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/users.get.parameters[2].name" = "$filter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/users.get.parameters[2].required" = false
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/users.get.parameters[2].type" = "string"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/users.get.parameters[3].$ref" = "#/parameters/TopQueryParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/users.get.parameters[4].$ref" = "#/parameters/SkipQueryParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/users.get.parameters[5].$ref" = "#/parameters/ApiVersionParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/users.get.parameters[6].$ref" = "#/parameters/SubscriptionIdParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/users.get.responses.200.description" = "Lists a collection of User entities."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/users.get.responses.200.schema.$ref" = "#/definitions/UserCollection"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/users.get.responses.default.description" = "Error response describing why the operation failed."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/users.get.responses.default.schema.$ref" = "#/definitions/ErrorBodyContract"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/users.get.tags.length" = 1
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/users.get.tags[0]" = "Users"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/users.get.x-ms-odata" = "#/definitions/UserContract"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/users.get.x-ms-pageable.nextLinkName" = "nextLink"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/users/{uid}.delete.description" = "Deletes specific user."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/users/{uid}.delete.operationId" = "Users_Delete"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/users/{uid}.delete.parameters.length" = 7
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/users/{uid}.delete.parameters[0].$ref" = "#/parameters/ResourceGroupNameParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/users/{uid}.delete.parameters[1].$ref" = "#/parameters/ServiceNameParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/users/{uid}.delete.parameters[2].$ref" = "#/parameters/UserIdParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/users/{uid}.delete.parameters[3].description" = "Whether to delete user's subscription or not."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/users/{uid}.delete.parameters[3].in" = "query"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/users/{uid}.delete.parameters[3].name" = "deleteSubscriptions"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/users/{uid}.delete.parameters[3].required" = false
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/users/{uid}.delete.parameters[3].type" = "boolean"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/users/{uid}.delete.parameters[4].description" = "The entity state (Etag) version of the user to delete. A value of \"*\" can be used for If-Match to unconditionally apply the operation."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/users/{uid}.delete.parameters[4].in" = "header"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/users/{uid}.delete.parameters[4].name" = "If-Match"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/users/{uid}.delete.parameters[4].required" = true
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/users/{uid}.delete.parameters[4].type" = "string"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/users/{uid}.delete.parameters[5].$ref" = "#/parameters/ApiVersionParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/users/{uid}.delete.parameters[6].$ref" = "#/parameters/SubscriptionIdParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/users/{uid}.delete.responses.204.description" = "The user details were successfully deleted."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/users/{uid}.delete.responses.405.description" = "Administrator user cannot be modified."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/users/{uid}.delete.responses.405.schema.$ref" = "#/definitions/ErrorBodyContract"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/users/{uid}.delete.responses.default.description" = "Error response describing why the operation failed."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/users/{uid}.delete.responses.default.schema.$ref" = "#/definitions/ErrorBodyContract"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/users/{uid}.delete.tags.length" = 1
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/users/{uid}.delete.tags[0]" = "Users"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/users/{uid}.get.description" = "Gets the details of the user specified by its identifier."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/users/{uid}.get.operationId" = "Users_Get"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/users/{uid}.get.parameters.length" = 5
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/users/{uid}.get.parameters[0].$ref" = "#/parameters/ResourceGroupNameParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/users/{uid}.get.parameters[1].$ref" = "#/parameters/ServiceNameParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/users/{uid}.get.parameters[2].$ref" = "#/parameters/UserIdParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/users/{uid}.get.parameters[3].$ref" = "#/parameters/ApiVersionParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/users/{uid}.get.parameters[4].$ref" = "#/parameters/SubscriptionIdParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/users/{uid}.get.responses.200.description" = "Gets the specified user entity."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/users/{uid}.get.responses.200.headers.ETag.description" = "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/users/{uid}.get.responses.200.headers.ETag.type" = "string"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/users/{uid}.get.responses.200.schema.$ref" = "#/definitions/UserContract"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/users/{uid}.get.responses.default.description" = "Error response describing why the operation failed."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/users/{uid}.get.responses.default.schema.$ref" = "#/definitions/ErrorBodyContract"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/users/{uid}.get.tags.length" = 1
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/users/{uid}.get.tags[0]" = "Users"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/users/{uid}.patch.description" = "Updates the details of the user specified by its identifier."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/users/{uid}.patch.operationId" = "Users_Update"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/users/{uid}.patch.parameters.length" = 7
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/users/{uid}.patch.parameters[0].$ref" = "#/parameters/ResourceGroupNameParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/users/{uid}.patch.parameters[1].$ref" = "#/parameters/ServiceNameParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/users/{uid}.patch.parameters[2].$ref" = "#/parameters/UserIdParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/users/{uid}.patch.parameters[3].description" = "Update parameters."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/users/{uid}.patch.parameters[3].in" = "body"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/users/{uid}.patch.parameters[3].name" = "parameters"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/users/{uid}.patch.parameters[3].required" = true
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/users/{uid}.patch.parameters[3].schema.$ref" = "#/definitions/UserUpdateParameters"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/users/{uid}.patch.parameters[4].description" = "The entity state (Etag) version of the user to update. A value of \"*\" can be used for If-Match to unconditionally apply the operation."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/users/{uid}.patch.parameters[4].in" = "header"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/users/{uid}.patch.parameters[4].name" = "If-Match"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/users/{uid}.patch.parameters[4].required" = true
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/users/{uid}.patch.parameters[4].type" = "string"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/users/{uid}.patch.parameters[5].$ref" = "#/parameters/ApiVersionParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/users/{uid}.patch.parameters[6].$ref" = "#/parameters/SubscriptionIdParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/users/{uid}.patch.responses.204.description" = "The user details were successfully updated."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/users/{uid}.patch.responses.405.description" = "Administrator user cannot be modified."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/users/{uid}.patch.responses.405.schema.$ref" = "#/definitions/ErrorBodyContract"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/users/{uid}.patch.responses.default.description" = "Error response describing why the operation failed."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/users/{uid}.patch.responses.default.schema.$ref" = "#/definitions/ErrorBodyContract"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/users/{uid}.patch.tags.length" = 1
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/users/{uid}.patch.tags[0]" = "Users"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/users/{uid}.put.description" = "Creates or Updates a user."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/users/{uid}.put.operationId" = "Users_CreateOrUpdate"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/users/{uid}.put.parameters.length" = 6
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/users/{uid}.put.parameters[0].$ref" = "#/parameters/ResourceGroupNameParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/users/{uid}.put.parameters[1].$ref" = "#/parameters/ServiceNameParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/users/{uid}.put.parameters[2].$ref" = "#/parameters/UserIdParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/users/{uid}.put.parameters[3].description" = "Create or update parameters."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/users/{uid}.put.parameters[3].in" = "body"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/users/{uid}.put.parameters[3].name" = "parameters"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/users/{uid}.put.parameters[3].required" = true
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/users/{uid}.put.parameters[3].schema.$ref" = "#/definitions/UserCreateParameters"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/users/{uid}.put.parameters[4].$ref" = "#/parameters/ApiVersionParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/users/{uid}.put.parameters[5].$ref" = "#/parameters/SubscriptionIdParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/users/{uid}.put.responses.201.description" = "User was successfully created."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/users/{uid}.put.responses.204.description" = "User was successfully updated."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/users/{uid}.put.responses.default.description" = "Error response describing why the operation failed."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/users/{uid}.put.responses.default.schema.$ref" = "#/definitions/ErrorBodyContract"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/users/{uid}.put.tags.length" = 1
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/users/{uid}.put.tags[0]" = "Users"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/users/{uid}/generateSsoUrl.post.description" = "Retrieves a redirection URL containing an authentication token for signing a given user into the developer portal."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/users/{uid}/generateSsoUrl.post.operationId" = "Users_GenerateSsoUrl"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/users/{uid}/generateSsoUrl.post.parameters.length" = 5
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/users/{uid}/generateSsoUrl.post.parameters[0].$ref" = "#/parameters/ResourceGroupNameParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/users/{uid}/generateSsoUrl.post.parameters[1].$ref" = "#/parameters/ServiceNameParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/users/{uid}/generateSsoUrl.post.parameters[2].$ref" = "#/parameters/UserIdParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/users/{uid}/generateSsoUrl.post.parameters[3].$ref" = "#/parameters/ApiVersionParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/users/{uid}/generateSsoUrl.post.parameters[4].$ref" = "#/parameters/SubscriptionIdParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/users/{uid}/generateSsoUrl.post.responses.200.description" = "The response body contains the single sign-on URL."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/users/{uid}/generateSsoUrl.post.responses.200.schema.$ref" = "#/definitions/GenerateSsoUrlResult"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/users/{uid}/generateSsoUrl.post.responses.200.schema.x-ms-client-flatten" = true
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/users/{uid}/generateSsoUrl.post.responses.default.description" = "Error response describing why the operation failed."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/users/{uid}/generateSsoUrl.post.responses.default.schema.$ref" = "#/definitions/ErrorBodyContract"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/users/{uid}/generateSsoUrl.post.tags.length" = 1
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/users/{uid}/generateSsoUrl.post.tags[0]" = "Users"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/users/{uid}/groups.get.description" = "Lists all user groups."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/users/{uid}/groups.get.operationId" = "UserGroups_ListByUser"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/users/{uid}/groups.get.parameters.length" = 8
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/users/{uid}/groups.get.parameters[0].$ref" = "#/parameters/ResourceGroupNameParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/users/{uid}/groups.get.parameters[1].$ref" = "#/parameters/ServiceNameParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/users/{uid}/groups.get.parameters[2].$ref" = "#/parameters/UserIdParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/users/{uid}/groups.get.parameters[3].description" = "| Field       | Supported operators    | Supported functions                         |\n|-------------|------------------------|---------------------------------------------|\n| id          | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |\n| name        | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |\n| description | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/users/{uid}/groups.get.parameters[3].in" = "query"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/users/{uid}/groups.get.parameters[3].name" = "$filter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/users/{uid}/groups.get.parameters[3].required" = false
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/users/{uid}/groups.get.parameters[3].type" = "string"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/users/{uid}/groups.get.parameters[4].$ref" = "#/parameters/TopQueryParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/users/{uid}/groups.get.parameters[5].$ref" = "#/parameters/SkipQueryParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/users/{uid}/groups.get.parameters[6].$ref" = "#/parameters/ApiVersionParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/users/{uid}/groups.get.parameters[7].$ref" = "#/parameters/SubscriptionIdParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/users/{uid}/groups.get.responses.200.description" = "Lists a collection of Group entities."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/users/{uid}/groups.get.responses.200.schema.$ref" = "#/definitions/GroupCollection"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/users/{uid}/groups.get.responses.default.description" = "Error response describing why the operation failed."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/users/{uid}/groups.get.responses.default.schema.$ref" = "#/definitions/ErrorBodyContract"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/users/{uid}/groups.get.tags.length" = 1
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/users/{uid}/groups.get.tags[0]" = "UserGroups"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/users/{uid}/groups.get.x-ms-odata" = "#/definitions/GroupContract"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/users/{uid}/groups.get.x-ms-pageable.nextLinkName" = "nextLink"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/users/{uid}/identities.get.description" = "Lists all user identities."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/users/{uid}/identities.get.operationId" = "UserIdentities_ListByUser"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/users/{uid}/identities.get.parameters.length" = 5
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/users/{uid}/identities.get.parameters[0].$ref" = "#/parameters/ResourceGroupNameParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/users/{uid}/identities.get.parameters[1].$ref" = "#/parameters/ServiceNameParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/users/{uid}/identities.get.parameters[2].$ref" = "#/parameters/UserIdParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/users/{uid}/identities.get.parameters[3].$ref" = "#/parameters/ApiVersionParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/users/{uid}/identities.get.parameters[4].$ref" = "#/parameters/SubscriptionIdParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/users/{uid}/identities.get.responses.200.description" = "Lists of User Identities."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/users/{uid}/identities.get.responses.200.schema.items.$ref" = "#/definitions/UserIdentityContract"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/users/{uid}/identities.get.responses.200.schema.type" = "array"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/users/{uid}/identities.get.responses.default.description" = "Error response describing why the operation failed."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/users/{uid}/identities.get.responses.default.schema.$ref" = "#/definitions/ErrorBodyContract"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/users/{uid}/identities.get.tags.length" = 1
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/users/{uid}/identities.get.tags[0]" = "UserIdentities"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/users/{uid}/subscriptions.get.description" = "Lists the collection of subscriptions of the specified user."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/users/{uid}/subscriptions.get.operationId" = "UserSubscriptions_ListByUser"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/users/{uid}/subscriptions.get.parameters.length" = 8
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/users/{uid}/subscriptions.get.parameters[0].$ref" = "#/parameters/ResourceGroupNameParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/users/{uid}/subscriptions.get.parameters[1].$ref" = "#/parameters/ServiceNameParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/users/{uid}/subscriptions.get.parameters[2].$ref" = "#/parameters/UserIdParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/users/{uid}/subscriptions.get.parameters[3].description" = "| Field        | Supported operators    | Supported functions                         |\n|--------------|------------------------|---------------------------------------------|\n| id           | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |\n| name         | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |\n| stateComment | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |\n| userId       | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |\n| productId    | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |\n| state        | eq                     |                                             |"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/users/{uid}/subscriptions.get.parameters[3].in" = "query"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/users/{uid}/subscriptions.get.parameters[3].name" = "$filter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/users/{uid}/subscriptions.get.parameters[3].required" = false
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/users/{uid}/subscriptions.get.parameters[3].type" = "string"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/users/{uid}/subscriptions.get.parameters[4].$ref" = "#/parameters/TopQueryParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/users/{uid}/subscriptions.get.parameters[5].$ref" = "#/parameters/SkipQueryParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/users/{uid}/subscriptions.get.parameters[6].$ref" = "#/parameters/ApiVersionParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/users/{uid}/subscriptions.get.parameters[7].$ref" = "#/parameters/SubscriptionIdParameter"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/users/{uid}/subscriptions.get.responses.200.description" = "Lists a collection of Subscription entities."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/users/{uid}/subscriptions.get.responses.200.schema.$ref" = "#/definitions/SubscriptionCollection"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/users/{uid}/subscriptions.get.responses.default.description" = "Error response describing why the operation failed."
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/users/{uid}/subscriptions.get.responses.default.schema.$ref" = "#/definitions/ErrorBodyContract"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/users/{uid}/subscriptions.get.tags.length" = 1
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/users/{uid}/subscriptions.get.tags[0]" = "UserSubscriptions"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/users/{uid}/subscriptions.get.x-ms-odata" = "#/definitions/SubscriptionContract"
"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/users/{uid}/subscriptions.get.x-ms-pageable.nextLinkName" = "nextLink"
"produces.length" = 1
"produces[0]" = "application/json"
"schemes.length" = 1
"schemes[0]" = "https"
"security.length" = 1
"securityDefinitions.azure_auth.authorizationUrl" = "https://login.microsoftonline.com/common/oauth2/authorize"
"securityDefinitions.azure_auth.description" = "Azure Active Directory OAuth2 Flow."
"securityDefinitions.azure_auth.flow" = "implicit"
"securityDefinitions.azure_auth.scopes.user_impersonation" = "impersonate your user account"
"securityDefinitions.azure_auth.type" = "oauth2"
"security[0].azure_auth.length" = 1
"security[0].azure_auth[0]" = "user_impersonation"
swagger = "2.0"
"x-ms-paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}?export=true.get.description" = "Gets the details of the API specified by its identifier."
"x-ms-paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}?export=true.get.operationId" = "Apis_Export"
"x-ms-paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}?export=true.get.parameters.length" = 5
"x-ms-paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}?export=true.get.parameters[0].$ref" = "#/parameters/ResourceGroupNameParameter"
"x-ms-paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}?export=true.get.parameters[1].$ref" = "#/parameters/ServiceNameParameter"
"x-ms-paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}?export=true.get.parameters[2].$ref" = "#/parameters/ApiIdParameter"
"x-ms-paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}?export=true.get.parameters[3].$ref" = "#/parameters/ApiVersionParameter"
"x-ms-paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}?export=true.get.parameters[4].$ref" = "#/parameters/SubscriptionIdParameter"
"x-ms-paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}?export=true.get.responses.200.description" = "The response contains a stream with a full set of API metadata and includes API entity with an embedded array of operation entities."
"x-ms-paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}?export=true.get.responses.200.schema.$ref" = "#/definitions/ApiExportResult"
"x-ms-paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}?export=true.get.responses.default.description" = "Error response describing why the operation failed."
"x-ms-paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}?export=true.get.responses.default.schema.$ref" = "#/definitions/ErrorBodyContract"
"x-ms-paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}?export=true.get.tags.length" = 1
"x-ms-paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}?export=true.get.tags[0]" = "Apis"
