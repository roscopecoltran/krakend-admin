{
	"consumes.length": 1,
	"consumes[0]": "application/json",
	"definitions.AccessPolicyEntry.description": "An identity that have access to the key vault. All identities in the array must use the same tenant ID as the key vault's tenant ID.",
	"definitions.AccessPolicyEntry.properties.applicationId.description": " Application ID of the client making request on behalf of a principal",
	"definitions.AccessPolicyEntry.properties.applicationId.format": "uuid",
	"definitions.AccessPolicyEntry.properties.applicationId.type": "string",
	"definitions.AccessPolicyEntry.properties.objectId.description": "The object ID of a user, service principal or security group in the Azure Active Directory tenant for the vault. The object ID must be unique for the list of access policies.",
	"definitions.AccessPolicyEntry.properties.objectId.type": "string",
	"definitions.AccessPolicyEntry.properties.permissions.$ref": "#/definitions/Permissions",
	"definitions.AccessPolicyEntry.properties.permissions.description": "Permissions the identity has for keys, secrets and certificates.",
	"definitions.AccessPolicyEntry.properties.tenantId.description": "The Azure Active Directory tenant ID that should be used for authenticating requests to the key vault.",
	"definitions.AccessPolicyEntry.properties.tenantId.format": "uuid",
	"definitions.AccessPolicyEntry.properties.tenantId.type": "string",
	"definitions.AccessPolicyEntry.required.length": 3,
	"definitions.AccessPolicyEntry.required[0]": "tenantId",
	"definitions.AccessPolicyEntry.required[1]": "objectId",
	"definitions.AccessPolicyEntry.required[2]": "permissions",
	"definitions.Permissions.description": "Permissions the identity has for keys, secrets and certificates.",
	"definitions.Permissions.properties.certificates.description": "Permissions to certificates",
	"definitions.Permissions.properties.certificates.items.enum.length": 15,
	"definitions.Permissions.properties.certificates.items.enum[0]": "all",
	"definitions.Permissions.properties.certificates.items.enum[10]": "setissuers",
	"definitions.Permissions.properties.certificates.items.enum[11]": "deleteissuers",
	"definitions.Permissions.properties.certificates.items.enum[12]": "manageissuers",
	"definitions.Permissions.properties.certificates.items.enum[13]": "recover",
	"definitions.Permissions.properties.certificates.items.enum[14]": "purge",
	"definitions.Permissions.properties.certificates.items.enum[1]": "get",
	"definitions.Permissions.properties.certificates.items.enum[2]": "list",
	"definitions.Permissions.properties.certificates.items.enum[3]": "delete",
	"definitions.Permissions.properties.certificates.items.enum[4]": "create",
	"definitions.Permissions.properties.certificates.items.enum[5]": "import",
	"definitions.Permissions.properties.certificates.items.enum[6]": "update",
	"definitions.Permissions.properties.certificates.items.enum[7]": "managecontacts",
	"definitions.Permissions.properties.certificates.items.enum[8]": "getissuers",
	"definitions.Permissions.properties.certificates.items.enum[9]": "listissuers",
	"definitions.Permissions.properties.certificates.items.type": "string",
	"definitions.Permissions.properties.certificates.items.x-ms-enum.modelAsString": true,
	"definitions.Permissions.properties.certificates.items.x-ms-enum.name": "CertificatePermissions",
	"definitions.Permissions.properties.certificates.type": "array",
	"definitions.Permissions.properties.keys.description": "Permissions to keys",
	"definitions.Permissions.properties.keys.items.enum.length": 17,
	"definitions.Permissions.properties.keys.items.enum[0]": "all",
	"definitions.Permissions.properties.keys.items.enum[10]": "update",
	"definitions.Permissions.properties.keys.items.enum[11]": "import",
	"definitions.Permissions.properties.keys.items.enum[12]": "delete",
	"definitions.Permissions.properties.keys.items.enum[13]": "backup",
	"definitions.Permissions.properties.keys.items.enum[14]": "restore",
	"definitions.Permissions.properties.keys.items.enum[15]": "recover",
	"definitions.Permissions.properties.keys.items.enum[16]": "purge",
	"definitions.Permissions.properties.keys.items.enum[1]": "encrypt",
	"definitions.Permissions.properties.keys.items.enum[2]": "decrypt",
	"definitions.Permissions.properties.keys.items.enum[3]": "wrapKey",
	"definitions.Permissions.properties.keys.items.enum[4]": "unwrapKey",
	"definitions.Permissions.properties.keys.items.enum[5]": "sign",
	"definitions.Permissions.properties.keys.items.enum[6]": "verify",
	"definitions.Permissions.properties.keys.items.enum[7]": "get",
	"definitions.Permissions.properties.keys.items.enum[8]": "list",
	"definitions.Permissions.properties.keys.items.enum[9]": "create",
	"definitions.Permissions.properties.keys.items.type": "string",
	"definitions.Permissions.properties.keys.items.x-ms-enum.modelAsString": true,
	"definitions.Permissions.properties.keys.items.x-ms-enum.name": "KeyPermissions",
	"definitions.Permissions.properties.keys.type": "array",
	"definitions.Permissions.properties.secrets.description": "Permissions to secrets",
	"definitions.Permissions.properties.secrets.items.enum.length": 9,
	"definitions.Permissions.properties.secrets.items.enum[0]": "all",
	"definitions.Permissions.properties.secrets.items.enum[1]": "get",
	"definitions.Permissions.properties.secrets.items.enum[2]": "list",
	"definitions.Permissions.properties.secrets.items.enum[3]": "set",
	"definitions.Permissions.properties.secrets.items.enum[4]": "delete",
	"definitions.Permissions.properties.secrets.items.enum[5]": "backup",
	"definitions.Permissions.properties.secrets.items.enum[6]": "restore",
	"definitions.Permissions.properties.secrets.items.enum[7]": "recover",
	"definitions.Permissions.properties.secrets.items.enum[8]": "purge",
	"definitions.Permissions.properties.secrets.items.type": "string",
	"definitions.Permissions.properties.secrets.items.x-ms-enum.modelAsString": true,
	"definitions.Permissions.properties.secrets.items.x-ms-enum.name": "SecretPermissions",
	"definitions.Permissions.properties.secrets.type": "array",
	"definitions.Resource.description": "Key Vault resource",
	"definitions.Resource.properties.id.description": "The Azure Resource Manager resource ID for the key vault.",
	"definitions.Resource.properties.id.readOnly": true,
	"definitions.Resource.properties.id.type": "string",
	"definitions.Resource.properties.location.description": "The supported Azure location where the key vault should be created.",
	"definitions.Resource.properties.location.type": "string",
	"definitions.Resource.properties.name.description": "The name of the key vault.",
	"definitions.Resource.properties.name.type": "string",
	"definitions.Resource.properties.tags.additionalProperties.type": "string",
	"definitions.Resource.properties.tags.description": "The tags that will be assigned to the key vault. ",
	"definitions.Resource.properties.tags.type": "object",
	"definitions.Resource.properties.type.description": "The resource type of the key vault.",
	"definitions.Resource.properties.type.readOnly": true,
	"definitions.Resource.properties.type.type": "string",
	"definitions.Resource.required.length": 2,
	"definitions.Resource.required[0]": "location",
	"definitions.Resource.required[1]": "name",
	"definitions.Resource.x-ms-azure-resource": true,
	"definitions.ResourceListResult.description": "List of vault resources.",
	"definitions.ResourceListResult.properties.nextLink.description": "Gets the URL to get the next set of vault resources.",
	"definitions.ResourceListResult.properties.nextLink.type": "string",
	"definitions.ResourceListResult.properties.value.description": "Gets the list of vault resources.",
	"definitions.ResourceListResult.properties.value.items.$ref": "#/definitions/Resource",
	"definitions.ResourceListResult.properties.value.type": "array",
	"definitions.Sku.description": "SKU details",
	"definitions.Sku.properties.family.description": "SKU family name",
	"definitions.Sku.properties.family.enum.length": 1,
	"definitions.Sku.properties.family.enum[0]": "A",
	"definitions.Sku.properties.family.type": "string",
	"definitions.Sku.properties.family.x-ms-enum.modelAsString": true,
	"definitions.Sku.properties.family.x-ms-enum.name": "SkuFamily",
	"definitions.Sku.properties.name.description": "SKU name to specify whether the key vault is a standard vault or a premium vault.",
	"definitions.Sku.properties.name.enum.length": 2,
	"definitions.Sku.properties.name.enum[0]": "standard",
	"definitions.Sku.properties.name.enum[1]": "premium",
	"definitions.Sku.properties.name.type": "string",
	"definitions.Sku.properties.name.x-ms-enum.modelAsString": false,
	"definitions.Sku.properties.name.x-ms-enum.name": "SkuName",
	"definitions.Sku.required.length": 2,
	"definitions.Sku.required[0]": "name",
	"definitions.Sku.required[1]": "family",
	"definitions.Vault.allOf.length": 1,
	"definitions.Vault.allOf[0].$ref": "#/definitions/Resource",
	"definitions.Vault.description": "Resource information with extended details.",
	"definitions.Vault.properties.properties.$ref": "#/definitions/VaultProperties",
	"definitions.Vault.properties.properties.description": "Properties of the vault",
	"definitions.Vault.required.length": 1,
	"definitions.Vault.required[0]": "properties",
	"definitions.VaultCreateOrUpdateParameters.description": "Parameters for creating or updating a vault",
	"definitions.VaultCreateOrUpdateParameters.properties.location.description": "The supported Azure location where the key vault should be created.",
	"definitions.VaultCreateOrUpdateParameters.properties.location.type": "string",
	"definitions.VaultCreateOrUpdateParameters.properties.properties.$ref": "#/definitions/VaultProperties",
	"definitions.VaultCreateOrUpdateParameters.properties.properties.description": "Properties of the vault",
	"definitions.VaultCreateOrUpdateParameters.properties.tags.additionalProperties.type": "string",
	"definitions.VaultCreateOrUpdateParameters.properties.tags.description": "The tags that will be assigned to the key vault. ",
	"definitions.VaultCreateOrUpdateParameters.properties.tags.type": "object",
	"definitions.VaultCreateOrUpdateParameters.required.length": 2,
	"definitions.VaultCreateOrUpdateParameters.required[0]": "location",
	"definitions.VaultCreateOrUpdateParameters.required[1]": "properties",
	"definitions.VaultCreateOrUpdateParameters.x-ms-azure-resource": true,
	"definitions.VaultListResult.description": "List of vaults",
	"definitions.VaultListResult.properties.nextLink.description": "Gets or sets the URL to get the next set of vaults.",
	"definitions.VaultListResult.properties.nextLink.type": "string",
	"definitions.VaultListResult.properties.value.description": "Gets or sets the list of vaults.",
	"definitions.VaultListResult.properties.value.items.$ref": "#/definitions/Vault",
	"definitions.VaultListResult.properties.value.type": "array",
	"definitions.VaultProperties.description": "Properties of the vault",
	"definitions.VaultProperties.properties.accessPolicies.description": "An array of 0 to 16 identities that have access to the key vault. All identities in the array must use the same tenant ID as the key vault's tenant ID.",
	"definitions.VaultProperties.properties.accessPolicies.items.$ref": "#/definitions/AccessPolicyEntry",
	"definitions.VaultProperties.properties.accessPolicies.maxItems": 16,
	"definitions.VaultProperties.properties.accessPolicies.type": "array",
	"definitions.VaultProperties.properties.enableSoftDelete.description": "Property to specify whether the 'soft delete' functionality is enabled for this key vault.",
	"definitions.VaultProperties.properties.enableSoftDelete.type": "boolean",
	"definitions.VaultProperties.properties.enabledForDeployment.description": "Property to specify whether Azure Virtual Machines are permitted to retrieve certificates stored as secrets from the key vault.",
	"definitions.VaultProperties.properties.enabledForDeployment.type": "boolean",
	"definitions.VaultProperties.properties.enabledForDiskEncryption.description": "Property to specify whether Azure Disk Encryption is permitted to retrieve secrets from the vault and unwrap keys.",
	"definitions.VaultProperties.properties.enabledForDiskEncryption.type": "boolean",
	"definitions.VaultProperties.properties.enabledForTemplateDeployment.description": "Property to specify whether Azure Resource Manager is permitted to retrieve secrets from the key vault.",
	"definitions.VaultProperties.properties.enabledForTemplateDeployment.type": "boolean",
	"definitions.VaultProperties.properties.sku.$ref": "#/definitions/Sku",
	"definitions.VaultProperties.properties.sku.description": "SKU details",
	"definitions.VaultProperties.properties.tenantId.description": "The Azure Active Directory tenant ID that should be used for authenticating requests to the key vault.",
	"definitions.VaultProperties.properties.tenantId.format": "uuid",
	"definitions.VaultProperties.properties.tenantId.type": "string",
	"definitions.VaultProperties.properties.vaultUri.description": "The URI of the vault for performing operations on keys and secrets.",
	"definitions.VaultProperties.properties.vaultUri.type": "string",
	"definitions.VaultProperties.required.length": 3,
	"definitions.VaultProperties.required[0]": "tenantId",
	"definitions.VaultProperties.required[1]": "sku",
	"definitions.VaultProperties.required[2]": "accessPolicies",
	"host": "management.azure.com",
	"info.description": "The Azure management API provides a RESTful set of web services that interact with Azure Key Vault.",
	"info.title": "KeyVaultManagementClient",
	"info.version": "2015-06-01",
	"info.x-apisguru-categories.length": 3,
	"info.x-apisguru-categories[0]": "developer_tools",
	"info.x-apisguru-categories[1]": "cloud",
	"info.x-apisguru-categories[2]": "security",
	"info.x-logo.url": "https://api.apis.guru/v2/cache/logo/https_assets.onestore.ms_cdnfiles_onestorerolling-1606-01000_shell_v3_images_logo_microsoft.png",
	"info.x-origin.length": 1,
	"info.x-origin[0].format": "swagger",
	"info.x-origin[0].url": "https://raw.githubusercontent.com/Azure/azure-rest-api-specs/master/arm-keyvault/2015-06-01/swagger/keyvault.json",
	"info.x-origin[0].version": "2.0",
	"info.x-preferred": true,
	"info.x-providerName": "azure.com",
	"info.x-serviceName": "arm-keyvault",
	"info.x-tags.length": 5,
	"info.x-tags[0]": "Azure",
	"info.x-tags[1]": "Microsoft",
	"info.x-tags[2]": "cryptography",
	"info.x-tags[3]": "security",
	"info.x-tags[4]": "data protection",
	"parameters.ApiVersionParameter.description": "Client Api Version.",
	"parameters.ApiVersionParameter.in": "query",
	"parameters.ApiVersionParameter.name": "api-version",
	"parameters.ApiVersionParameter.required": true,
	"parameters.ApiVersionParameter.type": "string",
	"parameters.SubscriptionIdParameter.description": "Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
	"parameters.SubscriptionIdParameter.in": "path",
	"parameters.SubscriptionIdParameter.name": "subscriptionId",
	"parameters.SubscriptionIdParameter.required": true,
	"parameters.SubscriptionIdParameter.type": "string",
	"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.KeyVault/vaults.get.description": "The List operation gets information about the vaults associated with the subscription and within the specified resource group.",
	"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.KeyVault/vaults.get.operationId": "Vaults_ListByResourceGroup",
	"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.KeyVault/vaults.get.parameters.length": 4,
	"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.KeyVault/vaults.get.parameters[0].description": "The name of the Resource Group to which the vault belongs.",
	"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.KeyVault/vaults.get.parameters[0].in": "path",
	"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.KeyVault/vaults.get.parameters[0].name": "resourceGroupName",
	"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.KeyVault/vaults.get.parameters[0].required": true,
	"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.KeyVault/vaults.get.parameters[0].type": "string",
	"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.KeyVault/vaults.get.parameters[1].description": "Maximum number of results to return.",
	"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.KeyVault/vaults.get.parameters[1].format": "int32",
	"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.KeyVault/vaults.get.parameters[1].in": "query",
	"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.KeyVault/vaults.get.parameters[1].name": "$top",
	"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.KeyVault/vaults.get.parameters[1].type": "integer",
	"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.KeyVault/vaults.get.parameters[2].$ref": "#/parameters/ApiVersionParameter",
	"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.KeyVault/vaults.get.parameters[3].$ref": "#/parameters/SubscriptionIdParameter",
	"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.KeyVault/vaults.get.responses.200.description": "Get information about all key vaults in the specified resource group.",
	"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.KeyVault/vaults.get.responses.200.schema.$ref": "#/definitions/VaultListResult",
	"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.KeyVault/vaults.get.tags.length": 1,
	"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.KeyVault/vaults.get.tags[0]": "Vaults",
	"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.KeyVault/vaults.get.x-ms-pageable.nextLinkName": "nextLink",
	"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.KeyVault/vaults/{vaultName}.delete.description": "Deletes the specified Azure key vault.",
	"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.KeyVault/vaults/{vaultName}.delete.operationId": "Vaults_Delete",
	"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.KeyVault/vaults/{vaultName}.delete.parameters.length": 4,
	"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.KeyVault/vaults/{vaultName}.delete.parameters[0].description": "The name of the Resource Group to which the vault belongs.",
	"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.KeyVault/vaults/{vaultName}.delete.parameters[0].in": "path",
	"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.KeyVault/vaults/{vaultName}.delete.parameters[0].name": "resourceGroupName",
	"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.KeyVault/vaults/{vaultName}.delete.parameters[0].required": true,
	"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.KeyVault/vaults/{vaultName}.delete.parameters[0].type": "string",
	"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.KeyVault/vaults/{vaultName}.delete.parameters[1].description": "The name of the vault to delete",
	"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.KeyVault/vaults/{vaultName}.delete.parameters[1].in": "path",
	"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.KeyVault/vaults/{vaultName}.delete.parameters[1].name": "vaultName",
	"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.KeyVault/vaults/{vaultName}.delete.parameters[1].required": true,
	"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.KeyVault/vaults/{vaultName}.delete.parameters[1].type": "string",
	"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.KeyVault/vaults/{vaultName}.delete.parameters[2].$ref": "#/parameters/ApiVersionParameter",
	"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.KeyVault/vaults/{vaultName}.delete.parameters[3].$ref": "#/parameters/SubscriptionIdParameter",
	"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.KeyVault/vaults/{vaultName}.delete.responses.200.description": "OK Response.",
	"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.KeyVault/vaults/{vaultName}.delete.tags.length": 1,
	"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.KeyVault/vaults/{vaultName}.delete.tags[0]": "Vaults",
	"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.KeyVault/vaults/{vaultName}.get.description": "Gets the specified Azure key vault.",
	"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.KeyVault/vaults/{vaultName}.get.operationId": "Vaults_Get",
	"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.KeyVault/vaults/{vaultName}.get.parameters.length": 4,
	"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.KeyVault/vaults/{vaultName}.get.parameters[0].description": "The name of the Resource Group to which the vault belongs.",
	"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.KeyVault/vaults/{vaultName}.get.parameters[0].in": "path",
	"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.KeyVault/vaults/{vaultName}.get.parameters[0].name": "resourceGroupName",
	"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.KeyVault/vaults/{vaultName}.get.parameters[0].required": true,
	"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.KeyVault/vaults/{vaultName}.get.parameters[0].type": "string",
	"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.KeyVault/vaults/{vaultName}.get.parameters[1].description": "The name of the vault.",
	"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.KeyVault/vaults/{vaultName}.get.parameters[1].in": "path",
	"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.KeyVault/vaults/{vaultName}.get.parameters[1].name": "vaultName",
	"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.KeyVault/vaults/{vaultName}.get.parameters[1].required": true,
	"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.KeyVault/vaults/{vaultName}.get.parameters[1].type": "string",
	"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.KeyVault/vaults/{vaultName}.get.parameters[2].$ref": "#/parameters/ApiVersionParameter",
	"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.KeyVault/vaults/{vaultName}.get.parameters[3].$ref": "#/parameters/SubscriptionIdParameter",
	"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.KeyVault/vaults/{vaultName}.get.responses.200.description": "Retrieved vault",
	"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.KeyVault/vaults/{vaultName}.get.responses.200.schema.$ref": "#/definitions/Vault",
	"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.KeyVault/vaults/{vaultName}.get.tags.length": 1,
	"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.KeyVault/vaults/{vaultName}.get.tags[0]": "Vaults",
	"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.KeyVault/vaults/{vaultName}.put.description": "Create or update a key vault in the specified subscription.",
	"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.KeyVault/vaults/{vaultName}.put.operationId": "Vaults_CreateOrUpdate",
	"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.KeyVault/vaults/{vaultName}.put.parameters.length": 5,
	"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.KeyVault/vaults/{vaultName}.put.parameters[0].description": "The name of the Resource Group to which the server belongs.",
	"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.KeyVault/vaults/{vaultName}.put.parameters[0].in": "path",
	"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.KeyVault/vaults/{vaultName}.put.parameters[0].name": "resourceGroupName",
	"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.KeyVault/vaults/{vaultName}.put.parameters[0].required": true,
	"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.KeyVault/vaults/{vaultName}.put.parameters[0].type": "string",
	"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.KeyVault/vaults/{vaultName}.put.parameters[1].description": "Name of the vault",
	"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.KeyVault/vaults/{vaultName}.put.parameters[1].in": "path",
	"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.KeyVault/vaults/{vaultName}.put.parameters[1].name": "vaultName",
	"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.KeyVault/vaults/{vaultName}.put.parameters[1].pattern": "^[a-zA-Z0-9-]{3,24}$",
	"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.KeyVault/vaults/{vaultName}.put.parameters[1].required": true,
	"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.KeyVault/vaults/{vaultName}.put.parameters[1].type": "string",
	"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.KeyVault/vaults/{vaultName}.put.parameters[2].$ref": "#/parameters/ApiVersionParameter",
	"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.KeyVault/vaults/{vaultName}.put.parameters[3].description": "Parameters to create or update the vault",
	"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.KeyVault/vaults/{vaultName}.put.parameters[3].in": "body",
	"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.KeyVault/vaults/{vaultName}.put.parameters[3].name": "parameters",
	"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.KeyVault/vaults/{vaultName}.put.parameters[3].required": true,
	"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.KeyVault/vaults/{vaultName}.put.parameters[3].schema.$ref": "#/definitions/VaultCreateOrUpdateParameters",
	"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.KeyVault/vaults/{vaultName}.put.parameters[4].$ref": "#/parameters/SubscriptionIdParameter",
	"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.KeyVault/vaults/{vaultName}.put.responses.200.description": "Created or updated vault",
	"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.KeyVault/vaults/{vaultName}.put.responses.200.schema.$ref": "#/definitions/Vault",
	"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.KeyVault/vaults/{vaultName}.put.responses.201.description": "Created or updated vault",
	"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.KeyVault/vaults/{vaultName}.put.responses.201.schema.$ref": "#/definitions/Vault",
	"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.KeyVault/vaults/{vaultName}.put.tags.length": 1,
	"paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.KeyVault/vaults/{vaultName}.put.tags[0]": "Vaults",
	"paths./subscriptions/{subscriptionId}/resources.get.description": "The List operation gets information about the vaults associated with the subscription.",
	"paths./subscriptions/{subscriptionId}/resources.get.operationId": "Vaults_List",
	"paths./subscriptions/{subscriptionId}/resources.get.parameters.length": 4,
	"paths./subscriptions/{subscriptionId}/resources.get.parameters[0].description": "The filter to apply on the operation.",
	"paths./subscriptions/{subscriptionId}/resources.get.parameters[0].enum.length": 1,
	"paths./subscriptions/{subscriptionId}/resources.get.parameters[0].enum[0]": "resourceType eq 'Microsoft.KeyVault/vaults'",
	"paths./subscriptions/{subscriptionId}/resources.get.parameters[0].in": "query",
	"paths./subscriptions/{subscriptionId}/resources.get.parameters[0].name": "$filter",
	"paths./subscriptions/{subscriptionId}/resources.get.parameters[0].required": true,
	"paths./subscriptions/{subscriptionId}/resources.get.parameters[0].type": "string",
	"paths./subscriptions/{subscriptionId}/resources.get.parameters[1].description": "Maximum number of results to return.",
	"paths./subscriptions/{subscriptionId}/resources.get.parameters[1].format": "int32",
	"paths./subscriptions/{subscriptionId}/resources.get.parameters[1].in": "query",
	"paths./subscriptions/{subscriptionId}/resources.get.parameters[1].name": "$top",
	"paths./subscriptions/{subscriptionId}/resources.get.parameters[1].type": "integer",
	"paths./subscriptions/{subscriptionId}/resources.get.parameters[2].description": "Azure Resource Manager Api Version.",
	"paths./subscriptions/{subscriptionId}/resources.get.parameters[2].enum.length": 1,
	"paths./subscriptions/{subscriptionId}/resources.get.parameters[2].enum[0]": "2015-11-01",
	"paths./subscriptions/{subscriptionId}/resources.get.parameters[2].in": "query",
	"paths./subscriptions/{subscriptionId}/resources.get.parameters[2].name": "api-version",
	"paths./subscriptions/{subscriptionId}/resources.get.parameters[2].required": true,
	"paths./subscriptions/{subscriptionId}/resources.get.parameters[2].type": "string",
	"paths./subscriptions/{subscriptionId}/resources.get.parameters[3].$ref": "#/parameters/SubscriptionIdParameter",
	"paths./subscriptions/{subscriptionId}/resources.get.responses.200.description": "Get information about all key vaults in the subscription.",
	"paths./subscriptions/{subscriptionId}/resources.get.responses.200.schema.$ref": "#/definitions/ResourceListResult",
	"paths./subscriptions/{subscriptionId}/resources.get.tags.length": 1,
	"paths./subscriptions/{subscriptionId}/resources.get.tags[0]": "Vaults",
	"paths./subscriptions/{subscriptionId}/resources.get.x-ms-pageable.nextLinkName": "nextLink",
	"produces.length": 1,
	"produces[0]": "application/json",
	"schemes.length": 1,
	"schemes[0]": "https",
	"swagger": "2.0"
}