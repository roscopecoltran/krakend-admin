consumes.length: 2
consumes[0]: application/json
consumes[1]: text/json
definitions.CheckNameAvailabilityResult.description: The CheckNameAvailability operation
  response.
definitions.CheckNameAvailabilityResult.properties.message.description: Gets an error
  message explaining the Reason value in more detail.
definitions.CheckNameAvailabilityResult.properties.message.type: string
definitions.CheckNameAvailabilityResult.properties.nameAvailable.description: Gets
  a boolean value that indicates whether the name is available for you to use. If
  true, the name is available. If false, the name has already been taken or invalid
  and cannot be used.
definitions.CheckNameAvailabilityResult.properties.nameAvailable.type: boolean
definitions.CheckNameAvailabilityResult.properties.reason.description: Gets the reason
  that a storage account name could not be used. The Reason element is only returned
  if NameAvailable is false.
definitions.CheckNameAvailabilityResult.properties.reason.enum.length: 2
definitions.CheckNameAvailabilityResult.properties.reason.enum[0]: AccountNameInvalid
definitions.CheckNameAvailabilityResult.properties.reason.enum[1]: AlreadyExists
definitions.CheckNameAvailabilityResult.properties.reason.type: string
definitions.CheckNameAvailabilityResult.properties.reason.x-ms-enum.modelAsString: false
definitions.CheckNameAvailabilityResult.properties.reason.x-ms-enum.name: Reason
definitions.CustomDomain.description: The custom domain assigned to this storage account.
  This can be set via Update.
definitions.CustomDomain.properties.name.description: Gets or sets the custom domain
  name. Name is the CNAME source.
definitions.CustomDomain.properties.name.type: string
definitions.CustomDomain.properties.useSubDomain.description: Indicates whether indirect
  CName validation is enabled. Default value is false. This should only be set on
  updates
definitions.CustomDomain.properties.useSubDomain.type: boolean
definitions.Endpoints.description: The URIs that are used to perform a retrieval of
  a public blob, queue or table object.
definitions.Endpoints.properties.blob.description: Gets the blob endpoint.
definitions.Endpoints.properties.blob.type: string
definitions.Endpoints.properties.queue.description: Gets the queue endpoint.
definitions.Endpoints.properties.queue.type: string
definitions.Endpoints.properties.table.description: Gets the table endpoint.
definitions.Endpoints.properties.table.type: string
definitions.Resource.properties.id.description: Resource Id
definitions.Resource.properties.id.readOnly: true
definitions.Resource.properties.id.type: string
definitions.Resource.properties.location.description: Resource location
definitions.Resource.properties.location.type: string
definitions.Resource.properties.name.description: Resource name
definitions.Resource.properties.name.readOnly: true
definitions.Resource.properties.name.type: string
definitions.Resource.properties.tags.additionalProperties.type: string
definitions.Resource.properties.tags.description: Resource tags
definitions.Resource.properties.tags.type: object
definitions.Resource.properties.type.description: Resource type
definitions.Resource.properties.type.readOnly: true
definitions.Resource.properties.type.type: string
definitions.Resource.required.length: 1
definitions.Resource.required[0]: location
definitions.Resource.x-ms-azure-resource: true
definitions.StorageAccount.allOf.length: 1
definitions.StorageAccount.allOf[0].$ref: '#/definitions/Resource'
definitions.StorageAccount.description: The storage account.
definitions.StorageAccount.properties.properties.$ref: '#/definitions/StorageAccountProperties'
definitions.StorageAccount.properties.properties.x-ms-client-flatten: true
definitions.StorageAccountCheckNameAvailabilityParameters.properties.name.type: string
definitions.StorageAccountCheckNameAvailabilityParameters.properties.type.type: string
definitions.StorageAccountCreateParameters.allOf.length: 1
definitions.StorageAccountCreateParameters.allOf[0].$ref: '#/definitions/Resource'
definitions.StorageAccountCreateParameters.description: The parameters to provide
  for the account.
definitions.StorageAccountCreateParameters.properties.properties.$ref: '#/definitions/StorageAccountPropertiesCreateParameters'
definitions.StorageAccountCreateParameters.properties.properties.x-ms-client-flatten: true
definitions.StorageAccountKeys.description: The access keys for the storage account.
definitions.StorageAccountKeys.properties.key1.description: Gets the value of key
  1.
definitions.StorageAccountKeys.properties.key1.type: string
definitions.StorageAccountKeys.properties.key2.description: Gets the value of key
  2.
definitions.StorageAccountKeys.properties.key2.type: string
definitions.StorageAccountListResult.description: The list storage accounts operation
  response.
definitions.StorageAccountListResult.properties.nextLink.description: Gets the link
  to the next set of results. Currently this will always be empty as the API does
  not support pagination.
definitions.StorageAccountListResult.properties.nextLink.type: string
definitions.StorageAccountListResult.properties.value.description: Gets the list of
  storage accounts and their properties.
definitions.StorageAccountListResult.properties.value.items.$ref: '#/definitions/StorageAccount'
definitions.StorageAccountListResult.properties.value.type: array
definitions.StorageAccountProperties.properties.accountType.description: Gets the
  type of the storage account.
definitions.StorageAccountProperties.properties.accountType.enum.length: 5
definitions.StorageAccountProperties.properties.accountType.enum[0]: Standard_LRS
definitions.StorageAccountProperties.properties.accountType.enum[1]: Standard_ZRS
definitions.StorageAccountProperties.properties.accountType.enum[2]: Standard_GRS
definitions.StorageAccountProperties.properties.accountType.enum[3]: Standard_RAGRS
definitions.StorageAccountProperties.properties.accountType.enum[4]: Premium_LRS
definitions.StorageAccountProperties.properties.accountType.type: string
definitions.StorageAccountProperties.properties.accountType.x-ms-enum.modelAsString: false
definitions.StorageAccountProperties.properties.accountType.x-ms-enum.name: AccountType
definitions.StorageAccountProperties.properties.creationTime.description: Gets the
  creation date and time of the storage account in UTC.
definitions.StorageAccountProperties.properties.creationTime.format: date-time
definitions.StorageAccountProperties.properties.creationTime.type: string
definitions.StorageAccountProperties.properties.customDomain.$ref: '#/definitions/CustomDomain'
definitions.StorageAccountProperties.properties.customDomain.description: Gets the
  user assigned custom domain assigned to this storage account.
definitions.StorageAccountProperties.properties.lastGeoFailoverTime.description: Gets
  the timestamp of the most recent instance of a failover to the secondary location.
  Only the most recent timestamp is retained. This element is not returned if there
  has never been a failover instance. Only available if the accountType is StandardGRS
  or StandardRAGRS.
definitions.StorageAccountProperties.properties.lastGeoFailoverTime.format: date-time
definitions.StorageAccountProperties.properties.lastGeoFailoverTime.type: string
definitions.StorageAccountProperties.properties.primaryEndpoints.$ref: '#/definitions/Endpoints'
definitions.StorageAccountProperties.properties.primaryEndpoints.description: Gets
  the URLs that are used to perform a retrieval of a public blob, queue or table object.Note
  that StandardZRS and PremiumLRS accounts only return the blob endpoint.
definitions.StorageAccountProperties.properties.primaryLocation.description: Gets
  the location of the primary for the storage account.
definitions.StorageAccountProperties.properties.primaryLocation.type: string
definitions.StorageAccountProperties.properties.provisioningState.description: Gets
  the status of the storage account at the time the operation was called.
definitions.StorageAccountProperties.properties.provisioningState.enum.length: 3
definitions.StorageAccountProperties.properties.provisioningState.enum[0]: Creating
definitions.StorageAccountProperties.properties.provisioningState.enum[1]: ResolvingDNS
definitions.StorageAccountProperties.properties.provisioningState.enum[2]: Succeeded
definitions.StorageAccountProperties.properties.provisioningState.type: string
definitions.StorageAccountProperties.properties.provisioningState.x-ms-enum.modelAsString: false
definitions.StorageAccountProperties.properties.provisioningState.x-ms-enum.name: ProvisioningState
definitions.StorageAccountProperties.properties.secondaryEndpoints.$ref: '#/definitions/Endpoints'
definitions.StorageAccountProperties.properties.secondaryEndpoints.description: Gets
  the URLs that are used to perform a retrieval of a public blob, queue or table object
  from the secondary location of the storage account. Only available if the accountType
  is StandardRAGRS.
definitions.StorageAccountProperties.properties.secondaryLocation.description: Gets
  the location of the geo replicated secondary for the storage account. Only available
  if the accountType is StandardGRS or StandardRAGRS.
definitions.StorageAccountProperties.properties.secondaryLocation.type: string
definitions.StorageAccountProperties.properties.statusOfPrimary.description: Gets
  the status indicating whether the primary location of the storage account is available
  or unavailable.
definitions.StorageAccountProperties.properties.statusOfPrimary.enum.length: 2
definitions.StorageAccountProperties.properties.statusOfPrimary.enum[0]: Available
definitions.StorageAccountProperties.properties.statusOfPrimary.enum[1]: Unavailable
definitions.StorageAccountProperties.properties.statusOfPrimary.type: string
definitions.StorageAccountProperties.properties.statusOfPrimary.x-ms-enum.modelAsString: false
definitions.StorageAccountProperties.properties.statusOfPrimary.x-ms-enum.name: AccountStatus
definitions.StorageAccountProperties.properties.statusOfSecondary.description: Gets
  the status indicating whether the secondary location of the storage account is available
  or unavailable. Only available if the accountType is StandardGRS or StandardRAGRS.
definitions.StorageAccountProperties.properties.statusOfSecondary.enum.length: 2
definitions.StorageAccountProperties.properties.statusOfSecondary.enum[0]: Available
definitions.StorageAccountProperties.properties.statusOfSecondary.enum[1]: Unavailable
definitions.StorageAccountProperties.properties.statusOfSecondary.type: string
definitions.StorageAccountProperties.properties.statusOfSecondary.x-ms-enum.modelAsString: false
definitions.StorageAccountProperties.properties.statusOfSecondary.x-ms-enum.name: AccountStatus
definitions.StorageAccountPropertiesCreateParameters.properties.accountType.description: Gets
  or sets the account type.
definitions.StorageAccountPropertiesCreateParameters.properties.accountType.enum.length: 5
definitions.StorageAccountPropertiesCreateParameters.properties.accountType.enum[0]: Standard_LRS
definitions.StorageAccountPropertiesCreateParameters.properties.accountType.enum[1]: Standard_ZRS
definitions.StorageAccountPropertiesCreateParameters.properties.accountType.enum[2]: Standard_GRS
definitions.StorageAccountPropertiesCreateParameters.properties.accountType.enum[3]: Standard_RAGRS
definitions.StorageAccountPropertiesCreateParameters.properties.accountType.enum[4]: Premium_LRS
definitions.StorageAccountPropertiesCreateParameters.properties.accountType.type: string
definitions.StorageAccountPropertiesCreateParameters.properties.accountType.x-ms-enum.modelAsString: false
definitions.StorageAccountPropertiesCreateParameters.properties.accountType.x-ms-enum.name: AccountType
definitions.StorageAccountPropertiesUpdateParameters.properties.accountType.description: Gets
  or sets the account type. Note that StandardZRS and PremiumLRS accounts cannot be
  changed to other account types, and other account types cannot be changed to StandardZRS
  or PremiumLRS.
definitions.StorageAccountPropertiesUpdateParameters.properties.accountType.enum.length: 5
definitions.StorageAccountPropertiesUpdateParameters.properties.accountType.enum[0]: Standard_LRS
definitions.StorageAccountPropertiesUpdateParameters.properties.accountType.enum[1]: Standard_ZRS
definitions.StorageAccountPropertiesUpdateParameters.properties.accountType.enum[2]: Standard_GRS
definitions.StorageAccountPropertiesUpdateParameters.properties.accountType.enum[3]: Standard_RAGRS
definitions.StorageAccountPropertiesUpdateParameters.properties.accountType.enum[4]: Premium_LRS
definitions.StorageAccountPropertiesUpdateParameters.properties.accountType.type: string
definitions.StorageAccountPropertiesUpdateParameters.properties.accountType.x-ms-enum.modelAsString: false
definitions.StorageAccountPropertiesUpdateParameters.properties.accountType.x-ms-enum.name: AccountType
definitions.StorageAccountPropertiesUpdateParameters.properties.customDomain.$ref: '#/definitions/CustomDomain'
definitions.StorageAccountPropertiesUpdateParameters.properties.customDomain.description: User
  domain assigned to the storage account. Name is the CNAME source. Only one custom
  domain is supported per storage account at this time. To clear the existing custom
  domain, use an empty string for the custom domain name property.
definitions.StorageAccountRegenerateKeyParameters.properties.keyName.enum.length: 2
definitions.StorageAccountRegenerateKeyParameters.properties.keyName.enum[0]: key1
definitions.StorageAccountRegenerateKeyParameters.properties.keyName.enum[1]: key2
definitions.StorageAccountRegenerateKeyParameters.properties.keyName.type: string
definitions.StorageAccountRegenerateKeyParameters.properties.keyName.x-ms-enum.modelAsString: false
definitions.StorageAccountRegenerateKeyParameters.properties.keyName.x-ms-enum.name: KeyName
definitions.StorageAccountUpdateParameters.allOf.length: 1
definitions.StorageAccountUpdateParameters.allOf[0].$ref: '#/definitions/Resource'
definitions.StorageAccountUpdateParameters.description: The parameters to update on
  the account.
definitions.StorageAccountUpdateParameters.properties.properties.$ref: '#/definitions/StorageAccountPropertiesUpdateParameters'
definitions.StorageAccountUpdateParameters.properties.properties.x-ms-client-flatten: true
definitions.SubResource.properties.id.description: Resource Id
definitions.SubResource.properties.id.type: string
definitions.SubResource.x-ms-azure-resource: true
definitions.Usage.description: Describes Storage Resource Usage.
definitions.Usage.properties.currentValue.description: Gets the current count of the
  allocated resources in the subscription.
definitions.Usage.properties.currentValue.format: int32
definitions.Usage.properties.currentValue.type: integer
definitions.Usage.properties.limit.description: Gets the maximum count of the resources
  that can be allocated in the subscription.
definitions.Usage.properties.limit.format: int32
definitions.Usage.properties.limit.type: integer
definitions.Usage.properties.name.$ref: '#/definitions/UsageName'
definitions.Usage.properties.name.description: Gets the name of the type of usage.
definitions.Usage.properties.unit.description: Gets the unit of measurement.
definitions.Usage.properties.unit.enum.length: 6
definitions.Usage.properties.unit.enum[0]: Count
definitions.Usage.properties.unit.enum[1]: Bytes
definitions.Usage.properties.unit.enum[2]: Seconds
definitions.Usage.properties.unit.enum[3]: Percent
definitions.Usage.properties.unit.enum[4]: CountsPerSecond
definitions.Usage.properties.unit.enum[5]: BytesPerSecond
definitions.Usage.properties.unit.type: string
definitions.Usage.properties.unit.x-ms-enum.modelAsString: false
definitions.Usage.properties.unit.x-ms-enum.name: UsageUnit
definitions.UsageListResult.description: The List Usages operation response.
definitions.UsageListResult.properties.value.description: Gets or sets the list Storage
  Resource Usages.
definitions.UsageListResult.properties.value.items.$ref: '#/definitions/Usage'
definitions.UsageListResult.properties.value.type: array
definitions.UsageName.description: The Usage Names.
definitions.UsageName.properties.localizedValue.description: Gets a localized string
  describing the resource name.
definitions.UsageName.properties.localizedValue.type: string
definitions.UsageName.properties.value.description: Gets a string describing the resource
  name.
definitions.UsageName.properties.value.type: string
host: management.azure.com
info.description: The Storage Management Client.
info.title: StorageManagementClient
info.version: 2015-05-01-preview
info.x-apisguru-categories.length: 1
info.x-apisguru-categories[0]: storage
info.x-logo.url: https://api.apis.guru/v2/cache/logo/https_assets.onestore.ms_cdnfiles_onestorerolling-1606-01000_shell_v3_images_logo_microsoft.png
info.x-origin.length: 1
info.x-origin[0].format: swagger
info.x-origin[0].url: https://raw.githubusercontent.com/Azure/azure-rest-api-specs/master/arm-storage/2015-05-01-preview/swagger/storage.json
info.x-origin[0].version: "2.0"
info.x-preferred: false
info.x-providerName: azure.com
info.x-serviceName: arm-storage
info.x-tags.length: 2
info.x-tags[0]: Azure
info.x-tags[1]: Microsoft
parameters.ApiVersionParameter.description: Client Api Version.
parameters.ApiVersionParameter.in: query
parameters.ApiVersionParameter.name: api-version
parameters.ApiVersionParameter.required: true
parameters.ApiVersionParameter.type: string
parameters.SubscriptionIdParameter.description: Gets subscription credentials which
  uniquely identify Microsoft Azure subscription. The subscription ID forms part of
  the URI for every service call.
parameters.SubscriptionIdParameter.in: path
parameters.SubscriptionIdParameter.name: subscriptionId
parameters.SubscriptionIdParameter.required: true
parameters.SubscriptionIdParameter.type: string
paths./subscriptions/{subscriptionId}/providers/Microsoft.Storage/checkNameAvailability.post.description: Checks
  that account name is valid and is not in use.
paths./subscriptions/{subscriptionId}/providers/Microsoft.Storage/checkNameAvailability.post.operationId: StorageAccounts_CheckNameAvailability
paths./subscriptions/{subscriptionId}/providers/Microsoft.Storage/checkNameAvailability.post.parameters.length: 3
paths./subscriptions/{subscriptionId}/providers/Microsoft.Storage/checkNameAvailability.post.parameters[0].description: 'The
  name of the storage account within the specified resource group. Storage account
  names must be between 3 and 24 characters in length and use numbers and lower-case
  letters only.  '
paths./subscriptions/{subscriptionId}/providers/Microsoft.Storage/checkNameAvailability.post.parameters[0].in: body
paths./subscriptions/{subscriptionId}/providers/Microsoft.Storage/checkNameAvailability.post.parameters[0].name: accountName
paths./subscriptions/{subscriptionId}/providers/Microsoft.Storage/checkNameAvailability.post.parameters[0].required: true
paths./subscriptions/{subscriptionId}/providers/Microsoft.Storage/checkNameAvailability.post.parameters[0].schema.$ref: '#/definitions/StorageAccountCheckNameAvailabilityParameters'
paths./subscriptions/{subscriptionId}/providers/Microsoft.Storage/checkNameAvailability.post.parameters[1].$ref: '#/parameters/ApiVersionParameter'
paths./subscriptions/{subscriptionId}/providers/Microsoft.Storage/checkNameAvailability.post.parameters[2].$ref: '#/parameters/SubscriptionIdParameter'
paths./subscriptions/{subscriptionId}/providers/Microsoft.Storage/checkNameAvailability.post.responses.200.description: ""
paths./subscriptions/{subscriptionId}/providers/Microsoft.Storage/checkNameAvailability.post.responses.200.schema.$ref: '#/definitions/CheckNameAvailabilityResult'
paths./subscriptions/{subscriptionId}/providers/Microsoft.Storage/checkNameAvailability.post.tags.length: 1
paths./subscriptions/{subscriptionId}/providers/Microsoft.Storage/checkNameAvailability.post.tags[0]: StorageAccounts
paths./subscriptions/{subscriptionId}/providers/Microsoft.Storage/storageAccounts.get.description: Lists
  all the storage accounts available under the subscription. Note that storage keys
  are not returned; use the ListKeys operation for this.
paths./subscriptions/{subscriptionId}/providers/Microsoft.Storage/storageAccounts.get.operationId: StorageAccounts_List
paths./subscriptions/{subscriptionId}/providers/Microsoft.Storage/storageAccounts.get.parameters.length: 2
paths./subscriptions/{subscriptionId}/providers/Microsoft.Storage/storageAccounts.get.parameters[0].$ref: '#/parameters/ApiVersionParameter'
paths./subscriptions/{subscriptionId}/providers/Microsoft.Storage/storageAccounts.get.parameters[1].$ref: '#/parameters/SubscriptionIdParameter'
paths./subscriptions/{subscriptionId}/providers/Microsoft.Storage/storageAccounts.get.responses.200.description: ""
paths./subscriptions/{subscriptionId}/providers/Microsoft.Storage/storageAccounts.get.responses.200.schema.$ref: '#/definitions/StorageAccountListResult'
paths./subscriptions/{subscriptionId}/providers/Microsoft.Storage/storageAccounts.get.tags.length: 1
paths./subscriptions/{subscriptionId}/providers/Microsoft.Storage/storageAccounts.get.tags[0]: StorageAccounts
paths./subscriptions/{subscriptionId}/providers/Microsoft.Storage/storageAccounts.get.x-ms-pageable.nextLinkName: nextLink
paths./subscriptions/{subscriptionId}/providers/Microsoft.Storage/usages.get.description: Gets
  the current usage count and the limit for the resources under the subscription.
paths./subscriptions/{subscriptionId}/providers/Microsoft.Storage/usages.get.operationId: Usage_List
paths./subscriptions/{subscriptionId}/providers/Microsoft.Storage/usages.get.parameters.length: 2
paths./subscriptions/{subscriptionId}/providers/Microsoft.Storage/usages.get.parameters[0].$ref: '#/parameters/ApiVersionParameter'
paths./subscriptions/{subscriptionId}/providers/Microsoft.Storage/usages.get.parameters[1].$ref: '#/parameters/SubscriptionIdParameter'
paths./subscriptions/{subscriptionId}/providers/Microsoft.Storage/usages.get.responses.200.description: ""
paths./subscriptions/{subscriptionId}/providers/Microsoft.Storage/usages.get.responses.200.schema.$ref: '#/definitions/UsageListResult'
paths./subscriptions/{subscriptionId}/providers/Microsoft.Storage/usages.get.tags.length: 1
paths./subscriptions/{subscriptionId}/providers/Microsoft.Storage/usages.get.tags[0]: Usage
? paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts.get.description
: Lists all the storage accounts available under the given resource group. Note that
  storage keys are not returned; use the ListKeys operation for this.
? paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts.get.operationId
: StorageAccounts_ListByResourceGroup
? paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts.get.parameters.length
: 3
? paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts.get.parameters[0].description
: The name of the resource group within the user's subscription.
? paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts.get.parameters[0].in
: path
? paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts.get.parameters[0].name
: resourceGroupName
? paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts.get.parameters[0].required
: true
? paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts.get.parameters[0].type
: string
? paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts.get.parameters[1].$ref
: '#/parameters/ApiVersionParameter'
? paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts.get.parameters[2].$ref
: '#/parameters/SubscriptionIdParameter'
? paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts.get.responses.200.description
: ""
? paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts.get.responses.200.schema.$ref
: '#/definitions/StorageAccountListResult'
? paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts.get.tags.length
: 1
paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts.get.tags[0]: StorageAccounts
? paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts.get.x-ms-pageable.nextLinkName
: nextLink
? paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}.delete.description
: Deletes a storage account in Microsoft Azure.
? paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}.delete.operationId
: StorageAccounts_Delete
? paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}.delete.parameters.length
: 4
? paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}.delete.parameters[0].description
: The name of the resource group within the user's subscription.
? paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}.delete.parameters[0].in
: path
? paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}.delete.parameters[0].name
: resourceGroupName
? paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}.delete.parameters[0].required
: true
? paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}.delete.parameters[0].type
: string
? paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}.delete.parameters[1].description
: 'The name of the storage account within the specified resource group. Storage account
  names must be between 3 and 24 characters in length and use numbers and lower-case
  letters only.  '
? paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}.delete.parameters[1].in
: path
? paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}.delete.parameters[1].name
: accountName
? paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}.delete.parameters[1].required
: true
? paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}.delete.parameters[1].type
: string
? paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}.delete.parameters[2].$ref
: '#/parameters/ApiVersionParameter'
? paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}.delete.parameters[3].$ref
: '#/parameters/SubscriptionIdParameter'
? paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}.delete.responses.200.description
: ""
? paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}.delete.responses.204.description
: ""
? paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}.delete.tags.length
: 1
? paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}.delete.tags[0]
: StorageAccounts
? paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}.get.description
: Returns the properties for the specified storage account including but not limited
  to name, account type, location, and account status. The ListKeys operation should
  be used to retrieve storage keys.
? paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}.get.operationId
: StorageAccounts_GetProperties
? paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}.get.parameters.length
: 4
? paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}.get.parameters[0].description
: The name of the resource group within the user's subscription.
? paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}.get.parameters[0].in
: path
? paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}.get.parameters[0].name
: resourceGroupName
? paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}.get.parameters[0].required
: true
? paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}.get.parameters[0].type
: string
? paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}.get.parameters[1].description
: 'The name of the storage account within the specified resource group. Storage account
  names must be between 3 and 24 characters in length and use numbers and lower-case
  letters only.  '
? paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}.get.parameters[1].in
: path
? paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}.get.parameters[1].name
: accountName
? paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}.get.parameters[1].required
: true
? paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}.get.parameters[1].type
: string
? paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}.get.parameters[2].$ref
: '#/parameters/ApiVersionParameter'
? paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}.get.parameters[3].$ref
: '#/parameters/SubscriptionIdParameter'
? paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}.get.responses.200.description
: ""
? paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}.get.responses.200.schema.$ref
: '#/definitions/StorageAccount'
? paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}.get.tags.length
: 1
? paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}.get.tags[0]
: StorageAccounts
? paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}.patch.description
: Updates the account type or tags for a storage account. It can also be used to add
  a custom domain (note that custom domains cannot be added via the Create operation).
  Only one custom domain is supported per storage account. This API can only be used
  to update one of tags, accountType, or customDomain per call. To update multiple
  of these properties, call the API multiple times with one change per call. This
  call does not change the storage keys for the account. If you want to change storage
  account keys, use the RegenerateKey operation. The location and name of the storage
  account cannot be changed after creation.
? paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}.patch.operationId
: StorageAccounts_Update
? paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}.patch.parameters.length
: 5
? paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}.patch.parameters[0].description
: The name of the resource group within the user's subscription.
? paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}.patch.parameters[0].in
: path
? paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}.patch.parameters[0].name
: resourceGroupName
? paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}.patch.parameters[0].required
: true
? paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}.patch.parameters[0].type
: string
? paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}.patch.parameters[1].description
: 'The name of the storage account within the specified resource group. Storage account
  names must be between 3 and 24 characters in length and use numbers and lower-case
  letters only.  '
? paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}.patch.parameters[1].in
: path
? paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}.patch.parameters[1].name
: accountName
? paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}.patch.parameters[1].required
: true
? paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}.patch.parameters[1].type
: string
? paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}.patch.parameters[2].description
: 'The parameters to update on the account. Note that only one property can be changed
  at a time using this API. '
? paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}.patch.parameters[2].in
: body
? paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}.patch.parameters[2].name
: parameters
? paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}.patch.parameters[2].required
: true
? paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}.patch.parameters[2].schema.$ref
: '#/definitions/StorageAccountUpdateParameters'
? paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}.patch.parameters[3].$ref
: '#/parameters/ApiVersionParameter'
? paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}.patch.parameters[4].$ref
: '#/parameters/SubscriptionIdParameter'
? paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}.patch.responses.200.description
: ""
? paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}.patch.responses.200.schema.$ref
: '#/definitions/StorageAccount'
? paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}.patch.tags.length
: 1
? paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}.patch.tags[0]
: StorageAccounts
? paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}.put.description
: 'Asynchronously creates a new storage account with the specified parameters. Existing
  accounts cannot be updated with this API and should instead use the Update Storage
  Account API. If an account is already created and subsequent PUT request is issued
  with exact same set of properties, then HTTP 200 would be returned. '
? paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}.put.operationId
: StorageAccounts_Create
? paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}.put.parameters.length
: 5
? paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}.put.parameters[0].description
: The name of the resource group within the user's subscription.
? paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}.put.parameters[0].in
: path
? paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}.put.parameters[0].name
: resourceGroupName
? paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}.put.parameters[0].required
: true
? paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}.put.parameters[0].type
: string
? paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}.put.parameters[1].description
: 'The name of the storage account within the specified resource group. Storage account
  names must be between 3 and 24 characters in length and use numbers and lower-case
  letters only.  '
? paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}.put.parameters[1].in
: path
? paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}.put.parameters[1].name
: accountName
? paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}.put.parameters[1].required
: true
? paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}.put.parameters[1].type
: string
? paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}.put.parameters[2].description
: The parameters to provide for the created account.
? paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}.put.parameters[2].in
: body
? paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}.put.parameters[2].name
: parameters
? paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}.put.parameters[2].required
: true
? paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}.put.parameters[2].schema.$ref
: '#/definitions/StorageAccountCreateParameters'
? paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}.put.parameters[3].$ref
: '#/parameters/ApiVersionParameter'
? paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}.put.parameters[4].$ref
: '#/parameters/SubscriptionIdParameter'
? paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}.put.responses.200.description
: ""
? paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}.put.responses.200.schema.$ref
: '#/definitions/StorageAccount'
? paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}.put.responses.202.description
: ""
? paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}.put.tags.length
: 1
? paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}.put.tags[0]
: StorageAccounts
? paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}.put.x-ms-long-running-operation
: true
? paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/listKeys.post.description
: Lists the access keys for the specified storage account.
? paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/listKeys.post.operationId
: StorageAccounts_ListKeys
? paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/listKeys.post.parameters.length
: 4
? paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/listKeys.post.parameters[0].description
: The name of the resource group.
? paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/listKeys.post.parameters[0].in
: path
? paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/listKeys.post.parameters[0].name
: resourceGroupName
? paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/listKeys.post.parameters[0].required
: true
? paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/listKeys.post.parameters[0].type
: string
? paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/listKeys.post.parameters[1].description
: The name of the storage account.
? paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/listKeys.post.parameters[1].in
: path
? paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/listKeys.post.parameters[1].name
: accountName
? paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/listKeys.post.parameters[1].required
: true
? paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/listKeys.post.parameters[1].type
: string
? paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/listKeys.post.parameters[2].$ref
: '#/parameters/ApiVersionParameter'
? paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/listKeys.post.parameters[3].$ref
: '#/parameters/SubscriptionIdParameter'
? paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/listKeys.post.responses.200.description
: ""
? paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/listKeys.post.responses.200.schema.$ref
: '#/definitions/StorageAccountKeys'
? paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/listKeys.post.tags.length
: 1
? paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/listKeys.post.tags[0]
: StorageAccounts
? paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/regenerateKey.post.description
: Regenerates the access keys for the specified storage account.
? paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/regenerateKey.post.operationId
: StorageAccounts_RegenerateKey
? paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/regenerateKey.post.parameters.length
: 5
? paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/regenerateKey.post.parameters[0].description
: The name of the resource group within the user's subscription.
? paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/regenerateKey.post.parameters[0].in
: path
? paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/regenerateKey.post.parameters[0].name
: resourceGroupName
? paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/regenerateKey.post.parameters[0].required
: true
? paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/regenerateKey.post.parameters[0].type
: string
? paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/regenerateKey.post.parameters[1].description
: 'The name of the storage account within the specified resource group. Storage account
  names must be between 3 and 24 characters in length and use numbers and lower-case
  letters only.  '
? paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/regenerateKey.post.parameters[1].in
: path
? paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/regenerateKey.post.parameters[1].name
: accountName
? paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/regenerateKey.post.parameters[1].required
: true
? paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/regenerateKey.post.parameters[1].type
: string
? paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/regenerateKey.post.parameters[2].description
: Specifies name of the key which should be regenerated.
? paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/regenerateKey.post.parameters[2].in
: body
? paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/regenerateKey.post.parameters[2].name
: regenerateKey
? paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/regenerateKey.post.parameters[2].required
: true
? paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/regenerateKey.post.parameters[2].schema.$ref
: '#/definitions/StorageAccountRegenerateKeyParameters'
? paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/regenerateKey.post.parameters[3].$ref
: '#/parameters/ApiVersionParameter'
? paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/regenerateKey.post.parameters[4].$ref
: '#/parameters/SubscriptionIdParameter'
? paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/regenerateKey.post.responses.200.description
: ""
? paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/regenerateKey.post.responses.200.schema.$ref
: '#/definitions/StorageAccountKeys'
? paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/regenerateKey.post.tags.length
: 1
? paths./subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/regenerateKey.post.tags[0]
: StorageAccounts
produces.length: 2
produces[0]: application/json
produces[1]: text/json
schemes.length: 1
schemes[0]: https
security.length: 1
security[0].azure_auth.length: 1
security[0].azure_auth[0]: user_impersonation
securityDefinitions.azure_auth.authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
securityDefinitions.azure_auth.description: Azure Active Directory OAuth2 Flow
securityDefinitions.azure_auth.flow: implicit
securityDefinitions.azure_auth.scopes.user_impersonation: impersonate your user account
securityDefinitions.azure_auth.type: oauth2
swagger: "2.0"
