syntax = "proto3";

import "google/api/annotations.proto";

package wordnetsimilarityapis;

message GetWordnetSimilarityHirststongeRequest {
    // Access Token
    string access_token = 1;
    // Part-of-speech1. [n:noun,v:verb,a:adjective,r:adverb]
    string pos1 = 2;
    // Part-of-speech2. [n:noun,v:verb,a:adjective,r:adverb]
    string pos2 = 3;
    // Word1
    string word1 = 4;
    // Word2
    string word2 = 5;
}

message GetWordnetSimilarityJiangconrathRequest {
    // Access Token
    string access_token = 1;
    // Part-of-speech1. [n:noun,v:verb,a:adjective,r:adverb]
    string pos1 = 2;
    // Part-of-speech2. [n:noun,v:verb,a:adjective,r:adverb]
    string pos2 = 3;
    // Word1
    string word1 = 4;
    // Word2
    string word2 = 5;
}

message GetWordnetSimilarityLeacockchodorowRequest {
    // Access Token
    string access_token = 1;
    // Part-of-speech1. [n:noun,v:verb,a:adjective,r:adverb]
    string pos1 = 2;
    // Part-of-speech2. [n:noun,v:verb,a:adjective,r:adverb]
    string pos2 = 3;
    // Word1
    string word1 = 4;
    // Word2
    string word2 = 5;
}

message GetWordnetSimilarityLeskRequest {
    // Access Token
    string access_token = 1;
    // Part-of-speech1. [n:noun,v:verb,a:adjective,r:adverb]
    string pos1 = 2;
    // Part-of-speech2. [n:noun,v:verb,a:adjective,r:adverb]
    string pos2 = 3;
    // Word1
    string word1 = 4;
    // Word2
    string word2 = 5;
}

message GetWordnetSimilarityLinRequest {
    // Access Token
    string access_token = 1;
    // Part-of-speech1. [n:noun,v:verb,a:adjective,r:adverb]
    string pos1 = 2;
    // Part-of-speech2. [n:noun,v:verb,a:adjective,r:adverb]
    string pos2 = 3;
    // Word1
    string word1 = 4;
    // Word2
    string word2 = 5;
}

message GetWordnetSimilarityPathRequest {
    // Access Token
    string access_token = 1;
    // Part-of-speech1. [n:noun,v:verb,a:adjective,r:adverb]
    string pos1 = 2;
    // Part-of-speech2. [n:noun,v:verb,a:adjective,r:adverb]
    string pos2 = 3;
    // Word1
    string word1 = 4;
    // Word2
    string word2 = 5;
}

message GetWordnetSimilarityResnikRequest {
    // Access Token
    string access_token = 1;
    // Part-of-speech1. [n:noun,v:verb,a:adjective,r:adverb]
    string pos1 = 2;
    // Part-of-speech2. [n:noun,v:verb,a:adjective,r:adverb]
    string pos2 = 3;
    // Word1
    string word1 = 4;
    // Word2
    string word2 = 5;
}

message GetWordnetSimilarityWupalmerRequest {
    // Access Token
    string access_token = 1;
    // Part-of-speech1. [n:noun,v:verb,a:adjective,r:adverb]
    string pos1 = 2;
    // Part-of-speech2. [n:noun,v:verb,a:adjective,r:adverb]
    string pos2 = 3;
    // Word1
    string word1 = 4;
    // Word2
    string word2 = 5;
}

message WordnetSimilarityResponseEntity {
    // End date
    string endTime = 1;
    // Log message
    string log = 2;
    // Method
    string method = 3;
    // Pos1
    string pos1 = 4;
    // Pos2
    string pos2 = 5;
    // Process time [millisecond]
    string processTime = 6;
    // Similarity
    double similarity = 7;
    // Start date
    string startTime = 8;
    // Word1
    string word1 = 9;
    // Word2
    string word2 = 10;
}

service WordNetSimilarityAPIsService {
    // WordNet Similarity WebAPI.
    // 
    // WordNet similarity.<BR />Response<BR />&nbsp; Github: <a href="https://github.com/keigohtr/apitore-response-parent/tree/master/wordnet-response">wordnet-response</a><BR />
    rpc GetWordnetSimilarityHirststonge(GetWordnetSimilarityHirststongeRequest) returns (WordnetSimilarityResponseEntity) {
      option (google.api.http) = {
        get: "/api/47/wordnet-similarity/hirststonge"
      };
    }
    // WordNet Similarity WebAPI.
    // 
    // WordNet similarity.<BR />Response<BR />&nbsp; Github: <a href="https://github.com/keigohtr/apitore-response-parent/tree/master/wordnet-response">wordnet-response</a><BR />
    rpc GetWordnetSimilarityJiangconrath(GetWordnetSimilarityJiangconrathRequest) returns (WordnetSimilarityResponseEntity) {
      option (google.api.http) = {
        get: "/api/47/wordnet-similarity/jiangconrath"
      };
    }
    // WordNet Similarity WebAPI.
    // 
    // WordNet similarity.<BR />Response<BR />&nbsp; Github: <a href="https://github.com/keigohtr/apitore-response-parent/tree/master/wordnet-response">wordnet-response</a><BR />
    rpc GetWordnetSimilarityLeacockchodorow(GetWordnetSimilarityLeacockchodorowRequest) returns (WordnetSimilarityResponseEntity) {
      option (google.api.http) = {
        get: "/api/47/wordnet-similarity/leacockchodorow"
      };
    }
    // WordNet Similarity WebAPI.
    // 
    // WordNet similarity.<BR />Response<BR />&nbsp; Github: <a href="https://github.com/keigohtr/apitore-response-parent/tree/master/wordnet-response">wordnet-response</a><BR />
    rpc GetWordnetSimilarityLesk(GetWordnetSimilarityLeskRequest) returns (WordnetSimilarityResponseEntity) {
      option (google.api.http) = {
        get: "/api/47/wordnet-similarity/lesk"
      };
    }
    // WordNet Similarity WebAPI.
    // 
    // WordNet similarity.<BR />Response<BR />&nbsp; Github: <a href="https://github.com/keigohtr/apitore-response-parent/tree/master/wordnet-response">wordnet-response</a><BR />
    rpc GetWordnetSimilarityLin(GetWordnetSimilarityLinRequest) returns (WordnetSimilarityResponseEntity) {
      option (google.api.http) = {
        get: "/api/47/wordnet-similarity/lin"
      };
    }
    // WordNet Similarity WebAPI.
    // 
    // WordNet similarity.<BR />Response<BR />&nbsp; Github: <a href="https://github.com/keigohtr/apitore-response-parent/tree/master/wordnet-response">wordnet-response</a><BR />
    rpc GetWordnetSimilarityPath(GetWordnetSimilarityPathRequest) returns (WordnetSimilarityResponseEntity) {
      option (google.api.http) = {
        get: "/api/47/wordnet-similarity/path"
      };
    }
    // WordNet Similarity WebAPI.
    // 
    // WordNet similarity.<BR />Response<BR />&nbsp; Github: <a href="https://github.com/keigohtr/apitore-response-parent/tree/master/wordnet-response">wordnet-response</a><BR />
    rpc GetWordnetSimilarityResnik(GetWordnetSimilarityResnikRequest) returns (WordnetSimilarityResponseEntity) {
      option (google.api.http) = {
        get: "/api/47/wordnet-similarity/resnik"
      };
    }
    // WordNet Similarity WebAPI.
    // 
    // WordNet similarity.<BR />Response<BR />&nbsp; Github: <a href="https://github.com/keigohtr/apitore-response-parent/tree/master/wordnet-response">wordnet-response</a><BR />
    rpc GetWordnetSimilarityWupalmer(GetWordnetSimilarityWupalmerRequest) returns (WordnetSimilarityResponseEntity) {
      option (google.api.http) = {
        get: "/api/47/wordnet-similarity/wupalmer"
      };
    }
}
