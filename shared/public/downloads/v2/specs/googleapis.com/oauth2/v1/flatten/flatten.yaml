basePath: /
definitions.Jwk.properties.keys.items.properties.alg.default: RS256
definitions.Jwk.properties.keys.items.properties.alg.type: string
definitions.Jwk.properties.keys.items.properties.e.type: string
definitions.Jwk.properties.keys.items.properties.kid.type: string
definitions.Jwk.properties.keys.items.properties.kty.default: RSA
definitions.Jwk.properties.keys.items.properties.kty.type: string
definitions.Jwk.properties.keys.items.properties.n.type: string
definitions.Jwk.properties.keys.items.properties.use.default: sig
definitions.Jwk.properties.keys.items.properties.use.type: string
definitions.Jwk.properties.keys.items.type: object
definitions.Jwk.properties.keys.type: array
definitions.Jwk.type: object
definitions.Raw.properties.keyvalues.items.properties.algorithm.default: RSA
definitions.Raw.properties.keyvalues.items.properties.algorithm.type: string
definitions.Raw.properties.keyvalues.items.properties.exponent.type: string
definitions.Raw.properties.keyvalues.items.properties.keyid.type: string
definitions.Raw.properties.keyvalues.items.properties.modulus.type: string
definitions.Raw.properties.keyvalues.items.type: object
definitions.Raw.properties.keyvalues.type: array
definitions.Raw.type: object
definitions.Tokeninfo.properties.access_type.description: The access type granted
  with this token. It can be offline or online.
definitions.Tokeninfo.properties.access_type.type: string
definitions.Tokeninfo.properties.audience.description: Who is the intended audience
  for this token. In general the same as issued_to.
definitions.Tokeninfo.properties.audience.type: string
definitions.Tokeninfo.properties.email.description: The email address of the user.
  Present only if the email scope is present in the request.
definitions.Tokeninfo.properties.email.type: string
definitions.Tokeninfo.properties.email_verified.description: Boolean flag which is
  true if the email address is verified. Present only if the email scope is present
  in the request.
definitions.Tokeninfo.properties.email_verified.type: boolean
definitions.Tokeninfo.properties.expires_in.description: The expiry time of the token,
  as number of seconds left until expiry.
definitions.Tokeninfo.properties.expires_in.format: int32
definitions.Tokeninfo.properties.expires_in.type: integer
definitions.Tokeninfo.properties.issued_at.description: The issue time of the token,
  as number of seconds.
definitions.Tokeninfo.properties.issued_at.format: int32
definitions.Tokeninfo.properties.issued_at.type: integer
definitions.Tokeninfo.properties.issued_to.description: To whom was the token issued
  to. In general the same as audience.
definitions.Tokeninfo.properties.issued_to.type: string
definitions.Tokeninfo.properties.issuer.description: Who issued the token.
definitions.Tokeninfo.properties.issuer.type: string
definitions.Tokeninfo.properties.nonce.description: Nonce of the id token.
definitions.Tokeninfo.properties.nonce.type: string
definitions.Tokeninfo.properties.scope.description: The space separated list of scopes
  granted to this token.
definitions.Tokeninfo.properties.scope.type: string
definitions.Tokeninfo.properties.user_id.description: The obfuscated user id.
definitions.Tokeninfo.properties.user_id.type: string
definitions.Tokeninfo.properties.verified_email.description: Boolean flag which is
  true if the email address is verified. Present only if the email scope is present
  in the request.
definitions.Tokeninfo.properties.verified_email.type: boolean
definitions.Tokeninfo.type: object
definitions.Userinfoplus.properties.email.description: The user's email address.
definitions.Userinfoplus.properties.email.type: string
definitions.Userinfoplus.properties.family_name.description: The user's last name.
definitions.Userinfoplus.properties.family_name.type: string
definitions.Userinfoplus.properties.gender.description: The user's gender.
definitions.Userinfoplus.properties.gender.type: string
definitions.Userinfoplus.properties.given_name.description: The user's first name.
definitions.Userinfoplus.properties.given_name.type: string
definitions.Userinfoplus.properties.hd.description: The hosted domain e.g. example.com
  if the user is Google apps user.
definitions.Userinfoplus.properties.hd.type: string
definitions.Userinfoplus.properties.id.description: The obfuscated ID of the user.
definitions.Userinfoplus.properties.id.type: string
definitions.Userinfoplus.properties.link.description: URL of the profile page.
definitions.Userinfoplus.properties.link.type: string
definitions.Userinfoplus.properties.locale.description: The user's preferred locale.
definitions.Userinfoplus.properties.locale.type: string
definitions.Userinfoplus.properties.name.description: The user's full name.
definitions.Userinfoplus.properties.name.type: string
definitions.Userinfoplus.properties.picture.description: URL of the user's picture
  image.
definitions.Userinfoplus.properties.picture.type: string
definitions.Userinfoplus.properties.verified_email.default: true
definitions.Userinfoplus.properties.verified_email.description: Boolean flag which
  is true if the email address is verified. Always verified because we only return
  the user's primary email address.
definitions.Userinfoplus.properties.verified_email.type: boolean
definitions.Userinfoplus.type: object
definitions.X509.additionalProperties.type: string
definitions.X509.type: object
externalDocs.url: https://developers.google.com/accounts/docs/OAuth2
host: www.googleapis.com
info.contact.name: Google
info.contact.url: https://google.com
info.description: Obtains end-user authorization grants for use with other Google
  APIs.
info.title: Google OAuth2
info.version: v1
info.x-apiClientRegistration.url: https://console.developers.google.com
info.x-apisguru-categories.length: 1
info.x-apisguru-categories[0]: security
info.x-logo.url: https://api.apis.guru/v2/cache/logo/https_www.google.com_images_branding_googlelogo_2x_googlelogo_color_272x92dp.png
info.x-origin.length: 1
info.x-origin[0].converter.url: https://github.com/lucybot/api-spec-converter
info.x-origin[0].converter.version: 2.6.0
info.x-origin[0].format: google
info.x-origin[0].url: https://www.googleapis.com/discovery/v1/apis/oauth2/v1/rest
info.x-origin[0].version: v1
info.x-preferred: false
info.x-providerName: googleapis.com
info.x-serviceName: oauth2
parameters.alt.default: json
parameters.alt.description: Data format for the response.
parameters.alt.enum.length: 1
parameters.alt.enum[0]: json
parameters.alt.in: query
parameters.alt.name: alt
parameters.alt.type: string
parameters.fields.description: Selector specifying which fields to include in a partial
  response.
parameters.fields.in: query
parameters.fields.name: fields
parameters.fields.type: string
parameters.key.description: API key. Your API key identifies your project and provides
  you with API access, quota, and reports. Required unless you provide an OAuth 2.0
  token.
parameters.key.in: query
parameters.key.name: key
parameters.key.type: string
parameters.oauth_token.description: OAuth 2.0 token for the current user.
parameters.oauth_token.in: query
parameters.oauth_token.name: oauth_token
parameters.oauth_token.type: string
parameters.prettyPrint.default: true
parameters.prettyPrint.description: Returns response with indentations and line breaks.
parameters.prettyPrint.in: query
parameters.prettyPrint.name: prettyPrint
parameters.prettyPrint.type: boolean
parameters.quotaUser.description: Available to use for quota purposes for server-side
  applications. Can be any arbitrary string assigned to a user, but should not exceed
  40 characters. Overrides userIp if both are provided.
parameters.quotaUser.in: query
parameters.quotaUser.name: quotaUser
parameters.quotaUser.type: string
parameters.userIp.description: IP address of the site where the request originates.
  Use this if you want to enforce per-user limits.
parameters.userIp.in: query
parameters.userIp.name: userIp
parameters.userIp.type: string
paths./oauth2/v1/certs.get.operationId: oauth2.getCertForOpenIdConnect
paths./oauth2/v1/certs.get.responses.200.description: Successful response
paths./oauth2/v1/certs.get.responses.200.schema.$ref: '#/definitions/X509'
paths./oauth2/v1/certs.parameters.length: 7
paths./oauth2/v1/certs.parameters[0].$ref: '#/parameters/alt'
paths./oauth2/v1/certs.parameters[1].$ref: '#/parameters/fields'
paths./oauth2/v1/certs.parameters[2].$ref: '#/parameters/key'
paths./oauth2/v1/certs.parameters[3].$ref: '#/parameters/oauth_token'
paths./oauth2/v1/certs.parameters[4].$ref: '#/parameters/prettyPrint'
paths./oauth2/v1/certs.parameters[5].$ref: '#/parameters/quotaUser'
paths./oauth2/v1/certs.parameters[6].$ref: '#/parameters/userIp'
paths./oauth2/v1/raw_public_keys.get.operationId: oauth2.getCertForOpenIdConnectRaw
paths./oauth2/v1/raw_public_keys.get.responses.200.description: Successful response
paths./oauth2/v1/raw_public_keys.get.responses.200.schema.$ref: '#/definitions/Raw'
paths./oauth2/v1/raw_public_keys.parameters.length: 7
paths./oauth2/v1/raw_public_keys.parameters[0].$ref: '#/parameters/alt'
paths./oauth2/v1/raw_public_keys.parameters[1].$ref: '#/parameters/fields'
paths./oauth2/v1/raw_public_keys.parameters[2].$ref: '#/parameters/key'
paths./oauth2/v1/raw_public_keys.parameters[3].$ref: '#/parameters/oauth_token'
paths./oauth2/v1/raw_public_keys.parameters[4].$ref: '#/parameters/prettyPrint'
paths./oauth2/v1/raw_public_keys.parameters[5].$ref: '#/parameters/quotaUser'
paths./oauth2/v1/raw_public_keys.parameters[6].$ref: '#/parameters/userIp'
paths./oauth2/v1/tokeninfo.parameters.length: 7
paths./oauth2/v1/tokeninfo.parameters[0].$ref: '#/parameters/alt'
paths./oauth2/v1/tokeninfo.parameters[1].$ref: '#/parameters/fields'
paths./oauth2/v1/tokeninfo.parameters[2].$ref: '#/parameters/key'
paths./oauth2/v1/tokeninfo.parameters[3].$ref: '#/parameters/oauth_token'
paths./oauth2/v1/tokeninfo.parameters[4].$ref: '#/parameters/prettyPrint'
paths./oauth2/v1/tokeninfo.parameters[5].$ref: '#/parameters/quotaUser'
paths./oauth2/v1/tokeninfo.parameters[6].$ref: '#/parameters/userIp'
paths./oauth2/v1/tokeninfo.post.description: Get token info
paths./oauth2/v1/tokeninfo.post.operationId: oauth2.tokeninfo
paths./oauth2/v1/tokeninfo.post.parameters.length: 2
paths./oauth2/v1/tokeninfo.post.parameters[0].description: The oauth2 access token
paths./oauth2/v1/tokeninfo.post.parameters[0].in: query
paths./oauth2/v1/tokeninfo.post.parameters[0].name: access_token
paths./oauth2/v1/tokeninfo.post.parameters[0].type: string
paths./oauth2/v1/tokeninfo.post.parameters[1].description: The ID token
paths./oauth2/v1/tokeninfo.post.parameters[1].in: query
paths./oauth2/v1/tokeninfo.post.parameters[1].name: id_token
paths./oauth2/v1/tokeninfo.post.parameters[1].type: string
paths./oauth2/v1/tokeninfo.post.responses.200.description: Successful response
paths./oauth2/v1/tokeninfo.post.responses.200.schema.$ref: '#/definitions/Tokeninfo'
paths./oauth2/v1/userinfo.get.description: Get user info
paths./oauth2/v1/userinfo.get.operationId: oauth2.userinfo.get
paths./oauth2/v1/userinfo.get.responses.200.description: Successful response
paths./oauth2/v1/userinfo.get.responses.200.schema.$ref: '#/definitions/Userinfoplus'
paths./oauth2/v1/userinfo.get.security.length: 4
paths./oauth2/v1/userinfo.get.security[0].Oauth2.length: 1
paths./oauth2/v1/userinfo.get.security[0].Oauth2[0]: https://www.googleapis.com/auth/plus.login
paths./oauth2/v1/userinfo.get.security[1].Oauth2.length: 1
paths./oauth2/v1/userinfo.get.security[1].Oauth2[0]: https://www.googleapis.com/auth/plus.me
paths./oauth2/v1/userinfo.get.security[2].Oauth2.length: 1
paths./oauth2/v1/userinfo.get.security[2].Oauth2[0]: https://www.googleapis.com/auth/userinfo.email
paths./oauth2/v1/userinfo.get.security[3].Oauth2.length: 1
paths./oauth2/v1/userinfo.get.security[3].Oauth2[0]: https://www.googleapis.com/auth/userinfo.profile
paths./oauth2/v1/userinfo.get.tags.length: 1
paths./oauth2/v1/userinfo.get.tags[0]: userinfo
paths./oauth2/v1/userinfo.parameters.length: 7
paths./oauth2/v1/userinfo.parameters[0].$ref: '#/parameters/alt'
paths./oauth2/v1/userinfo.parameters[1].$ref: '#/parameters/fields'
paths./oauth2/v1/userinfo.parameters[2].$ref: '#/parameters/key'
paths./oauth2/v1/userinfo.parameters[3].$ref: '#/parameters/oauth_token'
paths./oauth2/v1/userinfo.parameters[4].$ref: '#/parameters/prettyPrint'
paths./oauth2/v1/userinfo.parameters[5].$ref: '#/parameters/quotaUser'
paths./oauth2/v1/userinfo.parameters[6].$ref: '#/parameters/userIp'
paths./service_accounts/v1/jwk/{robotEmail}.get.operationId: oauth2.getRobotJwk
paths./service_accounts/v1/jwk/{robotEmail}.get.parameters.length: 1
paths./service_accounts/v1/jwk/{robotEmail}.get.parameters[0].description: The email
  of robot account.
paths./service_accounts/v1/jwk/{robotEmail}.get.parameters[0].in: path
paths./service_accounts/v1/jwk/{robotEmail}.get.parameters[0].name: robotEmail
paths./service_accounts/v1/jwk/{robotEmail}.get.parameters[0].required: true
paths./service_accounts/v1/jwk/{robotEmail}.get.parameters[0].type: string
paths./service_accounts/v1/jwk/{robotEmail}.get.responses.200.description: Successful
  response
paths./service_accounts/v1/jwk/{robotEmail}.get.responses.200.schema.$ref: '#/definitions/Jwk'
paths./service_accounts/v1/jwk/{robotEmail}.parameters.length: 7
paths./service_accounts/v1/jwk/{robotEmail}.parameters[0].$ref: '#/parameters/alt'
paths./service_accounts/v1/jwk/{robotEmail}.parameters[1].$ref: '#/parameters/fields'
paths./service_accounts/v1/jwk/{robotEmail}.parameters[2].$ref: '#/parameters/key'
paths./service_accounts/v1/jwk/{robotEmail}.parameters[3].$ref: '#/parameters/oauth_token'
paths./service_accounts/v1/jwk/{robotEmail}.parameters[4].$ref: '#/parameters/prettyPrint'
paths./service_accounts/v1/jwk/{robotEmail}.parameters[5].$ref: '#/parameters/quotaUser'
paths./service_accounts/v1/jwk/{robotEmail}.parameters[6].$ref: '#/parameters/userIp'
paths./service_accounts/v1/metadata/raw/{robotEmail}.get.operationId: oauth2.getRobotMetadataRaw
paths./service_accounts/v1/metadata/raw/{robotEmail}.get.parameters.length: 1
paths./service_accounts/v1/metadata/raw/{robotEmail}.get.parameters[0].description: The
  email of robot account.
paths./service_accounts/v1/metadata/raw/{robotEmail}.get.parameters[0].in: path
paths./service_accounts/v1/metadata/raw/{robotEmail}.get.parameters[0].name: robotEmail
paths./service_accounts/v1/metadata/raw/{robotEmail}.get.parameters[0].required: true
paths./service_accounts/v1/metadata/raw/{robotEmail}.get.parameters[0].type: string
paths./service_accounts/v1/metadata/raw/{robotEmail}.get.responses.200.description: Successful
  response
paths./service_accounts/v1/metadata/raw/{robotEmail}.get.responses.200.schema.$ref: '#/definitions/Raw'
paths./service_accounts/v1/metadata/raw/{robotEmail}.parameters.length: 7
paths./service_accounts/v1/metadata/raw/{robotEmail}.parameters[0].$ref: '#/parameters/alt'
paths./service_accounts/v1/metadata/raw/{robotEmail}.parameters[1].$ref: '#/parameters/fields'
paths./service_accounts/v1/metadata/raw/{robotEmail}.parameters[2].$ref: '#/parameters/key'
paths./service_accounts/v1/metadata/raw/{robotEmail}.parameters[3].$ref: '#/parameters/oauth_token'
paths./service_accounts/v1/metadata/raw/{robotEmail}.parameters[4].$ref: '#/parameters/prettyPrint'
paths./service_accounts/v1/metadata/raw/{robotEmail}.parameters[5].$ref: '#/parameters/quotaUser'
paths./service_accounts/v1/metadata/raw/{robotEmail}.parameters[6].$ref: '#/parameters/userIp'
paths./service_accounts/v1/metadata/x509/{robotEmail}.get.operationId: oauth2.getRobotMetadataX509
paths./service_accounts/v1/metadata/x509/{robotEmail}.get.parameters.length: 1
paths./service_accounts/v1/metadata/x509/{robotEmail}.get.parameters[0].description: The
  email of robot account.
paths./service_accounts/v1/metadata/x509/{robotEmail}.get.parameters[0].in: path
paths./service_accounts/v1/metadata/x509/{robotEmail}.get.parameters[0].name: robotEmail
paths./service_accounts/v1/metadata/x509/{robotEmail}.get.parameters[0].required: true
paths./service_accounts/v1/metadata/x509/{robotEmail}.get.parameters[0].type: string
paths./service_accounts/v1/metadata/x509/{robotEmail}.get.responses.200.description: Successful
  response
paths./service_accounts/v1/metadata/x509/{robotEmail}.get.responses.200.schema.$ref: '#/definitions/X509'
paths./service_accounts/v1/metadata/x509/{robotEmail}.parameters.length: 7
paths./service_accounts/v1/metadata/x509/{robotEmail}.parameters[0].$ref: '#/parameters/alt'
paths./service_accounts/v1/metadata/x509/{robotEmail}.parameters[1].$ref: '#/parameters/fields'
paths./service_accounts/v1/metadata/x509/{robotEmail}.parameters[2].$ref: '#/parameters/key'
paths./service_accounts/v1/metadata/x509/{robotEmail}.parameters[3].$ref: '#/parameters/oauth_token'
paths./service_accounts/v1/metadata/x509/{robotEmail}.parameters[4].$ref: '#/parameters/prettyPrint'
paths./service_accounts/v1/metadata/x509/{robotEmail}.parameters[5].$ref: '#/parameters/quotaUser'
paths./service_accounts/v1/metadata/x509/{robotEmail}.parameters[6].$ref: '#/parameters/userIp'
paths./userinfo/v2/me.get.description: Get user info
paths./userinfo/v2/me.get.operationId: oauth2.userinfo.v2.me.get
paths./userinfo/v2/me.get.responses.200.description: Successful response
paths./userinfo/v2/me.get.responses.200.schema.$ref: '#/definitions/Userinfoplus'
paths./userinfo/v2/me.get.security.length: 4
paths./userinfo/v2/me.get.security[0].Oauth2.length: 1
paths./userinfo/v2/me.get.security[0].Oauth2[0]: https://www.googleapis.com/auth/plus.login
paths./userinfo/v2/me.get.security[1].Oauth2.length: 1
paths./userinfo/v2/me.get.security[1].Oauth2[0]: https://www.googleapis.com/auth/plus.me
paths./userinfo/v2/me.get.security[2].Oauth2.length: 1
paths./userinfo/v2/me.get.security[2].Oauth2[0]: https://www.googleapis.com/auth/userinfo.email
paths./userinfo/v2/me.get.security[3].Oauth2.length: 1
paths./userinfo/v2/me.get.security[3].Oauth2[0]: https://www.googleapis.com/auth/userinfo.profile
paths./userinfo/v2/me.get.tags.length: 1
paths./userinfo/v2/me.get.tags[0]: userinfo
paths./userinfo/v2/me.parameters.length: 7
paths./userinfo/v2/me.parameters[0].$ref: '#/parameters/alt'
paths./userinfo/v2/me.parameters[1].$ref: '#/parameters/fields'
paths./userinfo/v2/me.parameters[2].$ref: '#/parameters/key'
paths./userinfo/v2/me.parameters[3].$ref: '#/parameters/oauth_token'
paths./userinfo/v2/me.parameters[4].$ref: '#/parameters/prettyPrint'
paths./userinfo/v2/me.parameters[5].$ref: '#/parameters/quotaUser'
paths./userinfo/v2/me.parameters[6].$ref: '#/parameters/userIp'
schemes.length: 1
schemes[0]: https
securityDefinitions.Oauth2.authorizationUrl: https://accounts.google.com/o/oauth2/auth
securityDefinitions.Oauth2.description: Oauth 2.0 authentication
securityDefinitions.Oauth2.flow: implicit
securityDefinitions.Oauth2.scopes.https://www.googleapis.com/auth/plus.login: Know
  the list of people in your circles, your age range, and language
securityDefinitions.Oauth2.scopes.https://www.googleapis.com/auth/plus.me: Know who
  you are on Google
securityDefinitions.Oauth2.scopes.https://www.googleapis.com/auth/userinfo.email: View
  your email address
securityDefinitions.Oauth2.scopes.https://www.googleapis.com/auth/userinfo.profile: View
  your basic profile info
securityDefinitions.Oauth2.type: oauth2
swagger: "2.0"
tags.length: 1
tags[0].name: userinfo
