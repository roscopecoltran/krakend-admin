swagger: '2.0'
schemes:
  - https
host: genomics.googleapis.com
basePath: /
info:
  contact:
    name: Google
    url: 'https://google.com'
  description: 'Upload, process, query, and search Genomics data in the cloud.'
  title: Genomics
  version: v1
  x-apiClientRegistration:
    url: 'https://console.developers.google.com'
  x-logo:
    url: 'https://api.apis.guru/v2/cache/logo/https_www.google.com_images_branding_googlelogo_2x_googlelogo_color_272x92dp.png'
  x-origin:
    - converter:
        url: 'https://github.com/lucybot/api-spec-converter'
        version: 2.6.0
      format: google
      url: 'https://genomics.googleapis.com/$discovery/rest?version=v1'
      version: v1
  x-preferred: true
  x-providerName: googleapis.com
  x-serviceName: genomics
externalDocs:
  url: 'https://cloud.google.com/genomics'
securityDefinitions:
  Oauth2:
    authorizationUrl: 'https://accounts.google.com/o/oauth2/auth'
    description: Oauth 2.0 authentication
    flow: implicit
    scopes:
      'https://www.googleapis.com/auth/bigquery': View and manage your data in Google BigQuery
      'https://www.googleapis.com/auth/cloud-platform': View and manage your data across Google Cloud Platform services
      'https://www.googleapis.com/auth/devstorage.read_write': Manage your data in Google Cloud Storage
      'https://www.googleapis.com/auth/genomics': View and manage Genomics data
      'https://www.googleapis.com/auth/genomics.readonly': View Genomics data
    type: oauth2
parameters:
  $.xgafv:
    description: V1 error format.
    enum:
      - '1'
      - '2'
    in: query
    name: $.xgafv
    type: string
  access_token:
    description: OAuth access token.
    in: query
    name: access_token
    type: string
  alt:
    default: json
    description: Data format for response.
    enum:
      - json
      - media
      - proto
    in: query
    name: alt
    type: string
  bearer_token:
    description: OAuth bearer token.
    in: query
    name: bearer_token
    type: string
  callback:
    description: JSONP
    in: query
    name: callback
    type: string
  fields:
    description: Selector specifying which fields to include in a partial response.
    in: query
    name: fields
    type: string
  key:
    description: 'API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.'
    in: query
    name: key
    type: string
  oauth_token:
    description: OAuth 2.0 token for the current user.
    in: query
    name: oauth_token
    type: string
  pp:
    default: true
    description: Pretty-print response.
    in: query
    name: pp
    type: boolean
  prettyPrint:
    default: true
    description: Returns response with indentations and line breaks.
    in: query
    name: prettyPrint
    type: boolean
  quotaUser:
    description: 'Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.'
    in: query
    name: quotaUser
    type: string
  uploadType:
    description: 'Legacy upload protocol for media (e.g. "media", "multipart").'
    in: query
    name: uploadType
    type: string
  upload_protocol:
    description: 'Upload protocol for media (e.g. "raw", "multipart").'
    in: query
    name: upload_protocol
    type: string
tags:
  - name: annotations
  - name: annotationsets
  - name: callsets
  - name: datasets
  - name: operations
  - name: readgroupsets
  - name: reads
  - name: references
  - name: referencesets
  - name: variants
  - name: variantsets
paths:
  /v1/annotations:
    parameters:
      - $ref: '#/parameters/$.xgafv'
      - $ref: '#/parameters/callback'
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/access_token'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/pp'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/bearer_token'
      - $ref: '#/parameters/upload_protocol'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/uploadType'
    post:
      description: |-
        Creates a new annotation. Caller must have WRITE permission
        for the associated annotation set.

        The following fields are required:

        * annotationSetId
        * referenceName or
          referenceId

        ### Transcripts

        For annotations of type TRANSCRIPT, the following fields of
        transcript must be provided:

        * exons.start
        * exons.end

        All other fields may be optionally specified, unless documented as being
        server-generated (for example, the `id` field). The annotated
        range must be no longer than 100Mbp (mega base pairs). See the
        Annotation resource
        for additional restrictions on each field.
      operationId: genomics.annotations.create
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/Annotation'
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Annotation'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/genomics'
      tags:
        - annotations
  /v1/annotations/search:
    parameters:
      - $ref: '#/parameters/$.xgafv'
      - $ref: '#/parameters/callback'
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/access_token'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/pp'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/bearer_token'
      - $ref: '#/parameters/upload_protocol'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/uploadType'
    post:
      description: |-
        Searches for annotations that match the given criteria. Results are
        ordered by genomic coordinate (by reference sequence, then position).
        Annotations with equivalent genomic coordinates are returned in an
        unspecified order. This order is consistent, such that two queries for the
        same content (regardless of page size) yield annotations in the same order
        across their respective streams of paginated responses. Caller must have
        READ permission for the queried annotation sets.
      operationId: genomics.annotations.search
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/SearchAnnotationsRequest'
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/SearchAnnotationsResponse'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/genomics'
        - Oauth2:
            - 'https://www.googleapis.com/auth/genomics.readonly'
      tags:
        - annotations
  '/v1/annotations/{annotationId}':
    delete:
      description: |-
        Deletes an annotation. Caller must have WRITE permission for
        the associated annotation set.
      operationId: genomics.annotations.delete
      parameters:
        - description: The ID of the annotation to be deleted.
          in: path
          name: annotationId
          required: true
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Empty'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/genomics'
      tags:
        - annotations
    get:
      description: |-
        Gets an annotation. Caller must have READ permission
        for the associated annotation set.
      operationId: genomics.annotations.get
      parameters:
        - description: The ID of the annotation to be retrieved.
          in: path
          name: annotationId
          required: true
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Annotation'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/genomics'
        - Oauth2:
            - 'https://www.googleapis.com/auth/genomics.readonly'
      tags:
        - annotations
    parameters:
      - $ref: '#/parameters/$.xgafv'
      - $ref: '#/parameters/callback'
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/access_token'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/pp'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/bearer_token'
      - $ref: '#/parameters/upload_protocol'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/uploadType'
    put:
      description: |-
        Updates an annotation. Caller must have
        WRITE permission for the associated dataset.
      operationId: genomics.annotations.update
      parameters:
        - description: The ID of the annotation to be updated.
          in: path
          name: annotationId
          required: true
          type: string
        - description: |-
            An optional mask specifying which fields to update. Mutable fields are
            name,
            variant,
            transcript, and
            info. If unspecified, all mutable
            fields will be updated.
          in: query
          name: updateMask
          type: string
        - in: body
          name: body
          schema:
            $ref: '#/definitions/Annotation'
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Annotation'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/genomics'
      tags:
        - annotations
  '/v1/annotations:batchCreate':
    parameters:
      - $ref: '#/parameters/$.xgafv'
      - $ref: '#/parameters/callback'
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/access_token'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/pp'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/bearer_token'
      - $ref: '#/parameters/upload_protocol'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/uploadType'
    post:
      description: |-
        Creates one or more new annotations atomically. All annotations must
        belong to the same annotation set. Caller must have WRITE
        permission for this annotation set. For optimal performance, batch
        positionally adjacent annotations together.

        If the request has a systemic issue, such as an attempt to write to
        an inaccessible annotation set, the entire RPC will fail accordingly. For
        lesser data issues, when possible an error will be isolated to the
        corresponding batch entry in the response; the remaining well formed
        annotations will be created normally.

        For details on the requirements for each individual annotation resource,
        see
        CreateAnnotation.
      operationId: genomics.annotations.batchCreate
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/BatchCreateAnnotationsRequest'
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/BatchCreateAnnotationsResponse'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/genomics'
      tags:
        - annotations
  /v1/annotationsets:
    parameters:
      - $ref: '#/parameters/$.xgafv'
      - $ref: '#/parameters/callback'
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/access_token'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/pp'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/bearer_token'
      - $ref: '#/parameters/upload_protocol'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/uploadType'
    post:
      description: |-
        Creates a new annotation set. Caller must have WRITE permission for the
        associated dataset.

        The following fields are required:

          * datasetId
          * referenceSetId

        All other fields may be optionally specified, unless documented as being
        server-generated (for example, the `id` field).
      operationId: genomics.annotationsets.create
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/AnnotationSet'
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/AnnotationSet'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/genomics'
      tags:
        - annotationsets
  /v1/annotationsets/search:
    parameters:
      - $ref: '#/parameters/$.xgafv'
      - $ref: '#/parameters/callback'
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/access_token'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/pp'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/bearer_token'
      - $ref: '#/parameters/upload_protocol'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/uploadType'
    post:
      description: |-
        Searches for annotation sets that match the given criteria. Annotation sets
        are returned in an unspecified order. This order is consistent, such that
        two queries for the same content (regardless of page size) yield annotation
        sets in the same order across their respective streams of paginated
        responses. Caller must have READ permission for the queried datasets.
      operationId: genomics.annotationsets.search
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/SearchAnnotationSetsRequest'
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/SearchAnnotationSetsResponse'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/genomics'
        - Oauth2:
            - 'https://www.googleapis.com/auth/genomics.readonly'
      tags:
        - annotationsets
  '/v1/annotationsets/{annotationSetId}':
    delete:
      description: |-
        Deletes an annotation set. Caller must have WRITE permission
        for the associated annotation set.
      operationId: genomics.annotationsets.delete
      parameters:
        - description: The ID of the annotation set to be deleted.
          in: path
          name: annotationSetId
          required: true
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Empty'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/genomics'
      tags:
        - annotationsets
    get:
      description: |-
        Gets an annotation set. Caller must have READ permission for
        the associated dataset.
      operationId: genomics.annotationsets.get
      parameters:
        - description: The ID of the annotation set to be retrieved.
          in: path
          name: annotationSetId
          required: true
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/AnnotationSet'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/genomics'
        - Oauth2:
            - 'https://www.googleapis.com/auth/genomics.readonly'
      tags:
        - annotationsets
    parameters:
      - $ref: '#/parameters/$.xgafv'
      - $ref: '#/parameters/callback'
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/access_token'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/pp'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/bearer_token'
      - $ref: '#/parameters/upload_protocol'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/uploadType'
    put:
      description: |-
        Updates an annotation set. The update must respect all mutability
        restrictions and other invariants described on the annotation set resource.
        Caller must have WRITE permission for the associated dataset.
      operationId: genomics.annotationsets.update
      parameters:
        - description: The ID of the annotation set to be updated.
          in: path
          name: annotationSetId
          required: true
          type: string
        - description: |-
            An optional mask specifying which fields to update. Mutable fields are
            name,
            source_uri, and
            info. If unspecified, all
            mutable fields will be updated.
          in: query
          name: updateMask
          type: string
        - in: body
          name: body
          schema:
            $ref: '#/definitions/AnnotationSet'
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/AnnotationSet'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/genomics'
      tags:
        - annotationsets
  /v1/callsets:
    parameters:
      - $ref: '#/parameters/$.xgafv'
      - $ref: '#/parameters/callback'
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/access_token'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/pp'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/bearer_token'
      - $ref: '#/parameters/upload_protocol'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/uploadType'
    post:
      description: |-
        Creates a new call set.

        For the definitions of call sets and other genomics resources, see
        [Fundamentals of Google
        Genomics](https://cloud.google.com/genomics/fundamentals-of-google-genomics)
      operationId: genomics.callsets.create
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/CallSet'
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/CallSet'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/genomics'
      tags:
        - callsets
  /v1/callsets/search:
    parameters:
      - $ref: '#/parameters/$.xgafv'
      - $ref: '#/parameters/callback'
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/access_token'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/pp'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/bearer_token'
      - $ref: '#/parameters/upload_protocol'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/uploadType'
    post:
      description: |-
        Gets a list of call sets matching the criteria.

        For the definitions of call sets and other genomics resources, see
        [Fundamentals of Google
        Genomics](https://cloud.google.com/genomics/fundamentals-of-google-genomics)

        Implements
        [GlobalAllianceApi.searchCallSets](https://github.com/ga4gh/schemas/blob/v0.5.1/src/main/resources/avro/variantmethods.avdl#L178).
      operationId: genomics.callsets.search
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/SearchCallSetsRequest'
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/SearchCallSetsResponse'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/genomics'
        - Oauth2:
            - 'https://www.googleapis.com/auth/genomics.readonly'
      tags:
        - callsets
  '/v1/callsets/{callSetId}':
    delete:
      description: |-
        Deletes a call set.

        For the definitions of call sets and other genomics resources, see
        [Fundamentals of Google
        Genomics](https://cloud.google.com/genomics/fundamentals-of-google-genomics)
      operationId: genomics.callsets.delete
      parameters:
        - description: The ID of the call set to be deleted.
          in: path
          name: callSetId
          required: true
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Empty'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/genomics'
      tags:
        - callsets
    get:
      description: |-
        Gets a call set by ID.

        For the definitions of call sets and other genomics resources, see
        [Fundamentals of Google
        Genomics](https://cloud.google.com/genomics/fundamentals-of-google-genomics)
      operationId: genomics.callsets.get
      parameters:
        - description: The ID of the call set.
          in: path
          name: callSetId
          required: true
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/CallSet'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/genomics'
        - Oauth2:
            - 'https://www.googleapis.com/auth/genomics.readonly'
      tags:
        - callsets
    parameters:
      - $ref: '#/parameters/$.xgafv'
      - $ref: '#/parameters/callback'
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/access_token'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/pp'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/bearer_token'
      - $ref: '#/parameters/upload_protocol'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/uploadType'
    patch:
      description: |-
        Updates a call set.

        For the definitions of call sets and other genomics resources, see
        [Fundamentals of Google
        Genomics](https://cloud.google.com/genomics/fundamentals-of-google-genomics)

        This method supports patch semantics.
      operationId: genomics.callsets.patch
      parameters:
        - description: The ID of the call set to be updated.
          in: path
          name: callSetId
          required: true
          type: string
        - description: |-
            An optional mask specifying which fields to update. At this time, the only
            mutable field is name. The only
            acceptable value is "name". If unspecified, all mutable fields will be
            updated.
          in: query
          name: updateMask
          type: string
        - in: body
          name: body
          schema:
            $ref: '#/definitions/CallSet'
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/CallSet'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/genomics'
      tags:
        - callsets
  /v1/datasets:
    get:
      description: |-
        Lists datasets within a project.

        For the definitions of datasets and other genomics resources, see
        [Fundamentals of Google
        Genomics](https://cloud.google.com/genomics/fundamentals-of-google-genomics)
      operationId: genomics.datasets.list
      parameters:
        - description: |-
            The continuation token, which is used to page through large result sets.
            To get the next page of results, set this parameter to the value of
            `nextPageToken` from the previous response.
          in: query
          name: pageToken
          type: string
        - description: |-
            The maximum number of results to return in a single page. If unspecified,
            defaults to 50. The maximum value is 1024.
          in: query
          name: pageSize
          type: integer
        - description: Required. The Google Cloud project ID to list datasets for.
          in: query
          name: projectId
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/ListDatasetsResponse'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/genomics'
        - Oauth2:
            - 'https://www.googleapis.com/auth/genomics.readonly'
      tags:
        - datasets
    parameters:
      - $ref: '#/parameters/$.xgafv'
      - $ref: '#/parameters/callback'
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/access_token'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/pp'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/bearer_token'
      - $ref: '#/parameters/upload_protocol'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/uploadType'
    post:
      description: |-
        Creates a new dataset.

        For the definitions of datasets and other genomics resources, see
        [Fundamentals of Google
        Genomics](https://cloud.google.com/genomics/fundamentals-of-google-genomics)
      operationId: genomics.datasets.create
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/Dataset'
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Dataset'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/genomics'
      tags:
        - datasets
  '/v1/datasets/{datasetId}':
    delete:
      description: |-
        Deletes a dataset and all of its contents (all read group sets,
        reference sets, variant sets, call sets, annotation sets, etc.)
        This is reversible (up to one week after the deletion) via
        the
        datasets.undelete
        operation.

        For the definitions of datasets and other genomics resources, see
        [Fundamentals of Google
        Genomics](https://cloud.google.com/genomics/fundamentals-of-google-genomics)
      operationId: genomics.datasets.delete
      parameters:
        - description: The ID of the dataset to be deleted.
          in: path
          name: datasetId
          required: true
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Empty'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/genomics'
      tags:
        - datasets
    get:
      description: |-
        Gets a dataset by ID.

        For the definitions of datasets and other genomics resources, see
        [Fundamentals of Google
        Genomics](https://cloud.google.com/genomics/fundamentals-of-google-genomics)
      operationId: genomics.datasets.get
      parameters:
        - description: The ID of the dataset.
          in: path
          name: datasetId
          required: true
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Dataset'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/genomics'
        - Oauth2:
            - 'https://www.googleapis.com/auth/genomics.readonly'
      tags:
        - datasets
    parameters:
      - $ref: '#/parameters/$.xgafv'
      - $ref: '#/parameters/callback'
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/access_token'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/pp'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/bearer_token'
      - $ref: '#/parameters/upload_protocol'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/uploadType'
    patch:
      description: |-
        Updates a dataset.

        For the definitions of datasets and other genomics resources, see
        [Fundamentals of Google
        Genomics](https://cloud.google.com/genomics/fundamentals-of-google-genomics)

        This method supports patch semantics.
      operationId: genomics.datasets.patch
      parameters:
        - description: The ID of the dataset to be updated.
          in: path
          name: datasetId
          required: true
          type: string
        - description: |-
            An optional mask specifying which fields to update. At this time, the only
            mutable field is name. The only
            acceptable value is "name". If unspecified, all mutable fields will be
            updated.
          in: query
          name: updateMask
          type: string
        - in: body
          name: body
          schema:
            $ref: '#/definitions/Dataset'
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Dataset'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/genomics'
      tags:
        - datasets
  '/v1/datasets/{datasetId}:undelete':
    parameters:
      - $ref: '#/parameters/$.xgafv'
      - $ref: '#/parameters/callback'
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/access_token'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/pp'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/bearer_token'
      - $ref: '#/parameters/upload_protocol'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/uploadType'
    post:
      description: |-
        Undeletes a dataset by restoring a dataset which was deleted via this API.

        For the definitions of datasets and other genomics resources, see
        [Fundamentals of Google
        Genomics](https://cloud.google.com/genomics/fundamentals-of-google-genomics)

        This operation is only possible for a week after the deletion occurred.
      operationId: genomics.datasets.undelete
      parameters:
        - description: The ID of the dataset to be undeleted.
          in: path
          name: datasetId
          required: true
          type: string
        - in: body
          name: body
          schema:
            $ref: '#/definitions/UndeleteDatasetRequest'
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Dataset'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/genomics'
      tags:
        - datasets
  /v1/readgroupsets/search:
    parameters:
      - $ref: '#/parameters/$.xgafv'
      - $ref: '#/parameters/callback'
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/access_token'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/pp'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/bearer_token'
      - $ref: '#/parameters/upload_protocol'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/uploadType'
    post:
      description: |-
        Searches for read group sets matching the criteria.

        For the definitions of read group sets and other genomics resources, see
        [Fundamentals of Google
        Genomics](https://cloud.google.com/genomics/fundamentals-of-google-genomics)

        Implements
        [GlobalAllianceApi.searchReadGroupSets](https://github.com/ga4gh/schemas/blob/v0.5.1/src/main/resources/avro/readmethods.avdl#L135).
      operationId: genomics.readgroupsets.search
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/SearchReadGroupSetsRequest'
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/SearchReadGroupSetsResponse'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/genomics'
        - Oauth2:
            - 'https://www.googleapis.com/auth/genomics.readonly'
      tags:
        - readgroupsets
  '/v1/readgroupsets/{readGroupSetId}':
    delete:
      description: |-
        Deletes a read group set.

        For the definitions of read group sets and other genomics resources, see
        [Fundamentals of Google
        Genomics](https://cloud.google.com/genomics/fundamentals-of-google-genomics)
      operationId: genomics.readgroupsets.delete
      parameters:
        - description: |-
            The ID of the read group set to be deleted. The caller must have WRITE
            permissions to the dataset associated with this read group set.
          in: path
          name: readGroupSetId
          required: true
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Empty'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/genomics'
      tags:
        - readgroupsets
    get:
      description: |-
        Gets a read group set by ID.

        For the definitions of read group sets and other genomics resources, see
        [Fundamentals of Google
        Genomics](https://cloud.google.com/genomics/fundamentals-of-google-genomics)
      operationId: genomics.readgroupsets.get
      parameters:
        - description: The ID of the read group set.
          in: path
          name: readGroupSetId
          required: true
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/ReadGroupSet'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/genomics'
        - Oauth2:
            - 'https://www.googleapis.com/auth/genomics.readonly'
      tags:
        - readgroupsets
    parameters:
      - $ref: '#/parameters/$.xgafv'
      - $ref: '#/parameters/callback'
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/access_token'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/pp'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/bearer_token'
      - $ref: '#/parameters/upload_protocol'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/uploadType'
    patch:
      description: |-
        Updates a read group set.

        For the definitions of read group sets and other genomics resources, see
        [Fundamentals of Google
        Genomics](https://cloud.google.com/genomics/fundamentals-of-google-genomics)

        This method supports patch semantics.
      operationId: genomics.readgroupsets.patch
      parameters:
        - description: |-
            The ID of the read group set to be updated. The caller must have WRITE
            permissions to the dataset associated with this read group set.
          in: path
          name: readGroupSetId
          required: true
          type: string
        - description: |-
            An optional mask specifying which fields to update. Supported fields:

            * name.
            * referenceSetId.

            Leaving `updateMask` unset is equivalent to specifying all mutable
            fields.
          in: query
          name: updateMask
          type: string
        - in: body
          name: body
          schema:
            $ref: '#/definitions/ReadGroupSet'
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/ReadGroupSet'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/genomics'
      tags:
        - readgroupsets
  '/v1/readgroupsets/{readGroupSetId}/coveragebuckets':
    get:
      description: |-
        Lists fixed width coverage buckets for a read group set, each of which
        correspond to a range of a reference sequence. Each bucket summarizes
        coverage information across its corresponding genomic range.

        For the definitions of read group sets and other genomics resources, see
        [Fundamentals of Google
        Genomics](https://cloud.google.com/genomics/fundamentals-of-google-genomics)

        Coverage is defined as the number of reads which are aligned to a given
        base in the reference sequence. Coverage buckets are available at several
        precomputed bucket widths, enabling retrieval of various coverage 'zoom
        levels'. The caller must have READ permissions for the target read group
        set.
      operationId: genomics.readgroupsets.coveragebuckets.list
      parameters:
        - description: Required. The ID of the read group set over which coverage is requested.
          in: path
          name: readGroupSetId
          required: true
          type: string
        - description: |-
            The end position of the range on the reference, 0-based exclusive. If
            specified, `referenceName` must also be specified. If unset or 0, defaults
            to the length of the reference.
          in: query
          name: end
          type: string
        - description: |-
            The continuation token, which is used to page through large result sets.
            To get the next page of results, set this parameter to the value of
            `nextPageToken` from the previous response.
          in: query
          name: pageToken
          type: string
        - description: |-
            The maximum number of results to return in a single page. If unspecified,
            defaults to 1024. The maximum value is 2048.
          in: query
          name: pageSize
          type: integer
        - description: |-
            The start position of the range on the reference, 0-based inclusive. If
            specified, `referenceName` must also be specified. Defaults to 0.
          in: query
          name: start
          type: string
        - description: |-
            The desired width of each reported coverage bucket in base pairs. This
            will be rounded down to the nearest precomputed bucket width; the value
            of which is returned as `bucketWidth` in the response. Defaults
            to infinity (each bucket spans an entire reference sequence) or the length
            of the target range, if specified. The smallest precomputed
            `bucketWidth` is currently 2048 base pairs; this is subject to
            change.
          in: query
          name: targetBucketWidth
          type: string
        - description: |-
            The name of the reference to query, within the reference set associated
            with this query. Optional.
          in: query
          name: referenceName
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/ListCoverageBucketsResponse'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/genomics'
        - Oauth2:
            - 'https://www.googleapis.com/auth/genomics.readonly'
      tags:
        - readgroupsets
    parameters:
      - $ref: '#/parameters/$.xgafv'
      - $ref: '#/parameters/callback'
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/access_token'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/pp'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/bearer_token'
      - $ref: '#/parameters/upload_protocol'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/uploadType'
  '/v1/readgroupsets/{readGroupSetId}:export':
    parameters:
      - $ref: '#/parameters/$.xgafv'
      - $ref: '#/parameters/callback'
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/access_token'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/pp'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/bearer_token'
      - $ref: '#/parameters/upload_protocol'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/uploadType'
    post:
      description: |-
        Exports a read group set to a BAM file in Google Cloud Storage.

        For the definitions of read group sets and other genomics resources, see
        [Fundamentals of Google
        Genomics](https://cloud.google.com/genomics/fundamentals-of-google-genomics)

        Note that currently there may be some differences between exported BAM
        files and the original BAM file at the time of import. See
        ImportReadGroupSets
        for caveats.
      operationId: genomics.readgroupsets.export
      parameters:
        - description: |-
            Required. The ID of the read group set to export. The caller must have
            READ access to this read group set.
          in: path
          name: readGroupSetId
          required: true
          type: string
        - in: body
          name: body
          schema:
            $ref: '#/definitions/ExportReadGroupSetRequest'
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Operation'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/devstorage.read_write'
        - Oauth2:
            - 'https://www.googleapis.com/auth/genomics'
      tags:
        - readgroupsets
  '/v1/readgroupsets:import':
    parameters:
      - $ref: '#/parameters/$.xgafv'
      - $ref: '#/parameters/callback'
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/access_token'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/pp'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/bearer_token'
      - $ref: '#/parameters/upload_protocol'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/uploadType'
    post:
      description: |-
        Creates read group sets by asynchronously importing the provided
        information.

        For the definitions of read group sets and other genomics resources, see
        [Fundamentals of Google
        Genomics](https://cloud.google.com/genomics/fundamentals-of-google-genomics)

        The caller must have WRITE permissions to the dataset.

        ## Notes on [BAM](https://samtools.github.io/hts-specs/SAMv1.pdf) import

        - Tags will be converted to strings - tag types are not preserved
        - Comments (`@CO`) in the input file header will not be preserved
        - Original header order of references (`@SQ`) will not be preserved
        - Any reverse stranded unmapped reads will be reverse complemented, and
        their qualities (also the "BQ" and "OQ" tags, if any) will be reversed
        - Unmapped reads will be stripped of positional information (reference name
        and position)
      operationId: genomics.readgroupsets.import
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/ImportReadGroupSetsRequest'
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Operation'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/devstorage.read_write'
        - Oauth2:
            - 'https://www.googleapis.com/auth/genomics'
      tags:
        - readgroupsets
  /v1/reads/search:
    parameters:
      - $ref: '#/parameters/$.xgafv'
      - $ref: '#/parameters/callback'
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/access_token'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/pp'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/bearer_token'
      - $ref: '#/parameters/upload_protocol'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/uploadType'
    post:
      description: |-
        Gets a list of reads for one or more read group sets.

        For the definitions of read group sets and other genomics resources, see
        [Fundamentals of Google
        Genomics](https://cloud.google.com/genomics/fundamentals-of-google-genomics)

        Reads search operates over a genomic coordinate space of reference sequence
        & position defined over the reference sequences to which the requested
        read group sets are aligned.

        If a target positional range is specified, search returns all reads whose
        alignment to the reference genome overlap the range. A query which
        specifies only read group set IDs yields all reads in those read group
        sets, including unmapped reads.

        All reads returned (including reads on subsequent pages) are ordered by
        genomic coordinate (by reference sequence, then position). Reads with
        equivalent genomic coordinates are returned in an unspecified order. This
        order is consistent, such that two queries for the same content (regardless
        of page size) yield reads in the same order across their respective streams
        of paginated responses.

        Implements
        [GlobalAllianceApi.searchReads](https://github.com/ga4gh/schemas/blob/v0.5.1/src/main/resources/avro/readmethods.avdl#L85).
      operationId: genomics.reads.search
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/SearchReadsRequest'
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/SearchReadsResponse'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/genomics'
        - Oauth2:
            - 'https://www.googleapis.com/auth/genomics.readonly'
      tags:
        - reads
  /v1/references/search:
    parameters:
      - $ref: '#/parameters/$.xgafv'
      - $ref: '#/parameters/callback'
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/access_token'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/pp'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/bearer_token'
      - $ref: '#/parameters/upload_protocol'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/uploadType'
    post:
      description: |-
        Searches for references which match the given criteria.

        For the definitions of references and other genomics resources, see
        [Fundamentals of Google
        Genomics](https://cloud.google.com/genomics/fundamentals-of-google-genomics)

        Implements
        [GlobalAllianceApi.searchReferences](https://github.com/ga4gh/schemas/blob/v0.5.1/src/main/resources/avro/referencemethods.avdl#L146).
      operationId: genomics.references.search
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/SearchReferencesRequest'
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/SearchReferencesResponse'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/genomics'
        - Oauth2:
            - 'https://www.googleapis.com/auth/genomics.readonly'
      tags:
        - references
  '/v1/references/{referenceId}':
    get:
      description: |-
        Gets a reference.

        For the definitions of references and other genomics resources, see
        [Fundamentals of Google
        Genomics](https://cloud.google.com/genomics/fundamentals-of-google-genomics)

        Implements
        [GlobalAllianceApi.getReference](https://github.com/ga4gh/schemas/blob/v0.5.1/src/main/resources/avro/referencemethods.avdl#L158).
      operationId: genomics.references.get
      parameters:
        - description: The ID of the reference.
          in: path
          name: referenceId
          required: true
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Reference'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/genomics'
        - Oauth2:
            - 'https://www.googleapis.com/auth/genomics.readonly'
      tags:
        - references
    parameters:
      - $ref: '#/parameters/$.xgafv'
      - $ref: '#/parameters/callback'
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/access_token'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/pp'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/bearer_token'
      - $ref: '#/parameters/upload_protocol'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/uploadType'
  '/v1/references/{referenceId}/bases':
    get:
      description: |-
        Lists the bases in a reference, optionally restricted to a range.

        For the definitions of references and other genomics resources, see
        [Fundamentals of Google
        Genomics](https://cloud.google.com/genomics/fundamentals-of-google-genomics)

        Implements
        [GlobalAllianceApi.getReferenceBases](https://github.com/ga4gh/schemas/blob/v0.5.1/src/main/resources/avro/referencemethods.avdl#L221).
      operationId: genomics.references.bases.list
      parameters:
        - description: The ID of the reference.
          in: path
          name: referenceId
          required: true
          type: string
        - description: |-
            The end position (0-based, exclusive) of this query. Defaults to the length
            of this reference.
          in: query
          name: end
          type: string
        - description: |-
            The continuation token, which is used to page through large result sets.
            To get the next page of results, set this parameter to the value of
            `nextPageToken` from the previous response.
          in: query
          name: pageToken
          type: string
        - description: |-
            The maximum number of bases to return in a single page. If unspecified,
            defaults to 200Kbp (kilo base pairs). The maximum value is 10Mbp (mega base
            pairs).
          in: query
          name: pageSize
          type: integer
        - description: The start position (0-based) of this query. Defaults to 0.
          in: query
          name: start
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/ListBasesResponse'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/genomics'
        - Oauth2:
            - 'https://www.googleapis.com/auth/genomics.readonly'
      tags:
        - references
    parameters:
      - $ref: '#/parameters/$.xgafv'
      - $ref: '#/parameters/callback'
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/access_token'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/pp'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/bearer_token'
      - $ref: '#/parameters/upload_protocol'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/uploadType'
  /v1/referencesets/search:
    parameters:
      - $ref: '#/parameters/$.xgafv'
      - $ref: '#/parameters/callback'
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/access_token'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/pp'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/bearer_token'
      - $ref: '#/parameters/upload_protocol'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/uploadType'
    post:
      description: |-
        Searches for reference sets which match the given criteria.

        For the definitions of references and other genomics resources, see
        [Fundamentals of Google
        Genomics](https://cloud.google.com/genomics/fundamentals-of-google-genomics)

        Implements
        [GlobalAllianceApi.searchReferenceSets](https://github.com/ga4gh/schemas/blob/v0.5.1/src/main/resources/avro/referencemethods.avdl#L71)
      operationId: genomics.referencesets.search
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/SearchReferenceSetsRequest'
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/SearchReferenceSetsResponse'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/genomics'
        - Oauth2:
            - 'https://www.googleapis.com/auth/genomics.readonly'
      tags:
        - referencesets
  '/v1/referencesets/{referenceSetId}':
    get:
      description: |-
        Gets a reference set.

        For the definitions of references and other genomics resources, see
        [Fundamentals of Google
        Genomics](https://cloud.google.com/genomics/fundamentals-of-google-genomics)

        Implements
        [GlobalAllianceApi.getReferenceSet](https://github.com/ga4gh/schemas/blob/v0.5.1/src/main/resources/avro/referencemethods.avdl#L83).
      operationId: genomics.referencesets.get
      parameters:
        - description: The ID of the reference set.
          in: path
          name: referenceSetId
          required: true
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/ReferenceSet'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/genomics'
        - Oauth2:
            - 'https://www.googleapis.com/auth/genomics.readonly'
      tags:
        - referencesets
    parameters:
      - $ref: '#/parameters/$.xgafv'
      - $ref: '#/parameters/callback'
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/access_token'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/pp'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/bearer_token'
      - $ref: '#/parameters/upload_protocol'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/uploadType'
  /v1/variants:
    parameters:
      - $ref: '#/parameters/$.xgafv'
      - $ref: '#/parameters/callback'
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/access_token'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/pp'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/bearer_token'
      - $ref: '#/parameters/upload_protocol'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/uploadType'
    post:
      description: |-
        Creates a new variant.

        For the definitions of variants and other genomics resources, see
        [Fundamentals of Google
        Genomics](https://cloud.google.com/genomics/fundamentals-of-google-genomics)
      operationId: genomics.variants.create
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/Variant'
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Variant'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/genomics'
      tags:
        - variants
  /v1/variants/search:
    parameters:
      - $ref: '#/parameters/$.xgafv'
      - $ref: '#/parameters/callback'
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/access_token'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/pp'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/bearer_token'
      - $ref: '#/parameters/upload_protocol'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/uploadType'
    post:
      description: |-
        Gets a list of variants matching the criteria.

        For the definitions of variants and other genomics resources, see
        [Fundamentals of Google
        Genomics](https://cloud.google.com/genomics/fundamentals-of-google-genomics)

        Implements
        [GlobalAllianceApi.searchVariants](https://github.com/ga4gh/schemas/blob/v0.5.1/src/main/resources/avro/variantmethods.avdl#L126).
      operationId: genomics.variants.search
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/SearchVariantsRequest'
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/SearchVariantsResponse'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/genomics'
        - Oauth2:
            - 'https://www.googleapis.com/auth/genomics.readonly'
      tags:
        - variants
  '/v1/variants/{variantId}':
    delete:
      description: |-
        Deletes a variant.

        For the definitions of variants and other genomics resources, see
        [Fundamentals of Google
        Genomics](https://cloud.google.com/genomics/fundamentals-of-google-genomics)
      operationId: genomics.variants.delete
      parameters:
        - description: The ID of the variant to be deleted.
          in: path
          name: variantId
          required: true
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Empty'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/genomics'
      tags:
        - variants
    get:
      description: |-
        Gets a variant by ID.

        For the definitions of variants and other genomics resources, see
        [Fundamentals of Google
        Genomics](https://cloud.google.com/genomics/fundamentals-of-google-genomics)
      operationId: genomics.variants.get
      parameters:
        - description: The ID of the variant.
          in: path
          name: variantId
          required: true
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Variant'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/genomics'
        - Oauth2:
            - 'https://www.googleapis.com/auth/genomics.readonly'
      tags:
        - variants
    parameters:
      - $ref: '#/parameters/$.xgafv'
      - $ref: '#/parameters/callback'
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/access_token'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/pp'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/bearer_token'
      - $ref: '#/parameters/upload_protocol'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/uploadType'
    patch:
      description: |-
        Updates a variant.

        For the definitions of variants and other genomics resources, see
        [Fundamentals of Google
        Genomics](https://cloud.google.com/genomics/fundamentals-of-google-genomics)

        This method supports patch semantics. Returns the modified variant without
        its calls.
      operationId: genomics.variants.patch
      parameters:
        - description: The ID of the variant to be updated.
          in: path
          name: variantId
          required: true
          type: string
        - description: |-
            An optional mask specifying which fields to update. At this time, mutable
            fields are names and
            info. Acceptable values are "names" and
            "info". If unspecified, all mutable fields will be updated.
          in: query
          name: updateMask
          type: string
        - in: body
          name: body
          schema:
            $ref: '#/definitions/Variant'
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Variant'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/genomics'
      tags:
        - variants
  '/v1/variants:import':
    parameters:
      - $ref: '#/parameters/$.xgafv'
      - $ref: '#/parameters/callback'
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/access_token'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/pp'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/bearer_token'
      - $ref: '#/parameters/upload_protocol'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/uploadType'
    post:
      description: |-
        Creates variant data by asynchronously importing the provided information.

        For the definitions of variant sets and other genomics resources, see
        [Fundamentals of Google
        Genomics](https://cloud.google.com/genomics/fundamentals-of-google-genomics)

        The variants for import will be merged with any existing variant that
        matches its reference sequence, start, end, reference bases, and
        alternative bases. If no such variant exists, a new one will be created.

        When variants are merged, the call information from the new variant
        is added to the existing variant, and Variant info fields are merged
        as specified in
        infoMergeConfig.
        As a special case, for single-sample VCF files, QUAL and FILTER fields will
        be moved to the call level; these are sometimes interpreted in a
        call-specific context.
        Imported VCF headers are appended to the metadata already in a variant set.
      operationId: genomics.variants.import
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/ImportVariantsRequest'
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Operation'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/devstorage.read_write'
        - Oauth2:
            - 'https://www.googleapis.com/auth/genomics'
      tags:
        - variants
  '/v1/variants:merge':
    parameters:
      - $ref: '#/parameters/$.xgafv'
      - $ref: '#/parameters/callback'
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/access_token'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/pp'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/bearer_token'
      - $ref: '#/parameters/upload_protocol'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/uploadType'
    post:
      description: |-
        Merges the given variants with existing variants.

        For the definitions of variants and other genomics resources, see
        [Fundamentals of Google
        Genomics](https://cloud.google.com/genomics/fundamentals-of-google-genomics)

        Each variant will be
        merged with an existing variant that matches its reference sequence,
        start, end, reference bases, and alternative bases. If no such variant
        exists, a new one will be created.

        When variants are merged, the call information from the new variant
        is added to the existing variant. Variant info fields are merged as
        specified in the
        infoMergeConfig
        field of the MergeVariantsRequest.

        Please exercise caution when using this method!  It is easy to introduce
        mistakes in existing variants and difficult to back out of them.  For
        example,
        suppose you were trying to merge a new variant with an existing one and
        both
        variants contain calls that belong to callsets with the same callset ID.

            // Existing variant - irrelevant fields trimmed for clarity
            {
                "variantSetId": "10473108253681171589",
                "referenceName": "1",
                "start": "10582",
                "referenceBases": "G",
                "alternateBases": [
                    "A"
                ],
                "calls": [
                    {
                        "callSetId": "10473108253681171589-0",
                        "callSetName": "CALLSET0",
                        "genotype": [
                            0,
                            1
                        ],
                    }
                ]
            }

            // New variant with conflicting call information
            {
                "variantSetId": "10473108253681171589",
                "referenceName": "1",
                "start": "10582",
                "referenceBases": "G",
                "alternateBases": [
                    "A"
                ],
                "calls": [
                    {
                        "callSetId": "10473108253681171589-0",
                        "callSetName": "CALLSET0",
                        "genotype": [
                            1,
                            1
                        ],
                    }
                ]
            }

        The resulting merged variant would overwrite the existing calls with those
        from the new variant:

            {
                "variantSetId": "10473108253681171589",
                "referenceName": "1",
                "start": "10582",
                "referenceBases": "G",
                "alternateBases": [
                    "A"
                ],
                "calls": [
                    {
                        "callSetId": "10473108253681171589-0",
                        "callSetName": "CALLSET0",
                        "genotype": [
                            1,
                            1
                        ],
                    }
                ]
            }

        This may be the desired outcome, but it is up to the user to determine if
        if that is indeed the case.
      operationId: genomics.variants.merge
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/MergeVariantsRequest'
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Empty'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/genomics'
      tags:
        - variants
  /v1/variantsets:
    parameters:
      - $ref: '#/parameters/$.xgafv'
      - $ref: '#/parameters/callback'
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/access_token'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/pp'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/bearer_token'
      - $ref: '#/parameters/upload_protocol'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/uploadType'
    post:
      description: |-
        Creates a new variant set.

        For the definitions of variant sets and other genomics resources, see
        [Fundamentals of Google
        Genomics](https://cloud.google.com/genomics/fundamentals-of-google-genomics)

        The provided variant set must have a valid `datasetId` set - all other
        fields are optional. Note that the `id` field will be ignored, as this is
        assigned by the server.
      operationId: genomics.variantsets.create
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/VariantSet'
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/VariantSet'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/genomics'
      tags:
        - variantsets
  /v1/variantsets/search:
    parameters:
      - $ref: '#/parameters/$.xgafv'
      - $ref: '#/parameters/callback'
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/access_token'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/pp'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/bearer_token'
      - $ref: '#/parameters/upload_protocol'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/uploadType'
    post:
      description: |-
        Returns a list of all variant sets matching search criteria.

        For the definitions of variant sets and other genomics resources, see
        [Fundamentals of Google
        Genomics](https://cloud.google.com/genomics/fundamentals-of-google-genomics)

        Implements
        [GlobalAllianceApi.searchVariantSets](https://github.com/ga4gh/schemas/blob/v0.5.1/src/main/resources/avro/variantmethods.avdl#L49).
      operationId: genomics.variantsets.search
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/SearchVariantSetsRequest'
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/SearchVariantSetsResponse'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/genomics'
        - Oauth2:
            - 'https://www.googleapis.com/auth/genomics.readonly'
      tags:
        - variantsets
  '/v1/variantsets/{variantSetId}':
    delete:
      description: |-
        Deletes a variant set including all variants, call sets, and calls within.
        This is not reversible.

        For the definitions of variant sets and other genomics resources, see
        [Fundamentals of Google
        Genomics](https://cloud.google.com/genomics/fundamentals-of-google-genomics)
      operationId: genomics.variantsets.delete
      parameters:
        - description: The ID of the variant set to be deleted.
          in: path
          name: variantSetId
          required: true
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Empty'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/genomics'
      tags:
        - variantsets
    get:
      description: |-
        Gets a variant set by ID.

        For the definitions of variant sets and other genomics resources, see
        [Fundamentals of Google
        Genomics](https://cloud.google.com/genomics/fundamentals-of-google-genomics)
      operationId: genomics.variantsets.get
      parameters:
        - description: Required. The ID of the variant set.
          in: path
          name: variantSetId
          required: true
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/VariantSet'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/genomics'
        - Oauth2:
            - 'https://www.googleapis.com/auth/genomics.readonly'
      tags:
        - variantsets
    parameters:
      - $ref: '#/parameters/$.xgafv'
      - $ref: '#/parameters/callback'
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/access_token'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/pp'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/bearer_token'
      - $ref: '#/parameters/upload_protocol'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/uploadType'
    patch:
      description: |-
        Updates a variant set using patch semantics.

        For the definitions of variant sets and other genomics resources, see
        [Fundamentals of Google
        Genomics](https://cloud.google.com/genomics/fundamentals-of-google-genomics)
      operationId: genomics.variantsets.patch
      parameters:
        - description: The ID of the variant to be updated (must already exist).
          in: path
          name: variantSetId
          required: true
          type: string
        - description: |-
            An optional mask specifying which fields to update. Supported fields:

            * metadata.
            * name.
            * description.

            Leaving `updateMask` unset is equivalent to specifying all mutable
            fields.
          in: query
          name: updateMask
          type: string
        - in: body
          name: body
          schema:
            $ref: '#/definitions/VariantSet'
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/VariantSet'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/genomics'
      tags:
        - variantsets
  '/v1/variantsets/{variantSetId}:export':
    parameters:
      - $ref: '#/parameters/$.xgafv'
      - $ref: '#/parameters/callback'
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/access_token'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/pp'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/bearer_token'
      - $ref: '#/parameters/upload_protocol'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/uploadType'
    post:
      description: |-
        Exports variant set data to an external destination.

        For the definitions of variant sets and other genomics resources, see
        [Fundamentals of Google
        Genomics](https://cloud.google.com/genomics/fundamentals-of-google-genomics)
      operationId: genomics.variantsets.export
      parameters:
        - description: |-
            Required. The ID of the variant set that contains variant data which
            should be exported. The caller must have READ access to this variant set.
          in: path
          name: variantSetId
          required: true
          type: string
        - in: body
          name: body
          schema:
            $ref: '#/definitions/ExportVariantSetRequest'
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Operation'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/bigquery'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/genomics'
      tags:
        - variantsets
  '/v1/{name}':
    get:
      description: Lists operations that match the specified filter in the request.
      operationId: genomics.operations.list
      parameters:
        - description: |-
            A string for filtering Operations.
            The following filter fields are supported&#58;

            * projectId&#58; Required. Corresponds to
              OperationMetadata.projectId.
            * createTime&#58; The time this job was created, in seconds from the
              [epoch](http://en.wikipedia.org/wiki/Unix_time). Can use `>=` and/or `<=`
              operators.
            * status&#58; Can be `RUNNING`, `SUCCESS`, `FAILURE`, or `CANCELED`. Only
              one status may be specified.
            * labels.key where key is a label key.

            Examples&#58;

            * `projectId = my-project AND createTime >= 1432140000`
            * `projectId = my-project AND createTime >= 1432140000 AND createTime <= 1432150000 AND status = RUNNING`
            * `projectId = my-project AND labels.color = *`
            * `projectId = my-project AND labels.color = red`
          in: query
          name: filter
          type: string
        - description: The name of the operation's parent resource.
          in: path
          name: name
          required: true
          type: string
          x-reservedExpansion: true
        - description: |-
            The maximum number of results to return. If unspecified, defaults to
            256. The maximum value is 2048.
          in: query
          name: pageSize
          type: integer
        - description: The standard list page token.
          in: query
          name: pageToken
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/ListOperationsResponse'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/genomics'
      tags:
        - operations
    parameters:
      - $ref: '#/parameters/$.xgafv'
      - $ref: '#/parameters/callback'
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/access_token'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/pp'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/bearer_token'
      - $ref: '#/parameters/upload_protocol'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/uploadType'
  '/v1/{name}:cancel':
    parameters:
      - $ref: '#/parameters/$.xgafv'
      - $ref: '#/parameters/callback'
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/access_token'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/pp'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/bearer_token'
      - $ref: '#/parameters/upload_protocol'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/uploadType'
    post:
      description: 'Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. Clients may use Operations.GetOperation or Operations.ListOperations to check whether the cancellation succeeded or the operation completed despite cancellation.'
      operationId: genomics.operations.cancel
      parameters:
        - description: The name of the operation resource to be cancelled.
          in: path
          name: name
          required: true
          type: string
          x-reservedExpansion: true
        - in: body
          name: body
          schema:
            $ref: '#/definitions/CancelOperationRequest'
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Empty'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/genomics'
      tags:
        - operations
  '/v1/{resource}:getIamPolicy':
    parameters:
      - $ref: '#/parameters/$.xgafv'
      - $ref: '#/parameters/callback'
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/access_token'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/pp'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/bearer_token'
      - $ref: '#/parameters/upload_protocol'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/uploadType'
    post:
      description: |-
        Gets the access control policy for the dataset. This is empty if the
        policy or resource does not exist.

        See <a href="/iam/docs/managing-policies#getting_a_policy">Getting a
        Policy</a> for more information.

        For the definitions of datasets and other genomics resources, see
        [Fundamentals of Google
        Genomics](https://cloud.google.com/genomics/fundamentals-of-google-genomics)
      operationId: genomics.datasets.getIamPolicy
      parameters:
        - description: |-
            REQUIRED: The resource for which policy is being specified. Format is
            `datasets/<dataset ID>`.
          in: path
          name: resource
          required: true
          type: string
          x-reservedExpansion: true
        - in: body
          name: body
          schema:
            $ref: '#/definitions/GetIamPolicyRequest'
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Policy'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/genomics'
      tags:
        - datasets
  '/v1/{resource}:setIamPolicy':
    parameters:
      - $ref: '#/parameters/$.xgafv'
      - $ref: '#/parameters/callback'
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/access_token'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/pp'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/bearer_token'
      - $ref: '#/parameters/upload_protocol'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/uploadType'
    post:
      description: |-
        Sets the access control policy on the specified dataset. Replaces any
        existing policy.

        For the definitions of datasets and other genomics resources, see
        [Fundamentals of Google
        Genomics](https://cloud.google.com/genomics/fundamentals-of-google-genomics)

        See <a href="/iam/docs/managing-policies#setting_a_policy">Setting a
        Policy</a> for more information.
      operationId: genomics.datasets.setIamPolicy
      parameters:
        - description: |-
            REQUIRED: The resource for which policy is being specified. Format is
            `datasets/<dataset ID>`.
          in: path
          name: resource
          required: true
          type: string
          x-reservedExpansion: true
        - in: body
          name: body
          schema:
            $ref: '#/definitions/SetIamPolicyRequest'
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Policy'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/genomics'
      tags:
        - datasets
  '/v1/{resource}:testIamPermissions':
    parameters:
      - $ref: '#/parameters/$.xgafv'
      - $ref: '#/parameters/callback'
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/access_token'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/pp'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/bearer_token'
      - $ref: '#/parameters/upload_protocol'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/uploadType'
    post:
      description: |-
        Returns permissions that a caller has on the specified resource.
        See <a href="/iam/docs/managing-policies#testing_permissions">Testing
        Permissions</a> for more information.

        For the definitions of datasets and other genomics resources, see
        [Fundamentals of Google
        Genomics](https://cloud.google.com/genomics/fundamentals-of-google-genomics)
      operationId: genomics.datasets.testIamPermissions
      parameters:
        - description: |-
            REQUIRED: The resource for which policy is being specified. Format is
            `datasets/<dataset ID>`.
          in: path
          name: resource
          required: true
          type: string
          x-reservedExpansion: true
        - in: body
          name: body
          schema:
            $ref: '#/definitions/TestIamPermissionsRequest'
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/TestIamPermissionsResponse'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/genomics'
      tags:
        - datasets
definitions:
  Annotation:
    description: |-
      An annotation describes a region of reference genome. The value of an
      annotation may be one of several canonical types, supplemented by arbitrary
      info tags. An annotation is not inherently associated with a specific
      sample or individual (though a client could choose to use annotations in
      this way). Example canonical annotation types are `GENE` and
      `VARIANT`.
    properties:
      annotationSetId:
        description: The annotation set to which this annotation belongs.
        type: string
      end:
        description: 'The end position of the range on the reference, 0-based exclusive.'
        format: int64
        type: string
      id:
        description: 'The server-generated annotation ID, unique across all annotations.'
        type: string
      info:
        additionalProperties:
          items: {}
          type: array
        description: |-
          A map of additional read alignment information. This must be of the form
          map<string, string[]> (string key mapping to a list of string values).
        type: object
      name:
        description: The display name of this annotation.
        type: string
      referenceId:
        description: The ID of the Google Genomics reference associated with this range.
        type: string
      referenceName:
        description: |-
          The display name corresponding to the reference specified by
          `referenceId`, for example `chr1`, `1`, or `chrX`.
        type: string
      reverseStrand:
        description: |-
          Whether this range refers to the reverse strand, as opposed to the forward
          strand. Note that regardless of this field, the start/end position of the
          range always refer to the forward strand.
        type: boolean
      start:
        description: 'The start position of the range on the reference, 0-based inclusive.'
        format: int64
        type: string
      transcript:
        $ref: '#/definitions/Transcript'
        description: |-
          A transcript value represents the assertion that a particular region of
          the reference genome may be transcribed as RNA. An alternative splicing
          pattern would be represented as a separate transcript object. This field
          is only set for annotations of type `TRANSCRIPT`.
      type:
        description: |-
          The data type for this annotation. Must match the containing annotation
          set's type.
        enum:
          - ANNOTATION_TYPE_UNSPECIFIED
          - GENERIC
          - VARIANT
          - GENE
          - TRANSCRIPT
        type: string
      variant:
        $ref: '#/definitions/VariantAnnotation'
        description: |-
          A variant annotation, which describes the effect of a variant on the
          genome, the coding sequence, and/or higher level consequences at the
          organism level e.g. pathogenicity. This field is only set for annotations
          of type `VARIANT`.
    type: object
  AnnotationSet:
    description: |-
      An annotation set is a logical grouping of annotations that share consistent
      type information and provenance. Examples of annotation sets include 'all
      genes from refseq', and 'all variant annotations from ClinVar'.
    properties:
      datasetId:
        description: The dataset to which this annotation set belongs.
        type: string
      id:
        description: 'The server-generated annotation set ID, unique across all annotation sets.'
        type: string
      info:
        additionalProperties:
          items: {}
          type: array
        description: |-
          A map of additional read alignment information. This must be of the form
          map<string, string[]> (string key mapping to a list of string values).
        type: object
      name:
        description: The display name for this annotation set.
        type: string
      referenceSetId:
        description: |-
          The ID of the reference set that defines the coordinate space for this
          set's annotations.
        type: string
      sourceUri:
        description: |-
          The source URI describing the file from which this annotation set was
          generated, if any.
        type: string
      type:
        description: The type of annotations contained within this set.
        enum:
          - ANNOTATION_TYPE_UNSPECIFIED
          - GENERIC
          - VARIANT
          - GENE
          - TRANSCRIPT
        type: string
    type: object
  BatchCreateAnnotationsRequest:
    properties:
      annotations:
        description: |-
          The annotations to be created. At most 4096 can be specified in a single
          request.
        items:
          $ref: '#/definitions/Annotation'
        type: array
      requestId:
        description: |-
          A unique request ID which enables the server to detect duplicated requests.
          If provided, duplicated requests will result in the same response; if not
          provided, duplicated requests may result in duplicated data. For a given
          annotation set, callers should not reuse `request_id`s when writing
          different batches of annotations - behavior in this case is undefined.
          A common approach is to use a UUID. For batch jobs where worker crashes are
          a possibility, consider using some unique variant of a worker or run ID.
        type: string
    type: object
  BatchCreateAnnotationsResponse:
    properties:
      entries:
        description: |-
          The resulting per-annotation entries, ordered consistently with the
          original request.
        items:
          $ref: '#/definitions/Entry'
        type: array
    type: object
  Binding:
    description: Associates `members` with a `role`.
    properties:
      members:
        description: |+
          Specifies the identities requesting access for a Cloud Platform resource.
          `members` can have the following values:

          * `allUsers`: A special identifier that represents anyone who is
             on the internet; with or without a Google account.

          * `allAuthenticatedUsers`: A special identifier that represents anyone
             who is authenticated with a Google account or a service account.

          * `user:{emailid}`: An email address that represents a specific Google
             account. For example, `alice@gmail.com` or `joe@example.com`.


          * `serviceAccount:{emailid}`: An email address that represents a service
             account. For example, `my-other-app@appspot.gserviceaccount.com`.

          * `group:{emailid}`: An email address that represents a Google group.
             For example, `admins@example.com`.


          * `domain:{domain}`: A Google Apps domain name that represents all the
             users of that domain. For example, `google.com` or `example.com`.

        items:
          type: string
        type: array
      role:
        description: |-
          Role that is assigned to `members`.
          For example, `roles/viewer`, `roles/editor`, or `roles/owner`.
          Required
        type: string
    type: object
  CallSet:
    description: |-
      A call set is a collection of variant calls, typically for one sample. It
      belongs to a variant set.

      For more genomics resource definitions, see [Fundamentals of Google
      Genomics](https://cloud.google.com/genomics/fundamentals-of-google-genomics)
    properties:
      created:
        description: The date this call set was created in milliseconds from the epoch.
        format: int64
        type: string
      id:
        description: 'The server-generated call set ID, unique across all call sets.'
        type: string
      info:
        additionalProperties:
          items: {}
          type: array
        description: |-
          A map of additional call set information. This must be of the form
          map<string, string[]> (string key mapping to a list of string values).
        type: object
      name:
        description: The call set name.
        type: string
      sampleId:
        description: The sample ID this call set corresponds to.
        type: string
      variantSetIds:
        description: |-
          The IDs of the variant sets this call set belongs to. This field must
          have exactly length one, as a call set belongs to a single variant set.
          This field is repeated for compatibility with the
          [GA4GH 0.5.1
          API](https://github.com/ga4gh/schemas/blob/v0.5.1/src/main/resources/avro/variants.avdl#L76).
        items:
          type: string
        type: array
    type: object
  CancelOperationRequest:
    description: The request message for Operations.CancelOperation.
    properties: {}
    type: object
  CigarUnit:
    description: A single CIGAR operation.
    properties:
      operation:
        enum:
          - OPERATION_UNSPECIFIED
          - ALIGNMENT_MATCH
          - INSERT
          - DELETE
          - SKIP
          - CLIP_SOFT
          - CLIP_HARD
          - PAD
          - SEQUENCE_MATCH
          - SEQUENCE_MISMATCH
        type: string
      operationLength:
        description: The number of genomic bases that the operation runs for. Required.
        format: int64
        type: string
      referenceSequence:
        description: |-
          `referenceSequence` is only used at mismatches
          (`SEQUENCE_MISMATCH`) and deletions (`DELETE`).
          Filling this field replaces SAM's MD tag. If the relevant information is
          not available, this field is unset.
        type: string
    type: object
  ClinicalCondition:
    properties:
      conceptId:
        description: |-
          The MedGen concept id associated with this gene.
          Search for these IDs at http://www.ncbi.nlm.nih.gov/medgen/
        type: string
      externalIds:
        description: The set of external IDs for this condition.
        items:
          $ref: '#/definitions/ExternalId'
        type: array
      names:
        description: A set of names for the condition.
        items:
          type: string
        type: array
      omimId:
        description: |-
          The OMIM id for this condition.
          Search for these IDs at http://omim.org/
        type: string
    type: object
  CodingSequence:
    properties:
      end:
        description: |-
          The end of the coding sequence on this annotation's reference sequence,
          0-based exclusive. Note that this position is relative to the reference
          start, and *not* the containing annotation start.
        format: int64
        type: string
      start:
        description: |-
          The start of the coding sequence on this annotation's reference sequence,
          0-based inclusive. Note that this position is relative to the reference
          start, and *not* the containing annotation start.
        format: int64
        type: string
    type: object
  ComputeEngine:
    description: |-
      Describes a Compute Engine resource that is being managed by a running
      pipeline.
    properties:
      diskNames:
        description: The names of the disks that were created for this pipeline.
        items:
          type: string
        type: array
      instanceName:
        description: The instance on which the operation is running.
        type: string
      machineType:
        description: The machine type of the instance.
        type: string
      zone:
        description: The availability zone in which the instance resides.
        type: string
    type: object
  CoverageBucket:
    description: |-
      A bucket over which read coverage has been precomputed. A bucket corresponds
      to a specific range of the reference sequence.
    properties:
      meanCoverage:
        description: |-
          The average number of reads which are aligned to each individual
          reference base in this bucket.
        format: float
        type: number
      range:
        $ref: '#/definitions/Range'
        description: The genomic coordinate range spanned by this bucket.
    type: object
  Dataset:
    description: |-
      A Dataset is a collection of genomic data.

      For more genomics resource definitions, see [Fundamentals of Google
      Genomics](https://cloud.google.com/genomics/fundamentals-of-google-genomics)
    properties:
      createTime:
        description: 'The time this dataset was created, in seconds from the epoch.'
        format: google-datetime
        type: string
      id:
        description: 'The server-generated dataset ID, unique across all datasets.'
        type: string
      name:
        description: The dataset name.
        type: string
      projectId:
        description: The Google Cloud project ID that this dataset belongs to.
        type: string
    type: object
  Empty:
    description: |-
      A generic empty message that you can re-use to avoid defining duplicated
      empty messages in your APIs. A typical example is to use it as the request
      or the response type of an API method. For instance:

          service Foo {
            rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);
          }

      The JSON representation for `Empty` is empty JSON object `{}`.
    properties: {}
    type: object
  Entry:
    properties:
      annotation:
        $ref: '#/definitions/Annotation'
        description: 'The created annotation, if creation was successful.'
      status:
        $ref: '#/definitions/Status'
        description: The creation status.
    type: object
  Exon:
    properties:
      end:
        description: |-
          The end position of the exon on this annotation's reference sequence,
          0-based exclusive. Note that this is relative to the reference start, and
          *not* the containing annotation start.
        format: int64
        type: string
      frame:
        description: |-
          The frame of this exon. Contains a value of 0, 1, or 2, which indicates
          the offset of the first coding base of the exon within the reading frame
          of the coding DNA sequence, if any. This field is dependent on the
          strandedness of this annotation (see
          Annotation.reverse_strand).
          For forward stranded annotations, this offset is relative to the
          exon.start. For reverse
          strand annotations, this offset is relative to the
          exon.end `- 1`.

          Unset if this exon does not intersect the coding sequence. Upon creation
          of a transcript, the frame must be populated for all or none of the
          coding exons.
        format: int32
        type: integer
      start:
        description: |-
          The start position of the exon on this annotation's reference sequence,
          0-based inclusive. Note that this is relative to the reference start, and
          **not** the containing annotation start.
        format: int64
        type: string
    type: object
  Experiment:
    properties:
      instrumentModel:
        description: |-
          The instrument model used as part of this experiment. This maps to
          sequencing technology in the SAM spec.
        type: string
      libraryId:
        description: |-
          A client-supplied library identifier; a library is a collection of DNA
          fragments which have been prepared for sequencing from a sample. This
          field is important for quality control as error or bias can be introduced
          during sample preparation.
        type: string
      platformUnit:
        description: |-
          The platform unit used as part of this experiment, for example
          flowcell-barcode.lane for Illumina or slide for SOLiD. Corresponds to the
          @RG PU field in the SAM spec.
        type: string
      sequencingCenter:
        description: The sequencing center used as part of this experiment.
        type: string
    type: object
  ExportReadGroupSetRequest:
    description: The read group set export request.
    properties:
      exportUri:
        description: |-
          Required. A Google Cloud Storage URI for the exported BAM file.
          The currently authenticated user must have write access to the new file.
          An error will be returned if the URI already contains data.
        type: string
      projectId:
        description: |-
          Required. The Google Cloud project ID that owns this
          export. The caller must have WRITE access to this project.
        type: string
      referenceNames:
        description: |-
          The reference names to export. If this is not specified, all reference
          sequences, including unmapped reads, are exported.
          Use `*` to export only unmapped reads.
        items:
          type: string
        type: array
    type: object
  ExportVariantSetRequest:
    description: The variant data export request.
    properties:
      bigqueryDataset:
        description: |-
          Required. The BigQuery dataset to export data to. This dataset must already
          exist. Note that this is distinct from the Genomics concept of "dataset".
        type: string
      bigqueryTable:
        description: |-
          Required. The BigQuery table to export data to.
          If the table doesn't exist, it will be created. If it already exists, it
          will be overwritten.
        type: string
      callSetIds:
        description: |-
          If provided, only variant call information from the specified call sets
          will be exported. By default all variant calls are exported.
        items:
          type: string
        type: array
      format:
        description: The format for the exported data.
        enum:
          - FORMAT_UNSPECIFIED
          - FORMAT_BIGQUERY
        type: string
      projectId:
        description: |-
          Required. The Google Cloud project ID that owns the destination
          BigQuery dataset. The caller must have WRITE access to this project.  This
          project will also own the resulting export job.
        type: string
    type: object
  ExternalId:
    properties:
      id:
        description: The id used by the source of this data.
        type: string
      sourceName:
        description: The name of the source of this data.
        type: string
    type: object
  GetIamPolicyRequest:
    description: Request message for `GetIamPolicy` method.
    properties: {}
    type: object
  ImportReadGroupSetsRequest:
    description: The read group set import request.
    properties:
      datasetId:
        description: |-
          Required. The ID of the dataset these read group sets will belong to. The
          caller must have WRITE permissions to this dataset.
        type: string
      partitionStrategy:
        description: |-
          The partition strategy describes how read groups are partitioned into read
          group sets.
        enum:
          - PARTITION_STRATEGY_UNSPECIFIED
          - PER_FILE_PER_SAMPLE
          - MERGE_ALL
        type: string
      referenceSetId:
        description: |-
          The reference set to which the imported read group sets are aligned to, if
          any. The reference names of this reference set must be a superset of those
          found in the imported file headers. If no reference set id is provided, a
          best effort is made to associate with a matching reference set.
        type: string
      sourceUris:
        description: |-
          A list of URIs pointing at [BAM
          files](https://samtools.github.io/hts-specs/SAMv1.pdf)
          in Google Cloud Storage.
          Those URIs can include wildcards (*), but do not add or remove
          matching files before import has completed.

          Note that Google Cloud Storage object listing is only eventually
          consistent: files added may be not be immediately visible to
          everyone. Thus, if using a wildcard it is preferable not to start
          the import immediately after the files are created.
        items:
          type: string
        type: array
    type: object
  ImportReadGroupSetsResponse:
    description: The read group set import response.
    properties:
      readGroupSetIds:
        description: IDs of the read group sets that were created.
        items:
          type: string
        type: array
    type: object
  ImportVariantsRequest:
    description: The variant data import request.
    properties:
      format:
        description: |-
          The format of the variant data being imported. If unspecified, defaults to
          to `VCF`.
        enum:
          - FORMAT_UNSPECIFIED
          - FORMAT_VCF
          - FORMAT_COMPLETE_GENOMICS
        type: string
      infoMergeConfig:
        additionalProperties:
          enum:
            - INFO_MERGE_OPERATION_UNSPECIFIED
            - IGNORE_NEW
            - MOVE_TO_CALLS
          type: string
        description: |-
          A mapping between info field keys and the InfoMergeOperations to
          be performed on them. This is plumbed down to the MergeVariantRequests
          generated by the resulting import job.
        type: object
      normalizeReferenceNames:
        description: |-
          Convert reference names to the canonical representation.
          hg19 haploytypes (those reference names containing "_hap")
          are not modified in any way.
          All other reference names are modified according to the following rules:
          The reference name is capitalized.
          The "chr" prefix is dropped for all autosomes and sex chromsomes.
          For example "chr17" becomes "17" and "chrX" becomes "X".
          All mitochondrial chromosomes ("chrM", "chrMT", etc) become "MT".
        type: boolean
      sourceUris:
        description: |-
          A list of URIs referencing variant files in Google Cloud Storage. URIs can
          include wildcards [as described
          here](https://cloud.google.com/storage/docs/gsutil/addlhelp/WildcardNames).
          Note that recursive wildcards ('**') are not supported.
        items:
          type: string
        type: array
      variantSetId:
        description: Required. The variant set to which variant data should be imported.
        type: string
    type: object
  ImportVariantsResponse:
    description: The variant data import response.
    properties:
      callSetIds:
        description: IDs of the call sets created during the import.
        items:
          type: string
        type: array
    type: object
  LinearAlignment:
    description: |-
      A linear alignment can be represented by one CIGAR string. Describes the
      mapped position and local alignment of the read to the reference.
    properties:
      cigar:
        description: |-
          Represents the local alignment of this sequence (alignment matches, indels,
          etc) against the reference.
        items:
          $ref: '#/definitions/CigarUnit'
        type: array
      mappingQuality:
        description: |-
          The mapping quality of this alignment. Represents how likely
          the read maps to this position as opposed to other locations.

          Specifically, this is -10 log10 Pr(mapping position is wrong), rounded to
          the nearest integer.
        format: int32
        type: integer
      position:
        $ref: '#/definitions/Position'
        description: The position of this alignment.
    type: object
  ListBasesResponse:
    properties:
      nextPageToken:
        description: |-
          The continuation token, which is used to page through large result sets.
          Provide this value in a subsequent request to return the next page of
          results. This field will be empty if there aren't any additional results.
        type: string
      offset:
        description: |-
          The offset position (0-based) of the given `sequence` from the
          start of this `Reference`. This value will differ for each page
          in a paginated request.
        format: int64
        type: string
      sequence:
        description: A substring of the bases that make up this reference.
        type: string
    type: object
  ListCoverageBucketsResponse:
    properties:
      bucketWidth:
        description: |-
          The length of each coverage bucket in base pairs. Note that buckets at the
          end of a reference sequence may be shorter. This value is omitted if the
          bucket width is infinity (the default behaviour, with no range or
          `targetBucketWidth`).
        format: int64
        type: string
      coverageBuckets:
        description: |-
          The coverage buckets. The list of buckets is sparse; a bucket with 0
          overlapping reads is not returned. A bucket never crosses more than one
          reference sequence. Each bucket has width `bucketWidth`, unless
          its end is the end of the reference sequence.
        items:
          $ref: '#/definitions/CoverageBucket'
        type: array
      nextPageToken:
        description: |-
          The continuation token, which is used to page through large result sets.
          Provide this value in a subsequent request to return the next page of
          results. This field will be empty if there aren't any additional results.
        type: string
    type: object
  ListDatasetsResponse:
    description: The dataset list response.
    properties:
      datasets:
        description: The list of matching Datasets.
        items:
          $ref: '#/definitions/Dataset'
        type: array
      nextPageToken:
        description: |-
          The continuation token, which is used to page through large result sets.
          Provide this value in a subsequent request to return the next page of
          results. This field will be empty if there aren't any additional results.
        type: string
    type: object
  ListOperationsResponse:
    description: The response message for Operations.ListOperations.
    properties:
      nextPageToken:
        description: The standard List next-page token.
        type: string
      operations:
        description: A list of operations that matches the specified filter in the request.
        items:
          $ref: '#/definitions/Operation'
        type: array
    type: object
  MergeVariantsRequest:
    properties:
      infoMergeConfig:
        additionalProperties:
          enum:
            - INFO_MERGE_OPERATION_UNSPECIFIED
            - IGNORE_NEW
            - MOVE_TO_CALLS
          type: string
        description: |-
          A mapping between info field keys and the InfoMergeOperations to
          be performed on them.
        type: object
      variantSetId:
        description: The destination variant set.
        type: string
      variants:
        description: The variants to be merged with existing variants.
        items:
          $ref: '#/definitions/Variant'
        type: array
    type: object
  Operation:
    description: |-
      This resource represents a long-running operation that is the result of a
      network API call.
    properties:
      done:
        description: |-
          If the value is `false`, it means the operation is still in progress.
          If `true`, the operation is completed, and either `error` or `response` is
          available.
        type: boolean
      error:
        $ref: '#/definitions/Status'
        description: The error result of the operation in case of failure or cancellation.
      metadata:
        additionalProperties:
          description: Properties of the object. Contains field @type with type URL.
        description: An OperationMetadata object. This will always be returned with the Operation.
        type: object
      name:
        description: 'The server-assigned name, which is only unique within the same service that originally returns it. For example&#58; `operations/CJHU7Oi_ChDrveSpBRjfuL-qzoWAgEw`'
        type: string
      response:
        additionalProperties:
          description: Properties of the object. Contains field @type with type URL.
        description: 'If importing ReadGroupSets, an ImportReadGroupSetsResponse is returned. If importing Variants, an ImportVariantsResponse is returned. For pipelines and exports, an Empty response is returned.'
        type: object
    type: object
  OperationEvent:
    description: An event that occurred during an Operation.
    properties:
      description:
        description: Required description of event.
        type: string
      endTime:
        description: |-
          Optional time of when event finished. An event can have a start time and no
          finish time. If an event has a finish time, there must be a start time.
        format: google-datetime
        type: string
      startTime:
        description: Optional time of when event started.
        format: google-datetime
        type: string
    type: object
  OperationMetadata:
    description: Metadata describing an Operation.
    properties:
      clientId:
        description: |-
          This field is deprecated. Use `labels` instead. Optionally provided by the
          caller when submitting the request that creates the operation.
        type: string
      createTime:
        description: The time at which the job was submitted to the Genomics service.
        format: google-datetime
        type: string
      endTime:
        description: The time at which the job stopped running.
        format: google-datetime
        type: string
      events:
        description: |-
          Optional event messages that were generated during the job's execution.
          This also contains any warnings that were generated during import
          or export.
        items:
          $ref: '#/definitions/OperationEvent'
        type: array
      labels:
        additionalProperties:
          type: string
        description: |-
          Optionally provided by the caller when submitting the request that creates
          the operation.
        type: object
      projectId:
        description: The Google Cloud Project in which the job is scoped.
        type: string
      request:
        additionalProperties:
          description: Properties of the object. Contains field @type with type URL.
        description: |-
          The original request that started the operation. Note that this will be in
          current version of the API. If the operation was started with v1beta2 API
          and a GetOperation is performed on v1 API, a v1 request will be returned.
        type: object
      runtimeMetadata:
        additionalProperties:
          description: Properties of the object. Contains field @type with type URL.
        description: Runtime metadata on this Operation.
        type: object
      startTime:
        description: The time at which the job began to run.
        format: google-datetime
        type: string
    type: object
  Policy:
    description: |-
      Defines an Identity and Access Management (IAM) policy. It is used to
      specify access control policies for Cloud Platform resources.


      A `Policy` consists of a list of `bindings`. A `Binding` binds a list of
      `members` to a `role`, where the members can be user accounts, Google groups,
      Google domains, and service accounts. A `role` is a named list of permissions
      defined by IAM.

      **Example**

          {
            "bindings": [
              {
                "role": "roles/owner",
                "members": [
                  "user:mike@example.com",
                  "group:admins@example.com",
                  "domain:google.com",
                  "serviceAccount:my-other-app@appspot.gserviceaccount.com",
                ]
              },
              {
                "role": "roles/viewer",
                "members": ["user:sean@example.com"]
              }
            ]
          }

      For a description of IAM and its features, see the
      [IAM developer's guide](https://cloud.google.com/iam).
    properties:
      bindings:
        description: |-
          Associates a list of `members` to a `role`.
          `bindings` with no members will result in an error.
        items:
          $ref: '#/definitions/Binding'
        type: array
      etag:
        description: |-
          `etag` is used for optimistic concurrency control as a way to help
          prevent simultaneous updates of a policy from overwriting each other.
          It is strongly suggested that systems make use of the `etag` in the
          read-modify-write cycle to perform policy updates in order to avoid race
          conditions: An `etag` is returned in the response to `getIamPolicy`, and
          systems are expected to put that etag in the request to `setIamPolicy` to
          ensure that their change will be applied to the same version of the policy.

          If no `etag` is provided in the call to `setIamPolicy`, then the existing
          policy is overwritten blindly.
        format: byte
        type: string
      version:
        description: Version of the `Policy`. The default version is 0.
        format: int32
        type: integer
    type: object
  Position:
    description: |-
      An abstraction for referring to a genomic position, in relation to some
      already known reference. For now, represents a genomic position as a
      reference name, a base number on that reference (0-based), and a
      determination of forward or reverse strand.
    properties:
      position:
        description: The 0-based offset from the start of the forward strand for that reference.
        format: int64
        type: string
      referenceName:
        description: The name of the reference in whatever reference set is being used.
        type: string
      reverseStrand:
        description: |-
          Whether this position is on the reverse strand, as opposed to the forward
          strand.
        type: boolean
    type: object
  Program:
    properties:
      commandLine:
        description: The command line used to run this program.
        type: string
      id:
        description: |-
          The user specified locally unique ID of the program. Used along with
          `prevProgramId` to define an ordering between programs.
        type: string
      name:
        description: |-
          The display name of the program. This is typically the colloquial name of
          the tool used, for example 'bwa' or 'picard'.
        type: string
      prevProgramId:
        description: The ID of the program run before this one.
        type: string
      version:
        description: The version of the program run.
        type: string
    type: object
  Range:
    description: A 0-based half-open genomic coordinate range for search requests.
    properties:
      end:
        description: 'The end position of the range on the reference, 0-based exclusive.'
        format: int64
        type: string
      referenceName:
        description: |-
          The reference sequence name, for example `chr1`,
          `1`, or `chrX`.
        type: string
      start:
        description: 'The start position of the range on the reference, 0-based inclusive.'
        format: int64
        type: string
    type: object
  Read:
    description: |-
      A read alignment describes a linear alignment of a string of DNA to a
      reference sequence, in addition to metadata
      about the fragment (the molecule of DNA sequenced) and the read (the bases
      which were read by the sequencer). A read is equivalent to a line in a SAM
      file. A read belongs to exactly one read group and exactly one
      read group set.

      For more genomics resource definitions, see [Fundamentals of Google
      Genomics](https://cloud.google.com/genomics/fundamentals-of-google-genomics)

      ### Reverse-stranded reads

      Mapped reads (reads having a non-null `alignment`) can be aligned to either
      the forward or the reverse strand of their associated reference. Strandedness
      of a mapped read is encoded by `alignment.position.reverseStrand`.

      If we consider the reference to be a forward-stranded coordinate space of
      `[0, reference.length)` with `0` as the left-most position and
      `reference.length` as the right-most position, reads are always aligned left
      to right. That is, `alignment.position.position` always refers to the
      left-most reference coordinate and `alignment.cigar` describes the alignment
      of this read to the reference from left to right. All per-base fields such as
      `alignedSequence` and `alignedQuality` share this same left-to-right
      orientation; this is true of reads which are aligned to either strand. For
      reverse-stranded reads, this means that `alignedSequence` is the reverse
      complement of the bases that were originally reported by the sequencing
      machine.

      ### Generating a reference-aligned sequence string

      When interacting with mapped reads, it's often useful to produce a string
      representing the local alignment of the read to reference. The following
      pseudocode demonstrates one way of doing this:

          out = ""
          offset = 0
          for c in read.alignment.cigar {
            switch c.operation {
            case "ALIGNMENT_MATCH", "SEQUENCE_MATCH", "SEQUENCE_MISMATCH":
              out += read.alignedSequence[offset:offset+c.operationLength]
              offset += c.operationLength
              break
            case "CLIP_SOFT", "INSERT":
              offset += c.operationLength
              break
            case "PAD":
              out += repeat("*", c.operationLength)
              break
            case "DELETE":
              out += repeat("-", c.operationLength)
              break
            case "SKIP":
              out += repeat(" ", c.operationLength)
              break
            case "CLIP_HARD":
              break
            }
          }
          return out

      ### Converting to SAM's CIGAR string

      The following pseudocode generates a SAM CIGAR string from the
      `cigar` field. Note that this is a lossy conversion
      (`cigar.referenceSequence` is lost).

          cigarMap = {
            "ALIGNMENT_MATCH": "M",
            "INSERT": "I",
            "DELETE": "D",
            "SKIP": "N",
            "CLIP_SOFT": "S",
            "CLIP_HARD": "H",
            "PAD": "P",
            "SEQUENCE_MATCH": "=",
            "SEQUENCE_MISMATCH": "X",
          }
          cigarStr = ""
          for c in read.alignment.cigar {
            cigarStr += c.operationLength + cigarMap[c.operation]
          }
          return cigarStr
    properties:
      alignedQuality:
        description: |-
          The quality of the read sequence contained in this alignment record
          (equivalent to QUAL in SAM).
          `alignedSequence` and `alignedQuality` may be shorter than the full read
          sequence and quality. This will occur if the alignment is part of a
          chimeric alignment, or if the read was trimmed. When this occurs, the CIGAR
          for this read will begin/end with a hard clip operator that will indicate
          the length of the excised sequence.
        items:
          format: int32
          type: integer
        type: array
      alignedSequence:
        description: |-
          The bases of the read sequence contained in this alignment record,
          **without CIGAR operations applied** (equivalent to SEQ in SAM).
          `alignedSequence` and `alignedQuality` may be
          shorter than the full read sequence and quality. This will occur if the
          alignment is part of a chimeric alignment, or if the read was trimmed. When
          this occurs, the CIGAR for this read will begin/end with a hard clip
          operator that will indicate the length of the excised sequence.
        type: string
      alignment:
        $ref: '#/definitions/LinearAlignment'
        description: |-
          The linear alignment for this alignment record. This field is null for
          unmapped reads.
      duplicateFragment:
        description: The fragment is a PCR or optical duplicate (SAM flag 0x400).
        type: boolean
      failedVendorQualityChecks:
        description: |-
          Whether this read did not pass filters, such as platform or vendor quality
          controls (SAM flag 0x200).
        type: boolean
      fragmentLength:
        description: 'The observed length of the fragment, equivalent to TLEN in SAM.'
        format: int32
        type: integer
      fragmentName:
        description: The fragment name. Equivalent to QNAME (query template name) in SAM.
        type: string
      id:
        description: |-
          The server-generated read ID, unique across all reads. This is different
          from the `fragmentName`.
        type: string
      info:
        additionalProperties:
          items: {}
          type: array
        description: |-
          A map of additional read alignment information. This must be of the form
          map<string, string[]> (string key mapping to a list of string values).
        type: object
      nextMatePosition:
        $ref: '#/definitions/Position'
        description: |-
          The mapping of the primary alignment of the
          `(readNumber+1)%numberReads` read in the fragment. It replaces
          mate position and mate strand in SAM.
      numberReads:
        description: The number of reads in the fragment (extension to SAM flag 0x1).
        format: int32
        type: integer
      properPlacement:
        description: |-
          The orientation and the distance between reads from the fragment are
          consistent with the sequencing protocol (SAM flag 0x2).
        type: boolean
      readGroupId:
        description: |-
          The ID of the read group this read belongs to. A read belongs to exactly
          one read group. This is a server-generated ID which is distinct from SAM's
          RG tag (for that value, see
          ReadGroup.name).
        type: string
      readGroupSetId:
        description: |-
          The ID of the read group set this read belongs to. A read belongs to
          exactly one read group set.
        type: string
      readNumber:
        description: |-
          The read number in sequencing. 0-based and less than numberReads. This
          field replaces SAM flag 0x40 and 0x80.
        format: int32
        type: integer
      secondaryAlignment:
        description: |-
          Whether this alignment is secondary. Equivalent to SAM flag 0x100.
          A secondary alignment represents an alternative to the primary alignment
          for this read. Aligners may return secondary alignments if a read can map
          ambiguously to multiple coordinates in the genome. By convention, each read
          has one and only one alignment where both `secondaryAlignment`
          and `supplementaryAlignment` are false.
        type: boolean
      supplementaryAlignment:
        description: |-
          Whether this alignment is supplementary. Equivalent to SAM flag 0x800.
          Supplementary alignments are used in the representation of a chimeric
          alignment. In a chimeric alignment, a read is split into multiple
          linear alignments that map to different reference contigs. The first
          linear alignment in the read will be designated as the representative
          alignment; the remaining linear alignments will be designated as
          supplementary alignments. These alignments may have different mapping
          quality scores. In each linear alignment in a chimeric alignment, the read
          will be hard clipped. The `alignedSequence` and
          `alignedQuality` fields in the alignment record will only
          represent the bases for its respective linear alignment.
        type: boolean
    type: object
  ReadGroup:
    description: A read group is all the data that's processed the same way by the sequencer.
    properties:
      datasetId:
        description: The dataset to which this read group belongs.
        type: string
      description:
        description: A free-form text description of this read group.
        type: string
      experiment:
        $ref: '#/definitions/Experiment'
        description: The experiment used to generate this read group.
      id:
        description: |-
          The server-generated read group ID, unique for all read groups.
          Note: This is different than the @RG ID field in the SAM spec. For that
          value, see name.
        type: string
      info:
        additionalProperties:
          items: {}
          type: array
        description: |-
          A map of additional read group information. This must be of the form
          map<string, string[]> (string key mapping to a list of string values).
        type: object
      name:
        description: The read group name. This corresponds to the @RG ID field in the SAM spec.
        type: string
      predictedInsertSize:
        description: |-
          The predicted insert size of this read group. The insert size is the length
          the sequenced DNA fragment from end-to-end, not including the adapters.
        format: int32
        type: integer
      programs:
        description: |-
          The programs used to generate this read group. Programs are always
          identical for all read groups within a read group set. For this reason,
          only the first read group in a returned set will have this field
          populated.
        items:
          $ref: '#/definitions/Program'
        type: array
      referenceSetId:
        description: The reference set the reads in this read group are aligned to.
        type: string
      sampleId:
        description: A client-supplied sample identifier for the reads in this read group.
        type: string
    type: object
  ReadGroupSet:
    description: |-
      A read group set is a logical collection of read groups, which are
      collections of reads produced by a sequencer. A read group set typically
      models reads corresponding to one sample, sequenced one way, and aligned one
      way.

      * A read group set belongs to one dataset.
      * A read group belongs to one read group set.
      * A read belongs to one read group.

      For more genomics resource definitions, see [Fundamentals of Google
      Genomics](https://cloud.google.com/genomics/fundamentals-of-google-genomics)
    properties:
      datasetId:
        description: The dataset to which this read group set belongs.
        type: string
      filename:
        description: 'The filename of the original source file for this read group set, if any.'
        type: string
      id:
        description: 'The server-generated read group set ID, unique for all read group sets.'
        type: string
      info:
        additionalProperties:
          items: {}
          type: array
        description: A map of additional read group set information.
        type: object
      name:
        description: |-
          The read group set name. By default this will be initialized to the sample
          name of the sequenced data contained in this set.
        type: string
      readGroups:
        description: |-
          The read groups in this set. There are typically 1-10 read groups in a read
          group set.
        items:
          $ref: '#/definitions/ReadGroup'
        type: array
      referenceSetId:
        description: The reference set to which the reads in this read group set are aligned.
        type: string
    type: object
  Reference:
    description: |-
      A reference is a canonical assembled DNA sequence, intended to act as a
      reference coordinate space for other genomic annotations. A single reference
      might represent the human chromosome 1 or mitochandrial DNA, for instance. A
      reference belongs to one or more reference sets.

      For more genomics resource definitions, see [Fundamentals of Google
      Genomics](https://cloud.google.com/genomics/fundamentals-of-google-genomics)
    properties:
      id:
        description: 'The server-generated reference ID, unique across all references.'
        type: string
      length:
        description: The length of this reference's sequence.
        format: int64
        type: string
      md5checksum:
        description: |-
          MD5 of the upper-case sequence excluding all whitespace characters (this
          is equivalent to SQ:M5 in SAM). This value is represented in lower case
          hexadecimal format.
        type: string
      name:
        description: 'The name of this reference, for example `22`.'
        type: string
      ncbiTaxonId:
        description: 'ID from http://www.ncbi.nlm.nih.gov/taxonomy. For example, 9606 for human.'
        format: int32
        type: integer
      sourceAccessions:
        description: |-
          All known corresponding accession IDs in INSDC (GenBank/ENA/DDBJ) ideally
          with a version number, for example `GCF_000001405.26`.
        items:
          type: string
        type: array
      sourceUri:
        description: |-
          The URI from which the sequence was obtained. Typically specifies a FASTA
          format file.
        type: string
    type: object
  ReferenceBound:
    description: |-
      ReferenceBound records an upper bound for the starting coordinate of
      variants in a particular reference.
    properties:
      referenceName:
        description: The name of the reference associated with this reference bound.
        type: string
      upperBound:
        description: |-
          An upper bound (inclusive) on the starting coordinate of any
          variant in the reference sequence.
        format: int64
        type: string
    type: object
  ReferenceSet:
    description: |-
      A reference set is a set of references which typically comprise a reference
      assembly for a species, such as `GRCh38` which is representative
      of the human genome. A reference set defines a common coordinate space for
      comparing reference-aligned experimental data. A reference set contains 1 or
      more references.

      For more genomics resource definitions, see [Fundamentals of Google
      Genomics](https://cloud.google.com/genomics/fundamentals-of-google-genomics)
    properties:
      assemblyId:
        description: 'Public id of this reference set, such as `GRCh37`.'
        type: string
      description:
        description: Free text description of this reference set.
        type: string
      id:
        description: 'The server-generated reference set ID, unique across all reference sets.'
        type: string
      md5checksum:
        description: |-
          Order-independent MD5 checksum which identifies this reference set. The
          checksum is computed by sorting all lower case hexidecimal string
          `reference.md5checksum` (for all reference in this set) in
          ascending lexicographic order, concatenating, and taking the MD5 of that
          value. The resulting value is represented in lower case hexadecimal format.
        type: string
      ncbiTaxonId:
        description: |-
          ID from http://www.ncbi.nlm.nih.gov/taxonomy (for example, 9606 for human)
          indicating the species which this reference set is intended to model. Note
          that contained references may specify a different `ncbiTaxonId`, as
          assemblies may contain reference sequences which do not belong to the
          modeled species, for example EBV in a human reference genome.
        format: int32
        type: integer
      referenceIds:
        description: |-
          The IDs of the reference objects that are part of this set.
          `Reference.md5checksum` must be unique within this set.
        items:
          type: string
        type: array
      sourceAccessions:
        description: |-
          All known corresponding accession IDs in INSDC (GenBank/ENA/DDBJ) ideally
          with a version number, for example `NC_000001.11`.
        items:
          type: string
        type: array
      sourceUri:
        description: The URI from which the references were obtained.
        type: string
    type: object
  RuntimeMetadata:
    description: |-
      Runtime metadata that will be populated in the
      runtimeMetadata
      field of the Operation associated with a RunPipeline execution.
    properties:
      computeEngine:
        $ref: '#/definitions/ComputeEngine'
        description: Execution information specific to Google Compute Engine.
    type: object
  SearchAnnotationSetsRequest:
    properties:
      datasetIds:
        description: |-
          Required. The dataset IDs to search within. Caller must have `READ` access
          to these datasets.
        items:
          type: string
        type: array
      name:
        description: |-
          Only return annotations sets for which a substring of the name matches this
          string (case insensitive).
        type: string
      pageSize:
        description: |-
          The maximum number of results to return in a single page. If unspecified,
          defaults to 128. The maximum value is 1024.
        format: int32
        type: integer
      pageToken:
        description: |-
          The continuation token, which is used to page through large result sets.
          To get the next page of results, set this parameter to the value of
          `nextPageToken` from the previous response.
        type: string
      referenceSetId:
        description: |-
          If specified, only annotation sets associated with the given reference set
          are returned.
        type: string
      types:
        description: |-
          If specified, only annotation sets that have any of these types are
          returned.
        items:
          enum:
            - ANNOTATION_TYPE_UNSPECIFIED
            - GENERIC
            - VARIANT
            - GENE
            - TRANSCRIPT
          type: string
        type: array
    type: object
  SearchAnnotationSetsResponse:
    properties:
      annotationSets:
        description: The matching annotation sets.
        items:
          $ref: '#/definitions/AnnotationSet'
        type: array
      nextPageToken:
        description: |-
          The continuation token, which is used to page through large result sets.
          Provide this value in a subsequent request to return the next page of
          results. This field will be empty if there aren't any additional results.
        type: string
    type: object
  SearchAnnotationsRequest:
    properties:
      annotationSetIds:
        description: |-
          Required. The annotation sets to search within. The caller must have
          `READ` access to these annotation sets.
          All queried annotation sets must have the same type.
        items:
          type: string
        type: array
      end:
        description: |-
          The end position of the range on the reference, 0-based exclusive. If
          referenceId or
          referenceName
          must be specified, Defaults to the length of the reference.
        format: int64
        type: string
      pageSize:
        description: |-
          The maximum number of results to return in a single page. If unspecified,
          defaults to 256. The maximum value is 2048.
        format: int32
        type: integer
      pageToken:
        description: |-
          The continuation token, which is used to page through large result sets.
          To get the next page of results, set this parameter to the value of
          `nextPageToken` from the previous response.
        type: string
      referenceId:
        description: The ID of the reference to query.
        type: string
      referenceName:
        description: |-
          The name of the reference to query, within the reference set associated
          with this query.
        type: string
      start:
        description: |-
          The start position of the range on the reference, 0-based inclusive. If
          specified,
          referenceId or
          referenceName
          must be specified. Defaults to 0.
        format: int64
        type: string
    type: object
  SearchAnnotationsResponse:
    properties:
      annotations:
        description: The matching annotations.
        items:
          $ref: '#/definitions/Annotation'
        type: array
      nextPageToken:
        description: |-
          The continuation token, which is used to page through large result sets.
          Provide this value in a subsequent request to return the next page of
          results. This field will be empty if there aren't any additional results.
        type: string
    type: object
  SearchCallSetsRequest:
    description: The call set search request.
    properties:
      name:
        description: |-
          Only return call sets for which a substring of the name matches this
          string.
        type: string
      pageSize:
        description: |-
          The maximum number of results to return in a single page. If unspecified,
          defaults to 1024.
        format: int32
        type: integer
      pageToken:
        description: |-
          The continuation token, which is used to page through large result sets.
          To get the next page of results, set this parameter to the value of
          `nextPageToken` from the previous response.
        type: string
      variantSetIds:
        description: |-
          Restrict the query to call sets within the given variant sets. At least one
          ID must be provided.
        items:
          type: string
        type: array
    type: object
  SearchCallSetsResponse:
    description: The call set search response.
    properties:
      callSets:
        description: The list of matching call sets.
        items:
          $ref: '#/definitions/CallSet'
        type: array
      nextPageToken:
        description: |-
          The continuation token, which is used to page through large result sets.
          Provide this value in a subsequent request to return the next page of
          results. This field will be empty if there aren't any additional results.
        type: string
    type: object
  SearchReadGroupSetsRequest:
    description: The read group set search request.
    properties:
      datasetIds:
        description: |-
          Restricts this query to read group sets within the given datasets. At least
          one ID must be provided.
        items:
          type: string
        type: array
      name:
        description: |-
          Only return read group sets for which a substring of the name matches this
          string.
        type: string
      pageSize:
        description: |-
          The maximum number of results to return in a single page. If unspecified,
          defaults to 256. The maximum value is 1024.
        format: int32
        type: integer
      pageToken:
        description: |-
          The continuation token, which is used to page through large result sets.
          To get the next page of results, set this parameter to the value of
          `nextPageToken` from the previous response.
        type: string
    type: object
  SearchReadGroupSetsResponse:
    description: The read group set search response.
    properties:
      nextPageToken:
        description: |-
          The continuation token, which is used to page through large result sets.
          Provide this value in a subsequent request to return the next page of
          results. This field will be empty if there aren't any additional results.
        type: string
      readGroupSets:
        description: The list of matching read group sets.
        items:
          $ref: '#/definitions/ReadGroupSet'
        type: array
    type: object
  SearchReadsRequest:
    description: The read search request.
    properties:
      end:
        description: |-
          The end position of the range on the reference, 0-based exclusive. If
          specified, `referenceName` must also be specified.
        format: int64
        type: string
      pageSize:
        description: |-
          The maximum number of results to return in a single page. If unspecified,
          defaults to 256. The maximum value is 2048.
        format: int32
        type: integer
      pageToken:
        description: |-
          The continuation token, which is used to page through large result sets.
          To get the next page of results, set this parameter to the value of
          `nextPageToken` from the previous response.
        type: string
      readGroupIds:
        description: |-
          The IDs of the read groups within which to search for reads. All specified
          read groups must belong to the same read group sets. Must specify one of
          `readGroupSetIds` or `readGroupIds`.
        items:
          type: string
        type: array
      readGroupSetIds:
        description: |-
          The IDs of the read groups sets within which to search for reads. All
          specified read group sets must be aligned against a common set of reference
          sequences; this defines the genomic coordinates for the query. Must specify
          one of `readGroupSetIds` or `readGroupIds`.
        items:
          type: string
        type: array
      referenceName:
        description: |-
          The reference sequence name, for example `chr1`, `1`, or `chrX`. If set to
          `*`, only unmapped reads are returned. If unspecified, all reads (mapped
          and unmapped) are returned.
        type: string
      start:
        description: |-
          The start position of the range on the reference, 0-based inclusive. If
          specified, `referenceName` must also be specified.
        format: int64
        type: string
    type: object
  SearchReadsResponse:
    description: The read search response.
    properties:
      alignments:
        description: |-
          The list of matching alignments sorted by mapped genomic coordinate,
          if any, ascending in position within the same reference. Unmapped reads,
          which have no position, are returned contiguously and are sorted in
          ascending lexicographic order by fragment name.
        items:
          $ref: '#/definitions/Read'
        type: array
      nextPageToken:
        description: |-
          The continuation token, which is used to page through large result sets.
          Provide this value in a subsequent request to return the next page of
          results. This field will be empty if there aren't any additional results.
        type: string
    type: object
  SearchReferenceSetsRequest:
    properties:
      accessions:
        description: |-
          If present, return reference sets for which a prefix of any of
          sourceAccessions
          match any of these strings. Accession numbers typically have a main number
          and a version, for example `NC_000001.11`.
        items:
          type: string
        type: array
      assemblyId:
        description: |-
          If present, return reference sets for which a substring of their
          `assemblyId` matches this string (case insensitive).
        type: string
      md5checksums:
        description: |-
          If present, return reference sets for which the
          md5checksum matches exactly.
        items:
          type: string
        type: array
      pageSize:
        description: |-
          The maximum number of results to return in a single page. If unspecified,
          defaults to 1024. The maximum value is 4096.
        format: int32
        type: integer
      pageToken:
        description: |-
          The continuation token, which is used to page through large result sets.
          To get the next page of results, set this parameter to the value of
          `nextPageToken` from the previous response.
        type: string
    type: object
  SearchReferenceSetsResponse:
    properties:
      nextPageToken:
        description: |-
          The continuation token, which is used to page through large result sets.
          Provide this value in a subsequent request to return the next page of
          results. This field will be empty if there aren't any additional results.
        type: string
      referenceSets:
        description: The matching references sets.
        items:
          $ref: '#/definitions/ReferenceSet'
        type: array
    type: object
  SearchReferencesRequest:
    properties:
      accessions:
        description: |-
          If present, return references for which a prefix of any of
          sourceAccessions match
          any of these strings. Accession numbers typically have a main number and a
          version, for example `GCF_000001405.26`.
        items:
          type: string
        type: array
      md5checksums:
        description: |-
          If present, return references for which the
          md5checksum matches exactly.
        items:
          type: string
        type: array
      pageSize:
        description: |-
          The maximum number of results to return in a single page. If unspecified,
          defaults to 1024. The maximum value is 4096.
        format: int32
        type: integer
      pageToken:
        description: |-
          The continuation token, which is used to page through large result sets.
          To get the next page of results, set this parameter to the value of
          `nextPageToken` from the previous response.
        type: string
      referenceSetId:
        description: 'If present, return only references which belong to this reference set.'
        type: string
    type: object
  SearchReferencesResponse:
    properties:
      nextPageToken:
        description: |-
          The continuation token, which is used to page through large result sets.
          Provide this value in a subsequent request to return the next page of
          results. This field will be empty if there aren't any additional results.
        type: string
      references:
        description: The matching references.
        items:
          $ref: '#/definitions/Reference'
        type: array
    type: object
  SearchVariantSetsRequest:
    description: The search variant sets request.
    properties:
      datasetIds:
        description: |-
          Exactly one dataset ID must be provided here. Only variant sets which
          belong to this dataset will be returned.
        items:
          type: string
        type: array
      pageSize:
        description: |-
          The maximum number of results to return in a single page. If unspecified,
          defaults to 1024.
        format: int32
        type: integer
      pageToken:
        description: |-
          The continuation token, which is used to page through large result sets.
          To get the next page of results, set this parameter to the value of
          `nextPageToken` from the previous response.
        type: string
    type: object
  SearchVariantSetsResponse:
    description: The search variant sets response.
    properties:
      nextPageToken:
        description: |-
          The continuation token, which is used to page through large result sets.
          Provide this value in a subsequent request to return the next page of
          results. This field will be empty if there aren't any additional results.
        type: string
      variantSets:
        description: The variant sets belonging to the requested dataset.
        items:
          $ref: '#/definitions/VariantSet'
        type: array
    type: object
  SearchVariantsRequest:
    description: The variant search request.
    properties:
      callSetIds:
        description: |-
          Only return variant calls which belong to call sets with these ids.
          Leaving this blank returns all variant calls. If a variant has no
          calls belonging to any of these call sets, it won't be returned at all.
        items:
          type: string
        type: array
      end:
        description: |-
          The end of the window, 0-based exclusive. If unspecified or 0, defaults to
          the length of the reference.
        format: int64
        type: string
      maxCalls:
        description: |-
          The maximum number of calls to return in a single page. Note that this
          limit may be exceeded in the event that a matching variant contains more
          calls than the requested maximum. If unspecified, defaults to 5000. The
          maximum value is 10000.
        format: int32
        type: integer
      pageSize:
        description: |-
          The maximum number of variants to return in a single page. If unspecified,
          defaults to 5000. The maximum value is 10000.
        format: int32
        type: integer
      pageToken:
        description: |-
          The continuation token, which is used to page through large result sets.
          To get the next page of results, set this parameter to the value of
          `nextPageToken` from the previous response.
        type: string
      referenceName:
        description: Required. Only return variants in this reference sequence.
        type: string
      start:
        description: |-
          The beginning of the window (0-based, inclusive) for which
          overlapping variants should be returned. If unspecified, defaults to 0.
        format: int64
        type: string
      variantName:
        description: Only return variants which have exactly this name.
        type: string
      variantSetIds:
        description: |-
          At most one variant set ID must be provided. Only variants from this
          variant set will be returned. If omitted, a call set id must be included in
          the request.
        items:
          type: string
        type: array
    type: object
  SearchVariantsResponse:
    description: The variant search response.
    properties:
      nextPageToken:
        description: |-
          The continuation token, which is used to page through large result sets.
          Provide this value in a subsequent request to return the next page of
          results. This field will be empty if there aren't any additional results.
        type: string
      variants:
        description: The list of matching Variants.
        items:
          $ref: '#/definitions/Variant'
        type: array
    type: object
  SetIamPolicyRequest:
    description: Request message for `SetIamPolicy` method.
    properties:
      policy:
        $ref: '#/definitions/Policy'
        description: |-
          REQUIRED: The complete policy to be applied to the `resource`. The size of
          the policy is limited to a few 10s of KB. An empty policy is a
          valid policy but certain Cloud Platform services (such as Projects)
          might reject them.
    type: object
  Status:
    description: |-
      The `Status` type defines a logical error model that is suitable for different
      programming environments, including REST APIs and RPC APIs. It is used by
      [gRPC](https://github.com/grpc). The error model is designed to be:

      - Simple to use and understand for most users
      - Flexible enough to meet unexpected needs

      # Overview

      The `Status` message contains three pieces of data: error code, error message,
      and error details. The error code should be an enum value of
      google.rpc.Code, but it may accept additional error codes if needed.  The
      error message should be a developer-facing English message that helps
      developers *understand* and *resolve* the error. If a localized user-facing
      error message is needed, put the localized message in the error details or
      localize it in the client. The optional error details may contain arbitrary
      information about the error. There is a predefined set of error detail types
      in the package `google.rpc` that can be used for common error conditions.

      # Language mapping

      The `Status` message is the logical representation of the error model, but it
      is not necessarily the actual wire format. When the `Status` message is
      exposed in different client libraries and different wire protocols, it can be
      mapped differently. For example, it will likely be mapped to some exceptions
      in Java, but more likely mapped to some error codes in C.

      # Other uses

      The error model and the `Status` message can be used in a variety of
      environments, either with or without APIs, to provide a
      consistent developer experience across different environments.

      Example uses of this error model include:

      - Partial errors. If a service needs to return partial errors to the client,
          it may embed the `Status` in the normal response to indicate the partial
          errors.

      - Workflow errors. A typical workflow has multiple steps. Each step may
          have a `Status` message for error reporting.

      - Batch operations. If a client uses batch request and batch response, the
          `Status` message should be used directly inside batch response, one for
          each error sub-response.

      - Asynchronous operations. If an API call embeds asynchronous operation
          results in its response, the status of those operations should be
          represented directly using the `Status` message.

      - Logging. If some API errors are stored in logs, the message `Status` could
          be used directly after any stripping needed for security/privacy reasons.
    properties:
      code:
        description: 'The status code, which should be an enum value of google.rpc.Code.'
        format: int32
        type: integer
      details:
        description: |-
          A list of messages that carry the error details.  There is a common set of
          message types for APIs to use.
        items:
          additionalProperties:
            description: Properties of the object. Contains field @type with type URL.
          type: object
        type: array
      message:
        description: |-
          A developer-facing error message, which should be in English. Any
          user-facing error message should be localized and sent in the
          google.rpc.Status.details field, or localized by the client.
        type: string
    type: object
  TestIamPermissionsRequest:
    description: Request message for `TestIamPermissions` method.
    properties:
      permissions:
        description: |-
          REQUIRED: The set of permissions to check for the 'resource'.
          Permissions with wildcards (such as '*' or 'storage.*') are not allowed.
          Allowed permissions are&#58;

          * `genomics.datasets.create`
          * `genomics.datasets.delete`
          * `genomics.datasets.get`
          * `genomics.datasets.list`
          * `genomics.datasets.update`
          * `genomics.datasets.getIamPolicy`
          * `genomics.datasets.setIamPolicy`
        items:
          type: string
        type: array
    type: object
  TestIamPermissionsResponse:
    description: Response message for `TestIamPermissions` method.
    properties:
      permissions:
        description: |-
          A subset of `TestPermissionsRequest.permissions` that the caller is
          allowed.
        items:
          type: string
        type: array
    type: object
  Transcript:
    description: |-
      A transcript represents the assertion that a particular region of the
      reference genome may be transcribed as RNA.
    properties:
      codingSequence:
        $ref: '#/definitions/CodingSequence'
        description: |-
          The range of the coding sequence for this transcript, if any. To determine
          the exact ranges of coding sequence, intersect this range with those of the
          exons, if any. If there are any
          exons, the
          codingSequence must start
          and end within them.

          Note that in some cases, the reference genome will not exactly match the
          observed mRNA transcript e.g. due to variance in the source genome from
          reference. In these cases,
          exon.frame will not necessarily
          match the expected reference reading frame and coding exon reference bases
          cannot necessarily be concatenated to produce the original transcript mRNA.
      exons:
        description: |-
          The <a href="http://en.wikipedia.org/wiki/Exon">exons</a> that compose
          this transcript. This field should be unset for genomes where transcript
          splicing does not occur, for example prokaryotes.

          Introns are regions of the transcript that are not included in the
          spliced RNA product. Though not explicitly modeled here, intron ranges can
          be deduced; all regions of this transcript that are not exons are introns.

          Exonic sequences do not necessarily code for a translational product
          (amino acids). Only the regions of exons bounded by the
          codingSequence correspond
          to coding DNA sequence.

          Exons are ordered by start position and may not overlap.
        items:
          $ref: '#/definitions/Exon'
        type: array
      geneId:
        description: The annotation ID of the gene from which this transcript is transcribed.
        type: string
    type: object
  UndeleteDatasetRequest:
    properties: {}
    type: object
  Variant:
    description: |-
      A variant represents a change in DNA sequence relative to a reference
      sequence. For example, a variant could represent a SNP or an insertion.
      Variants belong to a variant set.

      For more genomics resource definitions, see [Fundamentals of Google
      Genomics](https://cloud.google.com/genomics/fundamentals-of-google-genomics)

      Each of the calls on a variant represent a determination of genotype with
      respect to that variant. For example, a call might assign probability of 0.32
      to the occurrence of a SNP named rs1234 in a sample named NA12345. A call
      belongs to a call set, which contains related calls typically from one
      sample.
    properties:
      alternateBases:
        description: The bases that appear instead of the reference bases.
        items:
          type: string
        type: array
      calls:
        description: |-
          The variant calls for this particular variant. Each one represents the
          determination of genotype with respect to this variant.
        items:
          $ref: '#/definitions/VariantCall'
        type: array
      created:
        description: 'The date this variant was created, in milliseconds from the epoch.'
        format: int64
        type: string
      end:
        description: |-
          The end position (0-based) of this variant. This corresponds to the first
          base after the last base in the reference allele. So, the length of
          the reference allele is (end - start). This is useful for variants
          that don't explicitly give alternate bases, for example large deletions.
        format: int64
        type: string
      filter:
        description: |-
          A list of filters (normally quality filters) this variant has failed.
          `PASS` indicates this variant has passed all filters.
        items:
          type: string
        type: array
      id:
        description: 'The server-generated variant ID, unique across all variants.'
        type: string
      info:
        additionalProperties:
          items: {}
          type: array
        description: |-
          A map of additional variant information. This must be of the form
          map<string, string[]> (string key mapping to a list of string values).
        type: object
      names:
        description: 'Names for the variant, for example a RefSNP ID.'
        items:
          type: string
        type: array
      quality:
        description: |-
          A measure of how likely this variant is to be real.
          A higher value is better.
        format: double
        type: number
      referenceBases:
        description: |-
          The reference bases for this variant. They start at the given
          position.
        type: string
      referenceName:
        description: |-
          The reference on which this variant occurs.
          (such as `chr20` or `X`)
        type: string
      start:
        description: |-
          The position at which this variant occurs (0-based).
          This corresponds to the first base of the string of reference bases.
        format: int64
        type: string
      variantSetId:
        description: The ID of the variant set this variant belongs to.
        type: string
    type: object
  VariantAnnotation:
    properties:
      alternateBases:
        description: |-
          The alternate allele for this variant. If multiple alternate alleles
          exist at this location, create a separate variant for each one, as they
          may represent distinct conditions.
        type: string
      clinicalSignificance:
        description: |-
          Describes the clinical significance of a variant.
          It is adapted from the ClinVar controlled vocabulary for clinical
          significance described at:
          http://www.ncbi.nlm.nih.gov/clinvar/docs/clinsig/
        enum:
          - CLINICAL_SIGNIFICANCE_UNSPECIFIED
          - CLINICAL_SIGNIFICANCE_OTHER
          - UNCERTAIN
          - BENIGN
          - LIKELY_BENIGN
          - LIKELY_PATHOGENIC
          - PATHOGENIC
          - DRUG_RESPONSE
          - HISTOCOMPATIBILITY
          - CONFERS_SENSITIVITY
          - RISK_FACTOR
          - ASSOCIATION
          - PROTECTIVE
          - MULTIPLE_REPORTED
        type: string
      conditions:
        description: |-
          The set of conditions associated with this variant.
          A condition describes the way a variant influences human health.
        items:
          $ref: '#/definitions/ClinicalCondition'
        type: array
      effect:
        description: Effect of the variant on the coding sequence.
        enum:
          - EFFECT_UNSPECIFIED
          - EFFECT_OTHER
          - FRAMESHIFT
          - FRAME_PRESERVING_INDEL
          - SYNONYMOUS_SNP
          - NONSYNONYMOUS_SNP
          - STOP_GAIN
          - STOP_LOSS
          - SPLICE_SITE_DISRUPTION
        type: string
      geneId:
        description: |-
          Google annotation ID of the gene affected by this variant. This should
          be provided when the variant is created.
        type: string
      transcriptIds:
        description: |-
          Google annotation IDs of the transcripts affected by this variant. These
          should be provided when the variant is created.
        items:
          type: string
        type: array
      type:
        description: Type has been adapted from ClinVar's list of variant types.
        enum:
          - TYPE_UNSPECIFIED
          - TYPE_OTHER
          - INSERTION
          - DELETION
          - SUBSTITUTION
          - SNP
          - STRUCTURAL
          - CNV
        type: string
    type: object
  VariantCall:
    description: |-
      A call represents the determination of genotype with respect to a particular
      variant. It may include associated information such as quality and phasing.
      For example, a call might assign a probability of 0.32 to the occurrence of
      a SNP named rs1234 in a call set with the name NA12345.
    properties:
      callSetId:
        description: The ID of the call set this variant call belongs to.
        type: string
      callSetName:
        description: The name of the call set this variant call belongs to.
        type: string
      genotype:
        description: |-
          The genotype of this variant call. Each value represents either the value
          of the `referenceBases` field or a 1-based index into
          `alternateBases`. If a variant had a `referenceBases`
          value of `T` and an `alternateBases`
          value of `["A", "C"]`, and the `genotype` was
          `[2, 1]`, that would mean the call
          represented the heterozygous value `CA` for this variant.
          If the `genotype` was instead `[0, 1]`, the
          represented value would be `TA`. Ordering of the
          genotype values is important if the `phaseset` is present.
          If a genotype is not called (that is, a `.` is present in the
          GT string) -1 is returned.
        items:
          format: int32
          type: integer
        type: array
      genotypeLikelihood:
        description: |-
          The genotype likelihoods for this variant call. Each array entry
          represents how likely a specific genotype is for this call. The value
          ordering is defined by the GL tag in the VCF spec.
          If Phred-scaled genotype likelihood scores (PL) are available and
          log10(P) genotype likelihood scores (GL) are not, PL scores are converted
          to GL scores.  If both are available, PL scores are stored in `info`.
        items:
          format: double
          type: number
        type: array
      info:
        additionalProperties:
          items: {}
          type: array
        description: |-
          A map of additional variant call information. This must be of the form
          map<string, string[]> (string key mapping to a list of string values).
        type: object
      phaseset:
        description: |-
          If this field is present, this variant call's genotype ordering implies
          the phase of the bases and is consistent with any other variant calls in
          the same reference sequence which have the same phaseset value.
          When importing data from VCF, if the genotype data was phased but no
          phase set was specified this field will be set to `*`.
        type: string
    type: object
  VariantSet:
    description: |-
      A variant set is a collection of call sets and variants. It contains summary
      statistics of those contents. A variant set belongs to a dataset.

      For more genomics resource definitions, see [Fundamentals of Google
      Genomics](https://cloud.google.com/genomics/fundamentals-of-google-genomics)
    properties:
      datasetId:
        description: The dataset to which this variant set belongs.
        type: string
      description:
        description: A textual description of this variant set.
        type: string
      id:
        description: 'The server-generated variant set ID, unique across all variant sets.'
        type: string
      metadata:
        description: The metadata associated with this variant set.
        items:
          $ref: '#/definitions/VariantSetMetadata'
        type: array
      name:
        description: 'User-specified, mutable name.'
        type: string
      referenceBounds:
        description: |-
          A list of all references used by the variants in a variant set
          with associated coordinate upper bounds for each one.
        items:
          $ref: '#/definitions/ReferenceBound'
        type: array
      referenceSetId:
        description: |-
          The reference set to which the variant set is mapped. The reference set
          describes the alignment provenance of the variant set, while the
          `referenceBounds` describe the shape of the actual variant data. The
          reference set's reference names are a superset of those found in the
          `referenceBounds`.

          For example, given a variant set that is mapped to the GRCh38 reference set
          and contains a single variant on reference 'X', `referenceBounds` would
          contain only an entry for 'X', while the associated reference set
          enumerates all possible references: '1', '2', 'X', 'Y', 'MT', etc.
        type: string
    type: object
  VariantSetMetadata:
    description: |-
      Metadata describes a single piece of variant call metadata.
      These data include a top level key and either a single value string (value)
      or a list of key-value pairs (info.)
      Value and info are mutually exclusive.
    properties:
      description:
        description: A textual description of this metadata.
        type: string
      id:
        description: |-
          User-provided ID field, not enforced by this API.
          Two or more pieces of structured metadata with identical
          id and key fields are considered equivalent.
        type: string
      info:
        additionalProperties:
          items: {}
          type: array
        description: |-
          Remaining structured metadata key-value pairs. This must be of the form
          map<string, string[]> (string key mapping to a list of string values).
        type: object
      key:
        description: The top-level key.
        type: string
      number:
        description: |-
          The number of values that can be included in a field described by this
          metadata.
        type: string
      type:
        description: |-
          The type of data. Possible types include: Integer, Float,
          Flag, Character, and String.
        enum:
          - TYPE_UNSPECIFIED
          - INTEGER
          - FLOAT
          - FLAG
          - CHARACTER
          - STRING
        type: string
      value:
        description: The value field for simple metadata
        type: string
    type: object
