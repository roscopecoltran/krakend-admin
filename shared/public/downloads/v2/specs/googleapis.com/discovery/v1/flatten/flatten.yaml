basePath: /discovery/v1
definitions.DirectoryList.properties.discoveryVersion.default: v1
definitions.DirectoryList.properties.discoveryVersion.description: Indicate the version
  of the Discovery API used to generate this doc.
definitions.DirectoryList.properties.discoveryVersion.type: string
definitions.DirectoryList.properties.items.description: The individual directory entries.
  One entry per api/version pair.
definitions.DirectoryList.properties.items.items.properties.description.description: The
  description of this API.
definitions.DirectoryList.properties.items.items.properties.description.type: string
definitions.DirectoryList.properties.items.items.properties.discoveryLink.description: A
  link to the discovery document.
definitions.DirectoryList.properties.items.items.properties.discoveryLink.type: string
definitions.DirectoryList.properties.items.items.properties.discoveryRestUrl.description: The
  URL for the discovery REST document.
definitions.DirectoryList.properties.items.items.properties.discoveryRestUrl.type: string
definitions.DirectoryList.properties.items.items.properties.documentationLink.description: A
  link to human readable documentation for the API.
definitions.DirectoryList.properties.items.items.properties.documentationLink.type: string
definitions.DirectoryList.properties.items.items.properties.icons.description: Links
  to 16x16 and 32x32 icons representing the API.
definitions.DirectoryList.properties.items.items.properties.icons.properties.x16.description: The
  URL of the 16x16 icon.
definitions.DirectoryList.properties.items.items.properties.icons.properties.x16.type: string
definitions.DirectoryList.properties.items.items.properties.icons.properties.x32.description: The
  URL of the 32x32 icon.
definitions.DirectoryList.properties.items.items.properties.icons.properties.x32.type: string
definitions.DirectoryList.properties.items.items.properties.icons.type: object
definitions.DirectoryList.properties.items.items.properties.id.description: The id
  of this API.
definitions.DirectoryList.properties.items.items.properties.id.type: string
definitions.DirectoryList.properties.items.items.properties.kind.default: discovery#directoryItem
definitions.DirectoryList.properties.items.items.properties.kind.description: The
  kind for this response.
definitions.DirectoryList.properties.items.items.properties.kind.type: string
definitions.DirectoryList.properties.items.items.properties.labels.description: Labels
  for the status of this API, such as labs or deprecated.
definitions.DirectoryList.properties.items.items.properties.labels.items.type: string
definitions.DirectoryList.properties.items.items.properties.labels.type: array
definitions.DirectoryList.properties.items.items.properties.name.description: The
  name of the API.
definitions.DirectoryList.properties.items.items.properties.name.type: string
definitions.DirectoryList.properties.items.items.properties.preferred.description: True
  if this version is the preferred version to use.
definitions.DirectoryList.properties.items.items.properties.preferred.type: boolean
definitions.DirectoryList.properties.items.items.properties.title.description: The
  title of this API.
definitions.DirectoryList.properties.items.items.properties.title.type: string
definitions.DirectoryList.properties.items.items.properties.version.description: The
  version of the API.
definitions.DirectoryList.properties.items.items.properties.version.type: string
definitions.DirectoryList.properties.items.items.type: object
definitions.DirectoryList.properties.items.type: array
definitions.DirectoryList.properties.kind.default: discovery#directoryList
definitions.DirectoryList.properties.kind.description: The kind for this response.
definitions.DirectoryList.properties.kind.type: string
definitions.DirectoryList.type: object
definitions.JsonSchema.properties.$ref.description: A reference to another schema.
  The value of this property is the "id" of another schema.
definitions.JsonSchema.properties.$ref.type: string
definitions.JsonSchema.properties.additionalProperties.$ref: '#/definitions/JsonSchema'
definitions.JsonSchema.properties.additionalProperties.description: If this is a schema
  for an object, this property is the schema for any additional properties with dynamic
  keys on this object.
definitions.JsonSchema.properties.annotations.description: Additional information
  about this property.
definitions.JsonSchema.properties.annotations.properties.required.description: A list
  of methods for which this property is required on requests.
definitions.JsonSchema.properties.annotations.properties.required.items.type: string
definitions.JsonSchema.properties.annotations.properties.required.type: array
definitions.JsonSchema.properties.annotations.type: object
definitions.JsonSchema.properties.default.description: The default value of this property
  (if one exists).
definitions.JsonSchema.properties.default.type: string
definitions.JsonSchema.properties.description.description: A description of this object.
definitions.JsonSchema.properties.description.type: string
definitions.JsonSchema.properties.enum.description: Values this parameter may take
  (if it is an enum).
definitions.JsonSchema.properties.enum.items.type: string
definitions.JsonSchema.properties.enum.type: array
definitions.JsonSchema.properties.enumDescriptions.description: The descriptions for
  the enums. Each position maps to the corresponding value in the "enum" array.
definitions.JsonSchema.properties.enumDescriptions.items.type: string
definitions.JsonSchema.properties.enumDescriptions.type: array
definitions.JsonSchema.properties.format.description: 'An additional regular expression
  or key that helps constrain the value. For more details see: http://tools.ietf.org/html/draft-zyp-json-schema-03#section-5.23'
definitions.JsonSchema.properties.format.type: string
definitions.JsonSchema.properties.id.description: Unique identifier for this schema.
definitions.JsonSchema.properties.id.type: string
definitions.JsonSchema.properties.items.$ref: '#/definitions/JsonSchema'
definitions.JsonSchema.properties.items.description: If this is a schema for an array,
  this property is the schema for each element in the array.
definitions.JsonSchema.properties.location.description: Whether this parameter goes
  in the query or the path for REST requests.
definitions.JsonSchema.properties.location.type: string
definitions.JsonSchema.properties.maximum.description: The maximum value of this parameter.
definitions.JsonSchema.properties.maximum.type: string
definitions.JsonSchema.properties.minimum.description: The minimum value of this parameter.
definitions.JsonSchema.properties.minimum.type: string
definitions.JsonSchema.properties.pattern.description: 'The regular expression this
  parameter must conform to. Uses Java 6 regex format: http://docs.oracle.com/javase/6/docs/api/java/util/regex/Pattern.html'
definitions.JsonSchema.properties.pattern.type: string
definitions.JsonSchema.properties.properties.additionalProperties.$ref: '#/definitions/JsonSchema'
definitions.JsonSchema.properties.properties.additionalProperties.description: A single
  property of this object. The value is itself a JSON Schema object describing this
  property.
definitions.JsonSchema.properties.properties.description: If this is a schema for
  an object, list the schema for each property of this object.
definitions.JsonSchema.properties.properties.type: object
definitions.JsonSchema.properties.readOnly.description: The value is read-only, generated
  by the service. The value cannot be modified by the client. If the value is included
  in a POST, PUT, or PATCH request, it is ignored by the service.
definitions.JsonSchema.properties.readOnly.type: boolean
definitions.JsonSchema.properties.repeated.description: Whether this parameter may
  appear multiple times.
definitions.JsonSchema.properties.repeated.type: boolean
definitions.JsonSchema.properties.required.description: Whether the parameter is required.
definitions.JsonSchema.properties.required.type: boolean
definitions.JsonSchema.properties.type.description: 'The value type for this schema.
  A list of values can be found here: http://tools.ietf.org/html/draft-zyp-json-schema-03#section-5.1'
definitions.JsonSchema.properties.type.type: string
definitions.JsonSchema.properties.variant.description: In a variant data type, the
  value of one property is used to determine how to interpret the entire entity. Its
  value must exist in a map of descriminant values to schema names.
definitions.JsonSchema.properties.variant.properties.discriminant.description: The
  name of the type discriminant property.
definitions.JsonSchema.properties.variant.properties.discriminant.type: string
definitions.JsonSchema.properties.variant.properties.map.description: The map of discriminant
  value to schema to use for parsing..
definitions.JsonSchema.properties.variant.properties.map.items.properties.$ref.type: string
definitions.JsonSchema.properties.variant.properties.map.items.properties.type_value.type: string
definitions.JsonSchema.properties.variant.properties.map.items.type: object
definitions.JsonSchema.properties.variant.properties.map.type: array
definitions.JsonSchema.properties.variant.type: object
definitions.JsonSchema.type: object
definitions.RestDescription.properties.auth.description: Authentication information.
definitions.RestDescription.properties.auth.properties.oauth2.description: OAuth 2.0
  authentication information.
definitions.RestDescription.properties.auth.properties.oauth2.properties.scopes.additionalProperties.description: The
  scope value.
? definitions.RestDescription.properties.auth.properties.oauth2.properties.scopes.additionalProperties.properties.description.description
: Description of scope.
definitions.RestDescription.properties.auth.properties.oauth2.properties.scopes.additionalProperties.properties.description.type: string
definitions.RestDescription.properties.auth.properties.oauth2.properties.scopes.additionalProperties.type: object
definitions.RestDescription.properties.auth.properties.oauth2.properties.scopes.description: Available
  OAuth 2.0 scopes.
definitions.RestDescription.properties.auth.properties.oauth2.properties.scopes.type: object
definitions.RestDescription.properties.auth.properties.oauth2.type: object
definitions.RestDescription.properties.auth.type: object
definitions.RestDescription.properties.basePath.description: '[DEPRECATED] The base
  path for REST requests.'
definitions.RestDescription.properties.basePath.type: string
definitions.RestDescription.properties.baseUrl.description: '[DEPRECATED] The base
  URL for REST requests.'
definitions.RestDescription.properties.baseUrl.type: string
definitions.RestDescription.properties.batchPath.description: The path for REST batch
  requests.
definitions.RestDescription.properties.batchPath.type: string
definitions.RestDescription.properties.canonicalName.description: Indicates how the
  API name should be capitalized and split into various parts. Useful for generating
  pretty class names.
definitions.RestDescription.properties.canonicalName.type: string
definitions.RestDescription.properties.description.description: The description of
  this API.
definitions.RestDescription.properties.description.type: string
definitions.RestDescription.properties.discoveryVersion.default: v1
definitions.RestDescription.properties.discoveryVersion.description: Indicate the
  version of the Discovery API used to generate this doc.
definitions.RestDescription.properties.discoveryVersion.type: string
definitions.RestDescription.properties.documentationLink.description: A link to human
  readable documentation for the API.
definitions.RestDescription.properties.documentationLink.type: string
definitions.RestDescription.properties.etag.description: The ETag for this response.
definitions.RestDescription.properties.etag.readOnly: true
definitions.RestDescription.properties.etag.type: string
definitions.RestDescription.properties.exponentialBackoffDefault.description: Enable
  exponential backoff for suitable methods in the generated clients.
definitions.RestDescription.properties.exponentialBackoffDefault.type: boolean
definitions.RestDescription.properties.features.description: A list of supported features
  for this API.
definitions.RestDescription.properties.features.items.type: string
definitions.RestDescription.properties.features.type: array
definitions.RestDescription.properties.icons.description: Links to 16x16 and 32x32
  icons representing the API.
definitions.RestDescription.properties.icons.properties.x16.description: The URL of
  the 16x16 icon.
definitions.RestDescription.properties.icons.properties.x16.type: string
definitions.RestDescription.properties.icons.properties.x32.description: The URL of
  the 32x32 icon.
definitions.RestDescription.properties.icons.properties.x32.type: string
definitions.RestDescription.properties.icons.type: object
definitions.RestDescription.properties.id.description: The ID of this API.
definitions.RestDescription.properties.id.type: string
definitions.RestDescription.properties.kind.default: discovery#restDescription
definitions.RestDescription.properties.kind.description: The kind for this response.
definitions.RestDescription.properties.kind.type: string
definitions.RestDescription.properties.labels.description: Labels for the status of
  this API, such as labs or deprecated.
definitions.RestDescription.properties.labels.items.type: string
definitions.RestDescription.properties.labels.type: array
definitions.RestDescription.properties.methods.additionalProperties.$ref: '#/definitions/RestMethod'
definitions.RestDescription.properties.methods.additionalProperties.description: An
  individual method description.
definitions.RestDescription.properties.methods.description: API-level methods for
  this API.
definitions.RestDescription.properties.methods.type: object
definitions.RestDescription.properties.name.description: The name of this API.
definitions.RestDescription.properties.name.type: string
definitions.RestDescription.properties.ownerDomain.description: The domain of the
  owner of this API. Together with the ownerName and a packagePath values, this can
  be used to generate a library for this API which would have a unique fully qualified
  name.
definitions.RestDescription.properties.ownerDomain.type: string
definitions.RestDescription.properties.ownerName.description: The name of the owner
  of this API. See ownerDomain.
definitions.RestDescription.properties.ownerName.type: string
definitions.RestDescription.properties.packagePath.description: The package of the
  owner of this API. See ownerDomain.
definitions.RestDescription.properties.packagePath.type: string
definitions.RestDescription.properties.parameters.additionalProperties.$ref: '#/definitions/JsonSchema'
definitions.RestDescription.properties.parameters.additionalProperties.description: Description
  of a single parameter.
definitions.RestDescription.properties.parameters.description: Common parameters that
  apply across all apis.
definitions.RestDescription.properties.parameters.type: object
definitions.RestDescription.properties.protocol.default: rest
definitions.RestDescription.properties.protocol.description: The protocol described
  by this document.
definitions.RestDescription.properties.protocol.type: string
definitions.RestDescription.properties.resources.additionalProperties.$ref: '#/definitions/RestResource'
definitions.RestDescription.properties.resources.additionalProperties.description: An
  individual resource description. Contains methods and sub-resources related to this
  resource.
definitions.RestDescription.properties.resources.description: The resources in this
  API.
definitions.RestDescription.properties.resources.type: object
definitions.RestDescription.properties.revision.description: The version of this API.
definitions.RestDescription.properties.revision.type: string
definitions.RestDescription.properties.rootUrl.description: The root URL under which
  all API services live.
definitions.RestDescription.properties.rootUrl.type: string
definitions.RestDescription.properties.schemas.additionalProperties.$ref: '#/definitions/JsonSchema'
definitions.RestDescription.properties.schemas.additionalProperties.description: An
  individual schema description.
definitions.RestDescription.properties.schemas.description: The schemas for this API.
definitions.RestDescription.properties.schemas.type: object
definitions.RestDescription.properties.servicePath.description: The base path for
  all REST requests.
definitions.RestDescription.properties.servicePath.type: string
definitions.RestDescription.properties.title.description: The title of this API.
definitions.RestDescription.properties.title.type: string
definitions.RestDescription.properties.version.description: The version of this API.
definitions.RestDescription.properties.version.type: string
definitions.RestDescription.properties.version_module.type: boolean
definitions.RestDescription.type: object
definitions.RestMethod.properties.description.description: Description of this method.
definitions.RestMethod.properties.description.type: string
definitions.RestMethod.properties.etagRequired.description: Whether this method requires
  an ETag to be specified. The ETag is sent as an HTTP If-Match or If-None-Match header.
definitions.RestMethod.properties.etagRequired.type: boolean
definitions.RestMethod.properties.httpMethod.description: HTTP method used by this
  method.
definitions.RestMethod.properties.httpMethod.type: string
definitions.RestMethod.properties.id.description: A unique ID for this method. This
  property can be used to match methods between different versions of Discovery.
definitions.RestMethod.properties.id.type: string
definitions.RestMethod.properties.mediaUpload.description: Media upload parameters.
definitions.RestMethod.properties.mediaUpload.properties.accept.description: MIME
  Media Ranges for acceptable media uploads to this method.
definitions.RestMethod.properties.mediaUpload.properties.accept.items.type: string
definitions.RestMethod.properties.mediaUpload.properties.accept.type: array
definitions.RestMethod.properties.mediaUpload.properties.maxSize.description: Maximum
  size of a media upload, such as "1MB", "2GB" or "3TB".
definitions.RestMethod.properties.mediaUpload.properties.maxSize.type: string
definitions.RestMethod.properties.mediaUpload.properties.protocols.description: Supported
  upload protocols.
definitions.RestMethod.properties.mediaUpload.properties.protocols.properties.resumable.description: Supports
  the Resumable Media Upload protocol.
definitions.RestMethod.properties.mediaUpload.properties.protocols.properties.resumable.properties.multipart.default: true
definitions.RestMethod.properties.mediaUpload.properties.protocols.properties.resumable.properties.multipart.description: True
  if this endpoint supports uploading multipart media.
definitions.RestMethod.properties.mediaUpload.properties.protocols.properties.resumable.properties.multipart.type: boolean
definitions.RestMethod.properties.mediaUpload.properties.protocols.properties.resumable.properties.path.description: The
  URI path to be used for upload. Should be used in conjunction with the basePath
  property at the api-level.
definitions.RestMethod.properties.mediaUpload.properties.protocols.properties.resumable.properties.path.type: string
definitions.RestMethod.properties.mediaUpload.properties.protocols.properties.resumable.type: object
definitions.RestMethod.properties.mediaUpload.properties.protocols.properties.simple.description: Supports
  uploading as a single HTTP request.
definitions.RestMethod.properties.mediaUpload.properties.protocols.properties.simple.properties.multipart.default: true
definitions.RestMethod.properties.mediaUpload.properties.protocols.properties.simple.properties.multipart.description: True
  if this endpoint supports upload multipart media.
definitions.RestMethod.properties.mediaUpload.properties.protocols.properties.simple.properties.multipart.type: boolean
definitions.RestMethod.properties.mediaUpload.properties.protocols.properties.simple.properties.path.description: The
  URI path to be used for upload. Should be used in conjunction with the basePath
  property at the api-level.
definitions.RestMethod.properties.mediaUpload.properties.protocols.properties.simple.properties.path.type: string
definitions.RestMethod.properties.mediaUpload.properties.protocols.properties.simple.type: object
definitions.RestMethod.properties.mediaUpload.properties.protocols.type: object
definitions.RestMethod.properties.mediaUpload.type: object
definitions.RestMethod.properties.parameterOrder.description: Ordered list of required
  parameters, serves as a hint to clients on how to structure their method signatures.
  The array is ordered such that the "most-significant" parameter appears first.
definitions.RestMethod.properties.parameterOrder.items.type: string
definitions.RestMethod.properties.parameterOrder.type: array
definitions.RestMethod.properties.parameters.additionalProperties.$ref: '#/definitions/JsonSchema'
definitions.RestMethod.properties.parameters.additionalProperties.description: Details
  for a single parameter in this method.
definitions.RestMethod.properties.parameters.description: Details for all parameters
  in this method.
definitions.RestMethod.properties.parameters.type: object
definitions.RestMethod.properties.path.description: The URI path of this REST method.
  Should be used in conjunction with the basePath property at the api-level.
definitions.RestMethod.properties.path.type: string
definitions.RestMethod.properties.request.description: The schema for the request.
definitions.RestMethod.properties.request.properties.$ref.description: Schema ID for
  the request schema.
definitions.RestMethod.properties.request.properties.$ref.type: string
definitions.RestMethod.properties.request.properties.parameterName.description: parameter
  name.
definitions.RestMethod.properties.request.properties.parameterName.type: string
definitions.RestMethod.properties.request.type: object
definitions.RestMethod.properties.response.description: The schema for the response.
definitions.RestMethod.properties.response.properties.$ref.description: Schema ID
  for the response schema.
definitions.RestMethod.properties.response.properties.$ref.type: string
definitions.RestMethod.properties.response.type: object
definitions.RestMethod.properties.scopes.description: OAuth 2.0 scopes applicable
  to this method.
definitions.RestMethod.properties.scopes.items.type: string
definitions.RestMethod.properties.scopes.type: array
definitions.RestMethod.properties.supportsMediaDownload.description: Whether this
  method supports media downloads.
definitions.RestMethod.properties.supportsMediaDownload.type: boolean
definitions.RestMethod.properties.supportsMediaUpload.description: Whether this method
  supports media uploads.
definitions.RestMethod.properties.supportsMediaUpload.type: boolean
definitions.RestMethod.properties.supportsSubscription.description: Whether this method
  supports subscriptions.
definitions.RestMethod.properties.supportsSubscription.type: boolean
definitions.RestMethod.properties.useMediaDownloadService.description: Indicates that
  downloads from this method should use the download service URL (i.e. "/download").
  Only applies if the method supports media download.
definitions.RestMethod.properties.useMediaDownloadService.type: boolean
definitions.RestMethod.type: object
definitions.RestResource.properties.methods.additionalProperties.$ref: '#/definitions/RestMethod'
definitions.RestResource.properties.methods.additionalProperties.description: Description
  for any methods on this resource.
definitions.RestResource.properties.methods.description: Methods on this resource.
definitions.RestResource.properties.methods.type: object
definitions.RestResource.properties.resources.additionalProperties.$ref: '#/definitions/RestResource'
definitions.RestResource.properties.resources.additionalProperties.description: Description
  for any sub-resources on this resource.
definitions.RestResource.properties.resources.description: Sub-resources on this resource.
definitions.RestResource.properties.resources.type: object
definitions.RestResource.type: object
externalDocs.url: https://developers.google.com/discovery/
host: www.googleapis.com
info.contact.name: Google
info.contact.url: https://google.com
info.description: Provides information about other Google APIs, such as what APIs
  are available, the resource, and method details for each API.
info.title: APIs Discovery Service
info.version: v1
info.x-apiClientRegistration.url: https://console.developers.google.com
info.x-logo.url: https://api.apis.guru/v2/cache/logo/https_www.google.com_images_branding_googlelogo_2x_googlelogo_color_272x92dp.png
info.x-origin.length: 1
info.x-origin[0].converter.url: https://github.com/lucybot/api-spec-converter
info.x-origin[0].converter.version: 2.6.0
info.x-origin[0].format: google
info.x-origin[0].url: https://www.googleapis.com/discovery/v1/apis/discovery/v1/rest
info.x-origin[0].version: v1
info.x-preferred: true
info.x-providerName: googleapis.com
info.x-serviceName: discovery
parameters.alt.default: json
parameters.alt.description: Data format for the response.
parameters.alt.enum.length: 1
parameters.alt.enum[0]: json
parameters.alt.in: query
parameters.alt.name: alt
parameters.alt.type: string
parameters.fields.description: Selector specifying which fields to include in a partial
  response.
parameters.fields.in: query
parameters.fields.name: fields
parameters.fields.type: string
parameters.key.description: API key. Your API key identifies your project and provides
  you with API access, quota, and reports. Required unless you provide an OAuth 2.0
  token.
parameters.key.in: query
parameters.key.name: key
parameters.key.type: string
parameters.oauth_token.description: OAuth 2.0 token for the current user.
parameters.oauth_token.in: query
parameters.oauth_token.name: oauth_token
parameters.oauth_token.type: string
parameters.prettyPrint.default: true
parameters.prettyPrint.description: Returns response with indentations and line breaks.
parameters.prettyPrint.in: query
parameters.prettyPrint.name: prettyPrint
parameters.prettyPrint.type: boolean
parameters.quotaUser.description: Available to use for quota purposes for server-side
  applications. Can be any arbitrary string assigned to a user, but should not exceed
  40 characters. Overrides userIp if both are provided.
parameters.quotaUser.in: query
parameters.quotaUser.name: quotaUser
parameters.quotaUser.type: string
parameters.userIp.description: IP address of the site where the request originates.
  Use this if you want to enforce per-user limits.
parameters.userIp.in: query
parameters.userIp.name: userIp
parameters.userIp.type: string
paths./apis.get.description: Retrieve the list of APIs supported at this endpoint.
paths./apis.get.operationId: discovery.apis.list
paths./apis.get.parameters.length: 2
paths./apis.get.parameters[0].description: Only include APIs with the given name.
paths./apis.get.parameters[0].in: query
paths./apis.get.parameters[0].name: name
paths./apis.get.parameters[0].type: string
paths./apis.get.parameters[1].default: false
paths./apis.get.parameters[1].description: Return only the preferred version of an
  API.
paths./apis.get.parameters[1].in: query
paths./apis.get.parameters[1].name: preferred
paths./apis.get.parameters[1].type: boolean
paths./apis.get.responses.200.description: Successful response
paths./apis.get.responses.200.schema.$ref: '#/definitions/DirectoryList'
paths./apis.get.tags.length: 1
paths./apis.get.tags[0]: apis
paths./apis.parameters.length: 7
paths./apis.parameters[0].$ref: '#/parameters/alt'
paths./apis.parameters[1].$ref: '#/parameters/fields'
paths./apis.parameters[2].$ref: '#/parameters/key'
paths./apis.parameters[3].$ref: '#/parameters/oauth_token'
paths./apis.parameters[4].$ref: '#/parameters/prettyPrint'
paths./apis.parameters[5].$ref: '#/parameters/quotaUser'
paths./apis.parameters[6].$ref: '#/parameters/userIp'
paths./apis/{api}/{version}/rest.get.description: Retrieve the description of a particular
  version of an api.
paths./apis/{api}/{version}/rest.get.operationId: discovery.apis.getRest
paths./apis/{api}/{version}/rest.get.parameters.length: 2
paths./apis/{api}/{version}/rest.get.parameters[0].description: The name of the API.
paths./apis/{api}/{version}/rest.get.parameters[0].in: path
paths./apis/{api}/{version}/rest.get.parameters[0].name: api
paths./apis/{api}/{version}/rest.get.parameters[0].required: true
paths./apis/{api}/{version}/rest.get.parameters[0].type: string
paths./apis/{api}/{version}/rest.get.parameters[1].description: The version of the
  API.
paths./apis/{api}/{version}/rest.get.parameters[1].in: path
paths./apis/{api}/{version}/rest.get.parameters[1].name: version
paths./apis/{api}/{version}/rest.get.parameters[1].required: true
paths./apis/{api}/{version}/rest.get.parameters[1].type: string
paths./apis/{api}/{version}/rest.get.responses.200.description: Successful response
paths./apis/{api}/{version}/rest.get.responses.200.schema.$ref: '#/definitions/RestDescription'
paths./apis/{api}/{version}/rest.get.tags.length: 1
paths./apis/{api}/{version}/rest.get.tags[0]: apis
paths./apis/{api}/{version}/rest.parameters.length: 7
paths./apis/{api}/{version}/rest.parameters[0].$ref: '#/parameters/alt'
paths./apis/{api}/{version}/rest.parameters[1].$ref: '#/parameters/fields'
paths./apis/{api}/{version}/rest.parameters[2].$ref: '#/parameters/key'
paths./apis/{api}/{version}/rest.parameters[3].$ref: '#/parameters/oauth_token'
paths./apis/{api}/{version}/rest.parameters[4].$ref: '#/parameters/prettyPrint'
paths./apis/{api}/{version}/rest.parameters[5].$ref: '#/parameters/quotaUser'
paths./apis/{api}/{version}/rest.parameters[6].$ref: '#/parameters/userIp'
schemes.length: 1
schemes[0]: https
swagger: "2.0"
tags.length: 1
tags[0].name: apis
