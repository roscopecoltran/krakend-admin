syntax = "proto3";

import "google/api/annotations.proto";

package googleplaymoviespartner;

message GetV1AccountsAccountIdAvailsRequest {
    $.xgafv $.xgafv = 1;
    string access_token = 2;
    // REQUIRED. See _General rules_ for more information about this field.
    string accountId = 3;
    alt alt = 4;
    // Filter Avails that match a case-insensitive, partner-specific custom id.
    // NOTE: this field is deprecated and will be removed on V2; `alt_ids`
    // should be used instead.
    string altId = 5;
    // Filter Avails that match (case-insensitive) any of the given partner-specific custom ids.
    repeated string altIds = 6;
    string bearer_token = 7;
    string callback = 8;
    string fields = 9;
    string key = 10;
    string oauth_token = 11;
    // See _List methods rules_ for info about this field.
    int32 pageSize = 12;
    // See _List methods rules_ for info about this field.
    string pageToken = 13;
    boolean pp = 14;
    // See _List methods rules_ for info about this field.
    repeated string pphNames = 15;
    boolean prettyPrint = 16;
    string quotaUser = 17;
    // See _List methods rules_ for info about this field.
    repeated string studioNames = 18;
    // Filter Avails that match (case-insensitive) any of the given country codes,
    // using the "ISO 3166-1 alpha-2" format (examples: "US", "us", "Us").
    repeated string territories = 19;
    // Filter that matches Avails with a `title_internal_alias`,
    // `series_title_internal_alias`, `season_title_internal_alias`,
    // or `episode_title_internal_alias` that contains the given
    // case-insensitive title.
    string title = 20;
    string uploadType = 21;
    string upload_protocol = 22;
    // Filter Avails that match any of the given `video_id`s.
    repeated string videoIds = 23;
}

message GetV1AccountsAccountIdAvailsAvailIdRequest {
    $.xgafv $.xgafv = 1;
    string access_token = 2;
    // REQUIRED. See _General rules_ for more information about this field.
    string accountId = 3;
    alt alt = 4;
    // REQUIRED. Avail ID.
    string availId = 5;
    string bearer_token = 6;
    string callback = 7;
    string fields = 8;
    string key = 9;
    string oauth_token = 10;
    boolean pp = 11;
    boolean prettyPrint = 12;
    string quotaUser = 13;
    string uploadType = 14;
    string upload_protocol = 15;
}

message GetV1AccountsAccountIdOrdersRequest {
    $.xgafv $.xgafv = 1;
    string access_token = 2;
    // REQUIRED. See _General rules_ for more information about this field.
    string accountId = 3;
    alt alt = 4;
    string bearer_token = 5;
    string callback = 6;
    // Filter Orders that match a case-insensitive, partner-specific custom id.
    string customId = 7;
    string fields = 8;
    string key = 9;
    // Filter that matches Orders with a `name`, `show`, `season` or `episode`
    // that contains the given case-insensitive name.
    string name = 10;
    string oauth_token = 11;
    // See _List methods rules_ for info about this field.
    int32 pageSize = 12;
    // See _List methods rules_ for info about this field.
    string pageToken = 13;
    boolean pp = 14;
    // See _List methods rules_ for info about this field.
    repeated string pphNames = 15;
    boolean prettyPrint = 16;
    string quotaUser = 17;
    // Filter Orders that match one of the given status.
    repeated string status = 18;
    // See _List methods rules_ for info about this field.
    repeated string studioNames = 19;
    string uploadType = 20;
    string upload_protocol = 21;
    // Filter Orders that match any of the given `video_id`s.
    repeated string videoIds = 22;
}

message GetV1AccountsAccountIdOrdersOrderIdRequest {
    $.xgafv $.xgafv = 1;
    string access_token = 2;
    // REQUIRED. See _General rules_ for more information about this field.
    string accountId = 3;
    alt alt = 4;
    string bearer_token = 5;
    string callback = 6;
    string fields = 7;
    string key = 8;
    string oauth_token = 9;
    // REQUIRED. Order ID.
    string orderId = 10;
    boolean pp = 11;
    boolean prettyPrint = 12;
    string quotaUser = 13;
    string uploadType = 14;
    string upload_protocol = 15;
}

message GetV1AccountsAccountIdStoreInfosRequest {
    $.xgafv $.xgafv = 1;
    string access_token = 2;
    // REQUIRED. See _General rules_ for more information about this field.
    string accountId = 3;
    alt alt = 4;
    string bearer_token = 5;
    string callback = 6;
    // Filter StoreInfos that match (case-insensitive) any of the given country
    // codes, using the "ISO 3166-1 alpha-2" format (examples: "US", "us", "Us").
    repeated string countries = 7;
    string fields = 8;
    string key = 9;
    // Filter StoreInfos that match any of the given `mid`s.
    repeated string mids = 10;
    // Filter that matches StoreInfos with a `name` or `show_name`
    // that contains the given case-insensitive name.
    string name = 11;
    string oauth_token = 12;
    // See _List methods rules_ for info about this field.
    int32 pageSize = 13;
    // See _List methods rules_ for info about this field.
    string pageToken = 14;
    boolean pp = 15;
    // See _List methods rules_ for info about this field.
    repeated string pphNames = 16;
    boolean prettyPrint = 17;
    string quotaUser = 18;
    // Filter StoreInfos that match any of the given `season_id`s.
    repeated string seasonIds = 19;
    // See _List methods rules_ for info about this field.
    repeated string studioNames = 20;
    string uploadType = 21;
    string upload_protocol = 22;
    // Filter StoreInfos that match a given `video_id`.
    // NOTE: this field is deprecated and will be removed on V2; `video_ids`
    // should be used instead.
    string videoId = 23;
    // Filter StoreInfos that match any of the given `video_id`s.
    repeated string videoIds = 24;
}

message GetV1AccountsAccountIdStoreInfosVideoIdCountryCountryRequest {
    $.xgafv $.xgafv = 1;
    string access_token = 2;
    // REQUIRED. See _General rules_ for more information about this field.
    string accountId = 3;
    alt alt = 4;
    string bearer_token = 5;
    string callback = 6;
    // REQUIRED. Edit country.
    string country = 7;
    string fields = 8;
    string key = 9;
    string oauth_token = 10;
    boolean pp = 11;
    boolean prettyPrint = 12;
    string quotaUser = 13;
    string uploadType = 14;
    string upload_protocol = 15;
    // REQUIRED. Video ID.
    string videoId = 16;
}

enum $.Xgafv {
    $XGAFV_1 = 0;
    $XGAFV_2 = 1;
}

message Avail {
    // Other identifier referring to the Edit, as defined by partner.
    // Example: "GOOGLER_2006"
    string altId = 1;
    // ID internally generated by Google to uniquely identify an Avail.
    // Not part of EMA Specs.
    string availId = 2;
    // Communicating an exempt category as defined by FCC regulations.
    // It is not required for non-US Avails.
    // Example: "1"
    string captionExemption = 3;
    // Communicating if caption file will be delivered.
    bool captionIncluded = 4;
    // Title Identifier. This should be the Title Level EIDR.
    // Example: "10.5240/1489-49A2-3956-4B2D-FE16-5".
    string contentId = 5;
    // The name of the studio that owns the Edit referred in the Avail.
    // This is the equivalent of `studio_name` in other resources, but it follows
    // the EMA nomenclature.
    // Example: "Google Films".
    string displayName = 6;
    // Manifestation Identifier. This should be the Manifestation
    // Level EIDR.
    // Example: "10.2340/1489-49A2-3956-4B2D-FE16-7"
    string encodeId = 7;
    // End of term in YYYY-MM-DD format in the timezone of the country
    // of the Avail.
    // "Open" if no end date is available.
    // Example: "2019-02-17"
    string end = 8;
    // Other identifier referring to the episode, as defined by partner.
    // Only available on TV avails.
    // Example: "rs_googlers_s1_3".
    string episodeAltId = 9;
    // The number assigned to the episode within a season.
    // Only available on TV Avails.
    // Example: "3".
    string episodeNumber = 10;
    // OPTIONAL.TV Only. Title used by involved parties to refer to this episode.
    // Only available on TV Avails.
    // Example: "Coding at Google".
    string episodeTitleInternalAlias = 11;
    // Indicates the format profile covered by the transaction.
    enum Avail_FormatProfile {
        AVAIL_FORMATPROFILE_FORMAT_PROFILE_UNSPECIFIED = 0;
        AVAIL_FORMATPROFILE_SD = 1;
        AVAIL_FORMATPROFILE_HD = 2;
        AVAIL_FORMATPROFILE_UHD = 3;
    }
    Avail_FormatProfile formatProfile = 12;
    // Type of transaction.
    enum Avail_LicenseType {
        AVAIL_LICENSETYPE_LICENSE_TYPE_UNSPECIFIED = 0;
        AVAIL_LICENSETYPE_EST = 1;
        AVAIL_LICENSETYPE_VOD = 2;
        AVAIL_LICENSETYPE_SVOD = 3;
        AVAIL_LICENSETYPE_POEST = 4;
    }
    Avail_LicenseType licenseType = 13;
    // Name of the post-production houses that manage the Avail.
    // Not part of EMA Specs.
    repeated string pphNames = 14;
    // Type of pricing that should be applied to this Avail
    // based on how the partner classify them.
    // Example: "Tier", "WSP", "SRP", or "Category".
    string priceType = 15;
    // Value to be applied to the pricing type.
    // Example: "4" or "2.99"
    string priceValue = 16;
    // Edit Identifier. This should be the Edit Level EIDR.
    // Example: "10.2340/1489-49A2-3956-4B2D-FE16-6"
    string productId = 17;
    // Value representing the rating reason.
    // Rating reasons should be formatted as per
    // [EMA ratings spec](http://www.movielabs.com/md/ratings/)
    // and comma-separated for inclusion of multiple reasons.
    // Example: "L, S, V"
    string ratingReason = 18;
    // Rating system applied to the version of title within territory
    // of Avail.
    // Rating systems should be formatted as per
    // [EMA ratings spec](http://www.movielabs.com/md/ratings/)
    // Example: "MPAA"
    string ratingSystem = 19;
    // Value representing the rating.
    // Ratings should be formatted as per http://www.movielabs.com/md/ratings/
    // Example: "PG"
    string ratingValue = 20;
    // Release date of the Title in earliest released territory.
    // Typically it is just the year, but it is free-form as per EMA spec.
    // Examples: "1979", "Oct 2014"
    string releaseDate = 21;
    // Other identifier referring to the season, as defined by partner.
    // Only available on TV avails.
    // Example: "rs_googlers_s1".
    string seasonAltId = 22;
    // The number assigned to the season within a series.
    // Only available on TV Avails.
    // Example: "1".
    string seasonNumber = 23;
    // Title used by involved parties to refer to this season.
    // Only available on TV Avails.
    // Example: "Googlers, The".
    string seasonTitleInternalAlias = 24;
    // Other identifier referring to the series, as defined by partner.
    // Only available on TV avails.
    // Example: "rs_googlers".
    string seriesAltId = 25;
    // Title used by involved parties to refer to this series.
    // Only available on TV Avails.
    // Example: "Googlers, The".
    string seriesTitleInternalAlias = 26;
    // Start of term in YYYY-MM-DD format in the timezone of the
    // country of the Avail.
    // Example: "2013-05-14".
    string start = 27;
    // Spoken language of the intended audience.
    // Language shall be encoded in accordance with RFC 5646.
    // Example: "fr".
    string storeLanguage = 28;
    // First date an Edit could be publically announced as becoming
    // available at a specific future date in territory of Avail.
    // *Not* the Avail start date or pre-order start date.
    // Format is YYYY-MM-DD.
    // Only available for pre-orders.
    // Example: "2012-12-10"
    string suppressionLiftDate = 29;
    // ISO 3166-1 alpha-2 country code for the country or territory
    // of this Avail.
    // For Avails, we use Territory in lieu of Country to comply with
    // EMA specifications.
    // But please note that Territory and Country identify the same thing.
    // Example: "US".
    string territory = 30;
    // Title used by involved parties to refer to this content.
    // Example: "Googlers, The".
    // Only available on Movie Avails.
    string titleInternalAlias = 31;
    // Google-generated ID identifying the video linked to this Avail, once
    // delivered.
    // Not part of EMA Specs.
    // Example: 'gtry456_xc'
    string videoId = 32;
    // Work type as enumerated in EMA.
    enum Avail_WorkType {
        AVAIL_WORKTYPE_TITLE_TYPE_UNSPECIFIED = 0;
        AVAIL_WORKTYPE_MOVIE = 1;
        AVAIL_WORKTYPE_SEASON = 2;
        AVAIL_WORKTYPE_EPISODE = 3;
        AVAIL_WORKTYPE_BUNDLE = 4;
    }
    Avail_WorkType workType = 33;
}

message ListAvailsResponse {
    // List of Avails that match the request criteria.
    repeated Avail avails = 1;
    // See _List methods rules_ for info about this field.
    string nextPageToken = 2;
    // See _List methods rules_ for more information about this field.
    int32 totalSize = 3;
}

message ListOrdersResponse {
    // See _List methods rules_ for info about this field.
    string nextPageToken = 1;
    // List of Orders that match the request criteria.
    repeated Order orders = 2;
    // See _List methods rules_ for more information about this field.
    int32 totalSize = 3;
}

message ListStoreInfosResponse {
    // See 'List methods rules' for info about this field.
    string nextPageToken = 1;
    // List of StoreInfos that match the request criteria.
    repeated StoreInfo storeInfos = 2;
    // See _List methods rules_ for more information about this field.
    int32 totalSize = 3;
}

message Order {
    // Timestamp when the Order was approved.
    string approvedTime = 1;
    // YouTube Channel ID that should be used to fulfill the Order.
    // Example: "UCRG64darCZhb".
    string channelId = 2;
    // YouTube Channel Name that should be used to fulfill the Order.
    // Example: "Google_channel".
    string channelName = 3;
    // Countries where the Order is available,
    // using the "ISO 3166-1 alpha-2" format (example: "US").
    repeated string countries = 4;
    // ID that can be used to externally identify an Order.
    // This ID is provided by partners when submitting the Avails.
    // Example: 'GOOGLER_2006'
    string customId = 5;
    // Timestamp of the earliest start date of the Avails
    // linked to this Order.
    string earliestAvailStartTime = 6;
    // Default Episode name,
    // usually in the language of the country of origin.
    // Only available for TV Edits
    // Example: "Googlers, The - Pilot".
    string episodeName = 7;
    // Legacy Order priority, as defined by Google.
    // Example: 'P0'
    string legacyPriority = 8;
    // Default Edit name,
    // usually in the language of the country of origin.
    // Example: "Googlers, The".
    string name = 9;
    // A simpler representation of the priority.
    enum Order_NormalizedPriority {
        ORDER_NORMALIZEDPRIORITY_NORMALIZED_PRIORITY_UNSPECIFIED = 0;
        ORDER_NORMALIZEDPRIORITY_LOW_PRIORITY = 1;
        ORDER_NORMALIZEDPRIORITY_HIGH_PRIORITY = 2;
    }
    Order_NormalizedPriority normalizedPriority = 10;
    // ID internally generated by Google to uniquely identify an Order.
    // Example: 'abcde12_x'
    string orderId = 11;
    // Timestamp when the Order was created.
    string orderedTime = 12;
    // Name of the post-production house that manages the Edit ordered.
    string pphName = 13;
    // Order priority, as defined by Google.
    // The higher the value, the higher the priority.
    // Example: 90
    double priority = 14;
    // Timestamp when the Order was fulfilled.
    string receivedTime = 15;
    // Field explaining why an Order has been rejected.
    // Example: "Trailer audio is 2ch mono, please re-deliver in stereo".
    string rejectionNote = 16;
    // Default Season name,
    // usually in the language of the country of origin.
    // Only available for TV Edits
    // Example: "Googlers, The - A Brave New World".
    string seasonName = 17;
    // Default Show name,
    // usually in the language of the country of origin.
    // Only available for TV Edits
    // Example: "Googlers, The".
    string showName = 18;
    // High-level status of the order.
    enum Order_Statu {
        ORDER_STATU_STATUS_UNSPECIFIED = 0;
        ORDER_STATU_STATUS_APPROVED = 1;
        ORDER_STATU_STATUS_FAILED = 2;
        ORDER_STATU_STATUS_PROCESSING = 3;
        ORDER_STATU_STATUS_UNFULFILLED = 4;
        ORDER_STATU_STATUS_NOT_AVAILABLE = 5;
    }
    Order_Statu status = 19;
    // Detailed status of the order
    enum Order_StatusDetail {
        ORDER_STATUSDETAIL_ORDER_STATUS_UNSPECIFIED = 0;
        ORDER_STATUSDETAIL_ORDER_STATUS_QC_APPROVED = 1;
        ORDER_STATUSDETAIL_ORDER_STATUS_QC_REJECTION = 2;
        ORDER_STATUSDETAIL_ORDER_STATUS_INTERNAL_FIX = 3;
        ORDER_STATUSDETAIL_ORDER_STATUS_OPEN_ORDER = 4;
        ORDER_STATUSDETAIL_ORDER_STATUS_NOT_AVAILABLE = 5;
        ORDER_STATUSDETAIL_ORDER_STATUS_AWAITING_REDELIVERY = 6;
        ORDER_STATUSDETAIL_ORDER_STATUS_READY_FOR_QC = 7;
        ORDER_STATUSDETAIL_ORDER_STATUS_FILE_PROCESSING = 8;
    }
    Order_StatusDetail statusDetail = 20;
    // Name of the studio that owns the Edit ordered.
    string studioName = 21;
    // Type of the Edit linked to the Order.
    enum Order_Type {
        ORDER_TYPE_TITLE_TYPE_UNSPECIFIED = 0;
        ORDER_TYPE_MOVIE = 1;
        ORDER_TYPE_SEASON = 2;
        ORDER_TYPE_EPISODE = 3;
        ORDER_TYPE_BUNDLE = 4;
    }
    Order_Type type = 22;
    // Google-generated ID identifying the video linked to this Order, once
    // delivered.
    // Example: 'gtry456_xc'.
    string videoId = 23;
}

message StoreInfo {
    // Audio tracks available for this Edit.
    repeated string audioTracks = 1;
    // Country where Edit is available in ISO 3166-1 alpha-2 country
    // code.
    // Example: "US".
    string country = 2;
    // Edit-level EIDR ID.
    // Example: "10.5240/1489-49A2-3956-4B2D-FE16-6".
    string editLevelEidr = 3;
    // The number assigned to the episode within a season.
    // Only available on TV Edits.
    // Example: "1".
    string episodeNumber = 4;
    // Whether the Edit has a 5.1 channel audio track.
    bool hasAudio51 = 5;
    // Whether the Edit has a EST offer.
    bool hasEstOffer = 6;
    // Whether the Edit has a HD offer.
    bool hasHdOffer = 7;
    // Whether the Edit has info cards.
    bool hasInfoCards = 8;
    // Whether the Edit has a SD offer.
    bool hasSdOffer = 9;
    // Whether the Edit has a VOD offer.
    bool hasVodOffer = 10;
    // Timestamp when the Edit went live on the Store.
    string liveTime = 11;
    // Knowledge Graph ID associated to this Edit, if available.
    // This ID links the Edit to its knowledge entity, externally accessible
    // at http://freebase.com.
    // In the absense of Title EIDR or Edit EIDR, this ID helps link together
    // multiple Edits across countries.
    // Example: '/m/0ffx29'
    string mid = 12;
    // Default Edit name, usually in the language of the country of
    // origin.
    // Example: "Googlers, The".
    string name = 13;
    // Name of the post-production houses that manage the Edit.
    repeated string pphNames = 14;
    // Google-generated ID identifying the season linked to the Edit.
    // Only available for TV Edits.
    // Example: 'ster23ex'
    string seasonId = 15;
    // Default Season name, usually in the language of the country of
    // origin.
    // Only available for TV Edits
    // Example: "Googlers, The - A Brave New World".
    string seasonName = 16;
    // The number assigned to the season within a show.
    // Only available on TV Edits.
    // Example: "1".
    string seasonNumber = 17;
    // Google-generated ID identifying the show linked to the Edit.
    // Only available for TV Edits.
    // Example: 'et2hsue_x'
    string showId = 18;
    // Default Show name, usually in the language of the country of
    // origin.
    // Only available for TV Edits
    // Example: "Googlers, The".
    string showName = 19;
    // Name of the studio that owns the Edit ordered.
    string studioName = 20;
    // Subtitles available for this Edit.
    repeated string subtitles = 21;
    // Title-level EIDR ID.
    // Example: "10.5240/1489-49A2-3956-4B2D-FE16-5".
    string titleLevelEidr = 22;
    // Google-generated ID identifying the trailer linked to the Edit.
    // Example: 'bhd_4e_cx'
    string trailerId = 23;
    // Edit type, like Movie, Episode or Season.
    enum StoreInfo_Type {
        STOREINFO_TYPE_TITLE_TYPE_UNSPECIFIED = 0;
        STOREINFO_TYPE_MOVIE = 1;
        STOREINFO_TYPE_SEASON = 2;
        STOREINFO_TYPE_EPISODE = 3;
        STOREINFO_TYPE_BUNDLE = 4;
    }
    StoreInfo_Type type = 24;
    // Google-generated ID identifying the video linked to the Edit.
    // Example: 'gtry456_xc'
    string videoId = 25;
}

enum Alt {
    JSON = 0;
    MEDIA = 1;
    PROTO = 2;
}

service GooglePlayMoviesPartnerService {
    // List Avails owned or managed by the partner.
    // 
    // See _Authentication and Authorization rules_ and
    // _List methods rules_ for more information about this method.
    rpc GetV1AccountsAccountIdAvails(GetV1AccountsAccountIdAvailsRequest) returns (ListAvailsResponse) {
      option (google.api.http) = {
        get: "//v1/accounts/{accountId}/avails"
      };
    }
    // Get an Avail given its avail group id and avail id.
    rpc GetV1AccountsAccountIdAvailsAvailId(GetV1AccountsAccountIdAvailsAvailIdRequest) returns (Avail) {
      option (google.api.http) = {
        get: "//v1/accounts/{accountId}/avails/{availId}"
      };
    }
    // List Orders owned or managed by the partner.
    // 
    // See _Authentication and Authorization rules_ and
    // _List methods rules_ for more information about this method.
    rpc GetV1AccountsAccountIdOrders(GetV1AccountsAccountIdOrdersRequest) returns (ListOrdersResponse) {
      option (google.api.http) = {
        get: "//v1/accounts/{accountId}/orders"
      };
    }
    // Get an Order given its id.
    // 
    // See _Authentication and Authorization rules_ and
    // _Get methods rules_ for more information about this method.
    rpc GetV1AccountsAccountIdOrdersOrderId(GetV1AccountsAccountIdOrdersOrderIdRequest) returns (Order) {
      option (google.api.http) = {
        get: "//v1/accounts/{accountId}/orders/{orderId}"
      };
    }
    // List StoreInfos owned or managed by the partner.
    // 
    // See _Authentication and Authorization rules_ and
    // _List methods rules_ for more information about this method.
    rpc GetV1AccountsAccountIdStoreInfos(GetV1AccountsAccountIdStoreInfosRequest) returns (ListStoreInfosResponse) {
      option (google.api.http) = {
        get: "//v1/accounts/{accountId}/storeInfos"
      };
    }
    // Get a StoreInfo given its video id and country.
    // 
    // See _Authentication and Authorization rules_ and
    // _Get methods rules_ for more information about this method.
    rpc GetV1AccountsAccountIdStoreInfosVideoIdCountryCountry(GetV1AccountsAccountIdStoreInfosVideoIdCountryCountryRequest) returns (StoreInfo) {
      option (google.api.http) = {
        get: "//v1/accounts/{accountId}/storeInfos/{videoId}/country/{country}"
      };
    }
}
