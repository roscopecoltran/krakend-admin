syntax = "proto3";

import "google/api/annotations.proto";

package googlecomputeengineinstancegroupupdater;

message GetProjectZonesZoneOperationsRequest {
    alt alt = 1;
    string fields = 2;
    // Optional. Filter expression for filtering listed resources.
    string filter = 3;
    string key = 4;
    // Optional. Maximum count of results to be returned. Maximum value is 500 and default value is 500.
    int32 maxResults = 5;
    string oauth_token = 6;
    // Optional. Tag returned by a previous list request truncated by maxResults. Used to continue a previous list request.
    string pageToken = 7;
    boolean prettyPrint = 8;
    // Name of the project scoping this request.
    string project = 9;
    string quotaUser = 10;
    string userIp = 11;
    // Name of the zone scoping this request.
    string zone = 12;
}

message GetProjectZonesZoneOperationsOperationRequest {
    alt alt = 1;
    string fields = 2;
    string key = 3;
    string oauth_token = 4;
    // Name of the operation resource to return.
    string operation = 5;
    boolean prettyPrint = 6;
    // Name of the project scoping this request.
    string project = 7;
    string quotaUser = 8;
    string userIp = 9;
    // Name of the zone scoping this request.
    string zone = 10;
}

message GetProjectZonesZoneRollingUpdatesRequest {
    alt alt = 1;
    string fields = 2;
    // Optional. Filter expression for filtering listed resources.
    string filter = 3;
    string key = 4;
    // Optional. Maximum count of results to be returned. Maximum value is 500 and default value is 500.
    int32 maxResults = 5;
    string oauth_token = 6;
    // Optional. Tag returned by a previous list request truncated by maxResults. Used to continue a previous list request.
    string pageToken = 7;
    boolean prettyPrint = 8;
    // The Google Developers Console project name.
    string project = 9;
    string quotaUser = 10;
    string userIp = 11;
    // The name of the zone in which the update's target resides.
    string zone = 12;
}

message PostProjectZonesZoneRollingUpdatesRequest {
    alt alt = 1;
    RollingUpdate body = 2;
    string fields = 3;
    string key = 4;
    string oauth_token = 5;
    boolean prettyPrint = 6;
    // The Google Developers Console project name.
    string project = 7;
    string quotaUser = 8;
    string userIp = 9;
    // The name of the zone in which the update's target resides.
    string zone = 10;
}

message GetProjectZonesZoneRollingUpdatesRollingUpdateRequest {
    alt alt = 1;
    string fields = 2;
    string key = 3;
    string oauth_token = 4;
    boolean prettyPrint = 5;
    // The Google Developers Console project name.
    string project = 6;
    string quotaUser = 7;
    // The name of the update.
    string rollingUpdate = 8;
    string userIp = 9;
    // The name of the zone in which the update's target resides.
    string zone = 10;
}

message PostProjectZonesZoneRollingUpdatesRollingUpdateCancelRequest {
    alt alt = 1;
    string fields = 2;
    string key = 3;
    string oauth_token = 4;
    boolean prettyPrint = 5;
    // The Google Developers Console project name.
    string project = 6;
    string quotaUser = 7;
    // The name of the update.
    string rollingUpdate = 8;
    string userIp = 9;
    // The name of the zone in which the update's target resides.
    string zone = 10;
}

message GetProjectZonesZoneRollingUpdatesRollingUpdateInstanceUpdatesRequest {
    alt alt = 1;
    string fields = 2;
    // Optional. Filter expression for filtering listed resources.
    string filter = 3;
    string key = 4;
    // Optional. Maximum count of results to be returned. Maximum value is 500 and default value is 500.
    int32 maxResults = 5;
    string oauth_token = 6;
    // Optional. Tag returned by a previous list request truncated by maxResults. Used to continue a previous list request.
    string pageToken = 7;
    boolean prettyPrint = 8;
    // The Google Developers Console project name.
    string project = 9;
    string quotaUser = 10;
    // The name of the update.
    string rollingUpdate = 11;
    string userIp = 12;
    // The name of the zone in which the update's target resides.
    string zone = 13;
}

message PostProjectZonesZoneRollingUpdatesRollingUpdatePauseRequest {
    alt alt = 1;
    string fields = 2;
    string key = 3;
    string oauth_token = 4;
    boolean prettyPrint = 5;
    // The Google Developers Console project name.
    string project = 6;
    string quotaUser = 7;
    // The name of the update.
    string rollingUpdate = 8;
    string userIp = 9;
    // The name of the zone in which the update's target resides.
    string zone = 10;
}

message PostProjectZonesZoneRollingUpdatesRollingUpdateResumeRequest {
    alt alt = 1;
    string fields = 2;
    string key = 3;
    string oauth_token = 4;
    boolean prettyPrint = 5;
    // The Google Developers Console project name.
    string project = 6;
    string quotaUser = 7;
    // The name of the update.
    string rollingUpdate = 8;
    string userIp = 9;
    // The name of the zone in which the update's target resides.
    string zone = 10;
}

message PostProjectZonesZoneRollingUpdatesRollingUpdateRollbackRequest {
    alt alt = 1;
    string fields = 2;
    string key = 3;
    string oauth_token = 4;
    boolean prettyPrint = 5;
    // The Google Developers Console project name.
    string project = 6;
    string quotaUser = 7;
    // The name of the update.
    string rollingUpdate = 8;
    string userIp = 9;
    // The name of the zone in which the update's target resides.
    string zone = 10;
}

message InstanceUpdate {
    // Errors that occurred during the instance update.
    message Error {
            // [Output Only] The array of errors encountered while processing this operation.
    message Error {
                    // [Output Only] The error type identifier for this error.
    string code = 1;
                    // [Output Only] Indicates the field in the request that caused the error. This property is optional.
    string location = 2;
                    // [Output Only] An optional, human-readable error message.
    string message = 3;
        }
        repeated Error errors = 1;
    }
    Error error = 1;
    // Fully-qualified URL of the instance being updated.
    string instance = 2;
    // Status of the instance update. Possible values are:  
    // - "PENDING": The instance update is pending execution. 
    // - "ROLLING_FORWARD": The instance update is going forward. 
    // - "ROLLING_BACK": The instance update is being rolled back. 
    // - "PAUSED": The instance update is temporarily paused (inactive). 
    // - "ROLLED_OUT": The instance update is finished, the instance is running the new template. 
    // - "ROLLED_BACK": The instance update is finished, the instance has been reverted to the previous template. 
    // - "CANCELLED": The instance update is paused and no longer can be resumed, undefined in which template the instance is running.
    string status = 3;
}

message InstanceUpdateList {
    // Collection of requested instance updates.
    repeated InstanceUpdate items = 1;
    // [Output Only] Type of the resource.
    string kind = 2;
    // A token used to continue a truncated list request.
    string nextPageToken = 3;
    // [Output Only] The fully qualified URL for the resource.
    string selfLink = 4;
}

message Operation {
    string clientOperationId = 1;
    // [Output Only] Creation timestamp in RFC3339 text format.
    string creationTimestamp = 2;
    string endTime = 3;
    // [Output Only] If errors occurred during processing of this operation, this field will be populated.
    message Error {
            // [Output Only] The array of errors encountered while processing this operation.
    message Error {
                    // [Output Only] The error type identifier for this error.
    string code = 1;
                    // [Output Only] Indicates the field in the request that caused the error. This property is optional.
    string location = 2;
                    // [Output Only] An optional, human-readable error message.
    string message = 3;
        }
        repeated Error errors = 1;
    }
    Error error = 4;
    string httpErrorMessage = 5;
    int32 httpErrorStatusCode = 6;
    // [Output Only] Unique identifier for the resource; defined by the server.
    string id = 7;
    // [Output Only] The time that this operation was requested. This is in RFC 3339 format.
    string insertTime = 8;
    // [Output Only] Type of the resource. Always replicapoolupdater#operation for Operation resources.
    string kind = 9;
    // [Output Only] Name of the resource.
    string name = 10;
    string operationType = 11;
    int32 progress = 12;
    // [Output Only] URL of the region where the operation resides.
    string region = 13;
    // [Output Only] The fully qualified URL for the resource.
    string selfLink = 14;
    // [Output Only] The time that this operation was started by the server. This is in RFC 3339 format.
    string startTime = 15;
    // [Output Only] Status of the operation. Can be one of the following: "PENDING", "RUNNING", or "DONE".
    string status = 16;
    // [Output Only] An optional textual description of the current status of the operation.
    string statusMessage = 17;
    // [Output Only] Unique target id which identifies a particular incarnation of the target.
    string targetId = 18;
    // [Output Only] URL of the resource the operation is mutating.
    string targetLink = 19;
    string user = 20;
    message Warning {
            // [Output only] The warning type identifier for this warning.
    string code = 1;
            // [Output only] Metadata for this warning in key:value format.
    message Data {
                    // [Output Only] Metadata key for this warning.
    string key = 1;
                    // [Output Only] Metadata value for this warning.
    string value = 2;
        }
        repeated Data data = 2;
            // [Output only] Optional human-readable details for this warning.
    string message = 3;
    }
    repeated Warning warnings = 21;
    // [Output Only] URL of the zone where the operation resides.
    string zone = 22;
}

message OperationList {
    // [Output Only] Unique identifier for the resource; defined by the server.
    string id = 1;
    // [Output Only] The Operation resources.
    repeated Operation items = 2;
    // [Output Only] Type of resource. Always replicapoolupdater#operationList for OperationList resources.
    string kind = 3;
    // [Output Only] A token used to continue a truncate.
    string nextPageToken = 4;
    // [Output Only] The fully qualified URL for the resource.
    string selfLink = 5;
}

message RollingUpdate {
    // Specifies the action to take for each instance within the instance group. This can be RECREATE which will recreate each instance and is only available for managed instance groups. It can also be REBOOT which performs a soft reboot for each instance and is only available for regular (non-managed) instance groups.
    string actionType = 1;
    // [Output Only] Creation timestamp in RFC3339 text format.
    string creationTimestamp = 2;
    // An optional textual description of the resource; provided by the client when the resource is created.
    string description = 3;
    // [Output Only] Errors that occurred during the rolling update.
    message Error {
            // [Output Only] The array of errors encountered while processing this operation.
    message Error {
                    // [Output Only] The error type identifier for this error.
    string code = 1;
                    // [Output Only] Indicates the field in the request that caused the error. This property is optional.
    string location = 2;
                    // [Output Only] An optional, human-readable error message.
    string message = 3;
        }
        repeated Error errors = 1;
    }
    Error error = 4;
    // [Output Only] Unique identifier for the resource; defined by the server.
    string id = 5;
    // Fully-qualified URL of an instance group being updated. Exactly one of instanceGroupManager and instanceGroup must be set.
    string instanceGroup = 6;
    // Fully-qualified URL of an instance group manager being updated. Exactly one of instanceGroupManager and instanceGroup must be set.
    string instanceGroupManager = 7;
    // Fully-qualified URL of an instance template to apply.
    string instanceTemplate = 8;
    // [Output Only] Type of the resource.
    string kind = 9;
    // Fully-qualified URL of the instance template encountered while starting the update.
    string oldInstanceTemplate = 10;
    // Parameters of the update process.
    message Policy {
            // Number of instances to update before the updater pauses the rolling update.
    int32 autoPauseAfterInstances = 1;
            // The maximum amount of time that the updater waits for a HEALTHY state after all of the update steps are complete. If the HEALTHY state is not received before the deadline, the instance update is considered a failure.
    int32 instanceStartupTimeoutSec = 2;
            // The maximum number of instances that can be updated simultaneously. An instance update is considered complete only after the instance is restarted and initialized.
    int32 maxNumConcurrentInstances = 3;
            // The maximum number of instance updates that can fail before the group update is considered a failure. An instance update is considered failed if any of its update actions (e.g. Stop call on Instance resource in Rolling Reboot) failed with permanent failure, or if the instance is in an UNHEALTHY state after it finishes all of the update actions.
    int32 maxNumFailedInstances = 4;
            // The minimum amount of time that the updater spends to update each instance. Update time is the time it takes to complete all update actions (e.g. Stop call on Instance resource in Rolling Reboot), reboot, and initialize. If the instance update finishes early, the updater pauses for the remainder of the time before it starts the next instance update.
    int32 minInstanceUpdateTimeSec = 5;
    }
    Policy policy = 11;
    // [Output Only] An optional progress indicator that ranges from 0 to 100. There is no requirement that this be linear or support any granularity of operations. This should not be used to guess at when the update will be complete. This number should be monotonically increasing as the update progresses.
    int32 progress = 12;
    // [Output Only] The fully qualified URL for the resource.
    string selfLink = 13;
    // [Output Only] Status of the update. Possible values are:  
    // - "ROLLING_FORWARD": The update is going forward. 
    // - "ROLLING_BACK": The update is being rolled back. 
    // - "PAUSED": The update is temporarily paused (inactive). 
    // - "ROLLED_OUT": The update is finished, all instances have been updated successfully. 
    // - "ROLLED_BACK": The update is finished, all instances have been reverted to the previous template. 
    // - "CANCELLED": The update is paused and no longer can be resumed, undefined how many instances are running in which template.
    string status = 14;
    // [Output Only] An optional textual description of the current status of the update.
    string statusMessage = 15;
    // [Output Only] User who requested the update, for example: user@example.com.
    string user = 16;
}

message RollingUpdateList {
    // Collection of requested updates.
    repeated RollingUpdate items = 1;
    // [Output Only] Type of the resource.
    string kind = 2;
    // A token used to continue a truncated list request.
    string nextPageToken = 3;
    // [Output Only] The fully qualified URL for the resource.
    string selfLink = 4;
}

enum Alt {
    JSON = 0;
}

service GoogleComputeEngineInstanceGroupUpdaterService {
    // Retrieves the list of Operation resources contained within the specified zone.
    rpc GetProjectZonesZoneOperations(GetProjectZonesZoneOperationsRequest) returns (OperationList) {
      option (google.api.http) = {
        get: "/replicapoolupdater/v1beta1/projects/{project}/zones/{zone}/operations"
      };
    }
    // Retrieves the specified zone-specific operation resource.
    rpc GetProjectZonesZoneOperationsOperation(GetProjectZonesZoneOperationsOperationRequest) returns (Operation) {
      option (google.api.http) = {
        get: "/replicapoolupdater/v1beta1/projects/{project}/zones/{zone}/operations/{operation}"
      };
    }
    // Lists recent updates for a given managed instance group, in reverse chronological order and paginated format.
    rpc GetProjectZonesZoneRollingUpdates(GetProjectZonesZoneRollingUpdatesRequest) returns (RollingUpdateList) {
      option (google.api.http) = {
        get: "/replicapoolupdater/v1beta1/projects/{project}/zones/{zone}/rollingUpdates"
      };
    }
    // Inserts and starts a new update.
    rpc PostProjectZonesZoneRollingUpdates(PostProjectZonesZoneRollingUpdatesRequest) returns (Operation) {
      option (google.api.http) = {
        post: "/replicapoolupdater/v1beta1/projects/{project}/zones/{zone}/rollingUpdates"
        body: "body"
      };
    }
    // Returns information about an update.
    rpc GetProjectZonesZoneRollingUpdatesRollingUpdate(GetProjectZonesZoneRollingUpdatesRollingUpdateRequest) returns (RollingUpdate) {
      option (google.api.http) = {
        get: "/replicapoolupdater/v1beta1/projects/{project}/zones/{zone}/rollingUpdates/{rollingUpdate}"
      };
    }
    // Cancels an update. The update must be PAUSED before it can be cancelled. This has no effect if the update is already CANCELLED.
    rpc PostProjectZonesZoneRollingUpdatesRollingUpdateCancel(PostProjectZonesZoneRollingUpdatesRollingUpdateCancelRequest) returns (Operation) {
      option (google.api.http) = {
        post: "/replicapoolupdater/v1beta1/projects/{project}/zones/{zone}/rollingUpdates/{rollingUpdate}/cancel"
      };
    }
    // Lists the current status for each instance within a given update.
    rpc GetProjectZonesZoneRollingUpdatesRollingUpdateInstanceUpdates(GetProjectZonesZoneRollingUpdatesRollingUpdateInstanceUpdatesRequest) returns (InstanceUpdateList) {
      option (google.api.http) = {
        get: "/replicapoolupdater/v1beta1/projects/{project}/zones/{zone}/rollingUpdates/{rollingUpdate}/instanceUpdates"
      };
    }
    // Pauses the update in state from ROLLING_FORWARD or ROLLING_BACK. Has no effect if invoked when the state of the update is PAUSED.
    rpc PostProjectZonesZoneRollingUpdatesRollingUpdatePause(PostProjectZonesZoneRollingUpdatesRollingUpdatePauseRequest) returns (Operation) {
      option (google.api.http) = {
        post: "/replicapoolupdater/v1beta1/projects/{project}/zones/{zone}/rollingUpdates/{rollingUpdate}/pause"
      };
    }
    // Continues an update in PAUSED state. Has no effect if invoked when the state of the update is ROLLED_OUT.
    rpc PostProjectZonesZoneRollingUpdatesRollingUpdateResume(PostProjectZonesZoneRollingUpdatesRollingUpdateResumeRequest) returns (Operation) {
      option (google.api.http) = {
        post: "/replicapoolupdater/v1beta1/projects/{project}/zones/{zone}/rollingUpdates/{rollingUpdate}/resume"
      };
    }
    // Rolls back the update in state from ROLLING_FORWARD or PAUSED. Has no effect if invoked when the state of the update is ROLLED_BACK.
    rpc PostProjectZonesZoneRollingUpdatesRollingUpdateRollback(PostProjectZonesZoneRollingUpdatesRollingUpdateRollbackRequest) returns (Operation) {
      option (google.api.http) = {
        post: "/replicapoolupdater/v1beta1/projects/{project}/zones/{zone}/rollingUpdates/{rollingUpdate}/rollback"
      };
    }
}
