syntax = "proto3";

import "google/protobuf/empty.proto";

import "google/api/annotations.proto";

package tagmanager;

message GetAccountsRequest {
    alt alt = 1;
    string fields = 2;
    string key = 3;
    string oauth_token = 4;
    boolean prettyPrint = 5;
    string quotaUser = 6;
    string userIp = 7;
}

message GetAccountsAccountIdRequest {
    // The GTM Account ID.
    string accountId = 1;
    alt alt = 2;
    string fields = 3;
    string key = 4;
    string oauth_token = 5;
    boolean prettyPrint = 6;
    string quotaUser = 7;
    string userIp = 8;
}

message PutAccountsAccountIdRequest {
    // The GTM Account ID.
    string accountId = 1;
    alt alt = 2;
    Account body = 3;
    string fields = 4;
    // When provided, this fingerprint must match the fingerprint of the account in storage.
    string fingerprint = 5;
    string key = 6;
    string oauth_token = 7;
    boolean prettyPrint = 8;
    string quotaUser = 9;
    string userIp = 10;
}

message GetAccountsAccountIdContainersRequest {
    // The GTM Account ID.
    string accountId = 1;
    alt alt = 2;
    string fields = 3;
    string key = 4;
    string oauth_token = 5;
    boolean prettyPrint = 6;
    string quotaUser = 7;
    string userIp = 8;
}

message PostAccountsAccountIdContainersRequest {
    // The GTM Account ID.
    string accountId = 1;
    alt alt = 2;
    Container body = 3;
    string fields = 4;
    string key = 5;
    string oauth_token = 6;
    boolean prettyPrint = 7;
    string quotaUser = 8;
    string userIp = 9;
}

message GetAccountsAccountIdContainersContainerIdRequest {
    // The GTM Account ID.
    string accountId = 1;
    alt alt = 2;
    // The GTM Container ID.
    string containerId = 3;
    string fields = 4;
    string key = 5;
    string oauth_token = 6;
    boolean prettyPrint = 7;
    string quotaUser = 8;
    string userIp = 9;
}

message PutAccountsAccountIdContainersContainerIdRequest {
    // The GTM Account ID.
    string accountId = 1;
    alt alt = 2;
    Container body = 3;
    // The GTM Container ID.
    string containerId = 4;
    string fields = 5;
    // When provided, this fingerprint must match the fingerprint of the container in storage.
    string fingerprint = 6;
    string key = 7;
    string oauth_token = 8;
    boolean prettyPrint = 9;
    string quotaUser = 10;
    string userIp = 11;
}

message DeleteAccountsAccountIdContainersContainerIdRequest {
    // The GTM Account ID.
    string accountId = 1;
    alt alt = 2;
    // The GTM Container ID.
    string containerId = 3;
    string fields = 4;
    string key = 5;
    string oauth_token = 6;
    boolean prettyPrint = 7;
    string quotaUser = 8;
    string userIp = 9;
}

message GetAccountsAccountIdContainersContainerIdEnvironmentsRequest {
    // The GTM Account ID.
    string accountId = 1;
    alt alt = 2;
    // The GTM Container ID.
    string containerId = 3;
    string fields = 4;
    string key = 5;
    string oauth_token = 6;
    boolean prettyPrint = 7;
    string quotaUser = 8;
    string userIp = 9;
}

message PostAccountsAccountIdContainersContainerIdEnvironmentsRequest {
    // The GTM Account ID.
    string accountId = 1;
    alt alt = 2;
    Environment body = 3;
    // The GTM Container ID.
    string containerId = 4;
    string fields = 5;
    string key = 6;
    string oauth_token = 7;
    boolean prettyPrint = 8;
    string quotaUser = 9;
    string userIp = 10;
}

message GetAccountsAccountIdContainersContainerIdEnvironmentsEnvironmentIdRequest {
    // The GTM Account ID.
    string accountId = 1;
    alt alt = 2;
    // The GTM Container ID.
    string containerId = 3;
    // The GTM Environment ID.
    string environmentId = 4;
    string fields = 5;
    string key = 6;
    string oauth_token = 7;
    boolean prettyPrint = 8;
    string quotaUser = 9;
    string userIp = 10;
}

message PutAccountsAccountIdContainersContainerIdEnvironmentsEnvironmentIdRequest {
    // The GTM Account ID.
    string accountId = 1;
    alt alt = 2;
    Environment body = 3;
    // The GTM Container ID.
    string containerId = 4;
    // The GTM Environment ID.
    string environmentId = 5;
    string fields = 6;
    // When provided, this fingerprint must match the fingerprint of the environment in storage.
    string fingerprint = 7;
    string key = 8;
    string oauth_token = 9;
    boolean prettyPrint = 10;
    string quotaUser = 11;
    string userIp = 12;
}

message DeleteAccountsAccountIdContainersContainerIdEnvironmentsEnvironmentIdRequest {
    // The GTM Account ID.
    string accountId = 1;
    alt alt = 2;
    // The GTM Container ID.
    string containerId = 3;
    // The GTM Environment ID.
    string environmentId = 4;
    string fields = 5;
    string key = 6;
    string oauth_token = 7;
    boolean prettyPrint = 8;
    string quotaUser = 9;
    string userIp = 10;
}

message GetAccountsAccountIdContainersContainerIdFoldersRequest {
    // The GTM Account ID.
    string accountId = 1;
    alt alt = 2;
    // The GTM Container ID.
    string containerId = 3;
    string fields = 4;
    string key = 5;
    string oauth_token = 6;
    boolean prettyPrint = 7;
    string quotaUser = 8;
    string userIp = 9;
}

message PostAccountsAccountIdContainersContainerIdFoldersRequest {
    // The GTM Account ID.
    string accountId = 1;
    alt alt = 2;
    Folder body = 3;
    // The GTM Container ID.
    string containerId = 4;
    string fields = 5;
    string key = 6;
    string oauth_token = 7;
    boolean prettyPrint = 8;
    string quotaUser = 9;
    string userIp = 10;
}

message GetAccountsAccountIdContainersContainerIdFoldersFolderIdRequest {
    // The GTM Account ID.
    string accountId = 1;
    alt alt = 2;
    // The GTM Container ID.
    string containerId = 3;
    string fields = 4;
    // The GTM Folder ID.
    string folderId = 5;
    string key = 6;
    string oauth_token = 7;
    boolean prettyPrint = 8;
    string quotaUser = 9;
    string userIp = 10;
}

message PutAccountsAccountIdContainersContainerIdFoldersFolderIdRequest {
    // The GTM Account ID.
    string accountId = 1;
    alt alt = 2;
    Folder body = 3;
    // The GTM Container ID.
    string containerId = 4;
    string fields = 5;
    // When provided, this fingerprint must match the fingerprint of the folder in storage.
    string fingerprint = 6;
    // The GTM Folder ID.
    string folderId = 7;
    string key = 8;
    string oauth_token = 9;
    boolean prettyPrint = 10;
    string quotaUser = 11;
    string userIp = 12;
}

message DeleteAccountsAccountIdContainersContainerIdFoldersFolderIdRequest {
    // The GTM Account ID.
    string accountId = 1;
    alt alt = 2;
    // The GTM Container ID.
    string containerId = 3;
    string fields = 4;
    // The GTM Folder ID.
    string folderId = 5;
    string key = 6;
    string oauth_token = 7;
    boolean prettyPrint = 8;
    string quotaUser = 9;
    string userIp = 10;
}

message GetAccountsAccountIdContainersContainerIdFoldersFolderIdEntitiesRequest {
    // The GTM Account ID.
    string accountId = 1;
    alt alt = 2;
    // The GTM Container ID.
    string containerId = 3;
    string fields = 4;
    // The GTM Folder ID.
    string folderId = 5;
    string key = 6;
    string oauth_token = 7;
    boolean prettyPrint = 8;
    string quotaUser = 9;
    string userIp = 10;
}

message PutAccountsAccountIdContainersContainerIdMove_foldersFolderIdRequest {
    // The GTM Account ID.
    string accountId = 1;
    alt alt = 2;
    Folder body = 3;
    // The GTM Container ID.
    string containerId = 4;
    string fields = 5;
    // The GTM Folder ID.
    string folderId = 6;
    string key = 7;
    string oauth_token = 8;
    boolean prettyPrint = 9;
    string quotaUser = 10;
    // The tags to be moved to the folder.
    repeated string tagId = 11;
    // The triggers to be moved to the folder.
    repeated string triggerId = 12;
    string userIp = 13;
    // The variables to be moved to the folder.
    repeated string variableId = 14;
}

message PutAccountsAccountIdContainersContainerIdReauthorize_environmentsEnvironmentIdRequest {
    // The GTM Account ID.
    string accountId = 1;
    alt alt = 2;
    Environment body = 3;
    // The GTM Container ID.
    string containerId = 4;
    // The GTM Environment ID.
    string environmentId = 5;
    string fields = 6;
    string key = 7;
    string oauth_token = 8;
    boolean prettyPrint = 9;
    string quotaUser = 10;
    string userIp = 11;
}

message GetAccountsAccountIdContainersContainerIdTagsRequest {
    // The GTM Account ID.
    string accountId = 1;
    alt alt = 2;
    // The GTM Container ID.
    string containerId = 3;
    string fields = 4;
    string key = 5;
    string oauth_token = 6;
    boolean prettyPrint = 7;
    string quotaUser = 8;
    string userIp = 9;
}

message PostAccountsAccountIdContainersContainerIdTagsRequest {
    // The GTM Account ID.
    string accountId = 1;
    alt alt = 2;
    Tag body = 3;
    // The GTM Container ID.
    string containerId = 4;
    string fields = 5;
    string key = 6;
    string oauth_token = 7;
    boolean prettyPrint = 8;
    string quotaUser = 9;
    string userIp = 10;
}

message GetAccountsAccountIdContainersContainerIdTagsTagIdRequest {
    // The GTM Account ID.
    string accountId = 1;
    alt alt = 2;
    // The GTM Container ID.
    string containerId = 3;
    string fields = 4;
    string key = 5;
    string oauth_token = 6;
    boolean prettyPrint = 7;
    string quotaUser = 8;
    // The GTM Tag ID.
    string tagId = 9;
    string userIp = 10;
}

message PutAccountsAccountIdContainersContainerIdTagsTagIdRequest {
    // The GTM Account ID.
    string accountId = 1;
    alt alt = 2;
    Tag body = 3;
    // The GTM Container ID.
    string containerId = 4;
    string fields = 5;
    // When provided, this fingerprint must match the fingerprint of the tag in storage.
    string fingerprint = 6;
    string key = 7;
    string oauth_token = 8;
    boolean prettyPrint = 9;
    string quotaUser = 10;
    // The GTM Tag ID.
    string tagId = 11;
    string userIp = 12;
}

message DeleteAccountsAccountIdContainersContainerIdTagsTagIdRequest {
    // The GTM Account ID.
    string accountId = 1;
    alt alt = 2;
    // The GTM Container ID.
    string containerId = 3;
    string fields = 4;
    string key = 5;
    string oauth_token = 6;
    boolean prettyPrint = 7;
    string quotaUser = 8;
    // The GTM Tag ID.
    string tagId = 9;
    string userIp = 10;
}

message GetAccountsAccountIdContainersContainerIdTriggersRequest {
    // The GTM Account ID.
    string accountId = 1;
    alt alt = 2;
    // The GTM Container ID.
    string containerId = 3;
    string fields = 4;
    string key = 5;
    string oauth_token = 6;
    boolean prettyPrint = 7;
    string quotaUser = 8;
    string userIp = 9;
}

message PostAccountsAccountIdContainersContainerIdTriggersRequest {
    // The GTM Account ID.
    string accountId = 1;
    alt alt = 2;
    Trigger body = 3;
    // The GTM Container ID.
    string containerId = 4;
    string fields = 5;
    string key = 6;
    string oauth_token = 7;
    boolean prettyPrint = 8;
    string quotaUser = 9;
    string userIp = 10;
}

message GetAccountsAccountIdContainersContainerIdTriggersTriggerIdRequest {
    // The GTM Account ID.
    string accountId = 1;
    alt alt = 2;
    // The GTM Container ID.
    string containerId = 3;
    string fields = 4;
    string key = 5;
    string oauth_token = 6;
    boolean prettyPrint = 7;
    string quotaUser = 8;
    // The GTM Trigger ID.
    string triggerId = 9;
    string userIp = 10;
}

message PutAccountsAccountIdContainersContainerIdTriggersTriggerIdRequest {
    // The GTM Account ID.
    string accountId = 1;
    alt alt = 2;
    Trigger body = 3;
    // The GTM Container ID.
    string containerId = 4;
    string fields = 5;
    // When provided, this fingerprint must match the fingerprint of the trigger in storage.
    string fingerprint = 6;
    string key = 7;
    string oauth_token = 8;
    boolean prettyPrint = 9;
    string quotaUser = 10;
    // The GTM Trigger ID.
    string triggerId = 11;
    string userIp = 12;
}

message DeleteAccountsAccountIdContainersContainerIdTriggersTriggerIdRequest {
    // The GTM Account ID.
    string accountId = 1;
    alt alt = 2;
    // The GTM Container ID.
    string containerId = 3;
    string fields = 4;
    string key = 5;
    string oauth_token = 6;
    boolean prettyPrint = 7;
    string quotaUser = 8;
    // The GTM Trigger ID.
    string triggerId = 9;
    string userIp = 10;
}

message GetAccountsAccountIdContainersContainerIdVariablesRequest {
    // The GTM Account ID.
    string accountId = 1;
    alt alt = 2;
    // The GTM Container ID.
    string containerId = 3;
    string fields = 4;
    string key = 5;
    string oauth_token = 6;
    boolean prettyPrint = 7;
    string quotaUser = 8;
    string userIp = 9;
}

message PostAccountsAccountIdContainersContainerIdVariablesRequest {
    // The GTM Account ID.
    string accountId = 1;
    alt alt = 2;
    Variable body = 3;
    // The GTM Container ID.
    string containerId = 4;
    string fields = 5;
    string key = 6;
    string oauth_token = 7;
    boolean prettyPrint = 8;
    string quotaUser = 9;
    string userIp = 10;
}

message GetAccountsAccountIdContainersContainerIdVariablesVariableIdRequest {
    // The GTM Account ID.
    string accountId = 1;
    alt alt = 2;
    // The GTM Container ID.
    string containerId = 3;
    string fields = 4;
    string key = 5;
    string oauth_token = 6;
    boolean prettyPrint = 7;
    string quotaUser = 8;
    string userIp = 9;
    // The GTM Variable ID.
    string variableId = 10;
}

message PutAccountsAccountIdContainersContainerIdVariablesVariableIdRequest {
    // The GTM Account ID.
    string accountId = 1;
    alt alt = 2;
    Variable body = 3;
    // The GTM Container ID.
    string containerId = 4;
    string fields = 5;
    // When provided, this fingerprint must match the fingerprint of the variable in storage.
    string fingerprint = 6;
    string key = 7;
    string oauth_token = 8;
    boolean prettyPrint = 9;
    string quotaUser = 10;
    string userIp = 11;
    // The GTM Variable ID.
    string variableId = 12;
}

message DeleteAccountsAccountIdContainersContainerIdVariablesVariableIdRequest {
    // The GTM Account ID.
    string accountId = 1;
    alt alt = 2;
    // The GTM Container ID.
    string containerId = 3;
    string fields = 4;
    string key = 5;
    string oauth_token = 6;
    boolean prettyPrint = 7;
    string quotaUser = 8;
    string userIp = 9;
    // The GTM Variable ID.
    string variableId = 10;
}

message GetAccountsAccountIdContainersContainerIdVersionsRequest {
    // The GTM Account ID.
    string accountId = 1;
    alt alt = 2;
    // The GTM Container ID.
    string containerId = 3;
    string fields = 4;
    // Retrieve headers only when true.
    bool headers = 5;
    // Also retrieve deleted (archived) versions when true.
    bool includeDeleted = 6;
    string key = 7;
    string oauth_token = 8;
    boolean prettyPrint = 9;
    string quotaUser = 10;
    string userIp = 11;
}

message PostAccountsAccountIdContainersContainerIdVersionsRequest {
    // The GTM Account ID.
    string accountId = 1;
    alt alt = 2;
    CreateContainerVersionRequestVersionOptions body = 3;
    // The GTM Container ID.
    string containerId = 4;
    string fields = 5;
    string key = 6;
    string oauth_token = 7;
    boolean prettyPrint = 8;
    string quotaUser = 9;
    string userIp = 10;
}

message GetAccountsAccountIdContainersContainerIdVersionsContainerVersionIdRequest {
    // The GTM Account ID.
    string accountId = 1;
    alt alt = 2;
    // The GTM Container ID.
    string containerId = 3;
    // The GTM Container Version ID. Specify published to retrieve the currently published version.
    string containerVersionId = 4;
    string fields = 5;
    string key = 6;
    string oauth_token = 7;
    boolean prettyPrint = 8;
    string quotaUser = 9;
    string userIp = 10;
}

message PutAccountsAccountIdContainersContainerIdVersionsContainerVersionIdRequest {
    // The GTM Account ID.
    string accountId = 1;
    alt alt = 2;
    ContainerVersion body = 3;
    // The GTM Container ID.
    string containerId = 4;
    // The GTM Container Version ID.
    string containerVersionId = 5;
    string fields = 6;
    // When provided, this fingerprint must match the fingerprint of the container version in storage.
    string fingerprint = 7;
    string key = 8;
    string oauth_token = 9;
    boolean prettyPrint = 10;
    string quotaUser = 11;
    string userIp = 12;
}

message DeleteAccountsAccountIdContainersContainerIdVersionsContainerVersionIdRequest {
    // The GTM Account ID.
    string accountId = 1;
    alt alt = 2;
    // The GTM Container ID.
    string containerId = 3;
    // The GTM Container Version ID.
    string containerVersionId = 4;
    string fields = 5;
    string key = 6;
    string oauth_token = 7;
    boolean prettyPrint = 8;
    string quotaUser = 9;
    string userIp = 10;
}

message PostAccountsAccountIdContainersContainerIdVersionsContainerVersionIdPublishRequest {
    // The GTM Account ID.
    string accountId = 1;
    alt alt = 2;
    // The GTM Container ID.
    string containerId = 3;
    // The GTM Container Version ID.
    string containerVersionId = 4;
    string fields = 5;
    // When provided, this fingerprint must match the fingerprint of the container version in storage.
    string fingerprint = 6;
    string key = 7;
    string oauth_token = 8;
    boolean prettyPrint = 9;
    string quotaUser = 10;
    string userIp = 11;
}

message PostAccountsAccountIdContainersContainerIdVersionsContainerVersionIdRestoreRequest {
    // The GTM Account ID.
    string accountId = 1;
    alt alt = 2;
    // The GTM Container ID.
    string containerId = 3;
    // The GTM Container Version ID.
    string containerVersionId = 4;
    string fields = 5;
    string key = 6;
    string oauth_token = 7;
    boolean prettyPrint = 8;
    string quotaUser = 9;
    string userIp = 10;
}

message PostAccountsAccountIdContainersContainerIdVersionsContainerVersionIdUndeleteRequest {
    // The GTM Account ID.
    string accountId = 1;
    alt alt = 2;
    // The GTM Container ID.
    string containerId = 3;
    // The GTM Container Version ID.
    string containerVersionId = 4;
    string fields = 5;
    string key = 6;
    string oauth_token = 7;
    boolean prettyPrint = 8;
    string quotaUser = 9;
    string userIp = 10;
}

message GetAccountsAccountIdPermissionsRequest {
    // The GTM Account ID. @required tagmanager.accounts.permissions.list
    string accountId = 1;
    alt alt = 2;
    string fields = 3;
    string key = 4;
    string oauth_token = 5;
    boolean prettyPrint = 6;
    string quotaUser = 7;
    string userIp = 8;
}

message PostAccountsAccountIdPermissionsRequest {
    // The GTM Account ID.
    string accountId = 1;
    alt alt = 2;
    UserAccess body = 3;
    string fields = 4;
    string key = 5;
    string oauth_token = 6;
    boolean prettyPrint = 7;
    string quotaUser = 8;
    string userIp = 9;
}

message GetAccountsAccountIdPermissionsPermissionIdRequest {
    // The GTM Account ID.
    string accountId = 1;
    alt alt = 2;
    string fields = 3;
    string key = 4;
    string oauth_token = 5;
    // The GTM User ID.
    string permissionId = 6;
    boolean prettyPrint = 7;
    string quotaUser = 8;
    string userIp = 9;
}

message PutAccountsAccountIdPermissionsPermissionIdRequest {
    // The GTM Account ID.
    string accountId = 1;
    alt alt = 2;
    UserAccess body = 3;
    string fields = 4;
    string key = 5;
    string oauth_token = 6;
    // The GTM User ID.
    string permissionId = 7;
    boolean prettyPrint = 8;
    string quotaUser = 9;
    string userIp = 10;
}

message DeleteAccountsAccountIdPermissionsPermissionIdRequest {
    // The GTM Account ID.
    string accountId = 1;
    alt alt = 2;
    string fields = 3;
    string key = 4;
    string oauth_token = 5;
    // The GTM User ID.
    string permissionId = 6;
    boolean prettyPrint = 7;
    string quotaUser = 8;
    string userIp = 9;
}

message Account {
    // The Account ID uniquely identifies the GTM Account.
    string accountId = 1;
    // The fingerprint of the GTM Account as computed at storage time. This value is recomputed whenever the account is modified.
    string fingerprint = 2;
    // Account display name.
    string name = 3;
    // Whether the account shares data anonymously with Google and others.
    bool shareData = 4;
}

message AccountAccess {
    // List of Account permissions. Valid account permissions are read and manage.
    repeated string permission = 1;
}

message Condition {
    // A list of named parameters (key/value), depending on the condition's type. Notes:
    // - For binary operators, include parameters named arg0 and arg1 for specifying the left and right operands, respectively.
    // - At this time, the left operand (arg0) must be a reference to a variable.
    // - For case-insensitive Regex matching, include a boolean parameter named ignore_case that is set to true. If not specified or set to any other value, the matching will be case sensitive.
    // - To negate an operator, include a boolean parameter named negate boolean parameter that is set to true.
    repeated Parameter parameter = 1;
    // The type of operator for this condition.
    enum Condition_Type {
        CONDITION_TYPE_CONTAINS = 0;
        CONDITION_TYPE_CSSSELECTOR = 1;
        CONDITION_TYPE_ENDSWITH = 2;
        CONDITION_TYPE_EQUALS = 3;
        CONDITION_TYPE_GREATER = 4;
        CONDITION_TYPE_GREATEROREQUALS = 5;
        CONDITION_TYPE_LESS = 6;
        CONDITION_TYPE_LESSOREQUALS = 7;
        CONDITION_TYPE_MATCHREGEX = 8;
        CONDITION_TYPE_STARTSWITH = 9;
        CONDITION_TYPE_URLMATCHES = 10;
    }
    Condition_Type type = 2;
}

message Container {
    // GTM Account ID.
    string accountId = 1;
    // The Container ID uniquely identifies the GTM Container.
    string containerId = 2;
    // Optional list of domain names associated with the Container.
    repeated string domainName = 3;
    // List of enabled built-in variables. Valid values include: pageUrl, pageHostname, pagePath, referrer, event, clickElement, clickClasses, clickId, clickTarget, clickUrl, clickText, formElement, formClasses, formId, formTarget, formUrl, formText, errorMessage, errorUrl, errorLine, newHistoryFragment, oldHistoryFragment, newHistoryState, oldHistoryState, historySource, containerVersion, debugMode, randomNumber, containerId.
    repeated string enabledBuiltInVariable = 4;
    // The fingerprint of the GTM Container as computed at storage time. This value is recomputed whenever the account is modified.
    string fingerprint = 5;
    // Container display name.
    string name = 6;
    // Container Notes.
    string notes = 7;
    // Container Public ID.
    string publicId = 8;
    // Container Country ID.
    string timeZoneCountryId = 9;
    // Container Time Zone ID.
    string timeZoneId = 10;
    // List of Usage Contexts for the Container. Valid values include: web, android, ios.
    repeated string usageContext = 11;
}

message ContainerAccess {
    // GTM Container ID.
    string containerId = 1;
    // List of Container permissions. Valid container permissions are: read, edit, delete, publish.
    repeated string permission = 2;
}

message ContainerVersion {
    // GTM Account ID.
    string accountId = 1;
    // The container that this version was taken from.
    Container container = 2;
    // GTM Container ID.
    string containerId = 3;
    // The Container Version ID uniquely identifies the GTM Container Version.
    string containerVersionId = 4;
    // A value of true indicates this container version has been deleted.
    bool deleted = 5;
    // The fingerprint of the GTM Container Version as computed at storage time. This value is recomputed whenever the container version is modified.
    string fingerprint = 6;
    // The folders in the container that this version was taken from.
    repeated Folder folder = 7;
    // The macros in the container that this version was taken from.
    repeated Macro macro = 8;
    // Container version display name.
    string name = 9;
    // User notes on how to apply this container version in the container.
    string notes = 10;
    // The rules in the container that this version was taken from.
    repeated Rule rule = 11;
    // The tags in the container that this version was taken from.
    repeated Tag tag = 12;
    // The triggers in the container that this version was taken from.
    repeated Trigger trigger = 13;
    // The variables in the container that this version was taken from.
    repeated Variable variable = 14;
}

message ContainerVersionHeader {
    // GTM Account ID.
    string accountId = 1;
    // GTM Container ID.
    string containerId = 2;
    // The Container Version ID uniquely identifies the GTM Container Version.
    string containerVersionId = 3;
    // A value of true indicates this container version has been deleted.
    bool deleted = 4;
    // Container version display name.
    string name = 5;
    // Number of macros in the container version.
    string numMacros = 6;
    // Number of rules in the container version.
    string numRules = 7;
    // Number of tags in the container version.
    string numTags = 8;
    // Number of triggers in the container version.
    string numTriggers = 9;
    // Number of variables in the container version.
    string numVariables = 10;
}

message CreateContainerVersionRequestVersionOptions {
    // The name of the container version to be created.
    string name = 1;
    // The notes of the container version to be created.
    string notes = 2;
    // The creation of this version may be for quick preview and shouldn't be saved.
    bool quickPreview = 3;
}

message CreateContainerVersionResponse {
    // Compiler errors or not.
    bool compilerError = 1;
    // The container version created.
    ContainerVersion containerVersion = 2;
}

message Environment {
    // GTM Account ID.
    string accountId = 1;
    // The environment authorization code.
    string authorizationCode = 2;
    // The last update time-stamp for the authorization code.
    string authorizationTimestampMs = 3;
    // GTM Container ID.
    string containerId = 4;
    string containerVersionId = 5;
    // The environment description. Can be set or changed only on USER type environments.
    string description = 6;
    // Whether or not to enable debug by default on for the environment.
    bool enableDebug = 7;
    // GTM Environment ID uniquely identifies the GTM Environment.
    string environmentId = 8;
    // The fingerprint of the GTM environment as computed at storage time. This value is recomputed whenever the environment is modified.
    string fingerprint = 9;
    // The environment display name. Can be set or changed only on USER type environments.
    string name = 10;
    // The type of this environment.
    enum Environment_Type {
        ENVIRONMENT_TYPE_DRAFT = 0;
        ENVIRONMENT_TYPE_LATEST = 1;
        ENVIRONMENT_TYPE_LIVE = 2;
        ENVIRONMENT_TYPE_USER = 3;
    }
    Environment_Type type = 11;
    // Default preview page url for the environment.
    string url = 12;
}

message Folder {
    // GTM Account ID.
    string accountId = 1;
    // GTM Container ID.
    string containerId = 2;
    // The fingerprint of the GTM Folder as computed at storage time. This value is recomputed whenever the folder is modified.
    string fingerprint = 3;
    // The Folder ID uniquely identifies the GTM Folder.
    string folderId = 4;
    // Folder display name.
    string name = 5;
}

message FolderEntities {
    // The list of tags inside the folder.
    repeated Tag tag = 1;
    // The list of triggers inside the folder.
    repeated Trigger trigger = 2;
    // The list of variables inside the folder.
    repeated Variable variable = 3;
}

message ListAccountUsersResponse {
    // All GTM AccountUsers of a GTM Account.
    repeated UserAccess userAccess = 1;
}

message ListAccountsResponse {
    // List of GTM Accounts that a user has access to.
    repeated Account accounts = 1;
}

message ListContainerVersionsResponse {
    // All versions of a GTM Container.
    repeated ContainerVersion containerVersion = 1;
    // All container version headers of a GTM Container.
    repeated ContainerVersionHeader containerVersionHeader = 2;
}

message ListContainersResponse {
    // All Containers of a GTM Account.
    repeated Container containers = 1;
}

message ListEnvironmentsResponse {
    // All Environments of a GTM Container.
    repeated Environment environments = 1;
}

message ListFoldersResponse {
    // All GTM Folders of a GTM Container.
    repeated Folder folders = 1;
}

message ListTagsResponse {
    // All GTM Tags of a GTM Container.
    repeated Tag tags = 1;
}

message ListTriggersResponse {
    // All GTM Triggers of a GTM Container.
    repeated Trigger triggers = 1;
}

message ListVariablesResponse {
    // All GTM Variables of a GTM Container.
    repeated Variable variables = 1;
}

message Macro {
    // GTM Account ID.
    string accountId = 1;
    // GTM Container ID.
    string containerId = 2;
    // For mobile containers only: A list of rule IDs for disabling conditional macros; the macro is enabled if one of the enabling rules is true while all the disabling rules are false. Treated as an unordered set.
    repeated string disablingRuleId = 3;
    // For mobile containers only: A list of rule IDs for enabling conditional macros; the macro is enabled if one of the enabling rules is true while all the disabling rules are false. Treated as an unordered set.
    repeated string enablingRuleId = 4;
    // The fingerprint of the GTM Macro as computed at storage time. This value is recomputed whenever the macro is modified.
    string fingerprint = 5;
    // The Macro ID uniquely identifies the GTM Macro.
    string macroId = 6;
    // Macro display name.
    string name = 7;
    // User notes on how to apply this macro in the container.
    string notes = 8;
    // The macro's parameters.
    repeated Parameter parameter = 9;
    // Parent folder id.
    string parentFolderId = 10;
    // The end timestamp in milliseconds to schedule a macro.
    string scheduleEndMs = 11;
    // The start timestamp in milliseconds to schedule a macro.
    string scheduleStartMs = 12;
    // GTM Macro Type.
    string type = 13;
}

message Parameter {
    // The named key that uniquely identifies a parameter. Required for top-level parameters, as well as map values. Ignored for list values.
    string key = 1;
    // This list parameter's parameters (keys will be ignored).
    repeated Parameter list = 2;
    // This map parameter's parameters (must have keys; keys must be unique).
    repeated Parameter map = 3;
    // The parameter type. Valid values are:
    // - boolean: The value represents a boolean, represented as 'true' or 'false'
    // - integer: The value represents a 64-bit signed integer value, in base 10
    // - list: A list of parameters should be specified
    // - map: A map of parameters should be specified
    // - template: The value represents any text; this can include variable references (even variable references that might return non-string types)
    enum Parameter_Type {
        PARAMETER_TYPE_BOOLEAN = 0;
        PARAMETER_TYPE_INTEGER = 1;
        PARAMETER_TYPE_LIST = 2;
        PARAMETER_TYPE_MAP = 3;
        PARAMETER_TYPE_TEMPLATE = 4;
    }
    Parameter_Type type = 4;
    // A parameter's value (may contain variable references such as "{{myVariable}}") as appropriate to the specified type.
    string value = 5;
}

message PublishContainerVersionResponse {
    // Compiler errors or not.
    bool compilerError = 1;
    // The container version created.
    ContainerVersion containerVersion = 2;
}

message Rule {
    // GTM Account ID.
    string accountId = 1;
    // The list of conditions that make up this rule (implicit AND between them).
    repeated Condition condition = 2;
    // GTM Container ID.
    string containerId = 3;
    // The fingerprint of the GTM Rule as computed at storage time. This value is recomputed whenever the rule is modified.
    string fingerprint = 4;
    // Rule display name.
    string name = 5;
    // User notes on how to apply this rule in the container.
    string notes = 6;
    // The Rule ID uniquely identifies the GTM Rule.
    string ruleId = 7;
}

message SetupTag {
    // If true, fire the main tag if and only if the setup tag fires successfully. If false, fire the main tag regardless of setup tag firing status.
    bool stopOnSetupFailure = 1;
    // The name of the setup tag.
    string tagName = 2;
}

message Tag {
    // GTM Account ID.
    string accountId = 1;
    // Blocking rule IDs. If any of the listed rules evaluate to true, the tag will not fire.
    repeated string blockingRuleId = 2;
    // Blocking trigger IDs. If any of the listed triggers evaluate to true, the tag will not fire.
    repeated string blockingTriggerId = 3;
    // GTM Container ID.
    string containerId = 4;
    // The fingerprint of the GTM Tag as computed at storage time. This value is recomputed whenever the tag is modified.
    string fingerprint = 5;
    // Firing rule IDs. A tag will fire when any of the listed rules are true and all of its blockingRuleIds (if any specified) are false.
    repeated string firingRuleId = 6;
    // Firing trigger IDs. A tag will fire when any of the listed triggers are true and all of its blockingTriggerIds (if any specified) are false.
    repeated string firingTriggerId = 7;
    // If set to true, this tag will only fire in the live environment (e.g. not in preview or debug mode).
    bool liveOnly = 8;
    // Tag display name.
    string name = 9;
    // User notes on how to apply this tag in the container.
    string notes = 10;
    // The tag's parameters.
    repeated Parameter parameter = 11;
    // Parent folder id.
    string parentFolderId = 12;
    // User defined numeric priority of the tag. Tags are fired asynchronously in order of priority. Tags with higher numeric value fire first. A tag's priority can be a positive or negative value. The default value is 0.
    Parameter priority = 13;
    // The end timestamp in milliseconds to schedule a tag.
    string scheduleEndMs = 14;
    // The start timestamp in milliseconds to schedule a tag.
    string scheduleStartMs = 15;
    // The list of setup tags. Currently we only allow one.
    repeated SetupTag setupTag = 16;
    // Option to fire this tag.
    enum Tag_TagFiringOption {
        TAG_TAGFIRINGOPTION_ONCEPEREVENT = 0;
        TAG_TAGFIRINGOPTION_ONCEPERLOAD = 1;
        TAG_TAGFIRINGOPTION_UNLIMITED = 2;
    }
    Tag_TagFiringOption tagFiringOption = 17;
    // The Tag ID uniquely identifies the GTM Tag.
    string tagId = 18;
    // The list of teardown tags. Currently we only allow one.
    repeated TeardownTag teardownTag = 19;
    // GTM Tag Type.
    string type = 20;
}

message TeardownTag {
    // If true, fire the teardown tag if and only if the main tag fires successfully. If false, fire the teardown tag regardless of main tag firing status.
    bool stopTeardownOnFailure = 1;
    // The name of the teardown tag.
    string tagName = 2;
}

message Trigger {
    // GTM Account ID.
    string accountId = 1;
    // Used in the case of auto event tracking.
    repeated Condition autoEventFilter = 2;
    // Whether or not we should only fire tags if the form submit or link click event is not cancelled by some other event handler (e.g. because of validation). Only valid for Form Submission and Link Click triggers.
    Parameter checkValidation = 3;
    // GTM Container ID.
    string containerId = 4;
    // Used in the case of custom event, which is fired iff all Conditions are true.
    repeated Condition customEventFilter = 5;
    // Reloads the videos in the page that don't already have the YT API enabled. If false, only capture events from videos that already have the API enabled. Only valid for YouTube triggers.
    Parameter enableAllVideos = 6;
    // Name of the GTM event that is fired. Only valid for Timer triggers.
    Parameter eventName = 7;
    // The trigger will only fire iff all Conditions are true.
    repeated Condition filter = 8;
    // The fingerprint of the GTM Trigger as computed at storage time. This value is recomputed whenever the trigger is modified.
    string fingerprint = 9;
    // Time between triggering recurring Timer Events (in milliseconds). Only valid for Timer triggers.
    Parameter interval = 10;
    // Limit of the number of GTM events this Timer Trigger will fire. If no limit is set, we will continue to fire GTM events until the user leaves the page. Only valid for Timer triggers.
    Parameter limit = 11;
    // Trigger display name.
    string name = 12;
    // Parent folder id.
    string parentFolderId = 13;
    // The Trigger ID uniquely identifies the GTM Trigger.
    string triggerId = 14;
    // Defines the data layer event that causes this trigger.
    enum Trigger_Type {
        TRIGGER_TYPE_AJAXSUBMISSION = 0;
        TRIGGER_TYPE_ALWAYS = 1;
        TRIGGER_TYPE_CLICK = 2;
        TRIGGER_TYPE_CUSTOMEVENT = 3;
        TRIGGER_TYPE_DOMREADY = 4;
        TRIGGER_TYPE_FORMSUBMISSION = 5;
        TRIGGER_TYPE_HISTORYCHANGE = 6;
        TRIGGER_TYPE_JSERROR = 7;
        TRIGGER_TYPE_LINKCLICK = 8;
        TRIGGER_TYPE_PAGEVIEW = 9;
        TRIGGER_TYPE_TIMER = 10;
        TRIGGER_TYPE_WINDOWLOADED = 11;
        TRIGGER_TYPE_YOUTUBE = 12;
    }
    Trigger_Type type = 15;
    // Globally unique id of the trigger that auto-generates this (a Form Submit, Link Click or Timer listener) if any. Used to make incompatible auto-events work together with trigger filtering based on trigger ids. This value is populated during output generation since the tags implied by triggers don't exist until then. Only valid for Form Submit, Link Click and Timer triggers.
    Parameter uniqueTriggerId = 16;
    // List of integer percentage values. The trigger will fire as each percentage is reached in any instrumented videos. Only valid for YouTube triggers.
    Parameter videoPercentageList = 17;
    // Whether or not we should delay the form submissions or link opening until all of the tags have fired (by preventing the default action and later simulating the default action). Only valid for Form Submission and Link Click triggers.
    Parameter waitForTags = 18;
    // How long to wait (in milliseconds) for tags to fire when 'waits_for_tags' above evaluates to true. Only valid for Form Submission and Link Click triggers.
    Parameter waitForTagsTimeout = 19;
}

message UserAccess {
    // GTM Account access permissions.
    AccountAccess accountAccess = 1;
    // GTM Account ID.
    string accountId = 2;
    // GTM Container access permissions.
    repeated ContainerAccess containerAccess = 3;
    // User's email address.
    string emailAddress = 4;
    // Account Permission ID.
    string permissionId = 5;
}

message Variable {
    // GTM Account ID.
    string accountId = 1;
    // GTM Container ID.
    string containerId = 2;
    // For mobile containers only: A list of trigger IDs for disabling conditional variables; the variable is enabled if one of the enabling trigger is true while all the disabling trigger are false. Treated as an unordered set.
    repeated string disablingTriggerId = 3;
    // For mobile containers only: A list of trigger IDs for enabling conditional variables; the variable is enabled if one of the enabling triggers is true while all the disabling triggers are false. Treated as an unordered set.
    repeated string enablingTriggerId = 4;
    // The fingerprint of the GTM Variable as computed at storage time. This value is recomputed whenever the variable is modified.
    string fingerprint = 5;
    // Variable display name.
    string name = 6;
    // User notes on how to apply this variable in the container.
    string notes = 7;
    // The variable's parameters.
    repeated Parameter parameter = 8;
    // Parent folder id.
    string parentFolderId = 9;
    // The end timestamp in milliseconds to schedule a variable.
    string scheduleEndMs = 10;
    // The start timestamp in milliseconds to schedule a variable.
    string scheduleStartMs = 11;
    // GTM Variable Type.
    string type = 12;
    // The Variable ID uniquely identifies the GTM Variable.
    string variableId = 13;
}

enum Alt {
    JSON = 0;
}

service TagManagerService {
    // Lists all GTM Accounts that a user has access to.
    rpc GetAccounts(GetAccountsRequest) returns (ListAccountsResponse) {
      option (google.api.http) = {
        get: "/tagmanager/v1/accounts"
      };
    }
    // Gets a GTM Account.
    rpc GetAccountsAccountId(GetAccountsAccountIdRequest) returns (Account) {
      option (google.api.http) = {
        get: "/tagmanager/v1/accounts/{accountId}"
      };
    }
    // Updates a GTM Account.
    rpc PutAccountsAccountId(PutAccountsAccountIdRequest) returns (Account) {
      option (google.api.http) = {
        put: "/tagmanager/v1/accounts/{accountId}"
        body: "body"
      };
    }
    // Lists all Containers that belongs to a GTM Account.
    rpc GetAccountsAccountIdContainers(GetAccountsAccountIdContainersRequest) returns (ListContainersResponse) {
      option (google.api.http) = {
        get: "/tagmanager/v1/accounts/{accountId}/containers"
      };
    }
    // Creates a Container.
    rpc PostAccountsAccountIdContainers(PostAccountsAccountIdContainersRequest) returns (Container) {
      option (google.api.http) = {
        post: "/tagmanager/v1/accounts/{accountId}/containers"
        body: "body"
      };
    }
    // Gets a Container.
    rpc GetAccountsAccountIdContainersContainerId(GetAccountsAccountIdContainersContainerIdRequest) returns (Container) {
      option (google.api.http) = {
        get: "/tagmanager/v1/accounts/{accountId}/containers/{containerId}"
      };
    }
    // Updates a Container.
    rpc PutAccountsAccountIdContainersContainerId(PutAccountsAccountIdContainersContainerIdRequest) returns (Container) {
      option (google.api.http) = {
        put: "/tagmanager/v1/accounts/{accountId}/containers/{containerId}"
        body: "body"
      };
    }
    // Deletes a Container.
    rpc DeleteAccountsAccountIdContainersContainerId(DeleteAccountsAccountIdContainersContainerIdRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        delete: "/tagmanager/v1/accounts/{accountId}/containers/{containerId}"
      };
    }
    // Lists all GTM Environments of a GTM Container.
    rpc GetAccountsAccountIdContainersContainerIdEnvironments(GetAccountsAccountIdContainersContainerIdEnvironmentsRequest) returns (ListEnvironmentsResponse) {
      option (google.api.http) = {
        get: "/tagmanager/v1/accounts/{accountId}/containers/{containerId}/environments"
      };
    }
    // Creates a GTM Environment.
    rpc PostAccountsAccountIdContainersContainerIdEnvironments(PostAccountsAccountIdContainersContainerIdEnvironmentsRequest) returns (Environment) {
      option (google.api.http) = {
        post: "/tagmanager/v1/accounts/{accountId}/containers/{containerId}/environments"
        body: "body"
      };
    }
    // Gets a GTM Environment.
    rpc GetAccountsAccountIdContainersContainerIdEnvironmentsEnvironmentId(GetAccountsAccountIdContainersContainerIdEnvironmentsEnvironmentIdRequest) returns (Environment) {
      option (google.api.http) = {
        get: "/tagmanager/v1/accounts/{accountId}/containers/{containerId}/environments/{environmentId}"
      };
    }
    // Updates a GTM Environment.
    rpc PutAccountsAccountIdContainersContainerIdEnvironmentsEnvironmentId(PutAccountsAccountIdContainersContainerIdEnvironmentsEnvironmentIdRequest) returns (Environment) {
      option (google.api.http) = {
        put: "/tagmanager/v1/accounts/{accountId}/containers/{containerId}/environments/{environmentId}"
        body: "body"
      };
    }
    // Deletes a GTM Environment.
    rpc DeleteAccountsAccountIdContainersContainerIdEnvironmentsEnvironmentId(DeleteAccountsAccountIdContainersContainerIdEnvironmentsEnvironmentIdRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        delete: "/tagmanager/v1/accounts/{accountId}/containers/{containerId}/environments/{environmentId}"
      };
    }
    // Lists all GTM Folders of a Container.
    rpc GetAccountsAccountIdContainersContainerIdFolders(GetAccountsAccountIdContainersContainerIdFoldersRequest) returns (ListFoldersResponse) {
      option (google.api.http) = {
        get: "/tagmanager/v1/accounts/{accountId}/containers/{containerId}/folders"
      };
    }
    // Creates a GTM Folder.
    rpc PostAccountsAccountIdContainersContainerIdFolders(PostAccountsAccountIdContainersContainerIdFoldersRequest) returns (Folder) {
      option (google.api.http) = {
        post: "/tagmanager/v1/accounts/{accountId}/containers/{containerId}/folders"
        body: "body"
      };
    }
    // Gets a GTM Folder.
    rpc GetAccountsAccountIdContainersContainerIdFoldersFolderId(GetAccountsAccountIdContainersContainerIdFoldersFolderIdRequest) returns (Folder) {
      option (google.api.http) = {
        get: "/tagmanager/v1/accounts/{accountId}/containers/{containerId}/folders/{folderId}"
      };
    }
    // Updates a GTM Folder.
    rpc PutAccountsAccountIdContainersContainerIdFoldersFolderId(PutAccountsAccountIdContainersContainerIdFoldersFolderIdRequest) returns (Folder) {
      option (google.api.http) = {
        put: "/tagmanager/v1/accounts/{accountId}/containers/{containerId}/folders/{folderId}"
        body: "body"
      };
    }
    // Deletes a GTM Folder.
    rpc DeleteAccountsAccountIdContainersContainerIdFoldersFolderId(DeleteAccountsAccountIdContainersContainerIdFoldersFolderIdRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        delete: "/tagmanager/v1/accounts/{accountId}/containers/{containerId}/folders/{folderId}"
      };
    }
    // List all entities in a GTM Folder.
    rpc GetAccountsAccountIdContainersContainerIdFoldersFolderIdEntities(GetAccountsAccountIdContainersContainerIdFoldersFolderIdEntitiesRequest) returns (FolderEntities) {
      option (google.api.http) = {
        get: "/tagmanager/v1/accounts/{accountId}/containers/{containerId}/folders/{folderId}/entities"
      };
    }
    // Moves entities to a GTM Folder.
    rpc PutAccountsAccountIdContainersContainerIdMove_foldersFolderId(PutAccountsAccountIdContainersContainerIdMove_foldersFolderIdRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        put: "/tagmanager/v1/accounts/{accountId}/containers/{containerId}/move_folders/{folderId}"
        body: "body"
      };
    }
    // Re-generates the authorization code for a GTM Environment.
    rpc PutAccountsAccountIdContainersContainerIdReauthorize_environmentsEnvironmentId(PutAccountsAccountIdContainersContainerIdReauthorize_environmentsEnvironmentIdRequest) returns (Environment) {
      option (google.api.http) = {
        put: "/tagmanager/v1/accounts/{accountId}/containers/{containerId}/reauthorize_environments/{environmentId}"
        body: "body"
      };
    }
    // Lists all GTM Tags of a Container.
    rpc GetAccountsAccountIdContainersContainerIdTags(GetAccountsAccountIdContainersContainerIdTagsRequest) returns (ListTagsResponse) {
      option (google.api.http) = {
        get: "/tagmanager/v1/accounts/{accountId}/containers/{containerId}/tags"
      };
    }
    // Creates a GTM Tag.
    rpc PostAccountsAccountIdContainersContainerIdTags(PostAccountsAccountIdContainersContainerIdTagsRequest) returns (Tag) {
      option (google.api.http) = {
        post: "/tagmanager/v1/accounts/{accountId}/containers/{containerId}/tags"
        body: "body"
      };
    }
    // Gets a GTM Tag.
    rpc GetAccountsAccountIdContainersContainerIdTagsTagId(GetAccountsAccountIdContainersContainerIdTagsTagIdRequest) returns (Tag) {
      option (google.api.http) = {
        get: "/tagmanager/v1/accounts/{accountId}/containers/{containerId}/tags/{tagId}"
      };
    }
    // Updates a GTM Tag.
    rpc PutAccountsAccountIdContainersContainerIdTagsTagId(PutAccountsAccountIdContainersContainerIdTagsTagIdRequest) returns (Tag) {
      option (google.api.http) = {
        put: "/tagmanager/v1/accounts/{accountId}/containers/{containerId}/tags/{tagId}"
        body: "body"
      };
    }
    // Deletes a GTM Tag.
    rpc DeleteAccountsAccountIdContainersContainerIdTagsTagId(DeleteAccountsAccountIdContainersContainerIdTagsTagIdRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        delete: "/tagmanager/v1/accounts/{accountId}/containers/{containerId}/tags/{tagId}"
      };
    }
    // Lists all GTM Triggers of a Container.
    rpc GetAccountsAccountIdContainersContainerIdTriggers(GetAccountsAccountIdContainersContainerIdTriggersRequest) returns (ListTriggersResponse) {
      option (google.api.http) = {
        get: "/tagmanager/v1/accounts/{accountId}/containers/{containerId}/triggers"
      };
    }
    // Creates a GTM Trigger.
    rpc PostAccountsAccountIdContainersContainerIdTriggers(PostAccountsAccountIdContainersContainerIdTriggersRequest) returns (Trigger) {
      option (google.api.http) = {
        post: "/tagmanager/v1/accounts/{accountId}/containers/{containerId}/triggers"
        body: "body"
      };
    }
    // Gets a GTM Trigger.
    rpc GetAccountsAccountIdContainersContainerIdTriggersTriggerId(GetAccountsAccountIdContainersContainerIdTriggersTriggerIdRequest) returns (Trigger) {
      option (google.api.http) = {
        get: "/tagmanager/v1/accounts/{accountId}/containers/{containerId}/triggers/{triggerId}"
      };
    }
    // Updates a GTM Trigger.
    rpc PutAccountsAccountIdContainersContainerIdTriggersTriggerId(PutAccountsAccountIdContainersContainerIdTriggersTriggerIdRequest) returns (Trigger) {
      option (google.api.http) = {
        put: "/tagmanager/v1/accounts/{accountId}/containers/{containerId}/triggers/{triggerId}"
        body: "body"
      };
    }
    // Deletes a GTM Trigger.
    rpc DeleteAccountsAccountIdContainersContainerIdTriggersTriggerId(DeleteAccountsAccountIdContainersContainerIdTriggersTriggerIdRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        delete: "/tagmanager/v1/accounts/{accountId}/containers/{containerId}/triggers/{triggerId}"
      };
    }
    // Lists all GTM Variables of a Container.
    rpc GetAccountsAccountIdContainersContainerIdVariables(GetAccountsAccountIdContainersContainerIdVariablesRequest) returns (ListVariablesResponse) {
      option (google.api.http) = {
        get: "/tagmanager/v1/accounts/{accountId}/containers/{containerId}/variables"
      };
    }
    // Creates a GTM Variable.
    rpc PostAccountsAccountIdContainersContainerIdVariables(PostAccountsAccountIdContainersContainerIdVariablesRequest) returns (Variable) {
      option (google.api.http) = {
        post: "/tagmanager/v1/accounts/{accountId}/containers/{containerId}/variables"
        body: "body"
      };
    }
    // Gets a GTM Variable.
    rpc GetAccountsAccountIdContainersContainerIdVariablesVariableId(GetAccountsAccountIdContainersContainerIdVariablesVariableIdRequest) returns (Variable) {
      option (google.api.http) = {
        get: "/tagmanager/v1/accounts/{accountId}/containers/{containerId}/variables/{variableId}"
      };
    }
    // Updates a GTM Variable.
    rpc PutAccountsAccountIdContainersContainerIdVariablesVariableId(PutAccountsAccountIdContainersContainerIdVariablesVariableIdRequest) returns (Variable) {
      option (google.api.http) = {
        put: "/tagmanager/v1/accounts/{accountId}/containers/{containerId}/variables/{variableId}"
        body: "body"
      };
    }
    // Deletes a GTM Variable.
    rpc DeleteAccountsAccountIdContainersContainerIdVariablesVariableId(DeleteAccountsAccountIdContainersContainerIdVariablesVariableIdRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        delete: "/tagmanager/v1/accounts/{accountId}/containers/{containerId}/variables/{variableId}"
      };
    }
    // Lists all Container Versions of a GTM Container.
    rpc GetAccountsAccountIdContainersContainerIdVersions(GetAccountsAccountIdContainersContainerIdVersionsRequest) returns (ListContainerVersionsResponse) {
      option (google.api.http) = {
        get: "/tagmanager/v1/accounts/{accountId}/containers/{containerId}/versions"
      };
    }
    // Creates a Container Version.
    rpc PostAccountsAccountIdContainersContainerIdVersions(PostAccountsAccountIdContainersContainerIdVersionsRequest) returns (CreateContainerVersionResponse) {
      option (google.api.http) = {
        post: "/tagmanager/v1/accounts/{accountId}/containers/{containerId}/versions"
        body: "body"
      };
    }
    // Gets a Container Version.
    rpc GetAccountsAccountIdContainersContainerIdVersionsContainerVersionId(GetAccountsAccountIdContainersContainerIdVersionsContainerVersionIdRequest) returns (ContainerVersion) {
      option (google.api.http) = {
        get: "/tagmanager/v1/accounts/{accountId}/containers/{containerId}/versions/{containerVersionId}"
      };
    }
    // Updates a Container Version.
    rpc PutAccountsAccountIdContainersContainerIdVersionsContainerVersionId(PutAccountsAccountIdContainersContainerIdVersionsContainerVersionIdRequest) returns (ContainerVersion) {
      option (google.api.http) = {
        put: "/tagmanager/v1/accounts/{accountId}/containers/{containerId}/versions/{containerVersionId}"
        body: "body"
      };
    }
    // Deletes a Container Version.
    rpc DeleteAccountsAccountIdContainersContainerIdVersionsContainerVersionId(DeleteAccountsAccountIdContainersContainerIdVersionsContainerVersionIdRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        delete: "/tagmanager/v1/accounts/{accountId}/containers/{containerId}/versions/{containerVersionId}"
      };
    }
    // Publishes a Container Version.
    rpc PostAccountsAccountIdContainersContainerIdVersionsContainerVersionIdPublish(PostAccountsAccountIdContainersContainerIdVersionsContainerVersionIdPublishRequest) returns (PublishContainerVersionResponse) {
      option (google.api.http) = {
        post: "/tagmanager/v1/accounts/{accountId}/containers/{containerId}/versions/{containerVersionId}/publish"
      };
    }
    // Restores a Container Version. This will overwrite the container's current configuration (including its variables, triggers and tags). The operation will not have any effect on the version that is being served (i.e. the published version).
    rpc PostAccountsAccountIdContainersContainerIdVersionsContainerVersionIdRestore(PostAccountsAccountIdContainersContainerIdVersionsContainerVersionIdRestoreRequest) returns (ContainerVersion) {
      option (google.api.http) = {
        post: "/tagmanager/v1/accounts/{accountId}/containers/{containerId}/versions/{containerVersionId}/restore"
      };
    }
    // Undeletes a Container Version.
    rpc PostAccountsAccountIdContainersContainerIdVersionsContainerVersionIdUndelete(PostAccountsAccountIdContainersContainerIdVersionsContainerVersionIdUndeleteRequest) returns (ContainerVersion) {
      option (google.api.http) = {
        post: "/tagmanager/v1/accounts/{accountId}/containers/{containerId}/versions/{containerVersionId}/undelete"
      };
    }
    // List all users that have access to the account along with Account and Container Permissions granted to each of them.
    rpc GetAccountsAccountIdPermissions(GetAccountsAccountIdPermissionsRequest) returns (ListAccountUsersResponse) {
      option (google.api.http) = {
        get: "/tagmanager/v1/accounts/{accountId}/permissions"
      };
    }
    // Creates a user's Account & Container Permissions.
    rpc PostAccountsAccountIdPermissions(PostAccountsAccountIdPermissionsRequest) returns (UserAccess) {
      option (google.api.http) = {
        post: "/tagmanager/v1/accounts/{accountId}/permissions"
        body: "body"
      };
    }
    // Gets a user's Account & Container Permissions.
    rpc GetAccountsAccountIdPermissionsPermissionId(GetAccountsAccountIdPermissionsPermissionIdRequest) returns (UserAccess) {
      option (google.api.http) = {
        get: "/tagmanager/v1/accounts/{accountId}/permissions/{permissionId}"
      };
    }
    // Updates a user's Account & Container Permissions.
    rpc PutAccountsAccountIdPermissionsPermissionId(PutAccountsAccountIdPermissionsPermissionIdRequest) returns (UserAccess) {
      option (google.api.http) = {
        put: "/tagmanager/v1/accounts/{accountId}/permissions/{permissionId}"
        body: "body"
      };
    }
    // Removes a user from the account, revoking access to it and all of its containers.
    rpc DeleteAccountsAccountIdPermissionsPermissionId(DeleteAccountsAccountIdPermissionsPermissionIdRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        delete: "/tagmanager/v1/accounts/{accountId}/permissions/{permissionId}"
      };
    }
}
