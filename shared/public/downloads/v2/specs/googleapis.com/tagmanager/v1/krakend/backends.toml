[[backends]]
  group = "tag-manager-tagmanager-v1-accounts"
  slug = "tag-manager-v1-tagmanager-v1-accounts"
  url_pattern = "/tagmanager/v1/accounts"
  method = "GET"
  host = ["https://www.googleapis.com"]
  whitelist = ["accounts"]
  concurrent_calls = 1
  [backends.mapping]
    accounts = "accounts"
  [backends.extra_config]
    hosts = ["https://www.googleapis.com"]
    schemes = ["https"]

[[backends]]
  group = "tag-manager-tagmanager-v1-accounts-accountid"
  slug = "tag-manager-v1-tagmanager-v1-accounts-accountid"
  url_pattern = "/tagmanager/v1/accounts/{accountId}"
  method = "GET"
  host = ["https://www.googleapis.com"]
  whitelist = ["accountId", "fingerprint", "name", "shareData"]
  concurrent_calls = 1
  [backends.mapping]
    accountId = "accountId"
    fingerprint = "fingerprint"
    name = "name"
    shareData = "shareData"
  [backends.extra_config]
    hosts = ["https://www.googleapis.com"]
    schemes = ["https"]

[[backends]]
  group = "tag-manager-tagmanager-v1-accounts-accountid-containers"
  slug = "tag-manager-v1-tagmanager-v1-accounts-accountid-containers"
  url_pattern = "/tagmanager/v1/accounts/{accountId}/containers"
  method = "GET"
  host = ["https://www.googleapis.com"]
  whitelist = ["containers"]
  concurrent_calls = 1
  [backends.mapping]
    containers = "containers"
  [backends.extra_config]
    hosts = ["https://www.googleapis.com"]
    schemes = ["https"]

[[backends]]
  group = "tag-manager-tagmanager-v1-accounts-accountid-containers-containerid"
  slug = "tag-manager-v1-tagmanager-v1-accounts-accountid-containers-containerid"
  url_pattern = "/tagmanager/v1/accounts/{accountId}/containers/{containerId}"
  method = "GET"
  host = ["https://www.googleapis.com"]
  whitelist = ["accountId", "containerId", "domainName", "enabledBuiltInVariable", "fingerprint", "name", "notes", "publicId", "timeZoneCountryId", "timeZoneId", "usageContext"]
  concurrent_calls = 1
  [backends.mapping]
    accountId = "accountId"
    containerId = "containerId"
    domainName = "domainName"
    enabledBuiltInVariable = "enabledBuiltInVariable"
    fingerprint = "fingerprint"
    name = "name"
    notes = "notes"
    publicId = "publicId"
    timeZoneCountryId = "timeZoneCountryId"
    timeZoneId = "timeZoneId"
    usageContext = "usageContext"
  [backends.extra_config]
    hosts = ["https://www.googleapis.com"]
    schemes = ["https"]

[[backends]]
  group = "tag-manager-tagmanager-v1-accounts-accountid-containers-containerid-environments"
  slug = "tag-manager-v1-tagmanager-v1-accounts-accountid-containers-containerid-environments"
  url_pattern = "/tagmanager/v1/accounts/{accountId}/containers/{containerId}/environments"
  method = "GET"
  host = ["https://www.googleapis.com"]
  whitelist = ["environments"]
  concurrent_calls = 1
  [backends.mapping]
    environments = "environments"
  [backends.extra_config]
    hosts = ["https://www.googleapis.com"]
    schemes = ["https"]

[[backends]]
  group = "tag-manager-tagmanager-v1-accounts-accountid-containers-containerid-environments-environmentid"
  slug = "tag-manager-v1-tagmanager-v1-accounts-accountid-containers-containerid-environments-environmentid"
  url_pattern = "/tagmanager/v1/accounts/{accountId}/containers/{containerId}/environments/{environmentId}"
  method = "GET"
  host = ["https://www.googleapis.com"]
  whitelist = ["accountId", "authorizationCode", "authorizationTimestampMs", "containerId", "containerVersionId", "description", "enableDebug", "environmentId", "fingerprint", "name", "type", "url"]
  concurrent_calls = 1
  [backends.mapping]
    accountId = "accountId"
    authorizationCode = "authorizationCode"
    authorizationTimestampMs = "authorizationTimestampMs"
    containerId = "containerId"
    containerVersionId = "containerVersionId"
    description = "description"
    enableDebug = "enableDebug"
    environmentId = "environmentId"
    fingerprint = "fingerprint"
    name = "name"
    type = "type"
    url = "url"
  [backends.extra_config]
    hosts = ["https://www.googleapis.com"]
    schemes = ["https"]

[[backends]]
  group = "tag-manager-tagmanager-v1-accounts-accountid-containers-containerid-folders"
  slug = "tag-manager-v1-tagmanager-v1-accounts-accountid-containers-containerid-folders"
  url_pattern = "/tagmanager/v1/accounts/{accountId}/containers/{containerId}/folders"
  method = "GET"
  host = ["https://www.googleapis.com"]
  whitelist = ["folders"]
  concurrent_calls = 1
  [backends.mapping]
    folders = "folders"
  [backends.extra_config]
    hosts = ["https://www.googleapis.com"]
    schemes = ["https"]

[[backends]]
  group = "tag-manager-tagmanager-v1-accounts-accountid-containers-containerid-folders-folderid"
  slug = "tag-manager-v1-tagmanager-v1-accounts-accountid-containers-containerid-folders-folderid"
  url_pattern = "/tagmanager/v1/accounts/{accountId}/containers/{containerId}/folders/{folderId}"
  method = "GET"
  host = ["https://www.googleapis.com"]
  whitelist = ["accountId", "containerId", "fingerprint", "folderId", "name"]
  concurrent_calls = 1
  [backends.mapping]
    accountId = "accountId"
    containerId = "containerId"
    fingerprint = "fingerprint"
    folderId = "folderId"
    name = "name"
  [backends.extra_config]
    hosts = ["https://www.googleapis.com"]
    schemes = ["https"]

[[backends]]
  group = "tag-manager-tagmanager-v1-accounts-accountid-containers-containerid-folders-folderid-entities"
  slug = "tag-manager-v1-tagmanager-v1-accounts-accountid-containers-containerid-folders-folderid-entities"
  url_pattern = "/tagmanager/v1/accounts/{accountId}/containers/{containerId}/folders/{folderId}/entities"
  method = "GET"
  host = ["https://www.googleapis.com"]
  whitelist = ["tag", "trigger", "variable"]
  concurrent_calls = 1
  [backends.mapping]
    tag = "tag"
    trigger = "trigger"
    variable = "variable"
  [backends.extra_config]
    hosts = ["https://www.googleapis.com"]
    schemes = ["https"]

[[backends]]
  group = "tag-manager-tagmanager-v1-accounts-accountid-containers-containerid-tags"
  slug = "tag-manager-v1-tagmanager-v1-accounts-accountid-containers-containerid-tags"
  url_pattern = "/tagmanager/v1/accounts/{accountId}/containers/{containerId}/tags"
  method = "GET"
  host = ["https://www.googleapis.com"]
  whitelist = ["tags"]
  concurrent_calls = 1
  [backends.mapping]
    tags = "tags"
  [backends.extra_config]
    hosts = ["https://www.googleapis.com"]
    schemes = ["https"]

[[backends]]
  group = "tag-manager-tagmanager-v1-accounts-accountid-containers-containerid-tags-tagid"
  slug = "tag-manager-v1-tagmanager-v1-accounts-accountid-containers-containerid-tags-tagid"
  url_pattern = "/tagmanager/v1/accounts/{accountId}/containers/{containerId}/tags/{tagId}"
  method = "GET"
  host = ["https://www.googleapis.com"]
  whitelist = ["accountId", "blockingRuleId", "blockingTriggerId", "containerId", "fingerprint", "firingRuleId", "firingTriggerId", "liveOnly", "name", "notes", "parameter", "parentFolderId", "scheduleEndMs", "scheduleStartMs", "setupTag", "tagFiringOption", "tagId", "teardownTag", "type"]
  concurrent_calls = 1
  [backends.mapping]
    accountId = "accountId"
    blockingRuleId = "blockingRuleId"
    blockingTriggerId = "blockingTriggerId"
    containerId = "containerId"
    fingerprint = "fingerprint"
    firingRuleId = "firingRuleId"
    firingTriggerId = "firingTriggerId"
    liveOnly = "liveOnly"
    name = "name"
    notes = "notes"
    parameter = "parameter"
    parentFolderId = "parentFolderId"
    scheduleEndMs = "scheduleEndMs"
    scheduleStartMs = "scheduleStartMs"
    setupTag = "setupTag"
    tagFiringOption = "tagFiringOption"
    tagId = "tagId"
    teardownTag = "teardownTag"
    type = "type"
  [backends.extra_config]
    hosts = ["https://www.googleapis.com"]
    schemes = ["https"]

[[backends]]
  group = "tag-manager-tagmanager-v1-accounts-accountid-containers-containerid-triggers"
  slug = "tag-manager-v1-tagmanager-v1-accounts-accountid-containers-containerid-triggers"
  url_pattern = "/tagmanager/v1/accounts/{accountId}/containers/{containerId}/triggers"
  method = "GET"
  host = ["https://www.googleapis.com"]
  whitelist = ["triggers"]
  concurrent_calls = 1
  [backends.mapping]
    triggers = "triggers"
  [backends.extra_config]
    hosts = ["https://www.googleapis.com"]
    schemes = ["https"]

[[backends]]
  group = "tag-manager-tagmanager-v1-accounts-accountid-containers-containerid-triggers-triggerid"
  slug = "tag-manager-v1-tagmanager-v1-accounts-accountid-containers-containerid-triggers-triggerid"
  url_pattern = "/tagmanager/v1/accounts/{accountId}/containers/{containerId}/triggers/{triggerId}"
  method = "GET"
  host = ["https://www.googleapis.com"]
  whitelist = ["accountId", "autoEventFilter", "containerId", "customEventFilter", "filter", "fingerprint", "name", "parentFolderId", "triggerId", "type"]
  concurrent_calls = 1
  [backends.mapping]
    accountId = "accountId"
    autoEventFilter = "autoEventFilter"
    containerId = "containerId"
    customEventFilter = "customEventFilter"
    filter = "filter"
    fingerprint = "fingerprint"
    name = "name"
    parentFolderId = "parentFolderId"
    triggerId = "triggerId"
    type = "type"
  [backends.extra_config]
    hosts = ["https://www.googleapis.com"]
    schemes = ["https"]

[[backends]]
  group = "tag-manager-tagmanager-v1-accounts-accountid-containers-containerid-variables"
  slug = "tag-manager-v1-tagmanager-v1-accounts-accountid-containers-containerid-variables"
  url_pattern = "/tagmanager/v1/accounts/{accountId}/containers/{containerId}/variables"
  method = "GET"
  host = ["https://www.googleapis.com"]
  whitelist = ["variables"]
  concurrent_calls = 1
  [backends.mapping]
    variables = "variables"
  [backends.extra_config]
    hosts = ["https://www.googleapis.com"]
    schemes = ["https"]

[[backends]]
  group = "tag-manager-tagmanager-v1-accounts-accountid-containers-containerid-variables-variableid"
  slug = "tag-manager-v1-tagmanager-v1-accounts-accountid-containers-containerid-variables-variableid"
  url_pattern = "/tagmanager/v1/accounts/{accountId}/containers/{containerId}/variables/{variableId}"
  method = "GET"
  host = ["https://www.googleapis.com"]
  whitelist = ["accountId", "containerId", "disablingTriggerId", "enablingTriggerId", "fingerprint", "name", "notes", "parameter", "parentFolderId", "scheduleEndMs", "scheduleStartMs", "type", "variableId"]
  concurrent_calls = 1
  [backends.mapping]
    accountId = "accountId"
    containerId = "containerId"
    disablingTriggerId = "disablingTriggerId"
    enablingTriggerId = "enablingTriggerId"
    fingerprint = "fingerprint"
    name = "name"
    notes = "notes"
    parameter = "parameter"
    parentFolderId = "parentFolderId"
    scheduleEndMs = "scheduleEndMs"
    scheduleStartMs = "scheduleStartMs"
    type = "type"
    variableId = "variableId"
  [backends.extra_config]
    hosts = ["https://www.googleapis.com"]
    schemes = ["https"]

[[backends]]
  group = "tag-manager-tagmanager-v1-accounts-accountid-containers-containerid-versions"
  slug = "tag-manager-v1-tagmanager-v1-accounts-accountid-containers-containerid-versions"
  url_pattern = "/tagmanager/v1/accounts/{accountId}/containers/{containerId}/versions"
  method = "GET"
  host = ["https://www.googleapis.com"]
  whitelist = ["containerVersion", "containerVersionHeader"]
  concurrent_calls = 1
  [backends.mapping]
    containerVersion = "containerVersion"
    containerVersionHeader = "containerVersionHeader"
  [backends.extra_config]
    hosts = ["https://www.googleapis.com"]
    schemes = ["https"]

[[backends]]
  group = "tag-manager-tagmanager-v1-accounts-accountid-containers-containerid-versions-containerversionid"
  slug = "tag-manager-v1-tagmanager-v1-accounts-accountid-containers-containerid-versions-containerversionid"
  url_pattern = "/tagmanager/v1/accounts/{accountId}/containers/{containerId}/versions/{containerVersionId}"
  method = "GET"
  host = ["https://www.googleapis.com"]
  whitelist = ["accountId", "containerId", "containerVersionId", "deleted", "fingerprint", "folder", "macro", "name", "notes", "rule", "tag", "trigger", "variable"]
  concurrent_calls = 1
  [backends.mapping]
    accountId = "accountId"
    containerId = "containerId"
    containerVersionId = "containerVersionId"
    deleted = "deleted"
    fingerprint = "fingerprint"
    folder = "folder"
    macro = "macro"
    name = "name"
    notes = "notes"
    rule = "rule"
    tag = "tag"
    trigger = "trigger"
    variable = "variable"
  [backends.extra_config]
    hosts = ["https://www.googleapis.com"]
    schemes = ["https"]

[[backends]]
  group = "tag-manager-tagmanager-v1-accounts-accountid-containers-containerid-versions-containerversionid-publish"
  slug = "tag-manager-v1-tagmanager-v1-accounts-accountid-containers-containerid-versions-containerversionid-publish"
  url_pattern = "/tagmanager/v1/accounts/{accountId}/containers/{containerId}/versions/{containerVersionId}/publish"
  method = "POST"
  host = ["https://www.googleapis.com"]
  whitelist = ["compilerError"]
  concurrent_calls = 1
  [backends.mapping]
    compilerError = "compilerError"
  [backends.extra_config]
    hosts = ["https://www.googleapis.com"]
    schemes = ["https"]

[[backends]]
  group = "tag-manager-tagmanager-v1-accounts-accountid-containers-containerid-versions-containerversionid-restore"
  slug = "tag-manager-v1-tagmanager-v1-accounts-accountid-containers-containerid-versions-containerversionid-restore"
  url_pattern = "/tagmanager/v1/accounts/{accountId}/containers/{containerId}/versions/{containerVersionId}/restore"
  method = "POST"
  host = ["https://www.googleapis.com"]
  whitelist = ["accountId", "containerId", "containerVersionId", "deleted", "fingerprint", "folder", "macro", "name", "notes", "rule", "tag", "trigger", "variable"]
  concurrent_calls = 1
  [backends.mapping]
    accountId = "accountId"
    containerId = "containerId"
    containerVersionId = "containerVersionId"
    deleted = "deleted"
    fingerprint = "fingerprint"
    folder = "folder"
    macro = "macro"
    name = "name"
    notes = "notes"
    rule = "rule"
    tag = "tag"
    trigger = "trigger"
    variable = "variable"
  [backends.extra_config]
    hosts = ["https://www.googleapis.com"]
    schemes = ["https"]

[[backends]]
  group = "tag-manager-tagmanager-v1-accounts-accountid-containers-containerid-versions-containerversionid-undelete"
  slug = "tag-manager-v1-tagmanager-v1-accounts-accountid-containers-containerid-versions-containerversionid-undelete"
  url_pattern = "/tagmanager/v1/accounts/{accountId}/containers/{containerId}/versions/{containerVersionId}/undelete"
  method = "POST"
  host = ["https://www.googleapis.com"]
  whitelist = ["accountId", "containerId", "containerVersionId", "deleted", "fingerprint", "folder", "macro", "name", "notes", "rule", "tag", "trigger", "variable"]
  concurrent_calls = 1
  [backends.mapping]
    accountId = "accountId"
    containerId = "containerId"
    containerVersionId = "containerVersionId"
    deleted = "deleted"
    fingerprint = "fingerprint"
    folder = "folder"
    macro = "macro"
    name = "name"
    notes = "notes"
    rule = "rule"
    tag = "tag"
    trigger = "trigger"
    variable = "variable"
  [backends.extra_config]
    hosts = ["https://www.googleapis.com"]
    schemes = ["https"]

[[backends]]
  group = "tag-manager-tagmanager-v1-accounts-accountid-permissions"
  slug = "tag-manager-v1-tagmanager-v1-accounts-accountid-permissions"
  url_pattern = "/tagmanager/v1/accounts/{accountId}/permissions"
  method = "GET"
  host = ["https://www.googleapis.com"]
  whitelist = ["userAccess"]
  concurrent_calls = 1
  [backends.mapping]
    userAccess = "userAccess"
  [backends.extra_config]
    hosts = ["https://www.googleapis.com"]
    schemes = ["https"]

[[backends]]
  group = "tag-manager-tagmanager-v1-accounts-accountid-permissions-permissionid"
  slug = "tag-manager-v1-tagmanager-v1-accounts-accountid-permissions-permissionid"
  url_pattern = "/tagmanager/v1/accounts/{accountId}/permissions/{permissionId}"
  method = "GET"
  host = ["https://www.googleapis.com"]
  whitelist = ["accountId", "containerAccess", "emailAddress", "permissionId"]
  concurrent_calls = 1
  [backends.mapping]
    accountId = "accountId"
    containerAccess = "containerAccess"
    emailAddress = "emailAddress"
    permissionId = "permissionId"
  [backends.extra_config]
    hosts = ["https://www.googleapis.com"]
    schemes = ["https"]
