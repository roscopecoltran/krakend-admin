syntax = "proto3";

import "google/protobuf/empty.proto";

import "google/api/annotations.proto";

package adsensemanagement;

message GetAccountsRequest {
    alt alt = 1;
    string fields = 2;
    string key = 3;
    // The maximum number of accounts to include in the response, used for paging.
    int32 maxResults = 4;
    string oauth_token = 5;
    // A continuation token, used to page through accounts. To retrieve the next page, set this parameter to the value of "nextPageToken" from the previous response.
    string pageToken = 6;
    boolean prettyPrint = 7;
    string quotaUser = 8;
    string userIp = 9;
}

message GetAccountsAccountIdRequest {
    // Account to get information about.
    string accountId = 1;
    alt alt = 2;
    string fields = 3;
    string key = 4;
    string oauth_token = 5;
    boolean prettyPrint = 6;
    string quotaUser = 7;
    // Whether the tree of sub accounts should be returned.
    bool tree = 8;
    string userIp = 9;
}

message GetAccountsAccountIdAdclientsRequest {
    // Account for which to list ad clients.
    string accountId = 1;
    alt alt = 2;
    string fields = 3;
    string key = 4;
    // The maximum number of ad clients to include in the response, used for paging.
    int32 maxResults = 5;
    string oauth_token = 6;
    // A continuation token, used to page through ad clients. To retrieve the next page, set this parameter to the value of "nextPageToken" from the previous response.
    string pageToken = 7;
    boolean prettyPrint = 8;
    string quotaUser = 9;
    string userIp = 10;
}

message GetAccountsAccountIdAdclientsAdClientIdAdunitsRequest {
    // Account to which the ad client belongs.
    string accountId = 1;
    // Ad client for which to list ad units.
    string adClientId = 2;
    alt alt = 3;
    string fields = 4;
    // Whether to include inactive ad units. Default: true.
    bool includeInactive = 5;
    string key = 6;
    // The maximum number of ad units to include in the response, used for paging.
    int32 maxResults = 7;
    string oauth_token = 8;
    // A continuation token, used to page through ad units. To retrieve the next page, set this parameter to the value of "nextPageToken" from the previous response.
    string pageToken = 9;
    boolean prettyPrint = 10;
    string quotaUser = 11;
    string userIp = 12;
}

message GetAccountsAccountIdAdclientsAdClientIdAdunitsAdUnitIdRequest {
    // Account to which the ad client belongs.
    string accountId = 1;
    // Ad client for which to get the ad unit.
    string adClientId = 2;
    // Ad unit to retrieve.
    string adUnitId = 3;
    alt alt = 4;
    string fields = 5;
    string key = 6;
    string oauth_token = 7;
    boolean prettyPrint = 8;
    string quotaUser = 9;
    string userIp = 10;
}

message GetAccountsAccountIdAdclientsAdClientIdAdunitsAdUnitIdAdcodeRequest {
    // Account which contains the ad client.
    string accountId = 1;
    // Ad client with contains the ad unit.
    string adClientId = 2;
    // Ad unit to get the code for.
    string adUnitId = 3;
    alt alt = 4;
    string fields = 5;
    string key = 6;
    string oauth_token = 7;
    boolean prettyPrint = 8;
    string quotaUser = 9;
    string userIp = 10;
}

message GetAccountsAccountIdAdclientsAdClientIdAdunitsAdUnitIdCustomchannelsRequest {
    // Account to which the ad client belongs.
    string accountId = 1;
    // Ad client which contains the ad unit.
    string adClientId = 2;
    // Ad unit for which to list custom channels.
    string adUnitId = 3;
    alt alt = 4;
    string fields = 5;
    string key = 6;
    // The maximum number of custom channels to include in the response, used for paging.
    int32 maxResults = 7;
    string oauth_token = 8;
    // A continuation token, used to page through custom channels. To retrieve the next page, set this parameter to the value of "nextPageToken" from the previous response.
    string pageToken = 9;
    boolean prettyPrint = 10;
    string quotaUser = 11;
    string userIp = 12;
}

message GetAccountsAccountIdAdclientsAdClientIdCustomchannelsRequest {
    // Account to which the ad client belongs.
    string accountId = 1;
    // Ad client for which to list custom channels.
    string adClientId = 2;
    alt alt = 3;
    string fields = 4;
    string key = 5;
    // The maximum number of custom channels to include in the response, used for paging.
    int32 maxResults = 6;
    string oauth_token = 7;
    // A continuation token, used to page through custom channels. To retrieve the next page, set this parameter to the value of "nextPageToken" from the previous response.
    string pageToken = 8;
    boolean prettyPrint = 9;
    string quotaUser = 10;
    string userIp = 11;
}

message GetAccountsAccountIdAdclientsAdClientIdCustomchannelsCustomChannelIdRequest {
    // Account to which the ad client belongs.
    string accountId = 1;
    // Ad client which contains the custom channel.
    string adClientId = 2;
    alt alt = 3;
    // Custom channel to retrieve.
    string customChannelId = 4;
    string fields = 5;
    string key = 6;
    string oauth_token = 7;
    boolean prettyPrint = 8;
    string quotaUser = 9;
    string userIp = 10;
}

message GetAccountsAccountIdAdclientsAdClientIdCustomchannelsCustomChannelIdAdunitsRequest {
    // Account to which the ad client belongs.
    string accountId = 1;
    // Ad client which contains the custom channel.
    string adClientId = 2;
    alt alt = 3;
    // Custom channel for which to list ad units.
    string customChannelId = 4;
    string fields = 5;
    // Whether to include inactive ad units. Default: true.
    bool includeInactive = 6;
    string key = 7;
    // The maximum number of ad units to include in the response, used for paging.
    int32 maxResults = 8;
    string oauth_token = 9;
    // A continuation token, used to page through ad units. To retrieve the next page, set this parameter to the value of "nextPageToken" from the previous response.
    string pageToken = 10;
    boolean prettyPrint = 11;
    string quotaUser = 12;
    string userIp = 13;
}

message GetAccountsAccountIdAdclientsAdClientIdUrlchannelsRequest {
    // Account to which the ad client belongs.
    string accountId = 1;
    // Ad client for which to list URL channels.
    string adClientId = 2;
    alt alt = 3;
    string fields = 4;
    string key = 5;
    // The maximum number of URL channels to include in the response, used for paging.
    int32 maxResults = 6;
    string oauth_token = 7;
    // A continuation token, used to page through URL channels. To retrieve the next page, set this parameter to the value of "nextPageToken" from the previous response.
    string pageToken = 8;
    boolean prettyPrint = 9;
    string quotaUser = 10;
    string userIp = 11;
}

message GetAccountsAccountIdAlertsRequest {
    // Account for which to retrieve the alerts.
    string accountId = 1;
    alt alt = 2;
    string fields = 3;
    string key = 4;
    // The locale to use for translating alert messages. The account locale will be used if this is not supplied. The AdSense default (English) will be used if the supplied locale is invalid or unsupported.
    string locale = 5;
    string oauth_token = 6;
    boolean prettyPrint = 7;
    string quotaUser = 8;
    string userIp = 9;
}

message DeleteAccountsAccountIdAlertsAlertIdRequest {
    // Account which contains the ad unit.
    string accountId = 1;
    // Alert to delete.
    string alertId = 2;
    alt alt = 3;
    string fields = 4;
    string key = 5;
    string oauth_token = 6;
    boolean prettyPrint = 7;
    string quotaUser = 8;
    string userIp = 9;
}

message GetAccountsAccountIdPaymentsRequest {
    // Account for which to retrieve the payments.
    string accountId = 1;
    alt alt = 2;
    string fields = 3;
    string key = 4;
    string oauth_token = 5;
    boolean prettyPrint = 6;
    string quotaUser = 7;
    string userIp = 8;
}

message GetAccountsAccountIdReportsRequest {
    // Account upon which to report.
    string accountId = 1;
    alt alt = 2;
    // Optional currency to use when reporting on monetary metrics. Defaults to the account's currency if not set.
    string currency = 3;
    // Dimensions to base the report on.
    repeated string dimension = 4;
    // End of the date range to report on in "YYYY-MM-DD" format, inclusive.
    string endDate = 5;
    string fields = 6;
    // Filters to be run on the report.
    repeated string filter = 7;
    string key = 8;
    // Optional locale to use for translating report output to a local language. Defaults to "en_US" if not specified.
    string locale = 9;
    // The maximum number of rows of report data to return.
    int32 maxResults = 10;
    // Numeric columns to include in the report.
    repeated string metric = 11;
    string oauth_token = 12;
    boolean prettyPrint = 13;
    string quotaUser = 14;
    // The name of a dimension or metric to sort the resulting report on, optionally prefixed with "+" to sort ascending or "-" to sort descending. If no prefix is specified, the column is sorted ascending.
    repeated string sort = 15;
    // Start of the date range to report on in "YYYY-MM-DD" format, inclusive.
    string startDate = 16;
    // Index of the first row of report data to return.
    int32 startIndex = 17;
    // Whether the report should be generated in the AdSense account's local timezone. If false default PST/PDT timezone will be used.
    bool useTimezoneReporting = 18;
    string userIp = 19;
}

message GetAccountsAccountIdReportsSavedRequest {
    // Account to which the saved reports belong.
    string accountId = 1;
    alt alt = 2;
    string fields = 3;
    string key = 4;
    // The maximum number of saved reports to include in the response, used for paging.
    int32 maxResults = 5;
    string oauth_token = 6;
    // A continuation token, used to page through saved reports. To retrieve the next page, set this parameter to the value of "nextPageToken" from the previous response.
    string pageToken = 7;
    boolean prettyPrint = 8;
    string quotaUser = 9;
    string userIp = 10;
}

message GetAccountsAccountIdReportsSavedReportIdRequest {
    // Account to which the saved reports belong.
    string accountId = 1;
    alt alt = 2;
    string fields = 3;
    string key = 4;
    // Optional locale to use for translating report output to a local language. Defaults to "en_US" if not specified.
    string locale = 5;
    // The maximum number of rows of report data to return.
    int32 maxResults = 6;
    string oauth_token = 7;
    boolean prettyPrint = 8;
    string quotaUser = 9;
    // The saved report to retrieve.
    string savedReportId = 10;
    // Index of the first row of report data to return.
    int32 startIndex = 11;
    string userIp = 12;
}

message GetAccountsAccountIdSavedadstylesRequest {
    // Account for which to list saved ad styles.
    string accountId = 1;
    alt alt = 2;
    string fields = 3;
    string key = 4;
    // The maximum number of saved ad styles to include in the response, used for paging.
    int32 maxResults = 5;
    string oauth_token = 6;
    // A continuation token, used to page through saved ad styles. To retrieve the next page, set this parameter to the value of "nextPageToken" from the previous response.
    string pageToken = 7;
    boolean prettyPrint = 8;
    string quotaUser = 9;
    string userIp = 10;
}

message GetAccountsAccountIdSavedadstylesSavedAdStyleIdRequest {
    // Account for which to get the saved ad style.
    string accountId = 1;
    alt alt = 2;
    string fields = 3;
    string key = 4;
    string oauth_token = 5;
    boolean prettyPrint = 6;
    string quotaUser = 7;
    // Saved ad style to retrieve.
    string savedAdStyleId = 8;
    string userIp = 9;
}

message GetAdclientsRequest {
    alt alt = 1;
    string fields = 2;
    string key = 3;
    // The maximum number of ad clients to include in the response, used for paging.
    int32 maxResults = 4;
    string oauth_token = 5;
    // A continuation token, used to page through ad clients. To retrieve the next page, set this parameter to the value of "nextPageToken" from the previous response.
    string pageToken = 6;
    boolean prettyPrint = 7;
    string quotaUser = 8;
    string userIp = 9;
}

message GetAdclientsAdClientIdAdunitsRequest {
    // Ad client for which to list ad units.
    string adClientId = 1;
    alt alt = 2;
    string fields = 3;
    // Whether to include inactive ad units. Default: true.
    bool includeInactive = 4;
    string key = 5;
    // The maximum number of ad units to include in the response, used for paging.
    int32 maxResults = 6;
    string oauth_token = 7;
    // A continuation token, used to page through ad units. To retrieve the next page, set this parameter to the value of "nextPageToken" from the previous response.
    string pageToken = 8;
    boolean prettyPrint = 9;
    string quotaUser = 10;
    string userIp = 11;
}

message GetAdclientsAdClientIdAdunitsAdUnitIdRequest {
    // Ad client for which to get the ad unit.
    string adClientId = 1;
    // Ad unit to retrieve.
    string adUnitId = 2;
    alt alt = 3;
    string fields = 4;
    string key = 5;
    string oauth_token = 6;
    boolean prettyPrint = 7;
    string quotaUser = 8;
    string userIp = 9;
}

message GetAdclientsAdClientIdAdunitsAdUnitIdAdcodeRequest {
    // Ad client with contains the ad unit.
    string adClientId = 1;
    // Ad unit to get the code for.
    string adUnitId = 2;
    alt alt = 3;
    string fields = 4;
    string key = 5;
    string oauth_token = 6;
    boolean prettyPrint = 7;
    string quotaUser = 8;
    string userIp = 9;
}

message GetAdclientsAdClientIdAdunitsAdUnitIdCustomchannelsRequest {
    // Ad client which contains the ad unit.
    string adClientId = 1;
    // Ad unit for which to list custom channels.
    string adUnitId = 2;
    alt alt = 3;
    string fields = 4;
    string key = 5;
    // The maximum number of custom channels to include in the response, used for paging.
    int32 maxResults = 6;
    string oauth_token = 7;
    // A continuation token, used to page through custom channels. To retrieve the next page, set this parameter to the value of "nextPageToken" from the previous response.
    string pageToken = 8;
    boolean prettyPrint = 9;
    string quotaUser = 10;
    string userIp = 11;
}

message GetAdclientsAdClientIdCustomchannelsRequest {
    // Ad client for which to list custom channels.
    string adClientId = 1;
    alt alt = 2;
    string fields = 3;
    string key = 4;
    // The maximum number of custom channels to include in the response, used for paging.
    int32 maxResults = 5;
    string oauth_token = 6;
    // A continuation token, used to page through custom channels. To retrieve the next page, set this parameter to the value of "nextPageToken" from the previous response.
    string pageToken = 7;
    boolean prettyPrint = 8;
    string quotaUser = 9;
    string userIp = 10;
}

message GetAdclientsAdClientIdCustomchannelsCustomChannelIdRequest {
    // Ad client which contains the custom channel.
    string adClientId = 1;
    alt alt = 2;
    // Custom channel to retrieve.
    string customChannelId = 3;
    string fields = 4;
    string key = 5;
    string oauth_token = 6;
    boolean prettyPrint = 7;
    string quotaUser = 8;
    string userIp = 9;
}

message GetAdclientsAdClientIdCustomchannelsCustomChannelIdAdunitsRequest {
    // Ad client which contains the custom channel.
    string adClientId = 1;
    alt alt = 2;
    // Custom channel for which to list ad units.
    string customChannelId = 3;
    string fields = 4;
    // Whether to include inactive ad units. Default: true.
    bool includeInactive = 5;
    string key = 6;
    // The maximum number of ad units to include in the response, used for paging.
    int32 maxResults = 7;
    string oauth_token = 8;
    // A continuation token, used to page through ad units. To retrieve the next page, set this parameter to the value of "nextPageToken" from the previous response.
    string pageToken = 9;
    boolean prettyPrint = 10;
    string quotaUser = 11;
    string userIp = 12;
}

message GetAdclientsAdClientIdUrlchannelsRequest {
    // Ad client for which to list URL channels.
    string adClientId = 1;
    alt alt = 2;
    string fields = 3;
    string key = 4;
    // The maximum number of URL channels to include in the response, used for paging.
    int32 maxResults = 5;
    string oauth_token = 6;
    // A continuation token, used to page through URL channels. To retrieve the next page, set this parameter to the value of "nextPageToken" from the previous response.
    string pageToken = 7;
    boolean prettyPrint = 8;
    string quotaUser = 9;
    string userIp = 10;
}

message GetAlertsRequest {
    alt alt = 1;
    string fields = 2;
    string key = 3;
    // The locale to use for translating alert messages. The account locale will be used if this is not supplied. The AdSense default (English) will be used if the supplied locale is invalid or unsupported.
    string locale = 4;
    string oauth_token = 5;
    boolean prettyPrint = 6;
    string quotaUser = 7;
    string userIp = 8;
}

message DeleteAlertsAlertIdRequest {
    // Alert to delete.
    string alertId = 1;
    alt alt = 2;
    string fields = 3;
    string key = 4;
    string oauth_token = 5;
    boolean prettyPrint = 6;
    string quotaUser = 7;
    string userIp = 8;
}

message GetMetadataDimensionsRequest {
    alt alt = 1;
    string fields = 2;
    string key = 3;
    string oauth_token = 4;
    boolean prettyPrint = 5;
    string quotaUser = 6;
    string userIp = 7;
}

message GetMetadataMetricsRequest {
    alt alt = 1;
    string fields = 2;
    string key = 3;
    string oauth_token = 4;
    boolean prettyPrint = 5;
    string quotaUser = 6;
    string userIp = 7;
}

message GetPaymentsRequest {
    alt alt = 1;
    string fields = 2;
    string key = 3;
    string oauth_token = 4;
    boolean prettyPrint = 5;
    string quotaUser = 6;
    string userIp = 7;
}

message GetReportsRequest {
    // Accounts upon which to report.
    repeated string accountId = 1;
    alt alt = 2;
    // Optional currency to use when reporting on monetary metrics. Defaults to the account's currency if not set.
    string currency = 3;
    // Dimensions to base the report on.
    repeated string dimension = 4;
    // End of the date range to report on in "YYYY-MM-DD" format, inclusive.
    string endDate = 5;
    string fields = 6;
    // Filters to be run on the report.
    repeated string filter = 7;
    string key = 8;
    // Optional locale to use for translating report output to a local language. Defaults to "en_US" if not specified.
    string locale = 9;
    // The maximum number of rows of report data to return.
    int32 maxResults = 10;
    // Numeric columns to include in the report.
    repeated string metric = 11;
    string oauth_token = 12;
    boolean prettyPrint = 13;
    string quotaUser = 14;
    // The name of a dimension or metric to sort the resulting report on, optionally prefixed with "+" to sort ascending or "-" to sort descending. If no prefix is specified, the column is sorted ascending.
    repeated string sort = 15;
    // Start of the date range to report on in "YYYY-MM-DD" format, inclusive.
    string startDate = 16;
    // Index of the first row of report data to return.
    int32 startIndex = 17;
    // Whether the report should be generated in the AdSense account's local timezone. If false default PST/PDT timezone will be used.
    bool useTimezoneReporting = 18;
    string userIp = 19;
}

message GetReportsSavedRequest {
    alt alt = 1;
    string fields = 2;
    string key = 3;
    // The maximum number of saved reports to include in the response, used for paging.
    int32 maxResults = 4;
    string oauth_token = 5;
    // A continuation token, used to page through saved reports. To retrieve the next page, set this parameter to the value of "nextPageToken" from the previous response.
    string pageToken = 6;
    boolean prettyPrint = 7;
    string quotaUser = 8;
    string userIp = 9;
}

message GetReportsSavedReportIdRequest {
    alt alt = 1;
    string fields = 2;
    string key = 3;
    // Optional locale to use for translating report output to a local language. Defaults to "en_US" if not specified.
    string locale = 4;
    // The maximum number of rows of report data to return.
    int32 maxResults = 5;
    string oauth_token = 6;
    boolean prettyPrint = 7;
    string quotaUser = 8;
    // The saved report to retrieve.
    string savedReportId = 9;
    // Index of the first row of report data to return.
    int32 startIndex = 10;
    string userIp = 11;
}

message GetSavedadstylesRequest {
    alt alt = 1;
    string fields = 2;
    string key = 3;
    // The maximum number of saved ad styles to include in the response, used for paging.
    int32 maxResults = 4;
    string oauth_token = 5;
    // A continuation token, used to page through saved ad styles. To retrieve the next page, set this parameter to the value of "nextPageToken" from the previous response.
    string pageToken = 6;
    boolean prettyPrint = 7;
    string quotaUser = 8;
    string userIp = 9;
}

message GetSavedadstylesSavedAdStyleIdRequest {
    alt alt = 1;
    string fields = 2;
    string key = 3;
    string oauth_token = 4;
    boolean prettyPrint = 5;
    string quotaUser = 6;
    // Saved ad style to retrieve.
    string savedAdStyleId = 7;
    string userIp = 8;
}

message Account {
    string creation_time = 1;
    // Unique identifier of this account.
    string id = 2;
    // Kind of resource this is, in this case adsense#account.
    string kind = 3;
    // Name of this account.
    string name = 4;
    // Whether this account is premium.
    bool premium = 5;
    // Sub accounts of the this account.
    repeated Account subAccounts = 6;
    // AdSense timezone of this account.
    string timezone = 7;
}

message Accounts {
    // ETag of this response for caching purposes.
    string etag = 1;
    // The accounts returned in this list response.
    repeated Account items = 2;
    // Kind of list this is, in this case adsense#accounts.
    string kind = 3;
    // Continuation token used to page through accounts. To retrieve the next page of results, set the next request's "pageToken" value to this.
    string nextPageToken = 4;
}

message AdClient {
    // Whether this ad client is opted in to ARC.
    bool arcOptIn = 1;
    // Unique identifier of this ad client.
    string id = 2;
    // Kind of resource this is, in this case adsense#adClient.
    string kind = 3;
    // This ad client's product code, which corresponds to the PRODUCT_CODE report dimension.
    string productCode = 4;
    // Whether this ad client supports being reported on.
    bool supportsReporting = 5;
}

message AdClients {
    // ETag of this response for caching purposes.
    string etag = 1;
    // The ad clients returned in this list response.
    repeated AdClient items = 2;
    // Kind of list this is, in this case adsense#adClients.
    string kind = 3;
    // Continuation token used to page through ad clients. To retrieve the next page of results, set the next request's "pageToken" value to this.
    string nextPageToken = 4;
}

message AdCode {
    // The ad code snippet.
    string adCode = 1;
    // Kind this is, in this case adsense#adCode.
    string kind = 2;
}

message AdStyle {
    // The colors which are included in the style. These are represented as six hexadecimal characters, similar to HTML color codes, but without the leading hash.
    message Colors {
            // The color of the ad background.
    string background = 1;
            // The color of the ad border.
    string border = 2;
            // The color of the ad text.
    string text = 3;
            // The color of the ad title.
    string title = 4;
            // The color of the ad url.
    string url = 5;
    }
    Colors colors = 1;
    // The style of the corners in the ad (deprecated: never populated, ignored).
    string corners = 2;
    // The font which is included in the style.
    message Font {
            // The family of the font.
    string family = 1;
            // The size of the font.
    string size = 2;
    }
    Font font = 3;
    // Kind this is, in this case adsense#adStyle.
    string kind = 4;
}

message AdUnit {
    // Identity code of this ad unit, not necessarily unique across ad clients.
    string code = 1;
    // Settings specific to content ads (AFC) and highend mobile content ads (AFMC - deprecated).
    message ContentAdsSettings {
            // The backup option to be used in instances where no ad is available.
    message BackupOption {
                    // Color to use when type is set to COLOR.
    string color = 1;
                    // Type of the backup option. Possible values are BLANK, COLOR and URL.
    string type = 2;
                    // URL to use when type is set to URL.
    string url = 3;
        }
        BackupOption backupOption = 1;
            // Size of this ad unit.
    string size = 2;
            // Type of this ad unit.
    string type = 3;
    }
    ContentAdsSettings contentAdsSettings = 2;
    // Custom style information specific to this ad unit.
    AdStyle customStyle = 3;
    // Settings specific to feed ads (AFF) - deprecated.
    message FeedAdsSettings {
            // The position of the ads relative to the feed entries.
    string adPosition = 1;
            // The frequency at which ads should appear in the feed (i.e. every N entries).
    int32 frequency = 2;
            // The minimum length an entry should be in order to have attached ads.
    int32 minimumWordCount = 3;
            // The type of ads which should appear.
    string type = 4;
    }
    FeedAdsSettings feedAdsSettings = 4;
    // Unique identifier of this ad unit. This should be considered an opaque identifier; it is not safe to rely on it being in any particular format.
    string id = 5;
    // Kind of resource this is, in this case adsense#adUnit.
    string kind = 6;
    // Settings specific to WAP mobile content ads (AFMC) - deprecated.
    message MobileContentAdsSettings {
            // The markup language to use for this ad unit.
    string markupLanguage = 1;
            // The scripting language to use for this ad unit.
    string scriptingLanguage = 2;
            // Size of this ad unit.
    string size = 3;
            // Type of this ad unit.
    string type = 4;
    }
    MobileContentAdsSettings mobileContentAdsSettings = 7;
    // Name of this ad unit.
    string name = 8;
    // ID of the saved ad style which holds this ad unit's style information.
    string savedStyleId = 9;
    // Status of this ad unit. Possible values are:
    // NEW: Indicates that the ad unit was created within the last seven days and does not yet have any activity associated with it.
    // 
    // ACTIVE: Indicates that there has been activity on this ad unit in the last seven days.
    // 
    // INACTIVE: Indicates that there has been no activity on this ad unit in the last seven days.
    string status = 10;
}

message AdUnits {
    // ETag of this response for caching purposes.
    string etag = 1;
    // The ad units returned in this list response.
    repeated AdUnit items = 2;
    // Kind of list this is, in this case adsense#adUnits.
    string kind = 3;
    // Continuation token used to page through ad units. To retrieve the next page of results, set the next request's "pageToken" value to this.
    string nextPageToken = 4;
}

message AdsenseReportsGenerateResponse {
    // The averages of the report. This is the same length as any other row in the report; cells corresponding to dimension columns are empty.
    repeated string averages = 1;
    // The requested end date in yyyy-mm-dd format.
    string endDate = 2;
    // The header information of the columns requested in the report. This is a list of headers; one for each dimension in the request, followed by one for each metric in the request.
    message Header {
            // The currency of this column. Only present if the header type is METRIC_CURRENCY.
    string currency = 1;
            // The name of the header.
    string name = 2;
            // The type of the header; one of DIMENSION, METRIC_TALLY, METRIC_RATIO, or METRIC_CURRENCY.
    string type = 3;
    }
    repeated Header headers = 3;
    // Kind this is, in this case adsense#report.
    string kind = 4;
    // The output rows of the report. Each row is a list of cells; one for each dimension in the request, followed by one for each metric in the request. The dimension cells contain strings, and the metric cells contain numbers.
    message Row {
    }
    repeated Row rows = 5;
    // The requested start date in yyyy-mm-dd format.
    string startDate = 6;
    // The total number of rows matched by the report request. Fewer rows may be returned in the response due to being limited by the row count requested or the report row limit.
    string totalMatchedRows = 7;
    // The totals of the report. This is the same length as any other row in the report; cells corresponding to dimension columns are empty.
    repeated string totals = 8;
    // Any warnings associated with generation of the report.
    repeated string warnings = 9;
}

message Alert {
    // Unique identifier of this alert. This should be considered an opaque identifier; it is not safe to rely on it being in any particular format.
    string id = 1;
    // Whether this alert can be dismissed.
    bool isDismissible = 2;
    // Kind of resource this is, in this case adsense#alert.
    string kind = 3;
    // The localized alert message.
    string message = 4;
    // Severity of this alert. Possible values: INFO, WARNING, SEVERE.
    string severity = 5;
    // Type of this alert. Possible values: SELF_HOLD, MIGRATED_TO_BILLING3, ADDRESS_PIN_VERIFICATION, PHONE_PIN_VERIFICATION, CORPORATE_ENTITY, GRAYLISTED_PUBLISHER, API_HOLD.
    string type = 6;
}

message Alerts {
    // The alerts returned in this list response.
    repeated Alert items = 1;
    // Kind of list this is, in this case adsense#alerts.
    string kind = 2;
}

message CustomChannel {
    // Code of this custom channel, not necessarily unique across ad clients.
    string code = 1;
    // Unique identifier of this custom channel. This should be considered an opaque identifier; it is not safe to rely on it being in any particular format.
    string id = 2;
    // Kind of resource this is, in this case adsense#customChannel.
    string kind = 3;
    // Name of this custom channel.
    string name = 4;
    // The targeting information of this custom channel, if activated.
    message TargetingInfo {
            // The name used to describe this channel externally.
    string adsAppearOn = 1;
            // The external description of the channel.
    string description = 2;
            // The locations in which ads appear. (Only valid for content and mobile content ads (deprecated)). Acceptable values for content ads are: TOP_LEFT, TOP_CENTER, TOP_RIGHT, MIDDLE_LEFT, MIDDLE_CENTER, MIDDLE_RIGHT, BOTTOM_LEFT, BOTTOM_CENTER, BOTTOM_RIGHT, MULTIPLE_LOCATIONS. Acceptable values for mobile content ads (deprecated) are: TOP, MIDDLE, BOTTOM, MULTIPLE_LOCATIONS.
    string location = 3;
            // The language of the sites ads will be displayed on.
    string siteLanguage = 4;
    }
    TargetingInfo targetingInfo = 5;
}

message CustomChannels {
    // ETag of this response for caching purposes.
    string etag = 1;
    // The custom channels returned in this list response.
    repeated CustomChannel items = 2;
    // Kind of list this is, in this case adsense#customChannels.
    string kind = 3;
    // Continuation token used to page through custom channels. To retrieve the next page of results, set the next request's "pageToken" value to this.
    string nextPageToken = 4;
}

message Metadata {
    repeated ReportingMetadataEntry items = 1;
    // Kind of list this is, in this case adsense#metadata.
    string kind = 2;
}

message Payment {
    // Unique identifier of this Payment.
    string id = 1;
    // Kind of resource this is, in this case adsense#payment.
    string kind = 2;
    // The amount to be paid.
    string paymentAmount = 3;
    // The currency code for the amount to be paid.
    string paymentAmountCurrencyCode = 4;
    // The date this payment was/will be credited to the user, or none if the payment threshold has not been met.
    string paymentDate = 5;
}

message Payments {
    // The list of Payments for the account. One or both of a) the account's most recent payment; and b) the account's upcoming payment.
    repeated Payment items = 1;
    // Kind of list this is, in this case adsense#payments.
    string kind = 2;
}

message ReportingMetadataEntry {
    // For metrics this is a list of dimension IDs which the metric is compatible with, for dimensions it is a list of compatibility groups the dimension belongs to.
    repeated string compatibleDimensions = 1;
    // The names of the metrics the dimension or metric this reporting metadata entry describes is compatible with.
    repeated string compatibleMetrics = 2;
    // Unique identifier of this reporting metadata entry, corresponding to the name of the appropriate dimension or metric.
    string id = 3;
    // Kind of resource this is, in this case adsense#reportingMetadataEntry.
    string kind = 4;
    // The names of the dimensions which the dimension or metric this reporting metadata entry describes requires to also be present in order for the report to be valid. Omitting these will not cause an error or warning, but may result in data which cannot be correctly interpreted.
    repeated string requiredDimensions = 5;
    // The names of the metrics which the dimension or metric this reporting metadata entry describes requires to also be present in order for the report to be valid. Omitting these will not cause an error or warning, but may result in data which cannot be correctly interpreted.
    repeated string requiredMetrics = 6;
    // The codes of the projects supported by the dimension or metric this reporting metadata entry describes.
    repeated string supportedProducts = 7;
}

message SavedAdStyle {
    // The AdStyle itself.
    AdStyle adStyle = 1;
    // Unique identifier of this saved ad style. This should be considered an opaque identifier; it is not safe to rely on it being in any particular format.
    string id = 2;
    // Kind of resource this is, in this case adsense#savedAdStyle.
    string kind = 3;
    // The user selected name of this SavedAdStyle.
    string name = 4;
}

message SavedAdStyles {
    // ETag of this response for caching purposes.
    string etag = 1;
    // The saved ad styles returned in this list response.
    repeated SavedAdStyle items = 2;
    // Kind of list this is, in this case adsense#savedAdStyles.
    string kind = 3;
    // Continuation token used to page through ad units. To retrieve the next page of results, set the next request's "pageToken" value to this.
    string nextPageToken = 4;
}

message SavedReport {
    // Unique identifier of this saved report.
    string id = 1;
    // Kind of resource this is, in this case adsense#savedReport.
    string kind = 2;
    // This saved report's name.
    string name = 3;
}

message SavedReports {
    // ETag of this response for caching purposes.
    string etag = 1;
    // The saved reports returned in this list response.
    repeated SavedReport items = 2;
    // Kind of list this is, in this case adsense#savedReports.
    string kind = 3;
    // Continuation token used to page through saved reports. To retrieve the next page of results, set the next request's "pageToken" value to this.
    string nextPageToken = 4;
}

message UrlChannel {
    // Unique identifier of this URL channel. This should be considered an opaque identifier; it is not safe to rely on it being in any particular format.
    string id = 1;
    // Kind of resource this is, in this case adsense#urlChannel.
    string kind = 2;
    // URL Pattern of this URL channel. Does not include "http://" or "https://". Example: www.example.com/home
    string urlPattern = 3;
}

message UrlChannels {
    // ETag of this response for caching purposes.
    string etag = 1;
    // The URL channels returned in this list response.
    repeated UrlChannel items = 2;
    // Kind of list this is, in this case adsense#urlChannels.
    string kind = 3;
    // Continuation token used to page through URL channels. To retrieve the next page of results, set the next request's "pageToken" value to this.
    string nextPageToken = 4;
}

enum Alt {
    CSV = 0;
    JSON = 1;
}

service AdSenseManagementService {
    // List all accounts available to this AdSense account.
    rpc GetAccounts(GetAccountsRequest) returns (Accounts) {
      option (google.api.http) = {
        get: "/adsense/v1.4/accounts"
      };
    }
    // Get information about the selected AdSense account.
    rpc GetAccountsAccountId(GetAccountsAccountIdRequest) returns (Account) {
      option (google.api.http) = {
        get: "/adsense/v1.4/accounts/{accountId}"
      };
    }
    // List all ad clients in the specified account.
    rpc GetAccountsAccountIdAdclients(GetAccountsAccountIdAdclientsRequest) returns (AdClients) {
      option (google.api.http) = {
        get: "/adsense/v1.4/accounts/{accountId}/adclients"
      };
    }
    // List all ad units in the specified ad client for the specified account.
    rpc GetAccountsAccountIdAdclientsAdClientIdAdunits(GetAccountsAccountIdAdclientsAdClientIdAdunitsRequest) returns (AdUnits) {
      option (google.api.http) = {
        get: "/adsense/v1.4/accounts/{accountId}/adclients/{adClientId}/adunits"
      };
    }
    // Gets the specified ad unit in the specified ad client for the specified account.
    rpc GetAccountsAccountIdAdclientsAdClientIdAdunitsAdUnitId(GetAccountsAccountIdAdclientsAdClientIdAdunitsAdUnitIdRequest) returns (AdUnit) {
      option (google.api.http) = {
        get: "/adsense/v1.4/accounts/{accountId}/adclients/{adClientId}/adunits/{adUnitId}"
      };
    }
    // Get ad code for the specified ad unit.
    rpc GetAccountsAccountIdAdclientsAdClientIdAdunitsAdUnitIdAdcode(GetAccountsAccountIdAdclientsAdClientIdAdunitsAdUnitIdAdcodeRequest) returns (AdCode) {
      option (google.api.http) = {
        get: "/adsense/v1.4/accounts/{accountId}/adclients/{adClientId}/adunits/{adUnitId}/adcode"
      };
    }
    // List all custom channels which the specified ad unit belongs to.
    rpc GetAccountsAccountIdAdclientsAdClientIdAdunitsAdUnitIdCustomchannels(GetAccountsAccountIdAdclientsAdClientIdAdunitsAdUnitIdCustomchannelsRequest) returns (CustomChannels) {
      option (google.api.http) = {
        get: "/adsense/v1.4/accounts/{accountId}/adclients/{adClientId}/adunits/{adUnitId}/customchannels"
      };
    }
    // List all custom channels in the specified ad client for the specified account.
    rpc GetAccountsAccountIdAdclientsAdClientIdCustomchannels(GetAccountsAccountIdAdclientsAdClientIdCustomchannelsRequest) returns (CustomChannels) {
      option (google.api.http) = {
        get: "/adsense/v1.4/accounts/{accountId}/adclients/{adClientId}/customchannels"
      };
    }
    // Get the specified custom channel from the specified ad client for the specified account.
    rpc GetAccountsAccountIdAdclientsAdClientIdCustomchannelsCustomChannelId(GetAccountsAccountIdAdclientsAdClientIdCustomchannelsCustomChannelIdRequest) returns (CustomChannel) {
      option (google.api.http) = {
        get: "/adsense/v1.4/accounts/{accountId}/adclients/{adClientId}/customchannels/{customChannelId}"
      };
    }
    // List all ad units in the specified custom channel.
    rpc GetAccountsAccountIdAdclientsAdClientIdCustomchannelsCustomChannelIdAdunits(GetAccountsAccountIdAdclientsAdClientIdCustomchannelsCustomChannelIdAdunitsRequest) returns (AdUnits) {
      option (google.api.http) = {
        get: "/adsense/v1.4/accounts/{accountId}/adclients/{adClientId}/customchannels/{customChannelId}/adunits"
      };
    }
    // List all URL channels in the specified ad client for the specified account.
    rpc GetAccountsAccountIdAdclientsAdClientIdUrlchannels(GetAccountsAccountIdAdclientsAdClientIdUrlchannelsRequest) returns (UrlChannels) {
      option (google.api.http) = {
        get: "/adsense/v1.4/accounts/{accountId}/adclients/{adClientId}/urlchannels"
      };
    }
    // List the alerts for the specified AdSense account.
    rpc GetAccountsAccountIdAlerts(GetAccountsAccountIdAlertsRequest) returns (Alerts) {
      option (google.api.http) = {
        get: "/adsense/v1.4/accounts/{accountId}/alerts"
      };
    }
    // Dismiss (delete) the specified alert from the specified publisher AdSense account.
    rpc DeleteAccountsAccountIdAlertsAlertId(DeleteAccountsAccountIdAlertsAlertIdRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        delete: "/adsense/v1.4/accounts/{accountId}/alerts/{alertId}"
      };
    }
    // List the payments for the specified AdSense account.
    rpc GetAccountsAccountIdPayments(GetAccountsAccountIdPaymentsRequest) returns (Payments) {
      option (google.api.http) = {
        get: "/adsense/v1.4/accounts/{accountId}/payments"
      };
    }
    // Generate an AdSense report based on the report request sent in the query parameters. Returns the result as JSON; to retrieve output in CSV format specify "alt=csv" as a query parameter.
    rpc GetAccountsAccountIdReports(GetAccountsAccountIdReportsRequest) returns (AdsenseReportsGenerateResponse) {
      option (google.api.http) = {
        get: "/adsense/v1.4/accounts/{accountId}/reports"
      };
    }
    // List all saved reports in the specified AdSense account.
    rpc GetAccountsAccountIdReportsSaved(GetAccountsAccountIdReportsSavedRequest) returns (SavedReports) {
      option (google.api.http) = {
        get: "/adsense/v1.4/accounts/{accountId}/reports/saved"
      };
    }
    // Generate an AdSense report based on the saved report ID sent in the query parameters.
    rpc GetAccountsAccountIdReportsSavedReportId(GetAccountsAccountIdReportsSavedReportIdRequest) returns (AdsenseReportsGenerateResponse) {
      option (google.api.http) = {
        get: "/adsense/v1.4/accounts/{accountId}/reports/{savedReportId}"
      };
    }
    // List all saved ad styles in the specified account.
    rpc GetAccountsAccountIdSavedadstyles(GetAccountsAccountIdSavedadstylesRequest) returns (SavedAdStyles) {
      option (google.api.http) = {
        get: "/adsense/v1.4/accounts/{accountId}/savedadstyles"
      };
    }
    // List a specific saved ad style for the specified account.
    rpc GetAccountsAccountIdSavedadstylesSavedAdStyleId(GetAccountsAccountIdSavedadstylesSavedAdStyleIdRequest) returns (SavedAdStyle) {
      option (google.api.http) = {
        get: "/adsense/v1.4/accounts/{accountId}/savedadstyles/{savedAdStyleId}"
      };
    }
    // List all ad clients in this AdSense account.
    rpc GetAdclients(GetAdclientsRequest) returns (AdClients) {
      option (google.api.http) = {
        get: "/adsense/v1.4/adclients"
      };
    }
    // List all ad units in the specified ad client for this AdSense account.
    rpc GetAdclientsAdClientIdAdunits(GetAdclientsAdClientIdAdunitsRequest) returns (AdUnits) {
      option (google.api.http) = {
        get: "/adsense/v1.4/adclients/{adClientId}/adunits"
      };
    }
    // Gets the specified ad unit in the specified ad client.
    rpc GetAdclientsAdClientIdAdunitsAdUnitId(GetAdclientsAdClientIdAdunitsAdUnitIdRequest) returns (AdUnit) {
      option (google.api.http) = {
        get: "/adsense/v1.4/adclients/{adClientId}/adunits/{adUnitId}"
      };
    }
    // Get ad code for the specified ad unit.
    rpc GetAdclientsAdClientIdAdunitsAdUnitIdAdcode(GetAdclientsAdClientIdAdunitsAdUnitIdAdcodeRequest) returns (AdCode) {
      option (google.api.http) = {
        get: "/adsense/v1.4/adclients/{adClientId}/adunits/{adUnitId}/adcode"
      };
    }
    // List all custom channels which the specified ad unit belongs to.
    rpc GetAdclientsAdClientIdAdunitsAdUnitIdCustomchannels(GetAdclientsAdClientIdAdunitsAdUnitIdCustomchannelsRequest) returns (CustomChannels) {
      option (google.api.http) = {
        get: "/adsense/v1.4/adclients/{adClientId}/adunits/{adUnitId}/customchannels"
      };
    }
    // List all custom channels in the specified ad client for this AdSense account.
    rpc GetAdclientsAdClientIdCustomchannels(GetAdclientsAdClientIdCustomchannelsRequest) returns (CustomChannels) {
      option (google.api.http) = {
        get: "/adsense/v1.4/adclients/{adClientId}/customchannels"
      };
    }
    // Get the specified custom channel from the specified ad client.
    rpc GetAdclientsAdClientIdCustomchannelsCustomChannelId(GetAdclientsAdClientIdCustomchannelsCustomChannelIdRequest) returns (CustomChannel) {
      option (google.api.http) = {
        get: "/adsense/v1.4/adclients/{adClientId}/customchannels/{customChannelId}"
      };
    }
    // List all ad units in the specified custom channel.
    rpc GetAdclientsAdClientIdCustomchannelsCustomChannelIdAdunits(GetAdclientsAdClientIdCustomchannelsCustomChannelIdAdunitsRequest) returns (AdUnits) {
      option (google.api.http) = {
        get: "/adsense/v1.4/adclients/{adClientId}/customchannels/{customChannelId}/adunits"
      };
    }
    // List all URL channels in the specified ad client for this AdSense account.
    rpc GetAdclientsAdClientIdUrlchannels(GetAdclientsAdClientIdUrlchannelsRequest) returns (UrlChannels) {
      option (google.api.http) = {
        get: "/adsense/v1.4/adclients/{adClientId}/urlchannels"
      };
    }
    // List the alerts for this AdSense account.
    rpc GetAlerts(GetAlertsRequest) returns (Alerts) {
      option (google.api.http) = {
        get: "/adsense/v1.4/alerts"
      };
    }
    // Dismiss (delete) the specified alert from the publisher's AdSense account.
    rpc DeleteAlertsAlertId(DeleteAlertsAlertIdRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        delete: "/adsense/v1.4/alerts/{alertId}"
      };
    }
    // List the metadata for the dimensions available to this AdSense account.
    rpc GetMetadataDimensions(GetMetadataDimensionsRequest) returns (Metadata) {
      option (google.api.http) = {
        get: "/adsense/v1.4/metadata/dimensions"
      };
    }
    // List the metadata for the metrics available to this AdSense account.
    rpc GetMetadataMetrics(GetMetadataMetricsRequest) returns (Metadata) {
      option (google.api.http) = {
        get: "/adsense/v1.4/metadata/metrics"
      };
    }
    // List the payments for this AdSense account.
    rpc GetPayments(GetPaymentsRequest) returns (Payments) {
      option (google.api.http) = {
        get: "/adsense/v1.4/payments"
      };
    }
    // Generate an AdSense report based on the report request sent in the query parameters. Returns the result as JSON; to retrieve output in CSV format specify "alt=csv" as a query parameter.
    rpc GetReports(GetReportsRequest) returns (AdsenseReportsGenerateResponse) {
      option (google.api.http) = {
        get: "/adsense/v1.4/reports"
      };
    }
    // List all saved reports in this AdSense account.
    rpc GetReportsSaved(GetReportsSavedRequest) returns (SavedReports) {
      option (google.api.http) = {
        get: "/adsense/v1.4/reports/saved"
      };
    }
    // Generate an AdSense report based on the saved report ID sent in the query parameters.
    rpc GetReportsSavedReportId(GetReportsSavedReportIdRequest) returns (AdsenseReportsGenerateResponse) {
      option (google.api.http) = {
        get: "/adsense/v1.4/reports/{savedReportId}"
      };
    }
    // List all saved ad styles in the user's account.
    rpc GetSavedadstyles(GetSavedadstylesRequest) returns (SavedAdStyles) {
      option (google.api.http) = {
        get: "/adsense/v1.4/savedadstyles"
      };
    }
    // Get a specific saved ad style from the user's account.
    rpc GetSavedadstylesSavedAdStyleId(GetSavedadstylesSavedAdStyleIdRequest) returns (SavedAdStyle) {
      option (google.api.http) = {
        get: "/adsense/v1.4/savedadstyles/{savedAdStyleId}"
      };
    }
}
