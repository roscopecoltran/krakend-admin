basePath: /
definitions.Annotation.description: Text annotation with a set of attributes.
definitions.Annotation.properties.attributes.$ref: '#/definitions/Attributes'
definitions.Annotation.properties.attributes.description: |-
  A set of attributes on the annotation. There is a limit of 4 attributes
  per Annotation.
definitions.Annotation.properties.description.$ref: '#/definitions/TruncatableString'
definitions.Annotation.properties.description.description: |-
  A user-supplied message describing the event. The maximum length for
  the description is 256 bytes.
definitions.Annotation.type: object
definitions.AttributeValue.description: The allowed types for [VALUE] in a `[KEY]:[VALUE]`
  attribute.
definitions.AttributeValue.properties.boolValue.description: A Boolean value represented
  by `true` or `false`.
definitions.AttributeValue.properties.boolValue.type: boolean
definitions.AttributeValue.properties.intValue.description: A 64-bit signed integer.
definitions.AttributeValue.properties.intValue.format: int64
definitions.AttributeValue.properties.intValue.type: string
definitions.AttributeValue.properties.stringValue.$ref: '#/definitions/TruncatableString'
definitions.AttributeValue.properties.stringValue.description: A string up to 256
  bytes long.
definitions.AttributeValue.type: object
definitions.Attributes.description: A set of attributes, each in the format `[KEY]:[VALUE]`.
definitions.Attributes.properties.attributeMap.additionalProperties.$ref: '#/definitions/AttributeValue'
definitions.Attributes.properties.attributeMap.description: |-
  The set of attributes. Each attribute's key can be up to 128 bytes
  long. The value can be a string up to 256 bytes, an integer, or the
  Boolean values `true` and `false`. For example:

      "/instance_id": "my-instance"
      "/http/user_agent": ""
      "/http/request_bytes": 300
      "abc.com/myattribute": true
definitions.Attributes.properties.attributeMap.type: object
definitions.Attributes.properties.droppedAttributesCount.description: |-
  The number of attributes that were discarded. Attributes can be discarded
  because their keys are too long or because there are too many attributes.
  If this value is 0 then all attributes are valid.
definitions.Attributes.properties.droppedAttributesCount.format: int32
definitions.Attributes.properties.droppedAttributesCount.type: integer
definitions.Attributes.type: object
definitions.BatchWriteSpansRequest.description: The request message for the `BatchWriteSpans`
  method.
definitions.BatchWriteSpansRequest.properties.spans.description: A collection of spans.
definitions.BatchWriteSpansRequest.properties.spans.items.$ref: '#/definitions/Span'
definitions.BatchWriteSpansRequest.properties.spans.type: array
definitions.BatchWriteSpansRequest.type: object
definitions.Empty.description: |-
  A generic empty message that you can re-use to avoid defining duplicated
  empty messages in your APIs. A typical example is to use it as the request
  or the response type of an API method. For instance:

      service Foo {
        rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);
      }

  The JSON representation for `Empty` is empty JSON object `{}`.
definitions.Empty.type: object
definitions.Link.description: |-
  A pointer from the current span to another span in the same trace or in a
  different trace. For example, this can be used in batching operations,
  where a single batch handler processes multiple requests from different
  traces or when the handler receives a request from a different project.
definitions.Link.properties.attributes.$ref: '#/definitions/Attributes'
definitions.Link.properties.attributes.description: |-
  A set of attributes on the link. There is a limit of 32 attributes per
  link.
definitions.Link.properties.spanId.description: '`SPAN_ID` identifies a span within
  a trace.'
definitions.Link.properties.spanId.type: string
definitions.Link.properties.traceId.description: '`TRACE_ID` identifies a trace within
  a project.'
definitions.Link.properties.traceId.type: string
definitions.Link.properties.type.description: The relationship of the current span
  relative to the linked span.
definitions.Link.properties.type.enum.length: 3
definitions.Link.properties.type.enum[0]: TYPE_UNSPECIFIED
definitions.Link.properties.type.enum[1]: CHILD_LINKED_SPAN
definitions.Link.properties.type.enum[2]: PARENT_LINKED_SPAN
definitions.Link.properties.type.type: string
definitions.Link.type: object
definitions.Links.description: |-
  A collection of links, which are references from this span to a span
  in the same or different trace.
definitions.Links.properties.droppedLinksCount.description: |-
  The number of dropped links after the maximum size was enforced. If
  this value is 0, then no links were dropped.
definitions.Links.properties.droppedLinksCount.format: int32
definitions.Links.properties.droppedLinksCount.type: integer
definitions.Links.properties.link.description: A collection of links.
definitions.Links.properties.link.items.$ref: '#/definitions/Link'
definitions.Links.properties.link.type: array
definitions.Links.type: object
definitions.ListSpansResponse.description: The response message for the `ListSpans`
  method.
definitions.ListSpansResponse.properties.nextPageToken.description: |-
  If defined, indicates that there might be more spans that match the
  request. Pass this as the value of `pageToken` in a subsequent request to
  retrieve additional spans.
definitions.ListSpansResponse.properties.nextPageToken.type: string
definitions.ListSpansResponse.properties.spans.description: The requested spans, if
  there are any in the specified trace.
definitions.ListSpansResponse.properties.spans.items.$ref: '#/definitions/Span'
definitions.ListSpansResponse.properties.spans.type: array
definitions.ListSpansResponse.type: object
definitions.ListTracesResponse.description: The response message for the `ListTraces`
  method.
definitions.ListTracesResponse.properties.nextPageToken.description: |-
  If there might be more results than those appearing in this response, then
  `next_page_token` is included.  To get the next set of results, call this
  method again using the value of `next_page_token` as `page_token`.
definitions.ListTracesResponse.properties.nextPageToken.type: string
definitions.ListTracesResponse.properties.traces.description: List of trace records
  returned.
definitions.ListTracesResponse.properties.traces.items.$ref: '#/definitions/Trace'
definitions.ListTracesResponse.properties.traces.type: array
definitions.ListTracesResponse.type: object
definitions.Module.description: Binary module.
definitions.Module.properties.buildId.$ref: '#/definitions/TruncatableString'
definitions.Module.properties.buildId.description: |-
  A unique identifier for the module, usually a hash of its
  contents (up to 128 bytes).
definitions.Module.properties.module.$ref: '#/definitions/TruncatableString'
definitions.Module.properties.module.description: |-
  For example: main binary, kernel modules, and dynamic libraries
  such as libc.so, sharedlib.so (up to 256 bytes).
definitions.Module.type: object
definitions.NetworkEvent.description: An event describing an RPC message sent or received
  on the network.
definitions.NetworkEvent.properties.messageId.description: An identifier for the message,
  which must be unique in this span.
definitions.NetworkEvent.properties.messageId.format: uint64
definitions.NetworkEvent.properties.messageId.type: string
definitions.NetworkEvent.properties.messageSize.description: The number of bytes sent
  or received.
definitions.NetworkEvent.properties.messageSize.format: uint64
definitions.NetworkEvent.properties.messageSize.type: string
definitions.NetworkEvent.properties.time.description: |-
  For sent messages, this is the time at which the first bit was sent.
  For received messages, this is the time at which the last bit was
  received.
definitions.NetworkEvent.properties.time.format: google-datetime
definitions.NetworkEvent.properties.time.type: string
definitions.NetworkEvent.properties.type.description: |-
  Type of NetworkEvent. Indicates whether the RPC message was sent or
  received.
definitions.NetworkEvent.properties.type.enum.length: 3
definitions.NetworkEvent.properties.type.enum[0]: TYPE_UNSPECIFIED
definitions.NetworkEvent.properties.type.enum[1]: SENT
definitions.NetworkEvent.properties.type.enum[2]: RECV
definitions.NetworkEvent.properties.type.type: string
definitions.NetworkEvent.type: object
definitions.Span.description: |-
  A span represents a single operation within a trace. Spans can be
  nested to form a trace tree. Often, a trace contains a root span
  that describes the end-to-end latency, and one or more subspans for
  its sub-operations. A trace can also contain multiple root spans,
  or none at all. Spans do not need to be contiguous&mdash;there may be
  gaps or overlaps between spans in a trace.
definitions.Span.properties.attributes.$ref: '#/definitions/Attributes'
definitions.Span.properties.attributes.description: |-
  A set of attributes on the span. There is a limit of 32 attributes per
  span.
definitions.Span.properties.childSpanCount.description: |-
  An optional number of child spans that were generated while this span
  was active. If set, allows implementation to detect missing child spans.
definitions.Span.properties.childSpanCount.format: uint32
definitions.Span.properties.childSpanCount.type: integer
definitions.Span.properties.displayName.$ref: '#/definitions/TruncatableString'
definitions.Span.properties.displayName.description: |-
  A description of the span's operation (up to 128 bytes).
  Stackdriver Trace displays the description in the
  {% dynamic print site_values.console_name %}.
  For example, the display name can be a qualified method name or a file name
  and a line number where the operation is called. A best practice is to use
  the same display name within an application and at the same call point.
  This makes it easier to correlate spans in different traces.
definitions.Span.properties.endTime.description: |-
  The end time of the span. On the client side, this is the time kept by
  the local machine where the span execution ends. On the server side, this
  is the time when the server application handler stops running.
definitions.Span.properties.endTime.format: google-datetime
definitions.Span.properties.endTime.type: string
definitions.Span.properties.links.$ref: '#/definitions/Links'
definitions.Span.properties.links.description: A maximum of 128 links are allowed
  per Span.
definitions.Span.properties.name.description: |-
  The resource name of the span in the following format:

      projects/[PROJECT_ID]traces/[TRACE_ID]/spans/SPAN_ID is a unique identifier for a trace within a project.
  [SPAN_ID] is a unique identifier for a span within a trace,
  assigned when the span is created.
definitions.Span.properties.name.type: string
definitions.Span.properties.parentSpanId.description: |-
  The [SPAN_ID] of this span's parent span. If this is a root span,
  then this field must be empty.
definitions.Span.properties.parentSpanId.type: string
definitions.Span.properties.sameProcessAsParentSpan.description: |-
  A highly recommended but not required flag that identifies when a trace
  crosses a process boundary. True when the parent_span belongs to the
  same process as the current span.
definitions.Span.properties.sameProcessAsParentSpan.type: boolean
definitions.Span.properties.spanId.description: The [SPAN_ID] portion of the span's
  resource name.
definitions.Span.properties.spanId.type: string
definitions.Span.properties.stackTrace.$ref: '#/definitions/StackTrace'
definitions.Span.properties.stackTrace.description: Stack trace captured at the start
  of the span.
definitions.Span.properties.startTime.description: |-
  The start time of the span. On the client side, this is the time kept by
  the local machine where the span execution starts. On the server side, this
  is the time when the server's application handler starts running.
definitions.Span.properties.startTime.format: google-datetime
definitions.Span.properties.startTime.type: string
definitions.Span.properties.status.$ref: '#/definitions/Status'
definitions.Span.properties.status.description: An optional final status for this
  span.
definitions.Span.properties.timeEvents.$ref: '#/definitions/TimeEvents'
definitions.Span.properties.timeEvents.description: |-
  The included time events. There can be up to 32 annotations and 128 network
  events per span.
definitions.Span.type: object
definitions.StackFrame.description: Represents a single stack frame in a stack trace.
definitions.StackFrame.properties.columnNumber.description: |-
  The column number where the function call appears, if available.
  This is important in JavaScript because of its anonymous functions.
definitions.StackFrame.properties.columnNumber.format: int64
definitions.StackFrame.properties.columnNumber.type: string
definitions.StackFrame.properties.fileName.$ref: '#/definitions/TruncatableString'
definitions.StackFrame.properties.fileName.description: |-
  The name of the source file where the function call appears (up to 256
  bytes).
definitions.StackFrame.properties.functionName.$ref: '#/definitions/TruncatableString'
definitions.StackFrame.properties.functionName.description: |-
  The fully-qualified name that uniquely identifies the function or
  method that is active in this frame (up to 1024 bytes).
definitions.StackFrame.properties.lineNumber.description: The line number in `file_name`
  where the function call appears.
definitions.StackFrame.properties.lineNumber.format: int64
definitions.StackFrame.properties.lineNumber.type: string
definitions.StackFrame.properties.loadModule.$ref: '#/definitions/Module'
definitions.StackFrame.properties.loadModule.description: The binary module from where
  the code was loaded.
definitions.StackFrame.properties.originalFunctionName.$ref: '#/definitions/TruncatableString'
definitions.StackFrame.properties.originalFunctionName.description: |-
  An un-mangled function name, if `function_name` is
  [mangled](http://www.avabodh.com/cxxin/namemangling.html). The name can
  be fully-qualified (up to 1024 bytes).
definitions.StackFrame.properties.sourceVersion.$ref: '#/definitions/TruncatableString'
definitions.StackFrame.properties.sourceVersion.description: The version of the deployed
  source code (up to 128 bytes).
definitions.StackFrame.type: object
definitions.StackFrames.description: A collection of stack frames, which can be truncated.
definitions.StackFrames.properties.droppedFramesCount.description: |-
  The number of stack frames that were dropped because there
  were too many stack frames.
  If this value is 0, then no stack frames were dropped.
definitions.StackFrames.properties.droppedFramesCount.format: int32
definitions.StackFrames.properties.droppedFramesCount.type: integer
definitions.StackFrames.properties.frame.description: Stack frames in this call stack.
definitions.StackFrames.properties.frame.items.$ref: '#/definitions/StackFrame'
definitions.StackFrames.properties.frame.type: array
definitions.StackFrames.type: object
definitions.StackTrace.description: A call stack appearing in a trace.
definitions.StackTrace.properties.stackFrames.$ref: '#/definitions/StackFrames'
definitions.StackTrace.properties.stackFrames.description: Stack frames in this stack
  trace. A maximum of 128 frames are allowed.
definitions.StackTrace.properties.stackTraceHashId.description: |-
  The hash ID is used to conserve network bandwidth for duplicate
  stack traces within a single trace.

  Often multiple spans will have identical stack traces.
  The first occurrence of a stack trace should contain both the
  `stackFrame` content and a value in `stackTraceHashId`.

  Subsequent spans within the same request can refer
  to that stack trace by only setting `stackTraceHashId`.
definitions.StackTrace.properties.stackTraceHashId.format: uint64
definitions.StackTrace.properties.stackTraceHashId.type: string
definitions.StackTrace.type: object
definitions.Status.description: |-
  The `Status` type defines a logical error model that is suitable for different
  programming environments, including REST APIs and RPC APIs. It is used by
  [gRPC](https://github.com/grpc). The error model is designed to be:

  - Simple to use and understand for most users
  - Flexible enough to meet unexpected needs

  # Overview

  The `Status` message contains three pieces of data: error code, error message,
  and error details. The error code should be an enum value of
  google.rpc.Code, but it may accept additional error codes if needed.  The
  error message should be a developer-facing English message that helps
  developers *understand* and *resolve* the error. If a localized user-facing
  error message is needed, put the localized message in the error details or
  localize it in the client. The optional error details may contain arbitrary
  information about the error. There is a predefined set of error detail types
  in the package `google.rpc` that can be used for common error conditions.

  # Language mapping

  The `Status` message is the logical representation of the error model, but it
  is not necessarily the actual wire format. When the `Status` message is
  exposed in different client libraries and different wire protocols, it can be
  mapped differently. For example, it will likely be mapped to some exceptions
  in Java, but more likely mapped to some error codes in C.

  # Other uses

  The error model and the `Status` message can be used in a variety of
  environments, either with or without APIs, to provide a
  consistent developer experience across different environments.

  Example uses of this error model include:

  - Partial errors. If a service needs to return partial errors to the client,
      it may embed the `Status` in the normal response to indicate the partial
      errors.

  - Workflow errors. A typical workflow has multiple steps. Each step may
      have a `Status` message for error reporting.

  - Batch operations. If a client uses batch request and batch response, the
      `Status` message should be used directly inside batch response, one for
      each error sub-response.

  - Asynchronous operations. If an API call embeds asynchronous operation
      results in its response, the status of those operations should be
      represented directly using the `Status` message.

  - Logging. If some API errors are stored in logs, the message `Status` could
      be used directly after any stripping needed for security/privacy reasons.
definitions.Status.properties.code.description: The status code, which should be an
  enum value of google.rpc.Code.
definitions.Status.properties.code.format: int32
definitions.Status.properties.code.type: integer
definitions.Status.properties.details.description: |-
  A list of messages that carry the error details.  There will be a
  common set of message types for APIs to use.
definitions.Status.properties.details.items.additionalProperties.description: Properties
  of the object. Contains field @type with type URL.
definitions.Status.properties.details.items.type: object
definitions.Status.properties.details.type: array
definitions.Status.properties.message.description: |-
  A developer-facing error message, which should be in English. Any
  user-facing error message should be localized and sent in the
  google.rpc.Status.details field, or localized by the client.
definitions.Status.properties.message.type: string
definitions.Status.type: object
definitions.TimeEvent.description: A time-stamped annotation or network event in the
  Span.
definitions.TimeEvent.properties.annotation.$ref: '#/definitions/Annotation'
definitions.TimeEvent.properties.annotation.description: One or more key:value pairs.
definitions.TimeEvent.properties.networkEvent.$ref: '#/definitions/NetworkEvent'
definitions.TimeEvent.properties.networkEvent.description: An event describing an
  RPC message sent/received on the network.
definitions.TimeEvent.properties.time.description: The timestamp indicating the time
  the event occurred.
definitions.TimeEvent.properties.time.format: google-datetime
definitions.TimeEvent.properties.time.type: string
definitions.TimeEvent.type: object
definitions.TimeEvents.description: |-
  A collection of `TimeEvent`s. A `TimeEvent` is a time-stamped annotation
  on the span, consisting of either user-supplied key:value pairs, or
  details of an RPC message sent/received on the network.
definitions.TimeEvents.properties.droppedAnnotationsCount.description: |-
  The number of dropped annotations in all the included time events.
  If the value is 0, then no annotations were dropped.
definitions.TimeEvents.properties.droppedAnnotationsCount.format: int32
definitions.TimeEvents.properties.droppedAnnotationsCount.type: integer
definitions.TimeEvents.properties.droppedNetworkEventsCount.description: |-
  The number of dropped network events in all the included time events.
  If the value is 0, then no network events were dropped.
definitions.TimeEvents.properties.droppedNetworkEventsCount.format: int32
definitions.TimeEvents.properties.droppedNetworkEventsCount.type: integer
definitions.TimeEvents.properties.timeEvent.description: A collection of `TimeEvent`s.
definitions.TimeEvents.properties.timeEvent.items.$ref: '#/definitions/TimeEvent'
definitions.TimeEvents.properties.timeEvent.type: array
definitions.TimeEvents.type: object
definitions.Trace.description: |-
  A trace describes how long it takes for an application to perform some
  operations. It consists of a set of spans, each representing
  an operation and including time information and operation details.
definitions.Trace.properties.name.description: |-
  The resource name of the trace in the following format:

      projects/[PROJECT_ID]/traces/TRACE_ID is a unique identifier for a trace within a project.
  The ID is assigned when the trace is created.
definitions.Trace.properties.name.type: string
definitions.Trace.type: object
definitions.TruncatableString.description: Represents a string that might be shortened
  to a specified length.
definitions.TruncatableString.properties.truncatedByteCount.description: |-
  The number of bytes removed from the original string. If this
  value is 0, then the string was not shortened.
definitions.TruncatableString.properties.truncatedByteCount.format: int32
definitions.TruncatableString.properties.truncatedByteCount.type: integer
definitions.TruncatableString.properties.value.description: |-
  The shortened string. For example, if the original string was 500
  bytes long and the limit of the string was 128 bytes, then this
  value contains the first 128 bytes of the 500-byte string. Note that
  truncation always happens on the character boundary, to ensure that
  truncated string is still valid UTF8. In case of multi-byte characters,
  size of truncated string can be less than truncation limit.
definitions.TruncatableString.properties.value.type: string
definitions.TruncatableString.type: object
externalDocs.url: https://cloud.google.com/trace
host: cloudtrace.googleapis.com
info.contact.name: Google
info.contact.url: https://google.com
info.description: |
  Send and retrieve trace data from Stackdriver Trace. Data is generated and available by default for all App Engine applications. Data from other applications can be written to Stackdriver Trace for display, reporting, and analysis.
info.license.name: Creative Commons Attribution 3.0
info.license.url: http://creativecommons.org/licenses/by/3.0/
info.termsOfService: https://developers.google.com/terms/
info.title: Stackdriver Trace
info.version: v2
info.x-apiClientRegistration.url: https://console.developers.google.com
info.x-logo.url: https://api.apis.guru/v2/cache/logo/https_www.google.com_images_branding_googlelogo_2x_googlelogo_color_272x92dp.png
info.x-origin.length: 1
info.x-origin[0].converter.url: https://github.com/lucybot/api-spec-converter
info.x-origin[0].converter.version: 2.0.1
info.x-origin[0].format: google
info.x-origin[0].url: https://tracing.googleapis.com/$discovery/rest?version=v2
info.x-origin[0].version: v1
info.x-preferred: true
info.x-providerName: googleapis.com
info.x-serviceName: tracing
parameters.$.xgafv.description: V1 error format.
parameters.$.xgafv.enum.length: 2
parameters.$.xgafv.enum[0]: "1"
parameters.$.xgafv.enum[1]: "2"
parameters.$.xgafv.in: query
parameters.$.xgafv.name: $.xgafv
parameters.$.xgafv.type: string
parameters.access_token.description: OAuth access token.
parameters.access_token.in: query
parameters.access_token.name: access_token
parameters.access_token.type: string
parameters.alt.default: json
parameters.alt.description: Data format for response.
parameters.alt.enum.length: 3
parameters.alt.enum[0]: json
parameters.alt.enum[1]: media
parameters.alt.enum[2]: proto
parameters.alt.in: query
parameters.alt.name: alt
parameters.alt.type: string
parameters.bearer_token.description: OAuth bearer token.
parameters.bearer_token.in: query
parameters.bearer_token.name: bearer_token
parameters.bearer_token.type: string
parameters.callback.description: JSONP
parameters.callback.in: query
parameters.callback.name: callback
parameters.callback.type: string
parameters.fields.description: Selector specifying which fields to include in a partial
  response.
parameters.fields.in: query
parameters.fields.name: fields
parameters.fields.type: string
parameters.key.description: API key. Your API key identifies your project and provides
  you with API access, quota, and reports. Required unless you provide an OAuth 2.0
  token.
parameters.key.in: query
parameters.key.name: key
parameters.key.type: string
parameters.oauth_token.description: OAuth 2.0 token for the current user.
parameters.oauth_token.in: query
parameters.oauth_token.name: oauth_token
parameters.oauth_token.type: string
parameters.pp.default: true
parameters.pp.description: Pretty-print response.
parameters.pp.in: query
parameters.pp.name: pp
parameters.pp.type: boolean
parameters.prettyPrint.default: true
parameters.prettyPrint.description: Returns response with indentations and line breaks.
parameters.prettyPrint.in: query
parameters.prettyPrint.name: prettyPrint
parameters.prettyPrint.type: boolean
parameters.quotaUser.description: Available to use for quota purposes for server-side
  applications. Can be any arbitrary string assigned to a user, but should not exceed
  40 characters.
parameters.quotaUser.in: query
parameters.quotaUser.name: quotaUser
parameters.quotaUser.type: string
parameters.upload_protocol.description: Upload protocol for media (e.g. "raw", "multipart").
parameters.upload_protocol.in: query
parameters.upload_protocol.name: upload_protocol
parameters.upload_protocol.type: string
parameters.uploadType.description: Legacy upload protocol for media (e.g. "media",
  "multipart").
parameters.uploadType.in: query
parameters.uploadType.name: uploadType
parameters.uploadType.type: string
paths./v2/{name}.parameters.length: 13
paths./v2/{name}.parameters[0].$ref: '#/parameters/$.xgafv'
paths./v2/{name}.parameters[1].$ref: '#/parameters/access_token'
paths./v2/{name}.parameters[2].$ref: '#/parameters/alt'
paths./v2/{name}.parameters[3].$ref: '#/parameters/bearer_token'
paths./v2/{name}.parameters[4].$ref: '#/parameters/callback'
paths./v2/{name}.parameters[5].$ref: '#/parameters/fields'
paths./v2/{name}.parameters[6].$ref: '#/parameters/key'
paths./v2/{name}.parameters[7].$ref: '#/parameters/oauth_token'
paths./v2/{name}.parameters[8].$ref: '#/parameters/pp'
paths./v2/{name}.parameters[9].$ref: '#/parameters/prettyPrint'
paths./v2/{name}.parameters[10].$ref: '#/parameters/quotaUser'
paths./v2/{name}.parameters[11].$ref: '#/parameters/uploadType'
paths./v2/{name}.parameters[12].$ref: '#/parameters/upload_protocol'
paths./v2/{name}.put.description: Creates a new Span.
paths./v2/{name}.put.operationId: cloudtrace.projects.traces.spans.create
paths./v2/{name}.put.parameters.length: 2
paths./v2/{name}.put.parameters[0].in: body
paths./v2/{name}.put.parameters[0].name: body
paths./v2/{name}.put.parameters[0].schema.$ref: '#/definitions/Span'
paths./v2/{name}.put.parameters[1].description: |-
  The resource name of the span in the following format:

      projects/[PROJECT_ID]traces/[TRACE_ID]/spans/SPAN_ID is a unique identifier for a trace within a project.
  [SPAN_ID] is a unique identifier for a span within a trace,
  assigned when the span is created.
paths./v2/{name}.put.parameters[1].in: path
paths./v2/{name}.put.parameters[1].name: name
paths./v2/{name}.put.parameters[1].required: true
paths./v2/{name}.put.parameters[1].type: string
paths./v2/{name}.put.parameters[1].x-reservedExpansion: true
paths./v2/{name}.put.responses.200.description: Successful response
paths./v2/{name}.put.responses.200.schema.$ref: '#/definitions/Span'
paths./v2/{name}.put.security.length: 2
paths./v2/{name}.put.security[0].Oauth2.length: 1
paths./v2/{name}.put.security[0].Oauth2[0]: https://www.googleapis.com/auth/cloud-platform
paths./v2/{name}.put.security[0].Oauth2c.length: 1
paths./v2/{name}.put.security[0].Oauth2c[0]: https://www.googleapis.com/auth/cloud-platform
paths./v2/{name}.put.security[1].Oauth2.length: 1
paths./v2/{name}.put.security[1].Oauth2[0]: https://www.googleapis.com/auth/trace.append
paths./v2/{name}.put.security[1].Oauth2c.length: 1
paths./v2/{name}.put.security[1].Oauth2c[0]: https://www.googleapis.com/auth/trace.append
paths./v2/{name}.put.tags.length: 1
paths./v2/{name}.put.tags[0]: projects
paths./v2/{name}/traces:batchWrite.parameters.length: 13
paths./v2/{name}/traces:batchWrite.parameters[0].$ref: '#/parameters/$.xgafv'
paths./v2/{name}/traces:batchWrite.parameters[1].$ref: '#/parameters/access_token'
paths./v2/{name}/traces:batchWrite.parameters[2].$ref: '#/parameters/alt'
paths./v2/{name}/traces:batchWrite.parameters[3].$ref: '#/parameters/bearer_token'
paths./v2/{name}/traces:batchWrite.parameters[4].$ref: '#/parameters/callback'
paths./v2/{name}/traces:batchWrite.parameters[5].$ref: '#/parameters/fields'
paths./v2/{name}/traces:batchWrite.parameters[6].$ref: '#/parameters/key'
paths./v2/{name}/traces:batchWrite.parameters[7].$ref: '#/parameters/oauth_token'
paths./v2/{name}/traces:batchWrite.parameters[8].$ref: '#/parameters/pp'
paths./v2/{name}/traces:batchWrite.parameters[9].$ref: '#/parameters/prettyPrint'
paths./v2/{name}/traces:batchWrite.parameters[10].$ref: '#/parameters/quotaUser'
paths./v2/{name}/traces:batchWrite.parameters[11].$ref: '#/parameters/uploadType'
paths./v2/{name}/traces:batchWrite.parameters[12].$ref: '#/parameters/upload_protocol'
paths./v2/{name}/traces:batchWrite.post.description: |-
  Sends new spans to Stackdriver Trace or updates existing traces. If the
  name of a trace that you send matches that of an existing trace, new spans
  are added to the existing trace. Attempt to update existing spans results
  undefined behavior. If the name does not match, a new trace is created
  with given set of spans.
paths./v2/{name}/traces:batchWrite.post.operationId: cloudtrace.projects.traces.batchWrite
paths./v2/{name}/traces:batchWrite.post.parameters.length: 2
paths./v2/{name}/traces:batchWrite.post.parameters[0].in: body
paths./v2/{name}/traces:batchWrite.post.parameters[0].name: body
paths./v2/{name}/traces:batchWrite.post.parameters[0].schema.$ref: '#/definitions/BatchWriteSpansRequest'
paths./v2/{name}/traces:batchWrite.post.parameters[1].description: |-
  Required. Name of the project where the spans belong. The format is
  `projects/PROJECT_ID`.
paths./v2/{name}/traces:batchWrite.post.parameters[1].in: path
paths./v2/{name}/traces:batchWrite.post.parameters[1].name: name
paths./v2/{name}/traces:batchWrite.post.parameters[1].required: true
paths./v2/{name}/traces:batchWrite.post.parameters[1].type: string
paths./v2/{name}/traces:batchWrite.post.parameters[1].x-reservedExpansion: true
paths./v2/{name}/traces:batchWrite.post.responses.200.description: Successful response
paths./v2/{name}/traces:batchWrite.post.responses.200.schema.$ref: '#/definitions/Empty'
paths./v2/{name}/traces:batchWrite.post.security.length: 2
paths./v2/{name}/traces:batchWrite.post.security[0].Oauth2.length: 1
paths./v2/{name}/traces:batchWrite.post.security[0].Oauth2[0]: https://www.googleapis.com/auth/cloud-platform
paths./v2/{name}/traces:batchWrite.post.security[0].Oauth2c.length: 1
paths./v2/{name}/traces:batchWrite.post.security[0].Oauth2c[0]: https://www.googleapis.com/auth/cloud-platform
paths./v2/{name}/traces:batchWrite.post.security[1].Oauth2.length: 1
paths./v2/{name}/traces:batchWrite.post.security[1].Oauth2[0]: https://www.googleapis.com/auth/trace.append
paths./v2/{name}/traces:batchWrite.post.security[1].Oauth2c.length: 1
paths./v2/{name}/traces:batchWrite.post.security[1].Oauth2c[0]: https://www.googleapis.com/auth/trace.append
paths./v2/{name}/traces:batchWrite.post.tags.length: 1
paths./v2/{name}/traces:batchWrite.post.tags[0]: projects
paths./v2/{parent}/traces.get.description: Returns of a list of traces that match
  the specified filter conditions.
paths./v2/{parent}/traces.get.operationId: cloudtrace.projects.traces.list
paths./v2/{parent}/traces.get.parameters.length: 7
paths./v2/{parent}/traces.get.parameters[0].description: Optional. Do not return traces
  whose start time is later than this time.
paths./v2/{parent}/traces.get.parameters[0].in: query
paths./v2/{parent}/traces.get.parameters[0].name: endTime
paths./v2/{parent}/traces.get.parameters[0].type: string
paths./v2/{parent}/traces.get.parameters[1].description: |-
  Opional. Return only traces that match this
  [trace filter](/trace/docs/trace-filters). Example:

      "label:/http/url root:/_ah/background my_label:17"
paths./v2/{parent}/traces.get.parameters[1].in: query
paths./v2/{parent}/traces.get.parameters[1].name: filter
paths./v2/{parent}/traces.get.parameters[1].type: string
paths./v2/{parent}/traces.get.parameters[2].description: |-
  Optional. A single field used to sort the returned traces.
  Only the following field names can be used:

  *   `trace_id`: the trace's ID field
  *   `name`:  the root span's resource name
  *   `duration`: the difference between the root span's start time and end time
  *   `start`:  the start time of the root span

  Sorting is in ascending order unless `desc` is appended to the sort field name.
  Example: `"name desc"`).
paths./v2/{parent}/traces.get.parameters[2].in: query
paths./v2/{parent}/traces.get.parameters[2].name: orderBy
paths./v2/{parent}/traces.get.parameters[2].type: string
paths./v2/{parent}/traces.get.parameters[3].description: |-
  Optional. The maximum number of results to return from this request.
  Non-positive values are ignored. The presence of `next_page_token` in the
  response indicates that more results might be available, even if fewer than
  the maximum number of results is returned by this request.
paths./v2/{parent}/traces.get.parameters[3].in: query
paths./v2/{parent}/traces.get.parameters[3].name: pageSize
paths./v2/{parent}/traces.get.parameters[3].type: integer
paths./v2/{parent}/traces.get.parameters[4].description: |-
  Optional. If present, then retrieve the next batch of results from the
  preceding call to this method.  `page_token` must be the value of
  `next_page_token` from the previous response.  The values of other method
  parameters should be identical to those in the previous call.
paths./v2/{parent}/traces.get.parameters[4].in: query
paths./v2/{parent}/traces.get.parameters[4].name: pageToken
paths./v2/{parent}/traces.get.parameters[4].type: string
paths./v2/{parent}/traces.get.parameters[5].description: |-
  Required. The project where the trace data is stored. The format
  is `projects/PROJECT_ID`.
paths./v2/{parent}/traces.get.parameters[5].in: path
paths./v2/{parent}/traces.get.parameters[5].name: parent
paths./v2/{parent}/traces.get.parameters[5].required: true
paths./v2/{parent}/traces.get.parameters[5].type: string
paths./v2/{parent}/traces.get.parameters[5].x-reservedExpansion: true
paths./v2/{parent}/traces.get.parameters[6].description: Optional. Do not return traces
  whose end time is earlier than this time.
paths./v2/{parent}/traces.get.parameters[6].in: query
paths./v2/{parent}/traces.get.parameters[6].name: startTime
paths./v2/{parent}/traces.get.parameters[6].type: string
paths./v2/{parent}/traces.get.responses.200.description: Successful response
paths./v2/{parent}/traces.get.responses.200.schema.$ref: '#/definitions/ListTracesResponse'
paths./v2/{parent}/traces.get.security.length: 2
paths./v2/{parent}/traces.get.security[0].Oauth2.length: 1
paths./v2/{parent}/traces.get.security[0].Oauth2[0]: https://www.googleapis.com/auth/cloud-platform
paths./v2/{parent}/traces.get.security[0].Oauth2c.length: 1
paths./v2/{parent}/traces.get.security[0].Oauth2c[0]: https://www.googleapis.com/auth/cloud-platform
paths./v2/{parent}/traces.get.security[1].Oauth2.length: 1
paths./v2/{parent}/traces.get.security[1].Oauth2[0]: https://www.googleapis.com/auth/trace.readonly
paths./v2/{parent}/traces.get.security[1].Oauth2c.length: 1
paths./v2/{parent}/traces.get.security[1].Oauth2c[0]: https://www.googleapis.com/auth/trace.readonly
paths./v2/{parent}/traces.get.tags.length: 1
paths./v2/{parent}/traces.get.tags[0]: projects
paths./v2/{parent}/traces.parameters.length: 13
paths./v2/{parent}/traces.parameters[0].$ref: '#/parameters/$.xgafv'
paths./v2/{parent}/traces.parameters[1].$ref: '#/parameters/access_token'
paths./v2/{parent}/traces.parameters[2].$ref: '#/parameters/alt'
paths./v2/{parent}/traces.parameters[3].$ref: '#/parameters/bearer_token'
paths./v2/{parent}/traces.parameters[4].$ref: '#/parameters/callback'
paths./v2/{parent}/traces.parameters[5].$ref: '#/parameters/fields'
paths./v2/{parent}/traces.parameters[6].$ref: '#/parameters/key'
paths./v2/{parent}/traces.parameters[7].$ref: '#/parameters/oauth_token'
paths./v2/{parent}/traces.parameters[8].$ref: '#/parameters/pp'
paths./v2/{parent}/traces.parameters[9].$ref: '#/parameters/prettyPrint'
paths./v2/{parent}/traces.parameters[10].$ref: '#/parameters/quotaUser'
paths./v2/{parent}/traces.parameters[11].$ref: '#/parameters/uploadType'
paths./v2/{parent}/traces.parameters[12].$ref: '#/parameters/upload_protocol'
paths./v2/{parent}:listSpans.get.description: Returns a list of spans within a trace.
paths./v2/{parent}:listSpans.get.operationId: cloudtrace.projects.traces.listSpans
paths./v2/{parent}:listSpans.get.parameters.length: 2
paths./v2/{parent}:listSpans.get.parameters[0].description: |-
  Optional. If present, then retrieve the next batch of results from the
  preceding call to this method. `page_token` must be the value of
  `next_page_token` from the previous response. The values of other method
  parameters should be identical to those in the previous call.
paths./v2/{parent}:listSpans.get.parameters[0].in: query
paths./v2/{parent}:listSpans.get.parameters[0].name: pageToken
paths./v2/{parent}:listSpans.get.parameters[0].type: string
paths./v2/{parent}:listSpans.get.parameters[1].description: |-
  Required: The resource name of the trace containing the spans to list.
  The format is `projects/PROJECT_ID/traces/TRACE_ID`.
paths./v2/{parent}:listSpans.get.parameters[1].in: path
paths./v2/{parent}:listSpans.get.parameters[1].name: parent
paths./v2/{parent}:listSpans.get.parameters[1].required: true
paths./v2/{parent}:listSpans.get.parameters[1].type: string
paths./v2/{parent}:listSpans.get.parameters[1].x-reservedExpansion: true
paths./v2/{parent}:listSpans.get.responses.200.description: Successful response
paths./v2/{parent}:listSpans.get.responses.200.schema.$ref: '#/definitions/ListSpansResponse'
paths./v2/{parent}:listSpans.get.security.length: 2
paths./v2/{parent}:listSpans.get.security[0].Oauth2.length: 1
paths./v2/{parent}:listSpans.get.security[0].Oauth2[0]: https://www.googleapis.com/auth/cloud-platform
paths./v2/{parent}:listSpans.get.security[0].Oauth2c.length: 1
paths./v2/{parent}:listSpans.get.security[0].Oauth2c[0]: https://www.googleapis.com/auth/cloud-platform
paths./v2/{parent}:listSpans.get.security[1].Oauth2.length: 1
paths./v2/{parent}:listSpans.get.security[1].Oauth2[0]: https://www.googleapis.com/auth/trace.readonly
paths./v2/{parent}:listSpans.get.security[1].Oauth2c.length: 1
paths./v2/{parent}:listSpans.get.security[1].Oauth2c[0]: https://www.googleapis.com/auth/trace.readonly
paths./v2/{parent}:listSpans.get.tags.length: 1
paths./v2/{parent}:listSpans.get.tags[0]: projects
paths./v2/{parent}:listSpans.parameters.length: 13
paths./v2/{parent}:listSpans.parameters[0].$ref: '#/parameters/$.xgafv'
paths./v2/{parent}:listSpans.parameters[1].$ref: '#/parameters/access_token'
paths./v2/{parent}:listSpans.parameters[2].$ref: '#/parameters/alt'
paths./v2/{parent}:listSpans.parameters[3].$ref: '#/parameters/bearer_token'
paths./v2/{parent}:listSpans.parameters[4].$ref: '#/parameters/callback'
paths./v2/{parent}:listSpans.parameters[5].$ref: '#/parameters/fields'
paths./v2/{parent}:listSpans.parameters[6].$ref: '#/parameters/key'
paths./v2/{parent}:listSpans.parameters[7].$ref: '#/parameters/oauth_token'
paths./v2/{parent}:listSpans.parameters[8].$ref: '#/parameters/pp'
paths./v2/{parent}:listSpans.parameters[9].$ref: '#/parameters/prettyPrint'
paths./v2/{parent}:listSpans.parameters[10].$ref: '#/parameters/quotaUser'
paths./v2/{parent}:listSpans.parameters[11].$ref: '#/parameters/uploadType'
paths./v2/{parent}:listSpans.parameters[12].$ref: '#/parameters/upload_protocol'
schemes.length: 1
schemes[0]: https
securityDefinitions.Oauth2.authorizationUrl: https://accounts.google.com/o/oauth2/auth
securityDefinitions.Oauth2.description: Oauth 2.0 implicit authentication
securityDefinitions.Oauth2.flow: implicit
securityDefinitions.Oauth2.scopes.https://www.googleapis.com/auth/cloud-platform: View
  and manage your data across Google Cloud Platform services
securityDefinitions.Oauth2.scopes.https://www.googleapis.com/auth/trace.append: Write
  Trace data for a project or application
securityDefinitions.Oauth2.scopes.https://www.googleapis.com/auth/trace.readonly: Read
  Trace data for a project or application
securityDefinitions.Oauth2.type: oauth2
securityDefinitions.Oauth2c.authorizationUrl: https://accounts.google.com/o/oauth2/auth
securityDefinitions.Oauth2c.description: Oauth 2.0 accessCode authentication
securityDefinitions.Oauth2c.flow: accessCode
securityDefinitions.Oauth2c.scopes.https://www.googleapis.com/auth/cloud-platform: View
  and manage your data across Google Cloud Platform services
securityDefinitions.Oauth2c.scopes.https://www.googleapis.com/auth/trace.append: Write
  Trace data for a project or application
securityDefinitions.Oauth2c.scopes.https://www.googleapis.com/auth/trace.readonly: Read
  Trace data for a project or application
securityDefinitions.Oauth2c.tokenUrl: https://accounts.google.com/o/oauth2/token
securityDefinitions.Oauth2c.type: oauth2
swagger: "2.0"
tags.length: 1
tags[0].name: projects
