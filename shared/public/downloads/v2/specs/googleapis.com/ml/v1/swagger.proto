syntax = "proto3";

import "google/protobuf/empty.proto";

import "google/api/annotations.proto";

package googlecloudmachinelearningengine;

message GetV1NameRequest {
    $.xgafv $.xgafv = 1;
    string access_token = 2;
    alt alt = 3;
    string bearer_token = 4;
    string callback = 5;
    string fields = 6;
    string key = 7;
    // Required. The name of the job to get the description of.
    string name = 8;
    string oauth_token = 9;
    boolean pp = 10;
    boolean prettyPrint = 11;
    string quotaUser = 12;
    string uploadType = 13;
    string upload_protocol = 14;
}

message DeleteV1NameRequest {
    $.xgafv $.xgafv = 1;
    string access_token = 2;
    alt alt = 3;
    string bearer_token = 4;
    string callback = 5;
    string fields = 6;
    string key = 7;
    // The name of the operation resource to be deleted.
    string name = 8;
    string oauth_token = 9;
    boolean pp = 10;
    boolean prettyPrint = 11;
    string quotaUser = 12;
    string uploadType = 13;
    string upload_protocol = 14;
}

message GetV1NameOperationsRequest {
    $.xgafv $.xgafv = 1;
    string access_token = 2;
    alt alt = 3;
    string bearer_token = 4;
    string callback = 5;
    string fields = 6;
    // The standard list filter.
    string filter = 7;
    string key = 8;
    // The name of the operation's parent resource.
    string name = 9;
    string oauth_token = 10;
    // The standard list page size.
    int32 pageSize = 11;
    // The standard list page token.
    string pageToken = 12;
    boolean pp = 13;
    boolean prettyPrint = 14;
    string quotaUser = 15;
    string uploadType = 16;
    string upload_protocol = 17;
}

message PostV1Name:CancelRequest {
    $.xgafv $.xgafv = 1;
    string access_token = 2;
    alt alt = 3;
    string bearer_token = 4;
    GoogleCloudMlV1__CancelJobRequest body = 5;
    string callback = 6;
    string fields = 7;
    string key = 8;
    // Required. The name of the job to cancel.
    string name = 9;
    string oauth_token = 10;
    boolean pp = 11;
    boolean prettyPrint = 12;
    string quotaUser = 13;
    string uploadType = 14;
    string upload_protocol = 15;
}

message GetV1Name:GetConfigRequest {
    $.xgafv $.xgafv = 1;
    string access_token = 2;
    alt alt = 3;
    string bearer_token = 4;
    string callback = 5;
    string fields = 6;
    string key = 7;
    // Required. The project name.
    string name = 8;
    string oauth_token = 9;
    boolean pp = 10;
    boolean prettyPrint = 11;
    string quotaUser = 12;
    string uploadType = 13;
    string upload_protocol = 14;
}

message PostV1Name:PredictRequest {
    $.xgafv $.xgafv = 1;
    string access_token = 2;
    alt alt = 3;
    string bearer_token = 4;
    GoogleCloudMlV1__PredictRequest body = 5;
    string callback = 6;
    string fields = 7;
    string key = 8;
    // Required. The resource name of a model or a version.
    // 
    // Authorization: requires the `predict` permission on the specified resource.
    string name = 9;
    string oauth_token = 10;
    boolean pp = 11;
    boolean prettyPrint = 12;
    string quotaUser = 13;
    string uploadType = 14;
    string upload_protocol = 15;
}

message PostV1Name:SetDefaultRequest {
    $.xgafv $.xgafv = 1;
    string access_token = 2;
    alt alt = 3;
    string bearer_token = 4;
    GoogleCloudMlV1__SetDefaultVersionRequest body = 5;
    string callback = 6;
    string fields = 7;
    string key = 8;
    // Required. The name of the version to make the default for the model. You
    // can get the names of all the versions of a model by calling
    // [projects.models.versions.list](/ml-engine/reference/rest/v1/projects.models.versions/list).
    string name = 9;
    string oauth_token = 10;
    boolean pp = 11;
    boolean prettyPrint = 12;
    string quotaUser = 13;
    string uploadType = 14;
    string upload_protocol = 15;
}

message GetV1ParentJobsRequest {
    $.xgafv $.xgafv = 1;
    string access_token = 2;
    alt alt = 3;
    string bearer_token = 4;
    string callback = 5;
    string fields = 6;
    // Optional. Specifies the subset of jobs to retrieve.
    string filter = 7;
    string key = 8;
    string oauth_token = 9;
    // Optional. The number of jobs to retrieve per "page" of results. If there
    // are more remaining results than this number, the response message will
    // contain a valid value in the `next_page_token` field.
    // 
    // The default value is 20, and the maximum page size is 100.
    int32 pageSize = 10;
    // Optional. A page token to request the next page of results.
    // 
    // You get the token from the `next_page_token` field of the response from
    // the previous call.
    string pageToken = 11;
    // Required. The name of the project for which to list jobs.
    string parent = 12;
    boolean pp = 13;
    boolean prettyPrint = 14;
    string quotaUser = 15;
    string uploadType = 16;
    string upload_protocol = 17;
}

message PostV1ParentJobsRequest {
    $.xgafv $.xgafv = 1;
    string access_token = 2;
    alt alt = 3;
    string bearer_token = 4;
    GoogleCloudMlV1__Job body = 5;
    string callback = 6;
    string fields = 7;
    string key = 8;
    string oauth_token = 9;
    // Required. The project name.
    string parent = 10;
    boolean pp = 11;
    boolean prettyPrint = 12;
    string quotaUser = 13;
    string uploadType = 14;
    string upload_protocol = 15;
}

message GetV1ParentModelsRequest {
    $.xgafv $.xgafv = 1;
    string access_token = 2;
    alt alt = 3;
    string bearer_token = 4;
    string callback = 5;
    string fields = 6;
    string key = 7;
    string oauth_token = 8;
    // Optional. The number of models to retrieve per "page" of results. If there
    // are more remaining results than this number, the response message will
    // contain a valid value in the `next_page_token` field.
    // 
    // The default value is 20, and the maximum page size is 100.
    int32 pageSize = 9;
    // Optional. A page token to request the next page of results.
    // 
    // You get the token from the `next_page_token` field of the response from
    // the previous call.
    string pageToken = 10;
    // Required. The name of the project whose models are to be listed.
    string parent = 11;
    boolean pp = 12;
    boolean prettyPrint = 13;
    string quotaUser = 14;
    string uploadType = 15;
    string upload_protocol = 16;
}

message PostV1ParentModelsRequest {
    $.xgafv $.xgafv = 1;
    string access_token = 2;
    alt alt = 3;
    string bearer_token = 4;
    GoogleCloudMlV1__Model body = 5;
    string callback = 6;
    string fields = 7;
    string key = 8;
    string oauth_token = 9;
    // Required. The project name.
    string parent = 10;
    boolean pp = 11;
    boolean prettyPrint = 12;
    string quotaUser = 13;
    string uploadType = 14;
    string upload_protocol = 15;
}

message GetV1ParentVersionsRequest {
    $.xgafv $.xgafv = 1;
    string access_token = 2;
    alt alt = 3;
    string bearer_token = 4;
    string callback = 5;
    string fields = 6;
    string key = 7;
    string oauth_token = 8;
    // Optional. The number of versions to retrieve per "page" of results. If
    // there are more remaining results than this number, the response message
    // will contain a valid value in the `next_page_token` field.
    // 
    // The default value is 20, and the maximum page size is 100.
    int32 pageSize = 9;
    // Optional. A page token to request the next page of results.
    // 
    // You get the token from the `next_page_token` field of the response from
    // the previous call.
    string pageToken = 10;
    // Required. The name of the model for which to list the version.
    string parent = 11;
    boolean pp = 12;
    boolean prettyPrint = 13;
    string quotaUser = 14;
    string uploadType = 15;
    string upload_protocol = 16;
}

message PostV1ParentVersionsRequest {
    $.xgafv $.xgafv = 1;
    string access_token = 2;
    alt alt = 3;
    string bearer_token = 4;
    GoogleCloudMlV1__Version body = 5;
    string callback = 6;
    string fields = 7;
    string key = 8;
    string oauth_token = 9;
    // Required. The name of the model.
    string parent = 10;
    boolean pp = 11;
    boolean prettyPrint = 12;
    string quotaUser = 13;
    string uploadType = 14;
    string upload_protocol = 15;
}

message GetV1Resource:GetIamPolicyRequest {
    $.xgafv $.xgafv = 1;
    string access_token = 2;
    alt alt = 3;
    string bearer_token = 4;
    string callback = 5;
    string fields = 6;
    string key = 7;
    string oauth_token = 8;
    boolean pp = 9;
    boolean prettyPrint = 10;
    string quotaUser = 11;
    // REQUIRED: The resource for which the policy is being requested.
    // See the operation documentation for the appropriate value for this field.
    string resource = 12;
    string uploadType = 13;
    string upload_protocol = 14;
}

message PostV1Resource:SetIamPolicyRequest {
    $.xgafv $.xgafv = 1;
    string access_token = 2;
    alt alt = 3;
    string bearer_token = 4;
    GoogleIamV1__SetIamPolicyRequest body = 5;
    string callback = 6;
    string fields = 7;
    string key = 8;
    string oauth_token = 9;
    boolean pp = 10;
    boolean prettyPrint = 11;
    string quotaUser = 12;
    // REQUIRED: The resource for which the policy is being specified.
    // See the operation documentation for the appropriate value for this field.
    string resource = 13;
    string uploadType = 14;
    string upload_protocol = 15;
}

message PostV1Resource:TestIamPermissionsRequest {
    $.xgafv $.xgafv = 1;
    string access_token = 2;
    alt alt = 3;
    string bearer_token = 4;
    GoogleIamV1__TestIamPermissionsRequest body = 5;
    string callback = 6;
    string fields = 7;
    string key = 8;
    string oauth_token = 9;
    boolean pp = 10;
    boolean prettyPrint = 11;
    string quotaUser = 12;
    // REQUIRED: The resource for which the policy detail is being requested.
    // See the operation documentation for the appropriate value for this field.
    string resource = 13;
    string uploadType = 14;
    string upload_protocol = 15;
}

enum $.Xgafv {
    $XGAFV_1 = 0;
    $XGAFV_2 = 1;
}

message GoogleApi__HttpBody {
    // The HTTP Content-Type string representing the content type of the body.
    string contentType = 1;
    // HTTP body binary data.
    string data = 2;
    // Application specific response metadata. Must be set in the first response
    // for streaming APIs.
    message Extension {
    }
    repeated Extension extensions = 3;
}

message GoogleCloudMlV1_HyperparameterOutput_HyperparameterMetric {
    // The objective value at this training step.
    double objectiveValue = 1;
    // The global training step for this metric.
    string trainingStep = 2;
}

message GoogleCloudMlV1__AutoScaling {
    // Optional. The minimum number of nodes to allocate for this model. These
    // nodes are always up, starting from the time the model is deployed, so the
    // cost of operating this model will be at least
    // `rate` * `min_nodes` * number of hours since last billing cycle,
    // where `rate` is the cost per node-hour as documented in
    // [pricing](https://cloud.google.com/ml-engine/pricing#prediction_pricing),
    // even if no predictions are performed. There is additional cost for each
    // prediction performed.
    // 
    // Unlike manual scaling, if the load gets too heavy for the nodes
    // that are up, the service will automatically add nodes to handle the
    // increased load as well as scale back as traffic drops, always maintaining
    // at least `min_nodes`. You will be charged for the time in which additional
    // nodes are used.
    // 
    // If not specified, `min_nodes` defaults to 0, in which case, when traffic
    // to a model stops (and after a cool-down period), nodes will be shut down
    // and no charges will be incurred until traffic to the model resumes.
    int32 minNodes = 1;
}

message GoogleCloudMlV1__CancelJobRequest {
}

message GoogleCloudMlV1__GetConfigResponse {
    // The service account Cloud ML uses to access resources in the project.
    string serviceAccount = 1;
    // The project number for `service_account`.
    string serviceAccountProject = 2;
}

message GoogleCloudMlV1__HyperparameterOutput {
    // All recorded object metrics for this trial. This field is not currently
    // populated.
    repeated GoogleCloudMlV1_HyperparameterOutput_HyperparameterMetric allMetrics = 1;
    // The final objective metric seen for this trial.
    GoogleCloudMlV1_HyperparameterOutput_HyperparameterMetric finalMetric = 2;
    // The hyperparameters given to this trial.
    map<string, string> hyperparameters = 3;
    // The trial id for these results.
    string trialId = 4;
}

message GoogleCloudMlV1__HyperparameterSpec {
    // Required. The type of goal to use for tuning. Available types are
    // `MAXIMIZE` and `MINIMIZE`.
    // 
    // Defaults to `MAXIMIZE`.
    enum GoogleCloudMlV1__HyperparameterSpec_Goal {
        GOOGLECLOUDMLV1__HYPERPARAMETERSPEC_GOAL_GOAL_TYPE_UNSPECIFIED = 0;
        GOOGLECLOUDMLV1__HYPERPARAMETERSPEC_GOAL_MAXIMIZE = 1;
        GOOGLECLOUDMLV1__HYPERPARAMETERSPEC_GOAL_MINIMIZE = 2;
    }
    GoogleCloudMlV1__HyperparameterSpec_Goal goal = 1;
    // Optional. The Tensorflow summary tag name to use for optimizing trials. For
    // current versions of Tensorflow, this tag name should exactly match what is
    // shown in Tensorboard, including all scopes.  For versions of Tensorflow
    // prior to 0.12, this should be only the tag passed to tf.Summary.
    // By default, "training/hptuning/metric" will be used.
    string hyperparameterMetricTag = 2;
    // Optional. The number of training trials to run concurrently.
    // You can reduce the time it takes to perform hyperparameter tuning by adding
    // trials in parallel. However, each trail only benefits from the information
    // gained in completed trials. That means that a trial does not get access to
    // the results of trials running at the same time, which could reduce the
    // quality of the overall optimization.
    // 
    // Each trial will use the same scale tier and machine types.
    // 
    // Defaults to one.
    int32 maxParallelTrials = 3;
    // Optional. How many training trials should be attempted to optimize
    // the specified hyperparameters.
    // 
    // Defaults to one.
    int32 maxTrials = 4;
    // Required. The set of parameters to tune.
    repeated GoogleCloudMlV1__ParameterSpec params = 5;
}

message GoogleCloudMlV1__Job {
    // Output only. When the job was created.
    string createTime = 1;
    // Output only. When the job processing was completed.
    string endTime = 2;
    // Output only. The details of a failure or a cancellation.
    string errorMessage = 3;
    // Required. The user-specified id of the job.
    string jobId = 4;
    // Input parameters to create a prediction job.
    GoogleCloudMlV1__PredictionInput predictionInput = 5;
    // The current prediction job result.
    GoogleCloudMlV1__PredictionOutput predictionOutput = 6;
    // Output only. When the job processing was started.
    string startTime = 7;
    // Output only. The detailed state of a job.
    enum GoogleCloudMlV1__Job_State {
        GOOGLECLOUDMLV1__JOB_STATE_STATE_UNSPECIFIED = 0;
        GOOGLECLOUDMLV1__JOB_STATE_QUEUED = 1;
        GOOGLECLOUDMLV1__JOB_STATE_PREPARING = 2;
        GOOGLECLOUDMLV1__JOB_STATE_RUNNING = 3;
        GOOGLECLOUDMLV1__JOB_STATE_SUCCEEDED = 4;
        GOOGLECLOUDMLV1__JOB_STATE_FAILED = 5;
        GOOGLECLOUDMLV1__JOB_STATE_CANCELLING = 6;
        GOOGLECLOUDMLV1__JOB_STATE_CANCELLED = 7;
    }
    GoogleCloudMlV1__Job_State state = 8;
    // Input parameters to create a training job.
    GoogleCloudMlV1__TrainingInput trainingInput = 9;
    // The current training job result.
    GoogleCloudMlV1__TrainingOutput trainingOutput = 10;
}

message GoogleCloudMlV1__ListJobsResponse {
    // The list of jobs.
    repeated GoogleCloudMlV1__Job jobs = 1;
    // Optional. Pass this token as the `page_token` field of the request for a
    // subsequent call.
    string nextPageToken = 2;
}

message GoogleCloudMlV1__ListModelsResponse {
    // The list of models.
    repeated GoogleCloudMlV1__Model models = 1;
    // Optional. Pass this token as the `page_token` field of the request for a
    // subsequent call.
    string nextPageToken = 2;
}

message GoogleCloudMlV1__ListVersionsResponse {
    // Optional. Pass this token as the `page_token` field of the request for a
    // subsequent call.
    string nextPageToken = 1;
    // The list of versions.
    repeated GoogleCloudMlV1__Version versions = 2;
}

message GoogleCloudMlV1__ManualScaling {
    // The number of nodes to allocate for this model. These nodes are always up,
    // starting from the time the model is deployed, so the cost of operating
    // this model will be proportional to `nodes` * number of hours since
    // last billing cycle plus the cost for each prediction performed.
    int32 nodes = 1;
}

message GoogleCloudMlV1__Model {
    // Output only. The default version of the model. This version will be used to
    // handle prediction requests that do not specify a version.
    // 
    // You can change the default version by calling
    // [projects.methods.versions.setDefault](/ml-engine/reference/rest/v1/projects.models.versions/setDefault).
    GoogleCloudMlV1__Version defaultVersion = 1;
    // Optional. The description specified for the model when it was created.
    string description = 2;
    // Required. The name specified for the model when it was created.
    // 
    // The model name must be unique within the project it is created in.
    string name = 3;
    // Optional. If true, enables StackDriver Logging for online prediction.
    // Default is false.
    bool onlinePredictionLogging = 4;
    // Optional. The list of regions where the model is going to be deployed.
    // Currently only one region per model is supported.
    // Defaults to 'us-central1' if nothing is set.
    // Note:
    // *   No matter where a model is deployed, it can always be accessed by
    //     users from anywhere, both for online and batch prediction.
    // *   The region for a batch prediction job is set by the region field when
    //     submitting the batch prediction job and does not take its value from
    //     this field.
    repeated string regions = 5;
}

message GoogleCloudMlV1__OperationMetadata {
    // The time the operation was submitted.
    string createTime = 1;
    // The time operation processing completed.
    string endTime = 2;
    // Indicates whether a request to cancel this operation has been made.
    bool isCancellationRequested = 3;
    // Contains the name of the model associated with the operation.
    string modelName = 4;
    // The operation type.
    enum GoogleCloudMlV1__OperationMetadata_OperationType {
        GOOGLECLOUDMLV1__OPERATIONMETADATA_OPERATIONTYPE_OPERATION_TYPE_UNSPECIFIED = 0;
        GOOGLECLOUDMLV1__OPERATIONMETADATA_OPERATIONTYPE_CREATE_VERSION = 1;
        GOOGLECLOUDMLV1__OPERATIONMETADATA_OPERATIONTYPE_DELETE_VERSION = 2;
        GOOGLECLOUDMLV1__OPERATIONMETADATA_OPERATIONTYPE_DELETE_MODEL = 3;
        GOOGLECLOUDMLV1__OPERATIONMETADATA_OPERATIONTYPE_UPDATE_MODEL = 4;
        GOOGLECLOUDMLV1__OPERATIONMETADATA_OPERATIONTYPE_UPDATE_VERSION = 5;
    }
    GoogleCloudMlV1__OperationMetadata_OperationType operationType = 5;
    // The time operation processing started.
    string startTime = 6;
    // Contains the version associated with the operation.
    GoogleCloudMlV1__Version version = 7;
}

message GoogleCloudMlV1__ParameterSpec {
    // Required if type is `CATEGORICAL`. The list of possible categories.
    repeated string categoricalValues = 1;
    // Required if type is `DISCRETE`.
    // A list of feasible points.
    // The list should be in strictly increasing order. For instance, this
    // parameter might have possible settings of 1.5, 2.5, and 4.0. This list
    // should not contain more than 1,000 values.
    repeated double discreteValues = 2;
    // Required if typeis `DOUBLE` or `INTEGER`. This field
    // should be unset if type is `CATEGORICAL`. This value should be integers if
    // type is `INTEGER`.
    double maxValue = 3;
    // Required if type is `DOUBLE` or `INTEGER`. This field
    // should be unset if type is `CATEGORICAL`. This value should be integers if
    // type is INTEGER.
    double minValue = 4;
    // Required. The parameter name must be unique amongst all ParameterConfigs in
    // a HyperparameterSpec message. E.g., "learning_rate".
    string parameterName = 5;
    // Optional. How the parameter should be scaled to the hypercube.
    // Leave unset for categorical parameters.
    // Some kind of scaling is strongly recommended for real or integral
    // parameters (e.g., `UNIT_LINEAR_SCALE`).
    enum GoogleCloudMlV1__ParameterSpec_ScaleType {
        GOOGLECLOUDMLV1__PARAMETERSPEC_SCALETYPE_NONE = 0;
        GOOGLECLOUDMLV1__PARAMETERSPEC_SCALETYPE_UNIT_LINEAR_SCALE = 1;
        GOOGLECLOUDMLV1__PARAMETERSPEC_SCALETYPE_UNIT_LOG_SCALE = 2;
        GOOGLECLOUDMLV1__PARAMETERSPEC_SCALETYPE_UNIT_REVERSE_LOG_SCALE = 3;
    }
    GoogleCloudMlV1__ParameterSpec_ScaleType scaleType = 6;
    // Required. The type of the parameter.
    enum GoogleCloudMlV1__ParameterSpec_Type {
        GOOGLECLOUDMLV1__PARAMETERSPEC_TYPE_PARAMETER_TYPE_UNSPECIFIED = 0;
        GOOGLECLOUDMLV1__PARAMETERSPEC_TYPE_DOUBLE = 1;
        GOOGLECLOUDMLV1__PARAMETERSPEC_TYPE_INTEGER = 2;
        GOOGLECLOUDMLV1__PARAMETERSPEC_TYPE_CATEGORICAL = 3;
        GOOGLECLOUDMLV1__PARAMETERSPEC_TYPE_DISCRETE = 4;
    }
    GoogleCloudMlV1__ParameterSpec_Type type = 7;
}

message GoogleCloudMlV1__PredictRequest {
    // 
    // Required. The prediction request body.
    GoogleApi__HttpBody httpBody = 1;
}

message GoogleCloudMlV1__PredictionInput {
    // Optional. Number of records per batch, defaults to 64.
    // The service will buffer batch_size number of records in memory before
    // invoking one Tensorflow prediction call internally. So take the record
    // size and memory available into consideration when setting this parameter.
    string batchSize = 1;
    // Required. The format of the input data files.
    enum GoogleCloudMlV1__PredictionInput_DataFormat {
        GOOGLECLOUDMLV1__PREDICTIONINPUT_DATAFORMAT_DATA_FORMAT_UNSPECIFIED = 0;
        GOOGLECLOUDMLV1__PREDICTIONINPUT_DATAFORMAT_TEXT = 1;
        GOOGLECLOUDMLV1__PREDICTIONINPUT_DATAFORMAT_TF_RECORD = 2;
        GOOGLECLOUDMLV1__PREDICTIONINPUT_DATAFORMAT_TF_RECORD_GZIP = 3;
    }
    GoogleCloudMlV1__PredictionInput_DataFormat dataFormat = 2;
    // Required. The Google Cloud Storage location of the input data files.
    // May contain wildcards.
    repeated string inputPaths = 3;
    // Optional. The maximum number of workers to be used for parallel processing.
    // Defaults to 10 if not specified.
    string maxWorkerCount = 4;
    // Use this field if you want to use the default version for the specified
    // model. The string must use the following format:
    // 
    // `"projects/<var>[YOUR_PROJECT]</var>/models/<var>[YOUR_MODEL]</var>"`
    string modelName = 5;
    // Required. The output Google Cloud Storage location.
    string outputPath = 6;
    // Required. The Google Compute Engine region to run the prediction job in.
    string region = 7;
    // Optional. The Google Cloud ML runtime version to use for this batch
    // prediction. If not set, Google Cloud ML will pick the runtime version used
    // during the CreateVersion request for this model version, or choose the
    // latest stable version when model version information is not available
    // such as when the model is specified by uri.
    string runtimeVersion = 8;
    // Use this field if you want to specify a Google Cloud Storage path for
    // the model to use.
    string uri = 9;
    // Use this field if you want to specify a version of the model to use. The
    // string is formatted the same way as `model_version`, with the addition
    // of the version information:
    // 
    // `"projects/<var>[YOUR_PROJECT]</var>/models/<var>YOUR_MODEL/versions/<var>[YOUR_VERSION]</var>"`
    string versionName = 10;
}

message GoogleCloudMlV1__PredictionOutput {
    // The number of data instances which resulted in errors.
    string errorCount = 1;
    // Node hours used by the batch prediction job.
    double nodeHours = 2;
    // The output Google Cloud Storage location provided at the job creation time.
    string outputPath = 3;
    // The number of generated predictions.
    string predictionCount = 4;
}

message GoogleCloudMlV1__SetDefaultVersionRequest {
}

message GoogleCloudMlV1__TrainingInput {
    // Optional. Command line arguments to pass to the program.
    repeated string args = 1;
    // Optional. The set of Hyperparameters to tune.
    GoogleCloudMlV1__HyperparameterSpec hyperparameters = 2;
    // Optional. A Google Cloud Storage path in which to store training outputs
    // and other data needed for training. This path is passed to your TensorFlow
    // program as the 'job_dir' command-line argument. The benefit of specifying
    // this field is that Cloud ML validates the path for use in training.
    string jobDir = 3;
    // Optional. Specifies the type of virtual machine to use for your training
    // job's master worker.
    // 
    // The following types are supported:
    // 
    // <dl>
    //   <dt>standard</dt>
    //   <dd>
    //   A basic machine configuration suitable for training simple models with
    //   small to moderate datasets.
    //   </dd>
    //   <dt>large_model</dt>
    //   <dd>
    //   A machine with a lot of memory, specially suited for parameter servers
    //   when your model is large (having many hidden layers or layers with very
    //   large numbers of nodes).
    //   </dd>
    //   <dt>complex_model_s</dt>
    //   <dd>
    //   A machine suitable for the master and workers of the cluster when your
    //   model requires more computation than the standard machine can handle
    //   satisfactorily.
    //   </dd>
    //   <dt>complex_model_m</dt>
    //   <dd>
    //   A machine with roughly twice the number of cores and roughly double the
    //   memory of <code suppresswarning="true">complex_model_s</code>.
    //   </dd>
    //   <dt>complex_model_l</dt>
    //   <dd>
    //   A machine with roughly twice the number of cores and roughly double the
    //   memory of <code suppresswarning="true">complex_model_m</code>.
    //   </dd>
    //   <dt>standard_gpu</dt>
    //   <dd>
    //   A machine equivalent to <code suppresswarning="true">standard</code> that
    //   also includes a
    //   <a href="/ml-engine/docs/how-tos/using-gpus">
    //   GPU that you can use in your trainer</a>.
    //   </dd>
    //   <dt>complex_model_m_gpu</dt>
    //   <dd>
    //   A machine equivalent to
    //   <code suppresswarning="true">complex_model_m</code> that also includes
    //   four GPUs.
    //   </dd>
    // </dl>
    // 
    // You must set this value when `scaleTier` is set to `CUSTOM`.
    string masterType = 4;
    // Required. The Google Cloud Storage location of the packages with
    // the training program and any additional dependencies.
    // The maximum number of package URIs is 100.
    repeated string packageUris = 5;
    // Optional. The number of parameter server replicas to use for the training
    // job. Each replica in the cluster will be of the type specified in
    // `parameter_server_type`.
    // 
    // This value can only be used when `scale_tier` is set to `CUSTOM`.If you
    // set this value, you must also set `parameter_server_type`.
    string parameterServerCount = 6;
    // Optional. Specifies the type of virtual machine to use for your training
    // job's parameter server.
    // 
    // The supported values are the same as those described in the entry for
    // `master_type`.
    // 
    // This value must be present when `scaleTier` is set to `CUSTOM` and
    // `parameter_server_count` is greater than zero.
    string parameterServerType = 7;
    // Required. The Python module name to run after installing the packages.
    string pythonModule = 8;
    // Required. The Google Compute Engine region to run the training job in.
    string region = 9;
    // Optional. The Google Cloud ML runtime version to use for training.  If not
    // set, Google Cloud ML will choose the latest stable version.
    string runtimeVersion = 10;
    // Required. Specifies the machine types, the number of replicas for workers
    // and parameter servers.
    enum GoogleCloudMlV1__TrainingInput_ScaleTier {
        GOOGLECLOUDMLV1__TRAININGINPUT_SCALETIER_BASIC = 0;
        GOOGLECLOUDMLV1__TRAININGINPUT_SCALETIER_STANDARD_1 = 1;
        GOOGLECLOUDMLV1__TRAININGINPUT_SCALETIER_PREMIUM_1 = 2;
        GOOGLECLOUDMLV1__TRAININGINPUT_SCALETIER_BASIC_GPU = 3;
        GOOGLECLOUDMLV1__TRAININGINPUT_SCALETIER_BASIC_TPU = 4;
        GOOGLECLOUDMLV1__TRAININGINPUT_SCALETIER_CUSTOM = 5;
    }
    GoogleCloudMlV1__TrainingInput_ScaleTier scaleTier = 11;
    // Optional. The number of worker replicas to use for the training job. Each
    // replica in the cluster will be of the type specified in `worker_type`.
    // 
    // This value can only be used when `scale_tier` is set to `CUSTOM`. If you
    // set this value, you must also set `worker_type`.
    string workerCount = 12;
    // Optional. Specifies the type of virtual machine to use for your training
    // job's worker nodes.
    // 
    // The supported values are the same as those described in the entry for
    // `masterType`.
    // 
    // This value must be present when `scaleTier` is set to `CUSTOM` and
    // `workerCount` is greater than zero.
    string workerType = 13;
}

message GoogleCloudMlV1__TrainingOutput {
    // The number of hyperparameter tuning trials that completed successfully.
    // Only set for hyperparameter tuning jobs.
    string completedTrialCount = 1;
    // The amount of ML units consumed by the job.
    double consumedMLUnits = 2;
    // Whether this job is a hyperparameter tuning job.
    bool isHyperparameterTuningJob = 3;
    // Results for individual Hyperparameter trials.
    // Only set for hyperparameter tuning jobs.
    repeated GoogleCloudMlV1__HyperparameterOutput trials = 4;
}

message GoogleCloudMlV1__Version {
    // Automatically scale the number of nodes used to serve the model in
    // response to increases and decreases in traffic. Care should be
    // taken to ramp up traffic according to the model's ability to scale
    // or you will start seeing increases in latency and 429 response codes.
    GoogleCloudMlV1__AutoScaling autoScaling = 1;
    // Output only. The time the version was created.
    string createTime = 2;
    // Required. The Google Cloud Storage location of the trained model used to
    // create the version. See the
    // [overview of model
    // deployment](/ml-engine/docs/concepts/deployment-overview) for more
    // information.
    // 
    // When passing Version to
    // [projects.models.versions.create](/ml-engine/reference/rest/v1/projects.models.versions/create)
    // the model service uses the specified location as the source of the model.
    // Once deployed, the model version is hosted by the prediction service, so
    // this location is useful only as a historical record.
    // The total number of model files can't exceed 1000.
    string deploymentUri = 3;
    // Optional. The description specified for the version when it was created.
    string description = 4;
    // Output only. The details of a failure or a cancellation.
    string errorMessage = 5;
    // Output only. If true, this version will be used to handle prediction
    // requests that do not specify a version.
    // 
    // You can change the default version by calling
    // [projects.methods.versions.setDefault](/ml-engine/reference/rest/v1/projects.models.versions/setDefault).
    bool isDefault = 6;
    // Output only. The time the version was last used for prediction.
    string lastUseTime = 7;
    // Manually select the number of nodes to use for serving the
    // model. You should generally use `auto_scaling` with an appropriate
    // `min_nodes` instead, but this option is available if you want more
    // predictable billing. Beware that latency and error rates will increase
    // if the traffic exceeds that capability of the system to serve it based
    // on the selected number of nodes.
    GoogleCloudMlV1__ManualScaling manualScaling = 8;
    // Required.The name specified for the version when it was created.
    // 
    // The version name must be unique within the model it is created in.
    string name = 9;
    // Optional. The Google Cloud ML runtime version to use for this deployment.
    // If not set, Google Cloud ML will choose a version.
    string runtimeVersion = 10;
    // Output only. The state of a version.
    enum GoogleCloudMlV1__Version_State {
        GOOGLECLOUDMLV1__VERSION_STATE_UNKNOWN = 0;
        GOOGLECLOUDMLV1__VERSION_STATE_READY = 1;
        GOOGLECLOUDMLV1__VERSION_STATE_CREATING = 2;
        GOOGLECLOUDMLV1__VERSION_STATE_FAILED = 3;
        GOOGLECLOUDMLV1__VERSION_STATE_DELETING = 4;
    }
    GoogleCloudMlV1__Version_State state = 11;
}

message GoogleIamV1__AuditConfig {
    // The configuration for logging of each type of permission.
    // Next ID: 4
    repeated GoogleIamV1__AuditLogConfig auditLogConfigs = 1;
    repeated string exemptedMembers = 2;
    // Specifies a service that will be enabled for audit logging.
    // For example, `storage.googleapis.com`, `cloudsql.googleapis.com`.
    // `allServices` is a special value that covers all services.
    string service = 3;
}

message GoogleIamV1__AuditLogConfig {
    // Specifies the identities that do not cause logging for this type of
    // permission.
    // Follows the same format of Binding.members.
    repeated string exemptedMembers = 1;
    // The log type that this config enables.
    enum GoogleIamV1__AuditLogConfig_LogType {
        GOOGLEIAMV1__AUDITLOGCONFIG_LOGTYPE_LOG_TYPE_UNSPECIFIED = 0;
        GOOGLEIAMV1__AUDITLOGCONFIG_LOGTYPE_ADMIN_READ = 1;
        GOOGLEIAMV1__AUDITLOGCONFIG_LOGTYPE_DATA_WRITE = 2;
        GOOGLEIAMV1__AUDITLOGCONFIG_LOGTYPE_DATA_READ = 3;
    }
    GoogleIamV1__AuditLogConfig_LogType logType = 2;
}

message GoogleIamV1__Binding {
    // The condition that is associated with this binding.
    // NOTE: an unsatisfied condition will not allow user access via current
    // binding. Different bindings, including their conditions, are examined
    // independently.
    // This field is GOOGLE_INTERNAL.
    GoogleType__Expr condition = 1;
    // Specifies the identities requesting access for a Cloud Platform resource.
    // `members` can have the following values:
    // 
    // * `allUsers`: A special identifier that represents anyone who is
    //    on the internet; with or without a Google account.
    // 
    // * `allAuthenticatedUsers`: A special identifier that represents anyone
    //    who is authenticated with a Google account or a service account.
    // 
    // * `user:{emailid}`: An email address that represents a specific Google
    //    account. For example, `alice@gmail.com` or `joe@example.com`.
    // 
    // 
    // * `serviceAccount:{emailid}`: An email address that represents a service
    //    account. For example, `my-other-app@appspot.gserviceaccount.com`.
    // 
    // * `group:{emailid}`: An email address that represents a Google group.
    //    For example, `admins@example.com`.
    // 
    // 
    // * `domain:{domain}`: A Google Apps domain name that represents all the
    //    users of that domain. For example, `google.com` or `example.com`.
    // 
    repeated string members = 2;
    // Role that is assigned to `members`.
    // For example, `roles/viewer`, `roles/editor`, or `roles/owner`.
    // Required
    string role = 3;
}

message GoogleIamV1__Policy {
    // Specifies cloud audit logging configuration for this policy.
    repeated GoogleIamV1__AuditConfig auditConfigs = 1;
    // Associates a list of `members` to a `role`.
    // `bindings` with no members will result in an error.
    repeated GoogleIamV1__Binding bindings = 2;
    // `etag` is used for optimistic concurrency control as a way to help
    // prevent simultaneous updates of a policy from overwriting each other.
    // It is strongly suggested that systems make use of the `etag` in the
    // read-modify-write cycle to perform policy updates in order to avoid race
    // conditions: An `etag` is returned in the response to `getIamPolicy`, and
    // systems are expected to put that etag in the request to `setIamPolicy` to
    // ensure that their change will be applied to the same version of the policy.
    // 
    // If no `etag` is provided in the call to `setIamPolicy`, then the existing
    // policy is overwritten blindly.
    string etag = 3;
    bool iamOwned = 4;
    // Version of the `Policy`. The default version is 0.
    int32 version = 5;
}

message GoogleIamV1__SetIamPolicyRequest {
    // REQUIRED: The complete policy to be applied to the `resource`. The size of
    // the policy is limited to a few 10s of KB. An empty policy is a
    // valid policy but certain Cloud Platform services (such as Projects)
    // might reject them.
    GoogleIamV1__Policy policy = 1;
    // OPTIONAL: A FieldMask specifying which fields of the policy to modify. Only
    // the fields in the mask will be modified. If no mask is provided, the
    // following default mask is used:
    // paths: "bindings, etag"
    // This field is only used by Cloud IAM.
    string updateMask = 2;
}

message GoogleIamV1__TestIamPermissionsRequest {
    // The set of permissions to check for the `resource`. Permissions with
    // wildcards (such as '*' or 'storage.*') are not allowed. For more
    // information see
    // [IAM Overview](https://cloud.google.com/iam/docs/overview#permissions).
    repeated string permissions = 1;
}

message GoogleIamV1__TestIamPermissionsResponse {
    // A subset of `TestPermissionsRequest.permissions` that the caller is
    // allowed.
    repeated string permissions = 1;
}

message GoogleLongrunning__ListOperationsResponse {
    // The standard List next-page token.
    string nextPageToken = 1;
    // A list of operations that matches the specified filter in the request.
    repeated GoogleLongrunning__Operation operations = 2;
}

message GoogleLongrunning__Operation {
    // If the value is `false`, it means the operation is still in progress.
    // If `true`, the operation is completed, and either `error` or `response` is
    // available.
    bool done = 1;
    // The error result of the operation in case of failure or cancellation.
    GoogleRpc__Status error = 2;
    // Service-specific metadata associated with the operation.  It typically
    // contains progress information and common metadata such as create time.
    // Some services might not provide such metadata.  Any method that returns a
    // long-running operation should document the metadata type, if any.
    map<string, > metadata = 3;
    // The server-assigned name, which is only unique within the same service that
    // originally returns it. If you use the default HTTP mapping, the
    // `name` should have the format of `operations/some/unique/name`.
    string name = 4;
    // The normal response of the operation in case of success.  If the original
    // method returns no data on success, such as `Delete`, the response is
    // `google.protobuf.Empty`.  If the original method is standard
    // `Get`/`Create`/`Update`, the response should be the resource.  For other
    // methods, the response should have the type `XxxResponse`, where `Xxx`
    // is the original method name.  For example, if the original method name
    // is `TakeSnapshot()`, the inferred response type is
    // `TakeSnapshotResponse`.
    map<string, > response = 5;
}

message GoogleProtobuf__Empty {
}

message GoogleRpc__Status {
    // The status code, which should be an enum value of google.rpc.Code.
    int32 code = 1;
    // A list of messages that carry the error details.  There is a common set of
    // message types for APIs to use.
    message Detail {
    }
    repeated Detail details = 2;
    // A developer-facing error message, which should be in English. Any
    // user-facing error message should be localized and sent in the
    // google.rpc.Status.details field, or localized by the client.
    string message = 3;
}

message GoogleType__Expr {
    // An optional description of the expression. This is a longer text which
    // describes the expression, e.g. when hovered over it in a UI.
    string description = 1;
    // Textual representation of an expression in
    // Common Expression Language syntax.
    // 
    // The application context of the containing message determines which
    // well-known feature set of CEL is supported.
    string expression = 2;
    // An optional string indicating the location of the expression for error
    // reporting, e.g. a file name and a position in the file.
    string location = 3;
    // An optional title for the expression, i.e. a short string describing
    // its purpose. This can be used e.g. in UIs which allow to enter the
    // expression.
    string title = 4;
}

enum Alt {
    JSON = 0;
    MEDIA = 1;
    PROTO = 2;
}

service GoogleCloudMachineLearningEngineService {
    // Describes a job.
    rpc GetV1Name(GetV1NameRequest) returns (GoogleCloudMlV1__Job) {
      option (google.api.http) = {
        get: "//v1/{name}"
      };
    }
    // Deletes a long-running operation. This method indicates that the client is
    // no longer interested in the operation result. It does not cancel the
    // operation. If the server doesn't support this method, it returns
    // `google.rpc.Code.UNIMPLEMENTED`.
    rpc DeleteV1Name(DeleteV1NameRequest) returns (GoogleProtobuf__Empty) {
      option (google.api.http) = {
        delete: "//v1/{name}"
      };
    }
    // Lists operations that match the specified filter in the request. If the
    // server doesn't support this method, it returns `UNIMPLEMENTED`.
    // 
    // NOTE: the `name` binding allows API services to override the binding
    // to use different resource name schemes, such as `users/*/operations`. To
    // override the binding, API services can add a binding such as
    // `"/v1/{name=users/*}/operations"` to their service configuration.
    // For backwards compatibility, the default name includes the operations
    // collection id, however overriding users must ensure the name binding
    // is the parent resource, without the operations collection id.
    rpc GetV1NameOperations(GetV1NameOperationsRequest) returns (GoogleLongrunning__ListOperationsResponse) {
      option (google.api.http) = {
        get: "//v1/{name}/operations"
      };
    }
    // Cancels a running job.
    rpc PostV1Name:Cancel(PostV1Name:CancelRequest) returns (GoogleProtobuf__Empty) {
      option (google.api.http) = {
        post: "//v1/{name}:cancel"
        body: "body"
      };
    }
    // Get the service account information associated with your project. You need
    // this information in order to grant the service account persmissions for
    // the Google Cloud Storage location where you put your model training code
    // for training the model with Google Cloud Machine Learning.
    rpc GetV1Name:GetConfig(GetV1Name:GetConfigRequest) returns (GoogleCloudMlV1__GetConfigResponse) {
      option (google.api.http) = {
        get: "//v1/{name}:getConfig"
      };
    }
    // Performs prediction on the data in the request.
    // 
    // **** REMOVE FROM GENERATED DOCUMENTATION
    rpc PostV1Name:Predict(PostV1Name:PredictRequest) returns (GoogleApi__HttpBody) {
      option (google.api.http) = {
        post: "//v1/{name}:predict"
        body: "body"
      };
    }
    // Designates a version to be the default for the model.
    // 
    // The default version is used for prediction requests made against the model
    // that don't specify a version.
    // 
    // The first version to be created for a model is automatically set as the
    // default. You must make any subsequent changes to the default version
    // setting manually using this method.
    rpc PostV1Name:SetDefault(PostV1Name:SetDefaultRequest) returns (GoogleCloudMlV1__Version) {
      option (google.api.http) = {
        post: "//v1/{name}:setDefault"
        body: "body"
      };
    }
    // Lists the jobs in the project.
    rpc GetV1ParentJobs(GetV1ParentJobsRequest) returns (GoogleCloudMlV1__ListJobsResponse) {
      option (google.api.http) = {
        get: "//v1/{parent}/jobs"
      };
    }
    // Creates a training or a batch prediction job.
    rpc PostV1ParentJobs(PostV1ParentJobsRequest) returns (GoogleCloudMlV1__Job) {
      option (google.api.http) = {
        post: "//v1/{parent}/jobs"
        body: "body"
      };
    }
    // Lists the models in a project.
    // 
    // Each project can contain multiple models, and each model can have multiple
    // versions.
    rpc GetV1ParentModels(GetV1ParentModelsRequest) returns (GoogleCloudMlV1__ListModelsResponse) {
      option (google.api.http) = {
        get: "//v1/{parent}/models"
      };
    }
    // Creates a model which will later contain one or more versions.
    // 
    // You must add at least one version before you can request predictions from
    // the model. Add versions by calling
    // [projects.models.versions.create](/ml-engine/reference/rest/v1/projects.models.versions/create).
    rpc PostV1ParentModels(PostV1ParentModelsRequest) returns (GoogleCloudMlV1__Model) {
      option (google.api.http) = {
        post: "//v1/{parent}/models"
        body: "body"
      };
    }
    // Gets basic information about all the versions of a model.
    // 
    // If you expect that a model has a lot of versions, or if you need to handle
    // only a limited number of results at a time, you can request that the list
    // be retrieved in batches (called pages):
    rpc GetV1ParentVersions(GetV1ParentVersionsRequest) returns (GoogleCloudMlV1__ListVersionsResponse) {
      option (google.api.http) = {
        get: "//v1/{parent}/versions"
      };
    }
    // Creates a new version of a model from a trained TensorFlow model.
    // 
    // If the version created in the cloud by this call is the first deployed
    // version of the specified model, it will be made the default version of the
    // model. When you add a version to a model that already has one or more
    // versions, the default version does not automatically change. If you want a
    // new version to be the default, you must call
    // [projects.models.versions.setDefault](/ml-engine/reference/rest/v1/projects.models.versions/setDefault).
    rpc PostV1ParentVersions(PostV1ParentVersionsRequest) returns (GoogleLongrunning__Operation) {
      option (google.api.http) = {
        post: "//v1/{parent}/versions"
        body: "body"
      };
    }
    // Gets the access control policy for a resource.
    // Returns an empty policy if the resource exists and does not have a policy
    // set.
    rpc GetV1Resource:GetIamPolicy(GetV1Resource:GetIamPolicyRequest) returns (GoogleIamV1__Policy) {
      option (google.api.http) = {
        get: "//v1/{resource}:getIamPolicy"
      };
    }
    // Sets the access control policy on the specified resource. Replaces any
    // existing policy.
    rpc PostV1Resource:SetIamPolicy(PostV1Resource:SetIamPolicyRequest) returns (GoogleIamV1__Policy) {
      option (google.api.http) = {
        post: "//v1/{resource}:setIamPolicy"
        body: "body"
      };
    }
    // Returns permissions that a caller has on the specified resource.
    // If the resource does not exist, this will return an empty set of
    // permissions, not a NOT_FOUND error.
    // 
    // Note: This operation is designed to be used for building permission-aware
    // UIs and command-line tools, not for authorization checking. This operation
    // may "fail open" without warning.
    rpc PostV1Resource:TestIamPermissions(PostV1Resource:TestIamPermissionsRequest) returns (GoogleIamV1__TestIamPermissionsResponse) {
      option (google.api.http) = {
        post: "//v1/{resource}:testIamPermissions"
        body: "body"
      };
    }
}
