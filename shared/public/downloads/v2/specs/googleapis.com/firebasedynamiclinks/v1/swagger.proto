syntax = "proto3";

import "google/api/annotations.proto";

package firebasedynamiclinks;

message PostV1InstallAttributionRequest {
    $.xgafv $.xgafv = 1;
    string access_token = 2;
    alt alt = 3;
    string bearer_token = 4;
    GetIosPostInstallAttributionRequest body = 5;
    string callback = 6;
    string fields = 7;
    string key = 8;
    string oauth_token = 9;
    boolean pp = 10;
    boolean prettyPrint = 11;
    string quotaUser = 12;
    string uploadType = 13;
    string upload_protocol = 14;
}

message PostV1ShortLinksRequest {
    $.xgafv $.xgafv = 1;
    string access_token = 2;
    alt alt = 3;
    string bearer_token = 4;
    CreateShortDynamicLinkRequest body = 5;
    string callback = 6;
    string fields = 7;
    string key = 8;
    string oauth_token = 9;
    boolean pp = 10;
    boolean prettyPrint = 11;
    string quotaUser = 12;
    string uploadType = 13;
    string upload_protocol = 14;
}

message GetV1DynamicLinkLinkStatsRequest {
    $.xgafv $.xgafv = 1;
    string access_token = 2;
    alt alt = 3;
    string bearer_token = 4;
    string callback = 5;
    // The span of time requested in days.
    string durationDays = 6;
    // Dynamic Link URL. e.g. https://abcd.app.goo.gl/wxyz
    string dynamicLink = 7;
    string fields = 8;
    string key = 9;
    string oauth_token = 10;
    boolean pp = 11;
    boolean prettyPrint = 12;
    string quotaUser = 13;
    string uploadType = 14;
    string upload_protocol = 15;
}

enum $.Xgafv {
    $XGAFV_1 = 0;
    $XGAFV_2 = 1;
}

message AnalyticsInfo {
    // Google Play Campaign Measurements.
    GooglePlayAnalytics googlePlayAnalytics = 1;
    // iTunes Connect App Analytics.
    ITunesConnectAnalytics itunesConnectAnalytics = 2;
}

message AndroidInfo {
    // Link to open on Android if the app is not installed.
    string androidFallbackLink = 1;
    // If specified, this overrides the ‘link’ parameter on Android.
    string androidLink = 2;
    // Minimum version code for the Android app. If the installed app’s version
    // code is lower, then the user is taken to the Play Store.
    string androidMinPackageVersionCode = 3;
    // Android package name of the app.
    string androidPackageName = 4;
}

message CreateShortDynamicLinkRequest {
    // Information about the Dynamic Link to be shortened.
    // [Learn more](https://firebase.google.com/docs/dynamic-links/android#create-a-dynamic-link-programmatically).
    DynamicLinkInfo dynamicLinkInfo = 1;
    // Full long Dynamic Link URL with desired query parameters specified.
    // For example,
    // "https://sample.app.goo.gl/?link=http://www.google.com&apn=com.sample",
    // [Learn more](https://firebase.google.com/docs/dynamic-links/android#create-a-dynamic-link-programmatically).
    string longDynamicLink = 2;
    // Short Dynamic Link suffix. Optional.
    Suffix suffix = 3;
}

message CreateShortDynamicLinkResponse {
    // Preivew link to show the link flow chart.
    string previewLink = 1;
    // Short Dynamic Link value. e.g. https://abcd.app.goo.gl/wxyz
    string shortLink = 2;
    // Information about potential warnings on link creation.
    repeated DynamicLinkWarning warning = 3;
}

message DeviceInfo {
    // Device model name.
    string deviceModelName = 1;
    // Device language code setting.
    string languageCode = 2;
    // Device display resolution height.
    string screenResolutionHeight = 3;
    // Device display resolution width.
    string screenResolutionWidth = 4;
    // Device timezone setting.
    string timezone = 5;
}

message DynamicLinkEventStat {
    // The number of times this event occurred.
    string count = 1;
    // Link event.
    enum DynamicLinkEventStat_Event {
        DYNAMICLINKEVENTSTAT_EVENT_DYNAMIC_LINK_EVENT_UNSPECIFIED = 0;
        DYNAMICLINKEVENTSTAT_EVENT_CLICK = 1;
        DYNAMICLINKEVENTSTAT_EVENT_REDIRECT = 2;
        DYNAMICLINKEVENTSTAT_EVENT_APP_INSTALL = 3;
        DYNAMICLINKEVENTSTAT_EVENT_APP_FIRST_OPEN = 4;
        DYNAMICLINKEVENTSTAT_EVENT_APP_RE_OPEN = 5;
    }
    DynamicLinkEventStat_Event event = 2;
    // Requested platform.
    enum DynamicLinkEventStat_Platform {
        DYNAMICLINKEVENTSTAT_PLATFORM_DYNAMIC_LINK_PLATFORM_UNSPECIFIED = 0;
        DYNAMICLINKEVENTSTAT_PLATFORM_ANDROID = 1;
        DYNAMICLINKEVENTSTAT_PLATFORM_IOS = 2;
        DYNAMICLINKEVENTSTAT_PLATFORM_DESKTOP = 3;
    }
    DynamicLinkEventStat_Platform platform = 3;
}

message DynamicLinkInfo {
    // Parameters used for tracking. See all tracking parameters in the
    // [documentation](https://firebase.google.com/docs/dynamic-links/create-manually).
    AnalyticsInfo analyticsInfo = 1;
    // Android related information. See Android related parameters in the
    // [documentation](https://firebase.google.com/docs/dynamic-links/create-manually).
    AndroidInfo androidInfo = 2;
    // Dynamic Links domain that the project owns, e.g. abcd.app.goo.gl
    // [Learn more](https://firebase.google.com/docs/dynamic-links/android/receive)
    // on how to set up Dynamic Link domain associated with your Firebase project.
    // 
    // Required.
    string dynamicLinkDomain = 3;
    // iOS related information. See iOS related parameters in the
    // [documentation](https://firebase.google.com/docs/dynamic-links/create-manually).
    IosInfo iosInfo = 4;
    // The link your app will open, You can specify any URL your app can handle.
    // This link must be a well-formatted URL, be properly URL-encoded, and use
    // the HTTP or HTTPS scheme. See 'link' parameters in the
    // [documentation](https://firebase.google.com/docs/dynamic-links/create-manually).
    // 
    // Required.
    string link = 5;
    // Information of navigation behavior of a Firebase Dynamic Links.
    NavigationInfo navigationInfo = 6;
    // Parameters for social meta tag params.
    // Used to set meta tag data for link previews on social sites.
    SocialMetaTagInfo socialMetaTagInfo = 7;
}

message DynamicLinkStats {
    // Dynamic Link event stats.
    repeated DynamicLinkEventStat linkEventStats = 1;
}

message DynamicLinkWarning {
    // The warning code.
    enum DynamicLinkWarning_WarningCode {
        DYNAMICLINKWARNING_WARNINGCODE_CODE_UNSPECIFIED = 0;
        DYNAMICLINKWARNING_WARNINGCODE_NOT_IN_PROJECT_ANDROID_PACKAGE_NAME = 1;
        DYNAMICLINKWARNING_WARNINGCODE_NOT_INTEGER_ANDROID_PACKAGE_MIN_VERSION = 2;
        DYNAMICLINKWARNING_WARNINGCODE_UNNECESSARY_ANDROID_PACKAGE_MIN_VERSION = 3;
        DYNAMICLINKWARNING_WARNINGCODE_NOT_URI_ANDROID_LINK = 4;
        DYNAMICLINKWARNING_WARNINGCODE_UNNECESSARY_ANDROID_LINK = 5;
        DYNAMICLINKWARNING_WARNINGCODE_NOT_URI_ANDROID_FALLBACK_LINK = 6;
        DYNAMICLINKWARNING_WARNINGCODE_BAD_URI_SCHEME_ANDROID_FALLBACK_LINK = 7;
        DYNAMICLINKWARNING_WARNINGCODE_NOT_IN_PROJECT_IOS_BUNDLE_ID = 8;
        DYNAMICLINKWARNING_WARNINGCODE_NOT_IN_PROJECT_IPAD_BUNDLE_ID = 9;
        DYNAMICLINKWARNING_WARNINGCODE_UNNECESSARY_IOS_URL_SCHEME = 10;
        DYNAMICLINKWARNING_WARNINGCODE_NOT_NUMERIC_IOS_APP_STORE_ID = 11;
        DYNAMICLINKWARNING_WARNINGCODE_UNNECESSARY_IOS_APP_STORE_ID = 12;
        DYNAMICLINKWARNING_WARNINGCODE_NOT_URI_IOS_FALLBACK_LINK = 13;
        DYNAMICLINKWARNING_WARNINGCODE_BAD_URI_SCHEME_IOS_FALLBACK_LINK = 14;
        DYNAMICLINKWARNING_WARNINGCODE_NOT_URI_IPAD_FALLBACK_LINK = 15;
        DYNAMICLINKWARNING_WARNINGCODE_BAD_URI_SCHEME_IPAD_FALLBACK_LINK = 16;
        DYNAMICLINKWARNING_WARNINGCODE_BAD_DEBUG_PARAM = 17;
        DYNAMICLINKWARNING_WARNINGCODE_BAD_AD_PARAM = 18;
        DYNAMICLINKWARNING_WARNINGCODE_DEPRECATED_PARAM = 19;
        DYNAMICLINKWARNING_WARNINGCODE_UNRECOGNIZED_PARAM = 20;
        DYNAMICLINKWARNING_WARNINGCODE_TOO_LONG_PARAM = 21;
        DYNAMICLINKWARNING_WARNINGCODE_NOT_URI_SOCIAL_IMAGE_LINK = 22;
        DYNAMICLINKWARNING_WARNINGCODE_BAD_URI_SCHEME_SOCIAL_IMAGE_LINK = 23;
        DYNAMICLINKWARNING_WARNINGCODE_NOT_URI_SOCIAL_URL = 24;
        DYNAMICLINKWARNING_WARNINGCODE_BAD_URI_SCHEME_SOCIAL_URL = 25;
        DYNAMICLINKWARNING_WARNINGCODE_LINK_LENGTH_TOO_LONG = 26;
        DYNAMICLINKWARNING_WARNINGCODE_LINK_WITH_FRAGMENTS = 27;
        DYNAMICLINKWARNING_WARNINGCODE_NOT_MATCHING_IOS_BUNDLE_ID_AND_STORE_ID = 28;
    }
    DynamicLinkWarning_WarningCode warningCode = 1;
    // The document describing the warning, and helps resolve.
    string warningDocumentLink = 2;
    // The warning message to help developers improve their requests.
    string warningMessage = 3;
}

message GetIosPostInstallAttributionRequest {
    // App installation epoch time (https://en.wikipedia.org/wiki/Unix_time).
    // This is a client signal for a more accurate weak match.
    string appInstallationTime = 1;
    // APP bundle ID.
    string bundleId = 2;
    // Device information.
    DeviceInfo device = 3;
    // iOS version, ie: 9.3.5.
    // Consider adding "build".
    string iosVersion = 4;
    // App post install attribution retrieval information. Disambiguates
    // mechanism (iSDK or developer invoked) to retrieve payload from
    // clicked link.
    enum GetIosPostInstallAttributionRequest_RetrievalMethod {
        GETIOSPOSTINSTALLATTRIBUTIONREQUEST_RETRIEVALMETHOD_UNKNOWN_PAYLOAD_RETRIEVAL_METHOD = 0;
        GETIOSPOSTINSTALLATTRIBUTIONREQUEST_RETRIEVALMETHOD_IMPLICIT_WEAK_MATCH = 1;
        GETIOSPOSTINSTALLATTRIBUTIONREQUEST_RETRIEVALMETHOD_EXPLICIT_WEAK_MATCH = 2;
        GETIOSPOSTINSTALLATTRIBUTIONREQUEST_RETRIEVALMETHOD_EXPLICIT_STRONG_AFTER_WEAK_MATCH = 3;
    }
    GetIosPostInstallAttributionRequest_RetrievalMethod retrievalMethod = 5;
    // Google SDK version.
    string sdkVersion = 6;
    // Possible unique matched link that server need to check before performing
    // fingerprint match. If passed link is short server need to expand the link.
    // If link is long server need to vslidate the link.
    string uniqueMatchLinkToCheck = 7;
    // Strong match page information. Disambiguates between default UI and
    // custom page to present when strong match succeeds/fails to find cookie.
    enum GetIosPostInstallAttributionRequest_VisualStyle {
        GETIOSPOSTINSTALLATTRIBUTIONREQUEST_VISUALSTYLE_UNKNOWN_VISUAL_STYLE = 0;
        GETIOSPOSTINSTALLATTRIBUTIONREQUEST_VISUALSTYLE_DEFAULT_STYLE = 1;
        GETIOSPOSTINSTALLATTRIBUTIONREQUEST_VISUALSTYLE_CUSTOM_STYLE = 2;
    }
    GetIosPostInstallAttributionRequest_VisualStyle visualStyle = 8;
}

message GetIosPostInstallAttributionResponse {
    // The minimum version for app, specified by dev through ?imv= parameter.
    // Return to iSDK to allow app to evaluate if current version meets this.
    string appMinimumVersion = 1;
    // The confidence of the returned attribution.
    enum GetIosPostInstallAttributionResponse_AttributionConfidence {
        GETIOSPOSTINSTALLATTRIBUTIONRESPONSE_ATTRIBUTIONCONFIDENCE_UNKNOWN_ATTRIBUTION_CONFIDENCE = 0;
        GETIOSPOSTINSTALLATTRIBUTIONRESPONSE_ATTRIBUTIONCONFIDENCE_WEAK = 1;
        GETIOSPOSTINSTALLATTRIBUTIONRESPONSE_ATTRIBUTIONCONFIDENCE_DEFAULT = 2;
        GETIOSPOSTINSTALLATTRIBUTIONRESPONSE_ATTRIBUTIONCONFIDENCE_UNIQUE = 3;
    }
    GetIosPostInstallAttributionResponse_AttributionConfidence attributionConfidence = 2;
    // The deep-link attributed post-install via one of several techniques
    // (fingerprint, copy unique).
    string deepLink = 3;
    // User-agent specific custom-scheme URIs for iSDK to open. This will be set
    // according to the user-agent tha the click was originally made in. There is
    // no Safari-equivalent custom-scheme open URLs.
    // ie: googlechrome://www.example.com
    // ie: firefox://open-url?url=http://www.example.com
    // ie: opera-http://example.com
    string externalBrowserDestinationLink = 4;
    // The link to navigate to update the app if min version is not met.
    // This is either (in order): 1) fallback link (from ?ifl= parameter, if
    // specified by developer) or 2) AppStore URL (from ?isi= parameter, if
    // specified), or 3) the payload link (from required link= parameter).
    string fallbackLink = 5;
    // Invitation ID attributed post-install via one of several techniques
    // (fingerprint, copy unique).
    string invitationId = 6;
    // Instruction for iSDK to attemmpt to perform strong match. For instance,
    // if browser does not support/allow cookie or outside of support browsers,
    // this will be false.
    bool isStrongMatchExecutable = 7;
    // Describes why match failed, ie: "discarded due to low confidence".
    // This message will be publicly visible.
    string matchMessage = 8;
    // Entire FDL (short or long) attributed post-install via one of several
    // techniques (fingerprint, copy unique).
    string requestedLink = 9;
    // The entire FDL, expanded from a short link. It is the same as the
    // requested_link, if it is long. Parameters from this should not be
    // used directly (ie: server can default utm_[campaign|medium|source]
    // to a value when requested_link lack them, server determine the best
    // fallback_link when requested_link specifies >1 fallback links).
    string resolvedLink = 10;
    // Scion campaign value to be propagated by iSDK to Scion at post-install.
    string utmCampaign = 11;
    // Scion medium value to be propagated by iSDK to Scion at post-install.
    string utmMedium = 12;
    // Scion source value to be propagated by iSDK to Scion at post-install.
    string utmSource = 13;
}

message GooglePlayAnalytics {
    // [AdWords autotagging parameter](https://support.google.com/analytics/answer/1033981?hl=en);
    // used to measure Google AdWords ads. This value is generated dynamically
    // and should never be modified.
    string gclid = 1;
    // Campaign name; used for keyword analysis to identify a specific product
    // promotion or strategic campaign.
    string utmCampaign = 2;
    // Campaign content; used for A/B testing and content-targeted ads to
    // differentiate ads or links that point to the same URL.
    string utmContent = 3;
    // Campaign medium; used to identify a medium such as email or cost-per-click.
    string utmMedium = 4;
    // Campaign source; used to identify a search engine, newsletter, or other
    // source.
    string utmSource = 5;
    // Campaign term; used with paid search to supply the keywords for ads.
    string utmTerm = 6;
}

message ITunesConnectAnalytics {
    // Affiliate token used to create affiliate-coded links.
    string at = 1;
    // Campaign text that developers can optionally add to any link in order to
    // track sales from a specific marketing campaign.
    string ct = 2;
    // iTune media types, including music, podcasts, audiobooks and so on.
    string mt = 3;
    // Provider token that enables analytics for Dynamic Links from within iTunes
    // Connect.
    string pt = 4;
}

message IosInfo {
    // iOS App Store ID.
    string iosAppStoreId = 1;
    // iOS bundle ID of the app.
    string iosBundleId = 2;
    // Custom (destination) scheme to use for iOS. By default, we’ll use the
    // bundle ID as the custom scheme. Developer can override this behavior using
    // this param.
    string iosCustomScheme = 3;
    // Link to open on iOS if the app is not installed.
    string iosFallbackLink = 4;
    // iPad bundle ID of the app.
    string iosIpadBundleId = 5;
    // If specified, this overrides the ios_fallback_link value on iPads.
    string iosIpadFallbackLink = 6;
}

message NavigationInfo {
    // If this option is on, FDL click will be forced to redirect rather than
    // show an interstitial page.
    bool enableForcedRedirect = 1;
}

message SocialMetaTagInfo {
    // A short description of the link. Optional.
    string socialDescription = 1;
    // An image url string. Optional.
    string socialImageLink = 2;
    // Title to be displayed. Optional.
    string socialTitle = 3;
}

message Suffix {
    // Suffix option.
    enum Suffix_Option {
        SUFFIX_OPTION_OPTION_UNSPECIFIED = 0;
        SUFFIX_OPTION_UNGUESSABLE = 1;
        SUFFIX_OPTION_SHORT = 2;
    }
    Suffix_Option option = 1;
}

enum Alt {
    JSON = 0;
    MEDIA = 1;
    PROTO = 2;
}

service FirebaseDynamicLinksService {
    // Get iOS strong/weak-match info for post-install attribution.
    rpc PostV1InstallAttribution(PostV1InstallAttributionRequest) returns (GetIosPostInstallAttributionResponse) {
      option (google.api.http) = {
        post: "//v1/installAttribution"
        body: "body"
      };
    }
    // Creates a short Dynamic Link given either a valid long Dynamic Link or
    // details such as Dynamic Link domain, Android and iOS app information.
    // The created short Dynamic Link will not expire.
    // 
    // Repeated calls with the same long Dynamic Link or Dynamic Link information
    // will produce the same short Dynamic Link.
    // 
    // The Dynamic Link domain in the request must be owned by requester's
    // Firebase project.
    rpc PostV1ShortLinks(PostV1ShortLinksRequest) returns (CreateShortDynamicLinkResponse) {
      option (google.api.http) = {
        post: "//v1/shortLinks"
        body: "body"
      };
    }
    // Fetches analytics stats of a short Dynamic Link for a given
    // duration. Metrics include number of clicks, redirects, installs,
    // app first opens, and app reopens.
    rpc GetV1DynamicLinkLinkStats(GetV1DynamicLinkLinkStatsRequest) returns (DynamicLinkStats) {
      option (google.api.http) = {
        get: "//v1/{dynamicLink}/linkStats"
      };
    }
}
