syntax = "proto3";

import "google/protobuf/empty.proto";

import "google/api/annotations.proto";

package googlesiteverification;

message PostTokenRequest {
    alt alt = 1;
    SiteVerificationWebResourceGettokenRequest body = 2;
    string fields = 3;
    string key = 4;
    string oauth_token = 5;
    boolean prettyPrint = 6;
    string quotaUser = 7;
    string userIp = 8;
}

message GetWebResourceRequest {
    alt alt = 1;
    string fields = 2;
    string key = 3;
    string oauth_token = 4;
    boolean prettyPrint = 5;
    string quotaUser = 6;
    string userIp = 7;
}

message PostWebResourceRequest {
    alt alt = 1;
    SiteVerificationWebResourceResource body = 2;
    string fields = 3;
    string key = 4;
    string oauth_token = 5;
    boolean prettyPrint = 6;
    string quotaUser = 7;
    string userIp = 8;
    // The method to use for verifying a site or domain.
    string verificationMethod = 9;
}

message GetWebResourceIdRequest {
    alt alt = 1;
    string fields = 2;
    // The id of a verified site or domain.
    string id = 3;
    string key = 4;
    string oauth_token = 5;
    boolean prettyPrint = 6;
    string quotaUser = 7;
    string userIp = 8;
}

message PutWebResourceIdRequest {
    alt alt = 1;
    SiteVerificationWebResourceResource body = 2;
    string fields = 3;
    // The id of a verified site or domain.
    string id = 4;
    string key = 5;
    string oauth_token = 6;
    boolean prettyPrint = 7;
    string quotaUser = 8;
    string userIp = 9;
}

message DeleteWebResourceIdRequest {
    alt alt = 1;
    string fields = 2;
    // The id of a verified site or domain.
    string id = 3;
    string key = 4;
    string oauth_token = 5;
    boolean prettyPrint = 6;
    string quotaUser = 7;
    string userIp = 8;
}

message SiteVerificationWebResourceGettokenRequest {
    // The site for which a verification token will be generated.
    message Site {
            // The site identifier. If the type is set to SITE, the identifier is a URL. If the type is set to INET_DOMAIN, the site identifier is a domain name.
    string identifier = 1;
            // The type of resource to be verified. Can be SITE or INET_DOMAIN (domain name).
    string type = 2;
    }
    Site site = 1;
    // The verification method that will be used to verify this site. For sites, 'FILE' or 'META' methods may be used. For domains, only 'DNS' may be used.
    string verificationMethod = 2;
}

message SiteVerificationWebResourceGettokenResponse {
    // The verification method to use in conjunction with this token. For FILE, the token should be placed in the top-level directory of the site, stored inside a file of the same name. For META, the token should be placed in the HEAD tag of the default page that is loaded for the site. For DNS, the token should be placed in a TXT record of the domain.
    string method = 1;
    // The verification token. The token must be placed appropriately in order for verification to succeed.
    string token = 2;
}

message SiteVerificationWebResourceListResponse {
    // The list of sites that are owned by the authenticated user.
    repeated SiteVerificationWebResourceResource items = 1;
}

message SiteVerificationWebResourceResource {
    // The string used to identify this site. This value should be used in the "id" portion of the REST URL for the Get, Update, and Delete operations.
    string id = 1;
    // The email addresses of all verified owners.
    repeated string owners = 2;
    // The address and type of a site that is verified or will be verified.
    message Site {
            // The site identifier. If the type is set to SITE, the identifier is a URL. If the type is set to INET_DOMAIN, the site identifier is a domain name.
    string identifier = 1;
            // The site type. Can be SITE or INET_DOMAIN (domain name).
    string type = 2;
    }
    Site site = 3;
}

enum Alt {
    JSON = 0;
}

service GoogleSiteVerificationService {
    // Get a verification token for placing on a website or domain.
    rpc PostToken(PostTokenRequest) returns (SiteVerificationWebResourceGettokenResponse) {
      option (google.api.http) = {
        post: "/siteVerification/v1/token"
        body: "body"
      };
    }
    // Get the list of your verified websites and domains.
    rpc GetWebResource(GetWebResourceRequest) returns (SiteVerificationWebResourceListResponse) {
      option (google.api.http) = {
        get: "/siteVerification/v1/webResource"
      };
    }
    // Attempt verification of a website or domain.
    rpc PostWebResource(PostWebResourceRequest) returns (SiteVerificationWebResourceResource) {
      option (google.api.http) = {
        post: "/siteVerification/v1/webResource"
        body: "body"
      };
    }
    // Get the most current data for a website or domain.
    rpc GetWebResourceId(GetWebResourceIdRequest) returns (SiteVerificationWebResourceResource) {
      option (google.api.http) = {
        get: "/siteVerification/v1/webResource/{id}"
      };
    }
    // Modify the list of owners for your website or domain.
    rpc PutWebResourceId(PutWebResourceIdRequest) returns (SiteVerificationWebResourceResource) {
      option (google.api.http) = {
        put: "/siteVerification/v1/webResource/{id}"
        body: "body"
      };
    }
    // Relinquish ownership of a website or domain.
    rpc DeleteWebResourceId(DeleteWebResourceIdRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        delete: "/siteVerification/v1/webResource/{id}"
      };
    }
}
