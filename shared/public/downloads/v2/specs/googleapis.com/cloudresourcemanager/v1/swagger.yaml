swagger: '2.0'
schemes:
  - https
host: cloudresourcemanager.googleapis.com
basePath: /
info:
  contact:
    name: Google
    url: 'https://google.com'
  description: 'The Google Cloud Resource Manager API provides methods for creating, reading, and updating project metadata.'
  title: Google Cloud Resource Manager
  version: v1
  x-apiClientRegistration:
    url: 'https://console.developers.google.com'
  x-logo:
    url: 'https://api.apis.guru/v2/cache/logo/https_cloud.google.com__static_images_new-gcp-logo.png'
  x-origin:
    - converter:
        url: 'https://github.com/lucybot/api-spec-converter'
        version: 2.6.0
      format: google
      url: 'https://cloudresourcemanager.googleapis.com/$discovery/rest?version=v1'
      version: v1
  x-preferred: true
  x-providerName: googleapis.com
  x-serviceName: cloudresourcemanager
externalDocs:
  url: 'https://cloud.google.com/resource-manager'
securityDefinitions:
  Oauth2:
    authorizationUrl: 'https://accounts.google.com/o/oauth2/auth'
    description: Oauth 2.0 authentication
    flow: implicit
    scopes:
      'https://www.googleapis.com/auth/cloud-platform': View and manage your data across Google Cloud Platform services
      'https://www.googleapis.com/auth/cloud-platform.read-only': View your data across Google Cloud Platform services
    type: oauth2
parameters:
  $.xgafv:
    description: V1 error format.
    enum:
      - '1'
      - '2'
    in: query
    name: $.xgafv
    type: string
  access_token:
    description: OAuth access token.
    in: query
    name: access_token
    type: string
  alt:
    default: json
    description: Data format for response.
    enum:
      - json
      - media
      - proto
    in: query
    name: alt
    type: string
  bearer_token:
    description: OAuth bearer token.
    in: query
    name: bearer_token
    type: string
  callback:
    description: JSONP
    in: query
    name: callback
    type: string
  fields:
    description: Selector specifying which fields to include in a partial response.
    in: query
    name: fields
    type: string
  key:
    description: 'API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.'
    in: query
    name: key
    type: string
  oauth_token:
    description: OAuth 2.0 token for the current user.
    in: query
    name: oauth_token
    type: string
  pp:
    default: true
    description: Pretty-print response.
    in: query
    name: pp
    type: boolean
  prettyPrint:
    default: true
    description: Returns response with indentations and line breaks.
    in: query
    name: prettyPrint
    type: boolean
  quotaUser:
    description: 'Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.'
    in: query
    name: quotaUser
    type: string
  uploadType:
    description: 'Legacy upload protocol for media (e.g. "media", "multipart").'
    in: query
    name: uploadType
    type: string
  upload_protocol:
    description: 'Upload protocol for media (e.g. "raw", "multipart").'
    in: query
    name: upload_protocol
    type: string
tags:
  - name: folders
  - name: liens
  - name: operations
  - name: organizations
  - name: projects
paths:
  /v1/liens:
    get:
      description: |-
        List all Liens applied to the `parent` resource.

        Callers of this method will require permission on the `parent` resource.
        For example, a Lien with a `parent` of `projects/1234` requires permission
        `resourcemanager.projects.get`.
      operationId: cloudresourcemanager.liens.list
      parameters:
        - description: 'The `next_page_token` value returned from a previous List request, if any.'
          in: query
          name: pageToken
          type: string
        - description: The maximum number of items to return. This is a suggestion for the server.
          in: query
          name: pageSize
          type: integer
        - description: |-
            The name of the resource to list all attached Liens.
            For example, `projects/1234`.
          in: query
          name: parent
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/ListLiensResponse'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform.read-only'
      tags:
        - liens
    parameters:
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/access_token'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/pp'
      - $ref: '#/parameters/bearer_token'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/upload_protocol'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/uploadType'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/callback'
      - $ref: '#/parameters/$.xgafv'
      - $ref: '#/parameters/alt'
    post:
      description: |-
        Create a Lien which applies to the resource denoted by the `parent` field.

        Callers of this method will require permission on the `parent` resource.
        For example, applying to `projects/1234` requires permission
        `resourcemanager.projects.updateLiens`.

        NOTE: Some resources may limit the number of Liens which may be applied.
      operationId: cloudresourcemanager.liens.create
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/Lien'
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Lien'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform.read-only'
      tags:
        - liens
  '/v1/organizations:search':
    parameters:
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/access_token'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/pp'
      - $ref: '#/parameters/bearer_token'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/upload_protocol'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/uploadType'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/callback'
      - $ref: '#/parameters/$.xgafv'
      - $ref: '#/parameters/alt'
    post:
      description: |-
        Searches Organization resources that are visible to the user and satisfy
        the specified filter. This method returns Organizations in an unspecified
        order. New Organizations do not necessarily appear at the end of the
        results.

        Search will only return organizations on which the user has the permission
        `resourcemanager.organizations.get`
      operationId: cloudresourcemanager.organizations.search
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/SearchOrganizationsRequest'
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/SearchOrganizationsResponse'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform.read-only'
      tags:
        - organizations
  /v1/projects:
    get:
      description: |-
        Lists Projects that are visible to the user and satisfy the
        specified filter. This method returns Projects in an unspecified order.
        New Projects do not necessarily appear at the end of the list.
      operationId: cloudresourcemanager.projects.list
      parameters:
        - description: |-
            An expression for filtering the results of the request.  Filter rules are
            case insensitive. The fields eligible for filtering are:

            + `name`
            + `id`
            + <code>labels.<em>key</em></code> where *key* is the name of a label

            Some examples of using labels as filters:

            |Filter|Description|
            |------|-----------|
            |name:how*|The project's name starts with "how".|
            |name:Howl|The project's name is `Howl` or `howl`.|
            |name:HOWL|Equivalent to above.|
            |NAME:howl|Equivalent to above.|
            |labels.color:*|The project has the label `color`.|
            |labels.color:red|The project's label `color` has the value `red`.|
            |labels.color:red&nbsp;labels.size:big|The project's label `color` has the value `red` and its label `size` has the value `big`.

            If you specify a filter that has both `parent.type` and `parent.id`, then
            the `resourcemanager.projects.list` permission is checked on the parent.
            If the user has this permission, all projects under the parent will be
            returned after remaining filters have been applied. If the user lacks this
            permission, then all projects for which the user has the
            `resourcemanager.projects.get` permission will be returned after remaining
            filters have been applied. If no filter is specified, the call will return
            projects for which the user has `resourcemanager.projects.get` permissions.

            Optional.
          in: query
          name: filter
          type: string
        - description: |-
            The maximum number of Projects to return in the response.
            The server can return fewer Projects than requested.
            If unspecified, server picks an appropriate default.

            Optional.
          in: query
          name: pageSize
          type: integer
        - description: |-
            A pagination token returned from a previous call to ListProjects
            that indicates from where listing should continue.

            Optional.
          in: query
          name: pageToken
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/ListProjectsResponse'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform.read-only'
      tags:
        - projects
    parameters:
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/access_token'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/pp'
      - $ref: '#/parameters/bearer_token'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/upload_protocol'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/uploadType'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/callback'
      - $ref: '#/parameters/$.xgafv'
      - $ref: '#/parameters/alt'
    post:
      description: |-
        Request that a new Project be created. The result is an Operation which
        can be used to track the creation process. It is automatically deleted
        after a few hours, so there is no need to call DeleteOperation.

        Our SLO permits Project creation to take up to 30 seconds at the 90th
        percentile. As of 2016-08-29, we are observing 6 seconds 50th percentile
        latency. 95th percentile latency is around 11 seconds. We recommend
        polling at the 5th second with an exponential backoff.

        Authorization requires the Google IAM permission
        `resourcemanager.projects.create` on the specified parent for the new
        project.
      operationId: cloudresourcemanager.projects.create
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/Project'
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Operation'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
      tags:
        - projects
  '/v1/projects/{projectId}':
    delete:
      description: |-
        Marks the Project identified by the specified
        `project_id` (for example, `my-project-123`) for deletion.
        This method will only affect the Project if the following criteria are met:

        + The Project does not have a billing account associated with it.
        + The Project has a lifecycle state of
        ACTIVE.

        This method changes the Project's lifecycle state from
        ACTIVE
        to DELETE_REQUESTED.
        The deletion starts at an unspecified time,
        at which point the Project is no longer accessible.

        Until the deletion completes, you can check the lifecycle state
        checked by retrieving the Project with GetProject,
        and the Project remains visible to ListProjects.
        However, you cannot update the project.

        After the deletion completes, the Project is not retrievable by
        the  GetProject and
        ListProjects methods.

        The caller must have modify permissions for this Project.
      operationId: cloudresourcemanager.projects.delete
      parameters:
        - description: |-
            The Project ID (for example, `foo-bar-123`).

            Required.
          in: path
          name: projectId
          required: true
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Empty'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
      tags:
        - projects
    get:
      description: |-
        Retrieves the Project identified by the specified
        `project_id` (for example, `my-project-123`).

        The caller must have read permissions for this Project.
      operationId: cloudresourcemanager.projects.get
      parameters:
        - description: |-
            The Project ID (for example, `my-project-123`).

            Required.
          in: path
          name: projectId
          required: true
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Project'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform.read-only'
      tags:
        - projects
    parameters:
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/access_token'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/pp'
      - $ref: '#/parameters/bearer_token'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/upload_protocol'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/uploadType'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/callback'
      - $ref: '#/parameters/$.xgafv'
      - $ref: '#/parameters/alt'
    put:
      description: |-
        Updates the attributes of the Project identified by the specified
        `project_id` (for example, `my-project-123`).

        The caller must have modify permissions for this Project.
      operationId: cloudresourcemanager.projects.update
      parameters:
        - description: |-
            The project ID (for example, `my-project-123`).

            Required.
          in: path
          name: projectId
          required: true
          type: string
        - in: body
          name: body
          schema:
            $ref: '#/definitions/Project'
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Project'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
      tags:
        - projects
  '/v1/projects/{projectId}:getAncestry':
    parameters:
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/access_token'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/pp'
      - $ref: '#/parameters/bearer_token'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/upload_protocol'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/uploadType'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/callback'
      - $ref: '#/parameters/$.xgafv'
      - $ref: '#/parameters/alt'
    post:
      description: |-
        Gets a list of ancestors in the resource hierarchy for the Project
        identified by the specified `project_id` (for example, `my-project-123`).

        The caller must have read permissions for this Project.
      operationId: cloudresourcemanager.projects.getAncestry
      parameters:
        - description: |-
            The Project ID (for example, `my-project-123`).

            Required.
          in: path
          name: projectId
          required: true
          type: string
        - in: body
          name: body
          schema:
            $ref: '#/definitions/GetAncestryRequest'
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/GetAncestryResponse'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform.read-only'
      tags:
        - projects
  '/v1/projects/{projectId}:undelete':
    parameters:
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/access_token'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/pp'
      - $ref: '#/parameters/bearer_token'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/upload_protocol'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/uploadType'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/callback'
      - $ref: '#/parameters/$.xgafv'
      - $ref: '#/parameters/alt'
    post:
      description: |-
        Restores the Project identified by the specified
        `project_id` (for example, `my-project-123`).
        You can only use this method for a Project that has a lifecycle state of
        DELETE_REQUESTED.
        After deletion starts, the Project cannot be restored.

        The caller must have modify permissions for this Project.
      operationId: cloudresourcemanager.projects.undelete
      parameters:
        - description: |-
            The project ID (for example, `foo-bar-123`).

            Required.
          in: path
          name: projectId
          required: true
          type: string
        - in: body
          name: body
          schema:
            $ref: '#/definitions/UndeleteProjectRequest'
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Empty'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
      tags:
        - projects
  '/v1/projects/{resource}:getIamPolicy':
    parameters:
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/access_token'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/pp'
      - $ref: '#/parameters/bearer_token'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/upload_protocol'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/uploadType'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/callback'
      - $ref: '#/parameters/$.xgafv'
      - $ref: '#/parameters/alt'
    post:
      description: |-
        Returns the IAM access control policy for the specified Project.
        Permission is denied if the policy or the resource does not exist.

        Authorization requires the Google IAM permission
        `resourcemanager.projects.getIamPolicy` on the project
      operationId: cloudresourcemanager.projects.getIamPolicy
      parameters:
        - description: |-
            REQUIRED: The resource for which the policy is being requested.
            See the operation documentation for the appropriate value for this field.
          in: path
          name: resource
          required: true
          type: string
        - in: body
          name: body
          schema:
            $ref: '#/definitions/GetIamPolicyRequest'
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Policy'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform.read-only'
      tags:
        - projects
  '/v1/projects/{resource}:setIamPolicy':
    parameters:
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/access_token'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/pp'
      - $ref: '#/parameters/bearer_token'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/upload_protocol'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/uploadType'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/callback'
      - $ref: '#/parameters/$.xgafv'
      - $ref: '#/parameters/alt'
    post:
      description: |-
        Sets the IAM access control policy for the specified Project. Replaces
        any existing policy.

        The following constraints apply when using `setIamPolicy()`:

        + Project does not support `allUsers` and `allAuthenticatedUsers` as
        `members` in a `Binding` of a `Policy`.

        + The owner role can be granted only to `user` and `serviceAccount`.

        + Service accounts can be made owners of a project directly
        without any restrictions. However, to be added as an owner, a user must be
        invited via Cloud Platform console and must accept the invitation.

        + A user cannot be granted the owner role using `setIamPolicy()`. The user
        must be granted the owner role using the Cloud Platform Console and must
        explicitly accept the invitation.

        + Invitations to grant the owner role cannot be sent using
        `setIamPolicy()`;
        they must be sent only using the Cloud Platform Console.

        + Membership changes that leave the project without any owners that have
        accepted the Terms of Service (ToS) will be rejected.

        + If the project is not part of an organization, there must be at least
        one owner who has accepted the Terms of Service (ToS) agreement in the
        policy. Calling `setIamPolicy()` to remove the last ToS-accepted owner
        from the policy will fail. This restriction also applies to legacy
        projects that no longer have owners who have accepted the ToS. Edits to
        IAM policies will be rejected until the lack of a ToS-accepting owner is
        rectified.

        + Calling this method requires enabling the App Engine Admin API.

        Note: Removing service accounts from policies or changing their roles
        can render services completely inoperable. It is important to understand
        how the service account is being used before removing or updating its
        roles.

        Authorization requires the Google IAM permission
        `resourcemanager.projects.setIamPolicy` on the project
      operationId: cloudresourcemanager.projects.setIamPolicy
      parameters:
        - description: |-
            REQUIRED: The resource for which the policy is being specified.
            See the operation documentation for the appropriate value for this field.
          in: path
          name: resource
          required: true
          type: string
        - in: body
          name: body
          schema:
            $ref: '#/definitions/SetIamPolicyRequest'
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Policy'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
      tags:
        - projects
  '/v1/projects/{resource}:testIamPermissions':
    parameters:
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/access_token'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/pp'
      - $ref: '#/parameters/bearer_token'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/upload_protocol'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/uploadType'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/callback'
      - $ref: '#/parameters/$.xgafv'
      - $ref: '#/parameters/alt'
    post:
      description: |-
        Returns permissions that a caller has on the specified Project.

        There are no permissions required for making this API call.
      operationId: cloudresourcemanager.projects.testIamPermissions
      parameters:
        - description: |-
            REQUIRED: The resource for which the policy detail is being requested.
            See the operation documentation for the appropriate value for this field.
          in: path
          name: resource
          required: true
          type: string
        - in: body
          name: body
          schema:
            $ref: '#/definitions/TestIamPermissionsRequest'
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/TestIamPermissionsResponse'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform.read-only'
      tags:
        - projects
  '/v1/{name}':
    delete:
      description: |-
        Delete a Lien by `name`.

        Callers of this method will require permission on the `parent` resource.
        For example, a Lien with a `parent` of `projects/1234` requires permission
        `resourcemanager.projects.updateLiens`.
      operationId: cloudresourcemanager.liens.delete
      parameters:
        - description: The name/identifier of the Lien to delete.
          in: path
          name: name
          required: true
          type: string
          x-reservedExpansion: true
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Empty'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform.read-only'
      tags:
        - liens
    get:
      description: |-
        Gets the latest state of a long-running operation.  Clients can use this
        method to poll the operation result at intervals as recommended by the API
        service.
      operationId: cloudresourcemanager.operations.get
      parameters:
        - description: The name of the operation resource.
          in: path
          name: name
          required: true
          type: string
          x-reservedExpansion: true
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Operation'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform.read-only'
      tags:
        - operations
    parameters:
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/access_token'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/pp'
      - $ref: '#/parameters/bearer_token'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/upload_protocol'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/uploadType'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/callback'
      - $ref: '#/parameters/$.xgafv'
      - $ref: '#/parameters/alt'
  '/v1/{resource}:clearOrgPolicy':
    parameters:
      - $ref: '#/parameters/$.xgafv'
      - $ref: '#/parameters/access_token'
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/bearer_token'
      - $ref: '#/parameters/callback'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/pp'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/uploadType'
      - $ref: '#/parameters/upload_protocol'
    post:
      description: Clears a `Policy` from a resource.
      operationId: cloudresourcemanager.folders.clearOrgPolicy
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/ClearOrgPolicyRequest'
        - description: Name of the resource for the `Policy` to clear.
          in: path
          name: resource
          required: true
          type: string
          x-reservedExpansion: true
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Empty'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
      tags:
        - folders
  '/v1/{resource}:getEffectiveOrgPolicy':
    parameters:
      - $ref: '#/parameters/$.xgafv'
      - $ref: '#/parameters/access_token'
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/bearer_token'
      - $ref: '#/parameters/callback'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/pp'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/uploadType'
      - $ref: '#/parameters/upload_protocol'
    post:
      description: |-
        Gets the effective `Policy` on a resource. This is the result of merging
        `Policies` in the resource hierarchy. The returned `Policy` will not have
        an `etag`set because it is a computed `Policy` across multiple resources.
      operationId: cloudresourcemanager.folders.getEffectiveOrgPolicy
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/GetEffectiveOrgPolicyRequest'
        - description: The name of the resource to start computing the effective `Policy`.
          in: path
          name: resource
          required: true
          type: string
          x-reservedExpansion: true
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/OrgPolicy'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform.read-only'
      tags:
        - folders
  '/v1/{resource}:getIamPolicy':
    parameters:
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/access_token'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/pp'
      - $ref: '#/parameters/bearer_token'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/upload_protocol'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/uploadType'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/callback'
      - $ref: '#/parameters/$.xgafv'
      - $ref: '#/parameters/alt'
    post:
      description: |-
        Gets the access control policy for an Organization resource. May be empty
        if no such policy or resource exists. The `resource` field should be the
        organization's resource name, e.g. "organizations/123".

        Authorization requires the Google IAM permission
        `resourcemanager.organizations.getIamPolicy` on the specified organization
      operationId: cloudresourcemanager.organizations.getIamPolicy
      parameters:
        - description: |-
            REQUIRED: The resource for which the policy is being requested.
            See the operation documentation for the appropriate value for this field.
          in: path
          name: resource
          required: true
          type: string
          x-reservedExpansion: true
        - in: body
          name: body
          schema:
            $ref: '#/definitions/GetIamPolicyRequest'
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Policy'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform.read-only'
      tags:
        - organizations
  '/v1/{resource}:getOrgPolicy':
    parameters:
      - $ref: '#/parameters/$.xgafv'
      - $ref: '#/parameters/access_token'
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/bearer_token'
      - $ref: '#/parameters/callback'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/pp'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/uploadType'
      - $ref: '#/parameters/upload_protocol'
    post:
      description: |-
        Gets a `Policy` on a resource.

        If no `Policy` is set on the resource, a `Policy` is returned with default
        values including `POLICY_TYPE_NOT_SET` for the `policy_type oneof`. The
        `etag` value can be used with `SetOrgPolicy()` to create or update a
        `Policy` during read-modify-write.
      operationId: cloudresourcemanager.folders.getOrgPolicy
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/GetOrgPolicyRequest'
        - description: Name of the resource the `Policy` is set on.
          in: path
          name: resource
          required: true
          type: string
          x-reservedExpansion: true
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/OrgPolicy'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform.read-only'
      tags:
        - folders
  '/v1/{resource}:listAvailableOrgPolicyConstraints':
    parameters:
      - $ref: '#/parameters/$.xgafv'
      - $ref: '#/parameters/access_token'
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/bearer_token'
      - $ref: '#/parameters/callback'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/pp'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/uploadType'
      - $ref: '#/parameters/upload_protocol'
    post:
      description: Lists `Constraints` that could be applied on the specified resource.
      operationId: cloudresourcemanager.folders.listAvailableOrgPolicyConstraints
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/ListAvailableOrgPolicyConstraintsRequest'
        - description: Name of the resource to list `Constraints` for.
          in: path
          name: resource
          required: true
          type: string
          x-reservedExpansion: true
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/ListAvailableOrgPolicyConstraintsResponse'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform.read-only'
      tags:
        - folders
  '/v1/{resource}:listOrgPolicies':
    parameters:
      - $ref: '#/parameters/$.xgafv'
      - $ref: '#/parameters/access_token'
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/bearer_token'
      - $ref: '#/parameters/callback'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/pp'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/uploadType'
      - $ref: '#/parameters/upload_protocol'
    post:
      description: Lists all the `Policies` set for a particular resource.
      operationId: cloudresourcemanager.folders.listOrgPolicies
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/ListOrgPoliciesRequest'
        - description: Name of the resource to list Policies for.
          in: path
          name: resource
          required: true
          type: string
          x-reservedExpansion: true
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/ListOrgPoliciesResponse'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform.read-only'
      tags:
        - folders
  '/v1/{resource}:setIamPolicy':
    parameters:
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/access_token'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/pp'
      - $ref: '#/parameters/bearer_token'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/upload_protocol'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/uploadType'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/callback'
      - $ref: '#/parameters/$.xgafv'
      - $ref: '#/parameters/alt'
    post:
      description: |-
        Sets the access control policy on an Organization resource. Replaces any
        existing policy. The `resource` field should be the organization's resource
        name, e.g. "organizations/123".

        Authorization requires the Google IAM permission
        `resourcemanager.organizations.setIamPolicy` on the specified organization
      operationId: cloudresourcemanager.organizations.setIamPolicy
      parameters:
        - description: |-
            REQUIRED: The resource for which the policy is being specified.
            See the operation documentation for the appropriate value for this field.
          in: path
          name: resource
          required: true
          type: string
          x-reservedExpansion: true
        - in: body
          name: body
          schema:
            $ref: '#/definitions/SetIamPolicyRequest'
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Policy'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
      tags:
        - organizations
  '/v1/{resource}:setOrgPolicy':
    parameters:
      - $ref: '#/parameters/$.xgafv'
      - $ref: '#/parameters/access_token'
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/bearer_token'
      - $ref: '#/parameters/callback'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/pp'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/uploadType'
      - $ref: '#/parameters/upload_protocol'
    post:
      description: |-
        Updates the specified `Policy` on the resource. Creates a new `Policy` for
        that `Constraint` on the resource if one does not exist.

        Not supplying an `etag` on the request `Policy` results in an unconditional
        write of the `Policy`.
      operationId: cloudresourcemanager.folders.setOrgPolicy
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/SetOrgPolicyRequest'
        - description: Resource name of the resource to attach the `Policy`.
          in: path
          name: resource
          required: true
          type: string
          x-reservedExpansion: true
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/OrgPolicy'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
      tags:
        - folders
  '/v1/{resource}:testIamPermissions':
    parameters:
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/access_token'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/pp'
      - $ref: '#/parameters/bearer_token'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/upload_protocol'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/uploadType'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/callback'
      - $ref: '#/parameters/$.xgafv'
      - $ref: '#/parameters/alt'
    post:
      description: |-
        Returns permissions that a caller has on the specified Organization.
        The `resource` field should be the organization's resource name,
        e.g. "organizations/123".

        There are no permissions required for making this API call.
      operationId: cloudresourcemanager.organizations.testIamPermissions
      parameters:
        - description: |-
            REQUIRED: The resource for which the policy detail is being requested.
            See the operation documentation for the appropriate value for this field.
          in: path
          name: resource
          required: true
          type: string
          x-reservedExpansion: true
        - in: body
          name: body
          schema:
            $ref: '#/definitions/TestIamPermissionsRequest'
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/TestIamPermissionsResponse'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform.read-only'
      tags:
        - organizations
definitions:
  Ancestor:
    description: Identifying information for a single ancestor of a project.
    properties:
      resourceId:
        $ref: '#/definitions/ResourceId'
        description: Resource id of the ancestor.
    type: object
  AuditConfig:
    description: |-
      Specifies the audit configuration for a service.
      The configuration determines which permission types are logged, and what
      identities, if any, are exempted from logging.
      An AuditConfig must have one or more AuditLogConfigs.

      If there are AuditConfigs for both `allServices` and a specific service,
      the union of the two AuditConfigs is used for that service: the log_types
      specified in each AuditConfig are enabled, and the exempted_members in each
      AuditConfig are exempted.

      Example Policy with multiple AuditConfigs:

          {
            "audit_configs": [
              {
                "service": "allServices"
                "audit_log_configs": [
                  {
                    "log_type": "DATA_READ",
                    "exempted_members": [
                      "user:foo@gmail.com"
                    ]
                  },
                  {
                    "log_type": "DATA_WRITE",
                  },
                  {
                    "log_type": "ADMIN_READ",
                  }
                ]
              },
              {
                "service": "fooservice.googleapis.com"
                "audit_log_configs": [
                  {
                    "log_type": "DATA_READ",
                  },
                  {
                    "log_type": "DATA_WRITE",
                    "exempted_members": [
                      "user:bar@gmail.com"
                    ]
                  }
                ]
              }
            ]
          }

      For fooservice, this policy enables DATA_READ, DATA_WRITE and ADMIN_READ
      logging. It also exempts foo@gmail.com from DATA_READ logging, and
      bar@gmail.com from DATA_WRITE logging.
    properties:
      auditLogConfigs:
        description: |-
          The configuration for logging of each type of permission.
          Next ID: 4
        items:
          $ref: '#/definitions/AuditLogConfig'
        type: array
      service:
        description: |-
          Specifies a service that will be enabled for audit logging.
          For example, `storage.googleapis.com`, `cloudsql.googleapis.com`.
          `allServices` is a special value that covers all services.
        type: string
    type: object
  AuditLogConfig:
    description: |-
      Provides the configuration for logging a type of permissions.
      Example:

          {
            "audit_log_configs": [
              {
                "log_type": "DATA_READ",
                "exempted_members": [
                  "user:foo@gmail.com"
                ]
              },
              {
                "log_type": "DATA_WRITE",
              }
            ]
          }

      This enables 'DATA_READ' and 'DATA_WRITE' logging, while exempting
      foo@gmail.com from DATA_READ logging.
    properties:
      exemptedMembers:
        description: |-
          Specifies the identities that do not cause logging for this type of
          permission.
          Follows the same format of Binding.members.
        items:
          type: string
        type: array
      logType:
        description: The log type that this config enables.
        enum:
          - LOG_TYPE_UNSPECIFIED
          - ADMIN_READ
          - DATA_WRITE
          - DATA_READ
        type: string
    type: object
  Binding:
    description: Associates `members` with a `role`.
    properties:
      members:
        description: |+
          Specifies the identities requesting access for a Cloud Platform resource.
          `members` can have the following values:

          * `allUsers`: A special identifier that represents anyone who is
             on the internet; with or without a Google account.

          * `allAuthenticatedUsers`: A special identifier that represents anyone
             who is authenticated with a Google account or a service account.

          * `user:{emailid}`: An email address that represents a specific Google
             account. For example, `alice@gmail.com` or `joe@example.com`.


          * `serviceAccount:{emailid}`: An email address that represents a service
             account. For example, `my-other-app@appspot.gserviceaccount.com`.

          * `group:{emailid}`: An email address that represents a Google group.
             For example, `admins@example.com`.


          * `domain:{domain}`: A Google Apps domain name that represents all the
             users of that domain. For example, `google.com` or `example.com`.

        items:
          type: string
        type: array
      role:
        description: |-
          Role that is assigned to `members`.
          For example, `roles/viewer`, `roles/editor`, or `roles/owner`.
          Required
        type: string
    type: object
  BooleanConstraint:
    description: |-
      A `Constraint` that is either enforced or not.

      For example a constraint `constraints/compute.disableSerialPortAccess`.
      If it is enforced on a VM instance, serial port connections will not be
      opened to that instance.
    properties: {}
    type: object
  BooleanPolicy:
    description: |-
      Used in `policy_type` to specify how `boolean_policy` will behave at this
      resource.
    properties:
      enforced:
        description: |-
          If `true`, then the `Policy` is enforced. If `false`, then any
          configuration is acceptable.

          Suppose you have a `Constraint` `constraints/compute.disableSerialPortAccess`
          with `constraint_default` set to `ALLOW`. A `Policy` for that
          `Constraint` exhibits the following behavior:
            - If the `Policy` at this resource has enforced set to `false`, serial
              port connection attempts will be allowed.
            - If the `Policy` at this resource has enforced set to `true`, serial
              port connection attempts will be refused.
            - If the `Policy` at this resource is `RestoreDefault`, serial port
              connection attempts will be allowed.
            - If no `Policy` is set at this resource or anywhere higher in the
              resource hierarchy, serial port connection attempts will be allowed.
            - If no `Policy` is set at this resource, but one exists higher in the
              resource hierarchy, the behavior is as if the`Policy` were set at
              this resource.

          The following examples demonstrate the different possible layerings:

          Example 1 (nearest `Constraint` wins):
            `organizations/foo` has a `Policy` with:
              {enforced: false}
            `projects/bar` has no `Policy` set.
          The constraint at `projects/bar` and `organizations/foo` will not be
          enforced.

          Example 2 (enforcement gets replaced):
            `organizations/foo` has a `Policy` with:
              {enforced: false}
            `projects/bar` has a `Policy` with:
              {enforced: true}
          The constraint at `organizations/foo` is not enforced.
          The constraint at `projects/bar` is enforced.

          Example 3 (RestoreDefault):
            `organizations/foo` has a `Policy` with:
              {enforced: true}
            `projects/bar` has a `Policy` with:
              {RestoreDefault: {}}
          The constraint at `organizations/foo` is enforced.
          The constraint at `projects/bar` is not enforced, because
          `constraint_default` for the `Constraint` is `ALLOW`.
        type: boolean
    type: object
  ClearOrgPolicyRequest:
    description: The request sent to the ClearOrgPolicy method.
    properties:
      constraint:
        description: Name of the `Constraint` of the `Policy` to clear.
        type: string
      etag:
        description: |-
          The current version, for concurrency control. Not sending an `etag`
          will cause the `Policy` to be cleared blindly.
        format: byte
        type: string
    type: object
  Constraint:
    description: |-
      A `Constraint` describes a way in which a resource's configuration can be
      restricted. For example, it controls which cloud services can be activated
      across an organization, or whether a Compute Engine instance can have
      serial port connections established. `Constraints` can be configured by the
      organization's policy adminstrator to fit the needs of the organzation by
      setting Policies for `Constraints` at different locations in the
      organization's resource hierarchy. Policies are inherited down the resource
      hierarchy from higher levels, but can also be overridden. For details about
      the inheritance rules please read about
      Policies.

      `Constraints` have a default behavior determined by the `constraint_default`
      field, which is the enforcement behavior that is used in the absence of a
      `Policy` being defined or inherited for the resource in question.
    properties:
      booleanConstraint:
        $ref: '#/definitions/BooleanConstraint'
        description: Defines this constraint as being a BooleanConstraint.
      constraintDefault:
        description: The evaluation behavior of this constraint in the absense of 'Policy'.
        enum:
          - CONSTRAINT_DEFAULT_UNSPECIFIED
          - ALLOW
          - DENY
        type: string
      description:
        description: |-
          Detailed description of what this `Constraint` controls as well as how and
          where it is enforced.

          Mutable.
        type: string
      displayName:
        description: |-
          The human readable name.

          Mutable.
        type: string
      listConstraint:
        $ref: '#/definitions/ListConstraint'
        description: Defines this constraint as being a ListConstraint.
      name:
        description: |-
          Immutable value, required to globally be unique. For example,
          `constraints/serviceuser.services`
        type: string
      version:
        description: Version of the `Constraint`. Default version is 0;
        format: int32
        type: integer
    type: object
  Empty:
    description: |-
      A generic empty message that you can re-use to avoid defining duplicated
      empty messages in your APIs. A typical example is to use it as the request
      or the response type of an API method. For instance:

          service Foo {
            rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);
          }

      The JSON representation for `Empty` is empty JSON object `{}`.
    properties: {}
    type: object
  FolderOperation:
    description: Metadata describing a long running folder operation
    properties:
      destinationParent:
        description: |-
          The resource name of the folder or organization we are either creating
          the folder under or moving the folder to.
        type: string
      displayName:
        description: The display name of the folder.
        type: string
      operationType:
        description: The type of this operation.
        enum:
          - OPERATION_TYPE_UNSPECIFIED
          - CREATE
          - MOVE
        type: string
      sourceParent:
        description: |-
          The resource name of the folder's parent.
          Only applicable when the operation_type is MOVE.
        type: string
    type: object
  FolderOperationError:
    description: A classification of the Folder Operation error.
    properties:
      errorMessageId:
        description: The type of operation error experienced.
        enum:
          - ERROR_TYPE_UNSPECIFIED
          - ACTIVE_FOLDER_HEIGHT_VIOLATION
          - MAX_CHILD_FOLDERS_VIOLATION
          - FOLDER_NAME_UNIQUENESS_VIOLATION
          - RESOURCE_DELETED_VIOLATION
          - PARENT_DELETED_VIOLATION
          - CYCLE_INTRODUCED_VIOLATION
          - FOLDER_BEING_MOVED_VIOLATION
          - FOLDER_TO_DELETE_NON_EMPTY_VIOLATION
          - DELETED_FOLDER_HEIGHT_VIOLATION
        type: string
    type: object
  GetAncestryRequest:
    description: |-
      The request sent to the
      GetAncestry
      method.
    properties: {}
    type: object
  GetAncestryResponse:
    description: Response from the GetAncestry method.
    properties:
      ancestor:
        description: |-
          Ancestors are ordered from bottom to top of the resource hierarchy. The
          first ancestor is the project itself, followed by the project's parent,
          etc.
        items:
          $ref: '#/definitions/Ancestor'
        type: array
    type: object
  GetEffectiveOrgPolicyRequest:
    description: The request sent to the GetEffectiveOrgPolicy method.
    properties:
      constraint:
        description: The name of the `Constraint` to compute the effective `Policy`.
        type: string
    type: object
  GetIamPolicyRequest:
    description: Request message for `GetIamPolicy` method.
    properties: {}
    type: object
  GetOrgPolicyRequest:
    description: The request sent to the GetOrgPolicy method.
    properties:
      constraint:
        description: Name of the `Constraint` to get the `Policy`.
        type: string
    type: object
  Lien:
    description: |-
      A Lien represents an encumbrance on the actions that can be performed on a
      resource.
    properties:
      createTime:
        description: The creation time of this Lien.
        format: google-datetime
        type: string
      name:
        description: |-
          A system-generated unique identifier for this Lien.

          Example: `liens/1234abcd`
        type: string
      origin:
        description: |-
          A stable, user-visible/meaningful string identifying the origin of the
          Lien, intended to be inspected programmatically. Maximum length of 200
          characters.

          Example: 'compute.googleapis.com'
        type: string
      parent:
        description: |-
          A reference to the resource this Lien is attached to. The server will
          validate the parent against those for which Liens are supported.

          Example: `projects/1234`
        type: string
      reason:
        description: |-
          Concise user-visible strings indicating why an action cannot be performed
          on a resource. Maximum lenth of 200 characters.

          Example: 'Holds production API key'
        type: string
      restrictions:
        description: |-
          The types of operations which should be blocked as a result of this Lien.
          Each value should correspond to an IAM permission. The server will
          validate the permissions against those for which Liens are supported.

          An empty list is meaningless and will be rejected.

          Example: ['resourcemanager.projects.delete']
        items:
          type: string
        type: array
    type: object
  ListAvailableOrgPolicyConstraintsRequest:
    description: |-
      The request sent to the [ListAvailableOrgPolicyConstraints]
      google.cloud.OrgPolicy.v1.ListAvailableOrgPolicyConstraints] method.
    properties:
      pageSize:
        description: |-
          Size of the pages to be returned. This is currently unsupported and will
          be ignored. The server may at any point start using this field to limit
          page size.
        format: int32
        type: integer
      pageToken:
        description: |-
          Page token used to retrieve the next page. This is currently unsupported
          and will be ignored. The server may at any point start using this field.
        type: string
    type: object
  ListAvailableOrgPolicyConstraintsResponse:
    description: |-
      The response returned from the ListAvailableOrgPolicyConstraints method.
      Returns all `Constraints` that could be set at this level of the hierarchy
      (contrast with the response from `ListPolicies`, which returns all policies
      which are set).
    properties:
      constraints:
        description: The collection of constraints that are settable on the request resource.
        items:
          $ref: '#/definitions/Constraint'
        type: array
      nextPageToken:
        description: Page token used to retrieve the next page. This is currently not used.
        type: string
    type: object
  ListConstraint:
    description: |-
      A `Constraint` that allows or disallows a list of string values, which are
      configured by an Organization's policy administrator with a `Policy`.
    properties:
      suggestedValue:
        description: |-
          Optional. The Google Cloud Console will try to default to a configuration
          that matches the value specified in this `Constraint`.
        type: string
    type: object
  ListLiensResponse:
    description: The response message for Liens.ListLiens.
    properties:
      liens:
        description: A list of Liens.
        items:
          $ref: '#/definitions/Lien'
        type: array
      nextPageToken:
        description: |-
          Token to retrieve the next page of results, or empty if there are no more
          results in the list.
        type: string
    type: object
  ListOrgPoliciesRequest:
    description: The request sent to the ListOrgPolicies method.
    properties:
      pageSize:
        description: |-
          Size of the pages to be returned. This is currently unsupported and will
          be ignored. The server may at any point start using this field to limit
          page size.
        format: int32
        type: integer
      pageToken:
        description: |-
          Page token used to retrieve the next page. This is currently unsupported
          and will be ignored. The server may at any point start using this field.
        type: string
    type: object
  ListOrgPoliciesResponse:
    description: |-
      The response returned from the ListOrgPolicies method. It will be empty
      if no `Policies` are set on the resource.
    properties:
      nextPageToken:
        description: |-
          Page token used to retrieve the next page. This is currently not used, but
          the server may at any point start supplying a valid token.
        type: string
      policies:
        description: |-
          The `Policies` that are set on the resource. It will be empty if no
          `Policies` are set.
        items:
          $ref: '#/definitions/OrgPolicy'
        type: array
    type: object
  ListPolicy:
    description: |-
      Used in `policy_type` to specify how `list_policy` behaves at this
      resource.

      A `ListPolicy` can define specific values that are allowed or denied by
      setting either the `allowed_values` or `denied_values` fields. It can also
      be used to allow or deny all values, by setting the `all_values` field. If
      `all_values` is `ALL_VALUES_UNSPECIFIED`, exactly one of `allowed_values`
      or `denied_values` must be set (attempting to set both or neither will
      result in a failed request). If `all_values` is set to either `ALLOW` or
      `DENY`, `allowed_values` and `denied_values` must be unset.
    properties:
      allValues:
        description: The policy all_values state.
        enum:
          - ALL_VALUES_UNSPECIFIED
          - ALLOW
          - DENY
        type: string
      allowedValues:
        description: |-
          List of values allowed  at this resource. Can only be set if no values
          are set for `denied_values` and `all_values` is set to
          `ALL_VALUES_UNSPECIFIED`.
        items:
          type: string
        type: array
      deniedValues:
        description: |-
          List of values denied at this resource. Can only be set if no values are
          set for `allowed_values` and `all_values` is set to
          `ALL_VALUES_UNSPECIFIED`.
        items:
          type: string
        type: array
      inheritFromParent:
        description: |-
          Determines the inheritance behavior for this `Policy`.

          By default, a `ListPolicy` set at a resource supercedes any `Policy` set
          anywhere up the resource hierarchy. However, if `inherit_from_parent` is
          set to `true`, then the values from the effective `Policy` of the parent
          resource are inherited, meaning the values set in this `Policy` are
          added to the values inherited up the hierarchy.

          Setting `Policy` hierarchies that inherit both allowed values and denied
          values isn't recommended in most circumstances to keep the configuration
          simple and understandable. However, it is possible to set a `Policy` with
          `allowed_values` set that inherits a `Policy` with `denied_values` set.
          In this case, the values that are allowed must be in `allowed_values` and
          not present in `denied_values`.

          For example, suppose you have a `Constraint`
          `constraints/serviceuser.services`, which has a `constraint_type` of
          `list_constraint`, and with `constraint_default` set to `ALLOW`.
          Suppose that at the Organization level, a `Policy` is applied that
          restricts the allowed API activations to {`E1`, `E2`}. Then, if a
          `Policy` is applied to a project below the Organization that has
          `inherit_from_parent` set to `false` and field all_values set to DENY,
          then an attempt to activate any API will be denied.

          The following examples demonstrate different possible layerings:

          Example 1 (no inherited values):
            `organizations/foo` has a `Policy` with values:
              {allowed_values: “E1” allowed_values:”E2”}
            ``projects/bar`` has `inherit_from_parent` `false` and values:
              {allowed_values: "E3" allowed_values: "E4"}
          The accepted values at `organizations/foo` are `E1`, `E2`.
          The accepted values at `projects/bar` are `E3`, and `E4`.

          Example 2 (inherited values):
            `organizations/foo` has a `Policy` with values:
              {allowed_values: “E1” allowed_values:”E2”}
            `projects/bar` has a `Policy` with values:
              {value: “E3” value: ”E4” inherit_from_parent: true}
          The accepted values at `organizations/foo` are `E1`, `E2`.
          The accepted values at `projects/bar` are `E1`, `E2`, `E3`, and `E4`.

          Example 3 (inheriting both allowed and denied values):
            `organizations/foo` has a `Policy` with values:
              {allowed_values: "E1" allowed_values: "E2"}
            `projects/bar` has a `Policy` with:
              {denied_values: "E1"}
          The accepted values at `organizations/foo` are `E1`, `E2`.
          The value accepted at `projects/bar` is `E2`.

          Example 4 (RestoreDefault):
            `organizations/foo` has a `Policy` with values:
              {allowed_values: “E1” allowed_values:”E2”}
            `projects/bar` has a `Policy` with values:
              {RestoreDefault: {}}
          The accepted values at `organizations/foo` are `E1`, `E2`.
          The accepted values at `projects/bar` are either all or none depending on
          the value of `constraint_default` (if `ALLOW`, all; if
          `DENY`, none).

          Example 5 (no policy inherits parent policy):
            `organizations/foo` has no `Policy` set.
            `projects/bar` has no `Policy` set.
          The accepted values at both levels are either all or none depending on
          the value of `constraint_default` (if `ALLOW`, all; if
          `DENY`, none).

          Example 6 (ListConstraint allowing all):
            `organizations/foo` has a `Policy` with values:
              {allowed_values: “E1” allowed_values: ”E2”}
            `projects/bar` has a `Policy` with:
              {all: ALLOW}
          The accepted values at `organizations/foo` are `E1`, E2`.
          Any value is accepted at `projects/bar`.

          Example 7 (ListConstraint allowing none):
            `organizations/foo` has a `Policy` with values:
              {allowed_values: “E1” allowed_values: ”E2”}
            `projects/bar` has a `Policy` with:
              {all: DENY}
          The accepted values at `organizations/foo` are `E1`, E2`.
          No value is accepted at `projects/bar`.
        type: boolean
      suggestedValue:
        description: |-
          Optional. The Google Cloud Console will try to default to a configuration
          that matches the value specified in this `Policy`. If `suggested_value`
          is not set, it will inherit the value specified higher in the hierarchy,
          unless `inherit_from_parent` is `false`.
        type: string
    type: object
  ListProjectsResponse:
    description: |-
      A page of the response received from the
      ListProjects
      method.

      A paginated response where more pages are available has
      `next_page_token` set. This token can be used in a subsequent request to
      retrieve the next request page.
    properties:
      nextPageToken:
        description: |-
          Pagination token.

          If the result set is too large to fit in a single response, this token
          is returned. It encodes the position of the current result cursor.
          Feeding this value into a new list request with the `page_token` parameter
          gives the next page of the results.

          When `next_page_token` is not filled in, there is no next page and
          the list returned is the last page in the result set.

          Pagination tokens have a limited lifetime.
        type: string
      projects:
        description: |-
          The list of Projects that matched the list filter. This list can
          be paginated.
        items:
          $ref: '#/definitions/Project'
        type: array
    type: object
  Operation:
    description: |-
      This resource represents a long-running operation that is the result of a
      network API call.
    properties:
      done:
        description: |-
          If the value is `false`, it means the operation is still in progress.
          If `true`, the operation is completed, and either `error` or `response` is
          available.
        type: boolean
      error:
        $ref: '#/definitions/Status'
        description: The error result of the operation in case of failure or cancellation.
      metadata:
        additionalProperties:
          description: Properties of the object. Contains field @type with type URL.
        description: |-
          Service-specific metadata associated with the operation.  It typically
          contains progress information and common metadata such as create time.
          Some services might not provide such metadata.  Any method that returns a
          long-running operation should document the metadata type, if any.
        type: object
      name:
        description: |-
          The server-assigned name, which is only unique within the same service that
          originally returns it. If you use the default HTTP mapping, the
          `name` should have the format of `operations/some/unique/name`.
        type: string
      response:
        additionalProperties:
          description: Properties of the object. Contains field @type with type URL.
        description: |-
          The normal response of the operation in case of success.  If the original
          method returns no data on success, such as `Delete`, the response is
          `google.protobuf.Empty`.  If the original method is standard
          `Get`/`Create`/`Update`, the response should be the resource.  For other
          methods, the response should have the type `XxxResponse`, where `Xxx`
          is the original method name.  For example, if the original method name
          is `TakeSnapshot()`, the inferred response type is
          `TakeSnapshotResponse`.
        type: object
    type: object
  OrgPolicy:
    description: |-
      Defines a Cloud Organization `Policy` which is used to specify `Constraints`
      for configurations of Cloud Platform resources.
    properties:
      booleanPolicy:
        $ref: '#/definitions/BooleanPolicy'
        description: 'For boolean `Constraints`, whether to enforce the `Constraint` or not.'
      constraint:
        description: |-
          The name of the `Constraint` the `Policy` is configuring, for example,
          `constraints/serviceuser.services`.

          Immutable after creation.
        type: string
      etag:
        description: |-
          An opaque tag indicating the current version of the `Policy`, used for
          concurrency control.

          When the `Policy` is returned from either a `GetPolicy` or a
          `ListOrgPolicy` request, this `etag` indicates the version of the current
          `Policy` to use when executing a read-modify-write loop.

          When the `Policy` is returned from a `GetEffectivePolicy` request, the
          `etag` will be unset.

          When the `Policy` is used in a `SetOrgPolicy` method, use the `etag` value
          that was returned from a `GetOrgPolicy` request as part of a
          read-modify-write loop for concurrency control. Not setting the `etag`in a
          `SetOrgPolicy` request will result in an unconditional write of the
          `Policy`.
        format: byte
        type: string
      listPolicy:
        $ref: '#/definitions/ListPolicy'
        description: List of values either allowed or disallowed.
      restoreDefault:
        $ref: '#/definitions/RestoreDefault'
        description: |-
          Restores the default behavior of the constraint; independent of
          `Constraint` type.
      updateTime:
        description: |-
          The time stamp the `Policy` was previously updated. This is set by the
          server, not specified by the caller, and represents the last time a call to
          `SetOrgPolicy` was made for that `Policy`. Any value set by the client will
          be ignored.
        format: google-datetime
        type: string
      version:
        description: Version of the `Policy`. Default version is 0;
        format: int32
        type: integer
    type: object
  Organization:
    description: |-
      The root node in the resource hierarchy to which a particular entity's
      (e.g., company) resources belong.
    properties:
      creationTime:
        description: |-
          Timestamp when the Organization was created. Assigned by the server.
          @OutputOnly
        format: google-datetime
        type: string
      displayName:
        description: |-
          A friendly string to be used to refer to the Organization in the UI.
          Assigned by the server, set to the primary domain of the G Suite
          customer that owns the organization.
          @OutputOnly
        type: string
      lifecycleState:
        description: |-
          The organization's current lifecycle state. Assigned by the server.
          @OutputOnly
        enum:
          - LIFECYCLE_STATE_UNSPECIFIED
          - ACTIVE
          - DELETE_REQUESTED
        type: string
      name:
        description: |-
          Output Only. The resource name of the organization. This is the
          organization's relative path in the API. Its format is
          "organizations/[organization_id]". For example, "organizations/1234".
        type: string
      owner:
        $ref: '#/definitions/OrganizationOwner'
        description: |-
          The owner of this Organization. The owner should be specified on
          creation. Once set, it cannot be changed.
          This field is required.
    type: object
  OrganizationOwner:
    description: |-
      The entity that owns an Organization. The lifetime of the Organization and
      all of its descendants are bound to the `OrganizationOwner`. If the
      `OrganizationOwner` is deleted, the Organization and all its descendants will
      be deleted.
    properties:
      directoryCustomerId:
        description: The Google for Work customer id used in the Directory API.
        type: string
    type: object
  Policy:
    description: |-
      Defines an Identity and Access Management (IAM) policy. It is used to
      specify access control policies for Cloud Platform resources.


      A `Policy` consists of a list of `bindings`. A `Binding` binds a list of
      `members` to a `role`, where the members can be user accounts, Google groups,
      Google domains, and service accounts. A `role` is a named list of permissions
      defined by IAM.

      **Example**

          {
            "bindings": [
              {
                "role": "roles/owner",
                "members": [
                  "user:mike@example.com",
                  "group:admins@example.com",
                  "domain:google.com",
                  "serviceAccount:my-other-app@appspot.gserviceaccount.com",
                ]
              },
              {
                "role": "roles/viewer",
                "members": ["user:sean@example.com"]
              }
            ]
          }

      For a description of IAM and its features, see the
      [IAM developer's guide](https://cloud.google.com/iam).
    properties:
      auditConfigs:
        description: Specifies cloud audit logging configuration for this policy.
        items:
          $ref: '#/definitions/AuditConfig'
        type: array
      bindings:
        description: |-
          Associates a list of `members` to a `role`.
          `bindings` with no members will result in an error.
        items:
          $ref: '#/definitions/Binding'
        type: array
      etag:
        description: |-
          `etag` is used for optimistic concurrency control as a way to help
          prevent simultaneous updates of a policy from overwriting each other.
          It is strongly suggested that systems make use of the `etag` in the
          read-modify-write cycle to perform policy updates in order to avoid race
          conditions: An `etag` is returned in the response to `getIamPolicy`, and
          systems are expected to put that etag in the request to `setIamPolicy` to
          ensure that their change will be applied to the same version of the policy.

          If no `etag` is provided in the call to `setIamPolicy`, then the existing
          policy is overwritten blindly.
        format: byte
        type: string
      version:
        description: Version of the `Policy`. The default version is 0.
        format: int32
        type: integer
    type: object
  Project:
    description: |-
      A Project is a high-level Google Cloud Platform entity.  It is a
      container for ACLs, APIs, App Engine Apps, VMs, and other
      Google Cloud Platform resources.
    properties:
      createTime:
        description: |-
          Creation time.

          Read-only.
        format: google-datetime
        type: string
      labels:
        additionalProperties:
          type: string
        description: |-
          The labels associated with this Project.

          Label keys must be between 1 and 63 characters long and must conform
          to the following regular expression: \[a-z\](\[-a-z0-9\]*\[a-z0-9\])?.

          Label values must be between 0 and 63 characters long and must conform
          to the regular expression (\[a-z\](\[-a-z0-9\]*\[a-z0-9\])?)?.

          No more than 256 labels can be associated with a given resource.

          Clients should store labels in a representation such as JSON that does not
          depend on specific characters being disallowed.

          Example: <code>"environment" : "dev"</code>
          Read-write.
        type: object
      lifecycleState:
        description: |-
          The Project lifecycle state.

          Read-only.
        enum:
          - LIFECYCLE_STATE_UNSPECIFIED
          - ACTIVE
          - DELETE_REQUESTED
          - DELETE_IN_PROGRESS
        type: string
      name:
        description: |-
          The user-assigned display name of the Project.
          It must be 4 to 30 characters.
          Allowed characters are: lowercase and uppercase letters, numbers,
          hyphen, single-quote, double-quote, space, and exclamation point.

          Example: <code>My Project</code>
          Read-write.
        type: string
      parent:
        $ref: '#/definitions/ResourceId'
        description: |-
          An optional reference to a parent Resource.

          The only supported parent type is "organization". Once set, the parent
          cannot be modified. The `parent` can be set on creation or using the
          `UpdateProject` method; the end user must have the
          `resourcemanager.projects.create` permission on the parent.

          Read-write.
      projectId:
        description: |-
          The unique, user-assigned ID of the Project.
          It must be 6 to 30 lowercase letters, digits, or hyphens.
          It must start with a letter.
          Trailing hyphens are prohibited.

          Example: <code>tokyo-rain-123</code>
          Read-only after creation.
        type: string
      projectNumber:
        description: |-
          The number uniquely identifying the project.

          Example: <code>415104041262</code>
          Read-only.
        format: int64
        type: string
    type: object
  ProjectCreationStatus:
    description: |-
      A status object which is used as the `metadata` field for the Operation
      returned by CreateProject. It provides insight for when significant phases of
      Project creation have completed.
    properties:
      createTime:
        description: Creation time of the project creation workflow.
        format: google-datetime
        type: string
      gettable:
        description: |-
          True if the project can be retrieved using GetProject. No other operations
          on the project are guaranteed to work until the project creation is
          complete.
        type: boolean
      ready:
        description: True if the project creation process is complete.
        type: boolean
    type: object
  ResourceId:
    description: |-
      A container to reference an id for any resource type. A `resource` in Google
      Cloud Platform is a generic term for something you (a developer) may want to
      interact with through one of our API's. Some examples are an App Engine app,
      a Compute Engine instance, a Cloud SQL database, and so on.
    properties:
      id:
        description: |-
          Required field for the type-specific id. This should correspond to the id
          used in the type-specific API's.
        type: string
      type:
        description: |-
          Required field representing the resource type this id is for.
          At present, the valid types are: "organization"
        type: string
    type: object
  RestoreDefault:
    description: |-
      Ignores policies set above this resource and restores the
      `constraint_default` enforcement behavior of the specific `Constraint` at
      this resource.

      Suppose that `constraint_default` is set to `ALLOW` for the
      `Constraint` `constraints/serviceuser.services`. Suppose that organization
      foo.com sets a `Policy` at their Organization resource node that restricts
      the allowed service activations to deny all service activations. They
      could then set a `Policy` with the `policy_type` `restore_default` on
      several experimental projects, restoring the `constraint_default`
      enforcement of the `Constraint` for only those projects, allowing those
      projects to have all services activated.
    properties: {}
    type: object
  SearchOrganizationsRequest:
    description: The request sent to the `SearchOrganizations` method.
    properties:
      filter:
        description: |-
          An optional query string used to filter the Organizations to return in
          the response. Filter rules are case-insensitive.


          Organizations may be filtered by `owner.directoryCustomerId` or by
          `domain`, where the domain is a Google for Work domain, for example:

          |Filter|Description|
          |------|-----------|
          |owner.directorycustomerid:123456789|Organizations with
          `owner.directory_customer_id` equal to `123456789`.|
          |domain:google.com|Organizations corresponding to the domain `google.com`.|

          This field is optional.
        type: string
      pageSize:
        description: |-
          The maximum number of Organizations to return in the response.
          This field is optional.
        format: int32
        type: integer
      pageToken:
        description: |-
          A pagination token returned from a previous call to `SearchOrganizations`
          that indicates from where listing should continue.
          This field is optional.
        type: string
    type: object
  SearchOrganizationsResponse:
    description: The response returned from the `SearchOrganizations` method.
    properties:
      nextPageToken:
        description: |-
          A pagination token to be used to retrieve the next page of results. If the
          result is too large to fit within the page size specified in the request,
          this field will be set with a token that can be used to fetch the next page
          of results. If this field is empty, it indicates that this response
          contains the last page of results.
        type: string
      organizations:
        description: |-
          The list of Organizations that matched the search query, possibly
          paginated.
        items:
          $ref: '#/definitions/Organization'
        type: array
    type: object
  SetIamPolicyRequest:
    description: Request message for `SetIamPolicy` method.
    properties:
      policy:
        $ref: '#/definitions/Policy'
        description: |-
          REQUIRED: The complete policy to be applied to the `resource`. The size of
          the policy is limited to a few 10s of KB. An empty policy is a
          valid policy but certain Cloud Platform services (such as Projects)
          might reject them.
      updateMask:
        description: |-
          OPTIONAL: A FieldMask specifying which fields of the policy to modify. Only
          the fields in the mask will be modified. If no mask is provided, the
          following default mask is used:
          paths: "bindings, etag"
          This field is only used by Cloud IAM.
        format: google-fieldmask
        type: string
    type: object
  SetOrgPolicyRequest:
    description: The request sent to the SetOrgPolicyRequest method.
    properties:
      policy:
        $ref: '#/definitions/OrgPolicy'
        description: '`Policy` to set on the resource.'
    type: object
  Status:
    description: |-
      The `Status` type defines a logical error model that is suitable for different
      programming environments, including REST APIs and RPC APIs. It is used by
      [gRPC](https://github.com/grpc). The error model is designed to be:

      - Simple to use and understand for most users
      - Flexible enough to meet unexpected needs

      # Overview

      The `Status` message contains three pieces of data: error code, error message,
      and error details. The error code should be an enum value of
      google.rpc.Code, but it may accept additional error codes if needed.  The
      error message should be a developer-facing English message that helps
      developers *understand* and *resolve* the error. If a localized user-facing
      error message is needed, put the localized message in the error details or
      localize it in the client. The optional error details may contain arbitrary
      information about the error. There is a predefined set of error detail types
      in the package `google.rpc` that can be used for common error conditions.

      # Language mapping

      The `Status` message is the logical representation of the error model, but it
      is not necessarily the actual wire format. When the `Status` message is
      exposed in different client libraries and different wire protocols, it can be
      mapped differently. For example, it will likely be mapped to some exceptions
      in Java, but more likely mapped to some error codes in C.

      # Other uses

      The error model and the `Status` message can be used in a variety of
      environments, either with or without APIs, to provide a
      consistent developer experience across different environments.

      Example uses of this error model include:

      - Partial errors. If a service needs to return partial errors to the client,
          it may embed the `Status` in the normal response to indicate the partial
          errors.

      - Workflow errors. A typical workflow has multiple steps. Each step may
          have a `Status` message for error reporting.

      - Batch operations. If a client uses batch request and batch response, the
          `Status` message should be used directly inside batch response, one for
          each error sub-response.

      - Asynchronous operations. If an API call embeds asynchronous operation
          results in its response, the status of those operations should be
          represented directly using the `Status` message.

      - Logging. If some API errors are stored in logs, the message `Status` could
          be used directly after any stripping needed for security/privacy reasons.
    properties:
      code:
        description: 'The status code, which should be an enum value of google.rpc.Code.'
        format: int32
        type: integer
      details:
        description: |-
          A list of messages that carry the error details.  There is a common set of
          message types for APIs to use.
        items:
          additionalProperties:
            description: Properties of the object. Contains field @type with type URL.
          type: object
        type: array
      message:
        description: |-
          A developer-facing error message, which should be in English. Any
          user-facing error message should be localized and sent in the
          google.rpc.Status.details field, or localized by the client.
        type: string
    type: object
  TestIamPermissionsRequest:
    description: Request message for `TestIamPermissions` method.
    properties:
      permissions:
        description: |-
          The set of permissions to check for the `resource`. Permissions with
          wildcards (such as '*' or 'storage.*') are not allowed. For more
          information see
          [IAM Overview](https://cloud.google.com/iam/docs/overview#permissions).
        items:
          type: string
        type: array
    type: object
  TestIamPermissionsResponse:
    description: Response message for `TestIamPermissions` method.
    properties:
      permissions:
        description: |-
          A subset of `TestPermissionsRequest.permissions` that the caller is
          allowed.
        items:
          type: string
        type: array
    type: object
  UndeleteProjectRequest:
    description: |-
      The request sent to the UndeleteProject
      method.
    properties: {}
    type: object
