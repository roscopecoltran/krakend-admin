syntax = "proto3";

import "google/api/annotations.proto";

package googleidentityandaccessmanagement(iam);

message PostV1Permissions:QueryTestablePermissionsRequest {
    $.xgafv $.xgafv = 1;
    string access_token = 2;
    alt alt = 3;
    string bearer_token = 4;
    QueryTestablePermissionsRequest body = 5;
    string callback = 6;
    string fields = 7;
    string key = 8;
    string oauth_token = 9;
    boolean pp = 10;
    boolean prettyPrint = 11;
    string quotaUser = 12;
    string uploadType = 13;
    string upload_protocol = 14;
}

message GetV1RolesRequest {
    $.xgafv $.xgafv = 1;
    string access_token = 2;
    alt alt = 3;
    string bearer_token = 4;
    string callback = 5;
    string fields = 6;
    string key = 7;
    string oauth_token = 8;
    // Optional limit on the number of roles to include in the response.
    int32 pageSize = 9;
    // Optional pagination token returned in an earlier ListRolesResponse.
    string pageToken = 10;
    // The resource name of the parent resource in one of the following formats:
    // `` (empty string) -- this refers to curated roles.
    // `organizations/{ORGANIZATION_ID}`
    // `projects/{PROJECT_ID}`
    string parent = 11;
    boolean pp = 12;
    boolean prettyPrint = 13;
    string quotaUser = 14;
    // Include Roles that have been deleted.
    bool showDeleted = 15;
    string uploadType = 16;
    string upload_protocol = 17;
    // Optional view for the returned Role objects.
    enum GetV1RolesRequest_View {
        GETV1ROLESREQUEST_VIEW_BASIC = 0;
        GETV1ROLESREQUEST_VIEW_FULL = 1;
    }
    GetV1RolesRequest_View view = 18;
}

message PostV1Roles:QueryGrantableRolesRequest {
    $.xgafv $.xgafv = 1;
    string access_token = 2;
    alt alt = 3;
    string bearer_token = 4;
    QueryGrantableRolesRequest body = 5;
    string callback = 6;
    string fields = 7;
    string key = 8;
    string oauth_token = 9;
    boolean pp = 10;
    boolean prettyPrint = 11;
    string quotaUser = 12;
    string uploadType = 13;
    string upload_protocol = 14;
}

message GetV1NameRequest {
    $.xgafv $.xgafv = 1;
    string access_token = 2;
    alt alt = 3;
    string bearer_token = 4;
    string callback = 5;
    string fields = 6;
    string key = 7;
    // The resource name of the role in one of the following formats:
    // `roles/{ROLE_NAME}`
    // `organizations/{ORGANIZATION_ID}/roles/{ROLE_NAME}`
    // `projects/{PROJECT_ID}/roles/{ROLE_NAME}`
    string name = 8;
    string oauth_token = 9;
    boolean pp = 10;
    boolean prettyPrint = 11;
    // The output format of the public key requested.
    // X509_PEM is the default output format.
    enum GetV1NameRequest_PublicKeyType {
        GETV1NAMEREQUEST_PUBLICKEYTYPE_TYPE_NONE = 0;
        GETV1NAMEREQUEST_PUBLICKEYTYPE_TYPE_X509_PEM_FILE = 1;
        GETV1NAMEREQUEST_PUBLICKEYTYPE_TYPE_RAW_PUBLIC_KEY = 2;
    }
    GetV1NameRequest_PublicKeyType publicKeyType = 12;
    string quotaUser = 13;
    string uploadType = 14;
    string upload_protocol = 15;
}

message PutV1NameRequest {
    $.xgafv $.xgafv = 1;
    string access_token = 2;
    alt alt = 3;
    string bearer_token = 4;
    ServiceAccount body = 5;
    string callback = 6;
    string fields = 7;
    string key = 8;
    // The resource name of the service account in the following format:
    // `projects/{PROJECT_ID}/serviceAccounts/{ACCOUNT}`.
    // 
    // Requests using `-` as a wildcard for the `PROJECT_ID` will infer the
    // project from the `account` and the `ACCOUNT` value can be the `email`
    // address or the `unique_id` of the service account.
    // 
    // In responses the resource name will always be in the format
    // `projects/{PROJECT_ID}/serviceAccounts/{ACCOUNT}`.
    string name = 9;
    string oauth_token = 10;
    boolean pp = 11;
    boolean prettyPrint = 12;
    string quotaUser = 13;
    string uploadType = 14;
    string upload_protocol = 15;
}

message DeleteV1NameRequest {
    $.xgafv $.xgafv = 1;
    string access_token = 2;
    alt alt = 3;
    string bearer_token = 4;
    string callback = 5;
    // Used to perform a consistent read-modify-write.
    string etag = 6;
    string fields = 7;
    string key = 8;
    // The resource name of the service account key in the following format:
    // `projects/{PROJECT_ID}/serviceAccounts/{ACCOUNT}/keys/{key}`.
    // Using `-` as a wildcard for the `PROJECT_ID` will infer the project from
    // the account. The `ACCOUNT` value can be the `email` address or the
    // `unique_id` of the service account.
    string name = 9;
    string oauth_token = 10;
    boolean pp = 11;
    boolean prettyPrint = 12;
    string quotaUser = 13;
    string uploadType = 14;
    string upload_protocol = 15;
}

message GetV1NameKeysRequest {
    $.xgafv $.xgafv = 1;
    string access_token = 2;
    alt alt = 3;
    string bearer_token = 4;
    string callback = 5;
    string fields = 6;
    string key = 7;
    // Filters the types of keys the user wants to include in the list
    // response. Duplicate key types are not allowed. If no key type
    // is provided, all keys are returned.
    repeated string keyTypes = 8;
    // The resource name of the service account in the following format:
    // `projects/{PROJECT_ID}/serviceAccounts/{ACCOUNT}`.
    // 
    // Using `-` as a wildcard for the `PROJECT_ID`, will infer the project from
    // the account. The `ACCOUNT` value can be the `email` address or the
    // `unique_id` of the service account.
    string name = 9;
    string oauth_token = 10;
    boolean pp = 11;
    boolean prettyPrint = 12;
    string quotaUser = 13;
    string uploadType = 14;
    string upload_protocol = 15;
}

message PostV1NameKeysRequest {
    $.xgafv $.xgafv = 1;
    string access_token = 2;
    alt alt = 3;
    string bearer_token = 4;
    CreateServiceAccountKeyRequest body = 5;
    string callback = 6;
    string fields = 7;
    string key = 8;
    // The resource name of the service account in the following format:
    // `projects/{PROJECT_ID}/serviceAccounts/{ACCOUNT}`.
    // Using `-` as a wildcard for the `PROJECT_ID` will infer the project from
    // the account. The `ACCOUNT` value can be the `email` address or the
    // `unique_id` of the service account.
    string name = 9;
    string oauth_token = 10;
    boolean pp = 11;
    boolean prettyPrint = 12;
    string quotaUser = 13;
    string uploadType = 14;
    string upload_protocol = 15;
}

message GetV1NameServiceAccountsRequest {
    $.xgafv $.xgafv = 1;
    string access_token = 2;
    alt alt = 3;
    string bearer_token = 4;
    string callback = 5;
    string fields = 6;
    string key = 7;
    // Required. The resource name of the project associated with the service
    // accounts, such as `projects/my-project-123`.
    string name = 8;
    string oauth_token = 9;
    // Optional limit on the number of service accounts to include in the
    // response. Further accounts can subsequently be obtained by including the
    // ListServiceAccountsResponse.next_page_token
    // in a subsequent request.
    int32 pageSize = 10;
    // Optional pagination token returned in an earlier
    // ListServiceAccountsResponse.next_page_token.
    string pageToken = 11;
    boolean pp = 12;
    boolean prettyPrint = 13;
    string quotaUser = 14;
    string uploadType = 15;
    string upload_protocol = 16;
}

message PostV1NameServiceAccountsRequest {
    $.xgafv $.xgafv = 1;
    string access_token = 2;
    alt alt = 3;
    string bearer_token = 4;
    CreateServiceAccountRequest body = 5;
    string callback = 6;
    string fields = 7;
    string key = 8;
    // Required. The resource name of the project associated with the service
    // accounts, such as `projects/my-project-123`.
    string name = 9;
    string oauth_token = 10;
    boolean pp = 11;
    boolean prettyPrint = 12;
    string quotaUser = 13;
    string uploadType = 14;
    string upload_protocol = 15;
}

message PostV1Name:SignBlobRequest {
    $.xgafv $.xgafv = 1;
    string access_token = 2;
    alt alt = 3;
    string bearer_token = 4;
    SignBlobRequest body = 5;
    string callback = 6;
    string fields = 7;
    string key = 8;
    // The resource name of the service account in the following format:
    // `projects/{PROJECT_ID}/serviceAccounts/{ACCOUNT}`.
    // Using `-` as a wildcard for the `PROJECT_ID` will infer the project from
    // the account. The `ACCOUNT` value can be the `email` address or the
    // `unique_id` of the service account.
    string name = 9;
    string oauth_token = 10;
    boolean pp = 11;
    boolean prettyPrint = 12;
    string quotaUser = 13;
    string uploadType = 14;
    string upload_protocol = 15;
}

message PostV1Name:SignJwtRequest {
    $.xgafv $.xgafv = 1;
    string access_token = 2;
    alt alt = 3;
    string bearer_token = 4;
    SignJwtRequest body = 5;
    string callback = 6;
    string fields = 7;
    string key = 8;
    // The resource name of the service account in the following format:
    // `projects/{PROJECT_ID}/serviceAccounts/{ACCOUNT}`.
    // Using `-` as a wildcard for the `PROJECT_ID` will infer the project from
    // the account. The `ACCOUNT` value can be the `email` address or the
    // `unique_id` of the service account.
    string name = 9;
    string oauth_token = 10;
    boolean pp = 11;
    boolean prettyPrint = 12;
    string quotaUser = 13;
    string uploadType = 14;
    string upload_protocol = 15;
}

message PostV1Name:UndeleteRequest {
    $.xgafv $.xgafv = 1;
    string access_token = 2;
    alt alt = 3;
    string bearer_token = 4;
    UndeleteRoleRequest body = 5;
    string callback = 6;
    string fields = 7;
    string key = 8;
    // The resource name of the role in one of the following formats:
    // `organizations/{ORGANIZATION_ID}/roles/{ROLE_NAME}`
    // `projects/{PROJECT_ID}/roles/{ROLE_NAME}`
    string name = 9;
    string oauth_token = 10;
    boolean pp = 11;
    boolean prettyPrint = 12;
    string quotaUser = 13;
    string uploadType = 14;
    string upload_protocol = 15;
}

message GetV1ParentRolesRequest {
    $.xgafv $.xgafv = 1;
    string access_token = 2;
    alt alt = 3;
    string bearer_token = 4;
    string callback = 5;
    string fields = 6;
    string key = 7;
    string oauth_token = 8;
    // Optional limit on the number of roles to include in the response.
    int32 pageSize = 9;
    // Optional pagination token returned in an earlier ListRolesResponse.
    string pageToken = 10;
    // The resource name of the parent resource in one of the following formats:
    // `` (empty string) -- this refers to curated roles.
    // `organizations/{ORGANIZATION_ID}`
    // `projects/{PROJECT_ID}`
    string parent = 11;
    boolean pp = 12;
    boolean prettyPrint = 13;
    string quotaUser = 14;
    // Include Roles that have been deleted.
    bool showDeleted = 15;
    string uploadType = 16;
    string upload_protocol = 17;
    // Optional view for the returned Role objects.
    enum GetV1ParentRolesRequest_View {
        GETV1PARENTROLESREQUEST_VIEW_BASIC = 0;
        GETV1PARENTROLESREQUEST_VIEW_FULL = 1;
    }
    GetV1ParentRolesRequest_View view = 18;
}

message PostV1ParentRolesRequest {
    $.xgafv $.xgafv = 1;
    string access_token = 2;
    alt alt = 3;
    string bearer_token = 4;
    CreateRoleRequest body = 5;
    string callback = 6;
    string fields = 7;
    string key = 8;
    string oauth_token = 9;
    // The resource name of the parent resource in one of the following formats:
    // `organizations/{ORGANIZATION_ID}`
    // `projects/{PROJECT_ID}`
    string parent = 10;
    boolean pp = 11;
    boolean prettyPrint = 12;
    string quotaUser = 13;
    string uploadType = 14;
    string upload_protocol = 15;
}

message PostV1Resource:GetIamPolicyRequest {
    $.xgafv $.xgafv = 1;
    string access_token = 2;
    alt alt = 3;
    string bearer_token = 4;
    string callback = 5;
    string fields = 6;
    string key = 7;
    string oauth_token = 8;
    boolean pp = 9;
    boolean prettyPrint = 10;
    string quotaUser = 11;
    // REQUIRED: The resource for which the policy is being requested.
    // See the operation documentation for the appropriate value for this field.
    string resource = 12;
    string uploadType = 13;
    string upload_protocol = 14;
}

message PostV1Resource:SetIamPolicyRequest {
    $.xgafv $.xgafv = 1;
    string access_token = 2;
    alt alt = 3;
    string bearer_token = 4;
    SetIamPolicyRequest body = 5;
    string callback = 6;
    string fields = 7;
    string key = 8;
    string oauth_token = 9;
    boolean pp = 10;
    boolean prettyPrint = 11;
    string quotaUser = 12;
    // REQUIRED: The resource for which the policy is being specified.
    // See the operation documentation for the appropriate value for this field.
    string resource = 13;
    string uploadType = 14;
    string upload_protocol = 15;
}

message PostV1Resource:TestIamPermissionsRequest {
    $.xgafv $.xgafv = 1;
    string access_token = 2;
    alt alt = 3;
    string bearer_token = 4;
    TestIamPermissionsRequest body = 5;
    string callback = 6;
    string fields = 7;
    string key = 8;
    string oauth_token = 9;
    boolean pp = 10;
    boolean prettyPrint = 11;
    string quotaUser = 12;
    // REQUIRED: The resource for which the policy detail is being requested.
    // See the operation documentation for the appropriate value for this field.
    string resource = 13;
    string uploadType = 14;
    string upload_protocol = 15;
}

enum $.Xgafv {
    $XGAFV_1 = 0;
    $XGAFV_2 = 1;
}

message AuditData {
    // Policy delta between the original policy and the newly set policy.
    PolicyDelta policyDelta = 1;
}

message Binding {
    // Specifies the identities requesting access for a Cloud Platform resource.
    // `members` can have the following values:
    // 
    // * `allUsers`: A special identifier that represents anyone who is
    //    on the internet; with or without a Google account.
    // 
    // * `allAuthenticatedUsers`: A special identifier that represents anyone
    //    who is authenticated with a Google account or a service account.
    // 
    // * `user:{emailid}`: An email address that represents a specific Google
    //    account. For example, `alice@gmail.com` or `joe@example.com`.
    // 
    // 
    // * `serviceAccount:{emailid}`: An email address that represents a service
    //    account. For example, `my-other-app@appspot.gserviceaccount.com`.
    // 
    // * `group:{emailid}`: An email address that represents a Google group.
    //    For example, `admins@example.com`.
    // 
    // 
    // * `domain:{domain}`: A Google Apps domain name that represents all the
    //    users of that domain. For example, `google.com` or `example.com`.
    // 
    repeated string members = 1;
    // Role that is assigned to `members`.
    // For example, `roles/viewer`, `roles/editor`, or `roles/owner`.
    // Required
    string role = 2;
}

message BindingDelta {
    // The action that was performed on a Binding.
    // Required
    enum BindingDelta_Action {
        BINDINGDELTA_ACTION_ACTION_UNSPECIFIED = 0;
        BINDINGDELTA_ACTION_ADD = 1;
        BINDINGDELTA_ACTION_REMOVE = 2;
    }
    BindingDelta_Action action = 1;
    // The condition that is associated with this binding.
    // This field is GOOGLE_INTERNAL.
    // This field is not logged in IAM side because it's only for audit logging.
    // Optional
    Expr condition = 2;
    // A single identity requesting access for a Cloud Platform resource.
    // Follows the same format of Binding.members.
    // Required
    string member = 3;
    // Role that is assigned to `members`.
    // For example, `roles/viewer`, `roles/editor`, or `roles/owner`.
    // Required
    string role = 4;
}

message CreateRoleRequest {
    // The Role resource to create.
    Role role = 1;
    // The role id to use for this role.
    string roleId = 2;
}

message CreateServiceAccountKeyRequest {
    // Which type of key and algorithm to use for the key.
    // The default is currently a 2K RSA key.  However this may change in the
    // future.
    enum CreateServiceAccountKeyRequest_KeyAlgorithm {
        CREATESERVICEACCOUNTKEYREQUEST_KEYALGORITHM_KEY_ALG_UNSPECIFIED = 0;
        CREATESERVICEACCOUNTKEYREQUEST_KEYALGORITHM_KEY_ALG_RSA_1024 = 1;
        CREATESERVICEACCOUNTKEYREQUEST_KEYALGORITHM_KEY_ALG_RSA_2048 = 2;
    }
    CreateServiceAccountKeyRequest_KeyAlgorithm keyAlgorithm = 1;
    // The output format of the private key. `GOOGLE_CREDENTIALS_FILE` is the
    // default output format.
    enum CreateServiceAccountKeyRequest_PrivateKeyType {
        CREATESERVICEACCOUNTKEYREQUEST_PRIVATEKEYTYPE_TYPE_UNSPECIFIED = 0;
        CREATESERVICEACCOUNTKEYREQUEST_PRIVATEKEYTYPE_TYPE_PKCS12_FILE = 1;
        CREATESERVICEACCOUNTKEYREQUEST_PRIVATEKEYTYPE_TYPE_GOOGLE_CREDENTIALS_FILE = 2;
    }
    CreateServiceAccountKeyRequest_PrivateKeyType privateKeyType = 2;
}

message CreateServiceAccountRequest {
    // Required. The account id that is used to generate the service account
    // email address and a stable unique id. It is unique within a project,
    // must be 6-30 characters long, and match the regular expression
    // `[a-z]([-a-z0-9]*[a-z0-9])` to comply with RFC1035.
    string accountId = 1;
    // The ServiceAccount resource to create.
    // Currently, only the following values are user assignable:
    // `display_name` .
    ServiceAccount serviceAccount = 2;
}

message Empty {
}

message Expr {
    // An optional description of the expression. This is a longer text which
    // describes the expression, e.g. when hovered over it in a UI.
    string description = 1;
    // Textual representation of an expression in
    // Common Expression Language syntax.
    // 
    // The application context of the containing message determines which
    // well-known feature set of CEL is supported.
    string expression = 2;
    // An optional string indicating the location of the expression for error
    // reporting, e.g. a file name and a position in the file.
    string location = 3;
    // An optional title for the expression, i.e. a short string describing
    // its purpose. This can be used e.g. in UIs which allow to enter the
    // expression.
    string title = 4;
}

message ListRolesResponse {
    // To retrieve the next page of results, set
    // `ListRolesRequest.page_token` to this value.
    string nextPageToken = 1;
    // The Roles defined on this resource.
    repeated Role roles = 2;
}

message ListServiceAccountKeysResponse {
    // The public keys for the service account.
    repeated ServiceAccountKey keys = 1;
}

message ListServiceAccountsResponse {
    // The list of matching service accounts.
    repeated ServiceAccount accounts = 1;
    // To retrieve the next page of results, set
    // ListServiceAccountsRequest.page_token
    // to this value.
    string nextPageToken = 2;
}

message Permission {
    // The current custom role support level.
    enum Permission_CustomRolesSupportLevel {
        PERMISSION_CUSTOMROLESSUPPORTLEVEL_SUPPORTED = 0;
        PERMISSION_CUSTOMROLESSUPPORTLEVEL_TESTING = 1;
        PERMISSION_CUSTOMROLESSUPPORTLEVEL_NOT_SUPPORTED = 2;
    }
    Permission_CustomRolesSupportLevel customRolesSupportLevel = 1;
    // A brief description of what this Permission is used for.
    string description = 2;
    // The name of this Permission.
    string name = 3;
    // This permission can ONLY be used in predefined roles.
    bool onlyInPredefinedRoles = 4;
    // The current launch stage of the permission.
    enum Permission_Stage {
        PERMISSION_STAGE_ALPHA = 0;
        PERMISSION_STAGE_BETA = 1;
        PERMISSION_STAGE_GA = 2;
        PERMISSION_STAGE_DEPRECATED = 3;
    }
    Permission_Stage stage = 5;
    // The title of this Permission.
    string title = 6;
}

message Policy {
    // Associates a list of `members` to a `role`.
    // `bindings` with no members will result in an error.
    repeated Binding bindings = 1;
    // `etag` is used for optimistic concurrency control as a way to help
    // prevent simultaneous updates of a policy from overwriting each other.
    // It is strongly suggested that systems make use of the `etag` in the
    // read-modify-write cycle to perform policy updates in order to avoid race
    // conditions: An `etag` is returned in the response to `getIamPolicy`, and
    // systems are expected to put that etag in the request to `setIamPolicy` to
    // ensure that their change will be applied to the same version of the policy.
    // 
    // If no `etag` is provided in the call to `setIamPolicy`, then the existing
    // policy is overwritten blindly.
    string etag = 2;
    // Version of the `Policy`. The default version is 0.
    int32 version = 3;
}

message PolicyDelta {
    // The delta for Bindings between two policies.
    repeated BindingDelta bindingDeltas = 1;
}

message QueryGrantableRolesRequest {
    // Required. The full resource name to query from the list of grantable roles.
    // 
    // The name follows the Google Cloud Platform resource format.
    // For example, a Cloud Platform project with id `my-project` will be named
    // `//cloudresourcemanager.googleapis.com/projects/my-project`.
    string fullResourceName = 1;
    // Optional limit on the number of roles to include in the response.
    int32 pageSize = 2;
    // Optional pagination token returned in an earlier
    // QueryGrantableRolesResponse.
    string pageToken = 3;
    enum QueryGrantableRolesRequest_View {
        QUERYGRANTABLEROLESREQUEST_VIEW_BASIC = 0;
        QUERYGRANTABLEROLESREQUEST_VIEW_FULL = 1;
    }
    QueryGrantableRolesRequest_View view = 4;
}

message QueryGrantableRolesResponse {
    // To retrieve the next page of results, set
    // `QueryGrantableRolesRequest.page_token` to this value.
    string nextPageToken = 1;
    // The list of matching roles.
    repeated Role roles = 2;
}

message QueryTestablePermissionsRequest {
    // Required. The full resource name to query from the list of testable
    // permissions.
    // 
    // The name follows the Google Cloud Platform resource format.
    // For example, a Cloud Platform project with id `my-project` will be named
    // `//cloudresourcemanager.googleapis.com/projects/my-project`.
    string fullResourceName = 1;
    // Optional limit on the number of permissions to include in the response.
    int32 pageSize = 2;
    // Optional pagination token returned in an earlier
    // QueryTestablePermissionsRequest.
    string pageToken = 3;
}

message QueryTestablePermissionsResponse {
    // To retrieve the next page of results, set
    // `QueryTestableRolesRequest.page_token` to this value.
    string nextPageToken = 1;
    // The Permissions testable on the requested resource.
    repeated Permission permissions = 2;
}

message Role {
    // The current deleted state of the role. This field is read only.
    // It will be ignored in calls to CreateRole and UpdateRole.
    bool deleted = 1;
    // Optional.  A human-readable description for the role.
    string description = 2;
    // Used to perform a consistent read-modify-write.
    string etag = 3;
    // The names of the permissions this role grants when bound in an IAM policy.
    repeated string includedPermissions = 4;
    // The name of the role.
    // 
    // When Role is used in CreateRole, the role name must not be set.
    // 
    // When Role is used in output and other input such as UpdateRole, the role
    // name is the complete path, e.g., roles/logging.viewer for curated roles
    // and organizations/{ORGANIZATION_ID}/roles/logging.viewer for custom roles.
    string name = 5;
    // The current launch stage of the role.
    enum Role_Stage {
        ROLE_STAGE_ALPHA = 0;
        ROLE_STAGE_BETA = 1;
        ROLE_STAGE_GA = 2;
        ROLE_STAGE_DEPRECATED = 3;
        ROLE_STAGE_DISABLED = 4;
        ROLE_STAGE_EAP = 5;
    }
    Role_Stage stage = 6;
    // Optional.  A human-readable title for the role.  Typically this
    // is limited to 100 UTF-8 bytes.
    string title = 7;
}

message ServiceAccount {
    // Optional. A user-specified description of the service account.  Must be
    // fewer than 100 UTF-8 bytes.
    string displayName = 1;
    // @OutputOnly The email address of the service account.
    string email = 2;
    // Used to perform a consistent read-modify-write.
    string etag = 3;
    // The resource name of the service account in the following format:
    // `projects/{PROJECT_ID}/serviceAccounts/{ACCOUNT}`.
    // 
    // Requests using `-` as a wildcard for the `PROJECT_ID` will infer the
    // project from the `account` and the `ACCOUNT` value can be the `email`
    // address or the `unique_id` of the service account.
    // 
    // In responses the resource name will always be in the format
    // `projects/{PROJECT_ID}/serviceAccounts/{ACCOUNT}`.
    string name = 4;
    // @OutputOnly. The OAuth2 client id for the service account.
    // This is used in conjunction with the OAuth2 clientconfig API to make
    // three legged OAuth2 (3LO) flows to access the data of Google users.
    string oauth2ClientId = 5;
    // @OutputOnly The id of the project that owns the service account.
    string projectId = 6;
    // @OutputOnly The unique and stable id of the service account.
    string uniqueId = 7;
}

message ServiceAccountKey {
    // Specifies the algorithm (and possibly key size) for the key.
    enum ServiceAccountKey_KeyAlgorithm {
        SERVICEACCOUNTKEY_KEYALGORITHM_KEY_ALG_UNSPECIFIED = 0;
        SERVICEACCOUNTKEY_KEYALGORITHM_KEY_ALG_RSA_1024 = 1;
        SERVICEACCOUNTKEY_KEYALGORITHM_KEY_ALG_RSA_2048 = 2;
    }
    ServiceAccountKey_KeyAlgorithm keyAlgorithm = 1;
    // The resource name of the service account key in the following format
    // `projects/{PROJECT_ID}/serviceAccounts/{ACCOUNT}/keys/{key}`.
    string name = 2;
    // The private key data. Only provided in `CreateServiceAccountKey`
    // responses. Make sure to keep the private key data secure because it
    // allows for the assertion of the service account identity.
    // When decoded, the private key data can be used to authenticate with
    // Google API client libraries and with
    // <a href="/sdk/gcloud/reference/auth/activate-service-account">gcloud
    // auth activate-service-account</a>.
    string privateKeyData = 3;
    // The output format for the private key.
    // Only provided in `CreateServiceAccountKey` responses, not
    // in `GetServiceAccountKey` or `ListServiceAccountKey` responses.
    // 
    // Google never exposes system-managed private keys, and never retains
    // user-managed private keys.
    enum ServiceAccountKey_PrivateKeyType {
        SERVICEACCOUNTKEY_PRIVATEKEYTYPE_TYPE_UNSPECIFIED = 0;
        SERVICEACCOUNTKEY_PRIVATEKEYTYPE_TYPE_PKCS12_FILE = 1;
        SERVICEACCOUNTKEY_PRIVATEKEYTYPE_TYPE_GOOGLE_CREDENTIALS_FILE = 2;
    }
    ServiceAccountKey_PrivateKeyType privateKeyType = 4;
    // The public key data. Only provided in `GetServiceAccountKey` responses.
    string publicKeyData = 5;
    // The key can be used after this timestamp.
    string validAfterTime = 6;
    // The key can be used before this timestamp.
    string validBeforeTime = 7;
}

message SetIamPolicyRequest {
    // REQUIRED: The complete policy to be applied to the `resource`. The size of
    // the policy is limited to a few 10s of KB. An empty policy is a
    // valid policy but certain Cloud Platform services (such as Projects)
    // might reject them.
    Policy policy = 1;
}

message SignBlobRequest {
    // The bytes to sign.
    string bytesToSign = 1;
}

message SignBlobResponse {
    // The id of the key used to sign the blob.
    string keyId = 1;
    // The signed blob.
    string signature = 2;
}

message SignJwtRequest {
    // The JWT payload to sign, a JSON JWT Claim set.
    string payload = 1;
}

message SignJwtResponse {
    // The id of the key used to sign the JWT.
    string keyId = 1;
    // The signed JWT.
    string signedJwt = 2;
}

message TestIamPermissionsRequest {
    // The set of permissions to check for the `resource`. Permissions with
    // wildcards (such as '*' or 'storage.*') are not allowed. For more
    // information see
    // [IAM Overview](https://cloud.google.com/iam/docs/overview#permissions).
    repeated string permissions = 1;
}

message TestIamPermissionsResponse {
    // A subset of `TestPermissionsRequest.permissions` that the caller is
    // allowed.
    repeated string permissions = 1;
}

message UndeleteRoleRequest {
    // Used to perform a consistent read-modify-write.
    string etag = 1;
}

enum Alt {
    JSON = 0;
    MEDIA = 1;
    PROTO = 2;
}

service GoogleIdentityAndAccessManagement(IAM)Service {
    // Lists the permissions testable on a resource.
    // A permission is testable if it can be tested for an identity on a resource.
    rpc PostV1Permissions:QueryTestablePermissions(PostV1Permissions:QueryTestablePermissionsRequest) returns (QueryTestablePermissionsResponse) {
      option (google.api.http) = {
        post: "//v1/permissions:queryTestablePermissions"
        body: "body"
      };
    }
    // Lists the Roles defined on a resource.
    rpc GetV1Roles(GetV1RolesRequest) returns (ListRolesResponse) {
      option (google.api.http) = {
        get: "//v1/roles"
      };
    }
    // Queries roles that can be granted on a particular resource.
    // A role is grantable if it can be used as the role in a binding for a policy
    // for that resource.
    rpc PostV1Roles:QueryGrantableRoles(PostV1Roles:QueryGrantableRolesRequest) returns (QueryGrantableRolesResponse) {
      option (google.api.http) = {
        post: "//v1/roles:queryGrantableRoles"
        body: "body"
      };
    }
    // Gets a Role definition.
    rpc GetV1Name(GetV1NameRequest) returns (Role) {
      option (google.api.http) = {
        get: "//v1/{name}"
      };
    }
    // Updates a ServiceAccount.
    // 
    // Currently, only the following fields are updatable:
    // `display_name` .
    // The `etag` is mandatory.
    rpc PutV1Name(PutV1NameRequest) returns (ServiceAccount) {
      option (google.api.http) = {
        put: "//v1/{name}"
        body: "body"
      };
    }
    // Deletes a ServiceAccountKey.
    rpc DeleteV1Name(DeleteV1NameRequest) returns (Empty) {
      option (google.api.http) = {
        delete: "//v1/{name}"
      };
    }
    // Lists ServiceAccountKeys.
    rpc GetV1NameKeys(GetV1NameKeysRequest) returns (ListServiceAccountKeysResponse) {
      option (google.api.http) = {
        get: "//v1/{name}/keys"
      };
    }
    // Creates a ServiceAccountKey
    // and returns it.
    rpc PostV1NameKeys(PostV1NameKeysRequest) returns (ServiceAccountKey) {
      option (google.api.http) = {
        post: "//v1/{name}/keys"
        body: "body"
      };
    }
    // Lists ServiceAccounts for a project.
    rpc GetV1NameServiceAccounts(GetV1NameServiceAccountsRequest) returns (ListServiceAccountsResponse) {
      option (google.api.http) = {
        get: "//v1/{name}/serviceAccounts"
      };
    }
    // Creates a ServiceAccount
    // and returns it.
    rpc PostV1NameServiceAccounts(PostV1NameServiceAccountsRequest) returns (ServiceAccount) {
      option (google.api.http) = {
        post: "//v1/{name}/serviceAccounts"
        body: "body"
      };
    }
    // Signs a blob using a service account's system-managed private key.
    rpc PostV1Name:SignBlob(PostV1Name:SignBlobRequest) returns (SignBlobResponse) {
      option (google.api.http) = {
        post: "//v1/{name}:signBlob"
        body: "body"
      };
    }
    // Signs a JWT using a service account's system-managed private key.
    // 
    // If no expiry time (`exp`) is provided in the `SignJwtRequest`, IAM sets an
    // an expiry time of one hour by default. If you request an expiry time of
    // more than one hour, the request will fail.
    rpc PostV1Name:SignJwt(PostV1Name:SignJwtRequest) returns (SignJwtResponse) {
      option (google.api.http) = {
        post: "//v1/{name}:signJwt"
        body: "body"
      };
    }
    // Undelete a Role, bringing it back in its previous state.
    rpc PostV1Name:Undelete(PostV1Name:UndeleteRequest) returns (Role) {
      option (google.api.http) = {
        post: "//v1/{name}:undelete"
        body: "body"
      };
    }
    // Lists the Roles defined on a resource.
    rpc GetV1ParentRoles(GetV1ParentRolesRequest) returns (ListRolesResponse) {
      option (google.api.http) = {
        get: "//v1/{parent}/roles"
      };
    }
    // Creates a new Role.
    rpc PostV1ParentRoles(PostV1ParentRolesRequest) returns (Role) {
      option (google.api.http) = {
        post: "//v1/{parent}/roles"
        body: "body"
      };
    }
    // Returns the IAM access control policy for a
    // ServiceAccount.
    rpc PostV1Resource:GetIamPolicy(PostV1Resource:GetIamPolicyRequest) returns (Policy) {
      option (google.api.http) = {
        post: "//v1/{resource}:getIamPolicy"
      };
    }
    // Sets the IAM access control policy for a
    // ServiceAccount.
    rpc PostV1Resource:SetIamPolicy(PostV1Resource:SetIamPolicyRequest) returns (Policy) {
      option (google.api.http) = {
        post: "//v1/{resource}:setIamPolicy"
        body: "body"
      };
    }
    // Tests the specified permissions against the IAM access control policy
    // for a ServiceAccount.
    rpc PostV1Resource:TestIamPermissions(PostV1Resource:TestIamPermissionsRequest) returns (TestIamPermissionsResponse) {
      option (google.api.http) = {
        post: "//v1/{resource}:testIamPermissions"
        body: "body"
      };
    }
}
