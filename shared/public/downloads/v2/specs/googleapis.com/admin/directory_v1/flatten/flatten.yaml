basePath: /admin/directory/v1
definitions.Alias.description: JSON template for Alias object in Directory API.
definitions.Alias.properties.alias.description: A alias email
definitions.Alias.properties.alias.type: string
definitions.Alias.properties.etag.description: ETag of the resource.
definitions.Alias.properties.etag.type: string
definitions.Alias.properties.id.description: Unique id of the group (Read-only) Unique
  id of the user (Read-only)
definitions.Alias.properties.id.type: string
definitions.Alias.properties.kind.default: admin#directory#alias
definitions.Alias.properties.kind.description: Kind of resource this is.
definitions.Alias.properties.kind.type: string
definitions.Alias.properties.primaryEmail.description: Group's primary email (Read-only)
  User's primary email (Read-only)
definitions.Alias.properties.primaryEmail.type: string
definitions.Alias.type: object
definitions.Aliases.description: JSON response template to list aliases in Directory
  API.
definitions.Aliases.properties.aliases.description: List of alias objects.
definitions.Aliases.properties.aliases.type: array
definitions.Aliases.properties.etag.description: ETag of the resource.
definitions.Aliases.properties.etag.type: string
definitions.Aliases.properties.kind.default: admin#directory#aliases
definitions.Aliases.properties.kind.description: Kind of resource this is.
definitions.Aliases.properties.kind.type: string
definitions.Aliases.type: object
definitions.Asp.description: The template that returns individual ASP (Access Code)
  data.
definitions.Asp.properties.codeId.description: The unique ID of the ASP.
definitions.Asp.properties.codeId.format: int32
definitions.Asp.properties.codeId.type: integer
definitions.Asp.properties.creationTime.description: The time when the ASP was created.
  Expressed in Unix time format.
definitions.Asp.properties.creationTime.format: int64
definitions.Asp.properties.creationTime.type: string
definitions.Asp.properties.etag.description: ETag of the ASP.
definitions.Asp.properties.etag.type: string
definitions.Asp.properties.kind.default: admin#directory#asp
definitions.Asp.properties.kind.description: The type of the API resource. This is
  always admin#directory#asp.
definitions.Asp.properties.kind.type: string
definitions.Asp.properties.lastTimeUsed.description: The time when the ASP was last
  used. Expressed in Unix time format.
definitions.Asp.properties.lastTimeUsed.format: int64
definitions.Asp.properties.lastTimeUsed.type: string
definitions.Asp.properties.name.description: The name of the application that the
  user, represented by their userId, entered when the ASP was created.
definitions.Asp.properties.name.type: string
definitions.Asp.properties.userKey.description: The unique ID of the user who issued
  the ASP.
definitions.Asp.properties.userKey.type: string
definitions.Asp.type: object
definitions.Asps.properties.etag.description: ETag of the resource.
definitions.Asps.properties.etag.type: string
definitions.Asps.properties.items.description: A list of ASP resources.
definitions.Asps.properties.items.items.$ref: '#/definitions/Asp'
definitions.Asps.properties.items.type: array
definitions.Asps.properties.kind.default: admin#directory#aspList
definitions.Asps.properties.kind.description: The type of the API resource. This is
  always admin#directory#aspList.
definitions.Asps.properties.kind.type: string
definitions.Asps.type: object
definitions.CalendarResource.description: JSON template for Calendar Resource object
  in Directory API.
definitions.CalendarResource.properties.etags.description: ETag of the resource.
definitions.CalendarResource.properties.etags.type: string
definitions.CalendarResource.properties.generatedResourceName.description: The auto-generated
  name of the calendar resource which includes metadata about the resource such as
  building name, floor, capacity, etc. For example, NYC-2-Training Room 1A (16)
definitions.CalendarResource.properties.generatedResourceName.type: string
definitions.CalendarResource.properties.kind.default: admin#directory#resources#calendars#CalendarResource
definitions.CalendarResource.properties.kind.description: The type of the resource.
  For calendar resources, the value is admin#directory#resources#calendars#CalendarResource.
definitions.CalendarResource.properties.kind.type: string
definitions.CalendarResource.properties.resourceDescription.description: The brief
  description of the calendar resource.
definitions.CalendarResource.properties.resourceDescription.type: string
definitions.CalendarResource.properties.resourceEmail.description: The read-only email
  ID for the calendar resource. Generated as part of creating a new calendar resource.
definitions.CalendarResource.properties.resourceEmail.type: string
definitions.CalendarResource.properties.resourceId.description: The unique ID for
  the calendar resource.
definitions.CalendarResource.properties.resourceId.type: string
definitions.CalendarResource.properties.resourceName.description: The name of the
  calendar resource. For example, Training Room 1A
definitions.CalendarResource.properties.resourceName.type: string
definitions.CalendarResource.properties.resourceType.description: The type of the
  calendar resource. Used for grouping resources in the calendar user interface.
definitions.CalendarResource.properties.resourceType.type: string
definitions.CalendarResource.type: object
definitions.CalendarResources.description: JSON template for Calendar Resource List
  Response object in Directory API.
definitions.CalendarResources.properties.etag.description: ETag of the resource.
definitions.CalendarResources.properties.etag.type: string
definitions.CalendarResources.properties.items.description: The CalendarResources
  in this page of results.
definitions.CalendarResources.properties.items.items.$ref: '#/definitions/CalendarResource'
definitions.CalendarResources.properties.items.type: array
definitions.CalendarResources.properties.kind.default: admin#directory#resources#calendars#calendarResourcesList
definitions.CalendarResources.properties.kind.description: Identifies this as a collection
  of CalendarResources. This is always admin#directory#resources#calendars#calendarResourcesList.
definitions.CalendarResources.properties.kind.type: string
definitions.CalendarResources.properties.nextPageToken.description: The continuation
  token, used to page through large result sets. Provide this value in a subsequent
  request to return the next page of results.
definitions.CalendarResources.properties.nextPageToken.type: string
definitions.CalendarResources.type: object
definitions.Channel.description: An notification channel used to watch for resource
  changes.
definitions.Channel.properties.address.description: The address where notifications
  are delivered for this channel.
definitions.Channel.properties.address.type: string
definitions.Channel.properties.expiration.description: Date and time of notification
  channel expiration, expressed as a Unix timestamp, in milliseconds. Optional.
definitions.Channel.properties.expiration.format: int64
definitions.Channel.properties.expiration.type: string
definitions.Channel.properties.id.description: A UUID or similar unique string that
  identifies this channel.
definitions.Channel.properties.id.type: string
definitions.Channel.properties.kind.default: api#channel
definitions.Channel.properties.kind.description: 'Identifies this as a notification
  channel used to watch for changes to a resource. Value: the fixed string "api#channel".'
definitions.Channel.properties.kind.type: string
definitions.Channel.properties.params.additionalProperties.description: Declares a
  new parameter by name.
definitions.Channel.properties.params.additionalProperties.type: string
definitions.Channel.properties.params.description: Additional parameters controlling
  delivery channel behavior. Optional.
definitions.Channel.properties.params.type: object
definitions.Channel.properties.payload.description: A Boolean value to indicate whether
  payload is wanted. Optional.
definitions.Channel.properties.payload.type: boolean
definitions.Channel.properties.resourceId.description: An opaque ID that identifies
  the resource being watched on this channel. Stable across different API versions.
definitions.Channel.properties.resourceId.type: string
definitions.Channel.properties.resourceUri.description: A version-specific identifier
  for the watched resource.
definitions.Channel.properties.resourceUri.type: string
definitions.Channel.properties.token.description: An arbitrary string delivered to
  the target address with each notification delivered over this channel. Optional.
definitions.Channel.properties.token.type: string
definitions.Channel.properties.type.description: The type of delivery mechanism used
  for this channel.
definitions.Channel.properties.type.type: string
definitions.Channel.type: object
definitions.ChromeOsDevice.description: JSON template for Chrome Os Device resource
  in Directory API.
definitions.ChromeOsDevice.properties.activeTimeRanges.description: List of active
  time ranges (Read-only)
definitions.ChromeOsDevice.properties.activeTimeRanges.items.properties.activeTime.description: Duration
  in milliseconds
definitions.ChromeOsDevice.properties.activeTimeRanges.items.properties.activeTime.format: int32
definitions.ChromeOsDevice.properties.activeTimeRanges.items.properties.activeTime.type: integer
definitions.ChromeOsDevice.properties.activeTimeRanges.items.properties.date.description: Date
  of usage
definitions.ChromeOsDevice.properties.activeTimeRanges.items.properties.date.format: date
definitions.ChromeOsDevice.properties.activeTimeRanges.items.properties.date.type: string
definitions.ChromeOsDevice.properties.activeTimeRanges.items.type: object
definitions.ChromeOsDevice.properties.activeTimeRanges.type: array
definitions.ChromeOsDevice.properties.annotatedAssetId.description: AssetId specified
  during enrollment or through later annotation
definitions.ChromeOsDevice.properties.annotatedAssetId.type: string
definitions.ChromeOsDevice.properties.annotatedLocation.description: Address or location
  of the device as noted by the administrator
definitions.ChromeOsDevice.properties.annotatedLocation.type: string
definitions.ChromeOsDevice.properties.annotatedUser.description: User of the device
definitions.ChromeOsDevice.properties.annotatedUser.type: string
definitions.ChromeOsDevice.properties.bootMode.description: Chromebook boot mode (Read-only)
definitions.ChromeOsDevice.properties.bootMode.type: string
definitions.ChromeOsDevice.properties.deviceId.description: Unique identifier of Chrome
  OS Device (Read-only)
definitions.ChromeOsDevice.properties.deviceId.type: string
definitions.ChromeOsDevice.properties.etag.description: ETag of the resource.
definitions.ChromeOsDevice.properties.etag.type: string
definitions.ChromeOsDevice.properties.ethernetMacAddress.description: Chromebook Mac
  Address on ethernet network interface (Read-only)
definitions.ChromeOsDevice.properties.ethernetMacAddress.type: string
definitions.ChromeOsDevice.properties.firmwareVersion.description: Chromebook firmware
  version (Read-only)
definitions.ChromeOsDevice.properties.firmwareVersion.type: string
definitions.ChromeOsDevice.properties.kind.default: admin#directory#chromeosdevice
definitions.ChromeOsDevice.properties.kind.description: Kind of resource this is.
definitions.ChromeOsDevice.properties.kind.type: string
definitions.ChromeOsDevice.properties.lastEnrollmentTime.description: Date and time
  the device was last enrolled (Read-only)
definitions.ChromeOsDevice.properties.lastEnrollmentTime.format: date-time
definitions.ChromeOsDevice.properties.lastEnrollmentTime.type: string
definitions.ChromeOsDevice.properties.lastSync.description: Date and time the device
  was last synchronized with the policy settings in the G Suite administrator control
  panel (Read-only)
definitions.ChromeOsDevice.properties.lastSync.format: date-time
definitions.ChromeOsDevice.properties.lastSync.type: string
definitions.ChromeOsDevice.properties.macAddress.description: Chromebook Mac Address
  on wifi network interface (Read-only)
definitions.ChromeOsDevice.properties.macAddress.type: string
definitions.ChromeOsDevice.properties.meid.description: Mobile Equipment identifier
  for the 3G mobile card in the Chromebook (Read-only)
definitions.ChromeOsDevice.properties.meid.type: string
definitions.ChromeOsDevice.properties.model.description: Chromebook Model (Read-only)
definitions.ChromeOsDevice.properties.model.type: string
definitions.ChromeOsDevice.properties.notes.description: Notes added by the administrator
definitions.ChromeOsDevice.properties.notes.type: string
definitions.ChromeOsDevice.properties.orderNumber.description: Chromebook order number
  (Read-only)
definitions.ChromeOsDevice.properties.orderNumber.type: string
definitions.ChromeOsDevice.properties.orgUnitPath.description: OrgUnit of the device
definitions.ChromeOsDevice.properties.orgUnitPath.type: string
definitions.ChromeOsDevice.properties.osVersion.description: Chromebook Os Version
  (Read-only)
definitions.ChromeOsDevice.properties.osVersion.type: string
definitions.ChromeOsDevice.properties.platformVersion.description: Chromebook platform
  version (Read-only)
definitions.ChromeOsDevice.properties.platformVersion.type: string
definitions.ChromeOsDevice.properties.recentUsers.description: List of recent device
  users, in descending order by last login time (Read-only)
definitions.ChromeOsDevice.properties.recentUsers.items.properties.email.description: Email
  address of the user. Present only if the user type is managed
definitions.ChromeOsDevice.properties.recentUsers.items.properties.email.type: string
definitions.ChromeOsDevice.properties.recentUsers.items.properties.type.description: The
  type of the user
definitions.ChromeOsDevice.properties.recentUsers.items.properties.type.type: string
definitions.ChromeOsDevice.properties.recentUsers.items.type: object
definitions.ChromeOsDevice.properties.recentUsers.type: array
definitions.ChromeOsDevice.properties.serialNumber.description: Chromebook serial
  number (Read-only)
definitions.ChromeOsDevice.properties.serialNumber.type: string
definitions.ChromeOsDevice.properties.status.description: status of the device (Read-only)
definitions.ChromeOsDevice.properties.status.type: string
definitions.ChromeOsDevice.properties.supportEndDate.description: Final date the device
  will be supported (Read-only)
definitions.ChromeOsDevice.properties.supportEndDate.format: date-time
definitions.ChromeOsDevice.properties.supportEndDate.type: string
definitions.ChromeOsDevice.properties.willAutoRenew.description: Will Chromebook auto
  renew after support end date (Read-only)
definitions.ChromeOsDevice.properties.willAutoRenew.type: boolean
definitions.ChromeOsDevice.type: object
definitions.ChromeOsDeviceAction.description: JSON request template for firing actions
  on ChromeOs Device in Directory Devices API.
definitions.ChromeOsDeviceAction.properties.action.description: Action to be taken
  on the ChromeOs Device
definitions.ChromeOsDeviceAction.properties.action.type: string
definitions.ChromeOsDeviceAction.properties.deprovisionReason.type: string
definitions.ChromeOsDeviceAction.type: object
definitions.ChromeOsDevices.description: JSON response template for List Chrome OS
  Devices operation in Directory API.
definitions.ChromeOsDevices.properties.chromeosdevices.description: List of Chrome
  OS Device objects.
definitions.ChromeOsDevices.properties.chromeosdevices.items.$ref: '#/definitions/ChromeOsDevice'
definitions.ChromeOsDevices.properties.chromeosdevices.type: array
definitions.ChromeOsDevices.properties.etag.description: ETag of the resource.
definitions.ChromeOsDevices.properties.etag.type: string
definitions.ChromeOsDevices.properties.kind.default: admin#directory#chromeosdevices
definitions.ChromeOsDevices.properties.kind.description: Kind of resource this is.
definitions.ChromeOsDevices.properties.kind.type: string
definitions.ChromeOsDevices.properties.nextPageToken.description: Token used to access
  next page of this result.
definitions.ChromeOsDevices.properties.nextPageToken.type: string
definitions.ChromeOsDevices.type: object
definitions.ChromeOsMoveDevicesToOu.description: JSON request template for moving
  ChromeOs Device to given OU in Directory Devices API.
definitions.ChromeOsMoveDevicesToOu.properties.deviceIds.description: ChromeOs Devices
  to be moved to OU
definitions.ChromeOsMoveDevicesToOu.properties.deviceIds.items.type: string
definitions.ChromeOsMoveDevicesToOu.properties.deviceIds.type: array
definitions.ChromeOsMoveDevicesToOu.type: object
definitions.Customer.description: JSON template for Customer Resource object in Directory
  API.
definitions.Customer.properties.alternateEmail.description: The customer's secondary
  contact email address. This email address cannot be on the same domain as the customerDomain
definitions.Customer.properties.alternateEmail.type: string
definitions.Customer.properties.customerCreationTime.description: The customer's creation
  time (Readonly)
definitions.Customer.properties.customerCreationTime.format: date-time
definitions.Customer.properties.customerCreationTime.type: string
definitions.Customer.properties.customerDomain.description: The customer's primary
  domain name string. Do not include the www prefix when creating a new customer.
definitions.Customer.properties.customerDomain.type: string
definitions.Customer.properties.etag.description: ETag of the resource.
definitions.Customer.properties.etag.type: string
definitions.Customer.properties.id.description: The unique ID for the customer's G
  Suite account. (Readonly)
definitions.Customer.properties.id.type: string
definitions.Customer.properties.kind.default: admin#directory#customer
definitions.Customer.properties.kind.description: 'Identifies the resource as a customer.
  Value: admin#directory#customer'
definitions.Customer.properties.kind.type: string
definitions.Customer.properties.language.description: The customer's ISO 639-2 language
  code. The default value is en-US
definitions.Customer.properties.language.type: string
definitions.Customer.properties.phoneNumber.description: The customer's contact phone
  number in E.164 format.
definitions.Customer.properties.phoneNumber.type: string
definitions.Customer.properties.postalAddress.$ref: '#/definitions/CustomerPostalAddress'
definitions.Customer.properties.postalAddress.description: The customer's postal address
  information.
definitions.Customer.type: object
definitions.CustomerPostalAddress.description: JSON template for postal address of
  a customer.
definitions.CustomerPostalAddress.properties.addressLine1.description: A customer's
  physical address. The address can be composed of one to three lines.
definitions.CustomerPostalAddress.properties.addressLine1.type: string
definitions.CustomerPostalAddress.properties.addressLine2.description: Address line
  2 of the address.
definitions.CustomerPostalAddress.properties.addressLine2.type: string
definitions.CustomerPostalAddress.properties.addressLine3.description: Address line
  3 of the address.
definitions.CustomerPostalAddress.properties.addressLine3.type: string
definitions.CustomerPostalAddress.properties.contactName.description: The customer
  contact's name.
definitions.CustomerPostalAddress.properties.contactName.type: string
definitions.CustomerPostalAddress.properties.countryCode.description: This is a required
  property. For countryCode information see the ISO 3166 country code elements.
definitions.CustomerPostalAddress.properties.countryCode.type: string
definitions.CustomerPostalAddress.properties.locality.description: Name of the locality.
  An example of a locality value is the city of San Francisco.
definitions.CustomerPostalAddress.properties.locality.type: string
definitions.CustomerPostalAddress.properties.organizationName.description: The company
  or company division name.
definitions.CustomerPostalAddress.properties.organizationName.type: string
definitions.CustomerPostalAddress.properties.postalCode.description: The postal code.
  A postalCode example is a postal zip code such as 10009. This is in accordance with
  - http://portablecontacts.net/draft-spec.html#address_element.
definitions.CustomerPostalAddress.properties.postalCode.type: string
definitions.CustomerPostalAddress.properties.region.description: Name of the region.
  An example of a region value is NY for the state of New York.
definitions.CustomerPostalAddress.properties.region.type: string
definitions.CustomerPostalAddress.type: object
definitions.DomainAlias.description: JSON template for Domain Alias object in Directory
  API.
definitions.DomainAlias.properties.creationTime.description: The creation time of
  the domain alias. (Read-only).
definitions.DomainAlias.properties.creationTime.format: int64
definitions.DomainAlias.properties.creationTime.type: string
definitions.DomainAlias.properties.domainAliasName.description: The domain alias name.
definitions.DomainAlias.properties.domainAliasName.type: string
definitions.DomainAlias.properties.etag.description: ETag of the resource.
definitions.DomainAlias.properties.etag.type: string
definitions.DomainAlias.properties.kind.default: admin#directory#domainAlias
definitions.DomainAlias.properties.kind.description: Kind of resource this is.
definitions.DomainAlias.properties.kind.type: string
definitions.DomainAlias.properties.parentDomainName.description: The parent domain
  name that the domain alias is associated with. This can either be a primary or secondary
  domain name within a customer.
definitions.DomainAlias.properties.parentDomainName.type: string
definitions.DomainAlias.properties.verified.description: Indicates the verification
  state of a domain alias. (Read-only)
definitions.DomainAlias.properties.verified.type: boolean
definitions.DomainAlias.type: object
definitions.DomainAliases.description: JSON response template to list domain aliases
  in Directory API.
definitions.DomainAliases.properties.domainAliases.description: List of domain alias
  objects.
definitions.DomainAliases.properties.domainAliases.items.$ref: '#/definitions/DomainAlias'
definitions.DomainAliases.properties.domainAliases.type: array
definitions.DomainAliases.properties.etag.description: ETag of the resource.
definitions.DomainAliases.properties.etag.type: string
definitions.DomainAliases.properties.kind.default: admin#directory#domainAliases
definitions.DomainAliases.properties.kind.description: Kind of resource this is.
definitions.DomainAliases.properties.kind.type: string
definitions.DomainAliases.type: object
definitions.Domains.description: JSON template for Domain object in Directory API.
definitions.Domains.properties.creationTime.description: Creation time of the domain.
  (Read-only).
definitions.Domains.properties.creationTime.format: int64
definitions.Domains.properties.creationTime.type: string
definitions.Domains.properties.domainAliases.description: List of domain alias objects.
  (Read-only)
definitions.Domains.properties.domainAliases.items.$ref: '#/definitions/DomainAlias'
definitions.Domains.properties.domainAliases.type: array
definitions.Domains.properties.domainName.description: The domain name of the customer.
definitions.Domains.properties.domainName.type: string
definitions.Domains.properties.etag.description: ETag of the resource.
definitions.Domains.properties.etag.type: string
definitions.Domains.properties.isPrimary.description: Indicates if the domain is a
  primary domain (Read-only).
definitions.Domains.properties.isPrimary.type: boolean
definitions.Domains.properties.kind.default: admin#directory#domain
definitions.Domains.properties.kind.description: Kind of resource this is.
definitions.Domains.properties.kind.type: string
definitions.Domains.properties.verified.description: Indicates the verification state
  of a domain. (Read-only).
definitions.Domains.properties.verified.type: boolean
definitions.Domains.type: object
definitions.Domains2.description: JSON response template to list Domains in Directory
  API.
definitions.Domains2.properties.domains.description: List of domain objects.
definitions.Domains2.properties.domains.items.$ref: '#/definitions/Domains'
definitions.Domains2.properties.domains.type: array
definitions.Domains2.properties.etag.description: ETag of the resource.
definitions.Domains2.properties.etag.type: string
definitions.Domains2.properties.kind.default: admin#directory#domains
definitions.Domains2.properties.kind.description: Kind of resource this is.
definitions.Domains2.properties.kind.type: string
definitions.Domains2.type: object
definitions.Group.description: JSON template for Group resource in Directory API.
definitions.Group.properties.adminCreated.description: Is the group created by admin
  (Read-only) *
definitions.Group.properties.adminCreated.type: boolean
definitions.Group.properties.aliases.description: List of aliases (Read-only)
definitions.Group.properties.aliases.items.type: string
definitions.Group.properties.aliases.type: array
definitions.Group.properties.description.description: Description of the group
definitions.Group.properties.description.type: string
definitions.Group.properties.directMembersCount.description: Group direct members
  count
definitions.Group.properties.directMembersCount.format: int64
definitions.Group.properties.directMembersCount.type: string
definitions.Group.properties.email.description: Email of Group
definitions.Group.properties.email.type: string
definitions.Group.properties.etag.description: ETag of the resource.
definitions.Group.properties.etag.type: string
definitions.Group.properties.id.description: Unique identifier of Group (Read-only)
definitions.Group.properties.id.type: string
definitions.Group.properties.kind.default: admin#directory#group
definitions.Group.properties.kind.description: Kind of resource this is.
definitions.Group.properties.kind.type: string
definitions.Group.properties.name.description: Group name
definitions.Group.properties.name.type: string
definitions.Group.properties.nonEditableAliases.description: List of non editable
  aliases (Read-only)
definitions.Group.properties.nonEditableAliases.items.type: string
definitions.Group.properties.nonEditableAliases.type: array
definitions.Group.type: object
definitions.Groups.description: JSON response template for List Groups operation in
  Directory API.
definitions.Groups.properties.etag.description: ETag of the resource.
definitions.Groups.properties.etag.type: string
definitions.Groups.properties.groups.description: List of group objects.
definitions.Groups.properties.groups.items.$ref: '#/definitions/Group'
definitions.Groups.properties.groups.type: array
definitions.Groups.properties.kind.default: admin#directory#groups
definitions.Groups.properties.kind.description: Kind of resource this is.
definitions.Groups.properties.kind.type: string
definitions.Groups.properties.nextPageToken.description: Token used to access next
  page of this result.
definitions.Groups.properties.nextPageToken.type: string
definitions.Groups.type: object
definitions.Member.description: JSON template for Member resource in Directory API.
definitions.Member.properties.email.description: Email of member (Read-only)
definitions.Member.properties.email.type: string
definitions.Member.properties.etag.description: ETag of the resource.
definitions.Member.properties.etag.type: string
definitions.Member.properties.id.description: Unique identifier of customer member
  (Read-only) Unique identifier of group (Read-only) Unique identifier of member (Read-only)
definitions.Member.properties.id.type: string
definitions.Member.properties.kind.default: admin#directory#member
definitions.Member.properties.kind.description: Kind of resource this is.
definitions.Member.properties.kind.type: string
definitions.Member.properties.role.description: Role of member
definitions.Member.properties.role.type: string
definitions.Member.properties.status.description: Status of member (Immutable)
definitions.Member.properties.status.type: string
definitions.Member.properties.type.description: Type of member (Immutable)
definitions.Member.properties.type.type: string
definitions.Member.type: object
definitions.Members.description: JSON response template for List Members operation
  in Directory API.
definitions.Members.properties.etag.description: ETag of the resource.
definitions.Members.properties.etag.type: string
definitions.Members.properties.kind.default: admin#directory#members
definitions.Members.properties.kind.description: Kind of resource this is.
definitions.Members.properties.kind.type: string
definitions.Members.properties.members.description: List of member objects.
definitions.Members.properties.members.items.$ref: '#/definitions/Member'
definitions.Members.properties.members.type: array
definitions.Members.properties.nextPageToken.description: Token used to access next
  page of this result.
definitions.Members.properties.nextPageToken.type: string
definitions.Members.type: object
definitions.MobileDevice.description: JSON template for Mobile Device resource in
  Directory API.
definitions.MobileDevice.properties.adbStatus.description: Adb (USB debugging) enabled
  or disabled on device (Read-only)
definitions.MobileDevice.properties.adbStatus.type: boolean
definitions.MobileDevice.properties.applications.description: List of applications
  installed on Mobile Device
definitions.MobileDevice.properties.applications.items.properties.displayName.description: Display
  name of application
definitions.MobileDevice.properties.applications.items.properties.displayName.type: string
definitions.MobileDevice.properties.applications.items.properties.packageName.description: Package
  name of application
definitions.MobileDevice.properties.applications.items.properties.packageName.type: string
definitions.MobileDevice.properties.applications.items.properties.permission.description: List
  of Permissions for application
definitions.MobileDevice.properties.applications.items.properties.permission.items.type: string
definitions.MobileDevice.properties.applications.items.properties.permission.type: array
definitions.MobileDevice.properties.applications.items.properties.versionCode.description: Version
  code of application
definitions.MobileDevice.properties.applications.items.properties.versionCode.format: int32
definitions.MobileDevice.properties.applications.items.properties.versionCode.type: integer
definitions.MobileDevice.properties.applications.items.properties.versionName.description: Version
  name of application
definitions.MobileDevice.properties.applications.items.properties.versionName.type: string
definitions.MobileDevice.properties.applications.items.type: object
definitions.MobileDevice.properties.applications.type: array
definitions.MobileDevice.properties.basebandVersion.description: Mobile Device Baseband
  version (Read-only)
definitions.MobileDevice.properties.basebandVersion.type: string
definitions.MobileDevice.properties.bootloaderVersion.description: Mobile Device Bootloader
  version (Read-only)
definitions.MobileDevice.properties.bootloaderVersion.type: string
definitions.MobileDevice.properties.brand.description: Mobile Device Brand (Read-only)
definitions.MobileDevice.properties.brand.type: string
definitions.MobileDevice.properties.buildNumber.description: Mobile Device Build number
  (Read-only)
definitions.MobileDevice.properties.buildNumber.type: string
definitions.MobileDevice.properties.defaultLanguage.description: The default locale
  used on the Mobile Device (Read-only)
definitions.MobileDevice.properties.defaultLanguage.type: string
definitions.MobileDevice.properties.developerOptionsStatus.description: Developer
  options enabled or disabled on device (Read-only)
definitions.MobileDevice.properties.developerOptionsStatus.type: boolean
definitions.MobileDevice.properties.deviceCompromisedStatus.description: Mobile Device
  compromised status (Read-only)
definitions.MobileDevice.properties.deviceCompromisedStatus.type: string
definitions.MobileDevice.properties.deviceId.description: Mobile Device serial number
  (Read-only)
definitions.MobileDevice.properties.deviceId.type: string
definitions.MobileDevice.properties.devicePasswordStatus.description: DevicePasswordStatus
  (Read-only)
definitions.MobileDevice.properties.devicePasswordStatus.type: string
definitions.MobileDevice.properties.email.description: List of owner user's email
  addresses (Read-only)
definitions.MobileDevice.properties.email.items.type: string
definitions.MobileDevice.properties.email.type: array
definitions.MobileDevice.properties.encryptionStatus.description: Mobile Device Encryption
  Status (Read-only)
definitions.MobileDevice.properties.encryptionStatus.type: string
definitions.MobileDevice.properties.etag.description: ETag of the resource.
definitions.MobileDevice.properties.etag.type: string
definitions.MobileDevice.properties.firstSync.description: Date and time the device
  was first synchronized with the policy settings in the G Suite administrator control
  panel (Read-only)
definitions.MobileDevice.properties.firstSync.format: date-time
definitions.MobileDevice.properties.firstSync.type: string
definitions.MobileDevice.properties.hardware.description: Mobile Device Hardware (Read-only)
definitions.MobileDevice.properties.hardware.type: string
definitions.MobileDevice.properties.hardwareId.description: Mobile Device Hardware
  Id (Read-only)
definitions.MobileDevice.properties.hardwareId.type: string
definitions.MobileDevice.properties.imei.description: Mobile Device IMEI number (Read-only)
definitions.MobileDevice.properties.imei.type: string
definitions.MobileDevice.properties.kernelVersion.description: Mobile Device Kernel
  version (Read-only)
definitions.MobileDevice.properties.kernelVersion.type: string
definitions.MobileDevice.properties.kind.default: admin#directory#mobiledevice
definitions.MobileDevice.properties.kind.description: Kind of resource this is.
definitions.MobileDevice.properties.kind.type: string
definitions.MobileDevice.properties.lastSync.description: Date and time the device
  was last synchronized with the policy settings in the G Suite administrator control
  panel (Read-only)
definitions.MobileDevice.properties.lastSync.format: date-time
definitions.MobileDevice.properties.lastSync.type: string
definitions.MobileDevice.properties.managedAccountIsOnOwnerProfile.description: Boolean
  indicating if this account is on owner/primary profile or not (Read-only)
definitions.MobileDevice.properties.managedAccountIsOnOwnerProfile.type: boolean
definitions.MobileDevice.properties.manufacturer.description: Mobile Device manufacturer
  (Read-only)
definitions.MobileDevice.properties.manufacturer.type: string
definitions.MobileDevice.properties.meid.description: Mobile Device MEID number (Read-only)
definitions.MobileDevice.properties.meid.type: string
definitions.MobileDevice.properties.model.description: Name of the model of the device
definitions.MobileDevice.properties.model.type: string
definitions.MobileDevice.properties.name.description: List of owner user's names (Read-only)
definitions.MobileDevice.properties.name.items.type: string
definitions.MobileDevice.properties.name.type: array
definitions.MobileDevice.properties.networkOperator.description: Mobile Device mobile
  or network operator (if available) (Read-only)
definitions.MobileDevice.properties.networkOperator.type: string
definitions.MobileDevice.properties.os.description: Name of the mobile operating system
definitions.MobileDevice.properties.os.type: string
definitions.MobileDevice.properties.otherAccountsInfo.description: List of accounts
  added on device (Read-only)
definitions.MobileDevice.properties.otherAccountsInfo.items.type: string
definitions.MobileDevice.properties.otherAccountsInfo.type: array
definitions.MobileDevice.properties.privilege.description: DMAgentPermission (Read-only)
definitions.MobileDevice.properties.privilege.type: string
definitions.MobileDevice.properties.releaseVersion.description: Mobile Device release
  version version (Read-only)
definitions.MobileDevice.properties.releaseVersion.type: string
definitions.MobileDevice.properties.resourceId.description: Unique identifier of Mobile
  Device (Read-only)
definitions.MobileDevice.properties.resourceId.type: string
definitions.MobileDevice.properties.securityPatchLevel.description: Mobile Device
  Security patch level (Read-only)
definitions.MobileDevice.properties.securityPatchLevel.format: int64
definitions.MobileDevice.properties.securityPatchLevel.type: string
definitions.MobileDevice.properties.serialNumber.description: Mobile Device SSN or
  Serial Number (Read-only)
definitions.MobileDevice.properties.serialNumber.type: string
definitions.MobileDevice.properties.status.description: Status of the device (Read-only)
definitions.MobileDevice.properties.status.type: string
definitions.MobileDevice.properties.supportsWorkProfile.description: Work profile
  supported on device (Read-only)
definitions.MobileDevice.properties.supportsWorkProfile.type: boolean
definitions.MobileDevice.properties.type.description: The type of device (Read-only)
definitions.MobileDevice.properties.type.type: string
definitions.MobileDevice.properties.unknownSourcesStatus.description: Unknown sources
  enabled or disabled on device (Read-only)
definitions.MobileDevice.properties.unknownSourcesStatus.type: boolean
definitions.MobileDevice.properties.userAgent.description: Mobile Device user agent
definitions.MobileDevice.properties.userAgent.type: string
definitions.MobileDevice.properties.wifiMacAddress.description: Mobile Device WiFi
  MAC address (Read-only)
definitions.MobileDevice.properties.wifiMacAddress.type: string
definitions.MobileDevice.type: object
definitions.MobileDeviceAction.description: JSON request template for firing commands
  on Mobile Device in Directory Devices API.
definitions.MobileDeviceAction.properties.action.description: Action to be taken on
  the Mobile Device
definitions.MobileDeviceAction.properties.action.type: string
definitions.MobileDeviceAction.type: object
definitions.MobileDevices.description: JSON response template for List Mobile Devices
  operation in Directory API.
definitions.MobileDevices.properties.etag.description: ETag of the resource.
definitions.MobileDevices.properties.etag.type: string
definitions.MobileDevices.properties.kind.default: admin#directory#mobiledevices
definitions.MobileDevices.properties.kind.description: Kind of resource this is.
definitions.MobileDevices.properties.kind.type: string
definitions.MobileDevices.properties.mobiledevices.description: List of Mobile Device
  objects.
definitions.MobileDevices.properties.mobiledevices.items.$ref: '#/definitions/MobileDevice'
definitions.MobileDevices.properties.mobiledevices.type: array
definitions.MobileDevices.properties.nextPageToken.description: Token used to access
  next page of this result.
definitions.MobileDevices.properties.nextPageToken.type: string
definitions.MobileDevices.type: object
definitions.Notification.description: Template for a notification resource.
definitions.Notification.properties.body.description: Body of the notification (Read-only)
definitions.Notification.properties.body.type: string
definitions.Notification.properties.etag.description: ETag of the resource.
definitions.Notification.properties.etag.type: string
definitions.Notification.properties.fromAddress.description: Address from which the
  notification is received (Read-only)
definitions.Notification.properties.fromAddress.type: string
definitions.Notification.properties.isUnread.description: Boolean indicating whether
  the notification is unread or not.
definitions.Notification.properties.isUnread.type: boolean
definitions.Notification.properties.kind.default: admin#directory#notification
definitions.Notification.properties.kind.description: The type of the resource.
definitions.Notification.properties.kind.type: string
definitions.Notification.properties.notificationId.type: string
definitions.Notification.properties.sendTime.description: Time at which notification
  was sent (Read-only)
definitions.Notification.properties.sendTime.format: date-time
definitions.Notification.properties.sendTime.type: string
definitions.Notification.properties.subject.description: Subject of the notification
  (Read-only)
definitions.Notification.properties.subject.type: string
definitions.Notification.type: object
definitions.Notifications.description: Template for notifications list response.
definitions.Notifications.properties.etag.description: ETag of the resource.
definitions.Notifications.properties.etag.type: string
definitions.Notifications.properties.items.description: List of notifications in this
  page.
definitions.Notifications.properties.items.items.$ref: '#/definitions/Notification'
definitions.Notifications.properties.items.type: array
definitions.Notifications.properties.kind.default: admin#directory#notifications
definitions.Notifications.properties.kind.description: The type of the resource.
definitions.Notifications.properties.kind.type: string
definitions.Notifications.properties.nextPageToken.description: Token for fetching
  the next page of notifications.
definitions.Notifications.properties.nextPageToken.type: string
definitions.Notifications.properties.unreadNotificationsCount.description: Number
  of unread notification for the domain.
definitions.Notifications.properties.unreadNotificationsCount.format: int32
definitions.Notifications.properties.unreadNotificationsCount.type: integer
definitions.Notifications.type: object
definitions.OrgUnit.description: JSON template for Org Unit resource in Directory
  API.
definitions.OrgUnit.properties.blockInheritance.description: Should block inheritance
definitions.OrgUnit.properties.blockInheritance.type: boolean
definitions.OrgUnit.properties.description.description: Description of OrgUnit
definitions.OrgUnit.properties.description.type: string
definitions.OrgUnit.properties.etag.description: ETag of the resource.
definitions.OrgUnit.properties.etag.type: string
definitions.OrgUnit.properties.kind.default: admin#directory#orgUnit
definitions.OrgUnit.properties.kind.description: Kind of resource this is.
definitions.OrgUnit.properties.kind.type: string
definitions.OrgUnit.properties.name.description: Name of OrgUnit
definitions.OrgUnit.properties.name.type: string
definitions.OrgUnit.properties.orgUnitId.description: Id of OrgUnit
definitions.OrgUnit.properties.orgUnitId.type: string
definitions.OrgUnit.properties.orgUnitPath.description: Path of OrgUnit
definitions.OrgUnit.properties.orgUnitPath.type: string
definitions.OrgUnit.properties.parentOrgUnitId.description: Id of parent OrgUnit
definitions.OrgUnit.properties.parentOrgUnitId.type: string
definitions.OrgUnit.properties.parentOrgUnitPath.description: Path of parent OrgUnit
definitions.OrgUnit.properties.parentOrgUnitPath.type: string
definitions.OrgUnit.type: object
definitions.OrgUnits.description: JSON response template for List Organization Units
  operation in Directory API.
definitions.OrgUnits.properties.etag.description: ETag of the resource.
definitions.OrgUnits.properties.etag.type: string
definitions.OrgUnits.properties.kind.default: admin#directory#orgUnits
definitions.OrgUnits.properties.kind.description: Kind of resource this is.
definitions.OrgUnits.properties.kind.type: string
definitions.OrgUnits.properties.organizationUnits.description: List of user objects.
definitions.OrgUnits.properties.organizationUnits.items.$ref: '#/definitions/OrgUnit'
definitions.OrgUnits.properties.organizationUnits.type: array
definitions.OrgUnits.type: object
definitions.Privilege.description: JSON template for privilege resource in Directory
  API.
definitions.Privilege.properties.childPrivileges.description: A list of child privileges.
  Privileges for a service form a tree. Each privilege can have a list of child privileges;
  this list is empty for a leaf privilege.
definitions.Privilege.properties.childPrivileges.items.$ref: '#/definitions/Privilege'
definitions.Privilege.properties.childPrivileges.type: array
definitions.Privilege.properties.etag.description: ETag of the resource.
definitions.Privilege.properties.etag.type: string
definitions.Privilege.properties.isOuScopable.description: If the privilege can be
  restricted to an organization unit.
definitions.Privilege.properties.isOuScopable.type: boolean
definitions.Privilege.properties.kind.default: admin#directory#privilege
definitions.Privilege.properties.kind.description: The type of the API resource. This
  is always admin#directory#privilege.
definitions.Privilege.properties.kind.type: string
definitions.Privilege.properties.privilegeName.description: The name of the privilege.
definitions.Privilege.properties.privilegeName.type: string
definitions.Privilege.properties.serviceId.description: The obfuscated ID of the service
  this privilege is for.
definitions.Privilege.properties.serviceId.type: string
definitions.Privilege.properties.serviceName.description: The name of the service
  this privilege is for.
definitions.Privilege.properties.serviceName.type: string
definitions.Privilege.type: object
definitions.Privileges.description: JSON response template for List privileges operation
  in Directory API.
definitions.Privileges.properties.etag.description: ETag of the resource.
definitions.Privileges.properties.etag.type: string
definitions.Privileges.properties.items.description: A list of Privilege resources.
definitions.Privileges.properties.items.items.$ref: '#/definitions/Privilege'
definitions.Privileges.properties.items.type: array
definitions.Privileges.properties.kind.default: admin#directory#privileges
definitions.Privileges.properties.kind.description: The type of the API resource.
  This is always admin#directory#privileges.
definitions.Privileges.properties.kind.type: string
definitions.Privileges.type: object
definitions.Role.description: JSON template for role resource in Directory API.
definitions.Role.properties.etag.description: ETag of the resource.
definitions.Role.properties.etag.type: string
definitions.Role.properties.isSuperAdminRole.description: Returns true if the role
  is a super admin role.
definitions.Role.properties.isSuperAdminRole.type: boolean
definitions.Role.properties.isSystemRole.description: Returns true if this is a pre-defined
  system role.
definitions.Role.properties.isSystemRole.type: boolean
definitions.Role.properties.kind.default: admin#directory#role
definitions.Role.properties.kind.description: The type of the API resource. This is
  always admin#directory#role.
definitions.Role.properties.kind.type: string
definitions.Role.properties.roleDescription.description: A short description of the
  role.
definitions.Role.properties.roleDescription.type: string
definitions.Role.properties.roleId.description: ID of the role.
definitions.Role.properties.roleId.format: int64
definitions.Role.properties.roleId.type: string
definitions.Role.properties.roleName.description: Name of the role.
definitions.Role.properties.roleName.type: string
definitions.Role.properties.rolePrivileges.description: The set of privileges that
  are granted to this role.
definitions.Role.properties.rolePrivileges.items.properties.privilegeName.description: The
  name of the privilege.
definitions.Role.properties.rolePrivileges.items.properties.privilegeName.type: string
definitions.Role.properties.rolePrivileges.items.properties.serviceId.description: The
  obfuscated ID of the service this privilege is for.
definitions.Role.properties.rolePrivileges.items.properties.serviceId.type: string
definitions.Role.properties.rolePrivileges.items.type: object
definitions.Role.properties.rolePrivileges.type: array
definitions.Role.type: object
definitions.RoleAssignment.description: JSON template for roleAssignment resource
  in Directory API.
definitions.RoleAssignment.properties.assignedTo.description: The unique ID of the
  user this role is assigned to.
definitions.RoleAssignment.properties.assignedTo.type: string
definitions.RoleAssignment.properties.etag.description: ETag of the resource.
definitions.RoleAssignment.properties.etag.type: string
definitions.RoleAssignment.properties.kind.default: admin#directory#roleAssignment
definitions.RoleAssignment.properties.kind.description: The type of the API resource.
  This is always admin#directory#roleAssignment.
definitions.RoleAssignment.properties.kind.type: string
definitions.RoleAssignment.properties.orgUnitId.description: If the role is restricted
  to an organization unit, this contains the ID for the organization unit the exercise
  of this role is restricted to.
definitions.RoleAssignment.properties.orgUnitId.type: string
definitions.RoleAssignment.properties.roleAssignmentId.description: ID of this roleAssignment.
definitions.RoleAssignment.properties.roleAssignmentId.format: int64
definitions.RoleAssignment.properties.roleAssignmentId.type: string
definitions.RoleAssignment.properties.roleId.description: The ID of the role that
  is assigned.
definitions.RoleAssignment.properties.roleId.format: int64
definitions.RoleAssignment.properties.roleId.type: string
definitions.RoleAssignment.properties.scopeType.description: "The scope in which this
  role is assigned. Possible values are: \n- CUSTOMER\n- ORG_UNIT"
definitions.RoleAssignment.properties.scopeType.type: string
definitions.RoleAssignment.type: object
definitions.RoleAssignments.description: JSON response template for List roleAssignments
  operation in Directory API.
definitions.RoleAssignments.properties.etag.description: ETag of the resource.
definitions.RoleAssignments.properties.etag.type: string
definitions.RoleAssignments.properties.items.description: A list of RoleAssignment
  resources.
definitions.RoleAssignments.properties.items.items.$ref: '#/definitions/RoleAssignment'
definitions.RoleAssignments.properties.items.type: array
definitions.RoleAssignments.properties.kind.default: admin#directory#roleAssignments
definitions.RoleAssignments.properties.kind.description: The type of the API resource.
  This is always admin#directory#roleAssignments.
definitions.RoleAssignments.properties.kind.type: string
definitions.RoleAssignments.properties.nextPageToken.type: string
definitions.RoleAssignments.type: object
definitions.Roles.description: JSON response template for List roles operation in
  Directory API.
definitions.Roles.properties.etag.description: ETag of the resource.
definitions.Roles.properties.etag.type: string
definitions.Roles.properties.items.description: A list of Role resources.
definitions.Roles.properties.items.items.$ref: '#/definitions/Role'
definitions.Roles.properties.items.type: array
definitions.Roles.properties.kind.default: admin#directory#roles
definitions.Roles.properties.kind.description: The type of the API resource. This
  is always admin#directory#roles.
definitions.Roles.properties.kind.type: string
definitions.Roles.properties.nextPageToken.type: string
definitions.Roles.type: object
definitions.Schema.description: JSON template for Schema resource in Directory API.
definitions.Schema.properties.etag.description: ETag of the resource.
definitions.Schema.properties.etag.type: string
definitions.Schema.properties.fields.description: Fields of Schema
definitions.Schema.properties.fields.items.$ref: '#/definitions/SchemaFieldSpec'
definitions.Schema.properties.fields.type: array
definitions.Schema.properties.kind.default: admin#directory#schema
definitions.Schema.properties.kind.description: Kind of resource this is.
definitions.Schema.properties.kind.type: string
definitions.Schema.properties.schemaId.description: Unique identifier of Schema (Read-only)
definitions.Schema.properties.schemaId.type: string
definitions.Schema.properties.schemaName.description: Schema name
definitions.Schema.properties.schemaName.type: string
definitions.Schema.type: object
definitions.SchemaFieldSpec.description: JSON template for FieldSpec resource for
  Schemas in Directory API.
definitions.SchemaFieldSpec.properties.etag.description: ETag of the resource.
definitions.SchemaFieldSpec.properties.etag.type: string
definitions.SchemaFieldSpec.properties.fieldId.description: Unique identifier of Field
  (Read-only)
definitions.SchemaFieldSpec.properties.fieldId.type: string
definitions.SchemaFieldSpec.properties.fieldName.description: Name of the field.
definitions.SchemaFieldSpec.properties.fieldName.type: string
definitions.SchemaFieldSpec.properties.fieldType.description: Type of the field.
definitions.SchemaFieldSpec.properties.fieldType.type: string
definitions.SchemaFieldSpec.properties.indexed.default: true
definitions.SchemaFieldSpec.properties.indexed.description: Boolean specifying whether
  the field is indexed or not.
definitions.SchemaFieldSpec.properties.indexed.type: boolean
definitions.SchemaFieldSpec.properties.kind.default: admin#directory#schema#fieldspec
definitions.SchemaFieldSpec.properties.kind.description: Kind of resource this is.
definitions.SchemaFieldSpec.properties.kind.type: string
definitions.SchemaFieldSpec.properties.multiValued.description: Boolean specifying
  whether this is a multi-valued field or not.
definitions.SchemaFieldSpec.properties.multiValued.type: boolean
definitions.SchemaFieldSpec.properties.numericIndexingSpec.description: Indexing spec
  for a numeric field. By default, only exact match queries will be supported for
  numeric fields. Setting the numericIndexingSpec allows range queries to be supported.
definitions.SchemaFieldSpec.properties.numericIndexingSpec.properties.maxValue.description: Maximum
  value of this field. This is meant to be indicative rather than enforced. Values
  outside this range will still be indexed, but search may not be as performant.
definitions.SchemaFieldSpec.properties.numericIndexingSpec.properties.maxValue.format: double
definitions.SchemaFieldSpec.properties.numericIndexingSpec.properties.maxValue.type: number
definitions.SchemaFieldSpec.properties.numericIndexingSpec.properties.minValue.description: Minimum
  value of this field. This is meant to be indicative rather than enforced. Values
  outside this range will still be indexed, but search may not be as performant.
definitions.SchemaFieldSpec.properties.numericIndexingSpec.properties.minValue.format: double
definitions.SchemaFieldSpec.properties.numericIndexingSpec.properties.minValue.type: number
definitions.SchemaFieldSpec.properties.numericIndexingSpec.type: object
definitions.SchemaFieldSpec.properties.readAccessType.default: ALL_DOMAIN_USERS
definitions.SchemaFieldSpec.properties.readAccessType.description: Read ACLs on the
  field specifying who can view values of this field. Valid values are "ALL_DOMAIN_USERS"
  and "ADMINS_AND_SELF".
definitions.SchemaFieldSpec.properties.readAccessType.type: string
definitions.SchemaFieldSpec.type: object
definitions.Schemas.description: JSON response template for List Schema operation
  in Directory API.
definitions.Schemas.properties.etag.description: ETag of the resource.
definitions.Schemas.properties.etag.type: string
definitions.Schemas.properties.kind.default: admin#directory#schemas
definitions.Schemas.properties.kind.description: Kind of resource this is.
definitions.Schemas.properties.kind.type: string
definitions.Schemas.properties.schemas.description: List of UserSchema objects.
definitions.Schemas.properties.schemas.items.$ref: '#/definitions/Schema'
definitions.Schemas.properties.schemas.type: array
definitions.Schemas.type: object
definitions.Token.description: JSON template for token resource in Directory API.
definitions.Token.properties.anonymous.description: Whether the application is registered
  with Google. The value is true if the application has an anonymous Client ID.
definitions.Token.properties.anonymous.type: boolean
definitions.Token.properties.clientId.description: The Client ID of the application
  the token is issued to.
definitions.Token.properties.clientId.type: string
definitions.Token.properties.displayText.description: The displayable name of the
  application the token is issued to.
definitions.Token.properties.displayText.type: string
definitions.Token.properties.etag.description: ETag of the resource.
definitions.Token.properties.etag.type: string
definitions.Token.properties.kind.default: admin#directory#token
definitions.Token.properties.kind.description: The type of the API resource. This
  is always admin#directory#token.
definitions.Token.properties.kind.type: string
definitions.Token.properties.nativeApp.description: Whether the token is issued to
  an installed application. The value is true if the application is installed to a
  desktop or mobile device.
definitions.Token.properties.nativeApp.type: boolean
definitions.Token.properties.scopes.description: A list of authorization scopes the
  application is granted.
definitions.Token.properties.scopes.items.type: string
definitions.Token.properties.scopes.type: array
definitions.Token.properties.userKey.description: The unique ID of the user that issued
  the token.
definitions.Token.properties.userKey.type: string
definitions.Token.type: object
definitions.Tokens.description: JSON response template for List tokens operation in
  Directory API.
definitions.Tokens.properties.etag.description: ETag of the resource.
definitions.Tokens.properties.etag.type: string
definitions.Tokens.properties.items.description: A list of Token resources.
definitions.Tokens.properties.items.items.$ref: '#/definitions/Token'
definitions.Tokens.properties.items.type: array
definitions.Tokens.properties.kind.default: admin#directory#tokenList
definitions.Tokens.properties.kind.description: The type of the API resource. This
  is always admin#directory#tokenList.
definitions.Tokens.properties.kind.type: string
definitions.Tokens.type: object
definitions.User.description: JSON template for User object in Directory API.
definitions.User.properties.agreedToTerms.description: Indicates if user has agreed
  to terms (Read-only)
definitions.User.properties.agreedToTerms.readOnly: true
definitions.User.properties.agreedToTerms.type: boolean
definitions.User.properties.aliases.description: List of aliases (Read-only)
definitions.User.properties.aliases.items.type: string
definitions.User.properties.aliases.readOnly: true
definitions.User.properties.aliases.type: array
definitions.User.properties.changePasswordAtNextLogin.description: Boolean indicating
  if the user should change password in next login
definitions.User.properties.changePasswordAtNextLogin.type: boolean
definitions.User.properties.creationTime.description: User's G Suite account creation
  time. (Read-only)
definitions.User.properties.creationTime.format: date-time
definitions.User.properties.creationTime.readOnly: true
definitions.User.properties.creationTime.type: string
definitions.User.properties.customSchemas.additionalProperties.$ref: '#/definitions/UserCustomProperties'
definitions.User.properties.customSchemas.description: Custom fields of the user.
definitions.User.properties.customSchemas.type: object
definitions.User.properties.customerId.description: CustomerId of User (Read-only)
definitions.User.properties.customerId.readOnly: true
definitions.User.properties.customerId.type: string
definitions.User.properties.deletionTime.format: date-time
definitions.User.properties.deletionTime.readOnly: true
definitions.User.properties.deletionTime.type: string
definitions.User.properties.etag.description: ETag of the resource.
definitions.User.properties.etag.readOnly: true
definitions.User.properties.etag.type: string
definitions.User.properties.hashFunction.description: Hash function name for password.
  Supported are MD5, SHA-1 and crypt
definitions.User.properties.hashFunction.type: string
definitions.User.properties.id.description: Unique identifier of User (Read-only)
definitions.User.properties.id.type: string
definitions.User.properties.includeInGlobalAddressList.description: Boolean indicating
  if user is included in Global Address List
definitions.User.properties.includeInGlobalAddressList.type: boolean
definitions.User.properties.ipWhitelisted.description: Boolean indicating if ip is
  whitelisted
definitions.User.properties.ipWhitelisted.type: boolean
definitions.User.properties.isAdmin.description: Boolean indicating if the user is
  admin (Read-only)
definitions.User.properties.isAdmin.readOnly: true
definitions.User.properties.isAdmin.type: boolean
definitions.User.properties.isDelegatedAdmin.description: Boolean indicating if the
  user is delegated admin (Read-only)
definitions.User.properties.isDelegatedAdmin.readOnly: true
definitions.User.properties.isDelegatedAdmin.type: boolean
definitions.User.properties.isEnforcedIn2Sv.description: Is 2-step verification enforced
  (Read-only)
definitions.User.properties.isEnforcedIn2Sv.readOnly: true
definitions.User.properties.isEnforcedIn2Sv.type: boolean
definitions.User.properties.isEnrolledIn2Sv.description: Is enrolled in 2-step verification
  (Read-only)
definitions.User.properties.isEnrolledIn2Sv.readOnly: true
definitions.User.properties.isEnrolledIn2Sv.type: boolean
definitions.User.properties.isMailboxSetup.description: Is mailbox setup (Read-only)
definitions.User.properties.isMailboxSetup.readOnly: true
definitions.User.properties.isMailboxSetup.type: boolean
definitions.User.properties.kind.default: admin#directory#user
definitions.User.properties.kind.description: Kind of resource this is.
definitions.User.properties.kind.readOnly: true
definitions.User.properties.kind.type: string
definitions.User.properties.lastLoginTime.description: User's last login time. (Read-only)
definitions.User.properties.lastLoginTime.format: date-time
definitions.User.properties.lastLoginTime.readOnly: true
definitions.User.properties.lastLoginTime.type: string
definitions.User.properties.name.$ref: '#/definitions/UserName'
definitions.User.properties.name.description: User's name
definitions.User.properties.nonEditableAliases.description: List of non editable aliases
  (Read-only)
definitions.User.properties.nonEditableAliases.items.type: string
definitions.User.properties.nonEditableAliases.readOnly: true
definitions.User.properties.nonEditableAliases.type: array
definitions.User.properties.orgUnitPath.description: OrgUnit of User
definitions.User.properties.orgUnitPath.type: string
definitions.User.properties.password.description: User's password
definitions.User.properties.password.type: string
definitions.User.properties.primaryEmail.description: username of User
definitions.User.properties.primaryEmail.type: string
definitions.User.properties.suspended.description: Indicates if user is suspended
definitions.User.properties.suspended.type: boolean
definitions.User.properties.suspensionReason.description: Suspension reason if user
  is suspended (Read-only)
definitions.User.properties.suspensionReason.readOnly: true
definitions.User.properties.suspensionReason.type: string
definitions.User.properties.thumbnailPhotoEtag.description: ETag of the user's photo
  (Read-only)
definitions.User.properties.thumbnailPhotoEtag.readOnly: true
definitions.User.properties.thumbnailPhotoEtag.type: string
definitions.User.properties.thumbnailPhotoUrl.description: Photo Url of the user (Read-only)
definitions.User.properties.thumbnailPhotoUrl.readOnly: true
definitions.User.properties.thumbnailPhotoUrl.type: string
definitions.User.type: object
definitions.UserAbout.description: JSON template for About (notes) of a user in Directory
  API.
definitions.UserAbout.properties.contentType.description: About entry can have a type
  which indicates the content type. It can either be plain or html. By default, notes
  contents are assumed to contain plain text.
definitions.UserAbout.properties.contentType.type: string
definitions.UserAbout.properties.value.description: Actual value of notes.
definitions.UserAbout.properties.value.type: string
definitions.UserAbout.type: object
definitions.UserAddress.description: JSON template for address.
definitions.UserAddress.properties.country.description: Country.
definitions.UserAddress.properties.country.type: string
definitions.UserAddress.properties.countryCode.description: Country code.
definitions.UserAddress.properties.countryCode.type: string
definitions.UserAddress.properties.customType.description: Custom type.
definitions.UserAddress.properties.customType.type: string
definitions.UserAddress.properties.extendedAddress.description: Extended Address.
definitions.UserAddress.properties.extendedAddress.type: string
definitions.UserAddress.properties.formatted.description: Formatted address.
definitions.UserAddress.properties.formatted.type: string
definitions.UserAddress.properties.locality.description: Locality.
definitions.UserAddress.properties.locality.type: string
definitions.UserAddress.properties.poBox.description: Other parts of address.
definitions.UserAddress.properties.poBox.type: string
definitions.UserAddress.properties.postalCode.description: Postal code.
definitions.UserAddress.properties.postalCode.type: string
definitions.UserAddress.properties.primary.description: If this is user's primary
  address. Only one entry could be marked as primary.
definitions.UserAddress.properties.primary.type: boolean
definitions.UserAddress.properties.region.description: Region.
definitions.UserAddress.properties.region.type: string
definitions.UserAddress.properties.sourceIsStructured.description: User supplied address
  was structured. Structured addresses are NOT supported at this time. You might be
  able to write structured addresses, but any values will eventually be clobbered.
definitions.UserAddress.properties.sourceIsStructured.type: boolean
definitions.UserAddress.properties.streetAddress.description: Street.
definitions.UserAddress.properties.streetAddress.type: string
definitions.UserAddress.properties.type.description: Each entry can have a type which
  indicates standard values of that entry. For example address could be of home, work
  etc. In addition to the standard type, an entry can have a custom type and can take
  any value. Such type should have the CUSTOM value as type and also have a customType
  value.
definitions.UserAddress.properties.type.type: string
definitions.UserAddress.type: object
definitions.UserCustomProperties.description: JSON template for a set of custom properties
  (i.e. all fields in a particular schema)
definitions.UserCustomProperties.type: object
definitions.UserEmail.description: JSON template for an email.
definitions.UserEmail.properties.address.description: Email id of the user.
definitions.UserEmail.properties.address.type: string
definitions.UserEmail.properties.customType.description: Custom Type.
definitions.UserEmail.properties.customType.type: string
definitions.UserEmail.properties.primary.description: If this is user's primary email.
  Only one entry could be marked as primary.
definitions.UserEmail.properties.primary.type: boolean
definitions.UserEmail.properties.type.description: Each entry can have a type which
  indicates standard types of that entry. For example email could be of home, work
  etc. In addition to the standard type, an entry can have a custom type and can take
  any value Such types should have the CUSTOM value as type and also have a customType
  value.
definitions.UserEmail.properties.type.type: string
definitions.UserEmail.type: object
definitions.UserExternalId.description: JSON template for an externalId entry.
definitions.UserExternalId.properties.customType.description: Custom type.
definitions.UserExternalId.properties.customType.type: string
definitions.UserExternalId.properties.type.description: The type of the Id.
definitions.UserExternalId.properties.type.type: string
definitions.UserExternalId.properties.value.description: The value of the id.
definitions.UserExternalId.properties.value.type: string
definitions.UserExternalId.type: object
definitions.UserGender.properties.addressMeAs.description: AddressMeAs. A human-readable
  string containing the proper way to refer to the profile owner by humans, for example
  "he/him/his" or "they/them/their".
definitions.UserGender.properties.addressMeAs.type: string
definitions.UserGender.properties.customGender.description: Custom gender.
definitions.UserGender.properties.customGender.type: string
definitions.UserGender.properties.type.description: Gender.
definitions.UserGender.properties.type.type: string
definitions.UserGender.type: object
definitions.UserIm.description: JSON template for instant messenger of an user.
definitions.UserIm.properties.customProtocol.description: Custom protocol.
definitions.UserIm.properties.customProtocol.type: string
definitions.UserIm.properties.customType.description: Custom type.
definitions.UserIm.properties.customType.type: string
definitions.UserIm.properties.im.description: Instant messenger id.
definitions.UserIm.properties.im.type: string
definitions.UserIm.properties.primary.description: If this is user's primary im. Only
  one entry could be marked as primary.
definitions.UserIm.properties.primary.type: boolean
definitions.UserIm.properties.protocol.description: Protocol used in the instant messenger.
  It should be one of the values from ImProtocolTypes map. Similar to type, it can
  take a CUSTOM value and specify the custom name in customProtocol field.
definitions.UserIm.properties.protocol.type: string
definitions.UserIm.properties.type.description: Each entry can have a type which indicates
  standard types of that entry. For example instant messengers could be of home, work
  etc. In addition to the standard type, an entry can have a custom type and can take
  any value. Such types should have the CUSTOM value as type and also have a customType
  value.
definitions.UserIm.properties.type.type: string
definitions.UserIm.type: object
definitions.UserKeyword.description: JSON template for a keyword entry.
definitions.UserKeyword.properties.customType.description: Custom Type.
definitions.UserKeyword.properties.customType.type: string
definitions.UserKeyword.properties.type.description: Each entry can have a type which
  indicates standard type of that entry. For example, keyword could be of type occupation
  or outlook. In addition to the standard type, an entry can have a custom type and
  can give it any name. Such types should have the CUSTOM value as type and also have
  a customType value.
definitions.UserKeyword.properties.type.type: string
definitions.UserKeyword.properties.value.description: Keyword.
definitions.UserKeyword.properties.value.type: string
definitions.UserKeyword.type: object
definitions.UserLanguage.description: JSON template for a language entry.
definitions.UserLanguage.properties.customLanguage.description: Other language. User
  can provide own language name if there is no corresponding Google III language code.
  If this is set LanguageCode can't be set
definitions.UserLanguage.properties.customLanguage.type: string
definitions.UserLanguage.properties.languageCode.description: Language Code. Should
  be used for storing Google III LanguageCode string representation for language.
  Illegal values cause SchemaException.
definitions.UserLanguage.properties.languageCode.type: string
definitions.UserLanguage.type: object
definitions.UserLocation.description: JSON template for a location entry.
definitions.UserLocation.properties.area.description: Textual location. This is most
  useful for display purposes to concisely describe the location. For example, "Mountain
  View, CA", "Near Seattle", "US-NYC-9TH 9A209A".
definitions.UserLocation.properties.area.type: string
definitions.UserLocation.properties.buildingId.description: Building Identifier.
definitions.UserLocation.properties.buildingId.type: string
definitions.UserLocation.properties.customType.description: Custom Type.
definitions.UserLocation.properties.customType.type: string
definitions.UserLocation.properties.deskCode.description: Most specific textual code
  of individual desk location.
definitions.UserLocation.properties.deskCode.type: string
definitions.UserLocation.properties.floorName.description: Floor name/number.
definitions.UserLocation.properties.floorName.type: string
definitions.UserLocation.properties.floorSection.description: Floor section. More
  specific location within the floor. For example, if a floor is divided into sections
  "A", "B", and "C", this field would identify one of those values.
definitions.UserLocation.properties.floorSection.type: string
definitions.UserLocation.properties.type.description: Each entry can have a type which
  indicates standard types of that entry. For example location could be of types default
  and desk. In addition to standard type, an entry can have a custom type and can
  give it any name. Such types should have "custom" as type and also have a customType
  value.
definitions.UserLocation.properties.type.type: string
definitions.UserLocation.type: object
definitions.UserMakeAdmin.description: JSON request template for setting/revoking
  admin status of a user in Directory API.
definitions.UserMakeAdmin.properties.status.description: Boolean indicating new admin
  status of the user
definitions.UserMakeAdmin.properties.status.type: boolean
definitions.UserMakeAdmin.type: object
definitions.UserName.description: JSON template for name of a user in Directory API.
definitions.UserName.properties.familyName.description: Last Name
definitions.UserName.properties.familyName.type: string
definitions.UserName.properties.fullName.description: Full Name
definitions.UserName.properties.fullName.type: string
definitions.UserName.properties.givenName.description: First Name
definitions.UserName.properties.givenName.type: string
definitions.UserName.type: object
definitions.UserOrganization.description: JSON template for an organization entry.
definitions.UserOrganization.properties.costCenter.description: The cost center of
  the users department.
definitions.UserOrganization.properties.costCenter.type: string
definitions.UserOrganization.properties.customType.description: Custom type.
definitions.UserOrganization.properties.customType.type: string
definitions.UserOrganization.properties.department.description: Department within
  the organization.
definitions.UserOrganization.properties.department.type: string
definitions.UserOrganization.properties.description.description: Description of the
  organization.
definitions.UserOrganization.properties.description.type: string
definitions.UserOrganization.properties.domain.description: The domain to which the
  organization belongs to.
definitions.UserOrganization.properties.domain.type: string
definitions.UserOrganization.properties.fullTimeEquivalent.description: The full-time
  equivalent percent within the organization (100000 = 100%).
definitions.UserOrganization.properties.fullTimeEquivalent.format: int32
definitions.UserOrganization.properties.fullTimeEquivalent.type: integer
definitions.UserOrganization.properties.location.description: Location of the organization.
  This need not be fully qualified address.
definitions.UserOrganization.properties.location.type: string
definitions.UserOrganization.properties.name.description: Name of the organization
definitions.UserOrganization.properties.name.type: string
definitions.UserOrganization.properties.primary.description: If it user's primary
  organization.
definitions.UserOrganization.properties.primary.type: boolean
definitions.UserOrganization.properties.symbol.description: Symbol of the organization.
definitions.UserOrganization.properties.symbol.type: string
definitions.UserOrganization.properties.title.description: Title (designation) of
  the user in the organization.
definitions.UserOrganization.properties.title.type: string
definitions.UserOrganization.properties.type.description: Each entry can have a type
  which indicates standard types of that entry. For example organization could be
  of school, work etc. In addition to the standard type, an entry can have a custom
  type and can give it any name. Such types should have the CUSTOM value as type and
  also have a CustomType value.
definitions.UserOrganization.properties.type.type: string
definitions.UserOrganization.type: object
definitions.UserPhone.description: JSON template for a phone entry.
definitions.UserPhone.properties.customType.description: Custom Type.
definitions.UserPhone.properties.customType.type: string
definitions.UserPhone.properties.primary.description: If this is user's primary phone
  or not.
definitions.UserPhone.properties.primary.type: boolean
definitions.UserPhone.properties.type.description: Each entry can have a type which
  indicates standard types of that entry. For example phone could be of home_fax,
  work, mobile etc. In addition to the standard type, an entry can have a custom type
  and can give it any name. Such types should have the CUSTOM value as type and also
  have a customType value.
definitions.UserPhone.properties.type.type: string
definitions.UserPhone.properties.value.description: Phone number.
definitions.UserPhone.properties.value.type: string
definitions.UserPhone.type: object
definitions.UserPhoto.description: JSON template for Photo object in Directory API.
definitions.UserPhoto.properties.etag.description: ETag of the resource.
definitions.UserPhoto.properties.etag.type: string
definitions.UserPhoto.properties.height.description: Height in pixels of the photo
definitions.UserPhoto.properties.height.format: int32
definitions.UserPhoto.properties.height.type: integer
definitions.UserPhoto.properties.id.description: Unique identifier of User (Read-only)
definitions.UserPhoto.properties.id.type: string
definitions.UserPhoto.properties.kind.default: admin#directory#user#photo
definitions.UserPhoto.properties.kind.description: Kind of resource this is.
definitions.UserPhoto.properties.kind.type: string
definitions.UserPhoto.properties.mimeType.description: Mime Type of the photo
definitions.UserPhoto.properties.mimeType.type: string
definitions.UserPhoto.properties.photoData.description: Base64 encoded photo data
definitions.UserPhoto.properties.photoData.format: byte
definitions.UserPhoto.properties.photoData.type: string
definitions.UserPhoto.properties.primaryEmail.description: Primary email of User (Read-only)
definitions.UserPhoto.properties.primaryEmail.type: string
definitions.UserPhoto.properties.width.description: Width in pixels of the photo
definitions.UserPhoto.properties.width.format: int32
definitions.UserPhoto.properties.width.type: integer
definitions.UserPhoto.type: object
definitions.UserPosixAccount.description: 'JSON template for a POSIX account entry.
  Description of the field family: go/fbs-posix.'
definitions.UserPosixAccount.properties.gecos.description: The GECOS (user information)
  for this account.
definitions.UserPosixAccount.properties.gecos.type: string
definitions.UserPosixAccount.properties.gid.description: The default group ID.
definitions.UserPosixAccount.properties.gid.format: uint64
definitions.UserPosixAccount.properties.gid.type: string
definitions.UserPosixAccount.properties.homeDirectory.description: The path to the
  home directory for this account.
definitions.UserPosixAccount.properties.homeDirectory.type: string
definitions.UserPosixAccount.properties.primary.description: If this is user's primary
  account within the SystemId.
definitions.UserPosixAccount.properties.primary.type: boolean
definitions.UserPosixAccount.properties.shell.description: The path to the login shell
  for this account.
definitions.UserPosixAccount.properties.shell.type: string
definitions.UserPosixAccount.properties.systemId.description: System identifier for
  which account Username or Uid apply to.
definitions.UserPosixAccount.properties.systemId.type: string
definitions.UserPosixAccount.properties.uid.description: The POSIX compliant user
  ID.
definitions.UserPosixAccount.properties.uid.format: uint64
definitions.UserPosixAccount.properties.uid.type: string
definitions.UserPosixAccount.properties.username.description: The username of the
  account.
definitions.UserPosixAccount.properties.username.type: string
definitions.UserPosixAccount.type: object
definitions.UserRelation.description: JSON template for a relation entry.
definitions.UserRelation.properties.customType.description: Custom Type.
definitions.UserRelation.properties.customType.type: string
definitions.UserRelation.properties.type.description: The relation of the user. Some
  of the possible values are mother, father, sister, brother, manager, assistant,
  partner.
definitions.UserRelation.properties.type.type: string
definitions.UserRelation.properties.value.description: The name of the relation.
definitions.UserRelation.properties.value.type: string
definitions.UserRelation.type: object
definitions.UserSshPublicKey.description: JSON template for a POSIX account entry.
definitions.UserSshPublicKey.properties.expirationTimeUsec.description: An expiration
  time in microseconds since epoch.
definitions.UserSshPublicKey.properties.expirationTimeUsec.format: int64
definitions.UserSshPublicKey.properties.expirationTimeUsec.type: string
definitions.UserSshPublicKey.properties.fingerprint.description: A SHA-256 fingerprint
  of the SSH public key. (Read-only)
definitions.UserSshPublicKey.properties.fingerprint.readOnly: true
definitions.UserSshPublicKey.properties.fingerprint.type: string
definitions.UserSshPublicKey.properties.key.description: An SSH public key.
definitions.UserSshPublicKey.properties.key.type: string
definitions.UserSshPublicKey.type: object
definitions.UserUndelete.description: JSON request template to undelete a user in
  Directory API.
definitions.UserUndelete.properties.orgUnitPath.description: OrgUnit of User
definitions.UserUndelete.properties.orgUnitPath.type: string
definitions.UserUndelete.type: object
definitions.UserWebsite.description: JSON template for a website entry.
definitions.UserWebsite.properties.customType.description: Custom Type.
definitions.UserWebsite.properties.customType.type: string
definitions.UserWebsite.properties.primary.description: If this is user's primary
  website or not.
definitions.UserWebsite.properties.primary.type: boolean
definitions.UserWebsite.properties.type.description: Each entry can have a type which
  indicates standard types of that entry. For example website could be of home, work,
  blog etc. In addition to the standard type, an entry can have a custom type and
  can give it any name. Such types should have the CUSTOM value as type and also have
  a customType value.
definitions.UserWebsite.properties.type.type: string
definitions.UserWebsite.properties.value.description: Website.
definitions.UserWebsite.properties.value.type: string
definitions.UserWebsite.type: object
definitions.Users.description: JSON response template for List Users operation in
  Apps Directory API.
definitions.Users.properties.etag.description: ETag of the resource.
definitions.Users.properties.etag.type: string
definitions.Users.properties.kind.default: admin#directory#users
definitions.Users.properties.kind.description: Kind of resource this is.
definitions.Users.properties.kind.type: string
definitions.Users.properties.nextPageToken.description: Token used to access next
  page of this result.
definitions.Users.properties.nextPageToken.type: string
definitions.Users.properties.trigger_event.description: Event that triggered this
  response (only used in case of Push Response)
definitions.Users.properties.trigger_event.type: string
definitions.Users.properties.users.description: List of user objects.
definitions.Users.properties.users.items.$ref: '#/definitions/User'
definitions.Users.properties.users.type: array
definitions.Users.type: object
definitions.VerificationCode.description: JSON template for verification codes in
  Directory API.
definitions.VerificationCode.properties.etag.description: ETag of the resource.
definitions.VerificationCode.properties.etag.type: string
definitions.VerificationCode.properties.kind.default: admin#directory#verificationCode
definitions.VerificationCode.properties.kind.description: The type of the resource.
  This is always admin#directory#verificationCode.
definitions.VerificationCode.properties.kind.type: string
definitions.VerificationCode.properties.userId.description: The obfuscated unique
  ID of the user.
definitions.VerificationCode.properties.userId.type: string
definitions.VerificationCode.properties.verificationCode.description: A current verification
  code for the user. Invalidated or used verification codes are not returned as part
  of the result.
definitions.VerificationCode.properties.verificationCode.type: string
definitions.VerificationCode.type: object
definitions.VerificationCodes.description: JSON response template for List verification
  codes operation in Directory API.
definitions.VerificationCodes.properties.etag.description: ETag of the resource.
definitions.VerificationCodes.properties.etag.type: string
definitions.VerificationCodes.properties.items.description: A list of verification
  code resources.
definitions.VerificationCodes.properties.items.items.$ref: '#/definitions/VerificationCode'
definitions.VerificationCodes.properties.items.type: array
definitions.VerificationCodes.properties.kind.default: admin#directory#verificationCodesList
definitions.VerificationCodes.properties.kind.description: The type of the resource.
  This is always admin#directory#verificationCodesList.
definitions.VerificationCodes.properties.kind.type: string
definitions.VerificationCodes.type: object
externalDocs.url: https://developers.google.com/admin-sdk/directory/
host: www.googleapis.com
info.contact.name: Google
info.contact.url: https://google.com
info.description: The Admin SDK Directory API lets you view and manage enterprise
  resources such as users and groups, administrative notifications, security features,
  and more.
info.title: Admin Directory
info.version: directory_v1
info.x-apiClientRegistration.url: https://console.developers.google.com
info.x-apisguru-categories.length: 1
info.x-apisguru-categories[0]: analytics
info.x-logo.url: https://api.apis.guru/v2/cache/logo/https_www.gstatic.com_images_icons_material_product_2x_admin_64dp.png
info.x-origin.length: 1
info.x-origin[0].converter.url: https://github.com/lucybot/api-spec-converter
info.x-origin[0].converter.version: 2.6.0
info.x-origin[0].format: google
info.x-origin[0].url: https://www.googleapis.com/discovery/v1/apis/admin/directory_v1/rest
info.x-origin[0].version: v1
info.x-preferred: false
info.x-providerName: googleapis.com
info.x-serviceName: admin
parameters.alt.default: json
parameters.alt.description: Data format for the response.
parameters.alt.enum.length: 1
parameters.alt.enum[0]: json
parameters.alt.in: query
parameters.alt.name: alt
parameters.alt.type: string
parameters.fields.description: Selector specifying which fields to include in a partial
  response.
parameters.fields.in: query
parameters.fields.name: fields
parameters.fields.type: string
parameters.key.description: API key. Your API key identifies your project and provides
  you with API access, quota, and reports. Required unless you provide an OAuth 2.0
  token.
parameters.key.in: query
parameters.key.name: key
parameters.key.type: string
parameters.oauth_token.description: OAuth 2.0 token for the current user.
parameters.oauth_token.in: query
parameters.oauth_token.name: oauth_token
parameters.oauth_token.type: string
parameters.prettyPrint.default: true
parameters.prettyPrint.description: Returns response with indentations and line breaks.
parameters.prettyPrint.in: query
parameters.prettyPrint.name: prettyPrint
parameters.prettyPrint.type: boolean
parameters.quotaUser.description: Available to use for quota purposes for server-side
  applications. Can be any arbitrary string assigned to a user, but should not exceed
  40 characters. Overrides userIp if both are provided.
parameters.quotaUser.in: query
parameters.quotaUser.name: quotaUser
parameters.quotaUser.type: string
parameters.userIp.description: IP address of the site where the request originates.
  Use this if you want to enforce per-user limits.
parameters.userIp.in: query
parameters.userIp.name: userIp
parameters.userIp.type: string
paths./admin/directory_v1/channels/stop.parameters.length: 7
paths./admin/directory_v1/channels/stop.parameters[0].$ref: '#/parameters/alt'
paths./admin/directory_v1/channels/stop.parameters[1].$ref: '#/parameters/fields'
paths./admin/directory_v1/channels/stop.parameters[2].$ref: '#/parameters/key'
paths./admin/directory_v1/channels/stop.parameters[3].$ref: '#/parameters/oauth_token'
paths./admin/directory_v1/channels/stop.parameters[4].$ref: '#/parameters/prettyPrint'
paths./admin/directory_v1/channels/stop.parameters[5].$ref: '#/parameters/quotaUser'
paths./admin/directory_v1/channels/stop.parameters[6].$ref: '#/parameters/userIp'
paths./admin/directory_v1/channels/stop.post.description: Stop watching resources
  through this channel
paths./admin/directory_v1/channels/stop.post.operationId: admin.channels.stop
paths./admin/directory_v1/channels/stop.post.parameters.length: 1
paths./admin/directory_v1/channels/stop.post.parameters[0].in: body
paths./admin/directory_v1/channels/stop.post.parameters[0].name: resource
paths./admin/directory_v1/channels/stop.post.parameters[0].schema.$ref: '#/definitions/Channel'
paths./admin/directory_v1/channels/stop.post.responses.200.description: Successful
  response
paths./admin/directory_v1/channels/stop.post.security.length: 4
paths./admin/directory_v1/channels/stop.post.security[0].Oauth2.length: 1
paths./admin/directory_v1/channels/stop.post.security[0].Oauth2[0]: https://www.googleapis.com/auth/admin.directory.user
paths./admin/directory_v1/channels/stop.post.security[1].Oauth2.length: 1
paths./admin/directory_v1/channels/stop.post.security[1].Oauth2[0]: https://www.googleapis.com/auth/admin.directory.user.alias
paths./admin/directory_v1/channels/stop.post.security[2].Oauth2.length: 1
paths./admin/directory_v1/channels/stop.post.security[2].Oauth2[0]: https://www.googleapis.com/auth/admin.directory.user.alias.readonly
paths./admin/directory_v1/channels/stop.post.security[3].Oauth2.length: 1
paths./admin/directory_v1/channels/stop.post.security[3].Oauth2[0]: https://www.googleapis.com/auth/admin.directory.user.readonly
paths./admin/directory_v1/channels/stop.post.tags.length: 1
paths./admin/directory_v1/channels/stop.post.tags[0]: channels
paths./customer/{customer}/domainaliases.get.description: Lists the domain aliases
  of the customer.
paths./customer/{customer}/domainaliases.get.operationId: directory.domainAliases.list
paths./customer/{customer}/domainaliases.get.parameters.length: 2
paths./customer/{customer}/domainaliases.get.parameters[0].description: Immutable
  ID of the G Suite account.
paths./customer/{customer}/domainaliases.get.parameters[0].in: path
paths./customer/{customer}/domainaliases.get.parameters[0].name: customer
paths./customer/{customer}/domainaliases.get.parameters[0].required: true
paths./customer/{customer}/domainaliases.get.parameters[0].type: string
paths./customer/{customer}/domainaliases.get.parameters[1].description: Name of the
  parent domain for which domain aliases are to be fetched.
paths./customer/{customer}/domainaliases.get.parameters[1].in: query
paths./customer/{customer}/domainaliases.get.parameters[1].name: parentDomainName
paths./customer/{customer}/domainaliases.get.parameters[1].type: string
paths./customer/{customer}/domainaliases.get.responses.200.description: Successful
  response
paths./customer/{customer}/domainaliases.get.responses.200.schema.$ref: '#/definitions/DomainAliases'
paths./customer/{customer}/domainaliases.get.security.length: 2
paths./customer/{customer}/domainaliases.get.security[0].Oauth2.length: 1
paths./customer/{customer}/domainaliases.get.security[0].Oauth2[0]: https://www.googleapis.com/auth/admin.directory.domain
paths./customer/{customer}/domainaliases.get.security[1].Oauth2.length: 1
paths./customer/{customer}/domainaliases.get.security[1].Oauth2[0]: https://www.googleapis.com/auth/admin.directory.domain.readonly
paths./customer/{customer}/domainaliases.get.tags.length: 1
paths./customer/{customer}/domainaliases.get.tags[0]: domainAliases
paths./customer/{customer}/domainaliases.parameters.length: 7
paths./customer/{customer}/domainaliases.parameters[0].$ref: '#/parameters/alt'
paths./customer/{customer}/domainaliases.parameters[1].$ref: '#/parameters/fields'
paths./customer/{customer}/domainaliases.parameters[2].$ref: '#/parameters/key'
paths./customer/{customer}/domainaliases.parameters[3].$ref: '#/parameters/oauth_token'
paths./customer/{customer}/domainaliases.parameters[4].$ref: '#/parameters/prettyPrint'
paths./customer/{customer}/domainaliases.parameters[5].$ref: '#/parameters/quotaUser'
paths./customer/{customer}/domainaliases.parameters[6].$ref: '#/parameters/userIp'
paths./customer/{customer}/domainaliases.post.description: Inserts a Domain alias
  of the customer.
paths./customer/{customer}/domainaliases.post.operationId: directory.domainAliases.insert
paths./customer/{customer}/domainaliases.post.parameters.length: 2
paths./customer/{customer}/domainaliases.post.parameters[0].in: body
paths./customer/{customer}/domainaliases.post.parameters[0].name: body
paths./customer/{customer}/domainaliases.post.parameters[0].schema.$ref: '#/definitions/DomainAlias'
paths./customer/{customer}/domainaliases.post.parameters[1].description: Immutable
  ID of the G Suite account.
paths./customer/{customer}/domainaliases.post.parameters[1].in: path
paths./customer/{customer}/domainaliases.post.parameters[1].name: customer
paths./customer/{customer}/domainaliases.post.parameters[1].required: true
paths./customer/{customer}/domainaliases.post.parameters[1].type: string
paths./customer/{customer}/domainaliases.post.responses.200.description: Successful
  response
paths./customer/{customer}/domainaliases.post.responses.200.schema.$ref: '#/definitions/DomainAlias'
paths./customer/{customer}/domainaliases.post.security.length: 1
paths./customer/{customer}/domainaliases.post.security[0].Oauth2.length: 1
paths./customer/{customer}/domainaliases.post.security[0].Oauth2[0]: https://www.googleapis.com/auth/admin.directory.domain
paths./customer/{customer}/domainaliases.post.tags.length: 1
paths./customer/{customer}/domainaliases.post.tags[0]: domainAliases
paths./customer/{customer}/domainaliases/{domainAliasName}.delete.description: Deletes
  a Domain Alias of the customer.
paths./customer/{customer}/domainaliases/{domainAliasName}.delete.operationId: directory.domainAliases.delete
paths./customer/{customer}/domainaliases/{domainAliasName}.delete.parameters.length: 2
paths./customer/{customer}/domainaliases/{domainAliasName}.delete.parameters[0].description: Immutable
  ID of the G Suite account.
paths./customer/{customer}/domainaliases/{domainAliasName}.delete.parameters[0].in: path
paths./customer/{customer}/domainaliases/{domainAliasName}.delete.parameters[0].name: customer
paths./customer/{customer}/domainaliases/{domainAliasName}.delete.parameters[0].required: true
paths./customer/{customer}/domainaliases/{domainAliasName}.delete.parameters[0].type: string
paths./customer/{customer}/domainaliases/{domainAliasName}.delete.parameters[1].description: Name
  of domain alias to be retrieved.
paths./customer/{customer}/domainaliases/{domainAliasName}.delete.parameters[1].in: path
paths./customer/{customer}/domainaliases/{domainAliasName}.delete.parameters[1].name: domainAliasName
paths./customer/{customer}/domainaliases/{domainAliasName}.delete.parameters[1].required: true
paths./customer/{customer}/domainaliases/{domainAliasName}.delete.parameters[1].type: string
paths./customer/{customer}/domainaliases/{domainAliasName}.delete.responses.200.description: Successful
  response
paths./customer/{customer}/domainaliases/{domainAliasName}.delete.security.length: 1
paths./customer/{customer}/domainaliases/{domainAliasName}.delete.security[0].Oauth2.length: 1
paths./customer/{customer}/domainaliases/{domainAliasName}.delete.security[0].Oauth2[0]: https://www.googleapis.com/auth/admin.directory.domain
paths./customer/{customer}/domainaliases/{domainAliasName}.delete.tags.length: 1
paths./customer/{customer}/domainaliases/{domainAliasName}.delete.tags[0]: domainAliases
paths./customer/{customer}/domainaliases/{domainAliasName}.get.description: Retrieves
  a domain alias of the customer.
paths./customer/{customer}/domainaliases/{domainAliasName}.get.operationId: directory.domainAliases.get
paths./customer/{customer}/domainaliases/{domainAliasName}.get.parameters.length: 2
paths./customer/{customer}/domainaliases/{domainAliasName}.get.parameters[0].description: Immutable
  ID of the G Suite account.
paths./customer/{customer}/domainaliases/{domainAliasName}.get.parameters[0].in: path
paths./customer/{customer}/domainaliases/{domainAliasName}.get.parameters[0].name: customer
paths./customer/{customer}/domainaliases/{domainAliasName}.get.parameters[0].required: true
paths./customer/{customer}/domainaliases/{domainAliasName}.get.parameters[0].type: string
paths./customer/{customer}/domainaliases/{domainAliasName}.get.parameters[1].description: Name
  of domain alias to be retrieved.
paths./customer/{customer}/domainaliases/{domainAliasName}.get.parameters[1].in: path
paths./customer/{customer}/domainaliases/{domainAliasName}.get.parameters[1].name: domainAliasName
paths./customer/{customer}/domainaliases/{domainAliasName}.get.parameters[1].required: true
paths./customer/{customer}/domainaliases/{domainAliasName}.get.parameters[1].type: string
paths./customer/{customer}/domainaliases/{domainAliasName}.get.responses.200.description: Successful
  response
paths./customer/{customer}/domainaliases/{domainAliasName}.get.responses.200.schema.$ref: '#/definitions/DomainAlias'
paths./customer/{customer}/domainaliases/{domainAliasName}.get.security.length: 2
paths./customer/{customer}/domainaliases/{domainAliasName}.get.security[0].Oauth2.length: 1
paths./customer/{customer}/domainaliases/{domainAliasName}.get.security[0].Oauth2[0]: https://www.googleapis.com/auth/admin.directory.domain
paths./customer/{customer}/domainaliases/{domainAliasName}.get.security[1].Oauth2.length: 1
paths./customer/{customer}/domainaliases/{domainAliasName}.get.security[1].Oauth2[0]: https://www.googleapis.com/auth/admin.directory.domain.readonly
paths./customer/{customer}/domainaliases/{domainAliasName}.get.tags.length: 1
paths./customer/{customer}/domainaliases/{domainAliasName}.get.tags[0]: domainAliases
paths./customer/{customer}/domainaliases/{domainAliasName}.parameters.length: 7
paths./customer/{customer}/domainaliases/{domainAliasName}.parameters[0].$ref: '#/parameters/alt'
paths./customer/{customer}/domainaliases/{domainAliasName}.parameters[1].$ref: '#/parameters/fields'
paths./customer/{customer}/domainaliases/{domainAliasName}.parameters[2].$ref: '#/parameters/key'
paths./customer/{customer}/domainaliases/{domainAliasName}.parameters[3].$ref: '#/parameters/oauth_token'
paths./customer/{customer}/domainaliases/{domainAliasName}.parameters[4].$ref: '#/parameters/prettyPrint'
paths./customer/{customer}/domainaliases/{domainAliasName}.parameters[5].$ref: '#/parameters/quotaUser'
paths./customer/{customer}/domainaliases/{domainAliasName}.parameters[6].$ref: '#/parameters/userIp'
paths./customer/{customer}/domains.get.description: Lists the domains of the customer.
paths./customer/{customer}/domains.get.operationId: directory.domains.list
paths./customer/{customer}/domains.get.parameters.length: 1
paths./customer/{customer}/domains.get.parameters[0].description: Immutable ID of
  the G Suite account.
paths./customer/{customer}/domains.get.parameters[0].in: path
paths./customer/{customer}/domains.get.parameters[0].name: customer
paths./customer/{customer}/domains.get.parameters[0].required: true
paths./customer/{customer}/domains.get.parameters[0].type: string
paths./customer/{customer}/domains.get.responses.200.description: Successful response
paths./customer/{customer}/domains.get.responses.200.schema.$ref: '#/definitions/Domains2'
paths./customer/{customer}/domains.get.security.length: 2
paths./customer/{customer}/domains.get.security[0].Oauth2.length: 1
paths./customer/{customer}/domains.get.security[0].Oauth2[0]: https://www.googleapis.com/auth/admin.directory.domain
paths./customer/{customer}/domains.get.security[1].Oauth2.length: 1
paths./customer/{customer}/domains.get.security[1].Oauth2[0]: https://www.googleapis.com/auth/admin.directory.domain.readonly
paths./customer/{customer}/domains.get.tags.length: 1
paths./customer/{customer}/domains.get.tags[0]: domains
paths./customer/{customer}/domains.parameters.length: 7
paths./customer/{customer}/domains.parameters[0].$ref: '#/parameters/alt'
paths./customer/{customer}/domains.parameters[1].$ref: '#/parameters/fields'
paths./customer/{customer}/domains.parameters[2].$ref: '#/parameters/key'
paths./customer/{customer}/domains.parameters[3].$ref: '#/parameters/oauth_token'
paths./customer/{customer}/domains.parameters[4].$ref: '#/parameters/prettyPrint'
paths./customer/{customer}/domains.parameters[5].$ref: '#/parameters/quotaUser'
paths./customer/{customer}/domains.parameters[6].$ref: '#/parameters/userIp'
paths./customer/{customer}/domains.post.description: Inserts a domain of the customer.
paths./customer/{customer}/domains.post.operationId: directory.domains.insert
paths./customer/{customer}/domains.post.parameters.length: 2
paths./customer/{customer}/domains.post.parameters[0].in: body
paths./customer/{customer}/domains.post.parameters[0].name: body
paths./customer/{customer}/domains.post.parameters[0].schema.$ref: '#/definitions/Domains'
paths./customer/{customer}/domains.post.parameters[1].description: Immutable ID of
  the G Suite account.
paths./customer/{customer}/domains.post.parameters[1].in: path
paths./customer/{customer}/domains.post.parameters[1].name: customer
paths./customer/{customer}/domains.post.parameters[1].required: true
paths./customer/{customer}/domains.post.parameters[1].type: string
paths./customer/{customer}/domains.post.responses.200.description: Successful response
paths./customer/{customer}/domains.post.responses.200.schema.$ref: '#/definitions/Domains'
paths./customer/{customer}/domains.post.security.length: 1
paths./customer/{customer}/domains.post.security[0].Oauth2.length: 1
paths./customer/{customer}/domains.post.security[0].Oauth2[0]: https://www.googleapis.com/auth/admin.directory.domain
paths./customer/{customer}/domains.post.tags.length: 1
paths./customer/{customer}/domains.post.tags[0]: domains
paths./customer/{customer}/domains/{domainName}.delete.description: Deletes a domain
  of the customer.
paths./customer/{customer}/domains/{domainName}.delete.operationId: directory.domains.delete
paths./customer/{customer}/domains/{domainName}.delete.parameters.length: 2
paths./customer/{customer}/domains/{domainName}.delete.parameters[0].description: Immutable
  ID of the G Suite account.
paths./customer/{customer}/domains/{domainName}.delete.parameters[0].in: path
paths./customer/{customer}/domains/{domainName}.delete.parameters[0].name: customer
paths./customer/{customer}/domains/{domainName}.delete.parameters[0].required: true
paths./customer/{customer}/domains/{domainName}.delete.parameters[0].type: string
paths./customer/{customer}/domains/{domainName}.delete.parameters[1].description: Name
  of domain to be deleted
paths./customer/{customer}/domains/{domainName}.delete.parameters[1].in: path
paths./customer/{customer}/domains/{domainName}.delete.parameters[1].name: domainName
paths./customer/{customer}/domains/{domainName}.delete.parameters[1].required: true
paths./customer/{customer}/domains/{domainName}.delete.parameters[1].type: string
paths./customer/{customer}/domains/{domainName}.delete.responses.200.description: Successful
  response
paths./customer/{customer}/domains/{domainName}.delete.security.length: 1
paths./customer/{customer}/domains/{domainName}.delete.security[0].Oauth2.length: 1
paths./customer/{customer}/domains/{domainName}.delete.security[0].Oauth2[0]: https://www.googleapis.com/auth/admin.directory.domain
paths./customer/{customer}/domains/{domainName}.delete.tags.length: 1
paths./customer/{customer}/domains/{domainName}.delete.tags[0]: domains
paths./customer/{customer}/domains/{domainName}.get.description: Retrieves a domain
  of the customer.
paths./customer/{customer}/domains/{domainName}.get.operationId: directory.domains.get
paths./customer/{customer}/domains/{domainName}.get.parameters.length: 2
paths./customer/{customer}/domains/{domainName}.get.parameters[0].description: Immutable
  ID of the G Suite account.
paths./customer/{customer}/domains/{domainName}.get.parameters[0].in: path
paths./customer/{customer}/domains/{domainName}.get.parameters[0].name: customer
paths./customer/{customer}/domains/{domainName}.get.parameters[0].required: true
paths./customer/{customer}/domains/{domainName}.get.parameters[0].type: string
paths./customer/{customer}/domains/{domainName}.get.parameters[1].description: Name
  of domain to be retrieved
paths./customer/{customer}/domains/{domainName}.get.parameters[1].in: path
paths./customer/{customer}/domains/{domainName}.get.parameters[1].name: domainName
paths./customer/{customer}/domains/{domainName}.get.parameters[1].required: true
paths./customer/{customer}/domains/{domainName}.get.parameters[1].type: string
paths./customer/{customer}/domains/{domainName}.get.responses.200.description: Successful
  response
paths./customer/{customer}/domains/{domainName}.get.responses.200.schema.$ref: '#/definitions/Domains'
paths./customer/{customer}/domains/{domainName}.get.security.length: 2
paths./customer/{customer}/domains/{domainName}.get.security[0].Oauth2.length: 1
paths./customer/{customer}/domains/{domainName}.get.security[0].Oauth2[0]: https://www.googleapis.com/auth/admin.directory.domain
paths./customer/{customer}/domains/{domainName}.get.security[1].Oauth2.length: 1
paths./customer/{customer}/domains/{domainName}.get.security[1].Oauth2[0]: https://www.googleapis.com/auth/admin.directory.domain.readonly
paths./customer/{customer}/domains/{domainName}.get.tags.length: 1
paths./customer/{customer}/domains/{domainName}.get.tags[0]: domains
paths./customer/{customer}/domains/{domainName}.parameters.length: 7
paths./customer/{customer}/domains/{domainName}.parameters[0].$ref: '#/parameters/alt'
paths./customer/{customer}/domains/{domainName}.parameters[1].$ref: '#/parameters/fields'
paths./customer/{customer}/domains/{domainName}.parameters[2].$ref: '#/parameters/key'
paths./customer/{customer}/domains/{domainName}.parameters[3].$ref: '#/parameters/oauth_token'
paths./customer/{customer}/domains/{domainName}.parameters[4].$ref: '#/parameters/prettyPrint'
paths./customer/{customer}/domains/{domainName}.parameters[5].$ref: '#/parameters/quotaUser'
paths./customer/{customer}/domains/{domainName}.parameters[6].$ref: '#/parameters/userIp'
paths./customer/{customer}/notifications.get.description: Retrieves a list of notifications.
paths./customer/{customer}/notifications.get.operationId: directory.notifications.list
paths./customer/{customer}/notifications.get.parameters.length: 4
paths./customer/{customer}/notifications.get.parameters[0].description: The unique
  ID for the customer's G Suite account.
paths./customer/{customer}/notifications.get.parameters[0].in: path
paths./customer/{customer}/notifications.get.parameters[0].name: customer
paths./customer/{customer}/notifications.get.parameters[0].required: true
paths./customer/{customer}/notifications.get.parameters[0].type: string
paths./customer/{customer}/notifications.get.parameters[1].description: The ISO 639-1
  code of the language notifications are returned in. The default is English (en).
paths./customer/{customer}/notifications.get.parameters[1].in: query
paths./customer/{customer}/notifications.get.parameters[1].name: language
paths./customer/{customer}/notifications.get.parameters[1].type: string
paths./customer/{customer}/notifications.get.parameters[2].description: Maximum number
  of notifications to return per page. The default is 100.
paths./customer/{customer}/notifications.get.parameters[2].in: query
paths./customer/{customer}/notifications.get.parameters[2].name: maxResults
paths./customer/{customer}/notifications.get.parameters[2].type: integer
paths./customer/{customer}/notifications.get.parameters[3].description: The token
  to specify the page of results to retrieve.
paths./customer/{customer}/notifications.get.parameters[3].in: query
paths./customer/{customer}/notifications.get.parameters[3].name: pageToken
paths./customer/{customer}/notifications.get.parameters[3].type: string
paths./customer/{customer}/notifications.get.responses.200.description: Successful
  response
paths./customer/{customer}/notifications.get.responses.200.schema.$ref: '#/definitions/Notifications'
paths./customer/{customer}/notifications.get.security.length: 1
paths./customer/{customer}/notifications.get.security[0].Oauth2.length: 1
paths./customer/{customer}/notifications.get.security[0].Oauth2[0]: https://www.googleapis.com/auth/admin.directory.notifications
paths./customer/{customer}/notifications.get.tags.length: 1
paths./customer/{customer}/notifications.get.tags[0]: notifications
paths./customer/{customer}/notifications.parameters.length: 7
paths./customer/{customer}/notifications.parameters[0].$ref: '#/parameters/alt'
paths./customer/{customer}/notifications.parameters[1].$ref: '#/parameters/fields'
paths./customer/{customer}/notifications.parameters[2].$ref: '#/parameters/key'
paths./customer/{customer}/notifications.parameters[3].$ref: '#/parameters/oauth_token'
paths./customer/{customer}/notifications.parameters[4].$ref: '#/parameters/prettyPrint'
paths./customer/{customer}/notifications.parameters[5].$ref: '#/parameters/quotaUser'
paths./customer/{customer}/notifications.parameters[6].$ref: '#/parameters/userIp'
paths./customer/{customer}/notifications/{notificationId}.delete.description: Deletes
  a notification
paths./customer/{customer}/notifications/{notificationId}.delete.operationId: directory.notifications.delete
paths./customer/{customer}/notifications/{notificationId}.delete.parameters.length: 2
paths./customer/{customer}/notifications/{notificationId}.delete.parameters[0].description: The
  unique ID for the customer's G Suite account. The customerId is also returned as
  part of the Users resource.
paths./customer/{customer}/notifications/{notificationId}.delete.parameters[0].in: path
paths./customer/{customer}/notifications/{notificationId}.delete.parameters[0].name: customer
paths./customer/{customer}/notifications/{notificationId}.delete.parameters[0].required: true
paths./customer/{customer}/notifications/{notificationId}.delete.parameters[0].type: string
paths./customer/{customer}/notifications/{notificationId}.delete.parameters[1].description: The
  unique ID of the notification.
paths./customer/{customer}/notifications/{notificationId}.delete.parameters[1].in: path
paths./customer/{customer}/notifications/{notificationId}.delete.parameters[1].name: notificationId
paths./customer/{customer}/notifications/{notificationId}.delete.parameters[1].required: true
paths./customer/{customer}/notifications/{notificationId}.delete.parameters[1].type: string
paths./customer/{customer}/notifications/{notificationId}.delete.responses.200.description: Successful
  response
paths./customer/{customer}/notifications/{notificationId}.delete.security.length: 1
paths./customer/{customer}/notifications/{notificationId}.delete.security[0].Oauth2.length: 1
paths./customer/{customer}/notifications/{notificationId}.delete.security[0].Oauth2[0]: https://www.googleapis.com/auth/admin.directory.notifications
paths./customer/{customer}/notifications/{notificationId}.delete.tags.length: 1
paths./customer/{customer}/notifications/{notificationId}.delete.tags[0]: notifications
paths./customer/{customer}/notifications/{notificationId}.get.description: Retrieves
  a notification.
paths./customer/{customer}/notifications/{notificationId}.get.operationId: directory.notifications.get
paths./customer/{customer}/notifications/{notificationId}.get.parameters.length: 2
paths./customer/{customer}/notifications/{notificationId}.get.parameters[0].description: The
  unique ID for the customer's G Suite account. The customerId is also returned as
  part of the Users resource.
paths./customer/{customer}/notifications/{notificationId}.get.parameters[0].in: path
paths./customer/{customer}/notifications/{notificationId}.get.parameters[0].name: customer
paths./customer/{customer}/notifications/{notificationId}.get.parameters[0].required: true
paths./customer/{customer}/notifications/{notificationId}.get.parameters[0].type: string
paths./customer/{customer}/notifications/{notificationId}.get.parameters[1].description: The
  unique ID of the notification.
paths./customer/{customer}/notifications/{notificationId}.get.parameters[1].in: path
paths./customer/{customer}/notifications/{notificationId}.get.parameters[1].name: notificationId
paths./customer/{customer}/notifications/{notificationId}.get.parameters[1].required: true
paths./customer/{customer}/notifications/{notificationId}.get.parameters[1].type: string
paths./customer/{customer}/notifications/{notificationId}.get.responses.200.description: Successful
  response
paths./customer/{customer}/notifications/{notificationId}.get.responses.200.schema.$ref: '#/definitions/Notification'
paths./customer/{customer}/notifications/{notificationId}.get.security.length: 1
paths./customer/{customer}/notifications/{notificationId}.get.security[0].Oauth2.length: 1
paths./customer/{customer}/notifications/{notificationId}.get.security[0].Oauth2[0]: https://www.googleapis.com/auth/admin.directory.notifications
paths./customer/{customer}/notifications/{notificationId}.get.tags.length: 1
paths./customer/{customer}/notifications/{notificationId}.get.tags[0]: notifications
paths./customer/{customer}/notifications/{notificationId}.parameters.length: 7
paths./customer/{customer}/notifications/{notificationId}.parameters[0].$ref: '#/parameters/alt'
paths./customer/{customer}/notifications/{notificationId}.parameters[1].$ref: '#/parameters/fields'
paths./customer/{customer}/notifications/{notificationId}.parameters[2].$ref: '#/parameters/key'
paths./customer/{customer}/notifications/{notificationId}.parameters[3].$ref: '#/parameters/oauth_token'
paths./customer/{customer}/notifications/{notificationId}.parameters[4].$ref: '#/parameters/prettyPrint'
paths./customer/{customer}/notifications/{notificationId}.parameters[5].$ref: '#/parameters/quotaUser'
paths./customer/{customer}/notifications/{notificationId}.parameters[6].$ref: '#/parameters/userIp'
paths./customer/{customer}/notifications/{notificationId}.patch.description: Updates
  a notification. This method supports patch semantics.
paths./customer/{customer}/notifications/{notificationId}.patch.operationId: directory.notifications.patch
paths./customer/{customer}/notifications/{notificationId}.patch.parameters.length: 3
paths./customer/{customer}/notifications/{notificationId}.patch.parameters[0].in: body
paths./customer/{customer}/notifications/{notificationId}.patch.parameters[0].name: body
paths./customer/{customer}/notifications/{notificationId}.patch.parameters[0].schema.$ref: '#/definitions/Notification'
paths./customer/{customer}/notifications/{notificationId}.patch.parameters[1].description: The
  unique ID for the customer's G Suite account.
paths./customer/{customer}/notifications/{notificationId}.patch.parameters[1].in: path
paths./customer/{customer}/notifications/{notificationId}.patch.parameters[1].name: customer
paths./customer/{customer}/notifications/{notificationId}.patch.parameters[1].required: true
paths./customer/{customer}/notifications/{notificationId}.patch.parameters[1].type: string
paths./customer/{customer}/notifications/{notificationId}.patch.parameters[2].description: The
  unique ID of the notification.
paths./customer/{customer}/notifications/{notificationId}.patch.parameters[2].in: path
paths./customer/{customer}/notifications/{notificationId}.patch.parameters[2].name: notificationId
paths./customer/{customer}/notifications/{notificationId}.patch.parameters[2].required: true
paths./customer/{customer}/notifications/{notificationId}.patch.parameters[2].type: string
paths./customer/{customer}/notifications/{notificationId}.patch.responses.200.description: Successful
  response
paths./customer/{customer}/notifications/{notificationId}.patch.responses.200.schema.$ref: '#/definitions/Notification'
paths./customer/{customer}/notifications/{notificationId}.patch.security.length: 1
paths./customer/{customer}/notifications/{notificationId}.patch.security[0].Oauth2.length: 1
paths./customer/{customer}/notifications/{notificationId}.patch.security[0].Oauth2[0]: https://www.googleapis.com/auth/admin.directory.notifications
paths./customer/{customer}/notifications/{notificationId}.patch.tags.length: 1
paths./customer/{customer}/notifications/{notificationId}.patch.tags[0]: notifications
paths./customer/{customer}/notifications/{notificationId}.put.description: Updates
  a notification.
paths./customer/{customer}/notifications/{notificationId}.put.operationId: directory.notifications.update
paths./customer/{customer}/notifications/{notificationId}.put.parameters.length: 3
paths./customer/{customer}/notifications/{notificationId}.put.parameters[0].in: body
paths./customer/{customer}/notifications/{notificationId}.put.parameters[0].name: body
paths./customer/{customer}/notifications/{notificationId}.put.parameters[0].schema.$ref: '#/definitions/Notification'
paths./customer/{customer}/notifications/{notificationId}.put.parameters[1].description: The
  unique ID for the customer's G Suite account.
paths./customer/{customer}/notifications/{notificationId}.put.parameters[1].in: path
paths./customer/{customer}/notifications/{notificationId}.put.parameters[1].name: customer
paths./customer/{customer}/notifications/{notificationId}.put.parameters[1].required: true
paths./customer/{customer}/notifications/{notificationId}.put.parameters[1].type: string
paths./customer/{customer}/notifications/{notificationId}.put.parameters[2].description: The
  unique ID of the notification.
paths./customer/{customer}/notifications/{notificationId}.put.parameters[2].in: path
paths./customer/{customer}/notifications/{notificationId}.put.parameters[2].name: notificationId
paths./customer/{customer}/notifications/{notificationId}.put.parameters[2].required: true
paths./customer/{customer}/notifications/{notificationId}.put.parameters[2].type: string
paths./customer/{customer}/notifications/{notificationId}.put.responses.200.description: Successful
  response
paths./customer/{customer}/notifications/{notificationId}.put.responses.200.schema.$ref: '#/definitions/Notification'
paths./customer/{customer}/notifications/{notificationId}.put.security.length: 1
paths./customer/{customer}/notifications/{notificationId}.put.security[0].Oauth2.length: 1
paths./customer/{customer}/notifications/{notificationId}.put.security[0].Oauth2[0]: https://www.googleapis.com/auth/admin.directory.notifications
paths./customer/{customer}/notifications/{notificationId}.put.tags.length: 1
paths./customer/{customer}/notifications/{notificationId}.put.tags[0]: notifications
paths./customer/{customer}/resources/calendars.get.description: Retrieves a list of
  calendar resources for an account.
paths./customer/{customer}/resources/calendars.get.operationId: directory.resources.calendars.list
paths./customer/{customer}/resources/calendars.get.parameters.length: 3
paths./customer/{customer}/resources/calendars.get.parameters[0].description: The
  unique ID for the customer's G Suite account. As an account administrator, you can
  also use the my_customer alias to represent your account's customer ID.
paths./customer/{customer}/resources/calendars.get.parameters[0].in: path
paths./customer/{customer}/resources/calendars.get.parameters[0].name: customer
paths./customer/{customer}/resources/calendars.get.parameters[0].required: true
paths./customer/{customer}/resources/calendars.get.parameters[0].type: string
paths./customer/{customer}/resources/calendars.get.parameters[1].description: Maximum
  number of results to return.
paths./customer/{customer}/resources/calendars.get.parameters[1].in: query
paths./customer/{customer}/resources/calendars.get.parameters[1].maximum: 500
paths./customer/{customer}/resources/calendars.get.parameters[1].minimum: 1
paths./customer/{customer}/resources/calendars.get.parameters[1].name: maxResults
paths./customer/{customer}/resources/calendars.get.parameters[1].type: integer
paths./customer/{customer}/resources/calendars.get.parameters[2].description: Token
  to specify the next page in the list.
paths./customer/{customer}/resources/calendars.get.parameters[2].in: query
paths./customer/{customer}/resources/calendars.get.parameters[2].name: pageToken
paths./customer/{customer}/resources/calendars.get.parameters[2].type: string
paths./customer/{customer}/resources/calendars.get.responses.200.description: Successful
  response
paths./customer/{customer}/resources/calendars.get.responses.200.schema.$ref: '#/definitions/CalendarResources'
paths./customer/{customer}/resources/calendars.get.security.length: 2
paths./customer/{customer}/resources/calendars.get.security[0].Oauth2.length: 1
paths./customer/{customer}/resources/calendars.get.security[0].Oauth2[0]: https://www.googleapis.com/auth/admin.directory.resource.calendar
paths./customer/{customer}/resources/calendars.get.security[1].Oauth2.length: 1
paths./customer/{customer}/resources/calendars.get.security[1].Oauth2[0]: https://www.googleapis.com/auth/admin.directory.resource.calendar.readonly
paths./customer/{customer}/resources/calendars.get.tags.length: 1
paths./customer/{customer}/resources/calendars.get.tags[0]: resources
paths./customer/{customer}/resources/calendars.parameters.length: 7
paths./customer/{customer}/resources/calendars.parameters[0].$ref: '#/parameters/alt'
paths./customer/{customer}/resources/calendars.parameters[1].$ref: '#/parameters/fields'
paths./customer/{customer}/resources/calendars.parameters[2].$ref: '#/parameters/key'
paths./customer/{customer}/resources/calendars.parameters[3].$ref: '#/parameters/oauth_token'
paths./customer/{customer}/resources/calendars.parameters[4].$ref: '#/parameters/prettyPrint'
paths./customer/{customer}/resources/calendars.parameters[5].$ref: '#/parameters/quotaUser'
paths./customer/{customer}/resources/calendars.parameters[6].$ref: '#/parameters/userIp'
paths./customer/{customer}/resources/calendars.post.description: Inserts a calendar
  resource.
paths./customer/{customer}/resources/calendars.post.operationId: directory.resources.calendars.insert
paths./customer/{customer}/resources/calendars.post.parameters.length: 2
paths./customer/{customer}/resources/calendars.post.parameters[0].in: body
paths./customer/{customer}/resources/calendars.post.parameters[0].name: body
paths./customer/{customer}/resources/calendars.post.parameters[0].schema.$ref: '#/definitions/CalendarResource'
paths./customer/{customer}/resources/calendars.post.parameters[1].description: The
  unique ID for the customer's G Suite account. As an account administrator, you can
  also use the my_customer alias to represent your account's customer ID.
paths./customer/{customer}/resources/calendars.post.parameters[1].in: path
paths./customer/{customer}/resources/calendars.post.parameters[1].name: customer
paths./customer/{customer}/resources/calendars.post.parameters[1].required: true
paths./customer/{customer}/resources/calendars.post.parameters[1].type: string
paths./customer/{customer}/resources/calendars.post.responses.200.description: Successful
  response
paths./customer/{customer}/resources/calendars.post.responses.200.schema.$ref: '#/definitions/CalendarResource'
paths./customer/{customer}/resources/calendars.post.security.length: 1
paths./customer/{customer}/resources/calendars.post.security[0].Oauth2.length: 1
paths./customer/{customer}/resources/calendars.post.security[0].Oauth2[0]: https://www.googleapis.com/auth/admin.directory.resource.calendar
paths./customer/{customer}/resources/calendars.post.tags.length: 1
paths./customer/{customer}/resources/calendars.post.tags[0]: resources
paths./customer/{customer}/resources/calendars/{calendarResourceId}.delete.description: Deletes
  a calendar resource.
paths./customer/{customer}/resources/calendars/{calendarResourceId}.delete.operationId: directory.resources.calendars.delete
paths./customer/{customer}/resources/calendars/{calendarResourceId}.delete.parameters.length: 2
paths./customer/{customer}/resources/calendars/{calendarResourceId}.delete.parameters[0].description: The
  unique ID of the calendar resource to delete.
paths./customer/{customer}/resources/calendars/{calendarResourceId}.delete.parameters[0].in: path
paths./customer/{customer}/resources/calendars/{calendarResourceId}.delete.parameters[0].name: calendarResourceId
paths./customer/{customer}/resources/calendars/{calendarResourceId}.delete.parameters[0].required: true
paths./customer/{customer}/resources/calendars/{calendarResourceId}.delete.parameters[0].type: string
paths./customer/{customer}/resources/calendars/{calendarResourceId}.delete.parameters[1].description: The
  unique ID for the customer's G Suite account. As an account administrator, you can
  also use the my_customer alias to represent your account's customer ID.
paths./customer/{customer}/resources/calendars/{calendarResourceId}.delete.parameters[1].in: path
paths./customer/{customer}/resources/calendars/{calendarResourceId}.delete.parameters[1].name: customer
paths./customer/{customer}/resources/calendars/{calendarResourceId}.delete.parameters[1].required: true
paths./customer/{customer}/resources/calendars/{calendarResourceId}.delete.parameters[1].type: string
paths./customer/{customer}/resources/calendars/{calendarResourceId}.delete.responses.200.description: Successful
  response
paths./customer/{customer}/resources/calendars/{calendarResourceId}.delete.security.length: 1
paths./customer/{customer}/resources/calendars/{calendarResourceId}.delete.security[0].Oauth2.length: 1
paths./customer/{customer}/resources/calendars/{calendarResourceId}.delete.security[0].Oauth2[0]: https://www.googleapis.com/auth/admin.directory.resource.calendar
paths./customer/{customer}/resources/calendars/{calendarResourceId}.delete.tags.length: 1
paths./customer/{customer}/resources/calendars/{calendarResourceId}.delete.tags[0]: resources
paths./customer/{customer}/resources/calendars/{calendarResourceId}.get.description: Retrieves
  a calendar resource.
paths./customer/{customer}/resources/calendars/{calendarResourceId}.get.operationId: directory.resources.calendars.get
paths./customer/{customer}/resources/calendars/{calendarResourceId}.get.parameters.length: 2
paths./customer/{customer}/resources/calendars/{calendarResourceId}.get.parameters[0].description: The
  unique ID of the calendar resource to retrieve.
paths./customer/{customer}/resources/calendars/{calendarResourceId}.get.parameters[0].in: path
paths./customer/{customer}/resources/calendars/{calendarResourceId}.get.parameters[0].name: calendarResourceId
paths./customer/{customer}/resources/calendars/{calendarResourceId}.get.parameters[0].required: true
paths./customer/{customer}/resources/calendars/{calendarResourceId}.get.parameters[0].type: string
paths./customer/{customer}/resources/calendars/{calendarResourceId}.get.parameters[1].description: The
  unique ID for the customer's G Suite account. As an account administrator, you can
  also use the my_customer alias to represent your account's customer ID.
paths./customer/{customer}/resources/calendars/{calendarResourceId}.get.parameters[1].in: path
paths./customer/{customer}/resources/calendars/{calendarResourceId}.get.parameters[1].name: customer
paths./customer/{customer}/resources/calendars/{calendarResourceId}.get.parameters[1].required: true
paths./customer/{customer}/resources/calendars/{calendarResourceId}.get.parameters[1].type: string
paths./customer/{customer}/resources/calendars/{calendarResourceId}.get.responses.200.description: Successful
  response
paths./customer/{customer}/resources/calendars/{calendarResourceId}.get.responses.200.schema.$ref: '#/definitions/CalendarResource'
paths./customer/{customer}/resources/calendars/{calendarResourceId}.get.security.length: 2
paths./customer/{customer}/resources/calendars/{calendarResourceId}.get.security[0].Oauth2.length: 1
paths./customer/{customer}/resources/calendars/{calendarResourceId}.get.security[0].Oauth2[0]: https://www.googleapis.com/auth/admin.directory.resource.calendar
paths./customer/{customer}/resources/calendars/{calendarResourceId}.get.security[1].Oauth2.length: 1
paths./customer/{customer}/resources/calendars/{calendarResourceId}.get.security[1].Oauth2[0]: https://www.googleapis.com/auth/admin.directory.resource.calendar.readonly
paths./customer/{customer}/resources/calendars/{calendarResourceId}.get.tags.length: 1
paths./customer/{customer}/resources/calendars/{calendarResourceId}.get.tags[0]: resources
paths./customer/{customer}/resources/calendars/{calendarResourceId}.parameters.length: 7
paths./customer/{customer}/resources/calendars/{calendarResourceId}.parameters[0].$ref: '#/parameters/alt'
paths./customer/{customer}/resources/calendars/{calendarResourceId}.parameters[1].$ref: '#/parameters/fields'
paths./customer/{customer}/resources/calendars/{calendarResourceId}.parameters[2].$ref: '#/parameters/key'
paths./customer/{customer}/resources/calendars/{calendarResourceId}.parameters[3].$ref: '#/parameters/oauth_token'
paths./customer/{customer}/resources/calendars/{calendarResourceId}.parameters[4].$ref: '#/parameters/prettyPrint'
paths./customer/{customer}/resources/calendars/{calendarResourceId}.parameters[5].$ref: '#/parameters/quotaUser'
paths./customer/{customer}/resources/calendars/{calendarResourceId}.parameters[6].$ref: '#/parameters/userIp'
paths./customer/{customer}/resources/calendars/{calendarResourceId}.patch.description: Updates
  a calendar resource. This method supports patch semantics.
paths./customer/{customer}/resources/calendars/{calendarResourceId}.patch.operationId: directory.resources.calendars.patch
paths./customer/{customer}/resources/calendars/{calendarResourceId}.patch.parameters.length: 3
paths./customer/{customer}/resources/calendars/{calendarResourceId}.patch.parameters[0].in: body
paths./customer/{customer}/resources/calendars/{calendarResourceId}.patch.parameters[0].name: body
paths./customer/{customer}/resources/calendars/{calendarResourceId}.patch.parameters[0].schema.$ref: '#/definitions/CalendarResource'
paths./customer/{customer}/resources/calendars/{calendarResourceId}.patch.parameters[1].description: The
  unique ID of the calendar resource to update.
paths./customer/{customer}/resources/calendars/{calendarResourceId}.patch.parameters[1].in: path
paths./customer/{customer}/resources/calendars/{calendarResourceId}.patch.parameters[1].name: calendarResourceId
paths./customer/{customer}/resources/calendars/{calendarResourceId}.patch.parameters[1].required: true
paths./customer/{customer}/resources/calendars/{calendarResourceId}.patch.parameters[1].type: string
paths./customer/{customer}/resources/calendars/{calendarResourceId}.patch.parameters[2].description: The
  unique ID for the customer's G Suite account. As an account administrator, you can
  also use the my_customer alias to represent your account's customer ID.
paths./customer/{customer}/resources/calendars/{calendarResourceId}.patch.parameters[2].in: path
paths./customer/{customer}/resources/calendars/{calendarResourceId}.patch.parameters[2].name: customer
paths./customer/{customer}/resources/calendars/{calendarResourceId}.patch.parameters[2].required: true
paths./customer/{customer}/resources/calendars/{calendarResourceId}.patch.parameters[2].type: string
paths./customer/{customer}/resources/calendars/{calendarResourceId}.patch.responses.200.description: Successful
  response
paths./customer/{customer}/resources/calendars/{calendarResourceId}.patch.responses.200.schema.$ref: '#/definitions/CalendarResource'
paths./customer/{customer}/resources/calendars/{calendarResourceId}.patch.security.length: 1
paths./customer/{customer}/resources/calendars/{calendarResourceId}.patch.security[0].Oauth2.length: 1
paths./customer/{customer}/resources/calendars/{calendarResourceId}.patch.security[0].Oauth2[0]: https://www.googleapis.com/auth/admin.directory.resource.calendar
paths./customer/{customer}/resources/calendars/{calendarResourceId}.patch.tags.length: 1
paths./customer/{customer}/resources/calendars/{calendarResourceId}.patch.tags[0]: resources
paths./customer/{customer}/resources/calendars/{calendarResourceId}.put.description: Updates
  a calendar resource.
paths./customer/{customer}/resources/calendars/{calendarResourceId}.put.operationId: directory.resources.calendars.update
paths./customer/{customer}/resources/calendars/{calendarResourceId}.put.parameters.length: 3
paths./customer/{customer}/resources/calendars/{calendarResourceId}.put.parameters[0].in: body
paths./customer/{customer}/resources/calendars/{calendarResourceId}.put.parameters[0].name: body
paths./customer/{customer}/resources/calendars/{calendarResourceId}.put.parameters[0].schema.$ref: '#/definitions/CalendarResource'
paths./customer/{customer}/resources/calendars/{calendarResourceId}.put.parameters[1].description: The
  unique ID of the calendar resource to update.
paths./customer/{customer}/resources/calendars/{calendarResourceId}.put.parameters[1].in: path
paths./customer/{customer}/resources/calendars/{calendarResourceId}.put.parameters[1].name: calendarResourceId
paths./customer/{customer}/resources/calendars/{calendarResourceId}.put.parameters[1].required: true
paths./customer/{customer}/resources/calendars/{calendarResourceId}.put.parameters[1].type: string
paths./customer/{customer}/resources/calendars/{calendarResourceId}.put.parameters[2].description: The
  unique ID for the customer's G Suite account. As an account administrator, you can
  also use the my_customer alias to represent your account's customer ID.
paths./customer/{customer}/resources/calendars/{calendarResourceId}.put.parameters[2].in: path
paths./customer/{customer}/resources/calendars/{calendarResourceId}.put.parameters[2].name: customer
paths./customer/{customer}/resources/calendars/{calendarResourceId}.put.parameters[2].required: true
paths./customer/{customer}/resources/calendars/{calendarResourceId}.put.parameters[2].type: string
paths./customer/{customer}/resources/calendars/{calendarResourceId}.put.responses.200.description: Successful
  response
paths./customer/{customer}/resources/calendars/{calendarResourceId}.put.responses.200.schema.$ref: '#/definitions/CalendarResource'
paths./customer/{customer}/resources/calendars/{calendarResourceId}.put.security.length: 1
paths./customer/{customer}/resources/calendars/{calendarResourceId}.put.security[0].Oauth2.length: 1
paths./customer/{customer}/resources/calendars/{calendarResourceId}.put.security[0].Oauth2[0]: https://www.googleapis.com/auth/admin.directory.resource.calendar
paths./customer/{customer}/resources/calendars/{calendarResourceId}.put.tags.length: 1
paths./customer/{customer}/resources/calendars/{calendarResourceId}.put.tags[0]: resources
paths./customer/{customer}/roleassignments.get.description: Retrieves a paginated
  list of all roleAssignments.
paths./customer/{customer}/roleassignments.get.operationId: directory.roleAssignments.list
paths./customer/{customer}/roleassignments.get.parameters.length: 5
paths./customer/{customer}/roleassignments.get.parameters[0].description: Immutable
  ID of the G Suite account.
paths./customer/{customer}/roleassignments.get.parameters[0].in: path
paths./customer/{customer}/roleassignments.get.parameters[0].name: customer
paths./customer/{customer}/roleassignments.get.parameters[0].required: true
paths./customer/{customer}/roleassignments.get.parameters[0].type: string
paths./customer/{customer}/roleassignments.get.parameters[1].description: Maximum
  number of results to return.
paths./customer/{customer}/roleassignments.get.parameters[1].in: query
paths./customer/{customer}/roleassignments.get.parameters[1].maximum: 200
paths./customer/{customer}/roleassignments.get.parameters[1].minimum: 1
paths./customer/{customer}/roleassignments.get.parameters[1].name: maxResults
paths./customer/{customer}/roleassignments.get.parameters[1].type: integer
paths./customer/{customer}/roleassignments.get.parameters[2].description: Token to
  specify the next page in the list.
paths./customer/{customer}/roleassignments.get.parameters[2].in: query
paths./customer/{customer}/roleassignments.get.parameters[2].name: pageToken
paths./customer/{customer}/roleassignments.get.parameters[2].type: string
paths./customer/{customer}/roleassignments.get.parameters[3].description: Immutable
  ID of a role. If included in the request, returns only role assignments containing
  this role ID.
paths./customer/{customer}/roleassignments.get.parameters[3].in: query
paths./customer/{customer}/roleassignments.get.parameters[3].name: roleId
paths./customer/{customer}/roleassignments.get.parameters[3].type: string
paths./customer/{customer}/roleassignments.get.parameters[4].description: The user's
  primary email address, alias email address, or unique user ID. If included in the
  request, returns role assignments only for this user.
paths./customer/{customer}/roleassignments.get.parameters[4].in: query
paths./customer/{customer}/roleassignments.get.parameters[4].name: userKey
paths./customer/{customer}/roleassignments.get.parameters[4].type: string
paths./customer/{customer}/roleassignments.get.responses.200.description: Successful
  response
paths./customer/{customer}/roleassignments.get.responses.200.schema.$ref: '#/definitions/RoleAssignments'
paths./customer/{customer}/roleassignments.get.security.length: 2
paths./customer/{customer}/roleassignments.get.security[0].Oauth2.length: 1
paths./customer/{customer}/roleassignments.get.security[0].Oauth2[0]: https://www.googleapis.com/auth/admin.directory.rolemanagement
paths./customer/{customer}/roleassignments.get.security[1].Oauth2.length: 1
paths./customer/{customer}/roleassignments.get.security[1].Oauth2[0]: https://www.googleapis.com/auth/admin.directory.rolemanagement.readonly
paths./customer/{customer}/roleassignments.get.tags.length: 1
paths./customer/{customer}/roleassignments.get.tags[0]: roleAssignments
paths./customer/{customer}/roleassignments.parameters.length: 7
paths./customer/{customer}/roleassignments.parameters[0].$ref: '#/parameters/alt'
paths./customer/{customer}/roleassignments.parameters[1].$ref: '#/parameters/fields'
paths./customer/{customer}/roleassignments.parameters[2].$ref: '#/parameters/key'
paths./customer/{customer}/roleassignments.parameters[3].$ref: '#/parameters/oauth_token'
paths./customer/{customer}/roleassignments.parameters[4].$ref: '#/parameters/prettyPrint'
paths./customer/{customer}/roleassignments.parameters[5].$ref: '#/parameters/quotaUser'
paths./customer/{customer}/roleassignments.parameters[6].$ref: '#/parameters/userIp'
paths./customer/{customer}/roleassignments.post.description: Creates a role assignment.
paths./customer/{customer}/roleassignments.post.operationId: directory.roleAssignments.insert
paths./customer/{customer}/roleassignments.post.parameters.length: 2
paths./customer/{customer}/roleassignments.post.parameters[0].in: body
paths./customer/{customer}/roleassignments.post.parameters[0].name: body
paths./customer/{customer}/roleassignments.post.parameters[0].schema.$ref: '#/definitions/RoleAssignment'
paths./customer/{customer}/roleassignments.post.parameters[1].description: Immutable
  ID of the G Suite account.
paths./customer/{customer}/roleassignments.post.parameters[1].in: path
paths./customer/{customer}/roleassignments.post.parameters[1].name: customer
paths./customer/{customer}/roleassignments.post.parameters[1].required: true
paths./customer/{customer}/roleassignments.post.parameters[1].type: string
paths./customer/{customer}/roleassignments.post.responses.200.description: Successful
  response
paths./customer/{customer}/roleassignments.post.responses.200.schema.$ref: '#/definitions/RoleAssignment'
paths./customer/{customer}/roleassignments.post.security.length: 1
paths./customer/{customer}/roleassignments.post.security[0].Oauth2.length: 1
paths./customer/{customer}/roleassignments.post.security[0].Oauth2[0]: https://www.googleapis.com/auth/admin.directory.rolemanagement
paths./customer/{customer}/roleassignments.post.tags.length: 1
paths./customer/{customer}/roleassignments.post.tags[0]: roleAssignments
paths./customer/{customer}/roleassignments/{roleAssignmentId}.delete.description: Deletes
  a role assignment.
paths./customer/{customer}/roleassignments/{roleAssignmentId}.delete.operationId: directory.roleAssignments.delete
paths./customer/{customer}/roleassignments/{roleAssignmentId}.delete.parameters.length: 2
paths./customer/{customer}/roleassignments/{roleAssignmentId}.delete.parameters[0].description: Immutable
  ID of the G Suite account.
paths./customer/{customer}/roleassignments/{roleAssignmentId}.delete.parameters[0].in: path
paths./customer/{customer}/roleassignments/{roleAssignmentId}.delete.parameters[0].name: customer
paths./customer/{customer}/roleassignments/{roleAssignmentId}.delete.parameters[0].required: true
paths./customer/{customer}/roleassignments/{roleAssignmentId}.delete.parameters[0].type: string
paths./customer/{customer}/roleassignments/{roleAssignmentId}.delete.parameters[1].description: Immutable
  ID of the role assignment.
paths./customer/{customer}/roleassignments/{roleAssignmentId}.delete.parameters[1].in: path
paths./customer/{customer}/roleassignments/{roleAssignmentId}.delete.parameters[1].name: roleAssignmentId
paths./customer/{customer}/roleassignments/{roleAssignmentId}.delete.parameters[1].required: true
paths./customer/{customer}/roleassignments/{roleAssignmentId}.delete.parameters[1].type: string
paths./customer/{customer}/roleassignments/{roleAssignmentId}.delete.responses.200.description: Successful
  response
paths./customer/{customer}/roleassignments/{roleAssignmentId}.delete.security.length: 1
paths./customer/{customer}/roleassignments/{roleAssignmentId}.delete.security[0].Oauth2.length: 1
paths./customer/{customer}/roleassignments/{roleAssignmentId}.delete.security[0].Oauth2[0]: https://www.googleapis.com/auth/admin.directory.rolemanagement
paths./customer/{customer}/roleassignments/{roleAssignmentId}.delete.tags.length: 1
paths./customer/{customer}/roleassignments/{roleAssignmentId}.delete.tags[0]: roleAssignments
paths./customer/{customer}/roleassignments/{roleAssignmentId}.get.description: Retrieve
  a role assignment.
paths./customer/{customer}/roleassignments/{roleAssignmentId}.get.operationId: directory.roleAssignments.get
paths./customer/{customer}/roleassignments/{roleAssignmentId}.get.parameters.length: 2
paths./customer/{customer}/roleassignments/{roleAssignmentId}.get.parameters[0].description: Immutable
  ID of the G Suite account.
paths./customer/{customer}/roleassignments/{roleAssignmentId}.get.parameters[0].in: path
paths./customer/{customer}/roleassignments/{roleAssignmentId}.get.parameters[0].name: customer
paths./customer/{customer}/roleassignments/{roleAssignmentId}.get.parameters[0].required: true
paths./customer/{customer}/roleassignments/{roleAssignmentId}.get.parameters[0].type: string
paths./customer/{customer}/roleassignments/{roleAssignmentId}.get.parameters[1].description: Immutable
  ID of the role assignment.
paths./customer/{customer}/roleassignments/{roleAssignmentId}.get.parameters[1].in: path
paths./customer/{customer}/roleassignments/{roleAssignmentId}.get.parameters[1].name: roleAssignmentId
paths./customer/{customer}/roleassignments/{roleAssignmentId}.get.parameters[1].required: true
paths./customer/{customer}/roleassignments/{roleAssignmentId}.get.parameters[1].type: string
paths./customer/{customer}/roleassignments/{roleAssignmentId}.get.responses.200.description: Successful
  response
paths./customer/{customer}/roleassignments/{roleAssignmentId}.get.responses.200.schema.$ref: '#/definitions/RoleAssignment'
paths./customer/{customer}/roleassignments/{roleAssignmentId}.get.security.length: 2
paths./customer/{customer}/roleassignments/{roleAssignmentId}.get.security[0].Oauth2.length: 1
paths./customer/{customer}/roleassignments/{roleAssignmentId}.get.security[0].Oauth2[0]: https://www.googleapis.com/auth/admin.directory.rolemanagement
paths./customer/{customer}/roleassignments/{roleAssignmentId}.get.security[1].Oauth2.length: 1
paths./customer/{customer}/roleassignments/{roleAssignmentId}.get.security[1].Oauth2[0]: https://www.googleapis.com/auth/admin.directory.rolemanagement.readonly
paths./customer/{customer}/roleassignments/{roleAssignmentId}.get.tags.length: 1
paths./customer/{customer}/roleassignments/{roleAssignmentId}.get.tags[0]: roleAssignments
paths./customer/{customer}/roleassignments/{roleAssignmentId}.parameters.length: 7
paths./customer/{customer}/roleassignments/{roleAssignmentId}.parameters[0].$ref: '#/parameters/alt'
paths./customer/{customer}/roleassignments/{roleAssignmentId}.parameters[1].$ref: '#/parameters/fields'
paths./customer/{customer}/roleassignments/{roleAssignmentId}.parameters[2].$ref: '#/parameters/key'
paths./customer/{customer}/roleassignments/{roleAssignmentId}.parameters[3].$ref: '#/parameters/oauth_token'
paths./customer/{customer}/roleassignments/{roleAssignmentId}.parameters[4].$ref: '#/parameters/prettyPrint'
paths./customer/{customer}/roleassignments/{roleAssignmentId}.parameters[5].$ref: '#/parameters/quotaUser'
paths./customer/{customer}/roleassignments/{roleAssignmentId}.parameters[6].$ref: '#/parameters/userIp'
paths./customer/{customer}/roles.get.description: Retrieves a paginated list of all
  the roles in a domain.
paths./customer/{customer}/roles.get.operationId: directory.roles.list
paths./customer/{customer}/roles.get.parameters.length: 3
paths./customer/{customer}/roles.get.parameters[0].description: Immutable ID of the
  G Suite account.
paths./customer/{customer}/roles.get.parameters[0].in: path
paths./customer/{customer}/roles.get.parameters[0].name: customer
paths./customer/{customer}/roles.get.parameters[0].required: true
paths./customer/{customer}/roles.get.parameters[0].type: string
paths./customer/{customer}/roles.get.parameters[1].description: Maximum number of
  results to return.
paths./customer/{customer}/roles.get.parameters[1].in: query
paths./customer/{customer}/roles.get.parameters[1].maximum: 100
paths./customer/{customer}/roles.get.parameters[1].minimum: 1
paths./customer/{customer}/roles.get.parameters[1].name: maxResults
paths./customer/{customer}/roles.get.parameters[1].type: integer
paths./customer/{customer}/roles.get.parameters[2].description: Token to specify the
  next page in the list.
paths./customer/{customer}/roles.get.parameters[2].in: query
paths./customer/{customer}/roles.get.parameters[2].name: pageToken
paths./customer/{customer}/roles.get.parameters[2].type: string
paths./customer/{customer}/roles.get.responses.200.description: Successful response
paths./customer/{customer}/roles.get.responses.200.schema.$ref: '#/definitions/Roles'
paths./customer/{customer}/roles.get.security.length: 2
paths./customer/{customer}/roles.get.security[0].Oauth2.length: 1
paths./customer/{customer}/roles.get.security[0].Oauth2[0]: https://www.googleapis.com/auth/admin.directory.rolemanagement
paths./customer/{customer}/roles.get.security[1].Oauth2.length: 1
paths./customer/{customer}/roles.get.security[1].Oauth2[0]: https://www.googleapis.com/auth/admin.directory.rolemanagement.readonly
paths./customer/{customer}/roles.get.tags.length: 1
paths./customer/{customer}/roles.get.tags[0]: roles
paths./customer/{customer}/roles.parameters.length: 7
paths./customer/{customer}/roles.parameters[0].$ref: '#/parameters/alt'
paths./customer/{customer}/roles.parameters[1].$ref: '#/parameters/fields'
paths./customer/{customer}/roles.parameters[2].$ref: '#/parameters/key'
paths./customer/{customer}/roles.parameters[3].$ref: '#/parameters/oauth_token'
paths./customer/{customer}/roles.parameters[4].$ref: '#/parameters/prettyPrint'
paths./customer/{customer}/roles.parameters[5].$ref: '#/parameters/quotaUser'
paths./customer/{customer}/roles.parameters[6].$ref: '#/parameters/userIp'
paths./customer/{customer}/roles.post.description: Creates a role.
paths./customer/{customer}/roles.post.operationId: directory.roles.insert
paths./customer/{customer}/roles.post.parameters.length: 2
paths./customer/{customer}/roles.post.parameters[0].in: body
paths./customer/{customer}/roles.post.parameters[0].name: body
paths./customer/{customer}/roles.post.parameters[0].schema.$ref: '#/definitions/Role'
paths./customer/{customer}/roles.post.parameters[1].description: Immutable ID of the
  G Suite account.
paths./customer/{customer}/roles.post.parameters[1].in: path
paths./customer/{customer}/roles.post.parameters[1].name: customer
paths./customer/{customer}/roles.post.parameters[1].required: true
paths./customer/{customer}/roles.post.parameters[1].type: string
paths./customer/{customer}/roles.post.responses.200.description: Successful response
paths./customer/{customer}/roles.post.responses.200.schema.$ref: '#/definitions/Role'
paths./customer/{customer}/roles.post.security.length: 1
paths./customer/{customer}/roles.post.security[0].Oauth2.length: 1
paths./customer/{customer}/roles.post.security[0].Oauth2[0]: https://www.googleapis.com/auth/admin.directory.rolemanagement
paths./customer/{customer}/roles.post.tags.length: 1
paths./customer/{customer}/roles.post.tags[0]: roles
paths./customer/{customer}/roles/{roleId}.delete.description: Deletes a role.
paths./customer/{customer}/roles/{roleId}.delete.operationId: directory.roles.delete
paths./customer/{customer}/roles/{roleId}.delete.parameters.length: 2
paths./customer/{customer}/roles/{roleId}.delete.parameters[0].description: Immutable
  ID of the G Suite account.
paths./customer/{customer}/roles/{roleId}.delete.parameters[0].in: path
paths./customer/{customer}/roles/{roleId}.delete.parameters[0].name: customer
paths./customer/{customer}/roles/{roleId}.delete.parameters[0].required: true
paths./customer/{customer}/roles/{roleId}.delete.parameters[0].type: string
paths./customer/{customer}/roles/{roleId}.delete.parameters[1].description: Immutable
  ID of the role.
paths./customer/{customer}/roles/{roleId}.delete.parameters[1].in: path
paths./customer/{customer}/roles/{roleId}.delete.parameters[1].name: roleId
paths./customer/{customer}/roles/{roleId}.delete.parameters[1].required: true
paths./customer/{customer}/roles/{roleId}.delete.parameters[1].type: string
paths./customer/{customer}/roles/{roleId}.delete.responses.200.description: Successful
  response
paths./customer/{customer}/roles/{roleId}.delete.security.length: 1
paths./customer/{customer}/roles/{roleId}.delete.security[0].Oauth2.length: 1
paths./customer/{customer}/roles/{roleId}.delete.security[0].Oauth2[0]: https://www.googleapis.com/auth/admin.directory.rolemanagement
paths./customer/{customer}/roles/{roleId}.delete.tags.length: 1
paths./customer/{customer}/roles/{roleId}.delete.tags[0]: roles
paths./customer/{customer}/roles/{roleId}.get.description: Retrieves a role.
paths./customer/{customer}/roles/{roleId}.get.operationId: directory.roles.get
paths./customer/{customer}/roles/{roleId}.get.parameters.length: 2
paths./customer/{customer}/roles/{roleId}.get.parameters[0].description: Immutable
  ID of the G Suite account.
paths./customer/{customer}/roles/{roleId}.get.parameters[0].in: path
paths./customer/{customer}/roles/{roleId}.get.parameters[0].name: customer
paths./customer/{customer}/roles/{roleId}.get.parameters[0].required: true
paths./customer/{customer}/roles/{roleId}.get.parameters[0].type: string
paths./customer/{customer}/roles/{roleId}.get.parameters[1].description: Immutable
  ID of the role.
paths./customer/{customer}/roles/{roleId}.get.parameters[1].in: path
paths./customer/{customer}/roles/{roleId}.get.parameters[1].name: roleId
paths./customer/{customer}/roles/{roleId}.get.parameters[1].required: true
paths./customer/{customer}/roles/{roleId}.get.parameters[1].type: string
paths./customer/{customer}/roles/{roleId}.get.responses.200.description: Successful
  response
paths./customer/{customer}/roles/{roleId}.get.responses.200.schema.$ref: '#/definitions/Role'
paths./customer/{customer}/roles/{roleId}.get.security.length: 2
paths./customer/{customer}/roles/{roleId}.get.security[0].Oauth2.length: 1
paths./customer/{customer}/roles/{roleId}.get.security[0].Oauth2[0]: https://www.googleapis.com/auth/admin.directory.rolemanagement
paths./customer/{customer}/roles/{roleId}.get.security[1].Oauth2.length: 1
paths./customer/{customer}/roles/{roleId}.get.security[1].Oauth2[0]: https://www.googleapis.com/auth/admin.directory.rolemanagement.readonly
paths./customer/{customer}/roles/{roleId}.get.tags.length: 1
paths./customer/{customer}/roles/{roleId}.get.tags[0]: roles
paths./customer/{customer}/roles/{roleId}.parameters.length: 7
paths./customer/{customer}/roles/{roleId}.parameters[0].$ref: '#/parameters/alt'
paths./customer/{customer}/roles/{roleId}.parameters[1].$ref: '#/parameters/fields'
paths./customer/{customer}/roles/{roleId}.parameters[2].$ref: '#/parameters/key'
paths./customer/{customer}/roles/{roleId}.parameters[3].$ref: '#/parameters/oauth_token'
paths./customer/{customer}/roles/{roleId}.parameters[4].$ref: '#/parameters/prettyPrint'
paths./customer/{customer}/roles/{roleId}.parameters[5].$ref: '#/parameters/quotaUser'
paths./customer/{customer}/roles/{roleId}.parameters[6].$ref: '#/parameters/userIp'
paths./customer/{customer}/roles/{roleId}.patch.description: Updates a role. This
  method supports patch semantics.
paths./customer/{customer}/roles/{roleId}.patch.operationId: directory.roles.patch
paths./customer/{customer}/roles/{roleId}.patch.parameters.length: 3
paths./customer/{customer}/roles/{roleId}.patch.parameters[0].in: body
paths./customer/{customer}/roles/{roleId}.patch.parameters[0].name: body
paths./customer/{customer}/roles/{roleId}.patch.parameters[0].schema.$ref: '#/definitions/Role'
paths./customer/{customer}/roles/{roleId}.patch.parameters[1].description: Immutable
  ID of the G Suite account.
paths./customer/{customer}/roles/{roleId}.patch.parameters[1].in: path
paths./customer/{customer}/roles/{roleId}.patch.parameters[1].name: customer
paths./customer/{customer}/roles/{roleId}.patch.parameters[1].required: true
paths./customer/{customer}/roles/{roleId}.patch.parameters[1].type: string
paths./customer/{customer}/roles/{roleId}.patch.parameters[2].description: Immutable
  ID of the role.
paths./customer/{customer}/roles/{roleId}.patch.parameters[2].in: path
paths./customer/{customer}/roles/{roleId}.patch.parameters[2].name: roleId
paths./customer/{customer}/roles/{roleId}.patch.parameters[2].required: true
paths./customer/{customer}/roles/{roleId}.patch.parameters[2].type: string
paths./customer/{customer}/roles/{roleId}.patch.responses.200.description: Successful
  response
paths./customer/{customer}/roles/{roleId}.patch.responses.200.schema.$ref: '#/definitions/Role'
paths./customer/{customer}/roles/{roleId}.patch.security.length: 1
paths./customer/{customer}/roles/{roleId}.patch.security[0].Oauth2.length: 1
paths./customer/{customer}/roles/{roleId}.patch.security[0].Oauth2[0]: https://www.googleapis.com/auth/admin.directory.rolemanagement
paths./customer/{customer}/roles/{roleId}.patch.tags.length: 1
paths./customer/{customer}/roles/{roleId}.patch.tags[0]: roles
paths./customer/{customer}/roles/{roleId}.put.description: Updates a role.
paths./customer/{customer}/roles/{roleId}.put.operationId: directory.roles.update
paths./customer/{customer}/roles/{roleId}.put.parameters.length: 3
paths./customer/{customer}/roles/{roleId}.put.parameters[0].in: body
paths./customer/{customer}/roles/{roleId}.put.parameters[0].name: body
paths./customer/{customer}/roles/{roleId}.put.parameters[0].schema.$ref: '#/definitions/Role'
paths./customer/{customer}/roles/{roleId}.put.parameters[1].description: Immutable
  ID of the G Suite account.
paths./customer/{customer}/roles/{roleId}.put.parameters[1].in: path
paths./customer/{customer}/roles/{roleId}.put.parameters[1].name: customer
paths./customer/{customer}/roles/{roleId}.put.parameters[1].required: true
paths./customer/{customer}/roles/{roleId}.put.parameters[1].type: string
paths./customer/{customer}/roles/{roleId}.put.parameters[2].description: Immutable
  ID of the role.
paths./customer/{customer}/roles/{roleId}.put.parameters[2].in: path
paths./customer/{customer}/roles/{roleId}.put.parameters[2].name: roleId
paths./customer/{customer}/roles/{roleId}.put.parameters[2].required: true
paths./customer/{customer}/roles/{roleId}.put.parameters[2].type: string
paths./customer/{customer}/roles/{roleId}.put.responses.200.description: Successful
  response
paths./customer/{customer}/roles/{roleId}.put.responses.200.schema.$ref: '#/definitions/Role'
paths./customer/{customer}/roles/{roleId}.put.security.length: 1
paths./customer/{customer}/roles/{roleId}.put.security[0].Oauth2.length: 1
paths./customer/{customer}/roles/{roleId}.put.security[0].Oauth2[0]: https://www.googleapis.com/auth/admin.directory.rolemanagement
paths./customer/{customer}/roles/{roleId}.put.tags.length: 1
paths./customer/{customer}/roles/{roleId}.put.tags[0]: roles
paths./customer/{customer}/roles/ALL/privileges.get.description: Retrieves a paginated
  list of all privileges for a customer.
paths./customer/{customer}/roles/ALL/privileges.get.operationId: directory.privileges.list
paths./customer/{customer}/roles/ALL/privileges.get.parameters.length: 1
paths./customer/{customer}/roles/ALL/privileges.get.parameters[0].description: Immutable
  ID of the G Suite account.
paths./customer/{customer}/roles/ALL/privileges.get.parameters[0].in: path
paths./customer/{customer}/roles/ALL/privileges.get.parameters[0].name: customer
paths./customer/{customer}/roles/ALL/privileges.get.parameters[0].required: true
paths./customer/{customer}/roles/ALL/privileges.get.parameters[0].type: string
paths./customer/{customer}/roles/ALL/privileges.get.responses.200.description: Successful
  response
paths./customer/{customer}/roles/ALL/privileges.get.responses.200.schema.$ref: '#/definitions/Privileges'
paths./customer/{customer}/roles/ALL/privileges.get.security.length: 2
paths./customer/{customer}/roles/ALL/privileges.get.security[0].Oauth2.length: 1
paths./customer/{customer}/roles/ALL/privileges.get.security[0].Oauth2[0]: https://www.googleapis.com/auth/admin.directory.rolemanagement
paths./customer/{customer}/roles/ALL/privileges.get.security[1].Oauth2.length: 1
paths./customer/{customer}/roles/ALL/privileges.get.security[1].Oauth2[0]: https://www.googleapis.com/auth/admin.directory.rolemanagement.readonly
paths./customer/{customer}/roles/ALL/privileges.get.tags.length: 1
paths./customer/{customer}/roles/ALL/privileges.get.tags[0]: privileges
paths./customer/{customer}/roles/ALL/privileges.parameters.length: 7
paths./customer/{customer}/roles/ALL/privileges.parameters[0].$ref: '#/parameters/alt'
paths./customer/{customer}/roles/ALL/privileges.parameters[1].$ref: '#/parameters/fields'
paths./customer/{customer}/roles/ALL/privileges.parameters[2].$ref: '#/parameters/key'
paths./customer/{customer}/roles/ALL/privileges.parameters[3].$ref: '#/parameters/oauth_token'
paths./customer/{customer}/roles/ALL/privileges.parameters[4].$ref: '#/parameters/prettyPrint'
paths./customer/{customer}/roles/ALL/privileges.parameters[5].$ref: '#/parameters/quotaUser'
paths./customer/{customer}/roles/ALL/privileges.parameters[6].$ref: '#/parameters/userIp'
paths./customer/{customerId}/devices/chromeos.get.description: Retrieve all Chrome
  OS Devices of a customer (paginated)
paths./customer/{customerId}/devices/chromeos.get.operationId: directory.chromeosdevices.list
paths./customer/{customerId}/devices/chromeos.get.parameters.length: 8
paths./customer/{customerId}/devices/chromeos.get.parameters[0].description: Immutable
  ID of the G Suite account
paths./customer/{customerId}/devices/chromeos.get.parameters[0].in: path
paths./customer/{customerId}/devices/chromeos.get.parameters[0].name: customerId
paths./customer/{customerId}/devices/chromeos.get.parameters[0].required: true
paths./customer/{customerId}/devices/chromeos.get.parameters[0].type: string
paths./customer/{customerId}/devices/chromeos.get.parameters[1].description: Maximum
  number of results to return. Default is 100
paths./customer/{customerId}/devices/chromeos.get.parameters[1].in: query
paths./customer/{customerId}/devices/chromeos.get.parameters[1].minimum: 1
paths./customer/{customerId}/devices/chromeos.get.parameters[1].name: maxResults
paths./customer/{customerId}/devices/chromeos.get.parameters[1].type: integer
paths./customer/{customerId}/devices/chromeos.get.parameters[2].description: Column
  to use for sorting results
paths./customer/{customerId}/devices/chromeos.get.parameters[2].enum.length: 7
paths./customer/{customerId}/devices/chromeos.get.parameters[2].enum[0]: annotatedLocation
paths./customer/{customerId}/devices/chromeos.get.parameters[2].enum[1]: annotatedUser
paths./customer/{customerId}/devices/chromeos.get.parameters[2].enum[2]: lastSync
paths./customer/{customerId}/devices/chromeos.get.parameters[2].enum[3]: notes
paths./customer/{customerId}/devices/chromeos.get.parameters[2].enum[4]: serialNumber
paths./customer/{customerId}/devices/chromeos.get.parameters[2].enum[5]: status
paths./customer/{customerId}/devices/chromeos.get.parameters[2].enum[6]: supportEndDate
paths./customer/{customerId}/devices/chromeos.get.parameters[2].in: query
paths./customer/{customerId}/devices/chromeos.get.parameters[2].name: orderBy
paths./customer/{customerId}/devices/chromeos.get.parameters[2].type: string
paths./customer/{customerId}/devices/chromeos.get.parameters[3].description: Full
  path of the organization unit or its Id
paths./customer/{customerId}/devices/chromeos.get.parameters[3].in: query
paths./customer/{customerId}/devices/chromeos.get.parameters[3].name: orgUnitPath
paths./customer/{customerId}/devices/chromeos.get.parameters[3].type: string
paths./customer/{customerId}/devices/chromeos.get.parameters[4].description: Token
  to specify next page in the list
paths./customer/{customerId}/devices/chromeos.get.parameters[4].in: query
paths./customer/{customerId}/devices/chromeos.get.parameters[4].name: pageToken
paths./customer/{customerId}/devices/chromeos.get.parameters[4].type: string
paths./customer/{customerId}/devices/chromeos.get.parameters[5].description: Restrict
  information returned to a set of selected fields.
paths./customer/{customerId}/devices/chromeos.get.parameters[5].enum.length: 2
paths./customer/{customerId}/devices/chromeos.get.parameters[5].enum[0]: BASIC
paths./customer/{customerId}/devices/chromeos.get.parameters[5].enum[1]: FULL
paths./customer/{customerId}/devices/chromeos.get.parameters[5].in: query
paths./customer/{customerId}/devices/chromeos.get.parameters[5].name: projection
paths./customer/{customerId}/devices/chromeos.get.parameters[5].type: string
paths./customer/{customerId}/devices/chromeos.get.parameters[6].description: Search
  string in the format given at http://support.google.com/chromeos/a/bin/answer.py?hl=en&answer=1698333
paths./customer/{customerId}/devices/chromeos.get.parameters[6].in: query
paths./customer/{customerId}/devices/chromeos.get.parameters[6].name: query
paths./customer/{customerId}/devices/chromeos.get.parameters[6].type: string
paths./customer/{customerId}/devices/chromeos.get.parameters[7].description: Whether
  to return results in ascending or descending order. Only of use when orderBy is
  also used
paths./customer/{customerId}/devices/chromeos.get.parameters[7].enum.length: 2
paths./customer/{customerId}/devices/chromeos.get.parameters[7].enum[0]: ASCENDING
paths./customer/{customerId}/devices/chromeos.get.parameters[7].enum[1]: DESCENDING
paths./customer/{customerId}/devices/chromeos.get.parameters[7].in: query
paths./customer/{customerId}/devices/chromeos.get.parameters[7].name: sortOrder
paths./customer/{customerId}/devices/chromeos.get.parameters[7].type: string
paths./customer/{customerId}/devices/chromeos.get.responses.200.description: Successful
  response
paths./customer/{customerId}/devices/chromeos.get.responses.200.schema.$ref: '#/definitions/ChromeOsDevices'
paths./customer/{customerId}/devices/chromeos.get.security.length: 2
paths./customer/{customerId}/devices/chromeos.get.security[0].Oauth2.length: 1
paths./customer/{customerId}/devices/chromeos.get.security[0].Oauth2[0]: https://www.googleapis.com/auth/admin.directory.device.chromeos
paths./customer/{customerId}/devices/chromeos.get.security[1].Oauth2.length: 1
paths./customer/{customerId}/devices/chromeos.get.security[1].Oauth2[0]: https://www.googleapis.com/auth/admin.directory.device.chromeos.readonly
paths./customer/{customerId}/devices/chromeos.get.tags.length: 1
paths./customer/{customerId}/devices/chromeos.get.tags[0]: chromeosdevices
paths./customer/{customerId}/devices/chromeos.parameters.length: 7
paths./customer/{customerId}/devices/chromeos.parameters[0].$ref: '#/parameters/alt'
paths./customer/{customerId}/devices/chromeos.parameters[1].$ref: '#/parameters/fields'
paths./customer/{customerId}/devices/chromeos.parameters[2].$ref: '#/parameters/key'
paths./customer/{customerId}/devices/chromeos.parameters[3].$ref: '#/parameters/oauth_token'
paths./customer/{customerId}/devices/chromeos.parameters[4].$ref: '#/parameters/prettyPrint'
paths./customer/{customerId}/devices/chromeos.parameters[5].$ref: '#/parameters/quotaUser'
paths./customer/{customerId}/devices/chromeos.parameters[6].$ref: '#/parameters/userIp'
paths./customer/{customerId}/devices/chromeos/{deviceId}.get.description: Retrieve
  Chrome OS Device
paths./customer/{customerId}/devices/chromeos/{deviceId}.get.operationId: directory.chromeosdevices.get
paths./customer/{customerId}/devices/chromeos/{deviceId}.get.parameters.length: 3
paths./customer/{customerId}/devices/chromeos/{deviceId}.get.parameters[0].description: Immutable
  ID of the G Suite account
paths./customer/{customerId}/devices/chromeos/{deviceId}.get.parameters[0].in: path
paths./customer/{customerId}/devices/chromeos/{deviceId}.get.parameters[0].name: customerId
paths./customer/{customerId}/devices/chromeos/{deviceId}.get.parameters[0].required: true
paths./customer/{customerId}/devices/chromeos/{deviceId}.get.parameters[0].type: string
paths./customer/{customerId}/devices/chromeos/{deviceId}.get.parameters[1].description: Immutable
  ID of Chrome OS Device
paths./customer/{customerId}/devices/chromeos/{deviceId}.get.parameters[1].in: path
paths./customer/{customerId}/devices/chromeos/{deviceId}.get.parameters[1].name: deviceId
paths./customer/{customerId}/devices/chromeos/{deviceId}.get.parameters[1].required: true
paths./customer/{customerId}/devices/chromeos/{deviceId}.get.parameters[1].type: string
paths./customer/{customerId}/devices/chromeos/{deviceId}.get.parameters[2].description: Restrict
  information returned to a set of selected fields.
paths./customer/{customerId}/devices/chromeos/{deviceId}.get.parameters[2].enum.length: 2
paths./customer/{customerId}/devices/chromeos/{deviceId}.get.parameters[2].enum[0]: BASIC
paths./customer/{customerId}/devices/chromeos/{deviceId}.get.parameters[2].enum[1]: FULL
paths./customer/{customerId}/devices/chromeos/{deviceId}.get.parameters[2].in: query
paths./customer/{customerId}/devices/chromeos/{deviceId}.get.parameters[2].name: projection
paths./customer/{customerId}/devices/chromeos/{deviceId}.get.parameters[2].type: string
paths./customer/{customerId}/devices/chromeos/{deviceId}.get.responses.200.description: Successful
  response
paths./customer/{customerId}/devices/chromeos/{deviceId}.get.responses.200.schema.$ref: '#/definitions/ChromeOsDevice'
paths./customer/{customerId}/devices/chromeos/{deviceId}.get.security.length: 2
paths./customer/{customerId}/devices/chromeos/{deviceId}.get.security[0].Oauth2.length: 1
paths./customer/{customerId}/devices/chromeos/{deviceId}.get.security[0].Oauth2[0]: https://www.googleapis.com/auth/admin.directory.device.chromeos
paths./customer/{customerId}/devices/chromeos/{deviceId}.get.security[1].Oauth2.length: 1
paths./customer/{customerId}/devices/chromeos/{deviceId}.get.security[1].Oauth2[0]: https://www.googleapis.com/auth/admin.directory.device.chromeos.readonly
paths./customer/{customerId}/devices/chromeos/{deviceId}.get.tags.length: 1
paths./customer/{customerId}/devices/chromeos/{deviceId}.get.tags[0]: chromeosdevices
paths./customer/{customerId}/devices/chromeos/{deviceId}.parameters.length: 7
paths./customer/{customerId}/devices/chromeos/{deviceId}.parameters[0].$ref: '#/parameters/alt'
paths./customer/{customerId}/devices/chromeos/{deviceId}.parameters[1].$ref: '#/parameters/fields'
paths./customer/{customerId}/devices/chromeos/{deviceId}.parameters[2].$ref: '#/parameters/key'
paths./customer/{customerId}/devices/chromeos/{deviceId}.parameters[3].$ref: '#/parameters/oauth_token'
paths./customer/{customerId}/devices/chromeos/{deviceId}.parameters[4].$ref: '#/parameters/prettyPrint'
paths./customer/{customerId}/devices/chromeos/{deviceId}.parameters[5].$ref: '#/parameters/quotaUser'
paths./customer/{customerId}/devices/chromeos/{deviceId}.parameters[6].$ref: '#/parameters/userIp'
paths./customer/{customerId}/devices/chromeos/{deviceId}.patch.description: Update
  Chrome OS Device. This method supports patch semantics.
paths./customer/{customerId}/devices/chromeos/{deviceId}.patch.operationId: directory.chromeosdevices.patch
paths./customer/{customerId}/devices/chromeos/{deviceId}.patch.parameters.length: 4
paths./customer/{customerId}/devices/chromeos/{deviceId}.patch.parameters[0].in: body
paths./customer/{customerId}/devices/chromeos/{deviceId}.patch.parameters[0].name: body
paths./customer/{customerId}/devices/chromeos/{deviceId}.patch.parameters[0].schema.$ref: '#/definitions/ChromeOsDevice'
paths./customer/{customerId}/devices/chromeos/{deviceId}.patch.parameters[1].description: Immutable
  ID of the G Suite account
paths./customer/{customerId}/devices/chromeos/{deviceId}.patch.parameters[1].in: path
paths./customer/{customerId}/devices/chromeos/{deviceId}.patch.parameters[1].name: customerId
paths./customer/{customerId}/devices/chromeos/{deviceId}.patch.parameters[1].required: true
paths./customer/{customerId}/devices/chromeos/{deviceId}.patch.parameters[1].type: string
paths./customer/{customerId}/devices/chromeos/{deviceId}.patch.parameters[2].description: Immutable
  ID of Chrome OS Device
paths./customer/{customerId}/devices/chromeos/{deviceId}.patch.parameters[2].in: path
paths./customer/{customerId}/devices/chromeos/{deviceId}.patch.parameters[2].name: deviceId
paths./customer/{customerId}/devices/chromeos/{deviceId}.patch.parameters[2].required: true
paths./customer/{customerId}/devices/chromeos/{deviceId}.patch.parameters[2].type: string
paths./customer/{customerId}/devices/chromeos/{deviceId}.patch.parameters[3].description: Restrict
  information returned to a set of selected fields.
paths./customer/{customerId}/devices/chromeos/{deviceId}.patch.parameters[3].enum.length: 2
paths./customer/{customerId}/devices/chromeos/{deviceId}.patch.parameters[3].enum[0]: BASIC
paths./customer/{customerId}/devices/chromeos/{deviceId}.patch.parameters[3].enum[1]: FULL
paths./customer/{customerId}/devices/chromeos/{deviceId}.patch.parameters[3].in: query
paths./customer/{customerId}/devices/chromeos/{deviceId}.patch.parameters[3].name: projection
paths./customer/{customerId}/devices/chromeos/{deviceId}.patch.parameters[3].type: string
paths./customer/{customerId}/devices/chromeos/{deviceId}.patch.responses.200.description: Successful
  response
paths./customer/{customerId}/devices/chromeos/{deviceId}.patch.responses.200.schema.$ref: '#/definitions/ChromeOsDevice'
paths./customer/{customerId}/devices/chromeos/{deviceId}.patch.security.length: 1
paths./customer/{customerId}/devices/chromeos/{deviceId}.patch.security[0].Oauth2.length: 1
paths./customer/{customerId}/devices/chromeos/{deviceId}.patch.security[0].Oauth2[0]: https://www.googleapis.com/auth/admin.directory.device.chromeos
paths./customer/{customerId}/devices/chromeos/{deviceId}.patch.tags.length: 1
paths./customer/{customerId}/devices/chromeos/{deviceId}.patch.tags[0]: chromeosdevices
paths./customer/{customerId}/devices/chromeos/{deviceId}.put.description: Update Chrome
  OS Device
paths./customer/{customerId}/devices/chromeos/{deviceId}.put.operationId: directory.chromeosdevices.update
paths./customer/{customerId}/devices/chromeos/{deviceId}.put.parameters.length: 4
paths./customer/{customerId}/devices/chromeos/{deviceId}.put.parameters[0].in: body
paths./customer/{customerId}/devices/chromeos/{deviceId}.put.parameters[0].name: body
paths./customer/{customerId}/devices/chromeos/{deviceId}.put.parameters[0].schema.$ref: '#/definitions/ChromeOsDevice'
paths./customer/{customerId}/devices/chromeos/{deviceId}.put.parameters[1].description: Immutable
  ID of the G Suite account
paths./customer/{customerId}/devices/chromeos/{deviceId}.put.parameters[1].in: path
paths./customer/{customerId}/devices/chromeos/{deviceId}.put.parameters[1].name: customerId
paths./customer/{customerId}/devices/chromeos/{deviceId}.put.parameters[1].required: true
paths./customer/{customerId}/devices/chromeos/{deviceId}.put.parameters[1].type: string
paths./customer/{customerId}/devices/chromeos/{deviceId}.put.parameters[2].description: Immutable
  ID of Chrome OS Device
paths./customer/{customerId}/devices/chromeos/{deviceId}.put.parameters[2].in: path
paths./customer/{customerId}/devices/chromeos/{deviceId}.put.parameters[2].name: deviceId
paths./customer/{customerId}/devices/chromeos/{deviceId}.put.parameters[2].required: true
paths./customer/{customerId}/devices/chromeos/{deviceId}.put.parameters[2].type: string
paths./customer/{customerId}/devices/chromeos/{deviceId}.put.parameters[3].description: Restrict
  information returned to a set of selected fields.
paths./customer/{customerId}/devices/chromeos/{deviceId}.put.parameters[3].enum.length: 2
paths./customer/{customerId}/devices/chromeos/{deviceId}.put.parameters[3].enum[0]: BASIC
paths./customer/{customerId}/devices/chromeos/{deviceId}.put.parameters[3].enum[1]: FULL
paths./customer/{customerId}/devices/chromeos/{deviceId}.put.parameters[3].in: query
paths./customer/{customerId}/devices/chromeos/{deviceId}.put.parameters[3].name: projection
paths./customer/{customerId}/devices/chromeos/{deviceId}.put.parameters[3].type: string
paths./customer/{customerId}/devices/chromeos/{deviceId}.put.responses.200.description: Successful
  response
paths./customer/{customerId}/devices/chromeos/{deviceId}.put.responses.200.schema.$ref: '#/definitions/ChromeOsDevice'
paths./customer/{customerId}/devices/chromeos/{deviceId}.put.security.length: 1
paths./customer/{customerId}/devices/chromeos/{deviceId}.put.security[0].Oauth2.length: 1
paths./customer/{customerId}/devices/chromeos/{deviceId}.put.security[0].Oauth2[0]: https://www.googleapis.com/auth/admin.directory.device.chromeos
paths./customer/{customerId}/devices/chromeos/{deviceId}.put.tags.length: 1
paths./customer/{customerId}/devices/chromeos/{deviceId}.put.tags[0]: chromeosdevices
paths./customer/{customerId}/devices/chromeos/{resourceId}/action.parameters.length: 7
paths./customer/{customerId}/devices/chromeos/{resourceId}/action.parameters[0].$ref: '#/parameters/alt'
paths./customer/{customerId}/devices/chromeos/{resourceId}/action.parameters[1].$ref: '#/parameters/fields'
paths./customer/{customerId}/devices/chromeos/{resourceId}/action.parameters[2].$ref: '#/parameters/key'
paths./customer/{customerId}/devices/chromeos/{resourceId}/action.parameters[3].$ref: '#/parameters/oauth_token'
paths./customer/{customerId}/devices/chromeos/{resourceId}/action.parameters[4].$ref: '#/parameters/prettyPrint'
paths./customer/{customerId}/devices/chromeos/{resourceId}/action.parameters[5].$ref: '#/parameters/quotaUser'
paths./customer/{customerId}/devices/chromeos/{resourceId}/action.parameters[6].$ref: '#/parameters/userIp'
paths./customer/{customerId}/devices/chromeos/{resourceId}/action.post.description: Take
  action on Chrome OS Device
paths./customer/{customerId}/devices/chromeos/{resourceId}/action.post.operationId: directory.chromeosdevices.action
paths./customer/{customerId}/devices/chromeos/{resourceId}/action.post.parameters.length: 3
paths./customer/{customerId}/devices/chromeos/{resourceId}/action.post.parameters[0].in: body
paths./customer/{customerId}/devices/chromeos/{resourceId}/action.post.parameters[0].name: body
paths./customer/{customerId}/devices/chromeos/{resourceId}/action.post.parameters[0].schema.$ref: '#/definitions/ChromeOsDeviceAction'
paths./customer/{customerId}/devices/chromeos/{resourceId}/action.post.parameters[1].description: Immutable
  ID of the G Suite account
paths./customer/{customerId}/devices/chromeos/{resourceId}/action.post.parameters[1].in: path
paths./customer/{customerId}/devices/chromeos/{resourceId}/action.post.parameters[1].name: customerId
paths./customer/{customerId}/devices/chromeos/{resourceId}/action.post.parameters[1].required: true
paths./customer/{customerId}/devices/chromeos/{resourceId}/action.post.parameters[1].type: string
paths./customer/{customerId}/devices/chromeos/{resourceId}/action.post.parameters[2].description: Immutable
  ID of Chrome OS Device
paths./customer/{customerId}/devices/chromeos/{resourceId}/action.post.parameters[2].in: path
paths./customer/{customerId}/devices/chromeos/{resourceId}/action.post.parameters[2].name: resourceId
paths./customer/{customerId}/devices/chromeos/{resourceId}/action.post.parameters[2].required: true
paths./customer/{customerId}/devices/chromeos/{resourceId}/action.post.parameters[2].type: string
paths./customer/{customerId}/devices/chromeos/{resourceId}/action.post.responses.200.description: Successful
  response
paths./customer/{customerId}/devices/chromeos/{resourceId}/action.post.security.length: 1
paths./customer/{customerId}/devices/chromeos/{resourceId}/action.post.security[0].Oauth2.length: 1
paths./customer/{customerId}/devices/chromeos/{resourceId}/action.post.security[0].Oauth2[0]: https://www.googleapis.com/auth/admin.directory.device.chromeos
paths./customer/{customerId}/devices/chromeos/{resourceId}/action.post.tags.length: 1
paths./customer/{customerId}/devices/chromeos/{resourceId}/action.post.tags[0]: chromeosdevices
paths./customer/{customerId}/devices/chromeos/moveDevicesToOu.parameters.length: 7
paths./customer/{customerId}/devices/chromeos/moveDevicesToOu.parameters[0].$ref: '#/parameters/alt'
paths./customer/{customerId}/devices/chromeos/moveDevicesToOu.parameters[1].$ref: '#/parameters/fields'
paths./customer/{customerId}/devices/chromeos/moveDevicesToOu.parameters[2].$ref: '#/parameters/key'
paths./customer/{customerId}/devices/chromeos/moveDevicesToOu.parameters[3].$ref: '#/parameters/oauth_token'
paths./customer/{customerId}/devices/chromeos/moveDevicesToOu.parameters[4].$ref: '#/parameters/prettyPrint'
paths./customer/{customerId}/devices/chromeos/moveDevicesToOu.parameters[5].$ref: '#/parameters/quotaUser'
paths./customer/{customerId}/devices/chromeos/moveDevicesToOu.parameters[6].$ref: '#/parameters/userIp'
paths./customer/{customerId}/devices/chromeos/moveDevicesToOu.post.description: Move
  or insert multiple Chrome OS Devices to Organization Unit
paths./customer/{customerId}/devices/chromeos/moveDevicesToOu.post.operationId: directory.chromeosdevices.moveDevicesToOu
paths./customer/{customerId}/devices/chromeos/moveDevicesToOu.post.parameters.length: 3
paths./customer/{customerId}/devices/chromeos/moveDevicesToOu.post.parameters[0].in: body
paths./customer/{customerId}/devices/chromeos/moveDevicesToOu.post.parameters[0].name: body
paths./customer/{customerId}/devices/chromeos/moveDevicesToOu.post.parameters[0].schema.$ref: '#/definitions/ChromeOsMoveDevicesToOu'
paths./customer/{customerId}/devices/chromeos/moveDevicesToOu.post.parameters[1].description: Immutable
  ID of the G Suite account
paths./customer/{customerId}/devices/chromeos/moveDevicesToOu.post.parameters[1].in: path
paths./customer/{customerId}/devices/chromeos/moveDevicesToOu.post.parameters[1].name: customerId
paths./customer/{customerId}/devices/chromeos/moveDevicesToOu.post.parameters[1].required: true
paths./customer/{customerId}/devices/chromeos/moveDevicesToOu.post.parameters[1].type: string
paths./customer/{customerId}/devices/chromeos/moveDevicesToOu.post.parameters[2].description: Full
  path of the target organization unit or its Id
paths./customer/{customerId}/devices/chromeos/moveDevicesToOu.post.parameters[2].in: query
paths./customer/{customerId}/devices/chromeos/moveDevicesToOu.post.parameters[2].name: orgUnitPath
paths./customer/{customerId}/devices/chromeos/moveDevicesToOu.post.parameters[2].required: true
paths./customer/{customerId}/devices/chromeos/moveDevicesToOu.post.parameters[2].type: string
paths./customer/{customerId}/devices/chromeos/moveDevicesToOu.post.responses.200.description: Successful
  response
paths./customer/{customerId}/devices/chromeos/moveDevicesToOu.post.security.length: 1
paths./customer/{customerId}/devices/chromeos/moveDevicesToOu.post.security[0].Oauth2.length: 1
paths./customer/{customerId}/devices/chromeos/moveDevicesToOu.post.security[0].Oauth2[0]: https://www.googleapis.com/auth/admin.directory.device.chromeos
paths./customer/{customerId}/devices/chromeos/moveDevicesToOu.post.tags.length: 1
paths./customer/{customerId}/devices/chromeos/moveDevicesToOu.post.tags[0]: chromeosdevices
paths./customer/{customerId}/devices/mobile.get.description: Retrieve all Mobile Devices
  of a customer (paginated)
paths./customer/{customerId}/devices/mobile.get.operationId: directory.mobiledevices.list
paths./customer/{customerId}/devices/mobile.get.parameters.length: 7
paths./customer/{customerId}/devices/mobile.get.parameters[0].description: Immutable
  ID of the G Suite account
paths./customer/{customerId}/devices/mobile.get.parameters[0].in: path
paths./customer/{customerId}/devices/mobile.get.parameters[0].name: customerId
paths./customer/{customerId}/devices/mobile.get.parameters[0].required: true
paths./customer/{customerId}/devices/mobile.get.parameters[0].type: string
paths./customer/{customerId}/devices/mobile.get.parameters[1].description: Maximum
  number of results to return. Default is 100
paths./customer/{customerId}/devices/mobile.get.parameters[1].in: query
paths./customer/{customerId}/devices/mobile.get.parameters[1].minimum: 1
paths./customer/{customerId}/devices/mobile.get.parameters[1].name: maxResults
paths./customer/{customerId}/devices/mobile.get.parameters[1].type: integer
paths./customer/{customerId}/devices/mobile.get.parameters[2].description: Column
  to use for sorting results
paths./customer/{customerId}/devices/mobile.get.parameters[2].enum.length: 8
paths./customer/{customerId}/devices/mobile.get.parameters[2].enum[0]: deviceId
paths./customer/{customerId}/devices/mobile.get.parameters[2].enum[1]: email
paths./customer/{customerId}/devices/mobile.get.parameters[2].enum[2]: lastSync
paths./customer/{customerId}/devices/mobile.get.parameters[2].enum[3]: model
paths./customer/{customerId}/devices/mobile.get.parameters[2].enum[4]: name
paths./customer/{customerId}/devices/mobile.get.parameters[2].enum[5]: os
paths./customer/{customerId}/devices/mobile.get.parameters[2].enum[6]: status
paths./customer/{customerId}/devices/mobile.get.parameters[2].enum[7]: type
paths./customer/{customerId}/devices/mobile.get.parameters[2].in: query
paths./customer/{customerId}/devices/mobile.get.parameters[2].name: orderBy
paths./customer/{customerId}/devices/mobile.get.parameters[2].type: string
paths./customer/{customerId}/devices/mobile.get.parameters[3].description: Token to
  specify next page in the list
paths./customer/{customerId}/devices/mobile.get.parameters[3].in: query
paths./customer/{customerId}/devices/mobile.get.parameters[3].name: pageToken
paths./customer/{customerId}/devices/mobile.get.parameters[3].type: string
paths./customer/{customerId}/devices/mobile.get.parameters[4].description: Restrict
  information returned to a set of selected fields.
paths./customer/{customerId}/devices/mobile.get.parameters[4].enum.length: 2
paths./customer/{customerId}/devices/mobile.get.parameters[4].enum[0]: BASIC
paths./customer/{customerId}/devices/mobile.get.parameters[4].enum[1]: FULL
paths./customer/{customerId}/devices/mobile.get.parameters[4].in: query
paths./customer/{customerId}/devices/mobile.get.parameters[4].name: projection
paths./customer/{customerId}/devices/mobile.get.parameters[4].type: string
paths./customer/{customerId}/devices/mobile.get.parameters[5].description: Search
  string in the format given at http://support.google.com/a/bin/answer.py?hl=en&answer=1408863#search
paths./customer/{customerId}/devices/mobile.get.parameters[5].in: query
paths./customer/{customerId}/devices/mobile.get.parameters[5].name: query
paths./customer/{customerId}/devices/mobile.get.parameters[5].type: string
paths./customer/{customerId}/devices/mobile.get.parameters[6].description: Whether
  to return results in ascending or descending order. Only of use when orderBy is
  also used
paths./customer/{customerId}/devices/mobile.get.parameters[6].enum.length: 2
paths./customer/{customerId}/devices/mobile.get.parameters[6].enum[0]: ASCENDING
paths./customer/{customerId}/devices/mobile.get.parameters[6].enum[1]: DESCENDING
paths./customer/{customerId}/devices/mobile.get.parameters[6].in: query
paths./customer/{customerId}/devices/mobile.get.parameters[6].name: sortOrder
paths./customer/{customerId}/devices/mobile.get.parameters[6].type: string
paths./customer/{customerId}/devices/mobile.get.responses.200.description: Successful
  response
paths./customer/{customerId}/devices/mobile.get.responses.200.schema.$ref: '#/definitions/MobileDevices'
paths./customer/{customerId}/devices/mobile.get.security.length: 3
paths./customer/{customerId}/devices/mobile.get.security[0].Oauth2.length: 1
paths./customer/{customerId}/devices/mobile.get.security[0].Oauth2[0]: https://www.googleapis.com/auth/admin.directory.device.mobile
paths./customer/{customerId}/devices/mobile.get.security[1].Oauth2.length: 1
paths./customer/{customerId}/devices/mobile.get.security[1].Oauth2[0]: https://www.googleapis.com/auth/admin.directory.device.mobile.action
paths./customer/{customerId}/devices/mobile.get.security[2].Oauth2.length: 1
paths./customer/{customerId}/devices/mobile.get.security[2].Oauth2[0]: https://www.googleapis.com/auth/admin.directory.device.mobile.readonly
paths./customer/{customerId}/devices/mobile.get.tags.length: 1
paths./customer/{customerId}/devices/mobile.get.tags[0]: mobiledevices
paths./customer/{customerId}/devices/mobile.parameters.length: 7
paths./customer/{customerId}/devices/mobile.parameters[0].$ref: '#/parameters/alt'
paths./customer/{customerId}/devices/mobile.parameters[1].$ref: '#/parameters/fields'
paths./customer/{customerId}/devices/mobile.parameters[2].$ref: '#/parameters/key'
paths./customer/{customerId}/devices/mobile.parameters[3].$ref: '#/parameters/oauth_token'
paths./customer/{customerId}/devices/mobile.parameters[4].$ref: '#/parameters/prettyPrint'
paths./customer/{customerId}/devices/mobile.parameters[5].$ref: '#/parameters/quotaUser'
paths./customer/{customerId}/devices/mobile.parameters[6].$ref: '#/parameters/userIp'
paths./customer/{customerId}/devices/mobile/{resourceId}.delete.description: Delete
  Mobile Device
paths./customer/{customerId}/devices/mobile/{resourceId}.delete.operationId: directory.mobiledevices.delete
paths./customer/{customerId}/devices/mobile/{resourceId}.delete.parameters.length: 2
paths./customer/{customerId}/devices/mobile/{resourceId}.delete.parameters[0].description: Immutable
  ID of the G Suite account
paths./customer/{customerId}/devices/mobile/{resourceId}.delete.parameters[0].in: path
paths./customer/{customerId}/devices/mobile/{resourceId}.delete.parameters[0].name: customerId
paths./customer/{customerId}/devices/mobile/{resourceId}.delete.parameters[0].required: true
paths./customer/{customerId}/devices/mobile/{resourceId}.delete.parameters[0].type: string
paths./customer/{customerId}/devices/mobile/{resourceId}.delete.parameters[1].description: Immutable
  ID of Mobile Device
paths./customer/{customerId}/devices/mobile/{resourceId}.delete.parameters[1].in: path
paths./customer/{customerId}/devices/mobile/{resourceId}.delete.parameters[1].name: resourceId
paths./customer/{customerId}/devices/mobile/{resourceId}.delete.parameters[1].required: true
paths./customer/{customerId}/devices/mobile/{resourceId}.delete.parameters[1].type: string
paths./customer/{customerId}/devices/mobile/{resourceId}.delete.responses.200.description: Successful
  response
paths./customer/{customerId}/devices/mobile/{resourceId}.delete.security.length: 1
paths./customer/{customerId}/devices/mobile/{resourceId}.delete.security[0].Oauth2.length: 1
paths./customer/{customerId}/devices/mobile/{resourceId}.delete.security[0].Oauth2[0]: https://www.googleapis.com/auth/admin.directory.device.mobile
paths./customer/{customerId}/devices/mobile/{resourceId}.delete.tags.length: 1
paths./customer/{customerId}/devices/mobile/{resourceId}.delete.tags[0]: mobiledevices
paths./customer/{customerId}/devices/mobile/{resourceId}.get.description: Retrieve
  Mobile Device
paths./customer/{customerId}/devices/mobile/{resourceId}.get.operationId: directory.mobiledevices.get
paths./customer/{customerId}/devices/mobile/{resourceId}.get.parameters.length: 3
paths./customer/{customerId}/devices/mobile/{resourceId}.get.parameters[0].description: Immutable
  ID of the G Suite account
paths./customer/{customerId}/devices/mobile/{resourceId}.get.parameters[0].in: path
paths./customer/{customerId}/devices/mobile/{resourceId}.get.parameters[0].name: customerId
paths./customer/{customerId}/devices/mobile/{resourceId}.get.parameters[0].required: true
paths./customer/{customerId}/devices/mobile/{resourceId}.get.parameters[0].type: string
paths./customer/{customerId}/devices/mobile/{resourceId}.get.parameters[1].description: Restrict
  information returned to a set of selected fields.
paths./customer/{customerId}/devices/mobile/{resourceId}.get.parameters[1].enum.length: 2
paths./customer/{customerId}/devices/mobile/{resourceId}.get.parameters[1].enum[0]: BASIC
paths./customer/{customerId}/devices/mobile/{resourceId}.get.parameters[1].enum[1]: FULL
paths./customer/{customerId}/devices/mobile/{resourceId}.get.parameters[1].in: query
paths./customer/{customerId}/devices/mobile/{resourceId}.get.parameters[1].name: projection
paths./customer/{customerId}/devices/mobile/{resourceId}.get.parameters[1].type: string
paths./customer/{customerId}/devices/mobile/{resourceId}.get.parameters[2].description: Immutable
  ID of Mobile Device
paths./customer/{customerId}/devices/mobile/{resourceId}.get.parameters[2].in: path
paths./customer/{customerId}/devices/mobile/{resourceId}.get.parameters[2].name: resourceId
paths./customer/{customerId}/devices/mobile/{resourceId}.get.parameters[2].required: true
paths./customer/{customerId}/devices/mobile/{resourceId}.get.parameters[2].type: string
paths./customer/{customerId}/devices/mobile/{resourceId}.get.responses.200.description: Successful
  response
paths./customer/{customerId}/devices/mobile/{resourceId}.get.responses.200.schema.$ref: '#/definitions/MobileDevice'
paths./customer/{customerId}/devices/mobile/{resourceId}.get.security.length: 3
paths./customer/{customerId}/devices/mobile/{resourceId}.get.security[0].Oauth2.length: 1
paths./customer/{customerId}/devices/mobile/{resourceId}.get.security[0].Oauth2[0]: https://www.googleapis.com/auth/admin.directory.device.mobile
paths./customer/{customerId}/devices/mobile/{resourceId}.get.security[1].Oauth2.length: 1
paths./customer/{customerId}/devices/mobile/{resourceId}.get.security[1].Oauth2[0]: https://www.googleapis.com/auth/admin.directory.device.mobile.action
paths./customer/{customerId}/devices/mobile/{resourceId}.get.security[2].Oauth2.length: 1
paths./customer/{customerId}/devices/mobile/{resourceId}.get.security[2].Oauth2[0]: https://www.googleapis.com/auth/admin.directory.device.mobile.readonly
paths./customer/{customerId}/devices/mobile/{resourceId}.get.tags.length: 1
paths./customer/{customerId}/devices/mobile/{resourceId}.get.tags[0]: mobiledevices
paths./customer/{customerId}/devices/mobile/{resourceId}.parameters.length: 7
paths./customer/{customerId}/devices/mobile/{resourceId}.parameters[0].$ref: '#/parameters/alt'
paths./customer/{customerId}/devices/mobile/{resourceId}.parameters[1].$ref: '#/parameters/fields'
paths./customer/{customerId}/devices/mobile/{resourceId}.parameters[2].$ref: '#/parameters/key'
paths./customer/{customerId}/devices/mobile/{resourceId}.parameters[3].$ref: '#/parameters/oauth_token'
paths./customer/{customerId}/devices/mobile/{resourceId}.parameters[4].$ref: '#/parameters/prettyPrint'
paths./customer/{customerId}/devices/mobile/{resourceId}.parameters[5].$ref: '#/parameters/quotaUser'
paths./customer/{customerId}/devices/mobile/{resourceId}.parameters[6].$ref: '#/parameters/userIp'
paths./customer/{customerId}/devices/mobile/{resourceId}/action.parameters.length: 7
paths./customer/{customerId}/devices/mobile/{resourceId}/action.parameters[0].$ref: '#/parameters/alt'
paths./customer/{customerId}/devices/mobile/{resourceId}/action.parameters[1].$ref: '#/parameters/fields'
paths./customer/{customerId}/devices/mobile/{resourceId}/action.parameters[2].$ref: '#/parameters/key'
paths./customer/{customerId}/devices/mobile/{resourceId}/action.parameters[3].$ref: '#/parameters/oauth_token'
paths./customer/{customerId}/devices/mobile/{resourceId}/action.parameters[4].$ref: '#/parameters/prettyPrint'
paths./customer/{customerId}/devices/mobile/{resourceId}/action.parameters[5].$ref: '#/parameters/quotaUser'
paths./customer/{customerId}/devices/mobile/{resourceId}/action.parameters[6].$ref: '#/parameters/userIp'
paths./customer/{customerId}/devices/mobile/{resourceId}/action.post.description: Take
  action on Mobile Device
paths./customer/{customerId}/devices/mobile/{resourceId}/action.post.operationId: directory.mobiledevices.action
paths./customer/{customerId}/devices/mobile/{resourceId}/action.post.parameters.length: 3
paths./customer/{customerId}/devices/mobile/{resourceId}/action.post.parameters[0].in: body
paths./customer/{customerId}/devices/mobile/{resourceId}/action.post.parameters[0].name: body
paths./customer/{customerId}/devices/mobile/{resourceId}/action.post.parameters[0].schema.$ref: '#/definitions/MobileDeviceAction'
paths./customer/{customerId}/devices/mobile/{resourceId}/action.post.parameters[1].description: Immutable
  ID of the G Suite account
paths./customer/{customerId}/devices/mobile/{resourceId}/action.post.parameters[1].in: path
paths./customer/{customerId}/devices/mobile/{resourceId}/action.post.parameters[1].name: customerId
paths./customer/{customerId}/devices/mobile/{resourceId}/action.post.parameters[1].required: true
paths./customer/{customerId}/devices/mobile/{resourceId}/action.post.parameters[1].type: string
paths./customer/{customerId}/devices/mobile/{resourceId}/action.post.parameters[2].description: Immutable
  ID of Mobile Device
paths./customer/{customerId}/devices/mobile/{resourceId}/action.post.parameters[2].in: path
paths./customer/{customerId}/devices/mobile/{resourceId}/action.post.parameters[2].name: resourceId
paths./customer/{customerId}/devices/mobile/{resourceId}/action.post.parameters[2].required: true
paths./customer/{customerId}/devices/mobile/{resourceId}/action.post.parameters[2].type: string
paths./customer/{customerId}/devices/mobile/{resourceId}/action.post.responses.200.description: Successful
  response
paths./customer/{customerId}/devices/mobile/{resourceId}/action.post.security.length: 2
paths./customer/{customerId}/devices/mobile/{resourceId}/action.post.security[0].Oauth2.length: 1
paths./customer/{customerId}/devices/mobile/{resourceId}/action.post.security[0].Oauth2[0]: https://www.googleapis.com/auth/admin.directory.device.mobile
paths./customer/{customerId}/devices/mobile/{resourceId}/action.post.security[1].Oauth2.length: 1
paths./customer/{customerId}/devices/mobile/{resourceId}/action.post.security[1].Oauth2[0]: https://www.googleapis.com/auth/admin.directory.device.mobile.action
paths./customer/{customerId}/devices/mobile/{resourceId}/action.post.tags.length: 1
paths./customer/{customerId}/devices/mobile/{resourceId}/action.post.tags[0]: mobiledevices
paths./customer/{customerId}/orgunits.get.description: Retrieve all Organization Units
paths./customer/{customerId}/orgunits.get.operationId: directory.orgunits.list
paths./customer/{customerId}/orgunits.get.parameters.length: 3
paths./customer/{customerId}/orgunits.get.parameters[0].description: Immutable ID
  of the G Suite account
paths./customer/{customerId}/orgunits.get.parameters[0].in: path
paths./customer/{customerId}/orgunits.get.parameters[0].name: customerId
paths./customer/{customerId}/orgunits.get.parameters[0].required: true
paths./customer/{customerId}/orgunits.get.parameters[0].type: string
paths./customer/{customerId}/orgunits.get.parameters[1].default: ""
paths./customer/{customerId}/orgunits.get.parameters[1].description: the URL-encoded
  organization unit's path or its Id
paths./customer/{customerId}/orgunits.get.parameters[1].in: query
paths./customer/{customerId}/orgunits.get.parameters[1].name: orgUnitPath
paths./customer/{customerId}/orgunits.get.parameters[1].type: string
paths./customer/{customerId}/orgunits.get.parameters[2].description: Whether to return
  all sub-organizations or just immediate children
paths./customer/{customerId}/orgunits.get.parameters[2].enum.length: 2
paths./customer/{customerId}/orgunits.get.parameters[2].enum[0]: all
paths./customer/{customerId}/orgunits.get.parameters[2].enum[1]: children
paths./customer/{customerId}/orgunits.get.parameters[2].in: query
paths./customer/{customerId}/orgunits.get.parameters[2].name: type
paths./customer/{customerId}/orgunits.get.parameters[2].type: string
paths./customer/{customerId}/orgunits.get.responses.200.description: Successful response
paths./customer/{customerId}/orgunits.get.responses.200.schema.$ref: '#/definitions/OrgUnits'
paths./customer/{customerId}/orgunits.get.security.length: 2
paths./customer/{customerId}/orgunits.get.security[0].Oauth2.length: 1
paths./customer/{customerId}/orgunits.get.security[0].Oauth2[0]: https://www.googleapis.com/auth/admin.directory.orgunit
paths./customer/{customerId}/orgunits.get.security[1].Oauth2.length: 1
paths./customer/{customerId}/orgunits.get.security[1].Oauth2[0]: https://www.googleapis.com/auth/admin.directory.orgunit.readonly
paths./customer/{customerId}/orgunits.get.tags.length: 1
paths./customer/{customerId}/orgunits.get.tags[0]: orgunits
paths./customer/{customerId}/orgunits.parameters.length: 7
paths./customer/{customerId}/orgunits.parameters[0].$ref: '#/parameters/alt'
paths./customer/{customerId}/orgunits.parameters[1].$ref: '#/parameters/fields'
paths./customer/{customerId}/orgunits.parameters[2].$ref: '#/parameters/key'
paths./customer/{customerId}/orgunits.parameters[3].$ref: '#/parameters/oauth_token'
paths./customer/{customerId}/orgunits.parameters[4].$ref: '#/parameters/prettyPrint'
paths./customer/{customerId}/orgunits.parameters[5].$ref: '#/parameters/quotaUser'
paths./customer/{customerId}/orgunits.parameters[6].$ref: '#/parameters/userIp'
paths./customer/{customerId}/orgunits.post.description: Add Organization Unit
paths./customer/{customerId}/orgunits.post.operationId: directory.orgunits.insert
paths./customer/{customerId}/orgunits.post.parameters.length: 2
paths./customer/{customerId}/orgunits.post.parameters[0].in: body
paths./customer/{customerId}/orgunits.post.parameters[0].name: body
paths./customer/{customerId}/orgunits.post.parameters[0].schema.$ref: '#/definitions/OrgUnit'
paths./customer/{customerId}/orgunits.post.parameters[1].description: Immutable ID
  of the G Suite account
paths./customer/{customerId}/orgunits.post.parameters[1].in: path
paths./customer/{customerId}/orgunits.post.parameters[1].name: customerId
paths./customer/{customerId}/orgunits.post.parameters[1].required: true
paths./customer/{customerId}/orgunits.post.parameters[1].type: string
paths./customer/{customerId}/orgunits.post.responses.200.description: Successful response
paths./customer/{customerId}/orgunits.post.responses.200.schema.$ref: '#/definitions/OrgUnit'
paths./customer/{customerId}/orgunits.post.security.length: 1
paths./customer/{customerId}/orgunits.post.security[0].Oauth2.length: 1
paths./customer/{customerId}/orgunits.post.security[0].Oauth2[0]: https://www.googleapis.com/auth/admin.directory.orgunit
paths./customer/{customerId}/orgunits.post.tags.length: 1
paths./customer/{customerId}/orgunits.post.tags[0]: orgunits
paths./customer/{customerId}/orgunits/{orgUnitPath}.delete.description: Remove Organization
  Unit
paths./customer/{customerId}/orgunits/{orgUnitPath}.delete.operationId: directory.orgunits.delete
paths./customer/{customerId}/orgunits/{orgUnitPath}.delete.parameters.length: 2
paths./customer/{customerId}/orgunits/{orgUnitPath}.delete.parameters[0].description: Immutable
  id of the Google Apps account
paths./customer/{customerId}/orgunits/{orgUnitPath}.delete.parameters[0].in: path
paths./customer/{customerId}/orgunits/{orgUnitPath}.delete.parameters[0].name: customerId
paths./customer/{customerId}/orgunits/{orgUnitPath}.delete.parameters[0].required: true
paths./customer/{customerId}/orgunits/{orgUnitPath}.delete.parameters[0].type: string
paths./customer/{customerId}/orgunits/{orgUnitPath}.delete.parameters[1].description: Full
  path of the organization unit or its Id
paths./customer/{customerId}/orgunits/{orgUnitPath}.delete.parameters[1].in: path
paths./customer/{customerId}/orgunits/{orgUnitPath}.delete.parameters[1].name: orgUnitPath
paths./customer/{customerId}/orgunits/{orgUnitPath}.delete.parameters[1].required: true
paths./customer/{customerId}/orgunits/{orgUnitPath}.delete.parameters[1].type: string
paths./customer/{customerId}/orgunits/{orgUnitPath}.delete.parameters[1].x-reservedExpansion: true
paths./customer/{customerId}/orgunits/{orgUnitPath}.delete.responses.200.description: Successful
  response
paths./customer/{customerId}/orgunits/{orgUnitPath}.delete.security.length: 1
paths./customer/{customerId}/orgunits/{orgUnitPath}.delete.security[0].Oauth2.length: 1
paths./customer/{customerId}/orgunits/{orgUnitPath}.delete.security[0].Oauth2[0]: https://www.googleapis.com/auth/admin.directory.orgunit
paths./customer/{customerId}/orgunits/{orgUnitPath}.delete.tags.length: 1
paths./customer/{customerId}/orgunits/{orgUnitPath}.delete.tags[0]: orgunits
paths./customer/{customerId}/orgunits/{orgUnitPath}.get.description: Retrieve Organization
  Unit
paths./customer/{customerId}/orgunits/{orgUnitPath}.get.operationId: directory.orgunits.get
paths./customer/{customerId}/orgunits/{orgUnitPath}.get.parameters.length: 2
paths./customer/{customerId}/orgunits/{orgUnitPath}.get.parameters[0].description: Immutable
  id of the Google Apps account
paths./customer/{customerId}/orgunits/{orgUnitPath}.get.parameters[0].in: path
paths./customer/{customerId}/orgunits/{orgUnitPath}.get.parameters[0].name: customerId
paths./customer/{customerId}/orgunits/{orgUnitPath}.get.parameters[0].required: true
paths./customer/{customerId}/orgunits/{orgUnitPath}.get.parameters[0].type: string
paths./customer/{customerId}/orgunits/{orgUnitPath}.get.parameters[1].description: Full
  path of the organization unit or its Id
paths./customer/{customerId}/orgunits/{orgUnitPath}.get.parameters[1].in: path
paths./customer/{customerId}/orgunits/{orgUnitPath}.get.parameters[1].name: orgUnitPath
paths./customer/{customerId}/orgunits/{orgUnitPath}.get.parameters[1].required: true
paths./customer/{customerId}/orgunits/{orgUnitPath}.get.parameters[1].type: string
paths./customer/{customerId}/orgunits/{orgUnitPath}.get.parameters[1].x-reservedExpansion: true
paths./customer/{customerId}/orgunits/{orgUnitPath}.get.responses.200.description: Successful
  response
paths./customer/{customerId}/orgunits/{orgUnitPath}.get.responses.200.schema.$ref: '#/definitions/OrgUnit'
paths./customer/{customerId}/orgunits/{orgUnitPath}.get.security.length: 1
paths./customer/{customerId}/orgunits/{orgUnitPath}.get.security[0].Oauth2.length: 2
paths./customer/{customerId}/orgunits/{orgUnitPath}.get.security[0].Oauth2[0]: https://www.googleapis.com/auth/admin.directory.orgunit
paths./customer/{customerId}/orgunits/{orgUnitPath}.get.security[0].Oauth2[1]: https://www.googleapis.com/auth/admin.directory.orgunit.readonly
paths./customer/{customerId}/orgunits/{orgUnitPath}.get.tags.length: 1
paths./customer/{customerId}/orgunits/{orgUnitPath}.get.tags[0]: orgunits
paths./customer/{customerId}/orgunits/{orgUnitPath}.parameters.length: 7
paths./customer/{customerId}/orgunits/{orgUnitPath}.parameters[0].$ref: '#/parameters/alt'
paths./customer/{customerId}/orgunits/{orgUnitPath}.parameters[1].$ref: '#/parameters/fields'
paths./customer/{customerId}/orgunits/{orgUnitPath}.parameters[2].$ref: '#/parameters/key'
paths./customer/{customerId}/orgunits/{orgUnitPath}.parameters[3].$ref: '#/parameters/oauth_token'
paths./customer/{customerId}/orgunits/{orgUnitPath}.parameters[4].$ref: '#/parameters/prettyPrint'
paths./customer/{customerId}/orgunits/{orgUnitPath}.parameters[5].$ref: '#/parameters/quotaUser'
paths./customer/{customerId}/orgunits/{orgUnitPath}.parameters[6].$ref: '#/parameters/userIp'
paths./customer/{customerId}/orgunits/{orgUnitPath}.patch.description: Update Organization
  Unit. This method supports patch semantics.
paths./customer/{customerId}/orgunits/{orgUnitPath}.patch.operationId: directory.orgunits.patch
paths./customer/{customerId}/orgunits/{orgUnitPath}.patch.parameters.length: 3
paths./customer/{customerId}/orgunits/{orgUnitPath}.patch.parameters[0].description: Immutable
  id of the Google Apps account
paths./customer/{customerId}/orgunits/{orgUnitPath}.patch.parameters[0].in: path
paths./customer/{customerId}/orgunits/{orgUnitPath}.patch.parameters[0].name: customerId
paths./customer/{customerId}/orgunits/{orgUnitPath}.patch.parameters[0].required: true
paths./customer/{customerId}/orgunits/{orgUnitPath}.patch.parameters[0].type: string
paths./customer/{customerId}/orgunits/{orgUnitPath}.patch.parameters[1].description: Full
  path of the organization unit or its Id
paths./customer/{customerId}/orgunits/{orgUnitPath}.patch.parameters[1].in: path
paths./customer/{customerId}/orgunits/{orgUnitPath}.patch.parameters[1].name: orgUnitPath
paths./customer/{customerId}/orgunits/{orgUnitPath}.patch.parameters[1].required: true
paths./customer/{customerId}/orgunits/{orgUnitPath}.patch.parameters[1].type: string
paths./customer/{customerId}/orgunits/{orgUnitPath}.patch.parameters[1].x-reservedExpansion: true
paths./customer/{customerId}/orgunits/{orgUnitPath}.patch.parameters[2].in: body
paths./customer/{customerId}/orgunits/{orgUnitPath}.patch.parameters[2].name: body
paths./customer/{customerId}/orgunits/{orgUnitPath}.patch.parameters[2].schema.$ref: '#/definitions/OrgUnit'
paths./customer/{customerId}/orgunits/{orgUnitPath}.patch.responses.200.description: Successful
  response
paths./customer/{customerId}/orgunits/{orgUnitPath}.patch.responses.200.schema.$ref: '#/definitions/OrgUnit'
paths./customer/{customerId}/orgunits/{orgUnitPath}.patch.security.length: 1
paths./customer/{customerId}/orgunits/{orgUnitPath}.patch.security[0].Oauth2.length: 1
paths./customer/{customerId}/orgunits/{orgUnitPath}.patch.security[0].Oauth2[0]: https://www.googleapis.com/auth/admin.directory.orgunit
paths./customer/{customerId}/orgunits/{orgUnitPath}.patch.tags.length: 1
paths./customer/{customerId}/orgunits/{orgUnitPath}.patch.tags[0]: orgunits
paths./customer/{customerId}/orgunits/{orgUnitPath}.put.description: Update Organization
  Unit
paths./customer/{customerId}/orgunits/{orgUnitPath}.put.operationId: directory.orgunits.update
paths./customer/{customerId}/orgunits/{orgUnitPath}.put.parameters.length: 3
paths./customer/{customerId}/orgunits/{orgUnitPath}.put.parameters[0].description: Immutable
  id of the Google Apps account
paths./customer/{customerId}/orgunits/{orgUnitPath}.put.parameters[0].in: path
paths./customer/{customerId}/orgunits/{orgUnitPath}.put.parameters[0].name: customerId
paths./customer/{customerId}/orgunits/{orgUnitPath}.put.parameters[0].required: true
paths./customer/{customerId}/orgunits/{orgUnitPath}.put.parameters[0].type: string
paths./customer/{customerId}/orgunits/{orgUnitPath}.put.parameters[1].description: Full
  path of the organization unit or its Id
paths./customer/{customerId}/orgunits/{orgUnitPath}.put.parameters[1].in: path
paths./customer/{customerId}/orgunits/{orgUnitPath}.put.parameters[1].name: orgUnitPath
paths./customer/{customerId}/orgunits/{orgUnitPath}.put.parameters[1].required: true
paths./customer/{customerId}/orgunits/{orgUnitPath}.put.parameters[1].type: string
paths./customer/{customerId}/orgunits/{orgUnitPath}.put.parameters[1].x-reservedExpansion: true
paths./customer/{customerId}/orgunits/{orgUnitPath}.put.parameters[2].in: body
paths./customer/{customerId}/orgunits/{orgUnitPath}.put.parameters[2].name: body
paths./customer/{customerId}/orgunits/{orgUnitPath}.put.parameters[2].schema.$ref: '#/definitions/OrgUnit'
paths./customer/{customerId}/orgunits/{orgUnitPath}.put.responses.200.description: Successful
  response
paths./customer/{customerId}/orgunits/{orgUnitPath}.put.responses.200.schema.$ref: '#/definitions/OrgUnit'
paths./customer/{customerId}/orgunits/{orgUnitPath}.put.security.length: 1
paths./customer/{customerId}/orgunits/{orgUnitPath}.put.security[0].Oauth2.length: 1
paths./customer/{customerId}/orgunits/{orgUnitPath}.put.security[0].Oauth2[0]: https://www.googleapis.com/auth/admin.directory.orgunit
paths./customer/{customerId}/orgunits/{orgUnitPath}.put.tags.length: 1
paths./customer/{customerId}/orgunits/{orgUnitPath}.put.tags[0]: orgunits
paths./customer/{customerId}/schemas.get.description: Retrieve all schemas for a customer
paths./customer/{customerId}/schemas.get.operationId: directory.schemas.list
paths./customer/{customerId}/schemas.get.parameters.length: 1
paths./customer/{customerId}/schemas.get.parameters[0].description: Immutable ID of
  the G Suite account
paths./customer/{customerId}/schemas.get.parameters[0].in: path
paths./customer/{customerId}/schemas.get.parameters[0].name: customerId
paths./customer/{customerId}/schemas.get.parameters[0].required: true
paths./customer/{customerId}/schemas.get.parameters[0].type: string
paths./customer/{customerId}/schemas.get.responses.200.description: Successful response
paths./customer/{customerId}/schemas.get.responses.200.schema.$ref: '#/definitions/Schemas'
paths./customer/{customerId}/schemas.get.security.length: 2
paths./customer/{customerId}/schemas.get.security[0].Oauth2.length: 1
paths./customer/{customerId}/schemas.get.security[0].Oauth2[0]: https://www.googleapis.com/auth/admin.directory.userschema
paths./customer/{customerId}/schemas.get.security[1].Oauth2.length: 1
paths./customer/{customerId}/schemas.get.security[1].Oauth2[0]: https://www.googleapis.com/auth/admin.directory.userschema.readonly
paths./customer/{customerId}/schemas.get.tags.length: 1
paths./customer/{customerId}/schemas.get.tags[0]: schemas
paths./customer/{customerId}/schemas.parameters.length: 7
paths./customer/{customerId}/schemas.parameters[0].$ref: '#/parameters/alt'
paths./customer/{customerId}/schemas.parameters[1].$ref: '#/parameters/fields'
paths./customer/{customerId}/schemas.parameters[2].$ref: '#/parameters/key'
paths./customer/{customerId}/schemas.parameters[3].$ref: '#/parameters/oauth_token'
paths./customer/{customerId}/schemas.parameters[4].$ref: '#/parameters/prettyPrint'
paths./customer/{customerId}/schemas.parameters[5].$ref: '#/parameters/quotaUser'
paths./customer/{customerId}/schemas.parameters[6].$ref: '#/parameters/userIp'
paths./customer/{customerId}/schemas.post.description: Create schema.
paths./customer/{customerId}/schemas.post.operationId: directory.schemas.insert
paths./customer/{customerId}/schemas.post.parameters.length: 2
paths./customer/{customerId}/schemas.post.parameters[0].in: body
paths./customer/{customerId}/schemas.post.parameters[0].name: body
paths./customer/{customerId}/schemas.post.parameters[0].schema.$ref: '#/definitions/Schema'
paths./customer/{customerId}/schemas.post.parameters[1].description: Immutable ID
  of the G Suite account
paths./customer/{customerId}/schemas.post.parameters[1].in: path
paths./customer/{customerId}/schemas.post.parameters[1].name: customerId
paths./customer/{customerId}/schemas.post.parameters[1].required: true
paths./customer/{customerId}/schemas.post.parameters[1].type: string
paths./customer/{customerId}/schemas.post.responses.200.description: Successful response
paths./customer/{customerId}/schemas.post.responses.200.schema.$ref: '#/definitions/Schema'
paths./customer/{customerId}/schemas.post.security.length: 1
paths./customer/{customerId}/schemas.post.security[0].Oauth2.length: 1
paths./customer/{customerId}/schemas.post.security[0].Oauth2[0]: https://www.googleapis.com/auth/admin.directory.userschema
paths./customer/{customerId}/schemas.post.tags.length: 1
paths./customer/{customerId}/schemas.post.tags[0]: schemas
paths./customer/{customerId}/schemas/{schemaKey}.delete.description: Delete schema
paths./customer/{customerId}/schemas/{schemaKey}.delete.operationId: directory.schemas.delete
paths./customer/{customerId}/schemas/{schemaKey}.delete.parameters.length: 2
paths./customer/{customerId}/schemas/{schemaKey}.delete.parameters[0].description: Immutable
  ID of the G Suite account
paths./customer/{customerId}/schemas/{schemaKey}.delete.parameters[0].in: path
paths./customer/{customerId}/schemas/{schemaKey}.delete.parameters[0].name: customerId
paths./customer/{customerId}/schemas/{schemaKey}.delete.parameters[0].required: true
paths./customer/{customerId}/schemas/{schemaKey}.delete.parameters[0].type: string
paths./customer/{customerId}/schemas/{schemaKey}.delete.parameters[1].description: Name
  or immutable Id of the schema
paths./customer/{customerId}/schemas/{schemaKey}.delete.parameters[1].in: path
paths./customer/{customerId}/schemas/{schemaKey}.delete.parameters[1].name: schemaKey
paths./customer/{customerId}/schemas/{schemaKey}.delete.parameters[1].required: true
paths./customer/{customerId}/schemas/{schemaKey}.delete.parameters[1].type: string
paths./customer/{customerId}/schemas/{schemaKey}.delete.responses.200.description: Successful
  response
paths./customer/{customerId}/schemas/{schemaKey}.delete.security.length: 1
paths./customer/{customerId}/schemas/{schemaKey}.delete.security[0].Oauth2.length: 1
paths./customer/{customerId}/schemas/{schemaKey}.delete.security[0].Oauth2[0]: https://www.googleapis.com/auth/admin.directory.userschema
paths./customer/{customerId}/schemas/{schemaKey}.delete.tags.length: 1
paths./customer/{customerId}/schemas/{schemaKey}.delete.tags[0]: schemas
paths./customer/{customerId}/schemas/{schemaKey}.get.description: Retrieve schema
paths./customer/{customerId}/schemas/{schemaKey}.get.operationId: directory.schemas.get
paths./customer/{customerId}/schemas/{schemaKey}.get.parameters.length: 2
paths./customer/{customerId}/schemas/{schemaKey}.get.parameters[0].description: Immutable
  ID of the G Suite account
paths./customer/{customerId}/schemas/{schemaKey}.get.parameters[0].in: path
paths./customer/{customerId}/schemas/{schemaKey}.get.parameters[0].name: customerId
paths./customer/{customerId}/schemas/{schemaKey}.get.parameters[0].required: true
paths./customer/{customerId}/schemas/{schemaKey}.get.parameters[0].type: string
paths./customer/{customerId}/schemas/{schemaKey}.get.parameters[1].description: Name
  or immutable Id of the schema
paths./customer/{customerId}/schemas/{schemaKey}.get.parameters[1].in: path
paths./customer/{customerId}/schemas/{schemaKey}.get.parameters[1].name: schemaKey
paths./customer/{customerId}/schemas/{schemaKey}.get.parameters[1].required: true
paths./customer/{customerId}/schemas/{schemaKey}.get.parameters[1].type: string
paths./customer/{customerId}/schemas/{schemaKey}.get.responses.200.description: Successful
  response
paths./customer/{customerId}/schemas/{schemaKey}.get.responses.200.schema.$ref: '#/definitions/Schema'
paths./customer/{customerId}/schemas/{schemaKey}.get.security.length: 2
paths./customer/{customerId}/schemas/{schemaKey}.get.security[0].Oauth2.length: 1
paths./customer/{customerId}/schemas/{schemaKey}.get.security[0].Oauth2[0]: https://www.googleapis.com/auth/admin.directory.userschema
paths./customer/{customerId}/schemas/{schemaKey}.get.security[1].Oauth2.length: 1
paths./customer/{customerId}/schemas/{schemaKey}.get.security[1].Oauth2[0]: https://www.googleapis.com/auth/admin.directory.userschema.readonly
paths./customer/{customerId}/schemas/{schemaKey}.get.tags.length: 1
paths./customer/{customerId}/schemas/{schemaKey}.get.tags[0]: schemas
paths./customer/{customerId}/schemas/{schemaKey}.parameters.length: 7
paths./customer/{customerId}/schemas/{schemaKey}.parameters[0].$ref: '#/parameters/alt'
paths./customer/{customerId}/schemas/{schemaKey}.parameters[1].$ref: '#/parameters/fields'
paths./customer/{customerId}/schemas/{schemaKey}.parameters[2].$ref: '#/parameters/key'
paths./customer/{customerId}/schemas/{schemaKey}.parameters[3].$ref: '#/parameters/oauth_token'
paths./customer/{customerId}/schemas/{schemaKey}.parameters[4].$ref: '#/parameters/prettyPrint'
paths./customer/{customerId}/schemas/{schemaKey}.parameters[5].$ref: '#/parameters/quotaUser'
paths./customer/{customerId}/schemas/{schemaKey}.parameters[6].$ref: '#/parameters/userIp'
paths./customer/{customerId}/schemas/{schemaKey}.patch.description: Update schema.
  This method supports patch semantics.
paths./customer/{customerId}/schemas/{schemaKey}.patch.operationId: directory.schemas.patch
paths./customer/{customerId}/schemas/{schemaKey}.patch.parameters.length: 3
paths./customer/{customerId}/schemas/{schemaKey}.patch.parameters[0].in: body
paths./customer/{customerId}/schemas/{schemaKey}.patch.parameters[0].name: body
paths./customer/{customerId}/schemas/{schemaKey}.patch.parameters[0].schema.$ref: '#/definitions/Schema'
paths./customer/{customerId}/schemas/{schemaKey}.patch.parameters[1].description: Immutable
  ID of the G Suite account
paths./customer/{customerId}/schemas/{schemaKey}.patch.parameters[1].in: path
paths./customer/{customerId}/schemas/{schemaKey}.patch.parameters[1].name: customerId
paths./customer/{customerId}/schemas/{schemaKey}.patch.parameters[1].required: true
paths./customer/{customerId}/schemas/{schemaKey}.patch.parameters[1].type: string
paths./customer/{customerId}/schemas/{schemaKey}.patch.parameters[2].description: Name
  or immutable Id of the schema.
paths./customer/{customerId}/schemas/{schemaKey}.patch.parameters[2].in: path
paths./customer/{customerId}/schemas/{schemaKey}.patch.parameters[2].name: schemaKey
paths./customer/{customerId}/schemas/{schemaKey}.patch.parameters[2].required: true
paths./customer/{customerId}/schemas/{schemaKey}.patch.parameters[2].type: string
paths./customer/{customerId}/schemas/{schemaKey}.patch.responses.200.description: Successful
  response
paths./customer/{customerId}/schemas/{schemaKey}.patch.responses.200.schema.$ref: '#/definitions/Schema'
paths./customer/{customerId}/schemas/{schemaKey}.patch.security.length: 1
paths./customer/{customerId}/schemas/{schemaKey}.patch.security[0].Oauth2.length: 1
paths./customer/{customerId}/schemas/{schemaKey}.patch.security[0].Oauth2[0]: https://www.googleapis.com/auth/admin.directory.userschema
paths./customer/{customerId}/schemas/{schemaKey}.patch.tags.length: 1
paths./customer/{customerId}/schemas/{schemaKey}.patch.tags[0]: schemas
paths./customer/{customerId}/schemas/{schemaKey}.put.description: Update schema
paths./customer/{customerId}/schemas/{schemaKey}.put.operationId: directory.schemas.update
paths./customer/{customerId}/schemas/{schemaKey}.put.parameters.length: 3
paths./customer/{customerId}/schemas/{schemaKey}.put.parameters[0].in: body
paths./customer/{customerId}/schemas/{schemaKey}.put.parameters[0].name: body
paths./customer/{customerId}/schemas/{schemaKey}.put.parameters[0].schema.$ref: '#/definitions/Schema'
paths./customer/{customerId}/schemas/{schemaKey}.put.parameters[1].description: Immutable
  ID of the G Suite account
paths./customer/{customerId}/schemas/{schemaKey}.put.parameters[1].in: path
paths./customer/{customerId}/schemas/{schemaKey}.put.parameters[1].name: customerId
paths./customer/{customerId}/schemas/{schemaKey}.put.parameters[1].required: true
paths./customer/{customerId}/schemas/{schemaKey}.put.parameters[1].type: string
paths./customer/{customerId}/schemas/{schemaKey}.put.parameters[2].description: Name
  or immutable Id of the schema.
paths./customer/{customerId}/schemas/{schemaKey}.put.parameters[2].in: path
paths./customer/{customerId}/schemas/{schemaKey}.put.parameters[2].name: schemaKey
paths./customer/{customerId}/schemas/{schemaKey}.put.parameters[2].required: true
paths./customer/{customerId}/schemas/{schemaKey}.put.parameters[2].type: string
paths./customer/{customerId}/schemas/{schemaKey}.put.responses.200.description: Successful
  response
paths./customer/{customerId}/schemas/{schemaKey}.put.responses.200.schema.$ref: '#/definitions/Schema'
paths./customer/{customerId}/schemas/{schemaKey}.put.security.length: 1
paths./customer/{customerId}/schemas/{schemaKey}.put.security[0].Oauth2.length: 1
paths./customer/{customerId}/schemas/{schemaKey}.put.security[0].Oauth2[0]: https://www.googleapis.com/auth/admin.directory.userschema
paths./customer/{customerId}/schemas/{schemaKey}.put.tags.length: 1
paths./customer/{customerId}/schemas/{schemaKey}.put.tags[0]: schemas
paths./customers/{customerKey}.get.description: Retrieves a customer.
paths./customers/{customerKey}.get.operationId: directory.customers.get
paths./customers/{customerKey}.get.parameters.length: 1
paths./customers/{customerKey}.get.parameters[0].description: Id of the customer to
  be retrieved
paths./customers/{customerKey}.get.parameters[0].in: path
paths./customers/{customerKey}.get.parameters[0].name: customerKey
paths./customers/{customerKey}.get.parameters[0].required: true
paths./customers/{customerKey}.get.parameters[0].type: string
paths./customers/{customerKey}.get.responses.200.description: Successful response
paths./customers/{customerKey}.get.responses.200.schema.$ref: '#/definitions/Customer'
paths./customers/{customerKey}.get.security.length: 2
paths./customers/{customerKey}.get.security[0].Oauth2.length: 1
paths./customers/{customerKey}.get.security[0].Oauth2[0]: https://www.googleapis.com/auth/admin.directory.customer
paths./customers/{customerKey}.get.security[1].Oauth2.length: 1
paths./customers/{customerKey}.get.security[1].Oauth2[0]: https://www.googleapis.com/auth/admin.directory.customer.readonly
paths./customers/{customerKey}.get.tags.length: 1
paths./customers/{customerKey}.get.tags[0]: customers
paths./customers/{customerKey}.parameters.length: 7
paths./customers/{customerKey}.parameters[0].$ref: '#/parameters/alt'
paths./customers/{customerKey}.parameters[1].$ref: '#/parameters/fields'
paths./customers/{customerKey}.parameters[2].$ref: '#/parameters/key'
paths./customers/{customerKey}.parameters[3].$ref: '#/parameters/oauth_token'
paths./customers/{customerKey}.parameters[4].$ref: '#/parameters/prettyPrint'
paths./customers/{customerKey}.parameters[5].$ref: '#/parameters/quotaUser'
paths./customers/{customerKey}.parameters[6].$ref: '#/parameters/userIp'
paths./customers/{customerKey}.patch.description: Updates a customer. This method
  supports patch semantics.
paths./customers/{customerKey}.patch.operationId: directory.customers.patch
paths./customers/{customerKey}.patch.parameters.length: 2
paths./customers/{customerKey}.patch.parameters[0].description: Id of the customer
  to be updated
paths./customers/{customerKey}.patch.parameters[0].in: path
paths./customers/{customerKey}.patch.parameters[0].name: customerKey
paths./customers/{customerKey}.patch.parameters[0].required: true
paths./customers/{customerKey}.patch.parameters[0].type: string
paths./customers/{customerKey}.patch.parameters[1].in: body
paths./customers/{customerKey}.patch.parameters[1].name: body
paths./customers/{customerKey}.patch.parameters[1].schema.$ref: '#/definitions/Customer'
paths./customers/{customerKey}.patch.responses.200.description: Successful response
paths./customers/{customerKey}.patch.responses.200.schema.$ref: '#/definitions/Customer'
paths./customers/{customerKey}.patch.security.length: 1
paths./customers/{customerKey}.patch.security[0].Oauth2.length: 1
paths./customers/{customerKey}.patch.security[0].Oauth2[0]: https://www.googleapis.com/auth/admin.directory.customer
paths./customers/{customerKey}.patch.tags.length: 1
paths./customers/{customerKey}.patch.tags[0]: customers
paths./customers/{customerKey}.put.description: Updates a customer.
paths./customers/{customerKey}.put.operationId: directory.customers.update
paths./customers/{customerKey}.put.parameters.length: 2
paths./customers/{customerKey}.put.parameters[0].description: Id of the customer to
  be updated
paths./customers/{customerKey}.put.parameters[0].in: path
paths./customers/{customerKey}.put.parameters[0].name: customerKey
paths./customers/{customerKey}.put.parameters[0].required: true
paths./customers/{customerKey}.put.parameters[0].type: string
paths./customers/{customerKey}.put.parameters[1].in: body
paths./customers/{customerKey}.put.parameters[1].name: body
paths./customers/{customerKey}.put.parameters[1].schema.$ref: '#/definitions/Customer'
paths./customers/{customerKey}.put.responses.200.description: Successful response
paths./customers/{customerKey}.put.responses.200.schema.$ref: '#/definitions/Customer'
paths./customers/{customerKey}.put.security.length: 1
paths./customers/{customerKey}.put.security[0].Oauth2.length: 1
paths./customers/{customerKey}.put.security[0].Oauth2[0]: https://www.googleapis.com/auth/admin.directory.customer
paths./customers/{customerKey}.put.tags.length: 1
paths./customers/{customerKey}.put.tags[0]: customers
paths./groups.get.description: Retrieve all groups in a domain (paginated)
paths./groups.get.operationId: directory.groups.list
paths./groups.get.parameters.length: 5
paths./groups.get.parameters[0].description: Immutable ID of the G Suite account.
  In case of multi-domain, to fetch all groups for a customer, fill this field instead
  of domain.
paths./groups.get.parameters[0].in: query
paths./groups.get.parameters[0].name: customer
paths./groups.get.parameters[0].type: string
paths./groups.get.parameters[1].description: Name of the domain. Fill this field to
  get groups from only this domain. To return all groups in a multi-domain fill customer
  field instead.
paths./groups.get.parameters[1].in: query
paths./groups.get.parameters[1].name: domain
paths./groups.get.parameters[1].type: string
paths./groups.get.parameters[2].description: Maximum number of results to return.
  Default is 200
paths./groups.get.parameters[2].in: query
paths./groups.get.parameters[2].minimum: 1
paths./groups.get.parameters[2].name: maxResults
paths./groups.get.parameters[2].type: integer
paths./groups.get.parameters[3].description: Token to specify next page in the list
paths./groups.get.parameters[3].in: query
paths./groups.get.parameters[3].name: pageToken
paths./groups.get.parameters[3].type: string
paths./groups.get.parameters[4].description: Email or immutable Id of the user if
  only those groups are to be listed, the given user is a member of. If Id, it should
  match with id of user object
paths./groups.get.parameters[4].in: query
paths./groups.get.parameters[4].name: userKey
paths./groups.get.parameters[4].type: string
paths./groups.get.responses.200.description: Successful response
paths./groups.get.responses.200.schema.$ref: '#/definitions/Groups'
paths./groups.get.security.length: 2
paths./groups.get.security[0].Oauth2.length: 1
paths./groups.get.security[0].Oauth2[0]: https://www.googleapis.com/auth/admin.directory.group
paths./groups.get.security[1].Oauth2.length: 1
paths./groups.get.security[1].Oauth2[0]: https://www.googleapis.com/auth/admin.directory.group.readonly
paths./groups.get.tags.length: 1
paths./groups.get.tags[0]: groups
paths./groups.parameters.length: 7
paths./groups.parameters[0].$ref: '#/parameters/alt'
paths./groups.parameters[1].$ref: '#/parameters/fields'
paths./groups.parameters[2].$ref: '#/parameters/key'
paths./groups.parameters[3].$ref: '#/parameters/oauth_token'
paths./groups.parameters[4].$ref: '#/parameters/prettyPrint'
paths./groups.parameters[5].$ref: '#/parameters/quotaUser'
paths./groups.parameters[6].$ref: '#/parameters/userIp'
paths./groups.post.description: Create Group
paths./groups.post.operationId: directory.groups.insert
paths./groups.post.parameters.length: 1
paths./groups.post.parameters[0].in: body
paths./groups.post.parameters[0].name: body
paths./groups.post.parameters[0].schema.$ref: '#/definitions/Group'
paths./groups.post.responses.200.description: Successful response
paths./groups.post.responses.200.schema.$ref: '#/definitions/Group'
paths./groups.post.security.length: 1
paths./groups.post.security[0].Oauth2.length: 1
paths./groups.post.security[0].Oauth2[0]: https://www.googleapis.com/auth/admin.directory.group
paths./groups.post.tags.length: 1
paths./groups.post.tags[0]: groups
paths./groups/{groupKey}.delete.description: Delete Group
paths./groups/{groupKey}.delete.operationId: directory.groups.delete
paths./groups/{groupKey}.delete.parameters.length: 1
paths./groups/{groupKey}.delete.parameters[0].description: Email or immutable Id of
  the group
paths./groups/{groupKey}.delete.parameters[0].in: path
paths./groups/{groupKey}.delete.parameters[0].name: groupKey
paths./groups/{groupKey}.delete.parameters[0].required: true
paths./groups/{groupKey}.delete.parameters[0].type: string
paths./groups/{groupKey}.delete.responses.200.description: Successful response
paths./groups/{groupKey}.delete.security.length: 1
paths./groups/{groupKey}.delete.security[0].Oauth2.length: 1
paths./groups/{groupKey}.delete.security[0].Oauth2[0]: https://www.googleapis.com/auth/admin.directory.group
paths./groups/{groupKey}.delete.tags.length: 1
paths./groups/{groupKey}.delete.tags[0]: groups
paths./groups/{groupKey}.get.description: Retrieve Group
paths./groups/{groupKey}.get.operationId: directory.groups.get
paths./groups/{groupKey}.get.parameters.length: 1
paths./groups/{groupKey}.get.parameters[0].description: Email or immutable Id of the
  group
paths./groups/{groupKey}.get.parameters[0].in: path
paths./groups/{groupKey}.get.parameters[0].name: groupKey
paths./groups/{groupKey}.get.parameters[0].required: true
paths./groups/{groupKey}.get.parameters[0].type: string
paths./groups/{groupKey}.get.responses.200.description: Successful response
paths./groups/{groupKey}.get.responses.200.schema.$ref: '#/definitions/Group'
paths./groups/{groupKey}.get.security.length: 2
paths./groups/{groupKey}.get.security[0].Oauth2.length: 1
paths./groups/{groupKey}.get.security[0].Oauth2[0]: https://www.googleapis.com/auth/admin.directory.group
paths./groups/{groupKey}.get.security[1].Oauth2.length: 1
paths./groups/{groupKey}.get.security[1].Oauth2[0]: https://www.googleapis.com/auth/admin.directory.group.readonly
paths./groups/{groupKey}.get.tags.length: 1
paths./groups/{groupKey}.get.tags[0]: groups
paths./groups/{groupKey}.parameters.length: 7
paths./groups/{groupKey}.parameters[0].$ref: '#/parameters/alt'
paths./groups/{groupKey}.parameters[1].$ref: '#/parameters/fields'
paths./groups/{groupKey}.parameters[2].$ref: '#/parameters/key'
paths./groups/{groupKey}.parameters[3].$ref: '#/parameters/oauth_token'
paths./groups/{groupKey}.parameters[4].$ref: '#/parameters/prettyPrint'
paths./groups/{groupKey}.parameters[5].$ref: '#/parameters/quotaUser'
paths./groups/{groupKey}.parameters[6].$ref: '#/parameters/userIp'
paths./groups/{groupKey}.patch.description: Update Group. This method supports patch
  semantics.
paths./groups/{groupKey}.patch.operationId: directory.groups.patch
paths./groups/{groupKey}.patch.parameters.length: 2
paths./groups/{groupKey}.patch.parameters[0].description: Email or immutable Id of
  the group. If Id, it should match with id of group object
paths./groups/{groupKey}.patch.parameters[0].in: path
paths./groups/{groupKey}.patch.parameters[0].name: groupKey
paths./groups/{groupKey}.patch.parameters[0].required: true
paths./groups/{groupKey}.patch.parameters[0].type: string
paths./groups/{groupKey}.patch.parameters[1].in: body
paths./groups/{groupKey}.patch.parameters[1].name: body
paths./groups/{groupKey}.patch.parameters[1].schema.$ref: '#/definitions/Group'
paths./groups/{groupKey}.patch.responses.200.description: Successful response
paths./groups/{groupKey}.patch.responses.200.schema.$ref: '#/definitions/Group'
paths./groups/{groupKey}.patch.security.length: 1
paths./groups/{groupKey}.patch.security[0].Oauth2.length: 1
paths./groups/{groupKey}.patch.security[0].Oauth2[0]: https://www.googleapis.com/auth/admin.directory.group
paths./groups/{groupKey}.patch.tags.length: 1
paths./groups/{groupKey}.patch.tags[0]: groups
paths./groups/{groupKey}.put.description: Update Group
paths./groups/{groupKey}.put.operationId: directory.groups.update
paths./groups/{groupKey}.put.parameters.length: 2
paths./groups/{groupKey}.put.parameters[0].description: Email or immutable Id of the
  group. If Id, it should match with id of group object
paths./groups/{groupKey}.put.parameters[0].in: path
paths./groups/{groupKey}.put.parameters[0].name: groupKey
paths./groups/{groupKey}.put.parameters[0].required: true
paths./groups/{groupKey}.put.parameters[0].type: string
paths./groups/{groupKey}.put.parameters[1].in: body
paths./groups/{groupKey}.put.parameters[1].name: body
paths./groups/{groupKey}.put.parameters[1].schema.$ref: '#/definitions/Group'
paths./groups/{groupKey}.put.responses.200.description: Successful response
paths./groups/{groupKey}.put.responses.200.schema.$ref: '#/definitions/Group'
paths./groups/{groupKey}.put.security.length: 1
paths./groups/{groupKey}.put.security[0].Oauth2.length: 1
paths./groups/{groupKey}.put.security[0].Oauth2[0]: https://www.googleapis.com/auth/admin.directory.group
paths./groups/{groupKey}.put.tags.length: 1
paths./groups/{groupKey}.put.tags[0]: groups
paths./groups/{groupKey}/aliases.get.description: List all aliases for a group
paths./groups/{groupKey}/aliases.get.operationId: directory.groups.aliases.list
paths./groups/{groupKey}/aliases.get.parameters.length: 1
paths./groups/{groupKey}/aliases.get.parameters[0].description: Email or immutable
  Id of the group
paths./groups/{groupKey}/aliases.get.parameters[0].in: path
paths./groups/{groupKey}/aliases.get.parameters[0].name: groupKey
paths./groups/{groupKey}/aliases.get.parameters[0].required: true
paths./groups/{groupKey}/aliases.get.parameters[0].type: string
paths./groups/{groupKey}/aliases.get.responses.200.description: Successful response
paths./groups/{groupKey}/aliases.get.responses.200.schema.$ref: '#/definitions/Aliases'
paths./groups/{groupKey}/aliases.get.security.length: 2
paths./groups/{groupKey}/aliases.get.security[0].Oauth2.length: 1
paths./groups/{groupKey}/aliases.get.security[0].Oauth2[0]: https://www.googleapis.com/auth/admin.directory.group
paths./groups/{groupKey}/aliases.get.security[1].Oauth2.length: 1
paths./groups/{groupKey}/aliases.get.security[1].Oauth2[0]: https://www.googleapis.com/auth/admin.directory.group.readonly
paths./groups/{groupKey}/aliases.get.tags.length: 1
paths./groups/{groupKey}/aliases.get.tags[0]: groups
paths./groups/{groupKey}/aliases.parameters.length: 7
paths./groups/{groupKey}/aliases.parameters[0].$ref: '#/parameters/alt'
paths./groups/{groupKey}/aliases.parameters[1].$ref: '#/parameters/fields'
paths./groups/{groupKey}/aliases.parameters[2].$ref: '#/parameters/key'
paths./groups/{groupKey}/aliases.parameters[3].$ref: '#/parameters/oauth_token'
paths./groups/{groupKey}/aliases.parameters[4].$ref: '#/parameters/prettyPrint'
paths./groups/{groupKey}/aliases.parameters[5].$ref: '#/parameters/quotaUser'
paths./groups/{groupKey}/aliases.parameters[6].$ref: '#/parameters/userIp'
paths./groups/{groupKey}/aliases.post.description: Add a alias for the group
paths./groups/{groupKey}/aliases.post.operationId: directory.groups.aliases.insert
paths./groups/{groupKey}/aliases.post.parameters.length: 2
paths./groups/{groupKey}/aliases.post.parameters[0].description: Email or immutable
  Id of the group
paths./groups/{groupKey}/aliases.post.parameters[0].in: path
paths./groups/{groupKey}/aliases.post.parameters[0].name: groupKey
paths./groups/{groupKey}/aliases.post.parameters[0].required: true
paths./groups/{groupKey}/aliases.post.parameters[0].type: string
paths./groups/{groupKey}/aliases.post.parameters[1].in: body
paths./groups/{groupKey}/aliases.post.parameters[1].name: body
paths./groups/{groupKey}/aliases.post.parameters[1].schema.$ref: '#/definitions/Alias'
paths./groups/{groupKey}/aliases.post.responses.200.description: Successful response
paths./groups/{groupKey}/aliases.post.responses.200.schema.$ref: '#/definitions/Alias'
paths./groups/{groupKey}/aliases.post.security.length: 1
paths./groups/{groupKey}/aliases.post.security[0].Oauth2.length: 1
paths./groups/{groupKey}/aliases.post.security[0].Oauth2[0]: https://www.googleapis.com/auth/admin.directory.group
paths./groups/{groupKey}/aliases.post.tags.length: 1
paths./groups/{groupKey}/aliases.post.tags[0]: groups
paths./groups/{groupKey}/aliases/{alias}.delete.description: Remove a alias for the
  group
paths./groups/{groupKey}/aliases/{alias}.delete.operationId: directory.groups.aliases.delete
paths./groups/{groupKey}/aliases/{alias}.delete.parameters.length: 2
paths./groups/{groupKey}/aliases/{alias}.delete.parameters[0].description: Email or
  immutable Id of the group
paths./groups/{groupKey}/aliases/{alias}.delete.parameters[0].in: path
paths./groups/{groupKey}/aliases/{alias}.delete.parameters[0].name: groupKey
paths./groups/{groupKey}/aliases/{alias}.delete.parameters[0].required: true
paths./groups/{groupKey}/aliases/{alias}.delete.parameters[0].type: string
paths./groups/{groupKey}/aliases/{alias}.delete.parameters[1].description: The alias
  to be removed
paths./groups/{groupKey}/aliases/{alias}.delete.parameters[1].in: path
paths./groups/{groupKey}/aliases/{alias}.delete.parameters[1].name: alias
paths./groups/{groupKey}/aliases/{alias}.delete.parameters[1].required: true
paths./groups/{groupKey}/aliases/{alias}.delete.parameters[1].type: string
paths./groups/{groupKey}/aliases/{alias}.delete.responses.200.description: Successful
  response
paths./groups/{groupKey}/aliases/{alias}.delete.security.length: 1
paths./groups/{groupKey}/aliases/{alias}.delete.security[0].Oauth2.length: 1
paths./groups/{groupKey}/aliases/{alias}.delete.security[0].Oauth2[0]: https://www.googleapis.com/auth/admin.directory.group
paths./groups/{groupKey}/aliases/{alias}.delete.tags.length: 1
paths./groups/{groupKey}/aliases/{alias}.delete.tags[0]: groups
paths./groups/{groupKey}/aliases/{alias}.parameters.length: 7
paths./groups/{groupKey}/aliases/{alias}.parameters[0].$ref: '#/parameters/alt'
paths./groups/{groupKey}/aliases/{alias}.parameters[1].$ref: '#/parameters/fields'
paths./groups/{groupKey}/aliases/{alias}.parameters[2].$ref: '#/parameters/key'
paths./groups/{groupKey}/aliases/{alias}.parameters[3].$ref: '#/parameters/oauth_token'
paths./groups/{groupKey}/aliases/{alias}.parameters[4].$ref: '#/parameters/prettyPrint'
paths./groups/{groupKey}/aliases/{alias}.parameters[5].$ref: '#/parameters/quotaUser'
paths./groups/{groupKey}/aliases/{alias}.parameters[6].$ref: '#/parameters/userIp'
paths./groups/{groupKey}/members.get.description: Retrieve all members in a group
  (paginated)
paths./groups/{groupKey}/members.get.operationId: directory.members.list
paths./groups/{groupKey}/members.get.parameters.length: 4
paths./groups/{groupKey}/members.get.parameters[0].description: Email or immutable
  Id of the group
paths./groups/{groupKey}/members.get.parameters[0].in: path
paths./groups/{groupKey}/members.get.parameters[0].name: groupKey
paths./groups/{groupKey}/members.get.parameters[0].required: true
paths./groups/{groupKey}/members.get.parameters[0].type: string
paths./groups/{groupKey}/members.get.parameters[1].description: Maximum number of
  results to return. Default is 200
paths./groups/{groupKey}/members.get.parameters[1].in: query
paths./groups/{groupKey}/members.get.parameters[1].minimum: 1
paths./groups/{groupKey}/members.get.parameters[1].name: maxResults
paths./groups/{groupKey}/members.get.parameters[1].type: integer
paths./groups/{groupKey}/members.get.parameters[2].description: Token to specify next
  page in the list
paths./groups/{groupKey}/members.get.parameters[2].in: query
paths./groups/{groupKey}/members.get.parameters[2].name: pageToken
paths./groups/{groupKey}/members.get.parameters[2].type: string
paths./groups/{groupKey}/members.get.parameters[3].description: Comma separated role
  values to filter list results on.
paths./groups/{groupKey}/members.get.parameters[3].in: query
paths./groups/{groupKey}/members.get.parameters[3].name: roles
paths./groups/{groupKey}/members.get.parameters[3].type: string
paths./groups/{groupKey}/members.get.responses.200.description: Successful response
paths./groups/{groupKey}/members.get.responses.200.schema.$ref: '#/definitions/Members'
paths./groups/{groupKey}/members.get.security.length: 4
paths./groups/{groupKey}/members.get.security[0].Oauth2.length: 1
paths./groups/{groupKey}/members.get.security[0].Oauth2[0]: https://www.googleapis.com/auth/admin.directory.group
paths./groups/{groupKey}/members.get.security[1].Oauth2.length: 1
paths./groups/{groupKey}/members.get.security[1].Oauth2[0]: https://www.googleapis.com/auth/admin.directory.group.member
paths./groups/{groupKey}/members.get.security[2].Oauth2.length: 1
paths./groups/{groupKey}/members.get.security[2].Oauth2[0]: https://www.googleapis.com/auth/admin.directory.group.member.readonly
paths./groups/{groupKey}/members.get.security[3].Oauth2.length: 1
paths./groups/{groupKey}/members.get.security[3].Oauth2[0]: https://www.googleapis.com/auth/admin.directory.group.readonly
paths./groups/{groupKey}/members.get.tags.length: 1
paths./groups/{groupKey}/members.get.tags[0]: members
paths./groups/{groupKey}/members.parameters.length: 7
paths./groups/{groupKey}/members.parameters[0].$ref: '#/parameters/alt'
paths./groups/{groupKey}/members.parameters[1].$ref: '#/parameters/fields'
paths./groups/{groupKey}/members.parameters[2].$ref: '#/parameters/key'
paths./groups/{groupKey}/members.parameters[3].$ref: '#/parameters/oauth_token'
paths./groups/{groupKey}/members.parameters[4].$ref: '#/parameters/prettyPrint'
paths./groups/{groupKey}/members.parameters[5].$ref: '#/parameters/quotaUser'
paths./groups/{groupKey}/members.parameters[6].$ref: '#/parameters/userIp'
paths./groups/{groupKey}/members.post.description: Add user to the specified group.
paths./groups/{groupKey}/members.post.operationId: directory.members.insert
paths./groups/{groupKey}/members.post.parameters.length: 2
paths./groups/{groupKey}/members.post.parameters[0].description: Email or immutable
  Id of the group
paths./groups/{groupKey}/members.post.parameters[0].in: path
paths./groups/{groupKey}/members.post.parameters[0].name: groupKey
paths./groups/{groupKey}/members.post.parameters[0].required: true
paths./groups/{groupKey}/members.post.parameters[0].type: string
paths./groups/{groupKey}/members.post.parameters[1].in: body
paths./groups/{groupKey}/members.post.parameters[1].name: body
paths./groups/{groupKey}/members.post.parameters[1].schema.$ref: '#/definitions/Member'
paths./groups/{groupKey}/members.post.responses.200.description: Successful response
paths./groups/{groupKey}/members.post.responses.200.schema.$ref: '#/definitions/Member'
paths./groups/{groupKey}/members.post.security.length: 2
paths./groups/{groupKey}/members.post.security[0].Oauth2.length: 1
paths./groups/{groupKey}/members.post.security[0].Oauth2[0]: https://www.googleapis.com/auth/admin.directory.group
paths./groups/{groupKey}/members.post.security[1].Oauth2.length: 1
paths./groups/{groupKey}/members.post.security[1].Oauth2[0]: https://www.googleapis.com/auth/admin.directory.group.member
paths./groups/{groupKey}/members.post.tags.length: 1
paths./groups/{groupKey}/members.post.tags[0]: members
paths./groups/{groupKey}/members/{memberKey}.delete.description: Remove membership.
paths./groups/{groupKey}/members/{memberKey}.delete.operationId: directory.members.delete
paths./groups/{groupKey}/members/{memberKey}.delete.parameters.length: 2
paths./groups/{groupKey}/members/{memberKey}.delete.parameters[0].description: Email
  or immutable Id of the group
paths./groups/{groupKey}/members/{memberKey}.delete.parameters[0].in: path
paths./groups/{groupKey}/members/{memberKey}.delete.parameters[0].name: groupKey
paths./groups/{groupKey}/members/{memberKey}.delete.parameters[0].required: true
paths./groups/{groupKey}/members/{memberKey}.delete.parameters[0].type: string
paths./groups/{groupKey}/members/{memberKey}.delete.parameters[1].description: Email
  or immutable Id of the member
paths./groups/{groupKey}/members/{memberKey}.delete.parameters[1].in: path
paths./groups/{groupKey}/members/{memberKey}.delete.parameters[1].name: memberKey
paths./groups/{groupKey}/members/{memberKey}.delete.parameters[1].required: true
paths./groups/{groupKey}/members/{memberKey}.delete.parameters[1].type: string
paths./groups/{groupKey}/members/{memberKey}.delete.responses.200.description: Successful
  response
paths./groups/{groupKey}/members/{memberKey}.delete.security.length: 2
paths./groups/{groupKey}/members/{memberKey}.delete.security[0].Oauth2.length: 1
paths./groups/{groupKey}/members/{memberKey}.delete.security[0].Oauth2[0]: https://www.googleapis.com/auth/admin.directory.group
paths./groups/{groupKey}/members/{memberKey}.delete.security[1].Oauth2.length: 1
paths./groups/{groupKey}/members/{memberKey}.delete.security[1].Oauth2[0]: https://www.googleapis.com/auth/admin.directory.group.member
paths./groups/{groupKey}/members/{memberKey}.delete.tags.length: 1
paths./groups/{groupKey}/members/{memberKey}.delete.tags[0]: members
paths./groups/{groupKey}/members/{memberKey}.get.description: Retrieve Group Member
paths./groups/{groupKey}/members/{memberKey}.get.operationId: directory.members.get
paths./groups/{groupKey}/members/{memberKey}.get.parameters.length: 2
paths./groups/{groupKey}/members/{memberKey}.get.parameters[0].description: Email
  or immutable Id of the group
paths./groups/{groupKey}/members/{memberKey}.get.parameters[0].in: path
paths./groups/{groupKey}/members/{memberKey}.get.parameters[0].name: groupKey
paths./groups/{groupKey}/members/{memberKey}.get.parameters[0].required: true
paths./groups/{groupKey}/members/{memberKey}.get.parameters[0].type: string
paths./groups/{groupKey}/members/{memberKey}.get.parameters[1].description: Email
  or immutable Id of the member
paths./groups/{groupKey}/members/{memberKey}.get.parameters[1].in: path
paths./groups/{groupKey}/members/{memberKey}.get.parameters[1].name: memberKey
paths./groups/{groupKey}/members/{memberKey}.get.parameters[1].required: true
paths./groups/{groupKey}/members/{memberKey}.get.parameters[1].type: string
paths./groups/{groupKey}/members/{memberKey}.get.responses.200.description: Successful
  response
paths./groups/{groupKey}/members/{memberKey}.get.responses.200.schema.$ref: '#/definitions/Member'
paths./groups/{groupKey}/members/{memberKey}.get.security.length: 4
paths./groups/{groupKey}/members/{memberKey}.get.security[0].Oauth2.length: 1
paths./groups/{groupKey}/members/{memberKey}.get.security[0].Oauth2[0]: https://www.googleapis.com/auth/admin.directory.group
paths./groups/{groupKey}/members/{memberKey}.get.security[1].Oauth2.length: 1
paths./groups/{groupKey}/members/{memberKey}.get.security[1].Oauth2[0]: https://www.googleapis.com/auth/admin.directory.group.member
paths./groups/{groupKey}/members/{memberKey}.get.security[2].Oauth2.length: 1
paths./groups/{groupKey}/members/{memberKey}.get.security[2].Oauth2[0]: https://www.googleapis.com/auth/admin.directory.group.member.readonly
paths./groups/{groupKey}/members/{memberKey}.get.security[3].Oauth2.length: 1
paths./groups/{groupKey}/members/{memberKey}.get.security[3].Oauth2[0]: https://www.googleapis.com/auth/admin.directory.group.readonly
paths./groups/{groupKey}/members/{memberKey}.get.tags.length: 1
paths./groups/{groupKey}/members/{memberKey}.get.tags[0]: members
paths./groups/{groupKey}/members/{memberKey}.parameters.length: 7
paths./groups/{groupKey}/members/{memberKey}.parameters[0].$ref: '#/parameters/alt'
paths./groups/{groupKey}/members/{memberKey}.parameters[1].$ref: '#/parameters/fields'
paths./groups/{groupKey}/members/{memberKey}.parameters[2].$ref: '#/parameters/key'
paths./groups/{groupKey}/members/{memberKey}.parameters[3].$ref: '#/parameters/oauth_token'
paths./groups/{groupKey}/members/{memberKey}.parameters[4].$ref: '#/parameters/prettyPrint'
paths./groups/{groupKey}/members/{memberKey}.parameters[5].$ref: '#/parameters/quotaUser'
paths./groups/{groupKey}/members/{memberKey}.parameters[6].$ref: '#/parameters/userIp'
paths./groups/{groupKey}/members/{memberKey}.patch.description: Update membership
  of a user in the specified group. This method supports patch semantics.
paths./groups/{groupKey}/members/{memberKey}.patch.operationId: directory.members.patch
paths./groups/{groupKey}/members/{memberKey}.patch.parameters.length: 3
paths./groups/{groupKey}/members/{memberKey}.patch.parameters[0].description: Email
  or immutable Id of the group. If Id, it should match with id of group object
paths./groups/{groupKey}/members/{memberKey}.patch.parameters[0].in: path
paths./groups/{groupKey}/members/{memberKey}.patch.parameters[0].name: groupKey
paths./groups/{groupKey}/members/{memberKey}.patch.parameters[0].required: true
paths./groups/{groupKey}/members/{memberKey}.patch.parameters[0].type: string
paths./groups/{groupKey}/members/{memberKey}.patch.parameters[1].description: Email
  or immutable Id of the user. If Id, it should match with id of member object
paths./groups/{groupKey}/members/{memberKey}.patch.parameters[1].in: path
paths./groups/{groupKey}/members/{memberKey}.patch.parameters[1].name: memberKey
paths./groups/{groupKey}/members/{memberKey}.patch.parameters[1].required: true
paths./groups/{groupKey}/members/{memberKey}.patch.parameters[1].type: string
paths./groups/{groupKey}/members/{memberKey}.patch.parameters[2].in: body
paths./groups/{groupKey}/members/{memberKey}.patch.parameters[2].name: body
paths./groups/{groupKey}/members/{memberKey}.patch.parameters[2].schema.$ref: '#/definitions/Member'
paths./groups/{groupKey}/members/{memberKey}.patch.responses.200.description: Successful
  response
paths./groups/{groupKey}/members/{memberKey}.patch.responses.200.schema.$ref: '#/definitions/Member'
paths./groups/{groupKey}/members/{memberKey}.patch.security.length: 2
paths./groups/{groupKey}/members/{memberKey}.patch.security[0].Oauth2.length: 1
paths./groups/{groupKey}/members/{memberKey}.patch.security[0].Oauth2[0]: https://www.googleapis.com/auth/admin.directory.group
paths./groups/{groupKey}/members/{memberKey}.patch.security[1].Oauth2.length: 1
paths./groups/{groupKey}/members/{memberKey}.patch.security[1].Oauth2[0]: https://www.googleapis.com/auth/admin.directory.group.member
paths./groups/{groupKey}/members/{memberKey}.patch.tags.length: 1
paths./groups/{groupKey}/members/{memberKey}.patch.tags[0]: members
paths./groups/{groupKey}/members/{memberKey}.put.description: Update membership of
  a user in the specified group.
paths./groups/{groupKey}/members/{memberKey}.put.operationId: directory.members.update
paths./groups/{groupKey}/members/{memberKey}.put.parameters.length: 3
paths./groups/{groupKey}/members/{memberKey}.put.parameters[0].description: Email
  or immutable Id of the group. If Id, it should match with id of group object
paths./groups/{groupKey}/members/{memberKey}.put.parameters[0].in: path
paths./groups/{groupKey}/members/{memberKey}.put.parameters[0].name: groupKey
paths./groups/{groupKey}/members/{memberKey}.put.parameters[0].required: true
paths./groups/{groupKey}/members/{memberKey}.put.parameters[0].type: string
paths./groups/{groupKey}/members/{memberKey}.put.parameters[1].description: Email
  or immutable Id of the user. If Id, it should match with id of member object
paths./groups/{groupKey}/members/{memberKey}.put.parameters[1].in: path
paths./groups/{groupKey}/members/{memberKey}.put.parameters[1].name: memberKey
paths./groups/{groupKey}/members/{memberKey}.put.parameters[1].required: true
paths./groups/{groupKey}/members/{memberKey}.put.parameters[1].type: string
paths./groups/{groupKey}/members/{memberKey}.put.parameters[2].in: body
paths./groups/{groupKey}/members/{memberKey}.put.parameters[2].name: body
paths./groups/{groupKey}/members/{memberKey}.put.parameters[2].schema.$ref: '#/definitions/Member'
paths./groups/{groupKey}/members/{memberKey}.put.responses.200.description: Successful
  response
paths./groups/{groupKey}/members/{memberKey}.put.responses.200.schema.$ref: '#/definitions/Member'
paths./groups/{groupKey}/members/{memberKey}.put.security.length: 2
paths./groups/{groupKey}/members/{memberKey}.put.security[0].Oauth2.length: 1
paths./groups/{groupKey}/members/{memberKey}.put.security[0].Oauth2[0]: https://www.googleapis.com/auth/admin.directory.group
paths./groups/{groupKey}/members/{memberKey}.put.security[1].Oauth2.length: 1
paths./groups/{groupKey}/members/{memberKey}.put.security[1].Oauth2[0]: https://www.googleapis.com/auth/admin.directory.group.member
paths./groups/{groupKey}/members/{memberKey}.put.tags.length: 1
paths./groups/{groupKey}/members/{memberKey}.put.tags[0]: members
paths./users.get.description: Retrieve either deleted users or all users in a domain
  (paginated)
paths./users.get.operationId: directory.users.list
paths./users.get.parameters.length: 12
paths./users.get.parameters[0].description: Comma-separated list of schema names.
  All fields from these schemas are fetched. This should only be set when projection=custom.
paths./users.get.parameters[0].in: query
paths./users.get.parameters[0].name: customFieldMask
paths./users.get.parameters[0].type: string
paths./users.get.parameters[1].description: Immutable ID of the G Suite account. In
  case of multi-domain, to fetch all users for a customer, fill this field instead
  of domain.
paths./users.get.parameters[1].in: query
paths./users.get.parameters[1].name: customer
paths./users.get.parameters[1].type: string
paths./users.get.parameters[2].description: Name of the domain. Fill this field to
  get users from only this domain. To return all users in a multi-domain fill customer
  field instead.
paths./users.get.parameters[2].in: query
paths./users.get.parameters[2].name: domain
paths./users.get.parameters[2].type: string
paths./users.get.parameters[3].description: Event on which subscription is intended
  (if subscribing)
paths./users.get.parameters[3].enum.length: 5
paths./users.get.parameters[3].enum[0]: add
paths./users.get.parameters[3].enum[1]: delete
paths./users.get.parameters[3].enum[2]: makeAdmin
paths./users.get.parameters[3].enum[3]: undelete
paths./users.get.parameters[3].enum[4]: update
paths./users.get.parameters[3].in: query
paths./users.get.parameters[3].name: event
paths./users.get.parameters[3].type: string
paths./users.get.parameters[4].description: Maximum number of results to return. Default
  is 100. Max allowed is 500
paths./users.get.parameters[4].in: query
paths./users.get.parameters[4].maximum: 500
paths./users.get.parameters[4].minimum: 1
paths./users.get.parameters[4].name: maxResults
paths./users.get.parameters[4].type: integer
paths./users.get.parameters[5].description: Column to use for sorting results
paths./users.get.parameters[5].enum.length: 3
paths./users.get.parameters[5].enum[0]: email
paths./users.get.parameters[5].enum[1]: familyName
paths./users.get.parameters[5].enum[2]: givenName
paths./users.get.parameters[5].in: query
paths./users.get.parameters[5].name: orderBy
paths./users.get.parameters[5].type: string
paths./users.get.parameters[6].description: Token to specify next page in the list
paths./users.get.parameters[6].in: query
paths./users.get.parameters[6].name: pageToken
paths./users.get.parameters[6].type: string
paths./users.get.parameters[7].default: basic
paths./users.get.parameters[7].description: What subset of fields to fetch for this
  user.
paths./users.get.parameters[7].enum.length: 3
paths./users.get.parameters[7].enum[0]: basic
paths./users.get.parameters[7].enum[1]: custom
paths./users.get.parameters[7].enum[2]: full
paths./users.get.parameters[7].in: query
paths./users.get.parameters[7].name: projection
paths./users.get.parameters[7].type: string
paths./users.get.parameters[8].description: Query string search. Should be of the
  form "". Complete documentation is at https://developers.google.com/admin-sdk/directory/v1/guides/search-users
paths./users.get.parameters[8].in: query
paths./users.get.parameters[8].name: query
paths./users.get.parameters[8].type: string
paths./users.get.parameters[9].description: If set to true retrieves the list of deleted
  users. Default is false
paths./users.get.parameters[9].in: query
paths./users.get.parameters[9].name: showDeleted
paths./users.get.parameters[9].type: string
paths./users.get.parameters[10].description: Whether to return results in ascending
  or descending order.
paths./users.get.parameters[10].enum.length: 2
paths./users.get.parameters[10].enum[0]: ASCENDING
paths./users.get.parameters[10].enum[1]: DESCENDING
paths./users.get.parameters[10].in: query
paths./users.get.parameters[10].name: sortOrder
paths./users.get.parameters[10].type: string
paths./users.get.parameters[11].default: admin_view
paths./users.get.parameters[11].description: Whether to fetch the ADMIN_VIEW or DOMAIN_PUBLIC
  view of the user.
paths./users.get.parameters[11].enum.length: 2
paths./users.get.parameters[11].enum[0]: admin_view
paths./users.get.parameters[11].enum[1]: domain_public
paths./users.get.parameters[11].in: query
paths./users.get.parameters[11].name: viewType
paths./users.get.parameters[11].type: string
paths./users.get.responses.200.description: Successful response
paths./users.get.responses.200.schema.$ref: '#/definitions/Users'
paths./users.get.security.length: 2
paths./users.get.security[0].Oauth2.length: 1
paths./users.get.security[0].Oauth2[0]: https://www.googleapis.com/auth/admin.directory.user
paths./users.get.security[1].Oauth2.length: 1
paths./users.get.security[1].Oauth2[0]: https://www.googleapis.com/auth/admin.directory.user.readonly
paths./users.get.tags.length: 1
paths./users.get.tags[0]: users
paths./users.parameters.length: 7
paths./users.parameters[0].$ref: '#/parameters/alt'
paths./users.parameters[1].$ref: '#/parameters/fields'
paths./users.parameters[2].$ref: '#/parameters/key'
paths./users.parameters[3].$ref: '#/parameters/oauth_token'
paths./users.parameters[4].$ref: '#/parameters/prettyPrint'
paths./users.parameters[5].$ref: '#/parameters/quotaUser'
paths./users.parameters[6].$ref: '#/parameters/userIp'
paths./users.post.description: create user.
paths./users.post.operationId: directory.users.insert
paths./users.post.parameters.length: 1
paths./users.post.parameters[0].in: body
paths./users.post.parameters[0].name: body
paths./users.post.parameters[0].schema.$ref: '#/definitions/User'
paths./users.post.responses.200.description: Successful response
paths./users.post.responses.200.schema.$ref: '#/definitions/User'
paths./users.post.security.length: 1
paths./users.post.security[0].Oauth2.length: 1
paths./users.post.security[0].Oauth2[0]: https://www.googleapis.com/auth/admin.directory.user
paths./users.post.tags.length: 1
paths./users.post.tags[0]: users
paths./users/{userKey}.delete.description: Delete user
paths./users/{userKey}.delete.operationId: directory.users.delete
paths./users/{userKey}.delete.parameters.length: 1
paths./users/{userKey}.delete.parameters[0].description: Email or immutable Id of
  the user
paths./users/{userKey}.delete.parameters[0].in: path
paths./users/{userKey}.delete.parameters[0].name: userKey
paths./users/{userKey}.delete.parameters[0].required: true
paths./users/{userKey}.delete.parameters[0].type: string
paths./users/{userKey}.delete.responses.200.description: Successful response
paths./users/{userKey}.delete.security.length: 1
paths./users/{userKey}.delete.security[0].Oauth2.length: 1
paths./users/{userKey}.delete.security[0].Oauth2[0]: https://www.googleapis.com/auth/admin.directory.user
paths./users/{userKey}.delete.tags.length: 1
paths./users/{userKey}.delete.tags[0]: users
paths./users/{userKey}.get.description: retrieve user
paths./users/{userKey}.get.operationId: directory.users.get
paths./users/{userKey}.get.parameters.length: 4
paths./users/{userKey}.get.parameters[0].description: Email or immutable Id of the
  user
paths./users/{userKey}.get.parameters[0].in: path
paths./users/{userKey}.get.parameters[0].name: userKey
paths./users/{userKey}.get.parameters[0].required: true
paths./users/{userKey}.get.parameters[0].type: string
paths./users/{userKey}.get.parameters[1].description: Comma-separated list of schema
  names. All fields from these schemas are fetched. This should only be set when projection=custom.
paths./users/{userKey}.get.parameters[1].in: query
paths./users/{userKey}.get.parameters[1].name: customFieldMask
paths./users/{userKey}.get.parameters[1].type: string
paths./users/{userKey}.get.parameters[2].default: basic
paths./users/{userKey}.get.parameters[2].description: What subset of fields to fetch
  for this user.
paths./users/{userKey}.get.parameters[2].enum.length: 3
paths./users/{userKey}.get.parameters[2].enum[0]: basic
paths./users/{userKey}.get.parameters[2].enum[1]: custom
paths./users/{userKey}.get.parameters[2].enum[2]: full
paths./users/{userKey}.get.parameters[2].in: query
paths./users/{userKey}.get.parameters[2].name: projection
paths./users/{userKey}.get.parameters[2].type: string
paths./users/{userKey}.get.parameters[3].default: admin_view
paths./users/{userKey}.get.parameters[3].description: Whether to fetch the ADMIN_VIEW
  or DOMAIN_PUBLIC view of the user.
paths./users/{userKey}.get.parameters[3].enum.length: 2
paths./users/{userKey}.get.parameters[3].enum[0]: admin_view
paths./users/{userKey}.get.parameters[3].enum[1]: domain_public
paths./users/{userKey}.get.parameters[3].in: query
paths./users/{userKey}.get.parameters[3].name: viewType
paths./users/{userKey}.get.parameters[3].type: string
paths./users/{userKey}.get.responses.200.description: Successful response
paths./users/{userKey}.get.responses.200.schema.$ref: '#/definitions/User'
paths./users/{userKey}.get.security.length: 2
paths./users/{userKey}.get.security[0].Oauth2.length: 1
paths./users/{userKey}.get.security[0].Oauth2[0]: https://www.googleapis.com/auth/admin.directory.user
paths./users/{userKey}.get.security[1].Oauth2.length: 1
paths./users/{userKey}.get.security[1].Oauth2[0]: https://www.googleapis.com/auth/admin.directory.user.readonly
paths./users/{userKey}.get.tags.length: 1
paths./users/{userKey}.get.tags[0]: users
paths./users/{userKey}.parameters.length: 7
paths./users/{userKey}.parameters[0].$ref: '#/parameters/alt'
paths./users/{userKey}.parameters[1].$ref: '#/parameters/fields'
paths./users/{userKey}.parameters[2].$ref: '#/parameters/key'
paths./users/{userKey}.parameters[3].$ref: '#/parameters/oauth_token'
paths./users/{userKey}.parameters[4].$ref: '#/parameters/prettyPrint'
paths./users/{userKey}.parameters[5].$ref: '#/parameters/quotaUser'
paths./users/{userKey}.parameters[6].$ref: '#/parameters/userIp'
paths./users/{userKey}.patch.description: update user. This method supports patch
  semantics.
paths./users/{userKey}.patch.operationId: directory.users.patch
paths./users/{userKey}.patch.parameters.length: 2
paths./users/{userKey}.patch.parameters[0].description: Email or immutable Id of the
  user. If Id, it should match with id of user object
paths./users/{userKey}.patch.parameters[0].in: path
paths./users/{userKey}.patch.parameters[0].name: userKey
paths./users/{userKey}.patch.parameters[0].required: true
paths./users/{userKey}.patch.parameters[0].type: string
paths./users/{userKey}.patch.parameters[1].in: body
paths./users/{userKey}.patch.parameters[1].name: body
paths./users/{userKey}.patch.parameters[1].schema.$ref: '#/definitions/User'
paths./users/{userKey}.patch.responses.200.description: Successful response
paths./users/{userKey}.patch.responses.200.schema.$ref: '#/definitions/User'
paths./users/{userKey}.patch.security.length: 1
paths./users/{userKey}.patch.security[0].Oauth2.length: 1
paths./users/{userKey}.patch.security[0].Oauth2[0]: https://www.googleapis.com/auth/admin.directory.user
paths./users/{userKey}.patch.tags.length: 1
paths./users/{userKey}.patch.tags[0]: users
paths./users/{userKey}.put.description: update user
paths./users/{userKey}.put.operationId: directory.users.update
paths./users/{userKey}.put.parameters.length: 2
paths./users/{userKey}.put.parameters[0].description: Email or immutable Id of the
  user. If Id, it should match with id of user object
paths./users/{userKey}.put.parameters[0].in: path
paths./users/{userKey}.put.parameters[0].name: userKey
paths./users/{userKey}.put.parameters[0].required: true
paths./users/{userKey}.put.parameters[0].type: string
paths./users/{userKey}.put.parameters[1].in: body
paths./users/{userKey}.put.parameters[1].name: body
paths./users/{userKey}.put.parameters[1].schema.$ref: '#/definitions/User'
paths./users/{userKey}.put.responses.200.description: Successful response
paths./users/{userKey}.put.responses.200.schema.$ref: '#/definitions/User'
paths./users/{userKey}.put.security.length: 1
paths./users/{userKey}.put.security[0].Oauth2.length: 1
paths./users/{userKey}.put.security[0].Oauth2[0]: https://www.googleapis.com/auth/admin.directory.user
paths./users/{userKey}.put.tags.length: 1
paths./users/{userKey}.put.tags[0]: users
paths./users/{userKey}/aliases.get.description: List all aliases for a user
paths./users/{userKey}/aliases.get.operationId: directory.users.aliases.list
paths./users/{userKey}/aliases.get.parameters.length: 2
paths./users/{userKey}/aliases.get.parameters[0].description: Email or immutable Id
  of the user
paths./users/{userKey}/aliases.get.parameters[0].in: path
paths./users/{userKey}/aliases.get.parameters[0].name: userKey
paths./users/{userKey}/aliases.get.parameters[0].required: true
paths./users/{userKey}/aliases.get.parameters[0].type: string
paths./users/{userKey}/aliases.get.parameters[1].description: Event on which subscription
  is intended (if subscribing)
paths./users/{userKey}/aliases.get.parameters[1].enum.length: 2
paths./users/{userKey}/aliases.get.parameters[1].enum[0]: add
paths./users/{userKey}/aliases.get.parameters[1].enum[1]: delete
paths./users/{userKey}/aliases.get.parameters[1].in: query
paths./users/{userKey}/aliases.get.parameters[1].name: event
paths./users/{userKey}/aliases.get.parameters[1].type: string
paths./users/{userKey}/aliases.get.responses.200.description: Successful response
paths./users/{userKey}/aliases.get.responses.200.schema.$ref: '#/definitions/Aliases'
paths./users/{userKey}/aliases.get.security.length: 4
paths./users/{userKey}/aliases.get.security[0].Oauth2.length: 1
paths./users/{userKey}/aliases.get.security[0].Oauth2[0]: https://www.googleapis.com/auth/admin.directory.user
paths./users/{userKey}/aliases.get.security[1].Oauth2.length: 1
paths./users/{userKey}/aliases.get.security[1].Oauth2[0]: https://www.googleapis.com/auth/admin.directory.user.alias
paths./users/{userKey}/aliases.get.security[2].Oauth2.length: 1
paths./users/{userKey}/aliases.get.security[2].Oauth2[0]: https://www.googleapis.com/auth/admin.directory.user.alias.readonly
paths./users/{userKey}/aliases.get.security[3].Oauth2.length: 1
paths./users/{userKey}/aliases.get.security[3].Oauth2[0]: https://www.googleapis.com/auth/admin.directory.user.readonly
paths./users/{userKey}/aliases.get.tags.length: 1
paths./users/{userKey}/aliases.get.tags[0]: users
paths./users/{userKey}/aliases.parameters.length: 7
paths./users/{userKey}/aliases.parameters[0].$ref: '#/parameters/alt'
paths./users/{userKey}/aliases.parameters[1].$ref: '#/parameters/fields'
paths./users/{userKey}/aliases.parameters[2].$ref: '#/parameters/key'
paths./users/{userKey}/aliases.parameters[3].$ref: '#/parameters/oauth_token'
paths./users/{userKey}/aliases.parameters[4].$ref: '#/parameters/prettyPrint'
paths./users/{userKey}/aliases.parameters[5].$ref: '#/parameters/quotaUser'
paths./users/{userKey}/aliases.parameters[6].$ref: '#/parameters/userIp'
paths./users/{userKey}/aliases.post.description: Add a alias for the user
paths./users/{userKey}/aliases.post.operationId: directory.users.aliases.insert
paths./users/{userKey}/aliases.post.parameters.length: 2
paths./users/{userKey}/aliases.post.parameters[0].description: Email or immutable
  Id of the user
paths./users/{userKey}/aliases.post.parameters[0].in: path
paths./users/{userKey}/aliases.post.parameters[0].name: userKey
paths./users/{userKey}/aliases.post.parameters[0].required: true
paths./users/{userKey}/aliases.post.parameters[0].type: string
paths./users/{userKey}/aliases.post.parameters[1].in: body
paths./users/{userKey}/aliases.post.parameters[1].name: body
paths./users/{userKey}/aliases.post.parameters[1].schema.$ref: '#/definitions/Alias'
paths./users/{userKey}/aliases.post.responses.200.description: Successful response
paths./users/{userKey}/aliases.post.responses.200.schema.$ref: '#/definitions/Alias'
paths./users/{userKey}/aliases.post.security.length: 2
paths./users/{userKey}/aliases.post.security[0].Oauth2.length: 1
paths./users/{userKey}/aliases.post.security[0].Oauth2[0]: https://www.googleapis.com/auth/admin.directory.user
paths./users/{userKey}/aliases.post.security[1].Oauth2.length: 1
paths./users/{userKey}/aliases.post.security[1].Oauth2[0]: https://www.googleapis.com/auth/admin.directory.user.alias
paths./users/{userKey}/aliases.post.tags.length: 1
paths./users/{userKey}/aliases.post.tags[0]: users
paths./users/{userKey}/aliases/{alias}.delete.description: Remove a alias for the
  user
paths./users/{userKey}/aliases/{alias}.delete.operationId: directory.users.aliases.delete
paths./users/{userKey}/aliases/{alias}.delete.parameters.length: 2
paths./users/{userKey}/aliases/{alias}.delete.parameters[0].description: Email or
  immutable Id of the user
paths./users/{userKey}/aliases/{alias}.delete.parameters[0].in: path
paths./users/{userKey}/aliases/{alias}.delete.parameters[0].name: userKey
paths./users/{userKey}/aliases/{alias}.delete.parameters[0].required: true
paths./users/{userKey}/aliases/{alias}.delete.parameters[0].type: string
paths./users/{userKey}/aliases/{alias}.delete.parameters[1].description: The alias
  to be removed
paths./users/{userKey}/aliases/{alias}.delete.parameters[1].in: path
paths./users/{userKey}/aliases/{alias}.delete.parameters[1].name: alias
paths./users/{userKey}/aliases/{alias}.delete.parameters[1].required: true
paths./users/{userKey}/aliases/{alias}.delete.parameters[1].type: string
paths./users/{userKey}/aliases/{alias}.delete.responses.200.description: Successful
  response
paths./users/{userKey}/aliases/{alias}.delete.security.length: 2
paths./users/{userKey}/aliases/{alias}.delete.security[0].Oauth2.length: 1
paths./users/{userKey}/aliases/{alias}.delete.security[0].Oauth2[0]: https://www.googleapis.com/auth/admin.directory.user
paths./users/{userKey}/aliases/{alias}.delete.security[1].Oauth2.length: 1
paths./users/{userKey}/aliases/{alias}.delete.security[1].Oauth2[0]: https://www.googleapis.com/auth/admin.directory.user.alias
paths./users/{userKey}/aliases/{alias}.delete.tags.length: 1
paths./users/{userKey}/aliases/{alias}.delete.tags[0]: users
paths./users/{userKey}/aliases/{alias}.parameters.length: 7
paths./users/{userKey}/aliases/{alias}.parameters[0].$ref: '#/parameters/alt'
paths./users/{userKey}/aliases/{alias}.parameters[1].$ref: '#/parameters/fields'
paths./users/{userKey}/aliases/{alias}.parameters[2].$ref: '#/parameters/key'
paths./users/{userKey}/aliases/{alias}.parameters[3].$ref: '#/parameters/oauth_token'
paths./users/{userKey}/aliases/{alias}.parameters[4].$ref: '#/parameters/prettyPrint'
paths./users/{userKey}/aliases/{alias}.parameters[5].$ref: '#/parameters/quotaUser'
paths./users/{userKey}/aliases/{alias}.parameters[6].$ref: '#/parameters/userIp'
paths./users/{userKey}/aliases/watch.parameters.length: 7
paths./users/{userKey}/aliases/watch.parameters[0].$ref: '#/parameters/alt'
paths./users/{userKey}/aliases/watch.parameters[1].$ref: '#/parameters/fields'
paths./users/{userKey}/aliases/watch.parameters[2].$ref: '#/parameters/key'
paths./users/{userKey}/aliases/watch.parameters[3].$ref: '#/parameters/oauth_token'
paths./users/{userKey}/aliases/watch.parameters[4].$ref: '#/parameters/prettyPrint'
paths./users/{userKey}/aliases/watch.parameters[5].$ref: '#/parameters/quotaUser'
paths./users/{userKey}/aliases/watch.parameters[6].$ref: '#/parameters/userIp'
paths./users/{userKey}/aliases/watch.post.description: Watch for changes in user aliases
  list
paths./users/{userKey}/aliases/watch.post.operationId: directory.users.aliases.watch
paths./users/{userKey}/aliases/watch.post.parameters.length: 3
paths./users/{userKey}/aliases/watch.post.parameters[0].description: Email or immutable
  Id of the user
paths./users/{userKey}/aliases/watch.post.parameters[0].in: path
paths./users/{userKey}/aliases/watch.post.parameters[0].name: userKey
paths./users/{userKey}/aliases/watch.post.parameters[0].required: true
paths./users/{userKey}/aliases/watch.post.parameters[0].type: string
paths./users/{userKey}/aliases/watch.post.parameters[1].description: Event on which
  subscription is intended (if subscribing)
paths./users/{userKey}/aliases/watch.post.parameters[1].enum.length: 2
paths./users/{userKey}/aliases/watch.post.parameters[1].enum[0]: add
paths./users/{userKey}/aliases/watch.post.parameters[1].enum[1]: delete
paths./users/{userKey}/aliases/watch.post.parameters[1].in: query
paths./users/{userKey}/aliases/watch.post.parameters[1].name: event
paths./users/{userKey}/aliases/watch.post.parameters[1].type: string
paths./users/{userKey}/aliases/watch.post.parameters[2].in: body
paths./users/{userKey}/aliases/watch.post.parameters[2].name: resource
paths./users/{userKey}/aliases/watch.post.parameters[2].schema.$ref: '#/definitions/Channel'
paths./users/{userKey}/aliases/watch.post.responses.200.description: Successful response
paths./users/{userKey}/aliases/watch.post.responses.200.schema.$ref: '#/definitions/Channel'
paths./users/{userKey}/aliases/watch.post.security.length: 4
paths./users/{userKey}/aliases/watch.post.security[0].Oauth2.length: 1
paths./users/{userKey}/aliases/watch.post.security[0].Oauth2[0]: https://www.googleapis.com/auth/admin.directory.user
paths./users/{userKey}/aliases/watch.post.security[1].Oauth2.length: 1
paths./users/{userKey}/aliases/watch.post.security[1].Oauth2[0]: https://www.googleapis.com/auth/admin.directory.user.alias
paths./users/{userKey}/aliases/watch.post.security[2].Oauth2.length: 1
paths./users/{userKey}/aliases/watch.post.security[2].Oauth2[0]: https://www.googleapis.com/auth/admin.directory.user.alias.readonly
paths./users/{userKey}/aliases/watch.post.security[3].Oauth2.length: 1
paths./users/{userKey}/aliases/watch.post.security[3].Oauth2[0]: https://www.googleapis.com/auth/admin.directory.user.readonly
paths./users/{userKey}/aliases/watch.post.tags.length: 1
paths./users/{userKey}/aliases/watch.post.tags[0]: users
paths./users/{userKey}/asps.get.description: List the ASPs issued by a user.
paths./users/{userKey}/asps.get.operationId: directory.asps.list
paths./users/{userKey}/asps.get.parameters.length: 1
paths./users/{userKey}/asps.get.parameters[0].description: Identifies the user in
  the API request. The value can be the user's primary email address, alias email
  address, or unique user ID.
paths./users/{userKey}/asps.get.parameters[0].in: path
paths./users/{userKey}/asps.get.parameters[0].name: userKey
paths./users/{userKey}/asps.get.parameters[0].required: true
paths./users/{userKey}/asps.get.parameters[0].type: string
paths./users/{userKey}/asps.get.responses.200.description: Successful response
paths./users/{userKey}/asps.get.responses.200.schema.$ref: '#/definitions/Asps'
paths./users/{userKey}/asps.get.security.length: 1
paths./users/{userKey}/asps.get.security[0].Oauth2.length: 1
paths./users/{userKey}/asps.get.security[0].Oauth2[0]: https://www.googleapis.com/auth/admin.directory.user.security
paths./users/{userKey}/asps.get.tags.length: 1
paths./users/{userKey}/asps.get.tags[0]: asps
paths./users/{userKey}/asps.parameters.length: 7
paths./users/{userKey}/asps.parameters[0].$ref: '#/parameters/alt'
paths./users/{userKey}/asps.parameters[1].$ref: '#/parameters/fields'
paths./users/{userKey}/asps.parameters[2].$ref: '#/parameters/key'
paths./users/{userKey}/asps.parameters[3].$ref: '#/parameters/oauth_token'
paths./users/{userKey}/asps.parameters[4].$ref: '#/parameters/prettyPrint'
paths./users/{userKey}/asps.parameters[5].$ref: '#/parameters/quotaUser'
paths./users/{userKey}/asps.parameters[6].$ref: '#/parameters/userIp'
paths./users/{userKey}/asps/{codeId}.delete.description: Delete an ASP issued by a
  user.
paths./users/{userKey}/asps/{codeId}.delete.operationId: directory.asps.delete
paths./users/{userKey}/asps/{codeId}.delete.parameters.length: 2
paths./users/{userKey}/asps/{codeId}.delete.parameters[0].description: Identifies
  the user in the API request. The value can be the user's primary email address,
  alias email address, or unique user ID.
paths./users/{userKey}/asps/{codeId}.delete.parameters[0].in: path
paths./users/{userKey}/asps/{codeId}.delete.parameters[0].name: userKey
paths./users/{userKey}/asps/{codeId}.delete.parameters[0].required: true
paths./users/{userKey}/asps/{codeId}.delete.parameters[0].type: string
paths./users/{userKey}/asps/{codeId}.delete.parameters[1].description: The unique
  ID of the ASP to be deleted.
paths./users/{userKey}/asps/{codeId}.delete.parameters[1].in: path
paths./users/{userKey}/asps/{codeId}.delete.parameters[1].name: codeId
paths./users/{userKey}/asps/{codeId}.delete.parameters[1].required: true
paths./users/{userKey}/asps/{codeId}.delete.parameters[1].type: integer
paths./users/{userKey}/asps/{codeId}.delete.responses.200.description: Successful
  response
paths./users/{userKey}/asps/{codeId}.delete.security.length: 1
paths./users/{userKey}/asps/{codeId}.delete.security[0].Oauth2.length: 1
paths./users/{userKey}/asps/{codeId}.delete.security[0].Oauth2[0]: https://www.googleapis.com/auth/admin.directory.user.security
paths./users/{userKey}/asps/{codeId}.delete.tags.length: 1
paths./users/{userKey}/asps/{codeId}.delete.tags[0]: asps
paths./users/{userKey}/asps/{codeId}.get.description: Get information about an ASP
  issued by a user.
paths./users/{userKey}/asps/{codeId}.get.operationId: directory.asps.get
paths./users/{userKey}/asps/{codeId}.get.parameters.length: 2
paths./users/{userKey}/asps/{codeId}.get.parameters[0].description: Identifies the
  user in the API request. The value can be the user's primary email address, alias
  email address, or unique user ID.
paths./users/{userKey}/asps/{codeId}.get.parameters[0].in: path
paths./users/{userKey}/asps/{codeId}.get.parameters[0].name: userKey
paths./users/{userKey}/asps/{codeId}.get.parameters[0].required: true
paths./users/{userKey}/asps/{codeId}.get.parameters[0].type: string
paths./users/{userKey}/asps/{codeId}.get.parameters[1].description: The unique ID
  of the ASP.
paths./users/{userKey}/asps/{codeId}.get.parameters[1].in: path
paths./users/{userKey}/asps/{codeId}.get.parameters[1].name: codeId
paths./users/{userKey}/asps/{codeId}.get.parameters[1].required: true
paths./users/{userKey}/asps/{codeId}.get.parameters[1].type: integer
paths./users/{userKey}/asps/{codeId}.get.responses.200.description: Successful response
paths./users/{userKey}/asps/{codeId}.get.responses.200.schema.$ref: '#/definitions/Asp'
paths./users/{userKey}/asps/{codeId}.get.security.length: 1
paths./users/{userKey}/asps/{codeId}.get.security[0].Oauth2.length: 1
paths./users/{userKey}/asps/{codeId}.get.security[0].Oauth2[0]: https://www.googleapis.com/auth/admin.directory.user.security
paths./users/{userKey}/asps/{codeId}.get.tags.length: 1
paths./users/{userKey}/asps/{codeId}.get.tags[0]: asps
paths./users/{userKey}/asps/{codeId}.parameters.length: 7
paths./users/{userKey}/asps/{codeId}.parameters[0].$ref: '#/parameters/alt'
paths./users/{userKey}/asps/{codeId}.parameters[1].$ref: '#/parameters/fields'
paths./users/{userKey}/asps/{codeId}.parameters[2].$ref: '#/parameters/key'
paths./users/{userKey}/asps/{codeId}.parameters[3].$ref: '#/parameters/oauth_token'
paths./users/{userKey}/asps/{codeId}.parameters[4].$ref: '#/parameters/prettyPrint'
paths./users/{userKey}/asps/{codeId}.parameters[5].$ref: '#/parameters/quotaUser'
paths./users/{userKey}/asps/{codeId}.parameters[6].$ref: '#/parameters/userIp'
paths./users/{userKey}/makeAdmin.parameters.length: 7
paths./users/{userKey}/makeAdmin.parameters[0].$ref: '#/parameters/alt'
paths./users/{userKey}/makeAdmin.parameters[1].$ref: '#/parameters/fields'
paths./users/{userKey}/makeAdmin.parameters[2].$ref: '#/parameters/key'
paths./users/{userKey}/makeAdmin.parameters[3].$ref: '#/parameters/oauth_token'
paths./users/{userKey}/makeAdmin.parameters[4].$ref: '#/parameters/prettyPrint'
paths./users/{userKey}/makeAdmin.parameters[5].$ref: '#/parameters/quotaUser'
paths./users/{userKey}/makeAdmin.parameters[6].$ref: '#/parameters/userIp'
paths./users/{userKey}/makeAdmin.post.description: change admin status of a user
paths./users/{userKey}/makeAdmin.post.operationId: directory.users.makeAdmin
paths./users/{userKey}/makeAdmin.post.parameters.length: 2
paths./users/{userKey}/makeAdmin.post.parameters[0].description: Email or immutable
  Id of the user as admin
paths./users/{userKey}/makeAdmin.post.parameters[0].in: path
paths./users/{userKey}/makeAdmin.post.parameters[0].name: userKey
paths./users/{userKey}/makeAdmin.post.parameters[0].required: true
paths./users/{userKey}/makeAdmin.post.parameters[0].type: string
paths./users/{userKey}/makeAdmin.post.parameters[1].in: body
paths./users/{userKey}/makeAdmin.post.parameters[1].name: body
paths./users/{userKey}/makeAdmin.post.parameters[1].schema.$ref: '#/definitions/UserMakeAdmin'
paths./users/{userKey}/makeAdmin.post.responses.200.description: Successful response
paths./users/{userKey}/makeAdmin.post.security.length: 1
paths./users/{userKey}/makeAdmin.post.security[0].Oauth2.length: 1
paths./users/{userKey}/makeAdmin.post.security[0].Oauth2[0]: https://www.googleapis.com/auth/admin.directory.user
paths./users/{userKey}/makeAdmin.post.tags.length: 1
paths./users/{userKey}/makeAdmin.post.tags[0]: users
paths./users/{userKey}/photos/thumbnail.delete.description: Remove photos for the
  user
paths./users/{userKey}/photos/thumbnail.delete.operationId: directory.users.photos.delete
paths./users/{userKey}/photos/thumbnail.delete.parameters.length: 1
paths./users/{userKey}/photos/thumbnail.delete.parameters[0].description: Email or
  immutable Id of the user
paths./users/{userKey}/photos/thumbnail.delete.parameters[0].in: path
paths./users/{userKey}/photos/thumbnail.delete.parameters[0].name: userKey
paths./users/{userKey}/photos/thumbnail.delete.parameters[0].required: true
paths./users/{userKey}/photos/thumbnail.delete.parameters[0].type: string
paths./users/{userKey}/photos/thumbnail.delete.responses.200.description: Successful
  response
paths./users/{userKey}/photos/thumbnail.delete.security.length: 1
paths./users/{userKey}/photos/thumbnail.delete.security[0].Oauth2.length: 1
paths./users/{userKey}/photos/thumbnail.delete.security[0].Oauth2[0]: https://www.googleapis.com/auth/admin.directory.user
paths./users/{userKey}/photos/thumbnail.delete.tags.length: 1
paths./users/{userKey}/photos/thumbnail.delete.tags[0]: users
paths./users/{userKey}/photos/thumbnail.get.description: Retrieve photo of a user
paths./users/{userKey}/photos/thumbnail.get.operationId: directory.users.photos.get
paths./users/{userKey}/photos/thumbnail.get.parameters.length: 1
paths./users/{userKey}/photos/thumbnail.get.parameters[0].description: Email or immutable
  Id of the user
paths./users/{userKey}/photos/thumbnail.get.parameters[0].in: path
paths./users/{userKey}/photos/thumbnail.get.parameters[0].name: userKey
paths./users/{userKey}/photos/thumbnail.get.parameters[0].required: true
paths./users/{userKey}/photos/thumbnail.get.parameters[0].type: string
paths./users/{userKey}/photos/thumbnail.get.responses.200.description: Successful
  response
paths./users/{userKey}/photos/thumbnail.get.responses.200.schema.$ref: '#/definitions/UserPhoto'
paths./users/{userKey}/photos/thumbnail.get.security.length: 2
paths./users/{userKey}/photos/thumbnail.get.security[0].Oauth2.length: 1
paths./users/{userKey}/photos/thumbnail.get.security[0].Oauth2[0]: https://www.googleapis.com/auth/admin.directory.user
paths./users/{userKey}/photos/thumbnail.get.security[1].Oauth2.length: 1
paths./users/{userKey}/photos/thumbnail.get.security[1].Oauth2[0]: https://www.googleapis.com/auth/admin.directory.user.readonly
paths./users/{userKey}/photos/thumbnail.get.tags.length: 1
paths./users/{userKey}/photos/thumbnail.get.tags[0]: users
paths./users/{userKey}/photos/thumbnail.parameters.length: 7
paths./users/{userKey}/photos/thumbnail.parameters[0].$ref: '#/parameters/alt'
paths./users/{userKey}/photos/thumbnail.parameters[1].$ref: '#/parameters/fields'
paths./users/{userKey}/photos/thumbnail.parameters[2].$ref: '#/parameters/key'
paths./users/{userKey}/photos/thumbnail.parameters[3].$ref: '#/parameters/oauth_token'
paths./users/{userKey}/photos/thumbnail.parameters[4].$ref: '#/parameters/prettyPrint'
paths./users/{userKey}/photos/thumbnail.parameters[5].$ref: '#/parameters/quotaUser'
paths./users/{userKey}/photos/thumbnail.parameters[6].$ref: '#/parameters/userIp'
paths./users/{userKey}/photos/thumbnail.patch.description: Add a photo for the user.
  This method supports patch semantics.
paths./users/{userKey}/photos/thumbnail.patch.operationId: directory.users.photos.patch
paths./users/{userKey}/photos/thumbnail.patch.parameters.length: 2
paths./users/{userKey}/photos/thumbnail.patch.parameters[0].description: Email or
  immutable Id of the user
paths./users/{userKey}/photos/thumbnail.patch.parameters[0].in: path
paths./users/{userKey}/photos/thumbnail.patch.parameters[0].name: userKey
paths./users/{userKey}/photos/thumbnail.patch.parameters[0].required: true
paths./users/{userKey}/photos/thumbnail.patch.parameters[0].type: string
paths./users/{userKey}/photos/thumbnail.patch.parameters[1].in: body
paths./users/{userKey}/photos/thumbnail.patch.parameters[1].name: body
paths./users/{userKey}/photos/thumbnail.patch.parameters[1].schema.$ref: '#/definitions/UserPhoto'
paths./users/{userKey}/photos/thumbnail.patch.responses.200.description: Successful
  response
paths./users/{userKey}/photos/thumbnail.patch.responses.200.schema.$ref: '#/definitions/UserPhoto'
paths./users/{userKey}/photos/thumbnail.patch.security.length: 1
paths./users/{userKey}/photos/thumbnail.patch.security[0].Oauth2.length: 1
paths./users/{userKey}/photos/thumbnail.patch.security[0].Oauth2[0]: https://www.googleapis.com/auth/admin.directory.user
paths./users/{userKey}/photos/thumbnail.patch.tags.length: 1
paths./users/{userKey}/photos/thumbnail.patch.tags[0]: users
paths./users/{userKey}/photos/thumbnail.put.description: Add a photo for the user
paths./users/{userKey}/photos/thumbnail.put.operationId: directory.users.photos.update
paths./users/{userKey}/photos/thumbnail.put.parameters.length: 2
paths./users/{userKey}/photos/thumbnail.put.parameters[0].description: Email or immutable
  Id of the user
paths./users/{userKey}/photos/thumbnail.put.parameters[0].in: path
paths./users/{userKey}/photos/thumbnail.put.parameters[0].name: userKey
paths./users/{userKey}/photos/thumbnail.put.parameters[0].required: true
paths./users/{userKey}/photos/thumbnail.put.parameters[0].type: string
paths./users/{userKey}/photos/thumbnail.put.parameters[1].in: body
paths./users/{userKey}/photos/thumbnail.put.parameters[1].name: body
paths./users/{userKey}/photos/thumbnail.put.parameters[1].schema.$ref: '#/definitions/UserPhoto'
paths./users/{userKey}/photos/thumbnail.put.responses.200.description: Successful
  response
paths./users/{userKey}/photos/thumbnail.put.responses.200.schema.$ref: '#/definitions/UserPhoto'
paths./users/{userKey}/photos/thumbnail.put.security.length: 1
paths./users/{userKey}/photos/thumbnail.put.security[0].Oauth2.length: 1
paths./users/{userKey}/photos/thumbnail.put.security[0].Oauth2[0]: https://www.googleapis.com/auth/admin.directory.user
paths./users/{userKey}/photos/thumbnail.put.tags.length: 1
paths./users/{userKey}/photos/thumbnail.put.tags[0]: users
paths./users/{userKey}/tokens.get.description: Returns the set of tokens specified
  user has issued to 3rd party applications.
paths./users/{userKey}/tokens.get.operationId: directory.tokens.list
paths./users/{userKey}/tokens.get.parameters.length: 1
paths./users/{userKey}/tokens.get.parameters[0].description: Identifies the user in
  the API request. The value can be the user's primary email address, alias email
  address, or unique user ID.
paths./users/{userKey}/tokens.get.parameters[0].in: path
paths./users/{userKey}/tokens.get.parameters[0].name: userKey
paths./users/{userKey}/tokens.get.parameters[0].required: true
paths./users/{userKey}/tokens.get.parameters[0].type: string
paths./users/{userKey}/tokens.get.responses.200.description: Successful response
paths./users/{userKey}/tokens.get.responses.200.schema.$ref: '#/definitions/Tokens'
paths./users/{userKey}/tokens.get.security.length: 1
paths./users/{userKey}/tokens.get.security[0].Oauth2.length: 1
paths./users/{userKey}/tokens.get.security[0].Oauth2[0]: https://www.googleapis.com/auth/admin.directory.user.security
paths./users/{userKey}/tokens.get.tags.length: 1
paths./users/{userKey}/tokens.get.tags[0]: tokens
paths./users/{userKey}/tokens.parameters.length: 7
paths./users/{userKey}/tokens.parameters[0].$ref: '#/parameters/alt'
paths./users/{userKey}/tokens.parameters[1].$ref: '#/parameters/fields'
paths./users/{userKey}/tokens.parameters[2].$ref: '#/parameters/key'
paths./users/{userKey}/tokens.parameters[3].$ref: '#/parameters/oauth_token'
paths./users/{userKey}/tokens.parameters[4].$ref: '#/parameters/prettyPrint'
paths./users/{userKey}/tokens.parameters[5].$ref: '#/parameters/quotaUser'
paths./users/{userKey}/tokens.parameters[6].$ref: '#/parameters/userIp'
paths./users/{userKey}/tokens/{clientId}.delete.description: Delete all access tokens
  issued by a user for an application.
paths./users/{userKey}/tokens/{clientId}.delete.operationId: directory.tokens.delete
paths./users/{userKey}/tokens/{clientId}.delete.parameters.length: 2
paths./users/{userKey}/tokens/{clientId}.delete.parameters[0].description: Identifies
  the user in the API request. The value can be the user's primary email address,
  alias email address, or unique user ID.
paths./users/{userKey}/tokens/{clientId}.delete.parameters[0].in: path
paths./users/{userKey}/tokens/{clientId}.delete.parameters[0].name: userKey
paths./users/{userKey}/tokens/{clientId}.delete.parameters[0].required: true
paths./users/{userKey}/tokens/{clientId}.delete.parameters[0].type: string
paths./users/{userKey}/tokens/{clientId}.delete.parameters[1].description: The Client
  ID of the application the token is issued to.
paths./users/{userKey}/tokens/{clientId}.delete.parameters[1].in: path
paths./users/{userKey}/tokens/{clientId}.delete.parameters[1].name: clientId
paths./users/{userKey}/tokens/{clientId}.delete.parameters[1].required: true
paths./users/{userKey}/tokens/{clientId}.delete.parameters[1].type: string
paths./users/{userKey}/tokens/{clientId}.delete.responses.200.description: Successful
  response
paths./users/{userKey}/tokens/{clientId}.delete.security.length: 1
paths./users/{userKey}/tokens/{clientId}.delete.security[0].Oauth2.length: 1
paths./users/{userKey}/tokens/{clientId}.delete.security[0].Oauth2[0]: https://www.googleapis.com/auth/admin.directory.user.security
paths./users/{userKey}/tokens/{clientId}.delete.tags.length: 1
paths./users/{userKey}/tokens/{clientId}.delete.tags[0]: tokens
paths./users/{userKey}/tokens/{clientId}.get.description: Get information about an
  access token issued by a user.
paths./users/{userKey}/tokens/{clientId}.get.operationId: directory.tokens.get
paths./users/{userKey}/tokens/{clientId}.get.parameters.length: 2
paths./users/{userKey}/tokens/{clientId}.get.parameters[0].description: Identifies
  the user in the API request. The value can be the user's primary email address,
  alias email address, or unique user ID.
paths./users/{userKey}/tokens/{clientId}.get.parameters[0].in: path
paths./users/{userKey}/tokens/{clientId}.get.parameters[0].name: userKey
paths./users/{userKey}/tokens/{clientId}.get.parameters[0].required: true
paths./users/{userKey}/tokens/{clientId}.get.parameters[0].type: string
paths./users/{userKey}/tokens/{clientId}.get.parameters[1].description: The Client
  ID of the application the token is issued to.
paths./users/{userKey}/tokens/{clientId}.get.parameters[1].in: path
paths./users/{userKey}/tokens/{clientId}.get.parameters[1].name: clientId
paths./users/{userKey}/tokens/{clientId}.get.parameters[1].required: true
paths./users/{userKey}/tokens/{clientId}.get.parameters[1].type: string
paths./users/{userKey}/tokens/{clientId}.get.responses.200.description: Successful
  response
paths./users/{userKey}/tokens/{clientId}.get.responses.200.schema.$ref: '#/definitions/Token'
paths./users/{userKey}/tokens/{clientId}.get.security.length: 1
paths./users/{userKey}/tokens/{clientId}.get.security[0].Oauth2.length: 1
paths./users/{userKey}/tokens/{clientId}.get.security[0].Oauth2[0]: https://www.googleapis.com/auth/admin.directory.user.security
paths./users/{userKey}/tokens/{clientId}.get.tags.length: 1
paths./users/{userKey}/tokens/{clientId}.get.tags[0]: tokens
paths./users/{userKey}/tokens/{clientId}.parameters.length: 7
paths./users/{userKey}/tokens/{clientId}.parameters[0].$ref: '#/parameters/alt'
paths./users/{userKey}/tokens/{clientId}.parameters[1].$ref: '#/parameters/fields'
paths./users/{userKey}/tokens/{clientId}.parameters[2].$ref: '#/parameters/key'
paths./users/{userKey}/tokens/{clientId}.parameters[3].$ref: '#/parameters/oauth_token'
paths./users/{userKey}/tokens/{clientId}.parameters[4].$ref: '#/parameters/prettyPrint'
paths./users/{userKey}/tokens/{clientId}.parameters[5].$ref: '#/parameters/quotaUser'
paths./users/{userKey}/tokens/{clientId}.parameters[6].$ref: '#/parameters/userIp'
paths./users/{userKey}/undelete.parameters.length: 7
paths./users/{userKey}/undelete.parameters[0].$ref: '#/parameters/alt'
paths./users/{userKey}/undelete.parameters[1].$ref: '#/parameters/fields'
paths./users/{userKey}/undelete.parameters[2].$ref: '#/parameters/key'
paths./users/{userKey}/undelete.parameters[3].$ref: '#/parameters/oauth_token'
paths./users/{userKey}/undelete.parameters[4].$ref: '#/parameters/prettyPrint'
paths./users/{userKey}/undelete.parameters[5].$ref: '#/parameters/quotaUser'
paths./users/{userKey}/undelete.parameters[6].$ref: '#/parameters/userIp'
paths./users/{userKey}/undelete.post.description: Undelete a deleted user
paths./users/{userKey}/undelete.post.operationId: directory.users.undelete
paths./users/{userKey}/undelete.post.parameters.length: 2
paths./users/{userKey}/undelete.post.parameters[0].description: The immutable id of
  the user
paths./users/{userKey}/undelete.post.parameters[0].in: path
paths./users/{userKey}/undelete.post.parameters[0].name: userKey
paths./users/{userKey}/undelete.post.parameters[0].required: true
paths./users/{userKey}/undelete.post.parameters[0].type: string
paths./users/{userKey}/undelete.post.parameters[1].in: body
paths./users/{userKey}/undelete.post.parameters[1].name: body
paths./users/{userKey}/undelete.post.parameters[1].schema.$ref: '#/definitions/UserUndelete'
paths./users/{userKey}/undelete.post.responses.200.description: Successful response
paths./users/{userKey}/undelete.post.security.length: 1
paths./users/{userKey}/undelete.post.security[0].Oauth2.length: 1
paths./users/{userKey}/undelete.post.security[0].Oauth2[0]: https://www.googleapis.com/auth/admin.directory.user
paths./users/{userKey}/undelete.post.tags.length: 1
paths./users/{userKey}/undelete.post.tags[0]: users
paths./users/{userKey}/verificationCodes.get.description: Returns the current set
  of valid backup verification codes for the specified user.
paths./users/{userKey}/verificationCodes.get.operationId: directory.verificationCodes.list
paths./users/{userKey}/verificationCodes.get.parameters.length: 1
paths./users/{userKey}/verificationCodes.get.parameters[0].description: Identifies
  the user in the API request. The value can be the user's primary email address,
  alias email address, or unique user ID.
paths./users/{userKey}/verificationCodes.get.parameters[0].in: path
paths./users/{userKey}/verificationCodes.get.parameters[0].name: userKey
paths./users/{userKey}/verificationCodes.get.parameters[0].required: true
paths./users/{userKey}/verificationCodes.get.parameters[0].type: string
paths./users/{userKey}/verificationCodes.get.responses.200.description: Successful
  response
paths./users/{userKey}/verificationCodes.get.responses.200.schema.$ref: '#/definitions/VerificationCodes'
paths./users/{userKey}/verificationCodes.get.security.length: 1
paths./users/{userKey}/verificationCodes.get.security[0].Oauth2.length: 1
paths./users/{userKey}/verificationCodes.get.security[0].Oauth2[0]: https://www.googleapis.com/auth/admin.directory.user.security
paths./users/{userKey}/verificationCodes.get.tags.length: 1
paths./users/{userKey}/verificationCodes.get.tags[0]: verificationCodes
paths./users/{userKey}/verificationCodes.parameters.length: 7
paths./users/{userKey}/verificationCodes.parameters[0].$ref: '#/parameters/alt'
paths./users/{userKey}/verificationCodes.parameters[1].$ref: '#/parameters/fields'
paths./users/{userKey}/verificationCodes.parameters[2].$ref: '#/parameters/key'
paths./users/{userKey}/verificationCodes.parameters[3].$ref: '#/parameters/oauth_token'
paths./users/{userKey}/verificationCodes.parameters[4].$ref: '#/parameters/prettyPrint'
paths./users/{userKey}/verificationCodes.parameters[5].$ref: '#/parameters/quotaUser'
paths./users/{userKey}/verificationCodes.parameters[6].$ref: '#/parameters/userIp'
paths./users/{userKey}/verificationCodes/generate.parameters.length: 7
paths./users/{userKey}/verificationCodes/generate.parameters[0].$ref: '#/parameters/alt'
paths./users/{userKey}/verificationCodes/generate.parameters[1].$ref: '#/parameters/fields'
paths./users/{userKey}/verificationCodes/generate.parameters[2].$ref: '#/parameters/key'
paths./users/{userKey}/verificationCodes/generate.parameters[3].$ref: '#/parameters/oauth_token'
paths./users/{userKey}/verificationCodes/generate.parameters[4].$ref: '#/parameters/prettyPrint'
paths./users/{userKey}/verificationCodes/generate.parameters[5].$ref: '#/parameters/quotaUser'
paths./users/{userKey}/verificationCodes/generate.parameters[6].$ref: '#/parameters/userIp'
paths./users/{userKey}/verificationCodes/generate.post.description: Generate new backup
  verification codes for the user.
paths./users/{userKey}/verificationCodes/generate.post.operationId: directory.verificationCodes.generate
paths./users/{userKey}/verificationCodes/generate.post.parameters.length: 1
paths./users/{userKey}/verificationCodes/generate.post.parameters[0].description: Email
  or immutable Id of the user
paths./users/{userKey}/verificationCodes/generate.post.parameters[0].in: path
paths./users/{userKey}/verificationCodes/generate.post.parameters[0].name: userKey
paths./users/{userKey}/verificationCodes/generate.post.parameters[0].required: true
paths./users/{userKey}/verificationCodes/generate.post.parameters[0].type: string
paths./users/{userKey}/verificationCodes/generate.post.responses.200.description: Successful
  response
paths./users/{userKey}/verificationCodes/generate.post.security.length: 1
paths./users/{userKey}/verificationCodes/generate.post.security[0].Oauth2.length: 1
paths./users/{userKey}/verificationCodes/generate.post.security[0].Oauth2[0]: https://www.googleapis.com/auth/admin.directory.user.security
paths./users/{userKey}/verificationCodes/generate.post.tags.length: 1
paths./users/{userKey}/verificationCodes/generate.post.tags[0]: verificationCodes
paths./users/{userKey}/verificationCodes/invalidate.parameters.length: 7
paths./users/{userKey}/verificationCodes/invalidate.parameters[0].$ref: '#/parameters/alt'
paths./users/{userKey}/verificationCodes/invalidate.parameters[1].$ref: '#/parameters/fields'
paths./users/{userKey}/verificationCodes/invalidate.parameters[2].$ref: '#/parameters/key'
paths./users/{userKey}/verificationCodes/invalidate.parameters[3].$ref: '#/parameters/oauth_token'
paths./users/{userKey}/verificationCodes/invalidate.parameters[4].$ref: '#/parameters/prettyPrint'
paths./users/{userKey}/verificationCodes/invalidate.parameters[5].$ref: '#/parameters/quotaUser'
paths./users/{userKey}/verificationCodes/invalidate.parameters[6].$ref: '#/parameters/userIp'
paths./users/{userKey}/verificationCodes/invalidate.post.description: Invalidate the
  current backup verification codes for the user.
paths./users/{userKey}/verificationCodes/invalidate.post.operationId: directory.verificationCodes.invalidate
paths./users/{userKey}/verificationCodes/invalidate.post.parameters.length: 1
paths./users/{userKey}/verificationCodes/invalidate.post.parameters[0].description: Email
  or immutable Id of the user
paths./users/{userKey}/verificationCodes/invalidate.post.parameters[0].in: path
paths./users/{userKey}/verificationCodes/invalidate.post.parameters[0].name: userKey
paths./users/{userKey}/verificationCodes/invalidate.post.parameters[0].required: true
paths./users/{userKey}/verificationCodes/invalidate.post.parameters[0].type: string
paths./users/{userKey}/verificationCodes/invalidate.post.responses.200.description: Successful
  response
paths./users/{userKey}/verificationCodes/invalidate.post.security.length: 1
paths./users/{userKey}/verificationCodes/invalidate.post.security[0].Oauth2.length: 1
paths./users/{userKey}/verificationCodes/invalidate.post.security[0].Oauth2[0]: https://www.googleapis.com/auth/admin.directory.user.security
paths./users/{userKey}/verificationCodes/invalidate.post.tags.length: 1
paths./users/{userKey}/verificationCodes/invalidate.post.tags[0]: verificationCodes
paths./users/watch.parameters.length: 7
paths./users/watch.parameters[0].$ref: '#/parameters/alt'
paths./users/watch.parameters[1].$ref: '#/parameters/fields'
paths./users/watch.parameters[2].$ref: '#/parameters/key'
paths./users/watch.parameters[3].$ref: '#/parameters/oauth_token'
paths./users/watch.parameters[4].$ref: '#/parameters/prettyPrint'
paths./users/watch.parameters[5].$ref: '#/parameters/quotaUser'
paths./users/watch.parameters[6].$ref: '#/parameters/userIp'
paths./users/watch.post.description: Watch for changes in users list
paths./users/watch.post.operationId: directory.users.watch
paths./users/watch.post.parameters.length: 13
paths./users/watch.post.parameters[0].description: Comma-separated list of schema
  names. All fields from these schemas are fetched. This should only be set when projection=custom.
paths./users/watch.post.parameters[0].in: query
paths./users/watch.post.parameters[0].name: customFieldMask
paths./users/watch.post.parameters[0].type: string
paths./users/watch.post.parameters[1].description: Immutable ID of the G Suite account.
  In case of multi-domain, to fetch all users for a customer, fill this field instead
  of domain.
paths./users/watch.post.parameters[1].in: query
paths./users/watch.post.parameters[1].name: customer
paths./users/watch.post.parameters[1].type: string
paths./users/watch.post.parameters[2].description: Name of the domain. Fill this field
  to get users from only this domain. To return all users in a multi-domain fill customer
  field instead.
paths./users/watch.post.parameters[2].in: query
paths./users/watch.post.parameters[2].name: domain
paths./users/watch.post.parameters[2].type: string
paths./users/watch.post.parameters[3].description: Event on which subscription is
  intended (if subscribing)
paths./users/watch.post.parameters[3].enum.length: 5
paths./users/watch.post.parameters[3].enum[0]: add
paths./users/watch.post.parameters[3].enum[1]: delete
paths./users/watch.post.parameters[3].enum[2]: makeAdmin
paths./users/watch.post.parameters[3].enum[3]: undelete
paths./users/watch.post.parameters[3].enum[4]: update
paths./users/watch.post.parameters[3].in: query
paths./users/watch.post.parameters[3].name: event
paths./users/watch.post.parameters[3].type: string
paths./users/watch.post.parameters[4].description: Maximum number of results to return.
  Default is 100. Max allowed is 500
paths./users/watch.post.parameters[4].in: query
paths./users/watch.post.parameters[4].maximum: 500
paths./users/watch.post.parameters[4].minimum: 1
paths./users/watch.post.parameters[4].name: maxResults
paths./users/watch.post.parameters[4].type: integer
paths./users/watch.post.parameters[5].description: Column to use for sorting results
paths./users/watch.post.parameters[5].enum.length: 3
paths./users/watch.post.parameters[5].enum[0]: email
paths./users/watch.post.parameters[5].enum[1]: familyName
paths./users/watch.post.parameters[5].enum[2]: givenName
paths./users/watch.post.parameters[5].in: query
paths./users/watch.post.parameters[5].name: orderBy
paths./users/watch.post.parameters[5].type: string
paths./users/watch.post.parameters[6].description: Token to specify next page in the
  list
paths./users/watch.post.parameters[6].in: query
paths./users/watch.post.parameters[6].name: pageToken
paths./users/watch.post.parameters[6].type: string
paths./users/watch.post.parameters[7].default: basic
paths./users/watch.post.parameters[7].description: What subset of fields to fetch
  for this user.
paths./users/watch.post.parameters[7].enum.length: 3
paths./users/watch.post.parameters[7].enum[0]: basic
paths./users/watch.post.parameters[7].enum[1]: custom
paths./users/watch.post.parameters[7].enum[2]: full
paths./users/watch.post.parameters[7].in: query
paths./users/watch.post.parameters[7].name: projection
paths./users/watch.post.parameters[7].type: string
paths./users/watch.post.parameters[8].description: Query string search. Should be
  of the form "". Complete documentation is at https://developers.google.com/admin-sdk/directory/v1/guides/search-users
paths./users/watch.post.parameters[8].in: query
paths./users/watch.post.parameters[8].name: query
paths./users/watch.post.parameters[8].type: string
paths./users/watch.post.parameters[9].in: body
paths./users/watch.post.parameters[9].name: resource
paths./users/watch.post.parameters[9].schema.$ref: '#/definitions/Channel'
paths./users/watch.post.parameters[10].description: If set to true retrieves the list
  of deleted users. Default is false
paths./users/watch.post.parameters[10].in: query
paths./users/watch.post.parameters[10].name: showDeleted
paths./users/watch.post.parameters[10].type: string
paths./users/watch.post.parameters[11].description: Whether to return results in ascending
  or descending order.
paths./users/watch.post.parameters[11].enum.length: 2
paths./users/watch.post.parameters[11].enum[0]: ASCENDING
paths./users/watch.post.parameters[11].enum[1]: DESCENDING
paths./users/watch.post.parameters[11].in: query
paths./users/watch.post.parameters[11].name: sortOrder
paths./users/watch.post.parameters[11].type: string
paths./users/watch.post.parameters[12].default: admin_view
paths./users/watch.post.parameters[12].description: Whether to fetch the ADMIN_VIEW
  or DOMAIN_PUBLIC view of the user.
paths./users/watch.post.parameters[12].enum.length: 2
paths./users/watch.post.parameters[12].enum[0]: admin_view
paths./users/watch.post.parameters[12].enum[1]: domain_public
paths./users/watch.post.parameters[12].in: query
paths./users/watch.post.parameters[12].name: viewType
paths./users/watch.post.parameters[12].type: string
paths./users/watch.post.responses.200.description: Successful response
paths./users/watch.post.responses.200.schema.$ref: '#/definitions/Channel'
paths./users/watch.post.security.length: 2
paths./users/watch.post.security[0].Oauth2.length: 1
paths./users/watch.post.security[0].Oauth2[0]: https://www.googleapis.com/auth/admin.directory.user
paths./users/watch.post.security[1].Oauth2.length: 1
paths./users/watch.post.security[1].Oauth2[0]: https://www.googleapis.com/auth/admin.directory.user.readonly
paths./users/watch.post.tags.length: 1
paths./users/watch.post.tags[0]: users
schemes.length: 1
schemes[0]: https
securityDefinitions.Oauth2.authorizationUrl: https://accounts.google.com/o/oauth2/auth
securityDefinitions.Oauth2.description: Oauth 2.0 authentication
securityDefinitions.Oauth2.flow: implicit
securityDefinitions.Oauth2.scopes.https://www.googleapis.com/auth/admin.directory.customer: View
  and manage customer related information
securityDefinitions.Oauth2.scopes.https://www.googleapis.com/auth/admin.directory.customer.readonly: View
  customer related information
securityDefinitions.Oauth2.scopes.https://www.googleapis.com/auth/admin.directory.device.chromeos: View
  and manage your Chrome OS devices' metadata
securityDefinitions.Oauth2.scopes.https://www.googleapis.com/auth/admin.directory.device.chromeos.readonly: View
  your Chrome OS devices' metadata
securityDefinitions.Oauth2.scopes.https://www.googleapis.com/auth/admin.directory.device.mobile: View
  and manage your mobile devices' metadata
securityDefinitions.Oauth2.scopes.https://www.googleapis.com/auth/admin.directory.device.mobile.action: Manage
  your mobile devices by performing administrative tasks
securityDefinitions.Oauth2.scopes.https://www.googleapis.com/auth/admin.directory.device.mobile.readonly: View
  your mobile devices' metadata
securityDefinitions.Oauth2.scopes.https://www.googleapis.com/auth/admin.directory.domain: View
  and manage the provisioning of domains for your customers
securityDefinitions.Oauth2.scopes.https://www.googleapis.com/auth/admin.directory.domain.readonly: View
  domains related to your customers
securityDefinitions.Oauth2.scopes.https://www.googleapis.com/auth/admin.directory.group: View
  and manage the provisioning of groups on your domain
securityDefinitions.Oauth2.scopes.https://www.googleapis.com/auth/admin.directory.group.member: View
  and manage group subscriptions on your domain
securityDefinitions.Oauth2.scopes.https://www.googleapis.com/auth/admin.directory.group.member.readonly: View
  group subscriptions on your domain
securityDefinitions.Oauth2.scopes.https://www.googleapis.com/auth/admin.directory.group.readonly: View
  groups on your domain
securityDefinitions.Oauth2.scopes.https://www.googleapis.com/auth/admin.directory.notifications: View
  and manage notifications received on your domain
securityDefinitions.Oauth2.scopes.https://www.googleapis.com/auth/admin.directory.orgunit: View
  and manage organization units on your domain
securityDefinitions.Oauth2.scopes.https://www.googleapis.com/auth/admin.directory.orgunit.readonly: View
  organization units on your domain
securityDefinitions.Oauth2.scopes.https://www.googleapis.com/auth/admin.directory.resource.calendar: View
  and manage the provisioning of calendar resources on your domain
securityDefinitions.Oauth2.scopes.https://www.googleapis.com/auth/admin.directory.resource.calendar.readonly: View
  calendar resources on your domain
securityDefinitions.Oauth2.scopes.https://www.googleapis.com/auth/admin.directory.rolemanagement: Manage
  delegated admin roles for your domain
securityDefinitions.Oauth2.scopes.https://www.googleapis.com/auth/admin.directory.rolemanagement.readonly: View
  delegated admin roles for your domain
securityDefinitions.Oauth2.scopes.https://www.googleapis.com/auth/admin.directory.user: View
  and manage the provisioning of users on your domain
securityDefinitions.Oauth2.scopes.https://www.googleapis.com/auth/admin.directory.user.alias: View
  and manage user aliases on your domain
securityDefinitions.Oauth2.scopes.https://www.googleapis.com/auth/admin.directory.user.alias.readonly: View
  user aliases on your domain
securityDefinitions.Oauth2.scopes.https://www.googleapis.com/auth/admin.directory.user.readonly: View
  users on your domain
securityDefinitions.Oauth2.scopes.https://www.googleapis.com/auth/admin.directory.user.security: Manage
  data access permissions for users on your domain
securityDefinitions.Oauth2.scopes.https://www.googleapis.com/auth/admin.directory.userschema: View
  and manage the provisioning of user schemas on your domain
securityDefinitions.Oauth2.scopes.https://www.googleapis.com/auth/admin.directory.userschema.readonly: View
  user schemas on your domain
securityDefinitions.Oauth2.type: oauth2
swagger: "2.0"
tags.length: 19
tags[0].name: asps
tags[1].name: channels
tags[2].name: chromeosdevices
tags[3].name: customers
tags[4].name: domainAliases
tags[5].name: domains
tags[6].name: groups
tags[7].name: members
tags[8].name: mobiledevices
tags[9].name: notifications
tags[10].name: orgunits
tags[11].name: privileges
tags[12].name: resources
tags[13].name: roleAssignments
tags[14].name: roles
tags[15].name: schemas
tags[16].name: tokens
tags[17].name: users
tags[18].name: verificationCodes
