syntax = "proto3";

import "google/api/annotations.proto";

package googlecloudbilling;

message GetV1BillingAccountsRequest {
    $.xgafv $.xgafv = 1;
    string access_token = 2;
    alt alt = 3;
    string bearer_token = 4;
    string callback = 5;
    string fields = 6;
    string key = 7;
    string oauth_token = 8;
    // Requested page size. The maximum page size is 100; this is also the
    // default.
    int32 pageSize = 9;
    // A token identifying a page of results to return. This should be a
    // `next_page_token` value returned from a previous `ListBillingAccounts`
    // call. If unspecified, the first page of results is returned.
    string pageToken = 10;
    boolean pp = 11;
    boolean prettyPrint = 12;
    string quotaUser = 13;
    string uploadType = 14;
    string upload_protocol = 15;
}

message GetV1ServicesRequest {
    $.xgafv $.xgafv = 1;
    string access_token = 2;
    alt alt = 3;
    string bearer_token = 4;
    string callback = 5;
    string fields = 6;
    string key = 7;
    string oauth_token = 8;
    // Requested page size. Defaults to 5000.
    int32 pageSize = 9;
    // A token identifying a page of results to return. This should be a
    // `next_page_token` value returned from a previous `ListServices`
    // call. If unspecified, the first page of results is returned.
    string pageToken = 10;
    boolean pp = 11;
    boolean prettyPrint = 12;
    string quotaUser = 13;
    string uploadType = 14;
    string upload_protocol = 15;
}

message GetV1NameRequest {
    $.xgafv $.xgafv = 1;
    string access_token = 2;
    alt alt = 3;
    string bearer_token = 4;
    string callback = 5;
    string fields = 6;
    string key = 7;
    // The resource name of the billing account to retrieve. For example,
    // `billingAccounts/012345-567890-ABCDEF`.
    string name = 8;
    string oauth_token = 9;
    boolean pp = 10;
    boolean prettyPrint = 11;
    string quotaUser = 12;
    string uploadType = 13;
    string upload_protocol = 14;
}

message GetV1NameBillingInfoRequest {
    $.xgafv $.xgafv = 1;
    string access_token = 2;
    alt alt = 3;
    string bearer_token = 4;
    string callback = 5;
    string fields = 6;
    string key = 7;
    // The resource name of the project for which billing information is
    // retrieved. For example, `projects/tokyo-rain-123`.
    string name = 8;
    string oauth_token = 9;
    boolean pp = 10;
    boolean prettyPrint = 11;
    string quotaUser = 12;
    string uploadType = 13;
    string upload_protocol = 14;
}

message PutV1NameBillingInfoRequest {
    $.xgafv $.xgafv = 1;
    string access_token = 2;
    alt alt = 3;
    string bearer_token = 4;
    ProjectBillingInfo body = 5;
    string callback = 6;
    string fields = 7;
    string key = 8;
    // The resource name of the project associated with the billing information
    // that you want to update. For example, `projects/tokyo-rain-123`.
    string name = 9;
    string oauth_token = 10;
    boolean pp = 11;
    boolean prettyPrint = 12;
    string quotaUser = 13;
    string uploadType = 14;
    string upload_protocol = 15;
}

message GetV1NameProjectsRequest {
    $.xgafv $.xgafv = 1;
    string access_token = 2;
    alt alt = 3;
    string bearer_token = 4;
    string callback = 5;
    string fields = 6;
    string key = 7;
    // The resource name of the billing account associated with the projects that
    // you want to list. For example, `billingAccounts/012345-567890-ABCDEF`.
    string name = 8;
    string oauth_token = 9;
    // Requested page size. The maximum page size is 100; this is also the
    // default.
    int32 pageSize = 10;
    // A token identifying a page of results to be returned. This should be a
    // `next_page_token` value returned from a previous `ListProjectBillingInfo`
    // call. If unspecified, the first page of results is returned.
    string pageToken = 11;
    boolean pp = 12;
    boolean prettyPrint = 13;
    string quotaUser = 14;
    string uploadType = 15;
    string upload_protocol = 16;
}

message GetV1ParentSkusRequest {
    $.xgafv $.xgafv = 1;
    string access_token = 2;
    alt alt = 3;
    string bearer_token = 4;
    string callback = 5;
    // The ISO 4217 currency code for the pricing info in the response proto.
    // Will use the conversion rate as of start_time.
    // Optional. If not specified USD will be used.
    string currencyCode = 6;
    // Optional exclusive end time of the time range for which the pricing
    // versions will be returned. Timestamps in the future are not allowed.
    // Maximum allowable time range is 1 month (31 days). Time range as a whole
    // is optional. If not specified, the latest pricing will be returned (up to
    // 12 hours old at most).
    string endTime = 7;
    string fields = 8;
    string key = 9;
    string oauth_token = 10;
    // Requested page size. Defaults to 5000.
    int32 pageSize = 11;
    // A token identifying a page of results to return. This should be a
    // `next_page_token` value returned from a previous `ListSkus`
    // call. If unspecified, the first page of results is returned.
    string pageToken = 12;
    // The name of the service.
    // Example: "services/DA34-426B-A397"
    string parent = 13;
    boolean pp = 14;
    boolean prettyPrint = 15;
    string quotaUser = 16;
    // Optional inclusive start time of the time range for which the pricing
    // versions will be returned. Timestamps in the future are not allowed.
    // Maximum allowable time range is 1 month (31 days). Time range as a whole
    // is optional. If not specified, the latest pricing will be returned (up to
    // 12 hours old at most).
    string startTime = 17;
    string uploadType = 18;
    string upload_protocol = 19;
}

enum $.Xgafv {
    $XGAFV_1 = 0;
    $XGAFV_2 = 1;
}

message AggregationInfo {
    // The number of intervals to aggregate over.
    // Example: If aggregation_level is "DAILY" and aggregation_count is 14,
    // aggregation will be over 14 days.
    int32 aggregationCount = 1;
    enum AggregationInfo_AggregationInterval {
        AGGREGATIONINFO_AGGREGATIONINTERVAL_AGGREGATION_INTERVAL_UNSPECIFIED = 0;
        AGGREGATIONINFO_AGGREGATIONINTERVAL_DAILY = 1;
        AGGREGATIONINFO_AGGREGATIONINTERVAL_MONTHLY = 2;
    }
    AggregationInfo_AggregationInterval aggregationInterval = 2;
    enum AggregationInfo_AggregationLevel {
        AGGREGATIONINFO_AGGREGATIONLEVEL_AGGREGATION_LEVEL_UNSPECIFIED = 0;
        AGGREGATIONINFO_AGGREGATIONLEVEL_ACCOUNT = 1;
        AGGREGATIONINFO_AGGREGATIONLEVEL_PROJECT = 2;
    }
    AggregationInfo_AggregationLevel aggregationLevel = 3;
}

message BillingAccount {
    // The display name given to the billing account, such as `My Billing
    // Account`. This name is displayed in the Google Cloud Console.
    string displayName = 1;
    // The resource name of the billing account. The resource name has the form
    // `billingAccounts/{billing_account_id}`. For example,
    // `billingAccounts/012345-567890-ABCDEF` would be the resource name for
    // billing account `012345-567890-ABCDEF`.
    string name = 2;
    // True if the billing account is open, and will therefore be charged for any
    // usage on associated projects. False if the billing account is closed, and
    // therefore projects associated with it will be unable to use paid services.
    bool open = 3;
}

message Category {
    // The type of product the SKU refers to.
    // Example: "Compute", "Storage", "Network", "ApplicationServices" etc.
    string resourceFamily = 1;
    // A group classification for related SKUs.
    // Example: "RAM", "GPU", "Prediction", "Ops", "GoogleEgress" etc.
    string resourceGroup = 2;
    // The display name of the service this SKU belongs to.
    string serviceDisplayName = 3;
    // Represents how the SKU is consumed.
    // Example: "OnDemand", "Preemptible", "Commit1Mo", "Commit1Yr" etc.
    string usageType = 4;
}

message ListBillingAccountsResponse {
    // A list of billing accounts.
    repeated BillingAccount billingAccounts = 1;
    // A token to retrieve the next page of results. To retrieve the next page,
    // call `ListBillingAccounts` again with the `page_token` field set to this
    // value. This field is empty if there are no more results to retrieve.
    string nextPageToken = 2;
}

message ListProjectBillingInfoResponse {
    // A token to retrieve the next page of results. To retrieve the next page,
    // call `ListProjectBillingInfo` again with the `page_token` field set to this
    // value. This field is empty if there are no more results to retrieve.
    string nextPageToken = 1;
    // A list of `ProjectBillingInfo` resources representing the projects
    // associated with the billing account.
    repeated ProjectBillingInfo projectBillingInfo = 2;
}

message ListServicesResponse {
    // A token to retrieve the next page of results. To retrieve the next page,
    // call `ListServices` again with the `page_token` field set to this
    // value. This field is empty if there are no more results to retrieve.
    string nextPageToken = 1;
    // A list of services.
    repeated Service services = 2;
}

message ListSkusResponse {
    // A token to retrieve the next page of results. To retrieve the next page,
    // call `ListSkus` again with the `page_token` field set to this
    // value. This field is empty if there are no more results to retrieve.
    string nextPageToken = 1;
    // The list of public SKUs of the given service.
    repeated Sku skus = 2;
}

message Money {
    // The 3-letter currency code defined in ISO 4217.
    string currencyCode = 1;
    // Number of nano (10^-9) units of the amount.
    // The value must be between -999,999,999 and +999,999,999 inclusive.
    // If `units` is positive, `nanos` must be positive or zero.
    // If `units` is zero, `nanos` can be positive, zero, or negative.
    // If `units` is negative, `nanos` must be negative or zero.
    // For example $-1.75 is represented as `units`=-1 and `nanos`=-750,000,000.
    int32 nanos = 2;
    // The whole units of the amount.
    // For example if `currencyCode` is `"USD"`, then 1 unit is one US dollar.
    string units = 3;
}

message PricingExpression {
    // The base unit for the SKU which is the unit used in usage exports.
    // Example: "By"
    string baseUnit = 1;
    // Conversion factor for converting from price per usage_unit to price per
    // base_unit, and start_usage_amount to start_usage_amount in base_unit.
    // unit_price / base_unit_conversion_factor = price per base_unit.
    // start_usage_amount * base_unit_conversion_factor = start_usage_amount in
    // base_unit.
    double baseUnitConversionFactor = 2;
    // The base unit in human readable form.
    // Example: "byte".
    string baseUnitDescription = 3;
    // The recommended quantity of units for displaying pricing info. When
    // displaying pricing info it is recommended to display:
    // (unit_price * display_quantity) per display_quantity usage_unit.
    // This field does not affect the pricing formula and is for display purposes
    // only.
    // Example: If the unit_price is "0.0001 USD", the usage_unit is "GB" and
    // the display_quantity is "1000" then the recommended way of displaying the
    // pricing info is "0.10 USD per 1000 GB"
    double displayQuantity = 4;
    // The list of tiered rates for this pricing. The total cost is computed by
    // applying each of the tiered rates on usage. This repeated list is sorted
    // by ascending order of start_usage_amount.
    repeated TierRate tieredRates = 5;
    // The short hand for unit of usage this pricing is specified in.
    // Example: usage_unit of "GiBy" means that usage is specified in "Gibi Byte".
    string usageUnit = 6;
    // The unit of usage in human readable form.
    // Example: "gibi byte".
    string usageUnitDescription = 7;
}

message PricingInfo {
    // Aggregation Info. This can be left unspecified if the pricing expression
    // doesn't require aggregation.
    AggregationInfo aggregationInfo = 1;
    // Conversion rate for currency conversion, from USD to the currency specified
    // in the request. If the currency is not specified this defaults to 1.0.
    // Example: USD * currency_conversion_rate = JPY
    double currencyConversionRate = 2;
    // The timestamp from which this pricing was effective.
    string effectiveTime = 3;
    // Expresses the pricing formula. See `PricingExpression` for an example.
    PricingExpression pricingExpression = 4;
    // An optional human readable summary of the pricing information, has a
    // maximum length of 256 characters.
    string summary = 5;
}

message ProjectBillingInfo {
    // The resource name of the billing account associated with the project, if
    // any. For example, `billingAccounts/012345-567890-ABCDEF`.
    string billingAccountName = 1;
    // True if the project is associated with an open billing account, to which
    // usage on the project is charged. False if the project is associated with a
    // closed billing account, or no billing account at all, and therefore cannot
    // use paid services. This field is read-only.
    bool billingEnabled = 2;
    // The resource name for the `ProjectBillingInfo`; has the form
    // `projects/{project_id}/billingInfo`. For example, the resource name for the
    // billing information for project `tokyo-rain-123` would be
    // `projects/tokyo-rain-123/billingInfo`. This field is read-only.
    string name = 3;
    // The ID of the project that this `ProjectBillingInfo` represents, such as
    // `tokyo-rain-123`. This is a convenience field so that you don't need to
    // parse the `name` field to obtain a project ID. This field is read-only.
    string projectId = 4;
}

message Service {
    // A human readable display name for this service.
    string displayName = 1;
    // The resource name for the service.
    // Example: "services/DA34-426B-A397"
    string name = 2;
    // The identifier for the service.
    // Example: "DA34-426B-A397"
    string serviceId = 3;
}

message Sku {
    // The category hierarchy of this SKU, purely for organizational purpose.
    Category category = 1;
    // A human readable description of the SKU, has a maximum length of 256
    // characters.
    string description = 2;
    // The resource name for the SKU.
    // Example: "services/DA34-426B-A397/skus/AA95-CD31-42FE"
    string name = 3;
    // A timeline of pricing info for this SKU in chronological order.
    repeated PricingInfo pricingInfo = 4;
    // Identifies the service provider.
    // This is 'Google' for first party services in Google Cloud Platform.
    string serviceProviderName = 5;
    // List of service regions this SKU is offered at.
    // Example: "asia-east1"
    // Service regions can be found at https://cloud.google.com/about/locations
    repeated string serviceRegions = 6;
    // The identifier for the SKU.
    // Example: "AA95-CD31-42FE"
    string skuId = 7;
}

message TierRate {
    // Usage is priced at this rate only after this amount.
    // Example: start_usage_amount of 10 indicates that the usage will be priced
    // at the unit_price after the first 10 usage_units.
    double startUsageAmount = 1;
    // The price per unit of usage.
    // Example: unit_price of amount $10 indicates that each unit will cost $10.
    Money unitPrice = 2;
}

enum Alt {
    JSON = 0;
    MEDIA = 1;
    PROTO = 2;
}

service GoogleCloudBillingService {
    // Lists the billing accounts that the current authenticated user
    // [owns](https://support.google.com/cloud/answer/4430947).
    rpc GetV1BillingAccounts(GetV1BillingAccountsRequest) returns (ListBillingAccountsResponse) {
      option (google.api.http) = {
        get: "//v1/billingAccounts"
      };
    }
    // Lists all public cloud services.
    rpc GetV1Services(GetV1ServicesRequest) returns (ListServicesResponse) {
      option (google.api.http) = {
        get: "//v1/services"
      };
    }
    // Gets information about a billing account. The current authenticated user
    // must be an [owner of the billing
    // account](https://support.google.com/cloud/answer/4430947).
    rpc GetV1Name(GetV1NameRequest) returns (BillingAccount) {
      option (google.api.http) = {
        get: "//v1/{name}"
      };
    }
    // Gets the billing information for a project. The current authenticated user
    // must have [permission to view the
    // project](https://cloud.google.com/docs/permissions-overview#h.bgs0oxofvnoo
    // ).
    rpc GetV1NameBillingInfo(GetV1NameBillingInfoRequest) returns (ProjectBillingInfo) {
      option (google.api.http) = {
        get: "//v1/{name}/billingInfo"
      };
    }
    // Sets or updates the billing account associated with a project. You specify
    // the new billing account by setting the `billing_account_name` in the
    // `ProjectBillingInfo` resource to the resource name of a billing account.
    // Associating a project with an open billing account enables billing on the
    // project and allows charges for resource usage. If the project already had a
    // billing account, this method changes the billing account used for resource
    // usage charges.
    // 
    // *Note:* Incurred charges that have not yet been reported in the transaction
    // history of the Google Cloud Console may be billed to the new billing
    // account, even if the charge occurred before the new billing account was
    // assigned to the project.
    // 
    // The current authenticated user must have ownership privileges for both the
    // [project](https://cloud.google.com/docs/permissions-overview#h.bgs0oxofvnoo
    // ) and the [billing
    // account](https://support.google.com/cloud/answer/4430947).
    // 
    // You can disable billing on the project by setting the
    // `billing_account_name` field to empty. This action disassociates the
    // current billing account from the project. Any billable activity of your
    // in-use services will stop, and your application could stop functioning as
    // expected. Any unbilled charges to date will be billed to the previously
    // associated account. The current authenticated user must be either an owner
    // of the project or an owner of the billing account for the project.
    // 
    // Note that associating a project with a *closed* billing account will have
    // much the same effect as disabling billing on the project: any paid
    // resources used by the project will be shut down. Thus, unless you wish to
    // disable billing, you should always call this method with the name of an
    // *open* billing account.
    rpc PutV1NameBillingInfo(PutV1NameBillingInfoRequest) returns (ProjectBillingInfo) {
      option (google.api.http) = {
        put: "//v1/{name}/billingInfo"
        body: "body"
      };
    }
    // Lists the projects associated with a billing account. The current
    // authenticated user must be an [owner of the billing
    // account](https://support.google.com/cloud/answer/4430947).
    rpc GetV1NameProjects(GetV1NameProjectsRequest) returns (ListProjectBillingInfoResponse) {
      option (google.api.http) = {
        get: "//v1/{name}/projects"
      };
    }
    // Lists all publicly available SKUs for a given cloud service.
    rpc GetV1ParentSkus(GetV1ParentSkusRequest) returns (ListSkusResponse) {
      option (google.api.http) = {
        get: "//v1/{parent}/skus"
      };
    }
}
