basePath: /calendar/v3
definitions.Acl.properties.etag.description: ETag of the collection.
definitions.Acl.properties.etag.type: string
definitions.Acl.properties.items.description: List of rules on the access control
  list.
definitions.Acl.properties.items.items.$ref: '#/definitions/AclRule'
definitions.Acl.properties.items.type: array
definitions.Acl.properties.kind.default: calendar#acl
definitions.Acl.properties.kind.description: Type of the collection ("calendar#acl").
definitions.Acl.properties.kind.type: string
definitions.Acl.properties.nextPageToken.description: Token used to access the next
  page of this result. Omitted if no further results are available, in which case
  nextSyncToken is provided.
definitions.Acl.properties.nextPageToken.type: string
definitions.Acl.properties.nextSyncToken.description: Token used at a later point
  in time to retrieve only the entries that have changed since this result was returned.
  Omitted if further results are available, in which case nextPageToken is provided.
definitions.Acl.properties.nextSyncToken.type: string
definitions.Acl.type: object
definitions.AclRule.properties.etag.description: ETag of the resource.
definitions.AclRule.properties.etag.type: string
definitions.AclRule.properties.id.description: Identifier of the ACL rule.
definitions.AclRule.properties.id.type: string
definitions.AclRule.properties.kind.default: calendar#aclRule
definitions.AclRule.properties.kind.description: Type of the resource ("calendar#aclRule").
definitions.AclRule.properties.kind.type: string
definitions.AclRule.properties.role.description: "The role assigned to the scope.
  Possible values are:  \n- \"none\" - Provides no access. \n- \"freeBusyReader\"
  - Provides read access to free/busy information. \n- \"reader\" - Provides read
  access to the calendar. Private events will appear to users with reader access,
  but event details will be hidden. \n- \"writer\" - Provides read and write access
  to the calendar. Private events will appear to users with writer access, and event
  details will be visible. \n- \"owner\" - Provides ownership of the calendar. This
  role has all of the permissions of the writer role with the additional ability to
  see and manipulate ACLs."
definitions.AclRule.properties.role.type: string
definitions.AclRule.properties.scope.description: The scope of the rule.
definitions.AclRule.properties.scope.properties.type.description: "The type of the
  scope. Possible values are:  \n- \"default\" - The public scope. This is the default
  value. \n- \"user\" - Limits the scope to a single user. \n- \"group\" - Limits
  the scope to a group. \n- \"domain\" - Limits the scope to a domain.  Note: The
  permissions granted to the \"default\", or public, scope apply to any user, authenticated
  or not."
definitions.AclRule.properties.scope.properties.type.type: string
definitions.AclRule.properties.scope.properties.value.description: The email address
  of a user or group, or the name of a domain, depending on the scope type. Omitted
  for type "default".
definitions.AclRule.properties.scope.properties.value.type: string
definitions.AclRule.properties.scope.type: object
definitions.AclRule.type: object
definitions.Calendar.properties.description.description: Description of the calendar.
  Optional.
definitions.Calendar.properties.description.type: string
definitions.Calendar.properties.etag.description: ETag of the resource.
definitions.Calendar.properties.etag.type: string
definitions.Calendar.properties.id.description: Identifier of the calendar. To retrieve
  IDs call the calendarList.list() method.
definitions.Calendar.properties.id.type: string
definitions.Calendar.properties.kind.default: calendar#calendar
definitions.Calendar.properties.kind.description: Type of the resource ("calendar#calendar").
definitions.Calendar.properties.kind.type: string
definitions.Calendar.properties.location.description: Geographic location of the calendar
  as free-form text. Optional.
definitions.Calendar.properties.location.type: string
definitions.Calendar.properties.summary.description: Title of the calendar.
definitions.Calendar.properties.summary.type: string
definitions.Calendar.properties.timeZone.description: The time zone of the calendar.
  (Formatted as an IANA Time Zone Database name, e.g. "Europe/Zurich".) Optional.
definitions.Calendar.properties.timeZone.type: string
definitions.Calendar.type: object
definitions.CalendarList.properties.etag.description: ETag of the collection.
definitions.CalendarList.properties.etag.type: string
definitions.CalendarList.properties.items.description: Calendars that are present
  on the user's calendar list.
definitions.CalendarList.properties.items.items.$ref: '#/definitions/CalendarListEntry'
definitions.CalendarList.properties.items.type: array
definitions.CalendarList.properties.kind.default: calendar#calendarList
definitions.CalendarList.properties.kind.description: Type of the collection ("calendar#calendarList").
definitions.CalendarList.properties.kind.type: string
definitions.CalendarList.properties.nextPageToken.description: Token used to access
  the next page of this result. Omitted if no further results are available, in which
  case nextSyncToken is provided.
definitions.CalendarList.properties.nextPageToken.type: string
definitions.CalendarList.properties.nextSyncToken.description: Token used at a later
  point in time to retrieve only the entries that have changed since this result was
  returned. Omitted if further results are available, in which case nextPageToken
  is provided.
definitions.CalendarList.properties.nextSyncToken.type: string
definitions.CalendarList.type: object
definitions.CalendarListEntry.properties.accessRole.description: "The effective access
  role that the authenticated user has on the calendar. Read-only. Possible values
  are:  \n- \"freeBusyReader\" - Provides read access to free/busy information. \n-
  \"reader\" - Provides read access to the calendar. Private events will appear to
  users with reader access, but event details will be hidden. \n- \"writer\" - Provides
  read and write access to the calendar. Private events will appear to users with
  writer access, and event details will be visible. \n- \"owner\" - Provides ownership
  of the calendar. This role has all of the permissions of the writer role with the
  additional ability to see and manipulate ACLs."
definitions.CalendarListEntry.properties.accessRole.type: string
definitions.CalendarListEntry.properties.backgroundColor.description: The main color
  of the calendar in the hexadecimal format "#0088aa". This property supersedes the
  index-based colorId property. To set or change this property, you need to specify
  colorRgbFormat=true in the parameters of the insert, update and patch methods. Optional.
definitions.CalendarListEntry.properties.backgroundColor.type: string
definitions.CalendarListEntry.properties.colorId.description: The color of the calendar.
  This is an ID referring to an entry in the calendar section of the colors definition
  (see the colors endpoint). This property is superseded by the backgroundColor and
  foregroundColor properties and can be ignored when using these properties. Optional.
definitions.CalendarListEntry.properties.colorId.type: string
definitions.CalendarListEntry.properties.defaultReminders.description: The default
  reminders that the authenticated user has for this calendar.
definitions.CalendarListEntry.properties.defaultReminders.items.$ref: '#/definitions/EventReminder'
definitions.CalendarListEntry.properties.defaultReminders.type: array
definitions.CalendarListEntry.properties.deleted.default: false
definitions.CalendarListEntry.properties.deleted.description: Whether this calendar
  list entry has been deleted from the calendar list. Read-only. Optional. The default
  is False.
definitions.CalendarListEntry.properties.deleted.type: boolean
definitions.CalendarListEntry.properties.description.description: Description of the
  calendar. Optional. Read-only.
definitions.CalendarListEntry.properties.description.type: string
definitions.CalendarListEntry.properties.etag.description: ETag of the resource.
definitions.CalendarListEntry.properties.etag.type: string
definitions.CalendarListEntry.properties.foregroundColor.description: The foreground
  color of the calendar in the hexadecimal format "#ffffff". This property supersedes
  the index-based colorId property. To set or change this property, you need to specify
  colorRgbFormat=true in the parameters of the insert, update and patch methods. Optional.
definitions.CalendarListEntry.properties.foregroundColor.type: string
definitions.CalendarListEntry.properties.hidden.default: false
definitions.CalendarListEntry.properties.hidden.description: Whether the calendar
  has been hidden from the list. Optional. The default is False.
definitions.CalendarListEntry.properties.hidden.type: boolean
definitions.CalendarListEntry.properties.id.description: Identifier of the calendar.
definitions.CalendarListEntry.properties.id.type: string
definitions.CalendarListEntry.properties.kind.default: calendar#calendarListEntry
definitions.CalendarListEntry.properties.kind.description: Type of the resource ("calendar#calendarListEntry").
definitions.CalendarListEntry.properties.kind.type: string
definitions.CalendarListEntry.properties.location.description: Geographic location
  of the calendar as free-form text. Optional. Read-only.
definitions.CalendarListEntry.properties.location.type: string
definitions.CalendarListEntry.properties.notificationSettings.description: The notifications
  that the authenticated user is receiving for this calendar.
definitions.CalendarListEntry.properties.notificationSettings.properties.notifications.description: The
  list of notifications set for this calendar.
definitions.CalendarListEntry.properties.notificationSettings.properties.notifications.items.$ref: '#/definitions/CalendarNotification'
definitions.CalendarListEntry.properties.notificationSettings.properties.notifications.type: array
definitions.CalendarListEntry.properties.notificationSettings.type: object
definitions.CalendarListEntry.properties.primary.default: false
definitions.CalendarListEntry.properties.primary.description: Whether the calendar
  is the primary calendar of the authenticated user. Read-only. Optional. The default
  is False.
definitions.CalendarListEntry.properties.primary.type: boolean
definitions.CalendarListEntry.properties.selected.default: false
definitions.CalendarListEntry.properties.selected.description: Whether the calendar
  content shows up in the calendar UI. Optional. The default is False.
definitions.CalendarListEntry.properties.selected.type: boolean
definitions.CalendarListEntry.properties.summary.description: Title of the calendar.
  Read-only.
definitions.CalendarListEntry.properties.summary.type: string
definitions.CalendarListEntry.properties.summaryOverride.description: The summary
  that the authenticated user has set for this calendar. Optional.
definitions.CalendarListEntry.properties.summaryOverride.type: string
definitions.CalendarListEntry.properties.timeZone.description: The time zone of the
  calendar. Optional. Read-only.
definitions.CalendarListEntry.properties.timeZone.type: string
definitions.CalendarListEntry.type: object
definitions.CalendarNotification.properties.method.description: "The method used to
  deliver the notification. Possible values are:  \n- \"email\" - Reminders are sent
  via email. \n- \"sms\" - Reminders are sent via SMS. This value is read-only and
  is ignored on inserts and updates. SMS reminders are only available for G Suite
  customers."
definitions.CalendarNotification.properties.method.type: string
definitions.CalendarNotification.properties.type.description: "The type of notification.
  Possible values are:  \n- \"eventCreation\" - Notification sent when a new event
  is put on the calendar. \n- \"eventChange\" - Notification sent when an event is
  changed. \n- \"eventCancellation\" - Notification sent when an event is cancelled.
  \n- \"eventResponse\" - Notification sent when an event is changed. \n- \"agenda\"
  - An agenda with the events of the day (sent out in the morning)."
definitions.CalendarNotification.properties.type.type: string
definitions.CalendarNotification.type: object
definitions.Channel.properties.address.description: The address where notifications
  are delivered for this channel.
definitions.Channel.properties.address.type: string
definitions.Channel.properties.expiration.description: Date and time of notification
  channel expiration, expressed as a Unix timestamp, in milliseconds. Optional.
definitions.Channel.properties.expiration.format: int64
definitions.Channel.properties.expiration.type: string
definitions.Channel.properties.id.description: A UUID or similar unique string that
  identifies this channel.
definitions.Channel.properties.id.type: string
definitions.Channel.properties.kind.default: api#channel
definitions.Channel.properties.kind.description: 'Identifies this as a notification
  channel used to watch for changes to a resource. Value: the fixed string "api#channel".'
definitions.Channel.properties.kind.type: string
definitions.Channel.properties.params.additionalProperties.description: Declares a
  new parameter by name.
definitions.Channel.properties.params.additionalProperties.type: string
definitions.Channel.properties.params.description: Additional parameters controlling
  delivery channel behavior. Optional.
definitions.Channel.properties.params.type: object
definitions.Channel.properties.payload.description: A Boolean value to indicate whether
  payload is wanted. Optional.
definitions.Channel.properties.payload.type: boolean
definitions.Channel.properties.resourceId.description: An opaque ID that identifies
  the resource being watched on this channel. Stable across different API versions.
definitions.Channel.properties.resourceId.type: string
definitions.Channel.properties.resourceUri.description: A version-specific identifier
  for the watched resource.
definitions.Channel.properties.resourceUri.type: string
definitions.Channel.properties.token.description: An arbitrary string delivered to
  the target address with each notification delivered over this channel. Optional.
definitions.Channel.properties.token.type: string
definitions.Channel.properties.type.description: The type of delivery mechanism used
  for this channel.
definitions.Channel.properties.type.type: string
definitions.Channel.type: object
definitions.ColorDefinition.properties.background.description: The background color
  associated with this color definition.
definitions.ColorDefinition.properties.background.type: string
definitions.ColorDefinition.properties.foreground.description: The foreground color
  that can be used to write on top of a background with 'background' color.
definitions.ColorDefinition.properties.foreground.type: string
definitions.ColorDefinition.type: object
definitions.Colors.properties.calendar.additionalProperties.$ref: '#/definitions/ColorDefinition'
definitions.Colors.properties.calendar.additionalProperties.description: A calendar
  color defintion.
definitions.Colors.properties.calendar.description: A global palette of calendar colors,
  mapping from the color ID to its definition. A calendarListEntry resource refers
  to one of these color IDs in its color field. Read-only.
definitions.Colors.properties.calendar.type: object
definitions.Colors.properties.event.additionalProperties.$ref: '#/definitions/ColorDefinition'
definitions.Colors.properties.event.additionalProperties.description: An event color
  definition.
definitions.Colors.properties.event.description: A global palette of event colors,
  mapping from the color ID to its definition. An event resource may refer to one
  of these color IDs in its color field. Read-only.
definitions.Colors.properties.event.type: object
definitions.Colors.properties.kind.default: calendar#colors
definitions.Colors.properties.kind.description: Type of the resource ("calendar#colors").
definitions.Colors.properties.kind.type: string
definitions.Colors.properties.updated.description: Last modification time of the color
  palette (as a RFC3339 timestamp). Read-only.
definitions.Colors.properties.updated.format: date-time
definitions.Colors.properties.updated.type: string
definitions.Colors.type: object
definitions.Error.properties.domain.description: Domain, or broad category, of the
  error.
definitions.Error.properties.domain.type: string
definitions.Error.properties.reason.description: "Specific reason for the error. Some
  of the possible values are:  \n- \"groupTooBig\" - The group of users requested
  is too large for a single query. \n- \"tooManyCalendarsRequested\" - The number
  of calendars requested is too large for a single query. \n- \"notFound\" - The requested
  resource was not found. \n- \"internalError\" - The API service has encountered
  an internal error.  Additional error types may be added in the future, so clients
  should gracefully handle additional error statuses not included in this list."
definitions.Error.properties.reason.type: string
definitions.Error.type: object
definitions.Event.properties.anyoneCanAddSelf.default: false
definitions.Event.properties.anyoneCanAddSelf.description: Whether anyone can invite
  themselves to the event (currently works for Google+ events only). Optional. The
  default is False.
definitions.Event.properties.anyoneCanAddSelf.type: boolean
definitions.Event.properties.attachments.description: |-
  File attachments for the event. Currently only Google Drive attachments are supported.
  In order to modify attachments the supportsAttachments request parameter should be set to true.
  There can be at most 25 attachments per event,
definitions.Event.properties.attachments.items.$ref: '#/definitions/EventAttachment'
definitions.Event.properties.attachments.type: array
definitions.Event.properties.attendees.description: The attendees of the event. See
  the Events with attendees guide for more information on scheduling events with other
  calendar users.
definitions.Event.properties.attendees.items.$ref: '#/definitions/EventAttendee'
definitions.Event.properties.attendees.type: array
definitions.Event.properties.attendeesOmitted.default: false
definitions.Event.properties.attendeesOmitted.description: Whether attendees may have
  been omitted from the event's representation. When retrieving an event, this may
  be due to a restriction specified by the maxAttendee query parameter. When updating
  an event, this can be used to only update the participant's response. Optional.
  The default is False.
definitions.Event.properties.attendeesOmitted.type: boolean
definitions.Event.properties.colorId.description: The color of the event. This is
  an ID referring to an entry in the event section of the colors definition (see the  colors
  endpoint). Optional.
definitions.Event.properties.colorId.type: string
definitions.Event.properties.created.description: Creation time of the event (as a
  RFC3339 timestamp). Read-only.
definitions.Event.properties.created.format: date-time
definitions.Event.properties.created.type: string
definitions.Event.properties.creator.description: The creator of the event. Read-only.
definitions.Event.properties.creator.properties.displayName.description: The creator's
  name, if available.
definitions.Event.properties.creator.properties.displayName.type: string
definitions.Event.properties.creator.properties.email.description: The creator's email
  address, if available.
definitions.Event.properties.creator.properties.email.type: string
definitions.Event.properties.creator.properties.id.description: The creator's Profile
  ID, if available. It corresponds to theid field in the People collection of the
  Google+ API
definitions.Event.properties.creator.properties.id.type: string
definitions.Event.properties.creator.properties.self.default: false
definitions.Event.properties.creator.properties.self.description: Whether the creator
  corresponds to the calendar on which this copy of the event appears. Read-only.
  The default is False.
definitions.Event.properties.creator.properties.self.type: boolean
definitions.Event.properties.creator.type: object
definitions.Event.properties.description.description: Description of the event. Optional.
definitions.Event.properties.description.type: string
definitions.Event.properties.end.$ref: '#/definitions/EventDateTime'
definitions.Event.properties.end.description: The (exclusive) end time of the event.
  For a recurring event, this is the end time of the first instance.
definitions.Event.properties.endTimeUnspecified.default: false
definitions.Event.properties.endTimeUnspecified.description: Whether the end time
  is actually unspecified. An end time is still provided for compatibility reasons,
  even if this attribute is set to True. The default is False.
definitions.Event.properties.endTimeUnspecified.type: boolean
definitions.Event.properties.etag.description: ETag of the resource.
definitions.Event.properties.etag.type: string
definitions.Event.properties.extendedProperties.description: Extended properties of
  the event.
definitions.Event.properties.extendedProperties.properties.private.additionalProperties.description: The
  name of the private property and the corresponding value.
definitions.Event.properties.extendedProperties.properties.private.additionalProperties.type: string
definitions.Event.properties.extendedProperties.properties.private.description: Properties
  that are private to the copy of the event that appears on this calendar.
definitions.Event.properties.extendedProperties.properties.private.type: object
definitions.Event.properties.extendedProperties.properties.shared.additionalProperties.description: The
  name of the shared property and the corresponding value.
definitions.Event.properties.extendedProperties.properties.shared.additionalProperties.type: string
definitions.Event.properties.extendedProperties.properties.shared.description: Properties
  that are shared between copies of the event on other attendees' calendars.
definitions.Event.properties.extendedProperties.properties.shared.type: object
definitions.Event.properties.extendedProperties.type: object
definitions.Event.properties.gadget.description: A gadget that extends this event.
definitions.Event.properties.gadget.properties.display.description: "The gadget's
  display mode. Optional. Possible values are:  \n- \"icon\" - The gadget displays
  next to the event's title in the calendar view. \n- \"chip\" - The gadget displays
  when the event is clicked."
definitions.Event.properties.gadget.properties.display.type: string
definitions.Event.properties.gadget.properties.height.description: The gadget's height
  in pixels. The height must be an integer greater than 0. Optional.
definitions.Event.properties.gadget.properties.height.format: int32
definitions.Event.properties.gadget.properties.height.type: integer
definitions.Event.properties.gadget.properties.iconLink.description: The gadget's
  icon URL. The URL scheme must be HTTPS.
definitions.Event.properties.gadget.properties.iconLink.type: string
definitions.Event.properties.gadget.properties.link.description: The gadget's URL.
  The URL scheme must be HTTPS.
definitions.Event.properties.gadget.properties.link.type: string
definitions.Event.properties.gadget.properties.preferences.additionalProperties.description: The
  preference name and corresponding value.
definitions.Event.properties.gadget.properties.preferences.additionalProperties.type: string
definitions.Event.properties.gadget.properties.preferences.description: Preferences.
definitions.Event.properties.gadget.properties.preferences.type: object
definitions.Event.properties.gadget.properties.title.description: The gadget's title.
definitions.Event.properties.gadget.properties.title.type: string
definitions.Event.properties.gadget.properties.type.description: The gadget's type.
definitions.Event.properties.gadget.properties.type.type: string
definitions.Event.properties.gadget.properties.width.description: The gadget's width
  in pixels. The width must be an integer greater than 0. Optional.
definitions.Event.properties.gadget.properties.width.format: int32
definitions.Event.properties.gadget.properties.width.type: integer
definitions.Event.properties.gadget.type: object
definitions.Event.properties.guestsCanInviteOthers.default: true
definitions.Event.properties.guestsCanInviteOthers.description: Whether attendees
  other than the organizer can invite others to the event. Optional. The default is
  True.
definitions.Event.properties.guestsCanInviteOthers.type: boolean
definitions.Event.properties.guestsCanModify.default: false
definitions.Event.properties.guestsCanModify.description: Whether attendees other
  than the organizer can modify the event. Optional. The default is False.
definitions.Event.properties.guestsCanModify.type: boolean
definitions.Event.properties.guestsCanSeeOtherGuests.default: true
definitions.Event.properties.guestsCanSeeOtherGuests.description: Whether attendees
  other than the organizer can see who the event's attendees are. Optional. The default
  is True.
definitions.Event.properties.guestsCanSeeOtherGuests.type: boolean
definitions.Event.properties.hangoutLink.description: An absolute link to the Google+
  hangout associated with this event. Read-only.
definitions.Event.properties.hangoutLink.type: string
definitions.Event.properties.htmlLink.description: An absolute link to this event
  in the Google Calendar Web UI. Read-only.
definitions.Event.properties.htmlLink.type: string
definitions.Event.properties.iCalUID.description: |-
  Event unique identifier as defined in RFC5545. It is used to uniquely identify events accross calendaring systems and must be supplied when importing events via the import method.
  Note that the icalUID and the id are not identical and only one of them should be supplied at event creation time. One difference in their semantics is that in recurring events, all occurrences of one event have different ids while they all share the same icalUIDs.
definitions.Event.properties.iCalUID.type: string
definitions.Event.properties.id.description: "Opaque identifier of the event. When
  creating new single or recurring events, you can specify their IDs. Provided IDs
  must follow these rules:  \n- characters allowed in the ID are those used in base32hex
  encoding, i.e. lowercase letters a-v and digits 0-9, see section 3.1.2 in RFC2938
  \n- the length of the ID must be between 5 and 1024 characters \n- the ID must be
  unique per calendar  Due to the globally distributed nature of the system, we cannot
  guarantee that ID collisions will be detected at event creation time. To minimize
  the risk of collisions we recommend using an established UUID algorithm such as
  one described in RFC4122.\nIf you do not specify an ID, it will be automatically
  generated by the server.\nNote that the icalUID and the id are not identical and
  only one of them should be supplied at event creation time. One difference in their
  semantics is that in recurring events, all occurrences of one event have different
  ids while they all share the same icalUIDs."
definitions.Event.properties.id.type: string
definitions.Event.properties.kind.default: calendar#event
definitions.Event.properties.kind.description: Type of the resource ("calendar#event").
definitions.Event.properties.kind.type: string
definitions.Event.properties.location.description: Geographic location of the event
  as free-form text. Optional.
definitions.Event.properties.location.type: string
definitions.Event.properties.locked.default: false
definitions.Event.properties.locked.description: Whether this is a locked event copy
  where no changes can be made to the main event fields "summary", "description",
  "location", "start", "end" or "recurrence". The default is False. Read-Only.
definitions.Event.properties.locked.type: boolean
definitions.Event.properties.organizer.description: The organizer of the event. If
  the organizer is also an attendee, this is indicated with a separate entry in attendees
  with the organizer field set to True. To change the organizer, use the move operation.
  Read-only, except when importing an event.
definitions.Event.properties.organizer.properties.displayName.description: The organizer's
  name, if available.
definitions.Event.properties.organizer.properties.displayName.type: string
definitions.Event.properties.organizer.properties.email.description: The organizer's
  email address, if available. It must be a valid email address as per RFC5322.
definitions.Event.properties.organizer.properties.email.type: string
definitions.Event.properties.organizer.properties.id.description: The organizer's
  Profile ID, if available. It corresponds to theid field in the People collection
  of the Google+ API
definitions.Event.properties.organizer.properties.id.type: string
definitions.Event.properties.organizer.properties.self.default: false
definitions.Event.properties.organizer.properties.self.description: Whether the organizer
  corresponds to the calendar on which this copy of the event appears. Read-only.
  The default is False.
definitions.Event.properties.organizer.properties.self.type: boolean
definitions.Event.properties.organizer.type: object
definitions.Event.properties.originalStartTime.$ref: '#/definitions/EventDateTime'
definitions.Event.properties.originalStartTime.description: For an instance of a recurring
  event, this is the time at which this event would start according to the recurrence
  data in the recurring event identified by recurringEventId. Immutable.
definitions.Event.properties.privateCopy.default: false
definitions.Event.properties.privateCopy.description: Whether this is a private event
  copy where changes are not shared with other copies on other calendars. Optional.
  Immutable. The default is False.
definitions.Event.properties.privateCopy.type: boolean
definitions.Event.properties.recurrence.description: List of RRULE, EXRULE, RDATE
  and EXDATE lines for a recurring event, as specified in RFC5545. Note that DTSTART
  and DTEND lines are not allowed in this field; event start and end times are specified
  in the start and end fields. This field is omitted for single events or instances
  of recurring events.
definitions.Event.properties.recurrence.items.type: string
definitions.Event.properties.recurrence.type: array
definitions.Event.properties.recurringEventId.description: For an instance of a recurring
  event, this is the id of the recurring event to which this instance belongs. Immutable.
definitions.Event.properties.recurringEventId.type: string
definitions.Event.properties.reminders.description: Information about the event's
  reminders for the authenticated user.
definitions.Event.properties.reminders.properties.overrides.description: If the event
  doesn't use the default reminders, this lists the reminders specific to the event,
  or, if not set, indicates that no reminders are set for this event. The maximum
  number of override reminders is 5.
definitions.Event.properties.reminders.properties.overrides.items.$ref: '#/definitions/EventReminder'
definitions.Event.properties.reminders.properties.overrides.type: array
definitions.Event.properties.reminders.properties.useDefault.description: Whether
  the default reminders of the calendar apply to the event.
definitions.Event.properties.reminders.properties.useDefault.type: boolean
definitions.Event.properties.reminders.type: object
definitions.Event.properties.sequence.description: Sequence number as per iCalendar.
definitions.Event.properties.sequence.format: int32
definitions.Event.properties.sequence.type: integer
definitions.Event.properties.source.description: Source from which the event was created.
  For example, a web page, an email message or any document identifiable by an URL
  with HTTP or HTTPS scheme. Can only be seen or modified by the creator of the event.
definitions.Event.properties.source.properties.title.description: Title of the source;
  for example a title of a web page or an email subject.
definitions.Event.properties.source.properties.title.type: string
definitions.Event.properties.source.properties.url.description: URL of the source
  pointing to a resource. The URL scheme must be HTTP or HTTPS.
definitions.Event.properties.source.properties.url.type: string
definitions.Event.properties.source.type: object
definitions.Event.properties.start.$ref: '#/definitions/EventDateTime'
definitions.Event.properties.start.description: The (inclusive) start time of the
  event. For a recurring event, this is the start time of the first instance.
definitions.Event.properties.status.description: "Status of the event. Optional. Possible
  values are:  \n- \"confirmed\" - The event is confirmed. This is the default status.
  \n- \"tentative\" - The event is tentatively confirmed. \n- \"cancelled\" - The
  event is cancelled."
definitions.Event.properties.status.type: string
definitions.Event.properties.summary.description: Title of the event.
definitions.Event.properties.summary.type: string
definitions.Event.properties.transparency.default: opaque
definitions.Event.properties.transparency.description: "Whether the event blocks time
  on the calendar. Optional. Possible values are:  \n- \"opaque\" - Default value.
  The event does block time on the calendar. This is equivalent to setting Show me
  as to Busy in the Calendar UI. \n- \"transparent\" - The event does not block time
  on the calendar. This is equivalent to setting Show me as to Available in the Calendar
  UI."
definitions.Event.properties.transparency.type: string
definitions.Event.properties.updated.description: Last modification time of the event
  (as a RFC3339 timestamp). Read-only.
definitions.Event.properties.updated.format: date-time
definitions.Event.properties.updated.type: string
definitions.Event.properties.visibility.default: default
definitions.Event.properties.visibility.description: "Visibility of the event. Optional.
  Possible values are:  \n- \"default\" - Uses the default visibility for events on
  the calendar. This is the default value. \n- \"public\" - The event is public and
  event details are visible to all readers of the calendar. \n- \"private\" - The
  event is private and only event attendees may view event details. \n- \"confidential\"
  - The event is private. This value is provided for compatibility reasons."
definitions.Event.properties.visibility.type: string
definitions.Event.type: object
definitions.EventAttachment.properties.fileId.description: |-
  ID of the attached file. Read-only.
  For Google Drive files, this is the ID of the corresponding Files resource entry in the Drive API.
definitions.EventAttachment.properties.fileId.type: string
definitions.EventAttachment.properties.fileUrl.description: |-
  URL link to the attachment.
  For adding Google Drive file attachments use the same format as in alternateLink property of the Files resource in the Drive API.
definitions.EventAttachment.properties.fileUrl.type: string
definitions.EventAttachment.properties.iconLink.description: URL link to the attachment's
  icon. Read-only.
definitions.EventAttachment.properties.iconLink.type: string
definitions.EventAttachment.properties.mimeType.description: Internet media type (MIME
  type) of the attachment.
definitions.EventAttachment.properties.mimeType.type: string
definitions.EventAttachment.properties.title.description: Attachment title.
definitions.EventAttachment.properties.title.type: string
definitions.EventAttachment.type: object
definitions.EventAttendee.properties.additionalGuests.default: 0
definitions.EventAttendee.properties.additionalGuests.description: Number of additional
  guests. Optional. The default is 0.
definitions.EventAttendee.properties.additionalGuests.format: int32
definitions.EventAttendee.properties.additionalGuests.type: integer
definitions.EventAttendee.properties.comment.description: The attendee's response
  comment. Optional.
definitions.EventAttendee.properties.comment.type: string
definitions.EventAttendee.properties.displayName.description: The attendee's name,
  if available. Optional.
definitions.EventAttendee.properties.displayName.type: string
definitions.EventAttendee.properties.email.description: The attendee's email address,
  if available. This field must be present when adding an attendee. It must be a valid
  email address as per RFC5322.
definitions.EventAttendee.properties.email.type: string
definitions.EventAttendee.properties.id.description: The attendee's Profile ID, if
  available. It corresponds to theid field in the People collection of the Google+
  API
definitions.EventAttendee.properties.id.type: string
definitions.EventAttendee.properties.optional.default: false
definitions.EventAttendee.properties.optional.description: Whether this is an optional
  attendee. Optional. The default is False.
definitions.EventAttendee.properties.optional.type: boolean
definitions.EventAttendee.properties.organizer.description: Whether the attendee is
  the organizer of the event. Read-only. The default is False.
definitions.EventAttendee.properties.organizer.type: boolean
definitions.EventAttendee.properties.resource.default: false
definitions.EventAttendee.properties.resource.description: Whether the attendee is
  a resource. Read-only. The default is False.
definitions.EventAttendee.properties.resource.type: boolean
definitions.EventAttendee.properties.responseStatus.description: "The attendee's response
  status. Possible values are:  \n- \"needsAction\" - The attendee has not responded
  to the invitation. \n- \"declined\" - The attendee has declined the invitation.
  \n- \"tentative\" - The attendee has tentatively accepted the invitation. \n- \"accepted\"
  - The attendee has accepted the invitation."
definitions.EventAttendee.properties.responseStatus.type: string
definitions.EventAttendee.properties.self.default: false
definitions.EventAttendee.properties.self.description: Whether this entry represents
  the calendar on which this copy of the event appears. Read-only. The default is
  False.
definitions.EventAttendee.properties.self.type: boolean
definitions.EventAttendee.type: object
definitions.EventDateTime.properties.date.description: The date, in the format "yyyy-mm-dd",
  if this is an all-day event.
definitions.EventDateTime.properties.date.format: date
definitions.EventDateTime.properties.date.type: string
definitions.EventDateTime.properties.dateTime.description: The time, as a combined
  date-time value (formatted according to RFC3339). A time zone offset is required
  unless a time zone is explicitly specified in timeZone.
definitions.EventDateTime.properties.dateTime.format: date-time
definitions.EventDateTime.properties.dateTime.type: string
definitions.EventDateTime.properties.timeZone.description: The time zone in which
  the time is specified. (Formatted as an IANA Time Zone Database name, e.g. "Europe/Zurich".)
  For recurring events this field is required and specifies the time zone in which
  the recurrence is expanded. For single events this field is optional and indicates
  a custom time zone for the event start/end.
definitions.EventDateTime.properties.timeZone.type: string
definitions.EventDateTime.type: object
definitions.EventReminder.properties.method.description: "The method used by this
  reminder. Possible values are:  \n- \"email\" - Reminders are sent via email. \n-
  \"sms\" - Reminders are sent via SMS. These are only available for G Suite customers.
  Requests to set SMS reminders for other account types are ignored. \n- \"popup\"
  - Reminders are sent via a UI popup."
definitions.EventReminder.properties.method.type: string
definitions.EventReminder.properties.minutes.description: Number of minutes before
  the start of the event when the reminder should trigger. Valid values are between
  0 and 40320 (4 weeks in minutes).
definitions.EventReminder.properties.minutes.format: int32
definitions.EventReminder.properties.minutes.type: integer
definitions.EventReminder.type: object
definitions.Events.properties.accessRole.description: "The user's access role for
  this calendar. Read-only. Possible values are:  \n- \"none\" - The user has no access.
  \n- \"freeBusyReader\" - The user has read access to free/busy information. \n-
  \"reader\" - The user has read access to the calendar. Private events will appear
  to users with reader access, but event details will be hidden. \n- \"writer\" -
  The user has read and write access to the calendar. Private events will appear to
  users with writer access, and event details will be visible. \n- \"owner\" - The
  user has ownership of the calendar. This role has all of the permissions of the
  writer role with the additional ability to see and manipulate ACLs."
definitions.Events.properties.accessRole.type: string
definitions.Events.properties.defaultReminders.description: The default reminders
  on the calendar for the authenticated user. These reminders apply to all events
  on this calendar that do not explicitly override them (i.e. do not have reminders.useDefault
  set to True).
definitions.Events.properties.defaultReminders.items.$ref: '#/definitions/EventReminder'
definitions.Events.properties.defaultReminders.type: array
definitions.Events.properties.description.description: Description of the calendar.
  Read-only.
definitions.Events.properties.description.type: string
definitions.Events.properties.etag.description: ETag of the collection.
definitions.Events.properties.etag.type: string
definitions.Events.properties.items.description: List of events on the calendar.
definitions.Events.properties.items.items.$ref: '#/definitions/Event'
definitions.Events.properties.items.type: array
definitions.Events.properties.kind.default: calendar#events
definitions.Events.properties.kind.description: Type of the collection ("calendar#events").
definitions.Events.properties.kind.type: string
definitions.Events.properties.nextPageToken.description: Token used to access the
  next page of this result. Omitted if no further results are available, in which
  case nextSyncToken is provided.
definitions.Events.properties.nextPageToken.type: string
definitions.Events.properties.nextSyncToken.description: Token used at a later point
  in time to retrieve only the entries that have changed since this result was returned.
  Omitted if further results are available, in which case nextPageToken is provided.
definitions.Events.properties.nextSyncToken.type: string
definitions.Events.properties.summary.description: Title of the calendar. Read-only.
definitions.Events.properties.summary.type: string
definitions.Events.properties.timeZone.description: The time zone of the calendar.
  Read-only.
definitions.Events.properties.timeZone.type: string
definitions.Events.properties.updated.description: Last modification time of the calendar
  (as a RFC3339 timestamp). Read-only.
definitions.Events.properties.updated.format: date-time
definitions.Events.properties.updated.type: string
definitions.Events.type: object
definitions.FreeBusyCalendar.properties.busy.description: List of time ranges during
  which this calendar should be regarded as busy.
definitions.FreeBusyCalendar.properties.busy.items.$ref: '#/definitions/TimePeriod'
definitions.FreeBusyCalendar.properties.busy.type: array
definitions.FreeBusyCalendar.properties.errors.description: Optional error(s) (if
  computation for the calendar failed).
definitions.FreeBusyCalendar.properties.errors.items.$ref: '#/definitions/Error'
definitions.FreeBusyCalendar.properties.errors.type: array
definitions.FreeBusyCalendar.type: object
definitions.FreeBusyGroup.properties.calendars.description: List of calendars' identifiers
  within a group.
definitions.FreeBusyGroup.properties.calendars.items.type: string
definitions.FreeBusyGroup.properties.calendars.type: array
definitions.FreeBusyGroup.properties.errors.description: Optional error(s) (if computation
  for the group failed).
definitions.FreeBusyGroup.properties.errors.items.$ref: '#/definitions/Error'
definitions.FreeBusyGroup.properties.errors.type: array
definitions.FreeBusyGroup.type: object
definitions.FreeBusyRequest.properties.calendarExpansionMax.description: Maximal number
  of calendars for which FreeBusy information is to be provided. Optional.
definitions.FreeBusyRequest.properties.calendarExpansionMax.format: int32
definitions.FreeBusyRequest.properties.calendarExpansionMax.type: integer
definitions.FreeBusyRequest.properties.groupExpansionMax.description: Maximal number
  of calendar identifiers to be provided for a single group. Optional. An error will
  be returned for a group with more members than this value.
definitions.FreeBusyRequest.properties.groupExpansionMax.format: int32
definitions.FreeBusyRequest.properties.groupExpansionMax.type: integer
definitions.FreeBusyRequest.properties.items.description: List of calendars and/or
  groups to query.
definitions.FreeBusyRequest.properties.items.items.$ref: '#/definitions/FreeBusyRequestItem'
definitions.FreeBusyRequest.properties.items.type: array
definitions.FreeBusyRequest.properties.timeMax.description: The end of the interval
  for the query.
definitions.FreeBusyRequest.properties.timeMax.format: date-time
definitions.FreeBusyRequest.properties.timeMax.type: string
definitions.FreeBusyRequest.properties.timeMin.description: The start of the interval
  for the query.
definitions.FreeBusyRequest.properties.timeMin.format: date-time
definitions.FreeBusyRequest.properties.timeMin.type: string
definitions.FreeBusyRequest.properties.timeZone.default: UTC
definitions.FreeBusyRequest.properties.timeZone.description: Time zone used in the
  response. Optional. The default is UTC.
definitions.FreeBusyRequest.properties.timeZone.type: string
definitions.FreeBusyRequest.type: object
definitions.FreeBusyRequestItem.properties.id.description: The identifier of a calendar
  or a group.
definitions.FreeBusyRequestItem.properties.id.type: string
definitions.FreeBusyRequestItem.type: object
definitions.FreeBusyResponse.properties.calendars.additionalProperties.$ref: '#/definitions/FreeBusyCalendar'
definitions.FreeBusyResponse.properties.calendars.additionalProperties.description: Free/busy
  expansions for a single calendar.
definitions.FreeBusyResponse.properties.calendars.description: List of free/busy information
  for calendars.
definitions.FreeBusyResponse.properties.calendars.type: object
definitions.FreeBusyResponse.properties.groups.additionalProperties.$ref: '#/definitions/FreeBusyGroup'
definitions.FreeBusyResponse.properties.groups.additionalProperties.description: List
  of calendars that are members of this group.
definitions.FreeBusyResponse.properties.groups.description: Expansion of groups.
definitions.FreeBusyResponse.properties.groups.type: object
definitions.FreeBusyResponse.properties.kind.default: calendar#freeBusy
definitions.FreeBusyResponse.properties.kind.description: Type of the resource ("calendar#freeBusy").
definitions.FreeBusyResponse.properties.kind.type: string
definitions.FreeBusyResponse.properties.timeMax.description: The end of the interval.
definitions.FreeBusyResponse.properties.timeMax.format: date-time
definitions.FreeBusyResponse.properties.timeMax.type: string
definitions.FreeBusyResponse.properties.timeMin.description: The start of the interval.
definitions.FreeBusyResponse.properties.timeMin.format: date-time
definitions.FreeBusyResponse.properties.timeMin.type: string
definitions.FreeBusyResponse.type: object
definitions.Setting.properties.etag.description: ETag of the resource.
definitions.Setting.properties.etag.type: string
definitions.Setting.properties.id.description: The id of the user setting.
definitions.Setting.properties.id.type: string
definitions.Setting.properties.kind.default: calendar#setting
definitions.Setting.properties.kind.description: Type of the resource ("calendar#setting").
definitions.Setting.properties.kind.type: string
definitions.Setting.properties.value.description: Value of the user setting. The format
  of the value depends on the ID of the setting. It must always be a UTF-8 string
  of length up to 1024 characters.
definitions.Setting.properties.value.type: string
definitions.Setting.type: object
definitions.Settings.properties.etag.description: Etag of the collection.
definitions.Settings.properties.etag.type: string
definitions.Settings.properties.items.description: List of user settings.
definitions.Settings.properties.items.items.$ref: '#/definitions/Setting'
definitions.Settings.properties.items.type: array
definitions.Settings.properties.kind.default: calendar#settings
definitions.Settings.properties.kind.description: Type of the collection ("calendar#settings").
definitions.Settings.properties.kind.type: string
definitions.Settings.properties.nextPageToken.description: Token used to access the
  next page of this result. Omitted if no further results are available, in which
  case nextSyncToken is provided.
definitions.Settings.properties.nextPageToken.type: string
definitions.Settings.properties.nextSyncToken.description: Token used at a later point
  in time to retrieve only the entries that have changed since this result was returned.
  Omitted if further results are available, in which case nextPageToken is provided.
definitions.Settings.properties.nextSyncToken.type: string
definitions.Settings.type: object
definitions.TimePeriod.properties.end.description: The (exclusive) end of the time
  period.
definitions.TimePeriod.properties.end.format: date-time
definitions.TimePeriod.properties.end.type: string
definitions.TimePeriod.properties.start.description: The (inclusive) start of the
  time period.
definitions.TimePeriod.properties.start.format: date-time
definitions.TimePeriod.properties.start.type: string
definitions.TimePeriod.type: object
externalDocs.url: https://developers.google.com/google-apps/calendar/firstapp
host: www.googleapis.com
info.contact.name: Google
info.contact.url: https://google.com
info.description: Manipulates events and other calendar data.
info.title: Calendar
info.version: v3
info.x-apiClientRegistration.url: https://console.developers.google.com
info.x-apisguru-categories.length: 1
info.x-apisguru-categories[0]: time_management
info.x-logo.url: https://api.apis.guru/v2/cache/logo/https_www.gstatic.com_images_icons_material_product_2x_calendar_64dp.png
info.x-origin.length: 1
info.x-origin[0].converter.url: https://github.com/lucybot/api-spec-converter
info.x-origin[0].converter.version: 2.6.0
info.x-origin[0].format: google
info.x-origin[0].url: https://www.googleapis.com/discovery/v1/apis/calendar/v3/rest
info.x-origin[0].version: v1
info.x-preferred: true
info.x-providerName: googleapis.com
info.x-serviceName: calendar
parameters.alt.default: json
parameters.alt.description: Data format for the response.
parameters.alt.enum.length: 1
parameters.alt.enum[0]: json
parameters.alt.in: query
parameters.alt.name: alt
parameters.alt.type: string
parameters.fields.description: Selector specifying which fields to include in a partial
  response.
parameters.fields.in: query
parameters.fields.name: fields
parameters.fields.type: string
parameters.key.description: API key. Your API key identifies your project and provides
  you with API access, quota, and reports. Required unless you provide an OAuth 2.0
  token.
parameters.key.in: query
parameters.key.name: key
parameters.key.type: string
parameters.oauth_token.description: OAuth 2.0 token for the current user.
parameters.oauth_token.in: query
parameters.oauth_token.name: oauth_token
parameters.oauth_token.type: string
parameters.prettyPrint.default: true
parameters.prettyPrint.description: Returns response with indentations and line breaks.
parameters.prettyPrint.in: query
parameters.prettyPrint.name: prettyPrint
parameters.prettyPrint.type: boolean
parameters.quotaUser.description: Available to use for quota purposes for server-side
  applications. Can be any arbitrary string assigned to a user, but should not exceed
  40 characters. Overrides userIp if both are provided.
parameters.quotaUser.in: query
parameters.quotaUser.name: quotaUser
parameters.quotaUser.type: string
parameters.userIp.description: IP address of the site where the request originates.
  Use this if you want to enforce per-user limits.
parameters.userIp.in: query
parameters.userIp.name: userIp
parameters.userIp.type: string
paths./calendars.parameters.length: 7
paths./calendars.parameters[0].$ref: '#/parameters/alt'
paths./calendars.parameters[1].$ref: '#/parameters/fields'
paths./calendars.parameters[2].$ref: '#/parameters/key'
paths./calendars.parameters[3].$ref: '#/parameters/oauth_token'
paths./calendars.parameters[4].$ref: '#/parameters/prettyPrint'
paths./calendars.parameters[5].$ref: '#/parameters/quotaUser'
paths./calendars.parameters[6].$ref: '#/parameters/userIp'
paths./calendars.post.description: Creates a secondary calendar.
paths./calendars.post.operationId: calendar.calendars.insert
paths./calendars.post.parameters.length: 1
paths./calendars.post.parameters[0].in: body
paths./calendars.post.parameters[0].name: body
paths./calendars.post.parameters[0].schema.$ref: '#/definitions/Calendar'
paths./calendars.post.responses.200.description: Successful response
paths./calendars.post.responses.200.schema.$ref: '#/definitions/Calendar'
paths./calendars.post.security.length: 1
paths./calendars.post.security[0].Oauth2.length: 1
paths./calendars.post.security[0].Oauth2[0]: https://www.googleapis.com/auth/calendar
paths./calendars.post.tags.length: 1
paths./calendars.post.tags[0]: calendars
paths./calendars/{calendarId}.delete.description: Deletes a secondary calendar. Use
  calendars.clear for clearing all events on primary calendars.
paths./calendars/{calendarId}.delete.operationId: calendar.calendars.delete
paths./calendars/{calendarId}.delete.parameters.length: 1
paths./calendars/{calendarId}.delete.parameters[0].description: Calendar identifier.
  To retrieve calendar IDs call the calendarList.list method. If you want to access
  the primary calendar of the currently logged in user, use the "primary" keyword.
paths./calendars/{calendarId}.delete.parameters[0].in: path
paths./calendars/{calendarId}.delete.parameters[0].name: calendarId
paths./calendars/{calendarId}.delete.parameters[0].required: true
paths./calendars/{calendarId}.delete.parameters[0].type: string
paths./calendars/{calendarId}.delete.responses.200.description: Successful response
paths./calendars/{calendarId}.delete.security.length: 1
paths./calendars/{calendarId}.delete.security[0].Oauth2.length: 1
paths./calendars/{calendarId}.delete.security[0].Oauth2[0]: https://www.googleapis.com/auth/calendar
paths./calendars/{calendarId}.delete.tags.length: 1
paths./calendars/{calendarId}.delete.tags[0]: calendars
paths./calendars/{calendarId}.get.description: Returns metadata for a calendar.
paths./calendars/{calendarId}.get.operationId: calendar.calendars.get
paths./calendars/{calendarId}.get.parameters.length: 1
paths./calendars/{calendarId}.get.parameters[0].description: Calendar identifier.
  To retrieve calendar IDs call the calendarList.list method. If you want to access
  the primary calendar of the currently logged in user, use the "primary" keyword.
paths./calendars/{calendarId}.get.parameters[0].in: path
paths./calendars/{calendarId}.get.parameters[0].name: calendarId
paths./calendars/{calendarId}.get.parameters[0].required: true
paths./calendars/{calendarId}.get.parameters[0].type: string
paths./calendars/{calendarId}.get.responses.200.description: Successful response
paths./calendars/{calendarId}.get.responses.200.schema.$ref: '#/definitions/Calendar'
paths./calendars/{calendarId}.get.security.length: 2
paths./calendars/{calendarId}.get.security[0].Oauth2.length: 1
paths./calendars/{calendarId}.get.security[0].Oauth2[0]: https://www.googleapis.com/auth/calendar
paths./calendars/{calendarId}.get.security[1].Oauth2.length: 1
paths./calendars/{calendarId}.get.security[1].Oauth2[0]: https://www.googleapis.com/auth/calendar.readonly
paths./calendars/{calendarId}.get.tags.length: 1
paths./calendars/{calendarId}.get.tags[0]: calendars
paths./calendars/{calendarId}.parameters.length: 7
paths./calendars/{calendarId}.parameters[0].$ref: '#/parameters/alt'
paths./calendars/{calendarId}.parameters[1].$ref: '#/parameters/fields'
paths./calendars/{calendarId}.parameters[2].$ref: '#/parameters/key'
paths./calendars/{calendarId}.parameters[3].$ref: '#/parameters/oauth_token'
paths./calendars/{calendarId}.parameters[4].$ref: '#/parameters/prettyPrint'
paths./calendars/{calendarId}.parameters[5].$ref: '#/parameters/quotaUser'
paths./calendars/{calendarId}.parameters[6].$ref: '#/parameters/userIp'
paths./calendars/{calendarId}.patch.description: Updates metadata for a calendar.
  This method supports patch semantics.
paths./calendars/{calendarId}.patch.operationId: calendar.calendars.patch
paths./calendars/{calendarId}.patch.parameters.length: 2
paths./calendars/{calendarId}.patch.parameters[0].description: Calendar identifier.
  To retrieve calendar IDs call the calendarList.list method. If you want to access
  the primary calendar of the currently logged in user, use the "primary" keyword.
paths./calendars/{calendarId}.patch.parameters[0].in: path
paths./calendars/{calendarId}.patch.parameters[0].name: calendarId
paths./calendars/{calendarId}.patch.parameters[0].required: true
paths./calendars/{calendarId}.patch.parameters[0].type: string
paths./calendars/{calendarId}.patch.parameters[1].in: body
paths./calendars/{calendarId}.patch.parameters[1].name: body
paths./calendars/{calendarId}.patch.parameters[1].schema.$ref: '#/definitions/Calendar'
paths./calendars/{calendarId}.patch.responses.200.description: Successful response
paths./calendars/{calendarId}.patch.responses.200.schema.$ref: '#/definitions/Calendar'
paths./calendars/{calendarId}.patch.security.length: 1
paths./calendars/{calendarId}.patch.security[0].Oauth2.length: 1
paths./calendars/{calendarId}.patch.security[0].Oauth2[0]: https://www.googleapis.com/auth/calendar
paths./calendars/{calendarId}.patch.tags.length: 1
paths./calendars/{calendarId}.patch.tags[0]: calendars
paths./calendars/{calendarId}.put.description: Updates metadata for a calendar.
paths./calendars/{calendarId}.put.operationId: calendar.calendars.update
paths./calendars/{calendarId}.put.parameters.length: 2
paths./calendars/{calendarId}.put.parameters[0].description: Calendar identifier.
  To retrieve calendar IDs call the calendarList.list method. If you want to access
  the primary calendar of the currently logged in user, use the "primary" keyword.
paths./calendars/{calendarId}.put.parameters[0].in: path
paths./calendars/{calendarId}.put.parameters[0].name: calendarId
paths./calendars/{calendarId}.put.parameters[0].required: true
paths./calendars/{calendarId}.put.parameters[0].type: string
paths./calendars/{calendarId}.put.parameters[1].in: body
paths./calendars/{calendarId}.put.parameters[1].name: body
paths./calendars/{calendarId}.put.parameters[1].schema.$ref: '#/definitions/Calendar'
paths./calendars/{calendarId}.put.responses.200.description: Successful response
paths./calendars/{calendarId}.put.responses.200.schema.$ref: '#/definitions/Calendar'
paths./calendars/{calendarId}.put.security.length: 1
paths./calendars/{calendarId}.put.security[0].Oauth2.length: 1
paths./calendars/{calendarId}.put.security[0].Oauth2[0]: https://www.googleapis.com/auth/calendar
paths./calendars/{calendarId}.put.tags.length: 1
paths./calendars/{calendarId}.put.tags[0]: calendars
paths./calendars/{calendarId}/acl.get.description: Returns the rules in the access
  control list for the calendar.
paths./calendars/{calendarId}/acl.get.operationId: calendar.acl.list
paths./calendars/{calendarId}/acl.get.parameters.length: 5
paths./calendars/{calendarId}/acl.get.parameters[0].description: Calendar identifier.
  To retrieve calendar IDs call the calendarList.list method. If you want to access
  the primary calendar of the currently logged in user, use the "primary" keyword.
paths./calendars/{calendarId}/acl.get.parameters[0].in: path
paths./calendars/{calendarId}/acl.get.parameters[0].name: calendarId
paths./calendars/{calendarId}/acl.get.parameters[0].required: true
paths./calendars/{calendarId}/acl.get.parameters[0].type: string
paths./calendars/{calendarId}/acl.get.parameters[1].description: Maximum number of
  entries returned on one result page. By default the value is 100 entries. The page
  size can never be larger than 250 entries. Optional.
paths./calendars/{calendarId}/acl.get.parameters[1].in: query
paths./calendars/{calendarId}/acl.get.parameters[1].minimum: 1
paths./calendars/{calendarId}/acl.get.parameters[1].name: maxResults
paths./calendars/{calendarId}/acl.get.parameters[1].type: integer
paths./calendars/{calendarId}/acl.get.parameters[2].description: Token specifying
  which result page to return. Optional.
paths./calendars/{calendarId}/acl.get.parameters[2].in: query
paths./calendars/{calendarId}/acl.get.parameters[2].name: pageToken
paths./calendars/{calendarId}/acl.get.parameters[2].type: string
paths./calendars/{calendarId}/acl.get.parameters[3].description: Whether to include
  deleted ACLs in the result. Deleted ACLs are represented by role equal to "none".
  Deleted ACLs will always be included if syncToken is provided. Optional. The default
  is False.
paths./calendars/{calendarId}/acl.get.parameters[3].in: query
paths./calendars/{calendarId}/acl.get.parameters[3].name: showDeleted
paths./calendars/{calendarId}/acl.get.parameters[3].type: boolean
paths./calendars/{calendarId}/acl.get.parameters[4].description: |-
  Token obtained from the nextSyncToken field returned on the last page of results from the previous list request. It makes the result of this list request contain only entries that have changed since then. All entries deleted since the previous list request will always be in the result set and it is not allowed to set showDeleted to False.
  If the syncToken expires, the server will respond with a 410 GONE response code and the client should clear its storage and perform a full synchronization without any syncToken.
  Learn more about incremental synchronization.
  Optional. The default is to return all entries.
paths./calendars/{calendarId}/acl.get.parameters[4].in: query
paths./calendars/{calendarId}/acl.get.parameters[4].name: syncToken
paths./calendars/{calendarId}/acl.get.parameters[4].type: string
paths./calendars/{calendarId}/acl.get.responses.200.description: Successful response
paths./calendars/{calendarId}/acl.get.responses.200.schema.$ref: '#/definitions/Acl'
paths./calendars/{calendarId}/acl.get.security.length: 1
paths./calendars/{calendarId}/acl.get.security[0].Oauth2.length: 1
paths./calendars/{calendarId}/acl.get.security[0].Oauth2[0]: https://www.googleapis.com/auth/calendar
paths./calendars/{calendarId}/acl.get.tags.length: 1
paths./calendars/{calendarId}/acl.get.tags[0]: acl
paths./calendars/{calendarId}/acl.parameters.length: 7
paths./calendars/{calendarId}/acl.parameters[0].$ref: '#/parameters/alt'
paths./calendars/{calendarId}/acl.parameters[1].$ref: '#/parameters/fields'
paths./calendars/{calendarId}/acl.parameters[2].$ref: '#/parameters/key'
paths./calendars/{calendarId}/acl.parameters[3].$ref: '#/parameters/oauth_token'
paths./calendars/{calendarId}/acl.parameters[4].$ref: '#/parameters/prettyPrint'
paths./calendars/{calendarId}/acl.parameters[5].$ref: '#/parameters/quotaUser'
paths./calendars/{calendarId}/acl.parameters[6].$ref: '#/parameters/userIp'
paths./calendars/{calendarId}/acl.post.description: Creates an access control rule.
paths./calendars/{calendarId}/acl.post.operationId: calendar.acl.insert
paths./calendars/{calendarId}/acl.post.parameters.length: 2
paths./calendars/{calendarId}/acl.post.parameters[0].description: Calendar identifier.
  To retrieve calendar IDs call the calendarList.list method. If you want to access
  the primary calendar of the currently logged in user, use the "primary" keyword.
paths./calendars/{calendarId}/acl.post.parameters[0].in: path
paths./calendars/{calendarId}/acl.post.parameters[0].name: calendarId
paths./calendars/{calendarId}/acl.post.parameters[0].required: true
paths./calendars/{calendarId}/acl.post.parameters[0].type: string
paths./calendars/{calendarId}/acl.post.parameters[1].in: body
paths./calendars/{calendarId}/acl.post.parameters[1].name: body
paths./calendars/{calendarId}/acl.post.parameters[1].schema.$ref: '#/definitions/AclRule'
paths./calendars/{calendarId}/acl.post.responses.200.description: Successful response
paths./calendars/{calendarId}/acl.post.responses.200.schema.$ref: '#/definitions/AclRule'
paths./calendars/{calendarId}/acl.post.security.length: 1
paths./calendars/{calendarId}/acl.post.security[0].Oauth2.length: 1
paths./calendars/{calendarId}/acl.post.security[0].Oauth2[0]: https://www.googleapis.com/auth/calendar
paths./calendars/{calendarId}/acl.post.tags.length: 1
paths./calendars/{calendarId}/acl.post.tags[0]: acl
paths./calendars/{calendarId}/acl/{ruleId}.delete.description: Deletes an access control
  rule.
paths./calendars/{calendarId}/acl/{ruleId}.delete.operationId: calendar.acl.delete
paths./calendars/{calendarId}/acl/{ruleId}.delete.parameters.length: 2
paths./calendars/{calendarId}/acl/{ruleId}.delete.parameters[0].description: Calendar
  identifier. To retrieve calendar IDs call the calendarList.list method. If you want
  to access the primary calendar of the currently logged in user, use the "primary"
  keyword.
paths./calendars/{calendarId}/acl/{ruleId}.delete.parameters[0].in: path
paths./calendars/{calendarId}/acl/{ruleId}.delete.parameters[0].name: calendarId
paths./calendars/{calendarId}/acl/{ruleId}.delete.parameters[0].required: true
paths./calendars/{calendarId}/acl/{ruleId}.delete.parameters[0].type: string
paths./calendars/{calendarId}/acl/{ruleId}.delete.parameters[1].description: ACL rule
  identifier.
paths./calendars/{calendarId}/acl/{ruleId}.delete.parameters[1].in: path
paths./calendars/{calendarId}/acl/{ruleId}.delete.parameters[1].name: ruleId
paths./calendars/{calendarId}/acl/{ruleId}.delete.parameters[1].required: true
paths./calendars/{calendarId}/acl/{ruleId}.delete.parameters[1].type: string
paths./calendars/{calendarId}/acl/{ruleId}.delete.responses.200.description: Successful
  response
paths./calendars/{calendarId}/acl/{ruleId}.delete.security.length: 1
paths./calendars/{calendarId}/acl/{ruleId}.delete.security[0].Oauth2.length: 1
paths./calendars/{calendarId}/acl/{ruleId}.delete.security[0].Oauth2[0]: https://www.googleapis.com/auth/calendar
paths./calendars/{calendarId}/acl/{ruleId}.delete.tags.length: 1
paths./calendars/{calendarId}/acl/{ruleId}.delete.tags[0]: acl
paths./calendars/{calendarId}/acl/{ruleId}.get.description: Returns an access control
  rule.
paths./calendars/{calendarId}/acl/{ruleId}.get.operationId: calendar.acl.get
paths./calendars/{calendarId}/acl/{ruleId}.get.parameters.length: 2
paths./calendars/{calendarId}/acl/{ruleId}.get.parameters[0].description: Calendar
  identifier. To retrieve calendar IDs call the calendarList.list method. If you want
  to access the primary calendar of the currently logged in user, use the "primary"
  keyword.
paths./calendars/{calendarId}/acl/{ruleId}.get.parameters[0].in: path
paths./calendars/{calendarId}/acl/{ruleId}.get.parameters[0].name: calendarId
paths./calendars/{calendarId}/acl/{ruleId}.get.parameters[0].required: true
paths./calendars/{calendarId}/acl/{ruleId}.get.parameters[0].type: string
paths./calendars/{calendarId}/acl/{ruleId}.get.parameters[1].description: ACL rule
  identifier.
paths./calendars/{calendarId}/acl/{ruleId}.get.parameters[1].in: path
paths./calendars/{calendarId}/acl/{ruleId}.get.parameters[1].name: ruleId
paths./calendars/{calendarId}/acl/{ruleId}.get.parameters[1].required: true
paths./calendars/{calendarId}/acl/{ruleId}.get.parameters[1].type: string
paths./calendars/{calendarId}/acl/{ruleId}.get.responses.200.description: Successful
  response
paths./calendars/{calendarId}/acl/{ruleId}.get.responses.200.schema.$ref: '#/definitions/AclRule'
paths./calendars/{calendarId}/acl/{ruleId}.get.security.length: 2
paths./calendars/{calendarId}/acl/{ruleId}.get.security[0].Oauth2.length: 1
paths./calendars/{calendarId}/acl/{ruleId}.get.security[0].Oauth2[0]: https://www.googleapis.com/auth/calendar
paths./calendars/{calendarId}/acl/{ruleId}.get.security[1].Oauth2.length: 1
paths./calendars/{calendarId}/acl/{ruleId}.get.security[1].Oauth2[0]: https://www.googleapis.com/auth/calendar.readonly
paths./calendars/{calendarId}/acl/{ruleId}.get.tags.length: 1
paths./calendars/{calendarId}/acl/{ruleId}.get.tags[0]: acl
paths./calendars/{calendarId}/acl/{ruleId}.parameters.length: 7
paths./calendars/{calendarId}/acl/{ruleId}.parameters[0].$ref: '#/parameters/alt'
paths./calendars/{calendarId}/acl/{ruleId}.parameters[1].$ref: '#/parameters/fields'
paths./calendars/{calendarId}/acl/{ruleId}.parameters[2].$ref: '#/parameters/key'
paths./calendars/{calendarId}/acl/{ruleId}.parameters[3].$ref: '#/parameters/oauth_token'
paths./calendars/{calendarId}/acl/{ruleId}.parameters[4].$ref: '#/parameters/prettyPrint'
paths./calendars/{calendarId}/acl/{ruleId}.parameters[5].$ref: '#/parameters/quotaUser'
paths./calendars/{calendarId}/acl/{ruleId}.parameters[6].$ref: '#/parameters/userIp'
paths./calendars/{calendarId}/acl/{ruleId}.patch.description: Updates an access control
  rule. This method supports patch semantics.
paths./calendars/{calendarId}/acl/{ruleId}.patch.operationId: calendar.acl.patch
paths./calendars/{calendarId}/acl/{ruleId}.patch.parameters.length: 3
paths./calendars/{calendarId}/acl/{ruleId}.patch.parameters[0].description: Calendar
  identifier. To retrieve calendar IDs call the calendarList.list method. If you want
  to access the primary calendar of the currently logged in user, use the "primary"
  keyword.
paths./calendars/{calendarId}/acl/{ruleId}.patch.parameters[0].in: path
paths./calendars/{calendarId}/acl/{ruleId}.patch.parameters[0].name: calendarId
paths./calendars/{calendarId}/acl/{ruleId}.patch.parameters[0].required: true
paths./calendars/{calendarId}/acl/{ruleId}.patch.parameters[0].type: string
paths./calendars/{calendarId}/acl/{ruleId}.patch.parameters[1].description: ACL rule
  identifier.
paths./calendars/{calendarId}/acl/{ruleId}.patch.parameters[1].in: path
paths./calendars/{calendarId}/acl/{ruleId}.patch.parameters[1].name: ruleId
paths./calendars/{calendarId}/acl/{ruleId}.patch.parameters[1].required: true
paths./calendars/{calendarId}/acl/{ruleId}.patch.parameters[1].type: string
paths./calendars/{calendarId}/acl/{ruleId}.patch.parameters[2].in: body
paths./calendars/{calendarId}/acl/{ruleId}.patch.parameters[2].name: body
paths./calendars/{calendarId}/acl/{ruleId}.patch.parameters[2].schema.$ref: '#/definitions/AclRule'
paths./calendars/{calendarId}/acl/{ruleId}.patch.responses.200.description: Successful
  response
paths./calendars/{calendarId}/acl/{ruleId}.patch.responses.200.schema.$ref: '#/definitions/AclRule'
paths./calendars/{calendarId}/acl/{ruleId}.patch.security.length: 1
paths./calendars/{calendarId}/acl/{ruleId}.patch.security[0].Oauth2.length: 1
paths./calendars/{calendarId}/acl/{ruleId}.patch.security[0].Oauth2[0]: https://www.googleapis.com/auth/calendar
paths./calendars/{calendarId}/acl/{ruleId}.patch.tags.length: 1
paths./calendars/{calendarId}/acl/{ruleId}.patch.tags[0]: acl
paths./calendars/{calendarId}/acl/{ruleId}.put.description: Updates an access control
  rule.
paths./calendars/{calendarId}/acl/{ruleId}.put.operationId: calendar.acl.update
paths./calendars/{calendarId}/acl/{ruleId}.put.parameters.length: 3
paths./calendars/{calendarId}/acl/{ruleId}.put.parameters[0].description: Calendar
  identifier. To retrieve calendar IDs call the calendarList.list method. If you want
  to access the primary calendar of the currently logged in user, use the "primary"
  keyword.
paths./calendars/{calendarId}/acl/{ruleId}.put.parameters[0].in: path
paths./calendars/{calendarId}/acl/{ruleId}.put.parameters[0].name: calendarId
paths./calendars/{calendarId}/acl/{ruleId}.put.parameters[0].required: true
paths./calendars/{calendarId}/acl/{ruleId}.put.parameters[0].type: string
paths./calendars/{calendarId}/acl/{ruleId}.put.parameters[1].description: ACL rule
  identifier.
paths./calendars/{calendarId}/acl/{ruleId}.put.parameters[1].in: path
paths./calendars/{calendarId}/acl/{ruleId}.put.parameters[1].name: ruleId
paths./calendars/{calendarId}/acl/{ruleId}.put.parameters[1].required: true
paths./calendars/{calendarId}/acl/{ruleId}.put.parameters[1].type: string
paths./calendars/{calendarId}/acl/{ruleId}.put.parameters[2].in: body
paths./calendars/{calendarId}/acl/{ruleId}.put.parameters[2].name: body
paths./calendars/{calendarId}/acl/{ruleId}.put.parameters[2].schema.$ref: '#/definitions/AclRule'
paths./calendars/{calendarId}/acl/{ruleId}.put.responses.200.description: Successful
  response
paths./calendars/{calendarId}/acl/{ruleId}.put.responses.200.schema.$ref: '#/definitions/AclRule'
paths./calendars/{calendarId}/acl/{ruleId}.put.security.length: 1
paths./calendars/{calendarId}/acl/{ruleId}.put.security[0].Oauth2.length: 1
paths./calendars/{calendarId}/acl/{ruleId}.put.security[0].Oauth2[0]: https://www.googleapis.com/auth/calendar
paths./calendars/{calendarId}/acl/{ruleId}.put.tags.length: 1
paths./calendars/{calendarId}/acl/{ruleId}.put.tags[0]: acl
paths./calendars/{calendarId}/acl/watch.parameters.length: 7
paths./calendars/{calendarId}/acl/watch.parameters[0].$ref: '#/parameters/alt'
paths./calendars/{calendarId}/acl/watch.parameters[1].$ref: '#/parameters/fields'
paths./calendars/{calendarId}/acl/watch.parameters[2].$ref: '#/parameters/key'
paths./calendars/{calendarId}/acl/watch.parameters[3].$ref: '#/parameters/oauth_token'
paths./calendars/{calendarId}/acl/watch.parameters[4].$ref: '#/parameters/prettyPrint'
paths./calendars/{calendarId}/acl/watch.parameters[5].$ref: '#/parameters/quotaUser'
paths./calendars/{calendarId}/acl/watch.parameters[6].$ref: '#/parameters/userIp'
paths./calendars/{calendarId}/acl/watch.post.description: Watch for changes to ACL
  resources.
paths./calendars/{calendarId}/acl/watch.post.operationId: calendar.acl.watch
paths./calendars/{calendarId}/acl/watch.post.parameters.length: 6
paths./calendars/{calendarId}/acl/watch.post.parameters[0].description: Calendar identifier.
  To retrieve calendar IDs call the calendarList.list method. If you want to access
  the primary calendar of the currently logged in user, use the "primary" keyword.
paths./calendars/{calendarId}/acl/watch.post.parameters[0].in: path
paths./calendars/{calendarId}/acl/watch.post.parameters[0].name: calendarId
paths./calendars/{calendarId}/acl/watch.post.parameters[0].required: true
paths./calendars/{calendarId}/acl/watch.post.parameters[0].type: string
paths./calendars/{calendarId}/acl/watch.post.parameters[1].description: Maximum number
  of entries returned on one result page. By default the value is 100 entries. The
  page size can never be larger than 250 entries. Optional.
paths./calendars/{calendarId}/acl/watch.post.parameters[1].in: query
paths./calendars/{calendarId}/acl/watch.post.parameters[1].minimum: 1
paths./calendars/{calendarId}/acl/watch.post.parameters[1].name: maxResults
paths./calendars/{calendarId}/acl/watch.post.parameters[1].type: integer
paths./calendars/{calendarId}/acl/watch.post.parameters[2].description: Token specifying
  which result page to return. Optional.
paths./calendars/{calendarId}/acl/watch.post.parameters[2].in: query
paths./calendars/{calendarId}/acl/watch.post.parameters[2].name: pageToken
paths./calendars/{calendarId}/acl/watch.post.parameters[2].type: string
paths./calendars/{calendarId}/acl/watch.post.parameters[3].description: Whether to
  include deleted ACLs in the result. Deleted ACLs are represented by role equal to
  "none". Deleted ACLs will always be included if syncToken is provided. Optional.
  The default is False.
paths./calendars/{calendarId}/acl/watch.post.parameters[3].in: query
paths./calendars/{calendarId}/acl/watch.post.parameters[3].name: showDeleted
paths./calendars/{calendarId}/acl/watch.post.parameters[3].type: boolean
paths./calendars/{calendarId}/acl/watch.post.parameters[4].description: |-
  Token obtained from the nextSyncToken field returned on the last page of results from the previous list request. It makes the result of this list request contain only entries that have changed since then. All entries deleted since the previous list request will always be in the result set and it is not allowed to set showDeleted to False.
  If the syncToken expires, the server will respond with a 410 GONE response code and the client should clear its storage and perform a full synchronization without any syncToken.
  Learn more about incremental synchronization.
  Optional. The default is to return all entries.
paths./calendars/{calendarId}/acl/watch.post.parameters[4].in: query
paths./calendars/{calendarId}/acl/watch.post.parameters[4].name: syncToken
paths./calendars/{calendarId}/acl/watch.post.parameters[4].type: string
paths./calendars/{calendarId}/acl/watch.post.parameters[5].in: body
paths./calendars/{calendarId}/acl/watch.post.parameters[5].name: resource
paths./calendars/{calendarId}/acl/watch.post.parameters[5].schema.$ref: '#/definitions/Channel'
paths./calendars/{calendarId}/acl/watch.post.responses.200.description: Successful
  response
paths./calendars/{calendarId}/acl/watch.post.responses.200.schema.$ref: '#/definitions/Channel'
paths./calendars/{calendarId}/acl/watch.post.security.length: 1
paths./calendars/{calendarId}/acl/watch.post.security[0].Oauth2.length: 1
paths./calendars/{calendarId}/acl/watch.post.security[0].Oauth2[0]: https://www.googleapis.com/auth/calendar
paths./calendars/{calendarId}/acl/watch.post.tags.length: 1
paths./calendars/{calendarId}/acl/watch.post.tags[0]: acl
paths./calendars/{calendarId}/clear.parameters.length: 7
paths./calendars/{calendarId}/clear.parameters[0].$ref: '#/parameters/alt'
paths./calendars/{calendarId}/clear.parameters[1].$ref: '#/parameters/fields'
paths./calendars/{calendarId}/clear.parameters[2].$ref: '#/parameters/key'
paths./calendars/{calendarId}/clear.parameters[3].$ref: '#/parameters/oauth_token'
paths./calendars/{calendarId}/clear.parameters[4].$ref: '#/parameters/prettyPrint'
paths./calendars/{calendarId}/clear.parameters[5].$ref: '#/parameters/quotaUser'
paths./calendars/{calendarId}/clear.parameters[6].$ref: '#/parameters/userIp'
paths./calendars/{calendarId}/clear.post.description: Clears a primary calendar. This
  operation deletes all events associated with the primary calendar of an account.
paths./calendars/{calendarId}/clear.post.operationId: calendar.calendars.clear
paths./calendars/{calendarId}/clear.post.parameters.length: 1
paths./calendars/{calendarId}/clear.post.parameters[0].description: Calendar identifier.
  To retrieve calendar IDs call the calendarList.list method. If you want to access
  the primary calendar of the currently logged in user, use the "primary" keyword.
paths./calendars/{calendarId}/clear.post.parameters[0].in: path
paths./calendars/{calendarId}/clear.post.parameters[0].name: calendarId
paths./calendars/{calendarId}/clear.post.parameters[0].required: true
paths./calendars/{calendarId}/clear.post.parameters[0].type: string
paths./calendars/{calendarId}/clear.post.responses.200.description: Successful response
paths./calendars/{calendarId}/clear.post.security.length: 1
paths./calendars/{calendarId}/clear.post.security[0].Oauth2.length: 1
paths./calendars/{calendarId}/clear.post.security[0].Oauth2[0]: https://www.googleapis.com/auth/calendar
paths./calendars/{calendarId}/clear.post.tags.length: 1
paths./calendars/{calendarId}/clear.post.tags[0]: calendars
paths./calendars/{calendarId}/events.get.description: Returns events on the specified
  calendar.
paths./calendars/{calendarId}/events.get.operationId: calendar.events.list
paths./calendars/{calendarId}/events.get.parameters.length: 18
paths./calendars/{calendarId}/events.get.parameters[0].description: Whether to always
  include a value in the email field for the organizer, creator and attendees, even
  if no real email is available (i.e. a generated, non-working value will be provided).
  The use of this option is discouraged and should only be used by clients which cannot
  handle the absence of an email address value in the mentioned places. Optional.
  The default is False.
paths./calendars/{calendarId}/events.get.parameters[0].in: query
paths./calendars/{calendarId}/events.get.parameters[0].name: alwaysIncludeEmail
paths./calendars/{calendarId}/events.get.parameters[0].type: boolean
paths./calendars/{calendarId}/events.get.parameters[1].description: Calendar identifier.
  To retrieve calendar IDs call the calendarList.list method. If you want to access
  the primary calendar of the currently logged in user, use the "primary" keyword.
paths./calendars/{calendarId}/events.get.parameters[1].in: path
paths./calendars/{calendarId}/events.get.parameters[1].name: calendarId
paths./calendars/{calendarId}/events.get.parameters[1].required: true
paths./calendars/{calendarId}/events.get.parameters[1].type: string
paths./calendars/{calendarId}/events.get.parameters[2].description: Specifies event
  ID in the iCalendar format to be included in the response. Optional.
paths./calendars/{calendarId}/events.get.parameters[2].in: query
paths./calendars/{calendarId}/events.get.parameters[2].name: iCalUID
paths./calendars/{calendarId}/events.get.parameters[2].type: string
paths./calendars/{calendarId}/events.get.parameters[3].description: The maximum number
  of attendees to include in the response. If there are more than the specified number
  of attendees, only the participant is returned. Optional.
paths./calendars/{calendarId}/events.get.parameters[3].in: query
paths./calendars/{calendarId}/events.get.parameters[3].minimum: 1
paths./calendars/{calendarId}/events.get.parameters[3].name: maxAttendees
paths./calendars/{calendarId}/events.get.parameters[3].type: integer
paths./calendars/{calendarId}/events.get.parameters[4].default: 250
paths./calendars/{calendarId}/events.get.parameters[4].description: Maximum number
  of events returned on one result page. The number of events in the resulting page
  may be less than this value, or none at all, even if there are more events matching
  the query. Incomplete pages can be detected by a non-empty nextPageToken field in
  the response. By default the value is 250 events. The page size can never be larger
  than 2500 events. Optional.
paths./calendars/{calendarId}/events.get.parameters[4].in: query
paths./calendars/{calendarId}/events.get.parameters[4].minimum: 1
paths./calendars/{calendarId}/events.get.parameters[4].name: maxResults
paths./calendars/{calendarId}/events.get.parameters[4].type: integer
paths./calendars/{calendarId}/events.get.parameters[5].description: The order of the
  events returned in the result. Optional. The default is an unspecified, stable order.
paths./calendars/{calendarId}/events.get.parameters[5].enum.length: 2
paths./calendars/{calendarId}/events.get.parameters[5].enum[0]: startTime
paths./calendars/{calendarId}/events.get.parameters[5].enum[1]: updated
paths./calendars/{calendarId}/events.get.parameters[5].in: query
paths./calendars/{calendarId}/events.get.parameters[5].name: orderBy
paths./calendars/{calendarId}/events.get.parameters[5].type: string
paths./calendars/{calendarId}/events.get.parameters[6].description: Token specifying
  which result page to return. Optional.
paths./calendars/{calendarId}/events.get.parameters[6].in: query
paths./calendars/{calendarId}/events.get.parameters[6].name: pageToken
paths./calendars/{calendarId}/events.get.parameters[6].type: string
paths./calendars/{calendarId}/events.get.parameters[7].collectionFormat: multi
paths./calendars/{calendarId}/events.get.parameters[7].description: Extended properties
  constraint specified as propertyName=value. Matches only private properties. This
  parameter might be repeated multiple times to return events that match all given
  constraints.
paths./calendars/{calendarId}/events.get.parameters[7].in: query
paths./calendars/{calendarId}/events.get.parameters[7].items.type: string
paths./calendars/{calendarId}/events.get.parameters[7].name: privateExtendedProperty
paths./calendars/{calendarId}/events.get.parameters[7].type: array
paths./calendars/{calendarId}/events.get.parameters[8].description: Free text search
  terms to find events that match these terms in any field, except for extended properties.
  Optional.
paths./calendars/{calendarId}/events.get.parameters[8].in: query
paths./calendars/{calendarId}/events.get.parameters[8].name: q
paths./calendars/{calendarId}/events.get.parameters[8].type: string
paths./calendars/{calendarId}/events.get.parameters[9].collectionFormat: multi
paths./calendars/{calendarId}/events.get.parameters[9].description: Extended properties
  constraint specified as propertyName=value. Matches only shared properties. This
  parameter might be repeated multiple times to return events that match all given
  constraints.
paths./calendars/{calendarId}/events.get.parameters[9].in: query
paths./calendars/{calendarId}/events.get.parameters[9].items.type: string
paths./calendars/{calendarId}/events.get.parameters[9].name: sharedExtendedProperty
paths./calendars/{calendarId}/events.get.parameters[9].type: array
paths./calendars/{calendarId}/events.get.parameters[10].description: Whether to include
  deleted events (with status equals "cancelled") in the result. Cancelled instances
  of recurring events (but not the underlying recurring event) will still be included
  if showDeleted and singleEvents are both False. If showDeleted and singleEvents
  are both True, only single instances of deleted events (but not the underlying recurring
  events) are returned. Optional. The default is False.
paths./calendars/{calendarId}/events.get.parameters[10].in: query
paths./calendars/{calendarId}/events.get.parameters[10].name: showDeleted
paths./calendars/{calendarId}/events.get.parameters[10].type: boolean
paths./calendars/{calendarId}/events.get.parameters[11].description: Whether to include
  hidden invitations in the result. Optional. The default is False.
paths./calendars/{calendarId}/events.get.parameters[11].in: query
paths./calendars/{calendarId}/events.get.parameters[11].name: showHiddenInvitations
paths./calendars/{calendarId}/events.get.parameters[11].type: boolean
paths./calendars/{calendarId}/events.get.parameters[12].description: Whether to expand
  recurring events into instances and only return single one-off events and instances
  of recurring events, but not the underlying recurring events themselves. Optional.
  The default is False.
paths./calendars/{calendarId}/events.get.parameters[12].in: query
paths./calendars/{calendarId}/events.get.parameters[12].name: singleEvents
paths./calendars/{calendarId}/events.get.parameters[12].type: boolean
paths./calendars/{calendarId}/events.get.parameters[13].description: "Token obtained
  from the nextSyncToken field returned on the last page of results from the previous
  list request. It makes the result of this list request contain only entries that
  have changed since then. All events deleted since the previous list request will
  always be in the result set and it is not allowed to set showDeleted to False.\nThere
  are several query parameters that cannot be specified together with nextSyncToken
  to ensure consistency of the client state.\n\nThese are: \n- iCalUID \n- orderBy
  \n- privateExtendedProperty \n- q \n- sharedExtendedProperty \n- timeMin \n- timeMax
  \n- updatedMin If the syncToken expires, the server will respond with a 410 GONE
  response code and the client should clear its storage and perform a full synchronization
  without any syncToken.\nLearn more about incremental synchronization.\nOptional.
  The default is to return all entries."
paths./calendars/{calendarId}/events.get.parameters[13].in: query
paths./calendars/{calendarId}/events.get.parameters[13].name: syncToken
paths./calendars/{calendarId}/events.get.parameters[13].type: string
paths./calendars/{calendarId}/events.get.parameters[14].description: Upper bound (exclusive)
  for an event's start time to filter by. Optional. The default is not to filter by
  start time. Must be an RFC3339 timestamp with mandatory time zone offset, e.g.,
  2011-06-03T10:00:00-07:00, 2011-06-03T10:00:00Z. Milliseconds may be provided but
  will be ignored. If timeMin is set, timeMax must be greater than timeMin.
paths./calendars/{calendarId}/events.get.parameters[14].in: query
paths./calendars/{calendarId}/events.get.parameters[14].name: timeMax
paths./calendars/{calendarId}/events.get.parameters[14].type: string
paths./calendars/{calendarId}/events.get.parameters[15].description: Lower bound (inclusive)
  for an event's end time to filter by. Optional. The default is not to filter by
  end time. Must be an RFC3339 timestamp with mandatory time zone offset, e.g., 2011-06-03T10:00:00-07:00,
  2011-06-03T10:00:00Z. Milliseconds may be provided but will be ignored. If timeMax
  is set, timeMin must be smaller than timeMax.
paths./calendars/{calendarId}/events.get.parameters[15].in: query
paths./calendars/{calendarId}/events.get.parameters[15].name: timeMin
paths./calendars/{calendarId}/events.get.parameters[15].type: string
paths./calendars/{calendarId}/events.get.parameters[16].description: Time zone used
  in the response. Optional. The default is the time zone of the calendar.
paths./calendars/{calendarId}/events.get.parameters[16].in: query
paths./calendars/{calendarId}/events.get.parameters[16].name: timeZone
paths./calendars/{calendarId}/events.get.parameters[16].type: string
paths./calendars/{calendarId}/events.get.parameters[17].description: Lower bound for
  an event's last modification time (as a RFC3339 timestamp) to filter by. When specified,
  entries deleted since this time will always be included regardless of showDeleted.
  Optional. The default is not to filter by last modification time.
paths./calendars/{calendarId}/events.get.parameters[17].in: query
paths./calendars/{calendarId}/events.get.parameters[17].name: updatedMin
paths./calendars/{calendarId}/events.get.parameters[17].type: string
paths./calendars/{calendarId}/events.get.responses.200.description: Successful response
paths./calendars/{calendarId}/events.get.responses.200.schema.$ref: '#/definitions/Events'
paths./calendars/{calendarId}/events.get.security.length: 2
paths./calendars/{calendarId}/events.get.security[0].Oauth2.length: 1
paths./calendars/{calendarId}/events.get.security[0].Oauth2[0]: https://www.googleapis.com/auth/calendar
paths./calendars/{calendarId}/events.get.security[1].Oauth2.length: 1
paths./calendars/{calendarId}/events.get.security[1].Oauth2[0]: https://www.googleapis.com/auth/calendar.readonly
paths./calendars/{calendarId}/events.get.tags.length: 1
paths./calendars/{calendarId}/events.get.tags[0]: events
paths./calendars/{calendarId}/events.parameters.length: 7
paths./calendars/{calendarId}/events.parameters[0].$ref: '#/parameters/alt'
paths./calendars/{calendarId}/events.parameters[1].$ref: '#/parameters/fields'
paths./calendars/{calendarId}/events.parameters[2].$ref: '#/parameters/key'
paths./calendars/{calendarId}/events.parameters[3].$ref: '#/parameters/oauth_token'
paths./calendars/{calendarId}/events.parameters[4].$ref: '#/parameters/prettyPrint'
paths./calendars/{calendarId}/events.parameters[5].$ref: '#/parameters/quotaUser'
paths./calendars/{calendarId}/events.parameters[6].$ref: '#/parameters/userIp'
paths./calendars/{calendarId}/events.post.description: Creates an event.
paths./calendars/{calendarId}/events.post.operationId: calendar.events.insert
paths./calendars/{calendarId}/events.post.parameters.length: 5
paths./calendars/{calendarId}/events.post.parameters[0].description: Calendar identifier.
  To retrieve calendar IDs call the calendarList.list method. If you want to access
  the primary calendar of the currently logged in user, use the "primary" keyword.
paths./calendars/{calendarId}/events.post.parameters[0].in: path
paths./calendars/{calendarId}/events.post.parameters[0].name: calendarId
paths./calendars/{calendarId}/events.post.parameters[0].required: true
paths./calendars/{calendarId}/events.post.parameters[0].type: string
paths./calendars/{calendarId}/events.post.parameters[1].description: The maximum number
  of attendees to include in the response. If there are more than the specified number
  of attendees, only the participant is returned. Optional.
paths./calendars/{calendarId}/events.post.parameters[1].in: query
paths./calendars/{calendarId}/events.post.parameters[1].minimum: 1
paths./calendars/{calendarId}/events.post.parameters[1].name: maxAttendees
paths./calendars/{calendarId}/events.post.parameters[1].type: integer
paths./calendars/{calendarId}/events.post.parameters[2].description: Whether to send
  notifications about the creation of the new event. Optional. The default is False.
paths./calendars/{calendarId}/events.post.parameters[2].in: query
paths./calendars/{calendarId}/events.post.parameters[2].name: sendNotifications
paths./calendars/{calendarId}/events.post.parameters[2].type: boolean
paths./calendars/{calendarId}/events.post.parameters[3].description: Whether API client
  performing operation supports event attachments. Optional. The default is False.
paths./calendars/{calendarId}/events.post.parameters[3].in: query
paths./calendars/{calendarId}/events.post.parameters[3].name: supportsAttachments
paths./calendars/{calendarId}/events.post.parameters[3].type: boolean
paths./calendars/{calendarId}/events.post.parameters[4].in: body
paths./calendars/{calendarId}/events.post.parameters[4].name: body
paths./calendars/{calendarId}/events.post.parameters[4].schema.$ref: '#/definitions/Event'
paths./calendars/{calendarId}/events.post.responses.200.description: Successful response
paths./calendars/{calendarId}/events.post.responses.200.schema.$ref: '#/definitions/Event'
paths./calendars/{calendarId}/events.post.security.length: 1
paths./calendars/{calendarId}/events.post.security[0].Oauth2.length: 1
paths./calendars/{calendarId}/events.post.security[0].Oauth2[0]: https://www.googleapis.com/auth/calendar
paths./calendars/{calendarId}/events.post.tags.length: 1
paths./calendars/{calendarId}/events.post.tags[0]: events
paths./calendars/{calendarId}/events/{eventId}.delete.description: Deletes an event.
paths./calendars/{calendarId}/events/{eventId}.delete.operationId: calendar.events.delete
paths./calendars/{calendarId}/events/{eventId}.delete.parameters.length: 3
paths./calendars/{calendarId}/events/{eventId}.delete.parameters[0].description: Calendar
  identifier. To retrieve calendar IDs call the calendarList.list method. If you want
  to access the primary calendar of the currently logged in user, use the "primary"
  keyword.
paths./calendars/{calendarId}/events/{eventId}.delete.parameters[0].in: path
paths./calendars/{calendarId}/events/{eventId}.delete.parameters[0].name: calendarId
paths./calendars/{calendarId}/events/{eventId}.delete.parameters[0].required: true
paths./calendars/{calendarId}/events/{eventId}.delete.parameters[0].type: string
paths./calendars/{calendarId}/events/{eventId}.delete.parameters[1].description: Event
  identifier.
paths./calendars/{calendarId}/events/{eventId}.delete.parameters[1].in: path
paths./calendars/{calendarId}/events/{eventId}.delete.parameters[1].name: eventId
paths./calendars/{calendarId}/events/{eventId}.delete.parameters[1].required: true
paths./calendars/{calendarId}/events/{eventId}.delete.parameters[1].type: string
paths./calendars/{calendarId}/events/{eventId}.delete.parameters[2].description: Whether
  to send notifications about the deletion of the event. Optional. The default is
  False.
paths./calendars/{calendarId}/events/{eventId}.delete.parameters[2].in: query
paths./calendars/{calendarId}/events/{eventId}.delete.parameters[2].name: sendNotifications
paths./calendars/{calendarId}/events/{eventId}.delete.parameters[2].type: boolean
paths./calendars/{calendarId}/events/{eventId}.delete.responses.200.description: Successful
  response
paths./calendars/{calendarId}/events/{eventId}.delete.security.length: 1
paths./calendars/{calendarId}/events/{eventId}.delete.security[0].Oauth2.length: 1
paths./calendars/{calendarId}/events/{eventId}.delete.security[0].Oauth2[0]: https://www.googleapis.com/auth/calendar
paths./calendars/{calendarId}/events/{eventId}.delete.tags.length: 1
paths./calendars/{calendarId}/events/{eventId}.delete.tags[0]: events
paths./calendars/{calendarId}/events/{eventId}.get.description: Returns an event.
paths./calendars/{calendarId}/events/{eventId}.get.operationId: calendar.events.get
paths./calendars/{calendarId}/events/{eventId}.get.parameters.length: 5
paths./calendars/{calendarId}/events/{eventId}.get.parameters[0].description: Calendar
  identifier. To retrieve calendar IDs call the calendarList.list method. If you want
  to access the primary calendar of the currently logged in user, use the "primary"
  keyword.
paths./calendars/{calendarId}/events/{eventId}.get.parameters[0].in: path
paths./calendars/{calendarId}/events/{eventId}.get.parameters[0].name: calendarId
paths./calendars/{calendarId}/events/{eventId}.get.parameters[0].required: true
paths./calendars/{calendarId}/events/{eventId}.get.parameters[0].type: string
paths./calendars/{calendarId}/events/{eventId}.get.parameters[1].description: Event
  identifier.
paths./calendars/{calendarId}/events/{eventId}.get.parameters[1].in: path
paths./calendars/{calendarId}/events/{eventId}.get.parameters[1].name: eventId
paths./calendars/{calendarId}/events/{eventId}.get.parameters[1].required: true
paths./calendars/{calendarId}/events/{eventId}.get.parameters[1].type: string
paths./calendars/{calendarId}/events/{eventId}.get.parameters[2].description: Whether
  to always include a value in the email field for the organizer, creator and attendees,
  even if no real email is available (i.e. a generated, non-working value will be
  provided). The use of this option is discouraged and should only be used by clients
  which cannot handle the absence of an email address value in the mentioned places.
  Optional. The default is False.
paths./calendars/{calendarId}/events/{eventId}.get.parameters[2].in: query
paths./calendars/{calendarId}/events/{eventId}.get.parameters[2].name: alwaysIncludeEmail
paths./calendars/{calendarId}/events/{eventId}.get.parameters[2].type: boolean
paths./calendars/{calendarId}/events/{eventId}.get.parameters[3].description: The
  maximum number of attendees to include in the response. If there are more than the
  specified number of attendees, only the participant is returned. Optional.
paths./calendars/{calendarId}/events/{eventId}.get.parameters[3].in: query
paths./calendars/{calendarId}/events/{eventId}.get.parameters[3].minimum: 1
paths./calendars/{calendarId}/events/{eventId}.get.parameters[3].name: maxAttendees
paths./calendars/{calendarId}/events/{eventId}.get.parameters[3].type: integer
paths./calendars/{calendarId}/events/{eventId}.get.parameters[4].description: Time
  zone used in the response. Optional. The default is the time zone of the calendar.
paths./calendars/{calendarId}/events/{eventId}.get.parameters[4].in: query
paths./calendars/{calendarId}/events/{eventId}.get.parameters[4].name: timeZone
paths./calendars/{calendarId}/events/{eventId}.get.parameters[4].type: string
paths./calendars/{calendarId}/events/{eventId}.get.responses.200.description: Successful
  response
paths./calendars/{calendarId}/events/{eventId}.get.responses.200.schema.$ref: '#/definitions/Event'
paths./calendars/{calendarId}/events/{eventId}.get.security.length: 2
paths./calendars/{calendarId}/events/{eventId}.get.security[0].Oauth2.length: 1
paths./calendars/{calendarId}/events/{eventId}.get.security[0].Oauth2[0]: https://www.googleapis.com/auth/calendar
paths./calendars/{calendarId}/events/{eventId}.get.security[1].Oauth2.length: 1
paths./calendars/{calendarId}/events/{eventId}.get.security[1].Oauth2[0]: https://www.googleapis.com/auth/calendar.readonly
paths./calendars/{calendarId}/events/{eventId}.get.tags.length: 1
paths./calendars/{calendarId}/events/{eventId}.get.tags[0]: events
paths./calendars/{calendarId}/events/{eventId}.parameters.length: 7
paths./calendars/{calendarId}/events/{eventId}.parameters[0].$ref: '#/parameters/alt'
paths./calendars/{calendarId}/events/{eventId}.parameters[1].$ref: '#/parameters/fields'
paths./calendars/{calendarId}/events/{eventId}.parameters[2].$ref: '#/parameters/key'
paths./calendars/{calendarId}/events/{eventId}.parameters[3].$ref: '#/parameters/oauth_token'
paths./calendars/{calendarId}/events/{eventId}.parameters[4].$ref: '#/parameters/prettyPrint'
paths./calendars/{calendarId}/events/{eventId}.parameters[5].$ref: '#/parameters/quotaUser'
paths./calendars/{calendarId}/events/{eventId}.parameters[6].$ref: '#/parameters/userIp'
paths./calendars/{calendarId}/events/{eventId}.patch.description: Updates an event.
  This method supports patch semantics.
paths./calendars/{calendarId}/events/{eventId}.patch.operationId: calendar.events.patch
paths./calendars/{calendarId}/events/{eventId}.patch.parameters.length: 7
paths./calendars/{calendarId}/events/{eventId}.patch.parameters[0].description: Calendar
  identifier. To retrieve calendar IDs call the calendarList.list method. If you want
  to access the primary calendar of the currently logged in user, use the "primary"
  keyword.
paths./calendars/{calendarId}/events/{eventId}.patch.parameters[0].in: path
paths./calendars/{calendarId}/events/{eventId}.patch.parameters[0].name: calendarId
paths./calendars/{calendarId}/events/{eventId}.patch.parameters[0].required: true
paths./calendars/{calendarId}/events/{eventId}.patch.parameters[0].type: string
paths./calendars/{calendarId}/events/{eventId}.patch.parameters[1].description: Event
  identifier.
paths./calendars/{calendarId}/events/{eventId}.patch.parameters[1].in: path
paths./calendars/{calendarId}/events/{eventId}.patch.parameters[1].name: eventId
paths./calendars/{calendarId}/events/{eventId}.patch.parameters[1].required: true
paths./calendars/{calendarId}/events/{eventId}.patch.parameters[1].type: string
paths./calendars/{calendarId}/events/{eventId}.patch.parameters[2].description: Whether
  to always include a value in the email field for the organizer, creator and attendees,
  even if no real email is available (i.e. a generated, non-working value will be
  provided). The use of this option is discouraged and should only be used by clients
  which cannot handle the absence of an email address value in the mentioned places.
  Optional. The default is False.
paths./calendars/{calendarId}/events/{eventId}.patch.parameters[2].in: query
paths./calendars/{calendarId}/events/{eventId}.patch.parameters[2].name: alwaysIncludeEmail
paths./calendars/{calendarId}/events/{eventId}.patch.parameters[2].type: boolean
paths./calendars/{calendarId}/events/{eventId}.patch.parameters[3].description: The
  maximum number of attendees to include in the response. If there are more than the
  specified number of attendees, only the participant is returned. Optional.
paths./calendars/{calendarId}/events/{eventId}.patch.parameters[3].in: query
paths./calendars/{calendarId}/events/{eventId}.patch.parameters[3].minimum: 1
paths./calendars/{calendarId}/events/{eventId}.patch.parameters[3].name: maxAttendees
paths./calendars/{calendarId}/events/{eventId}.patch.parameters[3].type: integer
paths./calendars/{calendarId}/events/{eventId}.patch.parameters[4].description: Whether
  to send notifications about the event update (e.g. attendee's responses, title changes,
  etc.). Optional. The default is False.
paths./calendars/{calendarId}/events/{eventId}.patch.parameters[4].in: query
paths./calendars/{calendarId}/events/{eventId}.patch.parameters[4].name: sendNotifications
paths./calendars/{calendarId}/events/{eventId}.patch.parameters[4].type: boolean
paths./calendars/{calendarId}/events/{eventId}.patch.parameters[5].description: Whether
  API client performing operation supports event attachments. Optional. The default
  is False.
paths./calendars/{calendarId}/events/{eventId}.patch.parameters[5].in: query
paths./calendars/{calendarId}/events/{eventId}.patch.parameters[5].name: supportsAttachments
paths./calendars/{calendarId}/events/{eventId}.patch.parameters[5].type: boolean
paths./calendars/{calendarId}/events/{eventId}.patch.parameters[6].in: body
paths./calendars/{calendarId}/events/{eventId}.patch.parameters[6].name: body
paths./calendars/{calendarId}/events/{eventId}.patch.parameters[6].schema.$ref: '#/definitions/Event'
paths./calendars/{calendarId}/events/{eventId}.patch.responses.200.description: Successful
  response
paths./calendars/{calendarId}/events/{eventId}.patch.responses.200.schema.$ref: '#/definitions/Event'
paths./calendars/{calendarId}/events/{eventId}.patch.security.length: 1
paths./calendars/{calendarId}/events/{eventId}.patch.security[0].Oauth2.length: 1
paths./calendars/{calendarId}/events/{eventId}.patch.security[0].Oauth2[0]: https://www.googleapis.com/auth/calendar
paths./calendars/{calendarId}/events/{eventId}.patch.tags.length: 1
paths./calendars/{calendarId}/events/{eventId}.patch.tags[0]: events
paths./calendars/{calendarId}/events/{eventId}.put.description: Updates an event.
paths./calendars/{calendarId}/events/{eventId}.put.operationId: calendar.events.update
paths./calendars/{calendarId}/events/{eventId}.put.parameters.length: 7
paths./calendars/{calendarId}/events/{eventId}.put.parameters[0].description: Calendar
  identifier. To retrieve calendar IDs call the calendarList.list method. If you want
  to access the primary calendar of the currently logged in user, use the "primary"
  keyword.
paths./calendars/{calendarId}/events/{eventId}.put.parameters[0].in: path
paths./calendars/{calendarId}/events/{eventId}.put.parameters[0].name: calendarId
paths./calendars/{calendarId}/events/{eventId}.put.parameters[0].required: true
paths./calendars/{calendarId}/events/{eventId}.put.parameters[0].type: string
paths./calendars/{calendarId}/events/{eventId}.put.parameters[1].description: Event
  identifier.
paths./calendars/{calendarId}/events/{eventId}.put.parameters[1].in: path
paths./calendars/{calendarId}/events/{eventId}.put.parameters[1].name: eventId
paths./calendars/{calendarId}/events/{eventId}.put.parameters[1].required: true
paths./calendars/{calendarId}/events/{eventId}.put.parameters[1].type: string
paths./calendars/{calendarId}/events/{eventId}.put.parameters[2].description: Whether
  to always include a value in the email field for the organizer, creator and attendees,
  even if no real email is available (i.e. a generated, non-working value will be
  provided). The use of this option is discouraged and should only be used by clients
  which cannot handle the absence of an email address value in the mentioned places.
  Optional. The default is False.
paths./calendars/{calendarId}/events/{eventId}.put.parameters[2].in: query
paths./calendars/{calendarId}/events/{eventId}.put.parameters[2].name: alwaysIncludeEmail
paths./calendars/{calendarId}/events/{eventId}.put.parameters[2].type: boolean
paths./calendars/{calendarId}/events/{eventId}.put.parameters[3].description: The
  maximum number of attendees to include in the response. If there are more than the
  specified number of attendees, only the participant is returned. Optional.
paths./calendars/{calendarId}/events/{eventId}.put.parameters[3].in: query
paths./calendars/{calendarId}/events/{eventId}.put.parameters[3].minimum: 1
paths./calendars/{calendarId}/events/{eventId}.put.parameters[3].name: maxAttendees
paths./calendars/{calendarId}/events/{eventId}.put.parameters[3].type: integer
paths./calendars/{calendarId}/events/{eventId}.put.parameters[4].description: Whether
  to send notifications about the event update (e.g. attendee's responses, title changes,
  etc.). Optional. The default is False.
paths./calendars/{calendarId}/events/{eventId}.put.parameters[4].in: query
paths./calendars/{calendarId}/events/{eventId}.put.parameters[4].name: sendNotifications
paths./calendars/{calendarId}/events/{eventId}.put.parameters[4].type: boolean
paths./calendars/{calendarId}/events/{eventId}.put.parameters[5].description: Whether
  API client performing operation supports event attachments. Optional. The default
  is False.
paths./calendars/{calendarId}/events/{eventId}.put.parameters[5].in: query
paths./calendars/{calendarId}/events/{eventId}.put.parameters[5].name: supportsAttachments
paths./calendars/{calendarId}/events/{eventId}.put.parameters[5].type: boolean
paths./calendars/{calendarId}/events/{eventId}.put.parameters[6].in: body
paths./calendars/{calendarId}/events/{eventId}.put.parameters[6].name: body
paths./calendars/{calendarId}/events/{eventId}.put.parameters[6].schema.$ref: '#/definitions/Event'
paths./calendars/{calendarId}/events/{eventId}.put.responses.200.description: Successful
  response
paths./calendars/{calendarId}/events/{eventId}.put.responses.200.schema.$ref: '#/definitions/Event'
paths./calendars/{calendarId}/events/{eventId}.put.security.length: 1
paths./calendars/{calendarId}/events/{eventId}.put.security[0].Oauth2.length: 1
paths./calendars/{calendarId}/events/{eventId}.put.security[0].Oauth2[0]: https://www.googleapis.com/auth/calendar
paths./calendars/{calendarId}/events/{eventId}.put.tags.length: 1
paths./calendars/{calendarId}/events/{eventId}.put.tags[0]: events
paths./calendars/{calendarId}/events/{eventId}/instances.get.description: Returns
  instances of the specified recurring event.
paths./calendars/{calendarId}/events/{eventId}/instances.get.operationId: calendar.events.instances
paths./calendars/{calendarId}/events/{eventId}/instances.get.parameters.length: 11
paths./calendars/{calendarId}/events/{eventId}/instances.get.parameters[0].description: Calendar
  identifier. To retrieve calendar IDs call the calendarList.list method. If you want
  to access the primary calendar of the currently logged in user, use the "primary"
  keyword.
paths./calendars/{calendarId}/events/{eventId}/instances.get.parameters[0].in: path
paths./calendars/{calendarId}/events/{eventId}/instances.get.parameters[0].name: calendarId
paths./calendars/{calendarId}/events/{eventId}/instances.get.parameters[0].required: true
paths./calendars/{calendarId}/events/{eventId}/instances.get.parameters[0].type: string
paths./calendars/{calendarId}/events/{eventId}/instances.get.parameters[1].description: Recurring
  event identifier.
paths./calendars/{calendarId}/events/{eventId}/instances.get.parameters[1].in: path
paths./calendars/{calendarId}/events/{eventId}/instances.get.parameters[1].name: eventId
paths./calendars/{calendarId}/events/{eventId}/instances.get.parameters[1].required: true
paths./calendars/{calendarId}/events/{eventId}/instances.get.parameters[1].type: string
paths./calendars/{calendarId}/events/{eventId}/instances.get.parameters[2].description: Whether
  to always include a value in the email field for the organizer, creator and attendees,
  even if no real email is available (i.e. a generated, non-working value will be
  provided). The use of this option is discouraged and should only be used by clients
  which cannot handle the absence of an email address value in the mentioned places.
  Optional. The default is False.
paths./calendars/{calendarId}/events/{eventId}/instances.get.parameters[2].in: query
paths./calendars/{calendarId}/events/{eventId}/instances.get.parameters[2].name: alwaysIncludeEmail
paths./calendars/{calendarId}/events/{eventId}/instances.get.parameters[2].type: boolean
paths./calendars/{calendarId}/events/{eventId}/instances.get.parameters[3].description: The
  maximum number of attendees to include in the response. If there are more than the
  specified number of attendees, only the participant is returned. Optional.
paths./calendars/{calendarId}/events/{eventId}/instances.get.parameters[3].in: query
paths./calendars/{calendarId}/events/{eventId}/instances.get.parameters[3].minimum: 1
paths./calendars/{calendarId}/events/{eventId}/instances.get.parameters[3].name: maxAttendees
paths./calendars/{calendarId}/events/{eventId}/instances.get.parameters[3].type: integer
paths./calendars/{calendarId}/events/{eventId}/instances.get.parameters[4].description: Maximum
  number of events returned on one result page. By default the value is 250 events.
  The page size can never be larger than 2500 events. Optional.
paths./calendars/{calendarId}/events/{eventId}/instances.get.parameters[4].in: query
paths./calendars/{calendarId}/events/{eventId}/instances.get.parameters[4].minimum: 1
paths./calendars/{calendarId}/events/{eventId}/instances.get.parameters[4].name: maxResults
paths./calendars/{calendarId}/events/{eventId}/instances.get.parameters[4].type: integer
paths./calendars/{calendarId}/events/{eventId}/instances.get.parameters[5].description: The
  original start time of the instance in the result. Optional.
paths./calendars/{calendarId}/events/{eventId}/instances.get.parameters[5].in: query
paths./calendars/{calendarId}/events/{eventId}/instances.get.parameters[5].name: originalStart
paths./calendars/{calendarId}/events/{eventId}/instances.get.parameters[5].type: string
paths./calendars/{calendarId}/events/{eventId}/instances.get.parameters[6].description: Token
  specifying which result page to return. Optional.
paths./calendars/{calendarId}/events/{eventId}/instances.get.parameters[6].in: query
paths./calendars/{calendarId}/events/{eventId}/instances.get.parameters[6].name: pageToken
paths./calendars/{calendarId}/events/{eventId}/instances.get.parameters[6].type: string
paths./calendars/{calendarId}/events/{eventId}/instances.get.parameters[7].description: Whether
  to include deleted events (with status equals "cancelled") in the result. Cancelled
  instances of recurring events will still be included if singleEvents is False. Optional.
  The default is False.
paths./calendars/{calendarId}/events/{eventId}/instances.get.parameters[7].in: query
paths./calendars/{calendarId}/events/{eventId}/instances.get.parameters[7].name: showDeleted
paths./calendars/{calendarId}/events/{eventId}/instances.get.parameters[7].type: boolean
paths./calendars/{calendarId}/events/{eventId}/instances.get.parameters[8].description: Upper
  bound (exclusive) for an event's start time to filter by. Optional. The default
  is not to filter by start time. Must be an RFC3339 timestamp with mandatory time
  zone offset.
paths./calendars/{calendarId}/events/{eventId}/instances.get.parameters[8].in: query
paths./calendars/{calendarId}/events/{eventId}/instances.get.parameters[8].name: timeMax
paths./calendars/{calendarId}/events/{eventId}/instances.get.parameters[8].type: string
paths./calendars/{calendarId}/events/{eventId}/instances.get.parameters[9].description: Lower
  bound (inclusive) for an event's end time to filter by. Optional. The default is
  not to filter by end time. Must be an RFC3339 timestamp with mandatory time zone
  offset.
paths./calendars/{calendarId}/events/{eventId}/instances.get.parameters[9].in: query
paths./calendars/{calendarId}/events/{eventId}/instances.get.parameters[9].name: timeMin
paths./calendars/{calendarId}/events/{eventId}/instances.get.parameters[9].type: string
paths./calendars/{calendarId}/events/{eventId}/instances.get.parameters[10].description: Time
  zone used in the response. Optional. The default is the time zone of the calendar.
paths./calendars/{calendarId}/events/{eventId}/instances.get.parameters[10].in: query
paths./calendars/{calendarId}/events/{eventId}/instances.get.parameters[10].name: timeZone
paths./calendars/{calendarId}/events/{eventId}/instances.get.parameters[10].type: string
paths./calendars/{calendarId}/events/{eventId}/instances.get.responses.200.description: Successful
  response
paths./calendars/{calendarId}/events/{eventId}/instances.get.responses.200.schema.$ref: '#/definitions/Events'
paths./calendars/{calendarId}/events/{eventId}/instances.get.security.length: 2
paths./calendars/{calendarId}/events/{eventId}/instances.get.security[0].Oauth2.length: 1
paths./calendars/{calendarId}/events/{eventId}/instances.get.security[0].Oauth2[0]: https://www.googleapis.com/auth/calendar
paths./calendars/{calendarId}/events/{eventId}/instances.get.security[1].Oauth2.length: 1
paths./calendars/{calendarId}/events/{eventId}/instances.get.security[1].Oauth2[0]: https://www.googleapis.com/auth/calendar.readonly
paths./calendars/{calendarId}/events/{eventId}/instances.get.tags.length: 1
paths./calendars/{calendarId}/events/{eventId}/instances.get.tags[0]: events
paths./calendars/{calendarId}/events/{eventId}/instances.parameters.length: 7
paths./calendars/{calendarId}/events/{eventId}/instances.parameters[0].$ref: '#/parameters/alt'
paths./calendars/{calendarId}/events/{eventId}/instances.parameters[1].$ref: '#/parameters/fields'
paths./calendars/{calendarId}/events/{eventId}/instances.parameters[2].$ref: '#/parameters/key'
paths./calendars/{calendarId}/events/{eventId}/instances.parameters[3].$ref: '#/parameters/oauth_token'
paths./calendars/{calendarId}/events/{eventId}/instances.parameters[4].$ref: '#/parameters/prettyPrint'
paths./calendars/{calendarId}/events/{eventId}/instances.parameters[5].$ref: '#/parameters/quotaUser'
paths./calendars/{calendarId}/events/{eventId}/instances.parameters[6].$ref: '#/parameters/userIp'
paths./calendars/{calendarId}/events/{eventId}/move.parameters.length: 7
paths./calendars/{calendarId}/events/{eventId}/move.parameters[0].$ref: '#/parameters/alt'
paths./calendars/{calendarId}/events/{eventId}/move.parameters[1].$ref: '#/parameters/fields'
paths./calendars/{calendarId}/events/{eventId}/move.parameters[2].$ref: '#/parameters/key'
paths./calendars/{calendarId}/events/{eventId}/move.parameters[3].$ref: '#/parameters/oauth_token'
paths./calendars/{calendarId}/events/{eventId}/move.parameters[4].$ref: '#/parameters/prettyPrint'
paths./calendars/{calendarId}/events/{eventId}/move.parameters[5].$ref: '#/parameters/quotaUser'
paths./calendars/{calendarId}/events/{eventId}/move.parameters[6].$ref: '#/parameters/userIp'
paths./calendars/{calendarId}/events/{eventId}/move.post.description: Moves an event
  to another calendar, i.e. changes an event's organizer.
paths./calendars/{calendarId}/events/{eventId}/move.post.operationId: calendar.events.move
paths./calendars/{calendarId}/events/{eventId}/move.post.parameters.length: 4
paths./calendars/{calendarId}/events/{eventId}/move.post.parameters[0].description: Calendar
  identifier of the source calendar where the event currently is on.
paths./calendars/{calendarId}/events/{eventId}/move.post.parameters[0].in: path
paths./calendars/{calendarId}/events/{eventId}/move.post.parameters[0].name: calendarId
paths./calendars/{calendarId}/events/{eventId}/move.post.parameters[0].required: true
paths./calendars/{calendarId}/events/{eventId}/move.post.parameters[0].type: string
paths./calendars/{calendarId}/events/{eventId}/move.post.parameters[1].description: Event
  identifier.
paths./calendars/{calendarId}/events/{eventId}/move.post.parameters[1].in: path
paths./calendars/{calendarId}/events/{eventId}/move.post.parameters[1].name: eventId
paths./calendars/{calendarId}/events/{eventId}/move.post.parameters[1].required: true
paths./calendars/{calendarId}/events/{eventId}/move.post.parameters[1].type: string
paths./calendars/{calendarId}/events/{eventId}/move.post.parameters[2].description: Calendar
  identifier of the target calendar where the event is to be moved to.
paths./calendars/{calendarId}/events/{eventId}/move.post.parameters[2].in: query
paths./calendars/{calendarId}/events/{eventId}/move.post.parameters[2].name: destination
paths./calendars/{calendarId}/events/{eventId}/move.post.parameters[2].required: true
paths./calendars/{calendarId}/events/{eventId}/move.post.parameters[2].type: string
paths./calendars/{calendarId}/events/{eventId}/move.post.parameters[3].description: Whether
  to send notifications about the change of the event's organizer. Optional. The default
  is False.
paths./calendars/{calendarId}/events/{eventId}/move.post.parameters[3].in: query
paths./calendars/{calendarId}/events/{eventId}/move.post.parameters[3].name: sendNotifications
paths./calendars/{calendarId}/events/{eventId}/move.post.parameters[3].type: boolean
paths./calendars/{calendarId}/events/{eventId}/move.post.responses.200.description: Successful
  response
paths./calendars/{calendarId}/events/{eventId}/move.post.responses.200.schema.$ref: '#/definitions/Event'
paths./calendars/{calendarId}/events/{eventId}/move.post.security.length: 1
paths./calendars/{calendarId}/events/{eventId}/move.post.security[0].Oauth2.length: 1
paths./calendars/{calendarId}/events/{eventId}/move.post.security[0].Oauth2[0]: https://www.googleapis.com/auth/calendar
paths./calendars/{calendarId}/events/{eventId}/move.post.tags.length: 1
paths./calendars/{calendarId}/events/{eventId}/move.post.tags[0]: events
paths./calendars/{calendarId}/events/import.parameters.length: 7
paths./calendars/{calendarId}/events/import.parameters[0].$ref: '#/parameters/alt'
paths./calendars/{calendarId}/events/import.parameters[1].$ref: '#/parameters/fields'
paths./calendars/{calendarId}/events/import.parameters[2].$ref: '#/parameters/key'
paths./calendars/{calendarId}/events/import.parameters[3].$ref: '#/parameters/oauth_token'
paths./calendars/{calendarId}/events/import.parameters[4].$ref: '#/parameters/prettyPrint'
paths./calendars/{calendarId}/events/import.parameters[5].$ref: '#/parameters/quotaUser'
paths./calendars/{calendarId}/events/import.parameters[6].$ref: '#/parameters/userIp'
paths./calendars/{calendarId}/events/import.post.description: Imports an event. This
  operation is used to add a private copy of an existing event to a calendar.
paths./calendars/{calendarId}/events/import.post.operationId: calendar.events.import
paths./calendars/{calendarId}/events/import.post.parameters.length: 3
paths./calendars/{calendarId}/events/import.post.parameters[0].description: Calendar
  identifier. To retrieve calendar IDs call the calendarList.list method. If you want
  to access the primary calendar of the currently logged in user, use the "primary"
  keyword.
paths./calendars/{calendarId}/events/import.post.parameters[0].in: path
paths./calendars/{calendarId}/events/import.post.parameters[0].name: calendarId
paths./calendars/{calendarId}/events/import.post.parameters[0].required: true
paths./calendars/{calendarId}/events/import.post.parameters[0].type: string
paths./calendars/{calendarId}/events/import.post.parameters[1].description: Whether
  API client performing operation supports event attachments. Optional. The default
  is False.
paths./calendars/{calendarId}/events/import.post.parameters[1].in: query
paths./calendars/{calendarId}/events/import.post.parameters[1].name: supportsAttachments
paths./calendars/{calendarId}/events/import.post.parameters[1].type: boolean
paths./calendars/{calendarId}/events/import.post.parameters[2].in: body
paths./calendars/{calendarId}/events/import.post.parameters[2].name: body
paths./calendars/{calendarId}/events/import.post.parameters[2].schema.$ref: '#/definitions/Event'
paths./calendars/{calendarId}/events/import.post.responses.200.description: Successful
  response
paths./calendars/{calendarId}/events/import.post.responses.200.schema.$ref: '#/definitions/Event'
paths./calendars/{calendarId}/events/import.post.security.length: 1
paths./calendars/{calendarId}/events/import.post.security[0].Oauth2.length: 1
paths./calendars/{calendarId}/events/import.post.security[0].Oauth2[0]: https://www.googleapis.com/auth/calendar
paths./calendars/{calendarId}/events/import.post.tags.length: 1
paths./calendars/{calendarId}/events/import.post.tags[0]: events
paths./calendars/{calendarId}/events/quickAdd.parameters.length: 7
paths./calendars/{calendarId}/events/quickAdd.parameters[0].$ref: '#/parameters/alt'
paths./calendars/{calendarId}/events/quickAdd.parameters[1].$ref: '#/parameters/fields'
paths./calendars/{calendarId}/events/quickAdd.parameters[2].$ref: '#/parameters/key'
paths./calendars/{calendarId}/events/quickAdd.parameters[3].$ref: '#/parameters/oauth_token'
paths./calendars/{calendarId}/events/quickAdd.parameters[4].$ref: '#/parameters/prettyPrint'
paths./calendars/{calendarId}/events/quickAdd.parameters[5].$ref: '#/parameters/quotaUser'
paths./calendars/{calendarId}/events/quickAdd.parameters[6].$ref: '#/parameters/userIp'
paths./calendars/{calendarId}/events/quickAdd.post.description: Creates an event based
  on a simple text string.
paths./calendars/{calendarId}/events/quickAdd.post.operationId: calendar.events.quickAdd
paths./calendars/{calendarId}/events/quickAdd.post.parameters.length: 3
paths./calendars/{calendarId}/events/quickAdd.post.parameters[0].description: Calendar
  identifier. To retrieve calendar IDs call the calendarList.list method. If you want
  to access the primary calendar of the currently logged in user, use the "primary"
  keyword.
paths./calendars/{calendarId}/events/quickAdd.post.parameters[0].in: path
paths./calendars/{calendarId}/events/quickAdd.post.parameters[0].name: calendarId
paths./calendars/{calendarId}/events/quickAdd.post.parameters[0].required: true
paths./calendars/{calendarId}/events/quickAdd.post.parameters[0].type: string
paths./calendars/{calendarId}/events/quickAdd.post.parameters[1].description: The
  text describing the event to be created.
paths./calendars/{calendarId}/events/quickAdd.post.parameters[1].in: query
paths./calendars/{calendarId}/events/quickAdd.post.parameters[1].name: text
paths./calendars/{calendarId}/events/quickAdd.post.parameters[1].required: true
paths./calendars/{calendarId}/events/quickAdd.post.parameters[1].type: string
paths./calendars/{calendarId}/events/quickAdd.post.parameters[2].description: Whether
  to send notifications about the creation of the event. Optional. The default is
  False.
paths./calendars/{calendarId}/events/quickAdd.post.parameters[2].in: query
paths./calendars/{calendarId}/events/quickAdd.post.parameters[2].name: sendNotifications
paths./calendars/{calendarId}/events/quickAdd.post.parameters[2].type: boolean
paths./calendars/{calendarId}/events/quickAdd.post.responses.200.description: Successful
  response
paths./calendars/{calendarId}/events/quickAdd.post.responses.200.schema.$ref: '#/definitions/Event'
paths./calendars/{calendarId}/events/quickAdd.post.security.length: 1
paths./calendars/{calendarId}/events/quickAdd.post.security[0].Oauth2.length: 1
paths./calendars/{calendarId}/events/quickAdd.post.security[0].Oauth2[0]: https://www.googleapis.com/auth/calendar
paths./calendars/{calendarId}/events/quickAdd.post.tags.length: 1
paths./calendars/{calendarId}/events/quickAdd.post.tags[0]: events
paths./calendars/{calendarId}/events/watch.parameters.length: 7
paths./calendars/{calendarId}/events/watch.parameters[0].$ref: '#/parameters/alt'
paths./calendars/{calendarId}/events/watch.parameters[1].$ref: '#/parameters/fields'
paths./calendars/{calendarId}/events/watch.parameters[2].$ref: '#/parameters/key'
paths./calendars/{calendarId}/events/watch.parameters[3].$ref: '#/parameters/oauth_token'
paths./calendars/{calendarId}/events/watch.parameters[4].$ref: '#/parameters/prettyPrint'
paths./calendars/{calendarId}/events/watch.parameters[5].$ref: '#/parameters/quotaUser'
paths./calendars/{calendarId}/events/watch.parameters[6].$ref: '#/parameters/userIp'
paths./calendars/{calendarId}/events/watch.post.description: Watch for changes to
  Events resources.
paths./calendars/{calendarId}/events/watch.post.operationId: calendar.events.watch
paths./calendars/{calendarId}/events/watch.post.parameters.length: 19
paths./calendars/{calendarId}/events/watch.post.parameters[0].description: Whether
  to always include a value in the email field for the organizer, creator and attendees,
  even if no real email is available (i.e. a generated, non-working value will be
  provided). The use of this option is discouraged and should only be used by clients
  which cannot handle the absence of an email address value in the mentioned places.
  Optional. The default is False.
paths./calendars/{calendarId}/events/watch.post.parameters[0].in: query
paths./calendars/{calendarId}/events/watch.post.parameters[0].name: alwaysIncludeEmail
paths./calendars/{calendarId}/events/watch.post.parameters[0].type: boolean
paths./calendars/{calendarId}/events/watch.post.parameters[1].description: Calendar
  identifier. To retrieve calendar IDs call the calendarList.list method. If you want
  to access the primary calendar of the currently logged in user, use the "primary"
  keyword.
paths./calendars/{calendarId}/events/watch.post.parameters[1].in: path
paths./calendars/{calendarId}/events/watch.post.parameters[1].name: calendarId
paths./calendars/{calendarId}/events/watch.post.parameters[1].required: true
paths./calendars/{calendarId}/events/watch.post.parameters[1].type: string
paths./calendars/{calendarId}/events/watch.post.parameters[2].description: Specifies
  event ID in the iCalendar format to be included in the response. Optional.
paths./calendars/{calendarId}/events/watch.post.parameters[2].in: query
paths./calendars/{calendarId}/events/watch.post.parameters[2].name: iCalUID
paths./calendars/{calendarId}/events/watch.post.parameters[2].type: string
paths./calendars/{calendarId}/events/watch.post.parameters[3].description: The maximum
  number of attendees to include in the response. If there are more than the specified
  number of attendees, only the participant is returned. Optional.
paths./calendars/{calendarId}/events/watch.post.parameters[3].in: query
paths./calendars/{calendarId}/events/watch.post.parameters[3].minimum: 1
paths./calendars/{calendarId}/events/watch.post.parameters[3].name: maxAttendees
paths./calendars/{calendarId}/events/watch.post.parameters[3].type: integer
paths./calendars/{calendarId}/events/watch.post.parameters[4].default: 250
paths./calendars/{calendarId}/events/watch.post.parameters[4].description: Maximum
  number of events returned on one result page. The number of events in the resulting
  page may be less than this value, or none at all, even if there are more events
  matching the query. Incomplete pages can be detected by a non-empty nextPageToken
  field in the response. By default the value is 250 events. The page size can never
  be larger than 2500 events. Optional.
paths./calendars/{calendarId}/events/watch.post.parameters[4].in: query
paths./calendars/{calendarId}/events/watch.post.parameters[4].minimum: 1
paths./calendars/{calendarId}/events/watch.post.parameters[4].name: maxResults
paths./calendars/{calendarId}/events/watch.post.parameters[4].type: integer
paths./calendars/{calendarId}/events/watch.post.parameters[5].description: The order
  of the events returned in the result. Optional. The default is an unspecified, stable
  order.
paths./calendars/{calendarId}/events/watch.post.parameters[5].enum.length: 2
paths./calendars/{calendarId}/events/watch.post.parameters[5].enum[0]: startTime
paths./calendars/{calendarId}/events/watch.post.parameters[5].enum[1]: updated
paths./calendars/{calendarId}/events/watch.post.parameters[5].in: query
paths./calendars/{calendarId}/events/watch.post.parameters[5].name: orderBy
paths./calendars/{calendarId}/events/watch.post.parameters[5].type: string
paths./calendars/{calendarId}/events/watch.post.parameters[6].description: Token specifying
  which result page to return. Optional.
paths./calendars/{calendarId}/events/watch.post.parameters[6].in: query
paths./calendars/{calendarId}/events/watch.post.parameters[6].name: pageToken
paths./calendars/{calendarId}/events/watch.post.parameters[6].type: string
paths./calendars/{calendarId}/events/watch.post.parameters[7].collectionFormat: multi
paths./calendars/{calendarId}/events/watch.post.parameters[7].description: Extended
  properties constraint specified as propertyName=value. Matches only private properties.
  This parameter might be repeated multiple times to return events that match all
  given constraints.
paths./calendars/{calendarId}/events/watch.post.parameters[7].in: query
paths./calendars/{calendarId}/events/watch.post.parameters[7].items.type: string
paths./calendars/{calendarId}/events/watch.post.parameters[7].name: privateExtendedProperty
paths./calendars/{calendarId}/events/watch.post.parameters[7].type: array
paths./calendars/{calendarId}/events/watch.post.parameters[8].description: Free text
  search terms to find events that match these terms in any field, except for extended
  properties. Optional.
paths./calendars/{calendarId}/events/watch.post.parameters[8].in: query
paths./calendars/{calendarId}/events/watch.post.parameters[8].name: q
paths./calendars/{calendarId}/events/watch.post.parameters[8].type: string
paths./calendars/{calendarId}/events/watch.post.parameters[9].in: body
paths./calendars/{calendarId}/events/watch.post.parameters[9].name: resource
paths./calendars/{calendarId}/events/watch.post.parameters[9].schema.$ref: '#/definitions/Channel'
paths./calendars/{calendarId}/events/watch.post.parameters[10].collectionFormat: multi
paths./calendars/{calendarId}/events/watch.post.parameters[10].description: Extended
  properties constraint specified as propertyName=value. Matches only shared properties.
  This parameter might be repeated multiple times to return events that match all
  given constraints.
paths./calendars/{calendarId}/events/watch.post.parameters[10].in: query
paths./calendars/{calendarId}/events/watch.post.parameters[10].items.type: string
paths./calendars/{calendarId}/events/watch.post.parameters[10].name: sharedExtendedProperty
paths./calendars/{calendarId}/events/watch.post.parameters[10].type: array
paths./calendars/{calendarId}/events/watch.post.parameters[11].description: Whether
  to include deleted events (with status equals "cancelled") in the result. Cancelled
  instances of recurring events (but not the underlying recurring event) will still
  be included if showDeleted and singleEvents are both False. If showDeleted and singleEvents
  are both True, only single instances of deleted events (but not the underlying recurring
  events) are returned. Optional. The default is False.
paths./calendars/{calendarId}/events/watch.post.parameters[11].in: query
paths./calendars/{calendarId}/events/watch.post.parameters[11].name: showDeleted
paths./calendars/{calendarId}/events/watch.post.parameters[11].type: boolean
paths./calendars/{calendarId}/events/watch.post.parameters[12].description: Whether
  to include hidden invitations in the result. Optional. The default is False.
paths./calendars/{calendarId}/events/watch.post.parameters[12].in: query
paths./calendars/{calendarId}/events/watch.post.parameters[12].name: showHiddenInvitations
paths./calendars/{calendarId}/events/watch.post.parameters[12].type: boolean
paths./calendars/{calendarId}/events/watch.post.parameters[13].description: Whether
  to expand recurring events into instances and only return single one-off events
  and instances of recurring events, but not the underlying recurring events themselves.
  Optional. The default is False.
paths./calendars/{calendarId}/events/watch.post.parameters[13].in: query
paths./calendars/{calendarId}/events/watch.post.parameters[13].name: singleEvents
paths./calendars/{calendarId}/events/watch.post.parameters[13].type: boolean
paths./calendars/{calendarId}/events/watch.post.parameters[14].description: "Token
  obtained from the nextSyncToken field returned on the last page of results from
  the previous list request. It makes the result of this list request contain only
  entries that have changed since then. All events deleted since the previous list
  request will always be in the result set and it is not allowed to set showDeleted
  to False.\nThere are several query parameters that cannot be specified together
  with nextSyncToken to ensure consistency of the client state.\n\nThese are: \n-
  iCalUID \n- orderBy \n- privateExtendedProperty \n- q \n- sharedExtendedProperty
  \n- timeMin \n- timeMax \n- updatedMin If the syncToken expires, the server will
  respond with a 410 GONE response code and the client should clear its storage and
  perform a full synchronization without any syncToken.\nLearn more about incremental
  synchronization.\nOptional. The default is to return all entries."
paths./calendars/{calendarId}/events/watch.post.parameters[14].in: query
paths./calendars/{calendarId}/events/watch.post.parameters[14].name: syncToken
paths./calendars/{calendarId}/events/watch.post.parameters[14].type: string
paths./calendars/{calendarId}/events/watch.post.parameters[15].description: Upper
  bound (exclusive) for an event's start time to filter by. Optional. The default
  is not to filter by start time. Must be an RFC3339 timestamp with mandatory time
  zone offset, e.g., 2011-06-03T10:00:00-07:00, 2011-06-03T10:00:00Z. Milliseconds
  may be provided but will be ignored. If timeMin is set, timeMax must be greater
  than timeMin.
paths./calendars/{calendarId}/events/watch.post.parameters[15].in: query
paths./calendars/{calendarId}/events/watch.post.parameters[15].name: timeMax
paths./calendars/{calendarId}/events/watch.post.parameters[15].type: string
paths./calendars/{calendarId}/events/watch.post.parameters[16].description: Lower
  bound (inclusive) for an event's end time to filter by. Optional. The default is
  not to filter by end time. Must be an RFC3339 timestamp with mandatory time zone
  offset, e.g., 2011-06-03T10:00:00-07:00, 2011-06-03T10:00:00Z. Milliseconds may
  be provided but will be ignored. If timeMax is set, timeMin must be smaller than
  timeMax.
paths./calendars/{calendarId}/events/watch.post.parameters[16].in: query
paths./calendars/{calendarId}/events/watch.post.parameters[16].name: timeMin
paths./calendars/{calendarId}/events/watch.post.parameters[16].type: string
paths./calendars/{calendarId}/events/watch.post.parameters[17].description: Time zone
  used in the response. Optional. The default is the time zone of the calendar.
paths./calendars/{calendarId}/events/watch.post.parameters[17].in: query
paths./calendars/{calendarId}/events/watch.post.parameters[17].name: timeZone
paths./calendars/{calendarId}/events/watch.post.parameters[17].type: string
paths./calendars/{calendarId}/events/watch.post.parameters[18].description: Lower
  bound for an event's last modification time (as a RFC3339 timestamp) to filter by.
  When specified, entries deleted since this time will always be included regardless
  of showDeleted. Optional. The default is not to filter by last modification time.
paths./calendars/{calendarId}/events/watch.post.parameters[18].in: query
paths./calendars/{calendarId}/events/watch.post.parameters[18].name: updatedMin
paths./calendars/{calendarId}/events/watch.post.parameters[18].type: string
paths./calendars/{calendarId}/events/watch.post.responses.200.description: Successful
  response
paths./calendars/{calendarId}/events/watch.post.responses.200.schema.$ref: '#/definitions/Channel'
paths./calendars/{calendarId}/events/watch.post.security.length: 2
paths./calendars/{calendarId}/events/watch.post.security[0].Oauth2.length: 1
paths./calendars/{calendarId}/events/watch.post.security[0].Oauth2[0]: https://www.googleapis.com/auth/calendar
paths./calendars/{calendarId}/events/watch.post.security[1].Oauth2.length: 1
paths./calendars/{calendarId}/events/watch.post.security[1].Oauth2[0]: https://www.googleapis.com/auth/calendar.readonly
paths./calendars/{calendarId}/events/watch.post.tags.length: 1
paths./calendars/{calendarId}/events/watch.post.tags[0]: events
paths./channels/stop.parameters.length: 7
paths./channels/stop.parameters[0].$ref: '#/parameters/alt'
paths./channels/stop.parameters[1].$ref: '#/parameters/fields'
paths./channels/stop.parameters[2].$ref: '#/parameters/key'
paths./channels/stop.parameters[3].$ref: '#/parameters/oauth_token'
paths./channels/stop.parameters[4].$ref: '#/parameters/prettyPrint'
paths./channels/stop.parameters[5].$ref: '#/parameters/quotaUser'
paths./channels/stop.parameters[6].$ref: '#/parameters/userIp'
paths./channels/stop.post.description: Stop watching resources through this channel
paths./channels/stop.post.operationId: calendar.channels.stop
paths./channels/stop.post.parameters.length: 1
paths./channels/stop.post.parameters[0].in: body
paths./channels/stop.post.parameters[0].name: resource
paths./channels/stop.post.parameters[0].schema.$ref: '#/definitions/Channel'
paths./channels/stop.post.responses.200.description: Successful response
paths./channels/stop.post.security.length: 2
paths./channels/stop.post.security[0].Oauth2.length: 1
paths./channels/stop.post.security[0].Oauth2[0]: https://www.googleapis.com/auth/calendar
paths./channels/stop.post.security[1].Oauth2.length: 1
paths./channels/stop.post.security[1].Oauth2[0]: https://www.googleapis.com/auth/calendar.readonly
paths./channels/stop.post.tags.length: 1
paths./channels/stop.post.tags[0]: channels
paths./colors.get.description: Returns the color definitions for calendars and events.
paths./colors.get.operationId: calendar.colors.get
paths./colors.get.responses.200.description: Successful response
paths./colors.get.responses.200.schema.$ref: '#/definitions/Colors'
paths./colors.get.security.length: 2
paths./colors.get.security[0].Oauth2.length: 1
paths./colors.get.security[0].Oauth2[0]: https://www.googleapis.com/auth/calendar
paths./colors.get.security[1].Oauth2.length: 1
paths./colors.get.security[1].Oauth2[0]: https://www.googleapis.com/auth/calendar.readonly
paths./colors.get.tags.length: 1
paths./colors.get.tags[0]: colors
paths./colors.parameters.length: 7
paths./colors.parameters[0].$ref: '#/parameters/alt'
paths./colors.parameters[1].$ref: '#/parameters/fields'
paths./colors.parameters[2].$ref: '#/parameters/key'
paths./colors.parameters[3].$ref: '#/parameters/oauth_token'
paths./colors.parameters[4].$ref: '#/parameters/prettyPrint'
paths./colors.parameters[5].$ref: '#/parameters/quotaUser'
paths./colors.parameters[6].$ref: '#/parameters/userIp'
paths./freeBusy.parameters.length: 7
paths./freeBusy.parameters[0].$ref: '#/parameters/alt'
paths./freeBusy.parameters[1].$ref: '#/parameters/fields'
paths./freeBusy.parameters[2].$ref: '#/parameters/key'
paths./freeBusy.parameters[3].$ref: '#/parameters/oauth_token'
paths./freeBusy.parameters[4].$ref: '#/parameters/prettyPrint'
paths./freeBusy.parameters[5].$ref: '#/parameters/quotaUser'
paths./freeBusy.parameters[6].$ref: '#/parameters/userIp'
paths./freeBusy.post.description: Returns free/busy information for a set of calendars.
paths./freeBusy.post.operationId: calendar.freebusy.query
paths./freeBusy.post.parameters.length: 1
paths./freeBusy.post.parameters[0].in: body
paths./freeBusy.post.parameters[0].name: body
paths./freeBusy.post.parameters[0].schema.$ref: '#/definitions/FreeBusyRequest'
paths./freeBusy.post.responses.200.description: Successful response
paths./freeBusy.post.responses.200.schema.$ref: '#/definitions/FreeBusyResponse'
paths./freeBusy.post.security.length: 2
paths./freeBusy.post.security[0].Oauth2.length: 1
paths./freeBusy.post.security[0].Oauth2[0]: https://www.googleapis.com/auth/calendar
paths./freeBusy.post.security[1].Oauth2.length: 1
paths./freeBusy.post.security[1].Oauth2[0]: https://www.googleapis.com/auth/calendar.readonly
paths./freeBusy.post.tags.length: 1
paths./freeBusy.post.tags[0]: freebusy
paths./users/me/calendarList.get.description: Returns entries on the user's calendar
  list.
paths./users/me/calendarList.get.operationId: calendar.calendarList.list
paths./users/me/calendarList.get.parameters.length: 6
paths./users/me/calendarList.get.parameters[0].description: Maximum number of entries
  returned on one result page. By default the value is 100 entries. The page size
  can never be larger than 250 entries. Optional.
paths./users/me/calendarList.get.parameters[0].in: query
paths./users/me/calendarList.get.parameters[0].minimum: 1
paths./users/me/calendarList.get.parameters[0].name: maxResults
paths./users/me/calendarList.get.parameters[0].type: integer
paths./users/me/calendarList.get.parameters[1].description: The minimum access role
  for the user in the returned entries. Optional. The default is no restriction.
paths./users/me/calendarList.get.parameters[1].enum.length: 4
paths./users/me/calendarList.get.parameters[1].enum[0]: freeBusyReader
paths./users/me/calendarList.get.parameters[1].enum[1]: owner
paths./users/me/calendarList.get.parameters[1].enum[2]: reader
paths./users/me/calendarList.get.parameters[1].enum[3]: writer
paths./users/me/calendarList.get.parameters[1].in: query
paths./users/me/calendarList.get.parameters[1].name: minAccessRole
paths./users/me/calendarList.get.parameters[1].type: string
paths./users/me/calendarList.get.parameters[2].description: Token specifying which
  result page to return. Optional.
paths./users/me/calendarList.get.parameters[2].in: query
paths./users/me/calendarList.get.parameters[2].name: pageToken
paths./users/me/calendarList.get.parameters[2].type: string
paths./users/me/calendarList.get.parameters[3].description: Whether to include deleted
  calendar list entries in the result. Optional. The default is False.
paths./users/me/calendarList.get.parameters[3].in: query
paths./users/me/calendarList.get.parameters[3].name: showDeleted
paths./users/me/calendarList.get.parameters[3].type: boolean
paths./users/me/calendarList.get.parameters[4].description: Whether to show hidden
  entries. Optional. The default is False.
paths./users/me/calendarList.get.parameters[4].in: query
paths./users/me/calendarList.get.parameters[4].name: showHidden
paths./users/me/calendarList.get.parameters[4].type: boolean
paths./users/me/calendarList.get.parameters[5].description: |-
  Token obtained from the nextSyncToken field returned on the last page of results from the previous list request. It makes the result of this list request contain only entries that have changed since then. If only read-only fields such as calendar properties or ACLs have changed, the entry won't be returned. All entries deleted and hidden since the previous list request will always be in the result set and it is not allowed to set showDeleted neither showHidden to False.
  To ensure client state consistency minAccessRole query parameter cannot be specified together with nextSyncToken.
  If the syncToken expires, the server will respond with a 410 GONE response code and the client should clear its storage and perform a full synchronization without any syncToken.
  Learn more about incremental synchronization.
  Optional. The default is to return all entries.
paths./users/me/calendarList.get.parameters[5].in: query
paths./users/me/calendarList.get.parameters[5].name: syncToken
paths./users/me/calendarList.get.parameters[5].type: string
paths./users/me/calendarList.get.responses.200.description: Successful response
paths./users/me/calendarList.get.responses.200.schema.$ref: '#/definitions/CalendarList'
paths./users/me/calendarList.get.security.length: 2
paths./users/me/calendarList.get.security[0].Oauth2.length: 1
paths./users/me/calendarList.get.security[0].Oauth2[0]: https://www.googleapis.com/auth/calendar
paths./users/me/calendarList.get.security[1].Oauth2.length: 1
paths./users/me/calendarList.get.security[1].Oauth2[0]: https://www.googleapis.com/auth/calendar.readonly
paths./users/me/calendarList.get.tags.length: 1
paths./users/me/calendarList.get.tags[0]: calendarList
paths./users/me/calendarList.parameters.length: 7
paths./users/me/calendarList.parameters[0].$ref: '#/parameters/alt'
paths./users/me/calendarList.parameters[1].$ref: '#/parameters/fields'
paths./users/me/calendarList.parameters[2].$ref: '#/parameters/key'
paths./users/me/calendarList.parameters[3].$ref: '#/parameters/oauth_token'
paths./users/me/calendarList.parameters[4].$ref: '#/parameters/prettyPrint'
paths./users/me/calendarList.parameters[5].$ref: '#/parameters/quotaUser'
paths./users/me/calendarList.parameters[6].$ref: '#/parameters/userIp'
paths./users/me/calendarList.post.description: Adds an entry to the user's calendar
  list.
paths./users/me/calendarList.post.operationId: calendar.calendarList.insert
paths./users/me/calendarList.post.parameters.length: 2
paths./users/me/calendarList.post.parameters[0].description: Whether to use the foregroundColor
  and backgroundColor fields to write the calendar colors (RGB). If this feature is
  used, the index-based colorId field will be set to the best matching option automatically.
  Optional. The default is False.
paths./users/me/calendarList.post.parameters[0].in: query
paths./users/me/calendarList.post.parameters[0].name: colorRgbFormat
paths./users/me/calendarList.post.parameters[0].type: boolean
paths./users/me/calendarList.post.parameters[1].in: body
paths./users/me/calendarList.post.parameters[1].name: body
paths./users/me/calendarList.post.parameters[1].schema.$ref: '#/definitions/CalendarListEntry'
paths./users/me/calendarList.post.responses.200.description: Successful response
paths./users/me/calendarList.post.responses.200.schema.$ref: '#/definitions/CalendarListEntry'
paths./users/me/calendarList.post.security.length: 1
paths./users/me/calendarList.post.security[0].Oauth2.length: 1
paths./users/me/calendarList.post.security[0].Oauth2[0]: https://www.googleapis.com/auth/calendar
paths./users/me/calendarList.post.tags.length: 1
paths./users/me/calendarList.post.tags[0]: calendarList
paths./users/me/calendarList/{calendarId}.delete.description: Deletes an entry on
  the user's calendar list.
paths./users/me/calendarList/{calendarId}.delete.operationId: calendar.calendarList.delete
paths./users/me/calendarList/{calendarId}.delete.parameters.length: 1
paths./users/me/calendarList/{calendarId}.delete.parameters[0].description: Calendar
  identifier. To retrieve calendar IDs call the calendarList.list method. If you want
  to access the primary calendar of the currently logged in user, use the "primary"
  keyword.
paths./users/me/calendarList/{calendarId}.delete.parameters[0].in: path
paths./users/me/calendarList/{calendarId}.delete.parameters[0].name: calendarId
paths./users/me/calendarList/{calendarId}.delete.parameters[0].required: true
paths./users/me/calendarList/{calendarId}.delete.parameters[0].type: string
paths./users/me/calendarList/{calendarId}.delete.responses.200.description: Successful
  response
paths./users/me/calendarList/{calendarId}.delete.security.length: 1
paths./users/me/calendarList/{calendarId}.delete.security[0].Oauth2.length: 1
paths./users/me/calendarList/{calendarId}.delete.security[0].Oauth2[0]: https://www.googleapis.com/auth/calendar
paths./users/me/calendarList/{calendarId}.delete.tags.length: 1
paths./users/me/calendarList/{calendarId}.delete.tags[0]: calendarList
paths./users/me/calendarList/{calendarId}.get.description: Returns an entry on the
  user's calendar list.
paths./users/me/calendarList/{calendarId}.get.operationId: calendar.calendarList.get
paths./users/me/calendarList/{calendarId}.get.parameters.length: 1
paths./users/me/calendarList/{calendarId}.get.parameters[0].description: Calendar
  identifier. To retrieve calendar IDs call the calendarList.list method. If you want
  to access the primary calendar of the currently logged in user, use the "primary"
  keyword.
paths./users/me/calendarList/{calendarId}.get.parameters[0].in: path
paths./users/me/calendarList/{calendarId}.get.parameters[0].name: calendarId
paths./users/me/calendarList/{calendarId}.get.parameters[0].required: true
paths./users/me/calendarList/{calendarId}.get.parameters[0].type: string
paths./users/me/calendarList/{calendarId}.get.responses.200.description: Successful
  response
paths./users/me/calendarList/{calendarId}.get.responses.200.schema.$ref: '#/definitions/CalendarListEntry'
paths./users/me/calendarList/{calendarId}.get.security.length: 2
paths./users/me/calendarList/{calendarId}.get.security[0].Oauth2.length: 1
paths./users/me/calendarList/{calendarId}.get.security[0].Oauth2[0]: https://www.googleapis.com/auth/calendar
paths./users/me/calendarList/{calendarId}.get.security[1].Oauth2.length: 1
paths./users/me/calendarList/{calendarId}.get.security[1].Oauth2[0]: https://www.googleapis.com/auth/calendar.readonly
paths./users/me/calendarList/{calendarId}.get.tags.length: 1
paths./users/me/calendarList/{calendarId}.get.tags[0]: calendarList
paths./users/me/calendarList/{calendarId}.parameters.length: 7
paths./users/me/calendarList/{calendarId}.parameters[0].$ref: '#/parameters/alt'
paths./users/me/calendarList/{calendarId}.parameters[1].$ref: '#/parameters/fields'
paths./users/me/calendarList/{calendarId}.parameters[2].$ref: '#/parameters/key'
paths./users/me/calendarList/{calendarId}.parameters[3].$ref: '#/parameters/oauth_token'
paths./users/me/calendarList/{calendarId}.parameters[4].$ref: '#/parameters/prettyPrint'
paths./users/me/calendarList/{calendarId}.parameters[5].$ref: '#/parameters/quotaUser'
paths./users/me/calendarList/{calendarId}.parameters[6].$ref: '#/parameters/userIp'
paths./users/me/calendarList/{calendarId}.patch.description: Updates an entry on the
  user's calendar list. This method supports patch semantics.
paths./users/me/calendarList/{calendarId}.patch.operationId: calendar.calendarList.patch
paths./users/me/calendarList/{calendarId}.patch.parameters.length: 3
paths./users/me/calendarList/{calendarId}.patch.parameters[0].description: Calendar
  identifier. To retrieve calendar IDs call the calendarList.list method. If you want
  to access the primary calendar of the currently logged in user, use the "primary"
  keyword.
paths./users/me/calendarList/{calendarId}.patch.parameters[0].in: path
paths./users/me/calendarList/{calendarId}.patch.parameters[0].name: calendarId
paths./users/me/calendarList/{calendarId}.patch.parameters[0].required: true
paths./users/me/calendarList/{calendarId}.patch.parameters[0].type: string
paths./users/me/calendarList/{calendarId}.patch.parameters[1].description: Whether
  to use the foregroundColor and backgroundColor fields to write the calendar colors
  (RGB). If this feature is used, the index-based colorId field will be set to the
  best matching option automatically. Optional. The default is False.
paths./users/me/calendarList/{calendarId}.patch.parameters[1].in: query
paths./users/me/calendarList/{calendarId}.patch.parameters[1].name: colorRgbFormat
paths./users/me/calendarList/{calendarId}.patch.parameters[1].type: boolean
paths./users/me/calendarList/{calendarId}.patch.parameters[2].in: body
paths./users/me/calendarList/{calendarId}.patch.parameters[2].name: body
paths./users/me/calendarList/{calendarId}.patch.parameters[2].schema.$ref: '#/definitions/CalendarListEntry'
paths./users/me/calendarList/{calendarId}.patch.responses.200.description: Successful
  response
paths./users/me/calendarList/{calendarId}.patch.responses.200.schema.$ref: '#/definitions/CalendarListEntry'
paths./users/me/calendarList/{calendarId}.patch.security.length: 1
paths./users/me/calendarList/{calendarId}.patch.security[0].Oauth2.length: 1
paths./users/me/calendarList/{calendarId}.patch.security[0].Oauth2[0]: https://www.googleapis.com/auth/calendar
paths./users/me/calendarList/{calendarId}.patch.tags.length: 1
paths./users/me/calendarList/{calendarId}.patch.tags[0]: calendarList
paths./users/me/calendarList/{calendarId}.put.description: Updates an entry on the
  user's calendar list.
paths./users/me/calendarList/{calendarId}.put.operationId: calendar.calendarList.update
paths./users/me/calendarList/{calendarId}.put.parameters.length: 3
paths./users/me/calendarList/{calendarId}.put.parameters[0].description: Calendar
  identifier. To retrieve calendar IDs call the calendarList.list method. If you want
  to access the primary calendar of the currently logged in user, use the "primary"
  keyword.
paths./users/me/calendarList/{calendarId}.put.parameters[0].in: path
paths./users/me/calendarList/{calendarId}.put.parameters[0].name: calendarId
paths./users/me/calendarList/{calendarId}.put.parameters[0].required: true
paths./users/me/calendarList/{calendarId}.put.parameters[0].type: string
paths./users/me/calendarList/{calendarId}.put.parameters[1].description: Whether to
  use the foregroundColor and backgroundColor fields to write the calendar colors
  (RGB). If this feature is used, the index-based colorId field will be set to the
  best matching option automatically. Optional. The default is False.
paths./users/me/calendarList/{calendarId}.put.parameters[1].in: query
paths./users/me/calendarList/{calendarId}.put.parameters[1].name: colorRgbFormat
paths./users/me/calendarList/{calendarId}.put.parameters[1].type: boolean
paths./users/me/calendarList/{calendarId}.put.parameters[2].in: body
paths./users/me/calendarList/{calendarId}.put.parameters[2].name: body
paths./users/me/calendarList/{calendarId}.put.parameters[2].schema.$ref: '#/definitions/CalendarListEntry'
paths./users/me/calendarList/{calendarId}.put.responses.200.description: Successful
  response
paths./users/me/calendarList/{calendarId}.put.responses.200.schema.$ref: '#/definitions/CalendarListEntry'
paths./users/me/calendarList/{calendarId}.put.security.length: 1
paths./users/me/calendarList/{calendarId}.put.security[0].Oauth2.length: 1
paths./users/me/calendarList/{calendarId}.put.security[0].Oauth2[0]: https://www.googleapis.com/auth/calendar
paths./users/me/calendarList/{calendarId}.put.tags.length: 1
paths./users/me/calendarList/{calendarId}.put.tags[0]: calendarList
paths./users/me/calendarList/watch.parameters.length: 7
paths./users/me/calendarList/watch.parameters[0].$ref: '#/parameters/alt'
paths./users/me/calendarList/watch.parameters[1].$ref: '#/parameters/fields'
paths./users/me/calendarList/watch.parameters[2].$ref: '#/parameters/key'
paths./users/me/calendarList/watch.parameters[3].$ref: '#/parameters/oauth_token'
paths./users/me/calendarList/watch.parameters[4].$ref: '#/parameters/prettyPrint'
paths./users/me/calendarList/watch.parameters[5].$ref: '#/parameters/quotaUser'
paths./users/me/calendarList/watch.parameters[6].$ref: '#/parameters/userIp'
paths./users/me/calendarList/watch.post.description: Watch for changes to CalendarList
  resources.
paths./users/me/calendarList/watch.post.operationId: calendar.calendarList.watch
paths./users/me/calendarList/watch.post.parameters.length: 7
paths./users/me/calendarList/watch.post.parameters[0].description: Maximum number
  of entries returned on one result page. By default the value is 100 entries. The
  page size can never be larger than 250 entries. Optional.
paths./users/me/calendarList/watch.post.parameters[0].in: query
paths./users/me/calendarList/watch.post.parameters[0].minimum: 1
paths./users/me/calendarList/watch.post.parameters[0].name: maxResults
paths./users/me/calendarList/watch.post.parameters[0].type: integer
paths./users/me/calendarList/watch.post.parameters[1].description: The minimum access
  role for the user in the returned entries. Optional. The default is no restriction.
paths./users/me/calendarList/watch.post.parameters[1].enum.length: 4
paths./users/me/calendarList/watch.post.parameters[1].enum[0]: freeBusyReader
paths./users/me/calendarList/watch.post.parameters[1].enum[1]: owner
paths./users/me/calendarList/watch.post.parameters[1].enum[2]: reader
paths./users/me/calendarList/watch.post.parameters[1].enum[3]: writer
paths./users/me/calendarList/watch.post.parameters[1].in: query
paths./users/me/calendarList/watch.post.parameters[1].name: minAccessRole
paths./users/me/calendarList/watch.post.parameters[1].type: string
paths./users/me/calendarList/watch.post.parameters[2].description: Token specifying
  which result page to return. Optional.
paths./users/me/calendarList/watch.post.parameters[2].in: query
paths./users/me/calendarList/watch.post.parameters[2].name: pageToken
paths./users/me/calendarList/watch.post.parameters[2].type: string
paths./users/me/calendarList/watch.post.parameters[3].description: Whether to include
  deleted calendar list entries in the result. Optional. The default is False.
paths./users/me/calendarList/watch.post.parameters[3].in: query
paths./users/me/calendarList/watch.post.parameters[3].name: showDeleted
paths./users/me/calendarList/watch.post.parameters[3].type: boolean
paths./users/me/calendarList/watch.post.parameters[4].description: Whether to show
  hidden entries. Optional. The default is False.
paths./users/me/calendarList/watch.post.parameters[4].in: query
paths./users/me/calendarList/watch.post.parameters[4].name: showHidden
paths./users/me/calendarList/watch.post.parameters[4].type: boolean
paths./users/me/calendarList/watch.post.parameters[5].description: |-
  Token obtained from the nextSyncToken field returned on the last page of results from the previous list request. It makes the result of this list request contain only entries that have changed since then. If only read-only fields such as calendar properties or ACLs have changed, the entry won't be returned. All entries deleted and hidden since the previous list request will always be in the result set and it is not allowed to set showDeleted neither showHidden to False.
  To ensure client state consistency minAccessRole query parameter cannot be specified together with nextSyncToken.
  If the syncToken expires, the server will respond with a 410 GONE response code and the client should clear its storage and perform a full synchronization without any syncToken.
  Learn more about incremental synchronization.
  Optional. The default is to return all entries.
paths./users/me/calendarList/watch.post.parameters[5].in: query
paths./users/me/calendarList/watch.post.parameters[5].name: syncToken
paths./users/me/calendarList/watch.post.parameters[5].type: string
paths./users/me/calendarList/watch.post.parameters[6].in: body
paths./users/me/calendarList/watch.post.parameters[6].name: resource
paths./users/me/calendarList/watch.post.parameters[6].schema.$ref: '#/definitions/Channel'
paths./users/me/calendarList/watch.post.responses.200.description: Successful response
paths./users/me/calendarList/watch.post.responses.200.schema.$ref: '#/definitions/Channel'
paths./users/me/calendarList/watch.post.security.length: 2
paths./users/me/calendarList/watch.post.security[0].Oauth2.length: 1
paths./users/me/calendarList/watch.post.security[0].Oauth2[0]: https://www.googleapis.com/auth/calendar
paths./users/me/calendarList/watch.post.security[1].Oauth2.length: 1
paths./users/me/calendarList/watch.post.security[1].Oauth2[0]: https://www.googleapis.com/auth/calendar.readonly
paths./users/me/calendarList/watch.post.tags.length: 1
paths./users/me/calendarList/watch.post.tags[0]: calendarList
paths./users/me/settings.get.description: Returns all user settings for the authenticated
  user.
paths./users/me/settings.get.operationId: calendar.settings.list
paths./users/me/settings.get.parameters.length: 3
paths./users/me/settings.get.parameters[0].description: Maximum number of entries
  returned on one result page. By default the value is 100 entries. The page size
  can never be larger than 250 entries. Optional.
paths./users/me/settings.get.parameters[0].in: query
paths./users/me/settings.get.parameters[0].minimum: 1
paths./users/me/settings.get.parameters[0].name: maxResults
paths./users/me/settings.get.parameters[0].type: integer
paths./users/me/settings.get.parameters[1].description: Token specifying which result
  page to return. Optional.
paths./users/me/settings.get.parameters[1].in: query
paths./users/me/settings.get.parameters[1].name: pageToken
paths./users/me/settings.get.parameters[1].type: string
paths./users/me/settings.get.parameters[2].description: |-
  Token obtained from the nextSyncToken field returned on the last page of results from the previous list request. It makes the result of this list request contain only entries that have changed since then.
  If the syncToken expires, the server will respond with a 410 GONE response code and the client should clear its storage and perform a full synchronization without any syncToken.
  Learn more about incremental synchronization.
  Optional. The default is to return all entries.
paths./users/me/settings.get.parameters[2].in: query
paths./users/me/settings.get.parameters[2].name: syncToken
paths./users/me/settings.get.parameters[2].type: string
paths./users/me/settings.get.responses.200.description: Successful response
paths./users/me/settings.get.responses.200.schema.$ref: '#/definitions/Settings'
paths./users/me/settings.get.security.length: 2
paths./users/me/settings.get.security[0].Oauth2.length: 1
paths./users/me/settings.get.security[0].Oauth2[0]: https://www.googleapis.com/auth/calendar
paths./users/me/settings.get.security[1].Oauth2.length: 1
paths./users/me/settings.get.security[1].Oauth2[0]: https://www.googleapis.com/auth/calendar.readonly
paths./users/me/settings.get.tags.length: 1
paths./users/me/settings.get.tags[0]: settings
paths./users/me/settings.parameters.length: 7
paths./users/me/settings.parameters[0].$ref: '#/parameters/alt'
paths./users/me/settings.parameters[1].$ref: '#/parameters/fields'
paths./users/me/settings.parameters[2].$ref: '#/parameters/key'
paths./users/me/settings.parameters[3].$ref: '#/parameters/oauth_token'
paths./users/me/settings.parameters[4].$ref: '#/parameters/prettyPrint'
paths./users/me/settings.parameters[5].$ref: '#/parameters/quotaUser'
paths./users/me/settings.parameters[6].$ref: '#/parameters/userIp'
paths./users/me/settings/{setting}.get.description: Returns a single user setting.
paths./users/me/settings/{setting}.get.operationId: calendar.settings.get
paths./users/me/settings/{setting}.get.parameters.length: 1
paths./users/me/settings/{setting}.get.parameters[0].description: The id of the user
  setting.
paths./users/me/settings/{setting}.get.parameters[0].in: path
paths./users/me/settings/{setting}.get.parameters[0].name: setting
paths./users/me/settings/{setting}.get.parameters[0].required: true
paths./users/me/settings/{setting}.get.parameters[0].type: string
paths./users/me/settings/{setting}.get.responses.200.description: Successful response
paths./users/me/settings/{setting}.get.responses.200.schema.$ref: '#/definitions/Setting'
paths./users/me/settings/{setting}.get.security.length: 2
paths./users/me/settings/{setting}.get.security[0].Oauth2.length: 1
paths./users/me/settings/{setting}.get.security[0].Oauth2[0]: https://www.googleapis.com/auth/calendar
paths./users/me/settings/{setting}.get.security[1].Oauth2.length: 1
paths./users/me/settings/{setting}.get.security[1].Oauth2[0]: https://www.googleapis.com/auth/calendar.readonly
paths./users/me/settings/{setting}.get.tags.length: 1
paths./users/me/settings/{setting}.get.tags[0]: settings
paths./users/me/settings/{setting}.parameters.length: 7
paths./users/me/settings/{setting}.parameters[0].$ref: '#/parameters/alt'
paths./users/me/settings/{setting}.parameters[1].$ref: '#/parameters/fields'
paths./users/me/settings/{setting}.parameters[2].$ref: '#/parameters/key'
paths./users/me/settings/{setting}.parameters[3].$ref: '#/parameters/oauth_token'
paths./users/me/settings/{setting}.parameters[4].$ref: '#/parameters/prettyPrint'
paths./users/me/settings/{setting}.parameters[5].$ref: '#/parameters/quotaUser'
paths./users/me/settings/{setting}.parameters[6].$ref: '#/parameters/userIp'
paths./users/me/settings/watch.parameters.length: 7
paths./users/me/settings/watch.parameters[0].$ref: '#/parameters/alt'
paths./users/me/settings/watch.parameters[1].$ref: '#/parameters/fields'
paths./users/me/settings/watch.parameters[2].$ref: '#/parameters/key'
paths./users/me/settings/watch.parameters[3].$ref: '#/parameters/oauth_token'
paths./users/me/settings/watch.parameters[4].$ref: '#/parameters/prettyPrint'
paths./users/me/settings/watch.parameters[5].$ref: '#/parameters/quotaUser'
paths./users/me/settings/watch.parameters[6].$ref: '#/parameters/userIp'
paths./users/me/settings/watch.post.description: Watch for changes to Settings resources.
paths./users/me/settings/watch.post.operationId: calendar.settings.watch
paths./users/me/settings/watch.post.parameters.length: 4
paths./users/me/settings/watch.post.parameters[0].description: Maximum number of entries
  returned on one result page. By default the value is 100 entries. The page size
  can never be larger than 250 entries. Optional.
paths./users/me/settings/watch.post.parameters[0].in: query
paths./users/me/settings/watch.post.parameters[0].minimum: 1
paths./users/me/settings/watch.post.parameters[0].name: maxResults
paths./users/me/settings/watch.post.parameters[0].type: integer
paths./users/me/settings/watch.post.parameters[1].description: Token specifying which
  result page to return. Optional.
paths./users/me/settings/watch.post.parameters[1].in: query
paths./users/me/settings/watch.post.parameters[1].name: pageToken
paths./users/me/settings/watch.post.parameters[1].type: string
paths./users/me/settings/watch.post.parameters[2].description: |-
  Token obtained from the nextSyncToken field returned on the last page of results from the previous list request. It makes the result of this list request contain only entries that have changed since then.
  If the syncToken expires, the server will respond with a 410 GONE response code and the client should clear its storage and perform a full synchronization without any syncToken.
  Learn more about incremental synchronization.
  Optional. The default is to return all entries.
paths./users/me/settings/watch.post.parameters[2].in: query
paths./users/me/settings/watch.post.parameters[2].name: syncToken
paths./users/me/settings/watch.post.parameters[2].type: string
paths./users/me/settings/watch.post.parameters[3].in: body
paths./users/me/settings/watch.post.parameters[3].name: resource
paths./users/me/settings/watch.post.parameters[3].schema.$ref: '#/definitions/Channel'
paths./users/me/settings/watch.post.responses.200.description: Successful response
paths./users/me/settings/watch.post.responses.200.schema.$ref: '#/definitions/Channel'
paths./users/me/settings/watch.post.security.length: 2
paths./users/me/settings/watch.post.security[0].Oauth2.length: 1
paths./users/me/settings/watch.post.security[0].Oauth2[0]: https://www.googleapis.com/auth/calendar
paths./users/me/settings/watch.post.security[1].Oauth2.length: 1
paths./users/me/settings/watch.post.security[1].Oauth2[0]: https://www.googleapis.com/auth/calendar.readonly
paths./users/me/settings/watch.post.tags.length: 1
paths./users/me/settings/watch.post.tags[0]: settings
schemes.length: 1
schemes[0]: https
securityDefinitions.Oauth2.authorizationUrl: https://accounts.google.com/o/oauth2/auth
securityDefinitions.Oauth2.description: Oauth 2.0 authentication
securityDefinitions.Oauth2.flow: implicit
securityDefinitions.Oauth2.scopes.https://www.googleapis.com/auth/calendar: Manage
  your calendars
securityDefinitions.Oauth2.scopes.https://www.googleapis.com/auth/calendar.readonly: View
  your calendars
securityDefinitions.Oauth2.type: oauth2
swagger: "2.0"
tags.length: 8
tags[0].name: acl
tags[1].name: calendarList
tags[2].name: calendars
tags[3].name: channels
tags[4].name: colors
tags[5].name: events
tags[6].name: freebusy
tags[7].name: settings
