syntax = "proto3";

import "google/protobuf/empty.proto";

import "google/api/annotations.proto";

package googleanalytics;

message GetDataGaRequest {
    alt alt = 1;
    // A comma-separated list of Analytics dimensions. E.g., 'ga:browser,ga:city'.
    string dimensions = 2;
    // End date for fetching Analytics data. Request can should specify an end date formatted as YYYY-MM-DD, or as a relative date (e.g., today, yesterday, or 7daysAgo). The default value is yesterday.
    string end_date = 3;
    string fields = 4;
    // A comma-separated list of dimension or metric filters to be applied to Analytics data.
    string filters = 5;
    // Unique table ID for retrieving Analytics data. Table ID is of the form ga:XXXX, where XXXX is the Analytics view (profile) ID.
    string ids = 6;
    // The response will include empty rows if this parameter is set to true, the default is true
    bool include_empty_rows = 7;
    string key = 8;
    // The maximum number of entries to include in this feed.
    int32 max_results = 9;
    // A comma-separated list of Analytics metrics. E.g., 'ga:sessions,ga:pageviews'. At least one metric must be specified.
    string metrics = 10;
    string oauth_token = 11;
    // The selected format for the response. Default format is JSON.
    enum GetDataGaRequest_Output {
        GETDATAGAREQUEST_OUTPUT_DATATABLE = 0;
        GETDATAGAREQUEST_OUTPUT_JSON = 1;
    }
    GetDataGaRequest_Output output = 12;
    boolean prettyPrint = 13;
    string quotaUser = 14;
    // The desired sampling level.
    enum GetDataGaRequest_SamplingLevel {
        GETDATAGAREQUEST_SAMPLINGLEVEL_DEFAULT = 0;
        GETDATAGAREQUEST_SAMPLINGLEVEL_FASTER = 1;
        GETDATAGAREQUEST_SAMPLINGLEVEL_HIGHER_PRECISION = 2;
    }
    GetDataGaRequest_SamplingLevel samplingLevel = 15;
    // An Analytics segment to be applied to data.
    string segment = 16;
    // A comma-separated list of dimensions or metrics that determine the sort order for Analytics data.
    string sort = 17;
    // Start date for fetching Analytics data. Requests can specify a start date formatted as YYYY-MM-DD, or as a relative date (e.g., today, yesterday, or 7daysAgo). The default value is 7daysAgo.
    string start_date = 18;
    // An index of the first entity to retrieve. Use this parameter as a pagination mechanism along with the max-results parameter.
    int32 start_index = 19;
    string userIp = 20;
}

message GetDataMcfRequest {
    alt alt = 1;
    // A comma-separated list of Multi-Channel Funnels dimensions. E.g., 'mcf:source,mcf:medium'.
    string dimensions = 2;
    // End date for fetching Analytics data. Requests can specify a start date formatted as YYYY-MM-DD, or as a relative date (e.g., today, yesterday, or 7daysAgo). The default value is 7daysAgo.
    string end_date = 3;
    string fields = 4;
    // A comma-separated list of dimension or metric filters to be applied to the Analytics data.
    string filters = 5;
    // Unique table ID for retrieving Analytics data. Table ID is of the form ga:XXXX, where XXXX is the Analytics view (profile) ID.
    string ids = 6;
    string key = 7;
    // The maximum number of entries to include in this feed.
    int32 max_results = 8;
    // A comma-separated list of Multi-Channel Funnels metrics. E.g., 'mcf:totalConversions,mcf:totalConversionValue'. At least one metric must be specified.
    string metrics = 9;
    string oauth_token = 10;
    boolean prettyPrint = 11;
    string quotaUser = 12;
    // The desired sampling level.
    enum GetDataMcfRequest_SamplingLevel {
        GETDATAMCFREQUEST_SAMPLINGLEVEL_DEFAULT = 0;
        GETDATAMCFREQUEST_SAMPLINGLEVEL_FASTER = 1;
        GETDATAMCFREQUEST_SAMPLINGLEVEL_HIGHER_PRECISION = 2;
    }
    GetDataMcfRequest_SamplingLevel samplingLevel = 13;
    // A comma-separated list of dimensions or metrics that determine the sort order for the Analytics data.
    string sort = 14;
    // Start date for fetching Analytics data. Requests can specify a start date formatted as YYYY-MM-DD, or as a relative date (e.g., today, yesterday, or 7daysAgo). The default value is 7daysAgo.
    string start_date = 15;
    // An index of the first entity to retrieve. Use this parameter as a pagination mechanism along with the max-results parameter.
    int32 start_index = 16;
    string userIp = 17;
}

message GetDataRealtimeRequest {
    alt alt = 1;
    // A comma-separated list of real time dimensions. E.g., 'rt:medium,rt:city'.
    string dimensions = 2;
    string fields = 3;
    // A comma-separated list of dimension or metric filters to be applied to real time data.
    string filters = 4;
    // Unique table ID for retrieving real time data. Table ID is of the form ga:XXXX, where XXXX is the Analytics view (profile) ID.
    string ids = 5;
    string key = 6;
    // The maximum number of entries to include in this feed.
    int32 max_results = 7;
    // A comma-separated list of real time metrics. E.g., 'rt:activeUsers'. At least one metric must be specified.
    string metrics = 8;
    string oauth_token = 9;
    boolean prettyPrint = 10;
    string quotaUser = 11;
    // A comma-separated list of dimensions or metrics that determine the sort order for real time data.
    string sort = 12;
    string userIp = 13;
}

message GetManagementAccountSummariesRequest {
    alt alt = 1;
    string fields = 2;
    string key = 3;
    // The maximum number of account summaries to include in this response, where the largest acceptable value is 1000.
    int32 max_results = 4;
    string oauth_token = 5;
    boolean prettyPrint = 6;
    string quotaUser = 7;
    // An index of the first entity to retrieve. Use this parameter as a pagination mechanism along with the max-results parameter.
    int32 start_index = 8;
    string userIp = 9;
}

message GetManagementAccountsRequest {
    alt alt = 1;
    string fields = 2;
    string key = 3;
    // The maximum number of accounts to include in this response.
    int32 max_results = 4;
    string oauth_token = 5;
    boolean prettyPrint = 6;
    string quotaUser = 7;
    // An index of the first account to retrieve. Use this parameter as a pagination mechanism along with the max-results parameter.
    int32 start_index = 8;
    string userIp = 9;
}

message GetManagementAccountsAccountIdEntityUserLinksRequest {
    // Account ID to retrieve the user links for.
    string accountId = 1;
    alt alt = 2;
    string fields = 3;
    string key = 4;
    // The maximum number of account-user links to include in this response.
    int32 max_results = 5;
    string oauth_token = 6;
    boolean prettyPrint = 7;
    string quotaUser = 8;
    // An index of the first account-user link to retrieve. Use this parameter as a pagination mechanism along with the max-results parameter.
    int32 start_index = 9;
    string userIp = 10;
}

message PostManagementAccountsAccountIdEntityUserLinksRequest {
    // Account ID to create the user link for.
    string accountId = 1;
    alt alt = 2;
    EntityUserLink body = 3;
    string fields = 4;
    string key = 5;
    string oauth_token = 6;
    boolean prettyPrint = 7;
    string quotaUser = 8;
    string userIp = 9;
}

message PutManagementAccountsAccountIdEntityUserLinksLinkIdRequest {
    // Account ID to update the account-user link for.
    string accountId = 1;
    alt alt = 2;
    EntityUserLink body = 3;
    string fields = 4;
    string key = 5;
    // Link ID to update the account-user link for.
    string linkId = 6;
    string oauth_token = 7;
    boolean prettyPrint = 8;
    string quotaUser = 9;
    string userIp = 10;
}

message DeleteManagementAccountsAccountIdEntityUserLinksLinkIdRequest {
    // Account ID to delete the user link for.
    string accountId = 1;
    alt alt = 2;
    string fields = 3;
    string key = 4;
    // Link ID to delete the user link for.
    string linkId = 5;
    string oauth_token = 6;
    boolean prettyPrint = 7;
    string quotaUser = 8;
    string userIp = 9;
}

message GetManagementAccountsAccountIdFiltersRequest {
    // Account ID to retrieve filters for.
    string accountId = 1;
    alt alt = 2;
    string fields = 3;
    string key = 4;
    // The maximum number of filters to include in this response.
    int32 max_results = 5;
    string oauth_token = 6;
    boolean prettyPrint = 7;
    string quotaUser = 8;
    // An index of the first entity to retrieve. Use this parameter as a pagination mechanism along with the max-results parameter.
    int32 start_index = 9;
    string userIp = 10;
}

message PostManagementAccountsAccountIdFiltersRequest {
    // Account ID to create filter for.
    string accountId = 1;
    alt alt = 2;
    Filter body = 3;
    string fields = 4;
    string key = 5;
    string oauth_token = 6;
    boolean prettyPrint = 7;
    string quotaUser = 8;
    string userIp = 9;
}

message GetManagementAccountsAccountIdFiltersFilterIdRequest {
    // Account ID to retrieve filters for.
    string accountId = 1;
    alt alt = 2;
    string fields = 3;
    // Filter ID to retrieve filters for.
    string filterId = 4;
    string key = 5;
    string oauth_token = 6;
    boolean prettyPrint = 7;
    string quotaUser = 8;
    string userIp = 9;
}

message PutManagementAccountsAccountIdFiltersFilterIdRequest {
    // Account ID to which the filter belongs.
    string accountId = 1;
    alt alt = 2;
    Filter body = 3;
    string fields = 4;
    // ID of the filter to be updated.
    string filterId = 5;
    string key = 6;
    string oauth_token = 7;
    boolean prettyPrint = 8;
    string quotaUser = 9;
    string userIp = 10;
}

message DeleteManagementAccountsAccountIdFiltersFilterIdRequest {
    // Account ID to delete the filter for.
    string accountId = 1;
    alt alt = 2;
    string fields = 3;
    // ID of the filter to be deleted.
    string filterId = 4;
    string key = 5;
    string oauth_token = 6;
    boolean prettyPrint = 7;
    string quotaUser = 8;
    string userIp = 9;
}

message GetManagementAccountsAccountIdWebpropertiesRequest {
    // Account ID to retrieve web properties for. Can either be a specific account ID or '~all', which refers to all the accounts that user has access to.
    string accountId = 1;
    alt alt = 2;
    string fields = 3;
    string key = 4;
    // The maximum number of web properties to include in this response.
    int32 max_results = 5;
    string oauth_token = 6;
    boolean prettyPrint = 7;
    string quotaUser = 8;
    // An index of the first entity to retrieve. Use this parameter as a pagination mechanism along with the max-results parameter.
    int32 start_index = 9;
    string userIp = 10;
}

message PostManagementAccountsAccountIdWebpropertiesRequest {
    // Account ID to create the web property for.
    string accountId = 1;
    alt alt = 2;
    Webproperty body = 3;
    string fields = 4;
    string key = 5;
    string oauth_token = 6;
    boolean prettyPrint = 7;
    string quotaUser = 8;
    string userIp = 9;
}

message GetManagementAccountsAccountIdWebpropertiesWebPropertyIdRequest {
    // Account ID to retrieve the web property for.
    string accountId = 1;
    alt alt = 2;
    string fields = 3;
    string key = 4;
    string oauth_token = 5;
    boolean prettyPrint = 6;
    string quotaUser = 7;
    string userIp = 8;
    // ID to retrieve the web property for.
    string webPropertyId = 9;
}

message PutManagementAccountsAccountIdWebpropertiesWebPropertyIdRequest {
    // Account ID to which the web property belongs
    string accountId = 1;
    alt alt = 2;
    Webproperty body = 3;
    string fields = 4;
    string key = 5;
    string oauth_token = 6;
    boolean prettyPrint = 7;
    string quotaUser = 8;
    string userIp = 9;
    // Web property ID
    string webPropertyId = 10;
}

message GetManagementAccountsAccountIdWebpropertiesWebPropertyIdCustomDataSourcesRequest {
    // Account Id for the custom data sources to retrieve.
    string accountId = 1;
    alt alt = 2;
    string fields = 3;
    string key = 4;
    // The maximum number of custom data sources to include in this response.
    int32 max_results = 5;
    string oauth_token = 6;
    boolean prettyPrint = 7;
    string quotaUser = 8;
    // A 1-based index of the first custom data source to retrieve. Use this parameter as a pagination mechanism along with the max-results parameter.
    int32 start_index = 9;
    string userIp = 10;
    // Web property Id for the custom data sources to retrieve.
    string webPropertyId = 11;
}

message PostManagementAccountsAccountIdWebpropertiesWebPropertyIdCustomDataSourcesCustomDataSourceIdDeleteUploadDataRequest {
    // Account Id for the uploads to be deleted.
    string accountId = 1;
    alt alt = 2;
    AnalyticsDataimportDeleteUploadDataRequest body = 3;
    // Custom data source Id for the uploads to be deleted.
    string customDataSourceId = 4;
    string fields = 5;
    string key = 6;
    string oauth_token = 7;
    boolean prettyPrint = 8;
    string quotaUser = 9;
    string userIp = 10;
    // Web property Id for the uploads to be deleted.
    string webPropertyId = 11;
}

message GetManagementAccountsAccountIdWebpropertiesWebPropertyIdCustomDataSourcesCustomDataSourceIdUploadsRequest {
    // Account Id for the uploads to retrieve.
    string accountId = 1;
    alt alt = 2;
    // Custom data source Id for uploads to retrieve.
    string customDataSourceId = 3;
    string fields = 4;
    string key = 5;
    // The maximum number of uploads to include in this response.
    int32 max_results = 6;
    string oauth_token = 7;
    boolean prettyPrint = 8;
    string quotaUser = 9;
    // A 1-based index of the first upload to retrieve. Use this parameter as a pagination mechanism along with the max-results parameter.
    int32 start_index = 10;
    string userIp = 11;
    // Web property Id for the uploads to retrieve.
    string webPropertyId = 12;
}

message PostManagementAccountsAccountIdWebpropertiesWebPropertyIdCustomDataSourcesCustomDataSourceIdUploadsRequest {
    // Account Id associated with the upload.
    string accountId = 1;
    alt alt = 2;
    // Custom data source Id to which the data being uploaded belongs.
    string customDataSourceId = 3;
    string fields = 4;
    string key = 5;
    string oauth_token = 6;
    boolean prettyPrint = 7;
    string quotaUser = 8;
    string userIp = 9;
    // Web property UA-string associated with the upload.
    string webPropertyId = 10;
}

message GetManagementAccountsAccountIdWebpropertiesWebPropertyIdCustomDataSourcesCustomDataSourceIdUploadsUploadIdRequest {
    // Account Id for the upload to retrieve.
    string accountId = 1;
    alt alt = 2;
    // Custom data source Id for upload to retrieve.
    string customDataSourceId = 3;
    string fields = 4;
    string key = 5;
    string oauth_token = 6;
    boolean prettyPrint = 7;
    string quotaUser = 8;
    // Upload Id to retrieve.
    string uploadId = 9;
    string userIp = 10;
    // Web property Id for the upload to retrieve.
    string webPropertyId = 11;
}

message GetManagementAccountsAccountIdWebpropertiesWebPropertyIdCustomDimensionsRequest {
    // Account ID for the custom dimensions to retrieve.
    string accountId = 1;
    alt alt = 2;
    string fields = 3;
    string key = 4;
    // The maximum number of custom dimensions to include in this response.
    int32 max_results = 5;
    string oauth_token = 6;
    boolean prettyPrint = 7;
    string quotaUser = 8;
    // An index of the first entity to retrieve. Use this parameter as a pagination mechanism along with the max-results parameter.
    int32 start_index = 9;
    string userIp = 10;
    // Web property ID for the custom dimensions to retrieve.
    string webPropertyId = 11;
}

message PostManagementAccountsAccountIdWebpropertiesWebPropertyIdCustomDimensionsRequest {
    // Account ID for the custom dimension to create.
    string accountId = 1;
    alt alt = 2;
    CustomDimension body = 3;
    string fields = 4;
    string key = 5;
    string oauth_token = 6;
    boolean prettyPrint = 7;
    string quotaUser = 8;
    string userIp = 9;
    // Web property ID for the custom dimension to create.
    string webPropertyId = 10;
}

message GetManagementAccountsAccountIdWebpropertiesWebPropertyIdCustomDimensionsCustomDimensionIdRequest {
    // Account ID for the custom dimension to retrieve.
    string accountId = 1;
    alt alt = 2;
    // The ID of the custom dimension to retrieve.
    string customDimensionId = 3;
    string fields = 4;
    string key = 5;
    string oauth_token = 6;
    boolean prettyPrint = 7;
    string quotaUser = 8;
    string userIp = 9;
    // Web property ID for the custom dimension to retrieve.
    string webPropertyId = 10;
}

message PutManagementAccountsAccountIdWebpropertiesWebPropertyIdCustomDimensionsCustomDimensionIdRequest {
    // Account ID for the custom dimension to update.
    string accountId = 1;
    alt alt = 2;
    CustomDimension body = 3;
    // Custom dimension ID for the custom dimension to update.
    string customDimensionId = 4;
    string fields = 5;
    // Force the update and ignore any warnings related to the custom dimension being linked to a custom data source / data set.
    bool ignoreCustomDataSourceLinks = 6;
    string key = 7;
    string oauth_token = 8;
    boolean prettyPrint = 9;
    string quotaUser = 10;
    string userIp = 11;
    // Web property ID for the custom dimension to update.
    string webPropertyId = 12;
}

message GetManagementAccountsAccountIdWebpropertiesWebPropertyIdCustomMetricsRequest {
    // Account ID for the custom metrics to retrieve.
    string accountId = 1;
    alt alt = 2;
    string fields = 3;
    string key = 4;
    // The maximum number of custom metrics to include in this response.
    int32 max_results = 5;
    string oauth_token = 6;
    boolean prettyPrint = 7;
    string quotaUser = 8;
    // An index of the first entity to retrieve. Use this parameter as a pagination mechanism along with the max-results parameter.
    int32 start_index = 9;
    string userIp = 10;
    // Web property ID for the custom metrics to retrieve.
    string webPropertyId = 11;
}

message PostManagementAccountsAccountIdWebpropertiesWebPropertyIdCustomMetricsRequest {
    // Account ID for the custom metric to create.
    string accountId = 1;
    alt alt = 2;
    CustomMetric body = 3;
    string fields = 4;
    string key = 5;
    string oauth_token = 6;
    boolean prettyPrint = 7;
    string quotaUser = 8;
    string userIp = 9;
    // Web property ID for the custom dimension to create.
    string webPropertyId = 10;
}

message GetManagementAccountsAccountIdWebpropertiesWebPropertyIdCustomMetricsCustomMetricIdRequest {
    // Account ID for the custom metric to retrieve.
    string accountId = 1;
    alt alt = 2;
    // The ID of the custom metric to retrieve.
    string customMetricId = 3;
    string fields = 4;
    string key = 5;
    string oauth_token = 6;
    boolean prettyPrint = 7;
    string quotaUser = 8;
    string userIp = 9;
    // Web property ID for the custom metric to retrieve.
    string webPropertyId = 10;
}

message PutManagementAccountsAccountIdWebpropertiesWebPropertyIdCustomMetricsCustomMetricIdRequest {
    // Account ID for the custom metric to update.
    string accountId = 1;
    alt alt = 2;
    CustomMetric body = 3;
    // Custom metric ID for the custom metric to update.
    string customMetricId = 4;
    string fields = 5;
    // Force the update and ignore any warnings related to the custom metric being linked to a custom data source / data set.
    bool ignoreCustomDataSourceLinks = 6;
    string key = 7;
    string oauth_token = 8;
    boolean prettyPrint = 9;
    string quotaUser = 10;
    string userIp = 11;
    // Web property ID for the custom metric to update.
    string webPropertyId = 12;
}

message GetManagementAccountsAccountIdWebpropertiesWebPropertyIdEntityAdWordsLinksRequest {
    // ID of the account which the given web property belongs to.
    string accountId = 1;
    alt alt = 2;
    string fields = 3;
    string key = 4;
    // The maximum number of webProperty-AdWords links to include in this response.
    int32 max_results = 5;
    string oauth_token = 6;
    boolean prettyPrint = 7;
    string quotaUser = 8;
    // An index of the first webProperty-AdWords link to retrieve. Use this parameter as a pagination mechanism along with the max-results parameter.
    int32 start_index = 9;
    string userIp = 10;
    // Web property ID to retrieve the AdWords links for.
    string webPropertyId = 11;
}

message PostManagementAccountsAccountIdWebpropertiesWebPropertyIdEntityAdWordsLinksRequest {
    // ID of the Google Analytics account to create the link for.
    string accountId = 1;
    alt alt = 2;
    EntityAdWordsLink body = 3;
    string fields = 4;
    string key = 5;
    string oauth_token = 6;
    boolean prettyPrint = 7;
    string quotaUser = 8;
    string userIp = 9;
    // Web property ID to create the link for.
    string webPropertyId = 10;
}

message GetManagementAccountsAccountIdWebpropertiesWebPropertyIdEntityAdWordsLinksWebPropertyAdWordsLinkIdRequest {
    // ID of the account which the given web property belongs to.
    string accountId = 1;
    alt alt = 2;
    string fields = 3;
    string key = 4;
    string oauth_token = 5;
    boolean prettyPrint = 6;
    string quotaUser = 7;
    string userIp = 8;
    // Web property-AdWords link ID.
    string webPropertyAdWordsLinkId = 9;
    // Web property ID to retrieve the AdWords link for.
    string webPropertyId = 10;
}

message PutManagementAccountsAccountIdWebpropertiesWebPropertyIdEntityAdWordsLinksWebPropertyAdWordsLinkIdRequest {
    // ID of the account which the given web property belongs to.
    string accountId = 1;
    alt alt = 2;
    EntityAdWordsLink body = 3;
    string fields = 4;
    string key = 5;
    string oauth_token = 6;
    boolean prettyPrint = 7;
    string quotaUser = 8;
    string userIp = 9;
    // Web property-AdWords link ID.
    string webPropertyAdWordsLinkId = 10;
    // Web property ID to retrieve the AdWords link for.
    string webPropertyId = 11;
}

message DeleteManagementAccountsAccountIdWebpropertiesWebPropertyIdEntityAdWordsLinksWebPropertyAdWordsLinkIdRequest {
    // ID of the account which the given web property belongs to.
    string accountId = 1;
    alt alt = 2;
    string fields = 3;
    string key = 4;
    string oauth_token = 5;
    boolean prettyPrint = 6;
    string quotaUser = 7;
    string userIp = 8;
    // Web property AdWords link ID.
    string webPropertyAdWordsLinkId = 9;
    // Web property ID to delete the AdWords link for.
    string webPropertyId = 10;
}

message GetManagementAccountsAccountIdWebpropertiesWebPropertyIdEntityUserLinksRequest {
    // Account ID which the given web property belongs to.
    string accountId = 1;
    alt alt = 2;
    string fields = 3;
    string key = 4;
    // The maximum number of webProperty-user Links to include in this response.
    int32 max_results = 5;
    string oauth_token = 6;
    boolean prettyPrint = 7;
    string quotaUser = 8;
    // An index of the first webProperty-user link to retrieve. Use this parameter as a pagination mechanism along with the max-results parameter.
    int32 start_index = 9;
    string userIp = 10;
    // Web Property ID for the webProperty-user links to retrieve. Can either be a specific web property ID or '~all', which refers to all the web properties that user has access to.
    string webPropertyId = 11;
}

message PostManagementAccountsAccountIdWebpropertiesWebPropertyIdEntityUserLinksRequest {
    // Account ID to create the user link for.
    string accountId = 1;
    alt alt = 2;
    EntityUserLink body = 3;
    string fields = 4;
    string key = 5;
    string oauth_token = 6;
    boolean prettyPrint = 7;
    string quotaUser = 8;
    string userIp = 9;
    // Web Property ID to create the user link for.
    string webPropertyId = 10;
}

message PutManagementAccountsAccountIdWebpropertiesWebPropertyIdEntityUserLinksLinkIdRequest {
    // Account ID to update the account-user link for.
    string accountId = 1;
    alt alt = 2;
    EntityUserLink body = 3;
    string fields = 4;
    string key = 5;
    // Link ID to update the account-user link for.
    string linkId = 6;
    string oauth_token = 7;
    boolean prettyPrint = 8;
    string quotaUser = 9;
    string userIp = 10;
    // Web property ID to update the account-user link for.
    string webPropertyId = 11;
}

message DeleteManagementAccountsAccountIdWebpropertiesWebPropertyIdEntityUserLinksLinkIdRequest {
    // Account ID to delete the user link for.
    string accountId = 1;
    alt alt = 2;
    string fields = 3;
    string key = 4;
    // Link ID to delete the user link for.
    string linkId = 5;
    string oauth_token = 6;
    boolean prettyPrint = 7;
    string quotaUser = 8;
    string userIp = 9;
    // Web Property ID to delete the user link for.
    string webPropertyId = 10;
}

message GetManagementAccountsAccountIdWebpropertiesWebPropertyIdProfilesRequest {
    // Account ID for the view (profiles) to retrieve. Can either be a specific account ID or '~all', which refers to all the accounts to which the user has access.
    string accountId = 1;
    alt alt = 2;
    string fields = 3;
    string key = 4;
    // The maximum number of views (profiles) to include in this response.
    int32 max_results = 5;
    string oauth_token = 6;
    boolean prettyPrint = 7;
    string quotaUser = 8;
    // An index of the first entity to retrieve. Use this parameter as a pagination mechanism along with the max-results parameter.
    int32 start_index = 9;
    string userIp = 10;
    // Web property ID for the views (profiles) to retrieve. Can either be a specific web property ID or '~all', which refers to all the web properties to which the user has access.
    string webPropertyId = 11;
}

message PostManagementAccountsAccountIdWebpropertiesWebPropertyIdProfilesRequest {
    // Account ID to create the view (profile) for.
    string accountId = 1;
    alt alt = 2;
    Profile body = 3;
    string fields = 4;
    string key = 5;
    string oauth_token = 6;
    boolean prettyPrint = 7;
    string quotaUser = 8;
    string userIp = 9;
    // Web property ID to create the view (profile) for.
    string webPropertyId = 10;
}

message GetManagementAccountsAccountIdWebpropertiesWebPropertyIdProfilesProfileIdRequest {
    // Account ID to retrieve the view (profile) for.
    string accountId = 1;
    alt alt = 2;
    string fields = 3;
    string key = 4;
    string oauth_token = 5;
    boolean prettyPrint = 6;
    // View (Profile) ID to retrieve the view (profile) for.
    string profileId = 7;
    string quotaUser = 8;
    string userIp = 9;
    // Web property ID to retrieve the view (profile) for.
    string webPropertyId = 10;
}

message PutManagementAccountsAccountIdWebpropertiesWebPropertyIdProfilesProfileIdRequest {
    // Account ID to which the view (profile) belongs
    string accountId = 1;
    alt alt = 2;
    Profile body = 3;
    string fields = 4;
    string key = 5;
    string oauth_token = 6;
    boolean prettyPrint = 7;
    // ID of the view (profile) to be updated.
    string profileId = 8;
    string quotaUser = 9;
    string userIp = 10;
    // Web property ID to which the view (profile) belongs
    string webPropertyId = 11;
}

message DeleteManagementAccountsAccountIdWebpropertiesWebPropertyIdProfilesProfileIdRequest {
    // Account ID to delete the view (profile) for.
    string accountId = 1;
    alt alt = 2;
    string fields = 3;
    string key = 4;
    string oauth_token = 5;
    boolean prettyPrint = 6;
    // ID of the view (profile) to be deleted.
    string profileId = 7;
    string quotaUser = 8;
    string userIp = 9;
    // Web property ID to delete the view (profile) for.
    string webPropertyId = 10;
}

message GetManagementAccountsAccountIdWebpropertiesWebPropertyIdProfilesProfileIdEntityUserLinksRequest {
    // Account ID which the given view (profile) belongs to.
    string accountId = 1;
    alt alt = 2;
    string fields = 3;
    string key = 4;
    // The maximum number of profile-user links to include in this response.
    int32 max_results = 5;
    string oauth_token = 6;
    boolean prettyPrint = 7;
    // View (Profile) ID to retrieve the profile-user links for. Can either be a specific profile ID or '~all', which refers to all the profiles that user has access to.
    string profileId = 8;
    string quotaUser = 9;
    // An index of the first profile-user link to retrieve. Use this parameter as a pagination mechanism along with the max-results parameter.
    int32 start_index = 10;
    string userIp = 11;
    // Web Property ID which the given view (profile) belongs to. Can either be a specific web property ID or '~all', which refers to all the web properties that user has access to.
    string webPropertyId = 12;
}

message PostManagementAccountsAccountIdWebpropertiesWebPropertyIdProfilesProfileIdEntityUserLinksRequest {
    // Account ID to create the user link for.
    string accountId = 1;
    alt alt = 2;
    EntityUserLink body = 3;
    string fields = 4;
    string key = 5;
    string oauth_token = 6;
    boolean prettyPrint = 7;
    // View (Profile) ID to create the user link for.
    string profileId = 8;
    string quotaUser = 9;
    string userIp = 10;
    // Web Property ID to create the user link for.
    string webPropertyId = 11;
}

message PutManagementAccountsAccountIdWebpropertiesWebPropertyIdProfilesProfileIdEntityUserLinksLinkIdRequest {
    // Account ID to update the user link for.
    string accountId = 1;
    alt alt = 2;
    EntityUserLink body = 3;
    string fields = 4;
    string key = 5;
    // Link ID to update the user link for.
    string linkId = 6;
    string oauth_token = 7;
    boolean prettyPrint = 8;
    // View (Profile ID) to update the user link for.
    string profileId = 9;
    string quotaUser = 10;
    string userIp = 11;
    // Web Property ID to update the user link for.
    string webPropertyId = 12;
}

message DeleteManagementAccountsAccountIdWebpropertiesWebPropertyIdProfilesProfileIdEntityUserLinksLinkIdRequest {
    // Account ID to delete the user link for.
    string accountId = 1;
    alt alt = 2;
    string fields = 3;
    string key = 4;
    // Link ID to delete the user link for.
    string linkId = 5;
    string oauth_token = 6;
    boolean prettyPrint = 7;
    // View (Profile) ID to delete the user link for.
    string profileId = 8;
    string quotaUser = 9;
    string userIp = 10;
    // Web Property ID to delete the user link for.
    string webPropertyId = 11;
}

message GetManagementAccountsAccountIdWebpropertiesWebPropertyIdProfilesProfileIdExperimentsRequest {
    // Account ID to retrieve experiments for.
    string accountId = 1;
    alt alt = 2;
    string fields = 3;
    string key = 4;
    // The maximum number of experiments to include in this response.
    int32 max_results = 5;
    string oauth_token = 6;
    boolean prettyPrint = 7;
    // View (Profile) ID to retrieve experiments for.
    string profileId = 8;
    string quotaUser = 9;
    // An index of the first experiment to retrieve. Use this parameter as a pagination mechanism along with the max-results parameter.
    int32 start_index = 10;
    string userIp = 11;
    // Web property ID to retrieve experiments for.
    string webPropertyId = 12;
}

message PostManagementAccountsAccountIdWebpropertiesWebPropertyIdProfilesProfileIdExperimentsRequest {
    // Account ID to create the experiment for.
    string accountId = 1;
    alt alt = 2;
    Experiment body = 3;
    string fields = 4;
    string key = 5;
    string oauth_token = 6;
    boolean prettyPrint = 7;
    // View (Profile) ID to create the experiment for.
    string profileId = 8;
    string quotaUser = 9;
    string userIp = 10;
    // Web property ID to create the experiment for.
    string webPropertyId = 11;
}

message GetManagementAccountsAccountIdWebpropertiesWebPropertyIdProfilesProfileIdExperimentsExperimentIdRequest {
    // Account ID to retrieve the experiment for.
    string accountId = 1;
    alt alt = 2;
    // Experiment ID to retrieve the experiment for.
    string experimentId = 3;
    string fields = 4;
    string key = 5;
    string oauth_token = 6;
    boolean prettyPrint = 7;
    // View (Profile) ID to retrieve the experiment for.
    string profileId = 8;
    string quotaUser = 9;
    string userIp = 10;
    // Web property ID to retrieve the experiment for.
    string webPropertyId = 11;
}

message PutManagementAccountsAccountIdWebpropertiesWebPropertyIdProfilesProfileIdExperimentsExperimentIdRequest {
    // Account ID of the experiment to update.
    string accountId = 1;
    alt alt = 2;
    Experiment body = 3;
    // Experiment ID of the experiment to update.
    string experimentId = 4;
    string fields = 5;
    string key = 6;
    string oauth_token = 7;
    boolean prettyPrint = 8;
    // View (Profile) ID of the experiment to update.
    string profileId = 9;
    string quotaUser = 10;
    string userIp = 11;
    // Web property ID of the experiment to update.
    string webPropertyId = 12;
}

message DeleteManagementAccountsAccountIdWebpropertiesWebPropertyIdProfilesProfileIdExperimentsExperimentIdRequest {
    // Account ID to which the experiment belongs
    string accountId = 1;
    alt alt = 2;
    // ID of the experiment to delete
    string experimentId = 3;
    string fields = 4;
    string key = 5;
    string oauth_token = 6;
    boolean prettyPrint = 7;
    // View (Profile) ID to which the experiment belongs
    string profileId = 8;
    string quotaUser = 9;
    string userIp = 10;
    // Web property ID to which the experiment belongs
    string webPropertyId = 11;
}

message GetManagementAccountsAccountIdWebpropertiesWebPropertyIdProfilesProfileIdGoalsRequest {
    // Account ID to retrieve goals for. Can either be a specific account ID or '~all', which refers to all the accounts that user has access to.
    string accountId = 1;
    alt alt = 2;
    string fields = 3;
    string key = 4;
    // The maximum number of goals to include in this response.
    int32 max_results = 5;
    string oauth_token = 6;
    boolean prettyPrint = 7;
    // View (Profile) ID to retrieve goals for. Can either be a specific view (profile) ID or '~all', which refers to all the views (profiles) that user has access to.
    string profileId = 8;
    string quotaUser = 9;
    // An index of the first goal to retrieve. Use this parameter as a pagination mechanism along with the max-results parameter.
    int32 start_index = 10;
    string userIp = 11;
    // Web property ID to retrieve goals for. Can either be a specific web property ID or '~all', which refers to all the web properties that user has access to.
    string webPropertyId = 12;
}

message PostManagementAccountsAccountIdWebpropertiesWebPropertyIdProfilesProfileIdGoalsRequest {
    // Account ID to create the goal for.
    string accountId = 1;
    alt alt = 2;
    Goal body = 3;
    string fields = 4;
    string key = 5;
    string oauth_token = 6;
    boolean prettyPrint = 7;
    // View (Profile) ID to create the goal for.
    string profileId = 8;
    string quotaUser = 9;
    string userIp = 10;
    // Web property ID to create the goal for.
    string webPropertyId = 11;
}

message GetManagementAccountsAccountIdWebpropertiesWebPropertyIdProfilesProfileIdGoalsGoalIdRequest {
    // Account ID to retrieve the goal for.
    string accountId = 1;
    alt alt = 2;
    string fields = 3;
    // Goal ID to retrieve the goal for.
    string goalId = 4;
    string key = 5;
    string oauth_token = 6;
    boolean prettyPrint = 7;
    // View (Profile) ID to retrieve the goal for.
    string profileId = 8;
    string quotaUser = 9;
    string userIp = 10;
    // Web property ID to retrieve the goal for.
    string webPropertyId = 11;
}

message PutManagementAccountsAccountIdWebpropertiesWebPropertyIdProfilesProfileIdGoalsGoalIdRequest {
    // Account ID to update the goal.
    string accountId = 1;
    alt alt = 2;
    Goal body = 3;
    string fields = 4;
    // Index of the goal to be updated.
    string goalId = 5;
    string key = 6;
    string oauth_token = 7;
    boolean prettyPrint = 8;
    // View (Profile) ID to update the goal.
    string profileId = 9;
    string quotaUser = 10;
    string userIp = 11;
    // Web property ID to update the goal.
    string webPropertyId = 12;
}

message GetManagementAccountsAccountIdWebpropertiesWebPropertyIdProfilesProfileIdProfileFilterLinksRequest {
    // Account ID to retrieve profile filter links for.
    string accountId = 1;
    alt alt = 2;
    string fields = 3;
    string key = 4;
    // The maximum number of profile filter links to include in this response.
    int32 max_results = 5;
    string oauth_token = 6;
    boolean prettyPrint = 7;
    // Profile ID to retrieve filter links for. Can either be a specific profile ID or '~all', which refers to all the profiles that user has access to.
    string profileId = 8;
    string quotaUser = 9;
    // An index of the first entity to retrieve. Use this parameter as a pagination mechanism along with the max-results parameter.
    int32 start_index = 10;
    string userIp = 11;
    // Web property Id for profile filter links for. Can either be a specific web property ID or '~all', which refers to all the web properties that user has access to.
    string webPropertyId = 12;
}

message PostManagementAccountsAccountIdWebpropertiesWebPropertyIdProfilesProfileIdProfileFilterLinksRequest {
    // Account ID to create profile filter link for.
    string accountId = 1;
    alt alt = 2;
    ProfileFilterLink body = 3;
    string fields = 4;
    string key = 5;
    string oauth_token = 6;
    boolean prettyPrint = 7;
    // Profile ID to create filter link for.
    string profileId = 8;
    string quotaUser = 9;
    string userIp = 10;
    // Web property Id to create profile filter link for.
    string webPropertyId = 11;
}

message GetManagementAccountsAccountIdWebpropertiesWebPropertyIdProfilesProfileIdProfileFilterLinksLinkIdRequest {
    // Account ID to retrieve profile filter link for.
    string accountId = 1;
    alt alt = 2;
    string fields = 3;
    string key = 4;
    // ID of the profile filter link.
    string linkId = 5;
    string oauth_token = 6;
    boolean prettyPrint = 7;
    // Profile ID to retrieve filter link for.
    string profileId = 8;
    string quotaUser = 9;
    string userIp = 10;
    // Web property Id to retrieve profile filter link for.
    string webPropertyId = 11;
}

message PutManagementAccountsAccountIdWebpropertiesWebPropertyIdProfilesProfileIdProfileFilterLinksLinkIdRequest {
    // Account ID to which profile filter link belongs.
    string accountId = 1;
    alt alt = 2;
    ProfileFilterLink body = 3;
    string fields = 4;
    string key = 5;
    // ID of the profile filter link to be updated.
    string linkId = 6;
    string oauth_token = 7;
    boolean prettyPrint = 8;
    // Profile ID to which filter link belongs
    string profileId = 9;
    string quotaUser = 10;
    string userIp = 11;
    // Web property Id to which profile filter link belongs
    string webPropertyId = 12;
}

message DeleteManagementAccountsAccountIdWebpropertiesWebPropertyIdProfilesProfileIdProfileFilterLinksLinkIdRequest {
    // Account ID to which the profile filter link belongs.
    string accountId = 1;
    alt alt = 2;
    string fields = 3;
    string key = 4;
    // ID of the profile filter link to delete.
    string linkId = 5;
    string oauth_token = 6;
    boolean prettyPrint = 7;
    // Profile ID to which the filter link belongs.
    string profileId = 8;
    string quotaUser = 9;
    string userIp = 10;
    // Web property Id to which the profile filter link belongs.
    string webPropertyId = 11;
}

message GetManagementAccountsAccountIdWebpropertiesWebPropertyIdProfilesProfileIdUnsampledReportsRequest {
    // Account ID to retrieve unsampled reports for. Must be a specific account ID, ~all is not supported.
    string accountId = 1;
    alt alt = 2;
    string fields = 3;
    string key = 4;
    // The maximum number of unsampled reports to include in this response.
    int32 max_results = 5;
    string oauth_token = 6;
    boolean prettyPrint = 7;
    // View (Profile) ID to retrieve unsampled reports for. Must be a specific view (profile) ID, ~all is not supported.
    string profileId = 8;
    string quotaUser = 9;
    // An index of the first unsampled report to retrieve. Use this parameter as a pagination mechanism along with the max-results parameter.
    int32 start_index = 10;
    string userIp = 11;
    // Web property ID to retrieve unsampled reports for. Must be a specific web property ID, ~all is not supported.
    string webPropertyId = 12;
}

message PostManagementAccountsAccountIdWebpropertiesWebPropertyIdProfilesProfileIdUnsampledReportsRequest {
    // Account ID to create the unsampled report for.
    string accountId = 1;
    alt alt = 2;
    UnsampledReport body = 3;
    string fields = 4;
    string key = 5;
    string oauth_token = 6;
    boolean prettyPrint = 7;
    // View (Profile) ID to create the unsampled report for.
    string profileId = 8;
    string quotaUser = 9;
    string userIp = 10;
    // Web property ID to create the unsampled report for.
    string webPropertyId = 11;
}

message GetManagementAccountsAccountIdWebpropertiesWebPropertyIdProfilesProfileIdUnsampledReportsUnsampledReportIdRequest {
    // Account ID to retrieve unsampled report for.
    string accountId = 1;
    alt alt = 2;
    string fields = 3;
    string key = 4;
    string oauth_token = 5;
    boolean prettyPrint = 6;
    // View (Profile) ID to retrieve unsampled report for.
    string profileId = 7;
    string quotaUser = 8;
    // ID of the unsampled report to retrieve.
    string unsampledReportId = 9;
    string userIp = 10;
    // Web property ID to retrieve unsampled reports for.
    string webPropertyId = 11;
}

message DeleteManagementAccountsAccountIdWebpropertiesWebPropertyIdProfilesProfileIdUnsampledReportsUnsampledReportIdRequest {
    // Account ID to delete the unsampled report for.
    string accountId = 1;
    alt alt = 2;
    string fields = 3;
    string key = 4;
    string oauth_token = 5;
    boolean prettyPrint = 6;
    // View (Profile) ID to delete the unsampled report for.
    string profileId = 7;
    string quotaUser = 8;
    // ID of the unsampled report to be deleted.
    string unsampledReportId = 9;
    string userIp = 10;
    // Web property ID to delete the unsampled reports for.
    string webPropertyId = 11;
}

message GetManagementAccountsAccountIdWebpropertiesWebPropertyIdRemarketingAudiencesRequest {
    // The account ID of the remarketing audiences to retrieve.
    string accountId = 1;
    alt alt = 2;
    string fields = 3;
    string key = 4;
    // The maximum number of remarketing audiences to include in this response.
    int32 max_results = 5;
    string oauth_token = 6;
    boolean prettyPrint = 7;
    string quotaUser = 8;
    // An index of the first entity to retrieve. Use this parameter as a pagination mechanism along with the max-results parameter.
    int32 start_index = 9;
    string type = 10;
    string userIp = 11;
    // The web property ID of the remarketing audiences to retrieve.
    string webPropertyId = 12;
}

message PostManagementAccountsAccountIdWebpropertiesWebPropertyIdRemarketingAudiencesRequest {
    // The account ID for which to create the remarketing audience.
    string accountId = 1;
    alt alt = 2;
    RemarketingAudience body = 3;
    string fields = 4;
    string key = 5;
    string oauth_token = 6;
    boolean prettyPrint = 7;
    string quotaUser = 8;
    string userIp = 9;
    // Web property ID for which to create the remarketing audience.
    string webPropertyId = 10;
}

message GetManagementAccountsAccountIdWebpropertiesWebPropertyIdRemarketingAudiencesRemarketingAudienceIdRequest {
    // The account ID of the remarketing audience to retrieve.
    string accountId = 1;
    alt alt = 2;
    string fields = 3;
    string key = 4;
    string oauth_token = 5;
    boolean prettyPrint = 6;
    string quotaUser = 7;
    // The ID of the remarketing audience to retrieve.
    string remarketingAudienceId = 8;
    string userIp = 9;
    // The web property ID of the remarketing audience to retrieve.
    string webPropertyId = 10;
}

message PutManagementAccountsAccountIdWebpropertiesWebPropertyIdRemarketingAudiencesRemarketingAudienceIdRequest {
    // The account ID of the remarketing audience to update.
    string accountId = 1;
    alt alt = 2;
    RemarketingAudience body = 3;
    string fields = 4;
    string key = 5;
    string oauth_token = 6;
    boolean prettyPrint = 7;
    string quotaUser = 8;
    // The ID of the remarketing audience to update.
    string remarketingAudienceId = 9;
    string userIp = 10;
    // The web property ID of the remarketing audience to update.
    string webPropertyId = 11;
}

message DeleteManagementAccountsAccountIdWebpropertiesWebPropertyIdRemarketingAudiencesRemarketingAudienceIdRequest {
    // Account ID to which the remarketing audience belongs.
    string accountId = 1;
    alt alt = 2;
    string fields = 3;
    string key = 4;
    string oauth_token = 5;
    boolean prettyPrint = 6;
    string quotaUser = 7;
    // The ID of the remarketing audience to delete.
    string remarketingAudienceId = 8;
    string userIp = 9;
    // Web property ID to which the remarketing audience belongs.
    string webPropertyId = 10;
}

message GetManagementSegmentsRequest {
    alt alt = 1;
    string fields = 2;
    string key = 3;
    // The maximum number of segments to include in this response.
    int32 max_results = 4;
    string oauth_token = 5;
    boolean prettyPrint = 6;
    string quotaUser = 7;
    // An index of the first segment to retrieve. Use this parameter as a pagination mechanism along with the max-results parameter.
    int32 start_index = 8;
    string userIp = 9;
}

message GetMetadataReportTypeColumnsRequest {
    alt alt = 1;
    string fields = 2;
    string key = 3;
    string oauth_token = 4;
    boolean prettyPrint = 5;
    string quotaUser = 6;
    // Report type. Allowed Values: 'ga'. Where 'ga' corresponds to the Core Reporting API
    string reportType = 7;
    string userIp = 8;
}

message PostProvisioningCreateAccountTicketRequest {
    alt alt = 1;
    AccountTicket body = 2;
    string fields = 3;
    string key = 4;
    string oauth_token = 5;
    boolean prettyPrint = 6;
    string quotaUser = 7;
    string userIp = 8;
}

message Account {
    // Child link for an account entry. Points to the list of web properties for this account.
    message ChildLink {
            // Link to the list of web properties for this account.
    string href = 1;
            // Type of the child link. Its value is "analytics#webproperties".
    string type = 2;
    }
    ChildLink childLink = 1;
    // Time the account was created.
    string created = 2;
    // Account ID.
    string id = 3;
    // Resource type for Analytics account.
    string kind = 4;
    // Account name.
    string name = 5;
    // Permissions the user has for this account.
    message Permissions {
            // All the permissions that the user has for this account. These include any implied permissions (e.g., EDIT implies VIEW).
    repeated string effective = 1;
    }
    Permissions permissions = 6;
    // Link for this account.
    string selfLink = 7;
    // Indicates whether this account is starred or not.
    bool starred = 8;
    // Time the account was last modified.
    string updated = 9;
}

message AccountRef {
    // Link for this account.
    string href = 1;
    // Account ID.
    string id = 2;
    // Analytics account reference.
    string kind = 3;
    // Account name.
    string name = 4;
}

message AccountSummaries {
    // A list of AccountSummaries.
    repeated AccountSummary items = 1;
    // The maximum number of resources the response can contain, regardless of the actual number of resources returned. Its value ranges from 1 to 1000 with a value of 1000 by default, or otherwise specified by the max-results query parameter.
    int32 itemsPerPage = 2;
    // Collection type.
    string kind = 3;
    // Link to next page for this AccountSummary collection.
    string nextLink = 4;
    // Link to previous page for this AccountSummary collection.
    string previousLink = 5;
    // The starting index of the resources, which is 1 by default or otherwise specified by the start-index query parameter.
    int32 startIndex = 6;
    // The total number of results for the query, regardless of the number of results in the response.
    int32 totalResults = 7;
    // Email ID of the authenticated user
    string username = 8;
}

message AccountSummary {
    // Account ID.
    string id = 1;
    // Resource type for Analytics AccountSummary.
    string kind = 2;
    // Account name.
    string name = 3;
    // Indicates whether this account is starred or not.
    bool starred = 4;
    // List of web properties under this account.
    repeated WebPropertySummary webProperties = 5;
}

message AccountTicket {
    // Account for this ticket.
    Account account = 1;
    // Account ticket ID used to access the account ticket.
    string id = 2;
    // Resource type for account ticket.
    string kind = 3;
    // View (Profile) for the account.
    Profile profile = 4;
    // Redirect URI where the user will be sent after accepting Terms of Service. Must be configured in APIs console as a callback URL.
    string redirectUri = 5;
    // Web property for the account.
    Webproperty webproperty = 6;
}

message Accounts {
    // A list of accounts.
    repeated Account items = 1;
    // The maximum number of entries the response can contain, regardless of the actual number of entries returned. Its value ranges from 1 to 1000 with a value of 1000 by default, or otherwise specified by the max-results query parameter.
    int32 itemsPerPage = 2;
    // Collection type.
    string kind = 3;
    // Next link for this account collection.
    string nextLink = 4;
    // Previous link for this account collection.
    string previousLink = 5;
    // The starting index of the entries, which is 1 by default or otherwise specified by the start-index query parameter.
    int32 startIndex = 6;
    // The total number of results for the query, regardless of the number of results in the response.
    int32 totalResults = 7;
    // Email ID of the authenticated user
    string username = 8;
}

message AdWordsAccount {
    // True if auto-tagging is enabled on the AdWords account. Read-only after the insert operation.
    bool autoTaggingEnabled = 1;
    // Customer ID. This field is required when creating an AdWords link.
    string customerId = 2;
    // Resource type for AdWords account.
    string kind = 3;
}

message AnalyticsDataimportDeleteUploadDataRequest {
    // A list of upload UIDs.
    repeated string customDataImportUids = 1;
}

message Column {
    // Map of attribute name and value for this column.
    map<string, string> attributes = 1;
    // Column id.
    string id = 2;
    // Resource type for Analytics column.
    string kind = 3;
}

message Columns {
    // List of attributes names returned by columns.
    repeated string attributeNames = 1;
    // Etag of collection. This etag can be compared with the last response etag to check if response has changed.
    string etag = 2;
    // List of columns for a report type.
    repeated Column items = 3;
    // Collection type.
    string kind = 4;
    // Total number of columns returned in the response.
    int32 totalResults = 5;
}

message CustomDataSource {
    // Account ID to which this custom data source belongs.
    string accountId = 1;
    message ChildLink {
            // Link to the list of daily uploads for this custom data source. Link to the list of uploads for this custom data source.
    string href = 1;
            // Value is "analytics#dailyUploads". Value is "analytics#uploads".
    string type = 2;
    }
    ChildLink childLink = 2;
    // Time this custom data source was created.
    string created = 3;
    // Description of custom data source.
    string description = 4;
    // Custom data source ID.
    string id = 5;
    string importBehavior = 6;
    // Resource type for Analytics custom data source.
    string kind = 7;
    // Name of this custom data source.
    string name = 8;
    // Parent link for this custom data source. Points to the web property to which this custom data source belongs.
    message ParentLink {
            // Link to the web property to which this custom data source belongs.
    string href = 1;
            // Value is "analytics#webproperty".
    string type = 2;
    }
    ParentLink parentLink = 9;
    // IDs of views (profiles) linked to the custom data source.
    repeated string profilesLinked = 10;
    // Collection of schema headers of the custom data source.
    repeated string schema = 11;
    // Link for this Analytics custom data source.
    string selfLink = 12;
    // Type of the custom data source.
    string type = 13;
    // Time this custom data source was last modified.
    string updated = 14;
    // Upload type of the custom data source.
    string uploadType = 15;
    // Web property ID of the form UA-XXXXX-YY to which this custom data source belongs.
    string webPropertyId = 16;
}

message CustomDataSources {
    // Collection of custom data sources.
    repeated CustomDataSource items = 1;
    // The maximum number of resources the response can contain, regardless of the actual number of resources returned. Its value ranges from 1 to 1000 with a value of 1000 by default, or otherwise specified by the max-results query parameter.
    int32 itemsPerPage = 2;
    // Collection type.
    string kind = 3;
    // Link to next page for this custom data source collection.
    string nextLink = 4;
    // Link to previous page for this custom data source collection.
    string previousLink = 5;
    // The starting index of the resources, which is 1 by default or otherwise specified by the start-index query parameter.
    int32 startIndex = 6;
    // The total number of results for the query, regardless of the number of results in the response.
    int32 totalResults = 7;
    // Email ID of the authenticated user
    string username = 8;
}

message CustomDimension {
    // Account ID.
    string accountId = 1;
    // Boolean indicating whether the custom dimension is active.
    bool active = 2;
    // Time the custom dimension was created.
    string created = 3;
    // Custom dimension ID.
    string id = 4;
    // Index of the custom dimension.
    int32 index = 5;
    // Kind value for a custom dimension. Set to "analytics#customDimension". It is a read-only field.
    string kind = 6;
    // Name of the custom dimension.
    string name = 7;
    // Parent link for the custom dimension. Points to the property to which the custom dimension belongs.
    message ParentLink {
            // Link to the property to which the custom dimension belongs.
    string href = 1;
            // Type of the parent link. Set to "analytics#webproperty".
    string type = 2;
    }
    ParentLink parentLink = 8;
    // Scope of the custom dimension: HIT, SESSION, USER or PRODUCT.
    string scope = 9;
    // Link for the custom dimension
    string selfLink = 10;
    // Time the custom dimension was last modified.
    string updated = 11;
    // Property ID.
    string webPropertyId = 12;
}

message CustomDimensions {
    // Collection of custom dimensions.
    repeated CustomDimension items = 1;
    // The maximum number of resources the response can contain, regardless of the actual number of resources returned. Its value ranges from 1 to 1000 with a value of 1000 by default, or otherwise specified by the max-results query parameter.
    int32 itemsPerPage = 2;
    // Collection type.
    string kind = 3;
    // Link to next page for this custom dimension collection.
    string nextLink = 4;
    // Link to previous page for this custom dimension collection.
    string previousLink = 5;
    // The starting index of the resources, which is 1 by default or otherwise specified by the start-index query parameter.
    int32 startIndex = 6;
    // The total number of results for the query, regardless of the number of results in the response.
    int32 totalResults = 7;
    // Email ID of the authenticated user
    string username = 8;
}

message CustomMetric {
    // Account ID.
    string accountId = 1;
    // Boolean indicating whether the custom metric is active.
    bool active = 2;
    // Time the custom metric was created.
    string created = 3;
    // Custom metric ID.
    string id = 4;
    // Index of the custom metric.
    int32 index = 5;
    // Kind value for a custom metric. Set to "analytics#customMetric". It is a read-only field.
    string kind = 6;
    // Max value of custom metric.
    string max_value = 7;
    // Min value of custom metric.
    string min_value = 8;
    // Name of the custom metric.
    string name = 9;
    // Parent link for the custom metric. Points to the property to which the custom metric belongs.
    message ParentLink {
            // Link to the property to which the custom metric belongs.
    string href = 1;
            // Type of the parent link. Set to "analytics#webproperty".
    string type = 2;
    }
    ParentLink parentLink = 10;
    // Scope of the custom metric: HIT or PRODUCT.
    string scope = 11;
    // Link for the custom metric
    string selfLink = 12;
    // Data type of custom metric.
    string type = 13;
    // Time the custom metric was last modified.
    string updated = 14;
    // Property ID.
    string webPropertyId = 15;
}

message CustomMetrics {
    // Collection of custom metrics.
    repeated CustomMetric items = 1;
    // The maximum number of resources the response can contain, regardless of the actual number of resources returned. Its value ranges from 1 to 1000 with a value of 1000 by default, or otherwise specified by the max-results query parameter.
    int32 itemsPerPage = 2;
    // Collection type.
    string kind = 3;
    // Link to next page for this custom metric collection.
    string nextLink = 4;
    // Link to previous page for this custom metric collection.
    string previousLink = 5;
    // The starting index of the resources, which is 1 by default or otherwise specified by the start-index query parameter.
    int32 startIndex = 6;
    // The total number of results for the query, regardless of the number of results in the response.
    int32 totalResults = 7;
    // Email ID of the authenticated user
    string username = 8;
}

message EntityAdWordsLink {
    // A list of AdWords client accounts. These cannot be MCC accounts. This field is required when creating an AdWords link. It cannot be empty.
    repeated AdWordsAccount adWordsAccounts = 1;
    // Web property being linked.
    message Entity {
        WebPropertyRef webPropertyRef = 1;
    }
    Entity entity = 2;
    // Entity AdWords link ID
    string id = 3;
    // Resource type for entity AdWords link.
    string kind = 4;
    // Name of the link. This field is required when creating an AdWords link.
    string name = 5;
    // IDs of linked Views (Profiles) represented as strings.
    repeated string profileIds = 6;
    // URL link for this Google Analytics - Google AdWords link.
    string selfLink = 7;
}

message EntityAdWordsLinks {
    // A list of entity AdWords links.
    repeated EntityAdWordsLink items = 1;
    // The maximum number of entries the response can contain, regardless of the actual number of entries returned. Its value ranges from 1 to 1000 with a value of 1000 by default, or otherwise specified by the max-results query parameter.
    int32 itemsPerPage = 2;
    // Collection type.
    string kind = 3;
    // Next link for this AdWords link collection.
    string nextLink = 4;
    // Previous link for this AdWords link collection.
    string previousLink = 5;
    // The starting index of the entries, which is 1 by default or otherwise specified by the start-index query parameter.
    int32 startIndex = 6;
    // The total number of results for the query, regardless of the number of results in the response.
    int32 totalResults = 7;
}

message EntityUserLink {
    // Entity for this link. It can be an account, a web property, or a view (profile).
    message Entity {
            // Account for this link.
    AccountRef accountRef = 1;
            // View (Profile) for this link.
    ProfileRef profileRef = 2;
            // Web property for this link.
    WebPropertyRef webPropertyRef = 3;
    }
    Entity entity = 1;
    // Entity user link ID
    string id = 2;
    // Resource type for entity user link.
    string kind = 3;
    // Permissions the user has for this entity.
    message Permissions {
            // Effective permissions represent all the permissions that a user has for this entity. These include any implied permissions (e.g., EDIT implies VIEW) or inherited permissions from the parent entity. Effective permissions are read-only.
    repeated string effective = 1;
            // Permissions that a user has been assigned at this very level. Does not include any implied or inherited permissions. Local permissions are modifiable.
    repeated string local = 2;
    }
    Permissions permissions = 4;
    // Self link for this resource.
    string selfLink = 5;
    // User reference.
    UserRef userRef = 6;
}

message EntityUserLinks {
    // A list of entity user links.
    repeated EntityUserLink items = 1;
    // The maximum number of entries the response can contain, regardless of the actual number of entries returned. Its value ranges from 1 to 1000 with a value of 1000 by default, or otherwise specified by the max-results query parameter.
    int32 itemsPerPage = 2;
    // Collection type.
    string kind = 3;
    // Next link for this account collection.
    string nextLink = 4;
    // Previous link for this account collection.
    string previousLink = 5;
    // The starting index of the entries, which is 1 by default or otherwise specified by the start-index query parameter.
    int32 startIndex = 6;
    // The total number of results for the query, regardless of the number of results in the response.
    int32 totalResults = 7;
}

message Experiment {
    // Account ID to which this experiment belongs. This field is read-only.
    string accountId = 1;
    // Time the experiment was created. This field is read-only.
    string created = 2;
    // Notes about this experiment.
    string description = 3;
    // If true, the end user will be able to edit the experiment via the Google Analytics user interface.
    bool editableInGaUi = 4;
    // The ending time of the experiment (the time the status changed from RUNNING to ENDED). This field is present only if the experiment has ended. This field is read-only.
    string endTime = 5;
    // Boolean specifying whether to distribute traffic evenly across all variations. If the value is False, content experiments follows the default behavior of adjusting traffic dynamically based on variation performance. Optional -- defaults to False. This field may not be changed for an experiment whose status is ENDED.
    bool equalWeighting = 6;
    // Experiment ID. Required for patch and update. Disallowed for create.
    string id = 7;
    // Internal ID for the web property to which this experiment belongs. This field is read-only.
    string internalWebPropertyId = 8;
    // Resource type for an Analytics experiment. This field is read-only.
    string kind = 9;
    // An integer number in [3, 90]. Specifies the minimum length of the experiment. Can be changed for a running experiment. This field may not be changed for an experiments whose status is ENDED.
    int32 minimumExperimentLengthInDays = 10;
    // Experiment name. This field may not be changed for an experiment whose status is ENDED. This field is required when creating an experiment.
    string name = 11;
    // The metric that the experiment is optimizing. Valid values: "ga:goal(n)Completions", "ga:adsenseAdsClicks", "ga:adsenseAdsViewed", "ga:adsenseRevenue", "ga:bounces", "ga:pageviews", "ga:sessionDuration", "ga:transactions", "ga:transactionRevenue". This field is required if status is "RUNNING" and servingFramework is one of "REDIRECT" or "API".
    string objectiveMetric = 12;
    // Whether the objectiveMetric should be minimized or maximized. Possible values: "MAXIMUM", "MINIMUM". Optional--defaults to "MAXIMUM". Cannot be specified without objectiveMetric. Cannot be modified when status is "RUNNING" or "ENDED".
    string optimizationType = 13;
    // Parent link for an experiment. Points to the view (profile) to which this experiment belongs.
    message ParentLink {
            // Link to the view (profile) to which this experiment belongs. This field is read-only.
    string href = 1;
            // Value is "analytics#profile". This field is read-only.
    string type = 2;
    }
    ParentLink parentLink = 14;
    // View (Profile) ID to which this experiment belongs. This field is read-only.
    string profileId = 15;
    // Why the experiment ended. Possible values: "STOPPED_BY_USER", "WINNER_FOUND", "EXPERIMENT_EXPIRED", "ENDED_WITH_NO_WINNER", "GOAL_OBJECTIVE_CHANGED". "ENDED_WITH_NO_WINNER" means that the experiment didn't expire but no winner was projected to be found. If the experiment status is changed via the API to ENDED this field is set to STOPPED_BY_USER. This field is read-only.
    string reasonExperimentEnded = 16;
    // Boolean specifying whether variations URLS are rewritten to match those of the original. This field may not be changed for an experiments whose status is ENDED.
    bool rewriteVariationUrlsAsOriginal = 17;
    // Link for this experiment. This field is read-only.
    string selfLink = 18;
    // The framework used to serve the experiment variations and evaluate the results. One of:  
    // - REDIRECT: Google Analytics redirects traffic to different variation pages, reports the chosen variation and evaluates the results.
    // - API: Google Analytics chooses and reports the variation to serve and evaluates the results; the caller is responsible for serving the selected variation.
    // - EXTERNAL: The variations will be served externally and the chosen variation reported to Google Analytics. The caller is responsible for serving the selected variation and evaluating the results.
    string servingFramework = 19;
    // The snippet of code to include on the control page(s). This field is read-only.
    string snippet = 20;
    // The starting time of the experiment (the time the status changed from READY_TO_RUN to RUNNING). This field is present only if the experiment has started. This field is read-only.
    string startTime = 21;
    // Experiment status. Possible values: "DRAFT", "READY_TO_RUN", "RUNNING", "ENDED". Experiments can be created in the "DRAFT", "READY_TO_RUN" or "RUNNING" state. This field is required when creating an experiment.
    string status = 22;
    // A floating-point number in (0, 1]. Specifies the fraction of the traffic that participates in the experiment. Can be changed for a running experiment. This field may not be changed for an experiments whose status is ENDED.
    double trafficCoverage = 23;
    // Time the experiment was last modified. This field is read-only.
    string updated = 24;
    // Array of variations. The first variation in the array is the original. The number of variations may not change once an experiment is in the RUNNING state. At least two variations are required before status can be set to RUNNING.
    message Variation {
            // The name of the variation. This field is required when creating an experiment. This field may not be changed for an experiment whose status is ENDED.
    string name = 1;
            // Status of the variation. Possible values: "ACTIVE", "INACTIVE". INACTIVE variations are not served. This field may not be changed for an experiment whose status is ENDED.
    string status = 2;
            // The URL of the variation. This field may not be changed for an experiment whose status is RUNNING or ENDED.
    string url = 3;
            // Weight that this variation should receive. Only present if the experiment is running. This field is read-only.
    double weight = 4;
            // True if the experiment has ended and this variation performed (statistically) significantly better than the original. This field is read-only.
    bool won = 5;
    }
    repeated Variation variations = 25;
    // Web property ID to which this experiment belongs. The web property ID is of the form UA-XXXXX-YY. This field is read-only.
    string webPropertyId = 26;
    // A floating-point number in (0, 1). Specifies the necessary confidence level to choose a winner. This field may not be changed for an experiments whose status is ENDED.
    double winnerConfidenceLevel = 27;
    // Boolean specifying whether a winner has been found for this experiment. This field is read-only.
    bool winnerFound = 28;
}

message Experiments {
    // A list of experiments.
    repeated Experiment items = 1;
    // The maximum number of resources the response can contain, regardless of the actual number of resources returned. Its value ranges from 1 to 1000 with a value of 1000 by default, or otherwise specified by the max-results query parameter.
    int32 itemsPerPage = 2;
    // Collection type.
    string kind = 3;
    // Link to next page for this experiment collection.
    string nextLink = 4;
    // Link to previous page for this experiment collection.
    string previousLink = 5;
    // The starting index of the resources, which is 1 by default or otherwise specified by the start-index query parameter.
    int32 startIndex = 6;
    // The total number of results for the query, regardless of the number of resources in the result.
    int32 totalResults = 7;
    // Email ID of the authenticated user
    string username = 8;
}

message Filter {
    // Account ID to which this filter belongs.
    string accountId = 1;
    // Details for the filter of the type ADVANCED.
    message AdvancedDetails {
            // Indicates if the filter expressions are case sensitive.
    bool caseSensitive = 1;
            // Expression to extract from field A.
    string extractA = 2;
            // Expression to extract from field B.
    string extractB = 3;
            // Field A.
    string fieldA = 4;
            // The Index of the custom dimension. Required if field is a CUSTOM_DIMENSION.
    int32 fieldAIndex = 5;
            // Indicates if field A is required to match.
    bool fieldARequired = 6;
            // Field B.
    string fieldB = 7;
            // The Index of the custom dimension. Required if field is a CUSTOM_DIMENSION.
    int32 fieldBIndex = 8;
            // Indicates if field B is required to match.
    bool fieldBRequired = 9;
            // Expression used to construct the output value.
    string outputConstructor = 10;
            // Output field.
    string outputToField = 11;
            // The Index of the custom dimension. Required if field is a CUSTOM_DIMENSION.
    int32 outputToFieldIndex = 12;
            // Indicates if the existing value of the output field, if any, should be overridden by the output expression.
    bool overrideOutputField = 13;
    }
    AdvancedDetails advancedDetails = 2;
    // Time this filter was created.
    string created = 3;
    // Details for the filter of the type EXCLUDE.
    FilterExpression excludeDetails = 4;
    // Filter ID.
    string id = 5;
    // Details for the filter of the type INCLUDE.
    FilterExpression includeDetails = 6;
    // Resource type for Analytics filter.
    string kind = 7;
    // Details for the filter of the type LOWER.
    message LowercaseDetails {
            // Field to use in the filter.
    string field = 1;
            // The Index of the custom dimension. Required if field is a CUSTOM_DIMENSION.
    int32 fieldIndex = 2;
    }
    LowercaseDetails lowercaseDetails = 8;
    // Name of this filter.
    string name = 9;
    // Parent link for this filter. Points to the account to which this filter belongs.
    message ParentLink {
            // Link to the account to which this filter belongs.
    string href = 1;
            // Value is "analytics#account".
    string type = 2;
    }
    ParentLink parentLink = 10;
    // Details for the filter of the type SEARCH_AND_REPLACE.
    message SearchAndReplaceDetails {
            // Determines if the filter is case sensitive.
    bool caseSensitive = 1;
            // Field to use in the filter.
    string field = 2;
            // The Index of the custom dimension. Required if field is a CUSTOM_DIMENSION.
    int32 fieldIndex = 3;
            // Term to replace the search term with.
    string replaceString = 4;
            // Term to search.
    string searchString = 5;
    }
    SearchAndReplaceDetails searchAndReplaceDetails = 11;
    // Link for this filter.
    string selfLink = 12;
    // Type of this filter. Possible values are INCLUDE, EXCLUDE, LOWERCASE, UPPERCASE, SEARCH_AND_REPLACE and ADVANCED.
    string type = 13;
    // Time this filter was last modified.
    string updated = 14;
    // Details for the filter of the type UPPER.
    message UppercaseDetails {
            // Field to use in the filter.
    string field = 1;
            // The Index of the custom dimension. Required if field is a CUSTOM_DIMENSION.
    int32 fieldIndex = 2;
    }
    UppercaseDetails uppercaseDetails = 15;
}

message FilterExpression {
    // Determines if the filter is case sensitive.
    bool caseSensitive = 1;
    // Filter expression value
    string expressionValue = 2;
    // Field to filter. Possible values:  
    // - Content and Traffic  
    // - PAGE_REQUEST_URI, 
    // - PAGE_HOSTNAME, 
    // - PAGE_TITLE, 
    // - REFERRAL, 
    // - COST_DATA_URI (Campaign target URL), 
    // - HIT_TYPE, 
    // - INTERNAL_SEARCH_TERM, 
    // - INTERNAL_SEARCH_TYPE, 
    // - SOURCE_PROPERTY_TRACKING_ID,   
    // - Campaign or AdGroup  
    // - CAMPAIGN_SOURCE, 
    // - CAMPAIGN_MEDIUM, 
    // - CAMPAIGN_NAME, 
    // - CAMPAIGN_AD_GROUP, 
    // - CAMPAIGN_TERM, 
    // - CAMPAIGN_CONTENT, 
    // - CAMPAIGN_CODE, 
    // - CAMPAIGN_REFERRAL_PATH,   
    // - E-Commerce  
    // - TRANSACTION_COUNTRY, 
    // - TRANSACTION_REGION, 
    // - TRANSACTION_CITY, 
    // - TRANSACTION_AFFILIATION (Store or order location), 
    // - ITEM_NAME, 
    // - ITEM_CODE, 
    // - ITEM_VARIATION, 
    // - TRANSACTION_ID, 
    // - TRANSACTION_CURRENCY_CODE, 
    // - PRODUCT_ACTION_TYPE,   
    // - Audience/Users  
    // - BROWSER, 
    // - BROWSER_VERSION, 
    // - BROWSER_SIZE, 
    // - PLATFORM, 
    // - PLATFORM_VERSION, 
    // - LANGUAGE, 
    // - SCREEN_RESOLUTION, 
    // - SCREEN_COLORS, 
    // - JAVA_ENABLED (Boolean Field), 
    // - FLASH_VERSION, 
    // - GEO_SPEED (Connection speed), 
    // - VISITOR_TYPE, 
    // - GEO_ORGANIZATION (ISP organization), 
    // - GEO_DOMAIN, 
    // - GEO_IP_ADDRESS, 
    // - GEO_IP_VERSION,   
    // - Location  
    // - GEO_COUNTRY, 
    // - GEO_REGION, 
    // - GEO_CITY,   
    // - Event  
    // - EVENT_CATEGORY, 
    // - EVENT_ACTION, 
    // - EVENT_LABEL,   
    // - Other  
    // - CUSTOM_FIELD_1, 
    // - CUSTOM_FIELD_2, 
    // - USER_DEFINED_VALUE,   
    // - Application  
    // - APP_ID, 
    // - APP_INSTALLER_ID, 
    // - APP_NAME, 
    // - APP_VERSION, 
    // - SCREEN, 
    // - IS_APP (Boolean Field), 
    // - IS_FATAL_EXCEPTION (Boolean Field), 
    // - EXCEPTION_DESCRIPTION,   
    // - Mobile device  
    // - IS_MOBILE (Boolean Field, Deprecated. Use DEVICE_CATEGORY=mobile), 
    // - IS_TABLET (Boolean Field, Deprecated. Use DEVICE_CATEGORY=tablet), 
    // - DEVICE_CATEGORY, 
    // - MOBILE_HAS_QWERTY_KEYBOARD (Boolean Field), 
    // - MOBILE_HAS_NFC_SUPPORT (Boolean Field), 
    // - MOBILE_HAS_CELLULAR_RADIO (Boolean Field), 
    // - MOBILE_HAS_WIFI_SUPPORT (Boolean Field), 
    // - MOBILE_BRAND_NAME, 
    // - MOBILE_MODEL_NAME, 
    // - MOBILE_MARKETING_NAME, 
    // - MOBILE_POINTING_METHOD,   
    // - Social  
    // - SOCIAL_NETWORK, 
    // - SOCIAL_ACTION, 
    // - SOCIAL_ACTION_TARGET,   
    // - Custom dimension  
    // - CUSTOM_DIMENSION (See accompanying field index),
    string field = 3;
    // The Index of the custom dimension. Set only if the field is a is CUSTOM_DIMENSION.
    int32 fieldIndex = 4;
    // Kind value for filter expression
    string kind = 5;
    // Match type for this filter. Possible values are BEGINS_WITH, EQUAL, ENDS_WITH, CONTAINS, or MATCHES. GEO_DOMAIN, GEO_IP_ADDRESS, PAGE_REQUEST_URI, or PAGE_HOSTNAME filters can use any match type; all other filters must use MATCHES.
    string matchType = 6;
}

message FilterRef {
    // Account ID to which this filter belongs.
    string accountId = 1;
    // Link for this filter.
    string href = 2;
    // Filter ID.
    string id = 3;
    // Kind value for filter reference.
    string kind = 4;
    // Name of this filter.
    string name = 5;
}

message Filters {
    // A list of filters.
    repeated Filter items = 1;
    // The maximum number of resources the response can contain, regardless of the actual number of resources returned. Its value ranges from 1 to 1,000 with a value of 1000 by default, or otherwise specified by the max-results query parameter.
    int32 itemsPerPage = 2;
    // Collection type.
    string kind = 3;
    // Link to next page for this filter collection.
    string nextLink = 4;
    // Link to previous page for this filter collection.
    string previousLink = 5;
    // The starting index of the resources, which is 1 by default or otherwise specified by the start-index query parameter.
    int32 startIndex = 6;
    // The total number of results for the query, regardless of the number of results in the response.
    int32 totalResults = 7;
    // Email ID of the authenticated user
    string username = 8;
}

message GaData {
    // Column headers that list dimension names followed by the metric names. The order of dimensions and metrics is same as specified in the request.
    message ColumnHeader {
            // Column Type. Either DIMENSION or METRIC.
    string columnType = 1;
            // Data type. Dimension column headers have only STRING as the data type. Metric column headers have data types for metric values such as INTEGER, DOUBLE, CURRENCY etc.
    string dataType = 2;
            // Column name.
    string name = 3;
    }
    repeated ColumnHeader columnHeaders = 1;
    // Determines if Analytics data contains samples.
    bool containsSampledData = 2;
    // The last refreshed time in seconds for Analytics data.
    string dataLastRefreshed = 3;
    message DataTable {
        message Col {
            string id = 1;
            string label = 2;
            string type = 3;
        }
        repeated Col cols = 1;
        message Row {
            message C {
                string v = 1;
            }
            repeated C c = 1;
        }
        repeated Row rows = 2;
    }
    DataTable dataTable = 4;
    // Unique ID for this data response.
    string id = 5;
    // The maximum number of rows the response can contain, regardless of the actual number of rows returned. Its value ranges from 1 to 10,000 with a value of 1000 by default, or otherwise specified by the max-results query parameter.
    int32 itemsPerPage = 6;
    // Resource type.
    string kind = 7;
    // Link to next page for this Analytics data query.
    string nextLink = 8;
    // Link to previous page for this Analytics data query.
    string previousLink = 9;
    // Information for the view (profile), for which the Analytics data was requested.
    message ProfileInfo {
            // Account ID to which this view (profile) belongs.
    string accountId = 1;
            // Internal ID for the web property to which this view (profile) belongs.
    string internalWebPropertyId = 2;
            // View (Profile) ID.
    string profileId = 3;
            // View (Profile) name.
    string profileName = 4;
            // Table ID for view (profile).
    string tableId = 5;
            // Web Property ID to which this view (profile) belongs.
    string webPropertyId = 6;
    }
    ProfileInfo profileInfo = 10;
    // Analytics data request query parameters.
    message Query {
            // List of analytics dimensions.
    string dimensions = 1;
            // End date.
    string end_date = 2;
            // Comma-separated list of dimension or metric filters.
    string filters = 3;
            // Unique table ID.
    string ids = 4;
            // Maximum results per page.
    int32 max_results = 5;
            // List of analytics metrics.
    repeated string metrics = 6;
            // Desired sampling level
    string samplingLevel = 7;
            // Analytics advanced segment.
    string segment = 8;
            // List of dimensions or metrics based on which Analytics data is sorted.
    repeated string sort = 9;
            // Start date.
    string start_date = 10;
            // Start index.
    int32 start_index = 11;
    }
    Query query = 11;
    // Analytics data rows, where each row contains a list of dimension values followed by the metric values. The order of dimensions and metrics is same as specified in the request.
    message Row {
    }
    repeated Row rows = 12;
    // The number of samples used to calculate the result.
    string sampleSize = 13;
    // Total size of the sample space from which the samples were selected.
    string sampleSpace = 14;
    // Link to this page.
    string selfLink = 15;
    // The total number of rows for the query, regardless of the number of rows in the response.
    int32 totalResults = 16;
    // Total values for the requested metrics over all the results, not just the results returned in this response. The order of the metric totals is same as the metric order specified in the request.
    map<string, string> totalsForAllResults = 17;
}

message Goal {
    // Account ID to which this goal belongs.
    string accountId = 1;
    // Determines whether this goal is active.
    bool active = 2;
    // Time this goal was created.
    string created = 3;
    // Details for the goal of the type EVENT.
    message EventDetails {
            // List of event conditions.
    message EventCondition {
                    // Type of comparison. Possible values are LESS_THAN, GREATER_THAN or EQUAL.
    string comparisonType = 1;
                    // Value used for this comparison.
    string comparisonValue = 2;
                    // Expression used for this match.
    string expression = 3;
                    // Type of the match to be performed. Possible values are REGEXP, BEGINS_WITH, or EXACT.
    string matchType = 4;
                    // Type of this event condition. Possible values are CATEGORY, ACTION, LABEL, or VALUE.
    string type = 5;
        }
        repeated EventCondition eventConditions = 1;
            // Determines if the event value should be used as the value for this goal.
    bool useEventValue = 2;
    }
    EventDetails eventDetails = 4;
    // Goal ID.
    string id = 5;
    // Internal ID for the web property to which this goal belongs.
    string internalWebPropertyId = 6;
    // Resource type for an Analytics goal.
    string kind = 7;
    // Goal name.
    string name = 8;
    // Parent link for a goal. Points to the view (profile) to which this goal belongs.
    message ParentLink {
            // Link to the view (profile) to which this goal belongs.
    string href = 1;
            // Value is "analytics#profile".
    string type = 2;
    }
    ParentLink parentLink = 9;
    // View (Profile) ID to which this goal belongs.
    string profileId = 10;
    // Link for this goal.
    string selfLink = 11;
    // Goal type. Possible values are URL_DESTINATION, VISIT_TIME_ON_SITE, VISIT_NUM_PAGES, AND EVENT.
    string type = 12;
    // Time this goal was last modified.
    string updated = 13;
    // Details for the goal of the type URL_DESTINATION.
    message UrlDestinationDetails {
            // Determines if the goal URL must exactly match the capitalization of visited URLs.
    bool caseSensitive = 1;
            // Determines if the first step in this goal is required.
    bool firstStepRequired = 2;
            // Match type for the goal URL. Possible values are HEAD, EXACT, or REGEX.
    string matchType = 3;
            // List of steps configured for this goal funnel.
    message Step {
                    // Step name.
    string name = 1;
                    // Step number.
    int32 number = 2;
                    // URL for this step.
    string url = 3;
        }
        repeated Step steps = 4;
            // URL for this goal.
    string url = 5;
    }
    UrlDestinationDetails urlDestinationDetails = 14;
    // Goal value.
    float value = 15;
    // Details for the goal of the type VISIT_NUM_PAGES.
    message VisitNumPagesDetails {
            // Type of comparison. Possible values are LESS_THAN, GREATER_THAN, or EQUAL.
    string comparisonType = 1;
            // Value used for this comparison.
    string comparisonValue = 2;
    }
    VisitNumPagesDetails visitNumPagesDetails = 16;
    // Details for the goal of the type VISIT_TIME_ON_SITE.
    message VisitTimeOnSiteDetails {
            // Type of comparison. Possible values are LESS_THAN or GREATER_THAN.
    string comparisonType = 1;
            // Value used for this comparison.
    string comparisonValue = 2;
    }
    VisitTimeOnSiteDetails visitTimeOnSiteDetails = 17;
    // Web property ID to which this goal belongs. The web property ID is of the form UA-XXXXX-YY.
    string webPropertyId = 18;
}

message Goals {
    // A list of goals.
    repeated Goal items = 1;
    // The maximum number of resources the response can contain, regardless of the actual number of resources returned. Its value ranges from 1 to 1000 with a value of 1000 by default, or otherwise specified by the max-results query parameter.
    int32 itemsPerPage = 2;
    // Collection type.
    string kind = 3;
    // Link to next page for this goal collection.
    string nextLink = 4;
    // Link to previous page for this goal collection.
    string previousLink = 5;
    // The starting index of the resources, which is 1 by default or otherwise specified by the start-index query parameter.
    int32 startIndex = 6;
    // The total number of results for the query, regardless of the number of resources in the result.
    int32 totalResults = 7;
    // Email ID of the authenticated user
    string username = 8;
}

message IncludeConditions {
    // The look-back window lets you specify a time frame for evaluating the behavior that qualifies users for your audience. For example, if your filters include users from Central Asia, and Transactions Greater than 2, and you set the look-back window to 14 days, then any user from Central Asia whose cumulative transactions exceed 2 during the last 14 days is added to the audience.
    int32 daysToLookBack = 1;
    // Boolean indicating whether this segment is a smart list. https://support.google.com/analytics/answer/4628577
    bool isSmartList = 2;
    // Resource type for include conditions.
    string kind = 3;
    // Number of days (in the range 1 to 540) a user remains in the audience.
    int32 membershipDurationDays = 4;
    // The segment condition that will cause a user to be added to an audience.
    string segment = 5;
}

message LinkedForeignAccount {
    // Account ID to which this linked foreign account belongs.
    string accountId = 1;
    // Boolean indicating whether this is eligible for search.
    bool eligibleForSearch = 2;
    // Entity ad account link ID.
    string id = 3;
    // Internal ID for the web property to which this linked foreign account belongs.
    string internalWebPropertyId = 4;
    // Resource type for linked foreign account.
    string kind = 5;
    // The foreign account ID. For example the an AdWords `linkedAccountId` has the following format XXX-XXX-XXXX.
    string linkedAccountId = 6;
    // Remarketing audience ID to which this linked foreign account belongs.
    string remarketingAudienceId = 7;
    // The status of this foreign account link.
    string status = 8;
    // The type of the foreign account. For example, `ADWORDS_LINKS`, `DBM_LINKS`, `MCC_LINKS` or `OPTIMIZE`.
    string type = 9;
    // Web property ID of the form UA-XXXXX-YY to which this linked foreign account belongs.
    string webPropertyId = 10;
}

message McfData {
    // Column headers that list dimension names followed by the metric names. The order of dimensions and metrics is same as specified in the request.
    message ColumnHeader {
            // Column Type. Either DIMENSION or METRIC.
    string columnType = 1;
            // Data type. Dimension and metric values data types such as INTEGER, DOUBLE, CURRENCY, MCF_SEQUENCE etc.
    string dataType = 2;
            // Column name.
    string name = 3;
    }
    repeated ColumnHeader columnHeaders = 1;
    // Determines if the Analytics data contains sampled data.
    bool containsSampledData = 2;
    // Unique ID for this data response.
    string id = 3;
    // The maximum number of rows the response can contain, regardless of the actual number of rows returned. Its value ranges from 1 to 10,000 with a value of 1000 by default, or otherwise specified by the max-results query parameter.
    int32 itemsPerPage = 4;
    // Resource type.
    string kind = 5;
    // Link to next page for this Analytics data query.
    string nextLink = 6;
    // Link to previous page for this Analytics data query.
    string previousLink = 7;
    // Information for the view (profile), for which the Analytics data was requested.
    message ProfileInfo {
            // Account ID to which this view (profile) belongs.
    string accountId = 1;
            // Internal ID for the web property to which this view (profile) belongs.
    string internalWebPropertyId = 2;
            // View (Profile) ID.
    string profileId = 3;
            // View (Profile) name.
    string profileName = 4;
            // Table ID for view (profile).
    string tableId = 5;
            // Web Property ID to which this view (profile) belongs.
    string webPropertyId = 6;
    }
    ProfileInfo profileInfo = 8;
    // Analytics data request query parameters.
    message Query {
            // List of analytics dimensions.
    string dimensions = 1;
            // End date.
    string end_date = 2;
            // Comma-separated list of dimension or metric filters.
    string filters = 3;
            // Unique table ID.
    string ids = 4;
            // Maximum results per page.
    int32 max_results = 5;
            // List of analytics metrics.
    repeated string metrics = 6;
            // Desired sampling level
    string samplingLevel = 7;
            // Analytics advanced segment.
    string segment = 8;
            // List of dimensions or metrics based on which Analytics data is sorted.
    repeated string sort = 9;
            // Start date.
    string start_date = 10;
            // Start index.
    int32 start_index = 11;
    }
    Query query = 9;
    // Analytics data rows, where each row contains a list of dimension values followed by the metric values. The order of dimensions and metrics is same as specified in the request.
    message Row {
    }
    repeated Row rows = 10;
    // The number of samples used to calculate the result.
    string sampleSize = 11;
    // Total size of the sample space from which the samples were selected.
    string sampleSpace = 12;
    // Link to this page.
    string selfLink = 13;
    // The total number of rows for the query, regardless of the number of rows in the response.
    int32 totalResults = 14;
    // Total values for the requested metrics over all the results, not just the results returned in this response. The order of the metric totals is same as the metric order specified in the request.
    map<string, string> totalsForAllResults = 15;
}

message Profile {
    // Account ID to which this view (profile) belongs.
    string accountId = 1;
    // Indicates whether bot filtering is enabled for this view (profile).
    bool botFilteringEnabled = 2;
    // Child link for this view (profile). Points to the list of goals for this view (profile).
    message ChildLink {
            // Link to the list of goals for this view (profile).
    string href = 1;
            // Value is "analytics#goals".
    string type = 2;
    }
    ChildLink childLink = 3;
    // Time this view (profile) was created.
    string created = 4;
    // The currency type associated with this view (profile), defaults to USD. The supported values are:
    // USD, JPY, EUR, GBP, AUD, KRW, BRL, CNY, DKK, RUB, SEK, NOK, PLN, TRY, TWD, HKD, THB, IDR, ARS, MXN, VND, PHP, INR, CHF, CAD, CZK, NZD, HUF, BGN, LTL, ZAR, UAH, AED, BOB, CLP, COP, EGP, HRK, ILS, MAD, MYR, PEN, PKR, RON, RSD, SAR, SGD, VEF, LVL
    string currency = 5;
    // Default page for this view (profile).
    string defaultPage = 6;
    // Indicates whether ecommerce tracking is enabled for this view (profile).
    bool eCommerceTracking = 7;
    // Indicates whether enhanced ecommerce tracking is enabled for this view (profile). This property can only be enabled if ecommerce tracking is enabled.
    bool enhancedECommerceTracking = 8;
    // The query parameters that are excluded from this view (profile).
    string excludeQueryParameters = 9;
    // View (Profile) ID.
    string id = 10;
    // Internal ID for the web property to which this view (profile) belongs.
    string internalWebPropertyId = 11;
    // Resource type for Analytics view (profile).
    string kind = 12;
    // Name of this view (profile).
    string name = 13;
    // Parent link for this view (profile). Points to the web property to which this view (profile) belongs.
    message ParentLink {
            // Link to the web property to which this view (profile) belongs.
    string href = 1;
            // Value is "analytics#webproperty".
    string type = 2;
    }
    ParentLink parentLink = 14;
    // Permissions the user has for this view (profile).
    message Permissions {
            // All the permissions that the user has for this view (profile). These include any implied permissions (e.g., EDIT implies VIEW) or inherited permissions from the parent web property.
    repeated string effective = 1;
    }
    Permissions permissions = 15;
    // Link for this view (profile).
    string selfLink = 16;
    // Site search category parameters for this view (profile).
    string siteSearchCategoryParameters = 17;
    // The site search query parameters for this view (profile).
    string siteSearchQueryParameters = 18;
    // Indicates whether this view (profile) is starred or not.
    bool starred = 19;
    // Whether or not Analytics will strip search category parameters from the URLs in your reports.
    bool stripSiteSearchCategoryParameters = 20;
    // Whether or not Analytics will strip search query parameters from the URLs in your reports.
    bool stripSiteSearchQueryParameters = 21;
    // Time zone for which this view (profile) has been configured. Time zones are identified by strings from the TZ database.
    string timezone = 22;
    // View (Profile) type. Supported types: WEB or APP.
    string type = 23;
    // Time this view (profile) was last modified.
    string updated = 24;
    // Web property ID of the form UA-XXXXX-YY to which this view (profile) belongs.
    string webPropertyId = 25;
    // Website URL for this view (profile).
    string websiteUrl = 26;
}

message ProfileFilterLink {
    // Filter for this link.
    FilterRef filterRef = 1;
    // Profile filter link ID.
    string id = 2;
    // Resource type for Analytics filter.
    string kind = 3;
    // View (Profile) for this link.
    ProfileRef profileRef = 4;
    // The rank of this profile filter link relative to the other filters linked to the same profile.
    // For readonly (i.e., list and get) operations, the rank always starts at 1.
    // For write (i.e., create, update, or delete) operations, you may specify a value between 0 and 255 inclusively, [0, 255]. In order to insert a link at the end of the list, either don't specify a rank or set a rank to a number greater than the largest rank in the list. In order to insert a link to the beginning of the list specify a rank that is less than or equal to 1. The new link will move all existing filters with the same or lower rank down the list. After the link is inserted/updated/deleted all profile filter links will be renumbered starting at 1.
    int32 rank = 5;
    // Link for this profile filter link.
    string selfLink = 6;
}

message ProfileFilterLinks {
    // A list of profile filter links.
    repeated ProfileFilterLink items = 1;
    // The maximum number of resources the response can contain, regardless of the actual number of resources returned. Its value ranges from 1 to 1,000 with a value of 1000 by default, or otherwise specified by the max-results query parameter.
    int32 itemsPerPage = 2;
    // Collection type.
    string kind = 3;
    // Link to next page for this profile filter link collection.
    string nextLink = 4;
    // Link to previous page for this profile filter link collection.
    string previousLink = 5;
    // The starting index of the resources, which is 1 by default or otherwise specified by the start-index query parameter.
    int32 startIndex = 6;
    // The total number of results for the query, regardless of the number of results in the response.
    int32 totalResults = 7;
    // Email ID of the authenticated user
    string username = 8;
}

message ProfileRef {
    // Account ID to which this view (profile) belongs.
    string accountId = 1;
    // Link for this view (profile).
    string href = 2;
    // View (Profile) ID.
    string id = 3;
    // Internal ID for the web property to which this view (profile) belongs.
    string internalWebPropertyId = 4;
    // Analytics view (profile) reference.
    string kind = 5;
    // Name of this view (profile).
    string name = 6;
    // Web property ID of the form UA-XXXXX-YY to which this view (profile) belongs.
    string webPropertyId = 7;
}

message ProfileSummary {
    // View (profile) ID.
    string id = 1;
    // Resource type for Analytics ProfileSummary.
    string kind = 2;
    // View (profile) name.
    string name = 3;
    // Indicates whether this view (profile) is starred or not.
    bool starred = 4;
    // View (Profile) type. Supported types: WEB or APP.
    string type = 5;
}

message Profiles {
    // A list of views (profiles).
    repeated Profile items = 1;
    // The maximum number of resources the response can contain, regardless of the actual number of resources returned. Its value ranges from 1 to 1000 with a value of 1000 by default, or otherwise specified by the max-results query parameter.
    int32 itemsPerPage = 2;
    // Collection type.
    string kind = 3;
    // Link to next page for this view (profile) collection.
    string nextLink = 4;
    // Link to previous page for this view (profile) collection.
    string previousLink = 5;
    // The starting index of the resources, which is 1 by default or otherwise specified by the start-index query parameter.
    int32 startIndex = 6;
    // The total number of results for the query, regardless of the number of results in the response.
    int32 totalResults = 7;
    // Email ID of the authenticated user
    string username = 8;
}

message RealtimeData {
    // Column headers that list dimension names followed by the metric names. The order of dimensions and metrics is same as specified in the request.
    message ColumnHeader {
            // Column Type. Either DIMENSION or METRIC.
    string columnType = 1;
            // Data type. Dimension column headers have only STRING as the data type. Metric column headers have data types for metric values such as INTEGER, DOUBLE, CURRENCY etc.
    string dataType = 2;
            // Column name.
    string name = 3;
    }
    repeated ColumnHeader columnHeaders = 1;
    // Unique ID for this data response.
    string id = 2;
    // Resource type.
    string kind = 3;
    // Information for the view (profile), for which the real time data was requested.
    message ProfileInfo {
            // Account ID to which this view (profile) belongs.
    string accountId = 1;
            // Internal ID for the web property to which this view (profile) belongs.
    string internalWebPropertyId = 2;
            // View (Profile) ID.
    string profileId = 3;
            // View (Profile) name.
    string profileName = 4;
            // Table ID for view (profile).
    string tableId = 5;
            // Web Property ID to which this view (profile) belongs.
    string webPropertyId = 6;
    }
    ProfileInfo profileInfo = 4;
    // Real time data request query parameters.
    message Query {
            // List of real time dimensions.
    string dimensions = 1;
            // Comma-separated list of dimension or metric filters.
    string filters = 2;
            // Unique table ID.
    string ids = 3;
            // Maximum results per page.
    int32 max_results = 4;
            // List of real time metrics.
    repeated string metrics = 5;
            // List of dimensions or metrics based on which real time data is sorted.
    repeated string sort = 6;
    }
    Query query = 5;
    // Real time data rows, where each row contains a list of dimension values followed by the metric values. The order of dimensions and metrics is same as specified in the request.
    message Row {
    }
    repeated Row rows = 6;
    // Link to this page.
    string selfLink = 7;
    // The total number of rows for the query, regardless of the number of rows in the response.
    int32 totalResults = 8;
    // Total values for the requested metrics over all the results, not just the results returned in this response. The order of the metric totals is same as the metric order specified in the request.
    map<string, string> totalsForAllResults = 9;
}

message RemarketingAudience {
    // Account ID to which this remarketing audience belongs.
    string accountId = 1;
    // The simple audience definition that will cause a user to be added to an audience.
    message AudienceDefinition {
            // Defines the conditions to include users to the audience.
    IncludeConditions includeConditions = 1;
    }
    AudienceDefinition audienceDefinition = 2;
    // The type of audience, either SIMPLE or STATE_BASED.
    string audienceType = 3;
    // Time this remarketing audience was created.
    string created = 4;
    // The description of this remarketing audience.
    string description = 5;
    // Remarketing Audience ID.
    string id = 6;
    // Internal ID for the web property to which this remarketing audience belongs.
    string internalWebPropertyId = 7;
    // Collection type.
    string kind = 8;
    // The linked ad accounts associated with this remarketing audience. A remarketing audience can have only one linkedAdAccount currently.
    repeated LinkedForeignAccount linkedAdAccounts = 9;
    // The views (profiles) that this remarketing audience is linked to.
    repeated string linkedViews = 10;
    // The name of this remarketing audience.
    string name = 11;
    // A state based audience definition that will cause a user to be added or removed from an audience.
    message StateBasedAudienceDefinition {
            // Defines the conditions to exclude users from the audience.
    message ExcludeConditions {
                    // Whether to make the exclusion TEMPORARY or PERMANENT.
    string exclusionDuration = 1;
                    // The segment condition that will cause a user to be removed from an audience.
    string segment = 2;
        }
        ExcludeConditions excludeConditions = 1;
            // Defines the conditions to include users to the audience.
    IncludeConditions includeConditions = 2;
    }
    StateBasedAudienceDefinition stateBasedAudienceDefinition = 12;
    // Time this remarketing audience was last modified.
    string updated = 13;
    // Web property ID of the form UA-XXXXX-YY to which this remarketing audience belongs.
    string webPropertyId = 14;
}

message RemarketingAudiences {
    // A list of remarketing audiences.
    repeated RemarketingAudience items = 1;
    // The maximum number of resources the response can contain, regardless of the actual number of resources returned. Its value ranges from 1 to 1000 with a value of 1000 by default, or otherwise specified by the max-results query parameter.
    int32 itemsPerPage = 2;
    // Collection type.
    string kind = 3;
    // Link to next page for this remarketing audience collection.
    string nextLink = 4;
    // Link to previous page for this view (profile) collection.
    string previousLink = 5;
    // The starting index of the resources, which is 1 by default or otherwise specified by the start-index query parameter.
    int32 startIndex = 6;
    // The total number of results for the query, regardless of the number of results in the response.
    int32 totalResults = 7;
    // Email ID of the authenticated user
    string username = 8;
}

message Segment {
    // Time the segment was created.
    string created = 1;
    // Segment definition.
    string definition = 2;
    // Segment ID.
    string id = 3;
    // Resource type for Analytics segment.
    string kind = 4;
    // Segment name.
    string name = 5;
    // Segment ID. Can be used with the 'segment' parameter in Core Reporting API.
    string segmentId = 6;
    // Link for this segment.
    string selfLink = 7;
    // Type for a segment. Possible values are "BUILT_IN" or "CUSTOM".
    string type = 8;
    // Time the segment was last modified.
    string updated = 9;
}

message Segments {
    // A list of segments.
    repeated Segment items = 1;
    // The maximum number of resources the response can contain, regardless of the actual number of resources returned. Its value ranges from 1 to 1000 with a value of 1000 by default, or otherwise specified by the max-results query parameter.
    int32 itemsPerPage = 2;
    // Collection type for segments.
    string kind = 3;
    // Link to next page for this segment collection.
    string nextLink = 4;
    // Link to previous page for this segment collection.
    string previousLink = 5;
    // The starting index of the resources, which is 1 by default or otherwise specified by the start-index query parameter.
    int32 startIndex = 6;
    // The total number of results for the query, regardless of the number of results in the response.
    int32 totalResults = 7;
    // Email ID of the authenticated user
    string username = 8;
}

message UnsampledReport {
    // Account ID to which this unsampled report belongs.
    string accountId = 1;
    // Download details for a file stored in Google Cloud Storage.
    message CloudStorageDownloadDetails {
            // Id of the bucket the file object is stored in.
    string bucketId = 1;
            // Id of the file object containing the report data.
    string objectId = 2;
    }
    CloudStorageDownloadDetails cloudStorageDownloadDetails = 2;
    // Time this unsampled report was created.
    string created = 3;
    // The dimensions for the unsampled report.
    string dimensions = 4;
    // The type of download you need to use for the report data file. Possible values include `GOOGLE_DRIVE` and `GOOGLE_CLOUD_STORAGE`. If the value is `GOOGLE_DRIVE`, see the `driveDownloadDetails` field. If the value is `GOOGLE_CLOUD_STORAGE`, see the `cloudStorageDownloadDetails` field.
    string downloadType = 5;
    // Download details for a file stored in Google Drive.
    message DriveDownloadDetails {
            // Id of the document/file containing the report data.
    string documentId = 1;
    }
    DriveDownloadDetails driveDownloadDetails = 6;
    // The end date for the unsampled report.
    string end_date = 7;
    // The filters for the unsampled report.
    string filters = 8;
    // Unsampled report ID.
    string id = 9;
    // Resource type for an Analytics unsampled report.
    string kind = 10;
    // The metrics for the unsampled report.
    string metrics = 11;
    // View (Profile) ID to which this unsampled report belongs.
    string profileId = 12;
    // The segment for the unsampled report.
    string segment = 13;
    // Link for this unsampled report.
    string selfLink = 14;
    // The start date for the unsampled report.
    string start_date = 15;
    // Status of this unsampled report. Possible values are PENDING, COMPLETED, or FAILED.
    string status = 16;
    // Title of the unsampled report.
    string title = 17;
    // Time this unsampled report was last modified.
    string updated = 18;
    // Web property ID to which this unsampled report belongs. The web property ID is of the form UA-XXXXX-YY.
    string webPropertyId = 19;
}

message UnsampledReports {
    // A list of unsampled reports.
    repeated UnsampledReport items = 1;
    // The maximum number of resources the response can contain, regardless of the actual number of resources returned. Its value ranges from 1 to 1000 with a value of 1000 by default, or otherwise specified by the max-results query parameter.
    int32 itemsPerPage = 2;
    // Collection type.
    string kind = 3;
    // Link to next page for this unsampled report collection.
    string nextLink = 4;
    // Link to previous page for this unsampled report collection.
    string previousLink = 5;
    // The starting index of the resources, which is 1 by default or otherwise specified by the start-index query parameter.
    int32 startIndex = 6;
    // The total number of results for the query, regardless of the number of resources in the result.
    int32 totalResults = 7;
    // Email ID of the authenticated user
    string username = 8;
}

message Upload {
    // Account Id to which this upload belongs.
    string accountId = 1;
    // Custom data source Id to which this data import belongs.
    string customDataSourceId = 2;
    // Data import errors collection.
    repeated string errors = 3;
    // A unique ID for this upload.
    string id = 4;
    // Resource type for Analytics upload.
    string kind = 5;
    // Upload status. Possible values: PENDING, COMPLETED, FAILED, DELETING, DELETED.
    string status = 6;
    // Time this file is uploaded.
    string uploadTime = 7;
}

message Uploads {
    // A list of uploads.
    repeated Upload items = 1;
    // The maximum number of resources the response can contain, regardless of the actual number of resources returned. Its value ranges from 1 to 1000 with a value of 1000 by default, or otherwise specified by the max-results query parameter.
    int32 itemsPerPage = 2;
    // Collection type.
    string kind = 3;
    // Link to next page for this upload collection.
    string nextLink = 4;
    // Link to previous page for this upload collection.
    string previousLink = 5;
    // The starting index of the resources, which is 1 by default or otherwise specified by the start-index query parameter.
    int32 startIndex = 6;
    // The total number of results for the query, regardless of the number of resources in the result.
    int32 totalResults = 7;
}

message UserRef {
    // Email ID of this user.
    string email = 1;
    // User ID.
    string id = 2;
    string kind = 3;
}

message WebPropertyRef {
    // Account ID to which this web property belongs.
    string accountId = 1;
    // Link for this web property.
    string href = 2;
    // Web property ID of the form UA-XXXXX-YY.
    string id = 3;
    // Internal ID for this web property.
    string internalWebPropertyId = 4;
    // Analytics web property reference.
    string kind = 5;
    // Name of this web property.
    string name = 6;
}

message WebPropertySummary {
    // Web property ID of the form UA-XXXXX-YY.
    string id = 1;
    // Internal ID for this web property.
    string internalWebPropertyId = 2;
    // Resource type for Analytics WebPropertySummary.
    string kind = 3;
    // Level for this web property. Possible values are STANDARD or PREMIUM.
    string level = 4;
    // Web property name.
    string name = 5;
    // List of profiles under this web property.
    repeated ProfileSummary profiles = 6;
    // Indicates whether this web property is starred or not.
    bool starred = 7;
    // Website url for this web property.
    string websiteUrl = 8;
}

message Webproperties {
    // A list of web properties.
    repeated Webproperty items = 1;
    // The maximum number of resources the response can contain, regardless of the actual number of resources returned. Its value ranges from 1 to 1000 with a value of 1000 by default, or otherwise specified by the max-results query parameter.
    int32 itemsPerPage = 2;
    // Collection type.
    string kind = 3;
    // Link to next page for this web property collection.
    string nextLink = 4;
    // Link to previous page for this web property collection.
    string previousLink = 5;
    // The starting index of the resources, which is 1 by default or otherwise specified by the start-index query parameter.
    int32 startIndex = 6;
    // The total number of results for the query, regardless of the number of results in the response.
    int32 totalResults = 7;
    // Email ID of the authenticated user
    string username = 8;
}

message Webproperty {
    // Account ID to which this web property belongs.
    string accountId = 1;
    // Child link for this web property. Points to the list of views (profiles) for this web property.
    message ChildLink {
            // Link to the list of views (profiles) for this web property.
    string href = 1;
            // Type of the parent link. Its value is "analytics#profiles".
    string type = 2;
    }
    ChildLink childLink = 2;
    // Time this web property was created.
    string created = 3;
    // Default view (profile) ID.
    string defaultProfileId = 4;
    // Web property ID of the form UA-XXXXX-YY.
    string id = 5;
    // The industry vertical/category selected for this web property.
    string industryVertical = 6;
    // Internal ID for this web property.
    string internalWebPropertyId = 7;
    // Resource type for Analytics WebProperty.
    string kind = 8;
    // Level for this web property. Possible values are STANDARD or PREMIUM.
    string level = 9;
    // Name of this web property.
    string name = 10;
    // Parent link for this web property. Points to the account to which this web property belongs.
    message ParentLink {
            // Link to the account for this web property.
    string href = 1;
            // Type of the parent link. Its value is "analytics#account".
    string type = 2;
    }
    ParentLink parentLink = 11;
    // Permissions the user has for this web property.
    message Permissions {
            // All the permissions that the user has for this web property. These include any implied permissions (e.g., EDIT implies VIEW) or inherited permissions from the parent account.
    repeated string effective = 1;
    }
    Permissions permissions = 12;
    // View (Profile) count for this web property.
    int32 profileCount = 13;
    // Link for this web property.
    string selfLink = 14;
    // Indicates whether this web property is starred or not.
    bool starred = 15;
    // Time this web property was last modified.
    string updated = 16;
    // Website url for this web property.
    string websiteUrl = 17;
}

enum Alt {
    JSON = 0;
}

service GoogleAnalyticsService {
    // Returns Analytics data for a view (profile).
    rpc GetDataGa(GetDataGaRequest) returns (GaData) {
      option (google.api.http) = {
        get: "/analytics/v3/data/ga"
      };
    }
    // Returns Analytics Multi-Channel Funnels data for a view (profile).
    rpc GetDataMcf(GetDataMcfRequest) returns (McfData) {
      option (google.api.http) = {
        get: "/analytics/v3/data/mcf"
      };
    }
    // Returns real time data for a view (profile).
    rpc GetDataRealtime(GetDataRealtimeRequest) returns (RealtimeData) {
      option (google.api.http) = {
        get: "/analytics/v3/data/realtime"
      };
    }
    // Lists account summaries (lightweight tree comprised of accounts/properties/profiles) to which the user has access.
    rpc GetManagementAccountSummaries(GetManagementAccountSummariesRequest) returns (AccountSummaries) {
      option (google.api.http) = {
        get: "/analytics/v3/management/accountSummaries"
      };
    }
    // Lists all accounts to which the user has access.
    rpc GetManagementAccounts(GetManagementAccountsRequest) returns (Accounts) {
      option (google.api.http) = {
        get: "/analytics/v3/management/accounts"
      };
    }
    // Lists account-user links for a given account.
    rpc GetManagementAccountsAccountIdEntityUserLinks(GetManagementAccountsAccountIdEntityUserLinksRequest) returns (EntityUserLinks) {
      option (google.api.http) = {
        get: "/analytics/v3/management/accounts/{accountId}/entityUserLinks"
      };
    }
    // Adds a new user to the given account.
    rpc PostManagementAccountsAccountIdEntityUserLinks(PostManagementAccountsAccountIdEntityUserLinksRequest) returns (EntityUserLink) {
      option (google.api.http) = {
        post: "/analytics/v3/management/accounts/{accountId}/entityUserLinks"
        body: "body"
      };
    }
    // Updates permissions for an existing user on the given account.
    rpc PutManagementAccountsAccountIdEntityUserLinksLinkId(PutManagementAccountsAccountIdEntityUserLinksLinkIdRequest) returns (EntityUserLink) {
      option (google.api.http) = {
        put: "/analytics/v3/management/accounts/{accountId}/entityUserLinks/{linkId}"
        body: "body"
      };
    }
    // Removes a user from the given account.
    rpc DeleteManagementAccountsAccountIdEntityUserLinksLinkId(DeleteManagementAccountsAccountIdEntityUserLinksLinkIdRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        delete: "/analytics/v3/management/accounts/{accountId}/entityUserLinks/{linkId}"
      };
    }
    // Lists all filters for an account
    rpc GetManagementAccountsAccountIdFilters(GetManagementAccountsAccountIdFiltersRequest) returns (Filters) {
      option (google.api.http) = {
        get: "/analytics/v3/management/accounts/{accountId}/filters"
      };
    }
    // Create a new filter.
    rpc PostManagementAccountsAccountIdFilters(PostManagementAccountsAccountIdFiltersRequest) returns (Filter) {
      option (google.api.http) = {
        post: "/analytics/v3/management/accounts/{accountId}/filters"
        body: "body"
      };
    }
    // Returns a filters to which the user has access.
    rpc GetManagementAccountsAccountIdFiltersFilterId(GetManagementAccountsAccountIdFiltersFilterIdRequest) returns (Filter) {
      option (google.api.http) = {
        get: "/analytics/v3/management/accounts/{accountId}/filters/{filterId}"
      };
    }
    // Updates an existing filter.
    rpc PutManagementAccountsAccountIdFiltersFilterId(PutManagementAccountsAccountIdFiltersFilterIdRequest) returns (Filter) {
      option (google.api.http) = {
        put: "/analytics/v3/management/accounts/{accountId}/filters/{filterId}"
        body: "body"
      };
    }
    // Delete a filter.
    rpc DeleteManagementAccountsAccountIdFiltersFilterId(DeleteManagementAccountsAccountIdFiltersFilterIdRequest) returns (Filter) {
      option (google.api.http) = {
        delete: "/analytics/v3/management/accounts/{accountId}/filters/{filterId}"
      };
    }
    // Lists web properties to which the user has access.
    rpc GetManagementAccountsAccountIdWebproperties(GetManagementAccountsAccountIdWebpropertiesRequest) returns (Webproperties) {
      option (google.api.http) = {
        get: "/analytics/v3/management/accounts/{accountId}/webproperties"
      };
    }
    // Create a new property if the account has fewer than 20 properties. Web properties are visible in the Google Analytics interface only if they have at least one profile.
    rpc PostManagementAccountsAccountIdWebproperties(PostManagementAccountsAccountIdWebpropertiesRequest) returns (Webproperty) {
      option (google.api.http) = {
        post: "/analytics/v3/management/accounts/{accountId}/webproperties"
        body: "body"
      };
    }
    // Gets a web property to which the user has access.
    rpc GetManagementAccountsAccountIdWebpropertiesWebPropertyId(GetManagementAccountsAccountIdWebpropertiesWebPropertyIdRequest) returns (Webproperty) {
      option (google.api.http) = {
        get: "/analytics/v3/management/accounts/{accountId}/webproperties/{webPropertyId}"
      };
    }
    // Updates an existing web property.
    rpc PutManagementAccountsAccountIdWebpropertiesWebPropertyId(PutManagementAccountsAccountIdWebpropertiesWebPropertyIdRequest) returns (Webproperty) {
      option (google.api.http) = {
        put: "/analytics/v3/management/accounts/{accountId}/webproperties/{webPropertyId}"
        body: "body"
      };
    }
    // List custom data sources to which the user has access.
    rpc GetManagementAccountsAccountIdWebpropertiesWebPropertyIdCustomDataSources(GetManagementAccountsAccountIdWebpropertiesWebPropertyIdCustomDataSourcesRequest) returns (CustomDataSources) {
      option (google.api.http) = {
        get: "/analytics/v3/management/accounts/{accountId}/webproperties/{webPropertyId}/customDataSources"
      };
    }
    // Delete data associated with a previous upload.
    rpc PostManagementAccountsAccountIdWebpropertiesWebPropertyIdCustomDataSourcesCustomDataSourceIdDeleteUploadData(PostManagementAccountsAccountIdWebpropertiesWebPropertyIdCustomDataSourcesCustomDataSourceIdDeleteUploadDataRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        post: "/analytics/v3/management/accounts/{accountId}/webproperties/{webPropertyId}/customDataSources/{customDataSourceId}/deleteUploadData"
        body: "body"
      };
    }
    // List uploads to which the user has access.
    rpc GetManagementAccountsAccountIdWebpropertiesWebPropertyIdCustomDataSourcesCustomDataSourceIdUploads(GetManagementAccountsAccountIdWebpropertiesWebPropertyIdCustomDataSourcesCustomDataSourceIdUploadsRequest) returns (Uploads) {
      option (google.api.http) = {
        get: "/analytics/v3/management/accounts/{accountId}/webproperties/{webPropertyId}/customDataSources/{customDataSourceId}/uploads"
      };
    }
    // Upload data for a custom data source.
    rpc PostManagementAccountsAccountIdWebpropertiesWebPropertyIdCustomDataSourcesCustomDataSourceIdUploads(PostManagementAccountsAccountIdWebpropertiesWebPropertyIdCustomDataSourcesCustomDataSourceIdUploadsRequest) returns (Upload) {
      option (google.api.http) = {
        post: "/analytics/v3/management/accounts/{accountId}/webproperties/{webPropertyId}/customDataSources/{customDataSourceId}/uploads"
      };
    }
    // List uploads to which the user has access.
    rpc GetManagementAccountsAccountIdWebpropertiesWebPropertyIdCustomDataSourcesCustomDataSourceIdUploadsUploadId(GetManagementAccountsAccountIdWebpropertiesWebPropertyIdCustomDataSourcesCustomDataSourceIdUploadsUploadIdRequest) returns (Upload) {
      option (google.api.http) = {
        get: "/analytics/v3/management/accounts/{accountId}/webproperties/{webPropertyId}/customDataSources/{customDataSourceId}/uploads/{uploadId}"
      };
    }
    // Lists custom dimensions to which the user has access.
    rpc GetManagementAccountsAccountIdWebpropertiesWebPropertyIdCustomDimensions(GetManagementAccountsAccountIdWebpropertiesWebPropertyIdCustomDimensionsRequest) returns (CustomDimensions) {
      option (google.api.http) = {
        get: "/analytics/v3/management/accounts/{accountId}/webproperties/{webPropertyId}/customDimensions"
      };
    }
    // Create a new custom dimension.
    rpc PostManagementAccountsAccountIdWebpropertiesWebPropertyIdCustomDimensions(PostManagementAccountsAccountIdWebpropertiesWebPropertyIdCustomDimensionsRequest) returns (CustomDimension) {
      option (google.api.http) = {
        post: "/analytics/v3/management/accounts/{accountId}/webproperties/{webPropertyId}/customDimensions"
        body: "body"
      };
    }
    // Get a custom dimension to which the user has access.
    rpc GetManagementAccountsAccountIdWebpropertiesWebPropertyIdCustomDimensionsCustomDimensionId(GetManagementAccountsAccountIdWebpropertiesWebPropertyIdCustomDimensionsCustomDimensionIdRequest) returns (CustomDimension) {
      option (google.api.http) = {
        get: "/analytics/v3/management/accounts/{accountId}/webproperties/{webPropertyId}/customDimensions/{customDimensionId}"
      };
    }
    // Updates an existing custom dimension.
    rpc PutManagementAccountsAccountIdWebpropertiesWebPropertyIdCustomDimensionsCustomDimensionId(PutManagementAccountsAccountIdWebpropertiesWebPropertyIdCustomDimensionsCustomDimensionIdRequest) returns (CustomDimension) {
      option (google.api.http) = {
        put: "/analytics/v3/management/accounts/{accountId}/webproperties/{webPropertyId}/customDimensions/{customDimensionId}"
        body: "body"
      };
    }
    // Lists custom metrics to which the user has access.
    rpc GetManagementAccountsAccountIdWebpropertiesWebPropertyIdCustomMetrics(GetManagementAccountsAccountIdWebpropertiesWebPropertyIdCustomMetricsRequest) returns (CustomMetrics) {
      option (google.api.http) = {
        get: "/analytics/v3/management/accounts/{accountId}/webproperties/{webPropertyId}/customMetrics"
      };
    }
    // Create a new custom metric.
    rpc PostManagementAccountsAccountIdWebpropertiesWebPropertyIdCustomMetrics(PostManagementAccountsAccountIdWebpropertiesWebPropertyIdCustomMetricsRequest) returns (CustomMetric) {
      option (google.api.http) = {
        post: "/analytics/v3/management/accounts/{accountId}/webproperties/{webPropertyId}/customMetrics"
        body: "body"
      };
    }
    // Get a custom metric to which the user has access.
    rpc GetManagementAccountsAccountIdWebpropertiesWebPropertyIdCustomMetricsCustomMetricId(GetManagementAccountsAccountIdWebpropertiesWebPropertyIdCustomMetricsCustomMetricIdRequest) returns (CustomMetric) {
      option (google.api.http) = {
        get: "/analytics/v3/management/accounts/{accountId}/webproperties/{webPropertyId}/customMetrics/{customMetricId}"
      };
    }
    // Updates an existing custom metric.
    rpc PutManagementAccountsAccountIdWebpropertiesWebPropertyIdCustomMetricsCustomMetricId(PutManagementAccountsAccountIdWebpropertiesWebPropertyIdCustomMetricsCustomMetricIdRequest) returns (CustomMetric) {
      option (google.api.http) = {
        put: "/analytics/v3/management/accounts/{accountId}/webproperties/{webPropertyId}/customMetrics/{customMetricId}"
        body: "body"
      };
    }
    // Lists webProperty-AdWords links for a given web property.
    rpc GetManagementAccountsAccountIdWebpropertiesWebPropertyIdEntityAdWordsLinks(GetManagementAccountsAccountIdWebpropertiesWebPropertyIdEntityAdWordsLinksRequest) returns (EntityAdWordsLinks) {
      option (google.api.http) = {
        get: "/analytics/v3/management/accounts/{accountId}/webproperties/{webPropertyId}/entityAdWordsLinks"
      };
    }
    // Creates a webProperty-AdWords link.
    rpc PostManagementAccountsAccountIdWebpropertiesWebPropertyIdEntityAdWordsLinks(PostManagementAccountsAccountIdWebpropertiesWebPropertyIdEntityAdWordsLinksRequest) returns (EntityAdWordsLink) {
      option (google.api.http) = {
        post: "/analytics/v3/management/accounts/{accountId}/webproperties/{webPropertyId}/entityAdWordsLinks"
        body: "body"
      };
    }
    // Returns a web property-AdWords link to which the user has access.
    rpc GetManagementAccountsAccountIdWebpropertiesWebPropertyIdEntityAdWordsLinksWebPropertyAdWordsLinkId(GetManagementAccountsAccountIdWebpropertiesWebPropertyIdEntityAdWordsLinksWebPropertyAdWordsLinkIdRequest) returns (EntityAdWordsLink) {
      option (google.api.http) = {
        get: "/analytics/v3/management/accounts/{accountId}/webproperties/{webPropertyId}/entityAdWordsLinks/{webPropertyAdWordsLinkId}"
      };
    }
    // Updates an existing webProperty-AdWords link.
    rpc PutManagementAccountsAccountIdWebpropertiesWebPropertyIdEntityAdWordsLinksWebPropertyAdWordsLinkId(PutManagementAccountsAccountIdWebpropertiesWebPropertyIdEntityAdWordsLinksWebPropertyAdWordsLinkIdRequest) returns (EntityAdWordsLink) {
      option (google.api.http) = {
        put: "/analytics/v3/management/accounts/{accountId}/webproperties/{webPropertyId}/entityAdWordsLinks/{webPropertyAdWordsLinkId}"
        body: "body"
      };
    }
    // Deletes a web property-AdWords link.
    rpc DeleteManagementAccountsAccountIdWebpropertiesWebPropertyIdEntityAdWordsLinksWebPropertyAdWordsLinkId(DeleteManagementAccountsAccountIdWebpropertiesWebPropertyIdEntityAdWordsLinksWebPropertyAdWordsLinkIdRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        delete: "/analytics/v3/management/accounts/{accountId}/webproperties/{webPropertyId}/entityAdWordsLinks/{webPropertyAdWordsLinkId}"
      };
    }
    // Lists webProperty-user links for a given web property.
    rpc GetManagementAccountsAccountIdWebpropertiesWebPropertyIdEntityUserLinks(GetManagementAccountsAccountIdWebpropertiesWebPropertyIdEntityUserLinksRequest) returns (EntityUserLinks) {
      option (google.api.http) = {
        get: "/analytics/v3/management/accounts/{accountId}/webproperties/{webPropertyId}/entityUserLinks"
      };
    }
    // Adds a new user to the given web property.
    rpc PostManagementAccountsAccountIdWebpropertiesWebPropertyIdEntityUserLinks(PostManagementAccountsAccountIdWebpropertiesWebPropertyIdEntityUserLinksRequest) returns (EntityUserLink) {
      option (google.api.http) = {
        post: "/analytics/v3/management/accounts/{accountId}/webproperties/{webPropertyId}/entityUserLinks"
        body: "body"
      };
    }
    // Updates permissions for an existing user on the given web property.
    rpc PutManagementAccountsAccountIdWebpropertiesWebPropertyIdEntityUserLinksLinkId(PutManagementAccountsAccountIdWebpropertiesWebPropertyIdEntityUserLinksLinkIdRequest) returns (EntityUserLink) {
      option (google.api.http) = {
        put: "/analytics/v3/management/accounts/{accountId}/webproperties/{webPropertyId}/entityUserLinks/{linkId}"
        body: "body"
      };
    }
    // Removes a user from the given web property.
    rpc DeleteManagementAccountsAccountIdWebpropertiesWebPropertyIdEntityUserLinksLinkId(DeleteManagementAccountsAccountIdWebpropertiesWebPropertyIdEntityUserLinksLinkIdRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        delete: "/analytics/v3/management/accounts/{accountId}/webproperties/{webPropertyId}/entityUserLinks/{linkId}"
      };
    }
    // Lists views (profiles) to which the user has access.
    rpc GetManagementAccountsAccountIdWebpropertiesWebPropertyIdProfiles(GetManagementAccountsAccountIdWebpropertiesWebPropertyIdProfilesRequest) returns (Profiles) {
      option (google.api.http) = {
        get: "/analytics/v3/management/accounts/{accountId}/webproperties/{webPropertyId}/profiles"
      };
    }
    // Create a new view (profile).
    rpc PostManagementAccountsAccountIdWebpropertiesWebPropertyIdProfiles(PostManagementAccountsAccountIdWebpropertiesWebPropertyIdProfilesRequest) returns (Profile) {
      option (google.api.http) = {
        post: "/analytics/v3/management/accounts/{accountId}/webproperties/{webPropertyId}/profiles"
        body: "body"
      };
    }
    // Gets a view (profile) to which the user has access.
    rpc GetManagementAccountsAccountIdWebpropertiesWebPropertyIdProfilesProfileId(GetManagementAccountsAccountIdWebpropertiesWebPropertyIdProfilesProfileIdRequest) returns (Profile) {
      option (google.api.http) = {
        get: "/analytics/v3/management/accounts/{accountId}/webproperties/{webPropertyId}/profiles/{profileId}"
      };
    }
    // Updates an existing view (profile).
    rpc PutManagementAccountsAccountIdWebpropertiesWebPropertyIdProfilesProfileId(PutManagementAccountsAccountIdWebpropertiesWebPropertyIdProfilesProfileIdRequest) returns (Profile) {
      option (google.api.http) = {
        put: "/analytics/v3/management/accounts/{accountId}/webproperties/{webPropertyId}/profiles/{profileId}"
        body: "body"
      };
    }
    // Deletes a view (profile).
    rpc DeleteManagementAccountsAccountIdWebpropertiesWebPropertyIdProfilesProfileId(DeleteManagementAccountsAccountIdWebpropertiesWebPropertyIdProfilesProfileIdRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        delete: "/analytics/v3/management/accounts/{accountId}/webproperties/{webPropertyId}/profiles/{profileId}"
      };
    }
    // Lists profile-user links for a given view (profile).
    rpc GetManagementAccountsAccountIdWebpropertiesWebPropertyIdProfilesProfileIdEntityUserLinks(GetManagementAccountsAccountIdWebpropertiesWebPropertyIdProfilesProfileIdEntityUserLinksRequest) returns (EntityUserLinks) {
      option (google.api.http) = {
        get: "/analytics/v3/management/accounts/{accountId}/webproperties/{webPropertyId}/profiles/{profileId}/entityUserLinks"
      };
    }
    // Adds a new user to the given view (profile).
    rpc PostManagementAccountsAccountIdWebpropertiesWebPropertyIdProfilesProfileIdEntityUserLinks(PostManagementAccountsAccountIdWebpropertiesWebPropertyIdProfilesProfileIdEntityUserLinksRequest) returns (EntityUserLink) {
      option (google.api.http) = {
        post: "/analytics/v3/management/accounts/{accountId}/webproperties/{webPropertyId}/profiles/{profileId}/entityUserLinks"
        body: "body"
      };
    }
    // Updates permissions for an existing user on the given view (profile).
    rpc PutManagementAccountsAccountIdWebpropertiesWebPropertyIdProfilesProfileIdEntityUserLinksLinkId(PutManagementAccountsAccountIdWebpropertiesWebPropertyIdProfilesProfileIdEntityUserLinksLinkIdRequest) returns (EntityUserLink) {
      option (google.api.http) = {
        put: "/analytics/v3/management/accounts/{accountId}/webproperties/{webPropertyId}/profiles/{profileId}/entityUserLinks/{linkId}"
        body: "body"
      };
    }
    // Removes a user from the given view (profile).
    rpc DeleteManagementAccountsAccountIdWebpropertiesWebPropertyIdProfilesProfileIdEntityUserLinksLinkId(DeleteManagementAccountsAccountIdWebpropertiesWebPropertyIdProfilesProfileIdEntityUserLinksLinkIdRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        delete: "/analytics/v3/management/accounts/{accountId}/webproperties/{webPropertyId}/profiles/{profileId}/entityUserLinks/{linkId}"
      };
    }
    // Lists experiments to which the user has access.
    rpc GetManagementAccountsAccountIdWebpropertiesWebPropertyIdProfilesProfileIdExperiments(GetManagementAccountsAccountIdWebpropertiesWebPropertyIdProfilesProfileIdExperimentsRequest) returns (Experiments) {
      option (google.api.http) = {
        get: "/analytics/v3/management/accounts/{accountId}/webproperties/{webPropertyId}/profiles/{profileId}/experiments"
      };
    }
    // Create a new experiment.
    rpc PostManagementAccountsAccountIdWebpropertiesWebPropertyIdProfilesProfileIdExperiments(PostManagementAccountsAccountIdWebpropertiesWebPropertyIdProfilesProfileIdExperimentsRequest) returns (Experiment) {
      option (google.api.http) = {
        post: "/analytics/v3/management/accounts/{accountId}/webproperties/{webPropertyId}/profiles/{profileId}/experiments"
        body: "body"
      };
    }
    // Returns an experiment to which the user has access.
    rpc GetManagementAccountsAccountIdWebpropertiesWebPropertyIdProfilesProfileIdExperimentsExperimentId(GetManagementAccountsAccountIdWebpropertiesWebPropertyIdProfilesProfileIdExperimentsExperimentIdRequest) returns (Experiment) {
      option (google.api.http) = {
        get: "/analytics/v3/management/accounts/{accountId}/webproperties/{webPropertyId}/profiles/{profileId}/experiments/{experimentId}"
      };
    }
    // Update an existing experiment.
    rpc PutManagementAccountsAccountIdWebpropertiesWebPropertyIdProfilesProfileIdExperimentsExperimentId(PutManagementAccountsAccountIdWebpropertiesWebPropertyIdProfilesProfileIdExperimentsExperimentIdRequest) returns (Experiment) {
      option (google.api.http) = {
        put: "/analytics/v3/management/accounts/{accountId}/webproperties/{webPropertyId}/profiles/{profileId}/experiments/{experimentId}"
        body: "body"
      };
    }
    // Delete an experiment.
    rpc DeleteManagementAccountsAccountIdWebpropertiesWebPropertyIdProfilesProfileIdExperimentsExperimentId(DeleteManagementAccountsAccountIdWebpropertiesWebPropertyIdProfilesProfileIdExperimentsExperimentIdRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        delete: "/analytics/v3/management/accounts/{accountId}/webproperties/{webPropertyId}/profiles/{profileId}/experiments/{experimentId}"
      };
    }
    // Lists goals to which the user has access.
    rpc GetManagementAccountsAccountIdWebpropertiesWebPropertyIdProfilesProfileIdGoals(GetManagementAccountsAccountIdWebpropertiesWebPropertyIdProfilesProfileIdGoalsRequest) returns (Goals) {
      option (google.api.http) = {
        get: "/analytics/v3/management/accounts/{accountId}/webproperties/{webPropertyId}/profiles/{profileId}/goals"
      };
    }
    // Create a new goal.
    rpc PostManagementAccountsAccountIdWebpropertiesWebPropertyIdProfilesProfileIdGoals(PostManagementAccountsAccountIdWebpropertiesWebPropertyIdProfilesProfileIdGoalsRequest) returns (Goal) {
      option (google.api.http) = {
        post: "/analytics/v3/management/accounts/{accountId}/webproperties/{webPropertyId}/profiles/{profileId}/goals"
        body: "body"
      };
    }
    // Gets a goal to which the user has access.
    rpc GetManagementAccountsAccountIdWebpropertiesWebPropertyIdProfilesProfileIdGoalsGoalId(GetManagementAccountsAccountIdWebpropertiesWebPropertyIdProfilesProfileIdGoalsGoalIdRequest) returns (Goal) {
      option (google.api.http) = {
        get: "/analytics/v3/management/accounts/{accountId}/webproperties/{webPropertyId}/profiles/{profileId}/goals/{goalId}"
      };
    }
    // Updates an existing goal.
    rpc PutManagementAccountsAccountIdWebpropertiesWebPropertyIdProfilesProfileIdGoalsGoalId(PutManagementAccountsAccountIdWebpropertiesWebPropertyIdProfilesProfileIdGoalsGoalIdRequest) returns (Goal) {
      option (google.api.http) = {
        put: "/analytics/v3/management/accounts/{accountId}/webproperties/{webPropertyId}/profiles/{profileId}/goals/{goalId}"
        body: "body"
      };
    }
    // Lists all profile filter links for a profile.
    rpc GetManagementAccountsAccountIdWebpropertiesWebPropertyIdProfilesProfileIdProfileFilterLinks(GetManagementAccountsAccountIdWebpropertiesWebPropertyIdProfilesProfileIdProfileFilterLinksRequest) returns (ProfileFilterLinks) {
      option (google.api.http) = {
        get: "/analytics/v3/management/accounts/{accountId}/webproperties/{webPropertyId}/profiles/{profileId}/profileFilterLinks"
      };
    }
    // Create a new profile filter link.
    rpc PostManagementAccountsAccountIdWebpropertiesWebPropertyIdProfilesProfileIdProfileFilterLinks(PostManagementAccountsAccountIdWebpropertiesWebPropertyIdProfilesProfileIdProfileFilterLinksRequest) returns (ProfileFilterLink) {
      option (google.api.http) = {
        post: "/analytics/v3/management/accounts/{accountId}/webproperties/{webPropertyId}/profiles/{profileId}/profileFilterLinks"
        body: "body"
      };
    }
    // Returns a single profile filter link.
    rpc GetManagementAccountsAccountIdWebpropertiesWebPropertyIdProfilesProfileIdProfileFilterLinksLinkId(GetManagementAccountsAccountIdWebpropertiesWebPropertyIdProfilesProfileIdProfileFilterLinksLinkIdRequest) returns (ProfileFilterLink) {
      option (google.api.http) = {
        get: "/analytics/v3/management/accounts/{accountId}/webproperties/{webPropertyId}/profiles/{profileId}/profileFilterLinks/{linkId}"
      };
    }
    // Update an existing profile filter link.
    rpc PutManagementAccountsAccountIdWebpropertiesWebPropertyIdProfilesProfileIdProfileFilterLinksLinkId(PutManagementAccountsAccountIdWebpropertiesWebPropertyIdProfilesProfileIdProfileFilterLinksLinkIdRequest) returns (ProfileFilterLink) {
      option (google.api.http) = {
        put: "/analytics/v3/management/accounts/{accountId}/webproperties/{webPropertyId}/profiles/{profileId}/profileFilterLinks/{linkId}"
        body: "body"
      };
    }
    // Delete a profile filter link.
    rpc DeleteManagementAccountsAccountIdWebpropertiesWebPropertyIdProfilesProfileIdProfileFilterLinksLinkId(DeleteManagementAccountsAccountIdWebpropertiesWebPropertyIdProfilesProfileIdProfileFilterLinksLinkIdRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        delete: "/analytics/v3/management/accounts/{accountId}/webproperties/{webPropertyId}/profiles/{profileId}/profileFilterLinks/{linkId}"
      };
    }
    // Lists unsampled reports to which the user has access.
    rpc GetManagementAccountsAccountIdWebpropertiesWebPropertyIdProfilesProfileIdUnsampledReports(GetManagementAccountsAccountIdWebpropertiesWebPropertyIdProfilesProfileIdUnsampledReportsRequest) returns (UnsampledReports) {
      option (google.api.http) = {
        get: "/analytics/v3/management/accounts/{accountId}/webproperties/{webPropertyId}/profiles/{profileId}/unsampledReports"
      };
    }
    // Create a new unsampled report.
    rpc PostManagementAccountsAccountIdWebpropertiesWebPropertyIdProfilesProfileIdUnsampledReports(PostManagementAccountsAccountIdWebpropertiesWebPropertyIdProfilesProfileIdUnsampledReportsRequest) returns (UnsampledReport) {
      option (google.api.http) = {
        post: "/analytics/v3/management/accounts/{accountId}/webproperties/{webPropertyId}/profiles/{profileId}/unsampledReports"
        body: "body"
      };
    }
    // Returns a single unsampled report.
    rpc GetManagementAccountsAccountIdWebpropertiesWebPropertyIdProfilesProfileIdUnsampledReportsUnsampledReportId(GetManagementAccountsAccountIdWebpropertiesWebPropertyIdProfilesProfileIdUnsampledReportsUnsampledReportIdRequest) returns (UnsampledReport) {
      option (google.api.http) = {
        get: "/analytics/v3/management/accounts/{accountId}/webproperties/{webPropertyId}/profiles/{profileId}/unsampledReports/{unsampledReportId}"
      };
    }
    // Deletes an unsampled report.
    rpc DeleteManagementAccountsAccountIdWebpropertiesWebPropertyIdProfilesProfileIdUnsampledReportsUnsampledReportId(DeleteManagementAccountsAccountIdWebpropertiesWebPropertyIdProfilesProfileIdUnsampledReportsUnsampledReportIdRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        delete: "/analytics/v3/management/accounts/{accountId}/webproperties/{webPropertyId}/profiles/{profileId}/unsampledReports/{unsampledReportId}"
      };
    }
    // Lists remarketing audiences to which the user has access.
    rpc GetManagementAccountsAccountIdWebpropertiesWebPropertyIdRemarketingAudiences(GetManagementAccountsAccountIdWebpropertiesWebPropertyIdRemarketingAudiencesRequest) returns (RemarketingAudiences) {
      option (google.api.http) = {
        get: "/analytics/v3/management/accounts/{accountId}/webproperties/{webPropertyId}/remarketingAudiences"
      };
    }
    // Creates a new remarketing audience.
    rpc PostManagementAccountsAccountIdWebpropertiesWebPropertyIdRemarketingAudiences(PostManagementAccountsAccountIdWebpropertiesWebPropertyIdRemarketingAudiencesRequest) returns (RemarketingAudience) {
      option (google.api.http) = {
        post: "/analytics/v3/management/accounts/{accountId}/webproperties/{webPropertyId}/remarketingAudiences"
        body: "body"
      };
    }
    // Gets a remarketing audience to which the user has access.
    rpc GetManagementAccountsAccountIdWebpropertiesWebPropertyIdRemarketingAudiencesRemarketingAudienceId(GetManagementAccountsAccountIdWebpropertiesWebPropertyIdRemarketingAudiencesRemarketingAudienceIdRequest) returns (RemarketingAudience) {
      option (google.api.http) = {
        get: "/analytics/v3/management/accounts/{accountId}/webproperties/{webPropertyId}/remarketingAudiences/{remarketingAudienceId}"
      };
    }
    // Updates an existing remarketing audience.
    rpc PutManagementAccountsAccountIdWebpropertiesWebPropertyIdRemarketingAudiencesRemarketingAudienceId(PutManagementAccountsAccountIdWebpropertiesWebPropertyIdRemarketingAudiencesRemarketingAudienceIdRequest) returns (RemarketingAudience) {
      option (google.api.http) = {
        put: "/analytics/v3/management/accounts/{accountId}/webproperties/{webPropertyId}/remarketingAudiences/{remarketingAudienceId}"
        body: "body"
      };
    }
    // Delete a remarketing audience.
    rpc DeleteManagementAccountsAccountIdWebpropertiesWebPropertyIdRemarketingAudiencesRemarketingAudienceId(DeleteManagementAccountsAccountIdWebpropertiesWebPropertyIdRemarketingAudiencesRemarketingAudienceIdRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        delete: "/analytics/v3/management/accounts/{accountId}/webproperties/{webPropertyId}/remarketingAudiences/{remarketingAudienceId}"
      };
    }
    // Lists segments to which the user has access.
    rpc GetManagementSegments(GetManagementSegmentsRequest) returns (Segments) {
      option (google.api.http) = {
        get: "/analytics/v3/management/segments"
      };
    }
    // Lists all columns for a report type
    rpc GetMetadataReportTypeColumns(GetMetadataReportTypeColumnsRequest) returns (Columns) {
      option (google.api.http) = {
        get: "/analytics/v3/metadata/{reportType}/columns"
      };
    }
    // Creates an account ticket.
    rpc PostProvisioningCreateAccountTicket(PostProvisioningCreateAccountTicketRequest) returns (AccountTicket) {
      option (google.api.http) = {
        post: "/analytics/v3/provisioning/createAccountTicket"
        body: "body"
      };
    }
}
