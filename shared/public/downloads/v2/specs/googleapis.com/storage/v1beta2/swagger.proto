syntax = "proto3";

import "google/protobuf/empty.proto";

import "google/api/annotations.proto";

package cloudstorage;

message GetBRequest {
    alt alt = 1;
    string fields = 2;
    string key = 3;
    // Maximum number of buckets to return.
    int32 maxResults = 4;
    string oauth_token = 5;
    // A previously-returned page token representing part of the larger set of results to view.
    string pageToken = 6;
    boolean prettyPrint = 7;
    // A valid API project identifier.
    string project = 8;
    // Set of properties to return. Defaults to noAcl.
    enum GetBRequest_Projection {
        GETBREQUEST_PROJECTION_FULL = 0;
        GETBREQUEST_PROJECTION_NOACL = 1;
    }
    GetBRequest_Projection projection = 9;
    string quotaUser = 10;
    string userIp = 11;
}

message PostBRequest {
    alt alt = 1;
    Bucket body = 2;
    string fields = 3;
    string key = 4;
    string oauth_token = 5;
    boolean prettyPrint = 6;
    // A valid API project identifier.
    string project = 7;
    // Set of properties to return. Defaults to noAcl, unless the bucket resource specifies acl or defaultObjectAcl properties, when it defaults to full.
    enum PostBRequest_Projection {
        POSTBREQUEST_PROJECTION_FULL = 0;
        POSTBREQUEST_PROJECTION_NOACL = 1;
    }
    PostBRequest_Projection projection = 8;
    string quotaUser = 9;
    string userIp = 10;
}

message GetBBucketRequest {
    alt alt = 1;
    // Name of a bucket.
    string bucket = 2;
    string fields = 3;
    // Makes the return of the bucket metadata conditional on whether the bucket's current metageneration matches the given value.
    string ifMetagenerationMatch = 4;
    // Makes the return of the bucket metadata conditional on whether the bucket's current metageneration does not match the given value.
    string ifMetagenerationNotMatch = 5;
    string key = 6;
    string oauth_token = 7;
    boolean prettyPrint = 8;
    // Set of properties to return. Defaults to noAcl.
    enum GetBBucketRequest_Projection {
        GETBBUCKETREQUEST_PROJECTION_FULL = 0;
        GETBBUCKETREQUEST_PROJECTION_NOACL = 1;
    }
    GetBBucketRequest_Projection projection = 9;
    string quotaUser = 10;
    string userIp = 11;
}

message PutBBucketRequest {
    alt alt = 1;
    Bucket body = 2;
    // Name of a bucket.
    string bucket = 3;
    string fields = 4;
    // Makes the return of the bucket metadata conditional on whether the bucket's current metageneration matches the given value.
    string ifMetagenerationMatch = 5;
    // Makes the return of the bucket metadata conditional on whether the bucket's current metageneration does not match the given value.
    string ifMetagenerationNotMatch = 6;
    string key = 7;
    string oauth_token = 8;
    boolean prettyPrint = 9;
    // Set of properties to return. Defaults to full.
    enum PutBBucketRequest_Projection {
        PUTBBUCKETREQUEST_PROJECTION_FULL = 0;
        PUTBBUCKETREQUEST_PROJECTION_NOACL = 1;
    }
    PutBBucketRequest_Projection projection = 10;
    string quotaUser = 11;
    string userIp = 12;
}

message DeleteBBucketRequest {
    alt alt = 1;
    // Name of a bucket.
    string bucket = 2;
    string fields = 3;
    // Makes the return of the bucket metadata conditional on whether the bucket's current metageneration matches the given value.
    string ifMetagenerationMatch = 4;
    // Makes the return of the bucket metadata conditional on whether the bucket's current metageneration does not match the given value.
    string ifMetagenerationNotMatch = 5;
    string key = 6;
    string oauth_token = 7;
    boolean prettyPrint = 8;
    string quotaUser = 9;
    string userIp = 10;
}

message GetBBucketAclRequest {
    alt alt = 1;
    // Name of a bucket.
    string bucket = 2;
    string fields = 3;
    string key = 4;
    string oauth_token = 5;
    boolean prettyPrint = 6;
    string quotaUser = 7;
    string userIp = 8;
}

message PostBBucketAclRequest {
    alt alt = 1;
    BucketAccessControl body = 2;
    // Name of a bucket.
    string bucket = 3;
    string fields = 4;
    string key = 5;
    string oauth_token = 6;
    boolean prettyPrint = 7;
    string quotaUser = 8;
    string userIp = 9;
}

message GetBBucketAclEntityRequest {
    alt alt = 1;
    // Name of a bucket.
    string bucket = 2;
    // The entity holding the permission. Can be user-userId, user-emailAddress, group-groupId, group-emailAddress, allUsers, or allAuthenticatedUsers.
    string entity = 3;
    string fields = 4;
    string key = 5;
    string oauth_token = 6;
    boolean prettyPrint = 7;
    string quotaUser = 8;
    string userIp = 9;
}

message PutBBucketAclEntityRequest {
    alt alt = 1;
    BucketAccessControl body = 2;
    // Name of a bucket.
    string bucket = 3;
    // The entity holding the permission. Can be user-userId, user-emailAddress, group-groupId, group-emailAddress, allUsers, or allAuthenticatedUsers.
    string entity = 4;
    string fields = 5;
    string key = 6;
    string oauth_token = 7;
    boolean prettyPrint = 8;
    string quotaUser = 9;
    string userIp = 10;
}

message DeleteBBucketAclEntityRequest {
    alt alt = 1;
    // Name of a bucket.
    string bucket = 2;
    // The entity holding the permission. Can be user-userId, user-emailAddress, group-groupId, group-emailAddress, allUsers, or allAuthenticatedUsers.
    string entity = 3;
    string fields = 4;
    string key = 5;
    string oauth_token = 6;
    boolean prettyPrint = 7;
    string quotaUser = 8;
    string userIp = 9;
}

message GetBBucketDefaultObjectAclRequest {
    alt alt = 1;
    // Name of a bucket.
    string bucket = 2;
    string fields = 3;
    // If present, only return default ACL listing if the bucket's current metageneration matches this value.
    string ifMetagenerationMatch = 4;
    // If present, only return default ACL listing if the bucket's current metageneration does not match the given value.
    string ifMetagenerationNotMatch = 5;
    string key = 6;
    string oauth_token = 7;
    boolean prettyPrint = 8;
    string quotaUser = 9;
    string userIp = 10;
}

message PostBBucketDefaultObjectAclRequest {
    alt alt = 1;
    ObjectAccessControl body = 2;
    // Name of a bucket.
    string bucket = 3;
    string fields = 4;
    string key = 5;
    string oauth_token = 6;
    boolean prettyPrint = 7;
    string quotaUser = 8;
    string userIp = 9;
}

message GetBBucketDefaultObjectAclEntityRequest {
    alt alt = 1;
    // Name of a bucket.
    string bucket = 2;
    // The entity holding the permission. Can be user-userId, user-emailAddress, group-groupId, group-emailAddress, allUsers, or allAuthenticatedUsers.
    string entity = 3;
    string fields = 4;
    string key = 5;
    string oauth_token = 6;
    boolean prettyPrint = 7;
    string quotaUser = 8;
    string userIp = 9;
}

message PutBBucketDefaultObjectAclEntityRequest {
    alt alt = 1;
    ObjectAccessControl body = 2;
    // Name of a bucket.
    string bucket = 3;
    // The entity holding the permission. Can be user-userId, user-emailAddress, group-groupId, group-emailAddress, allUsers, or allAuthenticatedUsers.
    string entity = 4;
    string fields = 5;
    string key = 6;
    string oauth_token = 7;
    boolean prettyPrint = 8;
    string quotaUser = 9;
    string userIp = 10;
}

message DeleteBBucketDefaultObjectAclEntityRequest {
    alt alt = 1;
    // Name of a bucket.
    string bucket = 2;
    // The entity holding the permission. Can be user-userId, user-emailAddress, group-groupId, group-emailAddress, allUsers, or allAuthenticatedUsers.
    string entity = 3;
    string fields = 4;
    string key = 5;
    string oauth_token = 6;
    boolean prettyPrint = 7;
    string quotaUser = 8;
    string userIp = 9;
}

message GetBBucketORequest {
    alt alt = 1;
    // Name of the bucket in which to look for objects.
    string bucket = 2;
    // Returns results in a directory-like mode. items will contain only objects whose names, aside from the prefix, do not contain delimiter. Objects whose names, aside from the prefix, contain delimiter will have their name, truncated after the delimiter, returned in prefixes. Duplicate prefixes are omitted.
    string delimiter = 3;
    string fields = 4;
    string key = 5;
    // Maximum number of items plus prefixes to return. As duplicate prefixes are omitted, fewer total results may be returned than requested.
    int32 maxResults = 6;
    string oauth_token = 7;
    // A previously-returned page token representing part of the larger set of results to view.
    string pageToken = 8;
    // Filter results to objects whose names begin with this prefix.
    string prefix = 9;
    boolean prettyPrint = 10;
    // Set of properties to return. Defaults to noAcl.
    enum GetBBucketORequest_Projection {
        GETBBUCKETOREQUEST_PROJECTION_FULL = 0;
        GETBBUCKETOREQUEST_PROJECTION_NOACL = 1;
    }
    GetBBucketORequest_Projection projection = 11;
    string quotaUser = 12;
    string userIp = 13;
    // If true, lists all versions of a file as distinct results.
    bool versions = 14;
}

message PostBBucketORequest {
    alt alt = 1;
    Object body = 2;
    // Name of the bucket in which to store the new object. Overrides the provided object metadata's bucket value, if any.
    string bucket = 3;
    string fields = 4;
    // Makes the operation conditional on whether the object's current generation matches the given value.
    string ifGenerationMatch = 5;
    // Makes the operation conditional on whether the object's current generation does not match the given value.
    string ifGenerationNotMatch = 6;
    // Makes the operation conditional on whether the object's current metageneration matches the given value.
    string ifMetagenerationMatch = 7;
    // Makes the operation conditional on whether the object's current metageneration does not match the given value.
    string ifMetagenerationNotMatch = 8;
    string key = 9;
    // Name of the object. Required when the object metadata is not otherwise provided. Overrides the object metadata's name value, if any.
    string name = 10;
    string oauth_token = 11;
    boolean prettyPrint = 12;
    // Set of properties to return. Defaults to noAcl, unless the object resource specifies the acl property, when it defaults to full.
    enum PostBBucketORequest_Projection {
        POSTBBUCKETOREQUEST_PROJECTION_FULL = 0;
        POSTBBUCKETOREQUEST_PROJECTION_NOACL = 1;
    }
    PostBBucketORequest_Projection projection = 13;
    string quotaUser = 14;
    string userIp = 15;
}

message PostBBucketOWatchRequest {
    alt alt = 1;
    // Name of the bucket in which to look for objects.
    string bucket = 2;
    // Returns results in a directory-like mode. items will contain only objects whose names, aside from the prefix, do not contain delimiter. Objects whose names, aside from the prefix, contain delimiter will have their name, truncated after the delimiter, returned in prefixes. Duplicate prefixes are omitted.
    string delimiter = 3;
    string fields = 4;
    string key = 5;
    // Maximum number of items plus prefixes to return. As duplicate prefixes are omitted, fewer total results may be returned than requested.
    int32 maxResults = 6;
    string oauth_token = 7;
    // A previously-returned page token representing part of the larger set of results to view.
    string pageToken = 8;
    // Filter results to objects whose names begin with this prefix.
    string prefix = 9;
    boolean prettyPrint = 10;
    // Set of properties to return. Defaults to noAcl.
    enum PostBBucketOWatchRequest_Projection {
        POSTBBUCKETOWATCHREQUEST_PROJECTION_FULL = 0;
        POSTBBUCKETOWATCHREQUEST_PROJECTION_NOACL = 1;
    }
    PostBBucketOWatchRequest_Projection projection = 11;
    string quotaUser = 12;
    Channel resource = 13;
    string userIp = 14;
    // If true, lists all versions of a file as distinct results.
    bool versions = 15;
}

message GetBBucketOObjectRequest {
    alt alt = 1;
    // Name of the bucket in which the object resides.
    string bucket = 2;
    string fields = 3;
    // If present, selects a specific revision of this object (as opposed to the latest version, the default).
    string generation = 4;
    // Makes the operation conditional on whether the object's generation matches the given value.
    string ifGenerationMatch = 5;
    // Makes the operation conditional on whether the object's generation does not match the given value.
    string ifGenerationNotMatch = 6;
    // Makes the operation conditional on whether the object's current metageneration matches the given value.
    string ifMetagenerationMatch = 7;
    // Makes the operation conditional on whether the object's current metageneration does not match the given value.
    string ifMetagenerationNotMatch = 8;
    string key = 9;
    string oauth_token = 10;
    // Name of the object.
    string object = 11;
    boolean prettyPrint = 12;
    // Set of properties to return. Defaults to noAcl.
    enum GetBBucketOObjectRequest_Projection {
        GETBBUCKETOOBJECTREQUEST_PROJECTION_FULL = 0;
        GETBBUCKETOOBJECTREQUEST_PROJECTION_NOACL = 1;
    }
    GetBBucketOObjectRequest_Projection projection = 13;
    string quotaUser = 14;
    string userIp = 15;
}

message PutBBucketOObjectRequest {
    alt alt = 1;
    Object body = 2;
    // Name of the bucket in which the object resides.
    string bucket = 3;
    string fields = 4;
    // If present, selects a specific revision of this object (as opposed to the latest version, the default).
    string generation = 5;
    // Makes the operation conditional on whether the object's current generation matches the given value.
    string ifGenerationMatch = 6;
    // Makes the operation conditional on whether the object's current generation does not match the given value.
    string ifGenerationNotMatch = 7;
    // Makes the operation conditional on whether the object's current metageneration matches the given value.
    string ifMetagenerationMatch = 8;
    // Makes the operation conditional on whether the object's current metageneration does not match the given value.
    string ifMetagenerationNotMatch = 9;
    string key = 10;
    string oauth_token = 11;
    // Name of the object.
    string object = 12;
    boolean prettyPrint = 13;
    // Set of properties to return. Defaults to full.
    enum PutBBucketOObjectRequest_Projection {
        PUTBBUCKETOOBJECTREQUEST_PROJECTION_FULL = 0;
        PUTBBUCKETOOBJECTREQUEST_PROJECTION_NOACL = 1;
    }
    PutBBucketOObjectRequest_Projection projection = 14;
    string quotaUser = 15;
    string userIp = 16;
}

message DeleteBBucketOObjectRequest {
    alt alt = 1;
    // Name of the bucket in which the object resides.
    string bucket = 2;
    string fields = 3;
    // If present, permanently deletes a specific revision of this object (as opposed to the latest version, the default).
    string generation = 4;
    // Makes the operation conditional on whether the object's current generation matches the given value.
    string ifGenerationMatch = 5;
    // Makes the operation conditional on whether the object's current generation does not match the given value.
    string ifGenerationNotMatch = 6;
    // Makes the operation conditional on whether the object's current metageneration matches the given value.
    string ifMetagenerationMatch = 7;
    // Makes the operation conditional on whether the object's current metageneration does not match the given value.
    string ifMetagenerationNotMatch = 8;
    string key = 9;
    string oauth_token = 10;
    // Name of the object.
    string object = 11;
    boolean prettyPrint = 12;
    string quotaUser = 13;
    string userIp = 14;
}

message GetBBucketOObjectAclRequest {
    alt alt = 1;
    // Name of a bucket.
    string bucket = 2;
    string fields = 3;
    // If present, selects a specific revision of this object (as opposed to the latest version, the default).
    string generation = 4;
    string key = 5;
    string oauth_token = 6;
    // Name of the object.
    string object = 7;
    boolean prettyPrint = 8;
    string quotaUser = 9;
    string userIp = 10;
}

message PostBBucketOObjectAclRequest {
    alt alt = 1;
    ObjectAccessControl body = 2;
    // Name of a bucket.
    string bucket = 3;
    string fields = 4;
    // If present, selects a specific revision of this object (as opposed to the latest version, the default).
    string generation = 5;
    string key = 6;
    string oauth_token = 7;
    // Name of the object.
    string object = 8;
    boolean prettyPrint = 9;
    string quotaUser = 10;
    string userIp = 11;
}

message GetBBucketOObjectAclEntityRequest {
    alt alt = 1;
    // Name of a bucket.
    string bucket = 2;
    // The entity holding the permission. Can be user-userId, user-emailAddress, group-groupId, group-emailAddress, allUsers, or allAuthenticatedUsers.
    string entity = 3;
    string fields = 4;
    // If present, selects a specific revision of this object (as opposed to the latest version, the default).
    string generation = 5;
    string key = 6;
    string oauth_token = 7;
    // Name of the object.
    string object = 8;
    boolean prettyPrint = 9;
    string quotaUser = 10;
    string userIp = 11;
}

message PutBBucketOObjectAclEntityRequest {
    alt alt = 1;
    ObjectAccessControl body = 2;
    // Name of a bucket.
    string bucket = 3;
    // The entity holding the permission. Can be user-userId, user-emailAddress, group-groupId, group-emailAddress, allUsers, or allAuthenticatedUsers.
    string entity = 4;
    string fields = 5;
    // If present, selects a specific revision of this object (as opposed to the latest version, the default).
    string generation = 6;
    string key = 7;
    string oauth_token = 8;
    // Name of the object.
    string object = 9;
    boolean prettyPrint = 10;
    string quotaUser = 11;
    string userIp = 12;
}

message DeleteBBucketOObjectAclEntityRequest {
    alt alt = 1;
    // Name of a bucket.
    string bucket = 2;
    // The entity holding the permission. Can be user-userId, user-emailAddress, group-groupId, group-emailAddress, allUsers, or allAuthenticatedUsers.
    string entity = 3;
    string fields = 4;
    // If present, selects a specific revision of this object (as opposed to the latest version, the default).
    string generation = 5;
    string key = 6;
    string oauth_token = 7;
    // Name of the object.
    string object = 8;
    boolean prettyPrint = 9;
    string quotaUser = 10;
    string userIp = 11;
}

message PostBDestinationBucketODestinationObjectComposeRequest {
    alt alt = 1;
    ComposeRequest body = 2;
    // Name of the bucket in which to store the new object.
    string destinationBucket = 3;
    // Name of the new object.
    string destinationObject = 4;
    string fields = 5;
    // Makes the operation conditional on whether the object's current generation matches the given value.
    string ifGenerationMatch = 6;
    // Makes the operation conditional on whether the object's current metageneration matches the given value.
    string ifMetagenerationMatch = 7;
    string key = 8;
    string oauth_token = 9;
    boolean prettyPrint = 10;
    string quotaUser = 11;
    string userIp = 12;
}

message PostBSourceBucketOSourceObjectCopyToBDestinationBucketODestinationObjectRequest {
    alt alt = 1;
    Object body = 2;
    // Name of the bucket in which to store the new object. Overrides the provided object metadata's bucket value, if any.
    string destinationBucket = 3;
    // Name of the new object. Required when the object metadata is not otherwise provided. Overrides the object metadata's name value, if any.
    string destinationObject = 4;
    string fields = 5;
    // Makes the operation conditional on whether the destination object's current generation matches the given value.
    string ifGenerationMatch = 6;
    // Makes the operation conditional on whether the destination object's current generation does not match the given value.
    string ifGenerationNotMatch = 7;
    // Makes the operation conditional on whether the destination object's current metageneration matches the given value.
    string ifMetagenerationMatch = 8;
    // Makes the operation conditional on whether the destination object's current metageneration does not match the given value.
    string ifMetagenerationNotMatch = 9;
    // Makes the operation conditional on whether the source object's generation matches the given value.
    string ifSourceGenerationMatch = 10;
    // Makes the operation conditional on whether the source object's generation does not match the given value.
    string ifSourceGenerationNotMatch = 11;
    // Makes the operation conditional on whether the source object's current metageneration matches the given value.
    string ifSourceMetagenerationMatch = 12;
    // Makes the operation conditional on whether the source object's current metageneration does not match the given value.
    string ifSourceMetagenerationNotMatch = 13;
    string key = 14;
    string oauth_token = 15;
    boolean prettyPrint = 16;
    // Set of properties to return. Defaults to noAcl, unless the object resource specifies the acl property, when it defaults to full.
    enum PostBSourceBucketOSourceObjectCopyToBDestinationBucketODestinationObjectRequest_Projection {
        POSTBSOURCEBUCKETOSOURCEOBJECTCOPYTOBDESTINATIONBUCKETODESTINATIONOBJECTREQUEST_PROJECTION_FULL = 0;
        POSTBSOURCEBUCKETOSOURCEOBJECTCOPYTOBDESTINATIONBUCKETODESTINATIONOBJECTREQUEST_PROJECTION_NOACL = 1;
    }
    PostBSourceBucketOSourceObjectCopyToBDestinationBucketODestinationObjectRequest_Projection projection = 17;
    string quotaUser = 18;
    // Name of the bucket in which to find the source object.
    string sourceBucket = 19;
    // If present, selects a specific revision of the source object (as opposed to the latest version, the default).
    string sourceGeneration = 20;
    // Name of the source object.
    string sourceObject = 21;
    string userIp = 22;
}

message PostChannelsStopRequest {
    alt alt = 1;
    string fields = 2;
    string key = 3;
    string oauth_token = 4;
    boolean prettyPrint = 5;
    string quotaUser = 6;
    Channel resource = 7;
    string userIp = 8;
}

message Bucket {
    // Access controls on the bucket.
    repeated BucketAccessControl acl = 1;
    // The bucket's Cross-Origin Resource Sharing (CORS) configuration.
    message Cor {
            // The value, in seconds, to return in the  Access-Control-Max-Age header used in preflight responses.
    int32 maxAgeSeconds = 1;
            // The list of HTTP methods on which to include CORS response headers: GET, OPTIONS, POST, etc. Note, "*" is permitted in the list of methods, and means "any method".
    repeated string method = 2;
            // The list of Origins eligible to receive CORS response headers. Note: "*" is permitted in the list of origins, and means "any Origin".
    repeated string origin = 3;
            // The list of HTTP headers other than the simple response headers to give permission for the user-agent to share across domains.
    repeated string responseHeader = 4;
    }
    repeated Cor cors = 2;
    // Default access controls to apply to new objects when no ACL is provided.
    repeated ObjectAccessControl defaultObjectAcl = 3;
    // HTTP 1.1 Entity tag for the bucket.
    string etag = 4;
    // The ID of the bucket.
    string id = 5;
    // The kind of item this is. For buckets, this is always storage#bucket.
    string kind = 6;
    // The bucket's lifecycle configuration. See object lifecycle management for more information.
    message Lifecycle {
            // A lifecycle management rule, which is made of an action to take and the condition(s) under which the action will be taken.
    message Rule {
                    // The action to take.
    message Action {
                            // Type of the action. Currently only Delete is supported.
    string type = 1;
            }
            Action action = 1;
                    // The condition(s) under which the action will be taken.
    message Condition {
                            // Age of an object (in days). This condition is satisfied when an object reaches the specified age.
    int32 age = 1;
                            // A date in RFC 3339 format with only the date part, e.g. "2013-01-15". This condition is satisfied when an object is created before midnight of the specified date in UTC.
    string createdBefore = 2;
                            // Relevant only for versioned objects. If the value is true, this condition matches live objects; if the value is false, it matches archived objects.
    bool isLive = 3;
                            // Relevant only for versioned objects. If the value is N, this condition is satisfied when there are at least N versions (including the live version) newer than this version of the object.
    int32 numNewerVersions = 4;
            }
            Condition condition = 2;
        }
        repeated Rule rule = 1;
    }
    Lifecycle lifecycle = 7;
    // The location of the bucket. Object data for objects in the bucket resides in physical storage within this region. Typical values are US and EU. Defaults to US. See the developer's guide for the authoritative list.
    string location = 8;
    // The bucket's logging configuration, which defines the destination bucket and optional name prefix for the current bucket's logs.
    message Logging {
            // The destination bucket where the current bucket's logs should be placed.
    string logBucket = 1;
            // A prefix for log object names.
    string logObjectPrefix = 2;
    }
    Logging logging = 9;
    // The metadata generation of this bucket.
    string metageneration = 10;
    // The name of the bucket.
    string name = 11;
    // The owner of the bucket. This is always the project team's owner group.
    message Owner {
            // The entity, in the form group-groupId.
    string entity = 1;
            // The ID for the entity.
    string entityId = 2;
    }
    Owner owner = 12;
    // The URI of this bucket.
    string selfLink = 13;
    // The bucket's storage class. This defines how objects in the bucket are stored and determines the SLA and the cost of storage. Typical values are STANDARD and DURABLE_REDUCED_AVAILABILITY. Defaults to STANDARD. See the developer's guide for the authoritative list.
    string storageClass = 14;
    // Creation time of the bucket in RFC 3339 format.
    string timeCreated = 15;
    // The bucket's versioning configuration.
    message Versioning {
            // While set to true, versioning is fully enabled for this bucket.
    bool enabled = 1;
    }
    Versioning versioning = 16;
    // The bucket's website configuration.
    message Website {
            // Behaves as the bucket's directory index where missing objects are treated as potential directories.
    string mainPageSuffix = 1;
            // The custom object to return when a requested resource is not found.
    string notFoundPage = 2;
    }
    Website website = 17;
}

message BucketAccessControl {
    // The name of the bucket.
    string bucket = 1;
    // The domain associated with the entity, if any.
    string domain = 2;
    // The email address associated with the entity, if any.
    string email = 3;
    // The entity holding the permission, in one of the following forms: 
    // - user-userId 
    // - user-email 
    // - group-groupId 
    // - group-email 
    // - domain-domain 
    // - allUsers 
    // - allAuthenticatedUsers Examples: 
    // - The user liz@example.com would be user-liz@example.com. 
    // - The group example@googlegroups.com would be group-example@googlegroups.com. 
    // - To refer to all members of the Google Apps for Business domain example.com, the entity would be domain-example.com.
    string entity = 4;
    // The ID for the entity, if any.
    string entityId = 5;
    // HTTP 1.1 Entity tag for the access-control entry.
    string etag = 6;
    // The ID of the access-control entry.
    string id = 7;
    // The kind of item this is. For bucket access control entries, this is always storage#bucketAccessControl.
    string kind = 8;
    // The access permission for the entity. Can be READER, WRITER, or OWNER.
    string role = 9;
    // The link to this access-control entry.
    string selfLink = 10;
}

message BucketAccessControls {
    // The list of items.
    repeated BucketAccessControl items = 1;
    // The kind of item this is. For lists of bucket access control entries, this is always storage#bucketAccessControls.
    string kind = 2;
}

message Buckets {
    // The list of items.
    repeated Bucket items = 1;
    // The kind of item this is. For lists of buckets, this is always storage#buckets.
    string kind = 2;
    // The continuation token, used to page through large result sets. Provide this value in a subsequent request to return the next page of results.
    string nextPageToken = 3;
}

message Channel {
    // The address where notifications are delivered for this channel.
    string address = 1;
    // Date and time of notification channel expiration, expressed as a Unix timestamp, in milliseconds. Optional.
    string expiration = 2;
    // A UUID or similar unique string that identifies this channel.
    string id = 3;
    // Identifies this as a notification channel used to watch for changes to a resource. Value: the fixed string "api#channel".
    string kind = 4;
    // Additional parameters controlling delivery channel behavior. Optional.
    map<string, string> params = 5;
    // A Boolean value to indicate whether payload is wanted. Optional.
    bool payload = 6;
    // An opaque ID that identifies the resource being watched on this channel. Stable across different API versions.
    string resourceId = 7;
    // A version-specific identifier for the watched resource.
    string resourceUri = 8;
    // An arbitrary string delivered to the target address with each notification delivered over this channel. Optional.
    string token = 9;
    // The type of delivery mechanism used for this channel.
    string type = 10;
}

message ComposeRequest {
    // Properties of the resulting object
    Object destination = 1;
    // The kind of item this is.
    string kind = 2;
    // The list of source objects that will be concatenated into a single object.
    message SourceObject {
            // The generation of this object to use as the source.
    string generation = 1;
            // The source object's name. The source object's bucket is implicitly the destination bucket.
    string name = 2;
            // Conditions that must be met for this operation to execute.
    message ObjectPreconditions {
                    // Only perform the composition if the generation of the source object that would be used matches this value. If this value and a generation are both specified, they must be the same value or the call will fail.
    string ifGenerationMatch = 1;
        }
        ObjectPreconditions objectPreconditions = 3;
    }
    repeated SourceObject sourceObjects = 3;
}

message Object {
    // Access controls on the object.
    repeated ObjectAccessControl acl = 1;
    // The bucket containing this object.
    string bucket = 2;
    // Cache-Control directive for the object data.
    string cacheControl = 3;
    // Number of underlying components that make up this object. Components are accumulated by compose operations and are limited to a count of 32.
    int32 componentCount = 4;
    // Content-Disposition of the object data.
    string contentDisposition = 5;
    // Content-Encoding of the object data.
    string contentEncoding = 6;
    // Content-Language of the object data.
    string contentLanguage = 7;
    // Content-Type of the object data.
    string contentType = 8;
    // CRC32c checksum, as described in RFC 4960, Appendix B; encoded using base64.
    string crc32c = 9;
    // HTTP 1.1 Entity tag for the object.
    string etag = 10;
    // The content generation of this object. Used for object versioning.
    string generation = 11;
    // The ID of the object.
    string id = 12;
    // The kind of item this is. For objects, this is always storage#object.
    string kind = 13;
    // MD5 hash of the data; encoded using base64.
    string md5Hash = 14;
    // Media download link.
    string mediaLink = 15;
    // User-provided metadata, in key/value pairs.
    map<string, string> metadata = 16;
    // The generation of the metadata for this object at this generation. Used for metadata versioning. Has no meaning outside of the context of this generation.
    string metageneration = 17;
    // The name of this object. Required if not specified by URL parameter.
    string name = 18;
    // The owner of the object. This will always be the uploader of the object.
    message Owner {
            // The entity, in the form user-userId.
    string entity = 1;
            // The ID for the entity.
    string entityId = 2;
    }
    Owner owner = 19;
    // The link to this object.
    string selfLink = 20;
    // Content-Length of the data in bytes.
    string size = 21;
    // Storage class of the object.
    string storageClass = 22;
    // Deletion time of the object in RFC 3339 format. Will be returned if and only if this version of the object has been deleted.
    string timeDeleted = 23;
    // Modification time of the object metadata in RFC 3339 format.
    string updated = 24;
}

message ObjectAccessControl {
    // The name of the bucket.
    string bucket = 1;
    // The domain associated with the entity, if any.
    string domain = 2;
    // The email address associated with the entity, if any.
    string email = 3;
    // The entity holding the permission, in one of the following forms: 
    // - user-userId 
    // - user-email 
    // - group-groupId 
    // - group-email 
    // - domain-domain 
    // - allUsers 
    // - allAuthenticatedUsers Examples: 
    // - The user liz@example.com would be user-liz@example.com. 
    // - The group example@googlegroups.com would be group-example@googlegroups.com. 
    // - To refer to all members of the Google Apps for Business domain example.com, the entity would be domain-example.com.
    string entity = 4;
    // The ID for the entity, if any.
    string entityId = 5;
    // HTTP 1.1 Entity tag for the access-control entry.
    string etag = 6;
    // The content generation of the object.
    string generation = 7;
    // The ID of the access-control entry.
    string id = 8;
    // The kind of item this is. For object access control entries, this is always storage#objectAccessControl.
    string kind = 9;
    // The name of the object.
    string object = 10;
    // The access permission for the entity. Can be READER or OWNER.
    string role = 11;
    // The link to this access-control entry.
    string selfLink = 12;
}

message ObjectAccessControls {
    // The list of items.
    message Item {
    }
    repeated Item items = 1;
    // The kind of item this is. For lists of object access control entries, this is always storage#objectAccessControls.
    string kind = 2;
}

message Objects {
    // The list of items.
    repeated Object items = 1;
    // The kind of item this is. For lists of objects, this is always storage#objects.
    string kind = 2;
    // The continuation token, used to page through large result sets. Provide this value in a subsequent request to return the next page of results.
    string nextPageToken = 3;
    // The list of prefixes of objects matching-but-not-listed up to and including the requested delimiter.
    repeated string prefixes = 4;
}

enum Alt {
    JSON = 0;
}

service CloudStorageService {
    // Retrieves a list of buckets for a given project.
    rpc GetB(GetBRequest) returns (Buckets) {
      option (google.api.http) = {
        get: "/storage/v1beta2/b"
      };
    }
    // Creates a new bucket.
    rpc PostB(PostBRequest) returns (Bucket) {
      option (google.api.http) = {
        post: "/storage/v1beta2/b"
        body: "body"
      };
    }
    // Returns metadata for the specified bucket.
    rpc GetBBucket(GetBBucketRequest) returns (Bucket) {
      option (google.api.http) = {
        get: "/storage/v1beta2/b/{bucket}"
      };
    }
    // Updates a bucket.
    rpc PutBBucket(PutBBucketRequest) returns (Bucket) {
      option (google.api.http) = {
        put: "/storage/v1beta2/b/{bucket}"
        body: "body"
      };
    }
    // Permanently deletes an empty bucket.
    rpc DeleteBBucket(DeleteBBucketRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        delete: "/storage/v1beta2/b/{bucket}"
      };
    }
    // Retrieves ACL entries on the specified bucket.
    rpc GetBBucketAcl(GetBBucketAclRequest) returns (BucketAccessControls) {
      option (google.api.http) = {
        get: "/storage/v1beta2/b/{bucket}/acl"
      };
    }
    // Creates a new ACL entry on the specified bucket.
    rpc PostBBucketAcl(PostBBucketAclRequest) returns (BucketAccessControl) {
      option (google.api.http) = {
        post: "/storage/v1beta2/b/{bucket}/acl"
        body: "body"
      };
    }
    // Returns the ACL entry for the specified entity on the specified bucket.
    rpc GetBBucketAclEntity(GetBBucketAclEntityRequest) returns (BucketAccessControl) {
      option (google.api.http) = {
        get: "/storage/v1beta2/b/{bucket}/acl/{entity}"
      };
    }
    // Updates an ACL entry on the specified bucket.
    rpc PutBBucketAclEntity(PutBBucketAclEntityRequest) returns (BucketAccessControl) {
      option (google.api.http) = {
        put: "/storage/v1beta2/b/{bucket}/acl/{entity}"
        body: "body"
      };
    }
    // Permanently deletes the ACL entry for the specified entity on the specified bucket.
    rpc DeleteBBucketAclEntity(DeleteBBucketAclEntityRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        delete: "/storage/v1beta2/b/{bucket}/acl/{entity}"
      };
    }
    // Retrieves default object ACL entries on the specified bucket.
    rpc GetBBucketDefaultObjectAcl(GetBBucketDefaultObjectAclRequest) returns (ObjectAccessControls) {
      option (google.api.http) = {
        get: "/storage/v1beta2/b/{bucket}/defaultObjectAcl"
      };
    }
    // Creates a new default object ACL entry on the specified bucket.
    rpc PostBBucketDefaultObjectAcl(PostBBucketDefaultObjectAclRequest) returns (ObjectAccessControl) {
      option (google.api.http) = {
        post: "/storage/v1beta2/b/{bucket}/defaultObjectAcl"
        body: "body"
      };
    }
    // Returns the default object ACL entry for the specified entity on the specified bucket.
    rpc GetBBucketDefaultObjectAclEntity(GetBBucketDefaultObjectAclEntityRequest) returns (ObjectAccessControl) {
      option (google.api.http) = {
        get: "/storage/v1beta2/b/{bucket}/defaultObjectAcl/{entity}"
      };
    }
    // Updates a default object ACL entry on the specified bucket.
    rpc PutBBucketDefaultObjectAclEntity(PutBBucketDefaultObjectAclEntityRequest) returns (ObjectAccessControl) {
      option (google.api.http) = {
        put: "/storage/v1beta2/b/{bucket}/defaultObjectAcl/{entity}"
        body: "body"
      };
    }
    // Permanently deletes the default object ACL entry for the specified entity on the specified bucket.
    rpc DeleteBBucketDefaultObjectAclEntity(DeleteBBucketDefaultObjectAclEntityRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        delete: "/storage/v1beta2/b/{bucket}/defaultObjectAcl/{entity}"
      };
    }
    // Retrieves a list of objects matching the criteria.
    rpc GetBBucketO(GetBBucketORequest) returns (Objects) {
      option (google.api.http) = {
        get: "/storage/v1beta2/b/{bucket}/o"
      };
    }
    // Stores new data blobs and associated metadata.
    rpc PostBBucketO(PostBBucketORequest) returns (Object) {
      option (google.api.http) = {
        post: "/storage/v1beta2/b/{bucket}/o"
        body: "body"
      };
    }
    // Watch for changes on all objects in a bucket.
    rpc PostBBucketOWatch(PostBBucketOWatchRequest) returns (Channel) {
      option (google.api.http) = {
        post: "/storage/v1beta2/b/{bucket}/o/watch"
        body: "resource"
      };
    }
    // Retrieves objects or their associated metadata.
    rpc GetBBucketOObject(GetBBucketOObjectRequest) returns (Object) {
      option (google.api.http) = {
        get: "/storage/v1beta2/b/{bucket}/o/{object}"
      };
    }
    // Updates a data blob's associated metadata.
    rpc PutBBucketOObject(PutBBucketOObjectRequest) returns (Object) {
      option (google.api.http) = {
        put: "/storage/v1beta2/b/{bucket}/o/{object}"
        body: "body"
      };
    }
    // Deletes data blobs and associated metadata. Deletions are permanent if versioning is not enabled for the bucket, or if the generation parameter is used.
    rpc DeleteBBucketOObject(DeleteBBucketOObjectRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        delete: "/storage/v1beta2/b/{bucket}/o/{object}"
      };
    }
    // Retrieves ACL entries on the specified object.
    rpc GetBBucketOObjectAcl(GetBBucketOObjectAclRequest) returns (ObjectAccessControls) {
      option (google.api.http) = {
        get: "/storage/v1beta2/b/{bucket}/o/{object}/acl"
      };
    }
    // Creates a new ACL entry on the specified object.
    rpc PostBBucketOObjectAcl(PostBBucketOObjectAclRequest) returns (ObjectAccessControl) {
      option (google.api.http) = {
        post: "/storage/v1beta2/b/{bucket}/o/{object}/acl"
        body: "body"
      };
    }
    // Returns the ACL entry for the specified entity on the specified object.
    rpc GetBBucketOObjectAclEntity(GetBBucketOObjectAclEntityRequest) returns (ObjectAccessControl) {
      option (google.api.http) = {
        get: "/storage/v1beta2/b/{bucket}/o/{object}/acl/{entity}"
      };
    }
    // Updates an ACL entry on the specified object.
    rpc PutBBucketOObjectAclEntity(PutBBucketOObjectAclEntityRequest) returns (ObjectAccessControl) {
      option (google.api.http) = {
        put: "/storage/v1beta2/b/{bucket}/o/{object}/acl/{entity}"
        body: "body"
      };
    }
    // Permanently deletes the ACL entry for the specified entity on the specified object.
    rpc DeleteBBucketOObjectAclEntity(DeleteBBucketOObjectAclEntityRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        delete: "/storage/v1beta2/b/{bucket}/o/{object}/acl/{entity}"
      };
    }
    // Concatenates a list of existing objects into a new object in the same bucket.
    rpc PostBDestinationBucketODestinationObjectCompose(PostBDestinationBucketODestinationObjectComposeRequest) returns (Object) {
      option (google.api.http) = {
        post: "/storage/v1beta2/b/{destinationBucket}/o/{destinationObject}/compose"
        body: "body"
      };
    }
    // Copies an object to a destination in the same location. Optionally overrides metadata.
    rpc PostBSourceBucketOSourceObjectCopyToBDestinationBucketODestinationObject(PostBSourceBucketOSourceObjectCopyToBDestinationBucketODestinationObjectRequest) returns (Object) {
      option (google.api.http) = {
        post: "/storage/v1beta2/b/{sourceBucket}/o/{sourceObject}/copyTo/b/{destinationBucket}/o/{destinationObject}"
        body: "body"
      };
    }
    // Stop watching resources through this channel
    rpc PostChannelsStop(PostChannelsStopRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        post: "/storage/v1beta2/channels/stop"
        body: "resource"
      };
    }
}
