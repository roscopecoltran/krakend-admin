syntax = "proto3";

import "google/protobuf/empty.proto";

import "google/api/annotations.proto";

package cloudstorage;

message GetBRequest {
    alt alt = 1;
    string fields = 2;
    string key = 3;
    // Maximum number of buckets to return.
    int32 max_results = 4;
    string oauth_token = 5;
    // A previously-returned page token representing part of the larger set of results to view.
    string pageToken = 6;
    boolean prettyPrint = 7;
    // A valid API project identifier.
    string projectId = 8;
    // Set of properties to return. Defaults to no_acl.
    enum GetBRequest_Projection {
        GETBREQUEST_PROJECTION_FULL = 0;
        GETBREQUEST_PROJECTION_NO_ACL = 1;
    }
    GetBRequest_Projection projection = 9;
    string quotaUser = 10;
    string userIp = 11;
}

message PostBRequest {
    alt alt = 1;
    Bucket body = 2;
    string fields = 3;
    string key = 4;
    string oauth_token = 5;
    boolean prettyPrint = 6;
    // Set of properties to return. Defaults to no_acl, unless the bucket resource specifies acl or defaultObjectAcl properties, when it defaults to full.
    enum PostBRequest_Projection {
        POSTBREQUEST_PROJECTION_FULL = 0;
        POSTBREQUEST_PROJECTION_NO_ACL = 1;
    }
    PostBRequest_Projection projection = 7;
    string quotaUser = 8;
    string userIp = 9;
}

message GetBBucketRequest {
    alt alt = 1;
    // Name of a bucket.
    string bucket = 2;
    string fields = 3;
    string key = 4;
    string oauth_token = 5;
    boolean prettyPrint = 6;
    // Set of properties to return. Defaults to no_acl.
    enum GetBBucketRequest_Projection {
        GETBBUCKETREQUEST_PROJECTION_FULL = 0;
        GETBBUCKETREQUEST_PROJECTION_NO_ACL = 1;
    }
    GetBBucketRequest_Projection projection = 7;
    string quotaUser = 8;
    string userIp = 9;
}

message PutBBucketRequest {
    alt alt = 1;
    Bucket body = 2;
    // Name of a bucket.
    string bucket = 3;
    string fields = 4;
    string key = 5;
    string oauth_token = 6;
    boolean prettyPrint = 7;
    // Set of properties to return. Defaults to full.
    enum PutBBucketRequest_Projection {
        PUTBBUCKETREQUEST_PROJECTION_FULL = 0;
        PUTBBUCKETREQUEST_PROJECTION_NO_ACL = 1;
    }
    PutBBucketRequest_Projection projection = 8;
    string quotaUser = 9;
    string userIp = 10;
}

message DeleteBBucketRequest {
    alt alt = 1;
    // Name of a bucket.
    string bucket = 2;
    string fields = 3;
    string key = 4;
    string oauth_token = 5;
    boolean prettyPrint = 6;
    string quotaUser = 7;
    string userIp = 8;
}

message GetBBucketAclRequest {
    alt alt = 1;
    // Name of a bucket.
    string bucket = 2;
    string fields = 3;
    string key = 4;
    string oauth_token = 5;
    boolean prettyPrint = 6;
    string quotaUser = 7;
    string userIp = 8;
}

message PostBBucketAclRequest {
    alt alt = 1;
    BucketAccessControl body = 2;
    // Name of a bucket.
    string bucket = 3;
    string fields = 4;
    string key = 5;
    string oauth_token = 6;
    boolean prettyPrint = 7;
    string quotaUser = 8;
    string userIp = 9;
}

message GetBBucketAclEntityRequest {
    alt alt = 1;
    // Name of a bucket.
    string bucket = 2;
    // The entity holding the permission. Can be user-userId, user-emailAddress, group-groupId, group-emailAddress, allUsers, or allAuthenticatedUsers.
    string entity = 3;
    string fields = 4;
    string key = 5;
    string oauth_token = 6;
    boolean prettyPrint = 7;
    string quotaUser = 8;
    string userIp = 9;
}

message PutBBucketAclEntityRequest {
    alt alt = 1;
    BucketAccessControl body = 2;
    // Name of a bucket.
    string bucket = 3;
    // The entity holding the permission. Can be user-userId, user-emailAddress, group-groupId, group-emailAddress, allUsers, or allAuthenticatedUsers.
    string entity = 4;
    string fields = 5;
    string key = 6;
    string oauth_token = 7;
    boolean prettyPrint = 8;
    string quotaUser = 9;
    string userIp = 10;
}

message DeleteBBucketAclEntityRequest {
    alt alt = 1;
    // Name of a bucket.
    string bucket = 2;
    // The entity holding the permission. Can be user-userId, user-emailAddress, group-groupId, group-emailAddress, allUsers, or allAuthenticatedUsers.
    string entity = 3;
    string fields = 4;
    string key = 5;
    string oauth_token = 6;
    boolean prettyPrint = 7;
    string quotaUser = 8;
    string userIp = 9;
}

message GetBBucketORequest {
    alt alt = 1;
    // Name of the bucket in which to look for objects.
    string bucket = 2;
    // Returns results in a directory-like mode. items will contain only objects whose names, aside from the prefix, do not contain delimiter. Objects whose names, aside from the prefix, contain delimiter will have their name, truncated after the delimiter, returned in prefixes. Duplicate prefixes are omitted.
    string delimiter = 3;
    string fields = 4;
    string key = 5;
    // Maximum number of items plus prefixes to return. As duplicate prefixes are omitted, fewer total results may be returned than requested.
    int32 max_results = 6;
    string oauth_token = 7;
    // A previously-returned page token representing part of the larger set of results to view.
    string pageToken = 8;
    // Filter results to objects whose names begin with this prefix.
    string prefix = 9;
    boolean prettyPrint = 10;
    // Set of properties to return. Defaults to no_acl.
    enum GetBBucketORequest_Projection {
        GETBBUCKETOREQUEST_PROJECTION_FULL = 0;
        GETBBUCKETOREQUEST_PROJECTION_NO_ACL = 1;
    }
    GetBBucketORequest_Projection projection = 11;
    string quotaUser = 12;
    string userIp = 13;
}

message PostBBucketORequest {
    alt alt = 1;
    Object body = 2;
    // Name of the bucket in which to store the new object. Overrides the provided object metadata's bucket value, if any.
    string bucket = 3;
    string fields = 4;
    string key = 5;
    // Name of the object. Required when the object metadata is not otherwise provided. Overrides the object metadata's name value, if any.
    string name = 6;
    string oauth_token = 7;
    boolean prettyPrint = 8;
    // Set of properties to return. Defaults to no_acl, unless the object resource specifies the acl property, when it defaults to full.
    enum PostBBucketORequest_Projection {
        POSTBBUCKETOREQUEST_PROJECTION_FULL = 0;
        POSTBBUCKETOREQUEST_PROJECTION_NO_ACL = 1;
    }
    PostBBucketORequest_Projection projection = 9;
    string quotaUser = 10;
    string userIp = 11;
}

message GetBBucketOObjectRequest {
    alt alt = 1;
    // Name of the bucket in which the object resides.
    string bucket = 2;
    string fields = 3;
    string key = 4;
    string oauth_token = 5;
    // Name of the object.
    string object = 6;
    boolean prettyPrint = 7;
    // Set of properties to return. Defaults to no_acl.
    enum GetBBucketOObjectRequest_Projection {
        GETBBUCKETOOBJECTREQUEST_PROJECTION_FULL = 0;
        GETBBUCKETOOBJECTREQUEST_PROJECTION_NO_ACL = 1;
    }
    GetBBucketOObjectRequest_Projection projection = 8;
    string quotaUser = 9;
    string userIp = 10;
}

message PutBBucketOObjectRequest {
    alt alt = 1;
    Object body = 2;
    // Name of the bucket in which the object resides.
    string bucket = 3;
    string fields = 4;
    string key = 5;
    string oauth_token = 6;
    // Name of the object.
    string object = 7;
    boolean prettyPrint = 8;
    // Set of properties to return. Defaults to full.
    enum PutBBucketOObjectRequest_Projection {
        PUTBBUCKETOOBJECTREQUEST_PROJECTION_FULL = 0;
        PUTBBUCKETOOBJECTREQUEST_PROJECTION_NO_ACL = 1;
    }
    PutBBucketOObjectRequest_Projection projection = 9;
    string quotaUser = 10;
    string userIp = 11;
}

message DeleteBBucketOObjectRequest {
    alt alt = 1;
    // Name of the bucket in which the object resides.
    string bucket = 2;
    string fields = 3;
    string key = 4;
    string oauth_token = 5;
    // Name of the object.
    string object = 6;
    boolean prettyPrint = 7;
    string quotaUser = 8;
    string userIp = 9;
}

message GetBBucketOObjectAclRequest {
    alt alt = 1;
    // Name of a bucket.
    string bucket = 2;
    string fields = 3;
    string key = 4;
    string oauth_token = 5;
    // Name of the object.
    string object = 6;
    boolean prettyPrint = 7;
    string quotaUser = 8;
    string userIp = 9;
}

message PostBBucketOObjectAclRequest {
    alt alt = 1;
    ObjectAccessControl body = 2;
    // Name of a bucket.
    string bucket = 3;
    string fields = 4;
    string key = 5;
    string oauth_token = 6;
    // Name of the object.
    string object = 7;
    boolean prettyPrint = 8;
    string quotaUser = 9;
    string userIp = 10;
}

message GetBBucketOObjectAclEntityRequest {
    alt alt = 1;
    // Name of a bucket.
    string bucket = 2;
    // The entity holding the permission. Can be user-userId, user-emailAddress, group-groupId, group-emailAddress, allUsers, or allAuthenticatedUsers.
    string entity = 3;
    string fields = 4;
    string key = 5;
    string oauth_token = 6;
    // Name of the object.
    string object = 7;
    boolean prettyPrint = 8;
    string quotaUser = 9;
    string userIp = 10;
}

message PutBBucketOObjectAclEntityRequest {
    alt alt = 1;
    ObjectAccessControl body = 2;
    // Name of a bucket.
    string bucket = 3;
    // The entity holding the permission. Can be user-userId, user-emailAddress, group-groupId, group-emailAddress, allUsers, or allAuthenticatedUsers.
    string entity = 4;
    string fields = 5;
    string key = 6;
    string oauth_token = 7;
    // Name of the object.
    string object = 8;
    boolean prettyPrint = 9;
    string quotaUser = 10;
    string userIp = 11;
}

message DeleteBBucketOObjectAclEntityRequest {
    alt alt = 1;
    // Name of a bucket.
    string bucket = 2;
    // The entity holding the permission. Can be user-userId, user-emailAddress, group-groupId, group-emailAddress, allUsers, or allAuthenticatedUsers.
    string entity = 3;
    string fields = 4;
    string key = 5;
    string oauth_token = 6;
    // Name of the object.
    string object = 7;
    boolean prettyPrint = 8;
    string quotaUser = 9;
    string userIp = 10;
}

message Bucket {
    // Access controls on the bucket.
    repeated BucketAccessControl acl = 1;
    // Default access controls to apply to new objects when no ACL is provided.
    repeated ObjectAccessControl defaultObjectAcl = 2;
    // The name of the bucket.
    string id = 3;
    // The kind of item this is. For buckets, this is always storage#bucket.
    string kind = 4;
    // The location of the bucket. Object data for objects in the bucket resides in physical storage in this location. Can be US or EU. Defaults to US.
    string location = 5;
    // The owner of the bucket. This will always be the project team's owner group.
    message Owner {
            // The entity, in the form group-groupId.
    string entity = 1;
            // The ID for the entity.
    string entityId = 2;
    }
    Owner owner = 6;
    // The project the bucket belongs to.
    string projectId = 7;
    // The URI of this bucket.
    string selfLink = 8;
    // Creation time of the bucket in RFC 3339 format.
    string timeCreated = 9;
    // The bucket's website configuration.
    message Website {
            // Behaves as the bucket's directory index where missing objects are treated as potential directories.
    string mainPageSuffix = 1;
            // The custom object to return when a requested resource is not found.
    string notFoundPage = 2;
    }
    Website website = 10;
}

message BucketAccessControl {
    // The name of the bucket.
    string bucket = 1;
    // The domain associated with the entity, if any.
    string domain = 2;
    // The email address associated with the entity, if any.
    string email = 3;
    // The entity holding the permission, in one of the following forms: 
    // - user-userId 
    // - user-email 
    // - group-groupId 
    // - group-email 
    // - domain-domain 
    // - allUsers 
    // - allAuthenticatedUsers Examples: 
    // - The user liz@example.com would be user-liz@example.com. 
    // - The group example@googlegroups.com would be group-example@googlegroups.com. 
    // - To refer to all members of the Google Apps for Business domain example.com, the entity would be domain-example.com.
    string entity = 4;
    // The ID for the entity, if any.
    string entityId = 5;
    // The ID of the access-control entry.
    string id = 6;
    // The kind of item this is. For bucket access control entries, this is always storage#bucketAccessControl.
    string kind = 7;
    // The access permission for the entity. Can be READER, WRITER, or OWNER.
    string role = 8;
    // The link to this access-control entry.
    string selfLink = 9;
}

message BucketAccessControls {
    // The list of items.
    repeated BucketAccessControl items = 1;
    // The kind of item this is. For lists of bucket access control entries, this is always storage#bucketAccessControls.
    string kind = 2;
}

message Buckets {
    // The list of items.
    repeated Bucket items = 1;
    // The kind of item this is. For lists of buckets, this is always storage#buckets.
    string kind = 2;
    // The continuation token, used to page through large result sets. Provide this value in a subsequent request to return the next page of results.
    string nextPageToken = 3;
}

message Object {
    // Access controls on the object.
    repeated ObjectAccessControl acl = 1;
    // The bucket containing this object.
    string bucket = 2;
    // Cache-Control directive for the object data.
    string cacheControl = 3;
    // Content-Disposition of the object data.
    string contentDisposition = 4;
    // Content-Encoding of the object data.
    string contentEncoding = 5;
    // Content-Language of the object data.
    string contentLanguage = 6;
    // The ID of the object.
    string id = 7;
    // The kind of item this is. For objects, this is always storage#object.
    string kind = 8;
    // Object media data. Provided on your behalf when uploading raw media or multipart/related with an auxiliary media part.
    message Media {
            // Hash algorithm used. Currently only MD5 is supported. Required if a hash is provided.
    string algorithm = 1;
            // Content-Type of the object data.
    string contentType = 2;
            // URL-safe Base64-encoded data. This property can be used to insert objects under 64KB in size, and will only be returned in response to the get method for objects so created. When this resource is returned in response to the list method, this property is omitted.
    string data = 3;
            // Hash of the data. Required if a hash algorithm is provided.
    string hash = 4;
            // Content-Length of the data in bytes.
    string length = 5;
            // Media download link.
    string link = 6;
            // Creation time of the data in RFC 3339 format.
    string timeCreated = 7;
    }
    Media media = 9;
    // User-provided metadata, in key/value pairs.
    map<string, string> metadata = 10;
    // The name of this object. Required if not specified by URL parameter.
    string name = 11;
    // The owner of the object. This will always be the uploader of the object.
    message Owner {
            // The entity, in the form user-userId.
    string entity = 1;
            // The ID for the entity.
    string entityId = 2;
    }
    Owner owner = 12;
    // The link to this object.
    string selfLink = 13;
}

message ObjectAccessControl {
    // The name of the bucket.
    string bucket = 1;
    // The domain associated with the entity, if any.
    string domain = 2;
    // The email address associated with the entity, if any.
    string email = 3;
    // The entity holding the permission, in one of the following forms: 
    // - user-userId 
    // - user-email 
    // - group-groupId 
    // - group-email 
    // - domain-domain 
    // - allUsers 
    // - allAuthenticatedUsers Examples: 
    // - The user liz@example.com would be user-liz@example.com. 
    // - The group example@googlegroups.com would be group-example@googlegroups.com. 
    // - To refer to all members of the Google Apps for Business domain example.com, the entity would be domain-example.com.
    string entity = 4;
    // The ID for the entity, if any.
    string entityId = 5;
    // The ID of the access-control entry.
    string id = 6;
    // The kind of item this is. For object access control entries, this is always storage#objectAccessControl.
    string kind = 7;
    // The name of the object.
    string object = 8;
    // The access permission for the entity. Can be READER or OWNER.
    string role = 9;
    // The link to this access-control entry.
    string selfLink = 10;
}

message ObjectAccessControls {
    // The list of items.
    repeated ObjectAccessControl items = 1;
    // The kind of item this is. For lists of object access control entries, this is always storage#objectAccessControls.
    string kind = 2;
}

message Objects {
    // The list of items.
    repeated Object items = 1;
    // The kind of item this is. For lists of objects, this is always storage#objects.
    string kind = 2;
    // The continuation token, used to page through large result sets. Provide this value in a subsequent request to return the next page of results.
    string nextPageToken = 3;
    // The list of prefixes of objects matching-but-not-listed up to and including the requested delimiter.
    repeated string prefixes = 4;
}

enum Alt {
    JSON = 0;
}

service CloudStorageService {
    // Retrieves a list of buckets for a given project.
    rpc GetB(GetBRequest) returns (Buckets) {
      option (google.api.http) = {
        get: "/storage/v1beta1/b"
      };
    }
    // Creates a new bucket.
    rpc PostB(PostBRequest) returns (Bucket) {
      option (google.api.http) = {
        post: "/storage/v1beta1/b"
        body: "body"
      };
    }
    // Returns metadata for the specified bucket.
    rpc GetBBucket(GetBBucketRequest) returns (Bucket) {
      option (google.api.http) = {
        get: "/storage/v1beta1/b/{bucket}"
      };
    }
    // Updates a bucket.
    rpc PutBBucket(PutBBucketRequest) returns (Bucket) {
      option (google.api.http) = {
        put: "/storage/v1beta1/b/{bucket}"
        body: "body"
      };
    }
    // Deletes an empty bucket.
    rpc DeleteBBucket(DeleteBBucketRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        delete: "/storage/v1beta1/b/{bucket}"
      };
    }
    // Retrieves ACL entries on the specified bucket.
    rpc GetBBucketAcl(GetBBucketAclRequest) returns (BucketAccessControls) {
      option (google.api.http) = {
        get: "/storage/v1beta1/b/{bucket}/acl"
      };
    }
    // Creates a new ACL entry on the specified bucket.
    rpc PostBBucketAcl(PostBBucketAclRequest) returns (BucketAccessControl) {
      option (google.api.http) = {
        post: "/storage/v1beta1/b/{bucket}/acl"
        body: "body"
      };
    }
    // Returns the ACL entry for the specified entity on the specified bucket.
    rpc GetBBucketAclEntity(GetBBucketAclEntityRequest) returns (BucketAccessControl) {
      option (google.api.http) = {
        get: "/storage/v1beta1/b/{bucket}/acl/{entity}"
      };
    }
    // Updates an ACL entry on the specified bucket.
    rpc PutBBucketAclEntity(PutBBucketAclEntityRequest) returns (BucketAccessControl) {
      option (google.api.http) = {
        put: "/storage/v1beta1/b/{bucket}/acl/{entity}"
        body: "body"
      };
    }
    // Deletes the ACL entry for the specified entity on the specified bucket.
    rpc DeleteBBucketAclEntity(DeleteBBucketAclEntityRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        delete: "/storage/v1beta1/b/{bucket}/acl/{entity}"
      };
    }
    // Retrieves a list of objects matching the criteria.
    rpc GetBBucketO(GetBBucketORequest) returns (Objects) {
      option (google.api.http) = {
        get: "/storage/v1beta1/b/{bucket}/o"
      };
    }
    // Stores new data blobs and associated metadata.
    rpc PostBBucketO(PostBBucketORequest) returns (Object) {
      option (google.api.http) = {
        post: "/storage/v1beta1/b/{bucket}/o"
        body: "body"
      };
    }
    // Retrieves objects or their associated metadata.
    rpc GetBBucketOObject(GetBBucketOObjectRequest) returns (Object) {
      option (google.api.http) = {
        get: "/storage/v1beta1/b/{bucket}/o/{object}"
      };
    }
    // Updates a data blob's associated metadata.
    rpc PutBBucketOObject(PutBBucketOObjectRequest) returns (Object) {
      option (google.api.http) = {
        put: "/storage/v1beta1/b/{bucket}/o/{object}"
        body: "body"
      };
    }
    // Deletes data blobs and associated metadata.
    rpc DeleteBBucketOObject(DeleteBBucketOObjectRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        delete: "/storage/v1beta1/b/{bucket}/o/{object}"
      };
    }
    // Retrieves ACL entries on the specified object.
    rpc GetBBucketOObjectAcl(GetBBucketOObjectAclRequest) returns (ObjectAccessControls) {
      option (google.api.http) = {
        get: "/storage/v1beta1/b/{bucket}/o/{object}/acl"
      };
    }
    // Creates a new ACL entry on the specified object.
    rpc PostBBucketOObjectAcl(PostBBucketOObjectAclRequest) returns (ObjectAccessControl) {
      option (google.api.http) = {
        post: "/storage/v1beta1/b/{bucket}/o/{object}/acl"
        body: "body"
      };
    }
    // Returns the ACL entry for the specified entity on the specified object.
    rpc GetBBucketOObjectAclEntity(GetBBucketOObjectAclEntityRequest) returns (ObjectAccessControl) {
      option (google.api.http) = {
        get: "/storage/v1beta1/b/{bucket}/o/{object}/acl/{entity}"
      };
    }
    // Updates an ACL entry on the specified object.
    rpc PutBBucketOObjectAclEntity(PutBBucketOObjectAclEntityRequest) returns (ObjectAccessControl) {
      option (google.api.http) = {
        put: "/storage/v1beta1/b/{bucket}/o/{object}/acl/{entity}"
        body: "body"
      };
    }
    // Deletes the ACL entry for the specified entity on the specified object.
    rpc DeleteBBucketOObjectAclEntity(DeleteBBucketOObjectAclEntityRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        delete: "/storage/v1beta1/b/{bucket}/o/{object}/acl/{entity}"
      };
    }
}
