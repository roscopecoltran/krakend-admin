[[backends]]
  group = "cloud-storage-v1beta1"
  url_pattern = "/storage/v1beta1/b"
  method = "GET"
  host = ["https://www.googleapis.com"]
  whitelist = ["items", "kind", "nextPageToken"]
  concurrent_calls = 1
  [backends.extra_config]
    provider = "googleapis.com"
    description = "Lets you store and retrieve potentially-large, immutable data objects."
    version = "v1beta1"
    slug = "cloud-storage-v1beta1-storage-v1beta1-b"
    hosts = ["https://www.googleapis.com"]
    topics = ["storage"]
    schemes = ["https"]
    [backends.extra_config.mapping]
      items = "items"
      kind = "kind"
      nextPageToken = "nextPageToken"

[[backends]]
  group = "cloud-storage-v1beta1"
  url_pattern = "/storage/v1beta1/b/{bucket}"
  method = "GET"
  host = ["https://www.googleapis.com"]
  whitelist = ["acl", "defaultObjectAcl", "id", "kind", "location", "owner", "projectId", "selfLink", "timeCreated", "website"]
  concurrent_calls = 1
  [backends.extra_config]
    provider = "googleapis.com"
    description = "Lets you store and retrieve potentially-large, immutable data objects."
    version = "v1beta1"
    slug = "cloud-storage-v1beta1-storage-v1beta1-b-bucket"
    hosts = ["https://www.googleapis.com"]
    topics = ["storage"]
    schemes = ["https"]
    [backends.extra_config.mapping]
      acl = "acl"
      defaultObjectAcl = "defaultObjectAcl"
      id = "id"
      kind = "kind"
      location = "location"
      owner = "owner"
      projectId = "projectId"
      selfLink = "selfLink"
      timeCreated = "timeCreated"
      website = "website"

[[backends]]
  group = "cloud-storage-v1beta1"
  url_pattern = "/storage/v1beta1/b/{bucket}/acl"
  method = "GET"
  host = ["https://www.googleapis.com"]
  whitelist = ["items", "kind"]
  concurrent_calls = 1
  [backends.extra_config]
    provider = "googleapis.com"
    description = "Lets you store and retrieve potentially-large, immutable data objects."
    version = "v1beta1"
    slug = "cloud-storage-v1beta1-storage-v1beta1-b-bucket-acl"
    hosts = ["https://www.googleapis.com"]
    topics = ["storage"]
    schemes = ["https"]
    [backends.extra_config.mapping]
      items = "items"
      kind = "kind"

[[backends]]
  group = "cloud-storage-v1beta1"
  url_pattern = "/storage/v1beta1/b/{bucket}/acl/{entity}"
  method = "GET"
  host = ["https://www.googleapis.com"]
  whitelist = ["bucket", "domain", "email", "entity", "entityId", "id", "kind", "role", "selfLink"]
  concurrent_calls = 1
  [backends.extra_config]
    provider = "googleapis.com"
    description = "Lets you store and retrieve potentially-large, immutable data objects."
    version = "v1beta1"
    slug = "cloud-storage-v1beta1-storage-v1beta1-b-bucket-acl-entity"
    hosts = ["https://www.googleapis.com"]
    topics = ["storage"]
    schemes = ["https"]
    [backends.extra_config.mapping]
      bucket = "bucket"
      domain = "domain"
      email = "email"
      entity = "entity"
      entityId = "entityId"
      id = "id"
      kind = "kind"
      role = "role"
      selfLink = "selfLink"

[[backends]]
  group = "cloud-storage-v1beta1"
  url_pattern = "/storage/v1beta1/b/{bucket}/o"
  method = "GET"
  host = ["https://www.googleapis.com"]
  whitelist = ["items", "kind", "nextPageToken", "prefixes"]
  concurrent_calls = 1
  [backends.extra_config]
    provider = "googleapis.com"
    description = "Lets you store and retrieve potentially-large, immutable data objects."
    version = "v1beta1"
    slug = "cloud-storage-v1beta1-storage-v1beta1-b-bucket-o"
    hosts = ["https://www.googleapis.com"]
    topics = ["storage"]
    schemes = ["https"]
    [backends.extra_config.mapping]
      items = "items"
      kind = "kind"
      nextPageToken = "nextPageToken"
      prefixes = "prefixes"

[[backends]]
  group = "cloud-storage-v1beta1"
  url_pattern = "/storage/v1beta1/b/{bucket}/o/{object}"
  method = "GET"
  host = ["https://www.googleapis.com"]
  whitelist = ["acl", "bucket", "cacheControl", "contentDisposition", "contentEncoding", "contentLanguage", "id", "kind", "media", "metadata", "name", "owner", "selfLink"]
  concurrent_calls = 1
  [backends.extra_config]
    provider = "googleapis.com"
    description = "Lets you store and retrieve potentially-large, immutable data objects."
    version = "v1beta1"
    slug = "cloud-storage-v1beta1-storage-v1beta1-b-bucket-o-object"
    hosts = ["https://www.googleapis.com"]
    topics = ["storage"]
    schemes = ["https"]
    [backends.extra_config.mapping]
      acl = "acl"
      bucket = "bucket"
      cacheControl = "cacheControl"
      contentDisposition = "contentDisposition"
      contentEncoding = "contentEncoding"
      contentLanguage = "contentLanguage"
      id = "id"
      kind = "kind"
      media = "media"
      metadata = "metadata"
      name = "name"
      owner = "owner"
      selfLink = "selfLink"

[[backends]]
  group = "cloud-storage-v1beta1"
  url_pattern = "/storage/v1beta1/b/{bucket}/o/{object}/acl"
  method = "GET"
  host = ["https://www.googleapis.com"]
  whitelist = ["items", "kind"]
  concurrent_calls = 1
  [backends.extra_config]
    provider = "googleapis.com"
    description = "Lets you store and retrieve potentially-large, immutable data objects."
    version = "v1beta1"
    slug = "cloud-storage-v1beta1-storage-v1beta1-b-bucket-o-object-acl"
    hosts = ["https://www.googleapis.com"]
    topics = ["storage"]
    schemes = ["https"]
    [backends.extra_config.mapping]
      items = "items"
      kind = "kind"

[[backends]]
  group = "cloud-storage-v1beta1"
  url_pattern = "/storage/v1beta1/b/{bucket}/o/{object}/acl/{entity}"
  method = "GET"
  host = ["https://www.googleapis.com"]
  whitelist = ["bucket", "domain", "email", "entity", "entityId", "id", "kind", "object", "role", "selfLink"]
  concurrent_calls = 1
  [backends.extra_config]
    provider = "googleapis.com"
    description = "Lets you store and retrieve potentially-large, immutable data objects."
    version = "v1beta1"
    slug = "cloud-storage-v1beta1-storage-v1beta1-b-bucket-o-object-acl-entity"
    hosts = ["https://www.googleapis.com"]
    topics = ["storage"]
    schemes = ["https"]
    [backends.extra_config.mapping]
      bucket = "bucket"
      domain = "domain"
      email = "email"
      entity = "entity"
      entityId = "entityId"
      id = "id"
      kind = "kind"
      object = "object"
      role = "role"
      selfLink = "selfLink"
