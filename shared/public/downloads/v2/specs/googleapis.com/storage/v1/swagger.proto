syntax = "proto3";

import "google/protobuf/empty.proto";

import "google/api/annotations.proto";

package cloudstorage;

message GetBRequest {
    alt alt = 1;
    string fields = 2;
    string key = 3;
    // Maximum number of buckets to return in a single response. The service will use this parameter or 1,000 items, whichever is smaller.
    int32 maxResults = 4;
    string oauth_token = 5;
    // A previously-returned page token representing part of the larger set of results to view.
    string pageToken = 6;
    // Filter results to buckets whose names begin with this prefix.
    string prefix = 7;
    boolean prettyPrint = 8;
    // A valid API project identifier.
    string project = 9;
    // Set of properties to return. Defaults to noAcl.
    enum GetBRequest_Projection {
        GETBREQUEST_PROJECTION_FULL = 0;
        GETBREQUEST_PROJECTION_NOACL = 1;
    }
    GetBRequest_Projection projection = 10;
    string quotaUser = 11;
    string userIp = 12;
    // The project to be billed for this request, for Requester Pays buckets.
    string userProject = 13;
}

message PostBRequest {
    alt alt = 1;
    Bucket body = 2;
    string fields = 3;
    string key = 4;
    string oauth_token = 5;
    // Apply a predefined set of access controls to this bucket.
    enum PostBRequest_PredefinedAcl {
        POSTBREQUEST_PREDEFINEDACL_AUTHENTICATEDREAD = 0;
        POSTBREQUEST_PREDEFINEDACL_PRIVATE = 1;
        POSTBREQUEST_PREDEFINEDACL_PROJECTPRIVATE = 2;
        POSTBREQUEST_PREDEFINEDACL_PUBLICREAD = 3;
        POSTBREQUEST_PREDEFINEDACL_PUBLICREADWRITE = 4;
    }
    PostBRequest_PredefinedAcl predefinedAcl = 6;
    // Apply a predefined set of default object access controls to this bucket.
    enum PostBRequest_PredefinedDefaultObjectAcl {
        POSTBREQUEST_PREDEFINEDDEFAULTOBJECTACL_AUTHENTICATEDREAD = 0;
        POSTBREQUEST_PREDEFINEDDEFAULTOBJECTACL_BUCKETOWNERFULLCONTROL = 1;
        POSTBREQUEST_PREDEFINEDDEFAULTOBJECTACL_BUCKETOWNERREAD = 2;
        POSTBREQUEST_PREDEFINEDDEFAULTOBJECTACL_PRIVATE = 3;
        POSTBREQUEST_PREDEFINEDDEFAULTOBJECTACL_PROJECTPRIVATE = 4;
        POSTBREQUEST_PREDEFINEDDEFAULTOBJECTACL_PUBLICREAD = 5;
    }
    PostBRequest_PredefinedDefaultObjectAcl predefinedDefaultObjectAcl = 7;
    boolean prettyPrint = 8;
    // A valid API project identifier.
    string project = 9;
    // Set of properties to return. Defaults to noAcl, unless the bucket resource specifies acl or defaultObjectAcl properties, when it defaults to full.
    enum PostBRequest_Projection {
        POSTBREQUEST_PROJECTION_FULL = 0;
        POSTBREQUEST_PROJECTION_NOACL = 1;
    }
    PostBRequest_Projection projection = 10;
    string quotaUser = 11;
    string userIp = 12;
    // The project to be billed for this request, for Requester Pays buckets.
    string userProject = 13;
}

message GetBBucketRequest {
    alt alt = 1;
    // Name of a bucket.
    string bucket = 2;
    string fields = 3;
    // Makes the return of the bucket metadata conditional on whether the bucket's current metageneration matches the given value.
    string ifMetagenerationMatch = 4;
    // Makes the return of the bucket metadata conditional on whether the bucket's current metageneration does not match the given value.
    string ifMetagenerationNotMatch = 5;
    string key = 6;
    string oauth_token = 7;
    boolean prettyPrint = 8;
    // Set of properties to return. Defaults to noAcl.
    enum GetBBucketRequest_Projection {
        GETBBUCKETREQUEST_PROJECTION_FULL = 0;
        GETBBUCKETREQUEST_PROJECTION_NOACL = 1;
    }
    GetBBucketRequest_Projection projection = 9;
    string quotaUser = 10;
    string userIp = 11;
    // The project to be billed for this request, for Requester Pays buckets.
    string userProject = 12;
}

message PutBBucketRequest {
    alt alt = 1;
    Bucket body = 2;
    // Name of a bucket.
    string bucket = 3;
    string fields = 4;
    // Makes the return of the bucket metadata conditional on whether the bucket's current metageneration matches the given value.
    string ifMetagenerationMatch = 5;
    // Makes the return of the bucket metadata conditional on whether the bucket's current metageneration does not match the given value.
    string ifMetagenerationNotMatch = 6;
    string key = 7;
    string oauth_token = 8;
    // Apply a predefined set of access controls to this bucket.
    enum PutBBucketRequest_PredefinedAcl {
        PUTBBUCKETREQUEST_PREDEFINEDACL_AUTHENTICATEDREAD = 0;
        PUTBBUCKETREQUEST_PREDEFINEDACL_PRIVATE = 1;
        PUTBBUCKETREQUEST_PREDEFINEDACL_PROJECTPRIVATE = 2;
        PUTBBUCKETREQUEST_PREDEFINEDACL_PUBLICREAD = 3;
        PUTBBUCKETREQUEST_PREDEFINEDACL_PUBLICREADWRITE = 4;
    }
    PutBBucketRequest_PredefinedAcl predefinedAcl = 9;
    // Apply a predefined set of default object access controls to this bucket.
    enum PutBBucketRequest_PredefinedDefaultObjectAcl {
        PUTBBUCKETREQUEST_PREDEFINEDDEFAULTOBJECTACL_AUTHENTICATEDREAD = 0;
        PUTBBUCKETREQUEST_PREDEFINEDDEFAULTOBJECTACL_BUCKETOWNERFULLCONTROL = 1;
        PUTBBUCKETREQUEST_PREDEFINEDDEFAULTOBJECTACL_BUCKETOWNERREAD = 2;
        PUTBBUCKETREQUEST_PREDEFINEDDEFAULTOBJECTACL_PRIVATE = 3;
        PUTBBUCKETREQUEST_PREDEFINEDDEFAULTOBJECTACL_PROJECTPRIVATE = 4;
        PUTBBUCKETREQUEST_PREDEFINEDDEFAULTOBJECTACL_PUBLICREAD = 5;
    }
    PutBBucketRequest_PredefinedDefaultObjectAcl predefinedDefaultObjectAcl = 10;
    boolean prettyPrint = 11;
    // Set of properties to return. Defaults to full.
    enum PutBBucketRequest_Projection {
        PUTBBUCKETREQUEST_PROJECTION_FULL = 0;
        PUTBBUCKETREQUEST_PROJECTION_NOACL = 1;
    }
    PutBBucketRequest_Projection projection = 12;
    string quotaUser = 13;
    string userIp = 14;
    // The project to be billed for this request, for Requester Pays buckets.
    string userProject = 15;
}

message DeleteBBucketRequest {
    alt alt = 1;
    // Name of a bucket.
    string bucket = 2;
    string fields = 3;
    // If set, only deletes the bucket if its metageneration matches this value.
    string ifMetagenerationMatch = 4;
    // If set, only deletes the bucket if its metageneration does not match this value.
    string ifMetagenerationNotMatch = 5;
    string key = 6;
    string oauth_token = 7;
    boolean prettyPrint = 8;
    string quotaUser = 9;
    string userIp = 10;
    // The project to be billed for this request, for Requester Pays buckets.
    string userProject = 11;
}

message GetBBucketAclRequest {
    alt alt = 1;
    // Name of a bucket.
    string bucket = 2;
    string fields = 3;
    string key = 4;
    string oauth_token = 5;
    boolean prettyPrint = 6;
    string quotaUser = 7;
    string userIp = 8;
    // The project to be billed for this request, for Requester Pays buckets.
    string userProject = 9;
}

message PostBBucketAclRequest {
    alt alt = 1;
    BucketAccessControl body = 2;
    // Name of a bucket.
    string bucket = 3;
    string fields = 4;
    string key = 5;
    string oauth_token = 6;
    boolean prettyPrint = 7;
    string quotaUser = 8;
    string userIp = 9;
    // The project to be billed for this request, for Requester Pays buckets.
    string userProject = 10;
}

message GetBBucketAclEntityRequest {
    alt alt = 1;
    // Name of a bucket.
    string bucket = 2;
    // The entity holding the permission. Can be user-userId, user-emailAddress, group-groupId, group-emailAddress, allUsers, or allAuthenticatedUsers.
    string entity = 3;
    string fields = 4;
    string key = 5;
    string oauth_token = 6;
    boolean prettyPrint = 7;
    string quotaUser = 8;
    string userIp = 9;
    // The project to be billed for this request, for Requester Pays buckets.
    string userProject = 10;
}

message PutBBucketAclEntityRequest {
    alt alt = 1;
    BucketAccessControl body = 2;
    // Name of a bucket.
    string bucket = 3;
    // The entity holding the permission. Can be user-userId, user-emailAddress, group-groupId, group-emailAddress, allUsers, or allAuthenticatedUsers.
    string entity = 4;
    string fields = 5;
    string key = 6;
    string oauth_token = 7;
    boolean prettyPrint = 8;
    string quotaUser = 9;
    string userIp = 10;
    // The project to be billed for this request, for Requester Pays buckets.
    string userProject = 11;
}

message DeleteBBucketAclEntityRequest {
    alt alt = 1;
    // Name of a bucket.
    string bucket = 2;
    // The entity holding the permission. Can be user-userId, user-emailAddress, group-groupId, group-emailAddress, allUsers, or allAuthenticatedUsers.
    string entity = 3;
    string fields = 4;
    string key = 5;
    string oauth_token = 6;
    boolean prettyPrint = 7;
    string quotaUser = 8;
    string userIp = 9;
    // The project to be billed for this request, for Requester Pays buckets.
    string userProject = 10;
}

message GetBBucketDefaultObjectAclRequest {
    alt alt = 1;
    // Name of a bucket.
    string bucket = 2;
    string fields = 3;
    // If present, only return default ACL listing if the bucket's current metageneration matches this value.
    string ifMetagenerationMatch = 4;
    // If present, only return default ACL listing if the bucket's current metageneration does not match the given value.
    string ifMetagenerationNotMatch = 5;
    string key = 6;
    string oauth_token = 7;
    boolean prettyPrint = 8;
    string quotaUser = 9;
    string userIp = 10;
    // The project to be billed for this request, for Requester Pays buckets.
    string userProject = 11;
}

message PostBBucketDefaultObjectAclRequest {
    alt alt = 1;
    ObjectAccessControl body = 2;
    // Name of a bucket.
    string bucket = 3;
    string fields = 4;
    string key = 5;
    string oauth_token = 6;
    boolean prettyPrint = 7;
    string quotaUser = 8;
    string userIp = 9;
    // The project to be billed for this request, for Requester Pays buckets.
    string userProject = 10;
}

message GetBBucketDefaultObjectAclEntityRequest {
    alt alt = 1;
    // Name of a bucket.
    string bucket = 2;
    // The entity holding the permission. Can be user-userId, user-emailAddress, group-groupId, group-emailAddress, allUsers, or allAuthenticatedUsers.
    string entity = 3;
    string fields = 4;
    string key = 5;
    string oauth_token = 6;
    boolean prettyPrint = 7;
    string quotaUser = 8;
    string userIp = 9;
    // The project to be billed for this request, for Requester Pays buckets.
    string userProject = 10;
}

message PutBBucketDefaultObjectAclEntityRequest {
    alt alt = 1;
    ObjectAccessControl body = 2;
    // Name of a bucket.
    string bucket = 3;
    // The entity holding the permission. Can be user-userId, user-emailAddress, group-groupId, group-emailAddress, allUsers, or allAuthenticatedUsers.
    string entity = 4;
    string fields = 5;
    string key = 6;
    string oauth_token = 7;
    boolean prettyPrint = 8;
    string quotaUser = 9;
    string userIp = 10;
    // The project to be billed for this request, for Requester Pays buckets.
    string userProject = 11;
}

message DeleteBBucketDefaultObjectAclEntityRequest {
    alt alt = 1;
    // Name of a bucket.
    string bucket = 2;
    // The entity holding the permission. Can be user-userId, user-emailAddress, group-groupId, group-emailAddress, allUsers, or allAuthenticatedUsers.
    string entity = 3;
    string fields = 4;
    string key = 5;
    string oauth_token = 6;
    boolean prettyPrint = 7;
    string quotaUser = 8;
    string userIp = 9;
    // The project to be billed for this request, for Requester Pays buckets.
    string userProject = 10;
}

message GetBBucketIamRequest {
    alt alt = 1;
    // Name of a bucket.
    string bucket = 2;
    string fields = 3;
    string key = 4;
    string oauth_token = 5;
    boolean prettyPrint = 6;
    string quotaUser = 7;
    string userIp = 8;
    // The project to be billed for this request, for Requester Pays buckets.
    string userProject = 9;
}

message PutBBucketIamRequest {
    alt alt = 1;
    Policy body = 2;
    // Name of a bucket.
    string bucket = 3;
    string fields = 4;
    string key = 5;
    string oauth_token = 6;
    boolean prettyPrint = 7;
    string quotaUser = 8;
    string userIp = 9;
    // The project to be billed for this request, for Requester Pays buckets.
    string userProject = 10;
}

message GetBBucketIamTestPermissionsRequest {
    alt alt = 1;
    // Name of a bucket.
    string bucket = 2;
    string fields = 3;
    string key = 4;
    string oauth_token = 5;
    // Permissions to test.
    repeated string permissions = 6;
    boolean prettyPrint = 7;
    string quotaUser = 8;
    string userIp = 9;
    // The project to be billed for this request, for Requester Pays buckets.
    string userProject = 10;
}

message GetBBucketNotificationConfigsRequest {
    alt alt = 1;
    // Name of a Google Cloud Storage bucket.
    string bucket = 2;
    string fields = 3;
    string key = 4;
    string oauth_token = 5;
    boolean prettyPrint = 6;
    string quotaUser = 7;
    string userIp = 8;
    // The project to be billed for this request, for Requester Pays buckets.
    string userProject = 9;
}

message PostBBucketNotificationConfigsRequest {
    alt alt = 1;
    Notification body = 2;
    // The parent bucket of the notification.
    string bucket = 3;
    string fields = 4;
    string key = 5;
    string oauth_token = 6;
    boolean prettyPrint = 7;
    string quotaUser = 8;
    string userIp = 9;
    // The project to be billed for this request, for Requester Pays buckets.
    string userProject = 10;
}

message GetBBucketNotificationConfigsNotificationRequest {
    alt alt = 1;
    // The parent bucket of the notification.
    string bucket = 2;
    string fields = 3;
    string key = 4;
    // Notification ID
    string notification = 5;
    string oauth_token = 6;
    boolean prettyPrint = 7;
    string quotaUser = 8;
    string userIp = 9;
    // The project to be billed for this request, for Requester Pays buckets.
    string userProject = 10;
}

message DeleteBBucketNotificationConfigsNotificationRequest {
    alt alt = 1;
    // The parent bucket of the notification.
    string bucket = 2;
    string fields = 3;
    string key = 4;
    // ID of the notification to delete.
    string notification = 5;
    string oauth_token = 6;
    boolean prettyPrint = 7;
    string quotaUser = 8;
    string userIp = 9;
    // The project to be billed for this request, for Requester Pays buckets.
    string userProject = 10;
}

message GetBBucketORequest {
    alt alt = 1;
    // Name of the bucket in which to look for objects.
    string bucket = 2;
    // Returns results in a directory-like mode. items will contain only objects whose names, aside from the prefix, do not contain delimiter. Objects whose names, aside from the prefix, contain delimiter will have their name, truncated after the delimiter, returned in prefixes. Duplicate prefixes are omitted.
    string delimiter = 3;
    string fields = 4;
    string key = 5;
    // Maximum number of items plus prefixes to return in a single page of responses. As duplicate prefixes are omitted, fewer total results may be returned than requested. The service will use this parameter or 1,000 items, whichever is smaller.
    int32 maxResults = 6;
    string oauth_token = 7;
    // A previously-returned page token representing part of the larger set of results to view.
    string pageToken = 8;
    // Filter results to objects whose names begin with this prefix.
    string prefix = 9;
    boolean prettyPrint = 10;
    // Set of properties to return. Defaults to noAcl.
    enum GetBBucketORequest_Projection {
        GETBBUCKETOREQUEST_PROJECTION_FULL = 0;
        GETBBUCKETOREQUEST_PROJECTION_NOACL = 1;
    }
    GetBBucketORequest_Projection projection = 11;
    string quotaUser = 12;
    string userIp = 13;
    // The project to be billed for this request, for Requester Pays buckets.
    string userProject = 14;
    // If true, lists all versions of an object as distinct results. The default is false. For more information, see Object Versioning.
    bool versions = 15;
}

message PostBBucketORequest {
    alt alt = 1;
    Object body = 2;
    // Name of the bucket in which to store the new object. Overrides the provided object metadata's bucket value, if any.
    string bucket = 3;
    // If set, sets the contentEncoding property of the final object to this value. Setting this parameter is equivalent to setting the contentEncoding metadata property. This can be useful when uploading an object with uploadType=media to indicate the encoding of the content being uploaded.
    string contentEncoding = 4;
    string fields = 5;
    // Makes the operation conditional on whether the object's current generation matches the given value. Setting to 0 makes the operation succeed only if there are no live versions of the object.
    string ifGenerationMatch = 6;
    // Makes the operation conditional on whether the object's current generation does not match the given value. If no live object exists, the precondition fails. Setting to 0 makes the operation succeed only if there is a live version of the object.
    string ifGenerationNotMatch = 7;
    // Makes the operation conditional on whether the object's current metageneration matches the given value.
    string ifMetagenerationMatch = 8;
    // Makes the operation conditional on whether the object's current metageneration does not match the given value.
    string ifMetagenerationNotMatch = 9;
    string key = 10;
    // Resource name of the Cloud KMS key, of the form projects/my-project/locations/global/keyRings/my-kr/cryptoKeys/my-key, that will be used to encrypt the object. Overrides the object metadata's kms_key_name value, if any.
    string kmsKeyName = 11;
    // Name of the object. Required when the object metadata is not otherwise provided. Overrides the object metadata's name value, if any. For information about how to URL encode object names to be path safe, see Encoding URI Path Parts.
    string name = 12;
    string oauth_token = 13;
    // Apply a predefined set of access controls to this object.
    enum PostBBucketORequest_PredefinedAcl {
        POSTBBUCKETOREQUEST_PREDEFINEDACL_AUTHENTICATEDREAD = 0;
        POSTBBUCKETOREQUEST_PREDEFINEDACL_BUCKETOWNERFULLCONTROL = 1;
        POSTBBUCKETOREQUEST_PREDEFINEDACL_BUCKETOWNERREAD = 2;
        POSTBBUCKETOREQUEST_PREDEFINEDACL_PRIVATE = 3;
        POSTBBUCKETOREQUEST_PREDEFINEDACL_PROJECTPRIVATE = 4;
        POSTBBUCKETOREQUEST_PREDEFINEDACL_PUBLICREAD = 5;
    }
    PostBBucketORequest_PredefinedAcl predefinedAcl = 14;
    boolean prettyPrint = 15;
    // Set of properties to return. Defaults to noAcl, unless the object resource specifies the acl property, when it defaults to full.
    enum PostBBucketORequest_Projection {
        POSTBBUCKETOREQUEST_PROJECTION_FULL = 0;
        POSTBBUCKETOREQUEST_PROJECTION_NOACL = 1;
    }
    PostBBucketORequest_Projection projection = 16;
    string quotaUser = 17;
    string userIp = 18;
    // The project to be billed for this request, for Requester Pays buckets.
    string userProject = 19;
}

message PostBBucketOWatchRequest {
    alt alt = 1;
    // Name of the bucket in which to look for objects.
    string bucket = 2;
    // Returns results in a directory-like mode. items will contain only objects whose names, aside from the prefix, do not contain delimiter. Objects whose names, aside from the prefix, contain delimiter will have their name, truncated after the delimiter, returned in prefixes. Duplicate prefixes are omitted.
    string delimiter = 3;
    string fields = 4;
    string key = 5;
    // Maximum number of items plus prefixes to return in a single page of responses. As duplicate prefixes are omitted, fewer total results may be returned than requested. The service will use this parameter or 1,000 items, whichever is smaller.
    int32 maxResults = 6;
    string oauth_token = 7;
    // A previously-returned page token representing part of the larger set of results to view.
    string pageToken = 8;
    // Filter results to objects whose names begin with this prefix.
    string prefix = 9;
    boolean prettyPrint = 10;
    // Set of properties to return. Defaults to noAcl.
    enum PostBBucketOWatchRequest_Projection {
        POSTBBUCKETOWATCHREQUEST_PROJECTION_FULL = 0;
        POSTBBUCKETOWATCHREQUEST_PROJECTION_NOACL = 1;
    }
    PostBBucketOWatchRequest_Projection projection = 11;
    string quotaUser = 12;
    Channel resource = 13;
    string userIp = 14;
    // The project to be billed for this request, for Requester Pays buckets.
    string userProject = 15;
    // If true, lists all versions of an object as distinct results. The default is false. For more information, see Object Versioning.
    bool versions = 16;
}

message GetBBucketOObjectRequest {
    alt alt = 1;
    // Name of the bucket in which the object resides.
    string bucket = 2;
    string fields = 3;
    // If present, selects a specific revision of this object (as opposed to the latest version, the default).
    string generation = 4;
    // Makes the operation conditional on whether the object's current generation matches the given value. Setting to 0 makes the operation succeed only if there are no live versions of the object.
    string ifGenerationMatch = 5;
    // Makes the operation conditional on whether the object's current generation does not match the given value. If no live object exists, the precondition fails. Setting to 0 makes the operation succeed only if there is a live version of the object.
    string ifGenerationNotMatch = 6;
    // Makes the operation conditional on whether the object's current metageneration matches the given value.
    string ifMetagenerationMatch = 7;
    // Makes the operation conditional on whether the object's current metageneration does not match the given value.
    string ifMetagenerationNotMatch = 8;
    string key = 9;
    string oauth_token = 10;
    // Name of the object. For information about how to URL encode object names to be path safe, see Encoding URI Path Parts.
    string object = 11;
    boolean prettyPrint = 12;
    // Set of properties to return. Defaults to noAcl.
    enum GetBBucketOObjectRequest_Projection {
        GETBBUCKETOOBJECTREQUEST_PROJECTION_FULL = 0;
        GETBBUCKETOOBJECTREQUEST_PROJECTION_NOACL = 1;
    }
    GetBBucketOObjectRequest_Projection projection = 13;
    string quotaUser = 14;
    string userIp = 15;
    // The project to be billed for this request, for Requester Pays buckets.
    string userProject = 16;
}

message PutBBucketOObjectRequest {
    alt alt = 1;
    Object body = 2;
    // Name of the bucket in which the object resides.
    string bucket = 3;
    string fields = 4;
    // If present, selects a specific revision of this object (as opposed to the latest version, the default).
    string generation = 5;
    // Makes the operation conditional on whether the object's current generation matches the given value. Setting to 0 makes the operation succeed only if there are no live versions of the object.
    string ifGenerationMatch = 6;
    // Makes the operation conditional on whether the object's current generation does not match the given value. If no live object exists, the precondition fails. Setting to 0 makes the operation succeed only if there is a live version of the object.
    string ifGenerationNotMatch = 7;
    // Makes the operation conditional on whether the object's current metageneration matches the given value.
    string ifMetagenerationMatch = 8;
    // Makes the operation conditional on whether the object's current metageneration does not match the given value.
    string ifMetagenerationNotMatch = 9;
    string key = 10;
    string oauth_token = 11;
    // Name of the object. For information about how to URL encode object names to be path safe, see Encoding URI Path Parts.
    string object = 12;
    // Apply a predefined set of access controls to this object.
    enum PutBBucketOObjectRequest_PredefinedAcl {
        PUTBBUCKETOOBJECTREQUEST_PREDEFINEDACL_AUTHENTICATEDREAD = 0;
        PUTBBUCKETOOBJECTREQUEST_PREDEFINEDACL_BUCKETOWNERFULLCONTROL = 1;
        PUTBBUCKETOOBJECTREQUEST_PREDEFINEDACL_BUCKETOWNERREAD = 2;
        PUTBBUCKETOOBJECTREQUEST_PREDEFINEDACL_PRIVATE = 3;
        PUTBBUCKETOOBJECTREQUEST_PREDEFINEDACL_PROJECTPRIVATE = 4;
        PUTBBUCKETOOBJECTREQUEST_PREDEFINEDACL_PUBLICREAD = 5;
    }
    PutBBucketOObjectRequest_PredefinedAcl predefinedAcl = 13;
    boolean prettyPrint = 14;
    // Set of properties to return. Defaults to full.
    enum PutBBucketOObjectRequest_Projection {
        PUTBBUCKETOOBJECTREQUEST_PROJECTION_FULL = 0;
        PUTBBUCKETOOBJECTREQUEST_PROJECTION_NOACL = 1;
    }
    PutBBucketOObjectRequest_Projection projection = 15;
    string quotaUser = 16;
    string userIp = 17;
    // The project to be billed for this request, for Requester Pays buckets.
    string userProject = 18;
}

message DeleteBBucketOObjectRequest {
    alt alt = 1;
    // Name of the bucket in which the object resides.
    string bucket = 2;
    string fields = 3;
    // If present, permanently deletes a specific revision of this object (as opposed to the latest version, the default).
    string generation = 4;
    // Makes the operation conditional on whether the object's current generation matches the given value. Setting to 0 makes the operation succeed only if there are no live versions of the object.
    string ifGenerationMatch = 5;
    // Makes the operation conditional on whether the object's current generation does not match the given value. If no live object exists, the precondition fails. Setting to 0 makes the operation succeed only if there is a live version of the object.
    string ifGenerationNotMatch = 6;
    // Makes the operation conditional on whether the object's current metageneration matches the given value.
    string ifMetagenerationMatch = 7;
    // Makes the operation conditional on whether the object's current metageneration does not match the given value.
    string ifMetagenerationNotMatch = 8;
    string key = 9;
    string oauth_token = 10;
    // Name of the object. For information about how to URL encode object names to be path safe, see Encoding URI Path Parts.
    string object = 11;
    boolean prettyPrint = 12;
    string quotaUser = 13;
    string userIp = 14;
    // The project to be billed for this request, for Requester Pays buckets.
    string userProject = 15;
}

message GetBBucketOObjectAclRequest {
    alt alt = 1;
    // Name of a bucket.
    string bucket = 2;
    string fields = 3;
    // If present, selects a specific revision of this object (as opposed to the latest version, the default).
    string generation = 4;
    string key = 5;
    string oauth_token = 6;
    // Name of the object. For information about how to URL encode object names to be path safe, see Encoding URI Path Parts.
    string object = 7;
    boolean prettyPrint = 8;
    string quotaUser = 9;
    string userIp = 10;
    // The project to be billed for this request, for Requester Pays buckets.
    string userProject = 11;
}

message PostBBucketOObjectAclRequest {
    alt alt = 1;
    ObjectAccessControl body = 2;
    // Name of a bucket.
    string bucket = 3;
    string fields = 4;
    // If present, selects a specific revision of this object (as opposed to the latest version, the default).
    string generation = 5;
    string key = 6;
    string oauth_token = 7;
    // Name of the object. For information about how to URL encode object names to be path safe, see Encoding URI Path Parts.
    string object = 8;
    boolean prettyPrint = 9;
    string quotaUser = 10;
    string userIp = 11;
    // The project to be billed for this request, for Requester Pays buckets.
    string userProject = 12;
}

message GetBBucketOObjectAclEntityRequest {
    alt alt = 1;
    // Name of a bucket.
    string bucket = 2;
    // The entity holding the permission. Can be user-userId, user-emailAddress, group-groupId, group-emailAddress, allUsers, or allAuthenticatedUsers.
    string entity = 3;
    string fields = 4;
    // If present, selects a specific revision of this object (as opposed to the latest version, the default).
    string generation = 5;
    string key = 6;
    string oauth_token = 7;
    // Name of the object. For information about how to URL encode object names to be path safe, see Encoding URI Path Parts.
    string object = 8;
    boolean prettyPrint = 9;
    string quotaUser = 10;
    string userIp = 11;
    // The project to be billed for this request, for Requester Pays buckets.
    string userProject = 12;
}

message PutBBucketOObjectAclEntityRequest {
    alt alt = 1;
    ObjectAccessControl body = 2;
    // Name of a bucket.
    string bucket = 3;
    // The entity holding the permission. Can be user-userId, user-emailAddress, group-groupId, group-emailAddress, allUsers, or allAuthenticatedUsers.
    string entity = 4;
    string fields = 5;
    // If present, selects a specific revision of this object (as opposed to the latest version, the default).
    string generation = 6;
    string key = 7;
    string oauth_token = 8;
    // Name of the object. For information about how to URL encode object names to be path safe, see Encoding URI Path Parts.
    string object = 9;
    boolean prettyPrint = 10;
    string quotaUser = 11;
    string userIp = 12;
    // The project to be billed for this request, for Requester Pays buckets.
    string userProject = 13;
}

message DeleteBBucketOObjectAclEntityRequest {
    alt alt = 1;
    // Name of a bucket.
    string bucket = 2;
    // The entity holding the permission. Can be user-userId, user-emailAddress, group-groupId, group-emailAddress, allUsers, or allAuthenticatedUsers.
    string entity = 3;
    string fields = 4;
    // If present, selects a specific revision of this object (as opposed to the latest version, the default).
    string generation = 5;
    string key = 6;
    string oauth_token = 7;
    // Name of the object. For information about how to URL encode object names to be path safe, see Encoding URI Path Parts.
    string object = 8;
    boolean prettyPrint = 9;
    string quotaUser = 10;
    string userIp = 11;
    // The project to be billed for this request, for Requester Pays buckets.
    string userProject = 12;
}

message GetBBucketOObjectIamRequest {
    alt alt = 1;
    // Name of the bucket in which the object resides.
    string bucket = 2;
    string fields = 3;
    // If present, selects a specific revision of this object (as opposed to the latest version, the default).
    string generation = 4;
    string key = 5;
    string oauth_token = 6;
    // Name of the object. For information about how to URL encode object names to be path safe, see Encoding URI Path Parts.
    string object = 7;
    boolean prettyPrint = 8;
    string quotaUser = 9;
    string userIp = 10;
    // The project to be billed for this request, for Requester Pays buckets.
    string userProject = 11;
}

message PutBBucketOObjectIamRequest {
    alt alt = 1;
    Policy body = 2;
    // Name of the bucket in which the object resides.
    string bucket = 3;
    string fields = 4;
    // If present, selects a specific revision of this object (as opposed to the latest version, the default).
    string generation = 5;
    string key = 6;
    string oauth_token = 7;
    // Name of the object. For information about how to URL encode object names to be path safe, see Encoding URI Path Parts.
    string object = 8;
    boolean prettyPrint = 9;
    string quotaUser = 10;
    string userIp = 11;
    // The project to be billed for this request, for Requester Pays buckets.
    string userProject = 12;
}

message GetBBucketOObjectIamTestPermissionsRequest {
    alt alt = 1;
    // Name of the bucket in which the object resides.
    string bucket = 2;
    string fields = 3;
    // If present, selects a specific revision of this object (as opposed to the latest version, the default).
    string generation = 4;
    string key = 5;
    string oauth_token = 6;
    // Name of the object. For information about how to URL encode object names to be path safe, see Encoding URI Path Parts.
    string object = 7;
    // Permissions to test.
    repeated string permissions = 8;
    boolean prettyPrint = 9;
    string quotaUser = 10;
    string userIp = 11;
    // The project to be billed for this request, for Requester Pays buckets.
    string userProject = 12;
}

message PostBDestinationBucketODestinationObjectComposeRequest {
    alt alt = 1;
    ComposeRequest body = 2;
    // Name of the bucket in which to store the new object.
    string destinationBucket = 3;
    // Name of the new object. For information about how to URL encode object names to be path safe, see Encoding URI Path Parts.
    string destinationObject = 4;
    // Apply a predefined set of access controls to the destination object.
    enum PostBDestinationBucketODestinationObjectComposeRequest_DestinationPredefinedAcl {
        POSTBDESTINATIONBUCKETODESTINATIONOBJECTCOMPOSEREQUEST_DESTINATIONPREDEFINEDACL_AUTHENTICATEDREAD = 0;
        POSTBDESTINATIONBUCKETODESTINATIONOBJECTCOMPOSEREQUEST_DESTINATIONPREDEFINEDACL_BUCKETOWNERFULLCONTROL = 1;
        POSTBDESTINATIONBUCKETODESTINATIONOBJECTCOMPOSEREQUEST_DESTINATIONPREDEFINEDACL_BUCKETOWNERREAD = 2;
        POSTBDESTINATIONBUCKETODESTINATIONOBJECTCOMPOSEREQUEST_DESTINATIONPREDEFINEDACL_PRIVATE = 3;
        POSTBDESTINATIONBUCKETODESTINATIONOBJECTCOMPOSEREQUEST_DESTINATIONPREDEFINEDACL_PROJECTPRIVATE = 4;
        POSTBDESTINATIONBUCKETODESTINATIONOBJECTCOMPOSEREQUEST_DESTINATIONPREDEFINEDACL_PUBLICREAD = 5;
    }
    PostBDestinationBucketODestinationObjectComposeRequest_DestinationPredefinedAcl destinationPredefinedAcl = 5;
    string fields = 6;
    // Makes the operation conditional on whether the object's current generation matches the given value. Setting to 0 makes the operation succeed only if there are no live versions of the object.
    string ifGenerationMatch = 7;
    // Makes the operation conditional on whether the object's current metageneration matches the given value.
    string ifMetagenerationMatch = 8;
    string key = 9;
    // Resource name of the Cloud KMS key, of the form projects/my-project/locations/global/keyRings/my-kr/cryptoKeys/my-key, that will be used to encrypt the object. Overrides the object metadata's kms_key_name value, if any.
    string kmsKeyName = 10;
    string oauth_token = 11;
    boolean prettyPrint = 12;
    string quotaUser = 13;
    string userIp = 14;
    // The project to be billed for this request, for Requester Pays buckets.
    string userProject = 15;
}

message PostBSourceBucketOSourceObjectCopyToBDestinationBucketODestinationObjectRequest {
    alt alt = 1;
    Object body = 2;
    // Name of the bucket in which to store the new object. Overrides the provided object metadata's bucket value, if any.For information about how to URL encode object names to be path safe, see Encoding URI Path Parts.
    string destinationBucket = 3;
    // Name of the new object. Required when the object metadata is not otherwise provided. Overrides the object metadata's name value, if any.
    string destinationObject = 4;
    // Apply a predefined set of access controls to the destination object.
    enum PostBSourceBucketOSourceObjectCopyToBDestinationBucketODestinationObjectRequest_DestinationPredefinedAcl {
        POSTBSOURCEBUCKETOSOURCEOBJECTCOPYTOBDESTINATIONBUCKETODESTINATIONOBJECTREQUEST_DESTINATIONPREDEFINEDACL_AUTHENTICATEDREAD = 0;
        POSTBSOURCEBUCKETOSOURCEOBJECTCOPYTOBDESTINATIONBUCKETODESTINATIONOBJECTREQUEST_DESTINATIONPREDEFINEDACL_BUCKETOWNERFULLCONTROL = 1;
        POSTBSOURCEBUCKETOSOURCEOBJECTCOPYTOBDESTINATIONBUCKETODESTINATIONOBJECTREQUEST_DESTINATIONPREDEFINEDACL_BUCKETOWNERREAD = 2;
        POSTBSOURCEBUCKETOSOURCEOBJECTCOPYTOBDESTINATIONBUCKETODESTINATIONOBJECTREQUEST_DESTINATIONPREDEFINEDACL_PRIVATE = 3;
        POSTBSOURCEBUCKETOSOURCEOBJECTCOPYTOBDESTINATIONBUCKETODESTINATIONOBJECTREQUEST_DESTINATIONPREDEFINEDACL_PROJECTPRIVATE = 4;
        POSTBSOURCEBUCKETOSOURCEOBJECTCOPYTOBDESTINATIONBUCKETODESTINATIONOBJECTREQUEST_DESTINATIONPREDEFINEDACL_PUBLICREAD = 5;
    }
    PostBSourceBucketOSourceObjectCopyToBDestinationBucketODestinationObjectRequest_DestinationPredefinedAcl destinationPredefinedAcl = 5;
    string fields = 6;
    // Makes the operation conditional on whether the destination object's current generation matches the given value. Setting to 0 makes the operation succeed only if there are no live versions of the object.
    string ifGenerationMatch = 7;
    // Makes the operation conditional on whether the destination object's current generation does not match the given value. If no live object exists, the precondition fails. Setting to 0 makes the operation succeed only if there is a live version of the object.
    string ifGenerationNotMatch = 8;
    // Makes the operation conditional on whether the destination object's current metageneration matches the given value.
    string ifMetagenerationMatch = 9;
    // Makes the operation conditional on whether the destination object's current metageneration does not match the given value.
    string ifMetagenerationNotMatch = 10;
    // Makes the operation conditional on whether the source object's current generation matches the given value.
    string ifSourceGenerationMatch = 11;
    // Makes the operation conditional on whether the source object's current generation does not match the given value.
    string ifSourceGenerationNotMatch = 12;
    // Makes the operation conditional on whether the source object's current metageneration matches the given value.
    string ifSourceMetagenerationMatch = 13;
    // Makes the operation conditional on whether the source object's current metageneration does not match the given value.
    string ifSourceMetagenerationNotMatch = 14;
    string key = 15;
    string oauth_token = 16;
    boolean prettyPrint = 17;
    // Set of properties to return. Defaults to noAcl, unless the object resource specifies the acl property, when it defaults to full.
    enum PostBSourceBucketOSourceObjectCopyToBDestinationBucketODestinationObjectRequest_Projection {
        POSTBSOURCEBUCKETOSOURCEOBJECTCOPYTOBDESTINATIONBUCKETODESTINATIONOBJECTREQUEST_PROJECTION_FULL = 0;
        POSTBSOURCEBUCKETOSOURCEOBJECTCOPYTOBDESTINATIONBUCKETODESTINATIONOBJECTREQUEST_PROJECTION_NOACL = 1;
    }
    PostBSourceBucketOSourceObjectCopyToBDestinationBucketODestinationObjectRequest_Projection projection = 18;
    string quotaUser = 19;
    // Name of the bucket in which to find the source object.
    string sourceBucket = 20;
    // If present, selects a specific revision of the source object (as opposed to the latest version, the default).
    string sourceGeneration = 21;
    // Name of the source object. For information about how to URL encode object names to be path safe, see Encoding URI Path Parts.
    string sourceObject = 22;
    string userIp = 23;
    // The project to be billed for this request, for Requester Pays buckets.
    string userProject = 24;
}

message PostBSourceBucketOSourceObjectRewriteToBDestinationBucketODestinationObjectRequest {
    alt alt = 1;
    Object body = 2;
    // Name of the bucket in which to store the new object. Overrides the provided object metadata's bucket value, if any.
    string destinationBucket = 3;
    // Resource name of the Cloud KMS key, of the form projects/my-project/locations/global/keyRings/my-kr/cryptoKeys/my-key, that will be used to encrypt the object. Overrides the object metadata's kms_key_name value, if any.
    string destinationKmsKeyName = 4;
    // Name of the new object. Required when the object metadata is not otherwise provided. Overrides the object metadata's name value, if any. For information about how to URL encode object names to be path safe, see Encoding URI Path Parts.
    string destinationObject = 5;
    // Apply a predefined set of access controls to the destination object.
    enum PostBSourceBucketOSourceObjectRewriteToBDestinationBucketODestinationObjectRequest_DestinationPredefinedAcl {
        POSTBSOURCEBUCKETOSOURCEOBJECTREWRITETOBDESTINATIONBUCKETODESTINATIONOBJECTREQUEST_DESTINATIONPREDEFINEDACL_AUTHENTICATEDREAD = 0;
        POSTBSOURCEBUCKETOSOURCEOBJECTREWRITETOBDESTINATIONBUCKETODESTINATIONOBJECTREQUEST_DESTINATIONPREDEFINEDACL_BUCKETOWNERFULLCONTROL = 1;
        POSTBSOURCEBUCKETOSOURCEOBJECTREWRITETOBDESTINATIONBUCKETODESTINATIONOBJECTREQUEST_DESTINATIONPREDEFINEDACL_BUCKETOWNERREAD = 2;
        POSTBSOURCEBUCKETOSOURCEOBJECTREWRITETOBDESTINATIONBUCKETODESTINATIONOBJECTREQUEST_DESTINATIONPREDEFINEDACL_PRIVATE = 3;
        POSTBSOURCEBUCKETOSOURCEOBJECTREWRITETOBDESTINATIONBUCKETODESTINATIONOBJECTREQUEST_DESTINATIONPREDEFINEDACL_PROJECTPRIVATE = 4;
        POSTBSOURCEBUCKETOSOURCEOBJECTREWRITETOBDESTINATIONBUCKETODESTINATIONOBJECTREQUEST_DESTINATIONPREDEFINEDACL_PUBLICREAD = 5;
    }
    PostBSourceBucketOSourceObjectRewriteToBDestinationBucketODestinationObjectRequest_DestinationPredefinedAcl destinationPredefinedAcl = 6;
    string fields = 7;
    // Makes the operation conditional on whether the object's current generation matches the given value. Setting to 0 makes the operation succeed only if there are no live versions of the object.
    string ifGenerationMatch = 8;
    // Makes the operation conditional on whether the object's current generation does not match the given value. If no live object exists, the precondition fails. Setting to 0 makes the operation succeed only if there is a live version of the object.
    string ifGenerationNotMatch = 9;
    // Makes the operation conditional on whether the destination object's current metageneration matches the given value.
    string ifMetagenerationMatch = 10;
    // Makes the operation conditional on whether the destination object's current metageneration does not match the given value.
    string ifMetagenerationNotMatch = 11;
    // Makes the operation conditional on whether the source object's current generation matches the given value.
    string ifSourceGenerationMatch = 12;
    // Makes the operation conditional on whether the source object's current generation does not match the given value.
    string ifSourceGenerationNotMatch = 13;
    // Makes the operation conditional on whether the source object's current metageneration matches the given value.
    string ifSourceMetagenerationMatch = 14;
    // Makes the operation conditional on whether the source object's current metageneration does not match the given value.
    string ifSourceMetagenerationNotMatch = 15;
    string key = 16;
    // The maximum number of bytes that will be rewritten per rewrite request. Most callers shouldn't need to specify this parameter - it is primarily in place to support testing. If specified the value must be an integral multiple of 1 MiB (1048576). Also, this only applies to requests where the source and destination span locations and/or storage classes. Finally, this value must not change across rewrite calls else you'll get an error that the rewriteToken is invalid.
    string maxBytesRewrittenPerCall = 17;
    string oauth_token = 18;
    boolean prettyPrint = 19;
    // Set of properties to return. Defaults to noAcl, unless the object resource specifies the acl property, when it defaults to full.
    enum PostBSourceBucketOSourceObjectRewriteToBDestinationBucketODestinationObjectRequest_Projection {
        POSTBSOURCEBUCKETOSOURCEOBJECTREWRITETOBDESTINATIONBUCKETODESTINATIONOBJECTREQUEST_PROJECTION_FULL = 0;
        POSTBSOURCEBUCKETOSOURCEOBJECTREWRITETOBDESTINATIONBUCKETODESTINATIONOBJECTREQUEST_PROJECTION_NOACL = 1;
    }
    PostBSourceBucketOSourceObjectRewriteToBDestinationBucketODestinationObjectRequest_Projection projection = 20;
    string quotaUser = 21;
    // Include this field (from the previous rewrite response) on each rewrite request after the first one, until the rewrite response 'done' flag is true. Calls that provide a rewriteToken can omit all other request fields, but if included those fields must match the values provided in the first rewrite request.
    string rewriteToken = 22;
    // Name of the bucket in which to find the source object.
    string sourceBucket = 23;
    // If present, selects a specific revision of the source object (as opposed to the latest version, the default).
    string sourceGeneration = 24;
    // Name of the source object. For information about how to URL encode object names to be path safe, see Encoding URI Path Parts.
    string sourceObject = 25;
    string userIp = 26;
    // The project to be billed for this request, for Requester Pays buckets.
    string userProject = 27;
}

message PostChannelsStopRequest {
    alt alt = 1;
    string fields = 2;
    string key = 3;
    string oauth_token = 4;
    boolean prettyPrint = 5;
    string quotaUser = 6;
    Channel resource = 7;
    string userIp = 8;
}

message GetProjectsProjectIdServiceAccountRequest {
    alt alt = 1;
    string fields = 2;
    string key = 3;
    string oauth_token = 4;
    boolean prettyPrint = 5;
    // Project ID
    string projectId = 6;
    string quotaUser = 7;
    string userIp = 8;
    // The project to be billed for this request, for Requester Pays buckets.
    string userProject = 9;
}

message Bucket {
    // Access controls on the bucket.
    repeated BucketAccessControl acl = 1;
    // The bucket's billing configuration.
    message Billing {
            // When set to true, bucket is requester pays.
    bool requesterPays = 1;
    }
    Billing billing = 2;
    // The bucket's Cross-Origin Resource Sharing (CORS) configuration.
    message Cor {
            // The value, in seconds, to return in the  Access-Control-Max-Age header used in preflight responses.
    int32 maxAgeSeconds = 1;
            // The list of HTTP methods on which to include CORS response headers, (GET, OPTIONS, POST, etc) Note: "*" is permitted in the list of methods, and means "any method".
    repeated string method = 2;
            // The list of Origins eligible to receive CORS response headers. Note: "*" is permitted in the list of origins, and means "any Origin".
    repeated string origin = 3;
            // The list of HTTP headers other than the simple response headers to give permission for the user-agent to share across domains.
    repeated string responseHeader = 4;
    }
    repeated Cor cors = 3;
    // Default access controls to apply to new objects when no ACL is provided.
    repeated ObjectAccessControl defaultObjectAcl = 4;
    // Encryption configuration used by default for newly inserted objects, when no encryption config is specified.
    message Encryption {
        string defaultKmsKeyName = 1;
    }
    Encryption encryption = 5;
    // HTTP 1.1 Entity tag for the bucket.
    string etag = 6;
    // The ID of the bucket. For buckets, the id and name properities are the same.
    string id = 7;
    // The kind of item this is. For buckets, this is always storage#bucket.
    string kind = 8;
    // User-provided labels, in key/value pairs.
    map<string, string> labels = 9;
    // The bucket's lifecycle configuration. See lifecycle management for more information.
    message Lifecycle {
            // A lifecycle management rule, which is made of an action to take and the condition(s) under which the action will be taken.
    message Rule {
                    // The action to take.
    message Action {
                            // Target storage class. Required iff the type of the action is SetStorageClass.
    string storageClass = 1;
                            // Type of the action. Currently, only Delete and SetStorageClass are supported.
    string type = 2;
            }
            Action action = 1;
                    // The condition(s) under which the action will be taken.
    message Condition {
                            // Age of an object (in days). This condition is satisfied when an object reaches the specified age.
    int32 age = 1;
                            // A date in RFC 3339 format with only the date part (for instance, "2013-01-15"). This condition is satisfied when an object is created before midnight of the specified date in UTC.
    string createdBefore = 2;
                            // Relevant only for versioned objects. If the value is true, this condition matches live objects; if the value is false, it matches archived objects.
    bool isLive = 3;
                            // Objects having any of the storage classes specified by this condition will be matched. Values include MULTI_REGIONAL, REGIONAL, NEARLINE, COLDLINE, STANDARD, and DURABLE_REDUCED_AVAILABILITY.
    repeated string matchesStorageClass = 4;
                            // Relevant only for versioned objects. If the value is N, this condition is satisfied when there are at least N versions (including the live version) newer than this version of the object.
    int32 numNewerVersions = 5;
            }
            Condition condition = 2;
        }
        repeated Rule rule = 1;
    }
    Lifecycle lifecycle = 10;
    // The location of the bucket. Object data for objects in the bucket resides in physical storage within this region. Defaults to US. See the developer's guide for the authoritative list.
    string location = 11;
    // The bucket's logging configuration, which defines the destination bucket and optional name prefix for the current bucket's logs.
    message Logging {
            // The destination bucket where the current bucket's logs should be placed.
    string logBucket = 1;
            // A prefix for log object names.
    string logObjectPrefix = 2;
    }
    Logging logging = 12;
    // The metadata generation of this bucket.
    string metageneration = 13;
    // The name of the bucket.
    string name = 14;
    // The owner of the bucket. This is always the project team's owner group.
    message Owner {
            // The entity, in the form project-owner-projectId.
    string entity = 1;
            // The ID for the entity.
    string entityId = 2;
    }
    Owner owner = 15;
    // The project number of the project the bucket belongs to.
    string projectNumber = 16;
    // The URI of this bucket.
    string selfLink = 17;
    // The bucket's default storage class, used whenever no storageClass is specified for a newly-created object. This defines how objects in the bucket are stored and determines the SLA and the cost of storage. Values include MULTI_REGIONAL, REGIONAL, STANDARD, NEARLINE, COLDLINE, and DURABLE_REDUCED_AVAILABILITY. If this value is not specified when the bucket is created, it will default to STANDARD. For more information, see storage classes.
    string storageClass = 18;
    // The creation time of the bucket in RFC 3339 format.
    string timeCreated = 19;
    // The modification time of the bucket in RFC 3339 format.
    string updated = 20;
    // The bucket's versioning configuration.
    message Versioning {
            // While set to true, versioning is fully enabled for this bucket.
    bool enabled = 1;
    }
    Versioning versioning = 21;
    // The bucket's website configuration, controlling how the service behaves when accessing bucket contents as a web site. See the Static Website Examples for more information.
    message Website {
            // If the requested object path is missing, the service will ensure the path has a trailing '/', append this suffix, and attempt to retrieve the resulting object. This allows the creation of index.html objects to represent directory pages.
    string mainPageSuffix = 1;
            // If the requested object path is missing, and any mainPageSuffix object is missing, if applicable, the service will return the named object from this bucket as the content for a 404 Not Found result.
    string notFoundPage = 2;
    }
    Website website = 22;
}

message BucketAccessControl {
    // The name of the bucket.
    string bucket = 1;
    // The domain associated with the entity, if any.
    string domain = 2;
    // The email address associated with the entity, if any.
    string email = 3;
    // The entity holding the permission, in one of the following forms: 
    // - user-userId 
    // - user-email 
    // - group-groupId 
    // - group-email 
    // - domain-domain 
    // - project-team-projectId 
    // - allUsers 
    // - allAuthenticatedUsers Examples: 
    // - The user liz@example.com would be user-liz@example.com. 
    // - The group example@googlegroups.com would be group-example@googlegroups.com. 
    // - To refer to all members of the Google Apps for Business domain example.com, the entity would be domain-example.com.
    string entity = 4;
    // The ID for the entity, if any.
    string entityId = 5;
    // HTTP 1.1 Entity tag for the access-control entry.
    string etag = 6;
    // The ID of the access-control entry.
    string id = 7;
    // The kind of item this is. For bucket access control entries, this is always storage#bucketAccessControl.
    string kind = 8;
    // The project team associated with the entity, if any.
    message ProjectTeam {
            // The project number.
    string projectNumber = 1;
            // The team.
    string team = 2;
    }
    ProjectTeam projectTeam = 9;
    // The access permission for the entity.
    string role = 10;
    // The link to this access-control entry.
    string selfLink = 11;
}

message BucketAccessControls {
    // The list of items.
    repeated BucketAccessControl items = 1;
    // The kind of item this is. For lists of bucket access control entries, this is always storage#bucketAccessControls.
    string kind = 2;
}

message Buckets {
    // The list of items.
    repeated Bucket items = 1;
    // The kind of item this is. For lists of buckets, this is always storage#buckets.
    string kind = 2;
    // The continuation token, used to page through large result sets. Provide this value in a subsequent request to return the next page of results.
    string nextPageToken = 3;
}

message Channel {
    // The address where notifications are delivered for this channel.
    string address = 1;
    // Date and time of notification channel expiration, expressed as a Unix timestamp, in milliseconds. Optional.
    string expiration = 2;
    // A UUID or similar unique string that identifies this channel.
    string id = 3;
    // Identifies this as a notification channel used to watch for changes to a resource. Value: the fixed string "api#channel".
    string kind = 4;
    // Additional parameters controlling delivery channel behavior. Optional.
    map<string, string> params = 5;
    // A Boolean value to indicate whether payload is wanted. Optional.
    bool payload = 6;
    // An opaque ID that identifies the resource being watched on this channel. Stable across different API versions.
    string resourceId = 7;
    // A version-specific identifier for the watched resource.
    string resourceUri = 8;
    // An arbitrary string delivered to the target address with each notification delivered over this channel. Optional.
    string token = 9;
    // The type of delivery mechanism used for this channel.
    string type = 10;
}

message ComposeRequest {
    // Properties of the resulting object.
    Object destination = 1;
    // The kind of item this is.
    string kind = 2;
    // The list of source objects that will be concatenated into a single object.
    message SourceObject {
            // The generation of this object to use as the source.
    string generation = 1;
            // The source object's name. The source object's bucket is implicitly the destination bucket.
    string name = 2;
            // Conditions that must be met for this operation to execute.
    message ObjectPreconditions {
                    // Only perform the composition if the generation of the source object that would be used matches this value. If this value and a generation are both specified, they must be the same value or the call will fail.
    string ifGenerationMatch = 1;
        }
        ObjectPreconditions objectPreconditions = 3;
    }
    repeated SourceObject sourceObjects = 3;
}

message Notification {
    // An optional list of additional attributes to attach to each Cloud PubSub message published for this notification subscription.
    map<string, string> custom_attributes = 1;
    // HTTP 1.1 Entity tag for this subscription notification.
    string etag = 2;
    // If present, only send notifications about listed event types. If empty, sent notifications for all event types.
    repeated string event_types = 3;
    // The ID of the notification.
    string id = 4;
    // The kind of item this is. For notifications, this is always storage#notification.
    string kind = 5;
    // If present, only apply this notification configuration to object names that begin with this prefix.
    string object_name_prefix = 6;
    // The desired content of the Payload.
    string payload_format = 7;
    // The canonical URL of this notification.
    string selfLink = 8;
    // The Cloud PubSub topic to which this subscription publishes. Formatted as: '//pubsub.googleapis.com/projects/{project-identifier}/topics/{my-topic}'
    string topic = 9;
}

message Notifications {
    // The list of items.
    repeated Notification items = 1;
    // The kind of item this is. For lists of notifications, this is always storage#notifications.
    string kind = 2;
}

message Object {
    // Access controls on the object.
    repeated ObjectAccessControl acl = 1;
    // The name of the bucket containing this object.
    string bucket = 2;
    // Cache-Control directive for the object data. If omitted, and the object is accessible to all anonymous users, the default will be public, max-age=3600.
    string cacheControl = 3;
    // Number of underlying components that make up this object. Components are accumulated by compose operations.
    int32 componentCount = 4;
    // Content-Disposition of the object data.
    string contentDisposition = 5;
    // Content-Encoding of the object data.
    string contentEncoding = 6;
    // Content-Language of the object data.
    string contentLanguage = 7;
    // Content-Type of the object data. If an object is stored without a Content-Type, it is served as application/octet-stream.
    string contentType = 8;
    // CRC32c checksum, as described in RFC 4960, Appendix B; encoded using base64 in big-endian byte order. For more information about using the CRC32c checksum, see Hashes and ETags: Best Practices.
    string crc32c = 9;
    // Metadata of customer-supplied encryption key, if the object is encrypted by such a key.
    message CustomerEncryption {
            // The encryption algorithm.
    string encryptionAlgorithm = 1;
            // SHA256 hash value of the encryption key.
    string keySha256 = 2;
    }
    CustomerEncryption customerEncryption = 10;
    // HTTP 1.1 Entity tag for the object.
    string etag = 11;
    // The content generation of this object. Used for object versioning.
    string generation = 12;
    // The ID of the object, including the bucket name, object name, and generation number.
    string id = 13;
    // The kind of item this is. For objects, this is always storage#object.
    string kind = 14;
    // Cloud KMS Key used to encrypt this object, if the object is encrypted by such a key.
    string kmsKeyName = 15;
    // MD5 hash of the data; encoded using base64. For more information about using the MD5 hash, see Hashes and ETags: Best Practices.
    string md5Hash = 16;
    // Media download link.
    string mediaLink = 17;
    // User-provided metadata, in key/value pairs.
    map<string, string> metadata = 18;
    // The version of the metadata for this object at this generation. Used for preconditions and for detecting changes in metadata. A metageneration number is only meaningful in the context of a particular generation of a particular object.
    string metageneration = 19;
    // The name of the object. Required if not specified by URL parameter.
    string name = 20;
    // The owner of the object. This will always be the uploader of the object.
    message Owner {
            // The entity, in the form user-userId.
    string entity = 1;
            // The ID for the entity.
    string entityId = 2;
    }
    Owner owner = 21;
    // The link to this object.
    string selfLink = 22;
    // Content-Length of the data in bytes.
    string size = 23;
    // Storage class of the object.
    string storageClass = 24;
    // The creation time of the object in RFC 3339 format.
    string timeCreated = 25;
    // The deletion time of the object in RFC 3339 format. Will be returned if and only if this version of the object has been deleted.
    string timeDeleted = 26;
    // The time at which the object's storage class was last changed. When the object is initially created, it will be set to timeCreated.
    string timeStorageClassUpdated = 27;
    // The modification time of the object metadata in RFC 3339 format.
    string updated = 28;
}

message ObjectAccessControl {
    // The name of the bucket.
    string bucket = 1;
    // The domain associated with the entity, if any.
    string domain = 2;
    // The email address associated with the entity, if any.
    string email = 3;
    // The entity holding the permission, in one of the following forms: 
    // - user-userId 
    // - user-email 
    // - group-groupId 
    // - group-email 
    // - domain-domain 
    // - project-team-projectId 
    // - allUsers 
    // - allAuthenticatedUsers Examples: 
    // - The user liz@example.com would be user-liz@example.com. 
    // - The group example@googlegroups.com would be group-example@googlegroups.com. 
    // - To refer to all members of the Google Apps for Business domain example.com, the entity would be domain-example.com.
    string entity = 4;
    // The ID for the entity, if any.
    string entityId = 5;
    // HTTP 1.1 Entity tag for the access-control entry.
    string etag = 6;
    // The content generation of the object, if applied to an object.
    string generation = 7;
    // The ID of the access-control entry.
    string id = 8;
    // The kind of item this is. For object access control entries, this is always storage#objectAccessControl.
    string kind = 9;
    // The name of the object, if applied to an object.
    string object = 10;
    // The project team associated with the entity, if any.
    message ProjectTeam {
            // The project number.
    string projectNumber = 1;
            // The team.
    string team = 2;
    }
    ProjectTeam projectTeam = 11;
    // The access permission for the entity.
    string role = 12;
    // The link to this access-control entry.
    string selfLink = 13;
}

message ObjectAccessControls {
    // The list of items.
    repeated ObjectAccessControl items = 1;
    // The kind of item this is. For lists of object access control entries, this is always storage#objectAccessControls.
    string kind = 2;
}

message Objects {
    // The list of items.
    repeated Object items = 1;
    // The kind of item this is. For lists of objects, this is always storage#objects.
    string kind = 2;
    // The continuation token, used to page through large result sets. Provide this value in a subsequent request to return the next page of results.
    string nextPageToken = 3;
    // The list of prefixes of objects matching-but-not-listed up to and including the requested delimiter.
    repeated string prefixes = 4;
}

message Policy {
    // An association between a role, which comes with a set of permissions, and members who may assume that role.
    message Binding {
        ;
            // A collection of identifiers for members who may assume the provided role. Recognized identifiers are as follows:  
    // - allUsers — A special identifier that represents anyone on the internet; with or without a Google account.  
    // - allAuthenticatedUsers — A special identifier that represents anyone who is authenticated with a Google account or a service account.  
    // - user:emailid — An email address that represents a specific account. For example, user:alice@gmail.com or user:joe@example.com.  
    // - serviceAccount:emailid — An email address that represents a service account. For example,  serviceAccount:my-other-app@appspot.gserviceaccount.com .  
    // - group:emailid — An email address that represents a Google group. For example, group:admins@example.com.  
    // - domain:domain — A Google Apps domain name that represents all the users of that domain. For example, domain:google.com or domain:example.com.  
    // - projectOwner:projectid — Owners of the given project. For example, projectOwner:my-example-project  
    // - projectEditor:projectid — Editors of the given project. For example, projectEditor:my-example-project  
    // - projectViewer:projectid — Viewers of the given project. For example, projectViewer:my-example-project
    repeated string members = 2;
            // The role to which members belong. Two types of roles are supported: new IAM roles, which grant permissions that do not map directly to those provided by ACLs, and legacy IAM roles, which do map directly to ACL permissions. All roles are of the format roles/storage.specificRole.
    // The new IAM roles are:  
    // - roles/storage.admin — Full control of Google Cloud Storage resources.  
    // - roles/storage.objectViewer — Read-Only access to Google Cloud Storage objects.  
    // - roles/storage.objectCreator — Access to create objects in Google Cloud Storage.  
    // - roles/storage.objectAdmin — Full control of Google Cloud Storage objects.   The legacy IAM roles are:  
    // - roles/storage.legacyObjectReader — Read-only access to objects without listing. Equivalent to an ACL entry on an object with the READER role.  
    // - roles/storage.legacyObjectOwner — Read/write access to existing objects without listing. Equivalent to an ACL entry on an object with the OWNER role.  
    // - roles/storage.legacyBucketReader — Read access to buckets with object listing. Equivalent to an ACL entry on a bucket with the READER role.  
    // - roles/storage.legacyBucketWriter — Read access to buckets with object listing/creation/deletion. Equivalent to an ACL entry on a bucket with the WRITER role.  
    // - roles/storage.legacyBucketOwner — Read and write access to existing buckets with object listing/creation/deletion. Equivalent to an ACL entry on a bucket with the OWNER role.
    string role = 3;
    }
    repeated Binding bindings = 1;
    // HTTP 1.1  Entity tag for the policy.
    string etag = 2;
    // The kind of item this is. For policies, this is always storage#policy. This field is ignored on input.
    string kind = 3;
    // The ID of the resource to which this policy belongs. Will be of the form projects/_/buckets/bucket for buckets, and projects/_/buckets/bucket/objects/object for objects. A specific generation may be specified by appending #generationNumber to the end of the object name, e.g. projects/_/buckets/my-bucket/objects/data.txt#17. The current generation can be denoted with #0. This field is ignored on input.
    string resourceId = 4;
}

message RewriteResponse {
    // true if the copy is finished; otherwise, false if the copy is in progress. This property is always present in the response.
    bool done = 1;
    // The kind of item this is.
    string kind = 2;
    // The total size of the object being copied in bytes. This property is always present in the response.
    string objectSize = 3;
    // A resource containing the metadata for the copied-to object. This property is present in the response only when copying completes.
    Object resource = 4;
    // A token to use in subsequent requests to continue copying data. This token is present in the response only when there is more data to copy.
    string rewriteToken = 5;
    // The total bytes written so far, which can be used to provide a waiting user with a progress indicator. This property is always present in the response.
    string totalBytesRewritten = 6;
}

message ServiceAccount {
    // The ID of the notification.
    string email_address = 1;
    // The kind of item this is. For notifications, this is always storage#notification.
    string kind = 2;
}

message TestIamPermissionsResponse {
    // The kind of item this is.
    string kind = 1;
    // The permissions held by the caller. Permissions are always of the format storage.resource.capability, where resource is one of buckets or objects. The supported permissions are as follows:  
    // - storage.buckets.delete — Delete bucket.  
    // - storage.buckets.get — Read bucket metadata.  
    // - storage.buckets.getIamPolicy — Read bucket IAM policy.  
    // - storage.buckets.create — Create bucket.  
    // - storage.buckets.list — List buckets.  
    // - storage.buckets.setIamPolicy — Update bucket IAM policy.  
    // - storage.buckets.update — Update bucket metadata.  
    // - storage.objects.delete — Delete object.  
    // - storage.objects.get — Read object data and metadata.  
    // - storage.objects.getIamPolicy — Read object IAM policy.  
    // - storage.objects.create — Create object.  
    // - storage.objects.list — List objects.  
    // - storage.objects.setIamPolicy — Update object IAM policy.  
    // - storage.objects.update — Update object metadata.
    repeated string permissions = 2;
}

enum Alt {
    JSON = 0;
}

service CloudStorageService {
    // Retrieves a list of buckets for a given project.
    rpc GetB(GetBRequest) returns (Buckets) {
      option (google.api.http) = {
        get: "/storage/v1/b"
      };
    }
    // Creates a new bucket.
    rpc PostB(PostBRequest) returns (Bucket) {
      option (google.api.http) = {
        post: "/storage/v1/b"
        body: "body"
      };
    }
    // Returns metadata for the specified bucket.
    rpc GetBBucket(GetBBucketRequest) returns (Bucket) {
      option (google.api.http) = {
        get: "/storage/v1/b/{bucket}"
      };
    }
    // Updates a bucket. Changes to the bucket will be readable immediately after writing, but configuration changes may take time to propagate.
    rpc PutBBucket(PutBBucketRequest) returns (Bucket) {
      option (google.api.http) = {
        put: "/storage/v1/b/{bucket}"
        body: "body"
      };
    }
    // Permanently deletes an empty bucket.
    rpc DeleteBBucket(DeleteBBucketRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        delete: "/storage/v1/b/{bucket}"
      };
    }
    // Retrieves ACL entries on the specified bucket.
    rpc GetBBucketAcl(GetBBucketAclRequest) returns (BucketAccessControls) {
      option (google.api.http) = {
        get: "/storage/v1/b/{bucket}/acl"
      };
    }
    // Creates a new ACL entry on the specified bucket.
    rpc PostBBucketAcl(PostBBucketAclRequest) returns (BucketAccessControl) {
      option (google.api.http) = {
        post: "/storage/v1/b/{bucket}/acl"
        body: "body"
      };
    }
    // Returns the ACL entry for the specified entity on the specified bucket.
    rpc GetBBucketAclEntity(GetBBucketAclEntityRequest) returns (BucketAccessControl) {
      option (google.api.http) = {
        get: "/storage/v1/b/{bucket}/acl/{entity}"
      };
    }
    // Updates an ACL entry on the specified bucket.
    rpc PutBBucketAclEntity(PutBBucketAclEntityRequest) returns (BucketAccessControl) {
      option (google.api.http) = {
        put: "/storage/v1/b/{bucket}/acl/{entity}"
        body: "body"
      };
    }
    // Permanently deletes the ACL entry for the specified entity on the specified bucket.
    rpc DeleteBBucketAclEntity(DeleteBBucketAclEntityRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        delete: "/storage/v1/b/{bucket}/acl/{entity}"
      };
    }
    // Retrieves default object ACL entries on the specified bucket.
    rpc GetBBucketDefaultObjectAcl(GetBBucketDefaultObjectAclRequest) returns (ObjectAccessControls) {
      option (google.api.http) = {
        get: "/storage/v1/b/{bucket}/defaultObjectAcl"
      };
    }
    // Creates a new default object ACL entry on the specified bucket.
    rpc PostBBucketDefaultObjectAcl(PostBBucketDefaultObjectAclRequest) returns (ObjectAccessControl) {
      option (google.api.http) = {
        post: "/storage/v1/b/{bucket}/defaultObjectAcl"
        body: "body"
      };
    }
    // Returns the default object ACL entry for the specified entity on the specified bucket.
    rpc GetBBucketDefaultObjectAclEntity(GetBBucketDefaultObjectAclEntityRequest) returns (ObjectAccessControl) {
      option (google.api.http) = {
        get: "/storage/v1/b/{bucket}/defaultObjectAcl/{entity}"
      };
    }
    // Updates a default object ACL entry on the specified bucket.
    rpc PutBBucketDefaultObjectAclEntity(PutBBucketDefaultObjectAclEntityRequest) returns (ObjectAccessControl) {
      option (google.api.http) = {
        put: "/storage/v1/b/{bucket}/defaultObjectAcl/{entity}"
        body: "body"
      };
    }
    // Permanently deletes the default object ACL entry for the specified entity on the specified bucket.
    rpc DeleteBBucketDefaultObjectAclEntity(DeleteBBucketDefaultObjectAclEntityRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        delete: "/storage/v1/b/{bucket}/defaultObjectAcl/{entity}"
      };
    }
    // Returns an IAM policy for the specified bucket.
    rpc GetBBucketIam(GetBBucketIamRequest) returns (Policy) {
      option (google.api.http) = {
        get: "/storage/v1/b/{bucket}/iam"
      };
    }
    // Updates an IAM policy for the specified bucket.
    rpc PutBBucketIam(PutBBucketIamRequest) returns (Policy) {
      option (google.api.http) = {
        put: "/storage/v1/b/{bucket}/iam"
        body: "body"
      };
    }
    // Tests a set of permissions on the given bucket to see which, if any, are held by the caller.
    rpc GetBBucketIamTestPermissions(GetBBucketIamTestPermissionsRequest) returns (TestIamPermissionsResponse) {
      option (google.api.http) = {
        get: "/storage/v1/b/{bucket}/iam/testPermissions"
      };
    }
    // Retrieves a list of notification subscriptions for a given bucket.
    rpc GetBBucketNotificationConfigs(GetBBucketNotificationConfigsRequest) returns (Notifications) {
      option (google.api.http) = {
        get: "/storage/v1/b/{bucket}/notificationConfigs"
      };
    }
    // Creates a notification subscription for a given bucket.
    rpc PostBBucketNotificationConfigs(PostBBucketNotificationConfigsRequest) returns (Notification) {
      option (google.api.http) = {
        post: "/storage/v1/b/{bucket}/notificationConfigs"
        body: "body"
      };
    }
    // View a notification configuration.
    rpc GetBBucketNotificationConfigsNotification(GetBBucketNotificationConfigsNotificationRequest) returns (Notification) {
      option (google.api.http) = {
        get: "/storage/v1/b/{bucket}/notificationConfigs/{notification}"
      };
    }
    // Permanently deletes a notification subscription.
    rpc DeleteBBucketNotificationConfigsNotification(DeleteBBucketNotificationConfigsNotificationRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        delete: "/storage/v1/b/{bucket}/notificationConfigs/{notification}"
      };
    }
    // Retrieves a list of objects matching the criteria.
    rpc GetBBucketO(GetBBucketORequest) returns (Objects) {
      option (google.api.http) = {
        get: "/storage/v1/b/{bucket}/o"
      };
    }
    // Stores a new object and metadata.
    rpc PostBBucketO(PostBBucketORequest) returns (Object) {
      option (google.api.http) = {
        post: "/storage/v1/b/{bucket}/o"
        body: "body"
      };
    }
    // Watch for changes on all objects in a bucket.
    rpc PostBBucketOWatch(PostBBucketOWatchRequest) returns (Channel) {
      option (google.api.http) = {
        post: "/storage/v1/b/{bucket}/o/watch"
        body: "resource"
      };
    }
    // Retrieves an object or its metadata.
    rpc GetBBucketOObject(GetBBucketOObjectRequest) returns (Object) {
      option (google.api.http) = {
        get: "/storage/v1/b/{bucket}/o/{object}"
      };
    }
    // Updates an object's metadata.
    rpc PutBBucketOObject(PutBBucketOObjectRequest) returns (Object) {
      option (google.api.http) = {
        put: "/storage/v1/b/{bucket}/o/{object}"
        body: "body"
      };
    }
    // Deletes an object and its metadata. Deletions are permanent if versioning is not enabled for the bucket, or if the generation parameter is used.
    rpc DeleteBBucketOObject(DeleteBBucketOObjectRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        delete: "/storage/v1/b/{bucket}/o/{object}"
      };
    }
    // Retrieves ACL entries on the specified object.
    rpc GetBBucketOObjectAcl(GetBBucketOObjectAclRequest) returns (ObjectAccessControls) {
      option (google.api.http) = {
        get: "/storage/v1/b/{bucket}/o/{object}/acl"
      };
    }
    // Creates a new ACL entry on the specified object.
    rpc PostBBucketOObjectAcl(PostBBucketOObjectAclRequest) returns (ObjectAccessControl) {
      option (google.api.http) = {
        post: "/storage/v1/b/{bucket}/o/{object}/acl"
        body: "body"
      };
    }
    // Returns the ACL entry for the specified entity on the specified object.
    rpc GetBBucketOObjectAclEntity(GetBBucketOObjectAclEntityRequest) returns (ObjectAccessControl) {
      option (google.api.http) = {
        get: "/storage/v1/b/{bucket}/o/{object}/acl/{entity}"
      };
    }
    // Updates an ACL entry on the specified object.
    rpc PutBBucketOObjectAclEntity(PutBBucketOObjectAclEntityRequest) returns (ObjectAccessControl) {
      option (google.api.http) = {
        put: "/storage/v1/b/{bucket}/o/{object}/acl/{entity}"
        body: "body"
      };
    }
    // Permanently deletes the ACL entry for the specified entity on the specified object.
    rpc DeleteBBucketOObjectAclEntity(DeleteBBucketOObjectAclEntityRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        delete: "/storage/v1/b/{bucket}/o/{object}/acl/{entity}"
      };
    }
    // Returns an IAM policy for the specified object.
    rpc GetBBucketOObjectIam(GetBBucketOObjectIamRequest) returns (Policy) {
      option (google.api.http) = {
        get: "/storage/v1/b/{bucket}/o/{object}/iam"
      };
    }
    // Updates an IAM policy for the specified object.
    rpc PutBBucketOObjectIam(PutBBucketOObjectIamRequest) returns (Policy) {
      option (google.api.http) = {
        put: "/storage/v1/b/{bucket}/o/{object}/iam"
        body: "body"
      };
    }
    // Tests a set of permissions on the given object to see which, if any, are held by the caller.
    rpc GetBBucketOObjectIamTestPermissions(GetBBucketOObjectIamTestPermissionsRequest) returns (TestIamPermissionsResponse) {
      option (google.api.http) = {
        get: "/storage/v1/b/{bucket}/o/{object}/iam/testPermissions"
      };
    }
    // Concatenates a list of existing objects into a new object in the same bucket.
    rpc PostBDestinationBucketODestinationObjectCompose(PostBDestinationBucketODestinationObjectComposeRequest) returns (Object) {
      option (google.api.http) = {
        post: "/storage/v1/b/{destinationBucket}/o/{destinationObject}/compose"
        body: "body"
      };
    }
    // Copies a source object to a destination object. Optionally overrides metadata.
    rpc PostBSourceBucketOSourceObjectCopyToBDestinationBucketODestinationObject(PostBSourceBucketOSourceObjectCopyToBDestinationBucketODestinationObjectRequest) returns (Object) {
      option (google.api.http) = {
        post: "/storage/v1/b/{sourceBucket}/o/{sourceObject}/copyTo/b/{destinationBucket}/o/{destinationObject}"
        body: "body"
      };
    }
    // Rewrites a source object to a destination object. Optionally overrides metadata.
    rpc PostBSourceBucketOSourceObjectRewriteToBDestinationBucketODestinationObject(PostBSourceBucketOSourceObjectRewriteToBDestinationBucketODestinationObjectRequest) returns (RewriteResponse) {
      option (google.api.http) = {
        post: "/storage/v1/b/{sourceBucket}/o/{sourceObject}/rewriteTo/b/{destinationBucket}/o/{destinationObject}"
        body: "body"
      };
    }
    // Stop watching resources through this channel
    rpc PostChannelsStop(PostChannelsStopRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        post: "/storage/v1/channels/stop"
        body: "resource"
      };
    }
    // Get the email address of this project's Google Cloud Storage service account.
    rpc GetProjectsProjectIdServiceAccount(GetProjectsProjectIdServiceAccountRequest) returns (ServiceAccount) {
      option (google.api.http) = {
        get: "/storage/v1/projects/{projectId}/serviceAccount"
      };
    }
}
