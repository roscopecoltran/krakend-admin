[[backends]]
  group = "cloud-storage-b"
  slug = "cloud-storage-v1-b"
  url_pattern = "/b"
  method = "GET"
  host = ["https://www.googleapis.com"]
  query_string_params = ["maxResults", "pageToken", "prefix", "project", "projection", "userProject"]
  whitelist = ["items", "kind", "nextPageToken"]
  concurrent_calls = 0
  [backends.mapping]
    items = "items"
    kind = "kind"
    nextPageToken = "nextPageToken"
  [backends.extra_config]
    hosts = ["https://www.googleapis.com"]
    schemes = ["https"]

[[backends]]
  group = "cloud-storage-b-bucket"
  slug = "cloud-storage-v1-b-bucket"
  url_pattern = "/b/{bucket}"
  method = "GET"
  host = ["https://www.googleapis.com"]
  url_keys = ["bucket"]
  query_string_params = ["ifMetagenerationMatch", "ifMetagenerationNotMatch", "projection", "userProject"]
  whitelist = ["acl", "billing", "cors", "defaultObjectAcl", "encryption", "etag", "id", "kind", "labels", "lifecycle", "location", "logging", "metageneration", "name", "owner", "projectNumber", "selfLink", "storageClass", "timeCreated", "updated", "versioning", "website"]
  concurrent_calls = 0
  [backends.mapping]
    acl = "acl"
    billing = "billing"
    cors = "cors"
    defaultObjectAcl = "defaultObjectAcl"
    encryption = "encryption"
    etag = "etag"
    id = "id"
    kind = "kind"
    labels = "labels"
    lifecycle = "lifecycle"
    location = "location"
    logging = "logging"
    metageneration = "metageneration"
    name = "name"
    owner = "owner"
    projectNumber = "projectNumber"
    selfLink = "selfLink"
    storageClass = "storageClass"
    timeCreated = "timeCreated"
    updated = "updated"
    versioning = "versioning"
    website = "website"
  [backends.extra_config]
    hosts = ["https://www.googleapis.com"]
    schemes = ["https"]

[[backends]]
  group = "cloud-storage-b-bucket-acl"
  slug = "cloud-storage-v1-b-bucket-acl"
  url_pattern = "/b/{bucket}/acl"
  method = "GET"
  host = ["https://www.googleapis.com"]
  url_keys = ["bucket"]
  query_string_params = ["userProject"]
  whitelist = ["items", "kind"]
  concurrent_calls = 0
  [backends.mapping]
    items = "items"
    kind = "kind"
  [backends.extra_config]
    hosts = ["https://www.googleapis.com"]
    schemes = ["https"]

[[backends]]
  group = "cloud-storage-b-bucket-acl-entity"
  slug = "cloud-storage-v1-b-bucket-acl-entity"
  url_pattern = "/b/{bucket}/acl/{entity}"
  method = "GET"
  host = ["https://www.googleapis.com"]
  url_keys = ["bucket", "entity"]
  query_string_params = ["userProject"]
  whitelist = ["bucket", "domain", "email", "entity", "entityId", "etag", "id", "kind", "projectTeam", "role", "selfLink"]
  concurrent_calls = 0
  [backends.mapping]
    bucket = "bucket"
    domain = "domain"
    email = "email"
    entity = "entity"
    entityId = "entityId"
    etag = "etag"
    id = "id"
    kind = "kind"
    projectTeam = "projectTeam"
    role = "role"
    selfLink = "selfLink"
  [backends.extra_config]
    hosts = ["https://www.googleapis.com"]
    schemes = ["https"]

[[backends]]
  group = "cloud-storage-b-bucket-defaultobjectacl"
  slug = "cloud-storage-v1-b-bucket-defaultobjectacl"
  url_pattern = "/b/{bucket}/defaultObjectAcl"
  method = "GET"
  host = ["https://www.googleapis.com"]
  url_keys = ["bucket"]
  query_string_params = ["ifMetagenerationMatch", "ifMetagenerationNotMatch", "userProject"]
  whitelist = ["items", "kind"]
  concurrent_calls = 0
  [backends.mapping]
    items = "items"
    kind = "kind"
  [backends.extra_config]
    hosts = ["https://www.googleapis.com"]
    schemes = ["https"]

[[backends]]
  group = "cloud-storage-b-bucket-defaultobjectacl-entity"
  slug = "cloud-storage-v1-b-bucket-defaultobjectacl-entity"
  url_pattern = "/b/{bucket}/defaultObjectAcl/{entity}"
  method = "GET"
  host = ["https://www.googleapis.com"]
  url_keys = ["bucket", "entity"]
  query_string_params = ["userProject"]
  whitelist = ["bucket", "domain", "email", "entity", "entityId", "etag", "generation", "id", "kind", "object", "projectTeam", "role", "selfLink"]
  concurrent_calls = 0
  [backends.mapping]
    bucket = "bucket"
    domain = "domain"
    email = "email"
    entity = "entity"
    entityId = "entityId"
    etag = "etag"
    generation = "generation"
    id = "id"
    kind = "kind"
    object = "object"
    projectTeam = "projectTeam"
    role = "role"
    selfLink = "selfLink"
  [backends.extra_config]
    hosts = ["https://www.googleapis.com"]
    schemes = ["https"]

[[backends]]
  group = "cloud-storage-b-bucket-iam"
  slug = "cloud-storage-v1-b-bucket-iam"
  url_pattern = "/b/{bucket}/iam"
  method = "GET"
  host = ["https://www.googleapis.com"]
  url_keys = ["bucket"]
  query_string_params = ["userProject"]
  whitelist = ["bindings", "etag", "kind", "resourceId"]
  concurrent_calls = 0
  [backends.mapping]
    bindings = "bindings"
    etag = "etag"
    kind = "kind"
    resourceId = "resourceId"
  [backends.extra_config]
    hosts = ["https://www.googleapis.com"]
    schemes = ["https"]

[[backends]]
  group = "cloud-storage-b-bucket-iam-testpermissions"
  slug = "cloud-storage-v1-b-bucket-iam-testpermissions"
  url_pattern = "/b/{bucket}/iam/testPermissions"
  method = "GET"
  host = ["https://www.googleapis.com"]
  url_keys = ["bucket"]
  query_string_params = ["permissions", "userProject"]
  whitelist = ["kind", "permissions"]
  concurrent_calls = 0
  [backends.mapping]
    kind = "kind"
    permissions = "permissions"
  [backends.extra_config]
    hosts = ["https://www.googleapis.com"]
    schemes = ["https"]

[[backends]]
  group = "cloud-storage-b-bucket-notificationconfigs"
  slug = "cloud-storage-v1-b-bucket-notificationconfigs"
  url_pattern = "/b/{bucket}/notificationConfigs"
  method = "GET"
  host = ["https://www.googleapis.com"]
  url_keys = ["bucket"]
  query_string_params = ["userProject"]
  whitelist = ["items", "kind"]
  concurrent_calls = 0
  [backends.mapping]
    items = "items"
    kind = "kind"
  [backends.extra_config]
    hosts = ["https://www.googleapis.com"]
    schemes = ["https"]

[[backends]]
  group = "cloud-storage-b-bucket-notificationconfigs-notification"
  slug = "cloud-storage-v1-b-bucket-notificationconfigs-notification"
  url_pattern = "/b/{bucket}/notificationConfigs/{notification}"
  method = "GET"
  host = ["https://www.googleapis.com"]
  url_keys = ["bucket", "notification"]
  query_string_params = ["userProject"]
  whitelist = ["custom_attributes", "etag", "event_types", "id", "kind", "object_name_prefix", "payload_format", "selfLink", "topic"]
  concurrent_calls = 0
  [backends.mapping]
    custom_attributes = "custom_attributes"
    etag = "etag"
    event_types = "event_types"
    id = "id"
    kind = "kind"
    object_name_prefix = "object_name_prefix"
    payload_format = "payload_format"
    selfLink = "selfLink"
    topic = "topic"
  [backends.extra_config]
    hosts = ["https://www.googleapis.com"]
    schemes = ["https"]

[[backends]]
  group = "cloud-storage-b-bucket-o"
  slug = "cloud-storage-v1-b-bucket-o"
  url_pattern = "/b/{bucket}/o"
  method = "GET"
  host = ["https://www.googleapis.com"]
  url_keys = ["bucket"]
  query_string_params = ["delimiter", "maxResults", "pageToken", "prefix", "projection", "userProject", "versions"]
  whitelist = ["items", "kind", "nextPageToken", "prefixes"]
  concurrent_calls = 0
  [backends.mapping]
    items = "items"
    kind = "kind"
    nextPageToken = "nextPageToken"
    prefixes = "prefixes"
  [backends.extra_config]
    hosts = ["https://www.googleapis.com"]
    schemes = ["https"]

[[backends]]
  group = "cloud-storage-b-bucket-o-watch"
  slug = "cloud-storage-v1-b-bucket-o-watch"
  url_pattern = "/b/{bucket}/o/watch"
  method = "POST"
  host = ["https://www.googleapis.com"]
  url_keys = ["bucket"]
  query_string_params = ["delimiter", "maxResults", "pageToken", "prefix", "projection", "userProject", "versions"]
  whitelist = ["address", "expiration", "id", "kind", "params", "payload", "resourceId", "resourceUri", "token", "type"]
  concurrent_calls = 0
  [backends.mapping]
    address = "address"
    expiration = "expiration"
    id = "id"
    kind = "kind"
    params = "params"
    payload = "payload"
    resourceId = "resourceId"
    resourceUri = "resourceUri"
    token = "token"
    type = "type"
  [backends.extra_config]
    hosts = ["https://www.googleapis.com"]
    schemes = ["https"]

[[backends]]
  group = "cloud-storage-b-bucket-o-object"
  slug = "cloud-storage-v1-b-bucket-o-object"
  url_pattern = "/b/{bucket}/o/{object}"
  method = "GET"
  host = ["https://www.googleapis.com"]
  url_keys = ["bucket", "object"]
  query_string_params = ["generation", "ifGenerationMatch", "ifGenerationNotMatch", "ifMetagenerationMatch", "ifMetagenerationNotMatch", "projection", "userProject"]
  whitelist = ["acl", "bucket", "cacheControl", "componentCount", "contentDisposition", "contentEncoding", "contentLanguage", "contentType", "crc32c", "customerEncryption", "etag", "generation", "id", "kind", "kmsKeyName", "md5Hash", "mediaLink", "metadata", "metageneration", "name", "owner", "selfLink", "size", "storageClass", "timeCreated", "timeDeleted", "timeStorageClassUpdated", "updated"]
  concurrent_calls = 0
  [backends.mapping]
    acl = "acl"
    bucket = "bucket"
    cacheControl = "cacheControl"
    componentCount = "componentCount"
    contentDisposition = "contentDisposition"
    contentEncoding = "contentEncoding"
    contentLanguage = "contentLanguage"
    contentType = "contentType"
    crc32c = "crc32c"
    customerEncryption = "customerEncryption"
    etag = "etag"
    generation = "generation"
    id = "id"
    kind = "kind"
    kmsKeyName = "kmsKeyName"
    md5Hash = "md5Hash"
    mediaLink = "mediaLink"
    metadata = "metadata"
    metageneration = "metageneration"
    name = "name"
    owner = "owner"
    selfLink = "selfLink"
    size = "size"
    storageClass = "storageClass"
    timeCreated = "timeCreated"
    timeDeleted = "timeDeleted"
    timeStorageClassUpdated = "timeStorageClassUpdated"
    updated = "updated"
  [backends.extra_config]
    hosts = ["https://www.googleapis.com"]
    schemes = ["https"]

[[backends]]
  group = "cloud-storage-b-bucket-o-object-acl"
  slug = "cloud-storage-v1-b-bucket-o-object-acl"
  url_pattern = "/b/{bucket}/o/{object}/acl"
  method = "GET"
  host = ["https://www.googleapis.com"]
  url_keys = ["bucket", "object"]
  query_string_params = ["generation", "userProject"]
  whitelist = ["items", "kind"]
  concurrent_calls = 0
  [backends.mapping]
    items = "items"
    kind = "kind"
  [backends.extra_config]
    hosts = ["https://www.googleapis.com"]
    schemes = ["https"]

[[backends]]
  group = "cloud-storage-b-bucket-o-object-acl-entity"
  slug = "cloud-storage-v1-b-bucket-o-object-acl-entity"
  url_pattern = "/b/{bucket}/o/{object}/acl/{entity}"
  method = "GET"
  host = ["https://www.googleapis.com"]
  url_keys = ["bucket", "entity", "object"]
  query_string_params = ["generation", "userProject"]
  whitelist = ["bucket", "domain", "email", "entity", "entityId", "etag", "generation", "id", "kind", "object", "projectTeam", "role", "selfLink"]
  concurrent_calls = 0
  [backends.mapping]
    bucket = "bucket"
    domain = "domain"
    email = "email"
    entity = "entity"
    entityId = "entityId"
    etag = "etag"
    generation = "generation"
    id = "id"
    kind = "kind"
    object = "object"
    projectTeam = "projectTeam"
    role = "role"
    selfLink = "selfLink"
  [backends.extra_config]
    hosts = ["https://www.googleapis.com"]
    schemes = ["https"]

[[backends]]
  group = "cloud-storage-b-bucket-o-object-iam"
  slug = "cloud-storage-v1-b-bucket-o-object-iam"
  url_pattern = "/b/{bucket}/o/{object}/iam"
  method = "GET"
  host = ["https://www.googleapis.com"]
  url_keys = ["bucket", "object"]
  query_string_params = ["generation", "userProject"]
  whitelist = ["bindings", "etag", "kind", "resourceId"]
  concurrent_calls = 0
  [backends.mapping]
    bindings = "bindings"
    etag = "etag"
    kind = "kind"
    resourceId = "resourceId"
  [backends.extra_config]
    hosts = ["https://www.googleapis.com"]
    schemes = ["https"]

[[backends]]
  group = "cloud-storage-b-bucket-o-object-iam-testpermissions"
  slug = "cloud-storage-v1-b-bucket-o-object-iam-testpermissions"
  url_pattern = "/b/{bucket}/o/{object}/iam/testPermissions"
  method = "GET"
  host = ["https://www.googleapis.com"]
  url_keys = ["bucket", "object"]
  query_string_params = ["generation", "permissions", "userProject"]
  whitelist = ["kind", "permissions"]
  concurrent_calls = 0
  [backends.mapping]
    kind = "kind"
    permissions = "permissions"
  [backends.extra_config]
    hosts = ["https://www.googleapis.com"]
    schemes = ["https"]

[[backends]]
  group = "cloud-storage-b-destinationbucket-o-destinationobject-compose"
  slug = "cloud-storage-v1-b-destinationbucket-o-destinationobject-compose"
  url_pattern = "/b/{destinationBucket}/o/{destinationObject}/compose"
  method = "POST"
  host = ["https://www.googleapis.com"]
  url_keys = ["destinationBucket", "destinationObject"]
  query_string_params = ["destinationPredefinedAcl", "ifGenerationMatch", "ifMetagenerationMatch", "kmsKeyName", "userProject"]
  whitelist = ["acl", "bucket", "cacheControl", "componentCount", "contentDisposition", "contentEncoding", "contentLanguage", "contentType", "crc32c", "customerEncryption", "etag", "generation", "id", "kind", "kmsKeyName", "md5Hash", "mediaLink", "metadata", "metageneration", "name", "owner", "selfLink", "size", "storageClass", "timeCreated", "timeDeleted", "timeStorageClassUpdated", "updated"]
  concurrent_calls = 0
  [backends.mapping]
    acl = "acl"
    bucket = "bucket"
    cacheControl = "cacheControl"
    componentCount = "componentCount"
    contentDisposition = "contentDisposition"
    contentEncoding = "contentEncoding"
    contentLanguage = "contentLanguage"
    contentType = "contentType"
    crc32c = "crc32c"
    customerEncryption = "customerEncryption"
    etag = "etag"
    generation = "generation"
    id = "id"
    kind = "kind"
    kmsKeyName = "kmsKeyName"
    md5Hash = "md5Hash"
    mediaLink = "mediaLink"
    metadata = "metadata"
    metageneration = "metageneration"
    name = "name"
    owner = "owner"
    selfLink = "selfLink"
    size = "size"
    storageClass = "storageClass"
    timeCreated = "timeCreated"
    timeDeleted = "timeDeleted"
    timeStorageClassUpdated = "timeStorageClassUpdated"
    updated = "updated"
  [backends.extra_config]
    hosts = ["https://www.googleapis.com"]
    schemes = ["https"]

[[backends]]
  group = "cloud-storage-b-sourcebucket-o-sourceobject-copyto-b-destinationbucket-o-destinationobject"
  slug = "cloud-storage-v1-b-sourcebucket-o-sourceobject-copyto-b-destinationbucket-o-destinationobject"
  url_pattern = "/b/{sourceBucket}/o/{sourceObject}/copyTo/b/{destinationBucket}/o/{destinationObject}"
  method = "POST"
  host = ["https://www.googleapis.com"]
  url_keys = ["destinationBucket", "destinationObject", "sourceBucket", "sourceObject"]
  query_string_params = ["destinationPredefinedAcl", "ifGenerationMatch", "ifGenerationNotMatch", "ifMetagenerationMatch", "ifMetagenerationNotMatch", "ifSourceGenerationMatch", "ifSourceGenerationNotMatch", "ifSourceMetagenerationMatch", "ifSourceMetagenerationNotMatch", "projection", "sourceGeneration", "userProject"]
  whitelist = ["acl", "bucket", "cacheControl", "componentCount", "contentDisposition", "contentEncoding", "contentLanguage", "contentType", "crc32c", "customerEncryption", "etag", "generation", "id", "kind", "kmsKeyName", "md5Hash", "mediaLink", "metadata", "metageneration", "name", "owner", "selfLink", "size", "storageClass", "timeCreated", "timeDeleted", "timeStorageClassUpdated", "updated"]
  concurrent_calls = 0
  [backends.mapping]
    acl = "acl"
    bucket = "bucket"
    cacheControl = "cacheControl"
    componentCount = "componentCount"
    contentDisposition = "contentDisposition"
    contentEncoding = "contentEncoding"
    contentLanguage = "contentLanguage"
    contentType = "contentType"
    crc32c = "crc32c"
    customerEncryption = "customerEncryption"
    etag = "etag"
    generation = "generation"
    id = "id"
    kind = "kind"
    kmsKeyName = "kmsKeyName"
    md5Hash = "md5Hash"
    mediaLink = "mediaLink"
    metadata = "metadata"
    metageneration = "metageneration"
    name = "name"
    owner = "owner"
    selfLink = "selfLink"
    size = "size"
    storageClass = "storageClass"
    timeCreated = "timeCreated"
    timeDeleted = "timeDeleted"
    timeStorageClassUpdated = "timeStorageClassUpdated"
    updated = "updated"
  [backends.extra_config]
    hosts = ["https://www.googleapis.com"]
    schemes = ["https"]

[[backends]]
  group = "cloud-storage-b-sourcebucket-o-sourceobject-rewriteto-b-destinationbucket-o-destinationobject"
  slug = "cloud-storage-v1-b-sourcebucket-o-sourceobject-rewriteto-b-destinationbucket-o-destinationobject"
  url_pattern = "/b/{sourceBucket}/o/{sourceObject}/rewriteTo/b/{destinationBucket}/o/{destinationObject}"
  method = "POST"
  host = ["https://www.googleapis.com"]
  url_keys = ["destinationBucket", "destinationObject", "sourceBucket", "sourceObject"]
  query_string_params = ["destinationKmsKeyName", "destinationPredefinedAcl", "ifGenerationMatch", "ifGenerationNotMatch", "ifMetagenerationMatch", "ifMetagenerationNotMatch", "ifSourceGenerationMatch", "ifSourceGenerationNotMatch", "ifSourceMetagenerationMatch", "ifSourceMetagenerationNotMatch", "maxBytesRewrittenPerCall", "projection", "rewriteToken", "sourceGeneration", "userProject"]
  whitelist = ["done", "kind", "objectSize", "rewriteToken", "totalBytesRewritten"]
  concurrent_calls = 0
  [backends.mapping]
    done = "done"
    kind = "kind"
    objectSize = "objectSize"
    rewriteToken = "rewriteToken"
    totalBytesRewritten = "totalBytesRewritten"
  [backends.extra_config]
    hosts = ["https://www.googleapis.com"]
    schemes = ["https"]

[[backends]]
  group = "cloud-storage-channels-stop"
  slug = "cloud-storage-v1-channels-stop"
  url_pattern = "/channels/stop"
  method = "POST"
  host = ["https://www.googleapis.com"]
  concurrent_calls = 0
  [backends.extra_config]
    hosts = ["https://www.googleapis.com"]
    schemes = ["https"]

[[backends]]
  group = "cloud-storage-projects-projectid-serviceaccount"
  slug = "cloud-storage-v1-projects-projectid-serviceaccount"
  url_pattern = "/projects/{projectId}/serviceAccount"
  method = "GET"
  host = ["https://www.googleapis.com"]
  url_keys = ["projectId"]
  query_string_params = ["userProject"]
  whitelist = ["email_address", "kind"]
  concurrent_calls = 0
  [backends.mapping]
    email_address = "email_address"
    kind = "kind"
  [backends.extra_config]
    hosts = ["https://www.googleapis.com"]
    schemes = ["https"]
