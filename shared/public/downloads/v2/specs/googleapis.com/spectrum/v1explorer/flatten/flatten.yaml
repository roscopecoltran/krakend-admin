basePath: /spectrum/v1explorer/paws
definitions.AntennaCharacteristics.description: Antenna characteristics provide additional
  information, such as the antenna height, antenna type, etc. Whether antenna characteristics
  must be provided in a request depends on the device type and regulatory domain.
definitions.AntennaCharacteristics.properties.height.description: The antenna height
  in meters. Whether the antenna height is required depends on the device type and
  the regulatory domain. Note that the height may be negative.
definitions.AntennaCharacteristics.properties.height.format: double
definitions.AntennaCharacteristics.properties.height.type: number
definitions.AntennaCharacteristics.properties.heightType.description: If the height
  is required, then the height type (AGL for above ground level or AMSL for above
  mean sea level) is also required. The default is AGL.
definitions.AntennaCharacteristics.properties.heightType.type: string
definitions.AntennaCharacteristics.properties.heightUncertainty.description: The height
  uncertainty in meters. Whether this is required depends on the regulatory domain.
definitions.AntennaCharacteristics.properties.heightUncertainty.format: double
definitions.AntennaCharacteristics.properties.heightUncertainty.type: number
definitions.AntennaCharacteristics.type: object
definitions.DatabaseSpec.description: This message contains the name and URI of a
  database.
definitions.DatabaseSpec.properties.name.description: The display name for a database.
definitions.DatabaseSpec.properties.name.type: string
definitions.DatabaseSpec.properties.uri.description: The corresponding URI of the
  database.
definitions.DatabaseSpec.properties.uri.type: string
definitions.DatabaseSpec.type: object
definitions.DbUpdateSpec.description: This message is provided by the database to
  notify devices of an upcoming change to the database URI.
definitions.DbUpdateSpec.properties.databases.description: A required list of one
  or more databases. A device should update its preconfigured list of databases to
  replace (only) the database that provided the response with the specified entries.
definitions.DbUpdateSpec.properties.databases.items.$ref: '#/definitions/DatabaseSpec'
definitions.DbUpdateSpec.properties.databases.type: array
definitions.DbUpdateSpec.type: object
definitions.DeviceCapabilities.description: Device capabilities provide additional
  information that may be used by a device to provide additional information to the
  database that may help it to determine available spectrum. If the database does
  not support device capabilities it will ignore the parameter altogether.
definitions.DeviceCapabilities.properties.frequencyRanges.description: An optional
  list of frequency ranges supported by the device. Each element must contain start
  and stop frequencies in which the device can operate. Channel identifiers are optional.
  When specified, the database should not return available spectrum that falls outside
  these ranges or channel IDs.
definitions.DeviceCapabilities.properties.frequencyRanges.items.$ref: '#/definitions/FrequencyRange'
definitions.DeviceCapabilities.properties.frequencyRanges.type: array
definitions.DeviceCapabilities.type: object
definitions.DeviceDescriptor.description: The device descriptor contains parameters
  that identify the specific device, such as its manufacturer serial number, regulatory-specific
  identifier (e.g., FCC ID), and any other device characteristics required by regulatory
  domains.
definitions.DeviceDescriptor.properties.etsiEnDeviceCategory.description: Specifies
  the ETSI white space device category. Valid values are the strings master and slave.
  This field is case-insensitive. Consult the ETSI documentation for details about
  the device types.
definitions.DeviceDescriptor.properties.etsiEnDeviceCategory.type: string
definitions.DeviceDescriptor.properties.etsiEnDeviceEmissionsClass.description: Specifies
  the ETSI white space device emissions class. The values are represented by numeric
  strings, such as 1, 2, etc. Consult the ETSI documentation for details about the
  device types.
definitions.DeviceDescriptor.properties.etsiEnDeviceEmissionsClass.type: string
definitions.DeviceDescriptor.properties.etsiEnDeviceType.description: Specifies the
  ETSI white space device type. Valid values are single-letter strings, such as A,
  B, etc. Consult the ETSI documentation for details about the device types.
definitions.DeviceDescriptor.properties.etsiEnDeviceType.type: string
definitions.DeviceDescriptor.properties.etsiEnTechnologyId.description: Specifies
  the ETSI white space device technology identifier. The string value must not exceed
  64 characters in length. Consult the ETSI documentation for details about the device
  types.
definitions.DeviceDescriptor.properties.etsiEnTechnologyId.type: string
definitions.DeviceDescriptor.properties.fccId.description: Specifies the device's
  FCC certification identifier. The value is an identifier string whose length should
  not exceed 32 characters. Note that, in practice, a valid FCC ID may be limited
  to 19 characters.
definitions.DeviceDescriptor.properties.fccId.type: string
definitions.DeviceDescriptor.properties.fccTvbdDeviceType.description: Specifies the
  TV Band White Space device type, as defined by the FCC. Valid values are FIXED,
  MODE_1, MODE_2.
definitions.DeviceDescriptor.properties.fccTvbdDeviceType.type: string
definitions.DeviceDescriptor.properties.manufacturerId.description: The manufacturer's
  ID may be required by the regulatory domain. This should represent the name of the
  device manufacturer, should be consistent across all devices from the same manufacturer,
  and should be distinct from that of other manufacturers. The string value must not
  exceed 64 characters in length.
definitions.DeviceDescriptor.properties.manufacturerId.type: string
definitions.DeviceDescriptor.properties.modelId.description: The device's model ID
  may be required by the regulatory domain. The string value must not exceed 64 characters
  in length.
definitions.DeviceDescriptor.properties.modelId.type: string
definitions.DeviceDescriptor.properties.rulesetIds.description: |-
  The list of identifiers for rulesets supported by the device. A database may require that the device provide this list before servicing the device requests. If the database does not support any of the rulesets specified in the list, the database may refuse to service the device requests. If present, the list must contain at least one entry.

  For information about the valid requests, see section 9.2 of the PAWS specification. Currently, FccTvBandWhiteSpace-2010 is the only supported ruleset.
definitions.DeviceDescriptor.properties.rulesetIds.items.type: string
definitions.DeviceDescriptor.properties.rulesetIds.type: array
definitions.DeviceDescriptor.properties.serialNumber.description: The manufacturer's
  device serial number; required by the applicable regulatory domain. The length of
  the value must not exceed 64 characters.
definitions.DeviceDescriptor.properties.serialNumber.type: string
definitions.DeviceDescriptor.type: object
definitions.DeviceOwner.description: "This parameter contains device-owner information
  required as part of device registration. The regulatory domains may require additional
  parameters.\n\nAll contact information must be expressed using the structure defined
  by the vCard format specification. Only the contact fields of vCard are supported:
  \ \n- fn: Full name of an individual \n- org: Name of the organization \n- adr:
  Address fields \n- tel: Telephone numbers \n- email: Email addresses  \n\nNote that
  the vCard specification defines maximum lengths for each field."
definitions.DeviceOwner.properties.operator.$ref: '#/definitions/Vcard'
definitions.DeviceOwner.properties.operator.description: The vCard contact information
  for the device operator is optional, but may be required by specific regulatory
  domains.
definitions.DeviceOwner.properties.owner.$ref: '#/definitions/Vcard'
definitions.DeviceOwner.properties.owner.description: The vCard contact information
  for the individual or business that owns the device is required.
definitions.DeviceOwner.type: object
definitions.DeviceValidity.description: The device validity element describes whether
  a particular device is valid to operate in the regulatory domain.
definitions.DeviceValidity.properties.deviceDesc.$ref: '#/definitions/DeviceDescriptor'
definitions.DeviceValidity.properties.deviceDesc.description: The descriptor of the
  device for which the validity check was requested. It will always be present.
definitions.DeviceValidity.properties.isValid.description: 'The validity status: true
  if the device is valid for operation, false otherwise. It will always be present.'
definitions.DeviceValidity.properties.isValid.type: boolean
definitions.DeviceValidity.properties.reason.description: If the device identifier
  is not valid, the database may include a reason. The reason may be in any language.
  The length of the value should not exceed 128 characters.
definitions.DeviceValidity.properties.reason.type: string
definitions.DeviceValidity.type: object
definitions.EventTime.description: |-
  The start and stop times of an event. This is used to indicate the time period for which a spectrum profile is valid.

  Both times are expressed using the format, YYYY-MM-DDThh:mm:ssZ, as defined in RFC3339. The times must be expressed using UTC.
definitions.EventTime.properties.startTime.description: The inclusive start of the
  event. It will be present.
definitions.EventTime.properties.startTime.type: string
definitions.EventTime.properties.stopTime.description: The exclusive end of the event.
  It will be present.
definitions.EventTime.properties.stopTime.type: string
definitions.EventTime.type: object
definitions.FrequencyRange.description: A specific range of frequencies together with
  the associated maximum power level and channel identifier.
definitions.FrequencyRange.properties.channelId.description: The database may include
  a channel identifier, when applicable. When it is included, the device should treat
  it as informative. The length of the identifier should not exceed 16 characters.
definitions.FrequencyRange.properties.channelId.type: string
definitions.FrequencyRange.properties.maxPowerDBm.description: The maximum total power
  level (EIRP)—computed over the corresponding operating bandwidth—that is permitted
  within the frequency range. Depending on the context in which the frequency-range
  element appears, this value may be required. For example, it is required in the
  available-spectrum response, available-spectrum-batch response, and spectrum-use
  notification message, but it should not be present (it is not applicable) when the
  frequency range appears inside a device-capabilities message.
definitions.FrequencyRange.properties.maxPowerDBm.format: double
definitions.FrequencyRange.properties.maxPowerDBm.type: number
definitions.FrequencyRange.properties.startHz.description: The required inclusive
  start of the frequency range (in Hertz).
definitions.FrequencyRange.properties.startHz.format: double
definitions.FrequencyRange.properties.startHz.type: number
definitions.FrequencyRange.properties.stopHz.description: The required exclusive end
  of the frequency range (in Hertz).
definitions.FrequencyRange.properties.stopHz.format: double
definitions.FrequencyRange.properties.stopHz.type: number
definitions.FrequencyRange.type: object
definitions.GeoLocation.description: This parameter is used to specify the geolocation
  of the device.
definitions.GeoLocation.properties.confidence.description: The location confidence
  level, as an integer percentage, may be required, depending on the regulatory domain.
  When the parameter is optional and not provided, its value is assumed to be 95.
  Valid values range from 0 to 99, since, in practice, 100-percent confidence is not
  achievable. The confidence value is meaningful only when geolocation refers to a
  point with uncertainty.
definitions.GeoLocation.properties.confidence.format: int32
definitions.GeoLocation.properties.confidence.type: integer
definitions.GeoLocation.properties.point.$ref: '#/definitions/GeoLocationEllipse'
definitions.GeoLocation.properties.point.description: If present, indicates that the
  geolocation represents a point. Paradoxically, a point is parameterized using an
  ellipse, where the center represents the location of the point and the distances
  along the major and minor axes represent the uncertainty. The uncertainty values
  may be required, depending on the regulatory domain.
definitions.GeoLocation.properties.region.$ref: '#/definitions/GeoLocationPolygon'
definitions.GeoLocation.properties.region.description: If present, indicates that
  the geolocation represents a region. Database support for regions is optional.
definitions.GeoLocation.type: object
definitions.GeoLocationEllipse.description: A "point" with uncertainty is represented
  using the Ellipse shape.
definitions.GeoLocationEllipse.properties.center.$ref: '#/definitions/GeoLocationPoint'
definitions.GeoLocationEllipse.properties.center.description: A required geo-spatial
  point representing the center of the ellipse.
definitions.GeoLocationEllipse.properties.orientation.description: A floating-point
  number that expresses the orientation of the ellipse, representing the rotation,
  in degrees, of the semi-major axis from North towards the East. For example, when
  the uncertainty is greatest along the North-South direction, orientation is 0 degrees;
  conversely, if the uncertainty is greatest along the East-West direction, orientation
  is 90 degrees. When orientation is not present, the orientation is assumed to be
  0.
definitions.GeoLocationEllipse.properties.orientation.format: double
definitions.GeoLocationEllipse.properties.orientation.type: number
definitions.GeoLocationEllipse.properties.semiMajorAxis.description: A floating-point
  number that expresses the location uncertainty along the major axis of the ellipse.
  May be required by the regulatory domain. When the uncertainty is optional, the
  default value is 0.
definitions.GeoLocationEllipse.properties.semiMajorAxis.format: double
definitions.GeoLocationEllipse.properties.semiMajorAxis.type: number
definitions.GeoLocationEllipse.properties.semiMinorAxis.description: A floating-point
  number that expresses the location uncertainty along the minor axis of the ellipse.
  May be required by the regulatory domain. When the uncertainty is optional, the
  default value is 0.
definitions.GeoLocationEllipse.properties.semiMinorAxis.format: double
definitions.GeoLocationEllipse.properties.semiMinorAxis.type: number
definitions.GeoLocationEllipse.type: object
definitions.GeoLocationPoint.description: A single geolocation on the globe.
definitions.GeoLocationPoint.properties.latitude.description: A required floating-point
  number that expresses the latitude in degrees using the WGS84 datum. For details
  on this encoding, see the National Imagery and Mapping Agency's Technical Report
  TR8350.2.
definitions.GeoLocationPoint.properties.latitude.format: double
definitions.GeoLocationPoint.properties.latitude.type: number
definitions.GeoLocationPoint.properties.longitude.description: A required floating-point
  number that expresses the longitude in degrees using the WGS84 datum. For details
  on this encoding, see the National Imagery and Mapping Agency's Technical Report
  TR8350.2.
definitions.GeoLocationPoint.properties.longitude.format: double
definitions.GeoLocationPoint.properties.longitude.type: number
definitions.GeoLocationPoint.type: object
definitions.GeoLocationPolygon.description: A region is represented using the polygonal
  shape.
definitions.GeoLocationPolygon.properties.exterior.description: "When the geolocation
  describes a region, the exterior field refers to a list of latitude/longitude points
  that represent the vertices of a polygon. The first and last points must be the
  same. Thus, a minimum of four points is required. The following polygon restrictions
  from RFC5491 apply:  \n- A connecting line shall not cross another connecting line
  of the same polygon. \n- The vertices must be defined in a counterclockwise order.
  \n- The edges of a polygon are defined by the shortest path between two points in
  space (not a geodesic curve). Consequently, the length between two adjacent vertices
  should be restricted to a maximum of 130 km. \n- All vertices are assumed to be
  at the same altitude. \n- Polygon shapes should be restricted to a maximum of 15
  vertices (16 points that include the repeated vertex)."
definitions.GeoLocationPolygon.properties.exterior.items.$ref: '#/definitions/GeoLocationPoint'
definitions.GeoLocationPolygon.properties.exterior.type: array
definitions.GeoLocationPolygon.type: object
definitions.GeoSpectrumSchedule.description: The schedule of spectrum profiles available
  at a particular geolocation.
definitions.GeoSpectrumSchedule.properties.location.$ref: '#/definitions/GeoLocation'
definitions.GeoSpectrumSchedule.properties.location.description: The geolocation identifies
  the location at which the spectrum schedule applies. It will always be present.
definitions.GeoSpectrumSchedule.properties.spectrumSchedules.description: A list of
  available spectrum profiles and associated times. It will always be present, and
  at least one schedule must be included (though it may be empty if there is no available
  spectrum). More than one schedule may be included to represent future changes to
  the available spectrum.
definitions.GeoSpectrumSchedule.properties.spectrumSchedules.items.$ref: '#/definitions/SpectrumSchedule'
definitions.GeoSpectrumSchedule.properties.spectrumSchedules.type: array
definitions.GeoSpectrumSchedule.type: object
definitions.PawsGetSpectrumBatchRequest.description: The request message for a batch
  available spectrum query protocol.
definitions.PawsGetSpectrumBatchRequest.properties.antenna.$ref: '#/definitions/AntennaCharacteristics'
definitions.PawsGetSpectrumBatchRequest.properties.antenna.description: Depending
  on device type and regulatory domain, antenna characteristics may be required.
definitions.PawsGetSpectrumBatchRequest.properties.capabilities.$ref: '#/definitions/DeviceCapabilities'
definitions.PawsGetSpectrumBatchRequest.properties.capabilities.description: The master
  device may include its device capabilities to limit the available-spectrum batch
  response to the spectrum that is compatible with its capabilities. The database
  should not return spectrum that is incompatible with the specified capabilities.
definitions.PawsGetSpectrumBatchRequest.properties.deviceDesc.$ref: '#/definitions/DeviceDescriptor'
definitions.PawsGetSpectrumBatchRequest.properties.deviceDesc.description: When the
  available spectrum request is made on behalf of a specific device (a master or slave
  device), device descriptor information for the device on whose behalf the request
  is made is required (in such cases, the requestType parameter must be empty). When
  a requestType value is specified, device descriptor information may be optional
  or required according to the rules of the applicable regulatory domain.
definitions.PawsGetSpectrumBatchRequest.properties.locations.description: |-
  A geolocation list is required. This allows a device to specify its current location plus additional anticipated locations when allowed by the regulatory domain. At least one location must be included. Geolocation must be given as the location of the radiation center of the device's antenna. If a location specifies a region, rather than a point, the database may return an UNIMPLEMENTED error if it does not support query by region.

  There is no upper limit on the number of locations included in a available spectrum batch request, but the database may restrict the number of locations it supports by returning a response with fewer locations than specified in the batch request. Note that geolocations must be those of the master device (a device with geolocation capability that makes an available spectrum batch request), whether the master device is making the request on its own behalf or on behalf of a slave device (one without geolocation capability).
definitions.PawsGetSpectrumBatchRequest.properties.locations.items.$ref: '#/definitions/GeoLocation'
definitions.PawsGetSpectrumBatchRequest.properties.locations.type: array
definitions.PawsGetSpectrumBatchRequest.properties.masterDeviceDesc.$ref: '#/definitions/DeviceDescriptor'
definitions.PawsGetSpectrumBatchRequest.properties.masterDeviceDesc.description: When
  an available spectrum batch request is made by the master device (a device with
  geolocation capability) on behalf of a slave device (a device without geolocation
  capability), the rules of the applicable regulatory domain may require the master
  device to provide its own device descriptor information (in addition to device descriptor
  information for the slave device in a separate parameter).
definitions.PawsGetSpectrumBatchRequest.properties.owner.$ref: '#/definitions/DeviceOwner'
definitions.PawsGetSpectrumBatchRequest.properties.owner.description: Depending on
  device type and regulatory domain, device owner information may be included in an
  available spectrum batch request. This allows the device to register and get spectrum-availability
  information in a single request.
definitions.PawsGetSpectrumBatchRequest.properties.requestType.description: The request
  type parameter is an optional parameter that can be used to modify an available
  spectrum batch request, but its use depends on applicable regulatory rules. For
  example, It may be used to request generic slave device parameters without having
  to specify the device descriptor for a specific device. When the requestType parameter
  is missing, the request is for a specific device (master or slave), and the device
  descriptor parameter for the device on whose behalf the batch request is made is
  required.
definitions.PawsGetSpectrumBatchRequest.properties.requestType.type: string
definitions.PawsGetSpectrumBatchRequest.properties.type.description: |-
  The message type (e.g., INIT_REQ, AVAIL_SPECTRUM_REQ, ...).

  Required field.
definitions.PawsGetSpectrumBatchRequest.properties.type.type: string
definitions.PawsGetSpectrumBatchRequest.properties.version.description: |-
  The PAWS version. Must be exactly 1.0.

  Required field.
definitions.PawsGetSpectrumBatchRequest.properties.version.type: string
definitions.PawsGetSpectrumBatchRequest.type: object
definitions.PawsGetSpectrumBatchResponse.description: The response message for the
  batch available spectrum query contains a schedule of available spectrum for the
  device at multiple locations.
definitions.PawsGetSpectrumBatchResponse.properties.databaseChange.$ref: '#/definitions/DbUpdateSpec'
definitions.PawsGetSpectrumBatchResponse.properties.databaseChange.description: A
  database may include the databaseChange parameter to notify a device of a change
  to its database URI, providing one or more alternate database URIs. The device should
  use this information to update its list of pre-configured databases by (only) replacing
  its entry for the responding database with the list of alternate URIs.
definitions.PawsGetSpectrumBatchResponse.properties.deviceDesc.$ref: '#/definitions/DeviceDescriptor'
definitions.PawsGetSpectrumBatchResponse.properties.deviceDesc.description: The database
  must return in its available spectrum response the device descriptor information
  it received in the master device's available spectrum batch request.
definitions.PawsGetSpectrumBatchResponse.properties.geoSpectrumSchedules.description: The
  available spectrum batch response must contain a geo-spectrum schedule list, The
  list may be empty if spectrum is not available. The database may return more than
  one geo-spectrum schedule to represent future changes to the available spectrum.
  How far in advance a schedule may be provided depends upon the applicable regulatory
  domain. The database may return available spectrum for fewer geolocations than requested.
  The device must not make assumptions about the order of the entries in the list,
  and must use the geolocation value in each geo-spectrum schedule entry to match
  available spectrum to a location.
definitions.PawsGetSpectrumBatchResponse.properties.geoSpectrumSchedules.items.$ref: '#/definitions/GeoSpectrumSchedule'
definitions.PawsGetSpectrumBatchResponse.properties.geoSpectrumSchedules.type: array
definitions.PawsGetSpectrumBatchResponse.properties.kind.default: spectrum#pawsGetSpectrumBatchResponse
definitions.PawsGetSpectrumBatchResponse.properties.kind.description: 'Identifies
  what kind of resource this is. Value: the fixed string "spectrum#pawsGetSpectrumBatchResponse".'
definitions.PawsGetSpectrumBatchResponse.properties.kind.type: string
definitions.PawsGetSpectrumBatchResponse.properties.maxContiguousBwHz.description: The
  database may return a constraint on the allowed maximum contiguous bandwidth (in
  Hertz). A regulatory domain may require the database to return this parameter. When
  this parameter is present in the response, the device must apply this constraint
  to its spectrum-selection logic to ensure that no single block of spectrum has bandwidth
  that exceeds this value.
definitions.PawsGetSpectrumBatchResponse.properties.maxContiguousBwHz.format: double
definitions.PawsGetSpectrumBatchResponse.properties.maxContiguousBwHz.type: number
definitions.PawsGetSpectrumBatchResponse.properties.maxTotalBwHz.description: The
  database may return a constraint on the allowed maximum total bandwidth (in Hertz),
  which does not need to be contiguous. A regulatory domain may require the database
  to return this parameter. When this parameter is present in the available spectrum
  batch response, the device must apply this constraint to its spectrum-selection
  logic to ensure that total bandwidth does not exceed this value.
definitions.PawsGetSpectrumBatchResponse.properties.maxTotalBwHz.format: double
definitions.PawsGetSpectrumBatchResponse.properties.maxTotalBwHz.type: number
definitions.PawsGetSpectrumBatchResponse.properties.needsSpectrumReport.description: For
  regulatory domains that require a spectrum-usage report from devices, the database
  must return true for this parameter if the geo-spectrum schedules list is not empty;
  otherwise, the database should either return false or omit this parameter. If this
  parameter is present and its value is true, the device must send a spectrum use
  notify message to the database; otherwise, the device should not send the notification.
definitions.PawsGetSpectrumBatchResponse.properties.needsSpectrumReport.type: boolean
definitions.PawsGetSpectrumBatchResponse.properties.rulesetInfo.$ref: '#/definitions/RulesetInfo'
definitions.PawsGetSpectrumBatchResponse.properties.rulesetInfo.description: The database
  should return ruleset information, which identifies the applicable regulatory authority
  and ruleset for the available spectrum batch response. If included, the device must
  use the corresponding ruleset to interpret the response. Values provided in the
  returned ruleset information, such as maxLocationChange, take precedence over any
  conflicting values provided in the ruleset information returned in a prior initialization
  response sent by the database to the device.
definitions.PawsGetSpectrumBatchResponse.properties.timestamp.description: The database
  includes a timestamp of the form, YYYY-MM-DDThh:mm:ssZ (Internet timestamp format
  per RFC3339), in its available spectrum batch response. The timestamp should be
  used by the device as a reference for the start and stop times specified in the
  response spectrum schedules.
definitions.PawsGetSpectrumBatchResponse.properties.timestamp.type: string
definitions.PawsGetSpectrumBatchResponse.properties.type.description: |-
  The message type (e.g., INIT_REQ, AVAIL_SPECTRUM_REQ, ...).

  Required field.
definitions.PawsGetSpectrumBatchResponse.properties.type.type: string
definitions.PawsGetSpectrumBatchResponse.properties.version.description: |-
  The PAWS version. Must be exactly 1.0.

  Required field.
definitions.PawsGetSpectrumBatchResponse.properties.version.type: string
definitions.PawsGetSpectrumBatchResponse.type: object
definitions.PawsGetSpectrumRequest.description: The request message for the available
  spectrum query protocol which must include the device's geolocation.
definitions.PawsGetSpectrumRequest.properties.antenna.$ref: '#/definitions/AntennaCharacteristics'
definitions.PawsGetSpectrumRequest.properties.antenna.description: Depending on device
  type and regulatory domain, the characteristics of the antenna may be required.
definitions.PawsGetSpectrumRequest.properties.capabilities.$ref: '#/definitions/DeviceCapabilities'
definitions.PawsGetSpectrumRequest.properties.capabilities.description: The master
  device may include its device capabilities to limit the available-spectrum response
  to the spectrum that is compatible with its capabilities. The database should not
  return spectrum that is incompatible with the specified capabilities.
definitions.PawsGetSpectrumRequest.properties.deviceDesc.$ref: '#/definitions/DeviceDescriptor'
definitions.PawsGetSpectrumRequest.properties.deviceDesc.description: When the available
  spectrum request is made on behalf of a specific device (a master or slave device),
  device descriptor information for that device is required (in such cases, the requestType
  parameter must be empty). When a requestType value is specified, device descriptor
  information may be optional or required according to the rules of the applicable
  regulatory domain.
definitions.PawsGetSpectrumRequest.properties.location.$ref: '#/definitions/GeoLocation'
definitions.PawsGetSpectrumRequest.properties.location.description: The geolocation
  of the master device (a device with geolocation capability that makes an available
  spectrum request) is required whether the master device is making the request on
  its own behalf or on behalf of a slave device (one without geolocation capability).
  The location must be the location of the radiation center of the master device's
  antenna. To support mobile devices, a regulatory domain may allow the anticipated
  position of the master device to be given instead. If the location specifies a region,
  rather than a point, the database may return an UNIMPLEMENTED error code if it does
  not support query by region.
definitions.PawsGetSpectrumRequest.properties.masterDeviceDesc.$ref: '#/definitions/DeviceDescriptor'
definitions.PawsGetSpectrumRequest.properties.masterDeviceDesc.description: When an
  available spectrum request is made by the master device (a device with geolocation
  capability) on behalf of a slave device (a device without geolocation capability),
  the rules of the applicable regulatory domain may require the master device to provide
  its own device descriptor information (in addition to device descriptor information
  for the slave device, which is provided in a separate parameter).
definitions.PawsGetSpectrumRequest.properties.owner.$ref: '#/definitions/DeviceOwner'
definitions.PawsGetSpectrumRequest.properties.owner.description: Depending on device
  type and regulatory domain, device owner information may be included in an available
  spectrum request. This allows the device to register and get spectrum-availability
  information in a single request.
definitions.PawsGetSpectrumRequest.properties.requestType.description: The request
  type parameter is an optional parameter that can be used to modify an available
  spectrum request, but its use depends on applicable regulatory rules. It may be
  used, for example, to request generic slave device parameters without having to
  specify the device descriptor for a specific device. When the requestType parameter
  is missing, the request is for a specific device (master or slave), and the deviceDesc
  parameter for the device on whose behalf the request is made is required.
definitions.PawsGetSpectrumRequest.properties.requestType.type: string
definitions.PawsGetSpectrumRequest.properties.type.description: |-
  The message type (e.g., INIT_REQ, AVAIL_SPECTRUM_REQ, ...).

  Required field.
definitions.PawsGetSpectrumRequest.properties.type.type: string
definitions.PawsGetSpectrumRequest.properties.version.description: |-
  The PAWS version. Must be exactly 1.0.

  Required field.
definitions.PawsGetSpectrumRequest.properties.version.type: string
definitions.PawsGetSpectrumRequest.type: object
definitions.PawsGetSpectrumResponse.description: The response message for the available
  spectrum query which contains a schedule of available spectrum for the device.
definitions.PawsGetSpectrumResponse.properties.databaseChange.$ref: '#/definitions/DbUpdateSpec'
definitions.PawsGetSpectrumResponse.properties.databaseChange.description: A database
  may include the databaseChange parameter to notify a device of a change to its database
  URI, providing one or more alternate database URIs. The device should use this information
  to update its list of pre-configured databases by (only) replacing its entry for
  the responding database with the list of alternate URIs.
definitions.PawsGetSpectrumResponse.properties.deviceDesc.$ref: '#/definitions/DeviceDescriptor'
definitions.PawsGetSpectrumResponse.properties.deviceDesc.description: The database
  must return, in its available spectrum response, the device descriptor information
  it received in the master device's available spectrum request.
definitions.PawsGetSpectrumResponse.properties.kind.default: spectrum#pawsGetSpectrumResponse
definitions.PawsGetSpectrumResponse.properties.kind.description: 'Identifies what
  kind of resource this is. Value: the fixed string "spectrum#pawsGetSpectrumResponse".'
definitions.PawsGetSpectrumResponse.properties.kind.type: string
definitions.PawsGetSpectrumResponse.properties.maxContiguousBwHz.description: The
  database may return a constraint on the allowed maximum contiguous bandwidth (in
  Hertz). A regulatory domain may require the database to return this parameter. When
  this parameter is present in the response, the device must apply this constraint
  to its spectrum-selection logic to ensure that no single block of spectrum has bandwidth
  that exceeds this value.
definitions.PawsGetSpectrumResponse.properties.maxContiguousBwHz.format: double
definitions.PawsGetSpectrumResponse.properties.maxContiguousBwHz.type: number
definitions.PawsGetSpectrumResponse.properties.maxTotalBwHz.description: The database
  may return a constraint on the allowed maximum total bandwidth (in Hertz), which
  need not be contiguous. A regulatory domain may require the database to return this
  parameter. When this parameter is present in the available spectrum response, the
  device must apply this constraint to its spectrum-selection logic to ensure that
  total bandwidth does not exceed this value.
definitions.PawsGetSpectrumResponse.properties.maxTotalBwHz.format: double
definitions.PawsGetSpectrumResponse.properties.maxTotalBwHz.type: number
definitions.PawsGetSpectrumResponse.properties.needsSpectrumReport.description: For
  regulatory domains that require a spectrum-usage report from devices, the database
  must return true for this parameter if the spectrum schedule list is not empty;
  otherwise, the database will either return false or omit this parameter. If this
  parameter is present and its value is true, the device must send a spectrum use
  notify message to the database; otherwise, the device must not send the notification.
definitions.PawsGetSpectrumResponse.properties.needsSpectrumReport.type: boolean
definitions.PawsGetSpectrumResponse.properties.rulesetInfo.$ref: '#/definitions/RulesetInfo'
definitions.PawsGetSpectrumResponse.properties.rulesetInfo.description: The database
  should return ruleset information, which identifies the applicable regulatory authority
  and ruleset for the available spectrum response. If included, the device must use
  the corresponding ruleset to interpret the response. Values provided in the returned
  ruleset information, such as maxLocationChange, take precedence over any conflicting
  values provided in the ruleset information returned in a prior initialization response
  sent by the database to the device.
definitions.PawsGetSpectrumResponse.properties.spectrumSchedules.description: The
  available spectrum response must contain a spectrum schedule list. The list may
  be empty if spectrum is not available. The database may return more than one spectrum
  schedule to represent future changes to the available spectrum. How far in advance
  a schedule may be provided depends on the applicable regulatory domain.
definitions.PawsGetSpectrumResponse.properties.spectrumSchedules.items.$ref: '#/definitions/SpectrumSchedule'
definitions.PawsGetSpectrumResponse.properties.spectrumSchedules.type: array
definitions.PawsGetSpectrumResponse.properties.timestamp.description: The database
  includes a timestamp of the form YYYY-MM-DDThh:mm:ssZ (Internet timestamp format
  per RFC3339) in its available spectrum response. The timestamp should be used by
  the device as a reference for the start and stop times specified in the response
  spectrum schedules.
definitions.PawsGetSpectrumResponse.properties.timestamp.type: string
definitions.PawsGetSpectrumResponse.properties.type.description: |-
  The message type (e.g., INIT_REQ, AVAIL_SPECTRUM_REQ, ...).

  Required field.
definitions.PawsGetSpectrumResponse.properties.type.type: string
definitions.PawsGetSpectrumResponse.properties.version.description: |-
  The PAWS version. Must be exactly 1.0.

  Required field.
definitions.PawsGetSpectrumResponse.properties.version.type: string
definitions.PawsGetSpectrumResponse.type: object
definitions.PawsInitRequest.description: The initialization request message allows
  the master device to initiate exchange of capabilities with the database.
definitions.PawsInitRequest.properties.deviceDesc.$ref: '#/definitions/DeviceDescriptor'
definitions.PawsInitRequest.properties.deviceDesc.description: The DeviceDescriptor
  parameter is required. If the database does not support the device or any of the
  rulesets specified in the device descriptor, it must return an UNSUPPORTED error
  code in the error response.
definitions.PawsInitRequest.properties.location.$ref: '#/definitions/GeoLocation'
definitions.PawsInitRequest.properties.location.description: A device's geolocation
  is required.
definitions.PawsInitRequest.properties.type.description: |-
  The message type (e.g., INIT_REQ, AVAIL_SPECTRUM_REQ, ...).

  Required field.
definitions.PawsInitRequest.properties.type.type: string
definitions.PawsInitRequest.properties.version.description: |-
  The PAWS version. Must be exactly 1.0.

  Required field.
definitions.PawsInitRequest.properties.version.type: string
definitions.PawsInitRequest.type: object
definitions.PawsInitResponse.description: The initialization response message communicates
  database parameters to the requesting device.
definitions.PawsInitResponse.properties.databaseChange.$ref: '#/definitions/DbUpdateSpec'
definitions.PawsInitResponse.properties.databaseChange.description: A database may
  include the databaseChange parameter to notify a device of a change to its database
  URI, providing one or more alternate database URIs. The device should use this information
  to update its list of pre-configured databases by (only) replacing its entry for
  the responding database with the list of alternate URIs.
definitions.PawsInitResponse.properties.kind.default: spectrum#pawsInitResponse
definitions.PawsInitResponse.properties.kind.description: 'Identifies what kind of
  resource this is. Value: the fixed string "spectrum#pawsInitResponse".'
definitions.PawsInitResponse.properties.kind.type: string
definitions.PawsInitResponse.properties.rulesetInfo.$ref: '#/definitions/RulesetInfo'
definitions.PawsInitResponse.properties.rulesetInfo.description: The rulesetInfo parameter
  must be included in the response. This parameter specifies the regulatory domain
  and parameters applicable to that domain. The database must include the authority
  field, which defines the regulatory domain for the location specified in the INIT_REQ
  message.
definitions.PawsInitResponse.properties.type.description: |-
  The message type (e.g., INIT_REQ, AVAIL_SPECTRUM_REQ, ...).

  Required field.
definitions.PawsInitResponse.properties.type.type: string
definitions.PawsInitResponse.properties.version.description: |-
  The PAWS version. Must be exactly 1.0.

  Required field.
definitions.PawsInitResponse.properties.version.type: string
definitions.PawsInitResponse.type: object
definitions.PawsNotifySpectrumUseRequest.description: The spectrum-use notification
  message which must contain the geolocation of the Device and parameters required
  by the regulatory domain.
definitions.PawsNotifySpectrumUseRequest.properties.deviceDesc.$ref: '#/definitions/DeviceDescriptor'
definitions.PawsNotifySpectrumUseRequest.properties.deviceDesc.description: Device
  descriptor information is required in the spectrum-use notification message.
definitions.PawsNotifySpectrumUseRequest.properties.location.$ref: '#/definitions/GeoLocation'
definitions.PawsNotifySpectrumUseRequest.properties.location.description: The geolocation
  of the master device (the device that is sending the spectrum-use notification)
  to the database is required in the spectrum-use notification message.
definitions.PawsNotifySpectrumUseRequest.properties.spectra.description: A spectrum
  list is required in the spectrum-use notification. The list specifies the spectrum
  that the device expects to use, which includes frequency ranges and maximum power
  levels. The list may be empty if the device decides not to use any of spectrum.
  For consistency, the psdBandwidthHz value should match that from one of the spectrum
  elements in the corresponding available spectrum response previously sent to the
  device by the database. Note that maximum power levels in the spectrum element must
  be expressed as power spectral density over the specified psdBandwidthHz value.
  The actual bandwidth to be used (as computed from the start and stop frequencies)
  may be different from the psdBandwidthHz value. As an example, when regulatory rules
  express maximum power spectral density in terms of maximum power over any 100 kHz
  band, then the psdBandwidthHz value should be set to 100 kHz, even though the actual
  bandwidth used can be 20 kHz.
definitions.PawsNotifySpectrumUseRequest.properties.spectra.items.$ref: '#/definitions/SpectrumMessage'
definitions.PawsNotifySpectrumUseRequest.properties.spectra.type: array
definitions.PawsNotifySpectrumUseRequest.properties.type.description: |-
  The message type (e.g., INIT_REQ, AVAIL_SPECTRUM_REQ, ...).

  Required field.
definitions.PawsNotifySpectrumUseRequest.properties.type.type: string
definitions.PawsNotifySpectrumUseRequest.properties.version.description: |-
  The PAWS version. Must be exactly 1.0.

  Required field.
definitions.PawsNotifySpectrumUseRequest.properties.version.type: string
definitions.PawsNotifySpectrumUseRequest.type: object
definitions.PawsNotifySpectrumUseResponse.description: An empty response to the notification.
definitions.PawsNotifySpectrumUseResponse.properties.kind.default: spectrum#pawsNotifySpectrumUseResponse
definitions.PawsNotifySpectrumUseResponse.properties.kind.description: 'Identifies
  what kind of resource this is. Value: the fixed string "spectrum#pawsNotifySpectrumUseResponse".'
definitions.PawsNotifySpectrumUseResponse.properties.kind.type: string
definitions.PawsNotifySpectrumUseResponse.properties.type.description: |-
  The message type (e.g., INIT_REQ, AVAIL_SPECTRUM_REQ, ...).

  Required field.
definitions.PawsNotifySpectrumUseResponse.properties.type.type: string
definitions.PawsNotifySpectrumUseResponse.properties.version.description: |-
  The PAWS version. Must be exactly 1.0.

  Required field.
definitions.PawsNotifySpectrumUseResponse.properties.version.type: string
definitions.PawsNotifySpectrumUseResponse.type: object
definitions.PawsRegisterRequest.description: The registration request message contains
  the required registration parameters.
definitions.PawsRegisterRequest.properties.antenna.$ref: '#/definitions/AntennaCharacteristics'
definitions.PawsRegisterRequest.properties.antenna.description: Antenna characteristics,
  including its height and height type.
definitions.PawsRegisterRequest.properties.deviceDesc.$ref: '#/definitions/DeviceDescriptor'
definitions.PawsRegisterRequest.properties.deviceDesc.description: A DeviceDescriptor
  is required.
definitions.PawsRegisterRequest.properties.deviceOwner.$ref: '#/definitions/DeviceOwner'
definitions.PawsRegisterRequest.properties.deviceOwner.description: Device owner information
  is required.
definitions.PawsRegisterRequest.properties.location.$ref: '#/definitions/GeoLocation'
definitions.PawsRegisterRequest.properties.location.description: A device's geolocation
  is required.
definitions.PawsRegisterRequest.properties.type.description: |-
  The message type (e.g., INIT_REQ, AVAIL_SPECTRUM_REQ, ...).

  Required field.
definitions.PawsRegisterRequest.properties.type.type: string
definitions.PawsRegisterRequest.properties.version.description: |-
  The PAWS version. Must be exactly 1.0.

  Required field.
definitions.PawsRegisterRequest.properties.version.type: string
definitions.PawsRegisterRequest.type: object
definitions.PawsRegisterResponse.description: The registration response message simply
  acknowledges receipt of the request and is otherwise empty.
definitions.PawsRegisterResponse.properties.databaseChange.$ref: '#/definitions/DbUpdateSpec'
definitions.PawsRegisterResponse.properties.databaseChange.description: A database
  may include the databaseChange parameter to notify a device of a change to its database
  URI, providing one or more alternate database URIs. The device should use this information
  to update its list of pre-configured databases by (only) replacing its entry for
  the responding database with the list of alternate URIs.
definitions.PawsRegisterResponse.properties.kind.default: spectrum#pawsRegisterResponse
definitions.PawsRegisterResponse.properties.kind.description: 'Identifies what kind
  of resource this is. Value: the fixed string "spectrum#pawsRegisterResponse".'
definitions.PawsRegisterResponse.properties.kind.type: string
definitions.PawsRegisterResponse.properties.type.description: |-
  The message type (e.g., INIT_REQ, AVAIL_SPECTRUM_REQ, ...).

  Required field.
definitions.PawsRegisterResponse.properties.type.type: string
definitions.PawsRegisterResponse.properties.version.description: |-
  The PAWS version. Must be exactly 1.0.

  Required field.
definitions.PawsRegisterResponse.properties.version.type: string
definitions.PawsRegisterResponse.type: object
definitions.PawsVerifyDeviceRequest.description: The device validation request message.
definitions.PawsVerifyDeviceRequest.properties.deviceDescs.description: A list of
  device descriptors, which specifies the slave devices to be validated, is required.
definitions.PawsVerifyDeviceRequest.properties.deviceDescs.items.$ref: '#/definitions/DeviceDescriptor'
definitions.PawsVerifyDeviceRequest.properties.deviceDescs.type: array
definitions.PawsVerifyDeviceRequest.properties.type.description: |-
  The message type (e.g., INIT_REQ, AVAIL_SPECTRUM_REQ, ...).

  Required field.
definitions.PawsVerifyDeviceRequest.properties.type.type: string
definitions.PawsVerifyDeviceRequest.properties.version.description: |-
  The PAWS version. Must be exactly 1.0.

  Required field.
definitions.PawsVerifyDeviceRequest.properties.version.type: string
definitions.PawsVerifyDeviceRequest.type: object
definitions.PawsVerifyDeviceResponse.description: The device validation response message.
definitions.PawsVerifyDeviceResponse.properties.databaseChange.$ref: '#/definitions/DbUpdateSpec'
definitions.PawsVerifyDeviceResponse.properties.databaseChange.description: A database
  may include the databaseChange parameter to notify a device of a change to its database
  URI, providing one or more alternate database URIs. The device should use this information
  to update its list of pre-configured databases by (only) replacing its entry for
  the responding database with the list of alternate URIs.
definitions.PawsVerifyDeviceResponse.properties.deviceValidities.description: A device
  validities list is required in the device validation response to report whether
  each slave device listed in a previous device validation request is valid. The number
  of entries must match the number of device descriptors listed in the previous device
  validation request.
definitions.PawsVerifyDeviceResponse.properties.deviceValidities.items.$ref: '#/definitions/DeviceValidity'
definitions.PawsVerifyDeviceResponse.properties.deviceValidities.type: array
definitions.PawsVerifyDeviceResponse.properties.kind.default: spectrum#pawsVerifyDeviceResponse
definitions.PawsVerifyDeviceResponse.properties.kind.description: 'Identifies what
  kind of resource this is. Value: the fixed string "spectrum#pawsVerifyDeviceResponse".'
definitions.PawsVerifyDeviceResponse.properties.kind.type: string
definitions.PawsVerifyDeviceResponse.properties.type.description: |-
  The message type (e.g., INIT_REQ, AVAIL_SPECTRUM_REQ, ...).

  Required field.
definitions.PawsVerifyDeviceResponse.properties.type.type: string
definitions.PawsVerifyDeviceResponse.properties.version.description: |-
  The PAWS version. Must be exactly 1.0.

  Required field.
definitions.PawsVerifyDeviceResponse.properties.version.type: string
definitions.PawsVerifyDeviceResponse.type: object
definitions.RulesetInfo.description: This contains parameters for the ruleset of a
  regulatory domain that is communicated using the initialization and available-spectrum
  processes.
definitions.RulesetInfo.properties.authority.description: The regulatory domain to
  which the ruleset belongs is required. It must be a 2-letter country code. The device
  should use this to determine additional device behavior required by the associated
  regulatory domain.
definitions.RulesetInfo.properties.authority.type: string
definitions.RulesetInfo.properties.maxLocationChange.description: The maximum location
  change in meters is required in the initialization response, but optional otherwise.
  When the device changes location by more than this specified distance, it must contact
  the database to get the available spectrum for the new location. If the device is
  using spectrum that is no longer available, it must immediately cease use of the
  spectrum under rules for database-managed spectrum. If this value is provided within
  the context of an available-spectrum response, it takes precedence over the value
  within the initialization response.
definitions.RulesetInfo.properties.maxLocationChange.format: double
definitions.RulesetInfo.properties.maxLocationChange.type: number
definitions.RulesetInfo.properties.maxPollingSecs.description: The maximum duration,
  in seconds, between requests for available spectrum. It is required in the initialization
  response, but optional otherwise. The device must contact the database to get available
  spectrum no less frequently than this duration. If the new spectrum information
  indicates that the device is using spectrum that is no longer available, it must
  immediately cease use of those frequencies under rules for database-managed spectrum.
  If this value is provided within the context of an available-spectrum response,
  it takes precedence over the value within the initialization response.
definitions.RulesetInfo.properties.maxPollingSecs.format: int32
definitions.RulesetInfo.properties.maxPollingSecs.type: integer
definitions.RulesetInfo.properties.rulesetIds.description: The identifiers of the
  rulesets supported for the device's location. The database should include at least
  one applicable ruleset in the initialization response. The device may use the ruleset
  identifiers to determine parameters to include in subsequent requests. Within the
  context of the available-spectrum responses, the database should include the identifier
  of the ruleset that it used to determine the available-spectrum response. If included,
  the device must use the specified ruleset to interpret the response. If the device
  does not support the indicated ruleset, it must not operate in the spectrum governed
  by the ruleset.
definitions.RulesetInfo.properties.rulesetIds.items.type: string
definitions.RulesetInfo.properties.rulesetIds.type: array
definitions.RulesetInfo.type: object
definitions.SpectrumMessage.description: Available spectrum can be logically characterized
  by a list of frequency ranges and permissible power levels for each range.
definitions.SpectrumMessage.properties.bandwidth.description: The bandwidth (in Hertz)
  for which permissible power levels are specified. For example, FCC regulation would
  require only one spectrum specification at 6MHz bandwidth, but Ofcom regulation
  would require two specifications, at 0.1MHz and 8MHz. This parameter may be empty
  if there is no available spectrum. It will be present otherwise.
definitions.SpectrumMessage.properties.bandwidth.format: double
definitions.SpectrumMessage.properties.bandwidth.type: number
definitions.SpectrumMessage.properties.frequencyRanges.description: The list of frequency
  ranges and permissible power levels. The list may be empty if there is no available
  spectrum, otherwise it will be present.
definitions.SpectrumMessage.properties.frequencyRanges.items.$ref: '#/definitions/FrequencyRange'
definitions.SpectrumMessage.properties.frequencyRanges.type: array
definitions.SpectrumMessage.type: object
definitions.SpectrumSchedule.description: The spectrum schedule element combines an
  event time with spectrum profile to define a time period in which the profile is
  valid.
definitions.SpectrumSchedule.properties.eventTime.$ref: '#/definitions/EventTime'
definitions.SpectrumSchedule.properties.eventTime.description: The event time expresses
  when the spectrum profile is valid. It will always be present.
definitions.SpectrumSchedule.properties.spectra.description: A list of spectrum messages
  representing the usable profile. It will always be present, but may be empty when
  there is no available spectrum.
definitions.SpectrumSchedule.properties.spectra.items.$ref: '#/definitions/SpectrumMessage'
definitions.SpectrumSchedule.properties.spectra.type: array
definitions.SpectrumSchedule.type: object
definitions.Vcard.description: "A vCard-in-JSON message that contains only the fields
  needed for PAWS:  \n- fn: Full name of an individual \n- org: Name of the organization
  \n- adr: Address fields \n- tel: Telephone numbers \n- email: Email addresses"
definitions.Vcard.properties.adr.$ref: '#/definitions/VcardAddress'
definitions.Vcard.properties.adr.description: The street address of the entity.
definitions.Vcard.properties.email.$ref: '#/definitions/VcardTypedText'
definitions.Vcard.properties.email.description: An email address that can be used
  to reach the contact.
definitions.Vcard.properties.fn.description: 'The full name of the contact person.
  For example: John A. Smith.'
definitions.Vcard.properties.fn.type: string
definitions.Vcard.properties.org.$ref: '#/definitions/VcardTypedText'
definitions.Vcard.properties.org.description: The organization associated with the
  registering entity.
definitions.Vcard.properties.tel.$ref: '#/definitions/VcardTelephone'
definitions.Vcard.properties.tel.description: A telephone number that can be used
  to call the contact.
definitions.Vcard.type: object
definitions.VcardAddress.description: The structure used to represent a street address.
definitions.VcardAddress.properties.code.description: 'The postal code associated
  with the address. For example: 94423.'
definitions.VcardAddress.properties.code.type: string
definitions.VcardAddress.properties.country.description: 'The country name. For example:
  US.'
definitions.VcardAddress.properties.country.type: string
definitions.VcardAddress.properties.locality.description: 'The city or local equivalent
  portion of the address. For example: San Jose.'
definitions.VcardAddress.properties.locality.type: string
definitions.VcardAddress.properties.pobox.description: An optional post office box
  number.
definitions.VcardAddress.properties.pobox.type: string
definitions.VcardAddress.properties.region.description: 'The state or local equivalent
  portion of the address. For example: CA.'
definitions.VcardAddress.properties.region.type: string
definitions.VcardAddress.properties.street.description: 'The street number and name.
  For example: 123 Any St.'
definitions.VcardAddress.properties.street.type: string
definitions.VcardAddress.type: object
definitions.VcardTelephone.description: The structure used to represent a telephone
  number.
definitions.VcardTelephone.properties.uri.description: 'A nested telephone URI of
  the form: tel:+1-123-456-7890.'
definitions.VcardTelephone.properties.uri.type: string
definitions.VcardTelephone.type: object
definitions.VcardTypedText.description: The structure used to represent an organization
  and an email address.
definitions.VcardTypedText.properties.text.description: 'The text string associated
  with this item. For example, for an org field: ACME, inc. For an email field: smith@example.com.'
definitions.VcardTypedText.properties.text.type: string
definitions.VcardTypedText.type: object
externalDocs.url: http://developers.google.com/spectrum
host: www.googleapis.com
info.contact.name: Google
info.contact.url: https://google.com
info.description: API for spectrum-management functions.
info.title: Google Spectrum Database
info.version: v1explorer
info.x-apiClientRegistration.url: https://console.developers.google.com
info.x-logo.url: https://api.apis.guru/v2/cache/logo/https_www.google.com_images_branding_googlelogo_2x_googlelogo_color_272x92dp.png
info.x-origin.length: 1
info.x-origin[0].converter.url: https://github.com/lucybot/api-spec-converter
info.x-origin[0].converter.version: 2.6.0
info.x-origin[0].format: google
info.x-origin[0].url: https://www.googleapis.com/discovery/v1/apis/spectrum/v1explorer/rest
info.x-origin[0].version: v1
info.x-preferred: true
info.x-providerName: googleapis.com
info.x-serviceName: spectrum
parameters.alt.default: json
parameters.alt.description: Data format for the response.
parameters.alt.enum.length: 2
parameters.alt.enum[0]: csv
parameters.alt.enum[1]: json
parameters.alt.in: query
parameters.alt.name: alt
parameters.alt.type: string
parameters.fields.description: Selector specifying which fields to include in a partial
  response.
parameters.fields.in: query
parameters.fields.name: fields
parameters.fields.type: string
parameters.key.description: API key. Your API key identifies your project and provides
  you with API access, quota, and reports. Required unless you provide an OAuth 2.0
  token.
parameters.key.in: query
parameters.key.name: key
parameters.key.type: string
parameters.oauth_token.description: OAuth 2.0 token for the current user.
parameters.oauth_token.in: query
parameters.oauth_token.name: oauth_token
parameters.oauth_token.type: string
parameters.prettyPrint.default: true
parameters.prettyPrint.description: Returns response with indentations and line breaks.
parameters.prettyPrint.in: query
parameters.prettyPrint.name: prettyPrint
parameters.prettyPrint.type: boolean
parameters.quotaUser.description: Available to use for quota purposes for server-side
  applications. Can be any arbitrary string assigned to a user, but should not exceed
  40 characters. Overrides userIp if both are provided.
parameters.quotaUser.in: query
parameters.quotaUser.name: quotaUser
parameters.quotaUser.type: string
parameters.userIp.description: IP address of the site where the request originates.
  Use this if you want to enforce per-user limits.
parameters.userIp.in: query
parameters.userIp.name: userIp
parameters.userIp.type: string
paths./getSpectrum.parameters.length: 7
paths./getSpectrum.parameters[0].$ref: '#/parameters/alt'
paths./getSpectrum.parameters[1].$ref: '#/parameters/fields'
paths./getSpectrum.parameters[2].$ref: '#/parameters/key'
paths./getSpectrum.parameters[3].$ref: '#/parameters/oauth_token'
paths./getSpectrum.parameters[4].$ref: '#/parameters/prettyPrint'
paths./getSpectrum.parameters[5].$ref: '#/parameters/quotaUser'
paths./getSpectrum.parameters[6].$ref: '#/parameters/userIp'
paths./getSpectrum.post.description: Requests information about the available spectrum
  for a device at a location. Requests from a fixed-mode device must include owner
  information so the device can be registered with the database.
paths./getSpectrum.post.operationId: spectrum.paws.getSpectrum
paths./getSpectrum.post.parameters.length: 1
paths./getSpectrum.post.parameters[0].in: body
paths./getSpectrum.post.parameters[0].name: body
paths./getSpectrum.post.parameters[0].schema.$ref: '#/definitions/PawsGetSpectrumRequest'
paths./getSpectrum.post.responses.200.description: Successful response
paths./getSpectrum.post.responses.200.schema.$ref: '#/definitions/PawsGetSpectrumResponse'
paths./getSpectrum.post.tags.length: 1
paths./getSpectrum.post.tags[0]: paws
paths./getSpectrumBatch.parameters.length: 7
paths./getSpectrumBatch.parameters[0].$ref: '#/parameters/alt'
paths./getSpectrumBatch.parameters[1].$ref: '#/parameters/fields'
paths./getSpectrumBatch.parameters[2].$ref: '#/parameters/key'
paths./getSpectrumBatch.parameters[3].$ref: '#/parameters/oauth_token'
paths./getSpectrumBatch.parameters[4].$ref: '#/parameters/prettyPrint'
paths./getSpectrumBatch.parameters[5].$ref: '#/parameters/quotaUser'
paths./getSpectrumBatch.parameters[6].$ref: '#/parameters/userIp'
paths./getSpectrumBatch.post.description: The Google Spectrum Database does not support
  batch requests, so this method always yields an UNIMPLEMENTED error.
paths./getSpectrumBatch.post.operationId: spectrum.paws.getSpectrumBatch
paths./getSpectrumBatch.post.parameters.length: 1
paths./getSpectrumBatch.post.parameters[0].in: body
paths./getSpectrumBatch.post.parameters[0].name: body
paths./getSpectrumBatch.post.parameters[0].schema.$ref: '#/definitions/PawsGetSpectrumBatchRequest'
paths./getSpectrumBatch.post.responses.200.description: Successful response
paths./getSpectrumBatch.post.responses.200.schema.$ref: '#/definitions/PawsGetSpectrumBatchResponse'
paths./getSpectrumBatch.post.tags.length: 1
paths./getSpectrumBatch.post.tags[0]: paws
paths./init.parameters.length: 7
paths./init.parameters[0].$ref: '#/parameters/alt'
paths./init.parameters[1].$ref: '#/parameters/fields'
paths./init.parameters[2].$ref: '#/parameters/key'
paths./init.parameters[3].$ref: '#/parameters/oauth_token'
paths./init.parameters[4].$ref: '#/parameters/prettyPrint'
paths./init.parameters[5].$ref: '#/parameters/quotaUser'
paths./init.parameters[6].$ref: '#/parameters/userIp'
paths./init.post.description: Initializes the connection between a white space device
  and the database.
paths./init.post.operationId: spectrum.paws.init
paths./init.post.parameters.length: 1
paths./init.post.parameters[0].in: body
paths./init.post.parameters[0].name: body
paths./init.post.parameters[0].schema.$ref: '#/definitions/PawsInitRequest'
paths./init.post.responses.200.description: Successful response
paths./init.post.responses.200.schema.$ref: '#/definitions/PawsInitResponse'
paths./init.post.tags.length: 1
paths./init.post.tags[0]: paws
paths./notifySpectrumUse.parameters.length: 7
paths./notifySpectrumUse.parameters[0].$ref: '#/parameters/alt'
paths./notifySpectrumUse.parameters[1].$ref: '#/parameters/fields'
paths./notifySpectrumUse.parameters[2].$ref: '#/parameters/key'
paths./notifySpectrumUse.parameters[3].$ref: '#/parameters/oauth_token'
paths./notifySpectrumUse.parameters[4].$ref: '#/parameters/prettyPrint'
paths./notifySpectrumUse.parameters[5].$ref: '#/parameters/quotaUser'
paths./notifySpectrumUse.parameters[6].$ref: '#/parameters/userIp'
paths./notifySpectrumUse.post.description: Notifies the database that the device has
  selected certain frequency ranges for transmission. Only to be invoked when required
  by the regulator. The Google Spectrum Database does not operate in domains that
  require notification, so this always yields an UNIMPLEMENTED error.
paths./notifySpectrumUse.post.operationId: spectrum.paws.notifySpectrumUse
paths./notifySpectrumUse.post.parameters.length: 1
paths./notifySpectrumUse.post.parameters[0].in: body
paths./notifySpectrumUse.post.parameters[0].name: body
paths./notifySpectrumUse.post.parameters[0].schema.$ref: '#/definitions/PawsNotifySpectrumUseRequest'
paths./notifySpectrumUse.post.responses.200.description: Successful response
paths./notifySpectrumUse.post.responses.200.schema.$ref: '#/definitions/PawsNotifySpectrumUseResponse'
paths./notifySpectrumUse.post.tags.length: 1
paths./notifySpectrumUse.post.tags[0]: paws
paths./register.parameters.length: 7
paths./register.parameters[0].$ref: '#/parameters/alt'
paths./register.parameters[1].$ref: '#/parameters/fields'
paths./register.parameters[2].$ref: '#/parameters/key'
paths./register.parameters[3].$ref: '#/parameters/oauth_token'
paths./register.parameters[4].$ref: '#/parameters/prettyPrint'
paths./register.parameters[5].$ref: '#/parameters/quotaUser'
paths./register.parameters[6].$ref: '#/parameters/userIp'
paths./register.post.description: The Google Spectrum Database implements registration
  in the getSpectrum method. As such this always returns an UNIMPLEMENTED error.
paths./register.post.operationId: spectrum.paws.register
paths./register.post.parameters.length: 1
paths./register.post.parameters[0].in: body
paths./register.post.parameters[0].name: body
paths./register.post.parameters[0].schema.$ref: '#/definitions/PawsRegisterRequest'
paths./register.post.responses.200.description: Successful response
paths./register.post.responses.200.schema.$ref: '#/definitions/PawsRegisterResponse'
paths./register.post.tags.length: 1
paths./register.post.tags[0]: paws
paths./verifyDevice.parameters.length: 7
paths./verifyDevice.parameters[0].$ref: '#/parameters/alt'
paths./verifyDevice.parameters[1].$ref: '#/parameters/fields'
paths./verifyDevice.parameters[2].$ref: '#/parameters/key'
paths./verifyDevice.parameters[3].$ref: '#/parameters/oauth_token'
paths./verifyDevice.parameters[4].$ref: '#/parameters/prettyPrint'
paths./verifyDevice.parameters[5].$ref: '#/parameters/quotaUser'
paths./verifyDevice.parameters[6].$ref: '#/parameters/userIp'
paths./verifyDevice.post.description: Validates a device for white space use in accordance
  with regulatory rules. The Google Spectrum Database does not support master/slave
  configurations, so this always yields an UNIMPLEMENTED error.
paths./verifyDevice.post.operationId: spectrum.paws.verifyDevice
paths./verifyDevice.post.parameters.length: 1
paths./verifyDevice.post.parameters[0].in: body
paths./verifyDevice.post.parameters[0].name: body
paths./verifyDevice.post.parameters[0].schema.$ref: '#/definitions/PawsVerifyDeviceRequest'
paths./verifyDevice.post.responses.200.description: Successful response
paths./verifyDevice.post.responses.200.schema.$ref: '#/definitions/PawsVerifyDeviceResponse'
paths./verifyDevice.post.tags.length: 1
paths./verifyDevice.post.tags[0]: paws
schemes.length: 1
schemes[0]: https
swagger: "2.0"
tags.length: 1
tags[0].name: paws
