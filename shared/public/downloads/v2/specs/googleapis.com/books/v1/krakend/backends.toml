[[backends]]
  group = "books-v1"
  url_pattern = "/books/v1/cloudloading/addBook"
  method = "POST"
  host = ["https://www.googleapis.com"]
  whitelist = ["author", "processingState", "title", "volumeId"]
  concurrent_calls = 1
  [backends.extra_config]
    provider = "googleapis.com"
    description = "Searches for books and manages your Google Books library."
    version = "v1"
    slug = "books-v1-books-v1-cloudloading-addbook"
    schemes = ["https"]
    hosts = ["https://www.googleapis.com"]
    topics = ["media"]
    [backends.extra_config.mapping]
      author = "author"
      processingState = "processingState"
      title = "title"
      volumeId = "volumeId"

[[backends]]
  group = "books-v1"
  url_pattern = "/books/v1/cloudloading/deleteBook"
  method = "POST"
  host = ["https://www.googleapis.com"]
  concurrent_calls = 1
  [backends.extra_config]
    provider = "googleapis.com"
    description = "Searches for books and manages your Google Books library."
    version = "v1"
    slug = "books-v1-books-v1-cloudloading-deletebook"
    schemes = ["https"]
    hosts = ["https://www.googleapis.com"]
    topics = ["media"]

[[backends]]
  group = "books-v1"
  url_pattern = "/books/v1/cloudloading/updateBook"
  method = "POST"
  host = ["https://www.googleapis.com"]
  whitelist = ["author", "processingState", "title", "volumeId"]
  concurrent_calls = 1
  [backends.extra_config]
    provider = "googleapis.com"
    description = "Searches for books and manages your Google Books library."
    version = "v1"
    slug = "books-v1-books-v1-cloudloading-updatebook"
    schemes = ["https"]
    hosts = ["https://www.googleapis.com"]
    topics = ["media"]
    [backends.extra_config.mapping]
      author = "author"
      processingState = "processingState"
      title = "title"
      volumeId = "volumeId"

[[backends]]
  group = "books-v1"
  url_pattern = "/books/v1/dictionary/listOfflineMetadata"
  method = "GET"
  host = ["https://www.googleapis.com"]
  whitelist = ["items", "items.download_url", "items.encrypted_key", "items.language", "items.size", "items.version", "kind"]
  concurrent_calls = 1
  [backends.extra_config]
    provider = "googleapis.com"
    description = "Searches for books and manages your Google Books library."
    version = "v1"
    slug = "books-v1-books-v1-dictionary-listofflinemetadata"
    schemes = ["https"]
    hosts = ["https://www.googleapis.com"]
    topics = ["media"]
    [backends.extra_config.mapping]
      download_url = "download_url"
      encrypted_key = "encrypted_key"
      items = "items"
      kind = "kind"
      language = "language"
      size = "size"
      version = "version"

[[backends]]
  group = "books-v1"
  url_pattern = "/books/v1/myconfig/getUserSettings"
  method = "GET"
  host = ["https://www.googleapis.com"]
  whitelist = ["kind", "notesExport", "notesExport.folderName", "notesExport.isEnabled", "notification", "notification.moreFromAuthors", "notification.moreFromAuthors.opted_state", "notification.moreFromSeries", "notification.moreFromSeries.opted_state", "notification.rewardExpirations", "notification.rewardExpirations.opted_state"]
  concurrent_calls = 1
  [backends.extra_config]
    provider = "googleapis.com"
    description = "Searches for books and manages your Google Books library."
    version = "v1"
    slug = "books-v1-books-v1-myconfig-getusersettings"
    schemes = ["https"]
    hosts = ["https://www.googleapis.com"]
    topics = ["media"]
    [backends.extra_config.mapping]
      folderName = "folderName"
      isEnabled = "isEnabled"
      kind = "kind"
      moreFromAuthors = "moreFromAuthors"
      moreFromSeries = "moreFromSeries"
      notesExport = "notesExport"
      notification = "notification"
      opted_state = "opted_state"
      rewardExpirations = "rewardExpirations"

[[backends]]
  group = "books-v1"
  url_pattern = "/books/v1/myconfig/releaseDownloadAccess"
  method = "POST"
  host = ["https://www.googleapis.com"]
  whitelist = ["downloadAccessList", "kind"]
  concurrent_calls = 1
  [backends.extra_config]
    provider = "googleapis.com"
    description = "Searches for books and manages your Google Books library."
    version = "v1"
    slug = "books-v1-books-v1-myconfig-releasedownloadaccess"
    schemes = ["https"]
    hosts = ["https://www.googleapis.com"]
    topics = ["media"]
    [backends.extra_config.mapping]
      downloadAccessList = "downloadAccessList"
      kind = "kind"

[[backends]]
  group = "books-v1"
  url_pattern = "/books/v1/myconfig/requestAccess"
  method = "POST"
  host = ["https://www.googleapis.com"]
  whitelist = ["kind"]
  concurrent_calls = 1
  [backends.extra_config]
    provider = "googleapis.com"
    description = "Searches for books and manages your Google Books library."
    version = "v1"
    slug = "books-v1-books-v1-myconfig-requestaccess"
    schemes = ["https"]
    hosts = ["https://www.googleapis.com"]
    topics = ["media"]
    [backends.extra_config.mapping]
      kind = "kind"

[[backends]]
  group = "books-v1"
  url_pattern = "/books/v1/myconfig/syncVolumeLicenses"
  method = "POST"
  host = ["https://www.googleapis.com"]
  whitelist = ["items", "kind", "totalItems"]
  concurrent_calls = 1
  [backends.extra_config]
    provider = "googleapis.com"
    description = "Searches for books and manages your Google Books library."
    version = "v1"
    slug = "books-v1-books-v1-myconfig-syncvolumelicenses"
    schemes = ["https"]
    hosts = ["https://www.googleapis.com"]
    topics = ["media"]
    [backends.extra_config.mapping]
      items = "items"
      kind = "kind"
      totalItems = "totalItems"

[[backends]]
  group = "books-v1"
  url_pattern = "/books/v1/myconfig/updateUserSettings"
  method = "POST"
  host = ["https://www.googleapis.com"]
  whitelist = ["kind", "notesExport", "notesExport.folderName", "notesExport.isEnabled", "notification", "notification.moreFromAuthors", "notification.moreFromAuthors.opted_state", "notification.moreFromSeries", "notification.moreFromSeries.opted_state", "notification.rewardExpirations", "notification.rewardExpirations.opted_state"]
  concurrent_calls = 1
  [backends.extra_config]
    provider = "googleapis.com"
    description = "Searches for books and manages your Google Books library."
    version = "v1"
    slug = "books-v1-books-v1-myconfig-updateusersettings"
    schemes = ["https"]
    hosts = ["https://www.googleapis.com"]
    topics = ["media"]
    [backends.extra_config.mapping]
      folderName = "folderName"
      isEnabled = "isEnabled"
      kind = "kind"
      moreFromAuthors = "moreFromAuthors"
      moreFromSeries = "moreFromSeries"
      notesExport = "notesExport"
      notification = "notification"
      opted_state = "opted_state"
      rewardExpirations = "rewardExpirations"

[[backends]]
  group = "books-v1"
  url_pattern = "/books/v1/mylibrary/annotations"
  method = "GET"
  host = ["https://www.googleapis.com"]
  whitelist = ["items", "kind", "nextPageToken", "totalItems"]
  concurrent_calls = 1
  [backends.extra_config]
    provider = "googleapis.com"
    description = "Searches for books and manages your Google Books library."
    version = "v1"
    slug = "books-v1-books-v1-mylibrary-annotations"
    schemes = ["https"]
    hosts = ["https://www.googleapis.com"]
    topics = ["media"]
    [backends.extra_config.mapping]
      items = "items"
      kind = "kind"
      nextPageToken = "nextPageToken"
      totalItems = "totalItems"

[[backends]]
  group = "books-v1"
  url_pattern = "/books/v1/mylibrary/annotations/summary"
  method = "POST"
  host = ["https://www.googleapis.com"]
  whitelist = ["kind", "layers", "layers.allowedCharacterCount", "layers.layerId", "layers.limitType", "layers.remainingCharacterCount", "layers.updated"]
  concurrent_calls = 1
  [backends.extra_config]
    provider = "googleapis.com"
    description = "Searches for books and manages your Google Books library."
    version = "v1"
    slug = "books-v1-books-v1-mylibrary-annotations-summary"
    schemes = ["https"]
    hosts = ["https://www.googleapis.com"]
    topics = ["media"]
    [backends.extra_config.mapping]
      allowedCharacterCount = "allowedCharacterCount"
      kind = "kind"
      layerId = "layerId"
      layers = "layers"
      limitType = "limitType"
      remainingCharacterCount = "remainingCharacterCount"
      updated = "updated"

[[backends]]
  group = "books-v1"
  url_pattern = "/books/v1/mylibrary/bookshelves"
  method = "GET"
  host = ["https://www.googleapis.com"]
  whitelist = ["items", "kind"]
  concurrent_calls = 1
  [backends.extra_config]
    provider = "googleapis.com"
    description = "Searches for books and manages your Google Books library."
    version = "v1"
    slug = "books-v1-books-v1-mylibrary-bookshelves"
    schemes = ["https"]
    hosts = ["https://www.googleapis.com"]
    topics = ["media"]
    [backends.extra_config.mapping]
      items = "items"
      kind = "kind"

[[backends]]
  group = "books-v1"
  url_pattern = "/books/v1/mylibrary/bookshelves/{shelf}"
  method = "GET"
  host = ["https://www.googleapis.com"]
  whitelist = ["access", "created", "description", "id", "kind", "selfLink", "title", "updated", "volumeCount", "volumesLastUpdated"]
  concurrent_calls = 1
  [backends.extra_config]
    provider = "googleapis.com"
    description = "Searches for books and manages your Google Books library."
    version = "v1"
    slug = "books-v1-books-v1-mylibrary-bookshelves-shelf"
    schemes = ["https"]
    hosts = ["https://www.googleapis.com"]
    topics = ["media"]
    [backends.extra_config.mapping]
      access = "access"
      created = "created"
      description = "description"
      id = "id"
      kind = "kind"
      selfLink = "selfLink"
      title = "title"
      updated = "updated"
      volumeCount = "volumeCount"
      volumesLastUpdated = "volumesLastUpdated"

[[backends]]
  group = "books-v1"
  url_pattern = "/books/v1/mylibrary/bookshelves/{shelf}/addVolume"
  method = "POST"
  host = ["https://www.googleapis.com"]
  concurrent_calls = 1
  [backends.extra_config]
    provider = "googleapis.com"
    description = "Searches for books and manages your Google Books library."
    version = "v1"
    slug = "books-v1-books-v1-mylibrary-bookshelves-shelf-addvolume"
    schemes = ["https"]
    hosts = ["https://www.googleapis.com"]
    topics = ["media"]

[[backends]]
  group = "books-v1"
  url_pattern = "/books/v1/mylibrary/bookshelves/{shelf}/clearVolumes"
  method = "POST"
  host = ["https://www.googleapis.com"]
  concurrent_calls = 1
  [backends.extra_config]
    provider = "googleapis.com"
    description = "Searches for books and manages your Google Books library."
    version = "v1"
    slug = "books-v1-books-v1-mylibrary-bookshelves-shelf-clearvolumes"
    schemes = ["https"]
    hosts = ["https://www.googleapis.com"]
    topics = ["media"]

[[backends]]
  group = "books-v1"
  url_pattern = "/books/v1/mylibrary/bookshelves/{shelf}/moveVolume"
  method = "POST"
  host = ["https://www.googleapis.com"]
  concurrent_calls = 1
  [backends.extra_config]
    provider = "googleapis.com"
    description = "Searches for books and manages your Google Books library."
    version = "v1"
    slug = "books-v1-books-v1-mylibrary-bookshelves-shelf-movevolume"
    schemes = ["https"]
    hosts = ["https://www.googleapis.com"]
    topics = ["media"]

[[backends]]
  group = "books-v1"
  url_pattern = "/books/v1/mylibrary/bookshelves/{shelf}/removeVolume"
  method = "POST"
  host = ["https://www.googleapis.com"]
  concurrent_calls = 1
  [backends.extra_config]
    provider = "googleapis.com"
    description = "Searches for books and manages your Google Books library."
    version = "v1"
    slug = "books-v1-books-v1-mylibrary-bookshelves-shelf-removevolume"
    schemes = ["https"]
    hosts = ["https://www.googleapis.com"]
    topics = ["media"]

[[backends]]
  group = "books-v1"
  url_pattern = "/books/v1/mylibrary/bookshelves/{shelf}/volumes"
  method = "GET"
  host = ["https://www.googleapis.com"]
  whitelist = ["items", "kind", "totalItems"]
  concurrent_calls = 1
  [backends.extra_config]
    provider = "googleapis.com"
    description = "Searches for books and manages your Google Books library."
    version = "v1"
    slug = "books-v1-books-v1-mylibrary-bookshelves-shelf-volumes"
    schemes = ["https"]
    hosts = ["https://www.googleapis.com"]
    topics = ["media"]
    [backends.extra_config.mapping]
      items = "items"
      kind = "kind"
      totalItems = "totalItems"

[[backends]]
  group = "books-v1"
  url_pattern = "/books/v1/mylibrary/readingpositions/{volumeId}"
  method = "GET"
  host = ["https://www.googleapis.com"]
  whitelist = ["epubCfiPosition", "gbImagePosition", "gbTextPosition", "kind", "pdfPosition", "updated", "volumeId"]
  concurrent_calls = 1
  [backends.extra_config]
    provider = "googleapis.com"
    description = "Searches for books and manages your Google Books library."
    version = "v1"
    slug = "books-v1-books-v1-mylibrary-readingpositions-volumeid"
    schemes = ["https"]
    hosts = ["https://www.googleapis.com"]
    topics = ["media"]
    [backends.extra_config.mapping]
      epubCfiPosition = "epubCfiPosition"
      gbImagePosition = "gbImagePosition"
      gbTextPosition = "gbTextPosition"
      kind = "kind"
      pdfPosition = "pdfPosition"
      updated = "updated"
      volumeId = "volumeId"

[[backends]]
  group = "books-v1"
  url_pattern = "/books/v1/mylibrary/readingpositions/{volumeId}/setPosition"
  method = "POST"
  host = ["https://www.googleapis.com"]
  concurrent_calls = 1
  [backends.extra_config]
    provider = "googleapis.com"
    description = "Searches for books and manages your Google Books library."
    version = "v1"
    slug = "books-v1-books-v1-mylibrary-readingpositions-volumeid-setposition"
    schemes = ["https"]
    hosts = ["https://www.googleapis.com"]
    topics = ["media"]

[[backends]]
  group = "books-v1"
  url_pattern = "/books/v1/notification/get"
  method = "GET"
  host = ["https://www.googleapis.com"]
  whitelist = ["body", "crmExperimentIds", "doc_id", "doc_type", "dont_show_notification", "iconUrl", "kind", "notificationGroup", "notification_type", "pcampaign_id", "reason", "show_notification_settings_action", "targetUrl", "title"]
  concurrent_calls = 1
  [backends.extra_config]
    provider = "googleapis.com"
    description = "Searches for books and manages your Google Books library."
    version = "v1"
    slug = "books-v1-books-v1-notification-get"
    schemes = ["https"]
    hosts = ["https://www.googleapis.com"]
    topics = ["media"]
    [backends.extra_config.mapping]
      body = "body"
      crmExperimentIds = "crmExperimentIds"
      doc_id = "doc_id"
      doc_type = "doc_type"
      dont_show_notification = "dont_show_notification"
      iconUrl = "iconUrl"
      kind = "kind"
      notificationGroup = "notificationGroup"
      notification_type = "notification_type"
      pcampaign_id = "pcampaign_id"
      reason = "reason"
      show_notification_settings_action = "show_notification_settings_action"
      targetUrl = "targetUrl"
      title = "title"

[[backends]]
  group = "books-v1"
  url_pattern = "/books/v1/onboarding/listCategories"
  method = "GET"
  host = ["https://www.googleapis.com"]
  whitelist = ["items", "items.badgeUrl", "items.categoryId", "items.name", "kind"]
  concurrent_calls = 1
  [backends.extra_config]
    provider = "googleapis.com"
    description = "Searches for books and manages your Google Books library."
    version = "v1"
    slug = "books-v1-books-v1-onboarding-listcategories"
    schemes = ["https"]
    hosts = ["https://www.googleapis.com"]
    topics = ["media"]
    [backends.extra_config.mapping]
      badgeUrl = "badgeUrl"
      categoryId = "categoryId"
      items = "items"
      kind = "kind"
      name = "name"

[[backends]]
  group = "books-v1"
  url_pattern = "/books/v1/onboarding/listCategoryVolumes"
  method = "GET"
  host = ["https://www.googleapis.com"]
  whitelist = ["items", "kind", "nextPageToken"]
  concurrent_calls = 1
  [backends.extra_config]
    provider = "googleapis.com"
    description = "Searches for books and manages your Google Books library."
    version = "v1"
    slug = "books-v1-books-v1-onboarding-listcategoryvolumes"
    schemes = ["https"]
    hosts = ["https://www.googleapis.com"]
    topics = ["media"]
    [backends.extra_config.mapping]
      items = "items"
      kind = "kind"
      nextPageToken = "nextPageToken"

[[backends]]
  group = "books-v1"
  url_pattern = "/books/v1/personalizedstream/get"
  method = "GET"
  host = ["https://www.googleapis.com"]
  whitelist = ["clusters", "clusters.banner_with_content_container", "clusters.banner_with_content_container.fillColorArgb", "clusters.banner_with_content_container.imageUrl", "clusters.banner_with_content_container.maskColorArgb", "clusters.banner_with_content_container.moreButtonText", "clusters.banner_with_content_container.moreButtonUrl", "clusters.banner_with_content_container.textColorArgb", "clusters.subTitle", "clusters.title", "clusters.totalVolumes", "clusters.uid", "clusters.volumes", "kind", "totalClusters"]
  concurrent_calls = 1
  [backends.extra_config]
    provider = "googleapis.com"
    description = "Searches for books and manages your Google Books library."
    version = "v1"
    slug = "books-v1-books-v1-personalizedstream-get"
    schemes = ["https"]
    hosts = ["https://www.googleapis.com"]
    topics = ["media"]
    [backends.extra_config.mapping]
      banner_with_content_container = "banner_with_content_container"
      clusters = "clusters"
      fillColorArgb = "fillColorArgb"
      imageUrl = "imageUrl"
      kind = "kind"
      maskColorArgb = "maskColorArgb"
      moreButtonText = "moreButtonText"
      moreButtonUrl = "moreButtonUrl"
      subTitle = "subTitle"
      textColorArgb = "textColorArgb"
      title = "title"
      totalClusters = "totalClusters"
      totalVolumes = "totalVolumes"
      uid = "uid"
      volumes = "volumes"

[[backends]]
  group = "books-v1"
  url_pattern = "/books/v1/promooffer/accept"
  method = "POST"
  host = ["https://www.googleapis.com"]
  concurrent_calls = 1
  [backends.extra_config]
    provider = "googleapis.com"
    description = "Searches for books and manages your Google Books library."
    version = "v1"
    slug = "books-v1-books-v1-promooffer-accept"
    schemes = ["https"]
    hosts = ["https://www.googleapis.com"]
    topics = ["media"]

[[backends]]
  group = "books-v1"
  url_pattern = "/books/v1/promooffer/dismiss"
  method = "POST"
  host = ["https://www.googleapis.com"]
  concurrent_calls = 1
  [backends.extra_config]
    provider = "googleapis.com"
    description = "Searches for books and manages your Google Books library."
    version = "v1"
    slug = "books-v1-books-v1-promooffer-dismiss"
    schemes = ["https"]
    hosts = ["https://www.googleapis.com"]
    topics = ["media"]

[[backends]]
  group = "books-v1"
  url_pattern = "/books/v1/promooffer/get"
  method = "GET"
  host = ["https://www.googleapis.com"]
  whitelist = ["items", "items.artUrl", "items.gservicesKey", "items.id", "items.items", "items.items.items", "items.items.items.author", "items.items.items.canonicalVolumeLink", "items.items.items.coverUrl", "items.items.items.description", "items.items.items.title", "items.items.items.volumeId", "kind"]
  concurrent_calls = 1
  [backends.extra_config]
    provider = "googleapis.com"
    description = "Searches for books and manages your Google Books library."
    version = "v1"
    slug = "books-v1-books-v1-promooffer-get"
    schemes = ["https"]
    hosts = ["https://www.googleapis.com"]
    topics = ["media"]
    [backends.extra_config.mapping]
      artUrl = "artUrl"
      author = "author"
      canonicalVolumeLink = "canonicalVolumeLink"
      coverUrl = "coverUrl"
      description = "description"
      gservicesKey = "gservicesKey"
      id = "id"
      items = "items"
      kind = "kind"
      title = "title"
      volumeId = "volumeId"

[[backends]]
  group = "books-v1"
  url_pattern = "/books/v1/series/get"
  method = "GET"
  host = ["https://www.googleapis.com"]
  whitelist = ["kind", "series", "series.bannerImageUrl", "series.imageUrl", "series.seriesId", "series.seriesType", "series.title"]
  concurrent_calls = 1
  [backends.extra_config]
    provider = "googleapis.com"
    description = "Searches for books and manages your Google Books library."
    version = "v1"
    slug = "books-v1-books-v1-series-get"
    schemes = ["https"]
    hosts = ["https://www.googleapis.com"]
    topics = ["media"]
    [backends.extra_config.mapping]
      bannerImageUrl = "bannerImageUrl"
      imageUrl = "imageUrl"
      kind = "kind"
      series = "series"
      seriesId = "seriesId"
      seriesType = "seriesType"
      title = "title"

[[backends]]
  group = "books-v1"
  url_pattern = "/books/v1/series/membership/get"
  method = "GET"
  host = ["https://www.googleapis.com"]
  whitelist = ["kind", "member", "nextPageToken"]
  concurrent_calls = 1
  [backends.extra_config]
    provider = "googleapis.com"
    description = "Searches for books and manages your Google Books library."
    version = "v1"
    slug = "books-v1-books-v1-series-membership-get"
    schemes = ["https"]
    hosts = ["https://www.googleapis.com"]
    topics = ["media"]
    [backends.extra_config.mapping]
      kind = "kind"
      member = "member"
      nextPageToken = "nextPageToken"

[[backends]]
  group = "books-v1"
  url_pattern = "/books/v1/users/{userId}/bookshelves"
  method = "GET"
  host = ["https://www.googleapis.com"]
  whitelist = ["items", "kind"]
  concurrent_calls = 1
  [backends.extra_config]
    provider = "googleapis.com"
    description = "Searches for books and manages your Google Books library."
    version = "v1"
    slug = "books-v1-books-v1-users-userid-bookshelves"
    schemes = ["https"]
    hosts = ["https://www.googleapis.com"]
    topics = ["media"]
    [backends.extra_config.mapping]
      items = "items"
      kind = "kind"

[[backends]]
  group = "books-v1"
  url_pattern = "/books/v1/users/{userId}/bookshelves/{shelf}"
  method = "GET"
  host = ["https://www.googleapis.com"]
  whitelist = ["access", "created", "description", "id", "kind", "selfLink", "title", "updated", "volumeCount", "volumesLastUpdated"]
  concurrent_calls = 1
  [backends.extra_config]
    provider = "googleapis.com"
    description = "Searches for books and manages your Google Books library."
    version = "v1"
    slug = "books-v1-books-v1-users-userid-bookshelves-shelf"
    schemes = ["https"]
    hosts = ["https://www.googleapis.com"]
    topics = ["media"]
    [backends.extra_config.mapping]
      access = "access"
      created = "created"
      description = "description"
      id = "id"
      kind = "kind"
      selfLink = "selfLink"
      title = "title"
      updated = "updated"
      volumeCount = "volumeCount"
      volumesLastUpdated = "volumesLastUpdated"

[[backends]]
  group = "books-v1"
  url_pattern = "/books/v1/users/{userId}/bookshelves/{shelf}/volumes"
  method = "GET"
  host = ["https://www.googleapis.com"]
  whitelist = ["items", "kind", "totalItems"]
  concurrent_calls = 1
  [backends.extra_config]
    provider = "googleapis.com"
    description = "Searches for books and manages your Google Books library."
    version = "v1"
    slug = "books-v1-books-v1-users-userid-bookshelves-shelf-volumes"
    schemes = ["https"]
    hosts = ["https://www.googleapis.com"]
    topics = ["media"]
    [backends.extra_config.mapping]
      items = "items"
      kind = "kind"
      totalItems = "totalItems"

[[backends]]
  group = "books-v1"
  url_pattern = "/books/v1/volumes"
  method = "GET"
  host = ["https://www.googleapis.com"]
  whitelist = ["items", "kind", "totalItems"]
  concurrent_calls = 1
  [backends.extra_config]
    provider = "googleapis.com"
    description = "Searches for books and manages your Google Books library."
    version = "v1"
    slug = "books-v1-books-v1-volumes"
    schemes = ["https"]
    hosts = ["https://www.googleapis.com"]
    topics = ["media"]
    [backends.extra_config.mapping]
      items = "items"
      kind = "kind"
      totalItems = "totalItems"

[[backends]]
  group = "books-v1"
  url_pattern = "/books/v1/volumes/mybooks"
  method = "GET"
  host = ["https://www.googleapis.com"]
  whitelist = ["items", "kind", "totalItems"]
  concurrent_calls = 1
  [backends.extra_config]
    provider = "googleapis.com"
    description = "Searches for books and manages your Google Books library."
    version = "v1"
    slug = "books-v1-books-v1-volumes-mybooks"
    schemes = ["https"]
    hosts = ["https://www.googleapis.com"]
    topics = ["media"]
    [backends.extra_config.mapping]
      items = "items"
      kind = "kind"
      totalItems = "totalItems"

[[backends]]
  group = "books-v1"
  url_pattern = "/books/v1/volumes/recommended"
  method = "GET"
  host = ["https://www.googleapis.com"]
  whitelist = ["items", "kind", "totalItems"]
  concurrent_calls = 1
  [backends.extra_config]
    provider = "googleapis.com"
    description = "Searches for books and manages your Google Books library."
    version = "v1"
    slug = "books-v1-books-v1-volumes-recommended"
    schemes = ["https"]
    hosts = ["https://www.googleapis.com"]
    topics = ["media"]
    [backends.extra_config.mapping]
      items = "items"
      kind = "kind"
      totalItems = "totalItems"

[[backends]]
  group = "books-v1"
  url_pattern = "/books/v1/volumes/recommended/rate"
  method = "POST"
  host = ["https://www.googleapis.com"]
  whitelist = ["consistency_token"]
  concurrent_calls = 1
  [backends.extra_config]
    provider = "googleapis.com"
    description = "Searches for books and manages your Google Books library."
    version = "v1"
    slug = "books-v1-books-v1-volumes-recommended-rate"
    schemes = ["https"]
    hosts = ["https://www.googleapis.com"]
    topics = ["media"]
    [backends.extra_config.mapping]
      consistency_token = "consistency_token"

[[backends]]
  group = "books-v1"
  url_pattern = "/books/v1/volumes/useruploaded"
  method = "GET"
  host = ["https://www.googleapis.com"]
  whitelist = ["items", "kind", "totalItems"]
  concurrent_calls = 1
  [backends.extra_config]
    provider = "googleapis.com"
    description = "Searches for books and manages your Google Books library."
    version = "v1"
    slug = "books-v1-books-v1-volumes-useruploaded"
    schemes = ["https"]
    hosts = ["https://www.googleapis.com"]
    topics = ["media"]
    [backends.extra_config.mapping]
      items = "items"
      kind = "kind"
      totalItems = "totalItems"

[[backends]]
  group = "books-v1"
  url_pattern = "/books/v1/volumes/{volumeId}"
  method = "GET"
  host = ["https://www.googleapis.com"]
  whitelist = ["accessInfo", "accessInfo.accessViewStatus", "accessInfo.country", "accessInfo.driveImportedContentLink", "accessInfo.embeddable", "accessInfo.epub", "accessInfo.epub.acsTokenLink", "accessInfo.epub.downloadLink", "accessInfo.epub.isAvailable", "accessInfo.explicitOfflineLicenseManagement", "accessInfo.pdf", "accessInfo.pdf.acsTokenLink", "accessInfo.pdf.downloadLink", "accessInfo.pdf.isAvailable", "accessInfo.publicDomain", "accessInfo.quoteSharingAllowed", "accessInfo.textToSpeechPermission", "accessInfo.viewOrderUrl", "accessInfo.viewability", "accessInfo.webReaderLink", "etag", "id", "kind", "layerInfo", "layerInfo.layers", "layerInfo.layers.items", "layerInfo.layers.items.layerId", "layerInfo.layers.items.volumeAnnotationsVersion", "recommendedInfo", "recommendedInfo.explanation", "saleInfo", "saleInfo.buyLink", "saleInfo.country", "saleInfo.isEbook", "saleInfo.listPrice", "saleInfo.listPrice.amount", "saleInfo.listPrice.currencyCode", "saleInfo.offers", "saleInfo.offers.items", "saleInfo.offers.items.finskyOfferType", "saleInfo.offers.items.giftable", "saleInfo.offers.items.listPrice", "saleInfo.offers.items.listPrice.amountInMicros", "saleInfo.offers.items.listPrice.currencyCode", "saleInfo.offers.items.rentalDuration", "saleInfo.offers.items.rentalDuration.count", "saleInfo.offers.items.rentalDuration.unit", "saleInfo.offers.items.retailPrice", "saleInfo.offers.items.retailPrice.amountInMicros", "saleInfo.offers.items.retailPrice.currencyCode", "saleInfo.onSaleDate", "saleInfo.retailPrice", "saleInfo.retailPrice.amount", "saleInfo.retailPrice.currencyCode", "saleInfo.saleability", "searchInfo", "searchInfo.textSnippet", "selfLink", "userInfo", "userInfo.acquiredTime", "userInfo.acquisitionType", "userInfo.copy", "userInfo.copy.allowedCharacterCount", "userInfo.copy.limitType", "userInfo.copy.remainingCharacterCount", "userInfo.copy.updated", "userInfo.entitlementType", "userInfo.familySharing", "userInfo.familySharing.familyRole", "userInfo.familySharing.isSharingAllowed", "userInfo.familySharing.isSharingDisabledByFop", "userInfo.isFamilySharedFromUser", "userInfo.isFamilySharedToUser", "userInfo.isFamilySharingAllowed", "userInfo.isFamilySharingDisabledByFop", "userInfo.isInMyBooks", "userInfo.isPreordered", "userInfo.isPurchased", "userInfo.isUploaded", "userInfo.rentalPeriod", "userInfo.rentalPeriod.endUtcSec", "userInfo.rentalPeriod.startUtcSec", "userInfo.rentalState", "userInfo.updated", "userInfo.userUploadedVolumeInfo", "userInfo.userUploadedVolumeInfo.processingState", "volumeInfo", "volumeInfo.allowAnonLogging", "volumeInfo.authors", "volumeInfo.authors.items", "volumeInfo.averageRating", "volumeInfo.canonicalVolumeLink", "volumeInfo.categories", "volumeInfo.categories.items", "volumeInfo.contentVersion", "volumeInfo.description", "volumeInfo.dimensions", "volumeInfo.dimensions.height", "volumeInfo.dimensions.thickness", "volumeInfo.dimensions.width", "volumeInfo.imageLinks", "volumeInfo.imageLinks.extraLarge", "volumeInfo.imageLinks.large", "volumeInfo.imageLinks.medium", "volumeInfo.imageLinks.small", "volumeInfo.imageLinks.smallThumbnail", "volumeInfo.imageLinks.thumbnail", "volumeInfo.industryIdentifiers", "volumeInfo.industryIdentifiers.items", "volumeInfo.industryIdentifiers.items.identifier", "volumeInfo.infoLink", "volumeInfo.language", "volumeInfo.mainCategory", "volumeInfo.maturityRating", "volumeInfo.pageCount", "volumeInfo.panelizationSummary", "volumeInfo.panelizationSummary.containsEpubBubbles", "volumeInfo.panelizationSummary.containsImageBubbles", "volumeInfo.panelizationSummary.epubBubbleVersion", "volumeInfo.panelizationSummary.imageBubbleVersion", "volumeInfo.previewLink", "volumeInfo.printType", "volumeInfo.printedPageCount", "volumeInfo.publishedDate", "volumeInfo.publisher", "volumeInfo.ratingsCount", "volumeInfo.samplePageCount", "volumeInfo.subtitle", "volumeInfo.title"]
  concurrent_calls = 1
  [backends.extra_config]
    provider = "googleapis.com"
    description = "Searches for books and manages your Google Books library."
    version = "v1"
    slug = "books-v1-books-v1-volumes-volumeid"
    schemes = ["https"]
    hosts = ["https://www.googleapis.com"]
    topics = ["media"]
    [backends.extra_config.mapping]
      accessInfo = "accessInfo"
      accessViewStatus = "accessViewStatus"
      acquiredTime = "acquiredTime"
      acquisitionType = "acquisitionType"
      acsTokenLink = "acsTokenLink"
      allowAnonLogging = "allowAnonLogging"
      allowedCharacterCount = "allowedCharacterCount"
      amount = "amount"
      amountInMicros = "amountInMicros"
      authors = "authors"
      averageRating = "averageRating"
      buyLink = "buyLink"
      canonicalVolumeLink = "canonicalVolumeLink"
      categories = "categories"
      containsEpubBubbles = "containsEpubBubbles"
      containsImageBubbles = "containsImageBubbles"
      contentVersion = "contentVersion"
      copy = "copy"
      count = "count"
      country = "country"
      currencyCode = "currencyCode"
      description = "description"
      dimensions = "dimensions"
      downloadLink = "downloadLink"
      driveImportedContentLink = "driveImportedContentLink"
      embeddable = "embeddable"
      endUtcSec = "endUtcSec"
      entitlementType = "entitlementType"
      epub = "epub"
      epubBubbleVersion = "epubBubbleVersion"
      etag = "etag"
      explanation = "explanation"
      explicitOfflineLicenseManagement = "explicitOfflineLicenseManagement"
      extraLarge = "extraLarge"
      familyRole = "familyRole"
      familySharing = "familySharing"
      finskyOfferType = "finskyOfferType"
      giftable = "giftable"
      height = "height"
      id = "id"
      identifier = "identifier"
      imageBubbleVersion = "imageBubbleVersion"
      imageLinks = "imageLinks"
      industryIdentifiers = "industryIdentifiers"
      infoLink = "infoLink"
      isAvailable = "isAvailable"
      isEbook = "isEbook"
      isFamilySharedFromUser = "isFamilySharedFromUser"
      isFamilySharedToUser = "isFamilySharedToUser"
      isFamilySharingAllowed = "isFamilySharingAllowed"
      isFamilySharingDisabledByFop = "isFamilySharingDisabledByFop"
      isInMyBooks = "isInMyBooks"
      isPreordered = "isPreordered"
      isPurchased = "isPurchased"
      isSharingAllowed = "isSharingAllowed"
      isSharingDisabledByFop = "isSharingDisabledByFop"
      isUploaded = "isUploaded"
      items = "items"
      kind = "kind"
      language = "language"
      large = "large"
      layerId = "layerId"
      layerInfo = "layerInfo"
      layers = "layers"
      limitType = "limitType"
      listPrice = "listPrice"
      mainCategory = "mainCategory"
      maturityRating = "maturityRating"
      medium = "medium"
      offers = "offers"
      onSaleDate = "onSaleDate"
      pageCount = "pageCount"
      panelizationSummary = "panelizationSummary"
      pdf = "pdf"
      previewLink = "previewLink"
      printType = "printType"
      printedPageCount = "printedPageCount"
      processingState = "processingState"
      publicDomain = "publicDomain"
      publishedDate = "publishedDate"
      publisher = "publisher"
      quoteSharingAllowed = "quoteSharingAllowed"
      ratingsCount = "ratingsCount"
      recommendedInfo = "recommendedInfo"
      remainingCharacterCount = "remainingCharacterCount"
      rentalDuration = "rentalDuration"
      rentalPeriod = "rentalPeriod"
      rentalState = "rentalState"
      retailPrice = "retailPrice"
      saleInfo = "saleInfo"
      saleability = "saleability"
      samplePageCount = "samplePageCount"
      searchInfo = "searchInfo"
      selfLink = "selfLink"
      small = "small"
      smallThumbnail = "smallThumbnail"
      startUtcSec = "startUtcSec"
      subtitle = "subtitle"
      textSnippet = "textSnippet"
      textToSpeechPermission = "textToSpeechPermission"
      thickness = "thickness"
      thumbnail = "thumbnail"
      title = "title"
      unit = "unit"
      updated = "updated"
      userInfo = "userInfo"
      userUploadedVolumeInfo = "userUploadedVolumeInfo"
      viewOrderUrl = "viewOrderUrl"
      viewability = "viewability"
      volumeAnnotationsVersion = "volumeAnnotationsVersion"
      volumeInfo = "volumeInfo"
      webReaderLink = "webReaderLink"
      width = "width"

[[backends]]
  group = "books-v1"
  url_pattern = "/books/v1/volumes/{volumeId}/associated"
  method = "GET"
  host = ["https://www.googleapis.com"]
  whitelist = ["items", "kind", "totalItems"]
  concurrent_calls = 1
  [backends.extra_config]
    provider = "googleapis.com"
    description = "Searches for books and manages your Google Books library."
    version = "v1"
    slug = "books-v1-books-v1-volumes-volumeid-associated"
    schemes = ["https"]
    hosts = ["https://www.googleapis.com"]
    topics = ["media"]
    [backends.extra_config.mapping]
      items = "items"
      kind = "kind"
      totalItems = "totalItems"

[[backends]]
  group = "books-v1"
  url_pattern = "/books/v1/volumes/{volumeId}/layers/{layerId}"
  method = "GET"
  host = ["https://www.googleapis.com"]
  whitelist = ["items", "kind", "nextPageToken", "totalItems", "version"]
  concurrent_calls = 1
  [backends.extra_config]
    provider = "googleapis.com"
    description = "Searches for books and manages your Google Books library."
    version = "v1"
    slug = "books-v1-books-v1-volumes-volumeid-layers-layerid"
    schemes = ["https"]
    hosts = ["https://www.googleapis.com"]
    topics = ["media"]
    [backends.extra_config.mapping]
      items = "items"
      kind = "kind"
      nextPageToken = "nextPageToken"
      totalItems = "totalItems"
      version = "version"

[[backends]]
  group = "books-v1"
  url_pattern = "/books/v1/volumes/{volumeId}/layers/{layerId}/annotations/{annotationId}"
  method = "GET"
  host = ["https://www.googleapis.com"]
  whitelist = ["annotationDataId", "annotationDataLink", "annotationType", "contentRanges", "contentRanges.contentVersion", "data", "deleted", "id", "kind", "layerId", "pageIds", "selectedText", "selfLink", "updated", "volumeId"]
  concurrent_calls = 1
  [backends.extra_config]
    provider = "googleapis.com"
    description = "Searches for books and manages your Google Books library."
    version = "v1"
    slug = "books-v1-books-v1-volumes-volumeid-layers-layerid-annotations-annotationid"
    schemes = ["https"]
    hosts = ["https://www.googleapis.com"]
    topics = ["media"]
    [backends.extra_config.mapping]
      annotationDataId = "annotationDataId"
      annotationDataLink = "annotationDataLink"
      annotationType = "annotationType"
      contentRanges = "contentRanges"
      contentVersion = "contentVersion"
      data = "data"
      deleted = "deleted"
      id = "id"
      kind = "kind"
      layerId = "layerId"
      pageIds = "pageIds"
      selectedText = "selectedText"
      selfLink = "selfLink"
      updated = "updated"
      volumeId = "volumeId"

[[backends]]
  group = "books-v1"
  url_pattern = "/books/v1/volumes/{volumeId}/layers/{layerId}/data"
  method = "GET"
  host = ["https://www.googleapis.com"]
  whitelist = ["items", "kind", "nextPageToken", "totalItems"]
  concurrent_calls = 1
  [backends.extra_config]
    provider = "googleapis.com"
    description = "Searches for books and manages your Google Books library."
    version = "v1"
    slug = "books-v1-books-v1-volumes-volumeid-layers-layerid-data"
    schemes = ["https"]
    hosts = ["https://www.googleapis.com"]
    topics = ["media"]
    [backends.extra_config.mapping]
      items = "items"
      kind = "kind"
      nextPageToken = "nextPageToken"
      totalItems = "totalItems"

[[backends]]
  group = "books-v1"
  url_pattern = "/books/v1/volumes/{volumeId}/layers/{layerId}/data/{annotationDataId}"
  method = "GET"
  host = ["https://www.googleapis.com"]
  whitelist = ["annotationType", "encoded_data", "id", "kind", "layerId", "selfLink", "updated", "volumeId"]
  concurrent_calls = 1
  [backends.extra_config]
    provider = "googleapis.com"
    description = "Searches for books and manages your Google Books library."
    version = "v1"
    slug = "books-v1-books-v1-volumes-volumeid-layers-layerid-data-annotationdataid"
    schemes = ["https"]
    hosts = ["https://www.googleapis.com"]
    topics = ["media"]
    [backends.extra_config.mapping]
      annotationType = "annotationType"
      encoded_data = "encoded_data"
      id = "id"
      kind = "kind"
      layerId = "layerId"
      selfLink = "selfLink"
      updated = "updated"
      volumeId = "volumeId"

[[backends]]
  group = "books-v1"
  url_pattern = "/books/v1/volumes/{volumeId}/layersummary"
  method = "GET"
  host = ["https://www.googleapis.com"]
  whitelist = ["items", "kind", "totalItems"]
  concurrent_calls = 1
  [backends.extra_config]
    provider = "googleapis.com"
    description = "Searches for books and manages your Google Books library."
    version = "v1"
    slug = "books-v1-books-v1-volumes-volumeid-layersummary"
    schemes = ["https"]
    hosts = ["https://www.googleapis.com"]
    topics = ["media"]
    [backends.extra_config.mapping]
      items = "items"
      kind = "kind"
      totalItems = "totalItems"

[[backends]]
  group = "books-v1"
  url_pattern = "/books/v1/volumes/{volumeId}/layersummary/{summaryId}"
  method = "GET"
  host = ["https://www.googleapis.com"]
  whitelist = ["annotationCount", "annotationTypes", "annotationsDataLink", "annotationsLink", "contentVersion", "dataCount", "id", "kind", "layerId", "selfLink", "updated", "volumeAnnotationsVersion", "volumeId"]
  concurrent_calls = 1
  [backends.extra_config]
    provider = "googleapis.com"
    description = "Searches for books and manages your Google Books library."
    version = "v1"
    slug = "books-v1-books-v1-volumes-volumeid-layersummary-summaryid"
    schemes = ["https"]
    hosts = ["https://www.googleapis.com"]
    topics = ["media"]
    [backends.extra_config.mapping]
      annotationCount = "annotationCount"
      annotationTypes = "annotationTypes"
      annotationsDataLink = "annotationsDataLink"
      annotationsLink = "annotationsLink"
      contentVersion = "contentVersion"
      dataCount = "dataCount"
      id = "id"
      kind = "kind"
      layerId = "layerId"
      selfLink = "selfLink"
      updated = "updated"
      volumeAnnotationsVersion = "volumeAnnotationsVersion"
      volumeId = "volumeId"
