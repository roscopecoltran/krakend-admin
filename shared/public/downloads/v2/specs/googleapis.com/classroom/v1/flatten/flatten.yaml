basePath: /
definitions.Announcement.description: Announcement created by a teacher for students
  of the course
definitions.Announcement.properties.alternateLink.description: |-
  Absolute link to this announcement in the Classroom web UI.
  This is only populated if `state` is `PUBLISHED`.

  Read-only.
definitions.Announcement.properties.alternateLink.type: string
definitions.Announcement.properties.assigneeMode.description: |-
  Assignee mode of the announcement.
  If unspecified, the default value is `ALL_STUDENTS`.
definitions.Announcement.properties.assigneeMode.enum.length: 3
definitions.Announcement.properties.assigneeMode.enum[0]: ASSIGNEE_MODE_UNSPECIFIED
definitions.Announcement.properties.assigneeMode.enum[1]: ALL_STUDENTS
definitions.Announcement.properties.assigneeMode.enum[2]: INDIVIDUAL_STUDENTS
definitions.Announcement.properties.assigneeMode.type: string
definitions.Announcement.properties.courseId.description: |-
  Identifier of the course.

  Read-only.
definitions.Announcement.properties.courseId.type: string
definitions.Announcement.properties.creationTime.description: |-
  Timestamp when this announcement was created.

  Read-only.
definitions.Announcement.properties.creationTime.format: google-datetime
definitions.Announcement.properties.creationTime.type: string
definitions.Announcement.properties.creatorUserId.description: |-
  Identifier for the user that created the announcement.

  Read-only.
definitions.Announcement.properties.creatorUserId.type: string
definitions.Announcement.properties.id.description: |-
  Classroom-assigned identifier of this announcement, unique per course.

  Read-only.
definitions.Announcement.properties.id.type: string
definitions.Announcement.properties.individualStudentsOptions.$ref: '#/definitions/IndividualStudentsOptions'
definitions.Announcement.properties.individualStudentsOptions.description: |-
  Identifiers of students with access to the announcement.
  This field is set only if `assigneeMode` is `INDIVIDUAL_STUDENTS`.
  If the `assigneeMode` is `INDIVIDUAL_STUDENTS`, then only students specified in this
  field will be able to see the announcement.
definitions.Announcement.properties.materials.description: |-
  Additional materials.

  Announcements must have no more than 20 material items.
definitions.Announcement.properties.materials.items.$ref: '#/definitions/Material'
definitions.Announcement.properties.materials.type: array
definitions.Announcement.properties.scheduledTime.description: Optional timestamp
  when this announcement is scheduled to be published.
definitions.Announcement.properties.scheduledTime.format: google-datetime
definitions.Announcement.properties.scheduledTime.type: string
definitions.Announcement.properties.state.description: |-
  Status of this announcement.
  If unspecified, the default state is `DRAFT`.
definitions.Announcement.properties.state.enum.length: 4
definitions.Announcement.properties.state.enum[0]: ANNOUNCEMENT_STATE_UNSPECIFIED
definitions.Announcement.properties.state.enum[1]: PUBLISHED
definitions.Announcement.properties.state.enum[2]: DRAFT
definitions.Announcement.properties.state.enum[3]: DELETED
definitions.Announcement.properties.state.type: string
definitions.Announcement.properties.text.description: |-
  Description of this announcement.
  The text must be a valid UTF-8 string containing no more
  than 30,000 characters.
definitions.Announcement.properties.text.type: string
definitions.Announcement.properties.updateTime.description: |-
  Timestamp of the most recent change to this announcement.

  Read-only.
definitions.Announcement.properties.updateTime.format: google-datetime
definitions.Announcement.properties.updateTime.type: string
definitions.Announcement.type: object
definitions.Assignment.description: Additional details for assignments.
definitions.Assignment.properties.studentWorkFolder.$ref: '#/definitions/DriveFolder'
definitions.Assignment.properties.studentWorkFolder.description: |-
  Drive folder where attachments from student submissions are placed.
  This is only populated for course teachers and administrators.
definitions.Assignment.type: object
definitions.AssignmentSubmission.description: Student work for an assignment.
definitions.AssignmentSubmission.properties.attachments.description: |-
  Attachments added by the student.
  Drive files that correspond to materials with a share mode of
  STUDENT_COPY may not exist yet if the student has not accessed the
  assignment in Classroom.

  Some attachment metadata is only populated if the requesting user has
  permission to access it. Identifier and alternate_link fields are always
  available, but others (e.g. title) may not be.
definitions.AssignmentSubmission.properties.attachments.items.$ref: '#/definitions/Attachment'
definitions.AssignmentSubmission.properties.attachments.type: array
definitions.AssignmentSubmission.type: object
definitions.Attachment.description: |-
  Attachment added to student assignment work.

  When creating attachments, setting the `form` field is not supported.
definitions.Attachment.properties.driveFile.$ref: '#/definitions/DriveFile'
definitions.Attachment.properties.driveFile.description: Google Drive file attachment.
definitions.Attachment.properties.form.$ref: '#/definitions/Form'
definitions.Attachment.properties.form.description: Google Forms attachment.
definitions.Attachment.properties.link.$ref: '#/definitions/Link'
definitions.Attachment.properties.link.description: Link attachment.
definitions.Attachment.properties.youTubeVideo.$ref: '#/definitions/YouTubeVideo'
definitions.Attachment.properties.youTubeVideo.description: Youtube video attachment.
definitions.Attachment.type: object
definitions.CloudPubsubTopic.description: |-
  A reference to a Cloud Pub/Sub topic.

  To register for notifications, the owner of the topic must grant
  `classroom-notifications@system.gserviceaccount.com` the
   `projects.topics.publish` permission.
definitions.CloudPubsubTopic.properties.topicName.description: |-
  The `name` field of a Cloud Pub/Sub
  [Topic](https://cloud.google.com/pubsub/docs/reference/rest/v1/projects.topics#Topic).
definitions.CloudPubsubTopic.properties.topicName.type: string
definitions.CloudPubsubTopic.type: object
definitions.Course.description: A Course in Classroom.
definitions.Course.properties.alternateLink.description: |-
  Absolute link to this course in the Classroom web UI.

  Read-only.
definitions.Course.properties.alternateLink.type: string
definitions.Course.properties.calendarId.description: |-
  The Calendar ID for a calendar that all course members can see, to which
  Classroom adds events for course work and announcements in the course.

  Read-only.
definitions.Course.properties.calendarId.type: string
definitions.Course.properties.courseGroupEmail.description: |-
  The email address of a Google group containing all members of the course.
  This group does not accept email and can only be used for permissions.

  Read-only.
definitions.Course.properties.courseGroupEmail.type: string
definitions.Course.properties.courseMaterialSets.description: |-
  Sets of materials that appear on the "about" page of this course.

  Read-only.
definitions.Course.properties.courseMaterialSets.items.$ref: '#/definitions/CourseMaterialSet'
definitions.Course.properties.courseMaterialSets.type: array
definitions.Course.properties.courseState.description: |-
  State of the course.
  If unspecified, the default state is `PROVISIONED`.
definitions.Course.properties.courseState.enum.length: 6
definitions.Course.properties.courseState.enum[0]: COURSE_STATE_UNSPECIFIED
definitions.Course.properties.courseState.enum[1]: ACTIVE
definitions.Course.properties.courseState.enum[2]: ARCHIVED
definitions.Course.properties.courseState.enum[3]: PROVISIONED
definitions.Course.properties.courseState.enum[4]: DECLINED
definitions.Course.properties.courseState.enum[5]: SUSPENDED
definitions.Course.properties.courseState.type: string
definitions.Course.properties.creationTime.description: |-
  Creation time of the course.
  Specifying this field in a course update mask results in an error.

  Read-only.
definitions.Course.properties.creationTime.format: google-datetime
definitions.Course.properties.creationTime.type: string
definitions.Course.properties.description.description: |-
  Optional description.
  For example, "We'll be learning about the structure of living
  creatures from a combination of textbooks, guest lectures, and lab work.
  Expect to be excited!"
  If set, this field must be a valid UTF-8 string and no longer than 30,000
  characters.
definitions.Course.properties.description.type: string
definitions.Course.properties.descriptionHeading.description: |-
  Optional heading for the description.
  For example, "Welcome to 10th Grade Biology."
  If set, this field must be a valid UTF-8 string and no longer than 3600
  characters.
definitions.Course.properties.descriptionHeading.type: string
definitions.Course.properties.enrollmentCode.description: |-
  Enrollment code to use when joining this course.
  Specifying this field in a course update mask results in an error.

  Read-only.
definitions.Course.properties.enrollmentCode.type: string
definitions.Course.properties.guardiansEnabled.description: |-
  Whether or not guardian notifications are enabled for this course.

  Read-only.
definitions.Course.properties.guardiansEnabled.type: boolean
definitions.Course.properties.id.description: |-
  Identifier for this course assigned by Classroom.

  When
  creating a course,
  you may optionally set this identifier to an
  alias string in the
  request to create a corresponding alias. The `id` is still assigned by
  Classroom and cannot be updated after the course is created.

  Specifying this field in a course update mask results in an error.
definitions.Course.properties.id.type: string
definitions.Course.properties.name.description: |-
  Name of the course.
  For example, "10th Grade Biology".
  The name is required. It must be between 1 and 750 characters and a valid
  UTF-8 string.
definitions.Course.properties.name.type: string
definitions.Course.properties.ownerId.description: |-
  The identifier of the owner of a course.

  When specified as a parameter of a
  create course request, this
  field is required.
  The identifier can be one of the following:

  * the numeric identifier for the user
  * the email address of the user
  * the string literal `"me"`, indicating the requesting user

  This must be set in a create request. Admins can also specify this field
  in a patch course request to
  transfer ownership. In other contexts, it is read-only.
definitions.Course.properties.ownerId.type: string
definitions.Course.properties.room.description: |-
  Optional room location.
  For example, "301".
  If set, this field must be a valid UTF-8 string and no longer than 650
  characters.
definitions.Course.properties.room.type: string
definitions.Course.properties.section.description: |-
  Section of the course.
  For example, "Period 2".
  If set, this field must be a valid UTF-8 string and no longer than 2800
  characters.
definitions.Course.properties.section.type: string
definitions.Course.properties.teacherFolder.$ref: '#/definitions/DriveFolder'
definitions.Course.properties.teacherFolder.description: |-
  Information about a Drive Folder that is shared with all teachers of the
  course.

  This field will only be set for teachers of the course and domain administrators.

  Read-only.
definitions.Course.properties.teacherGroupEmail.description: |-
  The email address of a Google group containing all teachers of the course.
  This group does not accept email and can only be used for permissions.

  Read-only.
definitions.Course.properties.teacherGroupEmail.type: string
definitions.Course.properties.updateTime.description: |-
  Time of the most recent update to this course.
  Specifying this field in a course update mask results in an error.

  Read-only.
definitions.Course.properties.updateTime.format: google-datetime
definitions.Course.properties.updateTime.type: string
definitions.Course.type: object
definitions.CourseAlias.description: |-
  Alternative identifier for a course.

  An alias uniquely identifies a course. It must be unique within one of the
  following scopes:

  * domain: A domain-scoped alias is visible to all users within the alias
  creator's domain and can be created only by a domain admin. A domain-scoped
  alias is often used when a course has an identifier external to Classroom.

  * project: A project-scoped alias is visible to any request from an
  application using the Developer Console project ID that created the alias
  and can be created by any project. A project-scoped alias is often used when
  an application has alternative identifiers. A random value can also be used
  to avoid duplicate courses in the event of transmission failures, as retrying
  a request will return `ALREADY_EXISTS` if a previous one has succeeded.
definitions.CourseAlias.properties.alias.description: |-
  Alias string. The format of the string indicates the desired alias scoping.

  * `d:<name>` indicates a domain-scoped alias.
    Example: `d:math_101`
  * `p:<name>` indicates a project-scoped alias.
    Example: `p:abc123`

  This field has a maximum length of 256 characters.
definitions.CourseAlias.properties.alias.type: string
definitions.CourseAlias.type: object
definitions.CourseMaterial.description: A material attached to a course as part of
  a material set.
definitions.CourseMaterial.properties.driveFile.$ref: '#/definitions/DriveFile'
definitions.CourseMaterial.properties.driveFile.description: Google Drive file attachment.
definitions.CourseMaterial.properties.form.$ref: '#/definitions/Form'
definitions.CourseMaterial.properties.form.description: Google Forms attachment.
definitions.CourseMaterial.properties.link.$ref: '#/definitions/Link'
definitions.CourseMaterial.properties.link.description: Link atatchment.
definitions.CourseMaterial.properties.youTubeVideo.$ref: '#/definitions/YouTubeVideo'
definitions.CourseMaterial.properties.youTubeVideo.description: Youtube video attachment.
definitions.CourseMaterial.type: object
definitions.CourseMaterialSet.description: |-
  A set of materials that appears on the "About" page of the course.
  These materials might include a syllabus, schedule, or other background
  information relating to the course as a whole.
definitions.CourseMaterialSet.properties.materials.description: Materials attached
  to this set.
definitions.CourseMaterialSet.properties.materials.items.$ref: '#/definitions/CourseMaterial'
definitions.CourseMaterialSet.properties.materials.type: array
definitions.CourseMaterialSet.properties.title.description: Title for this set.
definitions.CourseMaterialSet.properties.title.type: string
definitions.CourseMaterialSet.type: object
definitions.CourseRosterChangesInfo.description: Information about a `Feed` with a
  `feed_type` of `COURSE_ROSTER_CHANGES`.
definitions.CourseRosterChangesInfo.properties.courseId.description: The `course_id`
  of the course to subscribe to roster changes for.
definitions.CourseRosterChangesInfo.properties.courseId.type: string
definitions.CourseRosterChangesInfo.type: object
definitions.CourseWork.description: Course work created by a teacher for students
  of the course.
definitions.CourseWork.properties.alternateLink.description: |-
  Absolute link to this course work in the Classroom web UI.
  This is only populated if `state` is `PUBLISHED`.

  Read-only.
definitions.CourseWork.properties.alternateLink.type: string
definitions.CourseWork.properties.assigneeMode.description: |-
  Assignee mode of the coursework.
  If unspecified, the default value is `ALL_STUDENTS`.
definitions.CourseWork.properties.assigneeMode.enum.length: 3
definitions.CourseWork.properties.assigneeMode.enum[0]: ASSIGNEE_MODE_UNSPECIFIED
definitions.CourseWork.properties.assigneeMode.enum[1]: ALL_STUDENTS
definitions.CourseWork.properties.assigneeMode.enum[2]: INDIVIDUAL_STUDENTS
definitions.CourseWork.properties.assigneeMode.type: string
definitions.CourseWork.properties.assignment.$ref: '#/definitions/Assignment'
definitions.CourseWork.properties.assignment.description: |-
  Assignment details.
  This is populated only when `work_type` is `ASSIGNMENT`.

  Read-only.
definitions.CourseWork.properties.associatedWithDeveloper.description: |-
  Whether this course work item is associated with the Developer Console
  project making the request.

  See google.classroom.Work.CreateCourseWork for more
  details.

  Read-only.
definitions.CourseWork.properties.associatedWithDeveloper.type: boolean
definitions.CourseWork.properties.courseId.description: |-
  Identifier of the course.

  Read-only.
definitions.CourseWork.properties.courseId.type: string
definitions.CourseWork.properties.creationTime.description: |-
  Timestamp when this course work was created.

  Read-only.
definitions.CourseWork.properties.creationTime.format: google-datetime
definitions.CourseWork.properties.creationTime.type: string
definitions.CourseWork.properties.creatorUserId.description: |-
  Identifier for the user that created the coursework.

  Read-only.
definitions.CourseWork.properties.creatorUserId.type: string
definitions.CourseWork.properties.description.description: |-
  Optional description of this course work.
  If set, the description must be a valid UTF-8 string containing no more
  than 30,000 characters.
definitions.CourseWork.properties.description.type: string
definitions.CourseWork.properties.dueDate.$ref: '#/definitions/Date'
definitions.CourseWork.properties.dueDate.description: |-
  Optional date, in UTC, that submissions for this this course work are due.
  This must be specified if `due_time` is specified.
definitions.CourseWork.properties.dueTime.$ref: '#/definitions/TimeOfDay'
definitions.CourseWork.properties.dueTime.description: |-
  Optional time of day, in UTC, that submissions for this this course work
  are due.
  This must be specified if `due_date` is specified.
definitions.CourseWork.properties.id.description: |-
  Classroom-assigned identifier of this course work, unique per course.

  Read-only.
definitions.CourseWork.properties.id.type: string
definitions.CourseWork.properties.individualStudentsOptions.$ref: '#/definitions/IndividualStudentsOptions'
definitions.CourseWork.properties.individualStudentsOptions.description: |-
  Identifiers of students with access to the coursework.
  This field is set only if `assigneeMode` is `INDIVIDUAL_STUDENTS`.
  If the `assigneeMode` is `INDIVIDUAL_STUDENTS`, then only students
  specified in this field will be assigned the coursework.
definitions.CourseWork.properties.materials.description: |-
  Additional materials.

  CourseWork must have no more than 20 material items.
definitions.CourseWork.properties.materials.items.$ref: '#/definitions/Material'
definitions.CourseWork.properties.materials.type: array
definitions.CourseWork.properties.maxPoints.description: |-
  Maximum grade for this course work.
  If zero or unspecified, this assignment is considered ungraded.
  This must be a non-negative integer value.
definitions.CourseWork.properties.maxPoints.format: double
definitions.CourseWork.properties.maxPoints.type: number
definitions.CourseWork.properties.multipleChoiceQuestion.$ref: '#/definitions/MultipleChoiceQuestion'
definitions.CourseWork.properties.multipleChoiceQuestion.description: |-
  Multiple choice question details.
  For read operations, this field is populated only when `work_type` is
  `MULTIPLE_CHOICE_QUESTION`.
  For write operations, this field must be specified when creating course
  work with a `work_type` of `MULTIPLE_CHOICE_QUESTION`, and it must not be
  set otherwise.
definitions.CourseWork.properties.scheduledTime.description: Optional timestamp when
  this course work is scheduled to be published.
definitions.CourseWork.properties.scheduledTime.format: google-datetime
definitions.CourseWork.properties.scheduledTime.type: string
definitions.CourseWork.properties.state.description: |-
  Status of this course work.
  If unspecified, the default state is `DRAFT`.
definitions.CourseWork.properties.state.enum.length: 4
definitions.CourseWork.properties.state.enum[0]: COURSE_WORK_STATE_UNSPECIFIED
definitions.CourseWork.properties.state.enum[1]: PUBLISHED
definitions.CourseWork.properties.state.enum[2]: DRAFT
definitions.CourseWork.properties.state.enum[3]: DELETED
definitions.CourseWork.properties.state.type: string
definitions.CourseWork.properties.submissionModificationMode.description: |-
  Setting to determine when students are allowed to modify submissions.
  If unspecified, the default value is `MODIFIABLE_UNTIL_TURNED_IN`.
definitions.CourseWork.properties.submissionModificationMode.enum.length: 3
definitions.CourseWork.properties.submissionModificationMode.enum[0]: SUBMISSION_MODIFICATION_MODE_UNSPECIFIED
definitions.CourseWork.properties.submissionModificationMode.enum[1]: MODIFIABLE_UNTIL_TURNED_IN
definitions.CourseWork.properties.submissionModificationMode.enum[2]: MODIFIABLE
definitions.CourseWork.properties.submissionModificationMode.type: string
definitions.CourseWork.properties.title.description: |-
  Title of this course work.
  The title must be a valid UTF-8 string containing between 1 and 3000
  characters.
definitions.CourseWork.properties.title.type: string
definitions.CourseWork.properties.updateTime.description: |-
  Timestamp of the most recent change to this course work.

  Read-only.
definitions.CourseWork.properties.updateTime.format: google-datetime
definitions.CourseWork.properties.updateTime.type: string
definitions.CourseWork.properties.workType.description: |-
  Type of this course work.

  The type is set when the course work is created and cannot be changed.
definitions.CourseWork.properties.workType.enum.length: 4
definitions.CourseWork.properties.workType.enum[0]: COURSE_WORK_TYPE_UNSPECIFIED
definitions.CourseWork.properties.workType.enum[1]: ASSIGNMENT
definitions.CourseWork.properties.workType.enum[2]: SHORT_ANSWER_QUESTION
definitions.CourseWork.properties.workType.enum[3]: MULTIPLE_CHOICE_QUESTION
definitions.CourseWork.properties.workType.type: string
definitions.CourseWork.type: object
definitions.Date.description: |-
  Represents a whole calendar date, e.g. date of birth. The time of day and
  time zone are either specified elsewhere or are not significant. The date
  is relative to the Proleptic Gregorian Calendar. The day may be 0 to
  represent a year and month where the day is not significant, e.g. credit card
  expiration date. The year may be 0 to represent a month and day independent
  of year, e.g. anniversary date. Related types are google.type.TimeOfDay
  and `google.protobuf.Timestamp`.
definitions.Date.properties.day.description: |-
  Day of month. Must be from 1 to 31 and valid for the year and month, or 0
  if specifying a year/month where the day is not significant.
definitions.Date.properties.day.format: int32
definitions.Date.properties.day.type: integer
definitions.Date.properties.month.description: Month of year. Must be from 1 to 12.
definitions.Date.properties.month.format: int32
definitions.Date.properties.month.type: integer
definitions.Date.properties.year.description: |-
  Year of date. Must be from 1 to 9999, or 0 if specifying a date without
  a year.
definitions.Date.properties.year.format: int32
definitions.Date.properties.year.type: integer
definitions.Date.type: object
definitions.DriveFile.description: Representation of a Google Drive file.
definitions.DriveFile.properties.alternateLink.description: |-
  URL that can be used to access the Drive item.

  Read-only.
definitions.DriveFile.properties.alternateLink.type: string
definitions.DriveFile.properties.id.description: Drive API resource ID.
definitions.DriveFile.properties.id.type: string
definitions.DriveFile.properties.thumbnailUrl.description: |-
  URL of a thumbnail image of the Drive item.

  Read-only.
definitions.DriveFile.properties.thumbnailUrl.type: string
definitions.DriveFile.properties.title.description: |-
  Title of the Drive item.

  Read-only.
definitions.DriveFile.properties.title.type: string
definitions.DriveFile.type: object
definitions.DriveFolder.description: Representation of a Google Drive folder.
definitions.DriveFolder.properties.alternateLink.description: |-
  URL that can be used to access the Drive folder.

  Read-only.
definitions.DriveFolder.properties.alternateLink.type: string
definitions.DriveFolder.properties.id.description: Drive API resource ID.
definitions.DriveFolder.properties.id.type: string
definitions.DriveFolder.properties.title.description: |-
  Title of the Drive folder.

  Read-only.
definitions.DriveFolder.properties.title.type: string
definitions.DriveFolder.type: object
definitions.Empty.description: |-
  A generic empty message that you can re-use to avoid defining duplicated
  empty messages in your APIs. A typical example is to use it as the request
  or the response type of an API method. For instance:

      service Foo {
        rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);
      }

  The JSON representation for `Empty` is empty JSON object `{}`.
definitions.Empty.type: object
definitions.Feed.description: |-
  A class of notifications that an application can register to receive.
  For example: "all roster changes for a domain".
definitions.Feed.properties.courseRosterChangesInfo.$ref: '#/definitions/CourseRosterChangesInfo'
definitions.Feed.properties.courseRosterChangesInfo.description: |-
  Information about a `Feed` with a `feed_type` of `COURSE_ROSTER_CHANGES`.
  This field must be specified if `feed_type` is `COURSE_ROSTER_CHANGES`.
definitions.Feed.properties.feedType.description: The type of feed.
definitions.Feed.properties.feedType.enum.length: 3
definitions.Feed.properties.feedType.enum[0]: FEED_TYPE_UNSPECIFIED
definitions.Feed.properties.feedType.enum[1]: DOMAIN_ROSTER_CHANGES
definitions.Feed.properties.feedType.enum[2]: COURSE_ROSTER_CHANGES
definitions.Feed.properties.feedType.type: string
definitions.Feed.type: object
definitions.Form.description: Google Forms item.
definitions.Form.properties.formUrl.description: URL of the form.
definitions.Form.properties.formUrl.type: string
definitions.Form.properties.responseUrl.description: |-
  URL of the form responses document.
  Only set if respsonses have been recorded and only when the
  requesting user is an editor of the form.

  Read-only.
definitions.Form.properties.responseUrl.type: string
definitions.Form.properties.thumbnailUrl.description: |-
  URL of a thumbnail image of the Form.

  Read-only.
definitions.Form.properties.thumbnailUrl.type: string
definitions.Form.properties.title.description: |-
  Title of the Form.

  Read-only.
definitions.Form.properties.title.type: string
definitions.Form.type: object
definitions.GlobalPermission.description: Global user permission description.
definitions.GlobalPermission.properties.permission.description: Permission value.
definitions.GlobalPermission.properties.permission.enum.length: 2
definitions.GlobalPermission.properties.permission.enum[0]: PERMISSION_UNSPECIFIED
definitions.GlobalPermission.properties.permission.enum[1]: CREATE_COURSE
definitions.GlobalPermission.properties.permission.type: string
definitions.GlobalPermission.type: object
definitions.GradeHistory.description: The history of each grade on this submission.
definitions.GradeHistory.properties.actorUserId.description: The teacher who made
  the grade change.
definitions.GradeHistory.properties.actorUserId.type: string
definitions.GradeHistory.properties.gradeChangeType.description: The type of grade
  change at this time in the submission grade history.
definitions.GradeHistory.properties.gradeChangeType.enum.length: 4
definitions.GradeHistory.properties.gradeChangeType.enum[0]: UNKNOWN_GRADE_CHANGE_TYPE
definitions.GradeHistory.properties.gradeChangeType.enum[1]: DRAFT_GRADE_POINTS_EARNED_CHANGE
definitions.GradeHistory.properties.gradeChangeType.enum[2]: ASSIGNED_GRADE_POINTS_EARNED_CHANGE
definitions.GradeHistory.properties.gradeChangeType.enum[3]: MAX_POINTS_CHANGE
definitions.GradeHistory.properties.gradeChangeType.type: string
definitions.GradeHistory.properties.gradeTimestamp.description: When the grade of
  the submission was changed.
definitions.GradeHistory.properties.gradeTimestamp.format: google-datetime
definitions.GradeHistory.properties.gradeTimestamp.type: string
definitions.GradeHistory.properties.maxPoints.description: |-
  The denominator of the grade at this time in the submission grade
  history.
definitions.GradeHistory.properties.maxPoints.format: double
definitions.GradeHistory.properties.maxPoints.type: number
definitions.GradeHistory.properties.pointsEarned.description: The numerator of the
  grade at this time in the submission grade history.
definitions.GradeHistory.properties.pointsEarned.format: double
definitions.GradeHistory.properties.pointsEarned.type: number
definitions.GradeHistory.type: object
definitions.Guardian.description: |-
  Association between a student and a guardian of that student. The guardian
  may receive information about the student's course work.
definitions.Guardian.properties.guardianId.description: Identifier for the guardian.
definitions.Guardian.properties.guardianId.type: string
definitions.Guardian.properties.guardianProfile.$ref: '#/definitions/UserProfile'
definitions.Guardian.properties.guardianProfile.description: User profile for the
  guardian.
definitions.Guardian.properties.invitedEmailAddress.description: |-
  The email address to which the initial guardian invitation was sent.
  This field is only visible to domain administrators.
definitions.Guardian.properties.invitedEmailAddress.type: string
definitions.Guardian.properties.studentId.description: Identifier for the student
  to whom the guardian relationship applies.
definitions.Guardian.properties.studentId.type: string
definitions.Guardian.type: object
definitions.GuardianInvitation.description: |-
  An invitation to become the guardian of a specified user, sent to a specified
  email address.
definitions.GuardianInvitation.properties.creationTime.description: |-
  The time that this invitation was created.

  Read-only.
definitions.GuardianInvitation.properties.creationTime.format: google-datetime
definitions.GuardianInvitation.properties.creationTime.type: string
definitions.GuardianInvitation.properties.invitationId.description: |-
  Unique identifier for this invitation.

  Read-only.
definitions.GuardianInvitation.properties.invitationId.type: string
definitions.GuardianInvitation.properties.invitedEmailAddress.description: |-
  Email address that the invitation was sent to.
  This field is only visible to domain administrators.
definitions.GuardianInvitation.properties.invitedEmailAddress.type: string
definitions.GuardianInvitation.properties.state.description: The state that this invitation
  is in.
definitions.GuardianInvitation.properties.state.enum.length: 3
definitions.GuardianInvitation.properties.state.enum[0]: GUARDIAN_INVITATION_STATE_UNSPECIFIED
definitions.GuardianInvitation.properties.state.enum[1]: PENDING
definitions.GuardianInvitation.properties.state.enum[2]: COMPLETE
definitions.GuardianInvitation.properties.state.type: string
definitions.GuardianInvitation.properties.studentId.description: ID of the student
  (in standard format)
definitions.GuardianInvitation.properties.studentId.type: string
definitions.GuardianInvitation.type: object
definitions.IndividualStudentsOptions.description: |-
  Assignee details about a coursework/announcement.
  This field is set if and only if `assigneeMode` is `INDIVIDUAL_STUDENTS`.
definitions.IndividualStudentsOptions.properties.studentIds.description: |-
  Identifiers for the students that have access to the
  coursework/announcement.
definitions.IndividualStudentsOptions.properties.studentIds.items.type: string
definitions.IndividualStudentsOptions.properties.studentIds.type: array
definitions.IndividualStudentsOptions.type: object
definitions.Invitation.description: An invitation to join a course.
definitions.Invitation.properties.courseId.description: Identifier of the course to
  invite the user to.
definitions.Invitation.properties.courseId.type: string
definitions.Invitation.properties.id.description: |-
  Identifier assigned by Classroom.

  Read-only.
definitions.Invitation.properties.id.type: string
definitions.Invitation.properties.role.description: |-
  Role to invite the user to have.
  Must not be `COURSE_ROLE_UNSPECIFIED`.
definitions.Invitation.properties.role.enum.length: 4
definitions.Invitation.properties.role.enum[0]: COURSE_ROLE_UNSPECIFIED
definitions.Invitation.properties.role.enum[1]: STUDENT
definitions.Invitation.properties.role.enum[2]: TEACHER
definitions.Invitation.properties.role.enum[3]: OWNER
definitions.Invitation.properties.role.type: string
definitions.Invitation.properties.userId.description: |-
  Identifier of the invited user.

  When specified as a parameter of a request, this identifier can be set to
  one of the following:

  * the numeric identifier for the user
  * the email address of the user
  * the string literal `"me"`, indicating the requesting user
definitions.Invitation.properties.userId.type: string
definitions.Invitation.type: object
definitions.Link.description: URL item.
definitions.Link.properties.thumbnailUrl.description: |-
  URL of a thumbnail image of the target URL.

  Read-only.
definitions.Link.properties.thumbnailUrl.type: string
definitions.Link.properties.title.description: |-
  Title of the target of the URL.

  Read-only.
definitions.Link.properties.title.type: string
definitions.Link.properties.url.description: |-
  URL to link to.
  This must be a valid UTF-8 string containing between 1 and 2024 characters.
definitions.Link.properties.url.type: string
definitions.Link.type: object
definitions.ListAnnouncementsResponse.description: Response when listing course work.
definitions.ListAnnouncementsResponse.properties.announcements.description: Announcement
  items that match the request.
definitions.ListAnnouncementsResponse.properties.announcements.items.$ref: '#/definitions/Announcement'
definitions.ListAnnouncementsResponse.properties.announcements.type: array
definitions.ListAnnouncementsResponse.properties.nextPageToken.description: |-
  Token identifying the next page of results to return. If empty, no further
  results are available.
definitions.ListAnnouncementsResponse.properties.nextPageToken.type: string
definitions.ListAnnouncementsResponse.type: object
definitions.ListCourseAliasesResponse.description: Response when listing course aliases.
definitions.ListCourseAliasesResponse.properties.aliases.description: The course aliases.
definitions.ListCourseAliasesResponse.properties.aliases.items.$ref: '#/definitions/CourseAlias'
definitions.ListCourseAliasesResponse.properties.aliases.type: array
definitions.ListCourseAliasesResponse.properties.nextPageToken.description: |-
  Token identifying the next page of results to return. If empty, no further
  results are available.
definitions.ListCourseAliasesResponse.properties.nextPageToken.type: string
definitions.ListCourseAliasesResponse.type: object
definitions.ListCourseWorkResponse.description: Response when listing course work.
definitions.ListCourseWorkResponse.properties.courseWork.description: Course work
  items that match the request.
definitions.ListCourseWorkResponse.properties.courseWork.items.$ref: '#/definitions/CourseWork'
definitions.ListCourseWorkResponse.properties.courseWork.type: array
definitions.ListCourseWorkResponse.properties.nextPageToken.description: |-
  Token identifying the next page of results to return. If empty, no further
  results are available.
definitions.ListCourseWorkResponse.properties.nextPageToken.type: string
definitions.ListCourseWorkResponse.type: object
definitions.ListCoursesResponse.description: Response when listing courses.
definitions.ListCoursesResponse.properties.courses.description: Courses that match
  the list request.
definitions.ListCoursesResponse.properties.courses.items.$ref: '#/definitions/Course'
definitions.ListCoursesResponse.properties.courses.type: array
definitions.ListCoursesResponse.properties.nextPageToken.description: |-
  Token identifying the next page of results to return. If empty, no further
  results are available.
definitions.ListCoursesResponse.properties.nextPageToken.type: string
definitions.ListCoursesResponse.type: object
definitions.ListGuardianInvitationsResponse.description: Response when listing guardian
  invitations.
definitions.ListGuardianInvitationsResponse.properties.guardianInvitations.description: Guardian
  invitations that matched the list request.
definitions.ListGuardianInvitationsResponse.properties.guardianInvitations.items.$ref: '#/definitions/GuardianInvitation'
definitions.ListGuardianInvitationsResponse.properties.guardianInvitations.type: array
definitions.ListGuardianInvitationsResponse.properties.nextPageToken.description: |-
  Token identifying the next page of results to return. If empty, no further
  results are available.
definitions.ListGuardianInvitationsResponse.properties.nextPageToken.type: string
definitions.ListGuardianInvitationsResponse.type: object
definitions.ListGuardiansResponse.description: Response when listing guardians.
definitions.ListGuardiansResponse.properties.guardians.description: |-
  Guardians on this page of results that met the criteria specified in
  the request.
definitions.ListGuardiansResponse.properties.guardians.items.$ref: '#/definitions/Guardian'
definitions.ListGuardiansResponse.properties.guardians.type: array
definitions.ListGuardiansResponse.properties.nextPageToken.description: |-
  Token identifying the next page of results to return. If empty, no further
  results are available.
definitions.ListGuardiansResponse.properties.nextPageToken.type: string
definitions.ListGuardiansResponse.type: object
definitions.ListInvitationsResponse.description: Response when listing invitations.
definitions.ListInvitationsResponse.properties.invitations.description: Invitations
  that match the list request.
definitions.ListInvitationsResponse.properties.invitations.items.$ref: '#/definitions/Invitation'
definitions.ListInvitationsResponse.properties.invitations.type: array
definitions.ListInvitationsResponse.properties.nextPageToken.description: |-
  Token identifying the next page of results to return. If empty, no further
  results are available.
definitions.ListInvitationsResponse.properties.nextPageToken.type: string
definitions.ListInvitationsResponse.type: object
definitions.ListStudentSubmissionsResponse.description: Response when listing student
  submissions.
definitions.ListStudentSubmissionsResponse.properties.nextPageToken.description: |-
  Token identifying the next page of results to return. If empty, no further
  results are available.
definitions.ListStudentSubmissionsResponse.properties.nextPageToken.type: string
definitions.ListStudentSubmissionsResponse.properties.studentSubmissions.description: Student
  work that matches the request.
definitions.ListStudentSubmissionsResponse.properties.studentSubmissions.items.$ref: '#/definitions/StudentSubmission'
definitions.ListStudentSubmissionsResponse.properties.studentSubmissions.type: array
definitions.ListStudentSubmissionsResponse.type: object
definitions.ListStudentsResponse.description: Response when listing students.
definitions.ListStudentsResponse.properties.nextPageToken.description: |-
  Token identifying the next page of results to return. If empty, no further
  results are available.
definitions.ListStudentsResponse.properties.nextPageToken.type: string
definitions.ListStudentsResponse.properties.students.description: Students who match
  the list request.
definitions.ListStudentsResponse.properties.students.items.$ref: '#/definitions/Student'
definitions.ListStudentsResponse.properties.students.type: array
definitions.ListStudentsResponse.type: object
definitions.ListTeachersResponse.description: Response when listing teachers.
definitions.ListTeachersResponse.properties.nextPageToken.description: |-
  Token identifying the next page of results to return. If empty, no further
  results are available.
definitions.ListTeachersResponse.properties.nextPageToken.type: string
definitions.ListTeachersResponse.properties.teachers.description: Teachers who match
  the list request.
definitions.ListTeachersResponse.properties.teachers.items.$ref: '#/definitions/Teacher'
definitions.ListTeachersResponse.properties.teachers.type: array
definitions.ListTeachersResponse.type: object
definitions.Material.description: |-
  Material attached to course work.

  When creating attachments, setting the `form` field is not supported.
definitions.Material.properties.driveFile.$ref: '#/definitions/SharedDriveFile'
definitions.Material.properties.driveFile.description: Google Drive file material.
definitions.Material.properties.form.$ref: '#/definitions/Form'
definitions.Material.properties.form.description: Google Forms material.
definitions.Material.properties.link.$ref: '#/definitions/Link'
definitions.Material.properties.link.description: |-
  Link material. On creation, will be upgraded to a more appropriate type
  if possible, and this will be reflected in the response.
definitions.Material.properties.youtubeVideo.$ref: '#/definitions/YouTubeVideo'
definitions.Material.properties.youtubeVideo.description: YouTube video material.
definitions.Material.type: object
definitions.ModifyAnnouncementAssigneesRequest.description: Request to modify assignee
  mode and options of an announcement.
definitions.ModifyAnnouncementAssigneesRequest.properties.assigneeMode.description: |-
  Mode of the announcement describing whether it will be accessible by all
  students or specified individual students.
definitions.ModifyAnnouncementAssigneesRequest.properties.assigneeMode.enum.length: 3
definitions.ModifyAnnouncementAssigneesRequest.properties.assigneeMode.enum[0]: ASSIGNEE_MODE_UNSPECIFIED
definitions.ModifyAnnouncementAssigneesRequest.properties.assigneeMode.enum[1]: ALL_STUDENTS
definitions.ModifyAnnouncementAssigneesRequest.properties.assigneeMode.enum[2]: INDIVIDUAL_STUDENTS
definitions.ModifyAnnouncementAssigneesRequest.properties.assigneeMode.type: string
definitions.ModifyAnnouncementAssigneesRequest.properties.modifyIndividualStudentsOptions.$ref: '#/definitions/ModifyIndividualStudentsOptions'
definitions.ModifyAnnouncementAssigneesRequest.properties.modifyIndividualStudentsOptions.description: |-
  Set which students can view or cannot view the announcement.
  Must be specified only when `assigneeMode` is `INDIVIDUAL_STUDENTS`.
definitions.ModifyAnnouncementAssigneesRequest.type: object
definitions.ModifyAttachmentsRequest.description: Request to modify the attachments
  of a student submission.
definitions.ModifyAttachmentsRequest.properties.addAttachments.description: |-
  Attachments to add.
  A student submission may not have more than 20 attachments.

  Form attachments are not supported.
definitions.ModifyAttachmentsRequest.properties.addAttachments.items.$ref: '#/definitions/Attachment'
definitions.ModifyAttachmentsRequest.properties.addAttachments.type: array
definitions.ModifyAttachmentsRequest.type: object
definitions.ModifyCourseWorkAssigneesRequest.description: Request to modify assignee
  mode and options of a coursework.
definitions.ModifyCourseWorkAssigneesRequest.properties.assigneeMode.description: |-
  Mode of the coursework describing whether it will be assigned to all
  students or specified individual students.
definitions.ModifyCourseWorkAssigneesRequest.properties.assigneeMode.enum.length: 3
definitions.ModifyCourseWorkAssigneesRequest.properties.assigneeMode.enum[0]: ASSIGNEE_MODE_UNSPECIFIED
definitions.ModifyCourseWorkAssigneesRequest.properties.assigneeMode.enum[1]: ALL_STUDENTS
definitions.ModifyCourseWorkAssigneesRequest.properties.assigneeMode.enum[2]: INDIVIDUAL_STUDENTS
definitions.ModifyCourseWorkAssigneesRequest.properties.assigneeMode.type: string
definitions.ModifyCourseWorkAssigneesRequest.properties.modifyIndividualStudentsOptions.$ref: '#/definitions/ModifyIndividualStudentsOptions'
definitions.ModifyCourseWorkAssigneesRequest.properties.modifyIndividualStudentsOptions.description: |-
  Set which students are assigned or not assigned to the coursework.
  Must be specified only when `assigneeMode` is `INDIVIDUAL_STUDENTS`.
definitions.ModifyCourseWorkAssigneesRequest.type: object
definitions.ModifyIndividualStudentsOptions.description: |-
  Contains fields to add or remove students from a course work or announcement
  where the `assigneeMode` is set to `INDIVIDUAL_STUDENTS`.
definitions.ModifyIndividualStudentsOptions.properties.addStudentIds.description: |-
  Ids of students to be added as having access to this
  coursework/announcement.
definitions.ModifyIndividualStudentsOptions.properties.addStudentIds.items.type: string
definitions.ModifyIndividualStudentsOptions.properties.addStudentIds.type: array
definitions.ModifyIndividualStudentsOptions.properties.removeStudentIds.description: |-
  Ids of students to be removed from having access to this
  coursework/announcement.
definitions.ModifyIndividualStudentsOptions.properties.removeStudentIds.items.type: string
definitions.ModifyIndividualStudentsOptions.properties.removeStudentIds.type: array
definitions.ModifyIndividualStudentsOptions.type: object
definitions.MultipleChoiceQuestion.description: Additional details for multiple-choice
  questions.
definitions.MultipleChoiceQuestion.properties.choices.description: Possible choices.
definitions.MultipleChoiceQuestion.properties.choices.items.type: string
definitions.MultipleChoiceQuestion.properties.choices.type: array
definitions.MultipleChoiceQuestion.type: object
definitions.MultipleChoiceSubmission.description: Student work for a multiple-choice
  question.
definitions.MultipleChoiceSubmission.properties.answer.description: Student's select
  choice.
definitions.MultipleChoiceSubmission.properties.answer.type: string
definitions.MultipleChoiceSubmission.type: object
definitions.Name.description: Details of the user's name.
definitions.Name.properties.familyName.description: |-
  The user's last name.

  Read-only.
definitions.Name.properties.familyName.type: string
definitions.Name.properties.fullName.description: |-
  The user's full name formed by concatenating the first and last name
  values.

  Read-only.
definitions.Name.properties.fullName.type: string
definitions.Name.properties.givenName.description: |-
  The user's first name.

  Read-only.
definitions.Name.properties.givenName.type: string
definitions.Name.type: object
definitions.ReclaimStudentSubmissionRequest.description: Request to reclaim a student
  submission.
definitions.ReclaimStudentSubmissionRequest.type: object
definitions.Registration.description: |-
  An instruction to Classroom to send notifications from the `feed` to the
  provided `destination`.
definitions.Registration.properties.cloudPubsubTopic.$ref: '#/definitions/CloudPubsubTopic'
definitions.Registration.properties.cloudPubsubTopic.description: The Cloud Pub/Sub
  topic that notifications are to be sent to.
definitions.Registration.properties.expiryTime.description: |-
  The time until which the `Registration` is effective.

  This is a read-only field assigned by the server.
definitions.Registration.properties.expiryTime.format: google-datetime
definitions.Registration.properties.expiryTime.type: string
definitions.Registration.properties.feed.$ref: '#/definitions/Feed'
definitions.Registration.properties.feed.description: |-
  Specification for the class of notifications that Classroom should deliver
  to the `destination`.
definitions.Registration.properties.registrationId.description: |-
  A server-generated unique identifier for this `Registration`.

  Read-only.
definitions.Registration.properties.registrationId.type: string
definitions.Registration.type: object
definitions.ReturnStudentSubmissionRequest.description: Request to return a student
  submission.
definitions.ReturnStudentSubmissionRequest.type: object
definitions.SharedDriveFile.description: Drive file that is used as material for course
  work.
definitions.SharedDriveFile.properties.driveFile.$ref: '#/definitions/DriveFile'
definitions.SharedDriveFile.properties.driveFile.description: Drive file details.
definitions.SharedDriveFile.properties.shareMode.description: Mechanism by which students
  access the Drive item.
definitions.SharedDriveFile.properties.shareMode.enum.length: 4
definitions.SharedDriveFile.properties.shareMode.enum[0]: UNKNOWN_SHARE_MODE
definitions.SharedDriveFile.properties.shareMode.enum[1]: VIEW
definitions.SharedDriveFile.properties.shareMode.enum[2]: EDIT
definitions.SharedDriveFile.properties.shareMode.enum[3]: STUDENT_COPY
definitions.SharedDriveFile.properties.shareMode.type: string
definitions.SharedDriveFile.type: object
definitions.ShortAnswerSubmission.description: Student work for a short answer question.
definitions.ShortAnswerSubmission.properties.answer.description: Student response
  to a short-answer question.
definitions.ShortAnswerSubmission.properties.answer.type: string
definitions.ShortAnswerSubmission.type: object
definitions.StateHistory.description: The history of each state this submission has
  been in.
definitions.StateHistory.properties.actorUserId.description: The teacher or student
  who made the change
definitions.StateHistory.properties.actorUserId.type: string
definitions.StateHistory.properties.state.description: The workflow pipeline stage.
definitions.StateHistory.properties.state.enum.length: 6
definitions.StateHistory.properties.state.enum[0]: STATE_UNSPECIFIED
definitions.StateHistory.properties.state.enum[1]: CREATED
definitions.StateHistory.properties.state.enum[2]: TURNED_IN
definitions.StateHistory.properties.state.enum[3]: RETURNED
definitions.StateHistory.properties.state.enum[4]: RECLAIMED_BY_STUDENT
definitions.StateHistory.properties.state.enum[5]: STUDENT_EDITED_AFTER_TURN_IN
definitions.StateHistory.properties.state.type: string
definitions.StateHistory.properties.stateTimestamp.description: When the submission
  entered this state.
definitions.StateHistory.properties.stateTimestamp.format: google-datetime
definitions.StateHistory.properties.stateTimestamp.type: string
definitions.StateHistory.type: object
definitions.Student.description: Student in a course.
definitions.Student.properties.courseId.description: |-
  Identifier of the course.

  Read-only.
definitions.Student.properties.courseId.type: string
definitions.Student.properties.profile.$ref: '#/definitions/UserProfile'
definitions.Student.properties.profile.description: |-
  Global user information for the student.

  Read-only.
definitions.Student.properties.studentWorkFolder.$ref: '#/definitions/DriveFolder'
definitions.Student.properties.studentWorkFolder.description: |-
  Information about a Drive Folder for this student's work in this course.
  Only visible to the student and domain administrators.

  Read-only.
definitions.Student.properties.userId.description: |-
  Identifier of the user.

  When specified as a parameter of a request, this identifier can be one of
  the following:

  * the numeric identifier for the user
  * the email address of the user
  * the string literal `"me"`, indicating the requesting user
definitions.Student.properties.userId.type: string
definitions.Student.type: object
definitions.StudentSubmission.description: |-
  Student submission for course work.

  StudentSubmission items are generated when a CourseWork item is created.

  StudentSubmissions that have never been accessed (i.e. with `state` = NEW)
  may not have a creation time or update time.
definitions.StudentSubmission.properties.alternateLink.description: |-
  Absolute link to the submission in the Classroom web UI.

  Read-only.
definitions.StudentSubmission.properties.alternateLink.type: string
definitions.StudentSubmission.properties.assignedGrade.description: |-
  Optional grade. If unset, no grade was set.
  This value must be non-negative. Decimal (i.e. non-integer) values are
  allowed, but will be rounded to two decimal places.

  This may be modified only by course teachers.
definitions.StudentSubmission.properties.assignedGrade.format: double
definitions.StudentSubmission.properties.assignedGrade.type: number
definitions.StudentSubmission.properties.assignmentSubmission.$ref: '#/definitions/AssignmentSubmission'
definitions.StudentSubmission.properties.assignmentSubmission.description: |-
  Submission content when course_work_type is ASSIGNMENT.

  Students can modify this content using
  google.classroom.Work.ModifyAttachments.
definitions.StudentSubmission.properties.associatedWithDeveloper.description: |-
  Whether this student submission is associated with the Developer Console
  project making the request.

  See google.classroom.Work.CreateCourseWork for more
  details.

  Read-only.
definitions.StudentSubmission.properties.associatedWithDeveloper.type: boolean
definitions.StudentSubmission.properties.courseId.description: |-
  Identifier of the course.

  Read-only.
definitions.StudentSubmission.properties.courseId.type: string
definitions.StudentSubmission.properties.courseWorkId.description: |-
  Identifier for the course work this corresponds to.

  Read-only.
definitions.StudentSubmission.properties.courseWorkId.type: string
definitions.StudentSubmission.properties.courseWorkType.description: |-
  Type of course work this submission is for.

  Read-only.
definitions.StudentSubmission.properties.courseWorkType.enum.length: 4
definitions.StudentSubmission.properties.courseWorkType.enum[0]: COURSE_WORK_TYPE_UNSPECIFIED
definitions.StudentSubmission.properties.courseWorkType.enum[1]: ASSIGNMENT
definitions.StudentSubmission.properties.courseWorkType.enum[2]: SHORT_ANSWER_QUESTION
definitions.StudentSubmission.properties.courseWorkType.enum[3]: MULTIPLE_CHOICE_QUESTION
definitions.StudentSubmission.properties.courseWorkType.type: string
definitions.StudentSubmission.properties.creationTime.description: |-
  Creation time of this submission.
  This may be unset if the student has not accessed this item.

  Read-only.
definitions.StudentSubmission.properties.creationTime.format: google-datetime
definitions.StudentSubmission.properties.creationTime.type: string
definitions.StudentSubmission.properties.draftGrade.description: |-
  Optional pending grade. If unset, no grade was set.
  This value must be non-negative. Decimal (i.e. non-integer) values are
  allowed, but will be rounded to two decimal places.

  This is only visible to and modifiable by course teachers.
definitions.StudentSubmission.properties.draftGrade.format: double
definitions.StudentSubmission.properties.draftGrade.type: number
definitions.StudentSubmission.properties.id.description: |-
  Classroom-assigned Identifier for the student submission.
  This is unique among submissions for the relevant course work.

  Read-only.
definitions.StudentSubmission.properties.id.type: string
definitions.StudentSubmission.properties.late.description: |-
  Whether this submission is late.

  Read-only.
definitions.StudentSubmission.properties.late.type: boolean
definitions.StudentSubmission.properties.multipleChoiceSubmission.$ref: '#/definitions/MultipleChoiceSubmission'
definitions.StudentSubmission.properties.multipleChoiceSubmission.description: Submission
  content when course_work_type is MULTIPLE_CHOICE_QUESTION.
definitions.StudentSubmission.properties.shortAnswerSubmission.$ref: '#/definitions/ShortAnswerSubmission'
definitions.StudentSubmission.properties.shortAnswerSubmission.description: Submission
  content when course_work_type is SHORT_ANSWER_QUESTION.
definitions.StudentSubmission.properties.state.description: |-
  State of this submission.

  Read-only.
definitions.StudentSubmission.properties.state.enum.length: 6
definitions.StudentSubmission.properties.state.enum[0]: SUBMISSION_STATE_UNSPECIFIED
definitions.StudentSubmission.properties.state.enum[1]: NEW
definitions.StudentSubmission.properties.state.enum[2]: CREATED
definitions.StudentSubmission.properties.state.enum[3]: TURNED_IN
definitions.StudentSubmission.properties.state.enum[4]: RETURNED
definitions.StudentSubmission.properties.state.enum[5]: RECLAIMED_BY_STUDENT
definitions.StudentSubmission.properties.state.type: string
definitions.StudentSubmission.properties.submissionHistory.description: |-
  The history of the submission (includes state and grade histories).

  Read-only.
definitions.StudentSubmission.properties.submissionHistory.items.$ref: '#/definitions/SubmissionHistory'
definitions.StudentSubmission.properties.submissionHistory.type: array
definitions.StudentSubmission.properties.updateTime.description: |-
  Last update time of this submission.
  This may be unset if the student has not accessed this item.

  Read-only.
definitions.StudentSubmission.properties.updateTime.format: google-datetime
definitions.StudentSubmission.properties.updateTime.type: string
definitions.StudentSubmission.properties.userId.description: |-
  Identifier for the student that owns this submission.

  Read-only.
definitions.StudentSubmission.properties.userId.type: string
definitions.StudentSubmission.type: object
definitions.SubmissionHistory.description: |-
  The history of the submission. This currently includes state and grade
  histories.
definitions.SubmissionHistory.properties.gradeHistory.$ref: '#/definitions/GradeHistory'
definitions.SubmissionHistory.properties.gradeHistory.description: The grade history
  information of the submission, if present.
definitions.SubmissionHistory.properties.stateHistory.$ref: '#/definitions/StateHistory'
definitions.SubmissionHistory.properties.stateHistory.description: The state history
  information of the submission, if present.
definitions.SubmissionHistory.type: object
definitions.Teacher.description: Teacher of a course.
definitions.Teacher.properties.courseId.description: |-
  Identifier of the course.

  Read-only.
definitions.Teacher.properties.courseId.type: string
definitions.Teacher.properties.profile.$ref: '#/definitions/UserProfile'
definitions.Teacher.properties.profile.description: |-
  Global user information for the teacher.

  Read-only.
definitions.Teacher.properties.userId.description: |-
  Identifier of the user.

  When specified as a parameter of a request, this identifier can be one of
  the following:

  * the numeric identifier for the user
  * the email address of the user
  * the string literal `"me"`, indicating the requesting user
definitions.Teacher.properties.userId.type: string
definitions.Teacher.type: object
definitions.TimeOfDay.description: |-
  Represents a time of day. The date and time zone are either not significant
  or are specified elsewhere. An API may choose to allow leap seconds. Related
  types are google.type.Date and `google.protobuf.Timestamp`.
definitions.TimeOfDay.properties.hours.description: |-
  Hours of day in 24 hour format. Should be from 0 to 23. An API may choose
  to allow the value "24:00:00" for scenarios like business closing time.
definitions.TimeOfDay.properties.hours.format: int32
definitions.TimeOfDay.properties.hours.type: integer
definitions.TimeOfDay.properties.minutes.description: Minutes of hour of day. Must
  be from 0 to 59.
definitions.TimeOfDay.properties.minutes.format: int32
definitions.TimeOfDay.properties.minutes.type: integer
definitions.TimeOfDay.properties.nanos.description: Fractions of seconds in nanoseconds.
  Must be from 0 to 999,999,999.
definitions.TimeOfDay.properties.nanos.format: int32
definitions.TimeOfDay.properties.nanos.type: integer
definitions.TimeOfDay.properties.seconds.description: |-
  Seconds of minutes of the time. Must normally be from 0 to 59. An API may
  allow the value 60 if it allows leap-seconds.
definitions.TimeOfDay.properties.seconds.format: int32
definitions.TimeOfDay.properties.seconds.type: integer
definitions.TimeOfDay.type: object
definitions.TurnInStudentSubmissionRequest.description: Request to turn in a student
  submission.
definitions.TurnInStudentSubmissionRequest.type: object
definitions.UserProfile.description: Global information for a user.
definitions.UserProfile.properties.emailAddress.description: |-
  Email address of the user.

  Read-only.
definitions.UserProfile.properties.emailAddress.type: string
definitions.UserProfile.properties.id.description: |-
  Identifier of the user.

  Read-only.
definitions.UserProfile.properties.id.type: string
definitions.UserProfile.properties.name.$ref: '#/definitions/Name'
definitions.UserProfile.properties.name.description: |-
  Name of the user.

  Read-only.
definitions.UserProfile.properties.permissions.description: |-
  Global permissions of the user.

  Read-only.
definitions.UserProfile.properties.permissions.items.$ref: '#/definitions/GlobalPermission'
definitions.UserProfile.properties.permissions.type: array
definitions.UserProfile.properties.photoUrl.description: |-
  URL of user's profile photo.

  Read-only.
definitions.UserProfile.properties.photoUrl.type: string
definitions.UserProfile.properties.verifiedTeacher.description: |-
  Represents whether a G Suite for Education user's domain administrator has
  explicitly verified them as being a teacher. If the user is not a member of
  a G Suite for Education domain, than this field will always be false.

  Read-only
definitions.UserProfile.properties.verifiedTeacher.type: boolean
definitions.UserProfile.type: object
definitions.YouTubeVideo.description: YouTube video item.
definitions.YouTubeVideo.properties.alternateLink.description: |-
  URL that can be used to view the YouTube video.

  Read-only.
definitions.YouTubeVideo.properties.alternateLink.type: string
definitions.YouTubeVideo.properties.id.description: YouTube API resource ID.
definitions.YouTubeVideo.properties.id.type: string
definitions.YouTubeVideo.properties.thumbnailUrl.description: |-
  URL of a thumbnail image of the YouTube video.

  Read-only.
definitions.YouTubeVideo.properties.thumbnailUrl.type: string
definitions.YouTubeVideo.properties.title.description: |-
  Title of the YouTube video.

  Read-only.
definitions.YouTubeVideo.properties.title.type: string
definitions.YouTubeVideo.type: object
externalDocs.url: https://developers.google.com/classroom/
host: classroom.googleapis.com
info.contact.name: Google
info.contact.url: https://google.com
info.description: Manages classes, rosters, and invitations in Google Classroom.
info.title: Google Classroom
info.version: v1
info.x-apiClientRegistration.url: https://console.developers.google.com
info.x-apisguru-categories.length: 1
info.x-apisguru-categories[0]: education
info.x-logo.url: https://api.apis.guru/v2/cache/logo/https_www.google.com_images_branding_googlelogo_2x_googlelogo_color_272x92dp.png
info.x-origin.length: 1
info.x-origin[0].converter.url: https://github.com/lucybot/api-spec-converter
info.x-origin[0].converter.version: 2.6.0
info.x-origin[0].format: google
info.x-origin[0].url: https://classroom.googleapis.com/$discovery/rest?version=v1
info.x-origin[0].version: v1
info.x-preferred: true
info.x-providerName: googleapis.com
info.x-serviceName: classroom
parameters.$.xgafv.description: V1 error format.
parameters.$.xgafv.enum.length: 2
parameters.$.xgafv.enum[0]: "1"
parameters.$.xgafv.enum[1]: "2"
parameters.$.xgafv.in: query
parameters.$.xgafv.name: $.xgafv
parameters.$.xgafv.type: string
parameters.access_token.description: OAuth access token.
parameters.access_token.in: query
parameters.access_token.name: access_token
parameters.access_token.type: string
parameters.alt.default: json
parameters.alt.description: Data format for response.
parameters.alt.enum.length: 3
parameters.alt.enum[0]: json
parameters.alt.enum[1]: media
parameters.alt.enum[2]: proto
parameters.alt.in: query
parameters.alt.name: alt
parameters.alt.type: string
parameters.bearer_token.description: OAuth bearer token.
parameters.bearer_token.in: query
parameters.bearer_token.name: bearer_token
parameters.bearer_token.type: string
parameters.callback.description: JSONP
parameters.callback.in: query
parameters.callback.name: callback
parameters.callback.type: string
parameters.fields.description: Selector specifying which fields to include in a partial
  response.
parameters.fields.in: query
parameters.fields.name: fields
parameters.fields.type: string
parameters.key.description: API key. Your API key identifies your project and provides
  you with API access, quota, and reports. Required unless you provide an OAuth 2.0
  token.
parameters.key.in: query
parameters.key.name: key
parameters.key.type: string
parameters.oauth_token.description: OAuth 2.0 token for the current user.
parameters.oauth_token.in: query
parameters.oauth_token.name: oauth_token
parameters.oauth_token.type: string
parameters.pp.default: true
parameters.pp.description: Pretty-print response.
parameters.pp.in: query
parameters.pp.name: pp
parameters.pp.type: boolean
parameters.prettyPrint.default: true
parameters.prettyPrint.description: Returns response with indentations and line breaks.
parameters.prettyPrint.in: query
parameters.prettyPrint.name: prettyPrint
parameters.prettyPrint.type: boolean
parameters.quotaUser.description: Available to use for quota purposes for server-side
  applications. Can be any arbitrary string assigned to a user, but should not exceed
  40 characters.
parameters.quotaUser.in: query
parameters.quotaUser.name: quotaUser
parameters.quotaUser.type: string
parameters.upload_protocol.description: Upload protocol for media (e.g. "raw", "multipart").
parameters.upload_protocol.in: query
parameters.upload_protocol.name: upload_protocol
parameters.upload_protocol.type: string
parameters.uploadType.description: Legacy upload protocol for media (e.g. "media",
  "multipart").
parameters.uploadType.in: query
parameters.uploadType.name: uploadType
parameters.uploadType.type: string
paths./v1/courses.get.description: |-
  Returns a list of courses that the requesting user is permitted to view,
  restricted to those that match the request. Returned courses are ordered by
  creation time, with the most recently created coming first.

  This method returns the following error codes:

  * `PERMISSION_DENIED` for access errors.
  * `INVALID_ARGUMENT` if the query argument is malformed.
  * `NOT_FOUND` if any users specified in the query arguments do not exist.
paths./v1/courses.get.operationId: classroom.courses.list
paths./v1/courses.get.parameters.length: 5
paths./v1/courses.get.parameters[0].collectionFormat: multi
paths./v1/courses.get.parameters[0].description: |-
  Restricts returned courses to those in one of the specified states
  The default value is ACTIVE, ARCHIVED, PROVISIONED, DECLINED.
paths./v1/courses.get.parameters[0].in: query
paths./v1/courses.get.parameters[0].items.enum.length: 6
paths./v1/courses.get.parameters[0].items.enum[0]: COURSE_STATE_UNSPECIFIED
paths./v1/courses.get.parameters[0].items.enum[1]: ACTIVE
paths./v1/courses.get.parameters[0].items.enum[2]: ARCHIVED
paths./v1/courses.get.parameters[0].items.enum[3]: PROVISIONED
paths./v1/courses.get.parameters[0].items.enum[4]: DECLINED
paths./v1/courses.get.parameters[0].items.enum[5]: SUSPENDED
paths./v1/courses.get.parameters[0].items.type: string
paths./v1/courses.get.parameters[0].name: courseStates
paths./v1/courses.get.parameters[0].type: array
paths./v1/courses.get.parameters[1].description: |-
  Maximum number of items to return. Zero or unspecified indicates that the
  server may assign a maximum.

  The server may return fewer than the specified number of results.
paths./v1/courses.get.parameters[1].in: query
paths./v1/courses.get.parameters[1].name: pageSize
paths./v1/courses.get.parameters[1].type: integer
paths./v1/courses.get.parameters[2].description: |-
  Restricts returned courses to those having a teacher with the specified
  identifier. The identifier can be one of the following:

  * the numeric identifier for the user
  * the email address of the user
  * the string literal `"me"`, indicating the requesting user
paths./v1/courses.get.parameters[2].in: query
paths./v1/courses.get.parameters[2].name: teacherId
paths./v1/courses.get.parameters[2].type: string
paths./v1/courses.get.parameters[3].description: |-
  Restricts returned courses to those having a student with the specified
  identifier. The identifier can be one of the following:

  * the numeric identifier for the user
  * the email address of the user
  * the string literal `"me"`, indicating the requesting user
paths./v1/courses.get.parameters[3].in: query
paths./v1/courses.get.parameters[3].name: studentId
paths./v1/courses.get.parameters[3].type: string
paths./v1/courses.get.parameters[4].description: |-
  nextPageToken
  value returned from a previous
  list call,
  indicating that the subsequent page of results should be returned.

  The list request must be
  otherwise identical to the one that resulted in this token.
paths./v1/courses.get.parameters[4].in: query
paths./v1/courses.get.parameters[4].name: pageToken
paths./v1/courses.get.parameters[4].type: string
paths./v1/courses.get.responses.200.description: Successful response
paths./v1/courses.get.responses.200.schema.$ref: '#/definitions/ListCoursesResponse'
paths./v1/courses.get.security.length: 2
paths./v1/courses.get.security[0].Oauth2.length: 1
paths./v1/courses.get.security[0].Oauth2[0]: https://www.googleapis.com/auth/classroom.courses
paths./v1/courses.get.security[1].Oauth2.length: 1
paths./v1/courses.get.security[1].Oauth2[0]: https://www.googleapis.com/auth/classroom.courses.readonly
paths./v1/courses.get.tags.length: 1
paths./v1/courses.get.tags[0]: courses
paths./v1/courses.parameters.length: 13
paths./v1/courses.parameters[0].$ref: '#/parameters/access_token'
paths./v1/courses.parameters[1].$ref: '#/parameters/prettyPrint'
paths./v1/courses.parameters[2].$ref: '#/parameters/key'
paths./v1/courses.parameters[3].$ref: '#/parameters/quotaUser'
paths./v1/courses.parameters[4].$ref: '#/parameters/pp'
paths./v1/courses.parameters[5].$ref: '#/parameters/fields'
paths./v1/courses.parameters[6].$ref: '#/parameters/alt'
paths./v1/courses.parameters[7].$ref: '#/parameters/$.xgafv'
paths./v1/courses.parameters[8].$ref: '#/parameters/callback'
paths./v1/courses.parameters[9].$ref: '#/parameters/oauth_token'
paths./v1/courses.parameters[10].$ref: '#/parameters/uploadType'
paths./v1/courses.parameters[11].$ref: '#/parameters/bearer_token'
paths./v1/courses.parameters[12].$ref: '#/parameters/upload_protocol'
paths./v1/courses.post.description: |-
  Creates a course.

  The user specified in `ownerId` is the owner of the created course
  and added as a teacher.

  This method returns the following error codes:

  * `PERMISSION_DENIED` if the requesting user is not permitted to create
  courses or for access errors.
  * `NOT_FOUND` if the primary teacher is not a valid user.
  * `FAILED_PRECONDITION` if the course owner's account is disabled or for
  the following request errors:
      * UserGroupsMembershipLimitReached
  * `ALREADY_EXISTS` if an alias was specified in the `id` and
  already exists.
paths./v1/courses.post.operationId: classroom.courses.create
paths./v1/courses.post.parameters.length: 1
paths./v1/courses.post.parameters[0].in: body
paths./v1/courses.post.parameters[0].name: body
paths./v1/courses.post.parameters[0].schema.$ref: '#/definitions/Course'
paths./v1/courses.post.responses.200.description: Successful response
paths./v1/courses.post.responses.200.schema.$ref: '#/definitions/Course'
paths./v1/courses.post.security.length: 1
paths./v1/courses.post.security[0].Oauth2.length: 1
paths./v1/courses.post.security[0].Oauth2[0]: https://www.googleapis.com/auth/classroom.courses
paths./v1/courses.post.tags.length: 1
paths./v1/courses.post.tags[0]: courses
paths./v1/courses/{courseId}/aliases.get.description: |-
  Returns a list of aliases for a course.

  This method returns the following error codes:

  * `PERMISSION_DENIED` if the requesting user is not permitted to access the
  course or for access errors.
  * `NOT_FOUND` if the course does not exist.
paths./v1/courses/{courseId}/aliases.get.operationId: classroom.courses.aliases.list
paths./v1/courses/{courseId}/aliases.get.parameters.length: 3
paths./v1/courses/{courseId}/aliases.get.parameters[0].description: |-
  The identifier of the course.
  This identifier can be either the Classroom-assigned identifier or an
  alias.
paths./v1/courses/{courseId}/aliases.get.parameters[0].in: path
paths./v1/courses/{courseId}/aliases.get.parameters[0].name: courseId
paths./v1/courses/{courseId}/aliases.get.parameters[0].required: true
paths./v1/courses/{courseId}/aliases.get.parameters[0].type: string
paths./v1/courses/{courseId}/aliases.get.parameters[1].description: |-
  Maximum number of items to return. Zero or unspecified indicates that the
  server may assign a maximum.

  The server may return fewer than the specified number of results.
paths./v1/courses/{courseId}/aliases.get.parameters[1].in: query
paths./v1/courses/{courseId}/aliases.get.parameters[1].name: pageSize
paths./v1/courses/{courseId}/aliases.get.parameters[1].type: integer
paths./v1/courses/{courseId}/aliases.get.parameters[2].description: |-
  nextPageToken
  value returned from a previous
  list call,
  indicating that the subsequent page of results should be returned.

  The list request
  must be otherwise identical to the one that resulted in this token.
paths./v1/courses/{courseId}/aliases.get.parameters[2].in: query
paths./v1/courses/{courseId}/aliases.get.parameters[2].name: pageToken
paths./v1/courses/{courseId}/aliases.get.parameters[2].type: string
paths./v1/courses/{courseId}/aliases.get.responses.200.description: Successful response
paths./v1/courses/{courseId}/aliases.get.responses.200.schema.$ref: '#/definitions/ListCourseAliasesResponse'
paths./v1/courses/{courseId}/aliases.get.security.length: 2
paths./v1/courses/{courseId}/aliases.get.security[0].Oauth2.length: 1
paths./v1/courses/{courseId}/aliases.get.security[0].Oauth2[0]: https://www.googleapis.com/auth/classroom.courses
paths./v1/courses/{courseId}/aliases.get.security[1].Oauth2.length: 1
paths./v1/courses/{courseId}/aliases.get.security[1].Oauth2[0]: https://www.googleapis.com/auth/classroom.courses.readonly
paths./v1/courses/{courseId}/aliases.get.tags.length: 1
paths./v1/courses/{courseId}/aliases.get.tags[0]: courses
paths./v1/courses/{courseId}/aliases.parameters.length: 13
paths./v1/courses/{courseId}/aliases.parameters[0].$ref: '#/parameters/access_token'
paths./v1/courses/{courseId}/aliases.parameters[1].$ref: '#/parameters/prettyPrint'
paths./v1/courses/{courseId}/aliases.parameters[2].$ref: '#/parameters/key'
paths./v1/courses/{courseId}/aliases.parameters[3].$ref: '#/parameters/quotaUser'
paths./v1/courses/{courseId}/aliases.parameters[4].$ref: '#/parameters/pp'
paths./v1/courses/{courseId}/aliases.parameters[5].$ref: '#/parameters/fields'
paths./v1/courses/{courseId}/aliases.parameters[6].$ref: '#/parameters/alt'
paths./v1/courses/{courseId}/aliases.parameters[7].$ref: '#/parameters/$.xgafv'
paths./v1/courses/{courseId}/aliases.parameters[8].$ref: '#/parameters/callback'
paths./v1/courses/{courseId}/aliases.parameters[9].$ref: '#/parameters/oauth_token'
paths./v1/courses/{courseId}/aliases.parameters[10].$ref: '#/parameters/uploadType'
paths./v1/courses/{courseId}/aliases.parameters[11].$ref: '#/parameters/bearer_token'
paths./v1/courses/{courseId}/aliases.parameters[12].$ref: '#/parameters/upload_protocol'
paths./v1/courses/{courseId}/aliases.post.description: |-
  Creates an alias for a course.

  This method returns the following error codes:

  * `PERMISSION_DENIED` if the requesting user is not permitted to create the
  alias or for access errors.
  * `NOT_FOUND` if the course does not exist.
  * `ALREADY_EXISTS` if the alias already exists.
  * `FAILED_PRECONDITION` if the alias requested does not make sense for the
    requesting user or course (for example, if a user not in a domain
    attempts to access a domain-scoped alias).
paths./v1/courses/{courseId}/aliases.post.operationId: classroom.courses.aliases.create
paths./v1/courses/{courseId}/aliases.post.parameters.length: 2
paths./v1/courses/{courseId}/aliases.post.parameters[0].description: |-
  Identifier of the course to alias.
  This identifier can be either the Classroom-assigned identifier or an
  alias.
paths./v1/courses/{courseId}/aliases.post.parameters[0].in: path
paths./v1/courses/{courseId}/aliases.post.parameters[0].name: courseId
paths./v1/courses/{courseId}/aliases.post.parameters[0].required: true
paths./v1/courses/{courseId}/aliases.post.parameters[0].type: string
paths./v1/courses/{courseId}/aliases.post.parameters[1].in: body
paths./v1/courses/{courseId}/aliases.post.parameters[1].name: body
paths./v1/courses/{courseId}/aliases.post.parameters[1].schema.$ref: '#/definitions/CourseAlias'
paths./v1/courses/{courseId}/aliases.post.responses.200.description: Successful response
paths./v1/courses/{courseId}/aliases.post.responses.200.schema.$ref: '#/definitions/CourseAlias'
paths./v1/courses/{courseId}/aliases.post.security.length: 1
paths./v1/courses/{courseId}/aliases.post.security[0].Oauth2.length: 1
paths./v1/courses/{courseId}/aliases.post.security[0].Oauth2[0]: https://www.googleapis.com/auth/classroom.courses
paths./v1/courses/{courseId}/aliases.post.tags.length: 1
paths./v1/courses/{courseId}/aliases.post.tags[0]: courses
paths./v1/courses/{courseId}/aliases/{alias}.delete.description: |-
  Deletes an alias of a course.

  This method returns the following error codes:

  * `PERMISSION_DENIED` if the requesting user is not permitted to remove the
  alias or for access errors.
  * `NOT_FOUND` if the alias does not exist.
  * `FAILED_PRECONDITION` if the alias requested does not make sense for the
    requesting user or course (for example, if a user not in a domain
    attempts to delete a domain-scoped alias).
paths./v1/courses/{courseId}/aliases/{alias}.delete.operationId: classroom.courses.aliases.delete
paths./v1/courses/{courseId}/aliases/{alias}.delete.parameters.length: 2
paths./v1/courses/{courseId}/aliases/{alias}.delete.parameters[0].description: |-
  Identifier of the course whose alias should be deleted.
  This identifier can be either the Classroom-assigned identifier or an
  alias.
paths./v1/courses/{courseId}/aliases/{alias}.delete.parameters[0].in: path
paths./v1/courses/{courseId}/aliases/{alias}.delete.parameters[0].name: courseId
paths./v1/courses/{courseId}/aliases/{alias}.delete.parameters[0].required: true
paths./v1/courses/{courseId}/aliases/{alias}.delete.parameters[0].type: string
paths./v1/courses/{courseId}/aliases/{alias}.delete.parameters[1].description: |-
  Alias to delete.
  This may not be the Classroom-assigned identifier.
paths./v1/courses/{courseId}/aliases/{alias}.delete.parameters[1].in: path
paths./v1/courses/{courseId}/aliases/{alias}.delete.parameters[1].name: alias
paths./v1/courses/{courseId}/aliases/{alias}.delete.parameters[1].required: true
paths./v1/courses/{courseId}/aliases/{alias}.delete.parameters[1].type: string
paths./v1/courses/{courseId}/aliases/{alias}.delete.responses.200.description: Successful
  response
paths./v1/courses/{courseId}/aliases/{alias}.delete.responses.200.schema.$ref: '#/definitions/Empty'
paths./v1/courses/{courseId}/aliases/{alias}.delete.security.length: 1
paths./v1/courses/{courseId}/aliases/{alias}.delete.security[0].Oauth2.length: 1
paths./v1/courses/{courseId}/aliases/{alias}.delete.security[0].Oauth2[0]: https://www.googleapis.com/auth/classroom.courses
paths./v1/courses/{courseId}/aliases/{alias}.delete.tags.length: 1
paths./v1/courses/{courseId}/aliases/{alias}.delete.tags[0]: courses
paths./v1/courses/{courseId}/aliases/{alias}.parameters.length: 13
paths./v1/courses/{courseId}/aliases/{alias}.parameters[0].$ref: '#/parameters/access_token'
paths./v1/courses/{courseId}/aliases/{alias}.parameters[1].$ref: '#/parameters/prettyPrint'
paths./v1/courses/{courseId}/aliases/{alias}.parameters[2].$ref: '#/parameters/key'
paths./v1/courses/{courseId}/aliases/{alias}.parameters[3].$ref: '#/parameters/quotaUser'
paths./v1/courses/{courseId}/aliases/{alias}.parameters[4].$ref: '#/parameters/pp'
paths./v1/courses/{courseId}/aliases/{alias}.parameters[5].$ref: '#/parameters/fields'
paths./v1/courses/{courseId}/aliases/{alias}.parameters[6].$ref: '#/parameters/alt'
paths./v1/courses/{courseId}/aliases/{alias}.parameters[7].$ref: '#/parameters/$.xgafv'
paths./v1/courses/{courseId}/aliases/{alias}.parameters[8].$ref: '#/parameters/callback'
paths./v1/courses/{courseId}/aliases/{alias}.parameters[9].$ref: '#/parameters/oauth_token'
paths./v1/courses/{courseId}/aliases/{alias}.parameters[10].$ref: '#/parameters/uploadType'
paths./v1/courses/{courseId}/aliases/{alias}.parameters[11].$ref: '#/parameters/bearer_token'
paths./v1/courses/{courseId}/aliases/{alias}.parameters[12].$ref: '#/parameters/upload_protocol'
paths./v1/courses/{courseId}/announcements.get.description: |-
  Returns a list of announcements that the requester is permitted to view.

  Course students may only view `PUBLISHED` announcements. Course teachers
  and domain administrators may view all announcements.

  This method returns the following error codes:

  * `PERMISSION_DENIED` if the requesting user is not permitted to access
  the requested course or for access errors.
  * `INVALID_ARGUMENT` if the request is malformed.
  * `NOT_FOUND` if the requested course does not exist.
paths./v1/courses/{courseId}/announcements.get.operationId: classroom.courses.announcements.list
paths./v1/courses/{courseId}/announcements.get.parameters.length: 5
paths./v1/courses/{courseId}/announcements.get.parameters[0].collectionFormat: multi
paths./v1/courses/{courseId}/announcements.get.parameters[0].description: |-
  Restriction on the `state` of announcements returned.
  If this argument is left unspecified, the default value is `PUBLISHED`.
paths./v1/courses/{courseId}/announcements.get.parameters[0].in: query
paths./v1/courses/{courseId}/announcements.get.parameters[0].items.enum.length: 4
paths./v1/courses/{courseId}/announcements.get.parameters[0].items.enum[0]: ANNOUNCEMENT_STATE_UNSPECIFIED
paths./v1/courses/{courseId}/announcements.get.parameters[0].items.enum[1]: PUBLISHED
paths./v1/courses/{courseId}/announcements.get.parameters[0].items.enum[2]: DRAFT
paths./v1/courses/{courseId}/announcements.get.parameters[0].items.enum[3]: DELETED
paths./v1/courses/{courseId}/announcements.get.parameters[0].items.type: string
paths./v1/courses/{courseId}/announcements.get.parameters[0].name: announcementStates
paths./v1/courses/{courseId}/announcements.get.parameters[0].type: array
paths./v1/courses/{courseId}/announcements.get.parameters[1].description: |-
  Identifier of the course.
  This identifier can be either the Classroom-assigned identifier or an
  alias.
paths./v1/courses/{courseId}/announcements.get.parameters[1].in: path
paths./v1/courses/{courseId}/announcements.get.parameters[1].name: courseId
paths./v1/courses/{courseId}/announcements.get.parameters[1].required: true
paths./v1/courses/{courseId}/announcements.get.parameters[1].type: string
paths./v1/courses/{courseId}/announcements.get.parameters[2].description: |-
  Optional sort ordering for results. A comma-separated list of fields with
  an optional sort direction keyword. Supported field is `updateTime`.
  Supported direction keywords are `asc` and `desc`.
  If not specified, `updateTime desc` is the default behavior.
  Examples: `updateTime asc`, `updateTime`
paths./v1/courses/{courseId}/announcements.get.parameters[2].in: query
paths./v1/courses/{courseId}/announcements.get.parameters[2].name: orderBy
paths./v1/courses/{courseId}/announcements.get.parameters[2].type: string
paths./v1/courses/{courseId}/announcements.get.parameters[3].description: |-
  Maximum number of items to return. Zero or unspecified indicates that the
  server may assign a maximum.

  The server may return fewer than the specified number of results.
paths./v1/courses/{courseId}/announcements.get.parameters[3].in: query
paths./v1/courses/{courseId}/announcements.get.parameters[3].name: pageSize
paths./v1/courses/{courseId}/announcements.get.parameters[3].type: integer
paths./v1/courses/{courseId}/announcements.get.parameters[4].description: |-
  nextPageToken
  value returned from a previous
  list call,
  indicating that the subsequent page of results should be returned.

  The list request
  must be otherwise identical to the one that resulted in this token.
paths./v1/courses/{courseId}/announcements.get.parameters[4].in: query
paths./v1/courses/{courseId}/announcements.get.parameters[4].name: pageToken
paths./v1/courses/{courseId}/announcements.get.parameters[4].type: string
paths./v1/courses/{courseId}/announcements.get.responses.200.description: Successful
  response
paths./v1/courses/{courseId}/announcements.get.responses.200.schema.$ref: '#/definitions/ListAnnouncementsResponse'
paths./v1/courses/{courseId}/announcements.get.security.length: 2
paths./v1/courses/{courseId}/announcements.get.security[0].Oauth2.length: 1
paths./v1/courses/{courseId}/announcements.get.security[0].Oauth2[0]: https://www.googleapis.com/auth/classroom.announcements
paths./v1/courses/{courseId}/announcements.get.security[1].Oauth2.length: 1
paths./v1/courses/{courseId}/announcements.get.security[1].Oauth2[0]: https://www.googleapis.com/auth/classroom.announcements.readonly
paths./v1/courses/{courseId}/announcements.get.tags.length: 1
paths./v1/courses/{courseId}/announcements.get.tags[0]: courses
paths./v1/courses/{courseId}/announcements.parameters.length: 13
paths./v1/courses/{courseId}/announcements.parameters[0].$ref: '#/parameters/$.xgafv'
paths./v1/courses/{courseId}/announcements.parameters[1].$ref: '#/parameters/access_token'
paths./v1/courses/{courseId}/announcements.parameters[2].$ref: '#/parameters/alt'
paths./v1/courses/{courseId}/announcements.parameters[3].$ref: '#/parameters/bearer_token'
paths./v1/courses/{courseId}/announcements.parameters[4].$ref: '#/parameters/callback'
paths./v1/courses/{courseId}/announcements.parameters[5].$ref: '#/parameters/fields'
paths./v1/courses/{courseId}/announcements.parameters[6].$ref: '#/parameters/key'
paths./v1/courses/{courseId}/announcements.parameters[7].$ref: '#/parameters/oauth_token'
paths./v1/courses/{courseId}/announcements.parameters[8].$ref: '#/parameters/pp'
paths./v1/courses/{courseId}/announcements.parameters[9].$ref: '#/parameters/prettyPrint'
paths./v1/courses/{courseId}/announcements.parameters[10].$ref: '#/parameters/quotaUser'
paths./v1/courses/{courseId}/announcements.parameters[11].$ref: '#/parameters/uploadType'
paths./v1/courses/{courseId}/announcements.parameters[12].$ref: '#/parameters/upload_protocol'
paths./v1/courses/{courseId}/announcements.post.description: |-
  Creates an announcement.

  This method returns the following error codes:

  * `PERMISSION_DENIED` if the requesting user is not permitted to access the
  requested course, create announcements in the requested course, share a
  Drive attachment, or for access errors.
  * `INVALID_ARGUMENT` if the request is malformed.
  * `NOT_FOUND` if the requested course does not exist.
  * `FAILED_PRECONDITION` for the following request error:
      * AttachmentNotVisible
paths./v1/courses/{courseId}/announcements.post.operationId: classroom.courses.announcements.create
paths./v1/courses/{courseId}/announcements.post.parameters.length: 2
paths./v1/courses/{courseId}/announcements.post.parameters[0].in: body
paths./v1/courses/{courseId}/announcements.post.parameters[0].name: body
paths./v1/courses/{courseId}/announcements.post.parameters[0].schema.$ref: '#/definitions/Announcement'
paths./v1/courses/{courseId}/announcements.post.parameters[1].description: |-
  Identifier of the course.
  This identifier can be either the Classroom-assigned identifier or an
  alias.
paths./v1/courses/{courseId}/announcements.post.parameters[1].in: path
paths./v1/courses/{courseId}/announcements.post.parameters[1].name: courseId
paths./v1/courses/{courseId}/announcements.post.parameters[1].required: true
paths./v1/courses/{courseId}/announcements.post.parameters[1].type: string
paths./v1/courses/{courseId}/announcements.post.responses.200.description: Successful
  response
paths./v1/courses/{courseId}/announcements.post.responses.200.schema.$ref: '#/definitions/Announcement'
paths./v1/courses/{courseId}/announcements.post.security.length: 1
paths./v1/courses/{courseId}/announcements.post.security[0].Oauth2.length: 1
paths./v1/courses/{courseId}/announcements.post.security[0].Oauth2[0]: https://www.googleapis.com/auth/classroom.announcements
paths./v1/courses/{courseId}/announcements.post.tags.length: 1
paths./v1/courses/{courseId}/announcements.post.tags[0]: courses
paths./v1/courses/{courseId}/announcements/{id}.delete.description: |-
  Deletes an announcement.

  This request must be made by the Developer Console project of the
  [OAuth client ID](https://support.google.com/cloud/answer/6158849) used to
  create the corresponding announcement item.

  This method returns the following error codes:

  * `PERMISSION_DENIED` if the requesting developer project did not create
  the corresponding announcement, if the requesting user is not permitted
  to delete the requested course or for access errors.
  * `FAILED_PRECONDITION` if the requested announcement has already been
  deleted.
  * `NOT_FOUND` if no course exists with the requested ID.
paths./v1/courses/{courseId}/announcements/{id}.delete.operationId: classroom.courses.announcements.delete
paths./v1/courses/{courseId}/announcements/{id}.delete.parameters.length: 2
paths./v1/courses/{courseId}/announcements/{id}.delete.parameters[0].description: |-
  Identifier of the course.
  This identifier can be either the Classroom-assigned identifier or an
  alias.
paths./v1/courses/{courseId}/announcements/{id}.delete.parameters[0].in: path
paths./v1/courses/{courseId}/announcements/{id}.delete.parameters[0].name: courseId
paths./v1/courses/{courseId}/announcements/{id}.delete.parameters[0].required: true
paths./v1/courses/{courseId}/announcements/{id}.delete.parameters[0].type: string
paths./v1/courses/{courseId}/announcements/{id}.delete.parameters[1].description: |-
  Identifier of the announcement to delete.
  This identifier is a Classroom-assigned identifier.
paths./v1/courses/{courseId}/announcements/{id}.delete.parameters[1].in: path
paths./v1/courses/{courseId}/announcements/{id}.delete.parameters[1].name: id
paths./v1/courses/{courseId}/announcements/{id}.delete.parameters[1].required: true
paths./v1/courses/{courseId}/announcements/{id}.delete.parameters[1].type: string
paths./v1/courses/{courseId}/announcements/{id}.delete.responses.200.description: Successful
  response
paths./v1/courses/{courseId}/announcements/{id}.delete.responses.200.schema.$ref: '#/definitions/Empty'
paths./v1/courses/{courseId}/announcements/{id}.delete.security.length: 1
paths./v1/courses/{courseId}/announcements/{id}.delete.security[0].Oauth2.length: 1
paths./v1/courses/{courseId}/announcements/{id}.delete.security[0].Oauth2[0]: https://www.googleapis.com/auth/classroom.announcements
paths./v1/courses/{courseId}/announcements/{id}.delete.tags.length: 1
paths./v1/courses/{courseId}/announcements/{id}.delete.tags[0]: courses
paths./v1/courses/{courseId}/announcements/{id}.get.description: |-
  Returns an announcement.

  This method returns the following error codes:

  * `PERMISSION_DENIED` if the requesting user is not permitted to access the
  requested course or announcement, or for access errors.
  * `INVALID_ARGUMENT` if the request is malformed.
  * `NOT_FOUND` if the requested course or announcement does not exist.
paths./v1/courses/{courseId}/announcements/{id}.get.operationId: classroom.courses.announcements.get
paths./v1/courses/{courseId}/announcements/{id}.get.parameters.length: 2
paths./v1/courses/{courseId}/announcements/{id}.get.parameters[0].description: |-
  Identifier of the course.
  This identifier can be either the Classroom-assigned identifier or an
  alias.
paths./v1/courses/{courseId}/announcements/{id}.get.parameters[0].in: path
paths./v1/courses/{courseId}/announcements/{id}.get.parameters[0].name: courseId
paths./v1/courses/{courseId}/announcements/{id}.get.parameters[0].required: true
paths./v1/courses/{courseId}/announcements/{id}.get.parameters[0].type: string
paths./v1/courses/{courseId}/announcements/{id}.get.parameters[1].description: Identifier
  of the announcement.
paths./v1/courses/{courseId}/announcements/{id}.get.parameters[1].in: path
paths./v1/courses/{courseId}/announcements/{id}.get.parameters[1].name: id
paths./v1/courses/{courseId}/announcements/{id}.get.parameters[1].required: true
paths./v1/courses/{courseId}/announcements/{id}.get.parameters[1].type: string
paths./v1/courses/{courseId}/announcements/{id}.get.responses.200.description: Successful
  response
paths./v1/courses/{courseId}/announcements/{id}.get.responses.200.schema.$ref: '#/definitions/Announcement'
paths./v1/courses/{courseId}/announcements/{id}.get.security.length: 2
paths./v1/courses/{courseId}/announcements/{id}.get.security[0].Oauth2.length: 1
paths./v1/courses/{courseId}/announcements/{id}.get.security[0].Oauth2[0]: https://www.googleapis.com/auth/classroom.announcements
paths./v1/courses/{courseId}/announcements/{id}.get.security[1].Oauth2.length: 1
paths./v1/courses/{courseId}/announcements/{id}.get.security[1].Oauth2[0]: https://www.googleapis.com/auth/classroom.announcements.readonly
paths./v1/courses/{courseId}/announcements/{id}.get.tags.length: 1
paths./v1/courses/{courseId}/announcements/{id}.get.tags[0]: courses
paths./v1/courses/{courseId}/announcements/{id}.parameters.length: 13
paths./v1/courses/{courseId}/announcements/{id}.parameters[0].$ref: '#/parameters/$.xgafv'
paths./v1/courses/{courseId}/announcements/{id}.parameters[1].$ref: '#/parameters/access_token'
paths./v1/courses/{courseId}/announcements/{id}.parameters[2].$ref: '#/parameters/alt'
paths./v1/courses/{courseId}/announcements/{id}.parameters[3].$ref: '#/parameters/bearer_token'
paths./v1/courses/{courseId}/announcements/{id}.parameters[4].$ref: '#/parameters/callback'
paths./v1/courses/{courseId}/announcements/{id}.parameters[5].$ref: '#/parameters/fields'
paths./v1/courses/{courseId}/announcements/{id}.parameters[6].$ref: '#/parameters/key'
paths./v1/courses/{courseId}/announcements/{id}.parameters[7].$ref: '#/parameters/oauth_token'
paths./v1/courses/{courseId}/announcements/{id}.parameters[8].$ref: '#/parameters/pp'
paths./v1/courses/{courseId}/announcements/{id}.parameters[9].$ref: '#/parameters/prettyPrint'
paths./v1/courses/{courseId}/announcements/{id}.parameters[10].$ref: '#/parameters/quotaUser'
paths./v1/courses/{courseId}/announcements/{id}.parameters[11].$ref: '#/parameters/uploadType'
paths./v1/courses/{courseId}/announcements/{id}.parameters[12].$ref: '#/parameters/upload_protocol'
paths./v1/courses/{courseId}/announcements/{id}.patch.description: |-
  Updates one or more fields of an announcement.

  This method returns the following error codes:

  * `PERMISSION_DENIED` if the requesting developer project did not create
  the corresponding announcement or for access errors.
  * `INVALID_ARGUMENT` if the request is malformed.
  * `FAILED_PRECONDITION` if the requested announcement has already been
  deleted.
  * `NOT_FOUND` if the requested course or announcement does not exist
paths./v1/courses/{courseId}/announcements/{id}.patch.operationId: classroom.courses.announcements.patch
paths./v1/courses/{courseId}/announcements/{id}.patch.parameters.length: 4
paths./v1/courses/{courseId}/announcements/{id}.patch.parameters[0].in: body
paths./v1/courses/{courseId}/announcements/{id}.patch.parameters[0].name: body
paths./v1/courses/{courseId}/announcements/{id}.patch.parameters[0].schema.$ref: '#/definitions/Announcement'
paths./v1/courses/{courseId}/announcements/{id}.patch.parameters[1].description: |-
  Identifier of the course.
  This identifier can be either the Classroom-assigned identifier or an
  alias.
paths./v1/courses/{courseId}/announcements/{id}.patch.parameters[1].in: path
paths./v1/courses/{courseId}/announcements/{id}.patch.parameters[1].name: courseId
paths./v1/courses/{courseId}/announcements/{id}.patch.parameters[1].required: true
paths./v1/courses/{courseId}/announcements/{id}.patch.parameters[1].type: string
paths./v1/courses/{courseId}/announcements/{id}.patch.parameters[2].description: Identifier
  of the announcement.
paths./v1/courses/{courseId}/announcements/{id}.patch.parameters[2].in: path
paths./v1/courses/{courseId}/announcements/{id}.patch.parameters[2].name: id
paths./v1/courses/{courseId}/announcements/{id}.patch.parameters[2].required: true
paths./v1/courses/{courseId}/announcements/{id}.patch.parameters[2].type: string
paths./v1/courses/{courseId}/announcements/{id}.patch.parameters[3].description: |-
  Mask that identifies which fields on the announcement to update.
  This field is required to do an update. The update fails if invalid
  fields are specified. If a field supports empty values, it can be cleared
  by specifying it in the update mask and not in the Announcement object. If
  a field that does not support empty values is included in the update mask
  and not set in the Announcement object, an `INVALID_ARGUMENT` error will be
  returned.

  The following fields may be specified by teachers:

  * `text`
  * `state`
  * `scheduled_time`
paths./v1/courses/{courseId}/announcements/{id}.patch.parameters[3].in: query
paths./v1/courses/{courseId}/announcements/{id}.patch.parameters[3].name: updateMask
paths./v1/courses/{courseId}/announcements/{id}.patch.parameters[3].type: string
paths./v1/courses/{courseId}/announcements/{id}.patch.responses.200.description: Successful
  response
paths./v1/courses/{courseId}/announcements/{id}.patch.responses.200.schema.$ref: '#/definitions/Announcement'
paths./v1/courses/{courseId}/announcements/{id}.patch.security.length: 1
paths./v1/courses/{courseId}/announcements/{id}.patch.security[0].Oauth2.length: 1
paths./v1/courses/{courseId}/announcements/{id}.patch.security[0].Oauth2[0]: https://www.googleapis.com/auth/classroom.announcements
paths./v1/courses/{courseId}/announcements/{id}.patch.tags.length: 1
paths./v1/courses/{courseId}/announcements/{id}.patch.tags[0]: courses
paths./v1/courses/{courseId}/announcements/{id}:modifyAssignees.parameters.length: 13
paths./v1/courses/{courseId}/announcements/{id}:modifyAssignees.parameters[0].$ref: '#/parameters/$.xgafv'
paths./v1/courses/{courseId}/announcements/{id}:modifyAssignees.parameters[1].$ref: '#/parameters/access_token'
paths./v1/courses/{courseId}/announcements/{id}:modifyAssignees.parameters[2].$ref: '#/parameters/alt'
paths./v1/courses/{courseId}/announcements/{id}:modifyAssignees.parameters[3].$ref: '#/parameters/bearer_token'
paths./v1/courses/{courseId}/announcements/{id}:modifyAssignees.parameters[4].$ref: '#/parameters/callback'
paths./v1/courses/{courseId}/announcements/{id}:modifyAssignees.parameters[5].$ref: '#/parameters/fields'
paths./v1/courses/{courseId}/announcements/{id}:modifyAssignees.parameters[6].$ref: '#/parameters/key'
paths./v1/courses/{courseId}/announcements/{id}:modifyAssignees.parameters[7].$ref: '#/parameters/oauth_token'
paths./v1/courses/{courseId}/announcements/{id}:modifyAssignees.parameters[8].$ref: '#/parameters/pp'
paths./v1/courses/{courseId}/announcements/{id}:modifyAssignees.parameters[9].$ref: '#/parameters/prettyPrint'
paths./v1/courses/{courseId}/announcements/{id}:modifyAssignees.parameters[10].$ref: '#/parameters/quotaUser'
paths./v1/courses/{courseId}/announcements/{id}:modifyAssignees.parameters[11].$ref: '#/parameters/uploadType'
paths./v1/courses/{courseId}/announcements/{id}:modifyAssignees.parameters[12].$ref: '#/parameters/upload_protocol'
paths./v1/courses/{courseId}/announcements/{id}:modifyAssignees.post.description: |-
  Modifies assignee mode and options of an announcement.

  Only a teacher of the course that contains the announcement may
  call this method.

  This method returns the following error codes:

  * `PERMISSION_DENIED` if the requesting user is not permitted to access the
  requested course or course work or for access errors.
  * `INVALID_ARGUMENT` if the request is malformed.
  * `NOT_FOUND` if the requested course or course work does not exist.
paths./v1/courses/{courseId}/announcements/{id}:modifyAssignees.post.operationId: classroom.courses.announcements.modifyAssignees
paths./v1/courses/{courseId}/announcements/{id}:modifyAssignees.post.parameters.length: 3
paths./v1/courses/{courseId}/announcements/{id}:modifyAssignees.post.parameters[0].in: body
paths./v1/courses/{courseId}/announcements/{id}:modifyAssignees.post.parameters[0].name: body
paths./v1/courses/{courseId}/announcements/{id}:modifyAssignees.post.parameters[0].schema.$ref: '#/definitions/ModifyAnnouncementAssigneesRequest'
paths./v1/courses/{courseId}/announcements/{id}:modifyAssignees.post.parameters[1].description: |-
  Identifier of the course.
  This identifier can be either the Classroom-assigned identifier or an
  alias.
paths./v1/courses/{courseId}/announcements/{id}:modifyAssignees.post.parameters[1].in: path
paths./v1/courses/{courseId}/announcements/{id}:modifyAssignees.post.parameters[1].name: courseId
paths./v1/courses/{courseId}/announcements/{id}:modifyAssignees.post.parameters[1].required: true
paths./v1/courses/{courseId}/announcements/{id}:modifyAssignees.post.parameters[1].type: string
paths./v1/courses/{courseId}/announcements/{id}:modifyAssignees.post.parameters[2].description: Identifier
  of the announcement.
paths./v1/courses/{courseId}/announcements/{id}:modifyAssignees.post.parameters[2].in: path
paths./v1/courses/{courseId}/announcements/{id}:modifyAssignees.post.parameters[2].name: id
paths./v1/courses/{courseId}/announcements/{id}:modifyAssignees.post.parameters[2].required: true
paths./v1/courses/{courseId}/announcements/{id}:modifyAssignees.post.parameters[2].type: string
paths./v1/courses/{courseId}/announcements/{id}:modifyAssignees.post.responses.200.description: Successful
  response
paths./v1/courses/{courseId}/announcements/{id}:modifyAssignees.post.responses.200.schema.$ref: '#/definitions/Announcement'
paths./v1/courses/{courseId}/announcements/{id}:modifyAssignees.post.security.length: 1
paths./v1/courses/{courseId}/announcements/{id}:modifyAssignees.post.security[0].Oauth2.length: 1
paths./v1/courses/{courseId}/announcements/{id}:modifyAssignees.post.security[0].Oauth2[0]: https://www.googleapis.com/auth/classroom.announcements
paths./v1/courses/{courseId}/announcements/{id}:modifyAssignees.post.tags.length: 1
paths./v1/courses/{courseId}/announcements/{id}:modifyAssignees.post.tags[0]: courses
paths./v1/courses/{courseId}/courseWork.get.description: |-
  Returns a list of course work that the requester is permitted to view.

  Course students may only view `PUBLISHED` course work. Course teachers
  and domain administrators may view all course work.

  This method returns the following error codes:

  * `PERMISSION_DENIED` if the requesting user is not permitted to access
  the requested course or for access errors.
  * `INVALID_ARGUMENT` if the request is malformed.
  * `NOT_FOUND` if the requested course does not exist.
paths./v1/courses/{courseId}/courseWork.get.operationId: classroom.courses.courseWork.list
paths./v1/courses/{courseId}/courseWork.get.parameters.length: 5
paths./v1/courses/{courseId}/courseWork.get.parameters[0].description: |-
  Identifier of the course.
  This identifier can be either the Classroom-assigned identifier or an
  alias.
paths./v1/courses/{courseId}/courseWork.get.parameters[0].in: path
paths./v1/courses/{courseId}/courseWork.get.parameters[0].name: courseId
paths./v1/courses/{courseId}/courseWork.get.parameters[0].required: true
paths./v1/courses/{courseId}/courseWork.get.parameters[0].type: string
paths./v1/courses/{courseId}/courseWork.get.parameters[1].collectionFormat: multi
paths./v1/courses/{courseId}/courseWork.get.parameters[1].description: |-
  Restriction on the work status to return. Only courseWork that matches
  is returned. If unspecified, items with a work status of `PUBLISHED`
  is returned.
paths./v1/courses/{courseId}/courseWork.get.parameters[1].in: query
paths./v1/courses/{courseId}/courseWork.get.parameters[1].items.enum.length: 4
paths./v1/courses/{courseId}/courseWork.get.parameters[1].items.enum[0]: COURSE_WORK_STATE_UNSPECIFIED
paths./v1/courses/{courseId}/courseWork.get.parameters[1].items.enum[1]: PUBLISHED
paths./v1/courses/{courseId}/courseWork.get.parameters[1].items.enum[2]: DRAFT
paths./v1/courses/{courseId}/courseWork.get.parameters[1].items.enum[3]: DELETED
paths./v1/courses/{courseId}/courseWork.get.parameters[1].items.type: string
paths./v1/courses/{courseId}/courseWork.get.parameters[1].name: courseWorkStates
paths./v1/courses/{courseId}/courseWork.get.parameters[1].type: array
paths./v1/courses/{courseId}/courseWork.get.parameters[2].description: |-
  Maximum number of items to return. Zero or unspecified indicates that the
  server may assign a maximum.

  The server may return fewer than the specified number of results.
paths./v1/courses/{courseId}/courseWork.get.parameters[2].in: query
paths./v1/courses/{courseId}/courseWork.get.parameters[2].name: pageSize
paths./v1/courses/{courseId}/courseWork.get.parameters[2].type: integer
paths./v1/courses/{courseId}/courseWork.get.parameters[3].description: |-
  Optional sort ordering for results. A comma-separated list of fields with
  an optional sort direction keyword. Supported fields are `updateTime`
  and `dueDate`. Supported direction keywords are `asc` and `desc`.
  If not specified, `updateTime desc` is the default behavior.
  Examples: `dueDate asc,updateTime desc`, `updateTime,dueDate desc`
paths./v1/courses/{courseId}/courseWork.get.parameters[3].in: query
paths./v1/courses/{courseId}/courseWork.get.parameters[3].name: orderBy
paths./v1/courses/{courseId}/courseWork.get.parameters[3].type: string
paths./v1/courses/{courseId}/courseWork.get.parameters[4].description: |-
  nextPageToken
  value returned from a previous
  list call,
  indicating that the subsequent page of results should be returned.

  The list request
  must be otherwise identical to the one that resulted in this token.
paths./v1/courses/{courseId}/courseWork.get.parameters[4].in: query
paths./v1/courses/{courseId}/courseWork.get.parameters[4].name: pageToken
paths./v1/courses/{courseId}/courseWork.get.parameters[4].type: string
paths./v1/courses/{courseId}/courseWork.get.responses.200.description: Successful
  response
paths./v1/courses/{courseId}/courseWork.get.responses.200.schema.$ref: '#/definitions/ListCourseWorkResponse'
paths./v1/courses/{courseId}/courseWork.get.security.length: 4
paths./v1/courses/{courseId}/courseWork.get.security[0].Oauth2.length: 1
paths./v1/courses/{courseId}/courseWork.get.security[0].Oauth2[0]: https://www.googleapis.com/auth/classroom.coursework.me
paths./v1/courses/{courseId}/courseWork.get.security[1].Oauth2.length: 1
paths./v1/courses/{courseId}/courseWork.get.security[1].Oauth2[0]: https://www.googleapis.com/auth/classroom.coursework.me.readonly
paths./v1/courses/{courseId}/courseWork.get.security[2].Oauth2.length: 1
paths./v1/courses/{courseId}/courseWork.get.security[2].Oauth2[0]: https://www.googleapis.com/auth/classroom.coursework.students
paths./v1/courses/{courseId}/courseWork.get.security[3].Oauth2.length: 1
paths./v1/courses/{courseId}/courseWork.get.security[3].Oauth2[0]: https://www.googleapis.com/auth/classroom.coursework.students.readonly
paths./v1/courses/{courseId}/courseWork.get.tags.length: 1
paths./v1/courses/{courseId}/courseWork.get.tags[0]: courses
paths./v1/courses/{courseId}/courseWork.parameters.length: 13
paths./v1/courses/{courseId}/courseWork.parameters[0].$ref: '#/parameters/access_token'
paths./v1/courses/{courseId}/courseWork.parameters[1].$ref: '#/parameters/prettyPrint'
paths./v1/courses/{courseId}/courseWork.parameters[2].$ref: '#/parameters/key'
paths./v1/courses/{courseId}/courseWork.parameters[3].$ref: '#/parameters/quotaUser'
paths./v1/courses/{courseId}/courseWork.parameters[4].$ref: '#/parameters/pp'
paths./v1/courses/{courseId}/courseWork.parameters[5].$ref: '#/parameters/fields'
paths./v1/courses/{courseId}/courseWork.parameters[6].$ref: '#/parameters/alt'
paths./v1/courses/{courseId}/courseWork.parameters[7].$ref: '#/parameters/$.xgafv'
paths./v1/courses/{courseId}/courseWork.parameters[8].$ref: '#/parameters/callback'
paths./v1/courses/{courseId}/courseWork.parameters[9].$ref: '#/parameters/oauth_token'
paths./v1/courses/{courseId}/courseWork.parameters[10].$ref: '#/parameters/uploadType'
paths./v1/courses/{courseId}/courseWork.parameters[11].$ref: '#/parameters/bearer_token'
paths./v1/courses/{courseId}/courseWork.parameters[12].$ref: '#/parameters/upload_protocol'
paths./v1/courses/{courseId}/courseWork.post.description: |-
  Creates course work.

  The resulting course work (and corresponding student submissions) are
  associated with the Developer Console project of the
  [OAuth client ID](https://support.google.com/cloud/answer/6158849) used to
  make the request. Classroom API requests to modify course work and student
  submissions must be made with an OAuth client ID from the associated
  Developer Console project.

  This method returns the following error codes:

  * `PERMISSION_DENIED` if the requesting user is not permitted to access the
  requested course, create course work in the requested course, share a
  Drive attachment, or for access errors.
  * `INVALID_ARGUMENT` if the request is malformed.
  * `NOT_FOUND` if the requested course does not exist.
  * `FAILED_PRECONDITION` for the following request error:
      * AttachmentNotVisible
paths./v1/courses/{courseId}/courseWork.post.operationId: classroom.courses.courseWork.create
paths./v1/courses/{courseId}/courseWork.post.parameters.length: 2
paths./v1/courses/{courseId}/courseWork.post.parameters[0].description: |-
  Identifier of the course.
  This identifier can be either the Classroom-assigned identifier or an
  alias.
paths./v1/courses/{courseId}/courseWork.post.parameters[0].in: path
paths./v1/courses/{courseId}/courseWork.post.parameters[0].name: courseId
paths./v1/courses/{courseId}/courseWork.post.parameters[0].required: true
paths./v1/courses/{courseId}/courseWork.post.parameters[0].type: string
paths./v1/courses/{courseId}/courseWork.post.parameters[1].in: body
paths./v1/courses/{courseId}/courseWork.post.parameters[1].name: body
paths./v1/courses/{courseId}/courseWork.post.parameters[1].schema.$ref: '#/definitions/CourseWork'
paths./v1/courses/{courseId}/courseWork.post.responses.200.description: Successful
  response
paths./v1/courses/{courseId}/courseWork.post.responses.200.schema.$ref: '#/definitions/CourseWork'
paths./v1/courses/{courseId}/courseWork.post.security.length: 1
paths./v1/courses/{courseId}/courseWork.post.security[0].Oauth2.length: 1
paths./v1/courses/{courseId}/courseWork.post.security[0].Oauth2[0]: https://www.googleapis.com/auth/classroom.coursework.students
paths./v1/courses/{courseId}/courseWork.post.tags.length: 1
paths./v1/courses/{courseId}/courseWork.post.tags[0]: courses
paths./v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions.get.description: |-
  Returns a list of student submissions that the requester is permitted to
  view, factoring in the OAuth scopes of the request.
  `-` may be specified as the `course_work_id` to include student
  submissions for multiple course work items.

  Course students may only view their own work. Course teachers
  and domain administrators may view all student submissions.

  This method returns the following error codes:

  * `PERMISSION_DENIED` if the requesting user is not permitted to access the
  requested course or course work, or for access errors.
  * `INVALID_ARGUMENT` if the request is malformed.
  * `NOT_FOUND` if the requested course does not exist.
paths./v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions.get.operationId: classroom.courses.courseWork.studentSubmissions.list
paths./v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions.get.parameters.length: 7
paths./v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions.get.parameters[0].description: |-
  Identifier of the course.
  This identifier can be either the Classroom-assigned identifier or an
  alias.
paths./v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions.get.parameters[0].in: path
paths./v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions.get.parameters[0].name: courseId
paths./v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions.get.parameters[0].required: true
paths./v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions.get.parameters[0].type: string
paths./v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions.get.parameters[1].description: |-
  Identifier of the student work to request.
  This may be set to the string literal `"-"` to request student work for
  all course work in the specified course.
paths./v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions.get.parameters[1].in: path
paths./v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions.get.parameters[1].name: courseWorkId
paths./v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions.get.parameters[1].required: true
paths./v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions.get.parameters[1].type: string
paths./v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions.get.parameters[2].description: |-
  Requested lateness value. If specified, returned student submissions are
  restricted by the requested value.
  If unspecified, submissions are returned regardless of `late` value.
paths./v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions.get.parameters[2].enum.length: 3
paths./v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions.get.parameters[2].enum[0]: LATE_VALUES_UNSPECIFIED
paths./v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions.get.parameters[2].enum[1]: LATE_ONLY
paths./v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions.get.parameters[2].enum[2]: NOT_LATE_ONLY
paths./v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions.get.parameters[2].in: query
paths./v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions.get.parameters[2].name: late
paths./v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions.get.parameters[2].type: string
paths./v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions.get.parameters[3].description: |-
  Maximum number of items to return. Zero or unspecified indicates that the
  server may assign a maximum.

  The server may return fewer than the specified number of results.
paths./v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions.get.parameters[3].in: query
paths./v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions.get.parameters[3].name: pageSize
paths./v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions.get.parameters[3].type: integer
paths./v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions.get.parameters[4].description: |-
  nextPageToken
  value returned from a previous
  list call,
  indicating that the subsequent page of results should be returned.

  The list request
  must be otherwise identical to the one that resulted in this token.
paths./v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions.get.parameters[4].in: query
paths./v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions.get.parameters[4].name: pageToken
paths./v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions.get.parameters[4].type: string
paths./v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions.get.parameters[5].collectionFormat: multi
paths./v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions.get.parameters[5].description: |-
  Requested submission states. If specified, returned student submissions
  match one of the specified submission states.
paths./v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions.get.parameters[5].in: query
paths./v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions.get.parameters[5].items.enum.length: 6
paths./v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions.get.parameters[5].items.enum[0]: SUBMISSION_STATE_UNSPECIFIED
paths./v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions.get.parameters[5].items.enum[1]: NEW
paths./v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions.get.parameters[5].items.enum[2]: CREATED
paths./v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions.get.parameters[5].items.enum[3]: TURNED_IN
paths./v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions.get.parameters[5].items.enum[4]: RETURNED
paths./v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions.get.parameters[5].items.enum[5]: RECLAIMED_BY_STUDENT
paths./v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions.get.parameters[5].items.type: string
paths./v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions.get.parameters[5].name: states
paths./v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions.get.parameters[5].type: array
paths./v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions.get.parameters[6].description: |-
  Optional argument to restrict returned student work to those owned by the
  student with the specified identifier. The identifier can be one of the
  following:

  * the numeric identifier for the user
  * the email address of the user
  * the string literal `"me"`, indicating the requesting user
paths./v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions.get.parameters[6].in: query
paths./v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions.get.parameters[6].name: userId
paths./v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions.get.parameters[6].type: string
paths./v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions.get.responses.200.description: Successful
  response
paths./v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions.get.responses.200.schema.$ref: '#/definitions/ListStudentSubmissionsResponse'
paths./v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions.get.security.length: 6
paths./v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions.get.security[0].Oauth2.length: 1
paths./v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions.get.security[0].Oauth2[0]: https://www.googleapis.com/auth/classroom.coursework.me
paths./v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions.get.security[1].Oauth2.length: 1
paths./v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions.get.security[1].Oauth2[0]: https://www.googleapis.com/auth/classroom.coursework.me.readonly
paths./v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions.get.security[2].Oauth2.length: 1
paths./v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions.get.security[2].Oauth2[0]: https://www.googleapis.com/auth/classroom.coursework.students
paths./v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions.get.security[3].Oauth2.length: 1
paths./v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions.get.security[3].Oauth2[0]: https://www.googleapis.com/auth/classroom.coursework.students.readonly
paths./v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions.get.security[4].Oauth2.length: 1
paths./v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions.get.security[4].Oauth2[0]: https://www.googleapis.com/auth/classroom.student-submissions.me.readonly
paths./v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions.get.security[5].Oauth2.length: 1
paths./v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions.get.security[5].Oauth2[0]: https://www.googleapis.com/auth/classroom.student-submissions.students.readonly
paths./v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions.get.tags.length: 1
paths./v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions.get.tags[0]: courses
paths./v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions.parameters.length: 13
paths./v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions.parameters[0].$ref: '#/parameters/access_token'
paths./v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions.parameters[1].$ref: '#/parameters/prettyPrint'
paths./v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions.parameters[2].$ref: '#/parameters/key'
paths./v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions.parameters[3].$ref: '#/parameters/quotaUser'
paths./v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions.parameters[4].$ref: '#/parameters/pp'
paths./v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions.parameters[5].$ref: '#/parameters/fields'
paths./v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions.parameters[6].$ref: '#/parameters/alt'
paths./v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions.parameters[7].$ref: '#/parameters/$.xgafv'
paths./v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions.parameters[8].$ref: '#/parameters/callback'
paths./v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions.parameters[9].$ref: '#/parameters/oauth_token'
paths./v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions.parameters[10].$ref: '#/parameters/uploadType'
paths./v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions.parameters[11].$ref: '#/parameters/bearer_token'
paths./v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions.parameters[12].$ref: '#/parameters/upload_protocol'
paths./v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions/{id}.get.description: |-
  Returns a student submission.

  * `PERMISSION_DENIED` if the requesting user is not permitted to access the
  requested course, course work, or student submission or for
  access errors.
  * `INVALID_ARGUMENT` if the request is malformed.
  * `NOT_FOUND` if the requested course, course work, or student submission
  does not exist.
paths./v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions/{id}.get.operationId: classroom.courses.courseWork.studentSubmissions.get
paths./v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions/{id}.get.parameters.length: 3
paths./v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions/{id}.get.parameters[0].description: |-
  Identifier of the course.
  This identifier can be either the Classroom-assigned identifier or an
  alias.
paths./v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions/{id}.get.parameters[0].in: path
paths./v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions/{id}.get.parameters[0].name: courseId
paths./v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions/{id}.get.parameters[0].required: true
paths./v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions/{id}.get.parameters[0].type: string
paths./v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions/{id}.get.parameters[1].description: Identifier
  of the course work.
paths./v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions/{id}.get.parameters[1].in: path
paths./v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions/{id}.get.parameters[1].name: courseWorkId
paths./v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions/{id}.get.parameters[1].required: true
paths./v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions/{id}.get.parameters[1].type: string
paths./v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions/{id}.get.parameters[2].description: Identifier
  of the student submission.
paths./v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions/{id}.get.parameters[2].in: path
paths./v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions/{id}.get.parameters[2].name: id
paths./v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions/{id}.get.parameters[2].required: true
paths./v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions/{id}.get.parameters[2].type: string
paths./v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions/{id}.get.responses.200.description: Successful
  response
paths./v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions/{id}.get.responses.200.schema.$ref: '#/definitions/StudentSubmission'
paths./v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions/{id}.get.security.length: 6
paths./v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions/{id}.get.security[0].Oauth2.length: 1
paths./v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions/{id}.get.security[0].Oauth2[0]: https://www.googleapis.com/auth/classroom.coursework.me
paths./v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions/{id}.get.security[1].Oauth2.length: 1
paths./v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions/{id}.get.security[1].Oauth2[0]: https://www.googleapis.com/auth/classroom.coursework.me.readonly
paths./v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions/{id}.get.security[2].Oauth2.length: 1
paths./v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions/{id}.get.security[2].Oauth2[0]: https://www.googleapis.com/auth/classroom.coursework.students
paths./v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions/{id}.get.security[3].Oauth2.length: 1
paths./v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions/{id}.get.security[3].Oauth2[0]: https://www.googleapis.com/auth/classroom.coursework.students.readonly
paths./v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions/{id}.get.security[4].Oauth2.length: 1
paths./v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions/{id}.get.security[4].Oauth2[0]: https://www.googleapis.com/auth/classroom.student-submissions.me.readonly
paths./v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions/{id}.get.security[5].Oauth2.length: 1
paths./v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions/{id}.get.security[5].Oauth2[0]: https://www.googleapis.com/auth/classroom.student-submissions.students.readonly
paths./v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions/{id}.get.tags.length: 1
paths./v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions/{id}.get.tags[0]: courses
paths./v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions/{id}.parameters.length: 13
paths./v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions/{id}.parameters[0].$ref: '#/parameters/access_token'
paths./v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions/{id}.parameters[1].$ref: '#/parameters/prettyPrint'
paths./v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions/{id}.parameters[2].$ref: '#/parameters/key'
paths./v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions/{id}.parameters[3].$ref: '#/parameters/quotaUser'
paths./v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions/{id}.parameters[4].$ref: '#/parameters/pp'
paths./v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions/{id}.parameters[5].$ref: '#/parameters/fields'
paths./v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions/{id}.parameters[6].$ref: '#/parameters/alt'
paths./v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions/{id}.parameters[7].$ref: '#/parameters/$.xgafv'
paths./v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions/{id}.parameters[8].$ref: '#/parameters/callback'
paths./v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions/{id}.parameters[9].$ref: '#/parameters/oauth_token'
paths./v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions/{id}.parameters[10].$ref: '#/parameters/uploadType'
paths./v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions/{id}.parameters[11].$ref: '#/parameters/bearer_token'
paths./v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions/{id}.parameters[12].$ref: '#/parameters/upload_protocol'
paths./v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions/{id}.patch.description: |-
  Updates one or more fields of a student submission.

  See google.classroom.v1.StudentSubmission for details
  of which fields may be updated and who may change them.

  This request must be made by the Developer Console project of the
  [OAuth client ID](https://support.google.com/cloud/answer/6158849) used to
  create the corresponding course work item.

  This method returns the following error codes:

  * `PERMISSION_DENIED` if the requesting developer project did not create
  the corresponding course work, if the user is not permitted to make the
  requested modification to the student submission, or for
  access errors.
  * `INVALID_ARGUMENT` if the request is malformed.
  * `NOT_FOUND` if the requested course, course work, or student submission
  does not exist.
paths./v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions/{id}.patch.operationId: classroom.courses.courseWork.studentSubmissions.patch
paths./v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions/{id}.patch.parameters.length: 5
paths./v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions/{id}.patch.parameters[0].in: body
paths./v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions/{id}.patch.parameters[0].name: body
paths./v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions/{id}.patch.parameters[0].schema.$ref: '#/definitions/StudentSubmission'
paths./v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions/{id}.patch.parameters[1].description: |-
  Identifier of the course.
  This identifier can be either the Classroom-assigned identifier or an
  alias.
paths./v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions/{id}.patch.parameters[1].in: path
paths./v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions/{id}.patch.parameters[1].name: courseId
paths./v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions/{id}.patch.parameters[1].required: true
paths./v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions/{id}.patch.parameters[1].type: string
paths./v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions/{id}.patch.parameters[2].description: Identifier
  of the course work.
paths./v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions/{id}.patch.parameters[2].in: path
paths./v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions/{id}.patch.parameters[2].name: courseWorkId
paths./v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions/{id}.patch.parameters[2].required: true
paths./v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions/{id}.patch.parameters[2].type: string
paths./v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions/{id}.patch.parameters[3].description: Identifier
  of the student submission.
paths./v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions/{id}.patch.parameters[3].in: path
paths./v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions/{id}.patch.parameters[3].name: id
paths./v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions/{id}.patch.parameters[3].required: true
paths./v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions/{id}.patch.parameters[3].type: string
paths./v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions/{id}.patch.parameters[4].description: |-
  Mask that identifies which fields on the student submission to update.
  This field is required to do an update. The update fails if invalid
  fields are specified.

  The following fields may be specified by teachers:

  * `draft_grade`
  * `assigned_grade`
paths./v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions/{id}.patch.parameters[4].in: query
paths./v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions/{id}.patch.parameters[4].name: updateMask
paths./v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions/{id}.patch.parameters[4].type: string
paths./v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions/{id}.patch.responses.200.description: Successful
  response
paths./v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions/{id}.patch.responses.200.schema.$ref: '#/definitions/StudentSubmission'
paths./v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions/{id}.patch.security.length: 2
paths./v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions/{id}.patch.security[0].Oauth2.length: 1
paths./v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions/{id}.patch.security[0].Oauth2[0]: https://www.googleapis.com/auth/classroom.coursework.me
paths./v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions/{id}.patch.security[1].Oauth2.length: 1
paths./v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions/{id}.patch.security[1].Oauth2[0]: https://www.googleapis.com/auth/classroom.coursework.students
paths./v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions/{id}.patch.tags.length: 1
paths./v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions/{id}.patch.tags[0]: courses
paths./v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions/{id}:modifyAttachments.parameters.length: 13
paths./v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions/{id}:modifyAttachments.parameters[0].$ref: '#/parameters/access_token'
paths./v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions/{id}:modifyAttachments.parameters[1].$ref: '#/parameters/prettyPrint'
paths./v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions/{id}:modifyAttachments.parameters[2].$ref: '#/parameters/key'
paths./v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions/{id}:modifyAttachments.parameters[3].$ref: '#/parameters/quotaUser'
paths./v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions/{id}:modifyAttachments.parameters[4].$ref: '#/parameters/pp'
paths./v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions/{id}:modifyAttachments.parameters[5].$ref: '#/parameters/fields'
paths./v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions/{id}:modifyAttachments.parameters[6].$ref: '#/parameters/alt'
paths./v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions/{id}:modifyAttachments.parameters[7].$ref: '#/parameters/$.xgafv'
paths./v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions/{id}:modifyAttachments.parameters[8].$ref: '#/parameters/callback'
paths./v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions/{id}:modifyAttachments.parameters[9].$ref: '#/parameters/oauth_token'
paths./v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions/{id}:modifyAttachments.parameters[10].$ref: '#/parameters/uploadType'
paths./v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions/{id}:modifyAttachments.parameters[11].$ref: '#/parameters/bearer_token'
paths./v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions/{id}:modifyAttachments.parameters[12].$ref: '#/parameters/upload_protocol'
paths./v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions/{id}:modifyAttachments.post.description: |-
  Modifies attachments of student submission.

  Attachments may only be added to student submissions belonging to course
  work objects with a `workType` of `ASSIGNMENT`.

  This request must be made by the Developer Console project of the
  [OAuth client ID](https://support.google.com/cloud/answer/6158849) used to
  create the corresponding course work item.

  This method returns the following error codes:

  * `PERMISSION_DENIED` if the requesting user is not permitted to access the
  requested course or course work, if the user is not permitted to modify
  attachments on the requested student submission, or for
  access errors.
  * `INVALID_ARGUMENT` if the request is malformed.
  * `NOT_FOUND` if the requested course, course work, or student submission
  does not exist.
paths./v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions/{id}:modifyAttachments.post.operationId: classroom.courses.courseWork.studentSubmissions.modifyAttachments
paths./v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions/{id}:modifyAttachments.post.parameters.length: 4
paths./v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions/{id}:modifyAttachments.post.parameters[0].description: |-
  Identifier of the course.
  This identifier can be either the Classroom-assigned identifier or an
  alias.
paths./v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions/{id}:modifyAttachments.post.parameters[0].in: path
paths./v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions/{id}:modifyAttachments.post.parameters[0].name: courseId
paths./v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions/{id}:modifyAttachments.post.parameters[0].required: true
paths./v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions/{id}:modifyAttachments.post.parameters[0].type: string
paths./v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions/{id}:modifyAttachments.post.parameters[1].description: Identifier
  of the course work.
paths./v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions/{id}:modifyAttachments.post.parameters[1].in: path
paths./v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions/{id}:modifyAttachments.post.parameters[1].name: courseWorkId
paths./v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions/{id}:modifyAttachments.post.parameters[1].required: true
paths./v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions/{id}:modifyAttachments.post.parameters[1].type: string
paths./v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions/{id}:modifyAttachments.post.parameters[2].description: Identifier
  of the student submission.
paths./v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions/{id}:modifyAttachments.post.parameters[2].in: path
paths./v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions/{id}:modifyAttachments.post.parameters[2].name: id
paths./v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions/{id}:modifyAttachments.post.parameters[2].required: true
paths./v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions/{id}:modifyAttachments.post.parameters[2].type: string
paths./v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions/{id}:modifyAttachments.post.parameters[3].in: body
paths./v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions/{id}:modifyAttachments.post.parameters[3].name: body
paths./v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions/{id}:modifyAttachments.post.parameters[3].schema.$ref: '#/definitions/ModifyAttachmentsRequest'
paths./v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions/{id}:modifyAttachments.post.responses.200.description: Successful
  response
paths./v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions/{id}:modifyAttachments.post.responses.200.schema.$ref: '#/definitions/StudentSubmission'
paths./v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions/{id}:modifyAttachments.post.security.length: 2
paths./v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions/{id}:modifyAttachments.post.security[0].Oauth2.length: 1
paths./v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions/{id}:modifyAttachments.post.security[0].Oauth2[0]: https://www.googleapis.com/auth/classroom.coursework.me
paths./v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions/{id}:modifyAttachments.post.security[1].Oauth2.length: 1
paths./v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions/{id}:modifyAttachments.post.security[1].Oauth2[0]: https://www.googleapis.com/auth/classroom.coursework.students
paths./v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions/{id}:modifyAttachments.post.tags.length: 1
paths./v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions/{id}:modifyAttachments.post.tags[0]: courses
paths./v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions/{id}:reclaim.parameters.length: 13
paths./v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions/{id}:reclaim.parameters[0].$ref: '#/parameters/access_token'
paths./v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions/{id}:reclaim.parameters[1].$ref: '#/parameters/prettyPrint'
paths./v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions/{id}:reclaim.parameters[2].$ref: '#/parameters/key'
paths./v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions/{id}:reclaim.parameters[3].$ref: '#/parameters/quotaUser'
paths./v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions/{id}:reclaim.parameters[4].$ref: '#/parameters/pp'
paths./v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions/{id}:reclaim.parameters[5].$ref: '#/parameters/fields'
paths./v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions/{id}:reclaim.parameters[6].$ref: '#/parameters/alt'
paths./v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions/{id}:reclaim.parameters[7].$ref: '#/parameters/$.xgafv'
paths./v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions/{id}:reclaim.parameters[8].$ref: '#/parameters/callback'
paths./v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions/{id}:reclaim.parameters[9].$ref: '#/parameters/oauth_token'
paths./v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions/{id}:reclaim.parameters[10].$ref: '#/parameters/uploadType'
paths./v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions/{id}:reclaim.parameters[11].$ref: '#/parameters/bearer_token'
paths./v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions/{id}:reclaim.parameters[12].$ref: '#/parameters/upload_protocol'
paths./v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions/{id}:reclaim.post.description: |-
  Reclaims a student submission on behalf of the student that owns it.

  Reclaiming a student submission transfers ownership of attached Drive
  files to the student and update the submission state.

  Only the student that owns the requested student submission may call this
  method, and only for a student submission that has been turned in.

  This request must be made by the Developer Console project of the
  [OAuth client ID](https://support.google.com/cloud/answer/6158849) used to
  create the corresponding course work item.

  This method returns the following error codes:

  * `PERMISSION_DENIED` if the requesting user is not permitted to access the
  requested course or course work, unsubmit the requested student submission,
  or for access errors.
  * `FAILED_PRECONDITION` if the student submission has not been turned in.
  * `INVALID_ARGUMENT` if the request is malformed.
  * `NOT_FOUND` if the requested course, course work, or student submission
  does not exist.
paths./v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions/{id}:reclaim.post.operationId: classroom.courses.courseWork.studentSubmissions.reclaim
paths./v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions/{id}:reclaim.post.parameters.length: 4
paths./v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions/{id}:reclaim.post.parameters[0].description: |-
  Identifier of the course.
  This identifier can be either the Classroom-assigned identifier or an
  alias.
paths./v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions/{id}:reclaim.post.parameters[0].in: path
paths./v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions/{id}:reclaim.post.parameters[0].name: courseId
paths./v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions/{id}:reclaim.post.parameters[0].required: true
paths./v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions/{id}:reclaim.post.parameters[0].type: string
paths./v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions/{id}:reclaim.post.parameters[1].description: Identifier
  of the course work.
paths./v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions/{id}:reclaim.post.parameters[1].in: path
paths./v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions/{id}:reclaim.post.parameters[1].name: courseWorkId
paths./v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions/{id}:reclaim.post.parameters[1].required: true
paths./v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions/{id}:reclaim.post.parameters[1].type: string
paths./v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions/{id}:reclaim.post.parameters[2].description: Identifier
  of the student submission.
paths./v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions/{id}:reclaim.post.parameters[2].in: path
paths./v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions/{id}:reclaim.post.parameters[2].name: id
paths./v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions/{id}:reclaim.post.parameters[2].required: true
paths./v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions/{id}:reclaim.post.parameters[2].type: string
paths./v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions/{id}:reclaim.post.parameters[3].in: body
paths./v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions/{id}:reclaim.post.parameters[3].name: body
paths./v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions/{id}:reclaim.post.parameters[3].schema.$ref: '#/definitions/ReclaimStudentSubmissionRequest'
paths./v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions/{id}:reclaim.post.responses.200.description: Successful
  response
paths./v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions/{id}:reclaim.post.responses.200.schema.$ref: '#/definitions/Empty'
paths./v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions/{id}:reclaim.post.security.length: 1
paths./v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions/{id}:reclaim.post.security[0].Oauth2.length: 1
paths./v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions/{id}:reclaim.post.security[0].Oauth2[0]: https://www.googleapis.com/auth/classroom.coursework.me
paths./v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions/{id}:reclaim.post.tags.length: 1
paths./v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions/{id}:reclaim.post.tags[0]: courses
paths./v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions/{id}:return.parameters.length: 13
paths./v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions/{id}:return.parameters[0].$ref: '#/parameters/access_token'
paths./v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions/{id}:return.parameters[1].$ref: '#/parameters/prettyPrint'
paths./v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions/{id}:return.parameters[2].$ref: '#/parameters/key'
paths./v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions/{id}:return.parameters[3].$ref: '#/parameters/quotaUser'
paths./v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions/{id}:return.parameters[4].$ref: '#/parameters/pp'
paths./v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions/{id}:return.parameters[5].$ref: '#/parameters/fields'
paths./v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions/{id}:return.parameters[6].$ref: '#/parameters/alt'
paths./v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions/{id}:return.parameters[7].$ref: '#/parameters/$.xgafv'
paths./v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions/{id}:return.parameters[8].$ref: '#/parameters/callback'
paths./v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions/{id}:return.parameters[9].$ref: '#/parameters/oauth_token'
paths./v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions/{id}:return.parameters[10].$ref: '#/parameters/uploadType'
paths./v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions/{id}:return.parameters[11].$ref: '#/parameters/bearer_token'
paths./v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions/{id}:return.parameters[12].$ref: '#/parameters/upload_protocol'
paths./v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions/{id}:return.post.description: |-
  Returns a student submission.

  Returning a student submission transfers ownership of attached Drive
  files to the student and may also update the submission state.
  Unlike the Classroom application, returning a student submission does not
  set assignedGrade to the draftGrade value.

  Only a teacher of the course that contains the requested student submission
  may call this method.

  This request must be made by the Developer Console project of the
  [OAuth client ID](https://support.google.com/cloud/answer/6158849) used to
  create the corresponding course work item.

  This method returns the following error codes:

  * `PERMISSION_DENIED` if the requesting user is not permitted to access the
  requested course or course work, return the requested student submission,
  or for access errors.
  * `INVALID_ARGUMENT` if the request is malformed.
  * `NOT_FOUND` if the requested course, course work, or student submission
  does not exist.
paths./v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions/{id}:return.post.operationId: classroom.courses.courseWork.studentSubmissions.return
paths./v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions/{id}:return.post.parameters.length: 4
paths./v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions/{id}:return.post.parameters[0].description: |-
  Identifier of the course.
  This identifier can be either the Classroom-assigned identifier or an
  alias.
paths./v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions/{id}:return.post.parameters[0].in: path
paths./v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions/{id}:return.post.parameters[0].name: courseId
paths./v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions/{id}:return.post.parameters[0].required: true
paths./v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions/{id}:return.post.parameters[0].type: string
paths./v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions/{id}:return.post.parameters[1].description: Identifier
  of the course work.
paths./v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions/{id}:return.post.parameters[1].in: path
paths./v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions/{id}:return.post.parameters[1].name: courseWorkId
paths./v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions/{id}:return.post.parameters[1].required: true
paths./v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions/{id}:return.post.parameters[1].type: string
paths./v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions/{id}:return.post.parameters[2].description: Identifier
  of the student submission.
paths./v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions/{id}:return.post.parameters[2].in: path
paths./v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions/{id}:return.post.parameters[2].name: id
paths./v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions/{id}:return.post.parameters[2].required: true
paths./v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions/{id}:return.post.parameters[2].type: string
paths./v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions/{id}:return.post.parameters[3].in: body
paths./v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions/{id}:return.post.parameters[3].name: body
paths./v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions/{id}:return.post.parameters[3].schema.$ref: '#/definitions/ReturnStudentSubmissionRequest'
paths./v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions/{id}:return.post.responses.200.description: Successful
  response
paths./v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions/{id}:return.post.responses.200.schema.$ref: '#/definitions/Empty'
paths./v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions/{id}:return.post.security.length: 1
paths./v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions/{id}:return.post.security[0].Oauth2.length: 1
paths./v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions/{id}:return.post.security[0].Oauth2[0]: https://www.googleapis.com/auth/classroom.coursework.students
paths./v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions/{id}:return.post.tags.length: 1
paths./v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions/{id}:return.post.tags[0]: courses
paths./v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions/{id}:turnIn.parameters.length: 13
paths./v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions/{id}:turnIn.parameters[0].$ref: '#/parameters/access_token'
paths./v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions/{id}:turnIn.parameters[1].$ref: '#/parameters/prettyPrint'
paths./v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions/{id}:turnIn.parameters[2].$ref: '#/parameters/key'
paths./v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions/{id}:turnIn.parameters[3].$ref: '#/parameters/quotaUser'
paths./v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions/{id}:turnIn.parameters[4].$ref: '#/parameters/pp'
paths./v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions/{id}:turnIn.parameters[5].$ref: '#/parameters/fields'
paths./v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions/{id}:turnIn.parameters[6].$ref: '#/parameters/alt'
paths./v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions/{id}:turnIn.parameters[7].$ref: '#/parameters/$.xgafv'
paths./v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions/{id}:turnIn.parameters[8].$ref: '#/parameters/callback'
paths./v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions/{id}:turnIn.parameters[9].$ref: '#/parameters/oauth_token'
paths./v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions/{id}:turnIn.parameters[10].$ref: '#/parameters/uploadType'
paths./v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions/{id}:turnIn.parameters[11].$ref: '#/parameters/bearer_token'
paths./v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions/{id}:turnIn.parameters[12].$ref: '#/parameters/upload_protocol'
paths./v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions/{id}:turnIn.post.description: |-
  Turns in a student submission.

  Turning in a student submission transfers ownership of attached Drive
  files to the teacher and may also update the submission state.

  This may only be called by the student that owns the specified student
  submission.

  This request must be made by the Developer Console project of the
  [OAuth client ID](https://support.google.com/cloud/answer/6158849) used to
  create the corresponding course work item.

  This method returns the following error codes:

  * `PERMISSION_DENIED` if the requesting user is not permitted to access the
  requested course or course work, turn in the requested student submission,
  or for access errors.
  * `INVALID_ARGUMENT` if the request is malformed.
  * `NOT_FOUND` if the requested course, course work, or student submission
  does not exist.
paths./v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions/{id}:turnIn.post.operationId: classroom.courses.courseWork.studentSubmissions.turnIn
paths./v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions/{id}:turnIn.post.parameters.length: 4
paths./v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions/{id}:turnIn.post.parameters[0].description: |-
  Identifier of the course.
  This identifier can be either the Classroom-assigned identifier or an
  alias.
paths./v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions/{id}:turnIn.post.parameters[0].in: path
paths./v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions/{id}:turnIn.post.parameters[0].name: courseId
paths./v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions/{id}:turnIn.post.parameters[0].required: true
paths./v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions/{id}:turnIn.post.parameters[0].type: string
paths./v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions/{id}:turnIn.post.parameters[1].description: Identifier
  of the course work.
paths./v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions/{id}:turnIn.post.parameters[1].in: path
paths./v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions/{id}:turnIn.post.parameters[1].name: courseWorkId
paths./v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions/{id}:turnIn.post.parameters[1].required: true
paths./v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions/{id}:turnIn.post.parameters[1].type: string
paths./v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions/{id}:turnIn.post.parameters[2].description: Identifier
  of the student submission.
paths./v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions/{id}:turnIn.post.parameters[2].in: path
paths./v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions/{id}:turnIn.post.parameters[2].name: id
paths./v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions/{id}:turnIn.post.parameters[2].required: true
paths./v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions/{id}:turnIn.post.parameters[2].type: string
paths./v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions/{id}:turnIn.post.parameters[3].in: body
paths./v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions/{id}:turnIn.post.parameters[3].name: body
paths./v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions/{id}:turnIn.post.parameters[3].schema.$ref: '#/definitions/TurnInStudentSubmissionRequest'
paths./v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions/{id}:turnIn.post.responses.200.description: Successful
  response
paths./v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions/{id}:turnIn.post.responses.200.schema.$ref: '#/definitions/Empty'
paths./v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions/{id}:turnIn.post.security.length: 1
paths./v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions/{id}:turnIn.post.security[0].Oauth2.length: 1
paths./v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions/{id}:turnIn.post.security[0].Oauth2[0]: https://www.googleapis.com/auth/classroom.coursework.me
paths./v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions/{id}:turnIn.post.tags.length: 1
paths./v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions/{id}:turnIn.post.tags[0]: courses
paths./v1/courses/{courseId}/courseWork/{id}.delete.description: |-
  Deletes a course work.

  This request must be made by the Developer Console project of the
  [OAuth client ID](https://support.google.com/cloud/answer/6158849) used to
  create the corresponding course work item.

  This method returns the following error codes:

  * `PERMISSION_DENIED` if the requesting developer project did not create
  the corresponding course work, if the requesting user is not permitted
  to delete the requested course or for access errors.
  * `FAILED_PRECONDITION` if the requested course work has already been
  deleted.
  * `NOT_FOUND` if no course exists with the requested ID.
paths./v1/courses/{courseId}/courseWork/{id}.delete.operationId: classroom.courses.courseWork.delete
paths./v1/courses/{courseId}/courseWork/{id}.delete.parameters.length: 2
paths./v1/courses/{courseId}/courseWork/{id}.delete.parameters[0].description: |-
  Identifier of the course.
  This identifier can be either the Classroom-assigned identifier or an
  alias.
paths./v1/courses/{courseId}/courseWork/{id}.delete.parameters[0].in: path
paths./v1/courses/{courseId}/courseWork/{id}.delete.parameters[0].name: courseId
paths./v1/courses/{courseId}/courseWork/{id}.delete.parameters[0].required: true
paths./v1/courses/{courseId}/courseWork/{id}.delete.parameters[0].type: string
paths./v1/courses/{courseId}/courseWork/{id}.delete.parameters[1].description: |-
  Identifier of the course work to delete.
  This identifier is a Classroom-assigned identifier.
paths./v1/courses/{courseId}/courseWork/{id}.delete.parameters[1].in: path
paths./v1/courses/{courseId}/courseWork/{id}.delete.parameters[1].name: id
paths./v1/courses/{courseId}/courseWork/{id}.delete.parameters[1].required: true
paths./v1/courses/{courseId}/courseWork/{id}.delete.parameters[1].type: string
paths./v1/courses/{courseId}/courseWork/{id}.delete.responses.200.description: Successful
  response
paths./v1/courses/{courseId}/courseWork/{id}.delete.responses.200.schema.$ref: '#/definitions/Empty'
paths./v1/courses/{courseId}/courseWork/{id}.delete.security.length: 1
paths./v1/courses/{courseId}/courseWork/{id}.delete.security[0].Oauth2.length: 1
paths./v1/courses/{courseId}/courseWork/{id}.delete.security[0].Oauth2[0]: https://www.googleapis.com/auth/classroom.coursework.students
paths./v1/courses/{courseId}/courseWork/{id}.delete.tags.length: 1
paths./v1/courses/{courseId}/courseWork/{id}.delete.tags[0]: courses
paths./v1/courses/{courseId}/courseWork/{id}.get.description: |-
  Returns course work.

  This method returns the following error codes:

  * `PERMISSION_DENIED` if the requesting user is not permitted to access the
  requested course or course work, or for access errors.
  * `INVALID_ARGUMENT` if the request is malformed.
  * `NOT_FOUND` if the requested course or course work does not exist.
paths./v1/courses/{courseId}/courseWork/{id}.get.operationId: classroom.courses.courseWork.get
paths./v1/courses/{courseId}/courseWork/{id}.get.parameters.length: 2
paths./v1/courses/{courseId}/courseWork/{id}.get.parameters[0].description: |-
  Identifier of the course.
  This identifier can be either the Classroom-assigned identifier or an
  alias.
paths./v1/courses/{courseId}/courseWork/{id}.get.parameters[0].in: path
paths./v1/courses/{courseId}/courseWork/{id}.get.parameters[0].name: courseId
paths./v1/courses/{courseId}/courseWork/{id}.get.parameters[0].required: true
paths./v1/courses/{courseId}/courseWork/{id}.get.parameters[0].type: string
paths./v1/courses/{courseId}/courseWork/{id}.get.parameters[1].description: Identifier
  of the course work.
paths./v1/courses/{courseId}/courseWork/{id}.get.parameters[1].in: path
paths./v1/courses/{courseId}/courseWork/{id}.get.parameters[1].name: id
paths./v1/courses/{courseId}/courseWork/{id}.get.parameters[1].required: true
paths./v1/courses/{courseId}/courseWork/{id}.get.parameters[1].type: string
paths./v1/courses/{courseId}/courseWork/{id}.get.responses.200.description: Successful
  response
paths./v1/courses/{courseId}/courseWork/{id}.get.responses.200.schema.$ref: '#/definitions/CourseWork'
paths./v1/courses/{courseId}/courseWork/{id}.get.security.length: 4
paths./v1/courses/{courseId}/courseWork/{id}.get.security[0].Oauth2.length: 1
paths./v1/courses/{courseId}/courseWork/{id}.get.security[0].Oauth2[0]: https://www.googleapis.com/auth/classroom.coursework.me
paths./v1/courses/{courseId}/courseWork/{id}.get.security[1].Oauth2.length: 1
paths./v1/courses/{courseId}/courseWork/{id}.get.security[1].Oauth2[0]: https://www.googleapis.com/auth/classroom.coursework.me.readonly
paths./v1/courses/{courseId}/courseWork/{id}.get.security[2].Oauth2.length: 1
paths./v1/courses/{courseId}/courseWork/{id}.get.security[2].Oauth2[0]: https://www.googleapis.com/auth/classroom.coursework.students
paths./v1/courses/{courseId}/courseWork/{id}.get.security[3].Oauth2.length: 1
paths./v1/courses/{courseId}/courseWork/{id}.get.security[3].Oauth2[0]: https://www.googleapis.com/auth/classroom.coursework.students.readonly
paths./v1/courses/{courseId}/courseWork/{id}.get.tags.length: 1
paths./v1/courses/{courseId}/courseWork/{id}.get.tags[0]: courses
paths./v1/courses/{courseId}/courseWork/{id}.parameters.length: 13
paths./v1/courses/{courseId}/courseWork/{id}.parameters[0].$ref: '#/parameters/access_token'
paths./v1/courses/{courseId}/courseWork/{id}.parameters[1].$ref: '#/parameters/prettyPrint'
paths./v1/courses/{courseId}/courseWork/{id}.parameters[2].$ref: '#/parameters/key'
paths./v1/courses/{courseId}/courseWork/{id}.parameters[3].$ref: '#/parameters/quotaUser'
paths./v1/courses/{courseId}/courseWork/{id}.parameters[4].$ref: '#/parameters/pp'
paths./v1/courses/{courseId}/courseWork/{id}.parameters[5].$ref: '#/parameters/fields'
paths./v1/courses/{courseId}/courseWork/{id}.parameters[6].$ref: '#/parameters/alt'
paths./v1/courses/{courseId}/courseWork/{id}.parameters[7].$ref: '#/parameters/$.xgafv'
paths./v1/courses/{courseId}/courseWork/{id}.parameters[8].$ref: '#/parameters/callback'
paths./v1/courses/{courseId}/courseWork/{id}.parameters[9].$ref: '#/parameters/oauth_token'
paths./v1/courses/{courseId}/courseWork/{id}.parameters[10].$ref: '#/parameters/uploadType'
paths./v1/courses/{courseId}/courseWork/{id}.parameters[11].$ref: '#/parameters/bearer_token'
paths./v1/courses/{courseId}/courseWork/{id}.parameters[12].$ref: '#/parameters/upload_protocol'
paths./v1/courses/{courseId}/courseWork/{id}.patch.description: |-
  Updates one or more fields of a course work.

  See google.classroom.v1.CourseWork for details
  of which fields may be updated and who may change them.

  This request must be made by the Developer Console project of the
  [OAuth client ID](https://support.google.com/cloud/answer/6158849) used to
  create the corresponding course work item.

  This method returns the following error codes:

  * `PERMISSION_DENIED` if the requesting developer project did not create
  the corresponding course work, if the user is not permitted to make the
  requested modification to the student submission, or for
  access errors.
  * `INVALID_ARGUMENT` if the request is malformed.
  * `FAILED_PRECONDITION` if the requested course work has already been
  deleted.
  * `NOT_FOUND` if the requested course, course work, or student submission
  does not exist.
paths./v1/courses/{courseId}/courseWork/{id}.patch.operationId: classroom.courses.courseWork.patch
paths./v1/courses/{courseId}/courseWork/{id}.patch.parameters.length: 4
paths./v1/courses/{courseId}/courseWork/{id}.patch.parameters[0].in: body
paths./v1/courses/{courseId}/courseWork/{id}.patch.parameters[0].name: body
paths./v1/courses/{courseId}/courseWork/{id}.patch.parameters[0].schema.$ref: '#/definitions/CourseWork'
paths./v1/courses/{courseId}/courseWork/{id}.patch.parameters[1].description: |-
  Identifier of the course.
  This identifier can be either the Classroom-assigned identifier or an
  alias.
paths./v1/courses/{courseId}/courseWork/{id}.patch.parameters[1].in: path
paths./v1/courses/{courseId}/courseWork/{id}.patch.parameters[1].name: courseId
paths./v1/courses/{courseId}/courseWork/{id}.patch.parameters[1].required: true
paths./v1/courses/{courseId}/courseWork/{id}.patch.parameters[1].type: string
paths./v1/courses/{courseId}/courseWork/{id}.patch.parameters[2].description: Identifier
  of the course work.
paths./v1/courses/{courseId}/courseWork/{id}.patch.parameters[2].in: path
paths./v1/courses/{courseId}/courseWork/{id}.patch.parameters[2].name: id
paths./v1/courses/{courseId}/courseWork/{id}.patch.parameters[2].required: true
paths./v1/courses/{courseId}/courseWork/{id}.patch.parameters[2].type: string
paths./v1/courses/{courseId}/courseWork/{id}.patch.parameters[3].description: |-
  Mask that identifies which fields on the course work to update.
  This field is required to do an update. The update fails if invalid
  fields are specified. If a field supports empty values, it can be cleared
  by specifying it in the update mask and not in the CourseWork object. If a
  field that does not support empty values is included in the update mask and
  not set in the CourseWork object, an `INVALID_ARGUMENT` error will be
  returned.

  The following fields may be specified by teachers:

  * `title`
  * `description`
  * `state`
  * `due_date`
  * `due_time`
  * `max_points`
  * `scheduled_time`
  * `submission_modification_mode`
paths./v1/courses/{courseId}/courseWork/{id}.patch.parameters[3].in: query
paths./v1/courses/{courseId}/courseWork/{id}.patch.parameters[3].name: updateMask
paths./v1/courses/{courseId}/courseWork/{id}.patch.parameters[3].type: string
paths./v1/courses/{courseId}/courseWork/{id}.patch.responses.200.description: Successful
  response
paths./v1/courses/{courseId}/courseWork/{id}.patch.responses.200.schema.$ref: '#/definitions/CourseWork'
paths./v1/courses/{courseId}/courseWork/{id}.patch.security.length: 1
paths./v1/courses/{courseId}/courseWork/{id}.patch.security[0].Oauth2.length: 1
paths./v1/courses/{courseId}/courseWork/{id}.patch.security[0].Oauth2[0]: https://www.googleapis.com/auth/classroom.coursework.students
paths./v1/courses/{courseId}/courseWork/{id}.patch.tags.length: 1
paths./v1/courses/{courseId}/courseWork/{id}.patch.tags[0]: courses
paths./v1/courses/{courseId}/courseWork/{id}:modifyAssignees.parameters.length: 13
paths./v1/courses/{courseId}/courseWork/{id}:modifyAssignees.parameters[0].$ref: '#/parameters/$.xgafv'
paths./v1/courses/{courseId}/courseWork/{id}:modifyAssignees.parameters[1].$ref: '#/parameters/access_token'
paths./v1/courses/{courseId}/courseWork/{id}:modifyAssignees.parameters[2].$ref: '#/parameters/alt'
paths./v1/courses/{courseId}/courseWork/{id}:modifyAssignees.parameters[3].$ref: '#/parameters/bearer_token'
paths./v1/courses/{courseId}/courseWork/{id}:modifyAssignees.parameters[4].$ref: '#/parameters/callback'
paths./v1/courses/{courseId}/courseWork/{id}:modifyAssignees.parameters[5].$ref: '#/parameters/fields'
paths./v1/courses/{courseId}/courseWork/{id}:modifyAssignees.parameters[6].$ref: '#/parameters/key'
paths./v1/courses/{courseId}/courseWork/{id}:modifyAssignees.parameters[7].$ref: '#/parameters/oauth_token'
paths./v1/courses/{courseId}/courseWork/{id}:modifyAssignees.parameters[8].$ref: '#/parameters/pp'
paths./v1/courses/{courseId}/courseWork/{id}:modifyAssignees.parameters[9].$ref: '#/parameters/prettyPrint'
paths./v1/courses/{courseId}/courseWork/{id}:modifyAssignees.parameters[10].$ref: '#/parameters/quotaUser'
paths./v1/courses/{courseId}/courseWork/{id}:modifyAssignees.parameters[11].$ref: '#/parameters/uploadType'
paths./v1/courses/{courseId}/courseWork/{id}:modifyAssignees.parameters[12].$ref: '#/parameters/upload_protocol'
paths./v1/courses/{courseId}/courseWork/{id}:modifyAssignees.post.description: |-
  Modifies assignee mode and options of a coursework.

  Only a teacher of the course that contains the coursework may
  call this method.

  This method returns the following error codes:

  * `PERMISSION_DENIED` if the requesting user is not permitted to access the
  requested course or course work or for access errors.
  * `INVALID_ARGUMENT` if the request is malformed.
  * `NOT_FOUND` if the requested course or course work does not exist.
paths./v1/courses/{courseId}/courseWork/{id}:modifyAssignees.post.operationId: classroom.courses.courseWork.modifyAssignees
paths./v1/courses/{courseId}/courseWork/{id}:modifyAssignees.post.parameters.length: 3
paths./v1/courses/{courseId}/courseWork/{id}:modifyAssignees.post.parameters[0].in: body
paths./v1/courses/{courseId}/courseWork/{id}:modifyAssignees.post.parameters[0].name: body
paths./v1/courses/{courseId}/courseWork/{id}:modifyAssignees.post.parameters[0].schema.$ref: '#/definitions/ModifyCourseWorkAssigneesRequest'
paths./v1/courses/{courseId}/courseWork/{id}:modifyAssignees.post.parameters[1].description: |-
  Identifier of the course.
  This identifier can be either the Classroom-assigned identifier or an
  alias.
paths./v1/courses/{courseId}/courseWork/{id}:modifyAssignees.post.parameters[1].in: path
paths./v1/courses/{courseId}/courseWork/{id}:modifyAssignees.post.parameters[1].name: courseId
paths./v1/courses/{courseId}/courseWork/{id}:modifyAssignees.post.parameters[1].required: true
paths./v1/courses/{courseId}/courseWork/{id}:modifyAssignees.post.parameters[1].type: string
paths./v1/courses/{courseId}/courseWork/{id}:modifyAssignees.post.parameters[2].description: Identifier
  of the coursework.
paths./v1/courses/{courseId}/courseWork/{id}:modifyAssignees.post.parameters[2].in: path
paths./v1/courses/{courseId}/courseWork/{id}:modifyAssignees.post.parameters[2].name: id
paths./v1/courses/{courseId}/courseWork/{id}:modifyAssignees.post.parameters[2].required: true
paths./v1/courses/{courseId}/courseWork/{id}:modifyAssignees.post.parameters[2].type: string
paths./v1/courses/{courseId}/courseWork/{id}:modifyAssignees.post.responses.200.description: Successful
  response
paths./v1/courses/{courseId}/courseWork/{id}:modifyAssignees.post.responses.200.schema.$ref: '#/definitions/CourseWork'
paths./v1/courses/{courseId}/courseWork/{id}:modifyAssignees.post.security.length: 1
paths./v1/courses/{courseId}/courseWork/{id}:modifyAssignees.post.security[0].Oauth2.length: 1
paths./v1/courses/{courseId}/courseWork/{id}:modifyAssignees.post.security[0].Oauth2[0]: https://www.googleapis.com/auth/classroom.coursework.students
paths./v1/courses/{courseId}/courseWork/{id}:modifyAssignees.post.tags.length: 1
paths./v1/courses/{courseId}/courseWork/{id}:modifyAssignees.post.tags[0]: courses
paths./v1/courses/{courseId}/students.get.description: |-
  Returns a list of students of this course that the requester
  is permitted to view.

  This method returns the following error codes:

  * `NOT_FOUND` if the course does not exist.
  * `PERMISSION_DENIED` for access errors.
paths./v1/courses/{courseId}/students.get.operationId: classroom.courses.students.list
paths./v1/courses/{courseId}/students.get.parameters.length: 3
paths./v1/courses/{courseId}/students.get.parameters[0].description: |-
  Identifier of the course.
  This identifier can be either the Classroom-assigned identifier or an
  alias.
paths./v1/courses/{courseId}/students.get.parameters[0].in: path
paths./v1/courses/{courseId}/students.get.parameters[0].name: courseId
paths./v1/courses/{courseId}/students.get.parameters[0].required: true
paths./v1/courses/{courseId}/students.get.parameters[0].type: string
paths./v1/courses/{courseId}/students.get.parameters[1].description: |-
  Maximum number of items to return. Zero means no maximum.

  The server may return fewer than the specified number of results.
paths./v1/courses/{courseId}/students.get.parameters[1].in: query
paths./v1/courses/{courseId}/students.get.parameters[1].name: pageSize
paths./v1/courses/{courseId}/students.get.parameters[1].type: integer
paths./v1/courses/{courseId}/students.get.parameters[2].description: |-
  nextPageToken
  value returned from a previous
  list call, indicating that
  the subsequent page of results should be returned.

  The list request must be
  otherwise identical to the one that resulted in this token.
paths./v1/courses/{courseId}/students.get.parameters[2].in: query
paths./v1/courses/{courseId}/students.get.parameters[2].name: pageToken
paths./v1/courses/{courseId}/students.get.parameters[2].type: string
paths./v1/courses/{courseId}/students.get.responses.200.description: Successful response
paths./v1/courses/{courseId}/students.get.responses.200.schema.$ref: '#/definitions/ListStudentsResponse'
paths./v1/courses/{courseId}/students.get.security.length: 4
paths./v1/courses/{courseId}/students.get.security[0].Oauth2.length: 1
paths./v1/courses/{courseId}/students.get.security[0].Oauth2[0]: https://www.googleapis.com/auth/classroom.profile.emails
paths./v1/courses/{courseId}/students.get.security[1].Oauth2.length: 1
paths./v1/courses/{courseId}/students.get.security[1].Oauth2[0]: https://www.googleapis.com/auth/classroom.profile.photos
paths./v1/courses/{courseId}/students.get.security[2].Oauth2.length: 1
paths./v1/courses/{courseId}/students.get.security[2].Oauth2[0]: https://www.googleapis.com/auth/classroom.rosters
paths./v1/courses/{courseId}/students.get.security[3].Oauth2.length: 1
paths./v1/courses/{courseId}/students.get.security[3].Oauth2[0]: https://www.googleapis.com/auth/classroom.rosters.readonly
paths./v1/courses/{courseId}/students.get.tags.length: 1
paths./v1/courses/{courseId}/students.get.tags[0]: courses
paths./v1/courses/{courseId}/students.parameters.length: 13
paths./v1/courses/{courseId}/students.parameters[0].$ref: '#/parameters/access_token'
paths./v1/courses/{courseId}/students.parameters[1].$ref: '#/parameters/prettyPrint'
paths./v1/courses/{courseId}/students.parameters[2].$ref: '#/parameters/key'
paths./v1/courses/{courseId}/students.parameters[3].$ref: '#/parameters/quotaUser'
paths./v1/courses/{courseId}/students.parameters[4].$ref: '#/parameters/pp'
paths./v1/courses/{courseId}/students.parameters[5].$ref: '#/parameters/fields'
paths./v1/courses/{courseId}/students.parameters[6].$ref: '#/parameters/alt'
paths./v1/courses/{courseId}/students.parameters[7].$ref: '#/parameters/$.xgafv'
paths./v1/courses/{courseId}/students.parameters[8].$ref: '#/parameters/callback'
paths./v1/courses/{courseId}/students.parameters[9].$ref: '#/parameters/oauth_token'
paths./v1/courses/{courseId}/students.parameters[10].$ref: '#/parameters/uploadType'
paths./v1/courses/{courseId}/students.parameters[11].$ref: '#/parameters/bearer_token'
paths./v1/courses/{courseId}/students.parameters[12].$ref: '#/parameters/upload_protocol'
paths./v1/courses/{courseId}/students.post.description: |-
  Adds a user as a student of a course.

  This method returns the following error codes:

  * `PERMISSION_DENIED` if the requesting user is not permitted to create
  students in this course or for access errors.
  * `NOT_FOUND` if the requested course ID does not exist.
  * `FAILED_PRECONDITION` if the requested user's account is disabled,
  for the following request errors:
      * CourseMemberLimitReached
      * CourseNotModifiable
      * UserGroupsMembershipLimitReached
  * `ALREADY_EXISTS` if the user is already a student or teacher in the
  course.
paths./v1/courses/{courseId}/students.post.operationId: classroom.courses.students.create
paths./v1/courses/{courseId}/students.post.parameters.length: 3
paths./v1/courses/{courseId}/students.post.parameters[0].description: |-
  Identifier of the course to create the student in.
  This identifier can be either the Classroom-assigned identifier or an
  alias.
paths./v1/courses/{courseId}/students.post.parameters[0].in: path
paths./v1/courses/{courseId}/students.post.parameters[0].name: courseId
paths./v1/courses/{courseId}/students.post.parameters[0].required: true
paths./v1/courses/{courseId}/students.post.parameters[0].type: string
paths./v1/courses/{courseId}/students.post.parameters[1].description: |-
  Enrollment code of the course to create the student in.
  This code is required if userId
  corresponds to the requesting user; it may be omitted if the requesting
  user has administrative permissions to create students for any user.
paths./v1/courses/{courseId}/students.post.parameters[1].in: query
paths./v1/courses/{courseId}/students.post.parameters[1].name: enrollmentCode
paths./v1/courses/{courseId}/students.post.parameters[1].type: string
paths./v1/courses/{courseId}/students.post.parameters[2].in: body
paths./v1/courses/{courseId}/students.post.parameters[2].name: body
paths./v1/courses/{courseId}/students.post.parameters[2].schema.$ref: '#/definitions/Student'
paths./v1/courses/{courseId}/students.post.responses.200.description: Successful response
paths./v1/courses/{courseId}/students.post.responses.200.schema.$ref: '#/definitions/Student'
paths./v1/courses/{courseId}/students.post.security.length: 3
paths./v1/courses/{courseId}/students.post.security[0].Oauth2.length: 1
paths./v1/courses/{courseId}/students.post.security[0].Oauth2[0]: https://www.googleapis.com/auth/classroom.profile.emails
paths./v1/courses/{courseId}/students.post.security[1].Oauth2.length: 1
paths./v1/courses/{courseId}/students.post.security[1].Oauth2[0]: https://www.googleapis.com/auth/classroom.profile.photos
paths./v1/courses/{courseId}/students.post.security[2].Oauth2.length: 1
paths./v1/courses/{courseId}/students.post.security[2].Oauth2[0]: https://www.googleapis.com/auth/classroom.rosters
paths./v1/courses/{courseId}/students.post.tags.length: 1
paths./v1/courses/{courseId}/students.post.tags[0]: courses
paths./v1/courses/{courseId}/students/{userId}.delete.description: |-
  Deletes a student of a course.

  This method returns the following error codes:

  * `PERMISSION_DENIED` if the requesting user is not permitted to delete
  students of this course or for access errors.
  * `NOT_FOUND` if no student of this course has the requested ID or if the
  course does not exist.
paths./v1/courses/{courseId}/students/{userId}.delete.operationId: classroom.courses.students.delete
paths./v1/courses/{courseId}/students/{userId}.delete.parameters.length: 2
paths./v1/courses/{courseId}/students/{userId}.delete.parameters[0].description: |-
  Identifier of the course.
  This identifier can be either the Classroom-assigned identifier or an
  alias.
paths./v1/courses/{courseId}/students/{userId}.delete.parameters[0].in: path
paths./v1/courses/{courseId}/students/{userId}.delete.parameters[0].name: courseId
paths./v1/courses/{courseId}/students/{userId}.delete.parameters[0].required: true
paths./v1/courses/{courseId}/students/{userId}.delete.parameters[0].type: string
paths./v1/courses/{courseId}/students/{userId}.delete.parameters[1].description: |-
  Identifier of the student to delete. The identifier can be one of the
  following:

  * the numeric identifier for the user
  * the email address of the user
  * the string literal `"me"`, indicating the requesting user
paths./v1/courses/{courseId}/students/{userId}.delete.parameters[1].in: path
paths./v1/courses/{courseId}/students/{userId}.delete.parameters[1].name: userId
paths./v1/courses/{courseId}/students/{userId}.delete.parameters[1].required: true
paths./v1/courses/{courseId}/students/{userId}.delete.parameters[1].type: string
paths./v1/courses/{courseId}/students/{userId}.delete.responses.200.description: Successful
  response
paths./v1/courses/{courseId}/students/{userId}.delete.responses.200.schema.$ref: '#/definitions/Empty'
paths./v1/courses/{courseId}/students/{userId}.delete.security.length: 1
paths./v1/courses/{courseId}/students/{userId}.delete.security[0].Oauth2.length: 1
paths./v1/courses/{courseId}/students/{userId}.delete.security[0].Oauth2[0]: https://www.googleapis.com/auth/classroom.rosters
paths./v1/courses/{courseId}/students/{userId}.delete.tags.length: 1
paths./v1/courses/{courseId}/students/{userId}.delete.tags[0]: courses
paths./v1/courses/{courseId}/students/{userId}.get.description: |-
  Returns a student of a course.

  This method returns the following error codes:

  * `PERMISSION_DENIED` if the requesting user is not permitted to view
  students of this course or for access errors.
  * `NOT_FOUND` if no student of this course has the requested ID or if the
  course does not exist.
paths./v1/courses/{courseId}/students/{userId}.get.operationId: classroom.courses.students.get
paths./v1/courses/{courseId}/students/{userId}.get.parameters.length: 2
paths./v1/courses/{courseId}/students/{userId}.get.parameters[0].description: |-
  Identifier of the course.
  This identifier can be either the Classroom-assigned identifier or an
  alias.
paths./v1/courses/{courseId}/students/{userId}.get.parameters[0].in: path
paths./v1/courses/{courseId}/students/{userId}.get.parameters[0].name: courseId
paths./v1/courses/{courseId}/students/{userId}.get.parameters[0].required: true
paths./v1/courses/{courseId}/students/{userId}.get.parameters[0].type: string
paths./v1/courses/{courseId}/students/{userId}.get.parameters[1].description: |-
  Identifier of the student to return. The identifier can be one of the
  following:

  * the numeric identifier for the user
  * the email address of the user
  * the string literal `"me"`, indicating the requesting user
paths./v1/courses/{courseId}/students/{userId}.get.parameters[1].in: path
paths./v1/courses/{courseId}/students/{userId}.get.parameters[1].name: userId
paths./v1/courses/{courseId}/students/{userId}.get.parameters[1].required: true
paths./v1/courses/{courseId}/students/{userId}.get.parameters[1].type: string
paths./v1/courses/{courseId}/students/{userId}.get.responses.200.description: Successful
  response
paths./v1/courses/{courseId}/students/{userId}.get.responses.200.schema.$ref: '#/definitions/Student'
paths./v1/courses/{courseId}/students/{userId}.get.security.length: 4
paths./v1/courses/{courseId}/students/{userId}.get.security[0].Oauth2.length: 1
paths./v1/courses/{courseId}/students/{userId}.get.security[0].Oauth2[0]: https://www.googleapis.com/auth/classroom.profile.emails
paths./v1/courses/{courseId}/students/{userId}.get.security[1].Oauth2.length: 1
paths./v1/courses/{courseId}/students/{userId}.get.security[1].Oauth2[0]: https://www.googleapis.com/auth/classroom.profile.photos
paths./v1/courses/{courseId}/students/{userId}.get.security[2].Oauth2.length: 1
paths./v1/courses/{courseId}/students/{userId}.get.security[2].Oauth2[0]: https://www.googleapis.com/auth/classroom.rosters
paths./v1/courses/{courseId}/students/{userId}.get.security[3].Oauth2.length: 1
paths./v1/courses/{courseId}/students/{userId}.get.security[3].Oauth2[0]: https://www.googleapis.com/auth/classroom.rosters.readonly
paths./v1/courses/{courseId}/students/{userId}.get.tags.length: 1
paths./v1/courses/{courseId}/students/{userId}.get.tags[0]: courses
paths./v1/courses/{courseId}/students/{userId}.parameters.length: 13
paths./v1/courses/{courseId}/students/{userId}.parameters[0].$ref: '#/parameters/access_token'
paths./v1/courses/{courseId}/students/{userId}.parameters[1].$ref: '#/parameters/prettyPrint'
paths./v1/courses/{courseId}/students/{userId}.parameters[2].$ref: '#/parameters/key'
paths./v1/courses/{courseId}/students/{userId}.parameters[3].$ref: '#/parameters/quotaUser'
paths./v1/courses/{courseId}/students/{userId}.parameters[4].$ref: '#/parameters/pp'
paths./v1/courses/{courseId}/students/{userId}.parameters[5].$ref: '#/parameters/fields'
paths./v1/courses/{courseId}/students/{userId}.parameters[6].$ref: '#/parameters/alt'
paths./v1/courses/{courseId}/students/{userId}.parameters[7].$ref: '#/parameters/$.xgafv'
paths./v1/courses/{courseId}/students/{userId}.parameters[8].$ref: '#/parameters/callback'
paths./v1/courses/{courseId}/students/{userId}.parameters[9].$ref: '#/parameters/oauth_token'
paths./v1/courses/{courseId}/students/{userId}.parameters[10].$ref: '#/parameters/uploadType'
paths./v1/courses/{courseId}/students/{userId}.parameters[11].$ref: '#/parameters/bearer_token'
paths./v1/courses/{courseId}/students/{userId}.parameters[12].$ref: '#/parameters/upload_protocol'
paths./v1/courses/{courseId}/teachers.get.description: |-
  Returns a list of teachers of this course that the requester
  is permitted to view.

  This method returns the following error codes:

  * `NOT_FOUND` if the course does not exist.
  * `PERMISSION_DENIED` for access errors.
paths./v1/courses/{courseId}/teachers.get.operationId: classroom.courses.teachers.list
paths./v1/courses/{courseId}/teachers.get.parameters.length: 3
paths./v1/courses/{courseId}/teachers.get.parameters[0].description: |-
  Identifier of the course.
  This identifier can be either the Classroom-assigned identifier or an
  alias.
paths./v1/courses/{courseId}/teachers.get.parameters[0].in: path
paths./v1/courses/{courseId}/teachers.get.parameters[0].name: courseId
paths./v1/courses/{courseId}/teachers.get.parameters[0].required: true
paths./v1/courses/{courseId}/teachers.get.parameters[0].type: string
paths./v1/courses/{courseId}/teachers.get.parameters[1].description: |-
  Maximum number of items to return. Zero means no maximum.

  The server may return fewer than the specified number of results.
paths./v1/courses/{courseId}/teachers.get.parameters[1].in: query
paths./v1/courses/{courseId}/teachers.get.parameters[1].name: pageSize
paths./v1/courses/{courseId}/teachers.get.parameters[1].type: integer
paths./v1/courses/{courseId}/teachers.get.parameters[2].description: |-
  nextPageToken
  value returned from a previous
  list call, indicating that
  the subsequent page of results should be returned.

  The list request must be
  otherwise identical to the one that resulted in this token.
paths./v1/courses/{courseId}/teachers.get.parameters[2].in: query
paths./v1/courses/{courseId}/teachers.get.parameters[2].name: pageToken
paths./v1/courses/{courseId}/teachers.get.parameters[2].type: string
paths./v1/courses/{courseId}/teachers.get.responses.200.description: Successful response
paths./v1/courses/{courseId}/teachers.get.responses.200.schema.$ref: '#/definitions/ListTeachersResponse'
paths./v1/courses/{courseId}/teachers.get.security.length: 4
paths./v1/courses/{courseId}/teachers.get.security[0].Oauth2.length: 1
paths./v1/courses/{courseId}/teachers.get.security[0].Oauth2[0]: https://www.googleapis.com/auth/classroom.profile.emails
paths./v1/courses/{courseId}/teachers.get.security[1].Oauth2.length: 1
paths./v1/courses/{courseId}/teachers.get.security[1].Oauth2[0]: https://www.googleapis.com/auth/classroom.profile.photos
paths./v1/courses/{courseId}/teachers.get.security[2].Oauth2.length: 1
paths./v1/courses/{courseId}/teachers.get.security[2].Oauth2[0]: https://www.googleapis.com/auth/classroom.rosters
paths./v1/courses/{courseId}/teachers.get.security[3].Oauth2.length: 1
paths./v1/courses/{courseId}/teachers.get.security[3].Oauth2[0]: https://www.googleapis.com/auth/classroom.rosters.readonly
paths./v1/courses/{courseId}/teachers.get.tags.length: 1
paths./v1/courses/{courseId}/teachers.get.tags[0]: courses
paths./v1/courses/{courseId}/teachers.parameters.length: 13
paths./v1/courses/{courseId}/teachers.parameters[0].$ref: '#/parameters/access_token'
paths./v1/courses/{courseId}/teachers.parameters[1].$ref: '#/parameters/prettyPrint'
paths./v1/courses/{courseId}/teachers.parameters[2].$ref: '#/parameters/key'
paths./v1/courses/{courseId}/teachers.parameters[3].$ref: '#/parameters/quotaUser'
paths./v1/courses/{courseId}/teachers.parameters[4].$ref: '#/parameters/pp'
paths./v1/courses/{courseId}/teachers.parameters[5].$ref: '#/parameters/fields'
paths./v1/courses/{courseId}/teachers.parameters[6].$ref: '#/parameters/alt'
paths./v1/courses/{courseId}/teachers.parameters[7].$ref: '#/parameters/$.xgafv'
paths./v1/courses/{courseId}/teachers.parameters[8].$ref: '#/parameters/callback'
paths./v1/courses/{courseId}/teachers.parameters[9].$ref: '#/parameters/oauth_token'
paths./v1/courses/{courseId}/teachers.parameters[10].$ref: '#/parameters/uploadType'
paths./v1/courses/{courseId}/teachers.parameters[11].$ref: '#/parameters/bearer_token'
paths./v1/courses/{courseId}/teachers.parameters[12].$ref: '#/parameters/upload_protocol'
paths./v1/courses/{courseId}/teachers.post.description: |-
  Creates a teacher of a course.

  This method returns the following error codes:

  * `PERMISSION_DENIED` if the requesting user is not  permitted to create
  teachers in this course or for access errors.
  * `NOT_FOUND` if the requested course ID does not exist.
  * `FAILED_PRECONDITION` if the requested user's account is disabled,
  for the following request errors:
      * CourseMemberLimitReached
      * CourseNotModifiable
      * CourseTeacherLimitReached
      * UserGroupsMembershipLimitReached
  * `ALREADY_EXISTS` if the user is already a teacher or student in the
  course.
paths./v1/courses/{courseId}/teachers.post.operationId: classroom.courses.teachers.create
paths./v1/courses/{courseId}/teachers.post.parameters.length: 2
paths./v1/courses/{courseId}/teachers.post.parameters[0].description: |-
  Identifier of the course.
  This identifier can be either the Classroom-assigned identifier or an
  alias.
paths./v1/courses/{courseId}/teachers.post.parameters[0].in: path
paths./v1/courses/{courseId}/teachers.post.parameters[0].name: courseId
paths./v1/courses/{courseId}/teachers.post.parameters[0].required: true
paths./v1/courses/{courseId}/teachers.post.parameters[0].type: string
paths./v1/courses/{courseId}/teachers.post.parameters[1].in: body
paths./v1/courses/{courseId}/teachers.post.parameters[1].name: body
paths./v1/courses/{courseId}/teachers.post.parameters[1].schema.$ref: '#/definitions/Teacher'
paths./v1/courses/{courseId}/teachers.post.responses.200.description: Successful response
paths./v1/courses/{courseId}/teachers.post.responses.200.schema.$ref: '#/definitions/Teacher'
paths./v1/courses/{courseId}/teachers.post.security.length: 3
paths./v1/courses/{courseId}/teachers.post.security[0].Oauth2.length: 1
paths./v1/courses/{courseId}/teachers.post.security[0].Oauth2[0]: https://www.googleapis.com/auth/classroom.profile.emails
paths./v1/courses/{courseId}/teachers.post.security[1].Oauth2.length: 1
paths./v1/courses/{courseId}/teachers.post.security[1].Oauth2[0]: https://www.googleapis.com/auth/classroom.profile.photos
paths./v1/courses/{courseId}/teachers.post.security[2].Oauth2.length: 1
paths./v1/courses/{courseId}/teachers.post.security[2].Oauth2[0]: https://www.googleapis.com/auth/classroom.rosters
paths./v1/courses/{courseId}/teachers.post.tags.length: 1
paths./v1/courses/{courseId}/teachers.post.tags[0]: courses
paths./v1/courses/{courseId}/teachers/{userId}.delete.description: |-
  Deletes a teacher of a course.

  This method returns the following error codes:

  * `PERMISSION_DENIED` if the requesting user is not permitted to delete
  teachers of this course or for access errors.
  * `NOT_FOUND` if no teacher of this course has the requested ID or if the
  course does not exist.
  * `FAILED_PRECONDITION` if the requested ID belongs to the primary teacher
  of this course.
paths./v1/courses/{courseId}/teachers/{userId}.delete.operationId: classroom.courses.teachers.delete
paths./v1/courses/{courseId}/teachers/{userId}.delete.parameters.length: 2
paths./v1/courses/{courseId}/teachers/{userId}.delete.parameters[0].description: |-
  Identifier of the course.
  This identifier can be either the Classroom-assigned identifier or an
  alias.
paths./v1/courses/{courseId}/teachers/{userId}.delete.parameters[0].in: path
paths./v1/courses/{courseId}/teachers/{userId}.delete.parameters[0].name: courseId
paths./v1/courses/{courseId}/teachers/{userId}.delete.parameters[0].required: true
paths./v1/courses/{courseId}/teachers/{userId}.delete.parameters[0].type: string
paths./v1/courses/{courseId}/teachers/{userId}.delete.parameters[1].description: |-
  Identifier of the teacher to delete. The identifier can be one of the
  following:

  * the numeric identifier for the user
  * the email address of the user
  * the string literal `"me"`, indicating the requesting user
paths./v1/courses/{courseId}/teachers/{userId}.delete.parameters[1].in: path
paths./v1/courses/{courseId}/teachers/{userId}.delete.parameters[1].name: userId
paths./v1/courses/{courseId}/teachers/{userId}.delete.parameters[1].required: true
paths./v1/courses/{courseId}/teachers/{userId}.delete.parameters[1].type: string
paths./v1/courses/{courseId}/teachers/{userId}.delete.responses.200.description: Successful
  response
paths./v1/courses/{courseId}/teachers/{userId}.delete.responses.200.schema.$ref: '#/definitions/Empty'
paths./v1/courses/{courseId}/teachers/{userId}.delete.security.length: 1
paths./v1/courses/{courseId}/teachers/{userId}.delete.security[0].Oauth2.length: 1
paths./v1/courses/{courseId}/teachers/{userId}.delete.security[0].Oauth2[0]: https://www.googleapis.com/auth/classroom.rosters
paths./v1/courses/{courseId}/teachers/{userId}.delete.tags.length: 1
paths./v1/courses/{courseId}/teachers/{userId}.delete.tags[0]: courses
paths./v1/courses/{courseId}/teachers/{userId}.get.description: |-
  Returns a teacher of a course.

  This method returns the following error codes:

  * `PERMISSION_DENIED` if the requesting user is not permitted to view
  teachers of this course or for access errors.
  * `NOT_FOUND` if no teacher of this course has the requested ID or if the
  course does not exist.
paths./v1/courses/{courseId}/teachers/{userId}.get.operationId: classroom.courses.teachers.get
paths./v1/courses/{courseId}/teachers/{userId}.get.parameters.length: 2
paths./v1/courses/{courseId}/teachers/{userId}.get.parameters[0].description: |-
  Identifier of the course.
  This identifier can be either the Classroom-assigned identifier or an
  alias.
paths./v1/courses/{courseId}/teachers/{userId}.get.parameters[0].in: path
paths./v1/courses/{courseId}/teachers/{userId}.get.parameters[0].name: courseId
paths./v1/courses/{courseId}/teachers/{userId}.get.parameters[0].required: true
paths./v1/courses/{courseId}/teachers/{userId}.get.parameters[0].type: string
paths./v1/courses/{courseId}/teachers/{userId}.get.parameters[1].description: |-
  Identifier of the teacher to return. The identifier can be one of the
  following:

  * the numeric identifier for the user
  * the email address of the user
  * the string literal `"me"`, indicating the requesting user
paths./v1/courses/{courseId}/teachers/{userId}.get.parameters[1].in: path
paths./v1/courses/{courseId}/teachers/{userId}.get.parameters[1].name: userId
paths./v1/courses/{courseId}/teachers/{userId}.get.parameters[1].required: true
paths./v1/courses/{courseId}/teachers/{userId}.get.parameters[1].type: string
paths./v1/courses/{courseId}/teachers/{userId}.get.responses.200.description: Successful
  response
paths./v1/courses/{courseId}/teachers/{userId}.get.responses.200.schema.$ref: '#/definitions/Teacher'
paths./v1/courses/{courseId}/teachers/{userId}.get.security.length: 4
paths./v1/courses/{courseId}/teachers/{userId}.get.security[0].Oauth2.length: 1
paths./v1/courses/{courseId}/teachers/{userId}.get.security[0].Oauth2[0]: https://www.googleapis.com/auth/classroom.profile.emails
paths./v1/courses/{courseId}/teachers/{userId}.get.security[1].Oauth2.length: 1
paths./v1/courses/{courseId}/teachers/{userId}.get.security[1].Oauth2[0]: https://www.googleapis.com/auth/classroom.profile.photos
paths./v1/courses/{courseId}/teachers/{userId}.get.security[2].Oauth2.length: 1
paths./v1/courses/{courseId}/teachers/{userId}.get.security[2].Oauth2[0]: https://www.googleapis.com/auth/classroom.rosters
paths./v1/courses/{courseId}/teachers/{userId}.get.security[3].Oauth2.length: 1
paths./v1/courses/{courseId}/teachers/{userId}.get.security[3].Oauth2[0]: https://www.googleapis.com/auth/classroom.rosters.readonly
paths./v1/courses/{courseId}/teachers/{userId}.get.tags.length: 1
paths./v1/courses/{courseId}/teachers/{userId}.get.tags[0]: courses
paths./v1/courses/{courseId}/teachers/{userId}.parameters.length: 13
paths./v1/courses/{courseId}/teachers/{userId}.parameters[0].$ref: '#/parameters/access_token'
paths./v1/courses/{courseId}/teachers/{userId}.parameters[1].$ref: '#/parameters/prettyPrint'
paths./v1/courses/{courseId}/teachers/{userId}.parameters[2].$ref: '#/parameters/key'
paths./v1/courses/{courseId}/teachers/{userId}.parameters[3].$ref: '#/parameters/quotaUser'
paths./v1/courses/{courseId}/teachers/{userId}.parameters[4].$ref: '#/parameters/pp'
paths./v1/courses/{courseId}/teachers/{userId}.parameters[5].$ref: '#/parameters/fields'
paths./v1/courses/{courseId}/teachers/{userId}.parameters[6].$ref: '#/parameters/alt'
paths./v1/courses/{courseId}/teachers/{userId}.parameters[7].$ref: '#/parameters/$.xgafv'
paths./v1/courses/{courseId}/teachers/{userId}.parameters[8].$ref: '#/parameters/callback'
paths./v1/courses/{courseId}/teachers/{userId}.parameters[9].$ref: '#/parameters/oauth_token'
paths./v1/courses/{courseId}/teachers/{userId}.parameters[10].$ref: '#/parameters/uploadType'
paths./v1/courses/{courseId}/teachers/{userId}.parameters[11].$ref: '#/parameters/bearer_token'
paths./v1/courses/{courseId}/teachers/{userId}.parameters[12].$ref: '#/parameters/upload_protocol'
paths./v1/courses/{id}.delete.description: |-
  Deletes a course.

  This method returns the following error codes:

  * `PERMISSION_DENIED` if the requesting user is not permitted to delete the
  requested course or for access errors.
  * `NOT_FOUND` if no course exists with the requested ID.
paths./v1/courses/{id}.delete.operationId: classroom.courses.delete
paths./v1/courses/{id}.delete.parameters.length: 1
paths./v1/courses/{id}.delete.parameters[0].description: |-
  Identifier of the course to delete.
  This identifier can be either the Classroom-assigned identifier or an
  alias.
paths./v1/courses/{id}.delete.parameters[0].in: path
paths./v1/courses/{id}.delete.parameters[0].name: id
paths./v1/courses/{id}.delete.parameters[0].required: true
paths./v1/courses/{id}.delete.parameters[0].type: string
paths./v1/courses/{id}.delete.responses.200.description: Successful response
paths./v1/courses/{id}.delete.responses.200.schema.$ref: '#/definitions/Empty'
paths./v1/courses/{id}.delete.security.length: 1
paths./v1/courses/{id}.delete.security[0].Oauth2.length: 1
paths./v1/courses/{id}.delete.security[0].Oauth2[0]: https://www.googleapis.com/auth/classroom.courses
paths./v1/courses/{id}.delete.tags.length: 1
paths./v1/courses/{id}.delete.tags[0]: courses
paths./v1/courses/{id}.get.description: |-
  Returns a course.

  This method returns the following error codes:

  * `PERMISSION_DENIED` if the requesting user is not permitted to access the
  requested course or for access errors.
  * `NOT_FOUND` if no course exists with the requested ID.
paths./v1/courses/{id}.get.operationId: classroom.courses.get
paths./v1/courses/{id}.get.parameters.length: 1
paths./v1/courses/{id}.get.parameters[0].description: |-
  Identifier of the course to return.
  This identifier can be either the Classroom-assigned identifier or an
  alias.
paths./v1/courses/{id}.get.parameters[0].in: path
paths./v1/courses/{id}.get.parameters[0].name: id
paths./v1/courses/{id}.get.parameters[0].required: true
paths./v1/courses/{id}.get.parameters[0].type: string
paths./v1/courses/{id}.get.responses.200.description: Successful response
paths./v1/courses/{id}.get.responses.200.schema.$ref: '#/definitions/Course'
paths./v1/courses/{id}.get.security.length: 2
paths./v1/courses/{id}.get.security[0].Oauth2.length: 1
paths./v1/courses/{id}.get.security[0].Oauth2[0]: https://www.googleapis.com/auth/classroom.courses
paths./v1/courses/{id}.get.security[1].Oauth2.length: 1
paths./v1/courses/{id}.get.security[1].Oauth2[0]: https://www.googleapis.com/auth/classroom.courses.readonly
paths./v1/courses/{id}.get.tags.length: 1
paths./v1/courses/{id}.get.tags[0]: courses
paths./v1/courses/{id}.parameters.length: 13
paths./v1/courses/{id}.parameters[0].$ref: '#/parameters/access_token'
paths./v1/courses/{id}.parameters[1].$ref: '#/parameters/prettyPrint'
paths./v1/courses/{id}.parameters[2].$ref: '#/parameters/key'
paths./v1/courses/{id}.parameters[3].$ref: '#/parameters/quotaUser'
paths./v1/courses/{id}.parameters[4].$ref: '#/parameters/pp'
paths./v1/courses/{id}.parameters[5].$ref: '#/parameters/fields'
paths./v1/courses/{id}.parameters[6].$ref: '#/parameters/alt'
paths./v1/courses/{id}.parameters[7].$ref: '#/parameters/$.xgafv'
paths./v1/courses/{id}.parameters[8].$ref: '#/parameters/callback'
paths./v1/courses/{id}.parameters[9].$ref: '#/parameters/oauth_token'
paths./v1/courses/{id}.parameters[10].$ref: '#/parameters/uploadType'
paths./v1/courses/{id}.parameters[11].$ref: '#/parameters/bearer_token'
paths./v1/courses/{id}.parameters[12].$ref: '#/parameters/upload_protocol'
paths./v1/courses/{id}.patch.description: |-
  Updates one or more fields in a course.

  This method returns the following error codes:

  * `PERMISSION_DENIED` if the requesting user is not permitted to modify the
  requested course or for access errors.
  * `NOT_FOUND` if no course exists with the requested ID.
  * `INVALID_ARGUMENT` if invalid fields are specified in the update mask or
  if no update mask is supplied.
  * `FAILED_PRECONDITION` for the following request errors:
      * CourseNotModifiable
paths./v1/courses/{id}.patch.operationId: classroom.courses.patch
paths./v1/courses/{id}.patch.parameters.length: 3
paths./v1/courses/{id}.patch.parameters[0].in: body
paths./v1/courses/{id}.patch.parameters[0].name: body
paths./v1/courses/{id}.patch.parameters[0].schema.$ref: '#/definitions/Course'
paths./v1/courses/{id}.patch.parameters[1].description: |-
  Identifier of the course to update.
  This identifier can be either the Classroom-assigned identifier or an
  alias.
paths./v1/courses/{id}.patch.parameters[1].in: path
paths./v1/courses/{id}.patch.parameters[1].name: id
paths./v1/courses/{id}.patch.parameters[1].required: true
paths./v1/courses/{id}.patch.parameters[1].type: string
paths./v1/courses/{id}.patch.parameters[2].description: |-
  Mask that identifies which fields on the course to update.
  This field is required to do an update. The update will fail if invalid
  fields are specified. The following fields are valid:

  * `name`
  * `section`
  * `descriptionHeading`
  * `description`
  * `room`
  * `courseState`
  * `ownerId`

  Note: patches to ownerId are treated as being effective immediately, but in
  practice it may take some time for the ownership transfer of all affected
  resources to complete.

  When set in a query parameter, this field should be specified as

  `updateMask=<field1>,<field2>,...`
paths./v1/courses/{id}.patch.parameters[2].in: query
paths./v1/courses/{id}.patch.parameters[2].name: updateMask
paths./v1/courses/{id}.patch.parameters[2].type: string
paths./v1/courses/{id}.patch.responses.200.description: Successful response
paths./v1/courses/{id}.patch.responses.200.schema.$ref: '#/definitions/Course'
paths./v1/courses/{id}.patch.security.length: 1
paths./v1/courses/{id}.patch.security[0].Oauth2.length: 1
paths./v1/courses/{id}.patch.security[0].Oauth2[0]: https://www.googleapis.com/auth/classroom.courses
paths./v1/courses/{id}.patch.tags.length: 1
paths./v1/courses/{id}.patch.tags[0]: courses
paths./v1/courses/{id}.put.description: |-
  Updates a course.

  This method returns the following error codes:

  * `PERMISSION_DENIED` if the requesting user is not permitted to modify the
  requested course or for access errors.
  * `NOT_FOUND` if no course exists with the requested ID.
  * `FAILED_PRECONDITION` for the following request errors:
      * CourseNotModifiable
paths./v1/courses/{id}.put.operationId: classroom.courses.update
paths./v1/courses/{id}.put.parameters.length: 2
paths./v1/courses/{id}.put.parameters[0].description: |-
  Identifier of the course to update.
  This identifier can be either the Classroom-assigned identifier or an
  alias.
paths./v1/courses/{id}.put.parameters[0].in: path
paths./v1/courses/{id}.put.parameters[0].name: id
paths./v1/courses/{id}.put.parameters[0].required: true
paths./v1/courses/{id}.put.parameters[0].type: string
paths./v1/courses/{id}.put.parameters[1].in: body
paths./v1/courses/{id}.put.parameters[1].name: body
paths./v1/courses/{id}.put.parameters[1].schema.$ref: '#/definitions/Course'
paths./v1/courses/{id}.put.responses.200.description: Successful response
paths./v1/courses/{id}.put.responses.200.schema.$ref: '#/definitions/Course'
paths./v1/courses/{id}.put.security.length: 1
paths./v1/courses/{id}.put.security[0].Oauth2.length: 1
paths./v1/courses/{id}.put.security[0].Oauth2[0]: https://www.googleapis.com/auth/classroom.courses
paths./v1/courses/{id}.put.tags.length: 1
paths./v1/courses/{id}.put.tags[0]: courses
paths./v1/invitations.get.description: |-
  Returns a list of invitations that the requesting user is permitted to
  view, restricted to those that match the list request.

  *Note:* At least one of `user_id` or `course_id` must be supplied. Both
  fields can be supplied.

  This method returns the following error codes:

  * `PERMISSION_DENIED` for access errors.
paths./v1/invitations.get.operationId: classroom.invitations.list
paths./v1/invitations.get.parameters.length: 4
paths./v1/invitations.get.parameters[0].description: |-
  Restricts returned invitations to those for a course with the specified
  identifier.
paths./v1/invitations.get.parameters[0].in: query
paths./v1/invitations.get.parameters[0].name: courseId
paths./v1/invitations.get.parameters[0].type: string
paths./v1/invitations.get.parameters[1].description: |-
  Maximum number of items to return. Zero means no maximum.

  The server may return fewer than the specified number of results.
paths./v1/invitations.get.parameters[1].in: query
paths./v1/invitations.get.parameters[1].name: pageSize
paths./v1/invitations.get.parameters[1].type: integer
paths./v1/invitations.get.parameters[2].description: |-
  Restricts returned invitations to those for a specific user. The identifier
  can be one of the following:

  * the numeric identifier for the user
  * the email address of the user
  * the string literal `"me"`, indicating the requesting user
paths./v1/invitations.get.parameters[2].in: query
paths./v1/invitations.get.parameters[2].name: userId
paths./v1/invitations.get.parameters[2].type: string
paths./v1/invitations.get.parameters[3].description: |-
  nextPageToken
  value returned from a previous
  list call, indicating
  that the subsequent page of results should be returned.

  The list request must be
  otherwise identical to the one that resulted in this token.
paths./v1/invitations.get.parameters[3].in: query
paths./v1/invitations.get.parameters[3].name: pageToken
paths./v1/invitations.get.parameters[3].type: string
paths./v1/invitations.get.responses.200.description: Successful response
paths./v1/invitations.get.responses.200.schema.$ref: '#/definitions/ListInvitationsResponse'
paths./v1/invitations.get.security.length: 2
paths./v1/invitations.get.security[0].Oauth2.length: 1
paths./v1/invitations.get.security[0].Oauth2[0]: https://www.googleapis.com/auth/classroom.rosters
paths./v1/invitations.get.security[1].Oauth2.length: 1
paths./v1/invitations.get.security[1].Oauth2[0]: https://www.googleapis.com/auth/classroom.rosters.readonly
paths./v1/invitations.get.tags.length: 1
paths./v1/invitations.get.tags[0]: invitations
paths./v1/invitations.parameters.length: 13
paths./v1/invitations.parameters[0].$ref: '#/parameters/access_token'
paths./v1/invitations.parameters[1].$ref: '#/parameters/prettyPrint'
paths./v1/invitations.parameters[2].$ref: '#/parameters/key'
paths./v1/invitations.parameters[3].$ref: '#/parameters/quotaUser'
paths./v1/invitations.parameters[4].$ref: '#/parameters/pp'
paths./v1/invitations.parameters[5].$ref: '#/parameters/fields'
paths./v1/invitations.parameters[6].$ref: '#/parameters/alt'
paths./v1/invitations.parameters[7].$ref: '#/parameters/$.xgafv'
paths./v1/invitations.parameters[8].$ref: '#/parameters/callback'
paths./v1/invitations.parameters[9].$ref: '#/parameters/oauth_token'
paths./v1/invitations.parameters[10].$ref: '#/parameters/uploadType'
paths./v1/invitations.parameters[11].$ref: '#/parameters/bearer_token'
paths./v1/invitations.parameters[12].$ref: '#/parameters/upload_protocol'
paths./v1/invitations.post.description: |-
  Creates an invitation. Only one invitation for a user and course may exist
  at a time. Delete and re-create an invitation to make changes.

  This method returns the following error codes:

  * `PERMISSION_DENIED` if the requesting user is not permitted to create
  invitations for this course or for access errors.
  * `NOT_FOUND` if the course or the user does not exist.
  * `FAILED_PRECONDITION` if the requested user's account is disabled or if
  the user already has this role or a role with greater permissions.
  * `ALREADY_EXISTS` if an invitation for the specified user and course
  already exists.
paths./v1/invitations.post.operationId: classroom.invitations.create
paths./v1/invitations.post.parameters.length: 1
paths./v1/invitations.post.parameters[0].in: body
paths./v1/invitations.post.parameters[0].name: body
paths./v1/invitations.post.parameters[0].schema.$ref: '#/definitions/Invitation'
paths./v1/invitations.post.responses.200.description: Successful response
paths./v1/invitations.post.responses.200.schema.$ref: '#/definitions/Invitation'
paths./v1/invitations.post.security.length: 1
paths./v1/invitations.post.security[0].Oauth2.length: 1
paths./v1/invitations.post.security[0].Oauth2[0]: https://www.googleapis.com/auth/classroom.rosters
paths./v1/invitations.post.tags.length: 1
paths./v1/invitations.post.tags[0]: invitations
paths./v1/invitations/{id}.delete.description: |-
  Deletes an invitation.

  This method returns the following error codes:

  * `PERMISSION_DENIED` if the requesting user is not permitted to delete the
  requested invitation or for access errors.
  * `NOT_FOUND` if no invitation exists with the requested ID.
paths./v1/invitations/{id}.delete.operationId: classroom.invitations.delete
paths./v1/invitations/{id}.delete.parameters.length: 1
paths./v1/invitations/{id}.delete.parameters[0].description: Identifier of the invitation
  to delete.
paths./v1/invitations/{id}.delete.parameters[0].in: path
paths./v1/invitations/{id}.delete.parameters[0].name: id
paths./v1/invitations/{id}.delete.parameters[0].required: true
paths./v1/invitations/{id}.delete.parameters[0].type: string
paths./v1/invitations/{id}.delete.responses.200.description: Successful response
paths./v1/invitations/{id}.delete.responses.200.schema.$ref: '#/definitions/Empty'
paths./v1/invitations/{id}.delete.security.length: 1
paths./v1/invitations/{id}.delete.security[0].Oauth2.length: 1
paths./v1/invitations/{id}.delete.security[0].Oauth2[0]: https://www.googleapis.com/auth/classroom.rosters
paths./v1/invitations/{id}.delete.tags.length: 1
paths./v1/invitations/{id}.delete.tags[0]: invitations
paths./v1/invitations/{id}.get.description: |-
  Returns an invitation.

  This method returns the following error codes:

  * `PERMISSION_DENIED` if the requesting user is not permitted to view the
  requested invitation or for access errors.
  * `NOT_FOUND` if no invitation exists with the requested ID.
paths./v1/invitations/{id}.get.operationId: classroom.invitations.get
paths./v1/invitations/{id}.get.parameters.length: 1
paths./v1/invitations/{id}.get.parameters[0].description: Identifier of the invitation
  to return.
paths./v1/invitations/{id}.get.parameters[0].in: path
paths./v1/invitations/{id}.get.parameters[0].name: id
paths./v1/invitations/{id}.get.parameters[0].required: true
paths./v1/invitations/{id}.get.parameters[0].type: string
paths./v1/invitations/{id}.get.responses.200.description: Successful response
paths./v1/invitations/{id}.get.responses.200.schema.$ref: '#/definitions/Invitation'
paths./v1/invitations/{id}.get.security.length: 2
paths./v1/invitations/{id}.get.security[0].Oauth2.length: 1
paths./v1/invitations/{id}.get.security[0].Oauth2[0]: https://www.googleapis.com/auth/classroom.rosters
paths./v1/invitations/{id}.get.security[1].Oauth2.length: 1
paths./v1/invitations/{id}.get.security[1].Oauth2[0]: https://www.googleapis.com/auth/classroom.rosters.readonly
paths./v1/invitations/{id}.get.tags.length: 1
paths./v1/invitations/{id}.get.tags[0]: invitations
paths./v1/invitations/{id}.parameters.length: 13
paths./v1/invitations/{id}.parameters[0].$ref: '#/parameters/access_token'
paths./v1/invitations/{id}.parameters[1].$ref: '#/parameters/prettyPrint'
paths./v1/invitations/{id}.parameters[2].$ref: '#/parameters/key'
paths./v1/invitations/{id}.parameters[3].$ref: '#/parameters/quotaUser'
paths./v1/invitations/{id}.parameters[4].$ref: '#/parameters/pp'
paths./v1/invitations/{id}.parameters[5].$ref: '#/parameters/fields'
paths./v1/invitations/{id}.parameters[6].$ref: '#/parameters/alt'
paths./v1/invitations/{id}.parameters[7].$ref: '#/parameters/$.xgafv'
paths./v1/invitations/{id}.parameters[8].$ref: '#/parameters/callback'
paths./v1/invitations/{id}.parameters[9].$ref: '#/parameters/oauth_token'
paths./v1/invitations/{id}.parameters[10].$ref: '#/parameters/uploadType'
paths./v1/invitations/{id}.parameters[11].$ref: '#/parameters/bearer_token'
paths./v1/invitations/{id}.parameters[12].$ref: '#/parameters/upload_protocol'
paths./v1/invitations/{id}:accept.parameters.length: 13
paths./v1/invitations/{id}:accept.parameters[0].$ref: '#/parameters/access_token'
paths./v1/invitations/{id}:accept.parameters[1].$ref: '#/parameters/prettyPrint'
paths./v1/invitations/{id}:accept.parameters[2].$ref: '#/parameters/key'
paths./v1/invitations/{id}:accept.parameters[3].$ref: '#/parameters/quotaUser'
paths./v1/invitations/{id}:accept.parameters[4].$ref: '#/parameters/pp'
paths./v1/invitations/{id}:accept.parameters[5].$ref: '#/parameters/fields'
paths./v1/invitations/{id}:accept.parameters[6].$ref: '#/parameters/alt'
paths./v1/invitations/{id}:accept.parameters[7].$ref: '#/parameters/$.xgafv'
paths./v1/invitations/{id}:accept.parameters[8].$ref: '#/parameters/callback'
paths./v1/invitations/{id}:accept.parameters[9].$ref: '#/parameters/oauth_token'
paths./v1/invitations/{id}:accept.parameters[10].$ref: '#/parameters/uploadType'
paths./v1/invitations/{id}:accept.parameters[11].$ref: '#/parameters/bearer_token'
paths./v1/invitations/{id}:accept.parameters[12].$ref: '#/parameters/upload_protocol'
paths./v1/invitations/{id}:accept.post.description: |-
  Accepts an invitation, removing it and adding the invited user to the
  teachers or students (as appropriate) of the specified course. Only the
  invited user may accept an invitation.

  This method returns the following error codes:

  * `PERMISSION_DENIED` if the requesting user is not permitted to accept the
  requested invitation or for access errors.
  * `FAILED_PRECONDITION` for the following request errors:
      * CourseMemberLimitReached
      * CourseNotModifiable
      * CourseTeacherLimitReached
      * UserGroupsMembershipLimitReached
  * `NOT_FOUND` if no invitation exists with the requested ID.
paths./v1/invitations/{id}:accept.post.operationId: classroom.invitations.accept
paths./v1/invitations/{id}:accept.post.parameters.length: 1
paths./v1/invitations/{id}:accept.post.parameters[0].description: Identifier of the
  invitation to accept.
paths./v1/invitations/{id}:accept.post.parameters[0].in: path
paths./v1/invitations/{id}:accept.post.parameters[0].name: id
paths./v1/invitations/{id}:accept.post.parameters[0].required: true
paths./v1/invitations/{id}:accept.post.parameters[0].type: string
paths./v1/invitations/{id}:accept.post.responses.200.description: Successful response
paths./v1/invitations/{id}:accept.post.responses.200.schema.$ref: '#/definitions/Empty'
paths./v1/invitations/{id}:accept.post.security.length: 1
paths./v1/invitations/{id}:accept.post.security[0].Oauth2.length: 1
paths./v1/invitations/{id}:accept.post.security[0].Oauth2[0]: https://www.googleapis.com/auth/classroom.rosters
paths./v1/invitations/{id}:accept.post.tags.length: 1
paths./v1/invitations/{id}:accept.post.tags[0]: invitations
paths./v1/registrations.parameters.length: 13
paths./v1/registrations.parameters[0].$ref: '#/parameters/$.xgafv'
paths./v1/registrations.parameters[1].$ref: '#/parameters/access_token'
paths./v1/registrations.parameters[2].$ref: '#/parameters/alt'
paths./v1/registrations.parameters[3].$ref: '#/parameters/bearer_token'
paths./v1/registrations.parameters[4].$ref: '#/parameters/callback'
paths./v1/registrations.parameters[5].$ref: '#/parameters/fields'
paths./v1/registrations.parameters[6].$ref: '#/parameters/key'
paths./v1/registrations.parameters[7].$ref: '#/parameters/oauth_token'
paths./v1/registrations.parameters[8].$ref: '#/parameters/pp'
paths./v1/registrations.parameters[9].$ref: '#/parameters/prettyPrint'
paths./v1/registrations.parameters[10].$ref: '#/parameters/quotaUser'
paths./v1/registrations.parameters[11].$ref: '#/parameters/uploadType'
paths./v1/registrations.parameters[12].$ref: '#/parameters/upload_protocol'
paths./v1/registrations.post.description: |-
  Creates a `Registration`, causing Classroom to start sending notifications
  from the provided `feed` to the provided `destination`.

  Returns the created `Registration`. Currently, this will be the same as
  the argument, but with server-assigned fields such as `expiry_time` and
  `id` filled in.

  Note that any value specified for the `expiry_time` or `id` fields will be
  ignored.

  While Classroom may validate the `destination` and return errors on a best
  effort basis, it is the caller's responsibility to ensure that it exists
  and that Classroom has permission to publish to it.

  This method may return the following error codes:

  * `PERMISSION_DENIED` if:
    * the authenticated user does not have permission to receive
      notifications from the requested field; or
    * the credential provided does not include the appropriate scope for the
      requested feed.
    * another access error is encountered.
  * `INVALID_ARGUMENT` if:
    * no `destination` is specified, or the specified `destination` is not
      valid; or
    * no `feed` is specified, or the specified `feed` is not valid.
  * `NOT_FOUND` if:
    * the specified `feed` cannot be located, or the requesting user does not
      have permission to determine whether or not it exists; or
    * the specified `destination` cannot be located, or Classroom has not
      been granted permission to publish to it.
paths./v1/registrations.post.operationId: classroom.registrations.create
paths./v1/registrations.post.parameters.length: 1
paths./v1/registrations.post.parameters[0].in: body
paths./v1/registrations.post.parameters[0].name: body
paths./v1/registrations.post.parameters[0].schema.$ref: '#/definitions/Registration'
paths./v1/registrations.post.responses.200.description: Successful response
paths./v1/registrations.post.responses.200.schema.$ref: '#/definitions/Registration'
paths./v1/registrations.post.security.length: 2
paths./v1/registrations.post.security[0].Oauth2.length: 1
paths./v1/registrations.post.security[0].Oauth2[0]: https://www.googleapis.com/auth/classroom.rosters
paths./v1/registrations.post.security[1].Oauth2.length: 1
paths./v1/registrations.post.security[1].Oauth2[0]: https://www.googleapis.com/auth/classroom.rosters.readonly
paths./v1/registrations.post.tags.length: 1
paths./v1/registrations.post.tags[0]: registrations
paths./v1/registrations/{registrationId}.delete.description: |-
  Deletes a `Registration`, causing Classroom to stop sending notifications
  for that `Registration`.
paths./v1/registrations/{registrationId}.delete.operationId: classroom.registrations.delete
paths./v1/registrations/{registrationId}.delete.parameters.length: 1
paths./v1/registrations/{registrationId}.delete.parameters[0].description: The `registration_id`
  of the `Registration` to be deleted.
paths./v1/registrations/{registrationId}.delete.parameters[0].in: path
paths./v1/registrations/{registrationId}.delete.parameters[0].name: registrationId
paths./v1/registrations/{registrationId}.delete.parameters[0].required: true
paths./v1/registrations/{registrationId}.delete.parameters[0].type: string
paths./v1/registrations/{registrationId}.delete.responses.200.description: Successful
  response
paths./v1/registrations/{registrationId}.delete.responses.200.schema.$ref: '#/definitions/Empty'
paths./v1/registrations/{registrationId}.delete.security.length: 2
paths./v1/registrations/{registrationId}.delete.security[0].Oauth2.length: 1
paths./v1/registrations/{registrationId}.delete.security[0].Oauth2[0]: https://www.googleapis.com/auth/classroom.rosters
paths./v1/registrations/{registrationId}.delete.security[1].Oauth2.length: 1
paths./v1/registrations/{registrationId}.delete.security[1].Oauth2[0]: https://www.googleapis.com/auth/classroom.rosters.readonly
paths./v1/registrations/{registrationId}.delete.tags.length: 1
paths./v1/registrations/{registrationId}.delete.tags[0]: registrations
paths./v1/registrations/{registrationId}.parameters.length: 13
paths./v1/registrations/{registrationId}.parameters[0].$ref: '#/parameters/$.xgafv'
paths./v1/registrations/{registrationId}.parameters[1].$ref: '#/parameters/access_token'
paths./v1/registrations/{registrationId}.parameters[2].$ref: '#/parameters/alt'
paths./v1/registrations/{registrationId}.parameters[3].$ref: '#/parameters/bearer_token'
paths./v1/registrations/{registrationId}.parameters[4].$ref: '#/parameters/callback'
paths./v1/registrations/{registrationId}.parameters[5].$ref: '#/parameters/fields'
paths./v1/registrations/{registrationId}.parameters[6].$ref: '#/parameters/key'
paths./v1/registrations/{registrationId}.parameters[7].$ref: '#/parameters/oauth_token'
paths./v1/registrations/{registrationId}.parameters[8].$ref: '#/parameters/pp'
paths./v1/registrations/{registrationId}.parameters[9].$ref: '#/parameters/prettyPrint'
paths./v1/registrations/{registrationId}.parameters[10].$ref: '#/parameters/quotaUser'
paths./v1/registrations/{registrationId}.parameters[11].$ref: '#/parameters/uploadType'
paths./v1/registrations/{registrationId}.parameters[12].$ref: '#/parameters/upload_protocol'
paths./v1/userProfiles/{studentId}/guardianInvitations.get.description: |-
  Returns a list of guardian invitations that the requesting user is
  permitted to view, filtered by the parameters provided.

  This method returns the following error codes:

  * `PERMISSION_DENIED` if a `student_id` is specified, and the requesting
    user is not permitted to view guardian invitations for that student, if
    `"-"` is specified as the `student_id` and the user is not a domain
    administrator, if guardians are not enabled for the domain in question,
    or for other access errors.
  * `INVALID_ARGUMENT` if a `student_id` is specified, but its format cannot
    be recognized (it is not an email address, nor a `student_id` from the
    API, nor the literal string `me`). May also be returned if an invalid
    `page_token` or `state` is provided.
  * `NOT_FOUND` if a `student_id` is specified, and its format can be
    recognized, but Classroom has no record of that student.
paths./v1/userProfiles/{studentId}/guardianInvitations.get.operationId: classroom.userProfiles.guardianInvitations.list
paths./v1/userProfiles/{studentId}/guardianInvitations.get.parameters.length: 5
paths./v1/userProfiles/{studentId}/guardianInvitations.get.parameters[0].description: |-
  The ID of the student whose guardian invitations are to be returned.
  The identifier can be one of the following:

  * the numeric identifier for the user
  * the email address of the user
  * the string literal `"me"`, indicating the requesting user
  * the string literal `"-"`, indicating that results should be returned for
    all students that the requesting user is permitted to view guardian
    invitations.
paths./v1/userProfiles/{studentId}/guardianInvitations.get.parameters[0].in: path
paths./v1/userProfiles/{studentId}/guardianInvitations.get.parameters[0].name: studentId
paths./v1/userProfiles/{studentId}/guardianInvitations.get.parameters[0].required: true
paths./v1/userProfiles/{studentId}/guardianInvitations.get.parameters[0].type: string
paths./v1/userProfiles/{studentId}/guardianInvitations.get.parameters[1].description: |-
  Maximum number of items to return. Zero or unspecified indicates that the
  server may assign a maximum.

  The server may return fewer than the specified number of results.
paths./v1/userProfiles/{studentId}/guardianInvitations.get.parameters[1].in: query
paths./v1/userProfiles/{studentId}/guardianInvitations.get.parameters[1].name: pageSize
paths./v1/userProfiles/{studentId}/guardianInvitations.get.parameters[1].type: integer
paths./v1/userProfiles/{studentId}/guardianInvitations.get.parameters[2].description: |-
  If specified, only results with the specified `invited_email_address`
  will be returned.
paths./v1/userProfiles/{studentId}/guardianInvitations.get.parameters[2].in: query
paths./v1/userProfiles/{studentId}/guardianInvitations.get.parameters[2].name: invitedEmailAddress
paths./v1/userProfiles/{studentId}/guardianInvitations.get.parameters[2].type: string
paths./v1/userProfiles/{studentId}/guardianInvitations.get.parameters[3].collectionFormat: multi
paths./v1/userProfiles/{studentId}/guardianInvitations.get.parameters[3].description: |-
  If specified, only results with the specified `state` values will be
  returned. Otherwise, results with a `state` of `PENDING` will be returned.
paths./v1/userProfiles/{studentId}/guardianInvitations.get.parameters[3].in: query
paths./v1/userProfiles/{studentId}/guardianInvitations.get.parameters[3].items.enum.length: 3
paths./v1/userProfiles/{studentId}/guardianInvitations.get.parameters[3].items.enum[0]: GUARDIAN_INVITATION_STATE_UNSPECIFIED
paths./v1/userProfiles/{studentId}/guardianInvitations.get.parameters[3].items.enum[1]: PENDING
paths./v1/userProfiles/{studentId}/guardianInvitations.get.parameters[3].items.enum[2]: COMPLETE
paths./v1/userProfiles/{studentId}/guardianInvitations.get.parameters[3].items.type: string
paths./v1/userProfiles/{studentId}/guardianInvitations.get.parameters[3].name: states
paths./v1/userProfiles/{studentId}/guardianInvitations.get.parameters[3].type: array
paths./v1/userProfiles/{studentId}/guardianInvitations.get.parameters[4].description: |-
  nextPageToken
  value returned from a previous
  list call,
  indicating that the subsequent page of results should be returned.

  The list request
  must be otherwise identical to the one that resulted in this token.
paths./v1/userProfiles/{studentId}/guardianInvitations.get.parameters[4].in: query
paths./v1/userProfiles/{studentId}/guardianInvitations.get.parameters[4].name: pageToken
paths./v1/userProfiles/{studentId}/guardianInvitations.get.parameters[4].type: string
paths./v1/userProfiles/{studentId}/guardianInvitations.get.responses.200.description: Successful
  response
paths./v1/userProfiles/{studentId}/guardianInvitations.get.responses.200.schema.$ref: '#/definitions/ListGuardianInvitationsResponse'
paths./v1/userProfiles/{studentId}/guardianInvitations.get.security.length: 2
paths./v1/userProfiles/{studentId}/guardianInvitations.get.security[0].Oauth2.length: 1
paths./v1/userProfiles/{studentId}/guardianInvitations.get.security[0].Oauth2[0]: https://www.googleapis.com/auth/classroom.guardianlinks.students
paths./v1/userProfiles/{studentId}/guardianInvitations.get.security[1].Oauth2.length: 1
paths./v1/userProfiles/{studentId}/guardianInvitations.get.security[1].Oauth2[0]: https://www.googleapis.com/auth/classroom.guardianlinks.students.readonly
paths./v1/userProfiles/{studentId}/guardianInvitations.get.tags.length: 1
paths./v1/userProfiles/{studentId}/guardianInvitations.get.tags[0]: userProfiles
paths./v1/userProfiles/{studentId}/guardianInvitations.parameters.length: 13
paths./v1/userProfiles/{studentId}/guardianInvitations.parameters[0].$ref: '#/parameters/access_token'
paths./v1/userProfiles/{studentId}/guardianInvitations.parameters[1].$ref: '#/parameters/prettyPrint'
paths./v1/userProfiles/{studentId}/guardianInvitations.parameters[2].$ref: '#/parameters/key'
paths./v1/userProfiles/{studentId}/guardianInvitations.parameters[3].$ref: '#/parameters/quotaUser'
paths./v1/userProfiles/{studentId}/guardianInvitations.parameters[4].$ref: '#/parameters/pp'
paths./v1/userProfiles/{studentId}/guardianInvitations.parameters[5].$ref: '#/parameters/fields'
paths./v1/userProfiles/{studentId}/guardianInvitations.parameters[6].$ref: '#/parameters/alt'
paths./v1/userProfiles/{studentId}/guardianInvitations.parameters[7].$ref: '#/parameters/$.xgafv'
paths./v1/userProfiles/{studentId}/guardianInvitations.parameters[8].$ref: '#/parameters/callback'
paths./v1/userProfiles/{studentId}/guardianInvitations.parameters[9].$ref: '#/parameters/oauth_token'
paths./v1/userProfiles/{studentId}/guardianInvitations.parameters[10].$ref: '#/parameters/uploadType'
paths./v1/userProfiles/{studentId}/guardianInvitations.parameters[11].$ref: '#/parameters/bearer_token'
paths./v1/userProfiles/{studentId}/guardianInvitations.parameters[12].$ref: '#/parameters/upload_protocol'
paths./v1/userProfiles/{studentId}/guardianInvitations.post.description: |-
  Creates a guardian invitation, and sends an email to the guardian asking
  them to confirm that they are the student's guardian.

  Once the guardian accepts the invitation, their `state` will change to
  `COMPLETED` and they will start receiving guardian notifications. A
  `Guardian` resource will also be created to represent the active guardian.

  The request object must have the `student_id` and
  `invited_email_address` fields set. Failing to set these fields, or
  setting any other fields in the request, will result in an error.

  This method returns the following error codes:

  * `PERMISSION_DENIED` if the current user does not have permission to
    manage guardians, if the guardian in question has already rejected
    too many requests for that student, if guardians are not enabled for the
    domain in question, or for other access errors.
  * `RESOURCE_EXHAUSTED` if the student or guardian has exceeded the guardian
    link limit.
  * `INVALID_ARGUMENT` if the guardian email address is not valid (for
    example, if it is too long), or if the format of the student ID provided
    cannot be recognized (it is not an email address, nor a `user_id` from
    this API). This error will also be returned if read-only fields are set,
    or if the `state` field is set to to a value other than `PENDING`.
  * `NOT_FOUND` if the student ID provided is a valid student ID, but
    Classroom has no record of that student.
  * `ALREADY_EXISTS` if there is already a pending guardian invitation for
    the student and `invited_email_address` provided, or if the provided
    `invited_email_address` matches the Google account of an existing
    `Guardian` for this user.
paths./v1/userProfiles/{studentId}/guardianInvitations.post.operationId: classroom.userProfiles.guardianInvitations.create
paths./v1/userProfiles/{studentId}/guardianInvitations.post.parameters.length: 2
paths./v1/userProfiles/{studentId}/guardianInvitations.post.parameters[0].description: ID
  of the student (in standard format)
paths./v1/userProfiles/{studentId}/guardianInvitations.post.parameters[0].in: path
paths./v1/userProfiles/{studentId}/guardianInvitations.post.parameters[0].name: studentId
paths./v1/userProfiles/{studentId}/guardianInvitations.post.parameters[0].required: true
paths./v1/userProfiles/{studentId}/guardianInvitations.post.parameters[0].type: string
paths./v1/userProfiles/{studentId}/guardianInvitations.post.parameters[1].in: body
paths./v1/userProfiles/{studentId}/guardianInvitations.post.parameters[1].name: body
paths./v1/userProfiles/{studentId}/guardianInvitations.post.parameters[1].schema.$ref: '#/definitions/GuardianInvitation'
paths./v1/userProfiles/{studentId}/guardianInvitations.post.responses.200.description: Successful
  response
paths./v1/userProfiles/{studentId}/guardianInvitations.post.responses.200.schema.$ref: '#/definitions/GuardianInvitation'
paths./v1/userProfiles/{studentId}/guardianInvitations.post.security.length: 1
paths./v1/userProfiles/{studentId}/guardianInvitations.post.security[0].Oauth2.length: 1
paths./v1/userProfiles/{studentId}/guardianInvitations.post.security[0].Oauth2[0]: https://www.googleapis.com/auth/classroom.guardianlinks.students
paths./v1/userProfiles/{studentId}/guardianInvitations.post.tags.length: 1
paths./v1/userProfiles/{studentId}/guardianInvitations.post.tags[0]: userProfiles
paths./v1/userProfiles/{studentId}/guardianInvitations/{invitationId}.get.description: |-
  Returns a specific guardian invitation.

  This method returns the following error codes:

  * `PERMISSION_DENIED` if the requesting user is not permitted to view
    guardian invitations for the student identified by the `student_id`, if
    guardians are not enabled for the domain in question, or for other
    access errors.
  * `INVALID_ARGUMENT` if a `student_id` is specified, but its format cannot
    be recognized (it is not an email address, nor a `student_id` from the
    API, nor the literal string `me`).
  * `NOT_FOUND` if Classroom cannot find any record of the given student or
    `invitation_id`. May also be returned if the student exists, but the
    requesting user does not have access to see that student.
paths./v1/userProfiles/{studentId}/guardianInvitations/{invitationId}.get.operationId: classroom.userProfiles.guardianInvitations.get
paths./v1/userProfiles/{studentId}/guardianInvitations/{invitationId}.get.parameters.length: 2
paths./v1/userProfiles/{studentId}/guardianInvitations/{invitationId}.get.parameters[0].description: The
  ID of the student whose guardian invitation is being requested.
paths./v1/userProfiles/{studentId}/guardianInvitations/{invitationId}.get.parameters[0].in: path
paths./v1/userProfiles/{studentId}/guardianInvitations/{invitationId}.get.parameters[0].name: studentId
paths./v1/userProfiles/{studentId}/guardianInvitations/{invitationId}.get.parameters[0].required: true
paths./v1/userProfiles/{studentId}/guardianInvitations/{invitationId}.get.parameters[0].type: string
paths./v1/userProfiles/{studentId}/guardianInvitations/{invitationId}.get.parameters[1].description: The
  `id` field of the `GuardianInvitation` being requested.
paths./v1/userProfiles/{studentId}/guardianInvitations/{invitationId}.get.parameters[1].in: path
paths./v1/userProfiles/{studentId}/guardianInvitations/{invitationId}.get.parameters[1].name: invitationId
paths./v1/userProfiles/{studentId}/guardianInvitations/{invitationId}.get.parameters[1].required: true
paths./v1/userProfiles/{studentId}/guardianInvitations/{invitationId}.get.parameters[1].type: string
paths./v1/userProfiles/{studentId}/guardianInvitations/{invitationId}.get.responses.200.description: Successful
  response
paths./v1/userProfiles/{studentId}/guardianInvitations/{invitationId}.get.responses.200.schema.$ref: '#/definitions/GuardianInvitation'
paths./v1/userProfiles/{studentId}/guardianInvitations/{invitationId}.get.security.length: 2
paths./v1/userProfiles/{studentId}/guardianInvitations/{invitationId}.get.security[0].Oauth2.length: 1
paths./v1/userProfiles/{studentId}/guardianInvitations/{invitationId}.get.security[0].Oauth2[0]: https://www.googleapis.com/auth/classroom.guardianlinks.students
paths./v1/userProfiles/{studentId}/guardianInvitations/{invitationId}.get.security[1].Oauth2.length: 1
paths./v1/userProfiles/{studentId}/guardianInvitations/{invitationId}.get.security[1].Oauth2[0]: https://www.googleapis.com/auth/classroom.guardianlinks.students.readonly
paths./v1/userProfiles/{studentId}/guardianInvitations/{invitationId}.get.tags.length: 1
paths./v1/userProfiles/{studentId}/guardianInvitations/{invitationId}.get.tags[0]: userProfiles
paths./v1/userProfiles/{studentId}/guardianInvitations/{invitationId}.parameters.length: 13
paths./v1/userProfiles/{studentId}/guardianInvitations/{invitationId}.parameters[0].$ref: '#/parameters/access_token'
paths./v1/userProfiles/{studentId}/guardianInvitations/{invitationId}.parameters[1].$ref: '#/parameters/prettyPrint'
paths./v1/userProfiles/{studentId}/guardianInvitations/{invitationId}.parameters[2].$ref: '#/parameters/key'
paths./v1/userProfiles/{studentId}/guardianInvitations/{invitationId}.parameters[3].$ref: '#/parameters/quotaUser'
paths./v1/userProfiles/{studentId}/guardianInvitations/{invitationId}.parameters[4].$ref: '#/parameters/pp'
paths./v1/userProfiles/{studentId}/guardianInvitations/{invitationId}.parameters[5].$ref: '#/parameters/fields'
paths./v1/userProfiles/{studentId}/guardianInvitations/{invitationId}.parameters[6].$ref: '#/parameters/alt'
paths./v1/userProfiles/{studentId}/guardianInvitations/{invitationId}.parameters[7].$ref: '#/parameters/$.xgafv'
paths./v1/userProfiles/{studentId}/guardianInvitations/{invitationId}.parameters[8].$ref: '#/parameters/callback'
paths./v1/userProfiles/{studentId}/guardianInvitations/{invitationId}.parameters[9].$ref: '#/parameters/oauth_token'
paths./v1/userProfiles/{studentId}/guardianInvitations/{invitationId}.parameters[10].$ref: '#/parameters/uploadType'
paths./v1/userProfiles/{studentId}/guardianInvitations/{invitationId}.parameters[11].$ref: '#/parameters/bearer_token'
paths./v1/userProfiles/{studentId}/guardianInvitations/{invitationId}.parameters[12].$ref: '#/parameters/upload_protocol'
paths./v1/userProfiles/{studentId}/guardianInvitations/{invitationId}.patch.description: |-
  Modifies a guardian invitation.

  Currently, the only valid modification is to change the `state` from
  `PENDING` to `COMPLETE`. This has the effect of withdrawing the invitation.

  This method returns the following error codes:

  * `PERMISSION_DENIED` if the current user does not have permission to
    manage guardians, if guardians are not enabled for the domain in question
    or for other access errors.
  * `FAILED_PRECONDITION` if the guardian link is not in the `PENDING` state.
  * `INVALID_ARGUMENT` if the format of the student ID provided
    cannot be recognized (it is not an email address, nor a `user_id` from
    this API), or if the passed `GuardianInvitation` has a `state` other than
    `COMPLETE`, or if it modifies fields other than `state`.
  * `NOT_FOUND` if the student ID provided is a valid student ID, but
    Classroom has no record of that student, or if the `id` field does not
    refer to a guardian invitation known to Classroom.
paths./v1/userProfiles/{studentId}/guardianInvitations/{invitationId}.patch.operationId: classroom.userProfiles.guardianInvitations.patch
paths./v1/userProfiles/{studentId}/guardianInvitations/{invitationId}.patch.parameters.length: 4
paths./v1/userProfiles/{studentId}/guardianInvitations/{invitationId}.patch.parameters[0].description: The
  ID of the student whose guardian invitation is to be modified.
paths./v1/userProfiles/{studentId}/guardianInvitations/{invitationId}.patch.parameters[0].in: path
paths./v1/userProfiles/{studentId}/guardianInvitations/{invitationId}.patch.parameters[0].name: studentId
paths./v1/userProfiles/{studentId}/guardianInvitations/{invitationId}.patch.parameters[0].required: true
paths./v1/userProfiles/{studentId}/guardianInvitations/{invitationId}.patch.parameters[0].type: string
paths./v1/userProfiles/{studentId}/guardianInvitations/{invitationId}.patch.parameters[1].description: The
  `id` field of the `GuardianInvitation` to be modified.
paths./v1/userProfiles/{studentId}/guardianInvitations/{invitationId}.patch.parameters[1].in: path
paths./v1/userProfiles/{studentId}/guardianInvitations/{invitationId}.patch.parameters[1].name: invitationId
paths./v1/userProfiles/{studentId}/guardianInvitations/{invitationId}.patch.parameters[1].required: true
paths./v1/userProfiles/{studentId}/guardianInvitations/{invitationId}.patch.parameters[1].type: string
paths./v1/userProfiles/{studentId}/guardianInvitations/{invitationId}.patch.parameters[2].description: |-
  Mask that identifies which fields on the course to update.
  This field is required to do an update. The update will fail if invalid
  fields are specified. The following fields are valid:

  * `state`

  When set in a query parameter, this field should be specified as

  `updateMask=<field1>,<field2>,...`
paths./v1/userProfiles/{studentId}/guardianInvitations/{invitationId}.patch.parameters[2].in: query
paths./v1/userProfiles/{studentId}/guardianInvitations/{invitationId}.patch.parameters[2].name: updateMask
paths./v1/userProfiles/{studentId}/guardianInvitations/{invitationId}.patch.parameters[2].type: string
paths./v1/userProfiles/{studentId}/guardianInvitations/{invitationId}.patch.parameters[3].in: body
paths./v1/userProfiles/{studentId}/guardianInvitations/{invitationId}.patch.parameters[3].name: body
paths./v1/userProfiles/{studentId}/guardianInvitations/{invitationId}.patch.parameters[3].schema.$ref: '#/definitions/GuardianInvitation'
paths./v1/userProfiles/{studentId}/guardianInvitations/{invitationId}.patch.responses.200.description: Successful
  response
paths./v1/userProfiles/{studentId}/guardianInvitations/{invitationId}.patch.responses.200.schema.$ref: '#/definitions/GuardianInvitation'
paths./v1/userProfiles/{studentId}/guardianInvitations/{invitationId}.patch.security.length: 1
paths./v1/userProfiles/{studentId}/guardianInvitations/{invitationId}.patch.security[0].Oauth2.length: 1
paths./v1/userProfiles/{studentId}/guardianInvitations/{invitationId}.patch.security[0].Oauth2[0]: https://www.googleapis.com/auth/classroom.guardianlinks.students
paths./v1/userProfiles/{studentId}/guardianInvitations/{invitationId}.patch.tags.length: 1
paths./v1/userProfiles/{studentId}/guardianInvitations/{invitationId}.patch.tags[0]: userProfiles
paths./v1/userProfiles/{studentId}/guardians.get.description: |-
  Returns a list of guardians that the requesting user is permitted to
  view, restricted to those that match the request.

  To list guardians for any student that the requesting user may view
  guardians for, use the literal character `-` for the student ID.

  This method returns the following error codes:

  * `PERMISSION_DENIED` if a `student_id` is specified, and the requesting
    user is not permitted to view guardian information for that student, if
    `"-"` is specified as the `student_id` and the user is not a domain
    administrator, if guardians are not enabled for the domain in question,
    if the `invited_email_address` filter is set by a user who is not a
    domain administrator, or for other access errors.
  * `INVALID_ARGUMENT` if a `student_id` is specified, but its format cannot
    be recognized (it is not an email address, nor a `student_id` from the
    API, nor the literal string `me`). May also be returned if an invalid
    `page_token` is provided.
  * `NOT_FOUND` if a `student_id` is specified, and its format can be
    recognized, but Classroom has no record of that student.
paths./v1/userProfiles/{studentId}/guardians.get.operationId: classroom.userProfiles.guardians.list
paths./v1/userProfiles/{studentId}/guardians.get.parameters.length: 4
paths./v1/userProfiles/{studentId}/guardians.get.parameters[0].description: |-
  Filter results by the student who the guardian is linked to.
  The identifier can be one of the following:

  * the numeric identifier for the user
  * the email address of the user
  * the string literal `"me"`, indicating the requesting user
  * the string literal `"-"`, indicating that results should be returned for
    all students that the requesting user has access to view.
paths./v1/userProfiles/{studentId}/guardians.get.parameters[0].in: path
paths./v1/userProfiles/{studentId}/guardians.get.parameters[0].name: studentId
paths./v1/userProfiles/{studentId}/guardians.get.parameters[0].required: true
paths./v1/userProfiles/{studentId}/guardians.get.parameters[0].type: string
paths./v1/userProfiles/{studentId}/guardians.get.parameters[1].description: |-
  Maximum number of items to return. Zero or unspecified indicates that the
  server may assign a maximum.

  The server may return fewer than the specified number of results.
paths./v1/userProfiles/{studentId}/guardians.get.parameters[1].in: query
paths./v1/userProfiles/{studentId}/guardians.get.parameters[1].name: pageSize
paths./v1/userProfiles/{studentId}/guardians.get.parameters[1].type: integer
paths./v1/userProfiles/{studentId}/guardians.get.parameters[2].description: |-
  Filter results by the email address that the original invitation was sent
  to, resulting in this guardian link.
  This filter can only be used by domain administrators.
paths./v1/userProfiles/{studentId}/guardians.get.parameters[2].in: query
paths./v1/userProfiles/{studentId}/guardians.get.parameters[2].name: invitedEmailAddress
paths./v1/userProfiles/{studentId}/guardians.get.parameters[2].type: string
paths./v1/userProfiles/{studentId}/guardians.get.parameters[3].description: |-
  nextPageToken
  value returned from a previous
  list call,
  indicating that the subsequent page of results should be returned.

  The list request
  must be otherwise identical to the one that resulted in this token.
paths./v1/userProfiles/{studentId}/guardians.get.parameters[3].in: query
paths./v1/userProfiles/{studentId}/guardians.get.parameters[3].name: pageToken
paths./v1/userProfiles/{studentId}/guardians.get.parameters[3].type: string
paths./v1/userProfiles/{studentId}/guardians.get.responses.200.description: Successful
  response
paths./v1/userProfiles/{studentId}/guardians.get.responses.200.schema.$ref: '#/definitions/ListGuardiansResponse'
paths./v1/userProfiles/{studentId}/guardians.get.security.length: 3
paths./v1/userProfiles/{studentId}/guardians.get.security[0].Oauth2.length: 1
paths./v1/userProfiles/{studentId}/guardians.get.security[0].Oauth2[0]: https://www.googleapis.com/auth/classroom.guardianlinks.me.readonly
paths./v1/userProfiles/{studentId}/guardians.get.security[1].Oauth2.length: 1
paths./v1/userProfiles/{studentId}/guardians.get.security[1].Oauth2[0]: https://www.googleapis.com/auth/classroom.guardianlinks.students
paths./v1/userProfiles/{studentId}/guardians.get.security[2].Oauth2.length: 1
paths./v1/userProfiles/{studentId}/guardians.get.security[2].Oauth2[0]: https://www.googleapis.com/auth/classroom.guardianlinks.students.readonly
paths./v1/userProfiles/{studentId}/guardians.get.tags.length: 1
paths./v1/userProfiles/{studentId}/guardians.get.tags[0]: userProfiles
paths./v1/userProfiles/{studentId}/guardians.parameters.length: 13
paths./v1/userProfiles/{studentId}/guardians.parameters[0].$ref: '#/parameters/access_token'
paths./v1/userProfiles/{studentId}/guardians.parameters[1].$ref: '#/parameters/prettyPrint'
paths./v1/userProfiles/{studentId}/guardians.parameters[2].$ref: '#/parameters/key'
paths./v1/userProfiles/{studentId}/guardians.parameters[3].$ref: '#/parameters/quotaUser'
paths./v1/userProfiles/{studentId}/guardians.parameters[4].$ref: '#/parameters/pp'
paths./v1/userProfiles/{studentId}/guardians.parameters[5].$ref: '#/parameters/fields'
paths./v1/userProfiles/{studentId}/guardians.parameters[6].$ref: '#/parameters/alt'
paths./v1/userProfiles/{studentId}/guardians.parameters[7].$ref: '#/parameters/$.xgafv'
paths./v1/userProfiles/{studentId}/guardians.parameters[8].$ref: '#/parameters/callback'
paths./v1/userProfiles/{studentId}/guardians.parameters[9].$ref: '#/parameters/oauth_token'
paths./v1/userProfiles/{studentId}/guardians.parameters[10].$ref: '#/parameters/uploadType'
paths./v1/userProfiles/{studentId}/guardians.parameters[11].$ref: '#/parameters/bearer_token'
paths./v1/userProfiles/{studentId}/guardians.parameters[12].$ref: '#/parameters/upload_protocol'
paths./v1/userProfiles/{studentId}/guardians/{guardianId}.delete.description: |-
  Deletes a guardian.

  The guardian will no longer receive guardian notifications and the guardian
  will no longer be accessible via the API.

  This method returns the following error codes:

  * `PERMISSION_DENIED` if no user that matches the provided `student_id`
    is visible to the requesting user, if the requesting user is not
    permitted to manage guardians for the student identified by the
    `student_id`, if guardians are not enabled for the domain in question,
    or for other access errors.
  * `INVALID_ARGUMENT` if a `student_id` is specified, but its format cannot
    be recognized (it is not an email address, nor a `student_id` from the
    API).
  * `NOT_FOUND` if the requesting user is permitted to modify guardians for
    the requested `student_id`, but no `Guardian` record exists for that
    student with the provided `guardian_id`.
paths./v1/userProfiles/{studentId}/guardians/{guardianId}.delete.operationId: classroom.userProfiles.guardians.delete
paths./v1/userProfiles/{studentId}/guardians/{guardianId}.delete.parameters.length: 2
paths./v1/userProfiles/{studentId}/guardians/{guardianId}.delete.parameters[0].description: |-
  The student whose guardian is to be deleted. One of the following:

  * the numeric identifier for the user
  * the email address of the user
  * the string literal `"me"`, indicating the requesting user
paths./v1/userProfiles/{studentId}/guardians/{guardianId}.delete.parameters[0].in: path
paths./v1/userProfiles/{studentId}/guardians/{guardianId}.delete.parameters[0].name: studentId
paths./v1/userProfiles/{studentId}/guardians/{guardianId}.delete.parameters[0].required: true
paths./v1/userProfiles/{studentId}/guardians/{guardianId}.delete.parameters[0].type: string
paths./v1/userProfiles/{studentId}/guardians/{guardianId}.delete.parameters[1].description: The
  `id` field from a `Guardian`.
paths./v1/userProfiles/{studentId}/guardians/{guardianId}.delete.parameters[1].in: path
paths./v1/userProfiles/{studentId}/guardians/{guardianId}.delete.parameters[1].name: guardianId
paths./v1/userProfiles/{studentId}/guardians/{guardianId}.delete.parameters[1].required: true
paths./v1/userProfiles/{studentId}/guardians/{guardianId}.delete.parameters[1].type: string
paths./v1/userProfiles/{studentId}/guardians/{guardianId}.delete.responses.200.description: Successful
  response
paths./v1/userProfiles/{studentId}/guardians/{guardianId}.delete.responses.200.schema.$ref: '#/definitions/Empty'
paths./v1/userProfiles/{studentId}/guardians/{guardianId}.delete.security.length: 1
paths./v1/userProfiles/{studentId}/guardians/{guardianId}.delete.security[0].Oauth2.length: 1
paths./v1/userProfiles/{studentId}/guardians/{guardianId}.delete.security[0].Oauth2[0]: https://www.googleapis.com/auth/classroom.guardianlinks.students
paths./v1/userProfiles/{studentId}/guardians/{guardianId}.delete.tags.length: 1
paths./v1/userProfiles/{studentId}/guardians/{guardianId}.delete.tags[0]: userProfiles
paths./v1/userProfiles/{studentId}/guardians/{guardianId}.get.description: |-
  Returns a specific guardian.

  This method returns the following error codes:

  * `PERMISSION_DENIED` if no user that matches the provided `student_id`
    is visible to the requesting user, if the requesting user is not
    permitted to view guardian information for the student identified by the
    `student_id`, if guardians are not enabled for the domain in question,
    or for other access errors.
  * `INVALID_ARGUMENT` if a `student_id` is specified, but its format cannot
    be recognized (it is not an email address, nor a `student_id` from the
    API, nor the literal string `me`).
  * `NOT_FOUND` if the requesting user is permitted to view guardians for
    the requested `student_id`, but no `Guardian` record exists for that
    student that matches the provided `guardian_id`.
paths./v1/userProfiles/{studentId}/guardians/{guardianId}.get.operationId: classroom.userProfiles.guardians.get
paths./v1/userProfiles/{studentId}/guardians/{guardianId}.get.parameters.length: 2
paths./v1/userProfiles/{studentId}/guardians/{guardianId}.get.parameters[0].description: |-
  The student whose guardian is being requested. One of the following:

  * the numeric identifier for the user
  * the email address of the user
  * the string literal `"me"`, indicating the requesting user
paths./v1/userProfiles/{studentId}/guardians/{guardianId}.get.parameters[0].in: path
paths./v1/userProfiles/{studentId}/guardians/{guardianId}.get.parameters[0].name: studentId
paths./v1/userProfiles/{studentId}/guardians/{guardianId}.get.parameters[0].required: true
paths./v1/userProfiles/{studentId}/guardians/{guardianId}.get.parameters[0].type: string
paths./v1/userProfiles/{studentId}/guardians/{guardianId}.get.parameters[1].description: The
  `id` field from a `Guardian`.
paths./v1/userProfiles/{studentId}/guardians/{guardianId}.get.parameters[1].in: path
paths./v1/userProfiles/{studentId}/guardians/{guardianId}.get.parameters[1].name: guardianId
paths./v1/userProfiles/{studentId}/guardians/{guardianId}.get.parameters[1].required: true
paths./v1/userProfiles/{studentId}/guardians/{guardianId}.get.parameters[1].type: string
paths./v1/userProfiles/{studentId}/guardians/{guardianId}.get.responses.200.description: Successful
  response
paths./v1/userProfiles/{studentId}/guardians/{guardianId}.get.responses.200.schema.$ref: '#/definitions/Guardian'
paths./v1/userProfiles/{studentId}/guardians/{guardianId}.get.security.length: 3
paths./v1/userProfiles/{studentId}/guardians/{guardianId}.get.security[0].Oauth2.length: 1
paths./v1/userProfiles/{studentId}/guardians/{guardianId}.get.security[0].Oauth2[0]: https://www.googleapis.com/auth/classroom.guardianlinks.me.readonly
paths./v1/userProfiles/{studentId}/guardians/{guardianId}.get.security[1].Oauth2.length: 1
paths./v1/userProfiles/{studentId}/guardians/{guardianId}.get.security[1].Oauth2[0]: https://www.googleapis.com/auth/classroom.guardianlinks.students
paths./v1/userProfiles/{studentId}/guardians/{guardianId}.get.security[2].Oauth2.length: 1
paths./v1/userProfiles/{studentId}/guardians/{guardianId}.get.security[2].Oauth2[0]: https://www.googleapis.com/auth/classroom.guardianlinks.students.readonly
paths./v1/userProfiles/{studentId}/guardians/{guardianId}.get.tags.length: 1
paths./v1/userProfiles/{studentId}/guardians/{guardianId}.get.tags[0]: userProfiles
paths./v1/userProfiles/{studentId}/guardians/{guardianId}.parameters.length: 13
paths./v1/userProfiles/{studentId}/guardians/{guardianId}.parameters[0].$ref: '#/parameters/access_token'
paths./v1/userProfiles/{studentId}/guardians/{guardianId}.parameters[1].$ref: '#/parameters/prettyPrint'
paths./v1/userProfiles/{studentId}/guardians/{guardianId}.parameters[2].$ref: '#/parameters/key'
paths./v1/userProfiles/{studentId}/guardians/{guardianId}.parameters[3].$ref: '#/parameters/quotaUser'
paths./v1/userProfiles/{studentId}/guardians/{guardianId}.parameters[4].$ref: '#/parameters/pp'
paths./v1/userProfiles/{studentId}/guardians/{guardianId}.parameters[5].$ref: '#/parameters/fields'
paths./v1/userProfiles/{studentId}/guardians/{guardianId}.parameters[6].$ref: '#/parameters/alt'
paths./v1/userProfiles/{studentId}/guardians/{guardianId}.parameters[7].$ref: '#/parameters/$.xgafv'
paths./v1/userProfiles/{studentId}/guardians/{guardianId}.parameters[8].$ref: '#/parameters/callback'
paths./v1/userProfiles/{studentId}/guardians/{guardianId}.parameters[9].$ref: '#/parameters/oauth_token'
paths./v1/userProfiles/{studentId}/guardians/{guardianId}.parameters[10].$ref: '#/parameters/uploadType'
paths./v1/userProfiles/{studentId}/guardians/{guardianId}.parameters[11].$ref: '#/parameters/bearer_token'
paths./v1/userProfiles/{studentId}/guardians/{guardianId}.parameters[12].$ref: '#/parameters/upload_protocol'
paths./v1/userProfiles/{userId}.get.description: |-
  Returns a user profile.

  This method returns the following error codes:

  * `PERMISSION_DENIED` if the requesting user is not permitted to access
  this user profile, if no profile exists with the requested ID, or for
  access errors.
paths./v1/userProfiles/{userId}.get.operationId: classroom.userProfiles.get
paths./v1/userProfiles/{userId}.get.parameters.length: 1
paths./v1/userProfiles/{userId}.get.parameters[0].description: |-
  Identifier of the profile to return. The identifier can be one of the
  following:

  * the numeric identifier for the user
  * the email address of the user
  * the string literal `"me"`, indicating the requesting user
paths./v1/userProfiles/{userId}.get.parameters[0].in: path
paths./v1/userProfiles/{userId}.get.parameters[0].name: userId
paths./v1/userProfiles/{userId}.get.parameters[0].required: true
paths./v1/userProfiles/{userId}.get.parameters[0].type: string
paths./v1/userProfiles/{userId}.get.responses.200.description: Successful response
paths./v1/userProfiles/{userId}.get.responses.200.schema.$ref: '#/definitions/UserProfile'
paths./v1/userProfiles/{userId}.get.security.length: 4
paths./v1/userProfiles/{userId}.get.security[0].Oauth2.length: 1
paths./v1/userProfiles/{userId}.get.security[0].Oauth2[0]: https://www.googleapis.com/auth/classroom.profile.emails
paths./v1/userProfiles/{userId}.get.security[1].Oauth2.length: 1
paths./v1/userProfiles/{userId}.get.security[1].Oauth2[0]: https://www.googleapis.com/auth/classroom.profile.photos
paths./v1/userProfiles/{userId}.get.security[2].Oauth2.length: 1
paths./v1/userProfiles/{userId}.get.security[2].Oauth2[0]: https://www.googleapis.com/auth/classroom.rosters
paths./v1/userProfiles/{userId}.get.security[3].Oauth2.length: 1
paths./v1/userProfiles/{userId}.get.security[3].Oauth2[0]: https://www.googleapis.com/auth/classroom.rosters.readonly
paths./v1/userProfiles/{userId}.get.tags.length: 1
paths./v1/userProfiles/{userId}.get.tags[0]: userProfiles
paths./v1/userProfiles/{userId}.parameters.length: 13
paths./v1/userProfiles/{userId}.parameters[0].$ref: '#/parameters/access_token'
paths./v1/userProfiles/{userId}.parameters[1].$ref: '#/parameters/prettyPrint'
paths./v1/userProfiles/{userId}.parameters[2].$ref: '#/parameters/key'
paths./v1/userProfiles/{userId}.parameters[3].$ref: '#/parameters/quotaUser'
paths./v1/userProfiles/{userId}.parameters[4].$ref: '#/parameters/pp'
paths./v1/userProfiles/{userId}.parameters[5].$ref: '#/parameters/fields'
paths./v1/userProfiles/{userId}.parameters[6].$ref: '#/parameters/alt'
paths./v1/userProfiles/{userId}.parameters[7].$ref: '#/parameters/$.xgafv'
paths./v1/userProfiles/{userId}.parameters[8].$ref: '#/parameters/callback'
paths./v1/userProfiles/{userId}.parameters[9].$ref: '#/parameters/oauth_token'
paths./v1/userProfiles/{userId}.parameters[10].$ref: '#/parameters/uploadType'
paths./v1/userProfiles/{userId}.parameters[11].$ref: '#/parameters/bearer_token'
paths./v1/userProfiles/{userId}.parameters[12].$ref: '#/parameters/upload_protocol'
schemes.length: 1
schemes[0]: https
securityDefinitions.Oauth2.authorizationUrl: https://accounts.google.com/o/oauth2/auth
securityDefinitions.Oauth2.description: Oauth 2.0 authentication
securityDefinitions.Oauth2.flow: implicit
securityDefinitions.Oauth2.scopes.https://www.googleapis.com/auth/classroom.announcements: View
  and manage announcements in Google Classroom
securityDefinitions.Oauth2.scopes.https://www.googleapis.com/auth/classroom.announcements.readonly: View
  announcements in Google Classroom
securityDefinitions.Oauth2.scopes.https://www.googleapis.com/auth/classroom.courses: Manage
  your Google Classroom classes
securityDefinitions.Oauth2.scopes.https://www.googleapis.com/auth/classroom.courses.readonly: View
  your Google Classroom classes
securityDefinitions.Oauth2.scopes.https://www.googleapis.com/auth/classroom.coursework.me: Manage
  your course work and view your grades in Google Classroom
securityDefinitions.Oauth2.scopes.https://www.googleapis.com/auth/classroom.coursework.me.readonly: View
  your course work and grades in Google Classroom
securityDefinitions.Oauth2.scopes.https://www.googleapis.com/auth/classroom.coursework.students: Manage
  course work and grades for students in the Google Classroom classes you teach and
  view the course work and grades for classes you administer
securityDefinitions.Oauth2.scopes.https://www.googleapis.com/auth/classroom.coursework.students.readonly: View
  course work and grades for students in the Google Classroom classes you teach or
  administer
securityDefinitions.Oauth2.scopes.https://www.googleapis.com/auth/classroom.guardianlinks.me.readonly: View
  your Google Classroom guardians
securityDefinitions.Oauth2.scopes.https://www.googleapis.com/auth/classroom.guardianlinks.students: View
  and manage guardians for students in your Google Classroom classes
securityDefinitions.Oauth2.scopes.https://www.googleapis.com/auth/classroom.guardianlinks.students.readonly: View
  guardians for students in your Google Classroom classes
securityDefinitions.Oauth2.scopes.https://www.googleapis.com/auth/classroom.profile.emails: View
  the email addresses of people in your classes
securityDefinitions.Oauth2.scopes.https://www.googleapis.com/auth/classroom.profile.photos: View
  the profile photos of people in your classes
securityDefinitions.Oauth2.scopes.https://www.googleapis.com/auth/classroom.rosters: Manage
  your Google Classroom class rosters
securityDefinitions.Oauth2.scopes.https://www.googleapis.com/auth/classroom.rosters.readonly: View
  your Google Classroom class rosters
securityDefinitions.Oauth2.scopes.https://www.googleapis.com/auth/classroom.student-submissions.me.readonly: View
  your course work and grades in Google Classroom
securityDefinitions.Oauth2.scopes.https://www.googleapis.com/auth/classroom.student-submissions.students.readonly: View
  course work and grades for students in the Google Classroom classes you teach or
  administer
securityDefinitions.Oauth2.type: oauth2
swagger: "2.0"
tags.length: 4
tags[0].name: courses
tags[1].name: invitations
tags[2].name: registrations
tags[3].name: userProfiles
