swagger: '2.0'
schemes:
  - https
host: cloudbuild.googleapis.com
basePath: /
info:
  contact:
    name: Google
    url: 'https://google.com'
  description: Builds container images in the cloud.
  title: Google Cloud Container Builder
  version: v1
  x-apiClientRegistration:
    url: 'https://console.developers.google.com'
  x-logo:
    url: 'https://api.apis.guru/v2/cache/logo/https_www.google.com_images_branding_googlelogo_2x_googlelogo_color_272x92dp.png'
  x-origin:
    - converter:
        url: 'https://github.com/lucybot/api-spec-converter'
        version: 2.6.0
      format: google
      url: 'https://cloudbuild.googleapis.com/$discovery/rest?version=v1'
      version: v1
  x-preferred: true
  x-providerName: googleapis.com
  x-serviceName: cloudbuild
externalDocs:
  url: 'https://cloud.google.com/container-builder/docs/'
securityDefinitions:
  Oauth2:
    authorizationUrl: 'https://accounts.google.com/o/oauth2/auth'
    description: Oauth 2.0 authentication
    flow: implicit
    scopes:
      'https://www.googleapis.com/auth/cloud-platform': View and manage your data across Google Cloud Platform services
    type: oauth2
parameters:
  $.xgafv:
    description: V1 error format.
    enum:
      - '1'
      - '2'
    in: query
    name: $.xgafv
    type: string
  access_token:
    description: OAuth access token.
    in: query
    name: access_token
    type: string
  alt:
    default: json
    description: Data format for response.
    enum:
      - json
      - media
      - proto
    in: query
    name: alt
    type: string
  bearer_token:
    description: OAuth bearer token.
    in: query
    name: bearer_token
    type: string
  callback:
    description: JSONP
    in: query
    name: callback
    type: string
  fields:
    description: Selector specifying which fields to include in a partial response.
    in: query
    name: fields
    type: string
  key:
    description: 'API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.'
    in: query
    name: key
    type: string
  oauth_token:
    description: OAuth 2.0 token for the current user.
    in: query
    name: oauth_token
    type: string
  pp:
    default: true
    description: Pretty-print response.
    in: query
    name: pp
    type: boolean
  prettyPrint:
    default: true
    description: Returns response with indentations and line breaks.
    in: query
    name: prettyPrint
    type: boolean
  quotaUser:
    description: 'Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.'
    in: query
    name: quotaUser
    type: string
  uploadType:
    description: 'Legacy upload protocol for media (e.g. "media", "multipart").'
    in: query
    name: uploadType
    type: string
  upload_protocol:
    description: 'Upload protocol for media (e.g. "raw", "multipart").'
    in: query
    name: upload_protocol
    type: string
tags:
  - name: operations
  - name: projects
paths:
  '/v1/projects/{projectId}/builds':
    get:
      description: |-
        Lists previously requested builds.

        Previously requested builds may still be in-progress, or may have finished
        successfully or unsuccessfully.
      operationId: cloudbuild.projects.builds.list
      parameters:
        - description: ID of the project.
          in: path
          name: projectId
          required: true
          type: string
        - description: The raw filter text to constrain the results.
          in: query
          name: filter
          type: string
        - description: Token to provide to skip to a particular spot in the list.
          in: query
          name: pageToken
          type: string
        - description: Number of results to return in the list.
          in: query
          name: pageSize
          type: integer
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/ListBuildsResponse'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
      tags:
        - projects
    parameters:
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/pp'
      - $ref: '#/parameters/bearer_token'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/upload_protocol'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/uploadType'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/callback'
      - $ref: '#/parameters/$.xgafv'
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/access_token'
      - $ref: '#/parameters/key'
    post:
      description: |-
        Starts a build with the specified configuration.

        The long-running Operation returned by this method will include the ID of
        the build, which can be passed to GetBuild to determine its status (e.g.,
        success or failure).
      operationId: cloudbuild.projects.builds.create
      parameters:
        - description: ID of the project.
          in: path
          name: projectId
          required: true
          type: string
        - in: body
          name: body
          schema:
            $ref: '#/definitions/Build'
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Operation'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
      tags:
        - projects
  '/v1/projects/{projectId}/builds/{id}':
    get:
      description: |-
        Returns information about a previously requested build.

        The Build that is returned includes its status (e.g., success or failure,
        or in-progress), and timing information.
      operationId: cloudbuild.projects.builds.get
      parameters:
        - description: ID of the project.
          in: path
          name: projectId
          required: true
          type: string
        - description: ID of the build.
          in: path
          name: id
          required: true
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Build'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
      tags:
        - projects
    parameters:
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/pp'
      - $ref: '#/parameters/bearer_token'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/upload_protocol'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/uploadType'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/callback'
      - $ref: '#/parameters/$.xgafv'
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/access_token'
      - $ref: '#/parameters/key'
  '/v1/projects/{projectId}/builds/{id}:cancel':
    parameters:
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/pp'
      - $ref: '#/parameters/bearer_token'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/upload_protocol'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/uploadType'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/callback'
      - $ref: '#/parameters/$.xgafv'
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/access_token'
      - $ref: '#/parameters/key'
    post:
      description: Cancels a requested build in progress.
      operationId: cloudbuild.projects.builds.cancel
      parameters:
        - description: ID of the project.
          in: path
          name: projectId
          required: true
          type: string
        - description: ID of the build.
          in: path
          name: id
          required: true
          type: string
        - in: body
          name: body
          schema:
            $ref: '#/definitions/CancelBuildRequest'
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Build'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
      tags:
        - projects
  '/v1/projects/{projectId}/triggers':
    get:
      description: |-
        Lists existing BuildTrigger.

        This API is experimental.
      operationId: cloudbuild.projects.triggers.list
      parameters:
        - description: ID of the project for which to list BuildTriggers.
          in: path
          name: projectId
          required: true
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/ListBuildTriggersResponse'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
      tags:
        - projects
    parameters:
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/pp'
      - $ref: '#/parameters/bearer_token'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/upload_protocol'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/uploadType'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/callback'
      - $ref: '#/parameters/$.xgafv'
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/access_token'
      - $ref: '#/parameters/key'
    post:
      description: |-
        Creates a new BuildTrigger.

        This API is experimental.
      operationId: cloudbuild.projects.triggers.create
      parameters:
        - description: ID of the project for which to configure automatic builds.
          in: path
          name: projectId
          required: true
          type: string
        - in: body
          name: body
          schema:
            $ref: '#/definitions/BuildTrigger'
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/BuildTrigger'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
      tags:
        - projects
  '/v1/projects/{projectId}/triggers/{triggerId}':
    delete:
      description: |-
        Deletes an BuildTrigger by its project ID and trigger ID.

        This API is experimental.
      operationId: cloudbuild.projects.triggers.delete
      parameters:
        - description: ID of the project that owns the trigger.
          in: path
          name: projectId
          required: true
          type: string
        - description: ID of the BuildTrigger to delete.
          in: path
          name: triggerId
          required: true
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Empty'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
      tags:
        - projects
    get:
      description: |-
        Gets information about a BuildTrigger.

        This API is experimental.
      operationId: cloudbuild.projects.triggers.get
      parameters:
        - description: ID of the project that owns the trigger.
          in: path
          name: projectId
          required: true
          type: string
        - description: ID of the BuildTrigger to get.
          in: path
          name: triggerId
          required: true
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/BuildTrigger'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
      tags:
        - projects
    parameters:
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/pp'
      - $ref: '#/parameters/bearer_token'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/upload_protocol'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/uploadType'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/callback'
      - $ref: '#/parameters/$.xgafv'
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/access_token'
      - $ref: '#/parameters/key'
    patch:
      description: |-
        Updates an BuildTrigger by its project ID and trigger ID.

        This API is experimental.
      operationId: cloudbuild.projects.triggers.patch
      parameters:
        - description: ID of the project that owns the trigger.
          in: path
          name: projectId
          required: true
          type: string
        - description: ID of the BuildTrigger to update.
          in: path
          name: triggerId
          required: true
          type: string
        - in: body
          name: body
          schema:
            $ref: '#/definitions/BuildTrigger'
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/BuildTrigger'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
      tags:
        - projects
  '/v1/{name}':
    get:
      description: |-
        Lists operations that match the specified filter in the request. If the
        server doesn't support this method, it returns `UNIMPLEMENTED`.

        NOTE: the `name` binding allows API services to override the binding
        to use different resource name schemes, such as `users/*/operations`. To
        override the binding, API services can add a binding such as
        `"/v1/{name=users/*}/operations"` to their service configuration.
        For backwards compatibility, the default name includes the operations
        collection id, however overriding users must ensure the name binding
        is the parent resource, without the operations collection id.
      operationId: cloudbuild.operations.list
      parameters:
        - description: The standard list filter.
          in: query
          name: filter
          type: string
        - description: The name of the operation's parent resource.
          in: path
          name: name
          required: true
          type: string
          x-reservedExpansion: true
        - description: The standard list page size.
          in: query
          name: pageSize
          type: integer
        - description: The standard list page token.
          in: query
          name: pageToken
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/ListOperationsResponse'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
      tags:
        - operations
    parameters:
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/pp'
      - $ref: '#/parameters/bearer_token'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/upload_protocol'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/uploadType'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/callback'
      - $ref: '#/parameters/$.xgafv'
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/access_token'
      - $ref: '#/parameters/key'
  '/v1/{name}:cancel':
    parameters:
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/pp'
      - $ref: '#/parameters/bearer_token'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/upload_protocol'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/uploadType'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/callback'
      - $ref: '#/parameters/$.xgafv'
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/access_token'
      - $ref: '#/parameters/key'
    post:
      description: |-
        Starts asynchronous cancellation on a long-running operation.  The server
        makes a best effort to cancel the operation, but success is not
        guaranteed.  If the server doesn't support this method, it returns
        `google.rpc.Code.UNIMPLEMENTED`.  Clients can use
        Operations.GetOperation or
        other methods to check whether the cancellation succeeded or whether the
        operation completed despite cancellation. On successful cancellation,
        the operation is not deleted; instead, it becomes an operation with
        an Operation.error value with a google.rpc.Status.code of 1,
        corresponding to `Code.CANCELLED`.
      operationId: cloudbuild.operations.cancel
      parameters:
        - description: The name of the operation resource to be cancelled.
          in: path
          name: name
          required: true
          type: string
          x-reservedExpansion: true
        - in: body
          name: body
          schema:
            $ref: '#/definitions/CancelOperationRequest'
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Empty'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
      tags:
        - operations
definitions:
  Build:
    description: |-
      A build resource in the Container Builder API.

      At a high level, a Build describes where to find source code, how to build
      it (for example, the builder image to run on the source), and what tag to
      apply to the built image when it is pushed to Google Container Registry.

      Fields can include the following variables which will be expanded when the
      build is created:

      - $PROJECT_ID: the project ID of the build.
      - $BUILD_ID: the autogenerated ID of the build.
      - $REPO_NAME: the source repository name specified by RepoSource.
      - $BRANCH_NAME: the branch name specified by RepoSource.
      - $TAG_NAME: the tag name specified by RepoSource.
      - $REVISION_ID or $COMMIT_SHA: the commit SHA specified by RepoSource or
        resolved from the specified branch or tag.
      - $SHORT_SHA: first 7 characters of $REVISION_ID or $COMMIT_SHA.
    properties:
      buildTriggerId:
        description: |-
          The ID of the BuildTrigger that triggered this build, if it was
          triggered automatically.
          @OutputOnly
        type: string
      createTime:
        description: |-
          Time at which the request to create the build was received.
          @OutputOnly
        format: google-datetime
        type: string
      finishTime:
        description: |-
          Time at which execution of the build was finished.

          The difference between finish_time and start_time is the duration of the
          build's execution.
          @OutputOnly
        format: google-datetime
        type: string
      id:
        description: |-
          Unique identifier of the build.
          @OutputOnly
        type: string
      images:
        description: |-
          A list of images to be pushed upon the successful completion of all build
          steps.

          The images will be pushed using the builder service account's credentials.

          The digests of the pushed images will be stored in the Build resource's
          results field.

          If any of the images fail to be pushed, the build is marked FAILURE.
        items:
          type: string
        type: array
      logUrl:
        description: |-
          URL to logs for this build in Google Cloud Logging.
          @OutputOnly
        type: string
      logsBucket:
        description: |-
          Google Cloud Storage bucket where logs should be written (see
          [Bucket Name
          Requirements](https://cloud.google.com/storage/docs/bucket-naming#requirements)).
          Logs file names will be of the format `${logs_bucket}/log-${build_id}.txt`.
        type: string
      options:
        $ref: '#/definitions/BuildOptions'
        description: Special options for this build.
      projectId:
        description: |-
          ID of the project.
          @OutputOnly.
        type: string
      results:
        $ref: '#/definitions/Results'
        description: |-
          Results of the build.
          @OutputOnly
      secrets:
        description: Secrets to decrypt using Cloud KMS.
        items:
          $ref: '#/definitions/Secret'
        type: array
      source:
        $ref: '#/definitions/Source'
        description: Describes where to find the source files to build.
      sourceProvenance:
        $ref: '#/definitions/SourceProvenance'
        description: |-
          A permanent fixed identifier for source.
          @OutputOnly
      startTime:
        description: |-
          Time at which execution of the build was started.
          @OutputOnly
        format: google-datetime
        type: string
      status:
        description: |-
          Status of the build.
          @OutputOnly
        enum:
          - STATUS_UNKNOWN
          - QUEUED
          - WORKING
          - SUCCESS
          - FAILURE
          - INTERNAL_ERROR
          - TIMEOUT
          - CANCELLED
        type: string
      statusDetail:
        description: |-
          Customer-readable message about the current status.
          @OutputOnly
        type: string
      steps:
        description: Describes the operations to be performed on the workspace.
        items:
          $ref: '#/definitions/BuildStep'
        type: array
      substitutions:
        additionalProperties:
          type: string
        description: Substitutions data for Build resource.
        type: object
      tags:
        description: Tags for annotation of a Build. These are not docker tags.
        items:
          type: string
        type: array
      timeout:
        description: |-
          Amount of time that this build should be allowed to run, to second
          granularity. If this amount of time elapses, work on the build will cease
          and the build status will be TIMEOUT.

          Default time is ten minutes.
        format: google-duration
        type: string
    type: object
  BuildOperationMetadata:
    description: Metadata for build operations.
    properties:
      build:
        $ref: '#/definitions/Build'
        description: The build that the operation is tracking.
    type: object
  BuildOptions:
    description: Optional arguments to enable specific features of builds.
    properties:
      requestedVerifyOption:
        description: Requested verifiability options.
        enum:
          - NOT_VERIFIED
          - VERIFIED
        type: string
      sourceProvenanceHash:
        description: Requested hash for SourceProvenance.
        items:
          enum:
            - NONE
            - SHA256
          type: string
        type: array
      substitutionOption:
        description: SubstitutionOption to allow unmatch substitutions.
        enum:
          - MUST_MATCH
          - ALLOW_LOOSE
        type: string
    type: object
  BuildStep:
    description: BuildStep describes a step to perform in the build pipeline.
    properties:
      args:
        description: |-
          A list of arguments that will be presented to the step when it is started.

          If the image used to run the step's container has an entrypoint, these args
          will be used as arguments to that entrypoint. If the image does not define
          an entrypoint, the first element in args will be used as the entrypoint,
          and the remainder will be used as arguments.
        items:
          type: string
        type: array
      dir:
        description: |-
          Working directory (relative to project source root) to use when running
          this operation's container.
        type: string
      entrypoint:
        description: |-
          Optional entrypoint to be used instead of the build step image's default
          If unset, the image's default will be used.
        type: string
      env:
        description: |-
          A list of environment variable definitions to be used when running a step.

          The elements are of the form "KEY=VALUE" for the environment variable "KEY"
          being given the value "VALUE".
        items:
          type: string
        type: array
      id:
        description: |-
          Optional unique identifier for this build step, used in wait_for to
          reference this build step as a dependency.
        type: string
      name:
        description: |-
          The name of the container image that will run this particular build step.

          If the image is already available in the host's Docker daemon's cache, it
          will be run directly. If not, the host will attempt to pull the image
          first, using the builder service account's credentials if necessary.

          The Docker daemon's cache will already have the latest versions of all of
          the officially supported build steps
          ([https://github.com/GoogleCloudPlatform/cloud-builders](https://github.com/GoogleCloudPlatform/cloud-builders)).
          The Docker daemon will also have cached many of the layers for some popular
          images, like "ubuntu", "debian", but they will be refreshed at the time you
          attempt to use them.

          If you built an image in a previous build step, it will be stored in the
          host's Docker daemon's cache and is available to use as the name for a
          later build step.
        type: string
      secretEnv:
        description: |-
          A list of environment variables which are encrypted using a Cloud KMS
          crypto key. These values must be specified in the build's secrets.
        items:
          type: string
        type: array
      volumes:
        description: |-
          List of volumes to mount into the build step.

          Each volume will be created as an empty volume prior to execution of the
          build step. Upon completion of the build, volumes and their contents will
          be discarded.

          Using a named volume in only one step is not valid as it is indicative
          of a mis-configured build request.
        items:
          $ref: '#/definitions/Volume'
        type: array
      waitFor:
        description: |-
          The ID(s) of the step(s) that this build step depends on.
          This build step will not start until all the build steps in wait_for
          have completed successfully. If wait_for is empty, this build step will
          start when all previous build steps in the Build.Steps list have completed
          successfully.
        items:
          type: string
        type: array
    type: object
  BuildTrigger:
    description: |-
      Configuration for an automated build in response to source repository
      changes.
    properties:
      build:
        $ref: '#/definitions/Build'
        description: Contents of the build template.
      createTime:
        description: |-
          Time when the trigger was created.

          @OutputOnly
        format: google-datetime
        type: string
      description:
        description: Human-readable description of this trigger.
        type: string
      disabled:
        description: 'If true, the trigger will never result in a build.'
        type: boolean
      filename:
        description: |-
          Path, from the source root, to a file whose contents is used for the
          template.
        type: string
      id:
        description: |-
          Unique identifier of the trigger.

          @OutputOnly
        type: string
      substitutions:
        additionalProperties:
          type: string
        description: Substitutions data for Build resource.
        type: object
      triggerTemplate:
        $ref: '#/definitions/RepoSource'
        description: |-
          Template describing the types of source changes to trigger a build.

          Branch and tag names in trigger templates are interpreted as regular
          expressions. Any branch or tag change that matches that regular expression
          will trigger a build.
    type: object
  BuiltImage:
    description: BuiltImage describes an image built by the pipeline.
    properties:
      digest:
        description: Docker Registry 2.0 digest.
        type: string
      name:
        description: |-
          Name used to push the container image to Google Container Registry, as
          presented to `docker push`.
        type: string
    type: object
  CancelBuildRequest:
    description: Request to cancel an ongoing build.
    properties: {}
    type: object
  CancelOperationRequest:
    description: The request message for Operations.CancelOperation.
    properties: {}
    type: object
  Empty:
    description: |-
      A generic empty message that you can re-use to avoid defining duplicated
      empty messages in your APIs. A typical example is to use it as the request
      or the response type of an API method. For instance:

          service Foo {
            rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);
          }

      The JSON representation for `Empty` is empty JSON object `{}`.
    properties: {}
    type: object
  FileHashes:
    description: |-
      Container message for hashes of byte content of files, used in
      SourceProvenance messages to verify integrity of source input to the build.
    properties:
      fileHash:
        description: Collection of file hashes.
        items:
          $ref: '#/definitions/Hash'
        type: array
    type: object
  Hash:
    description: Container message for hash values.
    properties:
      type:
        description: The type of hash that was performed.
        enum:
          - NONE
          - SHA256
        type: string
      value:
        description: The hash value.
        format: byte
        type: string
    type: object
  ListBuildTriggersResponse:
    description: Response containing existing BuildTriggers.
    properties:
      triggers:
        description: 'BuildTriggers for the project, sorted by create_time descending.'
        items:
          $ref: '#/definitions/BuildTrigger'
        type: array
    type: object
  ListBuildsResponse:
    description: Response including listed builds.
    properties:
      builds:
        description: 'Builds will be sorted by create_time, descending.'
        items:
          $ref: '#/definitions/Build'
        type: array
      nextPageToken:
        description: Token to receive the next page of results.
        type: string
    type: object
  ListOperationsResponse:
    description: The response message for Operations.ListOperations.
    properties:
      nextPageToken:
        description: The standard List next-page token.
        type: string
      operations:
        description: A list of operations that matches the specified filter in the request.
        items:
          $ref: '#/definitions/Operation'
        type: array
    type: object
  Operation:
    description: |-
      This resource represents a long-running operation that is the result of a
      network API call.
    properties:
      done:
        description: |-
          If the value is `false`, it means the operation is still in progress.
          If `true`, the operation is completed, and either `error` or `response` is
          available.
        type: boolean
      error:
        $ref: '#/definitions/Status'
        description: The error result of the operation in case of failure or cancellation.
      metadata:
        additionalProperties:
          description: Properties of the object. Contains field @type with type URL.
        description: |-
          Service-specific metadata associated with the operation.  It typically
          contains progress information and common metadata such as create time.
          Some services might not provide such metadata.  Any method that returns a
          long-running operation should document the metadata type, if any.
        type: object
      name:
        description: |-
          The server-assigned name, which is only unique within the same service that
          originally returns it. If you use the default HTTP mapping, the
          `name` should have the format of `operations/some/unique/name`.
        type: string
      response:
        additionalProperties:
          description: Properties of the object. Contains field @type with type URL.
        description: |-
          The normal response of the operation in case of success.  If the original
          method returns no data on success, such as `Delete`, the response is
          `google.protobuf.Empty`.  If the original method is standard
          `Get`/`Create`/`Update`, the response should be the resource.  For other
          methods, the response should have the type `XxxResponse`, where `Xxx`
          is the original method name.  For example, if the original method name
          is `TakeSnapshot()`, the inferred response type is
          `TakeSnapshotResponse`.
        type: object
    type: object
  RepoSource:
    description: |-
      RepoSource describes the location of the source in a Google Cloud Source
      Repository.
    properties:
      branchName:
        description: Name of the branch to build.
        type: string
      commitSha:
        description: Explicit commit SHA to build.
        type: string
      projectId:
        description: |-
          ID of the project that owns the repo. If omitted, the project ID requesting
          the build is assumed.
        type: string
      repoName:
        description: 'Name of the repo. If omitted, the name "default" is assumed.'
        type: string
      tagName:
        description: Name of the tag to build.
        type: string
    type: object
  Results:
    description: Results describes the artifacts created by the build pipeline.
    properties:
      buildStepImages:
        description: 'List of build step digests, in order corresponding to build step indices.'
        items:
          type: string
        type: array
      images:
        description: Images that were built as a part of the build.
        items:
          $ref: '#/definitions/BuiltImage'
        type: array
    type: object
  Secret:
    description: |-
      Secret pairs a set of secret environment variables containing encrypted
      values with the Cloud KMS key to use to decrypt the value.
    properties:
      kmsKeyName:
        description: Cloud KMS key name to use to decrypt these envs.
        type: string
      secretEnv:
        additionalProperties:
          format: byte
          type: string
        description: |-
          Map of environment variable name to its encrypted value.

          Secret environment variables must be unique across all of a build's
          secrets, and must be used by at least one build step. Values can be at most
          1 KB in size. There can be at most ten secret values across all of a
          build's secrets.
        type: object
    type: object
  Source:
    description: |-
      Source describes the location of the source in a supported storage
      service.
    properties:
      repoSource:
        $ref: '#/definitions/RepoSource'
        description: 'If provided, get source from this location in a Cloud Repo.'
      storageSource:
        $ref: '#/definitions/StorageSource'
        description: 'If provided, get the source from this location in Google Cloud Storage.'
    type: object
  SourceProvenance:
    description: |-
      Provenance of the source. Ways to find the original source, or verify that
      some source was used for this build.
    properties:
      fileHashes:
        additionalProperties:
          $ref: '#/definitions/FileHashes'
        description: |-
          Hash(es) of the build source, which can be used to verify that the original
          source integrity was maintained in the build. Note that FileHashes will
          only be populated if BuildOptions has requested a SourceProvenanceHash.

          The keys to this map are file paths used as build source and the values
          contain the hash values for those files.

          If the build source came in a single package such as a gzipped tarfile
          (.tar.gz), the FileHash will be for the single path to that file.
          @OutputOnly
        type: object
      resolvedRepoSource:
        $ref: '#/definitions/RepoSource'
        description: |-
          A copy of the build's source.repo_source, if exists, with any
          revisions resolved.
      resolvedStorageSource:
        $ref: '#/definitions/StorageSource'
        description: |-
          A copy of the build's source.storage_source, if exists, with any
          generations resolved.
    type: object
  Status:
    description: |-
      The `Status` type defines a logical error model that is suitable for different
      programming environments, including REST APIs and RPC APIs. It is used by
      [gRPC](https://github.com/grpc). The error model is designed to be:

      - Simple to use and understand for most users
      - Flexible enough to meet unexpected needs

      # Overview

      The `Status` message contains three pieces of data: error code, error message,
      and error details. The error code should be an enum value of
      google.rpc.Code, but it may accept additional error codes if needed.  The
      error message should be a developer-facing English message that helps
      developers *understand* and *resolve* the error. If a localized user-facing
      error message is needed, put the localized message in the error details or
      localize it in the client. The optional error details may contain arbitrary
      information about the error. There is a predefined set of error detail types
      in the package `google.rpc` that can be used for common error conditions.

      # Language mapping

      The `Status` message is the logical representation of the error model, but it
      is not necessarily the actual wire format. When the `Status` message is
      exposed in different client libraries and different wire protocols, it can be
      mapped differently. For example, it will likely be mapped to some exceptions
      in Java, but more likely mapped to some error codes in C.

      # Other uses

      The error model and the `Status` message can be used in a variety of
      environments, either with or without APIs, to provide a
      consistent developer experience across different environments.

      Example uses of this error model include:

      - Partial errors. If a service needs to return partial errors to the client,
          it may embed the `Status` in the normal response to indicate the partial
          errors.

      - Workflow errors. A typical workflow has multiple steps. Each step may
          have a `Status` message for error reporting.

      - Batch operations. If a client uses batch request and batch response, the
          `Status` message should be used directly inside batch response, one for
          each error sub-response.

      - Asynchronous operations. If an API call embeds asynchronous operation
          results in its response, the status of those operations should be
          represented directly using the `Status` message.

      - Logging. If some API errors are stored in logs, the message `Status` could
          be used directly after any stripping needed for security/privacy reasons.
    properties:
      code:
        description: 'The status code, which should be an enum value of google.rpc.Code.'
        format: int32
        type: integer
      details:
        description: |-
          A list of messages that carry the error details.  There is a common set of
          message types for APIs to use.
        items:
          additionalProperties:
            description: Properties of the object. Contains field @type with type URL.
          type: object
        type: array
      message:
        description: |-
          A developer-facing error message, which should be in English. Any
          user-facing error message should be localized and sent in the
          google.rpc.Status.details field, or localized by the client.
        type: string
    type: object
  StorageSource:
    description: |-
      StorageSource describes the location of the source in an archive file in
      Google Cloud Storage.
    properties:
      bucket:
        description: |-
          Google Cloud Storage bucket containing source (see
          [Bucket Name
          Requirements](https://cloud.google.com/storage/docs/bucket-naming#requirements)).
        type: string
      generation:
        description: |-
          Google Cloud Storage generation for the object. If the generation is
          omitted, the latest generation will be used.
        format: int64
        type: string
      object:
        description: |-
          Google Cloud Storage object containing source.

          This object must be a gzipped archive file (.tar.gz) containing source to
          build.
        type: string
    type: object
  Volume:
    description: |-
      Volume describes a Docker container volume which is mounted into build steps
      in order to persist files across build step execution.
    properties:
      name:
        description: |-
          Name of the volume to mount.

          Volume names must be unique per build step and must be valid names for
          Docker volumes. Each named volume must be used by at least two build steps.
        type: string
      path:
        description: |-
          Path at which to mount the volume.

          Paths must be absolute and cannot conflict with other volume paths on the
          same build step or with certain reserved volume paths.
        type: string
    type: object
