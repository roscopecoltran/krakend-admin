{
	"basePath": "/",
	"definitions.AuditConfig.description": "Specifies the audit configuration for a service.\nThe configuration determines which permission types are logged, and what\nidentities, if any, are exempted from logging.\nAn AuditConfig must have one or more AuditLogConfigs.\n\nIf there are AuditConfigs for both `allServices` and a specific service,\nthe union of the two AuditConfigs is used for that service: the log_types\nspecified in each AuditConfig are enabled, and the exempted_members in each\nAuditConfig are exempted.\n\nExample Policy with multiple AuditConfigs:\n\n    {\n      \"audit_configs\": [\n        {\n          \"service\": \"allServices\"\n          \"audit_log_configs\": [\n            {\n              \"log_type\": \"DATA_READ\",\n              \"exempted_members\": [\n                \"user:foo@gmail.com\"\n              ]\n            },\n            {\n              \"log_type\": \"DATA_WRITE\",\n            },\n            {\n              \"log_type\": \"ADMIN_READ\",\n            }\n          ]\n        },\n        {\n          \"service\": \"fooservice.googleapis.com\"\n          \"audit_log_configs\": [\n            {\n              \"log_type\": \"DATA_READ\",\n            },\n            {\n              \"log_type\": \"DATA_WRITE\",\n              \"exempted_members\": [\n                \"user:bar@gmail.com\"\n              ]\n            }\n          ]\n        }\n      ]\n    }\n\nFor fooservice, this policy enables DATA_READ, DATA_WRITE and ADMIN_READ\nlogging. It also exempts foo@gmail.com from DATA_READ logging, and\nbar@gmail.com from DATA_WRITE logging.",
	"definitions.AuditConfig.properties.auditLogConfigs.description": "The configuration for logging of each type of permission.\nNext ID: 4",
	"definitions.AuditConfig.properties.auditLogConfigs.items.$ref": "#/definitions/AuditLogConfig",
	"definitions.AuditConfig.properties.auditLogConfigs.type": "array",
	"definitions.AuditConfig.properties.exemptedMembers.items.type": "string",
	"definitions.AuditConfig.properties.exemptedMembers.type": "array",
	"definitions.AuditConfig.properties.service.description": "Specifies a service that will be enabled for audit logging.\nFor example, `storage.googleapis.com`, `cloudsql.googleapis.com`.\n`allServices` is a special value that covers all services.",
	"definitions.AuditConfig.properties.service.type": "string",
	"definitions.AuditConfig.type": "object",
	"definitions.AuditLogConfig.description": "Provides the configuration for logging a type of permissions.\nExample:\n\n    {\n      \"audit_log_configs\": [\n        {\n          \"log_type\": \"DATA_READ\",\n          \"exempted_members\": [\n            \"user:foo@gmail.com\"\n          ]\n        },\n        {\n          \"log_type\": \"DATA_WRITE\",\n        }\n      ]\n    }\n\nThis enables 'DATA_READ' and 'DATA_WRITE' logging, while exempting\nfoo@gmail.com from DATA_READ logging.",
	"definitions.AuditLogConfig.properties.exemptedMembers.description": "Specifies the identities that do not cause logging for this type of\npermission.\nFollows the same format of Binding.members.",
	"definitions.AuditLogConfig.properties.exemptedMembers.items.type": "string",
	"definitions.AuditLogConfig.properties.exemptedMembers.type": "array",
	"definitions.AuditLogConfig.properties.logType.description": "The log type that this config enables.",
	"definitions.AuditLogConfig.properties.logType.enum.length": 4,
	"definitions.AuditLogConfig.properties.logType.enum[0]": "LOG_TYPE_UNSPECIFIED",
	"definitions.AuditLogConfig.properties.logType.enum[1]": "ADMIN_READ",
	"definitions.AuditLogConfig.properties.logType.enum[2]": "DATA_WRITE",
	"definitions.AuditLogConfig.properties.logType.enum[3]": "DATA_READ",
	"definitions.AuditLogConfig.properties.logType.type": "string",
	"definitions.AuditLogConfig.type": "object",
	"definitions.Binding.description": "Associates `members` with a `role`.",
	"definitions.Binding.properties.condition.$ref": "#/definitions/Expr",
	"definitions.Binding.properties.condition.description": "The condition that is associated with this binding.\nNOTE: an unsatisfied condition will not allow user access via current\nbinding. Different bindings, including their conditions, are examined\nindependently.\nThis field is GOOGLE_INTERNAL.",
	"definitions.Binding.properties.members.description": "Specifies the identities requesting access for a Cloud Platform resource.\n`members` can have the following values:\n\n* `allUsers`: A special identifier that represents anyone who is\n   on the internet; with or without a Google account.\n\n* `allAuthenticatedUsers`: A special identifier that represents anyone\n   who is authenticated with a Google account or a service account.\n\n* `user:{emailid}`: An email address that represents a specific Google\n   account. For example, `alice@gmail.com` or `joe@example.com`.\n\n\n* `serviceAccount:{emailid}`: An email address that represents a service\n   account. For example, `my-other-app@appspot.gserviceaccount.com`.\n\n* `group:{emailid}`: An email address that represents a Google group.\n   For example, `admins@example.com`.\n\n\n* `domain:{domain}`: A Google Apps domain name that represents all the\n   users of that domain. For example, `google.com` or `example.com`.\n\n",
	"definitions.Binding.properties.members.items.type": "string",
	"definitions.Binding.properties.members.type": "array",
	"definitions.Binding.properties.role.description": "Role that is assigned to `members`.\nFor example, `roles/viewer`, `roles/editor`, or `roles/owner`.\nRequired",
	"definitions.Binding.properties.role.type": "string",
	"definitions.Binding.type": "object",
	"definitions.Empty.description": "A generic empty message that you can re-use to avoid defining duplicated\nempty messages in your APIs. A typical example is to use it as the request\nor the response type of an API method. For instance:\n\n    service Foo {\n      rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);\n    }\n\nThe JSON representation for `Empty` is empty JSON object `{}`.",
	"definitions.Empty.type": "object",
	"definitions.Expr.description": "Represents an expression text. Example:\n\n    title: \"User account presence\"\n    description: \"Determines whether the request has a user account\"\n    expression: \"size(request.user) \u003e 0\"",
	"definitions.Expr.properties.description.description": "An optional description of the expression. This is a longer text which\ndescribes the expression, e.g. when hovered over it in a UI.",
	"definitions.Expr.properties.description.type": "string",
	"definitions.Expr.properties.expression.description": "Textual representation of an expression in\nCommon Expression Language syntax.\n\nThe application context of the containing message determines which\nwell-known feature set of CEL is supported.",
	"definitions.Expr.properties.expression.type": "string",
	"definitions.Expr.properties.location.description": "An optional string indicating the location of the expression for error\nreporting, e.g. a file name and a position in the file.",
	"definitions.Expr.properties.location.type": "string",
	"definitions.Expr.properties.title.description": "An optional title for the expression, i.e. a short string describing\nits purpose. This can be used e.g. in UIs which allow to enter the\nexpression.",
	"definitions.Expr.properties.title.type": "string",
	"definitions.Expr.type": "object",
	"definitions.ListReposResponse.description": "Response for ListRepos.  The size is not set in the returned repositories.",
	"definitions.ListReposResponse.properties.nextPageToken.description": "If non-empty, additional repositories exist within the project. These\ncan be retrieved by including this value in the next ListReposRequest's\npage_token field.",
	"definitions.ListReposResponse.properties.nextPageToken.type": "string",
	"definitions.ListReposResponse.properties.repos.description": "The listed repos.",
	"definitions.ListReposResponse.properties.repos.items.$ref": "#/definitions/Repo",
	"definitions.ListReposResponse.properties.repos.type": "array",
	"definitions.ListReposResponse.type": "object",
	"definitions.MirrorConfig.description": "Configuration to automatically mirror a repository from another\nhosting service, for example GitHub or BitBucket.",
	"definitions.MirrorConfig.properties.deployKeyId.description": "ID of the SSH deploy key at the other hosting service.\nRemoving this key from the other service would deauthorize\nGoogle Cloud Source Repositories from mirroring.",
	"definitions.MirrorConfig.properties.deployKeyId.type": "string",
	"definitions.MirrorConfig.properties.url.description": "URL of the main repository at the other hosting service.",
	"definitions.MirrorConfig.properties.url.type": "string",
	"definitions.MirrorConfig.properties.webhookId.description": "ID of the webhook listening to updates to trigger mirroring.\nRemoving this webook from the other hosting service will stop\nGoogle Cloud Source Repositories from receiving notifications,\nand thereby disabling mirroring.",
	"definitions.MirrorConfig.properties.webhookId.type": "string",
	"definitions.MirrorConfig.type": "object",
	"definitions.Policy.description": "Defines an Identity and Access Management (IAM) policy. It is used to\nspecify access control policies for Cloud Platform resources.\n\n\nA `Policy` consists of a list of `bindings`. A `Binding` binds a list of\n`members` to a `role`, where the members can be user accounts, Google groups,\nGoogle domains, and service accounts. A `role` is a named list of permissions\ndefined by IAM.\n\n**Example**\n\n    {\n      \"bindings\": [\n        {\n          \"role\": \"roles/owner\",\n          \"members\": [\n            \"user:mike@example.com\",\n            \"group:admins@example.com\",\n            \"domain:google.com\",\n            \"serviceAccount:my-other-app@appspot.gserviceaccount.com\",\n          ]\n        },\n        {\n          \"role\": \"roles/viewer\",\n          \"members\": [\"user:sean@example.com\"]\n        }\n      ]\n    }\n\nFor a description of IAM and its features, see the\n[IAM developer's guide](https://cloud.google.com/iam).",
	"definitions.Policy.properties.auditConfigs.description": "Specifies cloud audit logging configuration for this policy.",
	"definitions.Policy.properties.auditConfigs.items.$ref": "#/definitions/AuditConfig",
	"definitions.Policy.properties.auditConfigs.type": "array",
	"definitions.Policy.properties.bindings.description": "Associates a list of `members` to a `role`.\n`bindings` with no members will result in an error.",
	"definitions.Policy.properties.bindings.items.$ref": "#/definitions/Binding",
	"definitions.Policy.properties.bindings.type": "array",
	"definitions.Policy.properties.etag.description": "`etag` is used for optimistic concurrency control as a way to help\nprevent simultaneous updates of a policy from overwriting each other.\nIt is strongly suggested that systems make use of the `etag` in the\nread-modify-write cycle to perform policy updates in order to avoid race\nconditions: An `etag` is returned in the response to `getIamPolicy`, and\nsystems are expected to put that etag in the request to `setIamPolicy` to\nensure that their change will be applied to the same version of the policy.\n\nIf no `etag` is provided in the call to `setIamPolicy`, then the existing\npolicy is overwritten blindly.",
	"definitions.Policy.properties.etag.format": "byte",
	"definitions.Policy.properties.etag.type": "string",
	"definitions.Policy.properties.iamOwned.type": "boolean",
	"definitions.Policy.properties.version.description": "Version of the `Policy`. The default version is 0.",
	"definitions.Policy.properties.version.format": "int32",
	"definitions.Policy.properties.version.type": "integer",
	"definitions.Policy.type": "object",
	"definitions.Repo.description": "A repository (or repo) is a Git repository storing versioned source content.",
	"definitions.Repo.properties.mirrorConfig.$ref": "#/definitions/MirrorConfig",
	"definitions.Repo.properties.mirrorConfig.description": "How this repository mirrors a repository managed by another service.",
	"definitions.Repo.properties.name.description": "Resource name of the repository, of the form\n`projects/\u003cproject\u003e/repos/\u003crepo\u003e`.  The repo name may contain slashes.\neg, `projects/myproject/repos/name/with/slash`",
	"definitions.Repo.properties.name.type": "string",
	"definitions.Repo.properties.size.description": "The disk usage of the repo, in bytes.\nOnly returned by GetRepo.",
	"definitions.Repo.properties.size.format": "int64",
	"definitions.Repo.properties.size.type": "string",
	"definitions.Repo.properties.url.description": "URL to clone the repository from Google Cloud Source Repositories.",
	"definitions.Repo.properties.url.type": "string",
	"definitions.Repo.type": "object",
	"definitions.SetIamPolicyRequest.description": "Request message for `SetIamPolicy` method.",
	"definitions.SetIamPolicyRequest.properties.policy.$ref": "#/definitions/Policy",
	"definitions.SetIamPolicyRequest.properties.policy.description": "REQUIRED: The complete policy to be applied to the `resource`. The size of\nthe policy is limited to a few 10s of KB. An empty policy is a\nvalid policy but certain Cloud Platform services (such as Projects)\nmight reject them.",
	"definitions.SetIamPolicyRequest.properties.updateMask.description": "OPTIONAL: A FieldMask specifying which fields of the policy to modify. Only\nthe fields in the mask will be modified. If no mask is provided, the\nfollowing default mask is used:\npaths: \"bindings, etag\"\nThis field is only used by Cloud IAM.",
	"definitions.SetIamPolicyRequest.properties.updateMask.format": "google-fieldmask",
	"definitions.SetIamPolicyRequest.properties.updateMask.type": "string",
	"definitions.SetIamPolicyRequest.type": "object",
	"definitions.TestIamPermissionsRequest.description": "Request message for `TestIamPermissions` method.",
	"definitions.TestIamPermissionsRequest.properties.permissions.description": "The set of permissions to check for the `resource`. Permissions with\nwildcards (such as '*' or 'storage.*') are not allowed. For more\ninformation see\n[IAM Overview](https://cloud.google.com/iam/docs/overview#permissions).",
	"definitions.TestIamPermissionsRequest.properties.permissions.items.type": "string",
	"definitions.TestIamPermissionsRequest.properties.permissions.type": "array",
	"definitions.TestIamPermissionsRequest.type": "object",
	"definitions.TestIamPermissionsResponse.description": "Response message for `TestIamPermissions` method.",
	"definitions.TestIamPermissionsResponse.properties.permissions.description": "A subset of `TestPermissionsRequest.permissions` that the caller is\nallowed.",
	"definitions.TestIamPermissionsResponse.properties.permissions.items.type": "string",
	"definitions.TestIamPermissionsResponse.properties.permissions.type": "array",
	"definitions.TestIamPermissionsResponse.type": "object",
	"externalDocs.url": "https://cloud.google.com/source-repositories/docs/apis",
	"host": "sourcerepo.googleapis.com",
	"info.contact.name": "Google",
	"info.contact.url": "https://google.com",
	"info.description": "Access source code repositories hosted by Google.",
	"info.title": "Cloud Source Repositories",
	"info.version": "v1",
	"info.x-apiClientRegistration.url": "https://console.developers.google.com",
	"info.x-logo.url": "https://api.apis.guru/v2/cache/logo/https_www.google.com_images_branding_googlelogo_2x_googlelogo_color_272x92dp.png",
	"info.x-origin.length": 1,
	"info.x-origin[0].converter.url": "https://github.com/lucybot/api-spec-converter",
	"info.x-origin[0].converter.version": "2.6.0",
	"info.x-origin[0].format": "google",
	"info.x-origin[0].url": "https://sourcerepo.googleapis.com/$discovery/rest?version=v1",
	"info.x-origin[0].version": "v1",
	"info.x-preferred": true,
	"info.x-providerName": "googleapis.com",
	"info.x-serviceName": "sourcerepo",
	"parameters.$.xgafv.description": "V1 error format.",
	"parameters.$.xgafv.enum.length": 2,
	"parameters.$.xgafv.enum[0]": "1",
	"parameters.$.xgafv.enum[1]": "2",
	"parameters.$.xgafv.in": "query",
	"parameters.$.xgafv.name": "$.xgafv",
	"parameters.$.xgafv.type": "string",
	"parameters.access_token.description": "OAuth access token.",
	"parameters.access_token.in": "query",
	"parameters.access_token.name": "access_token",
	"parameters.access_token.type": "string",
	"parameters.alt.default": "json",
	"parameters.alt.description": "Data format for response.",
	"parameters.alt.enum.length": 3,
	"parameters.alt.enum[0]": "json",
	"parameters.alt.enum[1]": "media",
	"parameters.alt.enum[2]": "proto",
	"parameters.alt.in": "query",
	"parameters.alt.name": "alt",
	"parameters.alt.type": "string",
	"parameters.bearer_token.description": "OAuth bearer token.",
	"parameters.bearer_token.in": "query",
	"parameters.bearer_token.name": "bearer_token",
	"parameters.bearer_token.type": "string",
	"parameters.callback.description": "JSONP",
	"parameters.callback.in": "query",
	"parameters.callback.name": "callback",
	"parameters.callback.type": "string",
	"parameters.fields.description": "Selector specifying which fields to include in a partial response.",
	"parameters.fields.in": "query",
	"parameters.fields.name": "fields",
	"parameters.fields.type": "string",
	"parameters.key.description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
	"parameters.key.in": "query",
	"parameters.key.name": "key",
	"parameters.key.type": "string",
	"parameters.oauth_token.description": "OAuth 2.0 token for the current user.",
	"parameters.oauth_token.in": "query",
	"parameters.oauth_token.name": "oauth_token",
	"parameters.oauth_token.type": "string",
	"parameters.pp.default": true,
	"parameters.pp.description": "Pretty-print response.",
	"parameters.pp.in": "query",
	"parameters.pp.name": "pp",
	"parameters.pp.type": "boolean",
	"parameters.prettyPrint.default": true,
	"parameters.prettyPrint.description": "Returns response with indentations and line breaks.",
	"parameters.prettyPrint.in": "query",
	"parameters.prettyPrint.name": "prettyPrint",
	"parameters.prettyPrint.type": "boolean",
	"parameters.quotaUser.description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
	"parameters.quotaUser.in": "query",
	"parameters.quotaUser.name": "quotaUser",
	"parameters.quotaUser.type": "string",
	"parameters.uploadType.description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
	"parameters.uploadType.in": "query",
	"parameters.uploadType.name": "uploadType",
	"parameters.uploadType.type": "string",
	"parameters.upload_protocol.description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
	"parameters.upload_protocol.in": "query",
	"parameters.upload_protocol.name": "upload_protocol",
	"parameters.upload_protocol.type": "string",
	"paths./v1/{name}.delete.description": "Deletes a repo.",
	"paths./v1/{name}.delete.operationId": "sourcerepo.projects.repos.delete",
	"paths./v1/{name}.delete.parameters.length": 1,
	"paths./v1/{name}.delete.parameters[0].description": "The name of the repo to delete. Values are of the form\n`projects/\u003cproject\u003e/repos/\u003crepo\u003e`.",
	"paths./v1/{name}.delete.parameters[0].in": "path",
	"paths./v1/{name}.delete.parameters[0].name": "name",
	"paths./v1/{name}.delete.parameters[0].required": true,
	"paths./v1/{name}.delete.parameters[0].type": "string",
	"paths./v1/{name}.delete.parameters[0].x-reservedExpansion": true,
	"paths./v1/{name}.delete.responses.200.description": "Successful response",
	"paths./v1/{name}.delete.responses.200.schema.$ref": "#/definitions/Empty",
	"paths./v1/{name}.delete.security.length": 4,
	"paths./v1/{name}.delete.security[0].Oauth2.length": 1,
	"paths./v1/{name}.delete.security[0].Oauth2[0]": "https://www.googleapis.com/auth/cloud-platform",
	"paths./v1/{name}.delete.security[1].Oauth2.length": 1,
	"paths./v1/{name}.delete.security[1].Oauth2[0]": "https://www.googleapis.com/auth/source.full_control",
	"paths./v1/{name}.delete.security[2].Oauth2.length": 1,
	"paths./v1/{name}.delete.security[2].Oauth2[0]": "https://www.googleapis.com/auth/source.read_only",
	"paths./v1/{name}.delete.security[3].Oauth2.length": 1,
	"paths./v1/{name}.delete.security[3].Oauth2[0]": "https://www.googleapis.com/auth/source.read_write",
	"paths./v1/{name}.delete.tags.length": 1,
	"paths./v1/{name}.delete.tags[0]": "projects",
	"paths./v1/{name}.get.description": "Returns information about a repo.",
	"paths./v1/{name}.get.operationId": "sourcerepo.projects.repos.get",
	"paths./v1/{name}.get.parameters.length": 1,
	"paths./v1/{name}.get.parameters[0].description": "The name of the requested repository. Values are of the form\n`projects/\u003cproject\u003e/repos/\u003crepo\u003e`.",
	"paths./v1/{name}.get.parameters[0].in": "path",
	"paths./v1/{name}.get.parameters[0].name": "name",
	"paths./v1/{name}.get.parameters[0].required": true,
	"paths./v1/{name}.get.parameters[0].type": "string",
	"paths./v1/{name}.get.parameters[0].x-reservedExpansion": true,
	"paths./v1/{name}.get.responses.200.description": "Successful response",
	"paths./v1/{name}.get.responses.200.schema.$ref": "#/definitions/Repo",
	"paths./v1/{name}.get.security.length": 4,
	"paths./v1/{name}.get.security[0].Oauth2.length": 1,
	"paths./v1/{name}.get.security[0].Oauth2[0]": "https://www.googleapis.com/auth/cloud-platform",
	"paths./v1/{name}.get.security[1].Oauth2.length": 1,
	"paths./v1/{name}.get.security[1].Oauth2[0]": "https://www.googleapis.com/auth/source.full_control",
	"paths./v1/{name}.get.security[2].Oauth2.length": 1,
	"paths./v1/{name}.get.security[2].Oauth2[0]": "https://www.googleapis.com/auth/source.read_only",
	"paths./v1/{name}.get.security[3].Oauth2.length": 1,
	"paths./v1/{name}.get.security[3].Oauth2[0]": "https://www.googleapis.com/auth/source.read_write",
	"paths./v1/{name}.get.tags.length": 1,
	"paths./v1/{name}.get.tags[0]": "projects",
	"paths./v1/{name}.parameters.length": 13,
	"paths./v1/{name}.parameters[0].$ref": "#/parameters/fields",
	"paths./v1/{name}.parameters[10].$ref": "#/parameters/oauth_token",
	"paths./v1/{name}.parameters[11].$ref": "#/parameters/upload_protocol",
	"paths./v1/{name}.parameters[12].$ref": "#/parameters/prettyPrint",
	"paths./v1/{name}.parameters[1].$ref": "#/parameters/uploadType",
	"paths./v1/{name}.parameters[2].$ref": "#/parameters/callback",
	"paths./v1/{name}.parameters[3].$ref": "#/parameters/$.xgafv",
	"paths./v1/{name}.parameters[4].$ref": "#/parameters/alt",
	"paths./v1/{name}.parameters[5].$ref": "#/parameters/key",
	"paths./v1/{name}.parameters[6].$ref": "#/parameters/access_token",
	"paths./v1/{name}.parameters[7].$ref": "#/parameters/quotaUser",
	"paths./v1/{name}.parameters[8].$ref": "#/parameters/pp",
	"paths./v1/{name}.parameters[9].$ref": "#/parameters/bearer_token",
	"paths./v1/{name}/repos.get.description": "Returns all repos belonging to a project. The sizes of the repos are\nnot set by ListRepos.  To get the size of a repo, use GetRepo.",
	"paths./v1/{name}/repos.get.operationId": "sourcerepo.projects.repos.list",
	"paths./v1/{name}/repos.get.parameters.length": 3,
	"paths./v1/{name}/repos.get.parameters[0].description": "The project ID whose repos should be listed. Values are of the form\n`projects/\u003cproject\u003e`.",
	"paths./v1/{name}/repos.get.parameters[0].in": "path",
	"paths./v1/{name}/repos.get.parameters[0].name": "name",
	"paths./v1/{name}/repos.get.parameters[0].required": true,
	"paths./v1/{name}/repos.get.parameters[0].type": "string",
	"paths./v1/{name}/repos.get.parameters[0].x-reservedExpansion": true,
	"paths./v1/{name}/repos.get.parameters[1].description": "Maximum number of repositories to return; between 1 and 500.\nIf not set or zero, defaults to 100 at the server.",
	"paths./v1/{name}/repos.get.parameters[1].in": "query",
	"paths./v1/{name}/repos.get.parameters[1].name": "pageSize",
	"paths./v1/{name}/repos.get.parameters[1].type": "integer",
	"paths./v1/{name}/repos.get.parameters[2].description": "Resume listing repositories where a prior ListReposResponse\nleft off. This is an opaque token that must be obtained from\na recent, prior ListReposResponse's next_page_token field.",
	"paths./v1/{name}/repos.get.parameters[2].in": "query",
	"paths./v1/{name}/repos.get.parameters[2].name": "pageToken",
	"paths./v1/{name}/repos.get.parameters[2].type": "string",
	"paths./v1/{name}/repos.get.responses.200.description": "Successful response",
	"paths./v1/{name}/repos.get.responses.200.schema.$ref": "#/definitions/ListReposResponse",
	"paths./v1/{name}/repos.get.security.length": 4,
	"paths./v1/{name}/repos.get.security[0].Oauth2.length": 1,
	"paths./v1/{name}/repos.get.security[0].Oauth2[0]": "https://www.googleapis.com/auth/cloud-platform",
	"paths./v1/{name}/repos.get.security[1].Oauth2.length": 1,
	"paths./v1/{name}/repos.get.security[1].Oauth2[0]": "https://www.googleapis.com/auth/source.full_control",
	"paths./v1/{name}/repos.get.security[2].Oauth2.length": 1,
	"paths./v1/{name}/repos.get.security[2].Oauth2[0]": "https://www.googleapis.com/auth/source.read_only",
	"paths./v1/{name}/repos.get.security[3].Oauth2.length": 1,
	"paths./v1/{name}/repos.get.security[3].Oauth2[0]": "https://www.googleapis.com/auth/source.read_write",
	"paths./v1/{name}/repos.get.tags.length": 1,
	"paths./v1/{name}/repos.get.tags[0]": "projects",
	"paths./v1/{name}/repos.parameters.length": 13,
	"paths./v1/{name}/repos.parameters[0].$ref": "#/parameters/fields",
	"paths./v1/{name}/repos.parameters[10].$ref": "#/parameters/oauth_token",
	"paths./v1/{name}/repos.parameters[11].$ref": "#/parameters/upload_protocol",
	"paths./v1/{name}/repos.parameters[12].$ref": "#/parameters/prettyPrint",
	"paths./v1/{name}/repos.parameters[1].$ref": "#/parameters/uploadType",
	"paths./v1/{name}/repos.parameters[2].$ref": "#/parameters/callback",
	"paths./v1/{name}/repos.parameters[3].$ref": "#/parameters/$.xgafv",
	"paths./v1/{name}/repos.parameters[4].$ref": "#/parameters/alt",
	"paths./v1/{name}/repos.parameters[5].$ref": "#/parameters/key",
	"paths./v1/{name}/repos.parameters[6].$ref": "#/parameters/access_token",
	"paths./v1/{name}/repos.parameters[7].$ref": "#/parameters/quotaUser",
	"paths./v1/{name}/repos.parameters[8].$ref": "#/parameters/pp",
	"paths./v1/{name}/repos.parameters[9].$ref": "#/parameters/bearer_token",
	"paths./v1/{parent}/repos.parameters.length": 13,
	"paths./v1/{parent}/repos.parameters[0].$ref": "#/parameters/fields",
	"paths./v1/{parent}/repos.parameters[10].$ref": "#/parameters/oauth_token",
	"paths./v1/{parent}/repos.parameters[11].$ref": "#/parameters/upload_protocol",
	"paths./v1/{parent}/repos.parameters[12].$ref": "#/parameters/prettyPrint",
	"paths./v1/{parent}/repos.parameters[1].$ref": "#/parameters/uploadType",
	"paths./v1/{parent}/repos.parameters[2].$ref": "#/parameters/callback",
	"paths./v1/{parent}/repos.parameters[3].$ref": "#/parameters/$.xgafv",
	"paths./v1/{parent}/repos.parameters[4].$ref": "#/parameters/alt",
	"paths./v1/{parent}/repos.parameters[5].$ref": "#/parameters/key",
	"paths./v1/{parent}/repos.parameters[6].$ref": "#/parameters/access_token",
	"paths./v1/{parent}/repos.parameters[7].$ref": "#/parameters/quotaUser",
	"paths./v1/{parent}/repos.parameters[8].$ref": "#/parameters/pp",
	"paths./v1/{parent}/repos.parameters[9].$ref": "#/parameters/bearer_token",
	"paths./v1/{parent}/repos.post.description": "Creates a repo in the given project with the given name.\n\nIf the named repository already exists, `CreateRepo` returns\n`ALREADY_EXISTS`.",
	"paths./v1/{parent}/repos.post.operationId": "sourcerepo.projects.repos.create",
	"paths./v1/{parent}/repos.post.parameters.length": 2,
	"paths./v1/{parent}/repos.post.parameters[0].description": "The project in which to create the repo. Values are of the form\n`projects/\u003cproject\u003e`.",
	"paths./v1/{parent}/repos.post.parameters[0].in": "path",
	"paths./v1/{parent}/repos.post.parameters[0].name": "parent",
	"paths./v1/{parent}/repos.post.parameters[0].required": true,
	"paths./v1/{parent}/repos.post.parameters[0].type": "string",
	"paths./v1/{parent}/repos.post.parameters[0].x-reservedExpansion": true,
	"paths./v1/{parent}/repos.post.parameters[1].in": "body",
	"paths./v1/{parent}/repos.post.parameters[1].name": "body",
	"paths./v1/{parent}/repos.post.parameters[1].schema.$ref": "#/definitions/Repo",
	"paths./v1/{parent}/repos.post.responses.200.description": "Successful response",
	"paths./v1/{parent}/repos.post.responses.200.schema.$ref": "#/definitions/Repo",
	"paths./v1/{parent}/repos.post.security.length": 4,
	"paths./v1/{parent}/repos.post.security[0].Oauth2.length": 1,
	"paths./v1/{parent}/repos.post.security[0].Oauth2[0]": "https://www.googleapis.com/auth/cloud-platform",
	"paths./v1/{parent}/repos.post.security[1].Oauth2.length": 1,
	"paths./v1/{parent}/repos.post.security[1].Oauth2[0]": "https://www.googleapis.com/auth/source.full_control",
	"paths./v1/{parent}/repos.post.security[2].Oauth2.length": 1,
	"paths./v1/{parent}/repos.post.security[2].Oauth2[0]": "https://www.googleapis.com/auth/source.read_only",
	"paths./v1/{parent}/repos.post.security[3].Oauth2.length": 1,
	"paths./v1/{parent}/repos.post.security[3].Oauth2[0]": "https://www.googleapis.com/auth/source.read_write",
	"paths./v1/{parent}/repos.post.tags.length": 1,
	"paths./v1/{parent}/repos.post.tags[0]": "projects",
	"paths./v1/{resource}:getIamPolicy.get.description": "Gets the access control policy for a resource.\nReturns an empty policy if the resource exists and does not have a policy\nset.",
	"paths./v1/{resource}:getIamPolicy.get.operationId": "sourcerepo.projects.repos.getIamPolicy",
	"paths./v1/{resource}:getIamPolicy.get.parameters.length": 1,
	"paths./v1/{resource}:getIamPolicy.get.parameters[0].description": "REQUIRED: The resource for which the policy is being requested.\nSee the operation documentation for the appropriate value for this field.",
	"paths./v1/{resource}:getIamPolicy.get.parameters[0].in": "path",
	"paths./v1/{resource}:getIamPolicy.get.parameters[0].name": "resource",
	"paths./v1/{resource}:getIamPolicy.get.parameters[0].required": true,
	"paths./v1/{resource}:getIamPolicy.get.parameters[0].type": "string",
	"paths./v1/{resource}:getIamPolicy.get.parameters[0].x-reservedExpansion": true,
	"paths./v1/{resource}:getIamPolicy.get.responses.200.description": "Successful response",
	"paths./v1/{resource}:getIamPolicy.get.responses.200.schema.$ref": "#/definitions/Policy",
	"paths./v1/{resource}:getIamPolicy.get.security.length": 4,
	"paths./v1/{resource}:getIamPolicy.get.security[0].Oauth2.length": 1,
	"paths./v1/{resource}:getIamPolicy.get.security[0].Oauth2[0]": "https://www.googleapis.com/auth/cloud-platform",
	"paths./v1/{resource}:getIamPolicy.get.security[1].Oauth2.length": 1,
	"paths./v1/{resource}:getIamPolicy.get.security[1].Oauth2[0]": "https://www.googleapis.com/auth/source.full_control",
	"paths./v1/{resource}:getIamPolicy.get.security[2].Oauth2.length": 1,
	"paths./v1/{resource}:getIamPolicy.get.security[2].Oauth2[0]": "https://www.googleapis.com/auth/source.read_only",
	"paths./v1/{resource}:getIamPolicy.get.security[3].Oauth2.length": 1,
	"paths./v1/{resource}:getIamPolicy.get.security[3].Oauth2[0]": "https://www.googleapis.com/auth/source.read_write",
	"paths./v1/{resource}:getIamPolicy.get.tags.length": 1,
	"paths./v1/{resource}:getIamPolicy.get.tags[0]": "projects",
	"paths./v1/{resource}:getIamPolicy.parameters.length": 13,
	"paths./v1/{resource}:getIamPolicy.parameters[0].$ref": "#/parameters/fields",
	"paths./v1/{resource}:getIamPolicy.parameters[10].$ref": "#/parameters/oauth_token",
	"paths./v1/{resource}:getIamPolicy.parameters[11].$ref": "#/parameters/upload_protocol",
	"paths./v1/{resource}:getIamPolicy.parameters[12].$ref": "#/parameters/prettyPrint",
	"paths./v1/{resource}:getIamPolicy.parameters[1].$ref": "#/parameters/uploadType",
	"paths./v1/{resource}:getIamPolicy.parameters[2].$ref": "#/parameters/callback",
	"paths./v1/{resource}:getIamPolicy.parameters[3].$ref": "#/parameters/$.xgafv",
	"paths./v1/{resource}:getIamPolicy.parameters[4].$ref": "#/parameters/alt",
	"paths./v1/{resource}:getIamPolicy.parameters[5].$ref": "#/parameters/key",
	"paths./v1/{resource}:getIamPolicy.parameters[6].$ref": "#/parameters/access_token",
	"paths./v1/{resource}:getIamPolicy.parameters[7].$ref": "#/parameters/quotaUser",
	"paths./v1/{resource}:getIamPolicy.parameters[8].$ref": "#/parameters/pp",
	"paths./v1/{resource}:getIamPolicy.parameters[9].$ref": "#/parameters/bearer_token",
	"paths./v1/{resource}:setIamPolicy.parameters.length": 13,
	"paths./v1/{resource}:setIamPolicy.parameters[0].$ref": "#/parameters/fields",
	"paths./v1/{resource}:setIamPolicy.parameters[10].$ref": "#/parameters/oauth_token",
	"paths./v1/{resource}:setIamPolicy.parameters[11].$ref": "#/parameters/upload_protocol",
	"paths./v1/{resource}:setIamPolicy.parameters[12].$ref": "#/parameters/prettyPrint",
	"paths./v1/{resource}:setIamPolicy.parameters[1].$ref": "#/parameters/uploadType",
	"paths./v1/{resource}:setIamPolicy.parameters[2].$ref": "#/parameters/callback",
	"paths./v1/{resource}:setIamPolicy.parameters[3].$ref": "#/parameters/$.xgafv",
	"paths./v1/{resource}:setIamPolicy.parameters[4].$ref": "#/parameters/alt",
	"paths./v1/{resource}:setIamPolicy.parameters[5].$ref": "#/parameters/key",
	"paths./v1/{resource}:setIamPolicy.parameters[6].$ref": "#/parameters/access_token",
	"paths./v1/{resource}:setIamPolicy.parameters[7].$ref": "#/parameters/quotaUser",
	"paths./v1/{resource}:setIamPolicy.parameters[8].$ref": "#/parameters/pp",
	"paths./v1/{resource}:setIamPolicy.parameters[9].$ref": "#/parameters/bearer_token",
	"paths./v1/{resource}:setIamPolicy.post.description": "Sets the access control policy on the specified resource. Replaces any\nexisting policy.",
	"paths./v1/{resource}:setIamPolicy.post.operationId": "sourcerepo.projects.repos.setIamPolicy",
	"paths./v1/{resource}:setIamPolicy.post.parameters.length": 2,
	"paths./v1/{resource}:setIamPolicy.post.parameters[0].description": "REQUIRED: The resource for which the policy is being specified.\nSee the operation documentation for the appropriate value for this field.",
	"paths./v1/{resource}:setIamPolicy.post.parameters[0].in": "path",
	"paths./v1/{resource}:setIamPolicy.post.parameters[0].name": "resource",
	"paths./v1/{resource}:setIamPolicy.post.parameters[0].required": true,
	"paths./v1/{resource}:setIamPolicy.post.parameters[0].type": "string",
	"paths./v1/{resource}:setIamPolicy.post.parameters[0].x-reservedExpansion": true,
	"paths./v1/{resource}:setIamPolicy.post.parameters[1].in": "body",
	"paths./v1/{resource}:setIamPolicy.post.parameters[1].name": "body",
	"paths./v1/{resource}:setIamPolicy.post.parameters[1].schema.$ref": "#/definitions/SetIamPolicyRequest",
	"paths./v1/{resource}:setIamPolicy.post.responses.200.description": "Successful response",
	"paths./v1/{resource}:setIamPolicy.post.responses.200.schema.$ref": "#/definitions/Policy",
	"paths./v1/{resource}:setIamPolicy.post.security.length": 4,
	"paths./v1/{resource}:setIamPolicy.post.security[0].Oauth2.length": 1,
	"paths./v1/{resource}:setIamPolicy.post.security[0].Oauth2[0]": "https://www.googleapis.com/auth/cloud-platform",
	"paths./v1/{resource}:setIamPolicy.post.security[1].Oauth2.length": 1,
	"paths./v1/{resource}:setIamPolicy.post.security[1].Oauth2[0]": "https://www.googleapis.com/auth/source.full_control",
	"paths./v1/{resource}:setIamPolicy.post.security[2].Oauth2.length": 1,
	"paths./v1/{resource}:setIamPolicy.post.security[2].Oauth2[0]": "https://www.googleapis.com/auth/source.read_only",
	"paths./v1/{resource}:setIamPolicy.post.security[3].Oauth2.length": 1,
	"paths./v1/{resource}:setIamPolicy.post.security[3].Oauth2[0]": "https://www.googleapis.com/auth/source.read_write",
	"paths./v1/{resource}:setIamPolicy.post.tags.length": 1,
	"paths./v1/{resource}:setIamPolicy.post.tags[0]": "projects",
	"paths./v1/{resource}:testIamPermissions.parameters.length": 13,
	"paths./v1/{resource}:testIamPermissions.parameters[0].$ref": "#/parameters/fields",
	"paths./v1/{resource}:testIamPermissions.parameters[10].$ref": "#/parameters/oauth_token",
	"paths./v1/{resource}:testIamPermissions.parameters[11].$ref": "#/parameters/upload_protocol",
	"paths./v1/{resource}:testIamPermissions.parameters[12].$ref": "#/parameters/prettyPrint",
	"paths./v1/{resource}:testIamPermissions.parameters[1].$ref": "#/parameters/uploadType",
	"paths./v1/{resource}:testIamPermissions.parameters[2].$ref": "#/parameters/callback",
	"paths./v1/{resource}:testIamPermissions.parameters[3].$ref": "#/parameters/$.xgafv",
	"paths./v1/{resource}:testIamPermissions.parameters[4].$ref": "#/parameters/alt",
	"paths./v1/{resource}:testIamPermissions.parameters[5].$ref": "#/parameters/key",
	"paths./v1/{resource}:testIamPermissions.parameters[6].$ref": "#/parameters/access_token",
	"paths./v1/{resource}:testIamPermissions.parameters[7].$ref": "#/parameters/quotaUser",
	"paths./v1/{resource}:testIamPermissions.parameters[8].$ref": "#/parameters/pp",
	"paths./v1/{resource}:testIamPermissions.parameters[9].$ref": "#/parameters/bearer_token",
	"paths./v1/{resource}:testIamPermissions.post.description": "Returns permissions that a caller has on the specified resource.\nIf the resource does not exist, this will return an empty set of\npermissions, not a NOT_FOUND error.",
	"paths./v1/{resource}:testIamPermissions.post.operationId": "sourcerepo.projects.repos.testIamPermissions",
	"paths./v1/{resource}:testIamPermissions.post.parameters.length": 2,
	"paths./v1/{resource}:testIamPermissions.post.parameters[0].description": "REQUIRED: The resource for which the policy detail is being requested.\nSee the operation documentation for the appropriate value for this field.",
	"paths./v1/{resource}:testIamPermissions.post.parameters[0].in": "path",
	"paths./v1/{resource}:testIamPermissions.post.parameters[0].name": "resource",
	"paths./v1/{resource}:testIamPermissions.post.parameters[0].required": true,
	"paths./v1/{resource}:testIamPermissions.post.parameters[0].type": "string",
	"paths./v1/{resource}:testIamPermissions.post.parameters[0].x-reservedExpansion": true,
	"paths./v1/{resource}:testIamPermissions.post.parameters[1].in": "body",
	"paths./v1/{resource}:testIamPermissions.post.parameters[1].name": "body",
	"paths./v1/{resource}:testIamPermissions.post.parameters[1].schema.$ref": "#/definitions/TestIamPermissionsRequest",
	"paths./v1/{resource}:testIamPermissions.post.responses.200.description": "Successful response",
	"paths./v1/{resource}:testIamPermissions.post.responses.200.schema.$ref": "#/definitions/TestIamPermissionsResponse",
	"paths./v1/{resource}:testIamPermissions.post.security.length": 4,
	"paths./v1/{resource}:testIamPermissions.post.security[0].Oauth2.length": 1,
	"paths./v1/{resource}:testIamPermissions.post.security[0].Oauth2[0]": "https://www.googleapis.com/auth/cloud-platform",
	"paths./v1/{resource}:testIamPermissions.post.security[1].Oauth2.length": 1,
	"paths./v1/{resource}:testIamPermissions.post.security[1].Oauth2[0]": "https://www.googleapis.com/auth/source.full_control",
	"paths./v1/{resource}:testIamPermissions.post.security[2].Oauth2.length": 1,
	"paths./v1/{resource}:testIamPermissions.post.security[2].Oauth2[0]": "https://www.googleapis.com/auth/source.read_only",
	"paths./v1/{resource}:testIamPermissions.post.security[3].Oauth2.length": 1,
	"paths./v1/{resource}:testIamPermissions.post.security[3].Oauth2[0]": "https://www.googleapis.com/auth/source.read_write",
	"paths./v1/{resource}:testIamPermissions.post.tags.length": 1,
	"paths./v1/{resource}:testIamPermissions.post.tags[0]": "projects",
	"schemes.length": 1,
	"schemes[0]": "https",
	"securityDefinitions.Oauth2.authorizationUrl": "https://accounts.google.com/o/oauth2/auth",
	"securityDefinitions.Oauth2.description": "Oauth 2.0 authentication",
	"securityDefinitions.Oauth2.flow": "implicit",
	"securityDefinitions.Oauth2.scopes.https://www.googleapis.com/auth/cloud-platform": "View and manage your data across Google Cloud Platform services",
	"securityDefinitions.Oauth2.scopes.https://www.googleapis.com/auth/source.full_control": "Manage your source code repositories",
	"securityDefinitions.Oauth2.scopes.https://www.googleapis.com/auth/source.read_only": "View the contents of your source code repositories",
	"securityDefinitions.Oauth2.scopes.https://www.googleapis.com/auth/source.read_write": "Manage the contents of your source code repositories",
	"securityDefinitions.Oauth2.type": "oauth2",
	"swagger": "2.0",
	"tags.length": 1,
	"tags[0].name": "projects",
	"x-hasEquivalentPaths": true
}