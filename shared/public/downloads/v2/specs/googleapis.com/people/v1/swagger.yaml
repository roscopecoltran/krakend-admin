swagger: '2.0'
schemes:
  - https
host: people.googleapis.com
basePath: /
info:
  contact:
    name: Google
    url: 'https://google.com'
  description: Provides access to information about profiles and contacts.
  title: Google People
  version: v1
  x-apiClientRegistration:
    url: 'https://console.developers.google.com'
  x-logo:
    url: 'https://api.apis.guru/v2/cache/logo/https_www.google.com_images_branding_googlelogo_2x_googlelogo_color_272x92dp.png'
  x-origin:
    - converter:
        url: 'https://github.com/lucybot/api-spec-converter'
        version: 2.6.0
      format: google
      url: 'https://people.googleapis.com/$discovery/rest?version=v1'
      version: v1
  x-preferred: true
  x-providerName: googleapis.com
  x-serviceName: people
externalDocs:
  url: 'https://developers.google.com/people/'
securityDefinitions:
  Oauth2:
    authorizationUrl: 'https://accounts.google.com/o/oauth2/auth'
    description: Oauth 2.0 authentication
    flow: implicit
    scopes:
      'https://www.googleapis.com/auth/contacts': Manage your contacts
      'https://www.googleapis.com/auth/contacts.readonly': View your contacts
      'https://www.googleapis.com/auth/plus.login': 'Know the list of people in your circles, your age range, and language'
      'https://www.googleapis.com/auth/user.addresses.read': View your street addresses
      'https://www.googleapis.com/auth/user.birthday.read': View your complete date of birth
      'https://www.googleapis.com/auth/user.emails.read': View your email addresses
      'https://www.googleapis.com/auth/user.phonenumbers.read': View your phone numbers
      'https://www.googleapis.com/auth/userinfo.email': View your email address
      'https://www.googleapis.com/auth/userinfo.profile': View your basic profile info
    type: oauth2
parameters:
  $.xgafv:
    description: V1 error format.
    enum:
      - '1'
      - '2'
    in: query
    name: $.xgafv
    type: string
  access_token:
    description: OAuth access token.
    in: query
    name: access_token
    type: string
  alt:
    default: json
    description: Data format for response.
    enum:
      - json
      - media
      - proto
    in: query
    name: alt
    type: string
  bearer_token:
    description: OAuth bearer token.
    in: query
    name: bearer_token
    type: string
  callback:
    description: JSONP
    in: query
    name: callback
    type: string
  fields:
    description: Selector specifying which fields to include in a partial response.
    in: query
    name: fields
    type: string
  key:
    description: 'API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.'
    in: query
    name: key
    type: string
  oauth_token:
    description: OAuth 2.0 token for the current user.
    in: query
    name: oauth_token
    type: string
  pp:
    default: true
    description: Pretty-print response.
    in: query
    name: pp
    type: boolean
  prettyPrint:
    default: true
    description: Returns response with indentations and line breaks.
    in: query
    name: prettyPrint
    type: boolean
  quotaUser:
    description: 'Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.'
    in: query
    name: quotaUser
    type: string
  uploadType:
    description: 'Legacy upload protocol for media (e.g. "media", "multipart").'
    in: query
    name: uploadType
    type: string
  upload_protocol:
    description: 'Upload protocol for media (e.g. "raw", "multipart").'
    in: query
    name: upload_protocol
    type: string
tags:
  - name: contactGroups
  - name: people
paths:
  /v1/contactGroups:
    get:
      description: |-
        List all contact groups owned by the authenticated user. Members of the
        contact groups are not populated.
      operationId: people.contactGroups.list
      parameters:
        - description: The maximum number of resources to return.
          in: query
          name: pageSize
          type: integer
        - description: |-
            The next_page_token value returned from a previous call to
            [ListContactGroups](/people/api/rest/v1/contactgroups/list).
            Requests the next page of resources.
          in: query
          name: pageToken
          type: string
        - description: |-
            A sync token, returned by a previous call to `contactgroups.list`.
            Only resources changed since the sync token was created will be returned.
          in: query
          name: syncToken
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/ListContactGroupsResponse'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/contacts'
        - Oauth2:
            - 'https://www.googleapis.com/auth/contacts.readonly'
      tags:
        - contactGroups
    parameters:
      - $ref: '#/parameters/$.xgafv'
      - $ref: '#/parameters/access_token'
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/bearer_token'
      - $ref: '#/parameters/callback'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/pp'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/uploadType'
      - $ref: '#/parameters/upload_protocol'
    post:
      description: Create a new contact group owned by the authenticated user.
      operationId: people.contactGroups.create
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/CreateContactGroupRequest'
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/ContactGroup'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/contacts'
      tags:
        - contactGroups
  '/v1/contactGroups:batchGet':
    get:
      description: |-
        Get a list of contact groups owned by the authenticated user by specifying
        a list of contact group resource names.
      operationId: people.contactGroups.batchGet
      parameters:
        - description: Specifies the maximum number of members to return for each group.
          in: query
          name: maxMembers
          type: integer
        - collectionFormat: multi
          description: The resource names of the contact groups to get.
          in: query
          items:
            type: string
          name: resourceNames
          type: array
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/BatchGetContactGroupsResponse'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/contacts'
        - Oauth2:
            - 'https://www.googleapis.com/auth/contacts.readonly'
      tags:
        - contactGroups
    parameters:
      - $ref: '#/parameters/$.xgafv'
      - $ref: '#/parameters/access_token'
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/bearer_token'
      - $ref: '#/parameters/callback'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/pp'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/uploadType'
      - $ref: '#/parameters/upload_protocol'
  '/v1/people:batchGet':
    get:
      description: |-
        Provides information about a list of specific people by specifying a list
        of requested resource names. Use `people/me` to indicate the authenticated
        user.
        <br>
        The request throws a 400 error if 'personFields' is not specified.
      operationId: people.people.getBatchGet
      parameters:
        - description: |-
            **Required.** A field mask to restrict which fields on each person are
            returned. Valid values are:

            * addresses
            * ageRanges
            * biographies
            * birthdays
            * braggingRights
            * coverPhotos
            * emailAddresses
            * events
            * genders
            * imClients
            * interests
            * locales
            * memberships
            * metadata
            * names
            * nicknames
            * occupations
            * organizations
            * phoneNumbers
            * photos
            * relations
            * relationshipInterests
            * relationshipStatuses
            * residences
            * skills
            * taglines
            * urls
          in: query
          name: personFields
          type: string
        - description: |-
            **Required.** Comma-separated list of person fields to be included in the
            response. Each path should start with `person.`: for example,
            `person.names` or `person.photos`.
          in: query
          name: requestMask.includeField
          type: string
        - collectionFormat: multi
          description: |-
            The resource names of the people to provide information about.

            - To get information about the authenticated user, specify `people/me`.
            - To get information about a google account, specify
              `people/`<var>account_id</var>.
            - To get information about a contact, specify the resource name that
              identifies the contact as returned by
            [`people.connections.list`](/people/api/rest/v1/people.connections/list).

            You can include up to 50 resource names in one request.
          in: query
          items:
            type: string
          name: resourceNames
          type: array
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/GetPeopleResponse'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/contacts'
        - Oauth2:
            - 'https://www.googleapis.com/auth/contacts.readonly'
        - Oauth2:
            - 'https://www.googleapis.com/auth/plus.login'
        - Oauth2:
            - 'https://www.googleapis.com/auth/user.addresses.read'
        - Oauth2:
            - 'https://www.googleapis.com/auth/user.birthday.read'
        - Oauth2:
            - 'https://www.googleapis.com/auth/user.emails.read'
        - Oauth2:
            - 'https://www.googleapis.com/auth/user.phonenumbers.read'
        - Oauth2:
            - 'https://www.googleapis.com/auth/userinfo.email'
        - Oauth2:
            - 'https://www.googleapis.com/auth/userinfo.profile'
      tags:
        - people
    parameters:
      - $ref: '#/parameters/access_token'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/pp'
      - $ref: '#/parameters/bearer_token'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/upload_protocol'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/uploadType'
      - $ref: '#/parameters/callback'
      - $ref: '#/parameters/$.xgafv'
      - $ref: '#/parameters/alt'
  '/v1/people:createContact':
    parameters:
      - $ref: '#/parameters/$.xgafv'
      - $ref: '#/parameters/access_token'
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/bearer_token'
      - $ref: '#/parameters/callback'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/pp'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/uploadType'
      - $ref: '#/parameters/upload_protocol'
    post:
      description: Create a new contact and return the person resource for that contact.
      operationId: people.people.createContact
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/Person'
        - description: The resource name of the owning person resource.
          in: query
          name: parent
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Person'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/contacts'
      tags:
        - people
  '/v1/{resourceName}':
    delete:
      description: |-
        Delete an existing contact group owned by the authenticated user by
        specifying a contact group resource name.
      operationId: people.contactGroups.delete
      parameters:
        - description: Set to true to also delete the contacts in the specified group.
          in: query
          name: deleteContacts
          type: boolean
        - description: The resource name of the contact group to delete.
          in: path
          name: resourceName
          required: true
          type: string
          x-reservedExpansion: true
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Empty'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/contacts'
      tags:
        - contactGroups
    get:
      description: |-
        Get a specific contact group owned by the authenticated user by specifying
        a contact group resource name.
      operationId: people.contactGroups.get
      parameters:
        - description: Specifies the maximum number of members to return.
          in: query
          name: maxMembers
          type: integer
        - description: |-
            **Required.** Comma-separated list of person fields to be included in the
            response. Each path should start with `person.`: for example,
            `person.names` or `person.photos`.
          in: query
          name: requestMask.includeField
          type: string
        - description: The resource name of the contact group to get.
          in: path
          name: resourceName
          required: true
          type: string
          x-reservedExpansion: true
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/ContactGroup'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/contacts'
        - Oauth2:
            - 'https://www.googleapis.com/auth/contacts.readonly'
        - Oauth2:
            - 'https://www.googleapis.com/auth/plus.login'
        - Oauth2:
            - 'https://www.googleapis.com/auth/user.addresses.read'
        - Oauth2:
            - 'https://www.googleapis.com/auth/user.birthday.read'
        - Oauth2:
            - 'https://www.googleapis.com/auth/user.emails.read'
        - Oauth2:
            - 'https://www.googleapis.com/auth/user.phonenumbers.read'
        - Oauth2:
            - 'https://www.googleapis.com/auth/userinfo.email'
        - Oauth2:
            - 'https://www.googleapis.com/auth/userinfo.profile'
      tags:
        - contactGroups
    parameters:
      - $ref: '#/parameters/access_token'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/pp'
      - $ref: '#/parameters/bearer_token'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/upload_protocol'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/uploadType'
      - $ref: '#/parameters/callback'
      - $ref: '#/parameters/$.xgafv'
      - $ref: '#/parameters/alt'
    put:
      description: |-
        Update the name of an existing contact group owned by the authenticated
        user.
      operationId: people.contactGroups.update
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/UpdateContactGroupRequest'
        - description: |-
            The resource name for the contact group, assigned by the server. An ASCII
            string, in the form of `contactGroups/`<var>contact_group_id</var>.
          in: path
          name: resourceName
          required: true
          type: string
          x-reservedExpansion: true
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/ContactGroup'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/contacts'
      tags:
        - contactGroups
  '/v1/{resourceName}/connections':
    get:
      description: |-
        Provides a list of the authenticated user's contacts merged with any
        connected profiles.
        <br>
        The request throws a 400 error if 'personFields' is not specified.
      operationId: people.people.connections.list
      parameters:
        - description: |-
            The number of connections to include in the response. Valid values are
            between 1 and 2000, inclusive. Defaults to 100.
          in: query
          name: pageSize
          type: integer
        - description: The token of the page to be returned.
          in: query
          name: pageToken
          type: string
        - description: |-
            **Required.** A field mask to restrict which fields on each person are
            returned. Valid values are:

            * addresses
            * ageRanges
            * biographies
            * birthdays
            * braggingRights
            * coverPhotos
            * emailAddresses
            * events
            * genders
            * imClients
            * interests
            * locales
            * memberships
            * metadata
            * names
            * nicknames
            * occupations
            * organizations
            * phoneNumbers
            * photos
            * relations
            * relationshipInterests
            * relationshipStatuses
            * residences
            * skills
            * taglines
            * urls
          in: query
          name: personFields
          type: string
        - description: |-
            **Required.** Comma-separated list of person fields to be included in the
            response. Each path should start with `person.`: for example,
            `person.names` or `person.photos`.
          in: query
          name: requestMask.includeField
          type: string
        - description: |-
            Whether the response should include a sync token, which can be used to get
            all changes since the last request.
          in: query
          name: requestSyncToken
          type: boolean
        - description: The resource name to return connections for. Only `people/me` is valid.
          in: path
          name: resourceName
          required: true
          type: string
          x-reservedExpansion: true
        - description: |-
            The order in which the connections should be sorted. Defaults to
            `LAST_MODIFIED_ASCENDING`.
          enum:
            - LAST_MODIFIED_ASCENDING
            - FIRST_NAME_ASCENDING
            - LAST_NAME_ASCENDING
          in: query
          name: sortOrder
          type: string
        - description: |-
            A sync token, returned by a previous call to `people.connections.list`.
            Only resources changed since the sync token was created will be returned.
          in: query
          name: syncToken
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/ListConnectionsResponse'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/contacts'
        - Oauth2:
            - 'https://www.googleapis.com/auth/contacts.readonly'
      tags:
        - people
    parameters:
      - $ref: '#/parameters/access_token'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/pp'
      - $ref: '#/parameters/bearer_token'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/upload_protocol'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/uploadType'
      - $ref: '#/parameters/callback'
      - $ref: '#/parameters/$.xgafv'
      - $ref: '#/parameters/alt'
  '/v1/{resourceName}/members:modify':
    parameters:
      - $ref: '#/parameters/$.xgafv'
      - $ref: '#/parameters/access_token'
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/bearer_token'
      - $ref: '#/parameters/callback'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/pp'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/uploadType'
      - $ref: '#/parameters/upload_protocol'
    post:
      description: Modify the members of a contact group owned by the authenticated user.
      operationId: people.contactGroups.members.modify
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/ModifyContactGroupMembersRequest'
        - description: The resource name of the contact group to modify.
          in: path
          name: resourceName
          required: true
          type: string
          x-reservedExpansion: true
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/ModifyContactGroupMembersResponse'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/contacts'
      tags:
        - contactGroups
  '/v1/{resourceName}:deleteContact':
    delete:
      description: Delete a contact person. Any non-contact data will not be deleted.
      operationId: people.people.deleteContact
      parameters:
        - description: The resource name of the contact to delete.
          in: path
          name: resourceName
          required: true
          type: string
          x-reservedExpansion: true
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Empty'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/contacts'
      tags:
        - people
    parameters:
      - $ref: '#/parameters/$.xgafv'
      - $ref: '#/parameters/access_token'
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/bearer_token'
      - $ref: '#/parameters/callback'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/pp'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/uploadType'
      - $ref: '#/parameters/upload_protocol'
  '/v1/{resourceName}:updateContact':
    parameters:
      - $ref: '#/parameters/$.xgafv'
      - $ref: '#/parameters/access_token'
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/bearer_token'
      - $ref: '#/parameters/callback'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/pp'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/uploadType'
      - $ref: '#/parameters/upload_protocol'
    patch:
      description: |-
        Update contact data for an existing contact person. Any non-contact data
        will not be modified.

        The request throws a 400 error if `updatePersonFields` is not specified.
        <br>
        The request throws a 400 error if `person.metadata.sources` is not
        specified for the contact to be updated.
        <br>
        The request throws a 412 error if `person.metadata.sources.etag` is
        different than the contact's etag, which indicates the contact has changed
        since its data was read. Clients should get the latest person and re-apply
        their updates to the latest person.
      operationId: people.people.updateContact
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/Person'
        - description: |-
            The resource name for the person, assigned by the server. An ASCII string
            with a max length of 27 characters, in the form of
            `people/`<var>person_id</var>.
          in: path
          name: resourceName
          required: true
          type: string
          x-reservedExpansion: true
        - description: |-
            **Required.** A field mask to restrict which fields on the person are
            updated. Valid values are:

            * addresses
            * biographies
            * birthdays
            * braggingRights
            * emailAddresses
            * events
            * genders
            * imClients
            * interests
            * locales
            * names
            * nicknames
            * occupations
            * organizations
            * phoneNumbers
            * relations
            * residences
            * skills
            * urls
          in: query
          name: updatePersonFields
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Person'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/contacts'
      tags:
        - people
definitions:
  Address:
    description: |-
      A person's physical address. May be a P.O. box or street address. All fields
      are optional.
    properties:
      city:
        description: The city of the address.
        type: string
      country:
        description: The country of the address.
        type: string
      countryCode:
        description: |-
          The [ISO 3166-1 alpha-2](http://www.iso.org/iso/country_codes.htm) country
          code of the address.
        type: string
      extendedAddress:
        description: 'The extended address of the address; for example, the apartment number.'
        type: string
      formattedType:
        description: |-
          The read-only type of the address translated and formatted in the viewer's
          account locale or the `Accept-Language` HTTP header locale.
        type: string
      formattedValue:
        description: |-
          The unstructured value of the address. If this is not set by the user it
          will be automatically constructed from structured values.
        type: string
      metadata:
        $ref: '#/definitions/FieldMetadata'
        description: Metadata about the address.
      poBox:
        description: The P.O. box of the address.
        type: string
      postalCode:
        description: The postal code of the address.
        type: string
      region:
        description: 'The region of the address; for example, the state or province.'
        type: string
      streetAddress:
        description: The street address.
        type: string
      type:
        description: |-
          The type of the address. The type can be custom or predefined.
          Possible values include, but are not limited to, the following:

          * `home`
          * `work`
          * `other`
        type: string
    type: object
  AgeRangeType:
    description: A person's age range.
    properties:
      ageRange:
        description: The age range.
        enum:
          - AGE_RANGE_UNSPECIFIED
          - LESS_THAN_EIGHTEEN
          - EIGHTEEN_TO_TWENTY
          - TWENTY_ONE_OR_OLDER
        type: string
      metadata:
        $ref: '#/definitions/FieldMetadata'
        description: Metadata about the age range.
    type: object
  BatchGetContactGroupsResponse:
    description: The response to a batch get contact groups request.
    properties:
      responses:
        description: The list of responses for each requested contact group resource.
        items:
          $ref: '#/definitions/ContactGroupResponse'
        type: array
    type: object
  Biography:
    description: A person's short biography.
    properties:
      contentType:
        description: The content type of the biography.
        enum:
          - CONTENT_TYPE_UNSPECIFIED
          - TEXT_PLAIN
          - TEXT_HTML
        type: string
      metadata:
        $ref: '#/definitions/FieldMetadata'
        description: Metadata about the biography.
      value:
        description: The short biography.
        type: string
    type: object
  Birthday:
    description: |-
      A person's birthday. At least one of the `date` and `text` fields are
      specified. The `date` and `text` fields typically represent the same
      date, but are not guaranteed to.
    properties:
      date:
        $ref: '#/definitions/Date'
        description: The date of the birthday.
      metadata:
        $ref: '#/definitions/FieldMetadata'
        description: Metadata about the birthday.
      text:
        description: A free-form string representing the user's birthday.
        type: string
    type: object
  BraggingRights:
    description: A person's bragging rights.
    properties:
      metadata:
        $ref: '#/definitions/FieldMetadata'
        description: Metadata about the bragging rights.
      value:
        description: 'The bragging rights; for example, `climbed mount everest`.'
        type: string
    type: object
  ContactGroup:
    description: A contact group.
    properties:
      etag:
        description: |-
          The [HTTP entity tag](https://en.wikipedia.org/wiki/HTTP_ETag) of the
          resource. Used for web cache validation.
        type: string
      formattedName:
        description: |-
          The read-only name translated and formatted in the viewer's account locale
          or the `Accept-Language` HTTP header locale for system groups names.
          Group names set by the owner are the same as name.
        type: string
      groupType:
        description: The read-only contact group type.
        enum:
          - GROUP_TYPE_UNSPECIFIED
          - USER_CONTACT_GROUP
          - SYSTEM_CONTACT_GROUP
        type: string
      memberCount:
        description: |-
          The total number of contacts in the group irrespective of max members in
          specified in the request.
        format: int32
        type: integer
      memberResourceNames:
        description: |-
          The list of contact person resource names that are members of the contact
          group. The field is not populated for LIST requests and can only be updated
          through the
          [ModifyContactGroupMembers](/people/api/rest/v1/contactgroups/members/modify).
        items:
          type: string
        type: array
      metadata:
        $ref: '#/definitions/ContactGroupMetadata'
        description: Metadata about the contact group.
      name:
        description: |-
          The contact group name set by the group owner or a system provided name
          for system groups.
        type: string
      resourceName:
        description: |-
          The resource name for the contact group, assigned by the server. An ASCII
          string, in the form of `contactGroups/`<var>contact_group_id</var>.
        type: string
    type: object
  ContactGroupMembership:
    description: A Google contact group membership.
    properties:
      contactGroupId:
        description: |-
          The contact group ID for the contact group membership. The contact group
          ID can be custom or predefined. Possible values include, but are not
          limited to, the following:

          *  `myContacts`
          *  `starred`
          *  A numerical ID for user-created groups.
        type: string
    type: object
  ContactGroupMetadata:
    description: The read-only metadata about a contact group.
    properties:
      deleted:
        description: |-
          True if the contact group resource has been deleted. Populated only for
          [`ListContactGroups`](/people/api/rest/v1/contactgroups/list) requests
          that include a sync token.
        type: boolean
      updateTime:
        description: The time the group was last updated.
        format: google-datetime
        type: string
    type: object
  ContactGroupResponse:
    description: The response for a specific contact group.
    properties:
      contactGroup:
        $ref: '#/definitions/ContactGroup'
        description: The contact group.
      requestedResourceName:
        description: The original requested resource name.
        type: string
      status:
        $ref: '#/definitions/Status'
        description: The status of the response.
    type: object
  CoverPhoto:
    description: |-
      A person's read-only cover photo. A large image shown on the person's
      profile page that represents who they are or what they care about.
    properties:
      default:
        description: |-
          True if the cover photo is the default cover photo;
          false if the cover photo is a user-provided cover photo.
        type: boolean
      metadata:
        $ref: '#/definitions/FieldMetadata'
        description: Metadata about the cover photo.
      url:
        description: The URL of the cover photo.
        type: string
    type: object
  CreateContactGroupRequest:
    description: A request to create a new contact group.
    properties:
      contactGroup:
        $ref: '#/definitions/ContactGroup'
        description: The contact group to create.
    type: object
  Date:
    description: |-
      Represents a whole calendar date, for example a date of birth. The time
      of day and time zone are either specified elsewhere or are not
      significant. The date is relative to the
      [Proleptic Gregorian Calendar](https://en.wikipedia.org/wiki/Proleptic_Gregorian_calendar).
      The day may be 0 to represent a year and month where the day is not
      significant. The year may be 0 to represent a month and day independent
      of year; for example, anniversary date.
    properties:
      day:
        description: |-
          Day of month. Must be from 1 to 31 and valid for the year and month, or 0
          if specifying a year/month where the day is not significant.
        format: int32
        type: integer
      month:
        description: Month of year. Must be from 1 to 12.
        format: int32
        type: integer
      year:
        description: |-
          Year of date. Must be from 1 to 9999, or 0 if specifying a date without
          a year.
        format: int32
        type: integer
    type: object
  DomainMembership:
    description: A Google Apps Domain membership.
    properties:
      inViewerDomain:
        description: True if the person is in the viewer's Google Apps domain.
        type: boolean
    type: object
  EmailAddress:
    description: A person's email address.
    properties:
      displayName:
        description: The display name of the email.
        type: string
      formattedType:
        description: |-
          The read-only type of the email address translated and formatted in the
          viewer's account locale or the `Accept-Language` HTTP header locale.
        type: string
      metadata:
        $ref: '#/definitions/FieldMetadata'
        description: Metadata about the email address.
      type:
        description: |-
          The type of the email address. The type can be custom or predefined.
          Possible values include, but are not limited to, the following:

          * `home`
          * `work`
          * `other`
        type: string
      value:
        description: The email address.
        type: string
    type: object
  Empty:
    description: |-
      A generic empty message that you can re-use to avoid defining duplicated
      empty messages in your APIs. A typical example is to use it as the request
      or the response type of an API method. For instance:

          service Foo {
            rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);
          }

      The JSON representation for `Empty` is empty JSON object `{}`.
    properties: {}
    type: object
  Event:
    description: An event related to the person.
    properties:
      date:
        $ref: '#/definitions/Date'
        description: The date of the event.
      formattedType:
        description: |-
          The read-only type of the event translated and formatted in the
          viewer's account locale or the `Accept-Language` HTTP header locale.
        type: string
      metadata:
        $ref: '#/definitions/FieldMetadata'
        description: Metadata about the event.
      type:
        description: |-
          The type of the event. The type can be custom or predefined.
          Possible values include, but are not limited to, the following:

          * `anniversary`
          * `other`
        type: string
    type: object
  FieldMetadata:
    description: Metadata about a field.
    properties:
      primary:
        description: |-
          True if the field is the primary field; false if the field is a secondary
          field.
        type: boolean
      source:
        $ref: '#/definitions/Source'
        description: The source of the field.
      verified:
        description: |-
          True if the field is verified; false if the field is unverified. A
          verified field is typically a name, email address, phone number, or
          website that has been confirmed to be owned by the person.
        type: boolean
    type: object
  Gender:
    description: A person's gender.
    properties:
      formattedValue:
        description: |-
          The read-only value of the gender translated and formatted in the viewer's
          account locale or the `Accept-Language` HTTP header locale.
        type: string
      metadata:
        $ref: '#/definitions/FieldMetadata'
        description: Metadata about the gender.
      value:
        description: |-
          The gender for the person. The gender can be custom or predefined.
          Possible values include, but are not limited to, the
          following:

          * `male`
          * `female`
          * `other`
          * `unknown`
        type: string
    type: object
  GetPeopleResponse:
    properties:
      responses:
        description: The response for each requested resource name.
        items:
          $ref: '#/definitions/PersonResponse'
        type: array
    type: object
  ImClient:
    description: A person's instant messaging client.
    properties:
      formattedProtocol:
        description: |-
          The read-only protocol of the IM client formatted in the viewer's account
          locale or the `Accept-Language` HTTP header locale.
        type: string
      formattedType:
        description: |-
          The read-only type of the IM client translated and formatted in the
          viewer's account locale or the `Accept-Language` HTTP header locale.
        type: string
      metadata:
        $ref: '#/definitions/FieldMetadata'
        description: Metadata about the IM client.
      protocol:
        description: |-
          The protocol of the IM client. The protocol can be custom or predefined.
          Possible values include, but are not limited to, the following:

          * `aim`
          * `msn`
          * `yahoo`
          * `skype`
          * `qq`
          * `googleTalk`
          * `icq`
          * `jabber`
          * `netMeeting`
        type: string
      type:
        description: |-
          The type of the IM client. The type can be custom or predefined.
          Possible values include, but are not limited to, the following:

          * `home`
          * `work`
          * `other`
        type: string
      username:
        description: The user name used in the IM client.
        type: string
    type: object
  Interest:
    description: One of the person's interests.
    properties:
      metadata:
        $ref: '#/definitions/FieldMetadata'
        description: Metadata about the interest.
      value:
        description: 'The interest; for example, `stargazing`.'
        type: string
    type: object
  ListConnectionsResponse:
    properties:
      connections:
        description: The list of people that the requestor is connected to.
        items:
          $ref: '#/definitions/Person'
        type: array
      nextPageToken:
        description: The token that can be used to retrieve the next page of results.
        type: string
      nextSyncToken:
        description: The token that can be used to retrieve changes since the last request.
        type: string
      totalItems:
        description: The total number of items in the list without pagination.
        format: int32
        type: integer
      totalPeople:
        description: |-
          **DEPRECATED** (Please use totalItems)
          The total number of people in the list without pagination.
        format: int32
        type: integer
    type: object
  ListContactGroupsResponse:
    description: The response to a list contact groups request.
    properties:
      contactGroups:
        description: |-
          The list of contact groups. Members of the contact groups are not
          populated.
        items:
          $ref: '#/definitions/ContactGroup'
        type: array
      nextPageToken:
        description: The token that can be used to retrieve the next page of results.
        type: string
      nextSyncToken:
        description: The token that can be used to retrieve changes since the last request.
        type: string
      totalItems:
        description: The total number of items in the list without pagination.
        format: int32
        type: integer
    type: object
  Locale:
    description: A person's locale preference.
    properties:
      metadata:
        $ref: '#/definitions/FieldMetadata'
        description: Metadata about the locale.
      value:
        description: |-
          The well-formed [IETF BCP 47](https://tools.ietf.org/html/bcp47)
          language tag representing the locale.
        type: string
    type: object
  Membership:
    description: A person's read-only membership in a group.
    properties:
      contactGroupMembership:
        $ref: '#/definitions/ContactGroupMembership'
        description: The contact group membership.
      domainMembership:
        $ref: '#/definitions/DomainMembership'
        description: The domain membership.
      metadata:
        $ref: '#/definitions/FieldMetadata'
        description: Metadata about the membership.
    type: object
  ModifyContactGroupMembersRequest:
    description: A request to modify an existing contact group's members.
    properties:
      resourceNamesToAdd:
        description: |-
          The resource names of the contact people to add in the form of in the form
          `people/`<var>person_id</var>.
        items:
          type: string
        type: array
      resourceNamesToRemove:
        description: |-
          The resource names of the contact people to remove in the form of in the
          form of `people/`<var>person_id</var>.
        items:
          type: string
        type: array
    type: object
  ModifyContactGroupMembersResponse:
    description: The response to a modify contact group members request.
    properties:
      notFoundResourceNames:
        description: The contact people resource names that were not found.
        items:
          type: string
        type: array
    type: object
  Name:
    description: 'A person''s name. If the name is a mononym, the family name is empty.'
    properties:
      displayName:
        description: |-
          The read-only display name formatted according to the locale specified by
          the viewer's account or the `Accept-Language` HTTP header.
        type: string
      displayNameLastFirst:
        description: |-
          The read-only display name with the last name first formatted according to
          the locale specified by the viewer's account or the
          `Accept-Language` HTTP header.
        type: string
      familyName:
        description: The family name.
        type: string
      givenName:
        description: The given name.
        type: string
      honorificPrefix:
        description: 'The honorific prefixes, such as `Mrs.` or `Dr.`'
        type: string
      honorificSuffix:
        description: 'The honorific suffixes, such as `Jr.`'
        type: string
      metadata:
        $ref: '#/definitions/FieldMetadata'
        description: Metadata about the name.
      middleName:
        description: The middle name(s).
        type: string
      phoneticFamilyName:
        description: The family name spelled as it sounds.
        type: string
      phoneticFullName:
        description: The full name spelled as it sounds.
        type: string
      phoneticGivenName:
        description: The given name spelled as it sounds.
        type: string
      phoneticHonorificPrefix:
        description: The honorific prefixes spelled as they sound.
        type: string
      phoneticHonorificSuffix:
        description: The honorific suffixes spelled as they sound.
        type: string
      phoneticMiddleName:
        description: The middle name(s) spelled as they sound.
        type: string
    type: object
  Nickname:
    description: A person's nickname.
    properties:
      metadata:
        $ref: '#/definitions/FieldMetadata'
        description: Metadata about the nickname.
      type:
        description: The type of the nickname.
        enum:
          - DEFAULT
          - MAIDEN_NAME
          - INITIALS
          - GPLUS
          - OTHER_NAME
        type: string
      value:
        description: The nickname.
        type: string
    type: object
  Occupation:
    description: A person's occupation.
    properties:
      metadata:
        $ref: '#/definitions/FieldMetadata'
        description: Metadata about the occupation.
      value:
        description: 'The occupation; for example, `carpenter`.'
        type: string
    type: object
  Organization:
    description: |-
      A person's past or current organization. Overlapping date ranges are
      permitted.
    properties:
      current:
        description: |-
          True if the organization is the person's current organization;
          false if the organization is a past organization.
        type: boolean
      department:
        description: The person's department at the organization.
        type: string
      domain:
        description: 'The domain name associated with the organization; for example, `google.com`.'
        type: string
      endDate:
        $ref: '#/definitions/Date'
        description: The end date when the person left the organization.
      formattedType:
        description: |-
          The read-only type of the organization translated and formatted in the
          viewer's account locale or the `Accept-Language` HTTP header locale.
        type: string
      jobDescription:
        description: The person's job description at the organization.
        type: string
      location:
        description: The location of the organization office the person works at.
        type: string
      metadata:
        $ref: '#/definitions/FieldMetadata'
        description: Metadata about the organization.
      name:
        description: The name of the organization.
        type: string
      phoneticName:
        description: The phonetic name of the organization.
        type: string
      startDate:
        $ref: '#/definitions/Date'
        description: The start date when the person joined the organization.
      symbol:
        description: |-
          The symbol associated with the organization; for example, a stock ticker
          symbol, abbreviation, or acronym.
        type: string
      title:
        description: The person's job title at the organization.
        type: string
      type:
        description: |-
          The type of the organization. The type can be custom or predefined.
          Possible values include, but are not limited to, the following:

          * `work`
          * `school`
        type: string
    type: object
  Person:
    description: |-
      Information about a person merged from various data sources such as the
      authenticated user's contacts and profile data.

      Most fields can have multiple items. The items in a field have no guaranteed
      order, but each non-empty field is guaranteed to have exactly one field with
      `metadata.primary` set to true.
    properties:
      addresses:
        description: The person's street addresses.
        items:
          $ref: '#/definitions/Address'
        type: array
      ageRange:
        description: |-
          **DEPRECATED** (Please use `person.ageRanges` instead)**

          The person's read-only age range.
        enum:
          - AGE_RANGE_UNSPECIFIED
          - LESS_THAN_EIGHTEEN
          - EIGHTEEN_TO_TWENTY
          - TWENTY_ONE_OR_OLDER
        type: string
      ageRanges:
        description: The person's read-only age ranges.
        items:
          $ref: '#/definitions/AgeRangeType'
        type: array
      biographies:
        description: The person's biographies.
        items:
          $ref: '#/definitions/Biography'
        type: array
      birthdays:
        description: The person's birthdays.
        items:
          $ref: '#/definitions/Birthday'
        type: array
      braggingRights:
        description: The person's bragging rights.
        items:
          $ref: '#/definitions/BraggingRights'
        type: array
      coverPhotos:
        description: The person's read-only cover photos.
        items:
          $ref: '#/definitions/CoverPhoto'
        type: array
      emailAddresses:
        description: The person's email addresses.
        items:
          $ref: '#/definitions/EmailAddress'
        type: array
      etag:
        description: |-
          The [HTTP entity tag](https://en.wikipedia.org/wiki/HTTP_ETag) of the
          resource. Used for web cache validation.
        type: string
      events:
        description: The person's events.
        items:
          $ref: '#/definitions/Event'
        type: array
      genders:
        description: The person's genders.
        items:
          $ref: '#/definitions/Gender'
        type: array
      imClients:
        description: The person's instant messaging clients.
        items:
          $ref: '#/definitions/ImClient'
        type: array
      interests:
        description: The person's interests.
        items:
          $ref: '#/definitions/Interest'
        type: array
      locales:
        description: The person's locale preferences.
        items:
          $ref: '#/definitions/Locale'
        type: array
      memberships:
        description: The person's read-only group memberships.
        items:
          $ref: '#/definitions/Membership'
        type: array
      metadata:
        $ref: '#/definitions/PersonMetadata'
        description: Read-only metadata about the person.
      names:
        description: The person's names.
        items:
          $ref: '#/definitions/Name'
        type: array
      nicknames:
        description: The person's nicknames.
        items:
          $ref: '#/definitions/Nickname'
        type: array
      occupations:
        description: The person's occupations.
        items:
          $ref: '#/definitions/Occupation'
        type: array
      organizations:
        description: The person's past or current organizations.
        items:
          $ref: '#/definitions/Organization'
        type: array
      phoneNumbers:
        description: The person's phone numbers.
        items:
          $ref: '#/definitions/PhoneNumber'
        type: array
      photos:
        description: The person's read-only photos.
        items:
          $ref: '#/definitions/Photo'
        type: array
      relations:
        description: The person's relations.
        items:
          $ref: '#/definitions/Relation'
        type: array
      relationshipInterests:
        description: The person's read-only relationship interests.
        items:
          $ref: '#/definitions/RelationshipInterest'
        type: array
      relationshipStatuses:
        description: The person's read-only relationship statuses.
        items:
          $ref: '#/definitions/RelationshipStatus'
        type: array
      residences:
        description: The person's residences.
        items:
          $ref: '#/definitions/Residence'
        type: array
      resourceName:
        description: |-
          The resource name for the person, assigned by the server. An ASCII string
          with a max length of 27 characters, in the form of
          `people/`<var>person_id</var>.
        type: string
      skills:
        description: The person's skills.
        items:
          $ref: '#/definitions/Skill'
        type: array
      taglines:
        description: The person's read-only taglines.
        items:
          $ref: '#/definitions/Tagline'
        type: array
      urls:
        description: The person's associated URLs.
        items:
          $ref: '#/definitions/Url'
        type: array
      userDefined:
        description: The person's user defined data.
        items:
          $ref: '#/definitions/UserDefined'
        type: array
    type: object
  PersonMetadata:
    description: The read-only metadata about a person.
    properties:
      deleted:
        description: |-
          True if the person resource has been deleted. Populated only for
          [`connections.list`](/people/api/rest/v1/people.connections/list) requests
          that include a sync token.
        type: boolean
      linkedPeopleResourceNames:
        description: Resource names of people linked to this resource.
        items:
          type: string
        type: array
      objectType:
        description: |-
          **DEPRECATED** (Please use
          `person.metadata.sources.profileMetadata.objectType` instead)

          The type of the person object.
        enum:
          - OBJECT_TYPE_UNSPECIFIED
          - PERSON
          - PAGE
        type: string
      previousResourceNames:
        description: |-
          Any former resource names this person has had. Populated only for
          [`connections.list`](/people/api/rest/v1/people.connections/list) requests
          that include a sync token.

          The resource name may change when adding or removing fields that link a
          contact and profile such as a verified email, verified phone number, or
          profile URL.
        items:
          type: string
        type: array
      sources:
        description: The sources of data for the person.
        items:
          $ref: '#/definitions/Source'
        type: array
    type: object
  PersonResponse:
    description: The response for a single person
    properties:
      httpStatusCode:
        description: |-
          **DEPRECATED** (Please use status instead)

          [HTTP 1.1 status code]
          (http://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html).
        format: int32
        type: integer
      person:
        $ref: '#/definitions/Person'
        description: The person.
      requestedResourceName:
        description: |-
          The original requested resource name. May be different than the resource
          name on the returned person.

          The resource name can change when adding or removing fields that link a
          contact and profile such as a verified email, verified phone number, or a
          profile URL.
        type: string
      status:
        $ref: '#/definitions/Status'
        description: The status of the response.
    type: object
  PhoneNumber:
    description: A person's phone number.
    properties:
      canonicalForm:
        description: |-
          The read-only canonicalized [ITU-T E.164](https://law.resource.org/pub/us/cfr/ibr/004/itu-t.E.164.1.2008.pdf)
          form of the phone number.
        type: string
      formattedType:
        description: |-
          The read-only type of the phone number translated and formatted in the
          viewer's account locale or the `Accept-Language` HTTP header locale.
        type: string
      metadata:
        $ref: '#/definitions/FieldMetadata'
        description: Metadata about the phone number.
      type:
        description: |-
          The type of the phone number. The type can be custom or predefined.
          Possible values include, but are not limited to, the following:

          * `home`
          * `work`
          * `mobile`
          * `homeFax`
          * `workFax`
          * `otherFax`
          * `pager`
          * `workMobile`
          * `workPager`
          * `main`
          * `googleVoice`
          * `other`
        type: string
      value:
        description: The phone number.
        type: string
    type: object
  Photo:
    description: |-
      A person's read-only photo. A picture shown next to the person's name to
      help others recognize the person.
    properties:
      default:
        description: |-
          True if the photo is a default photo;
          false if the photo is a user-provided photo.
        type: boolean
      metadata:
        $ref: '#/definitions/FieldMetadata'
        description: Metadata about the photo.
      url:
        description: |-
          The URL of the photo. You can change the desired size by appending a query
          parameter `sz=`<var>size</var> at the end of the url. Example:
          `https://lh3.googleusercontent.com/-T_wVWLlmg7w/AAAAAAAAAAI/AAAAAAAABa8/00gzXvDBYqw/s100/photo.jpg?sz=50`
        type: string
    type: object
  ProfileMetadata:
    description: The read-only metadata about a profile.
    properties:
      objectType:
        description: The profile object type.
        enum:
          - OBJECT_TYPE_UNSPECIFIED
          - PERSON
          - PAGE
        type: string
      userTypes:
        description: The user types.
        items:
          enum:
            - USER_TYPE_UNKNOWN
            - GOOGLE_USER
            - GPLUS_USER
            - GOOGLE_APPS_USER
          type: string
        type: array
    type: object
  Relation:
    description: A person's relation to another person.
    properties:
      formattedType:
        description: |-
          The type of the relation translated and formatted in the viewer's account
          locale or the locale specified in the Accept-Language HTTP header.
        type: string
      metadata:
        $ref: '#/definitions/FieldMetadata'
        description: Metadata about the relation.
      person:
        description: The name of the other person this relation refers to.
        type: string
      type:
        description: |-
          The person's relation to the other person. The type can be custom or predefined.
          Possible values include, but are not limited to, the following values:

          * `spouse`
          * `child`
          * `mother`
          * `father`
          * `parent`
          * `brother`
          * `sister`
          * `friend`
          * `relative`
          * `domesticPartner`
          * `manager`
          * `assistant`
          * `referredBy`
          * `partner`
        type: string
    type: object
  RelationshipInterest:
    description: A person's read-only relationship interest .
    properties:
      formattedValue:
        description: |-
          The value of the relationship interest translated and formatted in the
          viewer's account locale or the locale specified in the Accept-Language
          HTTP header.
        type: string
      metadata:
        $ref: '#/definitions/FieldMetadata'
        description: Metadata about the relationship interest.
      value:
        description: |-
          The kind of relationship the person is looking for. The value can be custom
          or predefined. Possible values include, but are not limited to, the
          following values:

          * `friend`
          * `date`
          * `relationship`
          * `networking`
        type: string
    type: object
  RelationshipStatus:
    description: A person's read-only relationship status.
    properties:
      formattedValue:
        description: |-
          The read-only value of the relationship status translated and formatted in
          the viewer's account locale or the `Accept-Language` HTTP header locale.
        type: string
      metadata:
        $ref: '#/definitions/FieldMetadata'
        description: Metadata about the relationship status.
      value:
        description: |-
          The relationship status. The value can be custom or predefined.
          Possible values include, but are not limited to, the following:

          * `single`
          * `inARelationship`
          * `engaged`
          * `married`
          * `itsComplicated`
          * `openRelationship`
          * `widowed`
          * `inDomesticPartnership`
          * `inCivilUnion`
        type: string
    type: object
  Residence:
    description: A person's past or current residence.
    properties:
      current:
        description: |-
          True if the residence is the person's current residence;
          false if the residence is a past residence.
        type: boolean
      metadata:
        $ref: '#/definitions/FieldMetadata'
        description: Metadata about the residence.
      value:
        description: The address of the residence.
        type: string
    type: object
  Skill:
    description: A skill that the person has.
    properties:
      metadata:
        $ref: '#/definitions/FieldMetadata'
        description: Metadata about the skill.
      value:
        description: 'The skill; for example, `underwater basket weaving`.'
        type: string
    type: object
  Source:
    description: The source of a field.
    properties:
      etag:
        description: |-
          **Only populated in `person.metadata.sources`.**

          The [HTTP entity tag](https://en.wikipedia.org/wiki/HTTP_ETag) of the
          source. Used for web cache validation.
        type: string
      id:
        description: The unique identifier within the source type generated by the server.
        type: string
      profileMetadata:
        $ref: '#/definitions/ProfileMetadata'
        description: |-
          **Only populated in `person.metadata.sources`.**

          Metadata about a source of type PROFILE.
      type:
        description: The source type.
        enum:
          - SOURCE_TYPE_UNSPECIFIED
          - ACCOUNT
          - PROFILE
          - DOMAIN_PROFILE
          - CONTACT
        type: string
      updateTime:
        description: |-
          **Only populated in `person.metadata.sources`.**

          Last update timestamp of this source.
        format: google-datetime
        type: string
    type: object
  Status:
    description: |-
      The `Status` type defines a logical error model that is suitable for different
      programming environments, including REST APIs and RPC APIs. It is used by
      [gRPC](https://github.com/grpc). The error model is designed to be:

      - Simple to use and understand for most users
      - Flexible enough to meet unexpected needs

      # Overview

      The `Status` message contains three pieces of data: error code, error message,
      and error details. The error code should be an enum value of
      google.rpc.Code, but it may accept additional error codes if needed.  The
      error message should be a developer-facing English message that helps
      developers *understand* and *resolve* the error. If a localized user-facing
      error message is needed, put the localized message in the error details or
      localize it in the client. The optional error details may contain arbitrary
      information about the error. There is a predefined set of error detail types
      in the package `google.rpc` that can be used for common error conditions.

      # Language mapping

      The `Status` message is the logical representation of the error model, but it
      is not necessarily the actual wire format. When the `Status` message is
      exposed in different client libraries and different wire protocols, it can be
      mapped differently. For example, it will likely be mapped to some exceptions
      in Java, but more likely mapped to some error codes in C.

      # Other uses

      The error model and the `Status` message can be used in a variety of
      environments, either with or without APIs, to provide a
      consistent developer experience across different environments.

      Example uses of this error model include:

      - Partial errors. If a service needs to return partial errors to the client,
          it may embed the `Status` in the normal response to indicate the partial
          errors.

      - Workflow errors. A typical workflow has multiple steps. Each step may
          have a `Status` message for error reporting.

      - Batch operations. If a client uses batch request and batch response, the
          `Status` message should be used directly inside batch response, one for
          each error sub-response.

      - Asynchronous operations. If an API call embeds asynchronous operation
          results in its response, the status of those operations should be
          represented directly using the `Status` message.

      - Logging. If some API errors are stored in logs, the message `Status` could
          be used directly after any stripping needed for security/privacy reasons.
    properties:
      code:
        description: 'The status code, which should be an enum value of google.rpc.Code.'
        format: int32
        type: integer
      details:
        description: |-
          A list of messages that carry the error details.  There is a common set of
          message types for APIs to use.
        items:
          additionalProperties:
            description: Properties of the object. Contains field @type with type URL.
          type: object
        type: array
      message:
        description: |-
          A developer-facing error message, which should be in English. Any
          user-facing error message should be localized and sent in the
          google.rpc.Status.details field, or localized by the client.
        type: string
    type: object
  Tagline:
    description: A read-only brief one-line description of the person.
    properties:
      metadata:
        $ref: '#/definitions/FieldMetadata'
        description: Metadata about the tagline.
      value:
        description: The tagline.
        type: string
    type: object
  UpdateContactGroupRequest:
    description: A request to update an existing contact group. Only the name can be updated.
    properties:
      contactGroup:
        $ref: '#/definitions/ContactGroup'
        description: The contact group to update.
    type: object
  Url:
    description: A person's associated URLs.
    properties:
      formattedType:
        description: |-
          The read-only type of the URL translated and formatted in the viewer's
          account locale or the `Accept-Language` HTTP header locale.
        type: string
      metadata:
        $ref: '#/definitions/FieldMetadata'
        description: Metadata about the URL.
      type:
        description: |-
          The type of the URL. The type can be custom or predefined.
          Possible values include, but are not limited to, the following:

          * `home`
          * `work`
          * `blog`
          * `profile`
          * `homePage`
          * `ftp`
          * `reservations`
          * `appInstallPage`: website for a Google+ application.
          * `other`
        type: string
      value:
        description: The URL.
        type: string
    type: object
  UserDefined:
    description: Arbitrary user data that is populated by the end users.
    properties:
      key:
        description: The end user specified key of the user defined data.
        type: string
      metadata:
        $ref: '#/definitions/FieldMetadata'
        description: Metadata about the user defined data.
      value:
        description: The end user specified value of the user defined data.
        type: string
    type: object
