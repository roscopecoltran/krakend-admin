{
	"basePath": "/customsearch",
	"definitions.Context.properties.facets.items.items.properties.anchor.type": "string",
	"definitions.Context.properties.facets.items.items.properties.label.type": "string",
	"definitions.Context.properties.facets.items.items.properties.label_with_op.type": "string",
	"definitions.Context.properties.facets.items.items.type": "object",
	"definitions.Context.properties.facets.items.type": "array",
	"definitions.Context.properties.facets.type": "array",
	"definitions.Context.properties.title.type": "string",
	"definitions.Context.type": "object",
	"definitions.Promotion.properties.bodyLines.items.properties.htmlTitle.type": "string",
	"definitions.Promotion.properties.bodyLines.items.properties.link.type": "string",
	"definitions.Promotion.properties.bodyLines.items.properties.title.type": "string",
	"definitions.Promotion.properties.bodyLines.items.properties.url.type": "string",
	"definitions.Promotion.properties.bodyLines.items.type": "object",
	"definitions.Promotion.properties.bodyLines.type": "array",
	"definitions.Promotion.properties.displayLink.type": "string",
	"definitions.Promotion.properties.htmlTitle.type": "string",
	"definitions.Promotion.properties.image.properties.height.format": "int32",
	"definitions.Promotion.properties.image.properties.height.type": "integer",
	"definitions.Promotion.properties.image.properties.source.type": "string",
	"definitions.Promotion.properties.image.properties.width.format": "int32",
	"definitions.Promotion.properties.image.properties.width.type": "integer",
	"definitions.Promotion.properties.image.type": "object",
	"definitions.Promotion.properties.link.type": "string",
	"definitions.Promotion.properties.title.type": "string",
	"definitions.Promotion.type": "object",
	"definitions.Query.properties.count.format": "int32",
	"definitions.Query.properties.count.type": "integer",
	"definitions.Query.properties.cr.type": "string",
	"definitions.Query.properties.cx.type": "string",
	"definitions.Query.properties.dateRestrict.type": "string",
	"definitions.Query.properties.disableCnTwTranslation.type": "string",
	"definitions.Query.properties.exactTerms.type": "string",
	"definitions.Query.properties.excludeTerms.type": "string",
	"definitions.Query.properties.fileType.type": "string",
	"definitions.Query.properties.filter.type": "string",
	"definitions.Query.properties.gl.type": "string",
	"definitions.Query.properties.googleHost.type": "string",
	"definitions.Query.properties.highRange.type": "string",
	"definitions.Query.properties.hl.type": "string",
	"definitions.Query.properties.hq.type": "string",
	"definitions.Query.properties.imgColorType.type": "string",
	"definitions.Query.properties.imgDominantColor.type": "string",
	"definitions.Query.properties.imgSize.type": "string",
	"definitions.Query.properties.imgType.type": "string",
	"definitions.Query.properties.inputEncoding.type": "string",
	"definitions.Query.properties.language.type": "string",
	"definitions.Query.properties.linkSite.type": "string",
	"definitions.Query.properties.lowRange.type": "string",
	"definitions.Query.properties.orTerms.type": "string",
	"definitions.Query.properties.outputEncoding.type": "string",
	"definitions.Query.properties.relatedSite.type": "string",
	"definitions.Query.properties.rights.type": "string",
	"definitions.Query.properties.safe.type": "string",
	"definitions.Query.properties.searchTerms.type": "string",
	"definitions.Query.properties.searchType.type": "string",
	"definitions.Query.properties.siteSearch.type": "string",
	"definitions.Query.properties.siteSearchFilter.type": "string",
	"definitions.Query.properties.sort.type": "string",
	"definitions.Query.properties.startIndex.format": "int32",
	"definitions.Query.properties.startIndex.type": "integer",
	"definitions.Query.properties.startPage.format": "int32",
	"definitions.Query.properties.startPage.type": "integer",
	"definitions.Query.properties.title.type": "string",
	"definitions.Query.properties.totalResults.format": "int64",
	"definitions.Query.properties.totalResults.type": "string",
	"definitions.Query.type": "object",
	"definitions.Result.properties.cacheId.type": "string",
	"definitions.Result.properties.displayLink.type": "string",
	"definitions.Result.properties.fileFormat.type": "string",
	"definitions.Result.properties.formattedUrl.type": "string",
	"definitions.Result.properties.htmlFormattedUrl.type": "string",
	"definitions.Result.properties.htmlSnippet.type": "string",
	"definitions.Result.properties.htmlTitle.type": "string",
	"definitions.Result.properties.image.properties.byteSize.format": "int32",
	"definitions.Result.properties.image.properties.byteSize.type": "integer",
	"definitions.Result.properties.image.properties.contextLink.type": "string",
	"definitions.Result.properties.image.properties.height.format": "int32",
	"definitions.Result.properties.image.properties.height.type": "integer",
	"definitions.Result.properties.image.properties.thumbnailHeight.format": "int32",
	"definitions.Result.properties.image.properties.thumbnailHeight.type": "integer",
	"definitions.Result.properties.image.properties.thumbnailLink.type": "string",
	"definitions.Result.properties.image.properties.thumbnailWidth.format": "int32",
	"definitions.Result.properties.image.properties.thumbnailWidth.type": "integer",
	"definitions.Result.properties.image.properties.width.format": "int32",
	"definitions.Result.properties.image.properties.width.type": "integer",
	"definitions.Result.properties.image.type": "object",
	"definitions.Result.properties.kind.default": "customsearch#result",
	"definitions.Result.properties.kind.type": "string",
	"definitions.Result.properties.labels.items.properties.displayName.type": "string",
	"definitions.Result.properties.labels.items.properties.label_with_op.type": "string",
	"definitions.Result.properties.labels.items.properties.name.type": "string",
	"definitions.Result.properties.labels.items.type": "object",
	"definitions.Result.properties.labels.type": "array",
	"definitions.Result.properties.link.type": "string",
	"definitions.Result.properties.mime.type": "string",
	"definitions.Result.properties.pagemap.additionalProperties.items.type": "object",
	"definitions.Result.properties.pagemap.additionalProperties.type": "array",
	"definitions.Result.properties.pagemap.type": "object",
	"definitions.Result.properties.snippet.type": "string",
	"definitions.Result.properties.title.type": "string",
	"definitions.Result.type": "object",
	"definitions.Search.properties.context.$ref": "#/definitions/Context",
	"definitions.Search.properties.items.items.$ref": "#/definitions/Result",
	"definitions.Search.properties.items.type": "array",
	"definitions.Search.properties.kind.default": "customsearch#search",
	"definitions.Search.properties.kind.type": "string",
	"definitions.Search.properties.promotions.items.$ref": "#/definitions/Promotion",
	"definitions.Search.properties.promotions.type": "array",
	"definitions.Search.properties.queries.additionalProperties.items.$ref": "#/definitions/Query",
	"definitions.Search.properties.queries.additionalProperties.type": "array",
	"definitions.Search.properties.queries.type": "object",
	"definitions.Search.properties.searchInformation.properties.formattedSearchTime.type": "string",
	"definitions.Search.properties.searchInformation.properties.formattedTotalResults.type": "string",
	"definitions.Search.properties.searchInformation.properties.searchTime.format": "double",
	"definitions.Search.properties.searchInformation.properties.searchTime.type": "number",
	"definitions.Search.properties.searchInformation.properties.totalResults.format": "int64",
	"definitions.Search.properties.searchInformation.properties.totalResults.type": "string",
	"definitions.Search.properties.searchInformation.type": "object",
	"definitions.Search.properties.spelling.properties.correctedQuery.type": "string",
	"definitions.Search.properties.spelling.properties.htmlCorrectedQuery.type": "string",
	"definitions.Search.properties.spelling.type": "object",
	"definitions.Search.properties.url.properties.template.default": "https://www.googleapis.com/customsearch/v1?q={searchTerms}\u0026num={count?}\u0026start={startIndex?}\u0026lr={language?}\u0026safe={safe?}\u0026cx={cx?}\u0026sort={sort?}\u0026filter={filter?}\u0026gl={gl?}\u0026cr={cr?}\u0026googlehost={googleHost?}\u0026c2coff={disableCnTwTranslation?}\u0026hq={hq?}\u0026hl={hl?}\u0026siteSearch={siteSearch?}\u0026siteSearchFilter={siteSearchFilter?}\u0026exactTerms={exactTerms?}\u0026excludeTerms={excludeTerms?}\u0026linkSite={linkSite?}\u0026orTerms={orTerms?}\u0026relatedSite={relatedSite?}\u0026dateRestrict={dateRestrict?}\u0026lowRange={lowRange?}\u0026highRange={highRange?}\u0026searchType={searchType}\u0026fileType={fileType?}\u0026rights={rights?}\u0026imgSize={imgSize?}\u0026imgType={imgType?}\u0026imgColorType={imgColorType?}\u0026imgDominantColor={imgDominantColor?}\u0026alt=json",
	"definitions.Search.properties.url.properties.template.type": "string",
	"definitions.Search.properties.url.properties.type.default": "application/json",
	"definitions.Search.properties.url.properties.type.type": "string",
	"definitions.Search.properties.url.type": "object",
	"definitions.Search.type": "object",
	"externalDocs.url": "https://developers.google.com/custom-search/v1/using_rest",
	"host": "www.googleapis.com",
	"info.contact.name": "Google",
	"info.contact.url": "https://google.com",
	"info.description": "Searches over a website or collection of websites",
	"info.title": "CustomSearch",
	"info.version": "v1",
	"info.x-apiClientRegistration.url": "https://console.developers.google.com",
	"info.x-apisguru-categories.length": 1,
	"info.x-apisguru-categories[0]": "search",
	"info.x-logo.url": "https://api.apis.guru/v2/cache/logo/https_www.google.com_images_branding_googlelogo_2x_googlelogo_color_272x92dp.png",
	"info.x-origin.length": 1,
	"info.x-origin[0].converter.url": "https://github.com/lucybot/api-spec-converter",
	"info.x-origin[0].converter.version": "2.6.0",
	"info.x-origin[0].format": "google",
	"info.x-origin[0].url": "https://www.googleapis.com/discovery/v1/apis/customsearch/v1/rest",
	"info.x-origin[0].version": "v1",
	"info.x-preferred": true,
	"info.x-providerName": "googleapis.com",
	"info.x-serviceName": "customsearch",
	"parameters.alt.default": "json",
	"parameters.alt.description": "Data format for the response.",
	"parameters.alt.enum.length": 2,
	"parameters.alt.enum[0]": "atom",
	"parameters.alt.enum[1]": "json",
	"parameters.alt.in": "query",
	"parameters.alt.name": "alt",
	"parameters.alt.type": "string",
	"parameters.fields.description": "Selector specifying which fields to include in a partial response.",
	"parameters.fields.in": "query",
	"parameters.fields.name": "fields",
	"parameters.fields.type": "string",
	"parameters.key.description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
	"parameters.key.in": "query",
	"parameters.key.name": "key",
	"parameters.key.type": "string",
	"parameters.oauth_token.description": "OAuth 2.0 token for the current user.",
	"parameters.oauth_token.in": "query",
	"parameters.oauth_token.name": "oauth_token",
	"parameters.oauth_token.type": "string",
	"parameters.prettyPrint.default": true,
	"parameters.prettyPrint.description": "Returns response with indentations and line breaks.",
	"parameters.prettyPrint.in": "query",
	"parameters.prettyPrint.name": "prettyPrint",
	"parameters.prettyPrint.type": "boolean",
	"parameters.quotaUser.description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.",
	"parameters.quotaUser.in": "query",
	"parameters.quotaUser.name": "quotaUser",
	"parameters.quotaUser.type": "string",
	"parameters.userIp.description": "IP address of the site where the request originates. Use this if you want to enforce per-user limits.",
	"parameters.userIp.in": "query",
	"parameters.userIp.name": "userIp",
	"parameters.userIp.type": "string",
	"paths./v1.get.description": "Returns metadata about the search performed, metadata about the custom search engine used for the search, and the search results.",
	"paths./v1.get.operationId": "search.cse.list",
	"paths./v1.get.parameters.length": 31,
	"paths./v1.get.parameters[0].description": "Turns off the translation between zh-CN and zh-TW.",
	"paths./v1.get.parameters[0].in": "query",
	"paths./v1.get.parameters[0].name": "c2coff",
	"paths./v1.get.parameters[0].type": "string",
	"paths./v1.get.parameters[10].description": "Creates a range in form as_nlo value..as_nhi value and attempts to append it to query",
	"paths./v1.get.parameters[10].in": "query",
	"paths./v1.get.parameters[10].name": "highRange",
	"paths./v1.get.parameters[10].type": "string",
	"paths./v1.get.parameters[11].description": "Sets the user interface language.",
	"paths./v1.get.parameters[11].in": "query",
	"paths./v1.get.parameters[11].name": "hl",
	"paths./v1.get.parameters[11].type": "string",
	"paths./v1.get.parameters[12].description": "Appends the extra query terms to the query.",
	"paths./v1.get.parameters[12].in": "query",
	"paths./v1.get.parameters[12].name": "hq",
	"paths./v1.get.parameters[12].type": "string",
	"paths./v1.get.parameters[13].description": "Returns black and white, grayscale, or color images: mono, gray, and color.",
	"paths./v1.get.parameters[13].enum.length": 3,
	"paths./v1.get.parameters[13].enum[0]": "color",
	"paths./v1.get.parameters[13].enum[1]": "gray",
	"paths./v1.get.parameters[13].enum[2]": "mono",
	"paths./v1.get.parameters[13].in": "query",
	"paths./v1.get.parameters[13].name": "imgColorType",
	"paths./v1.get.parameters[13].type": "string",
	"paths./v1.get.parameters[14].description": "Returns images of a specific dominant color: yellow, green, teal, blue, purple, pink, white, gray, black and brown.",
	"paths./v1.get.parameters[14].enum.length": 10,
	"paths./v1.get.parameters[14].enum[0]": "black",
	"paths./v1.get.parameters[14].enum[1]": "blue",
	"paths./v1.get.parameters[14].enum[2]": "brown",
	"paths./v1.get.parameters[14].enum[3]": "gray",
	"paths./v1.get.parameters[14].enum[4]": "green",
	"paths./v1.get.parameters[14].enum[5]": "pink",
	"paths./v1.get.parameters[14].enum[6]": "purple",
	"paths./v1.get.parameters[14].enum[7]": "teal",
	"paths./v1.get.parameters[14].enum[8]": "white",
	"paths./v1.get.parameters[14].enum[9]": "yellow",
	"paths./v1.get.parameters[14].in": "query",
	"paths./v1.get.parameters[14].name": "imgDominantColor",
	"paths./v1.get.parameters[14].type": "string",
	"paths./v1.get.parameters[15].description": "Returns images of a specified size, where size can be one of: icon, small, medium, large, xlarge, xxlarge, and huge.",
	"paths./v1.get.parameters[15].enum.length": 7,
	"paths./v1.get.parameters[15].enum[0]": "huge",
	"paths./v1.get.parameters[15].enum[1]": "icon",
	"paths./v1.get.parameters[15].enum[2]": "large",
	"paths./v1.get.parameters[15].enum[3]": "medium",
	"paths./v1.get.parameters[15].enum[4]": "small",
	"paths./v1.get.parameters[15].enum[5]": "xlarge",
	"paths./v1.get.parameters[15].enum[6]": "xxlarge",
	"paths./v1.get.parameters[15].in": "query",
	"paths./v1.get.parameters[15].name": "imgSize",
	"paths./v1.get.parameters[15].type": "string",
	"paths./v1.get.parameters[16].description": "Returns images of a type, which can be one of: clipart, face, lineart, news, and photo.",
	"paths./v1.get.parameters[16].enum.length": 5,
	"paths./v1.get.parameters[16].enum[0]": "clipart",
	"paths./v1.get.parameters[16].enum[1]": "face",
	"paths./v1.get.parameters[16].enum[2]": "lineart",
	"paths./v1.get.parameters[16].enum[3]": "news",
	"paths./v1.get.parameters[16].enum[4]": "photo",
	"paths./v1.get.parameters[16].in": "query",
	"paths./v1.get.parameters[16].name": "imgType",
	"paths./v1.get.parameters[16].type": "string",
	"paths./v1.get.parameters[17].description": "Specifies that all search results should contain a link to a particular URL",
	"paths./v1.get.parameters[17].in": "query",
	"paths./v1.get.parameters[17].name": "linkSite",
	"paths./v1.get.parameters[17].type": "string",
	"paths./v1.get.parameters[18].description": "Creates a range in form as_nlo value..as_nhi value and attempts to append it to query",
	"paths./v1.get.parameters[18].in": "query",
	"paths./v1.get.parameters[18].name": "lowRange",
	"paths./v1.get.parameters[18].type": "string",
	"paths./v1.get.parameters[19].description": "The language restriction for the search results",
	"paths./v1.get.parameters[19].enum.length": 35,
	"paths./v1.get.parameters[19].enum[0]": "lang_ar",
	"paths./v1.get.parameters[19].enum[10]": "lang_fi",
	"paths./v1.get.parameters[19].enum[11]": "lang_fr",
	"paths./v1.get.parameters[19].enum[12]": "lang_hr",
	"paths./v1.get.parameters[19].enum[13]": "lang_hu",
	"paths./v1.get.parameters[19].enum[14]": "lang_id",
	"paths./v1.get.parameters[19].enum[15]": "lang_is",
	"paths./v1.get.parameters[19].enum[16]": "lang_it",
	"paths./v1.get.parameters[19].enum[17]": "lang_iw",
	"paths./v1.get.parameters[19].enum[18]": "lang_ja",
	"paths./v1.get.parameters[19].enum[19]": "lang_ko",
	"paths./v1.get.parameters[19].enum[1]": "lang_bg",
	"paths./v1.get.parameters[19].enum[20]": "lang_lt",
	"paths./v1.get.parameters[19].enum[21]": "lang_lv",
	"paths./v1.get.parameters[19].enum[22]": "lang_nl",
	"paths./v1.get.parameters[19].enum[23]": "lang_no",
	"paths./v1.get.parameters[19].enum[24]": "lang_pl",
	"paths./v1.get.parameters[19].enum[25]": "lang_pt",
	"paths./v1.get.parameters[19].enum[26]": "lang_ro",
	"paths./v1.get.parameters[19].enum[27]": "lang_ru",
	"paths./v1.get.parameters[19].enum[28]": "lang_sk",
	"paths./v1.get.parameters[19].enum[29]": "lang_sl",
	"paths./v1.get.parameters[19].enum[2]": "lang_ca",
	"paths./v1.get.parameters[19].enum[30]": "lang_sr",
	"paths./v1.get.parameters[19].enum[31]": "lang_sv",
	"paths./v1.get.parameters[19].enum[32]": "lang_tr",
	"paths./v1.get.parameters[19].enum[33]": "lang_zh-CN",
	"paths./v1.get.parameters[19].enum[34]": "lang_zh-TW",
	"paths./v1.get.parameters[19].enum[3]": "lang_cs",
	"paths./v1.get.parameters[19].enum[4]": "lang_da",
	"paths./v1.get.parameters[19].enum[5]": "lang_de",
	"paths./v1.get.parameters[19].enum[6]": "lang_el",
	"paths./v1.get.parameters[19].enum[7]": "lang_en",
	"paths./v1.get.parameters[19].enum[8]": "lang_es",
	"paths./v1.get.parameters[19].enum[9]": "lang_et",
	"paths./v1.get.parameters[19].in": "query",
	"paths./v1.get.parameters[19].name": "lr",
	"paths./v1.get.parameters[19].type": "string",
	"paths./v1.get.parameters[1].description": "Country restrict(s).",
	"paths./v1.get.parameters[1].in": "query",
	"paths./v1.get.parameters[1].name": "cr",
	"paths./v1.get.parameters[1].type": "string",
	"paths./v1.get.parameters[20].default": 10,
	"paths./v1.get.parameters[20].description": "Number of search results to return",
	"paths./v1.get.parameters[20].in": "query",
	"paths./v1.get.parameters[20].name": "num",
	"paths./v1.get.parameters[20].type": "integer",
	"paths./v1.get.parameters[21].description": "Provides additional search terms to check for in a document, where each document in the search results must contain at least one of the additional search terms",
	"paths./v1.get.parameters[21].in": "query",
	"paths./v1.get.parameters[21].name": "orTerms",
	"paths./v1.get.parameters[21].type": "string",
	"paths./v1.get.parameters[22].description": "Query",
	"paths./v1.get.parameters[22].in": "query",
	"paths./v1.get.parameters[22].name": "q",
	"paths./v1.get.parameters[22].required": true,
	"paths./v1.get.parameters[22].type": "string",
	"paths./v1.get.parameters[23].description": "Specifies that all search results should be pages that are related to the specified URL",
	"paths./v1.get.parameters[23].in": "query",
	"paths./v1.get.parameters[23].name": "relatedSite",
	"paths./v1.get.parameters[23].type": "string",
	"paths./v1.get.parameters[24].description": "Filters based on licensing. Supported values include: cc_publicdomain, cc_attribute, cc_sharealike, cc_noncommercial, cc_nonderived and combinations of these.",
	"paths./v1.get.parameters[24].in": "query",
	"paths./v1.get.parameters[24].name": "rights",
	"paths./v1.get.parameters[24].type": "string",
	"paths./v1.get.parameters[25].default": "off",
	"paths./v1.get.parameters[25].description": "Search safety level",
	"paths./v1.get.parameters[25].enum.length": 3,
	"paths./v1.get.parameters[25].enum[0]": "high",
	"paths./v1.get.parameters[25].enum[1]": "medium",
	"paths./v1.get.parameters[25].enum[2]": "off",
	"paths./v1.get.parameters[25].in": "query",
	"paths./v1.get.parameters[25].name": "safe",
	"paths./v1.get.parameters[25].type": "string",
	"paths./v1.get.parameters[26].description": "Specifies the search type: image.",
	"paths./v1.get.parameters[26].enum.length": 1,
	"paths./v1.get.parameters[26].enum[0]": "image",
	"paths./v1.get.parameters[26].in": "query",
	"paths./v1.get.parameters[26].name": "searchType",
	"paths./v1.get.parameters[26].type": "string",
	"paths./v1.get.parameters[27].description": "Specifies all search results should be pages from a given site",
	"paths./v1.get.parameters[27].in": "query",
	"paths./v1.get.parameters[27].name": "siteSearch",
	"paths./v1.get.parameters[27].type": "string",
	"paths./v1.get.parameters[28].description": "Controls whether to include or exclude results from the site named in the as_sitesearch parameter",
	"paths./v1.get.parameters[28].enum.length": 2,
	"paths./v1.get.parameters[28].enum[0]": "e",
	"paths./v1.get.parameters[28].enum[1]": "i",
	"paths./v1.get.parameters[28].in": "query",
	"paths./v1.get.parameters[28].name": "siteSearchFilter",
	"paths./v1.get.parameters[28].type": "string",
	"paths./v1.get.parameters[29].description": "The sort expression to apply to the results",
	"paths./v1.get.parameters[29].in": "query",
	"paths./v1.get.parameters[29].name": "sort",
	"paths./v1.get.parameters[29].type": "string",
	"paths./v1.get.parameters[2].description": "The custom search engine ID to scope this search query",
	"paths./v1.get.parameters[2].in": "query",
	"paths./v1.get.parameters[2].name": "cx",
	"paths./v1.get.parameters[2].type": "string",
	"paths./v1.get.parameters[30].description": "The index of the first result to return",
	"paths./v1.get.parameters[30].in": "query",
	"paths./v1.get.parameters[30].name": "start",
	"paths./v1.get.parameters[30].type": "integer",
	"paths./v1.get.parameters[3].description": "Specifies all search results are from a time period",
	"paths./v1.get.parameters[3].in": "query",
	"paths./v1.get.parameters[3].name": "dateRestrict",
	"paths./v1.get.parameters[3].type": "string",
	"paths./v1.get.parameters[4].description": "Identifies a phrase that all documents in the search results must contain",
	"paths./v1.get.parameters[4].in": "query",
	"paths./v1.get.parameters[4].name": "exactTerms",
	"paths./v1.get.parameters[4].type": "string",
	"paths./v1.get.parameters[5].description": "Identifies a word or phrase that should not appear in any documents in the search results",
	"paths./v1.get.parameters[5].in": "query",
	"paths./v1.get.parameters[5].name": "excludeTerms",
	"paths./v1.get.parameters[5].type": "string",
	"paths./v1.get.parameters[6].description": "Returns images of a specified type. Some of the allowed values are: bmp, gif, png, jpg, svg, pdf, ...",
	"paths./v1.get.parameters[6].in": "query",
	"paths./v1.get.parameters[6].name": "fileType",
	"paths./v1.get.parameters[6].type": "string",
	"paths./v1.get.parameters[7].description": "Controls turning on or off the duplicate content filter.",
	"paths./v1.get.parameters[7].enum.length": 2,
	"paths./v1.get.parameters[7].enum[0]": "0",
	"paths./v1.get.parameters[7].enum[1]": "1",
	"paths./v1.get.parameters[7].in": "query",
	"paths./v1.get.parameters[7].name": "filter",
	"paths./v1.get.parameters[7].type": "string",
	"paths./v1.get.parameters[8].description": "Geolocation of end user.",
	"paths./v1.get.parameters[8].in": "query",
	"paths./v1.get.parameters[8].name": "gl",
	"paths./v1.get.parameters[8].type": "string",
	"paths./v1.get.parameters[9].description": "The local Google domain to use to perform the search.",
	"paths./v1.get.parameters[9].in": "query",
	"paths./v1.get.parameters[9].name": "googlehost",
	"paths./v1.get.parameters[9].type": "string",
	"paths./v1.get.responses.200.description": "Successful response",
	"paths./v1.get.responses.200.schema.$ref": "#/definitions/Search",
	"paths./v1.get.tags.length": 1,
	"paths./v1.get.tags[0]": "cse",
	"paths./v1.parameters.length": 7,
	"paths./v1.parameters[0].$ref": "#/parameters/alt",
	"paths./v1.parameters[1].$ref": "#/parameters/fields",
	"paths./v1.parameters[2].$ref": "#/parameters/key",
	"paths./v1.parameters[3].$ref": "#/parameters/oauth_token",
	"paths./v1.parameters[4].$ref": "#/parameters/prettyPrint",
	"paths./v1.parameters[5].$ref": "#/parameters/quotaUser",
	"paths./v1.parameters[6].$ref": "#/parameters/userIp",
	"schemes.length": 1,
	"schemes[0]": "https",
	"swagger": "2.0",
	"tags.length": 1,
	"tags[0].name": "cse"
}