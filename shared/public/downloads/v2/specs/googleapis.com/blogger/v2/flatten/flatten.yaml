basePath: /blogger/v2
definitions.Blog.properties.description.description: The description of this blog.
  This is displayed underneath the title.
definitions.Blog.properties.description.type: string
definitions.Blog.properties.id.description: The identifier for this resource.
definitions.Blog.properties.id.format: int64
definitions.Blog.properties.id.type: string
definitions.Blog.properties.kind.default: blogger#blog
definitions.Blog.properties.kind.description: The kind of this entry. Always blogger#blog
definitions.Blog.properties.kind.type: string
definitions.Blog.properties.locale.description: The locale this Blog is set to.
definitions.Blog.properties.locale.properties.country.description: The country this
  blog's locale is set to.
definitions.Blog.properties.locale.properties.country.type: string
definitions.Blog.properties.locale.properties.language.description: The language this
  blog is authored in.
definitions.Blog.properties.locale.properties.language.type: string
definitions.Blog.properties.locale.properties.variant.description: The language variant
  this blog is authored in.
definitions.Blog.properties.locale.properties.variant.type: string
definitions.Blog.properties.locale.type: object
definitions.Blog.properties.name.description: The name of this blog. This is displayed
  as the title.
definitions.Blog.properties.name.type: string
definitions.Blog.properties.pages.description: The container of pages in this blog.
definitions.Blog.properties.pages.properties.selfLink.description: The URL of the
  container for pages in this blog.
definitions.Blog.properties.pages.properties.selfLink.type: string
definitions.Blog.properties.pages.properties.totalItems.description: The count of
  pages in this blog.
definitions.Blog.properties.pages.properties.totalItems.format: int32
definitions.Blog.properties.pages.properties.totalItems.type: integer
definitions.Blog.properties.pages.type: object
definitions.Blog.properties.posts.description: The container of posts in this blog.
definitions.Blog.properties.posts.properties.selfLink.description: The URL of the
  container for posts in this blog.
definitions.Blog.properties.posts.properties.selfLink.type: string
definitions.Blog.properties.posts.properties.totalItems.description: The count of
  posts in this blog.
definitions.Blog.properties.posts.properties.totalItems.format: int32
definitions.Blog.properties.posts.properties.totalItems.type: integer
definitions.Blog.properties.posts.type: object
definitions.Blog.properties.published.description: RFC 3339 date-time when this blog
  was published.
definitions.Blog.properties.published.format: date-time
definitions.Blog.properties.published.type: string
definitions.Blog.properties.selfLink.description: The API REST URL to fetch this resource
  from.
definitions.Blog.properties.selfLink.type: string
definitions.Blog.properties.updated.description: RFC 3339 date-time when this blog
  was last updated.
definitions.Blog.properties.updated.format: date-time
definitions.Blog.properties.updated.type: string
definitions.Blog.properties.url.description: The URL where this blog is published.
definitions.Blog.properties.url.type: string
definitions.Blog.type: object
definitions.BlogList.properties.items.description: The list of Blogs this user has
  Authorship or Admin rights over.
definitions.BlogList.properties.items.items.$ref: '#/definitions/Blog'
definitions.BlogList.properties.items.type: array
definitions.BlogList.properties.kind.default: blogger#blogList
definitions.BlogList.properties.kind.description: The kind of this entity. Always
  blogger#blogList
definitions.BlogList.properties.kind.type: string
definitions.BlogList.type: object
definitions.Comment.properties.author.description: The author of this Comment.
definitions.Comment.properties.author.properties.displayName.description: The display
  name.
definitions.Comment.properties.author.properties.displayName.type: string
definitions.Comment.properties.author.properties.id.description: The identifier of
  the Comment creator.
definitions.Comment.properties.author.properties.id.type: string
definitions.Comment.properties.author.properties.image.description: The comment creator's
  avatar.
definitions.Comment.properties.author.properties.image.properties.url.description: The
  comment creator's avatar URL.
definitions.Comment.properties.author.properties.image.properties.url.type: string
definitions.Comment.properties.author.properties.image.type: object
definitions.Comment.properties.author.properties.url.description: The URL of the Comment
  creator's Profile page.
definitions.Comment.properties.author.properties.url.type: string
definitions.Comment.properties.author.type: object
definitions.Comment.properties.blog.description: Data about the blog containing this
  comment.
definitions.Comment.properties.blog.properties.id.description: The identifier of the
  blog containing this comment.
definitions.Comment.properties.blog.properties.id.format: int64
definitions.Comment.properties.blog.properties.id.type: string
definitions.Comment.properties.blog.type: object
definitions.Comment.properties.content.description: The actual content of the comment.
  May include HTML markup.
definitions.Comment.properties.content.type: string
definitions.Comment.properties.id.description: The identifier for this resource.
definitions.Comment.properties.id.format: int64
definitions.Comment.properties.id.type: string
definitions.Comment.properties.inReplyTo.description: Data about the comment this
  is in reply to.
definitions.Comment.properties.inReplyTo.properties.id.description: The identified
  of the parent of this comment.
definitions.Comment.properties.inReplyTo.properties.id.format: int64
definitions.Comment.properties.inReplyTo.properties.id.type: string
definitions.Comment.properties.inReplyTo.type: object
definitions.Comment.properties.kind.default: blogger#comment
definitions.Comment.properties.kind.description: The kind of this entry. Always blogger#comment
definitions.Comment.properties.kind.type: string
definitions.Comment.properties.post.description: Data about the post containing this
  comment.
definitions.Comment.properties.post.properties.id.description: The identifier of the
  post containing this comment.
definitions.Comment.properties.post.properties.id.format: int64
definitions.Comment.properties.post.properties.id.type: string
definitions.Comment.properties.post.type: object
definitions.Comment.properties.published.description: RFC 3339 date-time when this
  comment was published.
definitions.Comment.properties.published.format: date-time
definitions.Comment.properties.published.type: string
definitions.Comment.properties.selfLink.description: The API REST URL to fetch this
  resource from.
definitions.Comment.properties.selfLink.type: string
definitions.Comment.properties.updated.description: RFC 3339 date-time when this comment
  was last updated.
definitions.Comment.properties.updated.format: date-time
definitions.Comment.properties.updated.type: string
definitions.Comment.type: object
definitions.CommentList.properties.items.description: The List of Comments for a Post.
definitions.CommentList.properties.items.items.$ref: '#/definitions/Comment'
definitions.CommentList.properties.items.type: array
definitions.CommentList.properties.kind.default: blogger#commentList
definitions.CommentList.properties.kind.description: The kind of this entry. Always
  blogger#commentList
definitions.CommentList.properties.kind.type: string
definitions.CommentList.properties.nextPageToken.description: Pagination token to
  fetch the next page, if one exists.
definitions.CommentList.properties.nextPageToken.type: string
definitions.CommentList.properties.prevPageToken.description: Pagination token to
  fetch the previous page, if one exists.
definitions.CommentList.properties.prevPageToken.type: string
definitions.CommentList.type: object
definitions.Page.properties.author.description: The author of this Page.
definitions.Page.properties.author.properties.displayName.description: The display
  name.
definitions.Page.properties.author.properties.displayName.type: string
definitions.Page.properties.author.properties.id.description: The identifier of the
  Page creator.
definitions.Page.properties.author.properties.id.type: string
definitions.Page.properties.author.properties.image.description: The page author's
  avatar.
definitions.Page.properties.author.properties.image.properties.url.description: The
  page author's avatar URL.
definitions.Page.properties.author.properties.image.properties.url.type: string
definitions.Page.properties.author.properties.image.type: object
definitions.Page.properties.author.properties.url.description: The URL of the Page
  creator's Profile page.
definitions.Page.properties.author.properties.url.type: string
definitions.Page.properties.author.type: object
definitions.Page.properties.blog.description: Data about the blog containing this
  Page.
definitions.Page.properties.blog.properties.id.description: The identifier of the
  blog containing this page.
definitions.Page.properties.blog.properties.id.format: int64
definitions.Page.properties.blog.properties.id.type: string
definitions.Page.properties.blog.type: object
definitions.Page.properties.content.description: The body content of this Page, in
  HTML.
definitions.Page.properties.content.type: string
definitions.Page.properties.id.description: The identifier for this resource.
definitions.Page.properties.id.format: int64
definitions.Page.properties.id.type: string
definitions.Page.properties.kind.default: blogger#page
definitions.Page.properties.kind.description: The kind of this entity. Always blogger#page
definitions.Page.properties.kind.type: string
definitions.Page.properties.published.description: RFC 3339 date-time when this Page
  was published.
definitions.Page.properties.published.format: date-time
definitions.Page.properties.published.type: string
definitions.Page.properties.selfLink.description: The API REST URL to fetch this resource
  from.
definitions.Page.properties.selfLink.type: string
definitions.Page.properties.title.description: The title of this entity. This is the
  name displayed in the Admin user interface.
definitions.Page.properties.title.type: string
definitions.Page.properties.updated.description: RFC 3339 date-time when this Page
  was last updated.
definitions.Page.properties.updated.format: date-time
definitions.Page.properties.updated.type: string
definitions.Page.properties.url.description: The URL that this Page is displayed at.
definitions.Page.properties.url.type: string
definitions.Page.type: object
definitions.PageList.properties.items.description: The list of Pages for a Blog.
definitions.PageList.properties.items.items.$ref: '#/definitions/Page'
definitions.PageList.properties.items.type: array
definitions.PageList.properties.kind.default: blogger#pageList
definitions.PageList.properties.kind.description: The kind of this entity. Always
  blogger#pageList
definitions.PageList.properties.kind.type: string
definitions.PageList.type: object
definitions.Post.properties.author.description: The author of this Post.
definitions.Post.properties.author.properties.displayName.description: The display
  name.
definitions.Post.properties.author.properties.displayName.type: string
definitions.Post.properties.author.properties.id.description: The identifier of the
  Post creator.
definitions.Post.properties.author.properties.id.type: string
definitions.Post.properties.author.properties.image.description: The Post author's
  avatar.
definitions.Post.properties.author.properties.image.properties.url.description: The
  Post author's avatar URL.
definitions.Post.properties.author.properties.image.properties.url.type: string
definitions.Post.properties.author.properties.image.type: object
definitions.Post.properties.author.properties.url.description: The URL of the Post
  creator's Profile page.
definitions.Post.properties.author.properties.url.type: string
definitions.Post.properties.author.type: object
definitions.Post.properties.blog.description: Data about the blog containing this
  Post.
definitions.Post.properties.blog.properties.id.description: The identifier of the
  Blog that contains this Post.
definitions.Post.properties.blog.properties.id.format: int64
definitions.Post.properties.blog.properties.id.type: string
definitions.Post.properties.blog.type: object
definitions.Post.properties.content.description: The content of the Post. May contain
  HTML markup.
definitions.Post.properties.content.type: string
definitions.Post.properties.id.description: The identifier of this Post.
definitions.Post.properties.id.format: int64
definitions.Post.properties.id.type: string
definitions.Post.properties.kind.default: blogger#post
definitions.Post.properties.kind.description: The kind of this entity. Always blogger#post
definitions.Post.properties.kind.type: string
definitions.Post.properties.labels.description: The list of labels this Post was tagged
  with.
definitions.Post.properties.labels.items.type: string
definitions.Post.properties.labels.type: array
definitions.Post.properties.published.description: RFC 3339 date-time when this Post
  was published.
definitions.Post.properties.published.format: date-time
definitions.Post.properties.published.type: string
definitions.Post.properties.replies.description: The container of comments on this
  Post.
definitions.Post.properties.replies.properties.selfLink.description: The URL of the
  comments on this post.
definitions.Post.properties.replies.properties.selfLink.type: string
definitions.Post.properties.replies.properties.totalItems.description: The count of
  comments on this post.
definitions.Post.properties.replies.properties.totalItems.format: int64
definitions.Post.properties.replies.properties.totalItems.type: string
definitions.Post.properties.replies.type: object
definitions.Post.properties.selfLink.description: The API REST URL to fetch this resource
  from.
definitions.Post.properties.selfLink.type: string
definitions.Post.properties.title.description: The title of the Post.
definitions.Post.properties.title.type: string
definitions.Post.properties.updated.description: RFC 3339 date-time when this Post
  was last updated.
definitions.Post.properties.updated.format: date-time
definitions.Post.properties.updated.type: string
definitions.Post.properties.url.description: The URL where this Post is displayed.
definitions.Post.properties.url.type: string
definitions.Post.type: object
definitions.PostList.properties.items.description: The list of Posts for this Blog.
definitions.PostList.properties.items.items.$ref: '#/definitions/Post'
definitions.PostList.properties.items.type: array
definitions.PostList.properties.kind.default: blogger#postList
definitions.PostList.properties.kind.description: The kind of this entity. Always
  blogger#postList
definitions.PostList.properties.kind.type: string
definitions.PostList.properties.nextPageToken.description: Pagination token to fetch
  the next page, if one exists.
definitions.PostList.properties.nextPageToken.type: string
definitions.PostList.properties.prevPageToken.description: Pagination token to fetch
  the previous page, if one exists.
definitions.PostList.properties.prevPageToken.type: string
definitions.PostList.type: object
definitions.User.properties.about.description: Profile summary information.
definitions.User.properties.about.type: string
definitions.User.properties.blogs.description: The container of blogs for this user.
definitions.User.properties.blogs.properties.selfLink.description: The URL of the
  Blogs for this user.
definitions.User.properties.blogs.properties.selfLink.type: string
definitions.User.properties.blogs.type: object
definitions.User.properties.created.description: The timestamp of when this profile
  was created, in seconds since epoch.
definitions.User.properties.created.format: date-time
definitions.User.properties.created.type: string
definitions.User.properties.displayName.description: The display name.
definitions.User.properties.displayName.type: string
definitions.User.properties.id.description: The identifier for this User.
definitions.User.properties.id.type: string
definitions.User.properties.kind.default: blogger#user
definitions.User.properties.kind.description: The kind of this entity. Always blogger#user
definitions.User.properties.kind.type: string
definitions.User.properties.locale.description: This user's locale
definitions.User.properties.locale.properties.country.description: The user's country
  setting.
definitions.User.properties.locale.properties.country.type: string
definitions.User.properties.locale.properties.language.description: The user's language
  setting.
definitions.User.properties.locale.properties.language.type: string
definitions.User.properties.locale.properties.variant.description: The user's language
  variant setting.
definitions.User.properties.locale.properties.variant.type: string
definitions.User.properties.locale.type: object
definitions.User.properties.selfLink.description: The API REST URL to fetch this resource
  from.
definitions.User.properties.selfLink.type: string
definitions.User.properties.url.description: The user's profile page.
definitions.User.properties.url.type: string
definitions.User.type: object
externalDocs.url: https://developers.google.com/blogger/docs/2.0/json/getting_started
host: www.googleapis.com
info.contact.name: Google
info.contact.url: https://google.com
info.description: API for access to the data within Blogger.
info.title: Blogger
info.version: v2
info.x-apiClientRegistration.url: https://console.developers.google.com
info.x-apisguru-categories.length: 1
info.x-apisguru-categories[0]: social
info.x-logo.url: https://api.apis.guru/v2/cache/logo/https_www.gstatic.com_images_icons_material_product_2x_blogger_64dp.png
info.x-origin.length: 1
info.x-origin[0].converter.url: https://github.com/lucybot/api-spec-converter
info.x-origin[0].converter.version: 2.6.0
info.x-origin[0].format: google
info.x-origin[0].url: https://www.googleapis.com/discovery/v1/apis/blogger/v2/rest
info.x-origin[0].version: v1
info.x-preferred: false
info.x-providerName: googleapis.com
info.x-serviceName: blogger
parameters.alt.default: json
parameters.alt.description: Data format for the response.
parameters.alt.enum.length: 1
parameters.alt.enum[0]: json
parameters.alt.in: query
parameters.alt.name: alt
parameters.alt.type: string
parameters.fields.description: Selector specifying which fields to include in a partial
  response.
parameters.fields.in: query
parameters.fields.name: fields
parameters.fields.type: string
parameters.key.description: API key. Your API key identifies your project and provides
  you with API access, quota, and reports. Required unless you provide an OAuth 2.0
  token.
parameters.key.in: query
parameters.key.name: key
parameters.key.type: string
parameters.oauth_token.description: OAuth 2.0 token for the current user.
parameters.oauth_token.in: query
parameters.oauth_token.name: oauth_token
parameters.oauth_token.type: string
parameters.prettyPrint.default: true
parameters.prettyPrint.description: Returns response with indentations and line breaks.
parameters.prettyPrint.in: query
parameters.prettyPrint.name: prettyPrint
parameters.prettyPrint.type: boolean
parameters.quotaUser.description: Available to use for quota purposes for server-side
  applications. Can be any arbitrary string assigned to a user, but should not exceed
  40 characters. Overrides userIp if both are provided.
parameters.quotaUser.in: query
parameters.quotaUser.name: quotaUser
parameters.quotaUser.type: string
parameters.userIp.description: IP address of the site where the request originates.
  Use this if you want to enforce per-user limits.
parameters.userIp.in: query
parameters.userIp.name: userIp
parameters.userIp.type: string
paths./blogs/{blogId}.get.description: Gets one blog by id.
paths./blogs/{blogId}.get.operationId: blogger.blogs.get
paths./blogs/{blogId}.get.parameters.length: 1
paths./blogs/{blogId}.get.parameters[0].description: The ID of the blog to get.
paths./blogs/{blogId}.get.parameters[0].in: path
paths./blogs/{blogId}.get.parameters[0].name: blogId
paths./blogs/{blogId}.get.parameters[0].required: true
paths./blogs/{blogId}.get.parameters[0].type: string
paths./blogs/{blogId}.get.responses.200.description: Successful response
paths./blogs/{blogId}.get.responses.200.schema.$ref: '#/definitions/Blog'
paths./blogs/{blogId}.get.security.length: 1
paths./blogs/{blogId}.get.security[0].Oauth2.length: 1
paths./blogs/{blogId}.get.security[0].Oauth2[0]: https://www.googleapis.com/auth/blogger
paths./blogs/{blogId}.get.tags.length: 1
paths./blogs/{blogId}.get.tags[0]: blogs
paths./blogs/{blogId}.parameters.length: 7
paths./blogs/{blogId}.parameters[0].$ref: '#/parameters/alt'
paths./blogs/{blogId}.parameters[1].$ref: '#/parameters/fields'
paths./blogs/{blogId}.parameters[2].$ref: '#/parameters/key'
paths./blogs/{blogId}.parameters[3].$ref: '#/parameters/oauth_token'
paths./blogs/{blogId}.parameters[4].$ref: '#/parameters/prettyPrint'
paths./blogs/{blogId}.parameters[5].$ref: '#/parameters/quotaUser'
paths./blogs/{blogId}.parameters[6].$ref: '#/parameters/userIp'
paths./blogs/{blogId}/pages.get.description: Retrieves pages for a blog, possibly
  filtered.
paths./blogs/{blogId}/pages.get.operationId: blogger.pages.list
paths./blogs/{blogId}/pages.get.parameters.length: 2
paths./blogs/{blogId}/pages.get.parameters[0].description: ID of the blog to fetch
  pages from.
paths./blogs/{blogId}/pages.get.parameters[0].in: path
paths./blogs/{blogId}/pages.get.parameters[0].name: blogId
paths./blogs/{blogId}/pages.get.parameters[0].required: true
paths./blogs/{blogId}/pages.get.parameters[0].type: string
paths./blogs/{blogId}/pages.get.parameters[1].description: Whether to retrieve the
  Page bodies.
paths./blogs/{blogId}/pages.get.parameters[1].in: query
paths./blogs/{blogId}/pages.get.parameters[1].name: fetchBodies
paths./blogs/{blogId}/pages.get.parameters[1].type: boolean
paths./blogs/{blogId}/pages.get.responses.200.description: Successful response
paths./blogs/{blogId}/pages.get.responses.200.schema.$ref: '#/definitions/PageList'
paths./blogs/{blogId}/pages.get.security.length: 1
paths./blogs/{blogId}/pages.get.security[0].Oauth2.length: 1
paths./blogs/{blogId}/pages.get.security[0].Oauth2[0]: https://www.googleapis.com/auth/blogger
paths./blogs/{blogId}/pages.get.tags.length: 1
paths./blogs/{blogId}/pages.get.tags[0]: pages
paths./blogs/{blogId}/pages.parameters.length: 7
paths./blogs/{blogId}/pages.parameters[0].$ref: '#/parameters/alt'
paths./blogs/{blogId}/pages.parameters[1].$ref: '#/parameters/fields'
paths./blogs/{blogId}/pages.parameters[2].$ref: '#/parameters/key'
paths./blogs/{blogId}/pages.parameters[3].$ref: '#/parameters/oauth_token'
paths./blogs/{blogId}/pages.parameters[4].$ref: '#/parameters/prettyPrint'
paths./blogs/{blogId}/pages.parameters[5].$ref: '#/parameters/quotaUser'
paths./blogs/{blogId}/pages.parameters[6].$ref: '#/parameters/userIp'
paths./blogs/{blogId}/pages/{pageId}.get.description: Gets one blog page by id.
paths./blogs/{blogId}/pages/{pageId}.get.operationId: blogger.pages.get
paths./blogs/{blogId}/pages/{pageId}.get.parameters.length: 2
paths./blogs/{blogId}/pages/{pageId}.get.parameters[0].description: ID of the blog
  containing the page.
paths./blogs/{blogId}/pages/{pageId}.get.parameters[0].in: path
paths./blogs/{blogId}/pages/{pageId}.get.parameters[0].name: blogId
paths./blogs/{blogId}/pages/{pageId}.get.parameters[0].required: true
paths./blogs/{blogId}/pages/{pageId}.get.parameters[0].type: string
paths./blogs/{blogId}/pages/{pageId}.get.parameters[1].description: The ID of the
  page to get.
paths./blogs/{blogId}/pages/{pageId}.get.parameters[1].in: path
paths./blogs/{blogId}/pages/{pageId}.get.parameters[1].name: pageId
paths./blogs/{blogId}/pages/{pageId}.get.parameters[1].required: true
paths./blogs/{blogId}/pages/{pageId}.get.parameters[1].type: string
paths./blogs/{blogId}/pages/{pageId}.get.responses.200.description: Successful response
paths./blogs/{blogId}/pages/{pageId}.get.responses.200.schema.$ref: '#/definitions/Page'
paths./blogs/{blogId}/pages/{pageId}.get.security.length: 1
paths./blogs/{blogId}/pages/{pageId}.get.security[0].Oauth2.length: 1
paths./blogs/{blogId}/pages/{pageId}.get.security[0].Oauth2[0]: https://www.googleapis.com/auth/blogger
paths./blogs/{blogId}/pages/{pageId}.get.tags.length: 1
paths./blogs/{blogId}/pages/{pageId}.get.tags[0]: pages
paths./blogs/{blogId}/pages/{pageId}.parameters.length: 7
paths./blogs/{blogId}/pages/{pageId}.parameters[0].$ref: '#/parameters/alt'
paths./blogs/{blogId}/pages/{pageId}.parameters[1].$ref: '#/parameters/fields'
paths./blogs/{blogId}/pages/{pageId}.parameters[2].$ref: '#/parameters/key'
paths./blogs/{blogId}/pages/{pageId}.parameters[3].$ref: '#/parameters/oauth_token'
paths./blogs/{blogId}/pages/{pageId}.parameters[4].$ref: '#/parameters/prettyPrint'
paths./blogs/{blogId}/pages/{pageId}.parameters[5].$ref: '#/parameters/quotaUser'
paths./blogs/{blogId}/pages/{pageId}.parameters[6].$ref: '#/parameters/userIp'
paths./blogs/{blogId}/posts.get.description: Retrieves a list of posts, possibly filtered.
paths./blogs/{blogId}/posts.get.operationId: blogger.posts.list
paths./blogs/{blogId}/posts.get.parameters.length: 5
paths./blogs/{blogId}/posts.get.parameters[0].description: ID of the blog to fetch
  posts from.
paths./blogs/{blogId}/posts.get.parameters[0].in: path
paths./blogs/{blogId}/posts.get.parameters[0].name: blogId
paths./blogs/{blogId}/posts.get.parameters[0].required: true
paths./blogs/{blogId}/posts.get.parameters[0].type: string
paths./blogs/{blogId}/posts.get.parameters[1].description: Whether the body content
  of posts is included.
paths./blogs/{blogId}/posts.get.parameters[1].in: query
paths./blogs/{blogId}/posts.get.parameters[1].name: fetchBodies
paths./blogs/{blogId}/posts.get.parameters[1].type: boolean
paths./blogs/{blogId}/posts.get.parameters[2].description: Maximum number of posts
  to fetch.
paths./blogs/{blogId}/posts.get.parameters[2].in: query
paths./blogs/{blogId}/posts.get.parameters[2].name: maxResults
paths./blogs/{blogId}/posts.get.parameters[2].type: integer
paths./blogs/{blogId}/posts.get.parameters[3].description: Continuation token if the
  request is paged.
paths./blogs/{blogId}/posts.get.parameters[3].in: query
paths./blogs/{blogId}/posts.get.parameters[3].name: pageToken
paths./blogs/{blogId}/posts.get.parameters[3].type: string
paths./blogs/{blogId}/posts.get.parameters[4].description: Earliest post date to fetch,
  a date-time with RFC 3339 formatting.
paths./blogs/{blogId}/posts.get.parameters[4].in: query
paths./blogs/{blogId}/posts.get.parameters[4].name: startDate
paths./blogs/{blogId}/posts.get.parameters[4].type: string
paths./blogs/{blogId}/posts.get.responses.200.description: Successful response
paths./blogs/{blogId}/posts.get.responses.200.schema.$ref: '#/definitions/PostList'
paths./blogs/{blogId}/posts.get.security.length: 1
paths./blogs/{blogId}/posts.get.security[0].Oauth2.length: 1
paths./blogs/{blogId}/posts.get.security[0].Oauth2[0]: https://www.googleapis.com/auth/blogger
paths./blogs/{blogId}/posts.get.tags.length: 1
paths./blogs/{blogId}/posts.get.tags[0]: posts
paths./blogs/{blogId}/posts.parameters.length: 7
paths./blogs/{blogId}/posts.parameters[0].$ref: '#/parameters/alt'
paths./blogs/{blogId}/posts.parameters[1].$ref: '#/parameters/fields'
paths./blogs/{blogId}/posts.parameters[2].$ref: '#/parameters/key'
paths./blogs/{blogId}/posts.parameters[3].$ref: '#/parameters/oauth_token'
paths./blogs/{blogId}/posts.parameters[4].$ref: '#/parameters/prettyPrint'
paths./blogs/{blogId}/posts.parameters[5].$ref: '#/parameters/quotaUser'
paths./blogs/{blogId}/posts.parameters[6].$ref: '#/parameters/userIp'
paths./blogs/{blogId}/posts/{postId}.get.description: Get a post by id.
paths./blogs/{blogId}/posts/{postId}.get.operationId: blogger.posts.get
paths./blogs/{blogId}/posts/{postId}.get.parameters.length: 2
paths./blogs/{blogId}/posts/{postId}.get.parameters[0].description: ID of the blog
  to fetch the post from.
paths./blogs/{blogId}/posts/{postId}.get.parameters[0].in: path
paths./blogs/{blogId}/posts/{postId}.get.parameters[0].name: blogId
paths./blogs/{blogId}/posts/{postId}.get.parameters[0].required: true
paths./blogs/{blogId}/posts/{postId}.get.parameters[0].type: string
paths./blogs/{blogId}/posts/{postId}.get.parameters[1].description: The ID of the
  post
paths./blogs/{blogId}/posts/{postId}.get.parameters[1].in: path
paths./blogs/{blogId}/posts/{postId}.get.parameters[1].name: postId
paths./blogs/{blogId}/posts/{postId}.get.parameters[1].required: true
paths./blogs/{blogId}/posts/{postId}.get.parameters[1].type: string
paths./blogs/{blogId}/posts/{postId}.get.responses.200.description: Successful response
paths./blogs/{blogId}/posts/{postId}.get.responses.200.schema.$ref: '#/definitions/Post'
paths./blogs/{blogId}/posts/{postId}.get.security.length: 1
paths./blogs/{blogId}/posts/{postId}.get.security[0].Oauth2.length: 1
paths./blogs/{blogId}/posts/{postId}.get.security[0].Oauth2[0]: https://www.googleapis.com/auth/blogger
paths./blogs/{blogId}/posts/{postId}.get.tags.length: 1
paths./blogs/{blogId}/posts/{postId}.get.tags[0]: posts
paths./blogs/{blogId}/posts/{postId}.parameters.length: 7
paths./blogs/{blogId}/posts/{postId}.parameters[0].$ref: '#/parameters/alt'
paths./blogs/{blogId}/posts/{postId}.parameters[1].$ref: '#/parameters/fields'
paths./blogs/{blogId}/posts/{postId}.parameters[2].$ref: '#/parameters/key'
paths./blogs/{blogId}/posts/{postId}.parameters[3].$ref: '#/parameters/oauth_token'
paths./blogs/{blogId}/posts/{postId}.parameters[4].$ref: '#/parameters/prettyPrint'
paths./blogs/{blogId}/posts/{postId}.parameters[5].$ref: '#/parameters/quotaUser'
paths./blogs/{blogId}/posts/{postId}.parameters[6].$ref: '#/parameters/userIp'
paths./blogs/{blogId}/posts/{postId}/comments.get.description: Retrieves the comments
  for a blog, possibly filtered.
paths./blogs/{blogId}/posts/{postId}/comments.get.operationId: blogger.comments.list
paths./blogs/{blogId}/posts/{postId}/comments.get.parameters.length: 6
paths./blogs/{blogId}/posts/{postId}/comments.get.parameters[0].description: ID of
  the blog to fetch comments from.
paths./blogs/{blogId}/posts/{postId}/comments.get.parameters[0].in: path
paths./blogs/{blogId}/posts/{postId}/comments.get.parameters[0].name: blogId
paths./blogs/{blogId}/posts/{postId}/comments.get.parameters[0].required: true
paths./blogs/{blogId}/posts/{postId}/comments.get.parameters[0].type: string
paths./blogs/{blogId}/posts/{postId}/comments.get.parameters[1].description: ID of
  the post to fetch posts from.
paths./blogs/{blogId}/posts/{postId}/comments.get.parameters[1].in: path
paths./blogs/{blogId}/posts/{postId}/comments.get.parameters[1].name: postId
paths./blogs/{blogId}/posts/{postId}/comments.get.parameters[1].required: true
paths./blogs/{blogId}/posts/{postId}/comments.get.parameters[1].type: string
paths./blogs/{blogId}/posts/{postId}/comments.get.parameters[2].description: Whether
  the body content of the comments is included.
paths./blogs/{blogId}/posts/{postId}/comments.get.parameters[2].in: query
paths./blogs/{blogId}/posts/{postId}/comments.get.parameters[2].name: fetchBodies
paths./blogs/{blogId}/posts/{postId}/comments.get.parameters[2].type: boolean
paths./blogs/{blogId}/posts/{postId}/comments.get.parameters[3].description: Maximum
  number of comments to include in the result.
paths./blogs/{blogId}/posts/{postId}/comments.get.parameters[3].in: query
paths./blogs/{blogId}/posts/{postId}/comments.get.parameters[3].name: maxResults
paths./blogs/{blogId}/posts/{postId}/comments.get.parameters[3].type: integer
paths./blogs/{blogId}/posts/{postId}/comments.get.parameters[4].description: Continuation
  token if request is paged.
paths./blogs/{blogId}/posts/{postId}/comments.get.parameters[4].in: query
paths./blogs/{blogId}/posts/{postId}/comments.get.parameters[4].name: pageToken
paths./blogs/{blogId}/posts/{postId}/comments.get.parameters[4].type: string
paths./blogs/{blogId}/posts/{postId}/comments.get.parameters[5].description: Earliest
  date of comment to fetch, a date-time with RFC 3339 formatting.
paths./blogs/{blogId}/posts/{postId}/comments.get.parameters[5].in: query
paths./blogs/{blogId}/posts/{postId}/comments.get.parameters[5].name: startDate
paths./blogs/{blogId}/posts/{postId}/comments.get.parameters[5].type: string
paths./blogs/{blogId}/posts/{postId}/comments.get.responses.200.description: Successful
  response
paths./blogs/{blogId}/posts/{postId}/comments.get.responses.200.schema.$ref: '#/definitions/CommentList'
paths./blogs/{blogId}/posts/{postId}/comments.get.security.length: 1
paths./blogs/{blogId}/posts/{postId}/comments.get.security[0].Oauth2.length: 1
paths./blogs/{blogId}/posts/{postId}/comments.get.security[0].Oauth2[0]: https://www.googleapis.com/auth/blogger
paths./blogs/{blogId}/posts/{postId}/comments.get.tags.length: 1
paths./blogs/{blogId}/posts/{postId}/comments.get.tags[0]: comments
paths./blogs/{blogId}/posts/{postId}/comments.parameters.length: 7
paths./blogs/{blogId}/posts/{postId}/comments.parameters[0].$ref: '#/parameters/alt'
paths./blogs/{blogId}/posts/{postId}/comments.parameters[1].$ref: '#/parameters/fields'
paths./blogs/{blogId}/posts/{postId}/comments.parameters[2].$ref: '#/parameters/key'
paths./blogs/{blogId}/posts/{postId}/comments.parameters[3].$ref: '#/parameters/oauth_token'
paths./blogs/{blogId}/posts/{postId}/comments.parameters[4].$ref: '#/parameters/prettyPrint'
paths./blogs/{blogId}/posts/{postId}/comments.parameters[5].$ref: '#/parameters/quotaUser'
paths./blogs/{blogId}/posts/{postId}/comments.parameters[6].$ref: '#/parameters/userIp'
paths./blogs/{blogId}/posts/{postId}/comments/{commentId}.get.description: Gets one
  comment by id.
paths./blogs/{blogId}/posts/{postId}/comments/{commentId}.get.operationId: blogger.comments.get
paths./blogs/{blogId}/posts/{postId}/comments/{commentId}.get.parameters.length: 3
paths./blogs/{blogId}/posts/{postId}/comments/{commentId}.get.parameters[0].description: ID
  of the blog to containing the comment.
paths./blogs/{blogId}/posts/{postId}/comments/{commentId}.get.parameters[0].in: path
paths./blogs/{blogId}/posts/{postId}/comments/{commentId}.get.parameters[0].name: blogId
paths./blogs/{blogId}/posts/{postId}/comments/{commentId}.get.parameters[0].required: true
paths./blogs/{blogId}/posts/{postId}/comments/{commentId}.get.parameters[0].type: string
paths./blogs/{blogId}/posts/{postId}/comments/{commentId}.get.parameters[1].description: ID
  of the post to fetch posts from.
paths./blogs/{blogId}/posts/{postId}/comments/{commentId}.get.parameters[1].in: path
paths./blogs/{blogId}/posts/{postId}/comments/{commentId}.get.parameters[1].name: postId
paths./blogs/{blogId}/posts/{postId}/comments/{commentId}.get.parameters[1].required: true
paths./blogs/{blogId}/posts/{postId}/comments/{commentId}.get.parameters[1].type: string
paths./blogs/{blogId}/posts/{postId}/comments/{commentId}.get.parameters[2].description: The
  ID of the comment to get.
paths./blogs/{blogId}/posts/{postId}/comments/{commentId}.get.parameters[2].in: path
paths./blogs/{blogId}/posts/{postId}/comments/{commentId}.get.parameters[2].name: commentId
paths./blogs/{blogId}/posts/{postId}/comments/{commentId}.get.parameters[2].required: true
paths./blogs/{blogId}/posts/{postId}/comments/{commentId}.get.parameters[2].type: string
paths./blogs/{blogId}/posts/{postId}/comments/{commentId}.get.responses.200.description: Successful
  response
paths./blogs/{blogId}/posts/{postId}/comments/{commentId}.get.responses.200.schema.$ref: '#/definitions/Comment'
paths./blogs/{blogId}/posts/{postId}/comments/{commentId}.get.security.length: 1
paths./blogs/{blogId}/posts/{postId}/comments/{commentId}.get.security[0].Oauth2.length: 1
paths./blogs/{blogId}/posts/{postId}/comments/{commentId}.get.security[0].Oauth2[0]: https://www.googleapis.com/auth/blogger
paths./blogs/{blogId}/posts/{postId}/comments/{commentId}.get.tags.length: 1
paths./blogs/{blogId}/posts/{postId}/comments/{commentId}.get.tags[0]: comments
paths./blogs/{blogId}/posts/{postId}/comments/{commentId}.parameters.length: 7
paths./blogs/{blogId}/posts/{postId}/comments/{commentId}.parameters[0].$ref: '#/parameters/alt'
paths./blogs/{blogId}/posts/{postId}/comments/{commentId}.parameters[1].$ref: '#/parameters/fields'
paths./blogs/{blogId}/posts/{postId}/comments/{commentId}.parameters[2].$ref: '#/parameters/key'
paths./blogs/{blogId}/posts/{postId}/comments/{commentId}.parameters[3].$ref: '#/parameters/oauth_token'
paths./blogs/{blogId}/posts/{postId}/comments/{commentId}.parameters[4].$ref: '#/parameters/prettyPrint'
paths./blogs/{blogId}/posts/{postId}/comments/{commentId}.parameters[5].$ref: '#/parameters/quotaUser'
paths./blogs/{blogId}/posts/{postId}/comments/{commentId}.parameters[6].$ref: '#/parameters/userIp'
paths./users/{userId}.get.description: Gets one user by id.
paths./users/{userId}.get.operationId: blogger.users.get
paths./users/{userId}.get.parameters.length: 1
paths./users/{userId}.get.parameters[0].description: The ID of the user to get.
paths./users/{userId}.get.parameters[0].in: path
paths./users/{userId}.get.parameters[0].name: userId
paths./users/{userId}.get.parameters[0].required: true
paths./users/{userId}.get.parameters[0].type: string
paths./users/{userId}.get.responses.200.description: Successful response
paths./users/{userId}.get.responses.200.schema.$ref: '#/definitions/User'
paths./users/{userId}.get.security.length: 1
paths./users/{userId}.get.security[0].Oauth2.length: 1
paths./users/{userId}.get.security[0].Oauth2[0]: https://www.googleapis.com/auth/blogger
paths./users/{userId}.get.tags.length: 1
paths./users/{userId}.get.tags[0]: users
paths./users/{userId}.parameters.length: 7
paths./users/{userId}.parameters[0].$ref: '#/parameters/alt'
paths./users/{userId}.parameters[1].$ref: '#/parameters/fields'
paths./users/{userId}.parameters[2].$ref: '#/parameters/key'
paths./users/{userId}.parameters[3].$ref: '#/parameters/oauth_token'
paths./users/{userId}.parameters[4].$ref: '#/parameters/prettyPrint'
paths./users/{userId}.parameters[5].$ref: '#/parameters/quotaUser'
paths./users/{userId}.parameters[6].$ref: '#/parameters/userIp'
paths./users/{userId}/blogs.get.description: Retrieves a list of blogs, possibly filtered.
paths./users/{userId}/blogs.get.operationId: blogger.users.blogs.list
paths./users/{userId}/blogs.get.parameters.length: 1
paths./users/{userId}/blogs.get.parameters[0].description: ID of the user whose blogs
  are to be fetched. Either the word 'self' (sans quote marks) or the user's profile
  identifier.
paths./users/{userId}/blogs.get.parameters[0].in: path
paths./users/{userId}/blogs.get.parameters[0].name: userId
paths./users/{userId}/blogs.get.parameters[0].required: true
paths./users/{userId}/blogs.get.parameters[0].type: string
paths./users/{userId}/blogs.get.responses.200.description: Successful response
paths./users/{userId}/blogs.get.responses.200.schema.$ref: '#/definitions/BlogList'
paths./users/{userId}/blogs.get.security.length: 1
paths./users/{userId}/blogs.get.security[0].Oauth2.length: 1
paths./users/{userId}/blogs.get.security[0].Oauth2[0]: https://www.googleapis.com/auth/blogger
paths./users/{userId}/blogs.get.tags.length: 1
paths./users/{userId}/blogs.get.tags[0]: users
paths./users/{userId}/blogs.parameters.length: 7
paths./users/{userId}/blogs.parameters[0].$ref: '#/parameters/alt'
paths./users/{userId}/blogs.parameters[1].$ref: '#/parameters/fields'
paths./users/{userId}/blogs.parameters[2].$ref: '#/parameters/key'
paths./users/{userId}/blogs.parameters[3].$ref: '#/parameters/oauth_token'
paths./users/{userId}/blogs.parameters[4].$ref: '#/parameters/prettyPrint'
paths./users/{userId}/blogs.parameters[5].$ref: '#/parameters/quotaUser'
paths./users/{userId}/blogs.parameters[6].$ref: '#/parameters/userIp'
schemes.length: 1
schemes[0]: https
securityDefinitions.Oauth2.authorizationUrl: https://accounts.google.com/o/oauth2/auth
securityDefinitions.Oauth2.description: Oauth 2.0 authentication
securityDefinitions.Oauth2.flow: implicit
securityDefinitions.Oauth2.scopes.https://www.googleapis.com/auth/blogger: Manage
  your Blogger account
securityDefinitions.Oauth2.type: oauth2
swagger: "2.0"
tags.length: 5
tags[0].name: blogs
tags[1].name: comments
tags[2].name: pages
tags[3].name: posts
tags[4].name: users
