[[backends]]
  group = "blogger-v2"
  url_pattern = "/blogger/v2/blogs/{blogId}"
  method = "GET"
  host = ["https://www.googleapis.com"]
  whitelist = ["description", "id", "kind", "locale", "locale.country", "locale.language", "locale.variant", "name", "pages", "pages.selfLink", "pages.totalItems", "posts", "posts.selfLink", "posts.totalItems", "published", "selfLink", "updated", "url"]
  concurrent_calls = 1
  [backends.extra_config]
    provider = "googleapis.com"
    description = "API for access to the data within Blogger."
    version = "v2"
    slug = "blogger-v2-blogger-v2-blogs-blogid"
    schemes = ["https"]
    hosts = ["https://www.googleapis.com"]
    topics = ["social"]
    [backends.extra_config.mapping]
      country = "country"
      description = "description"
      id = "id"
      kind = "kind"
      language = "language"
      locale = "locale"
      name = "name"
      pages = "pages"
      posts = "posts"
      published = "published"
      selfLink = "selfLink"
      totalItems = "totalItems"
      updated = "updated"
      url = "url"
      variant = "variant"

[[backends]]
  group = "blogger-v2"
  url_pattern = "/blogger/v2/blogs/{blogId}/pages"
  method = "GET"
  host = ["https://www.googleapis.com"]
  whitelist = ["items", "kind"]
  concurrent_calls = 1
  [backends.extra_config]
    provider = "googleapis.com"
    description = "API for access to the data within Blogger."
    version = "v2"
    slug = "blogger-v2-blogger-v2-blogs-blogid-pages"
    schemes = ["https"]
    hosts = ["https://www.googleapis.com"]
    topics = ["social"]
    [backends.extra_config.mapping]
      items = "items"
      kind = "kind"

[[backends]]
  group = "blogger-v2"
  url_pattern = "/blogger/v2/blogs/{blogId}/pages/{pageId}"
  method = "GET"
  host = ["https://www.googleapis.com"]
  whitelist = ["author", "author.displayName", "author.id", "author.image", "author.image.url", "author.url", "blog", "blog.id", "content", "id", "kind", "published", "selfLink", "title", "updated", "url"]
  concurrent_calls = 1
  [backends.extra_config]
    provider = "googleapis.com"
    description = "API for access to the data within Blogger."
    version = "v2"
    slug = "blogger-v2-blogger-v2-blogs-blogid-pages-pageid"
    schemes = ["https"]
    hosts = ["https://www.googleapis.com"]
    topics = ["social"]
    [backends.extra_config.mapping]
      author = "author"
      blog = "blog"
      content = "content"
      displayName = "displayName"
      id = "id"
      image = "image"
      kind = "kind"
      published = "published"
      selfLink = "selfLink"
      title = "title"
      updated = "updated"
      url = "url"

[[backends]]
  group = "blogger-v2"
  url_pattern = "/blogger/v2/blogs/{blogId}/posts"
  method = "GET"
  host = ["https://www.googleapis.com"]
  whitelist = ["items", "kind", "nextPageToken", "prevPageToken"]
  concurrent_calls = 1
  [backends.extra_config]
    provider = "googleapis.com"
    description = "API for access to the data within Blogger."
    version = "v2"
    slug = "blogger-v2-blogger-v2-blogs-blogid-posts"
    schemes = ["https"]
    hosts = ["https://www.googleapis.com"]
    topics = ["social"]
    [backends.extra_config.mapping]
      items = "items"
      kind = "kind"
      nextPageToken = "nextPageToken"
      prevPageToken = "prevPageToken"

[[backends]]
  group = "blogger-v2"
  url_pattern = "/blogger/v2/blogs/{blogId}/posts/{postId}"
  method = "GET"
  host = ["https://www.googleapis.com"]
  whitelist = ["author", "author.displayName", "author.id", "author.image", "author.image.url", "author.url", "blog", "blog.id", "content", "id", "kind", "labels", "published", "replies", "replies.selfLink", "replies.totalItems", "selfLink", "title", "updated", "url"]
  concurrent_calls = 1
  [backends.extra_config]
    provider = "googleapis.com"
    description = "API for access to the data within Blogger."
    version = "v2"
    slug = "blogger-v2-blogger-v2-blogs-blogid-posts-postid"
    schemes = ["https"]
    hosts = ["https://www.googleapis.com"]
    topics = ["social"]
    [backends.extra_config.mapping]
      author = "author"
      blog = "blog"
      content = "content"
      displayName = "displayName"
      id = "id"
      image = "image"
      kind = "kind"
      labels = "labels"
      published = "published"
      replies = "replies"
      selfLink = "selfLink"
      title = "title"
      totalItems = "totalItems"
      updated = "updated"
      url = "url"

[[backends]]
  group = "blogger-v2"
  url_pattern = "/blogger/v2/blogs/{blogId}/posts/{postId}/comments"
  method = "GET"
  host = ["https://www.googleapis.com"]
  whitelist = ["items", "kind", "nextPageToken", "prevPageToken"]
  concurrent_calls = 1
  [backends.extra_config]
    provider = "googleapis.com"
    description = "API for access to the data within Blogger."
    version = "v2"
    slug = "blogger-v2-blogger-v2-blogs-blogid-posts-postid-comments"
    schemes = ["https"]
    hosts = ["https://www.googleapis.com"]
    topics = ["social"]
    [backends.extra_config.mapping]
      items = "items"
      kind = "kind"
      nextPageToken = "nextPageToken"
      prevPageToken = "prevPageToken"

[[backends]]
  group = "blogger-v2"
  url_pattern = "/blogger/v2/blogs/{blogId}/posts/{postId}/comments/{commentId}"
  method = "GET"
  host = ["https://www.googleapis.com"]
  whitelist = ["author", "author.displayName", "author.id", "author.image", "author.image.url", "author.url", "blog", "blog.id", "content", "id", "inReplyTo", "inReplyTo.id", "kind", "post", "post.id", "published", "selfLink", "updated"]
  concurrent_calls = 1
  [backends.extra_config]
    provider = "googleapis.com"
    description = "API for access to the data within Blogger."
    version = "v2"
    slug = "blogger-v2-blogger-v2-blogs-blogid-posts-postid-comments-commentid"
    schemes = ["https"]
    hosts = ["https://www.googleapis.com"]
    topics = ["social"]
    [backends.extra_config.mapping]
      author = "author"
      blog = "blog"
      content = "content"
      displayName = "displayName"
      id = "id"
      image = "image"
      inReplyTo = "inReplyTo"
      kind = "kind"
      post = "post"
      published = "published"
      selfLink = "selfLink"
      updated = "updated"
      url = "url"

[[backends]]
  group = "blogger-v2"
  url_pattern = "/blogger/v2/users/{userId}"
  method = "GET"
  host = ["https://www.googleapis.com"]
  whitelist = ["about", "blogs", "blogs.selfLink", "created", "displayName", "id", "kind", "locale", "locale.country", "locale.language", "locale.variant", "selfLink", "url"]
  concurrent_calls = 1
  [backends.extra_config]
    provider = "googleapis.com"
    description = "API for access to the data within Blogger."
    version = "v2"
    slug = "blogger-v2-blogger-v2-users-userid"
    schemes = ["https"]
    hosts = ["https://www.googleapis.com"]
    topics = ["social"]
    [backends.extra_config.mapping]
      about = "about"
      blogs = "blogs"
      country = "country"
      created = "created"
      displayName = "displayName"
      id = "id"
      kind = "kind"
      language = "language"
      locale = "locale"
      selfLink = "selfLink"
      url = "url"
      variant = "variant"

[[backends]]
  group = "blogger-v2"
  url_pattern = "/blogger/v2/users/{userId}/blogs"
  method = "GET"
  host = ["https://www.googleapis.com"]
  whitelist = ["items", "kind"]
  concurrent_calls = 1
  [backends.extra_config]
    provider = "googleapis.com"
    description = "API for access to the data within Blogger."
    version = "v2"
    slug = "blogger-v2-blogger-v2-users-userid-blogs"
    schemes = ["https"]
    hosts = ["https://www.googleapis.com"]
    topics = ["social"]
    [backends.extra_config.mapping]
      items = "items"
      kind = "kind"
