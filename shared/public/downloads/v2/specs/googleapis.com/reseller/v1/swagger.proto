syntax = "proto3";

import "google/protobuf/empty.proto";

import "google/api/annotations.proto";

package enterpriseappsreseller;

message PostCustomersRequest {
    alt alt = 1;
    Customer body = 2;
    // The customerAuthToken query string is required when creating a resold account that transfers a direct customer's subscription or transfers another reseller customer's subscription to your reseller management. This is a hexadecimal authentication token needed to complete the subscription transfer. For more information, see the administrator help center.
    string customerAuthToken = 3;
    string fields = 4;
    string key = 5;
    string oauth_token = 6;
    boolean prettyPrint = 7;
    string quotaUser = 8;
    string userIp = 9;
}

message GetCustomersCustomerIdRequest {
    alt alt = 1;
    // Either the customer's primary domain name or the customer's unique identifier. If using the domain name, we do not recommend using a customerId as a key for persistent data. If the domain name for a customerId is changed, the Google system automatically updates.
    string customerId = 2;
    string fields = 3;
    string key = 4;
    string oauth_token = 5;
    boolean prettyPrint = 6;
    string quotaUser = 7;
    string userIp = 8;
}

message PutCustomersCustomerIdRequest {
    alt alt = 1;
    Customer body = 2;
    // Either the customer's primary domain name or the customer's unique identifier. If using the domain name, we do not recommend using a customerId as a key for persistent data. If the domain name for a customerId is changed, the Google system automatically updates.
    string customerId = 3;
    string fields = 4;
    string key = 5;
    string oauth_token = 6;
    boolean prettyPrint = 7;
    string quotaUser = 8;
    string userIp = 9;
}

message PostCustomersCustomerIdSubscriptionsRequest {
    alt alt = 1;
    Subscription body = 2;
    // The customerAuthToken query string is required when creating a resold account that transfers a direct customer's subscription or transfers another reseller customer's subscription to your reseller management. This is a hexadecimal authentication token needed to complete the subscription transfer. For more information, see the administrator help center.
    string customerAuthToken = 3;
    // Either the customer's primary domain name or the customer's unique identifier. If using the domain name, we do not recommend using a customerId as a key for persistent data. If the domain name for a customerId is changed, the Google system automatically updates.
    string customerId = 4;
    string fields = 5;
    string key = 6;
    string oauth_token = 7;
    boolean prettyPrint = 8;
    string quotaUser = 9;
    string userIp = 10;
}

message GetCustomersCustomerIdSubscriptionsSubscriptionIdRequest {
    alt alt = 1;
    // Either the customer's primary domain name or the customer's unique identifier. If using the domain name, we do not recommend using a customerId as a key for persistent data. If the domain name for a customerId is changed, the Google system automatically updates.
    string customerId = 2;
    string fields = 3;
    string key = 4;
    string oauth_token = 5;
    boolean prettyPrint = 6;
    string quotaUser = 7;
    // This is a required property. The subscriptionId is the subscription identifier and is unique for each customer. Since a subscriptionId changes when a subscription is updated, we recommend to not use this ID as a key for persistent data. And the subscriptionId can be found using the retrieve all reseller subscriptions method.
    string subscriptionId = 8;
    string userIp = 9;
}

message DeleteCustomersCustomerIdSubscriptionsSubscriptionIdRequest {
    alt alt = 1;
    // Either the customer's primary domain name or the customer's unique identifier. If using the domain name, we do not recommend using a customerId as a key for persistent data. If the domain name for a customerId is changed, the Google system automatically updates.
    string customerId = 2;
    // The deletionType query string enables the cancellation, downgrade, or suspension of a subscription.
    enum DeleteCustomersCustomerIdSubscriptionsSubscriptionIdRequest_DeletionType {
        DELETECUSTOMERSCUSTOMERIDSUBSCRIPTIONSSUBSCRIPTIONIDREQUEST_DELETIONTYPE_CANCEL = 0;
        DELETECUSTOMERSCUSTOMERIDSUBSCRIPTIONSSUBSCRIPTIONIDREQUEST_DELETIONTYPE_DOWNGRADE = 1;
        DELETECUSTOMERSCUSTOMERIDSUBSCRIPTIONSSUBSCRIPTIONIDREQUEST_DELETIONTYPE_SUSPEND = 2;
        DELETECUSTOMERSCUSTOMERIDSUBSCRIPTIONSSUBSCRIPTIONIDREQUEST_DELETIONTYPE_TRANSFER_TO_DIRECT = 3;
    }
    DeleteCustomersCustomerIdSubscriptionsSubscriptionIdRequest_DeletionType deletionType = 3;
    string fields = 4;
    string key = 5;
    string oauth_token = 6;
    boolean prettyPrint = 7;
    string quotaUser = 8;
    // This is a required property. The subscriptionId is the subscription identifier and is unique for each customer. Since a subscriptionId changes when a subscription is updated, we recommend to not use this ID as a key for persistent data. And the subscriptionId can be found using the retrieve all reseller subscriptions method.
    string subscriptionId = 9;
    string userIp = 10;
}

message PostCustomersCustomerIdSubscriptionsSubscriptionIdActivateRequest {
    alt alt = 1;
    // Either the customer's primary domain name or the customer's unique identifier. If using the domain name, we do not recommend using a customerId as a key for persistent data. If the domain name for a customerId is changed, the Google system automatically updates.
    string customerId = 2;
    string fields = 3;
    string key = 4;
    string oauth_token = 5;
    boolean prettyPrint = 6;
    string quotaUser = 7;
    // This is a required property. The subscriptionId is the subscription identifier and is unique for each customer. Since a subscriptionId changes when a subscription is updated, we recommend to not use this ID as a key for persistent data. And the subscriptionId can be found using the retrieve all reseller subscriptions method.
    string subscriptionId = 8;
    string userIp = 9;
}

message PostCustomersCustomerIdSubscriptionsSubscriptionIdChangePlanRequest {
    alt alt = 1;
    ChangePlanRequest body = 2;
    // Either the customer's primary domain name or the customer's unique identifier. If using the domain name, we do not recommend using a customerId as a key for persistent data. If the domain name for a customerId is changed, the Google system automatically updates.
    string customerId = 3;
    string fields = 4;
    string key = 5;
    string oauth_token = 6;
    boolean prettyPrint = 7;
    string quotaUser = 8;
    // This is a required property. The subscriptionId is the subscription identifier and is unique for each customer. Since a subscriptionId changes when a subscription is updated, we recommend to not use this ID as a key for persistent data. And the subscriptionId can be found using the retrieve all reseller subscriptions method.
    string subscriptionId = 9;
    string userIp = 10;
}

message PostCustomersCustomerIdSubscriptionsSubscriptionIdChangeRenewalSettingsRequest {
    alt alt = 1;
    RenewalSettings body = 2;
    // Either the customer's primary domain name or the customer's unique identifier. If using the domain name, we do not recommend using a customerId as a key for persistent data. If the domain name for a customerId is changed, the Google system automatically updates.
    string customerId = 3;
    string fields = 4;
    string key = 5;
    string oauth_token = 6;
    boolean prettyPrint = 7;
    string quotaUser = 8;
    // This is a required property. The subscriptionId is the subscription identifier and is unique for each customer. Since a subscriptionId changes when a subscription is updated, we recommend to not use this ID as a key for persistent data. And the subscriptionId can be found using the retrieve all reseller subscriptions method.
    string subscriptionId = 9;
    string userIp = 10;
}

message PostCustomersCustomerIdSubscriptionsSubscriptionIdChangeSeatsRequest {
    alt alt = 1;
    Seats body = 2;
    // Either the customer's primary domain name or the customer's unique identifier. If using the domain name, we do not recommend using a customerId as a key for persistent data. If the domain name for a customerId is changed, the Google system automatically updates.
    string customerId = 3;
    string fields = 4;
    string key = 5;
    string oauth_token = 6;
    boolean prettyPrint = 7;
    string quotaUser = 8;
    // This is a required property. The subscriptionId is the subscription identifier and is unique for each customer. Since a subscriptionId changes when a subscription is updated, we recommend to not use this ID as a key for persistent data. And the subscriptionId can be found using the retrieve all reseller subscriptions method.
    string subscriptionId = 9;
    string userIp = 10;
}

message PostCustomersCustomerIdSubscriptionsSubscriptionIdStartPaidServiceRequest {
    alt alt = 1;
    // Either the customer's primary domain name or the customer's unique identifier. If using the domain name, we do not recommend using a customerId as a key for persistent data. If the domain name for a customerId is changed, the Google system automatically updates.
    string customerId = 2;
    string fields = 3;
    string key = 4;
    string oauth_token = 5;
    boolean prettyPrint = 6;
    string quotaUser = 7;
    // This is a required property. The subscriptionId is the subscription identifier and is unique for each customer. Since a subscriptionId changes when a subscription is updated, we recommend to not use this ID as a key for persistent data. And the subscriptionId can be found using the retrieve all reseller subscriptions method.
    string subscriptionId = 8;
    string userIp = 9;
}

message PostCustomersCustomerIdSubscriptionsSubscriptionIdSuspendRequest {
    alt alt = 1;
    // Either the customer's primary domain name or the customer's unique identifier. If using the domain name, we do not recommend using a customerId as a key for persistent data. If the domain name for a customerId is changed, the Google system automatically updates.
    string customerId = 2;
    string fields = 3;
    string key = 4;
    string oauth_token = 5;
    boolean prettyPrint = 6;
    string quotaUser = 7;
    // This is a required property. The subscriptionId is the subscription identifier and is unique for each customer. Since a subscriptionId changes when a subscription is updated, we recommend to not use this ID as a key for persistent data. And the subscriptionId can be found using the retrieve all reseller subscriptions method.
    string subscriptionId = 8;
    string userIp = 9;
}

message GetResellernotifyGetwatchdetailsRequest {
    alt alt = 1;
    string fields = 2;
    string key = 3;
    string oauth_token = 4;
    boolean prettyPrint = 5;
    string quotaUser = 6;
    string userIp = 7;
}

message PostResellernotifyRegisterRequest {
    alt alt = 1;
    string fields = 2;
    string key = 3;
    string oauth_token = 4;
    boolean prettyPrint = 5;
    string quotaUser = 6;
    // The service account which will own the created Cloud-PubSub topic.
    string serviceAccountEmailAddress = 7;
    string userIp = 8;
}

message PostResellernotifyUnregisterRequest {
    alt alt = 1;
    string fields = 2;
    string key = 3;
    string oauth_token = 4;
    boolean prettyPrint = 5;
    string quotaUser = 6;
    // The service account which owns the Cloud-PubSub topic.
    string serviceAccountEmailAddress = 7;
    string userIp = 8;
}

message GetSubscriptionsRequest {
    alt alt = 1;
    // The customerAuthToken query string is required when creating a resold account that transfers a direct customer's subscription or transfers another reseller customer's subscription to your reseller management. This is a hexadecimal authentication token needed to complete the subscription transfer. For more information, see the administrator help center.
    string customerAuthToken = 2;
    // Either the customer's primary domain name or the customer's unique identifier. If using the domain name, we do not recommend using a customerId as a key for persistent data. If the domain name for a customerId is changed, the Google system automatically updates.
    string customerId = 3;
    // When retrieving all of your subscriptions and filtering for specific customers, you can enter a prefix for a customer name. Using an example customer group that includes exam.com, example20.com and example.com:  
    // - exa -- Returns all customer names that start with 'exa' which could include exam.com, example20.com, and example.com. A name prefix is similar to using a regular expression's asterisk, exa*. 
    // - example -- Returns example20.com and example.com.
    string customerNamePrefix = 4;
    string fields = 5;
    string key = 6;
    // When retrieving a large list, the maxResults is the maximum number of results per page. The nextPageToken value takes you to the next page. The default is 20.
    int32 maxResults = 7;
    string oauth_token = 8;
    // Token to specify next page in the list
    string pageToken = 9;
    boolean prettyPrint = 10;
    string quotaUser = 11;
    string userIp = 12;
}

message Address {
    // A customer's physical address. An address can be composed of one to three lines. The addressline2 and addressLine3 are optional.
    string addressLine1 = 1;
    // Line 2 of the address.
    string addressLine2 = 2;
    // Line 3 of the address.
    string addressLine3 = 3;
    // The customer contact's name. This is required.
    string contactName = 4;
    // For countryCode information, see the ISO 3166 country code elements. Verify that country is approved for resale of Google products. This property is required when creating a new customer.
    string countryCode = 5;
    // Identifies the resource as a customer address. Value: customers#address
    string kind = 6;
    // An example of a locality value is the city of San Francisco.
    string locality = 7;
    // The company or company division name. This is required.
    string organizationName = 8;
    // A postalCode example is a postal zip code such as 94043. This property is required when creating a new customer.
    string postalCode = 9;
    // An example of a region value is CA for the state of California.
    string region = 10;
}

message ChangePlanRequest {
    // Google-issued code (100 char max) for discounted pricing on subscription plans. Deal code must be included in changePlan request in order to receive discounted rate. This property is optional. If a deal code has already been added to a subscription, this property may be left empty and the existing discounted rate will still apply (if not empty, only provide the deal code that is already present on the subscription). If a deal code has never been added to a subscription and this property is left blank, regular pricing will apply.
    string dealCode = 1;
    // Identifies the resource as a subscription change plan request. Value: subscriptions#changePlanRequest
    string kind = 2;
    // The planName property is required. This is the name of the subscription's payment plan. For more information about the Google payment plans, see API concepts.
    // 
    // Possible values are:  
    // - ANNUAL_MONTHLY_PAY - The annual commitment plan with monthly payments  
    // - ANNUAL_YEARLY_PAY - The annual commitment plan with yearly payments  
    // - FLEXIBLE - The flexible plan  
    // - TRIAL - The 30-day free trial plan
    string planName = 3;
    // This is an optional property. This purchase order (PO) information is for resellers to use for their company tracking usage. If a purchaseOrderId value is given it appears in the API responses and shows up in the invoice. The property accepts up to 80 plain text characters.
    string purchaseOrderId = 4;
    // This is a required property. The seats property is the number of user seat licenses.
    Seats seats = 5;
}

message Customer {
    // Like the "Customer email" in the reseller tools, this email is the secondary contact used if something happens to the customer's service such as service outage or a security issue. This property is required when creating a new customer and should not use the same domain as customerDomain.
    string alternateEmail = 1;
    // The customer's primary domain name string. customerDomain is required when creating a new customer. Do not include the www prefix in the domain when adding a customer.
    string customerDomain = 2;
    // Whether the customer's primary domain has been verified.
    bool customerDomainVerified = 3;
    // This property will always be returned in a response as the unique identifier generated by Google. In a request, this property can be either the primary domain or the unique identifier generated by Google.
    string customerId = 4;
    // Identifies the resource as a customer. Value: reseller#customer
    string kind = 5;
    // Customer contact phone number. This can be continuous numbers, with spaces, etc. But it must be a real phone number and not, for example, "123". See phone  local format conventions.
    string phoneNumber = 6;
    // A customer's address information. Each field has a limit of 255 charcters.
    Address postalAddress = 7;
    // URL to customer's Admin console dashboard. The read-only URL is generated by the API service. This is used if your client application requires the customer to complete a task in the Admin console.
    string resourceUiUrl = 8;
}

message RenewalSettings {
    // Identifies the resource as a subscription renewal setting. Value: subscriptions#renewalSettings
    string kind = 1;
    // Renewal settings for the annual commitment plan. For more detailed information, see renewal options in the administrator help center. When renewing a subscription, the renewalType is a required property.
    string renewalType = 2;
}

message ResellernotifyGetwatchdetailsResponse {
    // List of registered service accounts.
    repeated string serviceAccountEmailAddresses = 1;
    // Topic name of the PubSub
    string topicName = 2;
}

message ResellernotifyResource {
    // Topic name of the PubSub
    string topicName = 1;
}

message Seats {
    // Identifies the resource as a subscription change plan request. Value: subscriptions#seats
    string kind = 1;
    // Read-only field containing the current number of licensed seats for FLEXIBLE Google-Apps subscriptions and secondary subscriptions such as Google-Vault and Drive-storage.
    int32 licensedNumberOfSeats = 2;
    // The maximumNumberOfSeats property is the maximum number of licenses that the customer can purchase. This property applies to plans other than the annual commitment plan. How a user's licenses are managed depends on the subscription's payment plan:  
    // - annual commitment plan (with monthly or yearly payments) — For this plan, a reseller is invoiced on the number of user licenses in the numberOfSeats property. The maximumNumberOfSeats property is a read-only property in the API's response.  
    // - flexible plan — For this plan, a reseller is invoiced on the actual number of users which is capped by the maximumNumberOfSeats. This is the maximum number of user licenses a customer has for user license provisioning. This quantity can be increased up to the maximum limit defined in the reseller's contract. And the minimum quantity is the current number of users in the customer account.  
    // - 30-day free trial plan — A subscription in a 30-day free trial is restricted to maximum 10 seats.
    int32 maximumNumberOfSeats = 3;
    // The numberOfSeats property holds the customer's number of user licenses. How a user's licenses are managed depends on the subscription's plan:  
    // - annual commitment plan (with monthly or yearly pay) — For this plan, a reseller is invoiced on the number of user licenses in the numberOfSeats property. This is the maximum number of user licenses that a reseller's customer can create. The reseller can add more licenses, but once set, the numberOfSeats can not be reduced until renewal. The reseller is invoiced based on the numberOfSeats value regardless of how many of these user licenses are provisioned users.  
    // - flexible plan — For this plan, a reseller is invoiced on the actual number of users which is capped by the maximumNumberOfSeats. The numberOfSeats property is not used in the request or response for flexible plan customers.  
    // - 30-day free trial plan — The numberOfSeats property is not used in the request or response for an account in a 30-day trial.
    int32 numberOfSeats = 4;
}

message Subscription {
    // Read-only field that returns the current billing method for a subscription.
    string billingMethod = 1;
    // The creationTime property is the date when subscription was created. It is in milliseconds using the Epoch format. See an example Epoch converter.
    string creationTime = 2;
    // Primary domain name of the customer
    string customerDomain = 3;
    // This property will always be returned in a response as the unique identifier generated by Google. In a request, this property can be either the primary domain or the unique identifier generated by Google.
    string customerId = 4;
    // Google-issued code (100 char max) for discounted pricing on subscription plans. Deal code must be included in insert requests in order to receive discounted rate. This property is optional, regular pricing applies if left empty.
    string dealCode = 5;
    // Identifies the resource as a Subscription. Value: reseller#subscription
    string kind = 6;
    // The plan property is required. In this version of the API, the G Suite plans are the flexible plan, annual commitment plan, and the 30-day free trial plan. For more information about the API"s payment plans, see the API concepts.
    message Plan {
            // In this version of the API, annual commitment plan's interval is one year.
    message CommitmentInterval {
                    // An annual commitment plan's interval's endTime in milliseconds using the UNIX Epoch format. See an example Epoch converter.
    string endTime = 1;
                    // An annual commitment plan's interval's startTime in milliseconds using UNIX Epoch format. See an example Epoch converter.
    string startTime = 2;
        }
        CommitmentInterval commitmentInterval = 1;
            // The isCommitmentPlan property's boolean value identifies the plan as an annual commitment plan:
    // - true — The subscription's plan is an annual commitment plan.
    // - false — The plan is not an annual commitment plan.
    bool isCommitmentPlan = 2;
            // The planName property is required. This is the name of the subscription's plan. For more information about the Google payment plans, see the API concepts.
    // 
    // Possible values are:  
    // - ANNUAL_MONTHLY_PAY — The annual commitment plan with monthly payments  
    // - ANNUAL_YEARLY_PAY — The annual commitment plan with yearly payments  
    // - FLEXIBLE — The flexible plan  
    // - TRIAL — The 30-day free trial plan. A subscription in trial will be suspended after the 30th free day if no payment plan is assigned. Calling changePlan will assign a payment plan to a trial but will not activate the plan. A trial will automatically begin its assigned payment plan after its 30th free day or immediately after calling startPaidService.
    string planName = 3;
    }
    Plan plan = 7;
    // This is an optional property. This purchase order (PO) information is for resellers to use for their company tracking usage. If a purchaseOrderId value is given it appears in the API responses and shows up in the invoice. The property accepts up to 80 plain text characters.
    string purchaseOrderId = 8;
    // Renewal settings for the annual commitment plan. For more detailed information, see renewal options in the administrator help center.
    RenewalSettings renewalSettings = 9;
    // URL to customer's Subscriptions page in the Admin console. The read-only URL is generated by the API service. This is used if your client application requires the customer to complete a task using the Subscriptions page in the Admin console.
    string resourceUiUrl = 10;
    // This is a required property. The number and limit of user seat licenses in the plan.
    Seats seats = 11;
    // A required property. The skuId is a unique system identifier for a product's SKU assigned to a customer in the subscription. For products and SKUs available in this version of the API, see  Product and SKU IDs.
    string skuId = 12;
    // Read-only external display name for a product's SKU assigned to a customer in the subscription. SKU names are subject to change at Google's discretion. For products and SKUs available in this version of the API, see  Product and SKU IDs.
    string skuName = 13;
    // This is an optional property.
    string status = 14;
    // The subscriptionId is the subscription identifier and is unique for each customer. This is a required property. Since a subscriptionId changes when a subscription is updated, we recommend not using this ID as a key for persistent data. Use the subscriptionId as described in retrieve all reseller subscriptions.
    string subscriptionId = 15;
    // Read-only field containing an enumerable of all the current suspension reasons for a subscription. It is possible for a subscription to have many concurrent, overlapping suspension reasons. A subscription's STATUS is SUSPENDED until all pending suspensions are removed.
    // 
    // Possible options include:  
    // - PENDING_TOS_ACCEPTANCE - The customer has not logged in and accepted the G Suite Resold Terms of Services.  
    // - RENEWAL_WITH_TYPE_CANCEL - The customer's commitment ended and their service was cancelled at the end of their term.  
    // - RESELLER_INITIATED - A manual suspension invoked by a Reseller.  
    // - TRIAL_ENDED - The customer's trial expired without a plan selected.  
    // - OTHER - The customer is suspended for an internal Google reason (e.g. abuse or otherwise).
    repeated string suspensionReasons = 16;
    // Read-only transfer related information for the subscription. For more information, see retrieve transferable subscriptions for a customer.
    message TransferInfo {
            // When inserting a subscription, this is the minimum number of seats listed in the transfer order for this product. For example, if the customer has 20 users, the reseller cannot place a transfer order of 15 seats. The minimum is 20 seats.
    int32 minimumTransferableSeats = 1;
            // The time when transfer token or intent to transfer will expire. The time is in milliseconds using UNIX Epoch format.
    string transferabilityExpirationTime = 2;
    }
    TransferInfo transferInfo = 17;
    // The G Suite annual commitment and flexible payment plans can be in a 30-day free trial. For more information, see the API concepts.
    message TrialSettings {
            // Determines if a subscription's plan is in a 30-day free trial or not:
    // - true — The plan is in trial.
    // - false — The plan is not in trial.
    bool isInTrial = 1;
            // Date when the trial ends. The value is in milliseconds using the UNIX Epoch format. See an example Epoch converter.
    string trialEndTime = 2;
    }
    TrialSettings trialSettings = 18;
}

message Subscriptions {
    // Identifies the resource as a collection of subscriptions. Value: reseller#subscriptions
    string kind = 1;
    // The continuation token, used to page through large result sets. Provide this value in a subsequent request to return the next page of results.
    string nextPageToken = 2;
    // The subscriptions in this page of results.
    repeated Subscription subscriptions = 3;
}

enum Alt {
    JSON = 0;
}

service EnterpriseAppsResellerService {
    // Order a new customer's account.
    rpc PostCustomers(PostCustomersRequest) returns (Customer) {
      option (google.api.http) = {
        post: "/apps/reseller/v1/customers"
        body: "body"
      };
    }
    // Get a customer account.
    rpc GetCustomersCustomerId(GetCustomersCustomerIdRequest) returns (Customer) {
      option (google.api.http) = {
        get: "/apps/reseller/v1/customers/{customerId}"
      };
    }
    // Update a customer account's settings.
    rpc PutCustomersCustomerId(PutCustomersCustomerIdRequest) returns (Customer) {
      option (google.api.http) = {
        put: "/apps/reseller/v1/customers/{customerId}"
        body: "body"
      };
    }
    // Create or transfer a subscription.
    rpc PostCustomersCustomerIdSubscriptions(PostCustomersCustomerIdSubscriptionsRequest) returns (Subscription) {
      option (google.api.http) = {
        post: "/apps/reseller/v1/customers/{customerId}/subscriptions"
        body: "body"
      };
    }
    // Get a specific subscription.
    rpc GetCustomersCustomerIdSubscriptionsSubscriptionId(GetCustomersCustomerIdSubscriptionsSubscriptionIdRequest) returns (Subscription) {
      option (google.api.http) = {
        get: "/apps/reseller/v1/customers/{customerId}/subscriptions/{subscriptionId}"
      };
    }
    // Cancel, suspend or transfer a subscription to direct.
    rpc DeleteCustomersCustomerIdSubscriptionsSubscriptionId(DeleteCustomersCustomerIdSubscriptionsSubscriptionIdRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        delete: "/apps/reseller/v1/customers/{customerId}/subscriptions/{subscriptionId}"
      };
    }
    // Activates a subscription previously suspended by the reseller
    rpc PostCustomersCustomerIdSubscriptionsSubscriptionIdActivate(PostCustomersCustomerIdSubscriptionsSubscriptionIdActivateRequest) returns (Subscription) {
      option (google.api.http) = {
        post: "/apps/reseller/v1/customers/{customerId}/subscriptions/{subscriptionId}/activate"
      };
    }
    // Update a subscription plan. Use this method to update a plan for a 30-day trial or a flexible plan subscription to an annual commitment plan with monthly or yearly payments.
    rpc PostCustomersCustomerIdSubscriptionsSubscriptionIdChangePlan(PostCustomersCustomerIdSubscriptionsSubscriptionIdChangePlanRequest) returns (Subscription) {
      option (google.api.http) = {
        post: "/apps/reseller/v1/customers/{customerId}/subscriptions/{subscriptionId}/changePlan"
        body: "body"
      };
    }
    // Update a user license's renewal settings. This is applicable for accounts with annual commitment plans only.
    rpc PostCustomersCustomerIdSubscriptionsSubscriptionIdChangeRenewalSettings(PostCustomersCustomerIdSubscriptionsSubscriptionIdChangeRenewalSettingsRequest) returns (Subscription) {
      option (google.api.http) = {
        post: "/apps/reseller/v1/customers/{customerId}/subscriptions/{subscriptionId}/changeRenewalSettings"
        body: "body"
      };
    }
    // Update a subscription's user license settings.
    rpc PostCustomersCustomerIdSubscriptionsSubscriptionIdChangeSeats(PostCustomersCustomerIdSubscriptionsSubscriptionIdChangeSeatsRequest) returns (Subscription) {
      option (google.api.http) = {
        post: "/apps/reseller/v1/customers/{customerId}/subscriptions/{subscriptionId}/changeSeats"
        body: "body"
      };
    }
    // Immediately move a 30-day free trial subscription to a paid service subscription.
    rpc PostCustomersCustomerIdSubscriptionsSubscriptionIdStartPaidService(PostCustomersCustomerIdSubscriptionsSubscriptionIdStartPaidServiceRequest) returns (Subscription) {
      option (google.api.http) = {
        post: "/apps/reseller/v1/customers/{customerId}/subscriptions/{subscriptionId}/startPaidService"
      };
    }
    // Suspends an active subscription.
    rpc PostCustomersCustomerIdSubscriptionsSubscriptionIdSuspend(PostCustomersCustomerIdSubscriptionsSubscriptionIdSuspendRequest) returns (Subscription) {
      option (google.api.http) = {
        post: "/apps/reseller/v1/customers/{customerId}/subscriptions/{subscriptionId}/suspend"
      };
    }
    // Returns all the details of the watch corresponding to the reseller.
    rpc GetResellernotifyGetwatchdetails(GetResellernotifyGetwatchdetailsRequest) returns (ResellernotifyGetwatchdetailsResponse) {
      option (google.api.http) = {
        get: "/apps/reseller/v1/resellernotify/getwatchdetails"
      };
    }
    // Registers a Reseller for receiving notifications.
    rpc PostResellernotifyRegister(PostResellernotifyRegisterRequest) returns (ResellernotifyResource) {
      option (google.api.http) = {
        post: "/apps/reseller/v1/resellernotify/register"
      };
    }
    // Unregisters a Reseller for receiving notifications.
    rpc PostResellernotifyUnregister(PostResellernotifyUnregisterRequest) returns (ResellernotifyResource) {
      option (google.api.http) = {
        post: "/apps/reseller/v1/resellernotify/unregister"
      };
    }
    // List of subscriptions managed by the reseller. The list can be all subscriptions, all of a customer's subscriptions, or all of a customer's transferable subscriptions.
    rpc GetSubscriptions(GetSubscriptionsRequest) returns (Subscriptions) {
      option (google.api.http) = {
        get: "/apps/reseller/v1/subscriptions"
      };
    }
}
