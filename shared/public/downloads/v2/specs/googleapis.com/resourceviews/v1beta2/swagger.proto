syntax = "proto3";

import "google/api/annotations.proto";

package googlecomputeengineinstancegroups;

message GetProjectZonesZoneOperationsRequest {
    alt alt = 1;
    string fields = 2;
    // Optional. Filter expression for filtering listed resources.
    string filter = 3;
    string key = 4;
    // Optional. Maximum count of results to be returned. Maximum value is 500 and default value is 500.
    int32 maxResults = 5;
    string oauth_token = 6;
    // Optional. Tag returned by a previous list request truncated by maxResults. Used to continue a previous list request.
    string pageToken = 7;
    boolean prettyPrint = 8;
    // Name of the project scoping this request.
    string project = 9;
    string quotaUser = 10;
    string userIp = 11;
    // Name of the zone scoping this request.
    string zone = 12;
}

message GetProjectZonesZoneOperationsOperationRequest {
    alt alt = 1;
    string fields = 2;
    string key = 3;
    string oauth_token = 4;
    // Name of the operation resource to return.
    string operation = 5;
    boolean prettyPrint = 6;
    // Name of the project scoping this request.
    string project = 7;
    string quotaUser = 8;
    string userIp = 9;
    // Name of the zone scoping this request.
    string zone = 10;
}

message GetProjectZonesZoneResourceViewsRequest {
    alt alt = 1;
    string fields = 2;
    string key = 3;
    // Maximum count of results to be returned. Acceptable values are 0 to 5000, inclusive. (Default: 5000)
    int32 maxResults = 4;
    string oauth_token = 5;
    // Specifies a nextPageToken returned by a previous list request. This token can be used to request the next page of results from a previous list request.
    string pageToken = 6;
    boolean prettyPrint = 7;
    // The project name of the resource view.
    string project = 8;
    string quotaUser = 9;
    string userIp = 10;
    // The zone name of the resource view.
    string zone = 11;
}

message PostProjectZonesZoneResourceViewsRequest {
    alt alt = 1;
    ResourceView body = 2;
    string fields = 3;
    string key = 4;
    string oauth_token = 5;
    boolean prettyPrint = 6;
    // The project name of the resource view.
    string project = 7;
    string quotaUser = 8;
    string userIp = 9;
    // The zone name of the resource view.
    string zone = 10;
}

message GetProjectZonesZoneResourceViewsResourceViewRequest {
    alt alt = 1;
    string fields = 2;
    string key = 3;
    string oauth_token = 4;
    boolean prettyPrint = 5;
    // The project name of the resource view.
    string project = 6;
    string quotaUser = 7;
    // The name of the resource view.
    string resourceView = 8;
    string userIp = 9;
    // The zone name of the resource view.
    string zone = 10;
}

message DeleteProjectZonesZoneResourceViewsResourceViewRequest {
    alt alt = 1;
    string fields = 2;
    string key = 3;
    string oauth_token = 4;
    boolean prettyPrint = 5;
    // The project name of the resource view.
    string project = 6;
    string quotaUser = 7;
    // The name of the resource view.
    string resourceView = 8;
    string userIp = 9;
    // The zone name of the resource view.
    string zone = 10;
}

message PostProjectZonesZoneResourceViewsResourceViewAddResourcesRequest {
    alt alt = 1;
    ZoneViewsAddResourcesRequest body = 2;
    string fields = 3;
    string key = 4;
    string oauth_token = 5;
    boolean prettyPrint = 6;
    // The project name of the resource view.
    string project = 7;
    string quotaUser = 8;
    // The name of the resource view.
    string resourceView = 9;
    string userIp = 10;
    // The zone name of the resource view.
    string zone = 11;
}

message PostProjectZonesZoneResourceViewsResourceViewGetServiceRequest {
    alt alt = 1;
    string fields = 2;
    string key = 3;
    string oauth_token = 4;
    boolean prettyPrint = 5;
    // The project name of the resource view.
    string project = 6;
    string quotaUser = 7;
    // The name of the resource if user wants to get the service information of the resource.
    string resourceName = 8;
    // The name of the resource view.
    string resourceView = 9;
    string userIp = 10;
    // The zone name of the resource view.
    string zone = 11;
}

message PostProjectZonesZoneResourceViewsResourceViewRemoveResourcesRequest {
    alt alt = 1;
    ZoneViewsRemoveResourcesRequest body = 2;
    string fields = 3;
    string key = 4;
    string oauth_token = 5;
    boolean prettyPrint = 6;
    // The project name of the resource view.
    string project = 7;
    string quotaUser = 8;
    // The name of the resource view.
    string resourceView = 9;
    string userIp = 10;
    // The zone name of the resource view.
    string zone = 11;
}

message GetProjectZonesZoneResourceViewsResourceViewResourcesRequest {
    alt alt = 1;
    string fields = 2;
    // The requested format of the return value. It can be URL or URL_PORT. A JSON object will be included in the response based on the format. The default format is NONE, which results in no JSON in the response.
    enum GetProjectZonesZoneResourceViewsResourceViewResourcesRequest_Format {
        GETPROJECTZONESZONERESOURCEVIEWSRESOURCEVIEWRESOURCESREQUEST_FORMAT_NONE = 0;
        GETPROJECTZONESZONERESOURCEVIEWSRESOURCEVIEWRESOURCESREQUEST_FORMAT_URL = 1;
        GETPROJECTZONESZONERESOURCEVIEWSRESOURCEVIEWRESOURCESREQUEST_FORMAT_URL_PORT = 2;
    }
    GetProjectZonesZoneResourceViewsResourceViewResourcesRequest_Format format = 3;
    string key = 4;
    // The state of the instance to list. By default, it lists all instances.
    enum GetProjectZonesZoneResourceViewsResourceViewResourcesRequest_ListState {
        GETPROJECTZONESZONERESOURCEVIEWSRESOURCEVIEWRESOURCESREQUEST_LISTSTATE_ALL = 0;
        GETPROJECTZONESZONERESOURCEVIEWSRESOURCEVIEWRESOURCESREQUEST_LISTSTATE_RUNNING = 1;
    }
    GetProjectZonesZoneResourceViewsResourceViewResourcesRequest_ListState listState = 5;
    // Maximum count of results to be returned. Acceptable values are 0 to 5000, inclusive. (Default: 5000)
    int32 maxResults = 6;
    string oauth_token = 7;
    // Specifies a nextPageToken returned by a previous list request. This token can be used to request the next page of results from a previous list request.
    string pageToken = 8;
    boolean prettyPrint = 9;
    // The project name of the resource view.
    string project = 10;
    string quotaUser = 11;
    // The name of the resource view.
    string resourceView = 12;
    // The service name to return in the response. It is optional and if it is not set, all the service end points will be returned.
    string serviceName = 13;
    string userIp = 14;
    // The zone name of the resource view.
    string zone = 15;
}

message PostProjectZonesZoneResourceViewsResourceViewSetServiceRequest {
    alt alt = 1;
    ZoneViewsSetServiceRequest body = 2;
    string fields = 3;
    string key = 4;
    string oauth_token = 5;
    boolean prettyPrint = 6;
    // The project name of the resource view.
    string project = 7;
    string quotaUser = 8;
    // The name of the resource view.
    string resourceView = 9;
    string userIp = 10;
    // The zone name of the resource view.
    string zone = 11;
}

message Label {
    // Key of the label.
    string key = 1;
    // Value of the label.
    string value = 2;
}

message ListResourceResponseItem {
    // The list of service end points on the resource.
    map<string, array> endpoints = 1;
    // The full URL of the resource.
    string resource = 2;
}

message Operation {
    // [Output only] An optional identifier specified by the client when the mutation was initiated. Must be unique for all operation resources in the project.
    string clientOperationId = 1;
    // [Output Only] The time that this operation was requested, in RFC3339 text format.
    string creationTimestamp = 2;
    // [Output Only] The time that this operation was completed, in RFC3339 text format.
    string endTime = 3;
    // [Output Only] If errors occurred during processing of this operation, this field will be populated.
    message Error {
            // [Output Only] The array of errors encountered while processing this operation.
    message Error {
                    // [Output Only] The error type identifier for this error.
    string code = 1;
                    // [Output Only] Indicates the field in the request which caused the error. This property is optional.
    string location = 2;
                    // [Output Only] An optional, human-readable error message.
    string message = 3;
        }
        repeated Error errors = 1;
    }
    Error error = 4;
    // [Output only] If operation fails, the HTTP error message returned.
    string httpErrorMessage = 5;
    // [Output only] If operation fails, the HTTP error status code returned.
    int32 httpErrorStatusCode = 6;
    // [Output Only] Unique identifier for the resource, generated by the server.
    string id = 7;
    // [Output Only] The time that this operation was requested, in RFC3339 text format.
    string insertTime = 8;
    // [Output only] Type of the resource.
    string kind = 9;
    // [Output Only] Name of the resource.
    string name = 10;
    // [Output only] Type of the operation. Operations include insert, update, and delete.
    string operationType = 11;
    // [Output only] An optional progress indicator that ranges from 0 to 100. There is no requirement that this be linear or support any granularity of operations. This should not be used to guess at when the operation will be complete. This number should be monotonically increasing as the operation progresses.
    int32 progress = 12;
    // [Output Only] URL of the region where the operation resides. Only available when performing regional operations.
    string region = 13;
    // [Output Only] Server-defined fully-qualified URL for this resource.
    string selfLink = 14;
    // [Output Only] The time that this operation was started by the server, in RFC3339 text format.
    string startTime = 15;
    // [Output Only] Status of the operation.
    string status = 16;
    // [Output Only] An optional textual description of the current status of the operation.
    string statusMessage = 17;
    // [Output Only] Unique target ID which identifies a particular incarnation of the target.
    string targetId = 18;
    // [Output only] URL of the resource the operation is mutating.
    string targetLink = 19;
    // [Output Only] User who requested the operation, for example: user@example.com.
    string user = 20;
    // [Output Only] If there are issues with this operation, a warning is returned.
    message Warning {
            // [Output only] The warning type identifier for this warning.
    string code = 1;
            // [Output only] Metadata for this warning in key:value format.
    message Data {
                    // [Output Only] Metadata key for this warning.
    string key = 1;
                    // [Output Only] Metadata value for this warning.
    string value = 2;
        }
        repeated Data data = 2;
            // [Output only] Optional human-readable details for this warning.
    string message = 3;
    }
    repeated Warning warnings = 21;
    // [Output Only] URL of the zone where the operation resides. Only available when performing per-zone operations.
    string zone = 22;
}

message OperationList {
    // Unique identifier for the resource; defined by the server (output only).
    string id = 1;
    // The operation resources.
    repeated Operation items = 2;
    // Type of resource.
    string kind = 3;
    // A token used to continue a truncated list request (output only).
    string nextPageToken = 4;
    // Server defined URL for this resource (output only).
    string selfLink = 5;
}

message ResourceView {
    // The creation time of the resource view.
    string creationTimestamp = 1;
    // The detailed description of the resource view.
    string description = 2;
    // Services endpoint information.
    repeated ServiceEndpoint endpoints = 3;
    // The fingerprint of the service endpoint information.
    string fingerprint = 4;
    // [Output Only] The ID of the resource view.
    string id = 5;
    // Type of the resource.
    string kind = 6;
    // The labels for events.
    repeated Label labels = 7;
    // The name of the resource view.
    string name = 8;
    // The URL of a Compute Engine network to which the resources in the view belong.
    string network = 9;
    // A list of all resources in the resource view.
    repeated string resources = 10;
    // [Output Only] A self-link to the resource view.
    string selfLink = 11;
    // The total number of resources in the resource view.
    uint32 size = 12;
}

message ServiceEndpoint {
    // The name of the service endpoint.
    string name = 1;
    // The port of the service endpoint.
    int32 port = 2;
}

message ZoneViewsAddResourcesRequest {
    // The list of resources to be added.
    repeated string resources = 1;
}

message ZoneViewsGetServiceResponse {
    // The service information.
    repeated ServiceEndpoint endpoints = 1;
    // The fingerprint of the service information.
    string fingerprint = 2;
}

message ZoneViewsList {
    // The result that contains all resource views that meet the criteria.
    repeated ResourceView items = 1;
    // Type of resource.
    string kind = 2;
    // A token used for pagination.
    string nextPageToken = 3;
    // Server defined URL for this resource (output only).
    string selfLink = 4;
}

message ZoneViewsListResourcesResponse {
    // The formatted JSON that is requested by the user.
    repeated ListResourceResponseItem items = 1;
    // The URL of a Compute Engine network to which the resources in the view belong.
    string network = 2;
    // A token used for pagination.
    string nextPageToken = 3;
}

message ZoneViewsRemoveResourcesRequest {
    // The list of resources to be removed.
    repeated string resources = 1;
}

message ZoneViewsSetServiceRequest {
    // The service information to be updated.
    repeated ServiceEndpoint endpoints = 1;
    // Fingerprint of the service information; a hash of the contents. This field is used for optimistic locking when updating the service entries.
    string fingerprint = 2;
    // The name of the resource if user wants to update the service information of the resource.
    string resourceName = 3;
}

enum Alt {
    JSON = 0;
}

service GoogleComputeEngineInstanceGroupsService {
    // Retrieves the list of operation resources contained within the specified zone.
    rpc GetProjectZonesZoneOperations(GetProjectZonesZoneOperationsRequest) returns (OperationList) {
      option (google.api.http) = {
        get: "/resourceviews/v1beta2/projects/{project}/zones/{zone}/operations"
      };
    }
    // Retrieves the specified zone-specific operation resource.
    rpc GetProjectZonesZoneOperationsOperation(GetProjectZonesZoneOperationsOperationRequest) returns (Operation) {
      option (google.api.http) = {
        get: "/resourceviews/v1beta2/projects/{project}/zones/{zone}/operations/{operation}"
      };
    }
    // List resource views.
    rpc GetProjectZonesZoneResourceViews(GetProjectZonesZoneResourceViewsRequest) returns (ZoneViewsList) {
      option (google.api.http) = {
        get: "/resourceviews/v1beta2/projects/{project}/zones/{zone}/resourceViews"
      };
    }
    // Create a resource view.
    rpc PostProjectZonesZoneResourceViews(PostProjectZonesZoneResourceViewsRequest) returns (Operation) {
      option (google.api.http) = {
        post: "/resourceviews/v1beta2/projects/{project}/zones/{zone}/resourceViews"
        body: "body"
      };
    }
    // Get the information of a zonal resource view.
    rpc GetProjectZonesZoneResourceViewsResourceView(GetProjectZonesZoneResourceViewsResourceViewRequest) returns (ResourceView) {
      option (google.api.http) = {
        get: "/resourceviews/v1beta2/projects/{project}/zones/{zone}/resourceViews/{resourceView}"
      };
    }
    // Delete a resource view.
    rpc DeleteProjectZonesZoneResourceViewsResourceView(DeleteProjectZonesZoneResourceViewsResourceViewRequest) returns (Operation) {
      option (google.api.http) = {
        delete: "/resourceviews/v1beta2/projects/{project}/zones/{zone}/resourceViews/{resourceView}"
      };
    }
    // Add resources to the view.
    rpc PostProjectZonesZoneResourceViewsResourceViewAddResources(PostProjectZonesZoneResourceViewsResourceViewAddResourcesRequest) returns (Operation) {
      option (google.api.http) = {
        post: "/resourceviews/v1beta2/projects/{project}/zones/{zone}/resourceViews/{resourceView}/addResources"
        body: "body"
      };
    }
    // Get the service information of a resource view or a resource.
    rpc PostProjectZonesZoneResourceViewsResourceViewGetService(PostProjectZonesZoneResourceViewsResourceViewGetServiceRequest) returns (ZoneViewsGetServiceResponse) {
      option (google.api.http) = {
        post: "/resourceviews/v1beta2/projects/{project}/zones/{zone}/resourceViews/{resourceView}/getService"
      };
    }
    // Remove resources from the view.
    rpc PostProjectZonesZoneResourceViewsResourceViewRemoveResources(PostProjectZonesZoneResourceViewsResourceViewRemoveResourcesRequest) returns (Operation) {
      option (google.api.http) = {
        post: "/resourceviews/v1beta2/projects/{project}/zones/{zone}/resourceViews/{resourceView}/removeResources"
        body: "body"
      };
    }
    // List the resources of the resource view.
    rpc GetProjectZonesZoneResourceViewsResourceViewResources(GetProjectZonesZoneResourceViewsResourceViewResourcesRequest) returns (ZoneViewsListResourcesResponse) {
      option (google.api.http) = {
        get: "/resourceviews/v1beta2/projects/{project}/zones/{zone}/resourceViews/{resourceView}/resources"
      };
    }
    // Update the service information of a resource view or a resource.
    rpc PostProjectZonesZoneResourceViewsResourceViewSetService(PostProjectZonesZoneResourceViewsResourceViewSetServiceRequest) returns (Operation) {
      option (google.api.http) = {
        post: "/resourceviews/v1beta2/projects/{project}/zones/{zone}/resourceViews/{resourceView}/setService"
        body: "body"
      };
    }
}
