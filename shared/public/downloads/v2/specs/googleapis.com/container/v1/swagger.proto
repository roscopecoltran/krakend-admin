syntax = "proto3";

import "google/api/annotations.proto";

package googlecontainerengine;

message GetV1ProjectsProjectIdZonesZoneClustersRequest {
    $.xgafv $.xgafv = 1;
    string access_token = 2;
    alt alt = 3;
    string bearer_token = 4;
    string callback = 5;
    string fields = 6;
    string key = 7;
    string oauth_token = 8;
    boolean pp = 9;
    boolean prettyPrint = 10;
    // The Google Developers Console [project ID or project
    // number](https://support.google.com/cloud/answer/6158840).
    string projectId = 11;
    string quotaUser = 12;
    string uploadType = 13;
    string upload_protocol = 14;
    // The name of the Google Compute Engine
    // [zone](/compute/docs/zones#available) in which the cluster
    // resides, or "-" for all zones.
    string zone = 15;
}

message PostV1ProjectsProjectIdZonesZoneClustersRequest {
    $.xgafv $.xgafv = 1;
    string access_token = 2;
    alt alt = 3;
    string bearer_token = 4;
    CreateClusterRequest body = 5;
    string callback = 6;
    string fields = 7;
    string key = 8;
    string oauth_token = 9;
    boolean pp = 10;
    boolean prettyPrint = 11;
    // The Google Developers Console [project ID or project
    // number](https://support.google.com/cloud/answer/6158840).
    string projectId = 12;
    string quotaUser = 13;
    string uploadType = 14;
    string upload_protocol = 15;
    // The name of the Google Compute Engine
    // [zone](/compute/docs/zones#available) in which the cluster
    // resides.
    string zone = 16;
}

message GetV1ProjectsProjectIdZonesZoneClustersClusterIdRequest {
    $.xgafv $.xgafv = 1;
    string access_token = 2;
    alt alt = 3;
    string bearer_token = 4;
    string callback = 5;
    // The name of the cluster to retrieve.
    string clusterId = 6;
    string fields = 7;
    string key = 8;
    string oauth_token = 9;
    boolean pp = 10;
    boolean prettyPrint = 11;
    // The Google Developers Console [project ID or project
    // number](https://support.google.com/cloud/answer/6158840).
    string projectId = 12;
    string quotaUser = 13;
    string uploadType = 14;
    string upload_protocol = 15;
    // The name of the Google Compute Engine
    // [zone](/compute/docs/zones#available) in which the cluster
    // resides.
    string zone = 16;
}

message PutV1ProjectsProjectIdZonesZoneClustersClusterIdRequest {
    $.xgafv $.xgafv = 1;
    string access_token = 2;
    alt alt = 3;
    string bearer_token = 4;
    UpdateClusterRequest body = 5;
    string callback = 6;
    // The name of the cluster to upgrade.
    string clusterId = 7;
    string fields = 8;
    string key = 9;
    string oauth_token = 10;
    boolean pp = 11;
    boolean prettyPrint = 12;
    // The Google Developers Console [project ID or project
    // number](https://support.google.com/cloud/answer/6158840).
    string projectId = 13;
    string quotaUser = 14;
    string uploadType = 15;
    string upload_protocol = 16;
    // The name of the Google Compute Engine
    // [zone](/compute/docs/zones#available) in which the cluster
    // resides.
    string zone = 17;
}

message DeleteV1ProjectsProjectIdZonesZoneClustersClusterIdRequest {
    $.xgafv $.xgafv = 1;
    string access_token = 2;
    alt alt = 3;
    string bearer_token = 4;
    string callback = 5;
    // The name of the cluster to delete.
    string clusterId = 6;
    string fields = 7;
    string key = 8;
    string oauth_token = 9;
    boolean pp = 10;
    boolean prettyPrint = 11;
    // The Google Developers Console [project ID or project
    // number](https://support.google.com/cloud/answer/6158840).
    string projectId = 12;
    string quotaUser = 13;
    string uploadType = 14;
    string upload_protocol = 15;
    // The name of the Google Compute Engine
    // [zone](/compute/docs/zones#available) in which the cluster
    // resides.
    string zone = 16;
}

message PostV1ProjectsProjectIdZonesZoneClustersClusterIdAddonsRequest {
    $.xgafv $.xgafv = 1;
    string access_token = 2;
    alt alt = 3;
    string bearer_token = 4;
    SetAddonsConfigRequest body = 5;
    string callback = 6;
    // The name of the cluster to upgrade.
    string clusterId = 7;
    string fields = 8;
    string key = 9;
    string oauth_token = 10;
    boolean pp = 11;
    boolean prettyPrint = 12;
    // The Google Developers Console [project ID or project
    // number](https://support.google.com/cloud/answer/6158840).
    string projectId = 13;
    string quotaUser = 14;
    string uploadType = 15;
    string upload_protocol = 16;
    // The name of the Google Compute Engine
    // [zone](/compute/docs/zones#available) in which the cluster
    // resides.
    string zone = 17;
}

message PostV1ProjectsProjectIdZonesZoneClustersClusterIdLegacyAbacRequest {
    $.xgafv $.xgafv = 1;
    string access_token = 2;
    alt alt = 3;
    string bearer_token = 4;
    SetLegacyAbacRequest body = 5;
    string callback = 6;
    // The name of the cluster to update.
    string clusterId = 7;
    string fields = 8;
    string key = 9;
    string oauth_token = 10;
    boolean pp = 11;
    boolean prettyPrint = 12;
    // The Google Developers Console [project ID or project
    // number](https://support.google.com/cloud/answer/6158840).
    string projectId = 13;
    string quotaUser = 14;
    string uploadType = 15;
    string upload_protocol = 16;
    // The name of the Google Compute Engine
    // [zone](/compute/docs/zones#available) in which the cluster
    // resides.
    string zone = 17;
}

message PostV1ProjectsProjectIdZonesZoneClustersClusterIdLocationsRequest {
    $.xgafv $.xgafv = 1;
    string access_token = 2;
    alt alt = 3;
    string bearer_token = 4;
    SetLocationsRequest body = 5;
    string callback = 6;
    // The name of the cluster to upgrade.
    string clusterId = 7;
    string fields = 8;
    string key = 9;
    string oauth_token = 10;
    boolean pp = 11;
    boolean prettyPrint = 12;
    // The Google Developers Console [project ID or project
    // number](https://support.google.com/cloud/answer/6158840).
    string projectId = 13;
    string quotaUser = 14;
    string uploadType = 15;
    string upload_protocol = 16;
    // The name of the Google Compute Engine
    // [zone](/compute/docs/zones#available) in which the cluster
    // resides.
    string zone = 17;
}

message PostV1ProjectsProjectIdZonesZoneClustersClusterIdLoggingRequest {
    $.xgafv $.xgafv = 1;
    string access_token = 2;
    alt alt = 3;
    string bearer_token = 4;
    SetLoggingServiceRequest body = 5;
    string callback = 6;
    // The name of the cluster to upgrade.
    string clusterId = 7;
    string fields = 8;
    string key = 9;
    string oauth_token = 10;
    boolean pp = 11;
    boolean prettyPrint = 12;
    // The Google Developers Console [project ID or project
    // number](https://support.google.com/cloud/answer/6158840).
    string projectId = 13;
    string quotaUser = 14;
    string uploadType = 15;
    string upload_protocol = 16;
    // The name of the Google Compute Engine
    // [zone](/compute/docs/zones#available) in which the cluster
    // resides.
    string zone = 17;
}

message PostV1ProjectsProjectIdZonesZoneClustersClusterIdMasterRequest {
    $.xgafv $.xgafv = 1;
    string access_token = 2;
    alt alt = 3;
    string bearer_token = 4;
    UpdateMasterRequest body = 5;
    string callback = 6;
    // The name of the cluster to upgrade.
    string clusterId = 7;
    string fields = 8;
    string key = 9;
    string oauth_token = 10;
    boolean pp = 11;
    boolean prettyPrint = 12;
    // The Google Developers Console [project ID or project
    // number](https://support.google.com/cloud/answer/6158840).
    string projectId = 13;
    string quotaUser = 14;
    string uploadType = 15;
    string upload_protocol = 16;
    // The name of the Google Compute Engine
    // [zone](/compute/docs/zones#available) in which the cluster
    // resides.
    string zone = 17;
}

message PostV1ProjectsProjectIdZonesZoneClustersClusterIdMonitoringRequest {
    $.xgafv $.xgafv = 1;
    string access_token = 2;
    alt alt = 3;
    string bearer_token = 4;
    SetMonitoringServiceRequest body = 5;
    string callback = 6;
    // The name of the cluster to upgrade.
    string clusterId = 7;
    string fields = 8;
    string key = 9;
    string oauth_token = 10;
    boolean pp = 11;
    boolean prettyPrint = 12;
    // The Google Developers Console [project ID or project
    // number](https://support.google.com/cloud/answer/6158840).
    string projectId = 13;
    string quotaUser = 14;
    string uploadType = 15;
    string upload_protocol = 16;
    // The name of the Google Compute Engine
    // [zone](/compute/docs/zones#available) in which the cluster
    // resides.
    string zone = 17;
}

message GetV1ProjectsProjectIdZonesZoneClustersClusterIdNodePoolsRequest {
    $.xgafv $.xgafv = 1;
    string access_token = 2;
    alt alt = 3;
    string bearer_token = 4;
    string callback = 5;
    // The name of the cluster.
    string clusterId = 6;
    string fields = 7;
    string key = 8;
    string oauth_token = 9;
    boolean pp = 10;
    boolean prettyPrint = 11;
    // The Google Developers Console [project ID or project
    // number](https://developers.google.com/console/help/new/#projectnumber).
    string projectId = 12;
    string quotaUser = 13;
    string uploadType = 14;
    string upload_protocol = 15;
    // The name of the Google Compute Engine
    // [zone](/compute/docs/zones#available) in which the cluster
    // resides.
    string zone = 16;
}

message PostV1ProjectsProjectIdZonesZoneClustersClusterIdNodePoolsRequest {
    $.xgafv $.xgafv = 1;
    string access_token = 2;
    alt alt = 3;
    string bearer_token = 4;
    CreateNodePoolRequest body = 5;
    string callback = 6;
    // The name of the cluster.
    string clusterId = 7;
    string fields = 8;
    string key = 9;
    string oauth_token = 10;
    boolean pp = 11;
    boolean prettyPrint = 12;
    // The Google Developers Console [project ID or project
    // number](https://developers.google.com/console/help/new/#projectnumber).
    string projectId = 13;
    string quotaUser = 14;
    string uploadType = 15;
    string upload_protocol = 16;
    // The name of the Google Compute Engine
    // [zone](/compute/docs/zones#available) in which the cluster
    // resides.
    string zone = 17;
}

message GetV1ProjectsProjectIdZonesZoneClustersClusterIdNodePoolsNodePoolIdRequest {
    $.xgafv $.xgafv = 1;
    string access_token = 2;
    alt alt = 3;
    string bearer_token = 4;
    string callback = 5;
    // The name of the cluster.
    string clusterId = 6;
    string fields = 7;
    string key = 8;
    // The name of the node pool.
    string nodePoolId = 9;
    string oauth_token = 10;
    boolean pp = 11;
    boolean prettyPrint = 12;
    // The Google Developers Console [project ID or project
    // number](https://developers.google.com/console/help/new/#projectnumber).
    string projectId = 13;
    string quotaUser = 14;
    string uploadType = 15;
    string upload_protocol = 16;
    // The name of the Google Compute Engine
    // [zone](/compute/docs/zones#available) in which the cluster
    // resides.
    string zone = 17;
}

message DeleteV1ProjectsProjectIdZonesZoneClustersClusterIdNodePoolsNodePoolIdRequest {
    $.xgafv $.xgafv = 1;
    string access_token = 2;
    alt alt = 3;
    string bearer_token = 4;
    string callback = 5;
    // The name of the cluster.
    string clusterId = 6;
    string fields = 7;
    string key = 8;
    // The name of the node pool to delete.
    string nodePoolId = 9;
    string oauth_token = 10;
    boolean pp = 11;
    boolean prettyPrint = 12;
    // The Google Developers Console [project ID or project
    // number](https://developers.google.com/console/help/new/#projectnumber).
    string projectId = 13;
    string quotaUser = 14;
    string uploadType = 15;
    string upload_protocol = 16;
    // The name of the Google Compute Engine
    // [zone](/compute/docs/zones#available) in which the cluster
    // resides.
    string zone = 17;
}

message PostV1ProjectsProjectIdZonesZoneClustersClusterIdNodePoolsNodePoolIdAutoscalingRequest {
    $.xgafv $.xgafv = 1;
    string access_token = 2;
    alt alt = 3;
    string bearer_token = 4;
    SetNodePoolAutoscalingRequest body = 5;
    string callback = 6;
    // The name of the cluster to upgrade.
    string clusterId = 7;
    string fields = 8;
    string key = 9;
    // The name of the node pool to upgrade.
    string nodePoolId = 10;
    string oauth_token = 11;
    boolean pp = 12;
    boolean prettyPrint = 13;
    // The Google Developers Console [project ID or project
    // number](https://support.google.com/cloud/answer/6158840).
    string projectId = 14;
    string quotaUser = 15;
    string uploadType = 16;
    string upload_protocol = 17;
    // The name of the Google Compute Engine
    // [zone](/compute/docs/zones#available) in which the cluster
    // resides.
    string zone = 18;
}

message PostV1ProjectsProjectIdZonesZoneClustersClusterIdNodePoolsNodePoolIdSetManagementRequest {
    $.xgafv $.xgafv = 1;
    string access_token = 2;
    alt alt = 3;
    string bearer_token = 4;
    SetNodePoolManagementRequest body = 5;
    string callback = 6;
    // The name of the cluster to update.
    string clusterId = 7;
    string fields = 8;
    string key = 9;
    // The name of the node pool to update.
    string nodePoolId = 10;
    string oauth_token = 11;
    boolean pp = 12;
    boolean prettyPrint = 13;
    // The Google Developers Console [project ID or project
    // number](https://support.google.com/cloud/answer/6158840).
    string projectId = 14;
    string quotaUser = 15;
    string uploadType = 16;
    string upload_protocol = 17;
    // The name of the Google Compute Engine
    // [zone](/compute/docs/zones#available) in which the cluster
    // resides.
    string zone = 18;
}

message PostV1ProjectsProjectIdZonesZoneClustersClusterIdNodePoolsNodePoolIdSetSizeRequest {
    $.xgafv $.xgafv = 1;
    string access_token = 2;
    alt alt = 3;
    string bearer_token = 4;
    SetNodePoolSizeRequest body = 5;
    string callback = 6;
    // The name of the cluster to update.
    string clusterId = 7;
    string fields = 8;
    string key = 9;
    // The name of the node pool to update.
    string nodePoolId = 10;
    string oauth_token = 11;
    boolean pp = 12;
    boolean prettyPrint = 13;
    // The Google Developers Console [project ID or project
    // number](https://support.google.com/cloud/answer/6158840).
    string projectId = 14;
    string quotaUser = 15;
    string uploadType = 16;
    string upload_protocol = 17;
    // The name of the Google Compute Engine
    // [zone](/compute/docs/zones#available) in which the cluster
    // resides.
    string zone = 18;
}

message PostV1ProjectsProjectIdZonesZoneClustersClusterIdNodePoolsNodePoolIdUpdateRequest {
    $.xgafv $.xgafv = 1;
    string access_token = 2;
    alt alt = 3;
    string bearer_token = 4;
    UpdateNodePoolRequest body = 5;
    string callback = 6;
    // The name of the cluster to upgrade.
    string clusterId = 7;
    string fields = 8;
    string key = 9;
    // The name of the node pool to upgrade.
    string nodePoolId = 10;
    string oauth_token = 11;
    boolean pp = 12;
    boolean prettyPrint = 13;
    // The Google Developers Console [project ID or project
    // number](https://support.google.com/cloud/answer/6158840).
    string projectId = 14;
    string quotaUser = 15;
    string uploadType = 16;
    string upload_protocol = 17;
    // The name of the Google Compute Engine
    // [zone](/compute/docs/zones#available) in which the cluster
    // resides.
    string zone = 18;
}

message PostV1ProjectsProjectIdZonesZoneClustersClusterIdNodePoolsNodePoolId:RollbackRequest {
    $.xgafv $.xgafv = 1;
    string access_token = 2;
    alt alt = 3;
    string bearer_token = 4;
    RollbackNodePoolUpgradeRequest body = 5;
    string callback = 6;
    // The name of the cluster to rollback.
    string clusterId = 7;
    string fields = 8;
    string key = 9;
    // The name of the node pool to rollback.
    string nodePoolId = 10;
    string oauth_token = 11;
    boolean pp = 12;
    boolean prettyPrint = 13;
    // The Google Developers Console [project ID or project
    // number](https://support.google.com/cloud/answer/6158840).
    string projectId = 14;
    string quotaUser = 15;
    string uploadType = 16;
    string upload_protocol = 17;
    // The name of the Google Compute Engine
    // [zone](/compute/docs/zones#available) in which the cluster
    // resides.
    string zone = 18;
}

message PostV1ProjectsProjectIdZonesZoneClustersClusterIdResourceLabelsRequest {
    $.xgafv $.xgafv = 1;
    string access_token = 2;
    alt alt = 3;
    string bearer_token = 4;
    SetLabelsRequest body = 5;
    string callback = 6;
    // The name of the cluster.
    string clusterId = 7;
    string fields = 8;
    string key = 9;
    string oauth_token = 10;
    boolean pp = 11;
    boolean prettyPrint = 12;
    // The Google Developers Console [project ID or project
    // number](https://developers.google.com/console/help/new/#projectnumber).
    string projectId = 13;
    string quotaUser = 14;
    string uploadType = 15;
    string upload_protocol = 16;
    // The name of the Google Compute Engine
    // [zone](/compute/docs/zones#available) in which the cluster
    // resides.
    string zone = 17;
}

message PostV1ProjectsProjectIdZonesZoneClustersClusterId:CompleteIpRotationRequest {
    $.xgafv $.xgafv = 1;
    string access_token = 2;
    alt alt = 3;
    string bearer_token = 4;
    CompleteIPRotationRequest body = 5;
    string callback = 6;
    // The name of the cluster.
    string clusterId = 7;
    string fields = 8;
    string key = 9;
    string oauth_token = 10;
    boolean pp = 11;
    boolean prettyPrint = 12;
    // The Google Developers Console [project ID or project
    // number](https://developers.google.com/console/help/new/#projectnumber).
    string projectId = 13;
    string quotaUser = 14;
    string uploadType = 15;
    string upload_protocol = 16;
    // The name of the Google Compute Engine
    // [zone](/compute/docs/zones#available) in which the cluster
    // resides.
    string zone = 17;
}

message PostV1ProjectsProjectIdZonesZoneClustersClusterId:SetMaintenancePolicyRequest {
    $.xgafv $.xgafv = 1;
    string access_token = 2;
    alt alt = 3;
    string bearer_token = 4;
    SetMaintenancePolicyRequest body = 5;
    string callback = 6;
    // The name of the cluster to update.
    string clusterId = 7;
    string fields = 8;
    string key = 9;
    string oauth_token = 10;
    boolean pp = 11;
    boolean prettyPrint = 12;
    // The Google Developers Console [project ID or project
    // number](https://support.google.com/cloud/answer/6158840).
    string projectId = 13;
    string quotaUser = 14;
    string uploadType = 15;
    string upload_protocol = 16;
    // The name of the Google Compute Engine
    // [zone](/compute/docs/zones#available) in which the cluster
    // resides.
    string zone = 17;
}

message PostV1ProjectsProjectIdZonesZoneClustersClusterId:SetMasterAuthRequest {
    $.xgafv $.xgafv = 1;
    string access_token = 2;
    alt alt = 3;
    string bearer_token = 4;
    SetMasterAuthRequest body = 5;
    string callback = 6;
    // The name of the cluster to upgrade.
    string clusterId = 7;
    string fields = 8;
    string key = 9;
    string oauth_token = 10;
    boolean pp = 11;
    boolean prettyPrint = 12;
    // The Google Developers Console [project ID or project
    // number](https://support.google.com/cloud/answer/6158840).
    string projectId = 13;
    string quotaUser = 14;
    string uploadType = 15;
    string upload_protocol = 16;
    // The name of the Google Compute Engine
    // [zone](/compute/docs/zones#available) in which the cluster
    // resides.
    string zone = 17;
}

message PostV1ProjectsProjectIdZonesZoneClustersClusterId:SetNetworkPolicyRequest {
    $.xgafv $.xgafv = 1;
    string access_token = 2;
    alt alt = 3;
    string bearer_token = 4;
    SetNetworkPolicyRequest body = 5;
    string callback = 6;
    // The name of the cluster.
    string clusterId = 7;
    string fields = 8;
    string key = 9;
    string oauth_token = 10;
    boolean pp = 11;
    boolean prettyPrint = 12;
    // The Google Developers Console [project ID or project
    // number](https://developers.google.com/console/help/new/#projectnumber).
    string projectId = 13;
    string quotaUser = 14;
    string uploadType = 15;
    string upload_protocol = 16;
    // The name of the Google Compute Engine
    // [zone](/compute/docs/zones#available) in which the cluster
    // resides.
    string zone = 17;
}

message PostV1ProjectsProjectIdZonesZoneClustersClusterId:StartIpRotationRequest {
    $.xgafv $.xgafv = 1;
    string access_token = 2;
    alt alt = 3;
    string bearer_token = 4;
    StartIPRotationRequest body = 5;
    string callback = 6;
    // The name of the cluster.
    string clusterId = 7;
    string fields = 8;
    string key = 9;
    string oauth_token = 10;
    boolean pp = 11;
    boolean prettyPrint = 12;
    // The Google Developers Console [project ID or project
    // number](https://developers.google.com/console/help/new/#projectnumber).
    string projectId = 13;
    string quotaUser = 14;
    string uploadType = 15;
    string upload_protocol = 16;
    // The name of the Google Compute Engine
    // [zone](/compute/docs/zones#available) in which the cluster
    // resides.
    string zone = 17;
}

message GetV1ProjectsProjectIdZonesZoneOperationsRequest {
    $.xgafv $.xgafv = 1;
    string access_token = 2;
    alt alt = 3;
    string bearer_token = 4;
    string callback = 5;
    string fields = 6;
    string key = 7;
    string oauth_token = 8;
    boolean pp = 9;
    boolean prettyPrint = 10;
    // The Google Developers Console [project ID or project
    // number](https://support.google.com/cloud/answer/6158840).
    string projectId = 11;
    string quotaUser = 12;
    string uploadType = 13;
    string upload_protocol = 14;
    // The name of the Google Compute Engine [zone](/compute/docs/zones#available)
    // to return operations for, or `-` for all zones.
    string zone = 15;
}

message GetV1ProjectsProjectIdZonesZoneOperationsOperationIdRequest {
    $.xgafv $.xgafv = 1;
    string access_token = 2;
    alt alt = 3;
    string bearer_token = 4;
    string callback = 5;
    string fields = 6;
    string key = 7;
    string oauth_token = 8;
    // The server-assigned `name` of the operation.
    string operationId = 9;
    boolean pp = 10;
    boolean prettyPrint = 11;
    // The Google Developers Console [project ID or project
    // number](https://support.google.com/cloud/answer/6158840).
    string projectId = 12;
    string quotaUser = 13;
    string uploadType = 14;
    string upload_protocol = 15;
    // The name of the Google Compute Engine
    // [zone](/compute/docs/zones#available) in which the cluster
    // resides.
    string zone = 16;
}

message PostV1ProjectsProjectIdZonesZoneOperationsOperationId:CancelRequest {
    $.xgafv $.xgafv = 1;
    string access_token = 2;
    alt alt = 3;
    string bearer_token = 4;
    CancelOperationRequest body = 5;
    string callback = 6;
    string fields = 7;
    string key = 8;
    string oauth_token = 9;
    // The server-assigned `name` of the operation.
    string operationId = 10;
    boolean pp = 11;
    boolean prettyPrint = 12;
    // The Google Developers Console [project ID or project
    // number](https://support.google.com/cloud/answer/6158840).
    string projectId = 13;
    string quotaUser = 14;
    string uploadType = 15;
    string upload_protocol = 16;
    // The name of the Google Compute Engine
    // [zone](/compute/docs/zones#available) in which the operation resides.
    string zone = 17;
}

message GetV1ProjectsProjectIdZonesZoneServerconfigRequest {
    $.xgafv $.xgafv = 1;
    string access_token = 2;
    alt alt = 3;
    string bearer_token = 4;
    string callback = 5;
    string fields = 6;
    string key = 7;
    string oauth_token = 8;
    boolean pp = 9;
    boolean prettyPrint = 10;
    // The Google Developers Console [project ID or project
    // number](https://support.google.com/cloud/answer/6158840).
    string projectId = 11;
    string quotaUser = 12;
    string uploadType = 13;
    string upload_protocol = 14;
    // The name of the Google Compute Engine [zone](/compute/docs/zones#available)
    // to return operations for.
    string zone = 15;
}

enum $.Xgafv {
    $XGAFV_1 = 0;
    $XGAFV_2 = 1;
}

message AcceleratorConfig {
    // The number of the accelerator cards exposed to an instance.
    string acceleratorCount = 1;
    // The accelerator type resource name. List of supported accelerators
    // [here](/compute/docs/gpus/#Introduction)
    string acceleratorType = 2;
}

message AddonsConfig {
    // Configuration for the horizontal pod autoscaling feature, which
    // increases or decreases the number of replica pods a replication controller
    // has based on the resource usage of the existing pods.
    HorizontalPodAutoscaling horizontalPodAutoscaling = 1;
    // Configuration for the HTTP (L7) load balancing controller addon, which
    // makes it easy to set up HTTP load balancers for services in a cluster.
    HttpLoadBalancing httpLoadBalancing = 2;
    // Configuration for the Kubernetes Dashboard.
    KubernetesDashboard kubernetesDashboard = 3;
    // Configuration for NetworkPolicy. This only tracks whether the addon
    // is enabled or not on the Master, it does not track whether network policy
    // is enabled for the nodes.
    NetworkPolicyConfig networkPolicyConfig = 4;
}

message AutoUpgradeOptions {
    // [Output only] This field is set when upgrades are about to commence
    // with the approximate start time for the upgrades, in
    // [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.
    string autoUpgradeStartTime = 1;
    // [Output only] This field is set when upgrades are about to commence
    // with the description of the upgrade.
    string description = 2;
}

message CancelOperationRequest {
}

message CidrBlock {
    // cidr_block must be specified in CIDR notation.
    string cidrBlock = 1;
    // display_name is an optional field for users to identify CIDR blocks.
    string displayName = 2;
}

message ClientCertificateConfig {
    // Issue a client certificate.
    bool issueClientCertificate = 1;
}

message Cluster {
    // Configurations for the various addons available to run in the cluster.
    AddonsConfig addonsConfig = 1;
    // The IP address range of the container pods in this cluster, in
    // [CIDR](http://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing)
    // notation (e.g. `10.96.0.0/14`). Leave blank to have
    // one automatically chosen or specify a `/14` block in `10.0.0.0/8`.
    string clusterIpv4Cidr = 2;
    // [Output only] The time the cluster was created, in
    // [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.
    string createTime = 3;
    // [Output only] The current software version of the master endpoint.
    string currentMasterVersion = 4;
    // [Output only] The number of nodes currently in the cluster.
    int32 currentNodeCount = 5;
    // [Output only] The current version of the node software components.
    // If they are currently at multiple versions because they're in the process
    // of being upgraded, this reflects the minimum version of all nodes.
    string currentNodeVersion = 6;
    // An optional description of this cluster.
    string description = 7;
    // Kubernetes alpha features are enabled on this cluster. This includes alpha
    // API groups (e.g. v1alpha1) and features that may not be production ready in
    // the kubernetes version of the master and nodes.
    // The cluster has no SLA for uptime and master/node upgrades are disabled.
    // Alpha enabled clusters are automatically deleted thirty days after
    // creation.
    bool enableKubernetesAlpha = 8;
    // [Output only] The IP address of this cluster's master endpoint.
    // The endpoint can be accessed from the internet at
    // `https://username:password@endpoint/`.
    // 
    // See the `masterAuth` property of this resource for username and
    // password information.
    string endpoint = 9;
    // [Output only] The time the cluster will be automatically
    // deleted in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.
    string expireTime = 10;
    // The initial Kubernetes version for this cluster.  Valid versions are those
    // found in validMasterVersions returned by getServerConfig.  The version can
    // be upgraded over time; such upgrades are reflected in
    // currentMasterVersion and currentNodeVersion.
    string initialClusterVersion = 11;
    // The number of nodes to create in this cluster. You must ensure that your
    // Compute Engine <a href="/compute/docs/resource-quotas">resource quota</a>
    // is sufficient for this number of instances. You must also have available
    // firewall and routes quota.
    // For requests, this field should only be used in lieu of a
    // "node_pool" object, since this configuration (along with the
    // "node_config") will be used to create a "NodePool" object with an
    // auto-generated name. Do not use this and a node_pool at the same time.
    int32 initialNodeCount = 12;
    // [Output only] The resource URLs of [instance
    // groups](/compute/docs/instance-groups/) associated with this
    // cluster.
    repeated string instanceGroupUrls = 13;
    // Configuration for cluster IP allocation.
    IPAllocationPolicy ipAllocationPolicy = 14;
    // The fingerprint of the set of labels for this cluster.
    string labelFingerprint = 15;
    // Configuration for the legacy ABAC authorization mode.
    LegacyAbac legacyAbac = 16;
    // The list of Google Compute Engine
    // [locations](/compute/docs/zones#available) in which the cluster's nodes
    // should be located.
    repeated string locations = 17;
    // The logging service the cluster should use to write logs.
    // Currently available options:
    // 
    // * `logging.googleapis.com` - the Google Cloud Logging service.
    // * `none` - no logs will be exported from the cluster.
    // * if left as an empty string,`logging.googleapis.com` will be used.
    string loggingService = 18;
    // Configure the maintenance policy for this cluster.
    MaintenancePolicy maintenancePolicy = 19;
    // The authentication information for accessing the master endpoint.
    MasterAuth masterAuth = 20;
    // Master authorized networks is a Beta feature.
    // The configuration options for master authorized networks feature.
    MasterAuthorizedNetworksConfig masterAuthorizedNetworksConfig = 21;
    // The monitoring service the cluster should use to write metrics.
    // Currently available options:
    // 
    // * `monitoring.googleapis.com` - the Google Cloud Monitoring service.
    // * `none` - no metrics will be exported from the cluster.
    // * if left as an empty string, `monitoring.googleapis.com` will be used.
    string monitoringService = 22;
    // The name of this cluster. The name must be unique within this project
    // and zone, and can be up to 40 characters with the following restrictions:
    // 
    // * Lowercase letters, numbers, and hyphens only.
    // * Must start with a letter.
    // * Must end with a number or a letter.
    string name = 23;
    // The name of the Google Compute Engine
    // [network](/compute/docs/networks-and-firewalls#networks) to which the
    // cluster is connected. If left unspecified, the `default` network
    // will be used.
    string network = 24;
    // Configuration options for the NetworkPolicy feature.
    NetworkPolicy networkPolicy = 25;
    // Parameters used in creating the cluster's nodes.
    // See `nodeConfig` for the description of its properties.
    // For requests, this field should only be used in lieu of a
    // "node_pool" object, since this configuration (along with the
    // "initial_node_count") will be used to create a "NodePool" object with an
    // auto-generated name. Do not use this and a node_pool at the same time.
    // For responses, this field will be populated with the node configuration of
    // the first node pool.
    // 
    // If unspecified, the defaults are used.
    NodeConfig nodeConfig = 26;
    // [Output only] The size of the address space on each node for hosting
    // containers. This is provisioned from within the `container_ipv4_cidr`
    // range.
    int32 nodeIpv4CidrSize = 27;
    // The node pools associated with this cluster.
    // This field should not be set if "node_config" or "initial_node_count" are
    // specified.
    repeated NodePool nodePools = 28;
    // The resource labels for the cluster to use to annotate any related
    // Google Compute Engine resources.
    map<string, string> resourceLabels = 29;
    // [Output only] Server-defined URL for the resource.
    string selfLink = 30;
    // [Output only] The IP address range of the Kubernetes services in
    // this cluster, in
    // [CIDR](http://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing)
    // notation (e.g. `1.2.3.4/29`). Service addresses are
    // typically put in the last `/16` from the container CIDR.
    string servicesIpv4Cidr = 31;
    // [Output only] The current status of this cluster.
    enum Cluster_Statu {
        CLUSTER_STATU_STATUS_UNSPECIFIED = 0;
        CLUSTER_STATU_PROVISIONING = 1;
        CLUSTER_STATU_RUNNING = 2;
        CLUSTER_STATU_RECONCILING = 3;
        CLUSTER_STATU_STOPPING = 4;
        CLUSTER_STATU_ERROR = 5;
    }
    Cluster_Statu status = 32;
    // [Output only] Additional information about the current status of this
    // cluster, if available.
    string statusMessage = 33;
    // The name of the Google Compute Engine
    // [subnetwork](/compute/docs/subnetworks) to which the
    // cluster is connected.
    string subnetwork = 34;
    // [Output only] The name of the Google Compute Engine
    // [zone](/compute/docs/zones#available) in which the cluster
    // resides.
    string zone = 35;
}

message ClusterUpdate {
    // Configurations for the various addons available to run in the cluster.
    AddonsConfig desiredAddonsConfig = 1;
    // The desired image type for the node pool.
    // NOTE: Set the "desired_node_pool" field as well.
    string desiredImageType = 2;
    // The desired list of Google Compute Engine
    // [locations](/compute/docs/zones#available) in which the cluster's nodes
    // should be located. Changing the locations a cluster is in will result
    // in nodes being either created or removed from the cluster, depending on
    // whether locations are being added or removed.
    // 
    // This list must always include the cluster's primary zone.
    repeated string desiredLocations = 3;
    // Master authorized networks is a Beta feature.
    // The desired configuration options for master authorized networks feature.
    MasterAuthorizedNetworksConfig desiredMasterAuthorizedNetworksConfig = 4;
    // The Kubernetes version to change the master to. The only valid value is the
    // latest supported version. Use "-" to have the server automatically select
    // the latest version.
    string desiredMasterVersion = 5;
    // The monitoring service the cluster should use to write metrics.
    // Currently available options:
    // 
    // * "monitoring.googleapis.com" - the Google Cloud Monitoring service
    // * "none" - no metrics will be exported from the cluster
    string desiredMonitoringService = 6;
    // Autoscaler configuration for the node pool specified in
    // desired_node_pool_id. If there is only one pool in the
    // cluster and desired_node_pool_id is not provided then
    // the change applies to that single node pool.
    NodePoolAutoscaling desiredNodePoolAutoscaling = 7;
    // The node pool to be upgraded. This field is mandatory if
    // "desired_node_version", "desired_image_family" or
    // "desired_node_pool_autoscaling" is specified and there is more than one
    // node pool on the cluster.
    string desiredNodePoolId = 8;
    // The Kubernetes version to change the nodes to (typically an
    // upgrade). Use `-` to upgrade to the latest version supported by
    // the server.
    string desiredNodeVersion = 9;
}

message CompleteIPRotationRequest {
}

message CreateClusterRequest {
    // A [cluster
    // resource](/container-engine/reference/rest/v1/projects.zones.clusters)
    Cluster cluster = 1;
}

message CreateNodePoolRequest {
    // The node pool to create.
    NodePool nodePool = 1;
}

message DailyMaintenanceWindow {
    // [Output only] Duration of the time window, automatically chosen to be
    // smallest possible in the given scenario.
    // Duration will be in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt)
    // format "PTnHnMnS".
    string duration = 1;
    // Time within the maintenance window to start the maintenance operations.
    // Time format should be in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt)
    // format "HH:MM”, where HH : [00-23] and MM : [00-59] GMT.
    string startTime = 2;
}

message Empty {
}

message HorizontalPodAutoscaling {
    // Whether the Horizontal Pod Autoscaling feature is enabled in the cluster.
    // When enabled, it ensures that a Heapster pod is running in the cluster,
    // which is also used by the Cloud Monitoring service.
    bool disabled = 1;
}

message HttpLoadBalancing {
    // Whether the HTTP Load Balancing controller is enabled in the cluster.
    // When enabled, it runs a small pod in the cluster that manages the load
    // balancers.
    bool disabled = 1;
}

message IPAllocationPolicy {
    // This field is deprecated, use cluster_ipv4_cidr_block.
    string clusterIpv4Cidr = 1;
    // The IP address range for the cluster pod IPs. If this field is set, then
    // `cluster.cluster_ipv4_cidr` must be left blank.
    // 
    // This field is only applicable when `use_ip_aliases` is true.
    // 
    // Set to blank to have a range chosen with the default size.
    // 
    // Set to /netmask (e.g. `/14`) to have a range chosen with a specific
    // netmask.
    // 
    // Set to a
    // [CIDR](http://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing)
    // notation (e.g. `10.96.0.0/14`) from the RFC-1918 private networks (e.g.
    // `10.0.0.0/8`, `172.16.0.0/12`, `192.168.0.0/16`) to pick a specific range
    // to use.
    string clusterIpv4CidrBlock = 2;
    // The name of the secondary range to be used for the cluster CIDR
    // block.  The secondary range will be used for pod IP
    // addresses. This must be an existing secondary range associated
    // with the cluster subnetwork.
    // 
    // This field is only applicable with use_ip_aliases is true and
    // create_subnetwork is false.
    string clusterSecondaryRangeName = 3;
    // Whether a new subnetwork will be created automatically for the cluster.
    // 
    // This field is only applicable when `use_ip_aliases` is true.
    bool createSubnetwork = 4;
    // This field is deprecated, use node_ipv4_cidr_block.
    string nodeIpv4Cidr = 5;
    // The IP address range of the instance IPs in this cluster.
    // 
    // This is applicable only if `create_subnetwork` is true.
    // 
    // Set to blank to have a range chosen with the default size.
    // 
    // Set to /netmask (e.g. `/14`) to have a range chosen with a specific
    // netmask.
    // 
    // Set to a
    // [CIDR](http://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing)
    // notation (e.g. `10.96.0.0/14`) from the RFC-1918 private networks (e.g.
    // `10.0.0.0/8`, `172.16.0.0/12`, `192.168.0.0/16`) to pick a specific range
    // to use.
    string nodeIpv4CidrBlock = 6;
    // This field is deprecated, use services_ipv4_cidr_block.
    string servicesIpv4Cidr = 7;
    // The IP address range of the services IPs in this cluster. If blank, a range
    // will be automatically chosen with the default size.
    // 
    // This field is only applicable when `use_ip_aliases` is true.
    // 
    // Set to blank to have a range chosen with the default size.
    // 
    // Set to /netmask (e.g. `/14`) to have a range chosen with a specific
    // netmask.
    // 
    // Set to a
    // [CIDR](http://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing)
    // notation (e.g. `10.96.0.0/14`) from the RFC-1918 private networks (e.g.
    // `10.0.0.0/8`, `172.16.0.0/12`, `192.168.0.0/16`) to pick a specific range
    // to use.
    string servicesIpv4CidrBlock = 8;
    // The name of the secondary range to be used as for the services
    // CIDR block.  The secondary range will be used for service
    // ClusterIPs. This must be an existing secondary range associated
    // with the cluster subnetwork.
    // 
    // This field is only applicable with use_ip_aliases is true and
    // create_subnetwork is false.
    string servicesSecondaryRangeName = 9;
    // A custom subnetwork name to be used if `create_subnetwork` is true.  If
    // this field is empty, then an automatic name will be chosen for the new
    // subnetwork.
    string subnetworkName = 10;
    // Whether alias IPs will be used for pod IPs in the cluster.
    bool useIpAliases = 11;
}

message KubernetesDashboard {
    // Whether the Kubernetes Dashboard is enabled for this cluster.
    bool disabled = 1;
}

message LegacyAbac {
    // Whether the ABAC authorizer is enabled for this cluster. When enabled,
    // identities in the system, including service accounts, nodes, and
    // controllers, will have statically granted permissions beyond those
    // provided by the RBAC configuration or IAM.
    bool enabled = 1;
}

message ListClustersResponse {
    // A list of clusters in the project in the specified zone, or
    // across all ones.
    repeated Cluster clusters = 1;
    // If any zones are listed here, the list of clusters returned
    // may be missing those zones.
    repeated string missingZones = 2;
}

message ListNodePoolsResponse {
    // A list of node pools for a cluster.
    repeated NodePool nodePools = 1;
}

message ListOperationsResponse {
    // If any zones are listed here, the list of operations returned
    // may be missing the operations from those zones.
    repeated string missingZones = 1;
    // A list of operations in the project in the specified zone.
    repeated Operation operations = 2;
}

message MaintenancePolicy {
    // Specifies the maintenance window in which maintenance may be performed.
    MaintenanceWindow window = 1;
}

message MaintenanceWindow {
    // DailyMaintenanceWindow specifies a daily maintenance operation window.
    DailyMaintenanceWindow dailyMaintenanceWindow = 1;
}

message MasterAuth {
    // [Output only] Base64-encoded public certificate used by clients to
    // authenticate to the cluster endpoint.
    string clientCertificate = 1;
    // Configuration for client certificate authentication on the cluster.  If no
    // configuration is specified, a client certificate is issued.
    ClientCertificateConfig clientCertificateConfig = 2;
    // [Output only] Base64-encoded private key used by clients to authenticate
    // to the cluster endpoint.
    string clientKey = 3;
    // [Output only] Base64-encoded public certificate that is the root of
    // trust for the cluster.
    string clusterCaCertificate = 4;
    // The password to use for HTTP basic authentication to the master endpoint.
    // Because the master endpoint is open to the Internet, you should create a
    // strong password.  If a password is provided for cluster creation, username
    // must be non-empty.
    string password = 5;
    // The username to use for HTTP basic authentication to the master endpoint.
    // For clusters v1.6.0 and later, you can disable basic authentication by
    // providing an empty username.
    string username = 6;
}

message MasterAuthorizedNetworksConfig {
    // cidr_blocks define up to 10 external networks that could access
    // Kubernetes master through HTTPS.
    repeated CidrBlock cidrBlocks = 1;
    // Whether or not master authorized networks is enabled.
    bool enabled = 2;
}

message NetworkPolicy {
    // Whether network policy is enabled on the cluster.
    bool enabled = 1;
    // The selected network policy provider.
    enum NetworkPolicy_Provider {
        NETWORKPOLICY_PROVIDER_PROVIDER_UNSPECIFIED = 0;
        NETWORKPOLICY_PROVIDER_CALICO = 1;
    }
    NetworkPolicy_Provider provider = 2;
}

message NetworkPolicyConfig {
    // Whether NetworkPolicy is enabled for this cluster.
    bool disabled = 1;
}

message NodeConfig {
    // A list of hardware accelerators to be attached to each node.
    // See https://cloud.google.com/compute/docs/gpus for more information about
    // support for GPUs.
    repeated AcceleratorConfig accelerators = 1;
    // Size of the disk attached to each node, specified in GB.
    // The smallest allowed disk size is 10GB.
    // 
    // If unspecified, the default disk size is 100GB.
    int32 diskSizeGb = 2;
    // The image type to use for this node. Note that for a given image type,
    // the latest version of it will be used.
    string imageType = 3;
    // The map of Kubernetes labels (key/value pairs) to be applied to each node.
    // These will added in addition to any default label(s) that
    // Kubernetes may apply to the node.
    // In case of conflict in label keys, the applied set may differ depending on
    // the Kubernetes version -- it's best to assume the behavior is undefined
    // and conflicts should be avoided.
    // For more information, including usage and the valid values, see:
    // https://kubernetes.io/docs/concepts/overview/working-with-objects/labels
    map<string, string> labels = 4;
    // The number of local SSD disks to be attached to the node.
    // 
    // The limit for this value is dependant upon the maximum number of
    // disks available on a machine per zone. See:
    // https://cloud.google.com/compute/docs/disks/local-ssd#local_ssd_limits
    // for more information.
    int32 localSsdCount = 5;
    // The name of a Google Compute Engine [machine
    // type](/compute/docs/machine-types) (e.g.
    // `n1-standard-1`).
    // 
    // If unspecified, the default machine type is
    // `n1-standard-1`.
    string machineType = 6;
    // The metadata key/value pairs assigned to instances in the cluster.
    // 
    // Keys must conform to the regexp [a-zA-Z0-9-_]+ and be less than 128 bytes
    // in length. These are reflected as part of a URL in the metadata server.
    // Additionally, to avoid ambiguity, keys must not conflict with any other
    // metadata keys for the project or be one of the four reserved keys:
    // "instance-template", "kube-env", "startup-script", and "user-data"
    // 
    // Values are free-form strings, and only have meaning as interpreted by
    // the image running in the instance. The only restriction placed on them is
    // that each value's size must be less than or equal to 32 KB.
    // 
    // The total size of all keys and values must be less than 512 KB.
    map<string, string> metadata = 7;
    // Minimum CPU platform to be used by this instance. The instance may be
    // scheduled on the specified or newer CPU platform. Applicable values are the
    // friendly names of CPU platforms, such as
    // <code>minCpuPlatform: &quot;Intel Haswell&quot;</code> or
    // <code>minCpuPlatform: &quot;Intel Sandy Bridge&quot;</code>. For more
    // information, read [how to specify min CPU platform](https://cloud.google.com/compute/docs/instances/specify-min-cpu-platform)
    string minCpuPlatform = 8;
    // The set of Google API scopes to be made available on all of the
    // node VMs under the "default" service account.
    // 
    // The following scopes are recommended, but not required, and by default are
    // not included:
    // 
    // * `https://www.googleapis.com/auth/compute` is required for mounting
    // persistent storage on your nodes.
    // * `https://www.googleapis.com/auth/devstorage.read_only` is required for
    // communicating with **gcr.io**
    // (the [Google Container Registry](/container-registry/)).
    // 
    // If unspecified, no scopes are added, unless Cloud Logging or Cloud
    // Monitoring are enabled, in which case their required scopes will be added.
    repeated string oauthScopes = 9;
    // Whether the nodes are created as preemptible VM instances. See:
    // https://cloud.google.com/compute/docs/instances/preemptible for more
    // information about preemptible VM instances.
    bool preemptible = 10;
    // The Google Cloud Platform Service Account to be used by the node VMs. If
    // no Service Account is specified, the "default" service account is used.
    string serviceAccount = 11;
    // The list of instance tags applied to all nodes. Tags are used to identify
    // valid sources or targets for network firewalls and are specified by
    // the client during cluster or node pool creation. Each tag within the list
    // must comply with RFC1035.
    repeated string tags = 12;
}

message NodeManagement {
    // A flag that specifies whether the node auto-repair is enabled for the node
    // pool. If enabled, the nodes in this node pool will be monitored and, if
    // they fail health checks too many times, an automatic repair action will be
    // triggered.
    bool autoRepair = 1;
    // A flag that specifies whether node auto-upgrade is enabled for the node
    // pool. If enabled, node auto-upgrade helps keep the nodes in your node pool
    // up to date with the latest release version of Kubernetes.
    bool autoUpgrade = 2;
    // Specifies the Auto Upgrade knobs for the node pool.
    AutoUpgradeOptions upgradeOptions = 3;
}

message NodePool {
    // Autoscaler configuration for this NodePool. Autoscaler is enabled
    // only if a valid configuration is present.
    NodePoolAutoscaling autoscaling = 1;
    // The node configuration of the pool.
    NodeConfig config = 2;
    // The initial node count for the pool. You must ensure that your
    // Compute Engine <a href="/compute/docs/resource-quotas">resource quota</a>
    // is sufficient for this number of instances. You must also have available
    // firewall and routes quota.
    int32 initialNodeCount = 3;
    // [Output only] The resource URLs of [instance
    // groups](/compute/docs/instance-groups/) associated with this
    // node pool.
    repeated string instanceGroupUrls = 4;
    // NodeManagement configuration for this NodePool.
    NodeManagement management = 5;
    // The name of the node pool.
    string name = 6;
    // [Output only] Server-defined URL for the resource.
    string selfLink = 7;
    // [Output only] The status of the nodes in this pool instance.
    enum NodePool_Statu {
        NODEPOOL_STATU_STATUS_UNSPECIFIED = 0;
        NODEPOOL_STATU_PROVISIONING = 1;
        NODEPOOL_STATU_RUNNING = 2;
        NODEPOOL_STATU_RUNNING_WITH_ERROR = 3;
        NODEPOOL_STATU_RECONCILING = 4;
        NODEPOOL_STATU_STOPPING = 5;
        NODEPOOL_STATU_ERROR = 6;
    }
    NodePool_Statu status = 8;
    // [Output only] Additional information about the current status of this
    // node pool instance, if available.
    string statusMessage = 9;
    // [Output only] The version of the Kubernetes of this node.
    string version = 10;
}

message NodePoolAutoscaling {
    // Is autoscaling enabled for this node pool.
    bool enabled = 1;
    // Maximum number of nodes in the NodePool. Must be >= min_node_count. There
    // has to enough quota to scale up the cluster.
    int32 maxNodeCount = 2;
    // Minimum number of nodes in the NodePool. Must be >= 1 and <=
    // max_node_count.
    int32 minNodeCount = 3;
}

message Operation {
    // Detailed operation progress, if available.
    string detail = 1;
    // [Output only] The time the operation completed, in
    // [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.
    string endTime = 2;
    // The server-assigned ID for the operation.
    string name = 3;
    // The operation type.
    enum Operation_OperationType {
        OPERATION_OPERATIONTYPE_TYPE_UNSPECIFIED = 0;
        OPERATION_OPERATIONTYPE_CREATE_CLUSTER = 1;
        OPERATION_OPERATIONTYPE_DELETE_CLUSTER = 2;
        OPERATION_OPERATIONTYPE_UPGRADE_MASTER = 3;
        OPERATION_OPERATIONTYPE_UPGRADE_NODES = 4;
        OPERATION_OPERATIONTYPE_REPAIR_CLUSTER = 5;
        OPERATION_OPERATIONTYPE_UPDATE_CLUSTER = 6;
        OPERATION_OPERATIONTYPE_CREATE_NODE_POOL = 7;
        OPERATION_OPERATIONTYPE_DELETE_NODE_POOL = 8;
        OPERATION_OPERATIONTYPE_SET_NODE_POOL_MANAGEMENT = 9;
        OPERATION_OPERATIONTYPE_AUTO_REPAIR_NODES = 10;
        OPERATION_OPERATIONTYPE_AUTO_UPGRADE_NODES = 11;
        OPERATION_OPERATIONTYPE_SET_LABELS = 12;
        OPERATION_OPERATIONTYPE_SET_MASTER_AUTH = 13;
        OPERATION_OPERATIONTYPE_SET_NODE_POOL_SIZE = 14;
        OPERATION_OPERATIONTYPE_SET_NETWORK_POLICY = 15;
        OPERATION_OPERATIONTYPE_SET_MAINTENANCE_POLICY = 16;
    }
    Operation_OperationType operationType = 4;
    // Server-defined URL for the resource.
    string selfLink = 5;
    // [Output only] The time the operation started, in
    // [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.
    string startTime = 6;
    // The current status of the operation.
    enum Operation_Statu {
        OPERATION_STATU_STATUS_UNSPECIFIED = 0;
        OPERATION_STATU_PENDING = 1;
        OPERATION_STATU_RUNNING = 2;
        OPERATION_STATU_DONE = 3;
        OPERATION_STATU_ABORTING = 4;
    }
    Operation_Statu status = 7;
    // If an error has occurred, a textual description of the error.
    string statusMessage = 8;
    // Server-defined URL for the target of the operation.
    string targetLink = 9;
    // The name of the Google Compute Engine
    // [zone](/compute/docs/zones#available) in which the operation
    // is taking place.
    string zone = 10;
}

message RollbackNodePoolUpgradeRequest {
}

message ServerConfig {
    // Version of Kubernetes the service deploys by default.
    string defaultClusterVersion = 1;
    // Default image type.
    string defaultImageType = 2;
    // List of valid image types.
    repeated string validImageTypes = 3;
    // List of valid master versions.
    repeated string validMasterVersions = 4;
    // List of valid node upgrade target versions.
    repeated string validNodeVersions = 5;
}

message SetAddonsConfigRequest {
    // The desired configurations for the various addons available to run in the
    // cluster.
    AddonsConfig addonsConfig = 1;
}

message SetLabelsRequest {
    // The fingerprint of the previous set of labels for this resource,
    // used to detect conflicts. The fingerprint is initially generated by
    // Container Engine and changes after every request to modify or update
    // labels. You must always provide an up-to-date fingerprint hash when
    // updating or changing labels. Make a <code>get()</code> request to the
    // resource to get the latest fingerprint.
    string labelFingerprint = 1;
    // The labels to set for that cluster.
    map<string, string> resourceLabels = 2;
}

message SetLegacyAbacRequest {
    // Whether ABAC authorization will be enabled in the cluster.
    bool enabled = 1;
}

message SetLocationsRequest {
    // The desired list of Google Compute Engine
    // [locations](/compute/docs/zones#available) in which the cluster's nodes
    // should be located. Changing the locations a cluster is in will result
    // in nodes being either created or removed from the cluster, depending on
    // whether locations are being added or removed.
    // 
    // This list must always include the cluster's primary zone.
    repeated string locations = 1;
}

message SetLoggingServiceRequest {
    // The logging service the cluster should use to write metrics.
    // Currently available options:
    // 
    // * "logging.googleapis.com" - the Google Cloud Logging service
    // * "none" - no metrics will be exported from the cluster
    string loggingService = 1;
}

message SetMaintenancePolicyRequest {
    // The maintenance policy to be set for the cluster. An empty field
    // clears the existing maintenance policy.
    MaintenancePolicy maintenancePolicy = 1;
}

message SetMasterAuthRequest {
    // The exact form of action to be taken on the master auth.
    enum SetMasterAuthRequest_Action {
        SETMASTERAUTHREQUEST_ACTION_UNKNOWN = 0;
        SETMASTERAUTHREQUEST_ACTION_SET_PASSWORD = 1;
        SETMASTERAUTHREQUEST_ACTION_GENERATE_PASSWORD = 2;
        SETMASTERAUTHREQUEST_ACTION_SET_USERNAME = 3;
    }
    SetMasterAuthRequest_Action action = 1;
    // A description of the update.
    MasterAuth update = 2;
}

message SetMonitoringServiceRequest {
    // The monitoring service the cluster should use to write metrics.
    // Currently available options:
    // 
    // * "monitoring.googleapis.com" - the Google Cloud Monitoring service
    // * "none" - no metrics will be exported from the cluster
    string monitoringService = 1;
}

message SetNetworkPolicyRequest {
    // Configuration options for the NetworkPolicy feature.
    NetworkPolicy networkPolicy = 1;
}

message SetNodePoolAutoscalingRequest {
    // Autoscaling configuration for the node pool.
    NodePoolAutoscaling autoscaling = 1;
}

message SetNodePoolManagementRequest {
    // NodeManagement configuration for the node pool.
    NodeManagement management = 1;
}

message SetNodePoolSizeRequest {
    // The desired node count for the pool.
    int32 nodeCount = 1;
}

message StartIPRotationRequest {
}

message UpdateClusterRequest {
    // A description of the update.
    ClusterUpdate update = 1;
}

message UpdateMasterRequest {
    // The Kubernetes version to change the master to. The only valid value is the
    // latest supported version. Use "-" to have the server automatically select
    // the latest version.
    string masterVersion = 1;
}

message UpdateNodePoolRequest {
    // The desired image type for the node pool.
    string imageType = 1;
    // The Kubernetes version to change the nodes to (typically an
    // upgrade). Use `-` to upgrade to the latest version supported by
    // the server.
    string nodeVersion = 2;
}

enum Alt {
    JSON = 0;
    MEDIA = 1;
    PROTO = 2;
}

service GoogleContainerEngineService {
    // Lists all clusters owned by a project in either the specified zone or all
    // zones.
    rpc GetV1ProjectsProjectIdZonesZoneClusters(GetV1ProjectsProjectIdZonesZoneClustersRequest) returns (ListClustersResponse) {
      option (google.api.http) = {
        get: "//v1/projects/{projectId}/zones/{zone}/clusters"
      };
    }
    // Creates a cluster, consisting of the specified number and type of Google
    // Compute Engine instances.
    // 
    // By default, the cluster is created in the project's
    // [default network](/compute/docs/networks-and-firewalls#networks).
    // 
    // One firewall is added for the cluster. After cluster creation,
    // the cluster creates routes for each node to allow the containers
    // on that node to communicate with all other instances in the
    // cluster.
    // 
    // Finally, an entry is added to the project's global metadata indicating
    // which CIDR range is being used by the cluster.
    rpc PostV1ProjectsProjectIdZonesZoneClusters(PostV1ProjectsProjectIdZonesZoneClustersRequest) returns (Operation) {
      option (google.api.http) = {
        post: "//v1/projects/{projectId}/zones/{zone}/clusters"
        body: "body"
      };
    }
    // Gets the details of a specific cluster.
    rpc GetV1ProjectsProjectIdZonesZoneClustersClusterId(GetV1ProjectsProjectIdZonesZoneClustersClusterIdRequest) returns (Cluster) {
      option (google.api.http) = {
        get: "//v1/projects/{projectId}/zones/{zone}/clusters/{clusterId}"
      };
    }
    // Updates the settings of a specific cluster.
    rpc PutV1ProjectsProjectIdZonesZoneClustersClusterId(PutV1ProjectsProjectIdZonesZoneClustersClusterIdRequest) returns (Operation) {
      option (google.api.http) = {
        put: "//v1/projects/{projectId}/zones/{zone}/clusters/{clusterId}"
        body: "body"
      };
    }
    // Deletes the cluster, including the Kubernetes endpoint and all worker
    // nodes.
    // 
    // Firewalls and routes that were configured during cluster creation
    // are also deleted.
    // 
    // Other Google Compute Engine resources that might be in use by the cluster
    // (e.g. load balancer resources) will not be deleted if they weren't present
    // at the initial create time.
    rpc DeleteV1ProjectsProjectIdZonesZoneClustersClusterId(DeleteV1ProjectsProjectIdZonesZoneClustersClusterIdRequest) returns (Operation) {
      option (google.api.http) = {
        delete: "//v1/projects/{projectId}/zones/{zone}/clusters/{clusterId}"
      };
    }
    // Sets the addons of a specific cluster.
    rpc PostV1ProjectsProjectIdZonesZoneClustersClusterIdAddons(PostV1ProjectsProjectIdZonesZoneClustersClusterIdAddonsRequest) returns (Operation) {
      option (google.api.http) = {
        post: "//v1/projects/{projectId}/zones/{zone}/clusters/{clusterId}/addons"
        body: "body"
      };
    }
    // Enables or disables the ABAC authorization mechanism on a cluster.
    rpc PostV1ProjectsProjectIdZonesZoneClustersClusterIdLegacyAbac(PostV1ProjectsProjectIdZonesZoneClustersClusterIdLegacyAbacRequest) returns (Operation) {
      option (google.api.http) = {
        post: "//v1/projects/{projectId}/zones/{zone}/clusters/{clusterId}/legacyAbac"
        body: "body"
      };
    }
    // Sets the locations of a specific cluster.
    rpc PostV1ProjectsProjectIdZonesZoneClustersClusterIdLocations(PostV1ProjectsProjectIdZonesZoneClustersClusterIdLocationsRequest) returns (Operation) {
      option (google.api.http) = {
        post: "//v1/projects/{projectId}/zones/{zone}/clusters/{clusterId}/locations"
        body: "body"
      };
    }
    // Sets the logging service of a specific cluster.
    rpc PostV1ProjectsProjectIdZonesZoneClustersClusterIdLogging(PostV1ProjectsProjectIdZonesZoneClustersClusterIdLoggingRequest) returns (Operation) {
      option (google.api.http) = {
        post: "//v1/projects/{projectId}/zones/{zone}/clusters/{clusterId}/logging"
        body: "body"
      };
    }
    // Updates the master of a specific cluster.
    rpc PostV1ProjectsProjectIdZonesZoneClustersClusterIdMaster(PostV1ProjectsProjectIdZonesZoneClustersClusterIdMasterRequest) returns (Operation) {
      option (google.api.http) = {
        post: "//v1/projects/{projectId}/zones/{zone}/clusters/{clusterId}/master"
        body: "body"
      };
    }
    // Sets the monitoring service of a specific cluster.
    rpc PostV1ProjectsProjectIdZonesZoneClustersClusterIdMonitoring(PostV1ProjectsProjectIdZonesZoneClustersClusterIdMonitoringRequest) returns (Operation) {
      option (google.api.http) = {
        post: "//v1/projects/{projectId}/zones/{zone}/clusters/{clusterId}/monitoring"
        body: "body"
      };
    }
    // Lists the node pools for a cluster.
    rpc GetV1ProjectsProjectIdZonesZoneClustersClusterIdNodePools(GetV1ProjectsProjectIdZonesZoneClustersClusterIdNodePoolsRequest) returns (ListNodePoolsResponse) {
      option (google.api.http) = {
        get: "//v1/projects/{projectId}/zones/{zone}/clusters/{clusterId}/nodePools"
      };
    }
    // Creates a node pool for a cluster.
    rpc PostV1ProjectsProjectIdZonesZoneClustersClusterIdNodePools(PostV1ProjectsProjectIdZonesZoneClustersClusterIdNodePoolsRequest) returns (Operation) {
      option (google.api.http) = {
        post: "//v1/projects/{projectId}/zones/{zone}/clusters/{clusterId}/nodePools"
        body: "body"
      };
    }
    // Retrieves the node pool requested.
    rpc GetV1ProjectsProjectIdZonesZoneClustersClusterIdNodePoolsNodePoolId(GetV1ProjectsProjectIdZonesZoneClustersClusterIdNodePoolsNodePoolIdRequest) returns (NodePool) {
      option (google.api.http) = {
        get: "//v1/projects/{projectId}/zones/{zone}/clusters/{clusterId}/nodePools/{nodePoolId}"
      };
    }
    // Deletes a node pool from a cluster.
    rpc DeleteV1ProjectsProjectIdZonesZoneClustersClusterIdNodePoolsNodePoolId(DeleteV1ProjectsProjectIdZonesZoneClustersClusterIdNodePoolsNodePoolIdRequest) returns (Operation) {
      option (google.api.http) = {
        delete: "//v1/projects/{projectId}/zones/{zone}/clusters/{clusterId}/nodePools/{nodePoolId}"
      };
    }
    // Sets the autoscaling settings of a specific node pool.
    rpc PostV1ProjectsProjectIdZonesZoneClustersClusterIdNodePoolsNodePoolIdAutoscaling(PostV1ProjectsProjectIdZonesZoneClustersClusterIdNodePoolsNodePoolIdAutoscalingRequest) returns (Operation) {
      option (google.api.http) = {
        post: "//v1/projects/{projectId}/zones/{zone}/clusters/{clusterId}/nodePools/{nodePoolId}/autoscaling"
        body: "body"
      };
    }
    // Sets the NodeManagement options for a node pool.
    rpc PostV1ProjectsProjectIdZonesZoneClustersClusterIdNodePoolsNodePoolIdSetManagement(PostV1ProjectsProjectIdZonesZoneClustersClusterIdNodePoolsNodePoolIdSetManagementRequest) returns (Operation) {
      option (google.api.http) = {
        post: "//v1/projects/{projectId}/zones/{zone}/clusters/{clusterId}/nodePools/{nodePoolId}/setManagement"
        body: "body"
      };
    }
    // Sets the size of a specific node pool.
    rpc PostV1ProjectsProjectIdZonesZoneClustersClusterIdNodePoolsNodePoolIdSetSize(PostV1ProjectsProjectIdZonesZoneClustersClusterIdNodePoolsNodePoolIdSetSizeRequest) returns (Operation) {
      option (google.api.http) = {
        post: "//v1/projects/{projectId}/zones/{zone}/clusters/{clusterId}/nodePools/{nodePoolId}/setSize"
        body: "body"
      };
    }
    // Updates the version and/or image type of a specific node pool.
    rpc PostV1ProjectsProjectIdZonesZoneClustersClusterIdNodePoolsNodePoolIdUpdate(PostV1ProjectsProjectIdZonesZoneClustersClusterIdNodePoolsNodePoolIdUpdateRequest) returns (Operation) {
      option (google.api.http) = {
        post: "//v1/projects/{projectId}/zones/{zone}/clusters/{clusterId}/nodePools/{nodePoolId}/update"
        body: "body"
      };
    }
    // Roll back the previously Aborted or Failed NodePool upgrade.
    // This will be an no-op if the last upgrade successfully completed.
    rpc PostV1ProjectsProjectIdZonesZoneClustersClusterIdNodePoolsNodePoolId:Rollback(PostV1ProjectsProjectIdZonesZoneClustersClusterIdNodePoolsNodePoolId:RollbackRequest) returns (Operation) {
      option (google.api.http) = {
        post: "//v1/projects/{projectId}/zones/{zone}/clusters/{clusterId}/nodePools/{nodePoolId}:rollback"
        body: "body"
      };
    }
    // Sets labels on a cluster.
    rpc PostV1ProjectsProjectIdZonesZoneClustersClusterIdResourceLabels(PostV1ProjectsProjectIdZonesZoneClustersClusterIdResourceLabelsRequest) returns (Operation) {
      option (google.api.http) = {
        post: "//v1/projects/{projectId}/zones/{zone}/clusters/{clusterId}/resourceLabels"
        body: "body"
      };
    }
    // Completes master IP rotation.
    rpc PostV1ProjectsProjectIdZonesZoneClustersClusterId:CompleteIpRotation(PostV1ProjectsProjectIdZonesZoneClustersClusterId:CompleteIpRotationRequest) returns (Operation) {
      option (google.api.http) = {
        post: "//v1/projects/{projectId}/zones/{zone}/clusters/{clusterId}:completeIpRotation"
        body: "body"
      };
    }
    // Sets the maintenance policy for a cluster.
    rpc PostV1ProjectsProjectIdZonesZoneClustersClusterId:SetMaintenancePolicy(PostV1ProjectsProjectIdZonesZoneClustersClusterId:SetMaintenancePolicyRequest) returns (Operation) {
      option (google.api.http) = {
        post: "//v1/projects/{projectId}/zones/{zone}/clusters/{clusterId}:setMaintenancePolicy"
        body: "body"
      };
    }
    // Used to set master auth materials. Currently supports :-
    // Changing the admin password of a specific cluster.
    // This can be either via password generation or explicitly set the password.
    rpc PostV1ProjectsProjectIdZonesZoneClustersClusterId:SetMasterAuth(PostV1ProjectsProjectIdZonesZoneClustersClusterId:SetMasterAuthRequest) returns (Operation) {
      option (google.api.http) = {
        post: "//v1/projects/{projectId}/zones/{zone}/clusters/{clusterId}:setMasterAuth"
        body: "body"
      };
    }
    // Enables/Disables Network Policy for a cluster.
    rpc PostV1ProjectsProjectIdZonesZoneClustersClusterId:SetNetworkPolicy(PostV1ProjectsProjectIdZonesZoneClustersClusterId:SetNetworkPolicyRequest) returns (Operation) {
      option (google.api.http) = {
        post: "//v1/projects/{projectId}/zones/{zone}/clusters/{clusterId}:setNetworkPolicy"
        body: "body"
      };
    }
    // Start master IP rotation.
    rpc PostV1ProjectsProjectIdZonesZoneClustersClusterId:StartIpRotation(PostV1ProjectsProjectIdZonesZoneClustersClusterId:StartIpRotationRequest) returns (Operation) {
      option (google.api.http) = {
        post: "//v1/projects/{projectId}/zones/{zone}/clusters/{clusterId}:startIpRotation"
        body: "body"
      };
    }
    // Lists all operations in a project in a specific zone or all zones.
    rpc GetV1ProjectsProjectIdZonesZoneOperations(GetV1ProjectsProjectIdZonesZoneOperationsRequest) returns (ListOperationsResponse) {
      option (google.api.http) = {
        get: "//v1/projects/{projectId}/zones/{zone}/operations"
      };
    }
    // Gets the specified operation.
    rpc GetV1ProjectsProjectIdZonesZoneOperationsOperationId(GetV1ProjectsProjectIdZonesZoneOperationsOperationIdRequest) returns (Operation) {
      option (google.api.http) = {
        get: "//v1/projects/{projectId}/zones/{zone}/operations/{operationId}"
      };
    }
    // Cancels the specified operation.
    rpc PostV1ProjectsProjectIdZonesZoneOperationsOperationId:Cancel(PostV1ProjectsProjectIdZonesZoneOperationsOperationId:CancelRequest) returns (Empty) {
      option (google.api.http) = {
        post: "//v1/projects/{projectId}/zones/{zone}/operations/{operationId}:cancel"
        body: "body"
      };
    }
    // Returns configuration info about the Container Engine service.
    rpc GetV1ProjectsProjectIdZonesZoneServerconfig(GetV1ProjectsProjectIdZonesZoneServerconfigRequest) returns (ServerConfig) {
      option (google.api.http) = {
        get: "//v1/projects/{projectId}/zones/{zone}/serverconfig"
      };
    }
}
