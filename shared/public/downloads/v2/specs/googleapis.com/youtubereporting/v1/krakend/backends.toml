[[backends]]
  group = "youtube-reporting-v1"
  url_pattern = "/v1/jobs"
  method = "GET"
  host = ["https://youtubereporting.googleapis.com"]
  query_string_params = ["includeSystemManaged", "onBehalfOfContentOwner", "pageSize", "pageToken"]
  whitelist = ["jobs", "nextPageToken"]
  concurrent_calls = 1
  [backends.extra_config]
    provider = "googleapis.com"
    description = "Schedules reporting jobs containing your YouTube Analytics data and downloads the resulting bulk data reports in the form of CSV files."
    version = "v1"
    slug = "youtube-reporting-v1-v1-jobs"
    schemes = ["https"]
    hosts = ["https://youtubereporting.googleapis.com"]
    topics = ["analytics", "jobs", "media"]
    [backends.extra_config.mapping]
      jobs = "jobs"
      nextPageToken = "nextPageToken"

[[backends]]
  group = "youtube-reporting-v1"
  url_pattern = "/v1/jobs/{jobId}"
  method = "GET"
  host = ["https://youtubereporting.googleapis.com"]
  url_keys = ["jobId"]
  query_string_params = ["onBehalfOfContentOwner"]
  whitelist = ["createTime", "expireTime", "id", "name", "reportTypeId", "systemManaged"]
  concurrent_calls = 1
  [backends.extra_config]
    provider = "googleapis.com"
    description = "Schedules reporting jobs containing your YouTube Analytics data and downloads the resulting bulk data reports in the form of CSV files."
    version = "v1"
    slug = "youtube-reporting-v1-v1-jobs-jobid"
    schemes = ["https"]
    hosts = ["https://youtubereporting.googleapis.com"]
    topics = ["analytics", "jobs", "media"]
    [backends.extra_config.mapping]
      createTime = "createTime"
      expireTime = "expireTime"
      id = "id"
      name = "name"
      reportTypeId = "reportTypeId"
      systemManaged = "systemManaged"

[[backends]]
  group = "youtube-reporting-v1"
  url_pattern = "/v1/jobs/{jobId}/reports"
  method = "GET"
  host = ["https://youtubereporting.googleapis.com"]
  url_keys = ["jobId"]
  query_string_params = ["createdAfter", "onBehalfOfContentOwner", "pageSize", "pageToken", "startTimeAtOrAfter", "startTimeBefore"]
  whitelist = ["nextPageToken", "reports"]
  concurrent_calls = 1
  [backends.extra_config]
    provider = "googleapis.com"
    description = "Schedules reporting jobs containing your YouTube Analytics data and downloads the resulting bulk data reports in the form of CSV files."
    version = "v1"
    slug = "youtube-reporting-v1-v1-jobs-jobid-reports"
    schemes = ["https"]
    hosts = ["https://youtubereporting.googleapis.com"]
    topics = ["analytics", "jobs", "media"]
    [backends.extra_config.mapping]
      nextPageToken = "nextPageToken"
      reports = "reports"

[[backends]]
  group = "youtube-reporting-v1"
  url_pattern = "/v1/jobs/{jobId}/reports/{reportId}"
  method = "GET"
  host = ["https://youtubereporting.googleapis.com"]
  url_keys = ["jobId", "reportId"]
  query_string_params = ["onBehalfOfContentOwner"]
  whitelist = ["createTime", "downloadUrl", "endTime", "id", "jobExpireTime", "jobId", "startTime"]
  concurrent_calls = 1
  [backends.extra_config]
    provider = "googleapis.com"
    description = "Schedules reporting jobs containing your YouTube Analytics data and downloads the resulting bulk data reports in the form of CSV files."
    version = "v1"
    slug = "youtube-reporting-v1-v1-jobs-jobid-reports-reportid"
    schemes = ["https"]
    hosts = ["https://youtubereporting.googleapis.com"]
    topics = ["analytics", "jobs", "media"]
    [backends.extra_config.mapping]
      createTime = "createTime"
      downloadUrl = "downloadUrl"
      endTime = "endTime"
      id = "id"
      jobExpireTime = "jobExpireTime"
      jobId = "jobId"
      startTime = "startTime"

[[backends]]
  group = "youtube-reporting-v1"
  url_pattern = "/v1/media/{resourceName}"
  method = "GET"
  host = ["https://youtubereporting.googleapis.com"]
  url_keys = ["resourceName"]
  whitelist = ["resourceName"]
  concurrent_calls = 1
  [backends.extra_config]
    provider = "googleapis.com"
    description = "Schedules reporting jobs containing your YouTube Analytics data and downloads the resulting bulk data reports in the form of CSV files."
    version = "v1"
    slug = "youtube-reporting-v1-v1-media-resourcename"
    schemes = ["https"]
    hosts = ["https://youtubereporting.googleapis.com"]
    topics = ["analytics", "media"]
    [backends.extra_config.mapping]
      resourceName = "resourceName"

[[backends]]
  group = "youtube-reporting-v1"
  url_pattern = "/v1/reportTypes"
  method = "GET"
  host = ["https://youtubereporting.googleapis.com"]
  query_string_params = ["includeSystemManaged", "onBehalfOfContentOwner", "pageSize", "pageToken"]
  whitelist = ["nextPageToken", "reportTypes"]
  concurrent_calls = 1
  [backends.extra_config]
    provider = "googleapis.com"
    description = "Schedules reporting jobs containing your YouTube Analytics data and downloads the resulting bulk data reports in the form of CSV files."
    version = "v1"
    slug = "youtube-reporting-v1-v1-reporttypes"
    schemes = ["https"]
    hosts = ["https://youtubereporting.googleapis.com"]
    topics = ["analytics", "media", "reporttypes"]
    [backends.extra_config.mapping]
      nextPageToken = "nextPageToken"
      reportTypes = "reportTypes"
