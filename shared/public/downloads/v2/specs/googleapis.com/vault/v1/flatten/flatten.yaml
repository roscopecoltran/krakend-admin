basePath: /
definitions.AddMatterPermissionsRequest.description: |-
  Add an account with the permission specified. The role cannot be owner.
  If an account already has a role in the matter, it will be
  overwritten.
definitions.AddMatterPermissionsRequest.properties.ccMe.description: |-
  Only relevant if send_emails is true.
  True to CC requestor in the email message.
  False to not CC requestor.
definitions.AddMatterPermissionsRequest.properties.ccMe.type: boolean
definitions.AddMatterPermissionsRequest.properties.matterPermission.$ref: '#/definitions/MatterPermission'
definitions.AddMatterPermissionsRequest.properties.matterPermission.description: The
  MatterPermission to add.
definitions.AddMatterPermissionsRequest.properties.sendEmails.description: |-
  True to send notification email to the added account.
  False to not send notification email.
definitions.AddMatterPermissionsRequest.properties.sendEmails.type: boolean
definitions.AddMatterPermissionsRequest.type: object
definitions.CloseMatterRequest.description: Close a matter by ID.
definitions.CloseMatterRequest.type: object
definitions.CloseMatterResponse.description: Response to a CloseMatterRequest.
definitions.CloseMatterResponse.properties.matter.$ref: '#/definitions/Matter'
definitions.CloseMatterResponse.properties.matter.description: The updated matter,
  with state CLOSED.
definitions.CloseMatterResponse.type: object
definitions.CorpusQuery.description: Corpus specific queries.
definitions.CorpusQuery.properties.driveQuery.$ref: '#/definitions/HeldDriveQuery'
definitions.CorpusQuery.properties.driveQuery.description: Details pertaining to Drive
  holds. If set, corpus must be Drive.
definitions.CorpusQuery.properties.groupsQuery.$ref: '#/definitions/HeldGroupsQuery'
definitions.CorpusQuery.properties.groupsQuery.description: Details pertaining to
  Groups holds. If set, corpus must be Groups.
definitions.CorpusQuery.properties.mailQuery.$ref: '#/definitions/HeldMailQuery'
definitions.CorpusQuery.properties.mailQuery.description: Details pertaining to mail
  holds. If set, corpus must be mail.
definitions.CorpusQuery.type: object
definitions.Empty.description: |-
  A generic empty message that you can re-use to avoid defining duplicated
  empty messages in your APIs. A typical example is to use it as the request
  or the response type of an API method. For instance:

      service Foo {
        rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);
      }

  The JSON representation for `Empty` is empty JSON object `{}`.
definitions.Empty.type: object
definitions.HeldAccount.description: |-
  An account being held in a particular hold. This structure is immutable.
  This can be either a single user or a google group, depending on the corpus.
definitions.HeldAccount.properties.accountId.description: |-
  The account's ID as provided by the
  <a href="https://developers.google.com/admin-sdk/">Admin SDK</a>.
definitions.HeldAccount.properties.accountId.type: string
definitions.HeldAccount.properties.holdTime.description: When the account was put
  on hold.
definitions.HeldAccount.properties.holdTime.format: google-datetime
definitions.HeldAccount.properties.holdTime.type: string
definitions.HeldAccount.type: object
definitions.HeldDriveQuery.description: Query options for drive holds.
definitions.HeldDriveQuery.properties.includeTeamDriveFiles.description: If true,
  include files in Team Drives in the hold.
definitions.HeldDriveQuery.properties.includeTeamDriveFiles.type: boolean
definitions.HeldDriveQuery.type: object
definitions.HeldGroupsQuery.description: Query options for group holds.
definitions.HeldGroupsQuery.properties.endTime.description: |-
  The end date range for the search query. These timestamps are in GMT and
  rounded down to the start of the given date.
definitions.HeldGroupsQuery.properties.endTime.format: google-datetime
definitions.HeldGroupsQuery.properties.endTime.type: string
definitions.HeldGroupsQuery.properties.startTime.description: |-
  The start date range for the search query. These timestamps are in GMT and
  rounded down to the start of the given date.
definitions.HeldGroupsQuery.properties.startTime.format: google-datetime
definitions.HeldGroupsQuery.properties.startTime.type: string
definitions.HeldGroupsQuery.properties.terms.description: The search terms for the
  hold.
definitions.HeldGroupsQuery.properties.terms.type: string
definitions.HeldGroupsQuery.type: object
definitions.HeldMailQuery.description: Query options for mail holds.
definitions.HeldMailQuery.properties.endTime.description: |-
  The end date range for the search query. These timestamps are in GMT and
  rounded down to the start of the given date.
definitions.HeldMailQuery.properties.endTime.format: google-datetime
definitions.HeldMailQuery.properties.endTime.type: string
definitions.HeldMailQuery.properties.startTime.description: |-
  The start date range for the search query. These timestamps are in GMT and
  rounded down to the start of the given date.
definitions.HeldMailQuery.properties.startTime.format: google-datetime
definitions.HeldMailQuery.properties.startTime.type: string
definitions.HeldMailQuery.properties.terms.description: The search terms for the hold.
definitions.HeldMailQuery.properties.terms.type: string
definitions.HeldMailQuery.type: object
definitions.HeldOrgUnit.description: |-
  A organizational unit being held in a particular hold.
  This structure is immutable.
definitions.HeldOrgUnit.properties.holdTime.description: When the org unit was put
  on hold. This property is immutable.
definitions.HeldOrgUnit.properties.holdTime.format: google-datetime
definitions.HeldOrgUnit.properties.holdTime.type: string
definitions.HeldOrgUnit.properties.orgUnitId.description: The org unit's immutable
  ID as provided by the admin SDK.
definitions.HeldOrgUnit.properties.orgUnitId.type: string
definitions.HeldOrgUnit.type: object
definitions.Hold.description: |-
  Represents a hold within Vault. A hold restricts purging of
  artifacts based on the combination of the query and accounts restrictions.
  A hold can be configured to either apply to an explicitly configured set
  of accounts, or can be applied to all members of an organizational unit.
definitions.Hold.properties.accounts.description: |-
  If set, the hold applies to the enumerated accounts and org_unit must be
  empty.
definitions.Hold.properties.accounts.items.$ref: '#/definitions/HeldAccount'
definitions.Hold.properties.accounts.type: array
definitions.Hold.properties.corpus.description: The corpus to be searched.
definitions.Hold.properties.corpus.enum.length: 4
definitions.Hold.properties.corpus.enum[0]: CORPUS_TYPE_UNSPECIFIED
definitions.Hold.properties.corpus.enum[1]: DRIVE
definitions.Hold.properties.corpus.enum[2]: MAIL
definitions.Hold.properties.corpus.enum[3]: GROUPS
definitions.Hold.properties.corpus.type: string
definitions.Hold.properties.holdId.description: The unique immutable ID of the hold.
  Assigned during creation.
definitions.Hold.properties.holdId.type: string
definitions.Hold.properties.name.description: The name of the hold.
definitions.Hold.properties.name.type: string
definitions.Hold.properties.orgUnit.$ref: '#/definitions/HeldOrgUnit'
definitions.Hold.properties.orgUnit.description: |-
  If set, the hold applies to all members of the organizational unit and
  accounts must be empty. This property is mutable. For groups holds,
  set the accounts field.
definitions.Hold.properties.query.$ref: '#/definitions/CorpusQuery'
definitions.Hold.properties.query.description: |-
  The corpus-specific query. If set, the corpusQuery must match corpus
  type.
definitions.Hold.properties.updateTime.description: The last time this hold was modified.
definitions.Hold.properties.updateTime.format: google-datetime
definitions.Hold.properties.updateTime.type: string
definitions.Hold.type: object
definitions.ListHeldAccountsResponse.description: Returns a list of held accounts
  for a hold.
definitions.ListHeldAccountsResponse.properties.accounts.description: The held accounts
  on a hold.
definitions.ListHeldAccountsResponse.properties.accounts.items.$ref: '#/definitions/HeldAccount'
definitions.ListHeldAccountsResponse.properties.accounts.type: array
definitions.ListHeldAccountsResponse.type: object
definitions.ListHoldsResponse.description: The holds for a matter.
definitions.ListHoldsResponse.properties.holds.description: The list of holds.
definitions.ListHoldsResponse.properties.holds.items.$ref: '#/definitions/Hold'
definitions.ListHoldsResponse.properties.holds.type: array
definitions.ListHoldsResponse.properties.nextPageToken.description: |-
  Page token to retrieve the next page of results in the list.
  If this is empty, then there are no more holds to list.
definitions.ListHoldsResponse.properties.nextPageToken.type: string
definitions.ListHoldsResponse.type: object
definitions.ListMattersResponse.description: Provides the list of matters.
definitions.ListMattersResponse.properties.matters.description: List of matters.
definitions.ListMattersResponse.properties.matters.items.$ref: '#/definitions/Matter'
definitions.ListMattersResponse.properties.matters.type: array
definitions.ListMattersResponse.properties.nextPageToken.description: Page token to
  retrieve the next page of results in the list.
definitions.ListMattersResponse.properties.nextPageToken.type: string
definitions.ListMattersResponse.type: object
definitions.Matter.description: Represents a matter.
definitions.Matter.properties.description.description: The description of the matter.
definitions.Matter.properties.description.type: string
definitions.Matter.properties.matterId.description: |-
  The matter ID which is generated by the server.
  Should be blank when creating a new matter.
definitions.Matter.properties.matterId.type: string
definitions.Matter.properties.matterPermissions.description: |-
  List of users and access to the matter. Currently there is no programmer
  defined limit on the number of permissions a matter can have.
definitions.Matter.properties.matterPermissions.items.$ref: '#/definitions/MatterPermission'
definitions.Matter.properties.matterPermissions.type: array
definitions.Matter.properties.name.description: The name of the matter.
definitions.Matter.properties.name.type: string
definitions.Matter.properties.state.description: The state of the matter.
definitions.Matter.properties.state.enum.length: 4
definitions.Matter.properties.state.enum[0]: STATE_UNSPECIFIED
definitions.Matter.properties.state.enum[1]: OPEN
definitions.Matter.properties.state.enum[2]: CLOSED
definitions.Matter.properties.state.enum[3]: DELETED
definitions.Matter.properties.state.type: string
definitions.Matter.type: object
definitions.MatterPermission.description: |-
  Currently each matter only has one owner, and all others are collaborators.
  When an account is purged, its corresponding MatterPermission resources
  cease to exist.
definitions.MatterPermission.properties.accountId.description: The account id, as
  provided by <a href="https://developers.google.com/admin-sdk/">Admin SDK</a>.
definitions.MatterPermission.properties.accountId.type: string
definitions.MatterPermission.properties.role.description: The user's role in this
  matter.
definitions.MatterPermission.properties.role.enum.length: 3
definitions.MatterPermission.properties.role.enum[0]: ROLE_UNSPECIFIED
definitions.MatterPermission.properties.role.enum[1]: COLLABORATOR
definitions.MatterPermission.properties.role.enum[2]: OWNER
definitions.MatterPermission.properties.role.type: string
definitions.MatterPermission.type: object
definitions.RemoveMatterPermissionsRequest.description: Remove an account as a matter
  collaborator.
definitions.RemoveMatterPermissionsRequest.properties.accountId.description: The account
  ID.
definitions.RemoveMatterPermissionsRequest.properties.accountId.type: string
definitions.RemoveMatterPermissionsRequest.type: object
definitions.ReopenMatterRequest.description: Reopen a matter by ID.
definitions.ReopenMatterRequest.type: object
definitions.ReopenMatterResponse.description: Response to a ReopenMatterRequest.
definitions.ReopenMatterResponse.properties.matter.$ref: '#/definitions/Matter'
definitions.ReopenMatterResponse.properties.matter.description: The updated matter,
  with state OPEN.
definitions.ReopenMatterResponse.type: object
definitions.UndeleteMatterRequest.description: Undelete a matter by ID.
definitions.UndeleteMatterRequest.type: object
externalDocs.url: https://developers.google.com/vault
host: vault.googleapis.com
info.contact.name: Google
info.contact.url: https://google.com
info.description: Archiving and eDiscovery for G Suite.
info.title: Google Vault
info.version: v1
info.x-apiClientRegistration.url: https://console.developers.google.com
info.x-logo.url: https://api.apis.guru/v2/cache/logo/https_www.google.com_images_branding_googlelogo_2x_googlelogo_color_272x92dp.png
info.x-origin.length: 1
info.x-origin[0].converter.url: https://github.com/lucybot/api-spec-converter
info.x-origin[0].converter.version: 2.6.0
info.x-origin[0].format: google
info.x-origin[0].url: https://vault.googleapis.com/$discovery/rest?version=v1
info.x-origin[0].version: v1
info.x-preferred: true
info.x-providerName: googleapis.com
info.x-serviceName: vault
parameters.$.xgafv.description: V1 error format.
parameters.$.xgafv.enum.length: 2
parameters.$.xgafv.enum[0]: "1"
parameters.$.xgafv.enum[1]: "2"
parameters.$.xgafv.in: query
parameters.$.xgafv.name: $.xgafv
parameters.$.xgafv.type: string
parameters.access_token.description: OAuth access token.
parameters.access_token.in: query
parameters.access_token.name: access_token
parameters.access_token.type: string
parameters.alt.default: json
parameters.alt.description: Data format for response.
parameters.alt.enum.length: 3
parameters.alt.enum[0]: json
parameters.alt.enum[1]: media
parameters.alt.enum[2]: proto
parameters.alt.in: query
parameters.alt.name: alt
parameters.alt.type: string
parameters.bearer_token.description: OAuth bearer token.
parameters.bearer_token.in: query
parameters.bearer_token.name: bearer_token
parameters.bearer_token.type: string
parameters.callback.description: JSONP
parameters.callback.in: query
parameters.callback.name: callback
parameters.callback.type: string
parameters.fields.description: Selector specifying which fields to include in a partial
  response.
parameters.fields.in: query
parameters.fields.name: fields
parameters.fields.type: string
parameters.key.description: API key. Your API key identifies your project and provides
  you with API access, quota, and reports. Required unless you provide an OAuth 2.0
  token.
parameters.key.in: query
parameters.key.name: key
parameters.key.type: string
parameters.oauth_token.description: OAuth 2.0 token for the current user.
parameters.oauth_token.in: query
parameters.oauth_token.name: oauth_token
parameters.oauth_token.type: string
parameters.pp.default: true
parameters.pp.description: Pretty-print response.
parameters.pp.in: query
parameters.pp.name: pp
parameters.pp.type: boolean
parameters.prettyPrint.default: true
parameters.prettyPrint.description: Returns response with indentations and line breaks.
parameters.prettyPrint.in: query
parameters.prettyPrint.name: prettyPrint
parameters.prettyPrint.type: boolean
parameters.quotaUser.description: Available to use for quota purposes for server-side
  applications. Can be any arbitrary string assigned to a user, but should not exceed
  40 characters.
parameters.quotaUser.in: query
parameters.quotaUser.name: quotaUser
parameters.quotaUser.type: string
parameters.upload_protocol.description: Upload protocol for media (e.g. "raw", "multipart").
parameters.upload_protocol.in: query
parameters.upload_protocol.name: upload_protocol
parameters.upload_protocol.type: string
parameters.uploadType.description: Legacy upload protocol for media (e.g. "media",
  "multipart").
parameters.uploadType.in: query
parameters.uploadType.name: uploadType
parameters.uploadType.type: string
paths./v1/matters.get.description: Lists matters the user has access to.
paths./v1/matters.get.operationId: vault.matters.list
paths./v1/matters.get.parameters.length: 4
paths./v1/matters.get.parameters[0].description: |-
  The number of matters to return in the response.
  Default and maximum are 100.
paths./v1/matters.get.parameters[0].in: query
paths./v1/matters.get.parameters[0].name: pageSize
paths./v1/matters.get.parameters[0].type: integer
paths./v1/matters.get.parameters[1].description: The pagination token as returned
  in the response.
paths./v1/matters.get.parameters[1].in: query
paths./v1/matters.get.parameters[1].name: pageToken
paths./v1/matters.get.parameters[1].type: string
paths./v1/matters.get.parameters[2].description: |-
  If set, list only matters with that specific state. The default is listing
  matters of all states.
paths./v1/matters.get.parameters[2].enum.length: 4
paths./v1/matters.get.parameters[2].enum[0]: STATE_UNSPECIFIED
paths./v1/matters.get.parameters[2].enum[1]: OPEN
paths./v1/matters.get.parameters[2].enum[2]: CLOSED
paths./v1/matters.get.parameters[2].enum[3]: DELETED
paths./v1/matters.get.parameters[2].in: query
paths./v1/matters.get.parameters[2].name: state
paths./v1/matters.get.parameters[2].type: string
paths./v1/matters.get.parameters[3].description: Specifies which parts of the matter
  to return in response.
paths./v1/matters.get.parameters[3].enum.length: 3
paths./v1/matters.get.parameters[3].enum[0]: VIEW_UNSPECIFIED
paths./v1/matters.get.parameters[3].enum[1]: BASIC
paths./v1/matters.get.parameters[3].enum[2]: FULL
paths./v1/matters.get.parameters[3].in: query
paths./v1/matters.get.parameters[3].name: view
paths./v1/matters.get.parameters[3].type: string
paths./v1/matters.get.responses.200.description: Successful response
paths./v1/matters.get.responses.200.schema.$ref: '#/definitions/ListMattersResponse'
paths./v1/matters.get.security.length: 2
paths./v1/matters.get.security[0].Oauth2.length: 1
paths./v1/matters.get.security[0].Oauth2[0]: https://www.googleapis.com/auth/ediscovery
paths./v1/matters.get.security[1].Oauth2.length: 1
paths./v1/matters.get.security[1].Oauth2[0]: https://www.googleapis.com/auth/ediscovery.readonly
paths./v1/matters.get.tags.length: 1
paths./v1/matters.get.tags[0]: matters
paths./v1/matters.parameters.length: 13
paths./v1/matters.parameters[0].$ref: '#/parameters/$.xgafv'
paths./v1/matters.parameters[1].$ref: '#/parameters/access_token'
paths./v1/matters.parameters[2].$ref: '#/parameters/alt'
paths./v1/matters.parameters[3].$ref: '#/parameters/bearer_token'
paths./v1/matters.parameters[4].$ref: '#/parameters/callback'
paths./v1/matters.parameters[5].$ref: '#/parameters/fields'
paths./v1/matters.parameters[6].$ref: '#/parameters/key'
paths./v1/matters.parameters[7].$ref: '#/parameters/oauth_token'
paths./v1/matters.parameters[8].$ref: '#/parameters/pp'
paths./v1/matters.parameters[9].$ref: '#/parameters/prettyPrint'
paths./v1/matters.parameters[10].$ref: '#/parameters/quotaUser'
paths./v1/matters.parameters[11].$ref: '#/parameters/uploadType'
paths./v1/matters.parameters[12].$ref: '#/parameters/upload_protocol'
paths./v1/matters.post.description: |-
  Creates a new matter with the given name and description. The initial state
  is open, and the owner is the method caller. Returns the created matter
  with default view.
paths./v1/matters.post.operationId: vault.matters.create
paths./v1/matters.post.parameters.length: 1
paths./v1/matters.post.parameters[0].in: body
paths./v1/matters.post.parameters[0].name: body
paths./v1/matters.post.parameters[0].schema.$ref: '#/definitions/Matter'
paths./v1/matters.post.responses.200.description: Successful response
paths./v1/matters.post.responses.200.schema.$ref: '#/definitions/Matter'
paths./v1/matters.post.security.length: 1
paths./v1/matters.post.security[0].Oauth2.length: 1
paths./v1/matters.post.security[0].Oauth2[0]: https://www.googleapis.com/auth/ediscovery
paths./v1/matters.post.tags.length: 1
paths./v1/matters.post.tags[0]: matters
paths./v1/matters/{matterId}.delete.description: Deletes the specified matter. Returns
  matter with updated state.
paths./v1/matters/{matterId}.delete.operationId: vault.matters.delete
paths./v1/matters/{matterId}.delete.parameters.length: 1
paths./v1/matters/{matterId}.delete.parameters[0].description: The matter ID
paths./v1/matters/{matterId}.delete.parameters[0].in: path
paths./v1/matters/{matterId}.delete.parameters[0].name: matterId
paths./v1/matters/{matterId}.delete.parameters[0].required: true
paths./v1/matters/{matterId}.delete.parameters[0].type: string
paths./v1/matters/{matterId}.delete.responses.200.description: Successful response
paths./v1/matters/{matterId}.delete.responses.200.schema.$ref: '#/definitions/Matter'
paths./v1/matters/{matterId}.delete.security.length: 1
paths./v1/matters/{matterId}.delete.security[0].Oauth2.length: 1
paths./v1/matters/{matterId}.delete.security[0].Oauth2[0]: https://www.googleapis.com/auth/ediscovery
paths./v1/matters/{matterId}.delete.tags.length: 1
paths./v1/matters/{matterId}.delete.tags[0]: matters
paths./v1/matters/{matterId}.get.description: Gets the specified matter.
paths./v1/matters/{matterId}.get.operationId: vault.matters.get
paths./v1/matters/{matterId}.get.parameters.length: 2
paths./v1/matters/{matterId}.get.parameters[0].description: The matter ID.
paths./v1/matters/{matterId}.get.parameters[0].in: path
paths./v1/matters/{matterId}.get.parameters[0].name: matterId
paths./v1/matters/{matterId}.get.parameters[0].required: true
paths./v1/matters/{matterId}.get.parameters[0].type: string
paths./v1/matters/{matterId}.get.parameters[1].description: Specifies which parts
  of the Matter to return in the response.
paths./v1/matters/{matterId}.get.parameters[1].enum.length: 3
paths./v1/matters/{matterId}.get.parameters[1].enum[0]: VIEW_UNSPECIFIED
paths./v1/matters/{matterId}.get.parameters[1].enum[1]: BASIC
paths./v1/matters/{matterId}.get.parameters[1].enum[2]: FULL
paths./v1/matters/{matterId}.get.parameters[1].in: query
paths./v1/matters/{matterId}.get.parameters[1].name: view
paths./v1/matters/{matterId}.get.parameters[1].type: string
paths./v1/matters/{matterId}.get.responses.200.description: Successful response
paths./v1/matters/{matterId}.get.responses.200.schema.$ref: '#/definitions/Matter'
paths./v1/matters/{matterId}.get.security.length: 2
paths./v1/matters/{matterId}.get.security[0].Oauth2.length: 1
paths./v1/matters/{matterId}.get.security[0].Oauth2[0]: https://www.googleapis.com/auth/ediscovery
paths./v1/matters/{matterId}.get.security[1].Oauth2.length: 1
paths./v1/matters/{matterId}.get.security[1].Oauth2[0]: https://www.googleapis.com/auth/ediscovery.readonly
paths./v1/matters/{matterId}.get.tags.length: 1
paths./v1/matters/{matterId}.get.tags[0]: matters
paths./v1/matters/{matterId}.parameters.length: 13
paths./v1/matters/{matterId}.parameters[0].$ref: '#/parameters/$.xgafv'
paths./v1/matters/{matterId}.parameters[1].$ref: '#/parameters/access_token'
paths./v1/matters/{matterId}.parameters[2].$ref: '#/parameters/alt'
paths./v1/matters/{matterId}.parameters[3].$ref: '#/parameters/bearer_token'
paths./v1/matters/{matterId}.parameters[4].$ref: '#/parameters/callback'
paths./v1/matters/{matterId}.parameters[5].$ref: '#/parameters/fields'
paths./v1/matters/{matterId}.parameters[6].$ref: '#/parameters/key'
paths./v1/matters/{matterId}.parameters[7].$ref: '#/parameters/oauth_token'
paths./v1/matters/{matterId}.parameters[8].$ref: '#/parameters/pp'
paths./v1/matters/{matterId}.parameters[9].$ref: '#/parameters/prettyPrint'
paths./v1/matters/{matterId}.parameters[10].$ref: '#/parameters/quotaUser'
paths./v1/matters/{matterId}.parameters[11].$ref: '#/parameters/uploadType'
paths./v1/matters/{matterId}.parameters[12].$ref: '#/parameters/upload_protocol'
paths./v1/matters/{matterId}.put.description: |-
  Updates the specified matter.
  This updates only the name and description of the matter, identified by
  matter id. Changes to any other fields are ignored.
  Returns the default view of the matter.
paths./v1/matters/{matterId}.put.operationId: vault.matters.update
paths./v1/matters/{matterId}.put.parameters.length: 2
paths./v1/matters/{matterId}.put.parameters[0].in: body
paths./v1/matters/{matterId}.put.parameters[0].name: body
paths./v1/matters/{matterId}.put.parameters[0].schema.$ref: '#/definitions/Matter'
paths./v1/matters/{matterId}.put.parameters[1].description: The matter ID.
paths./v1/matters/{matterId}.put.parameters[1].in: path
paths./v1/matters/{matterId}.put.parameters[1].name: matterId
paths./v1/matters/{matterId}.put.parameters[1].required: true
paths./v1/matters/{matterId}.put.parameters[1].type: string
paths./v1/matters/{matterId}.put.responses.200.description: Successful response
paths./v1/matters/{matterId}.put.responses.200.schema.$ref: '#/definitions/Matter'
paths./v1/matters/{matterId}.put.security.length: 1
paths./v1/matters/{matterId}.put.security[0].Oauth2.length: 1
paths./v1/matters/{matterId}.put.security[0].Oauth2[0]: https://www.googleapis.com/auth/ediscovery
paths./v1/matters/{matterId}.put.tags.length: 1
paths./v1/matters/{matterId}.put.tags[0]: matters
paths./v1/matters/{matterId}/holds.get.description: |-
  Lists holds within a matter. An empty page token in ListHoldsResponse
  denotes no more holds to list.
paths./v1/matters/{matterId}/holds.get.operationId: vault.matters.holds.list
paths./v1/matters/{matterId}/holds.get.parameters.length: 3
paths./v1/matters/{matterId}/holds.get.parameters[0].description: The matter ID.
paths./v1/matters/{matterId}/holds.get.parameters[0].in: path
paths./v1/matters/{matterId}/holds.get.parameters[0].name: matterId
paths./v1/matters/{matterId}/holds.get.parameters[0].required: true
paths./v1/matters/{matterId}/holds.get.parameters[0].type: string
paths./v1/matters/{matterId}/holds.get.parameters[1].description: |-
  The number of holds to return in the response, between 0 and 100 inclusive.
  Leaving this empty, or as 0, is the same as page_size = 100.
paths./v1/matters/{matterId}/holds.get.parameters[1].in: query
paths./v1/matters/{matterId}/holds.get.parameters[1].name: pageSize
paths./v1/matters/{matterId}/holds.get.parameters[1].type: integer
paths./v1/matters/{matterId}/holds.get.parameters[2].description: |-
  The pagination token as returned in the response.
  An empty token means start from the beginning.
paths./v1/matters/{matterId}/holds.get.parameters[2].in: query
paths./v1/matters/{matterId}/holds.get.parameters[2].name: pageToken
paths./v1/matters/{matterId}/holds.get.parameters[2].type: string
paths./v1/matters/{matterId}/holds.get.responses.200.description: Successful response
paths./v1/matters/{matterId}/holds.get.responses.200.schema.$ref: '#/definitions/ListHoldsResponse'
paths./v1/matters/{matterId}/holds.get.security.length: 2
paths./v1/matters/{matterId}/holds.get.security[0].Oauth2.length: 1
paths./v1/matters/{matterId}/holds.get.security[0].Oauth2[0]: https://www.googleapis.com/auth/ediscovery
paths./v1/matters/{matterId}/holds.get.security[1].Oauth2.length: 1
paths./v1/matters/{matterId}/holds.get.security[1].Oauth2[0]: https://www.googleapis.com/auth/ediscovery.readonly
paths./v1/matters/{matterId}/holds.get.tags.length: 1
paths./v1/matters/{matterId}/holds.get.tags[0]: matters
paths./v1/matters/{matterId}/holds.parameters.length: 13
paths./v1/matters/{matterId}/holds.parameters[0].$ref: '#/parameters/$.xgafv'
paths./v1/matters/{matterId}/holds.parameters[1].$ref: '#/parameters/access_token'
paths./v1/matters/{matterId}/holds.parameters[2].$ref: '#/parameters/alt'
paths./v1/matters/{matterId}/holds.parameters[3].$ref: '#/parameters/bearer_token'
paths./v1/matters/{matterId}/holds.parameters[4].$ref: '#/parameters/callback'
paths./v1/matters/{matterId}/holds.parameters[5].$ref: '#/parameters/fields'
paths./v1/matters/{matterId}/holds.parameters[6].$ref: '#/parameters/key'
paths./v1/matters/{matterId}/holds.parameters[7].$ref: '#/parameters/oauth_token'
paths./v1/matters/{matterId}/holds.parameters[8].$ref: '#/parameters/pp'
paths./v1/matters/{matterId}/holds.parameters[9].$ref: '#/parameters/prettyPrint'
paths./v1/matters/{matterId}/holds.parameters[10].$ref: '#/parameters/quotaUser'
paths./v1/matters/{matterId}/holds.parameters[11].$ref: '#/parameters/uploadType'
paths./v1/matters/{matterId}/holds.parameters[12].$ref: '#/parameters/upload_protocol'
paths./v1/matters/{matterId}/holds.post.description: Creates a hold in the given matter.
paths./v1/matters/{matterId}/holds.post.operationId: vault.matters.holds.create
paths./v1/matters/{matterId}/holds.post.parameters.length: 2
paths./v1/matters/{matterId}/holds.post.parameters[0].in: body
paths./v1/matters/{matterId}/holds.post.parameters[0].name: body
paths./v1/matters/{matterId}/holds.post.parameters[0].schema.$ref: '#/definitions/Hold'
paths./v1/matters/{matterId}/holds.post.parameters[1].description: The matter ID.
paths./v1/matters/{matterId}/holds.post.parameters[1].in: path
paths./v1/matters/{matterId}/holds.post.parameters[1].name: matterId
paths./v1/matters/{matterId}/holds.post.parameters[1].required: true
paths./v1/matters/{matterId}/holds.post.parameters[1].type: string
paths./v1/matters/{matterId}/holds.post.responses.200.description: Successful response
paths./v1/matters/{matterId}/holds.post.responses.200.schema.$ref: '#/definitions/Hold'
paths./v1/matters/{matterId}/holds.post.security.length: 1
paths./v1/matters/{matterId}/holds.post.security[0].Oauth2.length: 1
paths./v1/matters/{matterId}/holds.post.security[0].Oauth2[0]: https://www.googleapis.com/auth/ediscovery
paths./v1/matters/{matterId}/holds.post.tags.length: 1
paths./v1/matters/{matterId}/holds.post.tags[0]: matters
paths./v1/matters/{matterId}/holds/{holdId}.delete.description: Removes a hold by
  ID. This will release any HeldAccounts on this Hold.
paths./v1/matters/{matterId}/holds/{holdId}.delete.operationId: vault.matters.holds.delete
paths./v1/matters/{matterId}/holds/{holdId}.delete.parameters.length: 2
paths./v1/matters/{matterId}/holds/{holdId}.delete.parameters[0].description: The
  hold ID.
paths./v1/matters/{matterId}/holds/{holdId}.delete.parameters[0].in: path
paths./v1/matters/{matterId}/holds/{holdId}.delete.parameters[0].name: holdId
paths./v1/matters/{matterId}/holds/{holdId}.delete.parameters[0].required: true
paths./v1/matters/{matterId}/holds/{holdId}.delete.parameters[0].type: string
paths./v1/matters/{matterId}/holds/{holdId}.delete.parameters[1].description: The
  matter ID.
paths./v1/matters/{matterId}/holds/{holdId}.delete.parameters[1].in: path
paths./v1/matters/{matterId}/holds/{holdId}.delete.parameters[1].name: matterId
paths./v1/matters/{matterId}/holds/{holdId}.delete.parameters[1].required: true
paths./v1/matters/{matterId}/holds/{holdId}.delete.parameters[1].type: string
paths./v1/matters/{matterId}/holds/{holdId}.delete.responses.200.description: Successful
  response
paths./v1/matters/{matterId}/holds/{holdId}.delete.responses.200.schema.$ref: '#/definitions/Empty'
paths./v1/matters/{matterId}/holds/{holdId}.delete.security.length: 1
paths./v1/matters/{matterId}/holds/{holdId}.delete.security[0].Oauth2.length: 1
paths./v1/matters/{matterId}/holds/{holdId}.delete.security[0].Oauth2[0]: https://www.googleapis.com/auth/ediscovery
paths./v1/matters/{matterId}/holds/{holdId}.delete.tags.length: 1
paths./v1/matters/{matterId}/holds/{holdId}.delete.tags[0]: matters
paths./v1/matters/{matterId}/holds/{holdId}.get.description: Gets a hold by ID.
paths./v1/matters/{matterId}/holds/{holdId}.get.operationId: vault.matters.holds.get
paths./v1/matters/{matterId}/holds/{holdId}.get.parameters.length: 2
paths./v1/matters/{matterId}/holds/{holdId}.get.parameters[0].description: The hold
  ID.
paths./v1/matters/{matterId}/holds/{holdId}.get.parameters[0].in: path
paths./v1/matters/{matterId}/holds/{holdId}.get.parameters[0].name: holdId
paths./v1/matters/{matterId}/holds/{holdId}.get.parameters[0].required: true
paths./v1/matters/{matterId}/holds/{holdId}.get.parameters[0].type: string
paths./v1/matters/{matterId}/holds/{holdId}.get.parameters[1].description: The matter
  ID.
paths./v1/matters/{matterId}/holds/{holdId}.get.parameters[1].in: path
paths./v1/matters/{matterId}/holds/{holdId}.get.parameters[1].name: matterId
paths./v1/matters/{matterId}/holds/{holdId}.get.parameters[1].required: true
paths./v1/matters/{matterId}/holds/{holdId}.get.parameters[1].type: string
paths./v1/matters/{matterId}/holds/{holdId}.get.responses.200.description: Successful
  response
paths./v1/matters/{matterId}/holds/{holdId}.get.responses.200.schema.$ref: '#/definitions/Hold'
paths./v1/matters/{matterId}/holds/{holdId}.get.security.length: 2
paths./v1/matters/{matterId}/holds/{holdId}.get.security[0].Oauth2.length: 1
paths./v1/matters/{matterId}/holds/{holdId}.get.security[0].Oauth2[0]: https://www.googleapis.com/auth/ediscovery
paths./v1/matters/{matterId}/holds/{holdId}.get.security[1].Oauth2.length: 1
paths./v1/matters/{matterId}/holds/{holdId}.get.security[1].Oauth2[0]: https://www.googleapis.com/auth/ediscovery.readonly
paths./v1/matters/{matterId}/holds/{holdId}.get.tags.length: 1
paths./v1/matters/{matterId}/holds/{holdId}.get.tags[0]: matters
paths./v1/matters/{matterId}/holds/{holdId}.parameters.length: 13
paths./v1/matters/{matterId}/holds/{holdId}.parameters[0].$ref: '#/parameters/$.xgafv'
paths./v1/matters/{matterId}/holds/{holdId}.parameters[1].$ref: '#/parameters/access_token'
paths./v1/matters/{matterId}/holds/{holdId}.parameters[2].$ref: '#/parameters/alt'
paths./v1/matters/{matterId}/holds/{holdId}.parameters[3].$ref: '#/parameters/bearer_token'
paths./v1/matters/{matterId}/holds/{holdId}.parameters[4].$ref: '#/parameters/callback'
paths./v1/matters/{matterId}/holds/{holdId}.parameters[5].$ref: '#/parameters/fields'
paths./v1/matters/{matterId}/holds/{holdId}.parameters[6].$ref: '#/parameters/key'
paths./v1/matters/{matterId}/holds/{holdId}.parameters[7].$ref: '#/parameters/oauth_token'
paths./v1/matters/{matterId}/holds/{holdId}.parameters[8].$ref: '#/parameters/pp'
paths./v1/matters/{matterId}/holds/{holdId}.parameters[9].$ref: '#/parameters/prettyPrint'
paths./v1/matters/{matterId}/holds/{holdId}.parameters[10].$ref: '#/parameters/quotaUser'
paths./v1/matters/{matterId}/holds/{holdId}.parameters[11].$ref: '#/parameters/uploadType'
paths./v1/matters/{matterId}/holds/{holdId}.parameters[12].$ref: '#/parameters/upload_protocol'
paths./v1/matters/{matterId}/holds/{holdId}.put.description: |-
  Updates the OU and/or query parameters of a hold. You cannot add accounts
  to a hold that covers an OU, nor can you add OUs to a hold that covers
  individual accounts. Accounts listed in the hold will be ignored.
paths./v1/matters/{matterId}/holds/{holdId}.put.operationId: vault.matters.holds.update
paths./v1/matters/{matterId}/holds/{holdId}.put.parameters.length: 3
paths./v1/matters/{matterId}/holds/{holdId}.put.parameters[0].in: body
paths./v1/matters/{matterId}/holds/{holdId}.put.parameters[0].name: body
paths./v1/matters/{matterId}/holds/{holdId}.put.parameters[0].schema.$ref: '#/definitions/Hold'
paths./v1/matters/{matterId}/holds/{holdId}.put.parameters[1].description: The ID
  of the hold.
paths./v1/matters/{matterId}/holds/{holdId}.put.parameters[1].in: path
paths./v1/matters/{matterId}/holds/{holdId}.put.parameters[1].name: holdId
paths./v1/matters/{matterId}/holds/{holdId}.put.parameters[1].required: true
paths./v1/matters/{matterId}/holds/{holdId}.put.parameters[1].type: string
paths./v1/matters/{matterId}/holds/{holdId}.put.parameters[2].description: The matter
  ID.
paths./v1/matters/{matterId}/holds/{holdId}.put.parameters[2].in: path
paths./v1/matters/{matterId}/holds/{holdId}.put.parameters[2].name: matterId
paths./v1/matters/{matterId}/holds/{holdId}.put.parameters[2].required: true
paths./v1/matters/{matterId}/holds/{holdId}.put.parameters[2].type: string
paths./v1/matters/{matterId}/holds/{holdId}.put.responses.200.description: Successful
  response
paths./v1/matters/{matterId}/holds/{holdId}.put.responses.200.schema.$ref: '#/definitions/Hold'
paths./v1/matters/{matterId}/holds/{holdId}.put.security.length: 1
paths./v1/matters/{matterId}/holds/{holdId}.put.security[0].Oauth2.length: 1
paths./v1/matters/{matterId}/holds/{holdId}.put.security[0].Oauth2[0]: https://www.googleapis.com/auth/ediscovery
paths./v1/matters/{matterId}/holds/{holdId}.put.tags.length: 1
paths./v1/matters/{matterId}/holds/{holdId}.put.tags[0]: matters
paths./v1/matters/{matterId}/holds/{holdId}/accounts.get.description: |-
  Lists HeldAccounts for a hold. This will only list individually specified
  held accounts. If the hold is on an OU, then use
  <a href="https://developers.google.com/admin-sdk/">Admin SDK</a>
  to enumerate its members.
paths./v1/matters/{matterId}/holds/{holdId}/accounts.get.operationId: vault.matters.holds.accounts.list
paths./v1/matters/{matterId}/holds/{holdId}/accounts.get.parameters.length: 2
paths./v1/matters/{matterId}/holds/{holdId}/accounts.get.parameters[0].description: The
  hold ID.
paths./v1/matters/{matterId}/holds/{holdId}/accounts.get.parameters[0].in: path
paths./v1/matters/{matterId}/holds/{holdId}/accounts.get.parameters[0].name: holdId
paths./v1/matters/{matterId}/holds/{holdId}/accounts.get.parameters[0].required: true
paths./v1/matters/{matterId}/holds/{holdId}/accounts.get.parameters[0].type: string
paths./v1/matters/{matterId}/holds/{holdId}/accounts.get.parameters[1].description: The
  matter ID.
paths./v1/matters/{matterId}/holds/{holdId}/accounts.get.parameters[1].in: path
paths./v1/matters/{matterId}/holds/{holdId}/accounts.get.parameters[1].name: matterId
paths./v1/matters/{matterId}/holds/{holdId}/accounts.get.parameters[1].required: true
paths./v1/matters/{matterId}/holds/{holdId}/accounts.get.parameters[1].type: string
paths./v1/matters/{matterId}/holds/{holdId}/accounts.get.responses.200.description: Successful
  response
paths./v1/matters/{matterId}/holds/{holdId}/accounts.get.responses.200.schema.$ref: '#/definitions/ListHeldAccountsResponse'
paths./v1/matters/{matterId}/holds/{holdId}/accounts.get.security.length: 2
paths./v1/matters/{matterId}/holds/{holdId}/accounts.get.security[0].Oauth2.length: 1
paths./v1/matters/{matterId}/holds/{holdId}/accounts.get.security[0].Oauth2[0]: https://www.googleapis.com/auth/ediscovery
paths./v1/matters/{matterId}/holds/{holdId}/accounts.get.security[1].Oauth2.length: 1
paths./v1/matters/{matterId}/holds/{holdId}/accounts.get.security[1].Oauth2[0]: https://www.googleapis.com/auth/ediscovery.readonly
paths./v1/matters/{matterId}/holds/{holdId}/accounts.get.tags.length: 1
paths./v1/matters/{matterId}/holds/{holdId}/accounts.get.tags[0]: matters
paths./v1/matters/{matterId}/holds/{holdId}/accounts.parameters.length: 13
paths./v1/matters/{matterId}/holds/{holdId}/accounts.parameters[0].$ref: '#/parameters/$.xgafv'
paths./v1/matters/{matterId}/holds/{holdId}/accounts.parameters[1].$ref: '#/parameters/access_token'
paths./v1/matters/{matterId}/holds/{holdId}/accounts.parameters[2].$ref: '#/parameters/alt'
paths./v1/matters/{matterId}/holds/{holdId}/accounts.parameters[3].$ref: '#/parameters/bearer_token'
paths./v1/matters/{matterId}/holds/{holdId}/accounts.parameters[4].$ref: '#/parameters/callback'
paths./v1/matters/{matterId}/holds/{holdId}/accounts.parameters[5].$ref: '#/parameters/fields'
paths./v1/matters/{matterId}/holds/{holdId}/accounts.parameters[6].$ref: '#/parameters/key'
paths./v1/matters/{matterId}/holds/{holdId}/accounts.parameters[7].$ref: '#/parameters/oauth_token'
paths./v1/matters/{matterId}/holds/{holdId}/accounts.parameters[8].$ref: '#/parameters/pp'
paths./v1/matters/{matterId}/holds/{holdId}/accounts.parameters[9].$ref: '#/parameters/prettyPrint'
paths./v1/matters/{matterId}/holds/{holdId}/accounts.parameters[10].$ref: '#/parameters/quotaUser'
paths./v1/matters/{matterId}/holds/{holdId}/accounts.parameters[11].$ref: '#/parameters/uploadType'
paths./v1/matters/{matterId}/holds/{holdId}/accounts.parameters[12].$ref: '#/parameters/upload_protocol'
paths./v1/matters/{matterId}/holds/{holdId}/accounts.post.description: |-
  Adds a HeldAccount to a hold. Accounts can only be added to a hold that
  has no held_org_unit set. Attempting to add an account to an OU-based
  hold will result in an error.
paths./v1/matters/{matterId}/holds/{holdId}/accounts.post.operationId: vault.matters.holds.accounts.create
paths./v1/matters/{matterId}/holds/{holdId}/accounts.post.parameters.length: 3
paths./v1/matters/{matterId}/holds/{holdId}/accounts.post.parameters[0].in: body
paths./v1/matters/{matterId}/holds/{holdId}/accounts.post.parameters[0].name: body
paths./v1/matters/{matterId}/holds/{holdId}/accounts.post.parameters[0].schema.$ref: '#/definitions/HeldAccount'
paths./v1/matters/{matterId}/holds/{holdId}/accounts.post.parameters[1].description: The
  hold ID.
paths./v1/matters/{matterId}/holds/{holdId}/accounts.post.parameters[1].in: path
paths./v1/matters/{matterId}/holds/{holdId}/accounts.post.parameters[1].name: holdId
paths./v1/matters/{matterId}/holds/{holdId}/accounts.post.parameters[1].required: true
paths./v1/matters/{matterId}/holds/{holdId}/accounts.post.parameters[1].type: string
paths./v1/matters/{matterId}/holds/{holdId}/accounts.post.parameters[2].description: The
  matter ID.
paths./v1/matters/{matterId}/holds/{holdId}/accounts.post.parameters[2].in: path
paths./v1/matters/{matterId}/holds/{holdId}/accounts.post.parameters[2].name: matterId
paths./v1/matters/{matterId}/holds/{holdId}/accounts.post.parameters[2].required: true
paths./v1/matters/{matterId}/holds/{holdId}/accounts.post.parameters[2].type: string
paths./v1/matters/{matterId}/holds/{holdId}/accounts.post.responses.200.description: Successful
  response
paths./v1/matters/{matterId}/holds/{holdId}/accounts.post.responses.200.schema.$ref: '#/definitions/HeldAccount'
paths./v1/matters/{matterId}/holds/{holdId}/accounts.post.security.length: 1
paths./v1/matters/{matterId}/holds/{holdId}/accounts.post.security[0].Oauth2.length: 1
paths./v1/matters/{matterId}/holds/{holdId}/accounts.post.security[0].Oauth2[0]: https://www.googleapis.com/auth/ediscovery
paths./v1/matters/{matterId}/holds/{holdId}/accounts.post.tags.length: 1
paths./v1/matters/{matterId}/holds/{holdId}/accounts.post.tags[0]: matters
paths./v1/matters/{matterId}/holds/{holdId}/accounts/{accountId}.delete.description: |-
  Removes a HeldAccount from a hold. If this request leaves the hold with
  no held accounts, the hold will not apply to any accounts.
paths./v1/matters/{matterId}/holds/{holdId}/accounts/{accountId}.delete.operationId: vault.matters.holds.accounts.delete
paths./v1/matters/{matterId}/holds/{holdId}/accounts/{accountId}.delete.parameters.length: 3
paths./v1/matters/{matterId}/holds/{holdId}/accounts/{accountId}.delete.parameters[0].description: The
  ID of the account to remove from the hold.
paths./v1/matters/{matterId}/holds/{holdId}/accounts/{accountId}.delete.parameters[0].in: path
paths./v1/matters/{matterId}/holds/{holdId}/accounts/{accountId}.delete.parameters[0].name: accountId
paths./v1/matters/{matterId}/holds/{holdId}/accounts/{accountId}.delete.parameters[0].required: true
paths./v1/matters/{matterId}/holds/{holdId}/accounts/{accountId}.delete.parameters[0].type: string
paths./v1/matters/{matterId}/holds/{holdId}/accounts/{accountId}.delete.parameters[1].description: The
  hold ID.
paths./v1/matters/{matterId}/holds/{holdId}/accounts/{accountId}.delete.parameters[1].in: path
paths./v1/matters/{matterId}/holds/{holdId}/accounts/{accountId}.delete.parameters[1].name: holdId
paths./v1/matters/{matterId}/holds/{holdId}/accounts/{accountId}.delete.parameters[1].required: true
paths./v1/matters/{matterId}/holds/{holdId}/accounts/{accountId}.delete.parameters[1].type: string
paths./v1/matters/{matterId}/holds/{holdId}/accounts/{accountId}.delete.parameters[2].description: The
  matter ID.
paths./v1/matters/{matterId}/holds/{holdId}/accounts/{accountId}.delete.parameters[2].in: path
paths./v1/matters/{matterId}/holds/{holdId}/accounts/{accountId}.delete.parameters[2].name: matterId
paths./v1/matters/{matterId}/holds/{holdId}/accounts/{accountId}.delete.parameters[2].required: true
paths./v1/matters/{matterId}/holds/{holdId}/accounts/{accountId}.delete.parameters[2].type: string
paths./v1/matters/{matterId}/holds/{holdId}/accounts/{accountId}.delete.responses.200.description: Successful
  response
paths./v1/matters/{matterId}/holds/{holdId}/accounts/{accountId}.delete.responses.200.schema.$ref: '#/definitions/Empty'
paths./v1/matters/{matterId}/holds/{holdId}/accounts/{accountId}.delete.security.length: 1
paths./v1/matters/{matterId}/holds/{holdId}/accounts/{accountId}.delete.security[0].Oauth2.length: 1
paths./v1/matters/{matterId}/holds/{holdId}/accounts/{accountId}.delete.security[0].Oauth2[0]: https://www.googleapis.com/auth/ediscovery
paths./v1/matters/{matterId}/holds/{holdId}/accounts/{accountId}.delete.tags.length: 1
paths./v1/matters/{matterId}/holds/{holdId}/accounts/{accountId}.delete.tags[0]: matters
paths./v1/matters/{matterId}/holds/{holdId}/accounts/{accountId}.parameters.length: 13
paths./v1/matters/{matterId}/holds/{holdId}/accounts/{accountId}.parameters[0].$ref: '#/parameters/$.xgafv'
paths./v1/matters/{matterId}/holds/{holdId}/accounts/{accountId}.parameters[1].$ref: '#/parameters/access_token'
paths./v1/matters/{matterId}/holds/{holdId}/accounts/{accountId}.parameters[2].$ref: '#/parameters/alt'
paths./v1/matters/{matterId}/holds/{holdId}/accounts/{accountId}.parameters[3].$ref: '#/parameters/bearer_token'
paths./v1/matters/{matterId}/holds/{holdId}/accounts/{accountId}.parameters[4].$ref: '#/parameters/callback'
paths./v1/matters/{matterId}/holds/{holdId}/accounts/{accountId}.parameters[5].$ref: '#/parameters/fields'
paths./v1/matters/{matterId}/holds/{holdId}/accounts/{accountId}.parameters[6].$ref: '#/parameters/key'
paths./v1/matters/{matterId}/holds/{holdId}/accounts/{accountId}.parameters[7].$ref: '#/parameters/oauth_token'
paths./v1/matters/{matterId}/holds/{holdId}/accounts/{accountId}.parameters[8].$ref: '#/parameters/pp'
paths./v1/matters/{matterId}/holds/{holdId}/accounts/{accountId}.parameters[9].$ref: '#/parameters/prettyPrint'
paths./v1/matters/{matterId}/holds/{holdId}/accounts/{accountId}.parameters[10].$ref: '#/parameters/quotaUser'
paths./v1/matters/{matterId}/holds/{holdId}/accounts/{accountId}.parameters[11].$ref: '#/parameters/uploadType'
paths./v1/matters/{matterId}/holds/{holdId}/accounts/{accountId}.parameters[12].$ref: '#/parameters/upload_protocol'
paths./v1/matters/{matterId}:addPermissions.parameters.length: 13
paths./v1/matters/{matterId}:addPermissions.parameters[0].$ref: '#/parameters/$.xgafv'
paths./v1/matters/{matterId}:addPermissions.parameters[1].$ref: '#/parameters/access_token'
paths./v1/matters/{matterId}:addPermissions.parameters[2].$ref: '#/parameters/alt'
paths./v1/matters/{matterId}:addPermissions.parameters[3].$ref: '#/parameters/bearer_token'
paths./v1/matters/{matterId}:addPermissions.parameters[4].$ref: '#/parameters/callback'
paths./v1/matters/{matterId}:addPermissions.parameters[5].$ref: '#/parameters/fields'
paths./v1/matters/{matterId}:addPermissions.parameters[6].$ref: '#/parameters/key'
paths./v1/matters/{matterId}:addPermissions.parameters[7].$ref: '#/parameters/oauth_token'
paths./v1/matters/{matterId}:addPermissions.parameters[8].$ref: '#/parameters/pp'
paths./v1/matters/{matterId}:addPermissions.parameters[9].$ref: '#/parameters/prettyPrint'
paths./v1/matters/{matterId}:addPermissions.parameters[10].$ref: '#/parameters/quotaUser'
paths./v1/matters/{matterId}:addPermissions.parameters[11].$ref: '#/parameters/uploadType'
paths./v1/matters/{matterId}:addPermissions.parameters[12].$ref: '#/parameters/upload_protocol'
paths./v1/matters/{matterId}:addPermissions.post.description: Adds an account as a
  matter collaborator.
paths./v1/matters/{matterId}:addPermissions.post.operationId: vault.matters.addPermissions
paths./v1/matters/{matterId}:addPermissions.post.parameters.length: 2
paths./v1/matters/{matterId}:addPermissions.post.parameters[0].in: body
paths./v1/matters/{matterId}:addPermissions.post.parameters[0].name: body
paths./v1/matters/{matterId}:addPermissions.post.parameters[0].schema.$ref: '#/definitions/AddMatterPermissionsRequest'
paths./v1/matters/{matterId}:addPermissions.post.parameters[1].description: The matter
  ID.
paths./v1/matters/{matterId}:addPermissions.post.parameters[1].in: path
paths./v1/matters/{matterId}:addPermissions.post.parameters[1].name: matterId
paths./v1/matters/{matterId}:addPermissions.post.parameters[1].required: true
paths./v1/matters/{matterId}:addPermissions.post.parameters[1].type: string
paths./v1/matters/{matterId}:addPermissions.post.responses.200.description: Successful
  response
paths./v1/matters/{matterId}:addPermissions.post.responses.200.schema.$ref: '#/definitions/MatterPermission'
paths./v1/matters/{matterId}:addPermissions.post.security.length: 1
paths./v1/matters/{matterId}:addPermissions.post.security[0].Oauth2.length: 1
paths./v1/matters/{matterId}:addPermissions.post.security[0].Oauth2[0]: https://www.googleapis.com/auth/ediscovery
paths./v1/matters/{matterId}:addPermissions.post.tags.length: 1
paths./v1/matters/{matterId}:addPermissions.post.tags[0]: matters
paths./v1/matters/{matterId}:close.parameters.length: 13
paths./v1/matters/{matterId}:close.parameters[0].$ref: '#/parameters/$.xgafv'
paths./v1/matters/{matterId}:close.parameters[1].$ref: '#/parameters/access_token'
paths./v1/matters/{matterId}:close.parameters[2].$ref: '#/parameters/alt'
paths./v1/matters/{matterId}:close.parameters[3].$ref: '#/parameters/bearer_token'
paths./v1/matters/{matterId}:close.parameters[4].$ref: '#/parameters/callback'
paths./v1/matters/{matterId}:close.parameters[5].$ref: '#/parameters/fields'
paths./v1/matters/{matterId}:close.parameters[6].$ref: '#/parameters/key'
paths./v1/matters/{matterId}:close.parameters[7].$ref: '#/parameters/oauth_token'
paths./v1/matters/{matterId}:close.parameters[8].$ref: '#/parameters/pp'
paths./v1/matters/{matterId}:close.parameters[9].$ref: '#/parameters/prettyPrint'
paths./v1/matters/{matterId}:close.parameters[10].$ref: '#/parameters/quotaUser'
paths./v1/matters/{matterId}:close.parameters[11].$ref: '#/parameters/uploadType'
paths./v1/matters/{matterId}:close.parameters[12].$ref: '#/parameters/upload_protocol'
paths./v1/matters/{matterId}:close.post.description: Closes the specified matter.
  Returns matter with updated state.
paths./v1/matters/{matterId}:close.post.operationId: vault.matters.close
paths./v1/matters/{matterId}:close.post.parameters.length: 2
paths./v1/matters/{matterId}:close.post.parameters[0].in: body
paths./v1/matters/{matterId}:close.post.parameters[0].name: body
paths./v1/matters/{matterId}:close.post.parameters[0].schema.$ref: '#/definitions/CloseMatterRequest'
paths./v1/matters/{matterId}:close.post.parameters[1].description: The matter ID.
paths./v1/matters/{matterId}:close.post.parameters[1].in: path
paths./v1/matters/{matterId}:close.post.parameters[1].name: matterId
paths./v1/matters/{matterId}:close.post.parameters[1].required: true
paths./v1/matters/{matterId}:close.post.parameters[1].type: string
paths./v1/matters/{matterId}:close.post.responses.200.description: Successful response
paths./v1/matters/{matterId}:close.post.responses.200.schema.$ref: '#/definitions/CloseMatterResponse'
paths./v1/matters/{matterId}:close.post.security.length: 1
paths./v1/matters/{matterId}:close.post.security[0].Oauth2.length: 1
paths./v1/matters/{matterId}:close.post.security[0].Oauth2[0]: https://www.googleapis.com/auth/ediscovery
paths./v1/matters/{matterId}:close.post.tags.length: 1
paths./v1/matters/{matterId}:close.post.tags[0]: matters
paths./v1/matters/{matterId}:removePermissions.parameters.length: 13
paths./v1/matters/{matterId}:removePermissions.parameters[0].$ref: '#/parameters/$.xgafv'
paths./v1/matters/{matterId}:removePermissions.parameters[1].$ref: '#/parameters/access_token'
paths./v1/matters/{matterId}:removePermissions.parameters[2].$ref: '#/parameters/alt'
paths./v1/matters/{matterId}:removePermissions.parameters[3].$ref: '#/parameters/bearer_token'
paths./v1/matters/{matterId}:removePermissions.parameters[4].$ref: '#/parameters/callback'
paths./v1/matters/{matterId}:removePermissions.parameters[5].$ref: '#/parameters/fields'
paths./v1/matters/{matterId}:removePermissions.parameters[6].$ref: '#/parameters/key'
paths./v1/matters/{matterId}:removePermissions.parameters[7].$ref: '#/parameters/oauth_token'
paths./v1/matters/{matterId}:removePermissions.parameters[8].$ref: '#/parameters/pp'
paths./v1/matters/{matterId}:removePermissions.parameters[9].$ref: '#/parameters/prettyPrint'
paths./v1/matters/{matterId}:removePermissions.parameters[10].$ref: '#/parameters/quotaUser'
paths./v1/matters/{matterId}:removePermissions.parameters[11].$ref: '#/parameters/uploadType'
paths./v1/matters/{matterId}:removePermissions.parameters[12].$ref: '#/parameters/upload_protocol'
paths./v1/matters/{matterId}:removePermissions.post.description: Removes an account
  as a matter collaborator.
paths./v1/matters/{matterId}:removePermissions.post.operationId: vault.matters.removePermissions
paths./v1/matters/{matterId}:removePermissions.post.parameters.length: 2
paths./v1/matters/{matterId}:removePermissions.post.parameters[0].in: body
paths./v1/matters/{matterId}:removePermissions.post.parameters[0].name: body
paths./v1/matters/{matterId}:removePermissions.post.parameters[0].schema.$ref: '#/definitions/RemoveMatterPermissionsRequest'
paths./v1/matters/{matterId}:removePermissions.post.parameters[1].description: The
  matter ID.
paths./v1/matters/{matterId}:removePermissions.post.parameters[1].in: path
paths./v1/matters/{matterId}:removePermissions.post.parameters[1].name: matterId
paths./v1/matters/{matterId}:removePermissions.post.parameters[1].required: true
paths./v1/matters/{matterId}:removePermissions.post.parameters[1].type: string
paths./v1/matters/{matterId}:removePermissions.post.responses.200.description: Successful
  response
paths./v1/matters/{matterId}:removePermissions.post.responses.200.schema.$ref: '#/definitions/Empty'
paths./v1/matters/{matterId}:removePermissions.post.security.length: 1
paths./v1/matters/{matterId}:removePermissions.post.security[0].Oauth2.length: 1
paths./v1/matters/{matterId}:removePermissions.post.security[0].Oauth2[0]: https://www.googleapis.com/auth/ediscovery
paths./v1/matters/{matterId}:removePermissions.post.tags.length: 1
paths./v1/matters/{matterId}:removePermissions.post.tags[0]: matters
paths./v1/matters/{matterId}:reopen.parameters.length: 13
paths./v1/matters/{matterId}:reopen.parameters[0].$ref: '#/parameters/$.xgafv'
paths./v1/matters/{matterId}:reopen.parameters[1].$ref: '#/parameters/access_token'
paths./v1/matters/{matterId}:reopen.parameters[2].$ref: '#/parameters/alt'
paths./v1/matters/{matterId}:reopen.parameters[3].$ref: '#/parameters/bearer_token'
paths./v1/matters/{matterId}:reopen.parameters[4].$ref: '#/parameters/callback'
paths./v1/matters/{matterId}:reopen.parameters[5].$ref: '#/parameters/fields'
paths./v1/matters/{matterId}:reopen.parameters[6].$ref: '#/parameters/key'
paths./v1/matters/{matterId}:reopen.parameters[7].$ref: '#/parameters/oauth_token'
paths./v1/matters/{matterId}:reopen.parameters[8].$ref: '#/parameters/pp'
paths./v1/matters/{matterId}:reopen.parameters[9].$ref: '#/parameters/prettyPrint'
paths./v1/matters/{matterId}:reopen.parameters[10].$ref: '#/parameters/quotaUser'
paths./v1/matters/{matterId}:reopen.parameters[11].$ref: '#/parameters/uploadType'
paths./v1/matters/{matterId}:reopen.parameters[12].$ref: '#/parameters/upload_protocol'
paths./v1/matters/{matterId}:reopen.post.description: Reopens the specified matter.
  Returns matter with updated state.
paths./v1/matters/{matterId}:reopen.post.operationId: vault.matters.reopen
paths./v1/matters/{matterId}:reopen.post.parameters.length: 2
paths./v1/matters/{matterId}:reopen.post.parameters[0].in: body
paths./v1/matters/{matterId}:reopen.post.parameters[0].name: body
paths./v1/matters/{matterId}:reopen.post.parameters[0].schema.$ref: '#/definitions/ReopenMatterRequest'
paths./v1/matters/{matterId}:reopen.post.parameters[1].description: The matter ID.
paths./v1/matters/{matterId}:reopen.post.parameters[1].in: path
paths./v1/matters/{matterId}:reopen.post.parameters[1].name: matterId
paths./v1/matters/{matterId}:reopen.post.parameters[1].required: true
paths./v1/matters/{matterId}:reopen.post.parameters[1].type: string
paths./v1/matters/{matterId}:reopen.post.responses.200.description: Successful response
paths./v1/matters/{matterId}:reopen.post.responses.200.schema.$ref: '#/definitions/ReopenMatterResponse'
paths./v1/matters/{matterId}:reopen.post.security.length: 1
paths./v1/matters/{matterId}:reopen.post.security[0].Oauth2.length: 1
paths./v1/matters/{matterId}:reopen.post.security[0].Oauth2[0]: https://www.googleapis.com/auth/ediscovery
paths./v1/matters/{matterId}:reopen.post.tags.length: 1
paths./v1/matters/{matterId}:reopen.post.tags[0]: matters
paths./v1/matters/{matterId}:undelete.parameters.length: 13
paths./v1/matters/{matterId}:undelete.parameters[0].$ref: '#/parameters/$.xgafv'
paths./v1/matters/{matterId}:undelete.parameters[1].$ref: '#/parameters/access_token'
paths./v1/matters/{matterId}:undelete.parameters[2].$ref: '#/parameters/alt'
paths./v1/matters/{matterId}:undelete.parameters[3].$ref: '#/parameters/bearer_token'
paths./v1/matters/{matterId}:undelete.parameters[4].$ref: '#/parameters/callback'
paths./v1/matters/{matterId}:undelete.parameters[5].$ref: '#/parameters/fields'
paths./v1/matters/{matterId}:undelete.parameters[6].$ref: '#/parameters/key'
paths./v1/matters/{matterId}:undelete.parameters[7].$ref: '#/parameters/oauth_token'
paths./v1/matters/{matterId}:undelete.parameters[8].$ref: '#/parameters/pp'
paths./v1/matters/{matterId}:undelete.parameters[9].$ref: '#/parameters/prettyPrint'
paths./v1/matters/{matterId}:undelete.parameters[10].$ref: '#/parameters/quotaUser'
paths./v1/matters/{matterId}:undelete.parameters[11].$ref: '#/parameters/uploadType'
paths./v1/matters/{matterId}:undelete.parameters[12].$ref: '#/parameters/upload_protocol'
paths./v1/matters/{matterId}:undelete.post.description: Undeletes the specified matter.
  Returns matter with updated state.
paths./v1/matters/{matterId}:undelete.post.operationId: vault.matters.undelete
paths./v1/matters/{matterId}:undelete.post.parameters.length: 2
paths./v1/matters/{matterId}:undelete.post.parameters[0].in: body
paths./v1/matters/{matterId}:undelete.post.parameters[0].name: body
paths./v1/matters/{matterId}:undelete.post.parameters[0].schema.$ref: '#/definitions/UndeleteMatterRequest'
paths./v1/matters/{matterId}:undelete.post.parameters[1].description: The matter ID.
paths./v1/matters/{matterId}:undelete.post.parameters[1].in: path
paths./v1/matters/{matterId}:undelete.post.parameters[1].name: matterId
paths./v1/matters/{matterId}:undelete.post.parameters[1].required: true
paths./v1/matters/{matterId}:undelete.post.parameters[1].type: string
paths./v1/matters/{matterId}:undelete.post.responses.200.description: Successful response
paths./v1/matters/{matterId}:undelete.post.responses.200.schema.$ref: '#/definitions/Matter'
paths./v1/matters/{matterId}:undelete.post.security.length: 1
paths./v1/matters/{matterId}:undelete.post.security[0].Oauth2.length: 1
paths./v1/matters/{matterId}:undelete.post.security[0].Oauth2[0]: https://www.googleapis.com/auth/ediscovery
paths./v1/matters/{matterId}:undelete.post.tags.length: 1
paths./v1/matters/{matterId}:undelete.post.tags[0]: matters
schemes.length: 1
schemes[0]: https
securityDefinitions.Oauth2.authorizationUrl: https://accounts.google.com/o/oauth2/auth
securityDefinitions.Oauth2.description: Oauth 2.0 authentication
securityDefinitions.Oauth2.flow: implicit
securityDefinitions.Oauth2.scopes.https://www.googleapis.com/auth/ediscovery: Manage
  your eDiscovery data
securityDefinitions.Oauth2.scopes.https://www.googleapis.com/auth/ediscovery.readonly: View
  your eDiscovery data
securityDefinitions.Oauth2.type: oauth2
swagger: "2.0"
tags.length: 1
tags[0].name: matters
