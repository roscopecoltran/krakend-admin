swagger: '2.0'
schemes:
  - https
host: cloudtasks.googleapis.com
basePath: /
info:
  contact:
    name: Google
    url: 'https://google.com'
  description: Manages the execution of large numbers of distributed requests. Cloud Tasks is in Alpha.
  title: Cloud Tasks
  version: v2beta2
  x-apiClientRegistration:
    url: 'https://console.developers.google.com'
  x-logo:
    url: 'https://api.apis.guru/v2/cache/logo/https_www.google.com_images_branding_googlelogo_2x_googlelogo_color_272x92dp.png'
  x-origin:
    - converter:
        url: 'https://github.com/lucybot/api-spec-converter'
        version: 2.6.0
      format: google
      url: 'https://cloudtasks.googleapis.com/$discovery/rest?version=v2beta2'
      version: v1
  x-preferred: true
  x-providerName: googleapis.com
  x-serviceName: cloudtasks
externalDocs:
  url: 'https://cloud.google.com/cloud-tasks/'
securityDefinitions:
  Oauth2:
    authorizationUrl: 'https://accounts.google.com/o/oauth2/auth'
    description: Oauth 2.0 authentication
    flow: implicit
    scopes:
      'https://www.googleapis.com/auth/cloud-platform': View and manage your data across Google Cloud Platform services
    type: oauth2
parameters:
  $.xgafv:
    description: V1 error format.
    enum:
      - '1'
      - '2'
    in: query
    name: $.xgafv
    type: string
  access_token:
    description: OAuth access token.
    in: query
    name: access_token
    type: string
  alt:
    default: json
    description: Data format for response.
    enum:
      - json
      - media
      - proto
    in: query
    name: alt
    type: string
  bearer_token:
    description: OAuth bearer token.
    in: query
    name: bearer_token
    type: string
  callback:
    description: JSONP
    in: query
    name: callback
    type: string
  fields:
    description: Selector specifying which fields to include in a partial response.
    in: query
    name: fields
    type: string
  key:
    description: 'API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.'
    in: query
    name: key
    type: string
  oauth_token:
    description: OAuth 2.0 token for the current user.
    in: query
    name: oauth_token
    type: string
  pp:
    default: true
    description: Pretty-print response.
    in: query
    name: pp
    type: boolean
  prettyPrint:
    default: true
    description: Returns response with indentations and line breaks.
    in: query
    name: prettyPrint
    type: boolean
  quotaUser:
    description: 'Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.'
    in: query
    name: quotaUser
    type: string
  uploadType:
    description: 'Legacy upload protocol for media (e.g. "media", "multipart").'
    in: query
    name: uploadType
    type: string
  upload_protocol:
    description: 'Upload protocol for media (e.g. "raw", "multipart").'
    in: query
    name: upload_protocol
    type: string
tags:
  - name: projects
paths:
  '/v2beta2/{name}':
    delete:
      description: |-
        Deletes a task.

        A task can be deleted if it is scheduled or dispatched. A task
        cannot be deleted if it has completed successfully or permanently
        failed.
      operationId: cloudtasks.projects.locations.queues.tasks.delete
      parameters:
        - description: |-
            Required.

            The task name. For example:
            `projects/PROJECT_ID/locations/LOCATION_ID/queues/QUEUE_ID/tasks/TASK_ID`
          in: path
          name: name
          required: true
          type: string
          x-reservedExpansion: true
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Empty'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
      tags:
        - projects
    get:
      description: Gets a task.
      operationId: cloudtasks.projects.locations.queues.tasks.get
      parameters:
        - description: |-
            Required.

            The task name. For example:
            `projects/PROJECT_ID/locations/LOCATION_ID/queues/QUEUE_ID/tasks/TASK_ID`
          in: path
          name: name
          required: true
          type: string
          x-reservedExpansion: true
        - description: |-
            The response_view specifies which subset of the Task will be
            returned.

            By default response_view is Task.View.BASIC; not all
            information is retrieved by default because some data, such as
            payloads, might be desirable to return only when needed because
            of its large size or because of the sensitivity of data that it
            contains.

            Authorization for Task.View.FULL requires `cloudtasks.tasks.fullView`
            [Google IAM](/iam/) permission on the
            Task.name resource.
          enum:
            - VIEW_UNSPECIFIED
            - BASIC
            - FULL
          in: query
          name: responseView
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Task'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
      tags:
        - projects
    parameters:
      - $ref: '#/parameters/$.xgafv'
      - $ref: '#/parameters/access_token'
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/bearer_token'
      - $ref: '#/parameters/callback'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/pp'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/uploadType'
      - $ref: '#/parameters/upload_protocol'
    patch:
      description: |-
        Updates a queue.

        This method creates the queue if it does not exist and updates
        the queue if it does exist.

        WARNING: This method is only available to whitelisted
        users. Using this method carries some risk. Read
        [Overview of Queue Management and queue.yaml](/cloud-tasks/docs/queue-yaml)
        carefully and then sign up for
        [whitelist access to this method](https://goo.gl/Fe5mUy).
      operationId: cloudtasks.projects.locations.queues.patch
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/Queue'
        - description: |-
            The queue name.

            The queue name must have the following format:
            `projects/PROJECT_ID/locations/LOCATION_ID/queues/QUEUE_ID`

            * `PROJECT_ID` can contain uppercase and lowercase letters,
              numbers, hyphens, colons, and periods; that is, it must match
              the regular expression: `[a-zA-Z\\d-:\\.]+`.
            * `QUEUE_ID` can contain uppercase and lowercase letters,
              numbers, and hyphens; that is, it must match the regular
              expression: `[a-zA-Z\\d-]+`. The maximum length is 100
              characters.

            Caller-specified and required in CreateQueueRequest, after which
            it becomes output only.
          in: path
          name: name
          required: true
          type: string
          x-reservedExpansion: true
        - description: |-
            A mask used to specify which fields of the queue are being updated.

            If empty, then all fields will be updated.
          in: query
          name: updateMask
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Queue'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
      tags:
        - projects
  '/v2beta2/{name}/locations':
    get:
      description: Lists information about the supported locations for this service.
      operationId: cloudtasks.projects.locations.list
      parameters:
        - description: The standard list filter.
          in: query
          name: filter
          type: string
        - description: 'The resource that owns the locations collection, if applicable.'
          in: path
          name: name
          required: true
          type: string
          x-reservedExpansion: true
        - description: The standard list page size.
          in: query
          name: pageSize
          type: integer
        - description: The standard list page token.
          in: query
          name: pageToken
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/ListLocationsResponse'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
      tags:
        - projects
    parameters:
      - $ref: '#/parameters/$.xgafv'
      - $ref: '#/parameters/access_token'
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/bearer_token'
      - $ref: '#/parameters/callback'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/pp'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/uploadType'
      - $ref: '#/parameters/upload_protocol'
  '/v2beta2/{name}/tasks:pull':
    parameters:
      - $ref: '#/parameters/$.xgafv'
      - $ref: '#/parameters/access_token'
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/bearer_token'
      - $ref: '#/parameters/callback'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/pp'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/uploadType'
      - $ref: '#/parameters/upload_protocol'
    post:
      description: |-
        Pulls tasks from a pull queue and acquires a lease on them for a
        specified PullTasksRequest.lease_duration.

        This method is invoked by the lease holder to obtain the
        lease. The lease holder must acknowledge the task via
        CloudTasks.AcknowledgeTask after they have performed the work
        associated with the task.

        The payload is intended to store data that the lease holder needs
        to perform the work associated with the task. To return the
        payloads in the PullTasksResponse, set
        PullTasksRequest.response_view to Task.View.FULL.
      operationId: cloudtasks.projects.locations.queues.tasks.pull
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/PullTasksRequest'
        - description: |-
            Required.

            The queue name. For example:
            `projects/PROJECT_ID/locations/LOCATION_ID/queues/QUEUE_ID`
          in: path
          name: name
          required: true
          type: string
          x-reservedExpansion: true
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/PullTasksResponse'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
      tags:
        - projects
  '/v2beta2/{name}:acknowledge':
    parameters:
      - $ref: '#/parameters/$.xgafv'
      - $ref: '#/parameters/access_token'
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/bearer_token'
      - $ref: '#/parameters/callback'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/pp'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/uploadType'
      - $ref: '#/parameters/upload_protocol'
    post:
      description: |-
        Acknowledges a pull task.

        The lease holder, that is, the entity that received this task in
        a PullTasksResponse, must call this method to indicate that
        the work associated with the task has finished.

        The lease holder must acknowledge a task within the
        PullTasksRequest.lease_duration or the lease will expire and
        the task will become ready to be returned in a different
        PullTasksResponse. After the task is acknowledged, it will
        not be returned by a later CloudTasks.PullTasks,
        CloudTasks.GetTask, or CloudTasks.ListTasks.
      operationId: cloudtasks.projects.locations.queues.tasks.acknowledge
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/AcknowledgeTaskRequest'
        - description: |-
            Required.

            The task name. For example:
            `projects/PROJECT_ID/locations/LOCATION_ID/queues/QUEUE_ID/tasks/TASK_ID`
          in: path
          name: name
          required: true
          type: string
          x-reservedExpansion: true
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Empty'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
      tags:
        - projects
  '/v2beta2/{name}:cancelLease':
    parameters:
      - $ref: '#/parameters/$.xgafv'
      - $ref: '#/parameters/access_token'
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/bearer_token'
      - $ref: '#/parameters/callback'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/pp'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/uploadType'
      - $ref: '#/parameters/upload_protocol'
    post:
      description: |-
        Cancel a pull task's lease.

        The lease holder can use this method to cancel a task's lease
        by setting Task.schedule_time to now. This will make the task
        available to be leased to the next caller of CloudTasks.PullTasks.
      operationId: cloudtasks.projects.locations.queues.tasks.cancelLease
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/CancelLeaseRequest'
        - description: |-
            Required.

            The task name. For example:
            `projects/PROJECT_ID/locations/LOCATION_ID/queues/QUEUE_ID/tasks/TASK_ID`
          in: path
          name: name
          required: true
          type: string
          x-reservedExpansion: true
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Task'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
      tags:
        - projects
  '/v2beta2/{name}:pause':
    parameters:
      - $ref: '#/parameters/$.xgafv'
      - $ref: '#/parameters/access_token'
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/bearer_token'
      - $ref: '#/parameters/callback'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/pp'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/uploadType'
      - $ref: '#/parameters/upload_protocol'
    post:
      description: |-
        Pauses the queue.

        If a queue is paused then the system will stop executing the
        tasks in the queue until it is resumed via
        CloudTasks.ResumeQueue. Tasks can still be added when the
        queue is paused. The state of the queue is stored in
        Queue.queue_state; if paused it will be set to
        Queue.QueueState.PAUSED.

        WARNING: This method is only available to whitelisted
        users. Using this method carries some risk. Read
        [Overview of Queue Management and queue.yaml](/cloud-tasks/docs/queue-yaml)
        carefully and then sign up for
        [whitelist access to this method](https://goo.gl/Fe5mUy).
      operationId: cloudtasks.projects.locations.queues.pause
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/PauseQueueRequest'
        - description: |-
            Required.

            The queue name. For example:
            `projects/PROJECT_ID/location/LOCATION_ID/queues/QUEUE_ID`
          in: path
          name: name
          required: true
          type: string
          x-reservedExpansion: true
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Queue'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
      tags:
        - projects
  '/v2beta2/{name}:purge':
    parameters:
      - $ref: '#/parameters/$.xgafv'
      - $ref: '#/parameters/access_token'
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/bearer_token'
      - $ref: '#/parameters/callback'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/pp'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/uploadType'
      - $ref: '#/parameters/upload_protocol'
    post:
      description: |-
        Purges a queue by deleting all of its tasks.

        All tasks created before this method is called are permanently deleted.

        Purge operations can take up to one minute to take effect. Tasks
        might be dispatched before the purge takes effect. A purge is irreversible.
      operationId: cloudtasks.projects.locations.queues.purge
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/PurgeQueueRequest'
        - description: |-
            Required.

            The queue name. For example:
            `projects/PROJECT_ID/location/LOCATION_ID/queues/QUEUE_ID`
          in: path
          name: name
          required: true
          type: string
          x-reservedExpansion: true
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Queue'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
      tags:
        - projects
  '/v2beta2/{name}:renewLease':
    parameters:
      - $ref: '#/parameters/$.xgafv'
      - $ref: '#/parameters/access_token'
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/bearer_token'
      - $ref: '#/parameters/callback'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/pp'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/uploadType'
      - $ref: '#/parameters/upload_protocol'
    post:
      description: |-
        Renew the current lease of a pull task.

        The lease holder can use this method to extend the lease by a new
        duration, starting from now. The new task lease will be
        returned in Task.schedule_time.
      operationId: cloudtasks.projects.locations.queues.tasks.renewLease
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/RenewLeaseRequest'
        - description: |-
            Required.

            The task name. For example:
            `projects/PROJECT_ID/locations/LOCATION_ID/queues/QUEUE_ID/tasks/TASK_ID`
          in: path
          name: name
          required: true
          type: string
          x-reservedExpansion: true
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Task'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
      tags:
        - projects
  '/v2beta2/{name}:resume':
    parameters:
      - $ref: '#/parameters/$.xgafv'
      - $ref: '#/parameters/access_token'
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/bearer_token'
      - $ref: '#/parameters/callback'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/pp'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/uploadType'
      - $ref: '#/parameters/upload_protocol'
    post:
      description: |-
        Resume a queue.

        This method resumes a queue after it has been
        Queue.QueueState.PAUSED or Queue.QueueState.DISABLED. The state of
        a queue is stored in Queue.queue_state; after calling this method it
        will be set to Queue.QueueState.RUNNING.

        WARNING: This method is only available to whitelisted
        users. Using this method carries some risk. Read
        [Overview of Queue Management and queue.yaml](/cloud-tasks/docs/queue-yaml)
        carefully and then sign up for
        [whitelist access to this method](https://goo.gl/Fe5mUy).

        WARNING: Resuming many high-QPS queues at the same time can
        lead to target overloading. If you are resuming high-QPS
        queues, follow the 500/50/5 pattern described in
        [Managing Cloud Tasks Scaling Risks](/cloud-tasks/pdfs/managing-cloud-tasks-scaling-risks-2017-06-05.pdf).
      operationId: cloudtasks.projects.locations.queues.resume
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/ResumeQueueRequest'
        - description: |-
            Required.

            The queue name. For example:
            `projects/PROJECT_ID/location/LOCATION_ID/queues/QUEUE_ID`
          in: path
          name: name
          required: true
          type: string
          x-reservedExpansion: true
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Queue'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
      tags:
        - projects
  '/v2beta2/{name}:run':
    parameters:
      - $ref: '#/parameters/$.xgafv'
      - $ref: '#/parameters/access_token'
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/bearer_token'
      - $ref: '#/parameters/callback'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/pp'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/uploadType'
      - $ref: '#/parameters/upload_protocol'
    post:
      description: |-
        Forces a task to run now.

        This command is meant to be used for manual debugging. For
        example, CloudTasks.RunTask can be used to retry a failed
        task after a fix has been made or to manually force a task to be
        dispatched now.

        When this method is called, Cloud Tasks will dispatch the task to its
        target, even if the queue is Queue.QueueState.PAUSED.

        The dispatched task is returned. That is, the task that is returned
        contains the Task.task_status after the task is dispatched but
        before the task is received by its target.

        If Cloud Tasks receives a successful response from the task's
        handler, then the task will be deleted; otherwise the task's
        Task.schedule_time will be reset to the time that
        CloudTasks.RunTask was called plus the retry delay specified
        in the queue and task's RetryConfig.

        CloudTasks.RunTask returns google.rpc.Code.NOT_FOUND when
        it is called on a task that has already succeeded or permanently
        failed. google.rpc.Code.FAILED_PRECONDITION is returned when
        CloudTasks.RunTask is called on task that is dispatched or
        already running.
      operationId: cloudtasks.projects.locations.queues.tasks.run
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/RunTaskRequest'
        - description: |-
            Required.

            The task name. For example:
            `projects/PROJECT_ID/locations/LOCATION_ID/queues/QUEUE_ID/tasks/TASK_ID`
          in: path
          name: name
          required: true
          type: string
          x-reservedExpansion: true
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Task'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
      tags:
        - projects
  '/v2beta2/{parent}/queues':
    get:
      description: |-
        Lists queues.

        Queues are returned in lexicographical order.
      operationId: cloudtasks.projects.locations.queues.list
      parameters:
        - description: |-
            `filter` can be used to specify a subset of queues. Any Queue
            field can be used as a filter and several operators as supported.
            For example: `<=, <, >=, >, !=, =, :`. The filter syntax is the same as
            described in
            [Stackdriver's Advanced Logs Filters](/logging/docs/view/advanced_filters).

            Sample filter "app_engine_http_target: *".

            Note that using filters might cause fewer queues than the
            requested_page size to be returned.
          in: query
          name: filter
          type: string
        - description: |-
            Requested page size.

            The maximum page size is 9800. If unspecified, the page size will
            be the maximum. Fewer queues than requested might be returned,
            even if more queues exist; use
            ListQueuesResponse.next_page_token to determine if more
            queues exist.
          in: query
          name: pageSize
          type: integer
        - description: |-
            A token identifying the page of results to return.

            To request the first page results, page_token must be empty. To
            request the next page of results, page_token must be the value of
            ListQueuesResponse.next_page_token returned from the previous
            call to CloudTasks.ListQueues method. It is an error to
            switch the value of ListQueuesRequest.filter while iterating
            through pages.
          in: query
          name: pageToken
          type: string
        - description: |-
            Required.

            The location name.
            For example: `projects/PROJECT_ID/locations/LOCATION_ID`
          in: path
          name: parent
          required: true
          type: string
          x-reservedExpansion: true
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/ListQueuesResponse'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
      tags:
        - projects
    parameters:
      - $ref: '#/parameters/$.xgafv'
      - $ref: '#/parameters/access_token'
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/bearer_token'
      - $ref: '#/parameters/callback'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/pp'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/uploadType'
      - $ref: '#/parameters/upload_protocol'
    post:
      description: |-
        Creates a queue.

        WARNING: This method is only available to whitelisted
        users. Using this method carries some risk. Read
        [Overview of Queue Management and queue.yaml](/cloud-tasks/docs/queue-yaml)
        carefully and then sign up for
        [whitelist access to this method](https://goo.gl/Fe5mUy).
      operationId: cloudtasks.projects.locations.queues.create
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/Queue'
        - description: |-
            Required.

            The location name in which the queue will be created.
            For example: `projects/PROJECT_ID/locations/LOCATION_ID`

            The list of allowed locations can be obtained by calling Cloud
            Tasks' implementation of
            google.cloud.location.Locations.ListLocations.
          in: path
          name: parent
          required: true
          type: string
          x-reservedExpansion: true
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Queue'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
      tags:
        - projects
  '/v2beta2/{parent}/tasks':
    get:
      description: |-
        Lists the tasks in a queue.

        By default response_view is Task.View.BASIC; not all
        information is retrieved by default due to performance
        considerations; ListTasksRequest.response_view controls the
        subset of information which is returned.
      operationId: cloudtasks.projects.locations.queues.tasks.list
      parameters:
        - description: |-

            Sort order used for the query. The fields supported for sorting
            are Task.schedule_time and PullMessage.tag. All results will be
            returned in ascending order. The default ordering is by
            Task.schedule_time.
          in: query
          name: orderBy
          type: string
        - description: |-
            Requested page size. Fewer tasks than requested might be returned.

            The maximum page size is 1000. If unspecified, the page size will
            be the maximum. Fewer tasks than requested might be returned,
            even if more tasks exist; use
            ListTasksResponse.next_page_token to determine if more tasks
            exist.
          in: query
          name: pageSize
          type: integer
        - description: |-
            A token identifying the page of results to return.

            To request the first page results, page_token must be empty. To
            request the next page of results, page_token must be the value of
            ListTasksResponse.next_page_token returned from the previous
            call to CloudTasks.ListTasks method.

            The page token is valid for only 2 hours.
          in: query
          name: pageToken
          type: string
        - description: |-
            Required.

            The queue name. For example:
            `projects/PROJECT_ID/locations/LOCATION_ID/queues/QUEUE_ID`
          in: path
          name: parent
          required: true
          type: string
          x-reservedExpansion: true
        - description: |-
            The response_view specifies which subset of the Task will be
            returned.

            By default response_view is Task.View.BASIC; not all
            information is retrieved by default because some data, such as
            payloads, might be desirable to return only when needed because
            of its large size or because of the sensitivity of data that it
            contains.

            Authorization for Task.View.FULL requires `cloudtasks.tasks.fullView`
            [Google IAM](/iam/) permission on the
            Task.name resource.
          enum:
            - VIEW_UNSPECIFIED
            - BASIC
            - FULL
          in: query
          name: responseView
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/ListTasksResponse'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
      tags:
        - projects
    parameters:
      - $ref: '#/parameters/$.xgafv'
      - $ref: '#/parameters/access_token'
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/bearer_token'
      - $ref: '#/parameters/callback'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/pp'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/uploadType'
      - $ref: '#/parameters/upload_protocol'
    post:
      description: |-
        Creates a task and adds it to a queue.

        To add multiple tasks at the same time, use
        [HTTP batching](/storage/docs/json_api/v1/how-tos/batch)
        or the batching documentation for your client library, for example
        https://developers.google.com/api-client-library/python/guide/batch.

        Tasks cannot be updated after creation; there is no UpdateTask command.
      operationId: cloudtasks.projects.locations.queues.tasks.create
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/CreateTaskRequest'
        - description: |-
            Required.

            The queue name. For example:
            `projects/PROJECT_ID/locations/LOCATION_ID/queues/QUEUE_ID`

            The queue must already exist.
          in: path
          name: parent
          required: true
          type: string
          x-reservedExpansion: true
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Task'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
      tags:
        - projects
  '/v2beta2/{resource}:getIamPolicy':
    parameters:
      - $ref: '#/parameters/$.xgafv'
      - $ref: '#/parameters/access_token'
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/bearer_token'
      - $ref: '#/parameters/callback'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/pp'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/uploadType'
      - $ref: '#/parameters/upload_protocol'
    post:
      description: |
        Gets the access control policy for a Queue.
        Returns an empty policy if the resource exists and does not have a policy
        set.

        Authorization requires the following [Google IAM](/iam) permission on the
        specified resource parent:

        * `cloudtasks.queues.getIamPolicy`
      operationId: cloudtasks.projects.locations.queues.getIamPolicy
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/GetIamPolicyRequest'
        - description: |-
            REQUIRED: The resource for which the policy is being requested.
            See the operation documentation for the appropriate value for this field.
          in: path
          name: resource
          required: true
          type: string
          x-reservedExpansion: true
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Policy'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
      tags:
        - projects
  '/v2beta2/{resource}:setIamPolicy':
    parameters:
      - $ref: '#/parameters/$.xgafv'
      - $ref: '#/parameters/access_token'
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/bearer_token'
      - $ref: '#/parameters/callback'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/pp'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/uploadType'
      - $ref: '#/parameters/upload_protocol'
    post:
      description: |
        Sets the access control policy for a Queue. Replaces any existing
        policy.

        Authorization requires the following [Google IAM](/iam) permission on the
        specified resource parent:

        * `cloudtasks.queues.setIamPolicy`
      operationId: cloudtasks.projects.locations.queues.setIamPolicy
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/SetIamPolicyRequest'
        - description: |-
            REQUIRED: The resource for which the policy is being specified.
            See the operation documentation for the appropriate value for this field.
          in: path
          name: resource
          required: true
          type: string
          x-reservedExpansion: true
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Policy'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
      tags:
        - projects
  '/v2beta2/{resource}:testIamPermissions':
    parameters:
      - $ref: '#/parameters/$.xgafv'
      - $ref: '#/parameters/access_token'
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/bearer_token'
      - $ref: '#/parameters/callback'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/pp'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/uploadType'
      - $ref: '#/parameters/upload_protocol'
    post:
      description: |
        Returns permissions that a caller has on a Queue.
        If the resource does not exist, this will return an empty set of
        permissions, not a google.rpc.Code.NOT_FOUND error.

        Note: This operation is designed to be used for building permission-aware
        UIs and command-line tools, not for authorization checking. This operation
        may "fail open" without warning.
      operationId: cloudtasks.projects.locations.queues.testIamPermissions
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/TestIamPermissionsRequest'
        - description: |-
            REQUIRED: The resource for which the policy detail is being requested.
            See the operation documentation for the appropriate value for this field.
          in: path
          name: resource
          required: true
          type: string
          x-reservedExpansion: true
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/TestIamPermissionsResponse'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
      tags:
        - projects
definitions:
  AcknowledgeTaskRequest:
    description: |-
      Request message for acknowledging a task using
      CloudTasks.AcknowledgeTask.
    properties:
      scheduleTime:
        description: |-
          Required.

          The task's current schedule time, available in the Task.schedule_time
          returned in PullTasksResponse.tasks or
          CloudTasks.RenewLease. This restriction is to check that
          the caller is acknowledging the correct task.
        format: google-datetime
        type: string
    type: object
  AppEngineHttpRequest:
    description: |-
      App Engine HTTP request.

      The message defines the HTTP request that is sent to an App Engine app when
      the task is dispatched.

      This proto can only be used for tasks in a queue which has
      Queue.app_engine_http_target set.

      Using AppEngineHttpRequest requires
      [`appengine.applications.get`](/appengine/docs/admin-api/access-control)
      Google IAM permission for the project
      and the following scope:

      `https://www.googleapis.com/auth/cloud-platform`

      The task will be delivered to the App Engine app which belongs to the same
      project as the queue. For more information, see
      [How Requests are Routed](/appengine/docs/standard/python/how-requests-are-routed)
      and how routing is affected by
      [dispatch files](/appengine/docs/python/config/dispatchref).

      The AppEngineRouting used to construct the URL that the task is
      delivered to can be set at the queue-level or task-level:

      *  If set, AppEngineHttpTarget.app_engine_routing_override is used for
         all tasks in the queue, no matter what the setting is for the
         task-level app_engine_routing.


      The `url` that the task will be sent to is:

      * `url =` AppEngineRouting.host `+` AppEngineHttpRequest.relative_url

      The task will be sent to a task handler by an HTTP
      request using the specified AppEngineHttpRequest.http_method (for example
      POST, HTTP GET, etc). The task attempt has succeeded if the task handler
      returns an HTTP response code in the range [200 - 299]. Error 503 is
      considered an App Engine system error instead of an application error.
      Requests returning error 503 will be retried regardless of retry
      configuration and not counted against retry counts.
      Any other response code or a failure to receive a response before the
      deadline is a failed attempt.
    properties:
      appEngineRouting:
        $ref: '#/definitions/AppEngineRouting'
        description: |-
          Task-level setting for App Engine routing.

          If set, AppEngineHttpTarget.app_engine_routing_override is used for
          all tasks in the queue, no matter what the setting is for the
          task-level app_engine_routing.
      headers:
        additionalProperties:
          type: string
        description: |-
          HTTP request headers.

          This map contains the header field names and values.
          Headers can be set when the
          [task is created](google.cloud.tasks.v2beta2.CloudTasks.CreateTask).
          Repeated headers are not supported but a header value can contain commas.

          Cloud Tasks sets some headers to default values:

          * `User-Agent`: By default, this header is
            `"AppEngine-Google; (+http://code.google.com/appengine)"`.
            This header can be modified, but Cloud Tasks will append
            `"AppEngine-Google; (+http://code.google.com/appengine)"` to the
            modified `User-Agent`.

          If the task has an AppEngineHttpRequest.payload, Cloud Tasks sets the
          following headers:

          * `Content-Type`: By default, the `Content-Type` header is set to
            `"application/octet-stream"`. The default can be overridden by explictly
            setting `Content-Type` to a particular media type when the
            [task is created](google.cloud.tasks.v2beta2.CloudTasks.CreateTask).
            For example, `Content-Type` can be set to `"application/json"`.
          * `Content-Length`: This is computed by Cloud Tasks. This value is
            output only. It cannot be changed.

          The headers below cannot be set or overridden:

          * `Host`
          * `X-Google-*`
          * `X-AppEngine-*`

          In addition, some App Engine headers, which contain
          task-specific information, are also be sent to the task handler; see
          [request headers](/appengine/docs/python/taskqueue/push/creating-handlers#reading_request_headers).
        type: object
      httpMethod:
        description: |-
          The HTTP method to use for the request. The default is POST.

          The app's request handler for the task's target URL must be able to handle
          HTTP requests with this http_method, otherwise the task attempt will fail
          with error code 405 "Method Not Allowed" because "the method specified in
          the Request-Line is not allowed for the resource identified by the
          Request-URI". See
          [Writing a push task request handler](/appengine/docs/java/taskqueue/push/creating-handlers#writing_a_push_task_request_handler)
          and the documentation for the request handlers in the language your app is
          written in e.g.
          [python RequestHandler](/appengine/docs/python/tools/webapp/requesthandlerclass).
        enum:
          - HTTP_METHOD_UNSPECIFIED
          - POST
          - GET
          - HEAD
          - PUT
          - DELETE
        type: string
      payload:
        description: |-
          Payload.

          The payload will be sent as the HTTP message body. A message
          body, and thus a payload, is allowed only if the HTTP method is
          POST or PUT. It is an error to set a data payload on a task with
          an incompatible HttpMethod.
        format: byte
        type: string
      relativeUrl:
        description: |-
          The relative URL.

          The relative URL must begin with "/" and must be a valid HTTP relative URL.
          It can contain a path, query string arguments, and `#` fragments.
          If the relative URL is empty, then the root path "/" will be used.
          No spaces are allowed, and the maximum length allowed is 2083 characters.
        type: string
    type: object
  AppEngineHttpTarget:
    description: |-
      App Engine HTTP target.

      The task will be delivered to the App Engine application hostname
      specified by its AppEngineHttpTarget and AppEngineHttpRequest.
      The documentation for AppEngineHttpRequest explains how the
      task's host URL is constructed.

      Using AppEngineHttpTarget requires
      [`appengine.applications.get`](/appengine/docs/admin-api/access-control)
      Google IAM permission for the project
      and the following scope:

      `https://www.googleapis.com/auth/cloud-platform`
    properties:
      appEngineRoutingOverride:
        $ref: '#/definitions/AppEngineRouting'
        description: |-
          Overrides for the
          task-level app_engine_routing.

          If set, AppEngineHttpTarget.app_engine_routing_override is used for
          all tasks in the queue, no matter what the setting is for the
          task-level app_engine_routing.
    type: object
  AppEngineQueueConfig:
    description: Deprecated. Use AppEngineTarget.
    properties:
      appEngineRoutingOverride:
        $ref: '#/definitions/AppEngineRouting'
        description: Deprecated. Use AppEngineTarget.app_engine_routing_override.
    type: object
  AppEngineRouting:
    description: |-
      App Engine Routing.

      For more information about services, versions, and instances see
      [An Overview of App Engine](/appengine/docs/python/an-overview-of-app-engine),
      [Microservices Architecture on Google App Engine](/appengine/docs/python/microservices-on-app-engine),
      [App Engine Standard request routing](/appengine/docs/standard/python/how-requests-are-routed),
      and [App Engine Flex request routing](/appengine/docs/flexible/python/how-requests-are-routed).
    properties:
      host:
        description: |-
          Output only.

          The host that the task is sent to. For more information, see
          [How Requests are Routed](/appengine/docs/standard/python/how-requests-are-routed).

          The host is constructed as:


          * `host = [application_domain_name]`</br>
            `| [service] + '.' + [application_domain_name]`</br>
            `| [version] + '.' + [application_domain_name]`</br>
            `| [version_dot_service]+ '.' + [application_domain_name]`</br>
            `| [instance] + '.' + [application_domain_name]`</br>
            `| [instance_dot_service] + '.' + [application_domain_name]`</br>
            `| [instance_dot_version] + '.' + [application_domain_name]`</br>
            `| [instance_dot_version_dot_service] + '.' + [application_domain_name]`

          * `application_domain_name` = The domain name of the app, for
            example <app-id>.appspot.com, which is associated with the
            queue's project ID. Some tasks which were created using the App Engine
            SDK use a custom domain name.

          * `service =` AppEngineRouting.service

          * `version =` AppEngineRouting.version

          * `version_dot_service =`
            AppEngineRouting.version `+ '.' +` AppEngineRouting.service

          * `instance =` AppEngineRouting.instance

          * `instance_dot_service =`
            AppEngineRouting.instance `+ '.' +` AppEngineRouting.service

          * `instance_dot_version =`
            AppEngineRouting.instance `+ '.' +` AppEngineRouting.version

          * `instance_dot_version_dot_service =`
            AppEngineRouting.instance `+ '.' +`
            AppEngineRouting.version `+ '.' +` AppEngineRouting.service

          If AppEngineRouting.service is empty, then the task will be sent
          to the service which is the default service when the task is attempted.

          If AppEngineRouting.version is empty, then the task will be sent
          to the version which is the default version when the task is attempted.

          If AppEngineRouting.instance is empty, then the task will be sent
          to an instance which is available when the task is attempted.

          When AppEngineRouting.service is "default",
          AppEngineRouting.version is "default", and
          AppEngineRouting.instance is empty, AppEngineRouting.host is
          shortened to just the `application_domain_name`.

          If AppEngineRouting.service, AppEngineRouting.version, or
          AppEngineRouting.instance is invalid, then the task will be sent
          to the default version of the default service when the task is attempted.
        type: string
      instance:
        description: |-
          App instance.

          By default, the task is sent to an instance which is available when
          the task is attempted.

          Requests can only be sent to a specific instance if
          [manual scaling is used in App Engine Standard](/appengine/docs/python/an-overview-of-app-engine?hl=en_US#scaling_types_and_instance_classes).
          App Engine Flex does not support instances. For more information, see
          [App Engine Standard request routing](/appengine/docs/standard/python/how-requests-are-routed)
          and [App Engine Flex request routing](/appengine/docs/flexible/python/how-requests-are-routed).
        type: string
      service:
        description: |-
          App service.

          By default, the task is sent to the service which is the default
          service when the task is attempted ("default").

          For some queues or tasks which were created using the App Engine Task Queue
          API, AppEngineRouting.host is not parsable into
          AppEngineRouting.service, AppEngineRouting.version, and
          AppEngineRouting.instance. For example, some tasks which were created
          using the App Engine SDK use a custom domain name; custom domains are not
          parsed by Cloud Tasks. If AppEngineRouting.host is not parsable, then
          AppEngineRouting.service, AppEngineRouting.version, and
          AppEngineRouting.instance are the empty string.
        type: string
      version:
        description: |-
          App version.

          By default, the task is sent to the version which is the default
          version when the task is attempted ("default").

          For some queues or tasks which were created using the App Engine Task Queue
          API, AppEngineRouting.host is not parsable into
          AppEngineRouting.service, AppEngineRouting.version, and
          AppEngineRouting.instance. For example, some tasks which were created
          using the App Engine SDK use a custom domain name; custom domains are not
          parsed by Cloud Tasks. If AppEngineRouting.host is not parsable, then
          AppEngineRouting.service, AppEngineRouting.version, and
          AppEngineRouting.instance are the empty string.
        type: string
    type: object
  AppEngineTaskTarget:
    description: Deprecated. Use AppEngineHttpRequest.
    properties:
      appEngineRouting:
        $ref: '#/definitions/AppEngineRouting'
        description: Deprecated. Use AppEngineHttpRequest.app_engine_routing.
      headers:
        additionalProperties:
          type: string
        description: Deprecated. Use AppEngineHttpRequest.headers.
        type: object
      httpMethod:
        description: Deprecated. Use AppEngineHttpRequest.http_method.
        enum:
          - HTTP_METHOD_UNSPECIFIED
          - POST
          - GET
          - HEAD
          - PUT
          - DELETE
        type: string
      payload:
        description: Deprecated. Use AppEngineHttpRequest.payload.
        format: byte
        type: string
      relativeUrl:
        description: Deprecated. Use AppEngineHttpRequest.relative_url.
        type: string
    type: object
  AttemptStatus:
    description: The status of a task attempt.
    properties:
      dispatchTime:
        description: |-
          Output only.

          The time that this attempt was dispatched.

          `dispatch_time` will be truncated to the nearest microsecond.
        format: google-datetime
        type: string
      responseStatus:
        $ref: '#/definitions/Status'
        description: |-
          Output only.

          The response from the target for this attempt.

          If the task has not been attempted or the task is currently running
          then the response status is google.rpc.Code.UNKNOWN.
      responseTime:
        description: |-
          Output only.

          The time that this attempt response was received.

          `response_time` will be truncated to the nearest microsecond.
        format: google-datetime
        type: string
      scheduleTime:
        description: |-
          Output only.

          The time that this attempt was scheduled.

          `schedule_time` will be truncated to the nearest microsecond.
        format: google-datetime
        type: string
    type: object
  Binding:
    description: Associates `members` with a `role`.
    properties:
      members:
        description: |+
          Specifies the identities requesting access for a Cloud Platform resource.
          `members` can have the following values:

          * `allUsers`: A special identifier that represents anyone who is
             on the internet; with or without a Google account.

          * `allAuthenticatedUsers`: A special identifier that represents anyone
             who is authenticated with a Google account or a service account.

          * `user:{emailid}`: An email address that represents a specific Google
             account. For example, `alice@gmail.com` or `joe@example.com`.


          * `serviceAccount:{emailid}`: An email address that represents a service
             account. For example, `my-other-app@appspot.gserviceaccount.com`.

          * `group:{emailid}`: An email address that represents a Google group.
             For example, `admins@example.com`.


          * `domain:{domain}`: A Google Apps domain name that represents all the
             users of that domain. For example, `google.com` or `example.com`.

        items:
          type: string
        type: array
      role:
        description: |-
          Role that is assigned to `members`.
          For example, `roles/viewer`, `roles/editor`, or `roles/owner`.
          Required
        type: string
    type: object
  CancelLeaseRequest:
    description: |-
      Request message for canceling a lease using
      CloudTasks.CancelLease.
    properties:
      responseView:
        description: |-
          The response_view specifies which subset of the Task will be
          returned.

          By default response_view is Task.View.BASIC; not all
          information is retrieved by default because some data, such as
          payloads, might be desirable to return only when needed because
          of its large size or because of the sensitivity of data that it
          contains.

          Authorization for Task.View.FULL requires `cloudtasks.tasks.fullView`
          [Google IAM](/iam/) permission on the
          Task.name resource.
        enum:
          - VIEW_UNSPECIFIED
          - BASIC
          - FULL
        type: string
      scheduleTime:
        description: |-
          Required.

          The task's current schedule time, available in the Task.schedule_time
          returned in PullTasksResponse.tasks or
          CloudTasks.RenewLease. This restriction is to check that
          the caller is canceling the correct task.
        format: google-datetime
        type: string
    type: object
  CreateTaskRequest:
    description: Request message for CloudTasks.CreateTask.
    properties:
      responseView:
        description: |-
          The response_view specifies which subset of the Task will be
          returned.

          By default response_view is Task.View.BASIC; not all
          information is retrieved by default because some data, such as
          payloads, might be desirable to return only when needed because
          of its large size or because of the sensitivity of data that it
          contains.

          Authorization for Task.View.FULL requires `cloudtasks.tasks.fullView`
          [Google IAM](/iam/) permission on the
          Task.name resource.
        enum:
          - VIEW_UNSPECIFIED
          - BASIC
          - FULL
        type: string
      task:
        $ref: '#/definitions/Task'
        description: |-
          Required.

          The task to add.

          Task names have the following format:
          `projects/PROJECT_ID/locations/LOCATION_ID/queues/QUEUE_ID/tasks/TASK_ID`.
          The user can optionally specify a name for the task in
          Task.name. If a name is not specified then the system will
          generate a random unique task id, which will be returned in the
          response's Task.name.

          Explicitly specifying a Task.name enables task
          de-duplication. If a task's name is identical to the name of an
          existing task or a task that was deleted or completed within the
          last ~10 days then the call to CloudTasks.CreateTask will
          fail with google.rpc.Code.ALREADY_EXISTS. Because there is an
          extra lookup cost to identify duplicate task names, these
          CloudTasks.CreateTask calls have significantly increased
          latency. Using hashed strings for the task id or for the prefix
          of the task id is recommended. Choosing task ids that are
          sequential or have sequential prefixes, for example using a
          timestamp, causes an increase in latency and error rates in all
          task commands. The infrastructure relies on an approximately
          uniform distribution of task ids to store and serve tasks
          efficiently.

          If Task.schedule_time is not set or is in the past then Cloud
          Tasks will set it to the current time.
    type: object
  Empty:
    description: |-
      A generic empty message that you can re-use to avoid defining duplicated
      empty messages in your APIs. A typical example is to use it as the request
      or the response type of an API method. For instance:

          service Foo {
            rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);
          }

      The JSON representation for `Empty` is empty JSON object `{}`.
    properties: {}
    type: object
  GetIamPolicyRequest:
    description: Request message for `GetIamPolicy` method.
    properties: {}
    type: object
  ListLocationsResponse:
    description: The response message for Locations.ListLocations.
    properties:
      locations:
        description: A list of locations that matches the specified filter in the request.
        items:
          $ref: '#/definitions/Location'
        type: array
      nextPageToken:
        description: The standard List next-page token.
        type: string
    type: object
  ListQueuesResponse:
    description: Response message for CloudTasks.ListQueues.
    properties:
      nextPageToken:
        description: |-
          A token to retrieve next page of results.

          To return the next page of results, call
          CloudTasks.ListQueues with this value as the
          ListQueuesRequest.page_token.

          If the next_page_token is empty, there are no more results.

          The page token is valid for only 2 hours.
        format: byte
        type: string
      queues:
        description: The list of queues.
        items:
          $ref: '#/definitions/Queue'
        type: array
    type: object
  ListTasksResponse:
    description: Response message for listing tasks using CloudTasks.ListTasks.
    properties:
      nextPageToken:
        description: |-
          A token to retrieve next page of results.

          To return the next page of results, call
          CloudTasks.ListTasks with this value as the
          ListTasksRequest.page_token.

          If the next_page_token is empty, there are no more results.
        format: byte
        type: string
      tasks:
        description: The list of tasks.
        items:
          $ref: '#/definitions/Task'
        type: array
    type: object
  Location:
    description: A resource that represents Google Cloud Platform location.
    properties:
      labels:
        additionalProperties:
          type: string
        description: |-
          Cross-service attributes for the location. For example

              {"cloud.googleapis.com/region": "us-east1"}
        type: object
      locationId:
        description: 'The canonical id for this location. For example: `"us-east1"`.'
        type: string
      metadata:
        additionalProperties:
          description: Properties of the object. Contains field @type with type URL.
        description: |-
          Service-specific metadata. For example the available capacity at the given
          location.
        type: object
      name:
        description: |-
          Resource name for the location, which may vary between implementations.
          For example: `"projects/example-project/locations/us-east1"`
        type: string
    type: object
  PauseQueueRequest:
    description: Request message for CloudTasks.PauseQueue.
    properties: {}
    type: object
  Policy:
    description: |-
      Defines an Identity and Access Management (IAM) policy. It is used to
      specify access control policies for Cloud Platform resources.


      A `Policy` consists of a list of `bindings`. A `Binding` binds a list of
      `members` to a `role`, where the members can be user accounts, Google groups,
      Google domains, and service accounts. A `role` is a named list of permissions
      defined by IAM.

      **Example**

          {
            "bindings": [
              {
                "role": "roles/owner",
                "members": [
                  "user:mike@example.com",
                  "group:admins@example.com",
                  "domain:google.com",
                  "serviceAccount:my-other-app@appspot.gserviceaccount.com",
                ]
              },
              {
                "role": "roles/viewer",
                "members": ["user:sean@example.com"]
              }
            ]
          }

      For a description of IAM and its features, see the
      [IAM developer's guide](https://cloud.google.com/iam).
    properties:
      bindings:
        description: |-
          Associates a list of `members` to a `role`.
          `bindings` with no members will result in an error.
        items:
          $ref: '#/definitions/Binding'
        type: array
      etag:
        description: |-
          `etag` is used for optimistic concurrency control as a way to help
          prevent simultaneous updates of a policy from overwriting each other.
          It is strongly suggested that systems make use of the `etag` in the
          read-modify-write cycle to perform policy updates in order to avoid race
          conditions: An `etag` is returned in the response to `getIamPolicy`, and
          systems are expected to put that etag in the request to `setIamPolicy` to
          ensure that their change will be applied to the same version of the policy.

          If no `etag` is provided in the call to `setIamPolicy`, then the existing
          policy is overwritten blindly.
        format: byte
        type: string
      version:
        description: Version of the `Policy`. The default version is 0.
        format: int32
        type: integer
    type: object
  PullMessage:
    description: |-
      The pull message contains data that can be used by the caller of
      CloudTasks.PullTasks to process the task.

      This proto can only be used for tasks in a queue which has
      Queue.pull_target set.
    properties:
      payload:
        description: A data payload consumed by the task worker to execute the task.
        format: byte
        type: string
      tag:
        description: |-
          A meta-data tag for this task.

          This value is used by CloudTasks.PullTasks calls when
          PullTasksRequest.filter is `tag=<tag>`.

          The tag must be less than 500 bytes.
        format: byte
        type: string
    type: object
  PullQueueConfig:
    description: Deprecated. Use PullTarget.
    properties: {}
    type: object
  PullTarget:
    description: Pull target.
    properties: {}
    type: object
  PullTaskTarget:
    description: Deprecated. Use PullMessage.
    properties:
      payload:
        description: Deprecated. Use PullMessage.payload.
        format: byte
        type: string
      tag:
        description: Deprecated. Use PullMessage.tag.
        format: byte
        type: string
    type: object
  PullTasksRequest:
    description: Request message for pulling tasks using CloudTasks.PullTasks.
    properties:
      filter:
        description: |-
          `filter` can be used to specify a subset of tasks to lease.

          When `filter` is set to `tag=<my-tag>` then the
          PullTasksResponse will contain only tasks whose
          PullMessage.tag is equal to `<my-tag>`. `<my-tag>` can be
          a bytes encoded as a string and must be less than 500 bytes.
          If `<my-tag>` includes whitespace or special characters (characters which
          aren't letters, numbers, or underscores), then it must be double-quoted.
          Double quotes and backslashes in quoted strings must be escaped by
          preceding it with a backslash (`\`).

          When `filter` is set to `tag=oldest_tag()`, only tasks which have the same
          tag as the task with the oldest schedule_time will be returned.

          Grammar Syntax:

          * `filter = "tag=" comparable`

          *  `comparable = tag | function`

          * `tag = string | bytes`

          * `function = "oldest_tag()"`



          The `oldest_tag()` function returns tasks which have the same tag as the
          oldest task (ordered by schedule time).
        type: string
      leaseDuration:
        description: |-
          The duration of the lease.

          Each task returned in the PullTasksResponse will have its
          Task.schedule_time set to the current time plus the
          `lease_duration`. A task that has been returned in a
          PullTasksResponse is leased -- that task will not be
          returned in a different PullTasksResponse before the
          Task.schedule_time.

          After the lease holder has successfully finished the work
          associated with the task, the lease holder must call
          CloudTasks.AcknowledgeTask. If the task is not acknowledged
          via CloudTasks.AcknowledgeTask before the
          Task.schedule_time then it will be returned in a later
          PullTasksResponse so that another lease holder can process
          it.

          The maximum lease duration is 1 week.
          `lease_duration` will be truncated to the nearest second.
        format: google-duration
        type: string
      maxTasks:
        description: |-
          The maximum number of tasks to lease. The maximum that can be
          requested is 1000.
        format: int32
        type: integer
      responseView:
        description: |-
          The response_view specifies which subset of the Task will be
          returned.

          By default response_view is Task.View.BASIC; not all
          information is retrieved by default because some data, such as
          payloads, might be desirable to return only when needed because
          of its large size or because of the sensitivity of data that it
          contains.

          Authorization for Task.View.FULL requires `cloudtasks.tasks.fullView`
          [Google IAM](/iam/) permission on the
          Task.name resource.
        enum:
          - VIEW_UNSPECIFIED
          - BASIC
          - FULL
        type: string
    type: object
  PullTasksResponse:
    description: Response message for pulling tasks using CloudTasks.PullTasks.
    properties:
      tasks:
        description: The leased tasks.
        items:
          $ref: '#/definitions/Task'
        type: array
    type: object
  PurgeQueueRequest:
    description: Request message for CloudTasks.PurgeQueue.
    properties: {}
    type: object
  Queue:
    description: |-
      A queue is a container of related tasks. Queues are configured to manage
      how those tasks are dispatched. Configurable properties include rate limits,
      retry options, target types, and others.
    properties:
      appEngineHttpTarget:
        $ref: '#/definitions/AppEngineHttpTarget'
        description: |-
          App Engine HTTP target.

          An App Engine queue is a queue that has an AppEngineHttpTarget.
      appEngineQueueConfig:
        $ref: '#/definitions/AppEngineQueueConfig'
        description: Deprecated. Use Queue.app_engine_http_target.
      name:
        description: |-
          The queue name.

          The queue name must have the following format:
          `projects/PROJECT_ID/locations/LOCATION_ID/queues/QUEUE_ID`

          * `PROJECT_ID` can contain uppercase and lowercase letters,
            numbers, hyphens, colons, and periods; that is, it must match
            the regular expression: `[a-zA-Z\\d-:\\.]+`.
          * `QUEUE_ID` can contain uppercase and lowercase letters,
            numbers, and hyphens; that is, it must match the regular
            expression: `[a-zA-Z\\d-]+`. The maximum length is 100
            characters.

          Caller-specified and required in CreateQueueRequest, after which
          it becomes output only.
        type: string
      pullQueueConfig:
        $ref: '#/definitions/PullQueueConfig'
        description: Deprecated. Use Queue.pull_target.
      pullTarget:
        $ref: '#/definitions/PullTarget'
        description: |-
          Pull target.

          A pull queue is a queue that has a PullTarget.
      purgeTime:
        description: |-
          Output only.

          The last time this queue was purged. All tasks that were
          created before this time were purged.

          A queue can be purged using CloudTasks.PurgeQueue, the
          [App Engine Task Queue SDK, or the Cloud Console](/appengine/docs/standard/python/taskqueue/push/deleting-tasks-and-queues#purging_all_tasks_from_a_queue).

          Purge time will be truncated to the nearest microsecond. Purge
          time will be zero if the queue has never been purged.
        format: google-datetime
        type: string
      queueState:
        description: |-
          Output only.

          The state of the queue.

          `queue_state` can only be changed by called
          CloudTasks.PauseQueue, CloudTasks.ResumeQueue, or uploading
          [queue.yaml](/appengine/docs/python/config/queueref).
          CloudTasks.UpdateQueue cannot be used to change `queue_state`.
        enum:
          - QUEUE_STATE_UNSPECIFIED
          - RUNNING
          - PAUSED
          - DISABLED
        type: string
      retryConfig:
        $ref: '#/definitions/RetryConfig'
        description: |-
          Settings that determine the retry behavior.

          * For tasks created using Cloud Tasks: the queue-level retry settings
            apply to all tasks in the queue that were created using Cloud Tasks.
            Retry settings cannot be set on individual tasks.
          * For tasks created using the App Engine SDK: the queue-level retry
            settings apply to all tasks in the queue which do not have retry settings
            explicitly set on the task and were created by the App Engine SDK. See
            [App Engine documentation](/appengine/docs/standard/python/taskqueue/push/retrying-tasks).
      throttleConfig:
        $ref: '#/definitions/ThrottleConfig'
        description: Config for throttling task dispatches.
    type: object
  RenewLeaseRequest:
    description: Request message for renewing a lease using CloudTasks.RenewLease.
    properties:
      newLeaseDuration:
        description: |-
          Required.

          The desired new lease duration, starting from now.


          The maximum lease duration is 1 week.
          `new_lease_duration` will be truncated to the nearest second.
        format: google-duration
        type: string
      responseView:
        description: |-
          The response_view specifies which subset of the Task will be
          returned.

          By default response_view is Task.View.BASIC; not all
          information is retrieved by default because some data, such as
          payloads, might be desirable to return only when needed because
          of its large size or because of the sensitivity of data that it
          contains.

          Authorization for Task.View.FULL requires `cloudtasks.tasks.fullView`
          [Google IAM](/iam/) permission on the
          Task.name resource.
        enum:
          - VIEW_UNSPECIFIED
          - BASIC
          - FULL
        type: string
      scheduleTime:
        description: |-
          Required.

          The task's current schedule time, available in the Task.schedule_time
          returned in PullTasksResponse.tasks or
          CloudTasks.RenewLease. This restriction is to check that
          the caller is renewing the correct task.
        format: google-datetime
        type: string
    type: object
  ResumeQueueRequest:
    description: Request message for CloudTasks.ResumeQueue.
    properties: {}
    type: object
  RetryConfig:
    description: |-
      Retry config.

      These settings determine retry behavior.

      If a task does not complete successfully, meaning that an
      acknowledgement is not received from the handler before the
      [deadline](/appengine/docs/python/taskqueue/push/#the_task_deadline),
      then it will be retried with exponential backoff according to the
      settings in RetryConfig.
    properties:
      maxAttempts:
        description: |-
          The maximum number of attempts for a task.

          Cloud Tasks will attempt the task `max_attempts` times (that
          is, if the first attempt fails, then there will be
          `max_attempts - 1` retries).  Must be > 0.
        format: int32
        type: integer
      maxBackoff:
        description: |-
          The maximum amount of time to wait before retrying a task after
          it fails. The default is 1 hour.

          * For [App Engine queues](google.cloud.tasks.v2beta2.AppEngineHttpTarget),
            this field is 1 hour by default.
          * For [pull queues](google.cloud.tasks.v2beta2.PullTarget), this field
            is output only and always 0.

          `max_backoff` will be truncated to the nearest second.
        format: google-duration
        type: string
      maxDoublings:
        description: |-
          The maximum number of times that the interval between failed task
          retries will be doubled before the increase becomes constant. The
          constant is: 2**(max_doublings - 1) *
          RetryConfig.min_backoff.

          * For [App Engine queues](google.cloud.tasks.v2beta2.AppEngineHttpTarget),
            this field is 16 by default.
          * For [pull queues](google.cloud.tasks.v2beta2.PullTarget), this field
            is output only and always 0.
        format: int32
        type: integer
      minBackoff:
        description: |-
          The minimum amount of time to wait before retrying a task after
          it fails.

          * For [App Engine queues](google.cloud.tasks.v2beta2.AppEngineHttpTarget),
            this field is 0.1 seconds by default.
          * For [pull queues](google.cloud.tasks.v2beta2.PullTarget), this
            field is output only and always 0.

          `min_backoff` will be truncated to the nearest second.
        format: google-duration
        type: string
      taskAgeLimit:
        description: |-
          If positive, task_age_limit specifies the time limit for retrying a failed
          task, measured from when the task was first run. If specified with
          RetryConfig.max_attempts, the task will be retried until both
          limits are reached.

          If zero, then the task age is unlimited. This field is zero by default.

          `task_age_limit` will be truncated to the nearest second.
        format: google-duration
        type: string
      unlimitedAttempts:
        description: 'If true, then the number of attempts is unlimited.'
        type: boolean
    type: object
  RunTaskRequest:
    description: |-
      Request message for forcing a task to run now using
      CloudTasks.RunTask.
    properties:
      responseView:
        description: |-
          The response_view specifies which subset of the Task will be
          returned.

          By default response_view is Task.View.BASIC; not all
          information is retrieved by default because some data, such as
          payloads, might be desirable to return only when needed because
          of its large size or because of the sensitivity of data that it
          contains.

          Authorization for Task.View.FULL requires `cloudtasks.tasks.fullView`
          [Google IAM](/iam/) permission on the
          Task.name resource.
        enum:
          - VIEW_UNSPECIFIED
          - BASIC
          - FULL
        type: string
    type: object
  SetIamPolicyRequest:
    description: Request message for `SetIamPolicy` method.
    properties:
      policy:
        $ref: '#/definitions/Policy'
        description: |-
          REQUIRED: The complete policy to be applied to the `resource`. The size of
          the policy is limited to a few 10s of KB. An empty policy is a
          valid policy but certain Cloud Platform services (such as Projects)
          might reject them.
    type: object
  Status:
    description: |-
      The `Status` type defines a logical error model that is suitable for different
      programming environments, including REST APIs and RPC APIs. It is used by
      [gRPC](https://github.com/grpc). The error model is designed to be:

      - Simple to use and understand for most users
      - Flexible enough to meet unexpected needs

      # Overview

      The `Status` message contains three pieces of data: error code, error message,
      and error details. The error code should be an enum value of
      google.rpc.Code, but it may accept additional error codes if needed.  The
      error message should be a developer-facing English message that helps
      developers *understand* and *resolve* the error. If a localized user-facing
      error message is needed, put the localized message in the error details or
      localize it in the client. The optional error details may contain arbitrary
      information about the error. There is a predefined set of error detail types
      in the package `google.rpc` that can be used for common error conditions.

      # Language mapping

      The `Status` message is the logical representation of the error model, but it
      is not necessarily the actual wire format. When the `Status` message is
      exposed in different client libraries and different wire protocols, it can be
      mapped differently. For example, it will likely be mapped to some exceptions
      in Java, but more likely mapped to some error codes in C.

      # Other uses

      The error model and the `Status` message can be used in a variety of
      environments, either with or without APIs, to provide a
      consistent developer experience across different environments.

      Example uses of this error model include:

      - Partial errors. If a service needs to return partial errors to the client,
          it may embed the `Status` in the normal response to indicate the partial
          errors.

      - Workflow errors. A typical workflow has multiple steps. Each step may
          have a `Status` message for error reporting.

      - Batch operations. If a client uses batch request and batch response, the
          `Status` message should be used directly inside batch response, one for
          each error sub-response.

      - Asynchronous operations. If an API call embeds asynchronous operation
          results in its response, the status of those operations should be
          represented directly using the `Status` message.

      - Logging. If some API errors are stored in logs, the message `Status` could
          be used directly after any stripping needed for security/privacy reasons.
    properties:
      code:
        description: 'The status code, which should be an enum value of google.rpc.Code.'
        format: int32
        type: integer
      details:
        description: |-
          A list of messages that carry the error details.  There is a common set of
          message types for APIs to use.
        items:
          additionalProperties:
            description: Properties of the object. Contains field @type with type URL.
          type: object
        type: array
      message:
        description: |-
          A developer-facing error message, which should be in English. Any
          user-facing error message should be localized and sent in the
          google.rpc.Status.details field, or localized by the client.
        type: string
    type: object
  Task:
    description: A unit of scheduled work.
    properties:
      appEngineHttpRequest:
        $ref: '#/definitions/AppEngineHttpRequest'
        description: |-
          App Engine HTTP request that is sent to the task's target. Can be set
          only if Queue.app_engine_http_target is set.

          An App Engine task is a task that has AppEngineHttpRequest set.
      appEngineTaskTarget:
        $ref: '#/definitions/AppEngineTaskTarget'
        description: Deprecated. Use Task.app_engine_http_request.
      createTime:
        description: |-
          Output only.

          The time that the task was created.

          `create_time` will be truncated to the nearest second.
        format: google-datetime
        type: string
      name:
        description: |-
          The task name.

          The task name must have the following format:
          `projects/PROJECT_ID/locations/LOCATION_ID/queues/QUEUE_ID/tasks/TASK_ID`

          * `PROJECT_ID` can contain uppercase and lowercase letters,
            numbers, hyphens, colons, and periods; that is, it must match
            the regular expression: `[a-zA-Z\\d-:\\.]+`.
          * `QUEUE_ID` can contain uppercase and lowercase letters,
            numbers, and hyphens; that is, it must match the regular
            expression: `[a-zA-Z\\d-]+`. The maximum length is 100
            characters.
          * `TASK_ID` contain uppercase and lowercase letters, numbers,
            underscores, and hyphens; that is, it must match the regular
            expression: `[a-zA-Z\\d_-]+`. The maximum length is 500
            characters.

          Optionally caller-specified in CreateTaskRequest.
        type: string
      pullMessage:
        $ref: '#/definitions/PullMessage'
        description: |-
          Pull message contains data that should be used by the caller of
          CloudTasks.PullTasks to process the task. Can be set only if
          Queue.pull_target is set.

          A pull task is a task that has PullMessage set.
      pullTaskTarget:
        $ref: '#/definitions/PullTaskTarget'
        description: Deprecated. Use Task.pull_message.
      scheduleTime:
        description: |-
          The time when the task is scheduled to be attempted.

          For pull queues, this is the time when the task is available to
          be leased; if a task is currently leased, this is the time when
          the current lease expires, that is, the time that the task was
          leased plus the PullTasksRequest.lease_duration.

          For App Engine queues, this is when the task will be attempted or retried.

          `schedule_time` will be truncated to the nearest microsecond.
        format: google-datetime
        type: string
      taskStatus:
        $ref: '#/definitions/TaskStatus'
        description: |-
          Output only.

          Task status.
      view:
        description: |-
          Output only.

          The view specifies which subset of the Task has been
          returned.
        enum:
          - VIEW_UNSPECIFIED
          - BASIC
          - FULL
        type: string
    type: object
  TaskStatus:
    description: Status of the task.
    properties:
      attemptDispatchCount:
        description: |-
          Output only.

          The number of attempts dispatched. This count includes tasks which have
          been dispatched but haven't received a response.
        format: int64
        type: string
      attemptResponseCount:
        description: |-
          Output only.

          The number of attempts which have received a response.

          This field is not calculated for
          [pull tasks](google.cloud.tasks.v2beta2.PullTaskTarget).
        format: int64
        type: string
      firstAttemptStatus:
        $ref: '#/definitions/AttemptStatus'
        description: |-
          Output only.

          The status of the task's first attempt.

          Only AttemptStatus.dispatch_time will be set.
          The other AttemptStatus information is not retained by Cloud Tasks.

          This field is not calculated for
          [pull tasks](google.cloud.tasks.v2beta2.PullTaskTarget).
      lastAttemptStatus:
        $ref: '#/definitions/AttemptStatus'
        description: |-
          Output only.

          The status of the task's last attempt.

          This field is not calculated for
          [pull tasks](google.cloud.tasks.v2beta2.PullTaskTarget).
    type: object
  TestIamPermissionsRequest:
    description: Request message for `TestIamPermissions` method.
    properties:
      permissions:
        description: |-
          The set of permissions to check for the `resource`. Permissions with
          wildcards (such as '*' or 'storage.*') are not allowed. For more
          information see
          [IAM Overview](https://cloud.google.com/iam/docs/overview#permissions).
        items:
          type: string
        type: array
    type: object
  TestIamPermissionsResponse:
    description: Response message for `TestIamPermissions` method.
    properties:
      permissions:
        description: |-
          A subset of `TestPermissionsRequest.permissions` that the caller is
          allowed.
        items:
          type: string
        type: array
    type: object
  ThrottleConfig:
    description: |-
      Throttle config.

      These settings determine the throttling behavior.
    properties:
      maxBurstSize:
        description: |-
          Output only.

          The max burst size limits how fast the queue is processed when
          many tasks are in the queue and the rate is high. This field
          allows the queue to have a high rate so processing starts shortly
          after a task is enqueued, but still limits resource usage when
          many tasks are enqueued in a short period of time.

          * For App Engine queues, if
            ThrottleConfig.max_tasks_dispatched_per_second is 1, this
            field is 10; otherwise this field is
            ThrottleConfig.max_tasks_dispatched_per_second / 5.
          * For pull queues, this field is output only and always 10,000.

          Note: For App Engine queues that were created through
          `queue.yaml/xml`, `max_burst_size` might not have the same
          settings as specified above; CloudTasks.UpdateQueue can be
          used to set `max_burst_size` only to the values specified above.

          This field has the same meaning as
          [bucket_size in queue.yaml](/appengine/docs/standard/python/config/queueref#bucket_size).
        format: int32
        type: integer
      maxOutstandingTasks:
        description: |-
          The maximum number of outstanding tasks that Cloud Tasks allows
          to be dispatched for this queue. After this threshold has been
          reached, Cloud Tasks stops dispatching tasks until the number of
          outstanding requests decreases.

          The maximum allowed value is 5,000.

          * For App Engine queues, this field is 10 by default.
          * For pull queues, this field is output only and always -1, which
            indicates no limit.

          This field has the same meaning as
          [max_concurrent_requests in queue.yaml](/appengine/docs/standard/python/config/queueref#max_concurrent_requests).
        format: int32
        type: integer
      maxTasksDispatchedPerSecond:
        description: |-
          The maximum rate at which tasks are dispatched from this
          queue.

          The maximum allowed value is 500.

          * For App Engine queues, this field is 1 by default.
          * For pull queues, this field is output only and always 10,000.

          This field has the same meaning as
          [rate in queue.yaml](/appengine/docs/standard/python/config/queueref#rate).
        format: double
        type: number
    type: object
