syntax = "proto3";

import "google/protobuf/empty.proto";

import "google/api/annotations.proto";

package googleclouddns;

message GetProjectRequest {
    alt alt = 1;
    string fields = 2;
    string key = 3;
    string oauth_token = 4;
    boolean prettyPrint = 5;
    // Identifies the project addressed by this request.
    string project = 6;
    string quotaUser = 7;
    string userIp = 8;
}

message GetProjectManagedZonesRequest {
    alt alt = 1;
    // Restricts the list to return only zones with this domain name.
    string dnsName = 2;
    string fields = 3;
    string key = 4;
    // Optional. Maximum number of results to be returned. If unspecified, the server will decide how many results to return.
    int32 maxResults = 5;
    string oauth_token = 6;
    // Optional. A tag returned by a previous list request that was truncated. Use this parameter to continue a previous list request.
    string pageToken = 7;
    boolean prettyPrint = 8;
    // Identifies the project addressed by this request.
    string project = 9;
    string quotaUser = 10;
    string userIp = 11;
}

message PostProjectManagedZonesRequest {
    alt alt = 1;
    ManagedZone body = 2;
    string fields = 3;
    string key = 4;
    string oauth_token = 5;
    boolean prettyPrint = 6;
    // Identifies the project addressed by this request.
    string project = 7;
    string quotaUser = 8;
    string userIp = 9;
}

message GetProjectManagedZonesManagedZoneRequest {
    alt alt = 1;
    string fields = 2;
    string key = 3;
    // Identifies the managed zone addressed by this request. Can be the managed zone name or id.
    string managedZone = 4;
    string oauth_token = 5;
    boolean prettyPrint = 6;
    // Identifies the project addressed by this request.
    string project = 7;
    string quotaUser = 8;
    string userIp = 9;
}

message DeleteProjectManagedZonesManagedZoneRequest {
    alt alt = 1;
    string fields = 2;
    string key = 3;
    // Identifies the managed zone addressed by this request. Can be the managed zone name or id.
    string managedZone = 4;
    string oauth_token = 5;
    boolean prettyPrint = 6;
    // Identifies the project addressed by this request.
    string project = 7;
    string quotaUser = 8;
    string userIp = 9;
}

message GetProjectManagedZonesManagedZoneChangesRequest {
    alt alt = 1;
    string fields = 2;
    string key = 3;
    // Identifies the managed zone addressed by this request. Can be the managed zone name or id.
    string managedZone = 4;
    // Optional. Maximum number of results to be returned. If unspecified, the server will decide how many results to return.
    int32 maxResults = 5;
    string oauth_token = 6;
    // Optional. A tag returned by a previous list request that was truncated. Use this parameter to continue a previous list request.
    string pageToken = 7;
    boolean prettyPrint = 8;
    // Identifies the project addressed by this request.
    string project = 9;
    string quotaUser = 10;
    // Sorting criterion. The only supported value is change sequence.
    enum GetProjectManagedZonesManagedZoneChangesRequest_SortBy {
        GETPROJECTMANAGEDZONESMANAGEDZONECHANGESREQUEST_SORTBY_CHANGESEQUENCE = 0;
    }
    GetProjectManagedZonesManagedZoneChangesRequest_SortBy sortBy = 11;
    // Sorting order direction: 'ascending' or 'descending'.
    string sortOrder = 12;
    string userIp = 13;
}

message PostProjectManagedZonesManagedZoneChangesRequest {
    alt alt = 1;
    Change body = 2;
    string fields = 3;
    string key = 4;
    // Identifies the managed zone addressed by this request. Can be the managed zone name or id.
    string managedZone = 5;
    string oauth_token = 6;
    boolean prettyPrint = 7;
    // Identifies the project addressed by this request.
    string project = 8;
    string quotaUser = 9;
    string userIp = 10;
}

message GetProjectManagedZonesManagedZoneChangesChangeIdRequest {
    alt alt = 1;
    // The identifier of the requested change, from a previous ResourceRecordSetsChangeResponse.
    string changeId = 2;
    string fields = 3;
    string key = 4;
    // Identifies the managed zone addressed by this request. Can be the managed zone name or id.
    string managedZone = 5;
    string oauth_token = 6;
    boolean prettyPrint = 7;
    // Identifies the project addressed by this request.
    string project = 8;
    string quotaUser = 9;
    string userIp = 10;
}

message GetProjectManagedZonesManagedZoneRrsetsRequest {
    alt alt = 1;
    string fields = 2;
    string key = 3;
    // Identifies the managed zone addressed by this request. Can be the managed zone name or id.
    string managedZone = 4;
    // Optional. Maximum number of results to be returned. If unspecified, the server will decide how many results to return.
    int32 maxResults = 5;
    // Restricts the list to return only records with this fully qualified domain name.
    string name = 6;
    string oauth_token = 7;
    // Optional. A tag returned by a previous list request that was truncated. Use this parameter to continue a previous list request.
    string pageToken = 8;
    boolean prettyPrint = 9;
    // Identifies the project addressed by this request.
    string project = 10;
    string quotaUser = 11;
    // Restricts the list to return only records of this type. If present, the "name" parameter must also be present.
    string type = 12;
    string userIp = 13;
}

message Change {
    // Which ResourceRecordSets to add?
    repeated ResourceRecordSet additions = 1;
    // Which ResourceRecordSets to remove? Must match existing data exactly.
    repeated ResourceRecordSet deletions = 2;
    // Unique identifier for the resource; defined by the server (output only).
    string id = 3;
    // Identifies what kind of resource this is. Value: the fixed string "dns#change".
    string kind = 4;
    // The time that this operation was started by the server (output only). This is in RFC3339 text format.
    string startTime = 5;
    // Status of the operation (output only).
    enum Change_Statu {
        CHANGE_STATU_DONE = 0;
        CHANGE_STATU_PENDING = 1;
    }
    Change_Statu status = 6;
}

message ChangesListResponse {
    // The requested changes.
    repeated Change changes = 1;
    // Type of resource.
    string kind = 2;
    // The presence of this field indicates that there exist more results following your last page of results in pagination order. To fetch them, make another list request using this value as your pagination token.
    // 
    // In this way you can retrieve the complete contents of even very large collections one page at a time. However, if the contents of the collection change between the first and last paginated list request, the set of all elements returned will be an inconsistent view of the collection. There is no way to retrieve a "snapshot" of collections larger than the maximum page size.
    string nextPageToken = 3;
}

message ManagedZone {
    // The time that this resource was created on the server. This is in RFC3339 text format. Output only.
    string creationTime = 1;
    // A mutable string of at most 1024 characters associated with this resource for the user's convenience. Has no effect on the managed zone's function.
    string description = 2;
    // The DNS name of this managed zone, for instance "example.com.".
    string dnsName = 3;
    // Unique identifier for the resource; defined by the server (output only)
    string id = 4;
    // Identifies what kind of resource this is. Value: the fixed string "dns#managedZone".
    string kind = 5;
    // User assigned name for this resource. Must be unique within the project. The name must be 1-63 characters long, must begin with a letter, end with a letter or digit, and only contain lowercase letters, digits or dashes.
    string name = 6;
    // Optionally specifies the NameServerSet for this ManagedZone. A NameServerSet is a set of DNS name servers that all host the same ManagedZones. Most users will leave this field unset.
    string nameServerSet = 7;
    // Delegate your managed_zone to these virtual name servers; defined by the server (output only)
    repeated string nameServers = 8;
}

message ManagedZonesListResponse {
    // Type of resource.
    string kind = 1;
    // The managed zone resources.
    repeated ManagedZone managedZones = 2;
    // The presence of this field indicates that there exist more results following your last page of results in pagination order. To fetch them, make another list request using this value as your page token.
    // 
    // In this way you can retrieve the complete contents of even very large collections one page at a time. However, if the contents of the collection change between the first and last paginated list request, the set of all elements returned will be an inconsistent view of the collection. There is no way to retrieve a consistent snapshot of a collection larger than the maximum page size.
    string nextPageToken = 3;
}

message Project {
    // User assigned unique identifier for the resource (output only).
    string id = 1;
    // Identifies what kind of resource this is. Value: the fixed string "dns#project".
    string kind = 2;
    // Unique numeric identifier for the resource; defined by the server (output only).
    string number = 3;
    // Quotas assigned to this project (output only).
    Quota quota = 4;
}

message Quota {
    // Identifies what kind of resource this is. Value: the fixed string "dns#quota".
    string kind = 1;
    // Maximum allowed number of managed zones in the project.
    int32 managedZones = 2;
    // Maximum allowed number of ResourceRecords per ResourceRecordSet.
    int32 resourceRecordsPerRrset = 3;
    // Maximum allowed number of ResourceRecordSets to add per ChangesCreateRequest.
    int32 rrsetAdditionsPerChange = 4;
    // Maximum allowed number of ResourceRecordSets to delete per ChangesCreateRequest.
    int32 rrsetDeletionsPerChange = 5;
    // Maximum allowed number of ResourceRecordSets per zone in the project.
    int32 rrsetsPerManagedZone = 6;
    // Maximum allowed size for total rrdata in one ChangesCreateRequest in bytes.
    int32 totalRrdataSizePerChange = 7;
}

message ResourceRecordSet {
    // Identifies what kind of resource this is. Value: the fixed string "dns#resourceRecordSet".
    string kind = 1;
    // For example, www.example.com.
    string name = 2;
    // As defined in RFC 1035 (section 5) and RFC 1034 (section 3.6.1).
    repeated string rrdatas = 3;
    // Number of seconds that this ResourceRecordSet can be cached by resolvers.
    int32 ttl = 4;
    // The identifier of a supported record type, for example, A, AAAA, MX, TXT, and so on.
    string type = 5;
}

message ResourceRecordSetsListResponse {
    // Type of resource.
    string kind = 1;
    // The presence of this field indicates that there exist more results following your last page of results in pagination order. To fetch them, make another list request using this value as your pagination token.
    // 
    // In this way you can retrieve the complete contents of even very large collections one page at a time. However, if the contents of the collection change between the first and last paginated list request, the set of all elements returned will be an inconsistent view of the collection. There is no way to retrieve a consistent snapshot of a collection larger than the maximum page size.
    string nextPageToken = 2;
    // The resource record set resources.
    repeated ResourceRecordSet rrsets = 3;
}

enum Alt {
    JSON = 0;
}

service GoogleCloudDNSService {
    // Fetch the representation of an existing Project.
    rpc GetProject(GetProjectRequest) returns (Project) {
      option (google.api.http) = {
        get: "/dns/v1/projects/{project}"
      };
    }
    // Enumerate ManagedZones that have been created but not yet deleted.
    rpc GetProjectManagedZones(GetProjectManagedZonesRequest) returns (ManagedZonesListResponse) {
      option (google.api.http) = {
        get: "/dns/v1/projects/{project}/managedZones"
      };
    }
    // Create a new ManagedZone.
    rpc PostProjectManagedZones(PostProjectManagedZonesRequest) returns (ManagedZone) {
      option (google.api.http) = {
        post: "/dns/v1/projects/{project}/managedZones"
        body: "body"
      };
    }
    // Fetch the representation of an existing ManagedZone.
    rpc GetProjectManagedZonesManagedZone(GetProjectManagedZonesManagedZoneRequest) returns (ManagedZone) {
      option (google.api.http) = {
        get: "/dns/v1/projects/{project}/managedZones/{managedZone}"
      };
    }
    // Delete a previously created ManagedZone.
    rpc DeleteProjectManagedZonesManagedZone(DeleteProjectManagedZonesManagedZoneRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        delete: "/dns/v1/projects/{project}/managedZones/{managedZone}"
      };
    }
    // Enumerate Changes to a ResourceRecordSet collection.
    rpc GetProjectManagedZonesManagedZoneChanges(GetProjectManagedZonesManagedZoneChangesRequest) returns (ChangesListResponse) {
      option (google.api.http) = {
        get: "/dns/v1/projects/{project}/managedZones/{managedZone}/changes"
      };
    }
    // Atomically update the ResourceRecordSet collection.
    rpc PostProjectManagedZonesManagedZoneChanges(PostProjectManagedZonesManagedZoneChangesRequest) returns (Change) {
      option (google.api.http) = {
        post: "/dns/v1/projects/{project}/managedZones/{managedZone}/changes"
        body: "body"
      };
    }
    // Fetch the representation of an existing Change.
    rpc GetProjectManagedZonesManagedZoneChangesChangeId(GetProjectManagedZonesManagedZoneChangesChangeIdRequest) returns (Change) {
      option (google.api.http) = {
        get: "/dns/v1/projects/{project}/managedZones/{managedZone}/changes/{changeId}"
      };
    }
    // Enumerate ResourceRecordSets that have been created but not yet deleted.
    rpc GetProjectManagedZonesManagedZoneRrsets(GetProjectManagedZonesManagedZoneRrsetsRequest) returns (ResourceRecordSetsListResponse) {
      option (google.api.http) = {
        get: "/dns/v1/projects/{project}/managedZones/{managedZone}/rrsets"
      };
    }
}
