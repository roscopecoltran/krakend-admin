swagger: '2.0'
schemes:
  - https
host: storagetransfer.googleapis.com
basePath: /
x-hasEquivalentPaths: true
info:
  contact:
    name: Google
    url: 'https://google.com'
  description: Transfers data from external data sources to a Google Cloud Storage bucket or between Google Cloud Storage buckets.
  title: Google Storage Transfer
  version: v1
  x-apiClientRegistration:
    url: 'https://console.developers.google.com'
  x-apisguru-categories:
    - storage
  x-logo:
    url: 'https://api.apis.guru/v2/cache/logo/https_www.google.com_images_branding_googlelogo_2x_googlelogo_color_272x92dp.png'
  x-origin:
    - converter:
        url: 'https://github.com/lucybot/api-spec-converter'
        version: 2.6.0
      format: google
      url: 'https://storagetransfer.googleapis.com/$discovery/rest?version=v1'
      version: v1
  x-preferred: true
  x-providerName: googleapis.com
  x-serviceName: storagetransfer
externalDocs:
  url: 'https://cloud.google.com/storage/transfer'
securityDefinitions:
  Oauth2:
    authorizationUrl: 'https://accounts.google.com/o/oauth2/auth'
    description: Oauth 2.0 authentication
    flow: implicit
    scopes:
      'https://www.googleapis.com/auth/cloud-platform': View and manage your data across Google Cloud Platform services
    type: oauth2
parameters:
  $.xgafv:
    description: V1 error format.
    enum:
      - '1'
      - '2'
    in: query
    name: $.xgafv
    type: string
  access_token:
    description: OAuth access token.
    in: query
    name: access_token
    type: string
  alt:
    default: json
    description: Data format for response.
    enum:
      - json
      - media
      - proto
    in: query
    name: alt
    type: string
  bearer_token:
    description: OAuth bearer token.
    in: query
    name: bearer_token
    type: string
  callback:
    description: JSONP
    in: query
    name: callback
    type: string
  fields:
    description: Selector specifying which fields to include in a partial response.
    in: query
    name: fields
    type: string
  key:
    description: 'API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.'
    in: query
    name: key
    type: string
  oauth_token:
    description: OAuth 2.0 token for the current user.
    in: query
    name: oauth_token
    type: string
  pp:
    default: true
    description: Pretty-print response.
    in: query
    name: pp
    type: boolean
  prettyPrint:
    default: true
    description: Returns response with indentations and line breaks.
    in: query
    name: prettyPrint
    type: boolean
  quotaUser:
    description: 'Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.'
    in: query
    name: quotaUser
    type: string
  uploadType:
    description: 'Legacy upload protocol for media (e.g. "media", "multipart").'
    in: query
    name: uploadType
    type: string
  upload_protocol:
    description: 'Upload protocol for media (e.g. "raw", "multipart").'
    in: query
    name: upload_protocol
    type: string
tags:
  - name: googleServiceAccounts
  - name: transferJobs
  - name: transferOperations
paths:
  '/v1/googleServiceAccounts/{projectId}':
    get:
      description: |-
        Returns the Google service account that is used by Storage Transfer
        Service to access buckets in the project where transfers
        run or in other projects. Each Google service account is associated
        with one Google Cloud Platform Console project. Users
        should add this service account to the Google Cloud Storage bucket
        ACLs to grant access to Storage Transfer Service. This service
        account is created and owned by Storage Transfer Service and can
        only be used by Storage Transfer Service.
      operationId: storagetransfer.googleServiceAccounts.get
      parameters:
        - description: |-
            The ID of the Google Cloud Platform Console project that the Google service
            account is associated with.
            Required.
          in: path
          name: projectId
          required: true
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/GoogleServiceAccount'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
      tags:
        - googleServiceAccounts
    parameters:
      - $ref: '#/parameters/$.xgafv'
      - $ref: '#/parameters/access_token'
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/bearer_token'
      - $ref: '#/parameters/callback'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/pp'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/uploadType'
      - $ref: '#/parameters/upload_protocol'
  /v1/transferJobs:
    get:
      description: Lists transfer jobs.
      operationId: storagetransfer.transferJobs.list
      parameters:
        - description: |-
            A list of query parameters specified as JSON text in the form of
            {"project_id":"my_project_id",
            "job_names":["jobid1","jobid2",...],
            "job_statuses":["status1","status2",...]}.
            Since `job_names` and `job_statuses` support multiple values, their values
            must be specified with array notation. `project_id` is required. `job_names`
            and `job_statuses` are optional.  The valid values for `job_statuses` are
            case-insensitive: `ENABLED`, `DISABLED`, and `DELETED`.
          in: query
          name: filter
          type: string
        - description: The list page size. The max allowed value is 256.
          in: query
          name: pageSize
          type: integer
        - description: The list page token.
          in: query
          name: pageToken
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/ListTransferJobsResponse'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
      tags:
        - transferJobs
    parameters:
      - $ref: '#/parameters/$.xgafv'
      - $ref: '#/parameters/access_token'
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/bearer_token'
      - $ref: '#/parameters/callback'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/pp'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/uploadType'
      - $ref: '#/parameters/upload_protocol'
    post:
      description: Creates a transfer job that runs periodically.
      operationId: storagetransfer.transferJobs.create
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/TransferJob'
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/TransferJob'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
      tags:
        - transferJobs
  '/v1/{jobName}':
    get:
      description: Gets a transfer job.
      operationId: storagetransfer.transferJobs.get
      parameters:
        - description: |-
            The job to get.
            Required.
          in: path
          name: jobName
          required: true
          type: string
          x-reservedExpansion: true
        - description: |-
            The ID of the Google Cloud Platform Console project that owns the job.
            Required.
          in: query
          name: projectId
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/TransferJob'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
      tags:
        - transferJobs
    parameters:
      - $ref: '#/parameters/$.xgafv'
      - $ref: '#/parameters/access_token'
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/bearer_token'
      - $ref: '#/parameters/callback'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/pp'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/uploadType'
      - $ref: '#/parameters/upload_protocol'
    patch:
      description: |-
        Updates a transfer job. Updating a job's transfer spec does not affect
        transfer operations that are running already. Updating the scheduling
        of a job is not allowed.
      operationId: storagetransfer.transferJobs.patch
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/UpdateTransferJobRequest'
        - description: |-
            The name of job to update.
            Required.
          in: path
          name: jobName
          required: true
          type: string
          x-reservedExpansion: true
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/TransferJob'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
      tags:
        - transferJobs
  '/v1/{name}':
    delete:
      description: This method is not supported and the server returns `UNIMPLEMENTED`.
      operationId: storagetransfer.transferOperations.delete
      parameters:
        - description: The name of the operation resource to be deleted.
          in: path
          name: name
          required: true
          type: string
          x-reservedExpansion: true
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Empty'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
      tags:
        - transferOperations
    get:
      description: |-
        Gets the latest state of a long-running operation.  Clients can use this
        method to poll the operation result at intervals as recommended by the API
        service.
      operationId: storagetransfer.transferOperations.get
      parameters:
        - description: The name of the operation resource.
          in: path
          name: name
          required: true
          type: string
          x-reservedExpansion: true
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Operation'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
      tags:
        - transferOperations
    parameters:
      - $ref: '#/parameters/$.xgafv'
      - $ref: '#/parameters/access_token'
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/bearer_token'
      - $ref: '#/parameters/callback'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/pp'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/uploadType'
      - $ref: '#/parameters/upload_protocol'
  '/v1/{name}:cancel':
    parameters:
      - $ref: '#/parameters/$.xgafv'
      - $ref: '#/parameters/access_token'
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/bearer_token'
      - $ref: '#/parameters/callback'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/pp'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/uploadType'
      - $ref: '#/parameters/upload_protocol'
    post:
      description: Cancels a transfer. Use the get method to check whether the cancellation succeeded or whether the operation completed despite cancellation.
      operationId: storagetransfer.transferOperations.cancel
      parameters:
        - description: The name of the operation resource to be cancelled.
          in: path
          name: name
          required: true
          type: string
          x-reservedExpansion: true
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Empty'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
      tags:
        - transferOperations
  '/v1/{name}:pause':
    parameters:
      - $ref: '#/parameters/$.xgafv'
      - $ref: '#/parameters/access_token'
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/bearer_token'
      - $ref: '#/parameters/callback'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/pp'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/uploadType'
      - $ref: '#/parameters/upload_protocol'
    post:
      description: Pauses a transfer operation.
      operationId: storagetransfer.transferOperations.pause
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/PauseTransferOperationRequest'
        - description: |-
            The name of the transfer operation.
            Required.
          in: path
          name: name
          required: true
          type: string
          x-reservedExpansion: true
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Empty'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
      tags:
        - transferOperations
  '/v1/{name}:resume':
    parameters:
      - $ref: '#/parameters/$.xgafv'
      - $ref: '#/parameters/access_token'
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/bearer_token'
      - $ref: '#/parameters/callback'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/pp'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/uploadType'
      - $ref: '#/parameters/upload_protocol'
    post:
      description: Resumes a transfer operation that is paused.
      operationId: storagetransfer.transferOperations.resume
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/ResumeTransferOperationRequest'
        - description: |-
            The name of the transfer operation.
            Required.
          in: path
          name: name
          required: true
          type: string
          x-reservedExpansion: true
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Empty'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
      tags:
        - transferOperations
definitions:
  AwsAccessKey:
    description: |-
      AWS access key (see
      [AWS Security Credentials](http://docs.aws.amazon.com/general/latest/gr/aws-security-credentials.html)).
    properties:
      accessKeyId:
        description: |-
          AWS access key ID.
          Required.
        type: string
      secretAccessKey:
        description: |-
          AWS secret access key. This field is not returned in RPC responses.
          Required.
        type: string
    type: object
  AwsS3Data:
    description: |-
      An AwsS3Data can be a data source, but not a data sink.
      In an AwsS3Data, an object's name is the S3 object's key name.
    properties:
      awsAccessKey:
        $ref: '#/definitions/AwsAccessKey'
        description: |-
          AWS access key used to sign the API requests to the AWS S3 bucket.
          Permissions on the bucket must be granted to the access ID of the
          AWS access key.
          Required.
      bucketName:
        description: |-
          S3 Bucket name (see
          [Creating a bucket](http://docs.aws.amazon.com/AmazonS3/latest/dev/create-bucket-get-location-example.html)).
          Required.
        type: string
    type: object
  Date:
    description: |-
      Represents a whole calendar date, e.g. date of birth. The time of day and
      time zone are either specified elsewhere or are not significant. The date
      is relative to the Proleptic Gregorian Calendar. The day may be 0 to
      represent a year and month where the day is not significant, e.g. credit card
      expiration date. The year may be 0 to represent a month and day independent
      of year, e.g. anniversary date. Related types are google.type.TimeOfDay
      and `google.protobuf.Timestamp`.
    properties:
      day:
        description: |-
          Day of month. Must be from 1 to 31 and valid for the year and month, or 0
          if specifying a year/month where the day is not significant.
        format: int32
        type: integer
      month:
        description: Month of year. Must be from 1 to 12.
        format: int32
        type: integer
      year:
        description: |-
          Year of date. Must be from 1 to 9999, or 0 if specifying a date without
          a year.
        format: int32
        type: integer
    type: object
  Empty:
    description: |-
      A generic empty message that you can re-use to avoid defining duplicated
      empty messages in your APIs. A typical example is to use it as the request
      or the response type of an API method. For instance:

          service Foo {
            rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);
          }

      The JSON representation for `Empty` is empty JSON object `{}`.
    properties: {}
    type: object
  ErrorLogEntry:
    description: An entry describing an error that has occurred.
    properties:
      errorDetails:
        description: A list of messages that carry the error details.
        items:
          type: string
        type: array
      url:
        description: |-
          A URL that refers to the target (a data source, a data sink,
          or an object) with which the error is associated.
          Required.
        type: string
    type: object
  ErrorSummary:
    description: |-
      A summary of errors by error code, plus a count and sample error log
      entries.
    properties:
      errorCode:
        description: Required.
        enum:
          - OK
          - CANCELLED
          - UNKNOWN
          - INVALID_ARGUMENT
          - DEADLINE_EXCEEDED
          - NOT_FOUND
          - ALREADY_EXISTS
          - PERMISSION_DENIED
          - UNAUTHENTICATED
          - RESOURCE_EXHAUSTED
          - FAILED_PRECONDITION
          - ABORTED
          - OUT_OF_RANGE
          - UNIMPLEMENTED
          - INTERNAL
          - UNAVAILABLE
          - DATA_LOSS
        type: string
      errorCount:
        description: |-
          Count of this type of error.
          Required.
        format: int64
        type: string
      errorLogEntries:
        description: Error samples.
        items:
          $ref: '#/definitions/ErrorLogEntry'
        type: array
    type: object
  GcsData:
    description: |-
      In a GcsData, an object's name is the Google Cloud Storage object's name and
      its `lastModificationTime` refers to the object's updated time, which changes
      when the content or the metadata of the object is updated.
    properties:
      bucketName:
        description: |-
          Google Cloud Storage bucket name (see
          [Bucket Name Requirements](https://cloud.google.com/storage/docs/bucket-naming#requirements)).
          Required.
        type: string
    type: object
  GoogleServiceAccount:
    description: Google service account
    properties:
      accountEmail:
        description: Required.
        type: string
    type: object
  HttpData:
    description: |-
      An HttpData specifies a list of objects on the web to be transferred over
      HTTP.  The information of the objects to be transferred is contained in a
      file referenced by a URL. The first line in the file must be
      "TsvHttpData-1.0", which specifies the format of the file.  Subsequent lines
      specify the information of the list of objects, one object per list entry.
      Each entry has the following tab-delimited fields:

      * HTTP URL - The location of the object.

      * Length - The size of the object in bytes.

      * MD5 - The base64-encoded MD5 hash of the object.

      For an example of a valid TSV file, see
      [Transferring data from URLs](https://cloud.google.com/storage/transfer/create-url-list).

      When transferring data based on a URL list, keep the following in mind:

      * When an object located at `http(s)://hostname:port/<URL-path>` is transferred
      to a data sink, the name of the object at the data sink is
      `<hostname>/<URL-path>`.

      * If the specified size of an object does not match the actual size of the
      object fetched, the object will not be transferred.

      * If the specified MD5 does not match the MD5 computed from the transferred
      bytes, the object transfer will fail. For more information, see
      [Generating MD5 hashes](https://cloud.google.com/storage/transfer/#md5)

      * Ensure that each URL you specify is publicly accessible. For
      example, in Google Cloud Storage you can
      [share an object publicly]
      (https://cloud.google.com/storage/docs/cloud-console#_sharingdata) and get
      a link to it.

      * Storage Transfer Service obeys `robots.txt` rules and requires the source
      HTTP server to support `Range` requests and to return a `Content-Length`
      header in each response.

      * [ObjectConditions](#ObjectConditions) have no effect when filtering objects
      to transfer.
    properties:
      listUrl:
        description: |-
          The URL that points to the file that stores the object list entries.
          This file must allow public access.  Currently, only URLs with HTTP and
          HTTPS schemes are supported.
          Required.
        type: string
    type: object
  ListOperationsResponse:
    description: The response message for Operations.ListOperations.
    properties:
      nextPageToken:
        description: The standard List next-page token.
        type: string
      operations:
        description: A list of operations that matches the specified filter in the request.
        items:
          $ref: '#/definitions/Operation'
        type: array
    type: object
  ListTransferJobsResponse:
    description: Response from ListTransferJobs.
    properties:
      nextPageToken:
        description: The list next page token.
        type: string
      transferJobs:
        description: A list of transfer jobs.
        items:
          $ref: '#/definitions/TransferJob'
        type: array
    type: object
  ObjectConditions:
    description: Conditions that determine which objects will be transferred.
    properties:
      excludePrefixes:
        description: |-
          `excludePrefixes` must follow the requirements described for
          `includePrefixes`.

          The max size of `excludePrefixes` is 1000.
        items:
          type: string
        type: array
      includePrefixes:
        description: |-
          If `includePrefixes` is specified, objects that satisfy the object
          conditions must have names that start with one of the `includePrefixes`
          and that do not start with any of the `excludePrefixes`. If `includePrefixes`
          is not specified, all objects except those that have names starting with
          one of the `excludePrefixes` must satisfy the object conditions.

          Requirements:

            * Each include-prefix and exclude-prefix can contain any sequence of
              Unicode characters, of max length 1024 bytes when UTF8-encoded, and
              must not contain Carriage Return or Line Feed characters.  Wildcard
              matching and regular expression matching are not supported.

            * Each include-prefix and exclude-prefix must omit the leading slash.
              For example, to include the `requests.gz` object in a transfer from
              `s3://my-aws-bucket/logs/y=2015/requests.gz`, specify the include
              prefix as `logs/y=2015/requests.gz`.

            * None of the include-prefix or the exclude-prefix values can be empty,
              if specified.

            * Each include-prefix must include a distinct portion of the object
              namespace, i.e., no include-prefix may be a prefix of another
              include-prefix.

            * Each exclude-prefix must exclude a distinct portion of the object
              namespace, i.e., no exclude-prefix may be a prefix of another
              exclude-prefix.

            * If `includePrefixes` is specified, then each exclude-prefix must start
              with the value of a path explicitly included by `includePrefixes`.

          The max size of `includePrefixes` is 1000.
        items:
          type: string
        type: array
      maxTimeElapsedSinceLastModification:
        description: |-
          `maxTimeElapsedSinceLastModification` is the complement to
          `minTimeElapsedSinceLastModification`.
        format: google-duration
        type: string
      minTimeElapsedSinceLastModification:
        description: |-
          If unspecified, `minTimeElapsedSinceLastModification` takes a zero value
          and `maxTimeElapsedSinceLastModification` takes the maximum possible
          value of Duration. Objects that satisfy the object conditions
          must either have a `lastModificationTime` greater or equal to
          `NOW` - `maxTimeElapsedSinceLastModification` and less than
          `NOW` - `minTimeElapsedSinceLastModification`, or not have a
          `lastModificationTime`.
        format: google-duration
        type: string
    type: object
  Operation:
    description: |-
      This resource represents a long-running operation that is the result of a
      network API call.
    properties:
      done:
        description: |-
          If the value is `false`, it means the operation is still in progress.
          If `true`, the operation is completed, and either `error` or `response` is
          available.
        type: boolean
      error:
        $ref: '#/definitions/Status'
        description: The error result of the operation in case of failure or cancellation.
      metadata:
        additionalProperties:
          description: Properties of the object. Contains field @type with type URL.
        description: Represents the transfer operation object.
        type: object
      name:
        description: 'The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should have the format of `transferOperations/some/unique/name`.'
        type: string
      response:
        additionalProperties:
          description: Properties of the object. Contains field @type with type URL.
        description: |-
          The normal response of the operation in case of success.  If the original
          method returns no data on success, such as `Delete`, the response is
          `google.protobuf.Empty`.  If the original method is standard
          `Get`/`Create`/`Update`, the response should be the resource.  For other
          methods, the response should have the type `XxxResponse`, where `Xxx`
          is the original method name.  For example, if the original method name
          is `TakeSnapshot()`, the inferred response type is
          `TakeSnapshotResponse`.
        type: object
    type: object
  PauseTransferOperationRequest:
    description: Request passed to PauseTransferOperation.
    properties: {}
    type: object
  ResumeTransferOperationRequest:
    description: Request passed to ResumeTransferOperation.
    properties: {}
    type: object
  Schedule:
    description: Transfers can be scheduled to recur or to run just once.
    properties:
      scheduleEndDate:
        $ref: '#/definitions/Date'
        description: |-
          The last day the recurring transfer will be run. If `scheduleEndDate`
          is the same as `scheduleStartDate`, the transfer will be executed only
          once.
      scheduleStartDate:
        $ref: '#/definitions/Date'
        description: |-
          The first day the recurring transfer is scheduled to run. If
          `scheduleStartDate` is in the past, the transfer will run for the first
          time on the following day.
          Required.
      startTimeOfDay:
        $ref: '#/definitions/TimeOfDay'
        description: |-
          The time in UTC at which the transfer will be scheduled to start in a day.
          Transfers may start later than this time. If not specified, recurring and
          one-time transfers that are scheduled to run today will run immediately;
          recurring transfers that are scheduled to run on a future date will start
          at approximately midnight UTC on that date. Note that when configuring a
          transfer with the Cloud Platform Console, the transfer's start time in a
          day is specified in your local timezone.
    type: object
  Status:
    description: |-
      The `Status` type defines a logical error model that is suitable for different
      programming environments, including REST APIs and RPC APIs. It is used by
      [gRPC](https://github.com/grpc). The error model is designed to be:

      - Simple to use and understand for most users
      - Flexible enough to meet unexpected needs

      # Overview

      The `Status` message contains three pieces of data: error code, error message,
      and error details. The error code should be an enum value of
      google.rpc.Code, but it may accept additional error codes if needed.  The
      error message should be a developer-facing English message that helps
      developers *understand* and *resolve* the error. If a localized user-facing
      error message is needed, put the localized message in the error details or
      localize it in the client. The optional error details may contain arbitrary
      information about the error. There is a predefined set of error detail types
      in the package `google.rpc` that can be used for common error conditions.

      # Language mapping

      The `Status` message is the logical representation of the error model, but it
      is not necessarily the actual wire format. When the `Status` message is
      exposed in different client libraries and different wire protocols, it can be
      mapped differently. For example, it will likely be mapped to some exceptions
      in Java, but more likely mapped to some error codes in C.

      # Other uses

      The error model and the `Status` message can be used in a variety of
      environments, either with or without APIs, to provide a
      consistent developer experience across different environments.

      Example uses of this error model include:

      - Partial errors. If a service needs to return partial errors to the client,
          it may embed the `Status` in the normal response to indicate the partial
          errors.

      - Workflow errors. A typical workflow has multiple steps. Each step may
          have a `Status` message for error reporting.

      - Batch operations. If a client uses batch request and batch response, the
          `Status` message should be used directly inside batch response, one for
          each error sub-response.

      - Asynchronous operations. If an API call embeds asynchronous operation
          results in its response, the status of those operations should be
          represented directly using the `Status` message.

      - Logging. If some API errors are stored in logs, the message `Status` could
          be used directly after any stripping needed for security/privacy reasons.
    properties:
      code:
        description: 'The status code, which should be an enum value of google.rpc.Code.'
        format: int32
        type: integer
      details:
        description: |-
          A list of messages that carry the error details.  There is a common set of
          message types for APIs to use.
        items:
          additionalProperties:
            description: Properties of the object. Contains field @type with type URL.
          type: object
        type: array
      message:
        description: |-
          A developer-facing error message, which should be in English. Any
          user-facing error message should be localized and sent in the
          google.rpc.Status.details field, or localized by the client.
        type: string
    type: object
  TimeOfDay:
    description: |-
      Represents a time of day. The date and time zone are either not significant
      or are specified elsewhere. An API may choose to allow leap seconds. Related
      types are google.type.Date and `google.protobuf.Timestamp`.
    properties:
      hours:
        description: |-
          Hours of day in 24 hour format. Should be from 0 to 23. An API may choose
          to allow the value "24:00:00" for scenarios like business closing time.
        format: int32
        type: integer
      minutes:
        description: Minutes of hour of day. Must be from 0 to 59.
        format: int32
        type: integer
      nanos:
        description: 'Fractions of seconds in nanoseconds. Must be from 0 to 999,999,999.'
        format: int32
        type: integer
      seconds:
        description: |-
          Seconds of minutes of the time. Must normally be from 0 to 59. An API may
          allow the value 60 if it allows leap-seconds.
        format: int32
        type: integer
    type: object
  TransferCounters:
    description: A collection of counters that report the progress of a transfer operation.
    properties:
      bytesCopiedToSink:
        description: Bytes that are copied to the data sink.
        format: int64
        type: string
      bytesDeletedFromSink:
        description: Bytes that are deleted from the data sink.
        format: int64
        type: string
      bytesDeletedFromSource:
        description: Bytes that are deleted from the data source.
        format: int64
        type: string
      bytesFailedToDeleteFromSink:
        description: Bytes that failed to be deleted from the data sink.
        format: int64
        type: string
      bytesFoundFromSource:
        description: |-
          Bytes found in the data source that are scheduled to be transferred,
          which will be copied, excluded based on conditions, or skipped due to
          failures.
        format: int64
        type: string
      bytesFoundOnlyFromSink:
        description: Bytes found only in the data sink that are scheduled to be deleted.
        format: int64
        type: string
      bytesFromSourceFailed:
        description: Bytes in the data source that failed during the transfer.
        format: int64
        type: string
      bytesFromSourceSkippedBySync:
        description: |-
          Bytes in the data source that are not transferred because they already
          exist in the data sink.
        format: int64
        type: string
      objectsCopiedToSink:
        description: Objects that are copied to the data sink.
        format: int64
        type: string
      objectsDeletedFromSink:
        description: Objects that are deleted from the data sink.
        format: int64
        type: string
      objectsDeletedFromSource:
        description: Objects that are deleted from the data source.
        format: int64
        type: string
      objectsFailedToDeleteFromSink:
        description: Objects that failed to be deleted from the data sink.
        format: int64
        type: string
      objectsFoundFromSource:
        description: |-
          Objects found in the data source that are scheduled to be transferred,
          which will be copied, excluded based on conditions, or skipped due to
          failures.
        format: int64
        type: string
      objectsFoundOnlyFromSink:
        description: Objects found only in the data sink that are scheduled to be deleted.
        format: int64
        type: string
      objectsFromSourceFailed:
        description: Objects in the data source that failed during the transfer.
        format: int64
        type: string
      objectsFromSourceSkippedBySync:
        description: |-
          Objects in the data source that are not transferred because they already
          exist in the data sink.
        format: int64
        type: string
    type: object
  TransferJob:
    description: |-
      This resource represents the configuration of a transfer job that runs
      periodically.
    properties:
      creationTime:
        description: This field cannot be changed by user requests.
        format: google-datetime
        type: string
      deletionTime:
        description: This field cannot be changed by user requests.
        format: google-datetime
        type: string
      description:
        description: |-
          A description provided by the user for the job. Its max length is 1024
          bytes when Unicode-encoded.
        type: string
      lastModificationTime:
        description: This field cannot be changed by user requests.
        format: google-datetime
        type: string
      name:
        description: |-
          A globally unique name assigned by Storage Transfer Service when the
          job is created. This field should be left empty in requests to create a new
          transfer job; otherwise, the requests result in an `INVALID_ARGUMENT`
          error.
        type: string
      projectId:
        description: The ID of the Google Cloud Platform Console project that owns the job.
        type: string
      schedule:
        $ref: '#/definitions/Schedule'
        description: Schedule specification.
      status:
        description: |-
          Status of the job. This value MUST be specified for
          `CreateTransferJobRequests`.

          NOTE: The effect of the new job status takes place during a subsequent job
          run. For example, if you change the job status from `ENABLED` to
          `DISABLED`, and an operation spawned by the transfer is running, the status
          change would not affect the current operation.
        enum:
          - STATUS_UNSPECIFIED
          - ENABLED
          - DISABLED
          - DELETED
        type: string
      transferSpec:
        $ref: '#/definitions/TransferSpec'
        description: Transfer specification.
    type: object
  TransferOperation:
    description: A description of the execution of a transfer.
    properties:
      counters:
        $ref: '#/definitions/TransferCounters'
        description: Information about the progress of the transfer operation.
      endTime:
        description: End time of this transfer execution.
        format: google-datetime
        type: string
      errorBreakdowns:
        description: Summarizes errors encountered with sample error log entries.
        items:
          $ref: '#/definitions/ErrorSummary'
        type: array
      name:
        description: A globally unique ID assigned by the system.
        type: string
      projectId:
        description: |-
          The ID of the Google Cloud Platform Console project that owns the operation.
          Required.
        type: string
      startTime:
        description: Start time of this transfer execution.
        format: google-datetime
        type: string
      status:
        description: Status of the transfer operation.
        enum:
          - STATUS_UNSPECIFIED
          - IN_PROGRESS
          - PAUSED
          - SUCCESS
          - FAILED
          - ABORTED
        type: string
      transferJobName:
        description: The name of the transfer job that triggers this transfer operation.
        type: string
      transferSpec:
        $ref: '#/definitions/TransferSpec'
        description: |-
          Transfer specification.
          Required.
    type: object
  TransferOptions:
    description: |-
      TransferOptions uses three boolean parameters to define the actions
      to be performed on objects in a transfer.
    properties:
      deleteObjectsFromSourceAfterTransfer:
        description: |-
          Whether objects should be deleted from the source after they are
          transferred to the sink.  Note that this option and
          `deleteObjectsUniqueInSink` are mutually exclusive.
        type: boolean
      deleteObjectsUniqueInSink:
        description: |-
          Whether objects that exist only in the sink should be deleted.  Note that
          this option and `deleteObjectsFromSourceAfterTransfer` are mutually
          exclusive.
        type: boolean
      overwriteObjectsAlreadyExistingInSink:
        description: Whether overwriting objects that already exist in the sink is allowed.
        type: boolean
    type: object
  TransferSpec:
    description: Configuration for running a transfer.
    properties:
      awsS3DataSource:
        $ref: '#/definitions/AwsS3Data'
        description: An AWS S3 data source.
      gcsDataSink:
        $ref: '#/definitions/GcsData'
        description: A Google Cloud Storage data sink.
      gcsDataSource:
        $ref: '#/definitions/GcsData'
        description: A Google Cloud Storage data source.
      httpDataSource:
        $ref: '#/definitions/HttpData'
        description: An HTTP URL data source.
      objectConditions:
        $ref: '#/definitions/ObjectConditions'
        description: |-
          Only objects that satisfy these object conditions are included in the set
          of data source and data sink objects.  Object conditions based on
          objects' `lastModificationTime` do not exclude objects in a data sink.
      transferOptions:
        $ref: '#/definitions/TransferOptions'
        description: |-
          If the option `deleteObjectsUniqueInSink` is `true`, object conditions
          based on objects' `lastModificationTime` are ignored and do not exclude
          objects in a data source or a data sink.
    type: object
  UpdateTransferJobRequest:
    description: Request passed to UpdateTransferJob.
    properties:
      projectId:
        description: |-
          The ID of the Google Cloud Platform Console project that owns the job.
          Required.
        type: string
      transferJob:
        $ref: '#/definitions/TransferJob'
        description: |-
          The job to update. `transferJob` is expected to specify only three fields:
          `description`, `transferSpec`, and `status`.  An UpdateTransferJobRequest
          that specifies other fields will be rejected with an error
          `INVALID_ARGUMENT`.
          Required.
      updateTransferJobFieldMask:
        description: |-
          The field mask of the fields in `transferJob` that are to be updated in
          this request.  Fields in `transferJob` that can be updated are:
          `description`, `transferSpec`, and `status`.  To update the `transferSpec`
          of the job, a complete transfer specification has to be provided. An
          incomplete specification which misses any required fields will be rejected
          with the error `INVALID_ARGUMENT`.
        format: google-fieldmask
        type: string
    type: object
