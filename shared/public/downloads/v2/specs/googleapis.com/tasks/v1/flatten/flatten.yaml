basePath: /tasks/v1
definitions.Task.properties.completed.description: Completion date of the task (as
  a RFC 3339 timestamp). This field is omitted if the task has not been completed.
definitions.Task.properties.completed.format: date-time
definitions.Task.properties.completed.type: string
definitions.Task.properties.deleted.description: Flag indicating whether the task
  has been deleted. The default if False.
definitions.Task.properties.deleted.type: boolean
definitions.Task.properties.due.description: Due date of the task (as a RFC 3339 timestamp).
  Optional.
definitions.Task.properties.due.format: date-time
definitions.Task.properties.due.type: string
definitions.Task.properties.etag.description: ETag of the resource.
definitions.Task.properties.etag.type: string
definitions.Task.properties.hidden.description: Flag indicating whether the task is
  hidden. This is the case if the task had been marked completed when the task list
  was last cleared. The default is False. This field is read-only.
definitions.Task.properties.hidden.type: boolean
definitions.Task.properties.id.description: Task identifier.
definitions.Task.properties.id.type: string
definitions.Task.properties.kind.default: tasks#task
definitions.Task.properties.kind.description: Type of the resource. This is always
  "tasks#task".
definitions.Task.properties.kind.type: string
definitions.Task.properties.links.description: Collection of links. This collection
  is read-only.
definitions.Task.properties.links.items.properties.description.description: 'The description.
  In HTML speak: Everything between <a> and </a>.'
definitions.Task.properties.links.items.properties.description.type: string
definitions.Task.properties.links.items.properties.link.description: The URL.
definitions.Task.properties.links.items.properties.link.type: string
definitions.Task.properties.links.items.properties.type.description: Type of the link,
  e.g. "email".
definitions.Task.properties.links.items.properties.type.type: string
definitions.Task.properties.links.items.type: object
definitions.Task.properties.links.type: array
definitions.Task.properties.notes.description: Notes describing the task. Optional.
definitions.Task.properties.notes.type: string
definitions.Task.properties.parent.description: Parent task identifier. This field
  is omitted if it is a top-level task. This field is read-only. Use the "move" method
  to move the task under a different parent or to the top level.
definitions.Task.properties.parent.type: string
definitions.Task.properties.position.description: String indicating the position of
  the task among its sibling tasks under the same parent task or at the top level.
  If this string is greater than another task's corresponding position string according
  to lexicographical ordering, the task is positioned after the other task under the
  same parent task (or at the top level). This field is read-only. Use the "move"
  method to move the task to another position.
definitions.Task.properties.position.type: string
definitions.Task.properties.selfLink.description: URL pointing to this task. Used
  to retrieve, update, or delete this task.
definitions.Task.properties.selfLink.type: string
definitions.Task.properties.status.description: Status of the task. This is either
  "needsAction" or "completed".
definitions.Task.properties.status.type: string
definitions.Task.properties.title.description: Title of the task.
definitions.Task.properties.title.type: string
definitions.Task.properties.updated.description: Last modification time of the task
  (as a RFC 3339 timestamp).
definitions.Task.properties.updated.format: date-time
definitions.Task.properties.updated.type: string
definitions.Task.type: object
definitions.TaskList.properties.etag.description: ETag of the resource.
definitions.TaskList.properties.etag.type: string
definitions.TaskList.properties.id.description: Task list identifier.
definitions.TaskList.properties.id.type: string
definitions.TaskList.properties.kind.default: tasks#taskList
definitions.TaskList.properties.kind.description: Type of the resource. This is always
  "tasks#taskList".
definitions.TaskList.properties.kind.type: string
definitions.TaskList.properties.selfLink.description: URL pointing to this task list.
  Used to retrieve, update, or delete this task list.
definitions.TaskList.properties.selfLink.type: string
definitions.TaskList.properties.title.description: Title of the task list.
definitions.TaskList.properties.title.type: string
definitions.TaskList.properties.updated.description: Last modification time of the
  task list (as a RFC 3339 timestamp).
definitions.TaskList.properties.updated.format: date-time
definitions.TaskList.properties.updated.type: string
definitions.TaskList.type: object
definitions.TaskLists.properties.etag.description: ETag of the resource.
definitions.TaskLists.properties.etag.type: string
definitions.TaskLists.properties.items.description: Collection of task lists.
definitions.TaskLists.properties.items.items.$ref: '#/definitions/TaskList'
definitions.TaskLists.properties.items.type: array
definitions.TaskLists.properties.kind.default: tasks#taskLists
definitions.TaskLists.properties.kind.description: Type of the resource. This is always
  "tasks#taskLists".
definitions.TaskLists.properties.kind.type: string
definitions.TaskLists.properties.nextPageToken.description: Token that can be used
  to request the next page of this result.
definitions.TaskLists.properties.nextPageToken.type: string
definitions.TaskLists.type: object
definitions.Tasks.properties.etag.description: ETag of the resource.
definitions.Tasks.properties.etag.type: string
definitions.Tasks.properties.items.description: Collection of tasks.
definitions.Tasks.properties.items.items.$ref: '#/definitions/Task'
definitions.Tasks.properties.items.type: array
definitions.Tasks.properties.kind.default: tasks#tasks
definitions.Tasks.properties.kind.description: Type of the resource. This is always
  "tasks#tasks".
definitions.Tasks.properties.kind.type: string
definitions.Tasks.properties.nextPageToken.description: Token used to access the next
  page of this result.
definitions.Tasks.properties.nextPageToken.type: string
definitions.Tasks.type: object
externalDocs.url: https://developers.google.com/google-apps/tasks/firstapp
host: www.googleapis.com
info.contact.name: Google
info.contact.url: https://google.com
info.description: Lets you manage your tasks and task lists.
info.title: Tasks
info.version: v1
info.x-apiClientRegistration.url: https://console.developers.google.com
info.x-apisguru-categories.length: 1
info.x-apisguru-categories[0]: time_management
info.x-logo.url: https://api.apis.guru/v2/cache/logo/https_www.google.com_images_branding_googlelogo_2x_googlelogo_color_272x92dp.png
info.x-origin.length: 1
info.x-origin[0].converter.url: https://github.com/lucybot/api-spec-converter
info.x-origin[0].converter.version: 2.6.0
info.x-origin[0].format: google
info.x-origin[0].url: https://www.googleapis.com/discovery/v1/apis/tasks/v1/rest
info.x-origin[0].version: v1
info.x-preferred: true
info.x-providerName: googleapis.com
info.x-serviceName: tasks
parameters.alt.default: json
parameters.alt.description: Data format for the response.
parameters.alt.enum.length: 1
parameters.alt.enum[0]: json
parameters.alt.in: query
parameters.alt.name: alt
parameters.alt.type: string
parameters.fields.description: Selector specifying which fields to include in a partial
  response.
parameters.fields.in: query
parameters.fields.name: fields
parameters.fields.type: string
parameters.key.description: API key. Your API key identifies your project and provides
  you with API access, quota, and reports. Required unless you provide an OAuth 2.0
  token.
parameters.key.in: query
parameters.key.name: key
parameters.key.type: string
parameters.oauth_token.description: OAuth 2.0 token for the current user.
parameters.oauth_token.in: query
parameters.oauth_token.name: oauth_token
parameters.oauth_token.type: string
parameters.prettyPrint.default: true
parameters.prettyPrint.description: Returns response with indentations and line breaks.
parameters.prettyPrint.in: query
parameters.prettyPrint.name: prettyPrint
parameters.prettyPrint.type: boolean
parameters.quotaUser.description: Available to use for quota purposes for server-side
  applications. Can be any arbitrary string assigned to a user, but should not exceed
  40 characters. Overrides userIp if both are provided.
parameters.quotaUser.in: query
parameters.quotaUser.name: quotaUser
parameters.quotaUser.type: string
parameters.userIp.description: IP address of the site where the request originates.
  Use this if you want to enforce per-user limits.
parameters.userIp.in: query
parameters.userIp.name: userIp
parameters.userIp.type: string
paths./lists/{tasklist}/clear.parameters.length: 7
paths./lists/{tasklist}/clear.parameters[0].$ref: '#/parameters/alt'
paths./lists/{tasklist}/clear.parameters[1].$ref: '#/parameters/fields'
paths./lists/{tasklist}/clear.parameters[2].$ref: '#/parameters/key'
paths./lists/{tasklist}/clear.parameters[3].$ref: '#/parameters/oauth_token'
paths./lists/{tasklist}/clear.parameters[4].$ref: '#/parameters/prettyPrint'
paths./lists/{tasklist}/clear.parameters[5].$ref: '#/parameters/quotaUser'
paths./lists/{tasklist}/clear.parameters[6].$ref: '#/parameters/userIp'
paths./lists/{tasklist}/clear.post.description: Clears all completed tasks from the
  specified task list. The affected tasks will be marked as 'hidden' and no longer
  be returned by default when retrieving all tasks for a task list.
paths./lists/{tasklist}/clear.post.operationId: tasks.tasks.clear
paths./lists/{tasklist}/clear.post.parameters.length: 1
paths./lists/{tasklist}/clear.post.parameters[0].description: Task list identifier.
paths./lists/{tasklist}/clear.post.parameters[0].in: path
paths./lists/{tasklist}/clear.post.parameters[0].name: tasklist
paths./lists/{tasklist}/clear.post.parameters[0].required: true
paths./lists/{tasklist}/clear.post.parameters[0].type: string
paths./lists/{tasklist}/clear.post.responses.200.description: Successful response
paths./lists/{tasklist}/clear.post.security.length: 1
paths./lists/{tasklist}/clear.post.security[0].Oauth2.length: 1
paths./lists/{tasklist}/clear.post.security[0].Oauth2[0]: https://www.googleapis.com/auth/tasks
paths./lists/{tasklist}/clear.post.tags.length: 1
paths./lists/{tasklist}/clear.post.tags[0]: tasks
paths./lists/{tasklist}/tasks.get.description: Returns all tasks in the specified
  task list.
paths./lists/{tasklist}/tasks.get.operationId: tasks.tasks.list
paths./lists/{tasklist}/tasks.get.parameters.length: 11
paths./lists/{tasklist}/tasks.get.parameters[0].description: Task list identifier.
paths./lists/{tasklist}/tasks.get.parameters[0].in: path
paths./lists/{tasklist}/tasks.get.parameters[0].name: tasklist
paths./lists/{tasklist}/tasks.get.parameters[0].required: true
paths./lists/{tasklist}/tasks.get.parameters[0].type: string
paths./lists/{tasklist}/tasks.get.parameters[1].description: Upper bound for a task's
  completion date (as a RFC 3339 timestamp) to filter by. Optional. The default is
  not to filter by completion date.
paths./lists/{tasklist}/tasks.get.parameters[1].in: query
paths./lists/{tasklist}/tasks.get.parameters[1].name: completedMax
paths./lists/{tasklist}/tasks.get.parameters[1].type: string
paths./lists/{tasklist}/tasks.get.parameters[2].description: Lower bound for a task's
  completion date (as a RFC 3339 timestamp) to filter by. Optional. The default is
  not to filter by completion date.
paths./lists/{tasklist}/tasks.get.parameters[2].in: query
paths./lists/{tasklist}/tasks.get.parameters[2].name: completedMin
paths./lists/{tasklist}/tasks.get.parameters[2].type: string
paths./lists/{tasklist}/tasks.get.parameters[3].description: Upper bound for a task's
  due date (as a RFC 3339 timestamp) to filter by. Optional. The default is not to
  filter by due date.
paths./lists/{tasklist}/tasks.get.parameters[3].in: query
paths./lists/{tasklist}/tasks.get.parameters[3].name: dueMax
paths./lists/{tasklist}/tasks.get.parameters[3].type: string
paths./lists/{tasklist}/tasks.get.parameters[4].description: Lower bound for a task's
  due date (as a RFC 3339 timestamp) to filter by. Optional. The default is not to
  filter by due date.
paths./lists/{tasklist}/tasks.get.parameters[4].in: query
paths./lists/{tasklist}/tasks.get.parameters[4].name: dueMin
paths./lists/{tasklist}/tasks.get.parameters[4].type: string
paths./lists/{tasklist}/tasks.get.parameters[5].description: Maximum number of task
  lists returned on one page. Optional. The default is 100.
paths./lists/{tasklist}/tasks.get.parameters[5].in: query
paths./lists/{tasklist}/tasks.get.parameters[5].name: maxResults
paths./lists/{tasklist}/tasks.get.parameters[5].type: string
paths./lists/{tasklist}/tasks.get.parameters[6].description: Token specifying the
  result page to return. Optional.
paths./lists/{tasklist}/tasks.get.parameters[6].in: query
paths./lists/{tasklist}/tasks.get.parameters[6].name: pageToken
paths./lists/{tasklist}/tasks.get.parameters[6].type: string
paths./lists/{tasklist}/tasks.get.parameters[7].description: Flag indicating whether
  completed tasks are returned in the result. Optional. The default is True.
paths./lists/{tasklist}/tasks.get.parameters[7].in: query
paths./lists/{tasklist}/tasks.get.parameters[7].name: showCompleted
paths./lists/{tasklist}/tasks.get.parameters[7].type: boolean
paths./lists/{tasklist}/tasks.get.parameters[8].description: Flag indicating whether
  deleted tasks are returned in the result. Optional. The default is False.
paths./lists/{tasklist}/tasks.get.parameters[8].in: query
paths./lists/{tasklist}/tasks.get.parameters[8].name: showDeleted
paths./lists/{tasklist}/tasks.get.parameters[8].type: boolean
paths./lists/{tasklist}/tasks.get.parameters[9].description: Flag indicating whether
  hidden tasks are returned in the result. Optional. The default is False.
paths./lists/{tasklist}/tasks.get.parameters[9].in: query
paths./lists/{tasklist}/tasks.get.parameters[9].name: showHidden
paths./lists/{tasklist}/tasks.get.parameters[9].type: boolean
paths./lists/{tasklist}/tasks.get.parameters[10].description: Lower bound for a task's
  last modification time (as a RFC 3339 timestamp) to filter by. Optional. The default
  is not to filter by last modification time.
paths./lists/{tasklist}/tasks.get.parameters[10].in: query
paths./lists/{tasklist}/tasks.get.parameters[10].name: updatedMin
paths./lists/{tasklist}/tasks.get.parameters[10].type: string
paths./lists/{tasklist}/tasks.get.responses.200.description: Successful response
paths./lists/{tasklist}/tasks.get.responses.200.schema.$ref: '#/definitions/Tasks'
paths./lists/{tasklist}/tasks.get.security.length: 2
paths./lists/{tasklist}/tasks.get.security[0].Oauth2.length: 1
paths./lists/{tasklist}/tasks.get.security[0].Oauth2[0]: https://www.googleapis.com/auth/tasks
paths./lists/{tasklist}/tasks.get.security[1].Oauth2.length: 1
paths./lists/{tasklist}/tasks.get.security[1].Oauth2[0]: https://www.googleapis.com/auth/tasks.readonly
paths./lists/{tasklist}/tasks.get.tags.length: 1
paths./lists/{tasklist}/tasks.get.tags[0]: tasks
paths./lists/{tasklist}/tasks.parameters.length: 7
paths./lists/{tasklist}/tasks.parameters[0].$ref: '#/parameters/alt'
paths./lists/{tasklist}/tasks.parameters[1].$ref: '#/parameters/fields'
paths./lists/{tasklist}/tasks.parameters[2].$ref: '#/parameters/key'
paths./lists/{tasklist}/tasks.parameters[3].$ref: '#/parameters/oauth_token'
paths./lists/{tasklist}/tasks.parameters[4].$ref: '#/parameters/prettyPrint'
paths./lists/{tasklist}/tasks.parameters[5].$ref: '#/parameters/quotaUser'
paths./lists/{tasklist}/tasks.parameters[6].$ref: '#/parameters/userIp'
paths./lists/{tasklist}/tasks.post.description: Creates a new task on the specified
  task list.
paths./lists/{tasklist}/tasks.post.operationId: tasks.tasks.insert
paths./lists/{tasklist}/tasks.post.parameters.length: 4
paths./lists/{tasklist}/tasks.post.parameters[0].description: Task list identifier.
paths./lists/{tasklist}/tasks.post.parameters[0].in: path
paths./lists/{tasklist}/tasks.post.parameters[0].name: tasklist
paths./lists/{tasklist}/tasks.post.parameters[0].required: true
paths./lists/{tasklist}/tasks.post.parameters[0].type: string
paths./lists/{tasklist}/tasks.post.parameters[1].description: Parent task identifier.
  If the task is created at the top level, this parameter is omitted. Optional.
paths./lists/{tasklist}/tasks.post.parameters[1].in: query
paths./lists/{tasklist}/tasks.post.parameters[1].name: parent
paths./lists/{tasklist}/tasks.post.parameters[1].type: string
paths./lists/{tasklist}/tasks.post.parameters[2].description: Previous sibling task
  identifier. If the task is created at the first position among its siblings, this
  parameter is omitted. Optional.
paths./lists/{tasklist}/tasks.post.parameters[2].in: query
paths./lists/{tasklist}/tasks.post.parameters[2].name: previous
paths./lists/{tasklist}/tasks.post.parameters[2].type: string
paths./lists/{tasklist}/tasks.post.parameters[3].in: body
paths./lists/{tasklist}/tasks.post.parameters[3].name: body
paths./lists/{tasklist}/tasks.post.parameters[3].schema.$ref: '#/definitions/Task'
paths./lists/{tasklist}/tasks.post.responses.200.description: Successful response
paths./lists/{tasklist}/tasks.post.responses.200.schema.$ref: '#/definitions/Task'
paths./lists/{tasklist}/tasks.post.security.length: 1
paths./lists/{tasklist}/tasks.post.security[0].Oauth2.length: 1
paths./lists/{tasklist}/tasks.post.security[0].Oauth2[0]: https://www.googleapis.com/auth/tasks
paths./lists/{tasklist}/tasks.post.tags.length: 1
paths./lists/{tasklist}/tasks.post.tags[0]: tasks
paths./lists/{tasklist}/tasks/{task}.delete.description: Deletes the specified task
  from the task list.
paths./lists/{tasklist}/tasks/{task}.delete.operationId: tasks.tasks.delete
paths./lists/{tasklist}/tasks/{task}.delete.parameters.length: 2
paths./lists/{tasklist}/tasks/{task}.delete.parameters[0].description: Task list identifier.
paths./lists/{tasklist}/tasks/{task}.delete.parameters[0].in: path
paths./lists/{tasklist}/tasks/{task}.delete.parameters[0].name: tasklist
paths./lists/{tasklist}/tasks/{task}.delete.parameters[0].required: true
paths./lists/{tasklist}/tasks/{task}.delete.parameters[0].type: string
paths./lists/{tasklist}/tasks/{task}.delete.parameters[1].description: Task identifier.
paths./lists/{tasklist}/tasks/{task}.delete.parameters[1].in: path
paths./lists/{tasklist}/tasks/{task}.delete.parameters[1].name: task
paths./lists/{tasklist}/tasks/{task}.delete.parameters[1].required: true
paths./lists/{tasklist}/tasks/{task}.delete.parameters[1].type: string
paths./lists/{tasklist}/tasks/{task}.delete.responses.200.description: Successful
  response
paths./lists/{tasklist}/tasks/{task}.delete.security.length: 1
paths./lists/{tasklist}/tasks/{task}.delete.security[0].Oauth2.length: 1
paths./lists/{tasklist}/tasks/{task}.delete.security[0].Oauth2[0]: https://www.googleapis.com/auth/tasks
paths./lists/{tasklist}/tasks/{task}.delete.tags.length: 1
paths./lists/{tasklist}/tasks/{task}.delete.tags[0]: tasks
paths./lists/{tasklist}/tasks/{task}.get.description: Returns the specified task.
paths./lists/{tasklist}/tasks/{task}.get.operationId: tasks.tasks.get
paths./lists/{tasklist}/tasks/{task}.get.parameters.length: 2
paths./lists/{tasklist}/tasks/{task}.get.parameters[0].description: Task list identifier.
paths./lists/{tasklist}/tasks/{task}.get.parameters[0].in: path
paths./lists/{tasklist}/tasks/{task}.get.parameters[0].name: tasklist
paths./lists/{tasklist}/tasks/{task}.get.parameters[0].required: true
paths./lists/{tasklist}/tasks/{task}.get.parameters[0].type: string
paths./lists/{tasklist}/tasks/{task}.get.parameters[1].description: Task identifier.
paths./lists/{tasklist}/tasks/{task}.get.parameters[1].in: path
paths./lists/{tasklist}/tasks/{task}.get.parameters[1].name: task
paths./lists/{tasklist}/tasks/{task}.get.parameters[1].required: true
paths./lists/{tasklist}/tasks/{task}.get.parameters[1].type: string
paths./lists/{tasklist}/tasks/{task}.get.responses.200.description: Successful response
paths./lists/{tasklist}/tasks/{task}.get.responses.200.schema.$ref: '#/definitions/Task'
paths./lists/{tasklist}/tasks/{task}.get.security.length: 2
paths./lists/{tasklist}/tasks/{task}.get.security[0].Oauth2.length: 1
paths./lists/{tasklist}/tasks/{task}.get.security[0].Oauth2[0]: https://www.googleapis.com/auth/tasks
paths./lists/{tasklist}/tasks/{task}.get.security[1].Oauth2.length: 1
paths./lists/{tasklist}/tasks/{task}.get.security[1].Oauth2[0]: https://www.googleapis.com/auth/tasks.readonly
paths./lists/{tasklist}/tasks/{task}.get.tags.length: 1
paths./lists/{tasklist}/tasks/{task}.get.tags[0]: tasks
paths./lists/{tasklist}/tasks/{task}.parameters.length: 7
paths./lists/{tasklist}/tasks/{task}.parameters[0].$ref: '#/parameters/alt'
paths./lists/{tasklist}/tasks/{task}.parameters[1].$ref: '#/parameters/fields'
paths./lists/{tasklist}/tasks/{task}.parameters[2].$ref: '#/parameters/key'
paths./lists/{tasklist}/tasks/{task}.parameters[3].$ref: '#/parameters/oauth_token'
paths./lists/{tasklist}/tasks/{task}.parameters[4].$ref: '#/parameters/prettyPrint'
paths./lists/{tasklist}/tasks/{task}.parameters[5].$ref: '#/parameters/quotaUser'
paths./lists/{tasklist}/tasks/{task}.parameters[6].$ref: '#/parameters/userIp'
paths./lists/{tasklist}/tasks/{task}.patch.description: Updates the specified task.
  This method supports patch semantics.
paths./lists/{tasklist}/tasks/{task}.patch.operationId: tasks.tasks.patch
paths./lists/{tasklist}/tasks/{task}.patch.parameters.length: 3
paths./lists/{tasklist}/tasks/{task}.patch.parameters[0].description: Task list identifier.
paths./lists/{tasklist}/tasks/{task}.patch.parameters[0].in: path
paths./lists/{tasklist}/tasks/{task}.patch.parameters[0].name: tasklist
paths./lists/{tasklist}/tasks/{task}.patch.parameters[0].required: true
paths./lists/{tasklist}/tasks/{task}.patch.parameters[0].type: string
paths./lists/{tasklist}/tasks/{task}.patch.parameters[1].description: Task identifier.
paths./lists/{tasklist}/tasks/{task}.patch.parameters[1].in: path
paths./lists/{tasklist}/tasks/{task}.patch.parameters[1].name: task
paths./lists/{tasklist}/tasks/{task}.patch.parameters[1].required: true
paths./lists/{tasklist}/tasks/{task}.patch.parameters[1].type: string
paths./lists/{tasklist}/tasks/{task}.patch.parameters[2].in: body
paths./lists/{tasklist}/tasks/{task}.patch.parameters[2].name: body
paths./lists/{tasklist}/tasks/{task}.patch.parameters[2].schema.$ref: '#/definitions/Task'
paths./lists/{tasklist}/tasks/{task}.patch.responses.200.description: Successful response
paths./lists/{tasklist}/tasks/{task}.patch.responses.200.schema.$ref: '#/definitions/Task'
paths./lists/{tasklist}/tasks/{task}.patch.security.length: 1
paths./lists/{tasklist}/tasks/{task}.patch.security[0].Oauth2.length: 1
paths./lists/{tasklist}/tasks/{task}.patch.security[0].Oauth2[0]: https://www.googleapis.com/auth/tasks
paths./lists/{tasklist}/tasks/{task}.patch.tags.length: 1
paths./lists/{tasklist}/tasks/{task}.patch.tags[0]: tasks
paths./lists/{tasklist}/tasks/{task}.put.description: Updates the specified task.
paths./lists/{tasklist}/tasks/{task}.put.operationId: tasks.tasks.update
paths./lists/{tasklist}/tasks/{task}.put.parameters.length: 3
paths./lists/{tasklist}/tasks/{task}.put.parameters[0].description: Task list identifier.
paths./lists/{tasklist}/tasks/{task}.put.parameters[0].in: path
paths./lists/{tasklist}/tasks/{task}.put.parameters[0].name: tasklist
paths./lists/{tasklist}/tasks/{task}.put.parameters[0].required: true
paths./lists/{tasklist}/tasks/{task}.put.parameters[0].type: string
paths./lists/{tasklist}/tasks/{task}.put.parameters[1].description: Task identifier.
paths./lists/{tasklist}/tasks/{task}.put.parameters[1].in: path
paths./lists/{tasklist}/tasks/{task}.put.parameters[1].name: task
paths./lists/{tasklist}/tasks/{task}.put.parameters[1].required: true
paths./lists/{tasklist}/tasks/{task}.put.parameters[1].type: string
paths./lists/{tasklist}/tasks/{task}.put.parameters[2].in: body
paths./lists/{tasklist}/tasks/{task}.put.parameters[2].name: body
paths./lists/{tasklist}/tasks/{task}.put.parameters[2].schema.$ref: '#/definitions/Task'
paths./lists/{tasklist}/tasks/{task}.put.responses.200.description: Successful response
paths./lists/{tasklist}/tasks/{task}.put.responses.200.schema.$ref: '#/definitions/Task'
paths./lists/{tasklist}/tasks/{task}.put.security.length: 1
paths./lists/{tasklist}/tasks/{task}.put.security[0].Oauth2.length: 1
paths./lists/{tasklist}/tasks/{task}.put.security[0].Oauth2[0]: https://www.googleapis.com/auth/tasks
paths./lists/{tasklist}/tasks/{task}.put.tags.length: 1
paths./lists/{tasklist}/tasks/{task}.put.tags[0]: tasks
paths./lists/{tasklist}/tasks/{task}/move.parameters.length: 7
paths./lists/{tasklist}/tasks/{task}/move.parameters[0].$ref: '#/parameters/alt'
paths./lists/{tasklist}/tasks/{task}/move.parameters[1].$ref: '#/parameters/fields'
paths./lists/{tasklist}/tasks/{task}/move.parameters[2].$ref: '#/parameters/key'
paths./lists/{tasklist}/tasks/{task}/move.parameters[3].$ref: '#/parameters/oauth_token'
paths./lists/{tasklist}/tasks/{task}/move.parameters[4].$ref: '#/parameters/prettyPrint'
paths./lists/{tasklist}/tasks/{task}/move.parameters[5].$ref: '#/parameters/quotaUser'
paths./lists/{tasklist}/tasks/{task}/move.parameters[6].$ref: '#/parameters/userIp'
paths./lists/{tasklist}/tasks/{task}/move.post.description: Moves the specified task
  to another position in the task list. This can include putting it as a child task
  under a new parent and/or move it to a different position among its sibling tasks.
paths./lists/{tasklist}/tasks/{task}/move.post.operationId: tasks.tasks.move
paths./lists/{tasklist}/tasks/{task}/move.post.parameters.length: 4
paths./lists/{tasklist}/tasks/{task}/move.post.parameters[0].description: Task list
  identifier.
paths./lists/{tasklist}/tasks/{task}/move.post.parameters[0].in: path
paths./lists/{tasklist}/tasks/{task}/move.post.parameters[0].name: tasklist
paths./lists/{tasklist}/tasks/{task}/move.post.parameters[0].required: true
paths./lists/{tasklist}/tasks/{task}/move.post.parameters[0].type: string
paths./lists/{tasklist}/tasks/{task}/move.post.parameters[1].description: Task identifier.
paths./lists/{tasklist}/tasks/{task}/move.post.parameters[1].in: path
paths./lists/{tasklist}/tasks/{task}/move.post.parameters[1].name: task
paths./lists/{tasklist}/tasks/{task}/move.post.parameters[1].required: true
paths./lists/{tasklist}/tasks/{task}/move.post.parameters[1].type: string
paths./lists/{tasklist}/tasks/{task}/move.post.parameters[2].description: New parent
  task identifier. If the task is moved to the top level, this parameter is omitted.
  Optional.
paths./lists/{tasklist}/tasks/{task}/move.post.parameters[2].in: query
paths./lists/{tasklist}/tasks/{task}/move.post.parameters[2].name: parent
paths./lists/{tasklist}/tasks/{task}/move.post.parameters[2].type: string
paths./lists/{tasklist}/tasks/{task}/move.post.parameters[3].description: New previous
  sibling task identifier. If the task is moved to the first position among its siblings,
  this parameter is omitted. Optional.
paths./lists/{tasklist}/tasks/{task}/move.post.parameters[3].in: query
paths./lists/{tasklist}/tasks/{task}/move.post.parameters[3].name: previous
paths./lists/{tasklist}/tasks/{task}/move.post.parameters[3].type: string
paths./lists/{tasklist}/tasks/{task}/move.post.responses.200.description: Successful
  response
paths./lists/{tasklist}/tasks/{task}/move.post.responses.200.schema.$ref: '#/definitions/Task'
paths./lists/{tasklist}/tasks/{task}/move.post.security.length: 1
paths./lists/{tasklist}/tasks/{task}/move.post.security[0].Oauth2.length: 1
paths./lists/{tasklist}/tasks/{task}/move.post.security[0].Oauth2[0]: https://www.googleapis.com/auth/tasks
paths./lists/{tasklist}/tasks/{task}/move.post.tags.length: 1
paths./lists/{tasklist}/tasks/{task}/move.post.tags[0]: tasks
paths./users/@me/lists.get.description: Returns all the authenticated user's task
  lists.
paths./users/@me/lists.get.operationId: tasks.tasklists.list
paths./users/@me/lists.get.parameters.length: 2
paths./users/@me/lists.get.parameters[0].description: Maximum number of task lists
  returned on one page. Optional. The default is 100.
paths./users/@me/lists.get.parameters[0].in: query
paths./users/@me/lists.get.parameters[0].name: maxResults
paths./users/@me/lists.get.parameters[0].type: string
paths./users/@me/lists.get.parameters[1].description: Token specifying the result
  page to return. Optional.
paths./users/@me/lists.get.parameters[1].in: query
paths./users/@me/lists.get.parameters[1].name: pageToken
paths./users/@me/lists.get.parameters[1].type: string
paths./users/@me/lists.get.responses.200.description: Successful response
paths./users/@me/lists.get.responses.200.schema.$ref: '#/definitions/TaskLists'
paths./users/@me/lists.get.security.length: 2
paths./users/@me/lists.get.security[0].Oauth2.length: 1
paths./users/@me/lists.get.security[0].Oauth2[0]: https://www.googleapis.com/auth/tasks
paths./users/@me/lists.get.security[1].Oauth2.length: 1
paths./users/@me/lists.get.security[1].Oauth2[0]: https://www.googleapis.com/auth/tasks.readonly
paths./users/@me/lists.get.tags.length: 1
paths./users/@me/lists.get.tags[0]: tasklists
paths./users/@me/lists.parameters.length: 7
paths./users/@me/lists.parameters[0].$ref: '#/parameters/alt'
paths./users/@me/lists.parameters[1].$ref: '#/parameters/fields'
paths./users/@me/lists.parameters[2].$ref: '#/parameters/key'
paths./users/@me/lists.parameters[3].$ref: '#/parameters/oauth_token'
paths./users/@me/lists.parameters[4].$ref: '#/parameters/prettyPrint'
paths./users/@me/lists.parameters[5].$ref: '#/parameters/quotaUser'
paths./users/@me/lists.parameters[6].$ref: '#/parameters/userIp'
paths./users/@me/lists.post.description: Creates a new task list and adds it to the
  authenticated user's task lists.
paths./users/@me/lists.post.operationId: tasks.tasklists.insert
paths./users/@me/lists.post.parameters.length: 1
paths./users/@me/lists.post.parameters[0].in: body
paths./users/@me/lists.post.parameters[0].name: body
paths./users/@me/lists.post.parameters[0].schema.$ref: '#/definitions/TaskList'
paths./users/@me/lists.post.responses.200.description: Successful response
paths./users/@me/lists.post.responses.200.schema.$ref: '#/definitions/TaskList'
paths./users/@me/lists.post.security.length: 1
paths./users/@me/lists.post.security[0].Oauth2.length: 1
paths./users/@me/lists.post.security[0].Oauth2[0]: https://www.googleapis.com/auth/tasks
paths./users/@me/lists.post.tags.length: 1
paths./users/@me/lists.post.tags[0]: tasklists
paths./users/@me/lists/{tasklist}.delete.description: Deletes the authenticated user's
  specified task list.
paths./users/@me/lists/{tasklist}.delete.operationId: tasks.tasklists.delete
paths./users/@me/lists/{tasklist}.delete.parameters.length: 1
paths./users/@me/lists/{tasklist}.delete.parameters[0].description: Task list identifier.
paths./users/@me/lists/{tasklist}.delete.parameters[0].in: path
paths./users/@me/lists/{tasklist}.delete.parameters[0].name: tasklist
paths./users/@me/lists/{tasklist}.delete.parameters[0].required: true
paths./users/@me/lists/{tasklist}.delete.parameters[0].type: string
paths./users/@me/lists/{tasklist}.delete.responses.200.description: Successful response
paths./users/@me/lists/{tasklist}.delete.security.length: 1
paths./users/@me/lists/{tasklist}.delete.security[0].Oauth2.length: 1
paths./users/@me/lists/{tasklist}.delete.security[0].Oauth2[0]: https://www.googleapis.com/auth/tasks
paths./users/@me/lists/{tasklist}.delete.tags.length: 1
paths./users/@me/lists/{tasklist}.delete.tags[0]: tasklists
paths./users/@me/lists/{tasklist}.get.description: Returns the authenticated user's
  specified task list.
paths./users/@me/lists/{tasklist}.get.operationId: tasks.tasklists.get
paths./users/@me/lists/{tasklist}.get.parameters.length: 1
paths./users/@me/lists/{tasklist}.get.parameters[0].description: Task list identifier.
paths./users/@me/lists/{tasklist}.get.parameters[0].in: path
paths./users/@me/lists/{tasklist}.get.parameters[0].name: tasklist
paths./users/@me/lists/{tasklist}.get.parameters[0].required: true
paths./users/@me/lists/{tasklist}.get.parameters[0].type: string
paths./users/@me/lists/{tasklist}.get.responses.200.description: Successful response
paths./users/@me/lists/{tasklist}.get.responses.200.schema.$ref: '#/definitions/TaskList'
paths./users/@me/lists/{tasklist}.get.security.length: 2
paths./users/@me/lists/{tasklist}.get.security[0].Oauth2.length: 1
paths./users/@me/lists/{tasklist}.get.security[0].Oauth2[0]: https://www.googleapis.com/auth/tasks
paths./users/@me/lists/{tasklist}.get.security[1].Oauth2.length: 1
paths./users/@me/lists/{tasklist}.get.security[1].Oauth2[0]: https://www.googleapis.com/auth/tasks.readonly
paths./users/@me/lists/{tasklist}.get.tags.length: 1
paths./users/@me/lists/{tasklist}.get.tags[0]: tasklists
paths./users/@me/lists/{tasklist}.parameters.length: 7
paths./users/@me/lists/{tasklist}.parameters[0].$ref: '#/parameters/alt'
paths./users/@me/lists/{tasklist}.parameters[1].$ref: '#/parameters/fields'
paths./users/@me/lists/{tasklist}.parameters[2].$ref: '#/parameters/key'
paths./users/@me/lists/{tasklist}.parameters[3].$ref: '#/parameters/oauth_token'
paths./users/@me/lists/{tasklist}.parameters[4].$ref: '#/parameters/prettyPrint'
paths./users/@me/lists/{tasklist}.parameters[5].$ref: '#/parameters/quotaUser'
paths./users/@me/lists/{tasklist}.parameters[6].$ref: '#/parameters/userIp'
paths./users/@me/lists/{tasklist}.patch.description: Updates the authenticated user's
  specified task list. This method supports patch semantics.
paths./users/@me/lists/{tasklist}.patch.operationId: tasks.tasklists.patch
paths./users/@me/lists/{tasklist}.patch.parameters.length: 2
paths./users/@me/lists/{tasklist}.patch.parameters[0].description: Task list identifier.
paths./users/@me/lists/{tasklist}.patch.parameters[0].in: path
paths./users/@me/lists/{tasklist}.patch.parameters[0].name: tasklist
paths./users/@me/lists/{tasklist}.patch.parameters[0].required: true
paths./users/@me/lists/{tasklist}.patch.parameters[0].type: string
paths./users/@me/lists/{tasklist}.patch.parameters[1].in: body
paths./users/@me/lists/{tasklist}.patch.parameters[1].name: body
paths./users/@me/lists/{tasklist}.patch.parameters[1].schema.$ref: '#/definitions/TaskList'
paths./users/@me/lists/{tasklist}.patch.responses.200.description: Successful response
paths./users/@me/lists/{tasklist}.patch.responses.200.schema.$ref: '#/definitions/TaskList'
paths./users/@me/lists/{tasklist}.patch.security.length: 1
paths./users/@me/lists/{tasklist}.patch.security[0].Oauth2.length: 1
paths./users/@me/lists/{tasklist}.patch.security[0].Oauth2[0]: https://www.googleapis.com/auth/tasks
paths./users/@me/lists/{tasklist}.patch.tags.length: 1
paths./users/@me/lists/{tasklist}.patch.tags[0]: tasklists
paths./users/@me/lists/{tasklist}.put.description: Updates the authenticated user's
  specified task list.
paths./users/@me/lists/{tasklist}.put.operationId: tasks.tasklists.update
paths./users/@me/lists/{tasklist}.put.parameters.length: 2
paths./users/@me/lists/{tasklist}.put.parameters[0].description: Task list identifier.
paths./users/@me/lists/{tasklist}.put.parameters[0].in: path
paths./users/@me/lists/{tasklist}.put.parameters[0].name: tasklist
paths./users/@me/lists/{tasklist}.put.parameters[0].required: true
paths./users/@me/lists/{tasklist}.put.parameters[0].type: string
paths./users/@me/lists/{tasklist}.put.parameters[1].in: body
paths./users/@me/lists/{tasklist}.put.parameters[1].name: body
paths./users/@me/lists/{tasklist}.put.parameters[1].schema.$ref: '#/definitions/TaskList'
paths./users/@me/lists/{tasklist}.put.responses.200.description: Successful response
paths./users/@me/lists/{tasklist}.put.responses.200.schema.$ref: '#/definitions/TaskList'
paths./users/@me/lists/{tasklist}.put.security.length: 1
paths./users/@me/lists/{tasklist}.put.security[0].Oauth2.length: 1
paths./users/@me/lists/{tasklist}.put.security[0].Oauth2[0]: https://www.googleapis.com/auth/tasks
paths./users/@me/lists/{tasklist}.put.tags.length: 1
paths./users/@me/lists/{tasklist}.put.tags[0]: tasklists
schemes.length: 1
schemes[0]: https
securityDefinitions.Oauth2.authorizationUrl: https://accounts.google.com/o/oauth2/auth
securityDefinitions.Oauth2.description: Oauth 2.0 authentication
securityDefinitions.Oauth2.flow: implicit
securityDefinitions.Oauth2.scopes.https://www.googleapis.com/auth/tasks: Manage your
  tasks
securityDefinitions.Oauth2.scopes.https://www.googleapis.com/auth/tasks.readonly: View
  your tasks
securityDefinitions.Oauth2.type: oauth2
swagger: "2.0"
tags.length: 2
tags[0].name: tasklists
tags[1].name: tasks
