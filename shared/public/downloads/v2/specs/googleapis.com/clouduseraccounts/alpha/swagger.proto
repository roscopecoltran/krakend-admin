syntax = "proto3";

import "google/protobuf/empty.proto";

import "google/api/annotations.proto";

package clouduseraccounts;

message GetProjectGlobalGroupsRequest {
    alt alt = 1;
    string fields = 2;
    // Sets a filter expression for filtering listed resources, in the form filter={expression}. Your {expression} must be in the format: field_name comparison_string literal_string.
    // 
    // The field_name is the name of the field you want to compare. Only atomic field types are supported (string, number, boolean). The comparison_string must be either eq (equals) or ne (not equals). The literal_string is the string value to filter to. The literal value must be valid for the type of field you are filtering by (string, number, boolean). For string fields, the literal value is interpreted as a regular expression using RE2 syntax. The literal value must match the entire field.
    // 
    // For example, to filter for instances that do not have a name of example-instance, you would use filter=name ne example-instance.
    // 
    // Compute Engine Beta API Only: If you use filtering in the Beta API, you can also filter on nested fields. For example, you could filter on instances that have set the scheduling.automaticRestart field to true. In particular, use filtering on nested fields to take advantage of instance labels to organize and filter results based on label values.
    // 
    // The Beta API also supports filtering on multiple expressions by providing each separate expression within parentheses. For example, (scheduling.automaticRestart eq true) (zone eq us-central1-f). Multiple expressions are treated as AND expressions, meaning that resources must match all expressions to pass the filters.
    string filter = 3;
    string key = 4;
    // The maximum number of results per page that should be returned. If the number of available results is larger than maxResults, Compute Engine returns a nextPageToken that can be used to get the next page of results in subsequent list requests.
    int32 maxResults = 5;
    string oauth_token = 6;
    // Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name.
    // 
    // You can also sort results in descending order based on the creation timestamp using orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first.
    // 
    // Currently, only sorting by name or creationTimestamp desc is supported.
    string orderBy = 7;
    // Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous list request to get the next page of results.
    string pageToken = 8;
    boolean prettyPrint = 9;
    // Project ID for this request.
    string project = 10;
    string quotaUser = 11;
    string userIp = 12;
}

message PostProjectGlobalGroupsRequest {
    alt alt = 1;
    Group body = 2;
    string fields = 3;
    string key = 4;
    string oauth_token = 5;
    boolean prettyPrint = 6;
    // Project ID for this request.
    string project = 7;
    string quotaUser = 8;
    string userIp = 9;
}

message GetProjectGlobalGroupsGroupNameRequest {
    alt alt = 1;
    string fields = 2;
    // Name of the Group resource to return.
    string groupName = 3;
    string key = 4;
    string oauth_token = 5;
    boolean prettyPrint = 6;
    // Project ID for this request.
    string project = 7;
    string quotaUser = 8;
    string userIp = 9;
}

message DeleteProjectGlobalGroupsGroupNameRequest {
    alt alt = 1;
    string fields = 2;
    // Name of the Group resource to delete.
    string groupName = 3;
    string key = 4;
    string oauth_token = 5;
    boolean prettyPrint = 6;
    // Project ID for this request.
    string project = 7;
    string quotaUser = 8;
    string userIp = 9;
}

message PostProjectGlobalGroupsGroupNameAddMemberRequest {
    alt alt = 1;
    GroupsAddMemberRequest body = 2;
    string fields = 3;
    // Name of the group for this request.
    string groupName = 4;
    string key = 5;
    string oauth_token = 6;
    boolean prettyPrint = 7;
    // Project ID for this request.
    string project = 8;
    string quotaUser = 9;
    string userIp = 10;
}

message PostProjectGlobalGroupsGroupNameRemoveMemberRequest {
    alt alt = 1;
    GroupsRemoveMemberRequest body = 2;
    string fields = 3;
    // Name of the group for this request.
    string groupName = 4;
    string key = 5;
    string oauth_token = 6;
    boolean prettyPrint = 7;
    // Project ID for this request.
    string project = 8;
    string quotaUser = 9;
    string userIp = 10;
}

message GetProjectGlobalGroupsResourceGetIamPolicyRequest {
    alt alt = 1;
    string fields = 2;
    string key = 3;
    string oauth_token = 4;
    boolean prettyPrint = 5;
    // Project ID for this request.
    string project = 6;
    string quotaUser = 7;
    // Name of the resource for this request.
    string resource = 8;
    string userIp = 9;
}

message PostProjectGlobalGroupsResourceSetIamPolicyRequest {
    alt alt = 1;
    Policy body = 2;
    string fields = 3;
    string key = 4;
    string oauth_token = 5;
    boolean prettyPrint = 6;
    // Project ID for this request.
    string project = 7;
    string quotaUser = 8;
    // Name of the resource for this request.
    string resource = 9;
    string userIp = 10;
}

message PostProjectGlobalGroupsResourceTestIamPermissionsRequest {
    alt alt = 1;
    TestPermissionsRequest body = 2;
    string fields = 3;
    string key = 4;
    string oauth_token = 5;
    boolean prettyPrint = 6;
    // Project ID for this request.
    string project = 7;
    string quotaUser = 8;
    // Name of the resource for this request.
    string resource = 9;
    string userIp = 10;
}

message GetProjectGlobalOperationsRequest {
    alt alt = 1;
    string fields = 2;
    // Sets a filter expression for filtering listed resources, in the form filter={expression}. Your {expression} must be in the format: field_name comparison_string literal_string.
    // 
    // The field_name is the name of the field you want to compare. Only atomic field types are supported (string, number, boolean). The comparison_string must be either eq (equals) or ne (not equals). The literal_string is the string value to filter to. The literal value must be valid for the type of field you are filtering by (string, number, boolean). For string fields, the literal value is interpreted as a regular expression using RE2 syntax. The literal value must match the entire field.
    // 
    // For example, to filter for instances that do not have a name of example-instance, you would use filter=name ne example-instance.
    // 
    // Compute Engine Beta API Only: If you use filtering in the Beta API, you can also filter on nested fields. For example, you could filter on instances that have set the scheduling.automaticRestart field to true. In particular, use filtering on nested fields to take advantage of instance labels to organize and filter results based on label values.
    // 
    // The Beta API also supports filtering on multiple expressions by providing each separate expression within parentheses. For example, (scheduling.automaticRestart eq true) (zone eq us-central1-f). Multiple expressions are treated as AND expressions, meaning that resources must match all expressions to pass the filters.
    string filter = 3;
    string key = 4;
    // The maximum number of results per page that should be returned. If the number of available results is larger than maxResults, Compute Engine returns a nextPageToken that can be used to get the next page of results in subsequent list requests.
    int32 maxResults = 5;
    string oauth_token = 6;
    // Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name.
    // 
    // You can also sort results in descending order based on the creation timestamp using orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first.
    // 
    // Currently, only sorting by name or creationTimestamp desc is supported.
    string orderBy = 7;
    // Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous list request to get the next page of results.
    string pageToken = 8;
    boolean prettyPrint = 9;
    // Project ID for this request.
    string project = 10;
    string quotaUser = 11;
    string userIp = 12;
}

message GetProjectGlobalOperationsOperationRequest {
    alt alt = 1;
    string fields = 2;
    string key = 3;
    string oauth_token = 4;
    // Name of the Operations resource to return.
    string operation = 5;
    boolean prettyPrint = 6;
    // Project ID for this request.
    string project = 7;
    string quotaUser = 8;
    string userIp = 9;
}

message DeleteProjectGlobalOperationsOperationRequest {
    alt alt = 1;
    string fields = 2;
    string key = 3;
    string oauth_token = 4;
    // Name of the Operations resource to delete.
    string operation = 5;
    boolean prettyPrint = 6;
    // Project ID for this request.
    string project = 7;
    string quotaUser = 8;
    string userIp = 9;
}

message GetProjectGlobalUsersRequest {
    alt alt = 1;
    string fields = 2;
    // Sets a filter expression for filtering listed resources, in the form filter={expression}. Your {expression} must be in the format: field_name comparison_string literal_string.
    // 
    // The field_name is the name of the field you want to compare. Only atomic field types are supported (string, number, boolean). The comparison_string must be either eq (equals) or ne (not equals). The literal_string is the string value to filter to. The literal value must be valid for the type of field you are filtering by (string, number, boolean). For string fields, the literal value is interpreted as a regular expression using RE2 syntax. The literal value must match the entire field.
    // 
    // For example, to filter for instances that do not have a name of example-instance, you would use filter=name ne example-instance.
    // 
    // Compute Engine Beta API Only: If you use filtering in the Beta API, you can also filter on nested fields. For example, you could filter on instances that have set the scheduling.automaticRestart field to true. In particular, use filtering on nested fields to take advantage of instance labels to organize and filter results based on label values.
    // 
    // The Beta API also supports filtering on multiple expressions by providing each separate expression within parentheses. For example, (scheduling.automaticRestart eq true) (zone eq us-central1-f). Multiple expressions are treated as AND expressions, meaning that resources must match all expressions to pass the filters.
    string filter = 3;
    string key = 4;
    // The maximum number of results per page that should be returned. If the number of available results is larger than maxResults, Compute Engine returns a nextPageToken that can be used to get the next page of results in subsequent list requests.
    int32 maxResults = 5;
    string oauth_token = 6;
    // Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name.
    // 
    // You can also sort results in descending order based on the creation timestamp using orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first.
    // 
    // Currently, only sorting by name or creationTimestamp desc is supported.
    string orderBy = 7;
    // Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous list request to get the next page of results.
    string pageToken = 8;
    boolean prettyPrint = 9;
    // Project ID for this request.
    string project = 10;
    string quotaUser = 11;
    string userIp = 12;
}

message PostProjectGlobalUsersRequest {
    alt alt = 1;
    User body = 2;
    string fields = 3;
    string key = 4;
    string oauth_token = 5;
    boolean prettyPrint = 6;
    // Project ID for this request.
    string project = 7;
    string quotaUser = 8;
    string userIp = 9;
}

message GetProjectGlobalUsersResourceGetIamPolicyRequest {
    alt alt = 1;
    string fields = 2;
    string key = 3;
    string oauth_token = 4;
    boolean prettyPrint = 5;
    // Project ID for this request.
    string project = 6;
    string quotaUser = 7;
    // Name of the resource for this request.
    string resource = 8;
    string userIp = 9;
}

message PostProjectGlobalUsersResourceSetIamPolicyRequest {
    alt alt = 1;
    Policy body = 2;
    string fields = 3;
    string key = 4;
    string oauth_token = 5;
    boolean prettyPrint = 6;
    // Project ID for this request.
    string project = 7;
    string quotaUser = 8;
    // Name of the resource for this request.
    string resource = 9;
    string userIp = 10;
}

message PostProjectGlobalUsersResourceTestIamPermissionsRequest {
    alt alt = 1;
    TestPermissionsRequest body = 2;
    string fields = 3;
    string key = 4;
    string oauth_token = 5;
    boolean prettyPrint = 6;
    // Project ID for this request.
    string project = 7;
    string quotaUser = 8;
    // Name of the resource for this request.
    string resource = 9;
    string userIp = 10;
}

message GetProjectGlobalUsersUserRequest {
    alt alt = 1;
    string fields = 2;
    string key = 3;
    string oauth_token = 4;
    boolean prettyPrint = 5;
    // Project ID for this request.
    string project = 6;
    string quotaUser = 7;
    // Name of the user resource to return.
    string user = 8;
    string userIp = 9;
}

message DeleteProjectGlobalUsersUserRequest {
    alt alt = 1;
    string fields = 2;
    string key = 3;
    string oauth_token = 4;
    boolean prettyPrint = 5;
    // Project ID for this request.
    string project = 6;
    string quotaUser = 7;
    // Name of the user resource to delete.
    string user = 8;
    string userIp = 9;
}

message PostProjectGlobalUsersUserAddPublicKeyRequest {
    alt alt = 1;
    PublicKey body = 2;
    string fields = 3;
    string key = 4;
    string oauth_token = 5;
    boolean prettyPrint = 6;
    // Project ID for this request.
    string project = 7;
    string quotaUser = 8;
    // Name of the user for this request.
    string user = 9;
    string userIp = 10;
}

message PostProjectGlobalUsersUserRemovePublicKeyRequest {
    alt alt = 1;
    string fields = 2;
    // The fingerprint of the public key to delete. Public keys are identified by their fingerprint, which is defined by RFC4716 to be the MD5 digest of the public key.
    string fingerprint = 3;
    string key = 4;
    string oauth_token = 5;
    boolean prettyPrint = 6;
    // Project ID for this request.
    string project = 7;
    string quotaUser = 8;
    // Name of the user for this request.
    string user = 9;
    string userIp = 10;
}

message PostProjectZonesZoneAuthorizedKeysViewUserRequest {
    alt alt = 1;
    string fields = 2;
    // The fully-qualified URL of the virtual machine requesting the view.
    string instance = 3;
    string key = 4;
    // Whether the view was requested as part of a user-initiated login.
    bool login = 5;
    string oauth_token = 6;
    boolean prettyPrint = 7;
    // Project ID for this request.
    string project = 8;
    string quotaUser = 9;
    // The user account for which you want to get a list of authorized public keys.
    string user = 10;
    string userIp = 11;
    // Name of the zone for this request.
    string zone = 12;
}

message PostProjectZonesZoneLinuxAccountViewsRequest {
    alt alt = 1;
    string fields = 2;
    // Sets a filter expression for filtering listed resources, in the form filter={expression}. Your {expression} must be in the format: field_name comparison_string literal_string.
    // 
    // The field_name is the name of the field you want to compare. Only atomic field types are supported (string, number, boolean). The comparison_string must be either eq (equals) or ne (not equals). The literal_string is the string value to filter to. The literal value must be valid for the type of field you are filtering by (string, number, boolean). For string fields, the literal value is interpreted as a regular expression using RE2 syntax. The literal value must match the entire field.
    // 
    // For example, to filter for instances that do not have a name of example-instance, you would use filter=name ne example-instance.
    // 
    // Compute Engine Beta API Only: If you use filtering in the Beta API, you can also filter on nested fields. For example, you could filter on instances that have set the scheduling.automaticRestart field to true. In particular, use filtering on nested fields to take advantage of instance labels to organize and filter results based on label values.
    // 
    // The Beta API also supports filtering on multiple expressions by providing each separate expression within parentheses. For example, (scheduling.automaticRestart eq true) (zone eq us-central1-f). Multiple expressions are treated as AND expressions, meaning that resources must match all expressions to pass the filters.
    string filter = 3;
    // The fully-qualified URL of the virtual machine requesting the views.
    string instance = 4;
    string key = 5;
    // The maximum number of results per page that should be returned. If the number of available results is larger than maxResults, Compute Engine returns a nextPageToken that can be used to get the next page of results in subsequent list requests.
    int32 maxResults = 6;
    string oauth_token = 7;
    // Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name.
    // 
    // You can also sort results in descending order based on the creation timestamp using orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first.
    // 
    // Currently, only sorting by name or creationTimestamp desc is supported.
    string orderBy = 8;
    // Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous list request to get the next page of results.
    string pageToken = 9;
    boolean prettyPrint = 10;
    // Project ID for this request.
    string project = 11;
    string quotaUser = 12;
    string userIp = 13;
    // Name of the zone for this request.
    string zone = 14;
}

message AuditConfig {
    // Specifies the identities that are exempted from "data access" audit logging for the `service` specified above. Follows the same format of Binding.members.
    repeated string exemptedMembers = 1;
    // Specifies a service that will be enabled for "data access" audit logging. For example, `resourcemanager`, `storage`, `compute`. `allServices` is a special value that covers all services.
    string service = 2;
}

message AuthorizedKeysView {
    // [Output Only] The list of authorized public keys in SSH format.
    repeated string keys = 1;
    // [Output Only] Whether the user has the ability to elevate on the instance that requested the authorized keys.
    bool sudoer = 2;
}

message Binding {
    // Specifies the identities requesting access for a Cloud Platform resource. `members` can have the following values:
    // 
    // * `allUsers`: A special identifier that represents anyone who is on the internet; with or without a Google account.
    // 
    // * `allAuthenticatedUsers`: A special identifier that represents anyone who is authenticated with a Google account or a service account.
    // 
    // * `user:{emailid}`: An email address that represents a specific Google account. For example, `alice@gmail.com` or `joe@example.com`.
    // 
    // * `serviceAccount:{emailid}`: An email address that represents a service account. For example, `my-other-app@appspot.gserviceaccount.com`.
    // 
    // * `group:{emailid}`: An email address that represents a Google group. For example, `admins@example.com`.
    // 
    // * `domain:{domain}`: A Google Apps domain name that represents all the users of that domain. For example, `google.com` or `example.com`.
    repeated string members = 1;
    // Role that is assigned to `members`. For example, `roles/viewer`, `roles/editor`, or `roles/owner`.
    string role = 2;
}

message Condition {
    // Trusted attributes supplied by the IAM system.
    enum Condition_Iam {
        CONDITION_IAM_ATTRIBUTION = 0;
        CONDITION_IAM_AUTHORITY = 1;
        CONDITION_IAM_NO_ATTR = 2;
    }
    Condition_Iam iam = 1;
    // An operator to apply the subject with.
    enum Condition_Op {
        CONDITION_OP_DISCHARGED = 0;
        CONDITION_OP_EQUALS = 1;
        CONDITION_OP_IN = 2;
        CONDITION_OP_NOT_EQUALS = 3;
        CONDITION_OP_NOT_IN = 4;
        CONDITION_OP_NO_OP = 5;
    }
    Condition_Op op = 2;
    // Trusted attributes discharged by the service.
    string svc = 3;
    // Trusted attributes supplied by any service that owns resources and uses the IAM system for access control.
    enum Condition_Sy {
        CONDITION_SY_IP = 0;
        CONDITION_SY_NAME = 1;
        CONDITION_SY_NO_ATTR = 2;
        CONDITION_SY_REGION = 3;
        CONDITION_SY_SERVICE = 4;
    }
    Condition_Sy sys = 4;
    // The object of the condition. Exactly one of these must be set.
    string value = 5;
    // The objects of the condition. This is mutually exclusive with 'value'.
    repeated string values = 6;
}

message Group {
    // [Output Only] Creation timestamp in RFC3339 text format.
    string creationTimestamp = 1;
    // An optional textual description of the resource; provided by the client when the resource is created.
    string description = 2;
    // [Output Only] Unique identifier for the resource; defined by the server.
    string id = 3;
    // [Output Only] Type of the resource. Always clouduseraccounts#group for groups.
    string kind = 4;
    // [Output Only] A list of URLs to User resources who belong to the group. Users may only be members of groups in the same project.
    repeated string members = 5;
    // Name of the resource; provided by the client when the resource is created.
    string name = 6;
    // [Output Only] Server defined URL for the resource.
    string selfLink = 7;
}

message GroupList {
    // [Output Only] Unique identifier for the resource; defined by the server.
    string id = 1;
    // [Output Only] A list of Group resources.
    repeated Group items = 2;
    // [Output Only] Type of resource. Always clouduseraccounts#groupList for lists of groups.
    string kind = 3;
    // [Output Only] A token used to continue a truncated list request.
    string nextPageToken = 4;
    // [Output Only] Server defined URL for this resource.
    string selfLink = 5;
}

message GroupsAddMemberRequest {
    // Fully-qualified URLs of the User resources to add.
    repeated string users = 1;
}

message GroupsRemoveMemberRequest {
    // Fully-qualified URLs of the User resources to remove.
    repeated string users = 1;
}

message LinuxAccountViews {
    // [Output Only] A list of all groups within a project.
    repeated LinuxGroupView groupViews = 1;
    // [Output Only] Type of the resource. Always clouduseraccounts#linuxAccountViews for Linux resources.
    string kind = 2;
    // [Output Only] A list of all users within a project.
    repeated LinuxUserView userViews = 3;
}

message LinuxGetAuthorizedKeysViewResponse {
    // [Output Only] A list of authorized public keys for a user.
    AuthorizedKeysView resource = 1;
}

message LinuxGetLinuxAccountViewsResponse {
    // [Output Only] A list of authorized user accounts and groups.
    LinuxAccountViews resource = 1;
}

message LinuxGroupView {
    // [Output Only] The Group ID.
    uint32 gid = 1;
    // [Output Only] Group name.
    string groupName = 2;
    // [Output Only] List of user accounts that belong to the group.
    repeated string members = 3;
}

message LinuxUserView {
    // [Output Only] The GECOS (user information) entry for this account.
    string gecos = 1;
    // [Output Only] User's default group ID.
    uint32 gid = 2;
    // [Output Only] The path to the home directory for this account.
    string homeDirectory = 3;
    // [Output Only] The path to the login shell for this account.
    string shell = 4;
    // [Output Only] User ID.
    uint32 uid = 5;
    // [Output Only] The username of the account.
    string username = 6;
}

message LogConfig {
    // Counter options.
    LogConfigCounterOptions counter = 1;
}

message LogConfigCounterOptions {
    // The field value to attribute.
    string field = 1;
    // The metric to update.
    string metric = 2;
}

message Operation {
    // [Output Only] Reserved for future use.
    string clientOperationId = 1;
    // [Output Only] Creation timestamp in RFC3339 text format.
    string creationTimestamp = 2;
    // [Output Only] A textual description of the operation, which is set when the operation is created.
    string description = 3;
    // [Output Only] The time that this operation was completed. This value is in RFC3339 text format.
    string endTime = 4;
    // [Output Only] If errors are generated during processing of the operation, this field will be populated.
    message Error {
            // [Output Only] The array of errors encountered while processing this operation.
    message Error {
                    // [Output Only] The error type identifier for this error.
    string code = 1;
                    // [Output Only] Indicates the field in the request that caused the error. This property is optional.
    string location = 2;
                    // [Output Only] An optional, human-readable error message.
    string message = 3;
        }
        repeated Error errors = 1;
    }
    Error error = 5;
    // [Output Only] If the operation fails, this field contains the HTTP error message that was returned, such as NOT FOUND.
    string httpErrorMessage = 6;
    // [Output Only] If the operation fails, this field contains the HTTP error status code that was returned. For example, a 404 means the resource was not found.
    int32 httpErrorStatusCode = 7;
    // [Output Only] The unique identifier for the resource. This identifier is defined by the server.
    string id = 8;
    // [Output Only] The time that this operation was requested. This value is in RFC3339 text format.
    string insertTime = 9;
    // [Output Only] Type of the resource. Always compute#operation for Operation resources.
    string kind = 10;
    // [Output Only] Name of the resource.
    string name = 11;
    // [Output Only] The type of operation, such as insert, update, or delete, and so on.
    string operationType = 12;
    // [Output Only] An optional progress indicator that ranges from 0 to 100. There is no requirement that this be linear or support any granularity of operations. This should not be used to guess when the operation will be complete. This number should monotonically increase as the operation progresses.
    int32 progress = 13;
    // [Output Only] The URL of the region where the operation resides. Only available when performing regional operations.
    string region = 14;
    // [Output Only] Server-defined URL for the resource.
    string selfLink = 15;
    // [Output Only] The time that this operation was started by the server. This value is in RFC3339 text format.
    string startTime = 16;
    // [Output Only] The status of the operation, which can be one of the following: PENDING, RUNNING, or DONE.
    enum Operation_Statu {
        OPERATION_STATU_DONE = 0;
        OPERATION_STATU_PENDING = 1;
        OPERATION_STATU_RUNNING = 2;
    }
    Operation_Statu status = 17;
    // [Output Only] An optional textual description of the current status of the operation.
    string statusMessage = 18;
    // [Output Only] The unique target ID, which identifies a specific incarnation of the target resource.
    string targetId = 19;
    // [Output Only] The URL of the resource that the operation modifies.
    string targetLink = 20;
    // [Output Only] User who requested the operation, for example: user@example.com.
    string user = 21;
    // [Output Only] If warning messages are generated during processing of the operation, this field will be populated.
    message Warning {
            // [Output Only] A warning code, if applicable. For example, Compute Engine returns NO_RESULTS_ON_PAGE if there are no results in the response.
    enum Warning_Code {
            WARNING_CODE_CLEANUP_FAILED = 0;
            WARNING_CODE_DEPRECATED_RESOURCE_USED = 1;
            WARNING_CODE_DISK_SIZE_LARGER_THAN_IMAGE_SIZE = 2;
            WARNING_CODE_INJECTED_KERNELS_DEPRECATED = 3;
            WARNING_CODE_NEXT_HOP_ADDRESS_NOT_ASSIGNED = 4;
            WARNING_CODE_NEXT_HOP_CANNOT_IP_FORWARD = 5;
            WARNING_CODE_NEXT_HOP_INSTANCE_NOT_FOUND = 6;
            WARNING_CODE_NEXT_HOP_INSTANCE_NOT_ON_NETWORK = 7;
            WARNING_CODE_NEXT_HOP_NOT_RUNNING = 8;
            WARNING_CODE_NOT_CRITICAL_ERROR = 9;
            WARNING_CODE_NO_RESULTS_ON_PAGE = 10;
            WARNING_CODE_REQUIRED_TOS_AGREEMENT = 11;
            WARNING_CODE_RESOURCE_NOT_DELETED = 12;
            WARNING_CODE_SINGLE_INSTANCE_PROPERTY_TEMPLATE = 13;
            WARNING_CODE_UNREACHABLE = 14;
        }
        Warning_Code code = 1;
            // [Output Only] Metadata about this warning in key: value format. For example:
    // "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    message Data {
                    // [Output Only] A key that provides more detail on the warning being returned. For example, for warnings where there are no results in a list request for a particular zone, this key might be scope and the key value might be the zone name. Other examples might be a key indicating a deprecated resource and a suggested replacement, or a warning about invalid network settings (for example, if an instance attempts to perform IP forwarding but is not enabled for IP forwarding).
    string key = 1;
                    // [Output Only] A warning data value corresponding to the key.
    string value = 2;
        }
        repeated Data data = 2;
            // [Output Only] A human-readable description of the warning code.
    string message = 3;
    }
    repeated Warning warnings = 22;
    // [Output Only] The URL of the zone where the operation resides. Only available when performing per-zone operations.
    string zone = 23;
}

message OperationList {
    // [Output Only] The unique identifier for the resource. This identifier is defined by the server.
    string id = 1;
    // [Output Only] A list of Operation resources.
    repeated Operation items = 2;
    // [Output Only] Type of resource. Always compute#operations for Operations resource.
    string kind = 3;
    // [Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results.
    string nextPageToken = 4;
    // [Output Only] Server-defined URL for this resource.
    string selfLink = 5;
}

message Policy {
    // Specifies audit logging configs for "data access". "data access": generally refers to data reads/writes and admin reads. "admin activity": generally refers to admin writes.
    // 
    // Note: `AuditConfig` doesn't apply to "admin activity", which always enables audit logging.
    repeated AuditConfig auditConfigs = 1;
    // Associates a list of `members` to a `role`. Multiple `bindings` must not be specified for the same `role`. `bindings` with no members will result in an error.
    repeated Binding bindings = 2;
    // `etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy.
    // 
    // If no `etag` is provided in the call to `setIamPolicy`, then the existing policy is overwritten blindly.
    string etag = 3;
    bool iamOwned = 4;
    // If more than one rule is specified, the rules are applied in the following manner: - All matching LOG rules are always applied. - If any DENY/DENY_WITH_LOG rule matches, permission is denied. Logging will be applied if one or more matching rule requires logging. - Otherwise, if any ALLOW/ALLOW_WITH_LOG rule matches, permission is granted. Logging will be applied if one or more matching rule requires logging. - Otherwise, if no rule applies, permission is denied.
    repeated Rule rules = 5;
    // Version of the `Policy`. The default version is 0.
    int32 version = 6;
}

message PublicKey {
    // [Output Only] Creation timestamp in RFC3339 text format.
    string creationTimestamp = 1;
    // An optional textual description of the resource; provided by the client when the resource is created.
    string description = 2;
    // Optional expiration timestamp. If provided, the timestamp must be in RFC3339 text format. If not provided, the public key never expires.
    string expirationTimestamp = 3;
    // [Output Only] The fingerprint of the key is defined by RFC4716 to be the MD5 digest of the public key.
    string fingerprint = 4;
    // Public key text in SSH format, defined by RFC4253 section 6.6.
    string key = 5;
}

message Rule {
    // Required
    enum Rule_Action {
        RULE_ACTION_ALLOW = 0;
        RULE_ACTION_ALLOW_WITH_LOG = 1;
        RULE_ACTION_DENY = 2;
        RULE_ACTION_DENY_WITH_LOG = 3;
        RULE_ACTION_LOG = 4;
        RULE_ACTION_NO_ACTION = 5;
    }
    Rule_Action action = 1;
    // Additional restrictions that must be met
    repeated Condition conditions = 2;
    // Human-readable description of the rule.
    string description = 3;
    // The rule matches if the PRINCIPAL/AUTHORITY_SELECTOR is in this set of entries.
    repeated string ins = 4;
    // The config returned to callers of tech.iam.IAM.CheckPolicy for any entries that match the LOG action.
    repeated LogConfig logConfigs = 5;
    // The rule matches if the PRINCIPAL/AUTHORITY_SELECTOR is not in this set of entries.
    repeated string notIns = 6;
    // A permission is a string of form '..' (e.g., 'storage.buckets.list'). A value of '*' matches all permissions, and a verb part of '*' (e.g., 'storage.buckets.*') matches all verbs.
    repeated string permissions = 7;
}

message TestPermissionsRequest {
    // The set of permissions to check for the 'resource'. Permissions with wildcards (such as '*' or 'storage.*') are not allowed.
    repeated string permissions = 1;
}

message TestPermissionsResponse {
    // A subset of `TestPermissionsRequest.permissions` that the caller is allowed.
    repeated string permissions = 1;
}

message User {
    // [Output Only] Creation timestamp in RFC3339 text format.
    string creationTimestamp = 1;
    // An optional textual description of the resource; provided by the client when the resource is created.
    string description = 2;
    // [Output Only] A list of URLs to Group resources who contain the user. Users are only members of groups in the same project.
    repeated string groups = 3;
    // [Output Only] Unique identifier for the resource; defined by the server.
    string id = 4;
    // [Output Only] Type of the resource. Always clouduseraccounts#user for users.
    string kind = 5;
    // Name of the resource; provided by the client when the resource is created.
    string name = 6;
    // Email address of account's owner. This account will be validated to make sure it exists. The email can belong to any domain, but it must be tied to a Google account.
    string owner = 7;
    // [Output Only] Public keys that this user may use to login.
    repeated PublicKey publicKeys = 8;
    // [Output Only] Server defined URL for the resource.
    string selfLink = 9;
}

message UserList {
    // [Output Only] Unique identifier for the resource; defined by the server.
    string id = 1;
    // [Output Only] A list of User resources.
    repeated User items = 2;
    // [Output Only] Type of resource. Always clouduseraccounts#userList for lists of users.
    string kind = 3;
    // [Output Only] A token used to continue a truncated list request.
    string nextPageToken = 4;
    // [Output Only] Server defined URL for this resource.
    string selfLink = 5;
}

enum Alt {
    JSON = 0;
}

service CloudUserAccountsService {
    // Retrieves the list of groups contained within the specified project.
    rpc GetProjectGlobalGroups(GetProjectGlobalGroupsRequest) returns (GroupList) {
      option (google.api.http) = {
        get: "/clouduseraccounts/alpha/projects/{project}/global/groups"
      };
    }
    // Creates a Group resource in the specified project using the data included in the request.
    rpc PostProjectGlobalGroups(PostProjectGlobalGroupsRequest) returns (Operation) {
      option (google.api.http) = {
        post: "/clouduseraccounts/alpha/projects/{project}/global/groups"
        body: "body"
      };
    }
    // Returns the specified Group resource.
    rpc GetProjectGlobalGroupsGroupName(GetProjectGlobalGroupsGroupNameRequest) returns (Group) {
      option (google.api.http) = {
        get: "/clouduseraccounts/alpha/projects/{project}/global/groups/{groupName}"
      };
    }
    // Deletes the specified Group resource.
    rpc DeleteProjectGlobalGroupsGroupName(DeleteProjectGlobalGroupsGroupNameRequest) returns (Operation) {
      option (google.api.http) = {
        delete: "/clouduseraccounts/alpha/projects/{project}/global/groups/{groupName}"
      };
    }
    // Adds users to the specified group.
    rpc PostProjectGlobalGroupsGroupNameAddMember(PostProjectGlobalGroupsGroupNameAddMemberRequest) returns (Operation) {
      option (google.api.http) = {
        post: "/clouduseraccounts/alpha/projects/{project}/global/groups/{groupName}/addMember"
        body: "body"
      };
    }
    // Removes users from the specified group.
    rpc PostProjectGlobalGroupsGroupNameRemoveMember(PostProjectGlobalGroupsGroupNameRemoveMemberRequest) returns (Operation) {
      option (google.api.http) = {
        post: "/clouduseraccounts/alpha/projects/{project}/global/groups/{groupName}/removeMember"
        body: "body"
      };
    }
    // Gets the access control policy for a resource. May be empty if no such policy or resource exists.
    rpc GetProjectGlobalGroupsResourceGetIamPolicy(GetProjectGlobalGroupsResourceGetIamPolicyRequest) returns (Policy) {
      option (google.api.http) = {
        get: "/clouduseraccounts/alpha/projects/{project}/global/groups/{resource}/getIamPolicy"
      };
    }
    // Sets the access control policy on the specified resource. Replaces any existing policy.
    rpc PostProjectGlobalGroupsResourceSetIamPolicy(PostProjectGlobalGroupsResourceSetIamPolicyRequest) returns (Policy) {
      option (google.api.http) = {
        post: "/clouduseraccounts/alpha/projects/{project}/global/groups/{resource}/setIamPolicy"
        body: "body"
      };
    }
    // Returns permissions that a caller has on the specified resource.
    rpc PostProjectGlobalGroupsResourceTestIamPermissions(PostProjectGlobalGroupsResourceTestIamPermissionsRequest) returns (TestPermissionsResponse) {
      option (google.api.http) = {
        post: "/clouduseraccounts/alpha/projects/{project}/global/groups/{resource}/testIamPermissions"
        body: "body"
      };
    }
    // Retrieves the list of operation resources contained within the specified project.
    rpc GetProjectGlobalOperations(GetProjectGlobalOperationsRequest) returns (OperationList) {
      option (google.api.http) = {
        get: "/clouduseraccounts/alpha/projects/{project}/global/operations"
      };
    }
    // Retrieves the specified operation resource.
    rpc GetProjectGlobalOperationsOperation(GetProjectGlobalOperationsOperationRequest) returns (Operation) {
      option (google.api.http) = {
        get: "/clouduseraccounts/alpha/projects/{project}/global/operations/{operation}"
      };
    }
    // Deletes the specified operation resource.
    rpc DeleteProjectGlobalOperationsOperation(DeleteProjectGlobalOperationsOperationRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        delete: "/clouduseraccounts/alpha/projects/{project}/global/operations/{operation}"
      };
    }
    // Retrieves a list of users contained within the specified project.
    rpc GetProjectGlobalUsers(GetProjectGlobalUsersRequest) returns (UserList) {
      option (google.api.http) = {
        get: "/clouduseraccounts/alpha/projects/{project}/global/users"
      };
    }
    // Creates a User resource in the specified project using the data included in the request.
    rpc PostProjectGlobalUsers(PostProjectGlobalUsersRequest) returns (Operation) {
      option (google.api.http) = {
        post: "/clouduseraccounts/alpha/projects/{project}/global/users"
        body: "body"
      };
    }
    // Gets the access control policy for a resource. May be empty if no such policy or resource exists.
    rpc GetProjectGlobalUsersResourceGetIamPolicy(GetProjectGlobalUsersResourceGetIamPolicyRequest) returns (Policy) {
      option (google.api.http) = {
        get: "/clouduseraccounts/alpha/projects/{project}/global/users/{resource}/getIamPolicy"
      };
    }
    // Sets the access control policy on the specified resource. Replaces any existing policy.
    rpc PostProjectGlobalUsersResourceSetIamPolicy(PostProjectGlobalUsersResourceSetIamPolicyRequest) returns (Policy) {
      option (google.api.http) = {
        post: "/clouduseraccounts/alpha/projects/{project}/global/users/{resource}/setIamPolicy"
        body: "body"
      };
    }
    // Returns permissions that a caller has on the specified resource.
    rpc PostProjectGlobalUsersResourceTestIamPermissions(PostProjectGlobalUsersResourceTestIamPermissionsRequest) returns (TestPermissionsResponse) {
      option (google.api.http) = {
        post: "/clouduseraccounts/alpha/projects/{project}/global/users/{resource}/testIamPermissions"
        body: "body"
      };
    }
    // Returns the specified User resource.
    rpc GetProjectGlobalUsersUser(GetProjectGlobalUsersUserRequest) returns (User) {
      option (google.api.http) = {
        get: "/clouduseraccounts/alpha/projects/{project}/global/users/{user}"
      };
    }
    // Deletes the specified User resource.
    rpc DeleteProjectGlobalUsersUser(DeleteProjectGlobalUsersUserRequest) returns (Operation) {
      option (google.api.http) = {
        delete: "/clouduseraccounts/alpha/projects/{project}/global/users/{user}"
      };
    }
    // Adds a public key to the specified User resource with the data included in the request.
    rpc PostProjectGlobalUsersUserAddPublicKey(PostProjectGlobalUsersUserAddPublicKeyRequest) returns (Operation) {
      option (google.api.http) = {
        post: "/clouduseraccounts/alpha/projects/{project}/global/users/{user}/addPublicKey"
        body: "body"
      };
    }
    // Removes the specified public key from the user.
    rpc PostProjectGlobalUsersUserRemovePublicKey(PostProjectGlobalUsersUserRemovePublicKeyRequest) returns (Operation) {
      option (google.api.http) = {
        post: "/clouduseraccounts/alpha/projects/{project}/global/users/{user}/removePublicKey"
      };
    }
    // Returns a list of authorized public keys for a specific user account.
    rpc PostProjectZonesZoneAuthorizedKeysViewUser(PostProjectZonesZoneAuthorizedKeysViewUserRequest) returns (LinuxGetAuthorizedKeysViewResponse) {
      option (google.api.http) = {
        post: "/clouduseraccounts/alpha/projects/{project}/zones/{zone}/authorizedKeysView/{user}"
      };
    }
    // Retrieves a list of user accounts for an instance within a specific project.
    rpc PostProjectZonesZoneLinuxAccountViews(PostProjectZonesZoneLinuxAccountViewsRequest) returns (LinuxGetLinuxAccountViewsResponse) {
      option (google.api.http) = {
        post: "/clouduseraccounts/alpha/projects/{project}/zones/{zone}/linuxAccountViews"
      };
    }
}
