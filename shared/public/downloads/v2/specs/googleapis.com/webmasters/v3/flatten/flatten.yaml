basePath: /webmasters/v3
definitions.ApiDataRow.properties.clicks.format: double
definitions.ApiDataRow.properties.clicks.type: number
definitions.ApiDataRow.properties.ctr.format: double
definitions.ApiDataRow.properties.ctr.type: number
definitions.ApiDataRow.properties.impressions.format: double
definitions.ApiDataRow.properties.impressions.type: number
definitions.ApiDataRow.properties.keys.items.type: string
definitions.ApiDataRow.properties.keys.type: array
definitions.ApiDataRow.properties.position.format: double
definitions.ApiDataRow.properties.position.type: number
definitions.ApiDataRow.type: object
definitions.ApiDimensionFilter.properties.dimension.type: string
definitions.ApiDimensionFilter.properties.expression.type: string
definitions.ApiDimensionFilter.properties.operator.type: string
definitions.ApiDimensionFilter.type: object
definitions.ApiDimensionFilterGroup.properties.filters.items.$ref: '#/definitions/ApiDimensionFilter'
definitions.ApiDimensionFilterGroup.properties.filters.type: array
definitions.ApiDimensionFilterGroup.properties.groupType.type: string
definitions.ApiDimensionFilterGroup.type: object
definitions.SearchAnalyticsQueryRequest.properties.aggregationType.description: |-
  [Optional; Default is "auto"] How data is aggregated. If aggregated by property, all data for the same property is aggregated; if aggregated by page, all data is aggregated by canonical URI. If you filter or group by page, choose AUTO; otherwise you can aggregate either by property or by page, depending on how you want your data calculated; see  the help documentation to learn how data is calculated differently by site versus by page.

  Note: If you group or filter by page, you cannot aggregate by property.

  If you specify any value other than AUTO, the aggregation type in the result will match the requested type, or if you request an invalid type, you will get an error. The API will never change your aggregation type if the requested type is invalid.
definitions.SearchAnalyticsQueryRequest.properties.aggregationType.type: string
definitions.SearchAnalyticsQueryRequest.properties.dimensionFilterGroups.description: '[Optional]
  Zero or more filters to apply to the dimension grouping values; for example, ''query
  contains "buy"'' to see only data where the query string contains the substring
  "buy" (not case-sensitive). You can filter by a dimension without grouping by it.'
definitions.SearchAnalyticsQueryRequest.properties.dimensionFilterGroups.items.$ref: '#/definitions/ApiDimensionFilterGroup'
definitions.SearchAnalyticsQueryRequest.properties.dimensionFilterGroups.type: array
definitions.SearchAnalyticsQueryRequest.properties.dimensions.description: '[Optional]
  Zero or more dimensions to group results by. Dimensions are the group-by values
  in the Search Analytics page. Dimensions are combined to create a unique row key
  for each row. Results are grouped in the order that you supply these dimensions.'
definitions.SearchAnalyticsQueryRequest.properties.dimensions.items.type: string
definitions.SearchAnalyticsQueryRequest.properties.dimensions.type: array
definitions.SearchAnalyticsQueryRequest.properties.endDate.description: '[Required]
  End date of the requested date range, in YYYY-MM-DD format, in PST (UTC - 8:00).
  Must be greater than or equal to the start date. This value is included in the range.'
definitions.SearchAnalyticsQueryRequest.properties.endDate.type: string
definitions.SearchAnalyticsQueryRequest.properties.rowLimit.description: '[Optional;
  Default is 1000] The maximum number of rows to return. Must be a number from 1 to
  5,000 (inclusive).'
definitions.SearchAnalyticsQueryRequest.properties.rowLimit.format: int32
definitions.SearchAnalyticsQueryRequest.properties.rowLimit.type: integer
definitions.SearchAnalyticsQueryRequest.properties.searchType.description: '[Optional;
  Default is "web"] The search type to filter for.'
definitions.SearchAnalyticsQueryRequest.properties.searchType.type: string
definitions.SearchAnalyticsQueryRequest.properties.startDate.description: '[Required]
  Start date of the requested date range, in YYYY-MM-DD format, in PST time (UTC -
  8:00). Must be less than or equal to the end date. This value is included in the
  range.'
definitions.SearchAnalyticsQueryRequest.properties.startDate.type: string
definitions.SearchAnalyticsQueryRequest.properties.startRow.description: '[Optional;
  Default is 0] Zero-based index of the first row in the response. Must be a non-negative
  number.'
definitions.SearchAnalyticsQueryRequest.properties.startRow.format: int32
definitions.SearchAnalyticsQueryRequest.properties.startRow.type: integer
definitions.SearchAnalyticsQueryRequest.type: object
definitions.SearchAnalyticsQueryResponse.description: A list of rows, one per result,
  grouped by key. Metrics in each row are aggregated for all data grouped by that
  key either by page or property, as specified by the aggregation type parameter.
definitions.SearchAnalyticsQueryResponse.properties.responseAggregationType.description: How
  the results were aggregated.
definitions.SearchAnalyticsQueryResponse.properties.responseAggregationType.type: string
definitions.SearchAnalyticsQueryResponse.properties.rows.description: A list of rows
  grouped by the key values in the order given in the query.
definitions.SearchAnalyticsQueryResponse.properties.rows.items.$ref: '#/definitions/ApiDataRow'
definitions.SearchAnalyticsQueryResponse.properties.rows.type: array
definitions.SearchAnalyticsQueryResponse.type: object
definitions.SitemapsListResponse.description: List of sitemaps.
definitions.SitemapsListResponse.properties.sitemap.description: Contains detailed
  information about a specific URL submitted as a sitemap.
definitions.SitemapsListResponse.properties.sitemap.items.$ref: '#/definitions/WmxSitemap'
definitions.SitemapsListResponse.properties.sitemap.type: array
definitions.SitemapsListResponse.type: object
definitions.SitesListResponse.description: List of sites with access level information.
definitions.SitesListResponse.properties.siteEntry.description: Contains permission
  level information about a Search Console site. For more information, see Permissions
  in Search Console.
definitions.SitesListResponse.properties.siteEntry.items.$ref: '#/definitions/WmxSite'
definitions.SitesListResponse.properties.siteEntry.type: array
definitions.SitesListResponse.type: object
definitions.UrlCrawlErrorCount.description: An entry in a URL crawl errors time series.
definitions.UrlCrawlErrorCount.properties.count.description: The error count at the
  given timestamp.
definitions.UrlCrawlErrorCount.properties.count.format: int64
definitions.UrlCrawlErrorCount.properties.count.type: string
definitions.UrlCrawlErrorCount.properties.timestamp.description: The date and time
  when the crawl attempt took place, in RFC 3339 format.
definitions.UrlCrawlErrorCount.properties.timestamp.format: date-time
definitions.UrlCrawlErrorCount.properties.timestamp.type: string
definitions.UrlCrawlErrorCount.type: object
definitions.UrlCrawlErrorCountsPerType.description: Number of errors per day for a
  specific error type (defined by platform and category).
definitions.UrlCrawlErrorCountsPerType.properties.category.description: The crawl
  error type.
definitions.UrlCrawlErrorCountsPerType.properties.category.type: string
definitions.UrlCrawlErrorCountsPerType.properties.entries.description: The error count
  entries time series.
definitions.UrlCrawlErrorCountsPerType.properties.entries.items.$ref: '#/definitions/UrlCrawlErrorCount'
definitions.UrlCrawlErrorCountsPerType.properties.entries.type: array
definitions.UrlCrawlErrorCountsPerType.properties.platform.description: The general
  type of Googlebot that made the request (see list of Googlebot user-agents for the
  user-agents used).
definitions.UrlCrawlErrorCountsPerType.properties.platform.type: string
definitions.UrlCrawlErrorCountsPerType.type: object
definitions.UrlCrawlErrorsCountsQueryResponse.description: A time series of the number
  of URL crawl errors per error category and platform.
definitions.UrlCrawlErrorsCountsQueryResponse.properties.countPerTypes.description: The
  time series of the number of URL crawl errors per error category and platform.
definitions.UrlCrawlErrorsCountsQueryResponse.properties.countPerTypes.items.$ref: '#/definitions/UrlCrawlErrorCountsPerType'
definitions.UrlCrawlErrorsCountsQueryResponse.properties.countPerTypes.type: array
definitions.UrlCrawlErrorsCountsQueryResponse.type: object
definitions.UrlCrawlErrorsSample.description: Contains information about specific
  crawl errors.
definitions.UrlCrawlErrorsSample.properties.first_detected.description: The time the
  error was first detected, in RFC 3339 format.
definitions.UrlCrawlErrorsSample.properties.first_detected.format: date-time
definitions.UrlCrawlErrorsSample.properties.first_detected.type: string
definitions.UrlCrawlErrorsSample.properties.last_crawled.description: The time when
  the URL was last crawled, in RFC 3339 format.
definitions.UrlCrawlErrorsSample.properties.last_crawled.format: date-time
definitions.UrlCrawlErrorsSample.properties.last_crawled.type: string
definitions.UrlCrawlErrorsSample.properties.pageUrl.description: The URL of an error,
  relative to the site.
definitions.UrlCrawlErrorsSample.properties.pageUrl.type: string
definitions.UrlCrawlErrorsSample.properties.responseCode.description: The HTTP response
  code, if any.
definitions.UrlCrawlErrorsSample.properties.responseCode.format: int32
definitions.UrlCrawlErrorsSample.properties.responseCode.type: integer
definitions.UrlCrawlErrorsSample.properties.urlDetails.$ref: '#/definitions/UrlSampleDetails'
definitions.UrlCrawlErrorsSample.properties.urlDetails.description: Additional details
  about the URL, set only when calling get().
definitions.UrlCrawlErrorsSample.type: object
definitions.UrlCrawlErrorsSamplesListResponse.description: List of crawl error samples.
definitions.UrlCrawlErrorsSamplesListResponse.properties.urlCrawlErrorSample.description: Information
  about the sample URL and its crawl error.
definitions.UrlCrawlErrorsSamplesListResponse.properties.urlCrawlErrorSample.items.$ref: '#/definitions/UrlCrawlErrorsSample'
definitions.UrlCrawlErrorsSamplesListResponse.properties.urlCrawlErrorSample.type: array
definitions.UrlCrawlErrorsSamplesListResponse.type: object
definitions.UrlSampleDetails.description: Additional details about the URL, set only
  when calling get().
definitions.UrlSampleDetails.properties.containingSitemaps.description: List of sitemaps
  pointing at this URL.
definitions.UrlSampleDetails.properties.containingSitemaps.items.type: string
definitions.UrlSampleDetails.properties.containingSitemaps.type: array
definitions.UrlSampleDetails.properties.linkedFromUrls.description: A sample set of
  URLs linking to this URL.
definitions.UrlSampleDetails.properties.linkedFromUrls.items.type: string
definitions.UrlSampleDetails.properties.linkedFromUrls.type: array
definitions.UrlSampleDetails.type: object
definitions.WmxSite.description: Contains permission level information about a Search
  Console site. For more information, see  Permissions in Search Console.
definitions.WmxSite.properties.permissionLevel.description: The user's permission
  level for the site.
definitions.WmxSite.properties.permissionLevel.type: string
definitions.WmxSite.properties.siteUrl.description: The URL of the site.
definitions.WmxSite.properties.siteUrl.type: string
definitions.WmxSite.type: object
definitions.WmxSitemap.description: Contains detailed information about a specific
  URL submitted as a sitemap.
definitions.WmxSitemap.properties.contents.description: The various content types
  in the sitemap.
definitions.WmxSitemap.properties.contents.items.$ref: '#/definitions/WmxSitemapContent'
definitions.WmxSitemap.properties.contents.type: array
definitions.WmxSitemap.properties.errors.description: Number of errors in the sitemap.
  These are issues with the sitemap itself that need to be fixed before it can be
  processed correctly.
definitions.WmxSitemap.properties.errors.format: int64
definitions.WmxSitemap.properties.errors.type: string
definitions.WmxSitemap.properties.isPending.description: If true, the sitemap has
  not been processed.
definitions.WmxSitemap.properties.isPending.type: boolean
definitions.WmxSitemap.properties.isSitemapsIndex.description: If true, the sitemap
  is a collection of sitemaps.
definitions.WmxSitemap.properties.isSitemapsIndex.type: boolean
definitions.WmxSitemap.properties.lastDownloaded.description: Date & time in which
  this sitemap was last downloaded. Date format is in RFC 3339 format (yyyy-mm-dd).
definitions.WmxSitemap.properties.lastDownloaded.format: date-time
definitions.WmxSitemap.properties.lastDownloaded.type: string
definitions.WmxSitemap.properties.lastSubmitted.description: Date & time in which
  this sitemap was submitted. Date format is in RFC 3339 format (yyyy-mm-dd).
definitions.WmxSitemap.properties.lastSubmitted.format: date-time
definitions.WmxSitemap.properties.lastSubmitted.type: string
definitions.WmxSitemap.properties.path.description: The url of the sitemap.
definitions.WmxSitemap.properties.path.type: string
definitions.WmxSitemap.properties.type.description: 'The type of the sitemap. For
  example: rssFeed.'
definitions.WmxSitemap.properties.type.type: string
definitions.WmxSitemap.properties.warnings.description: Number of warnings for the
  sitemap. These are generally non-critical issues with URLs in the sitemaps.
definitions.WmxSitemap.properties.warnings.format: int64
definitions.WmxSitemap.properties.warnings.type: string
definitions.WmxSitemap.type: object
definitions.WmxSitemapContent.description: Information about the various content types
  in the sitemap.
definitions.WmxSitemapContent.properties.indexed.description: The number of URLs from
  the sitemap that were indexed (of the content type).
definitions.WmxSitemapContent.properties.indexed.format: int64
definitions.WmxSitemapContent.properties.indexed.type: string
definitions.WmxSitemapContent.properties.submitted.description: The number of URLs
  in the sitemap (of the content type).
definitions.WmxSitemapContent.properties.submitted.format: int64
definitions.WmxSitemapContent.properties.submitted.type: string
definitions.WmxSitemapContent.properties.type.description: 'The specific type of content
  in this sitemap. For example: web.'
definitions.WmxSitemapContent.properties.type.type: string
definitions.WmxSitemapContent.type: object
externalDocs.url: https://developers.google.com/webmaster-tools/
host: www.googleapis.com
info.contact.name: Google
info.contact.url: https://google.com
info.description: View Google Search Console data for your verified sites.
info.title: Search Console
info.version: v3
info.x-apiClientRegistration.url: https://console.developers.google.com
info.x-apisguru-categories.length: 1
info.x-apisguru-categories[0]: search
info.x-logo.url: https://api.apis.guru/v2/cache/logo/https_www.google.com_images_branding_googlelogo_2x_googlelogo_color_272x92dp.png
info.x-origin.length: 1
info.x-origin[0].converter.url: https://github.com/lucybot/api-spec-converter
info.x-origin[0].converter.version: 2.6.0
info.x-origin[0].format: google
info.x-origin[0].url: https://www.googleapis.com/discovery/v1/apis/webmasters/v3/rest
info.x-origin[0].version: v1
info.x-preferred: true
info.x-providerName: googleapis.com
info.x-serviceName: webmasters
parameters.alt.default: json
parameters.alt.description: Data format for the response.
parameters.alt.enum.length: 1
parameters.alt.enum[0]: json
parameters.alt.in: query
parameters.alt.name: alt
parameters.alt.type: string
parameters.fields.description: Selector specifying which fields to include in a partial
  response.
parameters.fields.in: query
parameters.fields.name: fields
parameters.fields.type: string
parameters.key.description: API key. Your API key identifies your project and provides
  you with API access, quota, and reports. Required unless you provide an OAuth 2.0
  token.
parameters.key.in: query
parameters.key.name: key
parameters.key.type: string
parameters.oauth_token.description: OAuth 2.0 token for the current user.
parameters.oauth_token.in: query
parameters.oauth_token.name: oauth_token
parameters.oauth_token.type: string
parameters.prettyPrint.default: true
parameters.prettyPrint.description: Returns response with indentations and line breaks.
parameters.prettyPrint.in: query
parameters.prettyPrint.name: prettyPrint
parameters.prettyPrint.type: boolean
parameters.quotaUser.description: Available to use for quota purposes for server-side
  applications. Can be any arbitrary string assigned to a user, but should not exceed
  40 characters. Overrides userIp if both are provided.
parameters.quotaUser.in: query
parameters.quotaUser.name: quotaUser
parameters.quotaUser.type: string
parameters.userIp.description: IP address of the site where the request originates.
  Use this if you want to enforce per-user limits.
parameters.userIp.in: query
parameters.userIp.name: userIp
parameters.userIp.type: string
paths./sites.get.description: Lists the user's Search Console sites.
paths./sites.get.operationId: webmasters.sites.list
paths./sites.get.responses.200.description: Successful response
paths./sites.get.responses.200.schema.$ref: '#/definitions/SitesListResponse'
paths./sites.get.security.length: 2
paths./sites.get.security[0].Oauth2.length: 1
paths./sites.get.security[0].Oauth2[0]: https://www.googleapis.com/auth/webmasters
paths./sites.get.security[1].Oauth2.length: 1
paths./sites.get.security[1].Oauth2[0]: https://www.googleapis.com/auth/webmasters.readonly
paths./sites.get.tags.length: 1
paths./sites.get.tags[0]: sites
paths./sites.parameters.length: 7
paths./sites.parameters[0].$ref: '#/parameters/alt'
paths./sites.parameters[1].$ref: '#/parameters/fields'
paths./sites.parameters[2].$ref: '#/parameters/key'
paths./sites.parameters[3].$ref: '#/parameters/oauth_token'
paths./sites.parameters[4].$ref: '#/parameters/prettyPrint'
paths./sites.parameters[5].$ref: '#/parameters/quotaUser'
paths./sites.parameters[6].$ref: '#/parameters/userIp'
paths./sites/{siteUrl}.delete.description: Removes a site from the set of the user's
  Search Console sites.
paths./sites/{siteUrl}.delete.operationId: webmasters.sites.delete
paths./sites/{siteUrl}.delete.parameters.length: 1
paths./sites/{siteUrl}.delete.parameters[0].description: 'The URI of the property
  as defined in Search Console. Examples: http://www.example.com/ or android-app://com.example/'
paths./sites/{siteUrl}.delete.parameters[0].in: path
paths./sites/{siteUrl}.delete.parameters[0].name: siteUrl
paths./sites/{siteUrl}.delete.parameters[0].required: true
paths./sites/{siteUrl}.delete.parameters[0].type: string
paths./sites/{siteUrl}.delete.responses.200.description: Successful response
paths./sites/{siteUrl}.delete.security.length: 1
paths./sites/{siteUrl}.delete.security[0].Oauth2.length: 1
paths./sites/{siteUrl}.delete.security[0].Oauth2[0]: https://www.googleapis.com/auth/webmasters
paths./sites/{siteUrl}.delete.tags.length: 1
paths./sites/{siteUrl}.delete.tags[0]: sites
paths./sites/{siteUrl}.get.description: Retrieves information about specific site.
paths./sites/{siteUrl}.get.operationId: webmasters.sites.get
paths./sites/{siteUrl}.get.parameters.length: 1
paths./sites/{siteUrl}.get.parameters[0].description: 'The URI of the property as
  defined in Search Console. Examples: http://www.example.com/ or android-app://com.example/'
paths./sites/{siteUrl}.get.parameters[0].in: path
paths./sites/{siteUrl}.get.parameters[0].name: siteUrl
paths./sites/{siteUrl}.get.parameters[0].required: true
paths./sites/{siteUrl}.get.parameters[0].type: string
paths./sites/{siteUrl}.get.responses.200.description: Successful response
paths./sites/{siteUrl}.get.responses.200.schema.$ref: '#/definitions/WmxSite'
paths./sites/{siteUrl}.get.security.length: 2
paths./sites/{siteUrl}.get.security[0].Oauth2.length: 1
paths./sites/{siteUrl}.get.security[0].Oauth2[0]: https://www.googleapis.com/auth/webmasters
paths./sites/{siteUrl}.get.security[1].Oauth2.length: 1
paths./sites/{siteUrl}.get.security[1].Oauth2[0]: https://www.googleapis.com/auth/webmasters.readonly
paths./sites/{siteUrl}.get.tags.length: 1
paths./sites/{siteUrl}.get.tags[0]: sites
paths./sites/{siteUrl}.parameters.length: 7
paths./sites/{siteUrl}.parameters[0].$ref: '#/parameters/alt'
paths./sites/{siteUrl}.parameters[1].$ref: '#/parameters/fields'
paths./sites/{siteUrl}.parameters[2].$ref: '#/parameters/key'
paths./sites/{siteUrl}.parameters[3].$ref: '#/parameters/oauth_token'
paths./sites/{siteUrl}.parameters[4].$ref: '#/parameters/prettyPrint'
paths./sites/{siteUrl}.parameters[5].$ref: '#/parameters/quotaUser'
paths./sites/{siteUrl}.parameters[6].$ref: '#/parameters/userIp'
paths./sites/{siteUrl}.put.description: Adds a site to the set of the user's sites
  in Search Console.
paths./sites/{siteUrl}.put.operationId: webmasters.sites.add
paths./sites/{siteUrl}.put.parameters.length: 1
paths./sites/{siteUrl}.put.parameters[0].description: The URL of the site to add.
paths./sites/{siteUrl}.put.parameters[0].in: path
paths./sites/{siteUrl}.put.parameters[0].name: siteUrl
paths./sites/{siteUrl}.put.parameters[0].required: true
paths./sites/{siteUrl}.put.parameters[0].type: string
paths./sites/{siteUrl}.put.responses.200.description: Successful response
paths./sites/{siteUrl}.put.security.length: 1
paths./sites/{siteUrl}.put.security[0].Oauth2.length: 1
paths./sites/{siteUrl}.put.security[0].Oauth2[0]: https://www.googleapis.com/auth/webmasters
paths./sites/{siteUrl}.put.tags.length: 1
paths./sites/{siteUrl}.put.tags[0]: sites
paths./sites/{siteUrl}/searchAnalytics/query.parameters.length: 7
paths./sites/{siteUrl}/searchAnalytics/query.parameters[0].$ref: '#/parameters/alt'
paths./sites/{siteUrl}/searchAnalytics/query.parameters[1].$ref: '#/parameters/fields'
paths./sites/{siteUrl}/searchAnalytics/query.parameters[2].$ref: '#/parameters/key'
paths./sites/{siteUrl}/searchAnalytics/query.parameters[3].$ref: '#/parameters/oauth_token'
paths./sites/{siteUrl}/searchAnalytics/query.parameters[4].$ref: '#/parameters/prettyPrint'
paths./sites/{siteUrl}/searchAnalytics/query.parameters[5].$ref: '#/parameters/quotaUser'
paths./sites/{siteUrl}/searchAnalytics/query.parameters[6].$ref: '#/parameters/userIp'
paths./sites/{siteUrl}/searchAnalytics/query.post.description: |-
  Query your data with filters and parameters that you define. Returns zero or more rows grouped by the row keys that you define. You must define a date range of one or more days.

  When date is one of the group by values, any days without data are omitted from the result list. If you need to know which days have data, issue a broad date range query grouped by date for any metric, and see which day rows are returned.
paths./sites/{siteUrl}/searchAnalytics/query.post.operationId: webmasters.searchanalytics.query
paths./sites/{siteUrl}/searchAnalytics/query.post.parameters.length: 2
paths./sites/{siteUrl}/searchAnalytics/query.post.parameters[0].description: 'The
  site''s URL, including protocol. For example: http://www.example.com/'
paths./sites/{siteUrl}/searchAnalytics/query.post.parameters[0].in: path
paths./sites/{siteUrl}/searchAnalytics/query.post.parameters[0].name: siteUrl
paths./sites/{siteUrl}/searchAnalytics/query.post.parameters[0].required: true
paths./sites/{siteUrl}/searchAnalytics/query.post.parameters[0].type: string
paths./sites/{siteUrl}/searchAnalytics/query.post.parameters[1].in: body
paths./sites/{siteUrl}/searchAnalytics/query.post.parameters[1].name: body
paths./sites/{siteUrl}/searchAnalytics/query.post.parameters[1].schema.$ref: '#/definitions/SearchAnalyticsQueryRequest'
paths./sites/{siteUrl}/searchAnalytics/query.post.responses.200.description: Successful
  response
paths./sites/{siteUrl}/searchAnalytics/query.post.responses.200.schema.$ref: '#/definitions/SearchAnalyticsQueryResponse'
paths./sites/{siteUrl}/searchAnalytics/query.post.security.length: 2
paths./sites/{siteUrl}/searchAnalytics/query.post.security[0].Oauth2.length: 1
paths./sites/{siteUrl}/searchAnalytics/query.post.security[0].Oauth2[0]: https://www.googleapis.com/auth/webmasters
paths./sites/{siteUrl}/searchAnalytics/query.post.security[1].Oauth2.length: 1
paths./sites/{siteUrl}/searchAnalytics/query.post.security[1].Oauth2[0]: https://www.googleapis.com/auth/webmasters.readonly
paths./sites/{siteUrl}/searchAnalytics/query.post.tags.length: 1
paths./sites/{siteUrl}/searchAnalytics/query.post.tags[0]: searchanalytics
paths./sites/{siteUrl}/sitemaps.get.description: Lists the sitemaps-entries submitted
  for this site, or included in the sitemap index file (if sitemapIndex is specified
  in the request).
paths./sites/{siteUrl}/sitemaps.get.operationId: webmasters.sitemaps.list
paths./sites/{siteUrl}/sitemaps.get.parameters.length: 2
paths./sites/{siteUrl}/sitemaps.get.parameters[0].description: 'The site''s URL, including
  protocol. For example: http://www.example.com/'
paths./sites/{siteUrl}/sitemaps.get.parameters[0].in: path
paths./sites/{siteUrl}/sitemaps.get.parameters[0].name: siteUrl
paths./sites/{siteUrl}/sitemaps.get.parameters[0].required: true
paths./sites/{siteUrl}/sitemaps.get.parameters[0].type: string
paths./sites/{siteUrl}/sitemaps.get.parameters[1].description: 'A URL of a site''s
  sitemap index. For example: http://www.example.com/sitemapindex.xml'
paths./sites/{siteUrl}/sitemaps.get.parameters[1].in: query
paths./sites/{siteUrl}/sitemaps.get.parameters[1].name: sitemapIndex
paths./sites/{siteUrl}/sitemaps.get.parameters[1].type: string
paths./sites/{siteUrl}/sitemaps.get.responses.200.description: Successful response
paths./sites/{siteUrl}/sitemaps.get.responses.200.schema.$ref: '#/definitions/SitemapsListResponse'
paths./sites/{siteUrl}/sitemaps.get.security.length: 2
paths./sites/{siteUrl}/sitemaps.get.security[0].Oauth2.length: 1
paths./sites/{siteUrl}/sitemaps.get.security[0].Oauth2[0]: https://www.googleapis.com/auth/webmasters
paths./sites/{siteUrl}/sitemaps.get.security[1].Oauth2.length: 1
paths./sites/{siteUrl}/sitemaps.get.security[1].Oauth2[0]: https://www.googleapis.com/auth/webmasters.readonly
paths./sites/{siteUrl}/sitemaps.get.tags.length: 1
paths./sites/{siteUrl}/sitemaps.get.tags[0]: sitemaps
paths./sites/{siteUrl}/sitemaps.parameters.length: 7
paths./sites/{siteUrl}/sitemaps.parameters[0].$ref: '#/parameters/alt'
paths./sites/{siteUrl}/sitemaps.parameters[1].$ref: '#/parameters/fields'
paths./sites/{siteUrl}/sitemaps.parameters[2].$ref: '#/parameters/key'
paths./sites/{siteUrl}/sitemaps.parameters[3].$ref: '#/parameters/oauth_token'
paths./sites/{siteUrl}/sitemaps.parameters[4].$ref: '#/parameters/prettyPrint'
paths./sites/{siteUrl}/sitemaps.parameters[5].$ref: '#/parameters/quotaUser'
paths./sites/{siteUrl}/sitemaps.parameters[6].$ref: '#/parameters/userIp'
paths./sites/{siteUrl}/sitemaps/{feedpath}.delete.description: Deletes a sitemap from
  this site.
paths./sites/{siteUrl}/sitemaps/{feedpath}.delete.operationId: webmasters.sitemaps.delete
paths./sites/{siteUrl}/sitemaps/{feedpath}.delete.parameters.length: 2
paths./sites/{siteUrl}/sitemaps/{feedpath}.delete.parameters[0].description: 'The
  site''s URL, including protocol. For example: http://www.example.com/'
paths./sites/{siteUrl}/sitemaps/{feedpath}.delete.parameters[0].in: path
paths./sites/{siteUrl}/sitemaps/{feedpath}.delete.parameters[0].name: siteUrl
paths./sites/{siteUrl}/sitemaps/{feedpath}.delete.parameters[0].required: true
paths./sites/{siteUrl}/sitemaps/{feedpath}.delete.parameters[0].type: string
paths./sites/{siteUrl}/sitemaps/{feedpath}.delete.parameters[1].description: 'The
  URL of the actual sitemap. For example: http://www.example.com/sitemap.xml'
paths./sites/{siteUrl}/sitemaps/{feedpath}.delete.parameters[1].in: path
paths./sites/{siteUrl}/sitemaps/{feedpath}.delete.parameters[1].name: feedpath
paths./sites/{siteUrl}/sitemaps/{feedpath}.delete.parameters[1].required: true
paths./sites/{siteUrl}/sitemaps/{feedpath}.delete.parameters[1].type: string
paths./sites/{siteUrl}/sitemaps/{feedpath}.delete.responses.200.description: Successful
  response
paths./sites/{siteUrl}/sitemaps/{feedpath}.delete.security.length: 1
paths./sites/{siteUrl}/sitemaps/{feedpath}.delete.security[0].Oauth2.length: 1
paths./sites/{siteUrl}/sitemaps/{feedpath}.delete.security[0].Oauth2[0]: https://www.googleapis.com/auth/webmasters
paths./sites/{siteUrl}/sitemaps/{feedpath}.delete.tags.length: 1
paths./sites/{siteUrl}/sitemaps/{feedpath}.delete.tags[0]: sitemaps
paths./sites/{siteUrl}/sitemaps/{feedpath}.get.description: Retrieves information
  about a specific sitemap.
paths./sites/{siteUrl}/sitemaps/{feedpath}.get.operationId: webmasters.sitemaps.get
paths./sites/{siteUrl}/sitemaps/{feedpath}.get.parameters.length: 2
paths./sites/{siteUrl}/sitemaps/{feedpath}.get.parameters[0].description: 'The site''s
  URL, including protocol. For example: http://www.example.com/'
paths./sites/{siteUrl}/sitemaps/{feedpath}.get.parameters[0].in: path
paths./sites/{siteUrl}/sitemaps/{feedpath}.get.parameters[0].name: siteUrl
paths./sites/{siteUrl}/sitemaps/{feedpath}.get.parameters[0].required: true
paths./sites/{siteUrl}/sitemaps/{feedpath}.get.parameters[0].type: string
paths./sites/{siteUrl}/sitemaps/{feedpath}.get.parameters[1].description: 'The URL
  of the actual sitemap. For example: http://www.example.com/sitemap.xml'
paths./sites/{siteUrl}/sitemaps/{feedpath}.get.parameters[1].in: path
paths./sites/{siteUrl}/sitemaps/{feedpath}.get.parameters[1].name: feedpath
paths./sites/{siteUrl}/sitemaps/{feedpath}.get.parameters[1].required: true
paths./sites/{siteUrl}/sitemaps/{feedpath}.get.parameters[1].type: string
paths./sites/{siteUrl}/sitemaps/{feedpath}.get.responses.200.description: Successful
  response
paths./sites/{siteUrl}/sitemaps/{feedpath}.get.responses.200.schema.$ref: '#/definitions/WmxSitemap'
paths./sites/{siteUrl}/sitemaps/{feedpath}.get.security.length: 2
paths./sites/{siteUrl}/sitemaps/{feedpath}.get.security[0].Oauth2.length: 1
paths./sites/{siteUrl}/sitemaps/{feedpath}.get.security[0].Oauth2[0]: https://www.googleapis.com/auth/webmasters
paths./sites/{siteUrl}/sitemaps/{feedpath}.get.security[1].Oauth2.length: 1
paths./sites/{siteUrl}/sitemaps/{feedpath}.get.security[1].Oauth2[0]: https://www.googleapis.com/auth/webmasters.readonly
paths./sites/{siteUrl}/sitemaps/{feedpath}.get.tags.length: 1
paths./sites/{siteUrl}/sitemaps/{feedpath}.get.tags[0]: sitemaps
paths./sites/{siteUrl}/sitemaps/{feedpath}.parameters.length: 7
paths./sites/{siteUrl}/sitemaps/{feedpath}.parameters[0].$ref: '#/parameters/alt'
paths./sites/{siteUrl}/sitemaps/{feedpath}.parameters[1].$ref: '#/parameters/fields'
paths./sites/{siteUrl}/sitemaps/{feedpath}.parameters[2].$ref: '#/parameters/key'
paths./sites/{siteUrl}/sitemaps/{feedpath}.parameters[3].$ref: '#/parameters/oauth_token'
paths./sites/{siteUrl}/sitemaps/{feedpath}.parameters[4].$ref: '#/parameters/prettyPrint'
paths./sites/{siteUrl}/sitemaps/{feedpath}.parameters[5].$ref: '#/parameters/quotaUser'
paths./sites/{siteUrl}/sitemaps/{feedpath}.parameters[6].$ref: '#/parameters/userIp'
paths./sites/{siteUrl}/sitemaps/{feedpath}.put.description: Submits a sitemap for
  a site.
paths./sites/{siteUrl}/sitemaps/{feedpath}.put.operationId: webmasters.sitemaps.submit
paths./sites/{siteUrl}/sitemaps/{feedpath}.put.parameters.length: 2
paths./sites/{siteUrl}/sitemaps/{feedpath}.put.parameters[0].description: 'The site''s
  URL, including protocol. For example: http://www.example.com/'
paths./sites/{siteUrl}/sitemaps/{feedpath}.put.parameters[0].in: path
paths./sites/{siteUrl}/sitemaps/{feedpath}.put.parameters[0].name: siteUrl
paths./sites/{siteUrl}/sitemaps/{feedpath}.put.parameters[0].required: true
paths./sites/{siteUrl}/sitemaps/{feedpath}.put.parameters[0].type: string
paths./sites/{siteUrl}/sitemaps/{feedpath}.put.parameters[1].description: 'The URL
  of the sitemap to add. For example: http://www.example.com/sitemap.xml'
paths./sites/{siteUrl}/sitemaps/{feedpath}.put.parameters[1].in: path
paths./sites/{siteUrl}/sitemaps/{feedpath}.put.parameters[1].name: feedpath
paths./sites/{siteUrl}/sitemaps/{feedpath}.put.parameters[1].required: true
paths./sites/{siteUrl}/sitemaps/{feedpath}.put.parameters[1].type: string
paths./sites/{siteUrl}/sitemaps/{feedpath}.put.responses.200.description: Successful
  response
paths./sites/{siteUrl}/sitemaps/{feedpath}.put.security.length: 1
paths./sites/{siteUrl}/sitemaps/{feedpath}.put.security[0].Oauth2.length: 1
paths./sites/{siteUrl}/sitemaps/{feedpath}.put.security[0].Oauth2[0]: https://www.googleapis.com/auth/webmasters
paths./sites/{siteUrl}/sitemaps/{feedpath}.put.tags.length: 1
paths./sites/{siteUrl}/sitemaps/{feedpath}.put.tags[0]: sitemaps
paths./sites/{siteUrl}/urlCrawlErrorsCounts/query.get.description: Retrieves a time
  series of the number of URL crawl errors per error category and platform.
paths./sites/{siteUrl}/urlCrawlErrorsCounts/query.get.operationId: webmasters.urlcrawlerrorscounts.query
paths./sites/{siteUrl}/urlCrawlErrorsCounts/query.get.parameters.length: 4
paths./sites/{siteUrl}/urlCrawlErrorsCounts/query.get.parameters[0].description: 'The
  site''s URL, including protocol. For example: http://www.example.com/'
paths./sites/{siteUrl}/urlCrawlErrorsCounts/query.get.parameters[0].in: path
paths./sites/{siteUrl}/urlCrawlErrorsCounts/query.get.parameters[0].name: siteUrl
paths./sites/{siteUrl}/urlCrawlErrorsCounts/query.get.parameters[0].required: true
paths./sites/{siteUrl}/urlCrawlErrorsCounts/query.get.parameters[0].type: string
paths./sites/{siteUrl}/urlCrawlErrorsCounts/query.get.parameters[1].description: 'The
  crawl error category. For example: serverError. If not specified, returns results
  for all categories.'
paths./sites/{siteUrl}/urlCrawlErrorsCounts/query.get.parameters[1].enum.length: 9
paths./sites/{siteUrl}/urlCrawlErrorsCounts/query.get.parameters[1].enum[0]: authPermissions
paths./sites/{siteUrl}/urlCrawlErrorsCounts/query.get.parameters[1].enum[1]: flashContent
paths./sites/{siteUrl}/urlCrawlErrorsCounts/query.get.parameters[1].enum[2]: manyToOneRedirect
paths./sites/{siteUrl}/urlCrawlErrorsCounts/query.get.parameters[1].enum[3]: notFollowed
paths./sites/{siteUrl}/urlCrawlErrorsCounts/query.get.parameters[1].enum[4]: notFound
paths./sites/{siteUrl}/urlCrawlErrorsCounts/query.get.parameters[1].enum[5]: other
paths./sites/{siteUrl}/urlCrawlErrorsCounts/query.get.parameters[1].enum[6]: roboted
paths./sites/{siteUrl}/urlCrawlErrorsCounts/query.get.parameters[1].enum[7]: serverError
paths./sites/{siteUrl}/urlCrawlErrorsCounts/query.get.parameters[1].enum[8]: soft404
paths./sites/{siteUrl}/urlCrawlErrorsCounts/query.get.parameters[1].in: query
paths./sites/{siteUrl}/urlCrawlErrorsCounts/query.get.parameters[1].name: category
paths./sites/{siteUrl}/urlCrawlErrorsCounts/query.get.parameters[1].type: string
paths./sites/{siteUrl}/urlCrawlErrorsCounts/query.get.parameters[2].default: true
paths./sites/{siteUrl}/urlCrawlErrorsCounts/query.get.parameters[2].description: If
  true, returns only the latest crawl error counts.
paths./sites/{siteUrl}/urlCrawlErrorsCounts/query.get.parameters[2].in: query
paths./sites/{siteUrl}/urlCrawlErrorsCounts/query.get.parameters[2].name: latestCountsOnly
paths./sites/{siteUrl}/urlCrawlErrorsCounts/query.get.parameters[2].type: boolean
paths./sites/{siteUrl}/urlCrawlErrorsCounts/query.get.parameters[3].description: 'The
  user agent type (platform) that made the request. For example: web. If not specified,
  returns results for all platforms.'
paths./sites/{siteUrl}/urlCrawlErrorsCounts/query.get.parameters[3].enum.length: 3
paths./sites/{siteUrl}/urlCrawlErrorsCounts/query.get.parameters[3].enum[0]: mobile
paths./sites/{siteUrl}/urlCrawlErrorsCounts/query.get.parameters[3].enum[1]: smartphoneOnly
paths./sites/{siteUrl}/urlCrawlErrorsCounts/query.get.parameters[3].enum[2]: web
paths./sites/{siteUrl}/urlCrawlErrorsCounts/query.get.parameters[3].in: query
paths./sites/{siteUrl}/urlCrawlErrorsCounts/query.get.parameters[3].name: platform
paths./sites/{siteUrl}/urlCrawlErrorsCounts/query.get.parameters[3].type: string
paths./sites/{siteUrl}/urlCrawlErrorsCounts/query.get.responses.200.description: Successful
  response
paths./sites/{siteUrl}/urlCrawlErrorsCounts/query.get.responses.200.schema.$ref: '#/definitions/UrlCrawlErrorsCountsQueryResponse'
paths./sites/{siteUrl}/urlCrawlErrorsCounts/query.get.security.length: 2
paths./sites/{siteUrl}/urlCrawlErrorsCounts/query.get.security[0].Oauth2.length: 1
paths./sites/{siteUrl}/urlCrawlErrorsCounts/query.get.security[0].Oauth2[0]: https://www.googleapis.com/auth/webmasters
paths./sites/{siteUrl}/urlCrawlErrorsCounts/query.get.security[1].Oauth2.length: 1
paths./sites/{siteUrl}/urlCrawlErrorsCounts/query.get.security[1].Oauth2[0]: https://www.googleapis.com/auth/webmasters.readonly
paths./sites/{siteUrl}/urlCrawlErrorsCounts/query.get.tags.length: 1
paths./sites/{siteUrl}/urlCrawlErrorsCounts/query.get.tags[0]: urlcrawlerrorscounts
paths./sites/{siteUrl}/urlCrawlErrorsCounts/query.parameters.length: 7
paths./sites/{siteUrl}/urlCrawlErrorsCounts/query.parameters[0].$ref: '#/parameters/alt'
paths./sites/{siteUrl}/urlCrawlErrorsCounts/query.parameters[1].$ref: '#/parameters/fields'
paths./sites/{siteUrl}/urlCrawlErrorsCounts/query.parameters[2].$ref: '#/parameters/key'
paths./sites/{siteUrl}/urlCrawlErrorsCounts/query.parameters[3].$ref: '#/parameters/oauth_token'
paths./sites/{siteUrl}/urlCrawlErrorsCounts/query.parameters[4].$ref: '#/parameters/prettyPrint'
paths./sites/{siteUrl}/urlCrawlErrorsCounts/query.parameters[5].$ref: '#/parameters/quotaUser'
paths./sites/{siteUrl}/urlCrawlErrorsCounts/query.parameters[6].$ref: '#/parameters/userIp'
paths./sites/{siteUrl}/urlCrawlErrorsSamples.get.description: Lists a site's sample
  URLs for the specified crawl error category and platform.
paths./sites/{siteUrl}/urlCrawlErrorsSamples.get.operationId: webmasters.urlcrawlerrorssamples.list
paths./sites/{siteUrl}/urlCrawlErrorsSamples.get.parameters.length: 3
paths./sites/{siteUrl}/urlCrawlErrorsSamples.get.parameters[0].description: 'The site''s
  URL, including protocol. For example: http://www.example.com/'
paths./sites/{siteUrl}/urlCrawlErrorsSamples.get.parameters[0].in: path
paths./sites/{siteUrl}/urlCrawlErrorsSamples.get.parameters[0].name: siteUrl
paths./sites/{siteUrl}/urlCrawlErrorsSamples.get.parameters[0].required: true
paths./sites/{siteUrl}/urlCrawlErrorsSamples.get.parameters[0].type: string
paths./sites/{siteUrl}/urlCrawlErrorsSamples.get.parameters[1].description: 'The crawl
  error category. For example: authPermissions'
paths./sites/{siteUrl}/urlCrawlErrorsSamples.get.parameters[1].enum.length: 9
paths./sites/{siteUrl}/urlCrawlErrorsSamples.get.parameters[1].enum[0]: authPermissions
paths./sites/{siteUrl}/urlCrawlErrorsSamples.get.parameters[1].enum[1]: flashContent
paths./sites/{siteUrl}/urlCrawlErrorsSamples.get.parameters[1].enum[2]: manyToOneRedirect
paths./sites/{siteUrl}/urlCrawlErrorsSamples.get.parameters[1].enum[3]: notFollowed
paths./sites/{siteUrl}/urlCrawlErrorsSamples.get.parameters[1].enum[4]: notFound
paths./sites/{siteUrl}/urlCrawlErrorsSamples.get.parameters[1].enum[5]: other
paths./sites/{siteUrl}/urlCrawlErrorsSamples.get.parameters[1].enum[6]: roboted
paths./sites/{siteUrl}/urlCrawlErrorsSamples.get.parameters[1].enum[7]: serverError
paths./sites/{siteUrl}/urlCrawlErrorsSamples.get.parameters[1].enum[8]: soft404
paths./sites/{siteUrl}/urlCrawlErrorsSamples.get.parameters[1].in: query
paths./sites/{siteUrl}/urlCrawlErrorsSamples.get.parameters[1].name: category
paths./sites/{siteUrl}/urlCrawlErrorsSamples.get.parameters[1].required: true
paths./sites/{siteUrl}/urlCrawlErrorsSamples.get.parameters[1].type: string
paths./sites/{siteUrl}/urlCrawlErrorsSamples.get.parameters[2].description: 'The user
  agent type (platform) that made the request. For example: web'
paths./sites/{siteUrl}/urlCrawlErrorsSamples.get.parameters[2].enum.length: 3
paths./sites/{siteUrl}/urlCrawlErrorsSamples.get.parameters[2].enum[0]: mobile
paths./sites/{siteUrl}/urlCrawlErrorsSamples.get.parameters[2].enum[1]: smartphoneOnly
paths./sites/{siteUrl}/urlCrawlErrorsSamples.get.parameters[2].enum[2]: web
paths./sites/{siteUrl}/urlCrawlErrorsSamples.get.parameters[2].in: query
paths./sites/{siteUrl}/urlCrawlErrorsSamples.get.parameters[2].name: platform
paths./sites/{siteUrl}/urlCrawlErrorsSamples.get.parameters[2].required: true
paths./sites/{siteUrl}/urlCrawlErrorsSamples.get.parameters[2].type: string
paths./sites/{siteUrl}/urlCrawlErrorsSamples.get.responses.200.description: Successful
  response
paths./sites/{siteUrl}/urlCrawlErrorsSamples.get.responses.200.schema.$ref: '#/definitions/UrlCrawlErrorsSamplesListResponse'
paths./sites/{siteUrl}/urlCrawlErrorsSamples.get.security.length: 2
paths./sites/{siteUrl}/urlCrawlErrorsSamples.get.security[0].Oauth2.length: 1
paths./sites/{siteUrl}/urlCrawlErrorsSamples.get.security[0].Oauth2[0]: https://www.googleapis.com/auth/webmasters
paths./sites/{siteUrl}/urlCrawlErrorsSamples.get.security[1].Oauth2.length: 1
paths./sites/{siteUrl}/urlCrawlErrorsSamples.get.security[1].Oauth2[0]: https://www.googleapis.com/auth/webmasters.readonly
paths./sites/{siteUrl}/urlCrawlErrorsSamples.get.tags.length: 1
paths./sites/{siteUrl}/urlCrawlErrorsSamples.get.tags[0]: urlcrawlerrorssamples
paths./sites/{siteUrl}/urlCrawlErrorsSamples.parameters.length: 7
paths./sites/{siteUrl}/urlCrawlErrorsSamples.parameters[0].$ref: '#/parameters/alt'
paths./sites/{siteUrl}/urlCrawlErrorsSamples.parameters[1].$ref: '#/parameters/fields'
paths./sites/{siteUrl}/urlCrawlErrorsSamples.parameters[2].$ref: '#/parameters/key'
paths./sites/{siteUrl}/urlCrawlErrorsSamples.parameters[3].$ref: '#/parameters/oauth_token'
paths./sites/{siteUrl}/urlCrawlErrorsSamples.parameters[4].$ref: '#/parameters/prettyPrint'
paths./sites/{siteUrl}/urlCrawlErrorsSamples.parameters[5].$ref: '#/parameters/quotaUser'
paths./sites/{siteUrl}/urlCrawlErrorsSamples.parameters[6].$ref: '#/parameters/userIp'
paths./sites/{siteUrl}/urlCrawlErrorsSamples/{url}.delete.description: Marks the provided
  site's sample URL as fixed, and removes it from the samples list.
paths./sites/{siteUrl}/urlCrawlErrorsSamples/{url}.delete.operationId: webmasters.urlcrawlerrorssamples.markAsFixed
paths./sites/{siteUrl}/urlCrawlErrorsSamples/{url}.delete.parameters.length: 4
paths./sites/{siteUrl}/urlCrawlErrorsSamples/{url}.delete.parameters[0].description: 'The
  site''s URL, including protocol. For example: http://www.example.com/'
paths./sites/{siteUrl}/urlCrawlErrorsSamples/{url}.delete.parameters[0].in: path
paths./sites/{siteUrl}/urlCrawlErrorsSamples/{url}.delete.parameters[0].name: siteUrl
paths./sites/{siteUrl}/urlCrawlErrorsSamples/{url}.delete.parameters[0].required: true
paths./sites/{siteUrl}/urlCrawlErrorsSamples/{url}.delete.parameters[0].type: string
paths./sites/{siteUrl}/urlCrawlErrorsSamples/{url}.delete.parameters[1].description: The
  relative path (without the site) of the sample URL. It must be one of the URLs returned
  by list(). For example, for the URL https://www.example.com/pagename on the site
  https://www.example.com/, the url value is pagename
paths./sites/{siteUrl}/urlCrawlErrorsSamples/{url}.delete.parameters[1].in: path
paths./sites/{siteUrl}/urlCrawlErrorsSamples/{url}.delete.parameters[1].name: url
paths./sites/{siteUrl}/urlCrawlErrorsSamples/{url}.delete.parameters[1].required: true
paths./sites/{siteUrl}/urlCrawlErrorsSamples/{url}.delete.parameters[1].type: string
paths./sites/{siteUrl}/urlCrawlErrorsSamples/{url}.delete.parameters[2].description: 'The
  crawl error category. For example: authPermissions'
paths./sites/{siteUrl}/urlCrawlErrorsSamples/{url}.delete.parameters[2].enum.length: 9
paths./sites/{siteUrl}/urlCrawlErrorsSamples/{url}.delete.parameters[2].enum[0]: authPermissions
paths./sites/{siteUrl}/urlCrawlErrorsSamples/{url}.delete.parameters[2].enum[1]: flashContent
paths./sites/{siteUrl}/urlCrawlErrorsSamples/{url}.delete.parameters[2].enum[2]: manyToOneRedirect
paths./sites/{siteUrl}/urlCrawlErrorsSamples/{url}.delete.parameters[2].enum[3]: notFollowed
paths./sites/{siteUrl}/urlCrawlErrorsSamples/{url}.delete.parameters[2].enum[4]: notFound
paths./sites/{siteUrl}/urlCrawlErrorsSamples/{url}.delete.parameters[2].enum[5]: other
paths./sites/{siteUrl}/urlCrawlErrorsSamples/{url}.delete.parameters[2].enum[6]: roboted
paths./sites/{siteUrl}/urlCrawlErrorsSamples/{url}.delete.parameters[2].enum[7]: serverError
paths./sites/{siteUrl}/urlCrawlErrorsSamples/{url}.delete.parameters[2].enum[8]: soft404
paths./sites/{siteUrl}/urlCrawlErrorsSamples/{url}.delete.parameters[2].in: query
paths./sites/{siteUrl}/urlCrawlErrorsSamples/{url}.delete.parameters[2].name: category
paths./sites/{siteUrl}/urlCrawlErrorsSamples/{url}.delete.parameters[2].required: true
paths./sites/{siteUrl}/urlCrawlErrorsSamples/{url}.delete.parameters[2].type: string
paths./sites/{siteUrl}/urlCrawlErrorsSamples/{url}.delete.parameters[3].description: 'The
  user agent type (platform) that made the request. For example: web'
paths./sites/{siteUrl}/urlCrawlErrorsSamples/{url}.delete.parameters[3].enum.length: 3
paths./sites/{siteUrl}/urlCrawlErrorsSamples/{url}.delete.parameters[3].enum[0]: mobile
paths./sites/{siteUrl}/urlCrawlErrorsSamples/{url}.delete.parameters[3].enum[1]: smartphoneOnly
paths./sites/{siteUrl}/urlCrawlErrorsSamples/{url}.delete.parameters[3].enum[2]: web
paths./sites/{siteUrl}/urlCrawlErrorsSamples/{url}.delete.parameters[3].in: query
paths./sites/{siteUrl}/urlCrawlErrorsSamples/{url}.delete.parameters[3].name: platform
paths./sites/{siteUrl}/urlCrawlErrorsSamples/{url}.delete.parameters[3].required: true
paths./sites/{siteUrl}/urlCrawlErrorsSamples/{url}.delete.parameters[3].type: string
paths./sites/{siteUrl}/urlCrawlErrorsSamples/{url}.delete.responses.200.description: Successful
  response
paths./sites/{siteUrl}/urlCrawlErrorsSamples/{url}.delete.security.length: 1
paths./sites/{siteUrl}/urlCrawlErrorsSamples/{url}.delete.security[0].Oauth2.length: 1
paths./sites/{siteUrl}/urlCrawlErrorsSamples/{url}.delete.security[0].Oauth2[0]: https://www.googleapis.com/auth/webmasters
paths./sites/{siteUrl}/urlCrawlErrorsSamples/{url}.delete.tags.length: 1
paths./sites/{siteUrl}/urlCrawlErrorsSamples/{url}.delete.tags[0]: urlcrawlerrorssamples
paths./sites/{siteUrl}/urlCrawlErrorsSamples/{url}.get.description: Retrieves details
  about crawl errors for a site's sample URL.
paths./sites/{siteUrl}/urlCrawlErrorsSamples/{url}.get.operationId: webmasters.urlcrawlerrorssamples.get
paths./sites/{siteUrl}/urlCrawlErrorsSamples/{url}.get.parameters.length: 4
paths./sites/{siteUrl}/urlCrawlErrorsSamples/{url}.get.parameters[0].description: 'The
  site''s URL, including protocol. For example: http://www.example.com/'
paths./sites/{siteUrl}/urlCrawlErrorsSamples/{url}.get.parameters[0].in: path
paths./sites/{siteUrl}/urlCrawlErrorsSamples/{url}.get.parameters[0].name: siteUrl
paths./sites/{siteUrl}/urlCrawlErrorsSamples/{url}.get.parameters[0].required: true
paths./sites/{siteUrl}/urlCrawlErrorsSamples/{url}.get.parameters[0].type: string
paths./sites/{siteUrl}/urlCrawlErrorsSamples/{url}.get.parameters[1].description: The
  relative path (without the site) of the sample URL. It must be one of the URLs returned
  by list(). For example, for the URL https://www.example.com/pagename on the site
  https://www.example.com/, the url value is pagename
paths./sites/{siteUrl}/urlCrawlErrorsSamples/{url}.get.parameters[1].in: path
paths./sites/{siteUrl}/urlCrawlErrorsSamples/{url}.get.parameters[1].name: url
paths./sites/{siteUrl}/urlCrawlErrorsSamples/{url}.get.parameters[1].required: true
paths./sites/{siteUrl}/urlCrawlErrorsSamples/{url}.get.parameters[1].type: string
paths./sites/{siteUrl}/urlCrawlErrorsSamples/{url}.get.parameters[2].description: 'The
  crawl error category. For example: authPermissions'
paths./sites/{siteUrl}/urlCrawlErrorsSamples/{url}.get.parameters[2].enum.length: 9
paths./sites/{siteUrl}/urlCrawlErrorsSamples/{url}.get.parameters[2].enum[0]: authPermissions
paths./sites/{siteUrl}/urlCrawlErrorsSamples/{url}.get.parameters[2].enum[1]: flashContent
paths./sites/{siteUrl}/urlCrawlErrorsSamples/{url}.get.parameters[2].enum[2]: manyToOneRedirect
paths./sites/{siteUrl}/urlCrawlErrorsSamples/{url}.get.parameters[2].enum[3]: notFollowed
paths./sites/{siteUrl}/urlCrawlErrorsSamples/{url}.get.parameters[2].enum[4]: notFound
paths./sites/{siteUrl}/urlCrawlErrorsSamples/{url}.get.parameters[2].enum[5]: other
paths./sites/{siteUrl}/urlCrawlErrorsSamples/{url}.get.parameters[2].enum[6]: roboted
paths./sites/{siteUrl}/urlCrawlErrorsSamples/{url}.get.parameters[2].enum[7]: serverError
paths./sites/{siteUrl}/urlCrawlErrorsSamples/{url}.get.parameters[2].enum[8]: soft404
paths./sites/{siteUrl}/urlCrawlErrorsSamples/{url}.get.parameters[2].in: query
paths./sites/{siteUrl}/urlCrawlErrorsSamples/{url}.get.parameters[2].name: category
paths./sites/{siteUrl}/urlCrawlErrorsSamples/{url}.get.parameters[2].required: true
paths./sites/{siteUrl}/urlCrawlErrorsSamples/{url}.get.parameters[2].type: string
paths./sites/{siteUrl}/urlCrawlErrorsSamples/{url}.get.parameters[3].description: 'The
  user agent type (platform) that made the request. For example: web'
paths./sites/{siteUrl}/urlCrawlErrorsSamples/{url}.get.parameters[3].enum.length: 3
paths./sites/{siteUrl}/urlCrawlErrorsSamples/{url}.get.parameters[3].enum[0]: mobile
paths./sites/{siteUrl}/urlCrawlErrorsSamples/{url}.get.parameters[3].enum[1]: smartphoneOnly
paths./sites/{siteUrl}/urlCrawlErrorsSamples/{url}.get.parameters[3].enum[2]: web
paths./sites/{siteUrl}/urlCrawlErrorsSamples/{url}.get.parameters[3].in: query
paths./sites/{siteUrl}/urlCrawlErrorsSamples/{url}.get.parameters[3].name: platform
paths./sites/{siteUrl}/urlCrawlErrorsSamples/{url}.get.parameters[3].required: true
paths./sites/{siteUrl}/urlCrawlErrorsSamples/{url}.get.parameters[3].type: string
paths./sites/{siteUrl}/urlCrawlErrorsSamples/{url}.get.responses.200.description: Successful
  response
paths./sites/{siteUrl}/urlCrawlErrorsSamples/{url}.get.responses.200.schema.$ref: '#/definitions/UrlCrawlErrorsSample'
paths./sites/{siteUrl}/urlCrawlErrorsSamples/{url}.get.security.length: 2
paths./sites/{siteUrl}/urlCrawlErrorsSamples/{url}.get.security[0].Oauth2.length: 1
paths./sites/{siteUrl}/urlCrawlErrorsSamples/{url}.get.security[0].Oauth2[0]: https://www.googleapis.com/auth/webmasters
paths./sites/{siteUrl}/urlCrawlErrorsSamples/{url}.get.security[1].Oauth2.length: 1
paths./sites/{siteUrl}/urlCrawlErrorsSamples/{url}.get.security[1].Oauth2[0]: https://www.googleapis.com/auth/webmasters.readonly
paths./sites/{siteUrl}/urlCrawlErrorsSamples/{url}.get.tags.length: 1
paths./sites/{siteUrl}/urlCrawlErrorsSamples/{url}.get.tags[0]: urlcrawlerrorssamples
paths./sites/{siteUrl}/urlCrawlErrorsSamples/{url}.parameters.length: 7
paths./sites/{siteUrl}/urlCrawlErrorsSamples/{url}.parameters[0].$ref: '#/parameters/alt'
paths./sites/{siteUrl}/urlCrawlErrorsSamples/{url}.parameters[1].$ref: '#/parameters/fields'
paths./sites/{siteUrl}/urlCrawlErrorsSamples/{url}.parameters[2].$ref: '#/parameters/key'
paths./sites/{siteUrl}/urlCrawlErrorsSamples/{url}.parameters[3].$ref: '#/parameters/oauth_token'
paths./sites/{siteUrl}/urlCrawlErrorsSamples/{url}.parameters[4].$ref: '#/parameters/prettyPrint'
paths./sites/{siteUrl}/urlCrawlErrorsSamples/{url}.parameters[5].$ref: '#/parameters/quotaUser'
paths./sites/{siteUrl}/urlCrawlErrorsSamples/{url}.parameters[6].$ref: '#/parameters/userIp'
schemes.length: 1
schemes[0]: https
securityDefinitions.Oauth2.authorizationUrl: https://accounts.google.com/o/oauth2/auth
securityDefinitions.Oauth2.description: Oauth 2.0 authentication
securityDefinitions.Oauth2.flow: implicit
securityDefinitions.Oauth2.scopes.https://www.googleapis.com/auth/webmasters: View
  and manage Search Console data for your verified sites
securityDefinitions.Oauth2.scopes.https://www.googleapis.com/auth/webmasters.readonly: View
  Search Console data for your verified sites
securityDefinitions.Oauth2.type: oauth2
swagger: "2.0"
tags.length: 5
tags[0].name: searchanalytics
tags[1].name: sitemaps
tags[2].name: sites
tags[3].name: urlcrawlerrorscounts
tags[4].name: urlcrawlerrorssamples
