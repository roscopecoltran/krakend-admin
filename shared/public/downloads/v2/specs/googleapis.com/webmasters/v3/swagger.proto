syntax = "proto3";

import "google/protobuf/empty.proto";

import "google/api/annotations.proto";

package searchconsole;

message GetSitesRequest {
    alt alt = 1;
    string fields = 2;
    string key = 3;
    string oauth_token = 4;
    boolean prettyPrint = 5;
    string quotaUser = 6;
    string userIp = 7;
}

message GetSitesSiteUrlRequest {
    alt alt = 1;
    string fields = 2;
    string key = 3;
    string oauth_token = 4;
    boolean prettyPrint = 5;
    string quotaUser = 6;
    // The URI of the property as defined in Search Console. Examples: http://www.example.com/ or android-app://com.example
    string siteUrl = 7;
    string userIp = 8;
}

message PutSitesSiteUrlRequest {
    alt alt = 1;
    string fields = 2;
    string key = 3;
    string oauth_token = 4;
    boolean prettyPrint = 5;
    string quotaUser = 6;
    // The URL of the site to add.
    string siteUrl = 7;
    string userIp = 8;
}

message DeleteSitesSiteUrlRequest {
    alt alt = 1;
    string fields = 2;
    string key = 3;
    string oauth_token = 4;
    boolean prettyPrint = 5;
    string quotaUser = 6;
    // The URI of the property as defined in Search Console. Examples: http://www.example.com/ or android-app://com.example
    string siteUrl = 7;
    string userIp = 8;
}

message PostSitesSiteUrlSearchAnalyticsQueryRequest {
    alt alt = 1;
    SearchAnalyticsQueryRequest body = 2;
    string fields = 3;
    string key = 4;
    string oauth_token = 5;
    boolean prettyPrint = 6;
    string quotaUser = 7;
    // The site's URL, including protocol. For example: http://www.example.com
    string siteUrl = 8;
    string userIp = 9;
}

message GetSitesSiteUrlSitemapsRequest {
    alt alt = 1;
    string fields = 2;
    string key = 3;
    string oauth_token = 4;
    boolean prettyPrint = 5;
    string quotaUser = 6;
    // The site's URL, including protocol. For example: http://www.example.com
    string siteUrl = 7;
    // A URL of a site's sitemap index. For example: http://www.example.com/sitemapindex.xml
    string sitemapIndex = 8;
    string userIp = 9;
}

message GetSitesSiteUrlSitemapsFeedpathRequest {
    alt alt = 1;
    // The URL of the actual sitemap. For example: http://www.example.com/sitemap.xml
    string feedpath = 2;
    string fields = 3;
    string key = 4;
    string oauth_token = 5;
    boolean prettyPrint = 6;
    string quotaUser = 7;
    // The site's URL, including protocol. For example: http://www.example.com
    string siteUrl = 8;
    string userIp = 9;
}

message PutSitesSiteUrlSitemapsFeedpathRequest {
    alt alt = 1;
    // The URL of the sitemap to add. For example: http://www.example.com/sitemap.xml
    string feedpath = 2;
    string fields = 3;
    string key = 4;
    string oauth_token = 5;
    boolean prettyPrint = 6;
    string quotaUser = 7;
    // The site's URL, including protocol. For example: http://www.example.com
    string siteUrl = 8;
    string userIp = 9;
}

message DeleteSitesSiteUrlSitemapsFeedpathRequest {
    alt alt = 1;
    // The URL of the actual sitemap. For example: http://www.example.com/sitemap.xml
    string feedpath = 2;
    string fields = 3;
    string key = 4;
    string oauth_token = 5;
    boolean prettyPrint = 6;
    string quotaUser = 7;
    // The site's URL, including protocol. For example: http://www.example.com
    string siteUrl = 8;
    string userIp = 9;
}

message GetSitesSiteUrlUrlCrawlErrorsCountsQueryRequest {
    alt alt = 1;
    // The crawl error category. For example: serverError. If not specified, returns results for all categories.
    enum GetSitesSiteUrlUrlCrawlErrorsCountsQueryRequest_Category {
        GETSITESSITEURLURLCRAWLERRORSCOUNTSQUERYREQUEST_CATEGORY_AUTHPERMISSIONS = 0;
        GETSITESSITEURLURLCRAWLERRORSCOUNTSQUERYREQUEST_CATEGORY_FLASHCONTENT = 1;
        GETSITESSITEURLURLCRAWLERRORSCOUNTSQUERYREQUEST_CATEGORY_MANYTOONEREDIRECT = 2;
        GETSITESSITEURLURLCRAWLERRORSCOUNTSQUERYREQUEST_CATEGORY_NOTFOLLOWED = 3;
        GETSITESSITEURLURLCRAWLERRORSCOUNTSQUERYREQUEST_CATEGORY_NOTFOUND = 4;
        GETSITESSITEURLURLCRAWLERRORSCOUNTSQUERYREQUEST_CATEGORY_OTHER = 5;
        GETSITESSITEURLURLCRAWLERRORSCOUNTSQUERYREQUEST_CATEGORY_ROBOTED = 6;
        GETSITESSITEURLURLCRAWLERRORSCOUNTSQUERYREQUEST_CATEGORY_SERVERERROR = 7;
        GETSITESSITEURLURLCRAWLERRORSCOUNTSQUERYREQUEST_CATEGORY_SOFT404 = 8;
    }
    GetSitesSiteUrlUrlCrawlErrorsCountsQueryRequest_Category category = 2;
    string fields = 3;
    string key = 4;
    // If true, returns only the latest crawl error counts.
    bool latestCountsOnly = 5;
    string oauth_token = 6;
    // The user agent type (platform) that made the request. For example: web. If not specified, returns results for all platforms.
    enum GetSitesSiteUrlUrlCrawlErrorsCountsQueryRequest_Platform {
        GETSITESSITEURLURLCRAWLERRORSCOUNTSQUERYREQUEST_PLATFORM_MOBILE = 0;
        GETSITESSITEURLURLCRAWLERRORSCOUNTSQUERYREQUEST_PLATFORM_SMARTPHONEONLY = 1;
        GETSITESSITEURLURLCRAWLERRORSCOUNTSQUERYREQUEST_PLATFORM_WEB = 2;
    }
    GetSitesSiteUrlUrlCrawlErrorsCountsQueryRequest_Platform platform = 7;
    boolean prettyPrint = 8;
    string quotaUser = 9;
    // The site's URL, including protocol. For example: http://www.example.com
    string siteUrl = 10;
    string userIp = 11;
}

message GetSitesSiteUrlUrlCrawlErrorsSamplesRequest {
    alt alt = 1;
    // The crawl error category. For example: authPermissions
    enum GetSitesSiteUrlUrlCrawlErrorsSamplesRequest_Category {
        GETSITESSITEURLURLCRAWLERRORSSAMPLESREQUEST_CATEGORY_AUTHPERMISSIONS = 0;
        GETSITESSITEURLURLCRAWLERRORSSAMPLESREQUEST_CATEGORY_FLASHCONTENT = 1;
        GETSITESSITEURLURLCRAWLERRORSSAMPLESREQUEST_CATEGORY_MANYTOONEREDIRECT = 2;
        GETSITESSITEURLURLCRAWLERRORSSAMPLESREQUEST_CATEGORY_NOTFOLLOWED = 3;
        GETSITESSITEURLURLCRAWLERRORSSAMPLESREQUEST_CATEGORY_NOTFOUND = 4;
        GETSITESSITEURLURLCRAWLERRORSSAMPLESREQUEST_CATEGORY_OTHER = 5;
        GETSITESSITEURLURLCRAWLERRORSSAMPLESREQUEST_CATEGORY_ROBOTED = 6;
        GETSITESSITEURLURLCRAWLERRORSSAMPLESREQUEST_CATEGORY_SERVERERROR = 7;
        GETSITESSITEURLURLCRAWLERRORSSAMPLESREQUEST_CATEGORY_SOFT404 = 8;
    }
    GetSitesSiteUrlUrlCrawlErrorsSamplesRequest_Category category = 2;
    string fields = 3;
    string key = 4;
    string oauth_token = 5;
    // The user agent type (platform) that made the request. For example: web
    enum GetSitesSiteUrlUrlCrawlErrorsSamplesRequest_Platform {
        GETSITESSITEURLURLCRAWLERRORSSAMPLESREQUEST_PLATFORM_MOBILE = 0;
        GETSITESSITEURLURLCRAWLERRORSSAMPLESREQUEST_PLATFORM_SMARTPHONEONLY = 1;
        GETSITESSITEURLURLCRAWLERRORSSAMPLESREQUEST_PLATFORM_WEB = 2;
    }
    GetSitesSiteUrlUrlCrawlErrorsSamplesRequest_Platform platform = 6;
    boolean prettyPrint = 7;
    string quotaUser = 8;
    // The site's URL, including protocol. For example: http://www.example.com
    string siteUrl = 9;
    string userIp = 10;
}

message GetSitesSiteUrlUrlCrawlErrorsSamplesUrlRequest {
    alt alt = 1;
    // The crawl error category. For example: authPermissions
    enum GetSitesSiteUrlUrlCrawlErrorsSamplesUrlRequest_Category {
        GETSITESSITEURLURLCRAWLERRORSSAMPLESURLREQUEST_CATEGORY_AUTHPERMISSIONS = 0;
        GETSITESSITEURLURLCRAWLERRORSSAMPLESURLREQUEST_CATEGORY_FLASHCONTENT = 1;
        GETSITESSITEURLURLCRAWLERRORSSAMPLESURLREQUEST_CATEGORY_MANYTOONEREDIRECT = 2;
        GETSITESSITEURLURLCRAWLERRORSSAMPLESURLREQUEST_CATEGORY_NOTFOLLOWED = 3;
        GETSITESSITEURLURLCRAWLERRORSSAMPLESURLREQUEST_CATEGORY_NOTFOUND = 4;
        GETSITESSITEURLURLCRAWLERRORSSAMPLESURLREQUEST_CATEGORY_OTHER = 5;
        GETSITESSITEURLURLCRAWLERRORSSAMPLESURLREQUEST_CATEGORY_ROBOTED = 6;
        GETSITESSITEURLURLCRAWLERRORSSAMPLESURLREQUEST_CATEGORY_SERVERERROR = 7;
        GETSITESSITEURLURLCRAWLERRORSSAMPLESURLREQUEST_CATEGORY_SOFT404 = 8;
    }
    GetSitesSiteUrlUrlCrawlErrorsSamplesUrlRequest_Category category = 2;
    string fields = 3;
    string key = 4;
    string oauth_token = 5;
    // The user agent type (platform) that made the request. For example: web
    enum GetSitesSiteUrlUrlCrawlErrorsSamplesUrlRequest_Platform {
        GETSITESSITEURLURLCRAWLERRORSSAMPLESURLREQUEST_PLATFORM_MOBILE = 0;
        GETSITESSITEURLURLCRAWLERRORSSAMPLESURLREQUEST_PLATFORM_SMARTPHONEONLY = 1;
        GETSITESSITEURLURLCRAWLERRORSSAMPLESURLREQUEST_PLATFORM_WEB = 2;
    }
    GetSitesSiteUrlUrlCrawlErrorsSamplesUrlRequest_Platform platform = 6;
    boolean prettyPrint = 7;
    string quotaUser = 8;
    // The site's URL, including protocol. For example: http://www.example.com
    string siteUrl = 9;
    // The relative path (without the site) of the sample URL. It must be one of the URLs returned by list(). For example, for the URL https://www.example.com/pagename on the site https://www.example.com/, the url value is pagename
    string url = 10;
    string userIp = 11;
}

message DeleteSitesSiteUrlUrlCrawlErrorsSamplesUrlRequest {
    alt alt = 1;
    // The crawl error category. For example: authPermissions
    enum DeleteSitesSiteUrlUrlCrawlErrorsSamplesUrlRequest_Category {
        DELETESITESSITEURLURLCRAWLERRORSSAMPLESURLREQUEST_CATEGORY_AUTHPERMISSIONS = 0;
        DELETESITESSITEURLURLCRAWLERRORSSAMPLESURLREQUEST_CATEGORY_FLASHCONTENT = 1;
        DELETESITESSITEURLURLCRAWLERRORSSAMPLESURLREQUEST_CATEGORY_MANYTOONEREDIRECT = 2;
        DELETESITESSITEURLURLCRAWLERRORSSAMPLESURLREQUEST_CATEGORY_NOTFOLLOWED = 3;
        DELETESITESSITEURLURLCRAWLERRORSSAMPLESURLREQUEST_CATEGORY_NOTFOUND = 4;
        DELETESITESSITEURLURLCRAWLERRORSSAMPLESURLREQUEST_CATEGORY_OTHER = 5;
        DELETESITESSITEURLURLCRAWLERRORSSAMPLESURLREQUEST_CATEGORY_ROBOTED = 6;
        DELETESITESSITEURLURLCRAWLERRORSSAMPLESURLREQUEST_CATEGORY_SERVERERROR = 7;
        DELETESITESSITEURLURLCRAWLERRORSSAMPLESURLREQUEST_CATEGORY_SOFT404 = 8;
    }
    DeleteSitesSiteUrlUrlCrawlErrorsSamplesUrlRequest_Category category = 2;
    string fields = 3;
    string key = 4;
    string oauth_token = 5;
    // The user agent type (platform) that made the request. For example: web
    enum DeleteSitesSiteUrlUrlCrawlErrorsSamplesUrlRequest_Platform {
        DELETESITESSITEURLURLCRAWLERRORSSAMPLESURLREQUEST_PLATFORM_MOBILE = 0;
        DELETESITESSITEURLURLCRAWLERRORSSAMPLESURLREQUEST_PLATFORM_SMARTPHONEONLY = 1;
        DELETESITESSITEURLURLCRAWLERRORSSAMPLESURLREQUEST_PLATFORM_WEB = 2;
    }
    DeleteSitesSiteUrlUrlCrawlErrorsSamplesUrlRequest_Platform platform = 6;
    boolean prettyPrint = 7;
    string quotaUser = 8;
    // The site's URL, including protocol. For example: http://www.example.com
    string siteUrl = 9;
    // The relative path (without the site) of the sample URL. It must be one of the URLs returned by list(). For example, for the URL https://www.example.com/pagename on the site https://www.example.com/, the url value is pagename
    string url = 10;
    string userIp = 11;
}

message ApiDataRow {
    double clicks = 1;
    double ctr = 2;
    double impressions = 3;
    repeated string keys = 4;
    double position = 5;
}

message ApiDimensionFilter {
    string dimension = 1;
    string expression = 2;
    string operator = 3;
}

message ApiDimensionFilterGroup {
    repeated ApiDimensionFilter filters = 1;
    string groupType = 2;
}

message SearchAnalyticsQueryRequest {
    // [Optional; Default is "auto"] How data is aggregated. If aggregated by property, all data for the same property is aggregated; if aggregated by page, all data is aggregated by canonical URI. If you filter or group by page, choose AUTO; otherwise you can aggregate either by property or by page, depending on how you want your data calculated; see  the help documentation to learn how data is calculated differently by site versus by page.
    // 
    // Note: If you group or filter by page, you cannot aggregate by property.
    // 
    // If you specify any value other than AUTO, the aggregation type in the result will match the requested type, or if you request an invalid type, you will get an error. The API will never change your aggregation type if the requested type is invalid.
    string aggregationType = 1;
    // [Optional] Zero or more filters to apply to the dimension grouping values; for example, 'query contains "buy"' to see only data where the query string contains the substring "buy" (not case-sensitive). You can filter by a dimension without grouping by it.
    repeated ApiDimensionFilterGroup dimensionFilterGroups = 2;
    // [Optional] Zero or more dimensions to group results by. Dimensions are the group-by values in the Search Analytics page. Dimensions are combined to create a unique row key for each row. Results are grouped in the order that you supply these dimensions.
    repeated string dimensions = 3;
    // [Required] End date of the requested date range, in YYYY-MM-DD format, in PST (UTC - 8:00). Must be greater than or equal to the start date. This value is included in the range.
    string endDate = 4;
    // [Optional; Default is 1000] The maximum number of rows to return. Must be a number from 1 to 5,000 (inclusive).
    int32 rowLimit = 5;
    // [Optional; Default is "web"] The search type to filter for.
    string searchType = 6;
    // [Required] Start date of the requested date range, in YYYY-MM-DD format, in PST time (UTC - 8:00). Must be less than or equal to the end date. This value is included in the range.
    string startDate = 7;
    // [Optional; Default is 0] Zero-based index of the first row in the response. Must be a non-negative number.
    int32 startRow = 8;
}

message SearchAnalyticsQueryResponse {
    // How the results were aggregated.
    string responseAggregationType = 1;
    // A list of rows grouped by the key values in the order given in the query.
    repeated ApiDataRow rows = 2;
}

message SitemapsListResponse {
    // Contains detailed information about a specific URL submitted as a sitemap.
    repeated WmxSitemap sitemap = 1;
}

message SitesListResponse {
    // Contains permission level information about a Search Console site. For more information, see Permissions in Search Console.
    repeated WmxSite siteEntry = 1;
}

message UrlCrawlErrorCount {
    // The error count at the given timestamp.
    string count = 1;
    // The date and time when the crawl attempt took place, in RFC 3339 format.
    string timestamp = 2;
}

message UrlCrawlErrorCountsPerType {
    // The crawl error type.
    string category = 1;
    // The error count entries time series.
    repeated UrlCrawlErrorCount entries = 2;
    // The general type of Googlebot that made the request (see list of Googlebot user-agents for the user-agents used).
    string platform = 3;
}

message UrlCrawlErrorsCountsQueryResponse {
    // The time series of the number of URL crawl errors per error category and platform.
    repeated UrlCrawlErrorCountsPerType countPerTypes = 1;
}

message UrlCrawlErrorsSample {
    // The time the error was first detected, in RFC 3339 format.
    string first_detected = 1;
    // The time when the URL was last crawled, in RFC 3339 format.
    string last_crawled = 2;
    // The URL of an error, relative to the site.
    string pageUrl = 3;
    // The HTTP response code, if any.
    int32 responseCode = 4;
    // Additional details about the URL, set only when calling get().
    UrlSampleDetails urlDetails = 5;
}

message UrlCrawlErrorsSamplesListResponse {
    // Information about the sample URL and its crawl error.
    repeated UrlCrawlErrorsSample urlCrawlErrorSample = 1;
}

message UrlSampleDetails {
    // List of sitemaps pointing at this URL.
    repeated string containingSitemaps = 1;
    // A sample set of URLs linking to this URL.
    repeated string linkedFromUrls = 2;
}

message WmxSite {
    // The user's permission level for the site.
    string permissionLevel = 1;
    // The URL of the site.
    string siteUrl = 2;
}

message WmxSitemap {
    // The various content types in the sitemap.
    repeated WmxSitemapContent contents = 1;
    // Number of errors in the sitemap. These are issues with the sitemap itself that need to be fixed before it can be processed correctly.
    string errors = 2;
    // If true, the sitemap has not been processed.
    bool isPending = 3;
    // If true, the sitemap is a collection of sitemaps.
    bool isSitemapsIndex = 4;
    // Date & time in which this sitemap was last downloaded. Date format is in RFC 3339 format (yyyy-mm-dd).
    string lastDownloaded = 5;
    // Date & time in which this sitemap was submitted. Date format is in RFC 3339 format (yyyy-mm-dd).
    string lastSubmitted = 6;
    // The url of the sitemap.
    string path = 7;
    // The type of the sitemap. For example: rssFeed.
    string type = 8;
    // Number of warnings for the sitemap. These are generally non-critical issues with URLs in the sitemaps.
    string warnings = 9;
}

message WmxSitemapContent {
    // The number of URLs from the sitemap that were indexed (of the content type).
    string indexed = 1;
    // The number of URLs in the sitemap (of the content type).
    string submitted = 2;
    // The specific type of content in this sitemap. For example: web.
    string type = 3;
}

enum Alt {
    JSON = 0;
}

service SearchConsoleService {
    // Lists the user's Search Console sites.
    rpc GetSites(GetSitesRequest) returns (SitesListResponse) {
      option (google.api.http) = {
        get: "/webmasters/v3/sites"
      };
    }
    // Retrieves information about specific site.
    rpc GetSitesSiteUrl(GetSitesSiteUrlRequest) returns (WmxSite) {
      option (google.api.http) = {
        get: "/webmasters/v3/sites/{siteUrl}"
      };
    }
    // Adds a site to the set of the user's sites in Search Console.
    rpc PutSitesSiteUrl(PutSitesSiteUrlRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        put: "/webmasters/v3/sites/{siteUrl}"
      };
    }
    // Removes a site from the set of the user's Search Console sites.
    rpc DeleteSitesSiteUrl(DeleteSitesSiteUrlRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        delete: "/webmasters/v3/sites/{siteUrl}"
      };
    }
    // Query your data with filters and parameters that you define. Returns zero or more rows grouped by the row keys that you define. You must define a date range of one or more days.
    // 
    // When date is one of the group by values, any days without data are omitted from the result list. If you need to know which days have data, issue a broad date range query grouped by date for any metric, and see which day rows are returned.
    rpc PostSitesSiteUrlSearchAnalyticsQuery(PostSitesSiteUrlSearchAnalyticsQueryRequest) returns (SearchAnalyticsQueryResponse) {
      option (google.api.http) = {
        post: "/webmasters/v3/sites/{siteUrl}/searchAnalytics/query"
        body: "body"
      };
    }
    // Lists the sitemaps-entries submitted for this site, or included in the sitemap index file (if sitemapIndex is specified in the request).
    rpc GetSitesSiteUrlSitemaps(GetSitesSiteUrlSitemapsRequest) returns (SitemapsListResponse) {
      option (google.api.http) = {
        get: "/webmasters/v3/sites/{siteUrl}/sitemaps"
      };
    }
    // Retrieves information about a specific sitemap.
    rpc GetSitesSiteUrlSitemapsFeedpath(GetSitesSiteUrlSitemapsFeedpathRequest) returns (WmxSitemap) {
      option (google.api.http) = {
        get: "/webmasters/v3/sites/{siteUrl}/sitemaps/{feedpath}"
      };
    }
    // Submits a sitemap for a site.
    rpc PutSitesSiteUrlSitemapsFeedpath(PutSitesSiteUrlSitemapsFeedpathRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        put: "/webmasters/v3/sites/{siteUrl}/sitemaps/{feedpath}"
      };
    }
    // Deletes a sitemap from this site.
    rpc DeleteSitesSiteUrlSitemapsFeedpath(DeleteSitesSiteUrlSitemapsFeedpathRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        delete: "/webmasters/v3/sites/{siteUrl}/sitemaps/{feedpath}"
      };
    }
    // Retrieves a time series of the number of URL crawl errors per error category and platform.
    rpc GetSitesSiteUrlUrlCrawlErrorsCountsQuery(GetSitesSiteUrlUrlCrawlErrorsCountsQueryRequest) returns (UrlCrawlErrorsCountsQueryResponse) {
      option (google.api.http) = {
        get: "/webmasters/v3/sites/{siteUrl}/urlCrawlErrorsCounts/query"
      };
    }
    // Lists a site's sample URLs for the specified crawl error category and platform.
    rpc GetSitesSiteUrlUrlCrawlErrorsSamples(GetSitesSiteUrlUrlCrawlErrorsSamplesRequest) returns (UrlCrawlErrorsSamplesListResponse) {
      option (google.api.http) = {
        get: "/webmasters/v3/sites/{siteUrl}/urlCrawlErrorsSamples"
      };
    }
    // Retrieves details about crawl errors for a site's sample URL.
    rpc GetSitesSiteUrlUrlCrawlErrorsSamplesUrl(GetSitesSiteUrlUrlCrawlErrorsSamplesUrlRequest) returns (UrlCrawlErrorsSample) {
      option (google.api.http) = {
        get: "/webmasters/v3/sites/{siteUrl}/urlCrawlErrorsSamples/{url}"
      };
    }
    // Marks the provided site's sample URL as fixed, and removes it from the samples list.
    rpc DeleteSitesSiteUrlUrlCrawlErrorsSamplesUrl(DeleteSitesSiteUrlUrlCrawlErrorsSamplesUrlRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        delete: "/webmasters/v3/sites/{siteUrl}/urlCrawlErrorsSamples/{url}"
      };
    }
}
