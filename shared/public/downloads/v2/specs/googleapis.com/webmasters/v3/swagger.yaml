swagger: '2.0'
schemes:
  - https
host: www.googleapis.com
basePath: /webmasters/v3
info:
  contact:
    name: Google
    url: 'https://google.com'
  description: View Google Search Console data for your verified sites.
  title: Search Console
  version: v3
  x-apiClientRegistration:
    url: 'https://console.developers.google.com'
  x-apisguru-categories:
    - search
  x-logo:
    url: 'https://api.apis.guru/v2/cache/logo/https_www.google.com_images_branding_googlelogo_2x_googlelogo_color_272x92dp.png'
  x-origin:
    - converter:
        url: 'https://github.com/lucybot/api-spec-converter'
        version: 2.6.0
      format: google
      url: 'https://www.googleapis.com/discovery/v1/apis/webmasters/v3/rest'
      version: v1
  x-preferred: true
  x-providerName: googleapis.com
  x-serviceName: webmasters
externalDocs:
  url: 'https://developers.google.com/webmaster-tools/'
securityDefinitions:
  Oauth2:
    authorizationUrl: 'https://accounts.google.com/o/oauth2/auth'
    description: Oauth 2.0 authentication
    flow: implicit
    scopes:
      'https://www.googleapis.com/auth/webmasters': View and manage Search Console data for your verified sites
      'https://www.googleapis.com/auth/webmasters.readonly': View Search Console data for your verified sites
    type: oauth2
parameters:
  alt:
    default: json
    description: Data format for the response.
    enum:
      - json
    in: query
    name: alt
    type: string
  fields:
    description: Selector specifying which fields to include in a partial response.
    in: query
    name: fields
    type: string
  key:
    description: 'API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.'
    in: query
    name: key
    type: string
  oauth_token:
    description: OAuth 2.0 token for the current user.
    in: query
    name: oauth_token
    type: string
  prettyPrint:
    default: true
    description: Returns response with indentations and line breaks.
    in: query
    name: prettyPrint
    type: boolean
  quotaUser:
    description: 'Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.'
    in: query
    name: quotaUser
    type: string
  userIp:
    description: IP address of the site where the request originates. Use this if you want to enforce per-user limits.
    in: query
    name: userIp
    type: string
tags:
  - name: searchanalytics
  - name: sitemaps
  - name: sites
  - name: urlcrawlerrorscounts
  - name: urlcrawlerrorssamples
paths:
  /sites:
    get:
      description: Lists the user's Search Console sites.
      operationId: webmasters.sites.list
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/SitesListResponse'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/webmasters'
        - Oauth2:
            - 'https://www.googleapis.com/auth/webmasters.readonly'
      tags:
        - sites
    parameters:
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/userIp'
  '/sites/{siteUrl}':
    delete:
      description: Removes a site from the set of the user's Search Console sites.
      operationId: webmasters.sites.delete
      parameters:
        - description: 'The URI of the property as defined in Search Console. Examples: http://www.example.com/ or android-app://com.example/'
          in: path
          name: siteUrl
          required: true
          type: string
      responses:
        '200':
          description: Successful response
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/webmasters'
      tags:
        - sites
    get:
      description: Retrieves information about specific site.
      operationId: webmasters.sites.get
      parameters:
        - description: 'The URI of the property as defined in Search Console. Examples: http://www.example.com/ or android-app://com.example/'
          in: path
          name: siteUrl
          required: true
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/WmxSite'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/webmasters'
        - Oauth2:
            - 'https://www.googleapis.com/auth/webmasters.readonly'
      tags:
        - sites
    parameters:
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/userIp'
    put:
      description: Adds a site to the set of the user's sites in Search Console.
      operationId: webmasters.sites.add
      parameters:
        - description: The URL of the site to add.
          in: path
          name: siteUrl
          required: true
          type: string
      responses:
        '200':
          description: Successful response
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/webmasters'
      tags:
        - sites
  '/sites/{siteUrl}/searchAnalytics/query':
    parameters:
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/userIp'
    post:
      description: |-
        Query your data with filters and parameters that you define. Returns zero or more rows grouped by the row keys that you define. You must define a date range of one or more days.

        When date is one of the group by values, any days without data are omitted from the result list. If you need to know which days have data, issue a broad date range query grouped by date for any metric, and see which day rows are returned.
      operationId: webmasters.searchanalytics.query
      parameters:
        - description: 'The site''s URL, including protocol. For example: http://www.example.com/'
          in: path
          name: siteUrl
          required: true
          type: string
        - in: body
          name: body
          schema:
            $ref: '#/definitions/SearchAnalyticsQueryRequest'
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/SearchAnalyticsQueryResponse'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/webmasters'
        - Oauth2:
            - 'https://www.googleapis.com/auth/webmasters.readonly'
      tags:
        - searchanalytics
  '/sites/{siteUrl}/sitemaps':
    get:
      description: 'Lists the sitemaps-entries submitted for this site, or included in the sitemap index file (if sitemapIndex is specified in the request).'
      operationId: webmasters.sitemaps.list
      parameters:
        - description: 'The site''s URL, including protocol. For example: http://www.example.com/'
          in: path
          name: siteUrl
          required: true
          type: string
        - description: 'A URL of a site''s sitemap index. For example: http://www.example.com/sitemapindex.xml'
          in: query
          name: sitemapIndex
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/SitemapsListResponse'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/webmasters'
        - Oauth2:
            - 'https://www.googleapis.com/auth/webmasters.readonly'
      tags:
        - sitemaps
    parameters:
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/userIp'
  '/sites/{siteUrl}/sitemaps/{feedpath}':
    delete:
      description: Deletes a sitemap from this site.
      operationId: webmasters.sitemaps.delete
      parameters:
        - description: 'The site''s URL, including protocol. For example: http://www.example.com/'
          in: path
          name: siteUrl
          required: true
          type: string
        - description: 'The URL of the actual sitemap. For example: http://www.example.com/sitemap.xml'
          in: path
          name: feedpath
          required: true
          type: string
      responses:
        '200':
          description: Successful response
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/webmasters'
      tags:
        - sitemaps
    get:
      description: Retrieves information about a specific sitemap.
      operationId: webmasters.sitemaps.get
      parameters:
        - description: 'The site''s URL, including protocol. For example: http://www.example.com/'
          in: path
          name: siteUrl
          required: true
          type: string
        - description: 'The URL of the actual sitemap. For example: http://www.example.com/sitemap.xml'
          in: path
          name: feedpath
          required: true
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/WmxSitemap'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/webmasters'
        - Oauth2:
            - 'https://www.googleapis.com/auth/webmasters.readonly'
      tags:
        - sitemaps
    parameters:
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/userIp'
    put:
      description: Submits a sitemap for a site.
      operationId: webmasters.sitemaps.submit
      parameters:
        - description: 'The site''s URL, including protocol. For example: http://www.example.com/'
          in: path
          name: siteUrl
          required: true
          type: string
        - description: 'The URL of the sitemap to add. For example: http://www.example.com/sitemap.xml'
          in: path
          name: feedpath
          required: true
          type: string
      responses:
        '200':
          description: Successful response
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/webmasters'
      tags:
        - sitemaps
  '/sites/{siteUrl}/urlCrawlErrorsCounts/query':
    get:
      description: Retrieves a time series of the number of URL crawl errors per error category and platform.
      operationId: webmasters.urlcrawlerrorscounts.query
      parameters:
        - description: 'The site''s URL, including protocol. For example: http://www.example.com/'
          in: path
          name: siteUrl
          required: true
          type: string
        - description: 'The crawl error category. For example: serverError. If not specified, returns results for all categories.'
          enum:
            - authPermissions
            - flashContent
            - manyToOneRedirect
            - notFollowed
            - notFound
            - other
            - roboted
            - serverError
            - soft404
          in: query
          name: category
          type: string
        - default: true
          description: 'If true, returns only the latest crawl error counts.'
          in: query
          name: latestCountsOnly
          type: boolean
        - description: 'The user agent type (platform) that made the request. For example: web. If not specified, returns results for all platforms.'
          enum:
            - mobile
            - smartphoneOnly
            - web
          in: query
          name: platform
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/UrlCrawlErrorsCountsQueryResponse'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/webmasters'
        - Oauth2:
            - 'https://www.googleapis.com/auth/webmasters.readonly'
      tags:
        - urlcrawlerrorscounts
    parameters:
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/userIp'
  '/sites/{siteUrl}/urlCrawlErrorsSamples':
    get:
      description: Lists a site's sample URLs for the specified crawl error category and platform.
      operationId: webmasters.urlcrawlerrorssamples.list
      parameters:
        - description: 'The site''s URL, including protocol. For example: http://www.example.com/'
          in: path
          name: siteUrl
          required: true
          type: string
        - description: 'The crawl error category. For example: authPermissions'
          enum:
            - authPermissions
            - flashContent
            - manyToOneRedirect
            - notFollowed
            - notFound
            - other
            - roboted
            - serverError
            - soft404
          in: query
          name: category
          required: true
          type: string
        - description: 'The user agent type (platform) that made the request. For example: web'
          enum:
            - mobile
            - smartphoneOnly
            - web
          in: query
          name: platform
          required: true
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/UrlCrawlErrorsSamplesListResponse'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/webmasters'
        - Oauth2:
            - 'https://www.googleapis.com/auth/webmasters.readonly'
      tags:
        - urlcrawlerrorssamples
    parameters:
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/userIp'
  '/sites/{siteUrl}/urlCrawlErrorsSamples/{url}':
    delete:
      description: 'Marks the provided site''s sample URL as fixed, and removes it from the samples list.'
      operationId: webmasters.urlcrawlerrorssamples.markAsFixed
      parameters:
        - description: 'The site''s URL, including protocol. For example: http://www.example.com/'
          in: path
          name: siteUrl
          required: true
          type: string
        - description: "The relative path (without the site) of the sample URL. It must be one of the URLs returned by list(). For example, for the URL https://www.example.com/pagename\_on the site https://www.example.com/, the url value is\_pagename"
          in: path
          name: url
          required: true
          type: string
        - description: 'The crawl error category. For example: authPermissions'
          enum:
            - authPermissions
            - flashContent
            - manyToOneRedirect
            - notFollowed
            - notFound
            - other
            - roboted
            - serverError
            - soft404
          in: query
          name: category
          required: true
          type: string
        - description: 'The user agent type (platform) that made the request. For example: web'
          enum:
            - mobile
            - smartphoneOnly
            - web
          in: query
          name: platform
          required: true
          type: string
      responses:
        '200':
          description: Successful response
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/webmasters'
      tags:
        - urlcrawlerrorssamples
    get:
      description: Retrieves details about crawl errors for a site's sample URL.
      operationId: webmasters.urlcrawlerrorssamples.get
      parameters:
        - description: 'The site''s URL, including protocol. For example: http://www.example.com/'
          in: path
          name: siteUrl
          required: true
          type: string
        - description: "The relative path (without the site) of the sample URL. It must be one of the URLs returned by list(). For example, for the URL https://www.example.com/pagename\_on the site https://www.example.com/, the url value is\_pagename"
          in: path
          name: url
          required: true
          type: string
        - description: 'The crawl error category. For example: authPermissions'
          enum:
            - authPermissions
            - flashContent
            - manyToOneRedirect
            - notFollowed
            - notFound
            - other
            - roboted
            - serverError
            - soft404
          in: query
          name: category
          required: true
          type: string
        - description: 'The user agent type (platform) that made the request. For example: web'
          enum:
            - mobile
            - smartphoneOnly
            - web
          in: query
          name: platform
          required: true
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/UrlCrawlErrorsSample'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/webmasters'
        - Oauth2:
            - 'https://www.googleapis.com/auth/webmasters.readonly'
      tags:
        - urlcrawlerrorssamples
    parameters:
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/userIp'
definitions:
  ApiDataRow:
    properties:
      clicks:
        format: double
        type: number
      ctr:
        format: double
        type: number
      impressions:
        format: double
        type: number
      keys:
        items:
          type: string
        type: array
      position:
        format: double
        type: number
    type: object
  ApiDimensionFilter:
    properties:
      dimension:
        type: string
      expression:
        type: string
      operator:
        type: string
    type: object
  ApiDimensionFilterGroup:
    properties:
      filters:
        items:
          $ref: '#/definitions/ApiDimensionFilter'
        type: array
      groupType:
        type: string
    type: object
  SearchAnalyticsQueryRequest:
    properties:
      aggregationType:
        description: |-
          [Optional; Default is "auto"] How data is aggregated. If aggregated by property, all data for the same property is aggregated; if aggregated by page, all data is aggregated by canonical URI. If you filter or group by page, choose AUTO; otherwise you can aggregate either by property or by page, depending on how you want your data calculated; see  the help documentation to learn how data is calculated differently by site versus by page.

          Note: If you group or filter by page, you cannot aggregate by property.

          If you specify any value other than AUTO, the aggregation type in the result will match the requested type, or if you request an invalid type, you will get an error. The API will never change your aggregation type if the requested type is invalid.
        type: string
      dimensionFilterGroups:
        description: '[Optional] Zero or more filters to apply to the dimension grouping values; for example, ''query contains "buy"'' to see only data where the query string contains the substring "buy" (not case-sensitive). You can filter by a dimension without grouping by it.'
        items:
          $ref: '#/definitions/ApiDimensionFilterGroup'
        type: array
      dimensions:
        description: '[Optional] Zero or more dimensions to group results by. Dimensions are the group-by values in the Search Analytics page. Dimensions are combined to create a unique row key for each row. Results are grouped in the order that you supply these dimensions.'
        items:
          type: string
        type: array
      endDate:
        description: '[Required] End date of the requested date range, in YYYY-MM-DD format, in PST (UTC - 8:00). Must be greater than or equal to the start date. This value is included in the range.'
        type: string
      rowLimit:
        description: '[Optional; Default is 1000] The maximum number of rows to return. Must be a number from 1 to 5,000 (inclusive).'
        format: int32
        type: integer
      searchType:
        description: '[Optional; Default is "web"] The search type to filter for.'
        type: string
      startDate:
        description: '[Required] Start date of the requested date range, in YYYY-MM-DD format, in PST time (UTC - 8:00). Must be less than or equal to the end date. This value is included in the range.'
        type: string
      startRow:
        description: '[Optional; Default is 0] Zero-based index of the first row in the response. Must be a non-negative number.'
        format: int32
        type: integer
    type: object
  SearchAnalyticsQueryResponse:
    description: 'A list of rows, one per result, grouped by key. Metrics in each row are aggregated for all data grouped by that key either by page or property, as specified by the aggregation type parameter.'
    properties:
      responseAggregationType:
        description: How the results were aggregated.
        type: string
      rows:
        description: A list of rows grouped by the key values in the order given in the query.
        items:
          $ref: '#/definitions/ApiDataRow'
        type: array
    type: object
  SitemapsListResponse:
    description: List of sitemaps.
    properties:
      sitemap:
        description: Contains detailed information about a specific URL submitted as a sitemap.
        items:
          $ref: '#/definitions/WmxSitemap'
        type: array
    type: object
  SitesListResponse:
    description: List of sites with access level information.
    properties:
      siteEntry:
        description: 'Contains permission level information about a Search Console site. For more information, see Permissions in Search Console.'
        items:
          $ref: '#/definitions/WmxSite'
        type: array
    type: object
  UrlCrawlErrorCount:
    description: An entry in a URL crawl errors time series.
    properties:
      count:
        description: The error count at the given timestamp.
        format: int64
        type: string
      timestamp:
        description: 'The date and time when the crawl attempt took place, in RFC 3339 format.'
        format: date-time
        type: string
    type: object
  UrlCrawlErrorCountsPerType:
    description: Number of errors per day for a specific error type (defined by platform and category).
    properties:
      category:
        description: The crawl error type.
        type: string
      entries:
        description: The error count entries time series.
        items:
          $ref: '#/definitions/UrlCrawlErrorCount'
        type: array
      platform:
        description: The general type of Googlebot that made the request (see list of Googlebot user-agents for the user-agents used).
        type: string
    type: object
  UrlCrawlErrorsCountsQueryResponse:
    description: A time series of the number of URL crawl errors per error category and platform.
    properties:
      countPerTypes:
        description: The time series of the number of URL crawl errors per error category and platform.
        items:
          $ref: '#/definitions/UrlCrawlErrorCountsPerType'
        type: array
    type: object
  UrlCrawlErrorsSample:
    description: Contains information about specific crawl errors.
    properties:
      first_detected:
        description: 'The time the error was first detected, in RFC 3339 format.'
        format: date-time
        type: string
      last_crawled:
        description: 'The time when the URL was last crawled, in RFC 3339 format.'
        format: date-time
        type: string
      pageUrl:
        description: 'The URL of an error, relative to the site.'
        type: string
      responseCode:
        description: 'The HTTP response code, if any.'
        format: int32
        type: integer
      urlDetails:
        $ref: '#/definitions/UrlSampleDetails'
        description: 'Additional details about the URL, set only when calling get().'
    type: object
  UrlCrawlErrorsSamplesListResponse:
    description: List of crawl error samples.
    properties:
      urlCrawlErrorSample:
        description: Information about the sample URL and its crawl error.
        items:
          $ref: '#/definitions/UrlCrawlErrorsSample'
        type: array
    type: object
  UrlSampleDetails:
    description: 'Additional details about the URL, set only when calling get().'
    properties:
      containingSitemaps:
        description: List of sitemaps pointing at this URL.
        items:
          type: string
        type: array
      linkedFromUrls:
        description: A sample set of URLs linking to this URL.
        items:
          type: string
        type: array
    type: object
  WmxSite:
    description: 'Contains permission level information about a Search Console site. For more information, see  Permissions in Search Console.'
    properties:
      permissionLevel:
        description: The user's permission level for the site.
        type: string
      siteUrl:
        description: The URL of the site.
        type: string
    type: object
  WmxSitemap:
    description: Contains detailed information about a specific URL submitted as a sitemap.
    properties:
      contents:
        description: The various content types in the sitemap.
        items:
          $ref: '#/definitions/WmxSitemapContent'
        type: array
      errors:
        description: Number of errors in the sitemap. These are issues with the sitemap itself that need to be fixed before it can be processed correctly.
        format: int64
        type: string
      isPending:
        description: 'If true, the sitemap has not been processed.'
        type: boolean
      isSitemapsIndex:
        description: 'If true, the sitemap is a collection of sitemaps.'
        type: boolean
      lastDownloaded:
        description: Date & time in which this sitemap was last downloaded. Date format is in RFC 3339 format (yyyy-mm-dd).
        format: date-time
        type: string
      lastSubmitted:
        description: Date & time in which this sitemap was submitted. Date format is in RFC 3339 format (yyyy-mm-dd).
        format: date-time
        type: string
      path:
        description: The url of the sitemap.
        type: string
      type:
        description: 'The type of the sitemap. For example: rssFeed.'
        type: string
      warnings:
        description: Number of warnings for the sitemap. These are generally non-critical issues with URLs in the sitemaps.
        format: int64
        type: string
    type: object
  WmxSitemapContent:
    description: Information about the various content types in the sitemap.
    properties:
      indexed:
        description: The number of URLs from the sitemap that were indexed (of the content type).
        format: int64
        type: string
      submitted:
        description: The number of URLs in the sitemap (of the content type).
        format: int64
        type: string
      type:
        description: 'The specific type of content in this sitemap. For example: web.'
        type: string
    type: object
