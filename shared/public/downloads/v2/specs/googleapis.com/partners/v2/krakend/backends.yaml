backends:
- group: google-partners-v2
  url_pattern: /v2/analytics
  method: GET
  host:
  - https://partners.googleapis.com
  query_string_params:
  - pageSize
  - pageToken
  - requestMetadata.experimentIds
  - requestMetadata.locale
  - requestMetadata.partnersSessionId
  - requestMetadata.trafficSource.trafficSourceId
  - requestMetadata.trafficSource.trafficSubId
  - requestMetadata.userOverrides.ipAddress
  - requestMetadata.userOverrides.userId
  whitelist:
  - analytics
  - nextPageToken
  concurrent_calls: 1
  mapping:
    analytics: analytics
    nextPageToken: nextPageToken
  extra_config:
    slug: google-partners-v2-v2-analytics
    hosts:
    - https://partners.googleapis.com
    schemes:
    - https
- group: google-partners-v2
  url_pattern: /v2/clientMessages:log
  method: POST
  host:
  - https://partners.googleapis.com
  concurrent_calls: 1
  extra_config:
    slug: google-partners-v2-v2-clientmessages-log
    hosts:
    - https://partners.googleapis.com
    schemes:
    - https
- group: google-partners-v2
  url_pattern: /v2/companies
  method: GET
  host:
  - https://partners.googleapis.com
  query_string_params:
  - address
  - companyName
  - gpsMotivations
  - industries
  - languageCodes
  - maxMonthlyBudget.currencyCode
  - maxMonthlyBudget.nanos
  - maxMonthlyBudget.units
  - minMonthlyBudget.currencyCode
  - minMonthlyBudget.nanos
  - minMonthlyBudget.units
  - orderBy
  - pageSize
  - pageToken
  - requestMetadata.experimentIds
  - requestMetadata.locale
  - requestMetadata.partnersSessionId
  - requestMetadata.trafficSource.trafficSourceId
  - requestMetadata.trafficSource.trafficSubId
  - requestMetadata.userOverrides.ipAddress
  - requestMetadata.userOverrides.userId
  - services
  - specializations
  - view
  - websiteUrl
  whitelist:
  - companies
  - nextPageToken
  concurrent_calls: 1
  mapping:
    companies: companies
    nextPageToken: nextPageToken
  extra_config:
    slug: google-partners-v2-v2-companies
    hosts:
    - https://partners.googleapis.com
    schemes:
    - https
- group: google-partners-v2
  url_pattern: /v2/companies/{companyId}
  method: GET
  host:
  - https://partners.googleapis.com
  url_keys:
  - companyId
  query_string_params:
  - address
  - currencyCode
  - orderBy
  - requestMetadata.experimentIds
  - requestMetadata.locale
  - requestMetadata.partnersSessionId
  - requestMetadata.trafficSource.trafficSourceId
  - requestMetadata.trafficSource.trafficSubId
  - requestMetadata.userOverrides.ipAddress
  - requestMetadata.userOverrides.userId
  - view
  concurrent_calls: 1
  extra_config:
    slug: google-partners-v2-v2-companies-companyid
    hosts:
    - https://partners.googleapis.com
    schemes:
    - https
- group: google-partners-v2
  url_pattern: /v2/companies/{companyId}/leads
  method: POST
  host:
  - https://partners.googleapis.com
  url_keys:
  - companyId
  whitelist:
  - recaptchaStatus
  concurrent_calls: 1
  mapping:
    recaptchaStatus: recaptchaStatus
  extra_config:
    slug: google-partners-v2-v2-companies-companyid-leads
    hosts:
    - https://partners.googleapis.com
    schemes:
    - https
- group: google-partners-v2
  url_pattern: /v2/exams/{examType}/token
  method: GET
  host:
  - https://partners.googleapis.com
  url_keys:
  - examType
  query_string_params:
  - requestMetadata.experimentIds
  - requestMetadata.locale
  - requestMetadata.partnersSessionId
  - requestMetadata.trafficSource.trafficSourceId
  - requestMetadata.trafficSource.trafficSubId
  - requestMetadata.userOverrides.ipAddress
  - requestMetadata.userOverrides.userId
  whitelist:
  - examId
  - examType
  - token
  concurrent_calls: 1
  mapping:
    examId: examId
    examType: examType
    token: token
  extra_config:
    slug: google-partners-v2-v2-exams-examtype-token
    hosts:
    - https://partners.googleapis.com
    schemes:
    - https
- group: google-partners-v2
  url_pattern: /v2/leads
  method: GET
  host:
  - https://partners.googleapis.com
  query_string_params:
  - orderBy
  - pageSize
  - pageToken
  - requestMetadata.experimentIds
  - requestMetadata.locale
  - requestMetadata.partnersSessionId
  - requestMetadata.trafficSource.trafficSourceId
  - requestMetadata.trafficSource.trafficSubId
  - requestMetadata.userOverrides.ipAddress
  - requestMetadata.userOverrides.userId
  whitelist:
  - leads
  - nextPageToken
  - totalSize
  concurrent_calls: 1
  mapping:
    leads: leads
    nextPageToken: nextPageToken
    totalSize: totalSize
  extra_config:
    slug: google-partners-v2-v2-leads
    hosts:
    - https://partners.googleapis.com
    schemes:
    - https
- group: google-partners-v2
  url_pattern: /v2/offers
  method: GET
  host:
  - https://partners.googleapis.com
  query_string_params:
  - requestMetadata.experimentIds
  - requestMetadata.locale
  - requestMetadata.partnersSessionId
  - requestMetadata.trafficSource.trafficSourceId
  - requestMetadata.trafficSource.trafficSubId
  - requestMetadata.userOverrides.ipAddress
  - requestMetadata.userOverrides.userId
  whitelist:
  - availableOffers
  - noOfferReason
  concurrent_calls: 1
  mapping:
    availableOffers: availableOffers
    noOfferReason: noOfferReason
  extra_config:
    slug: google-partners-v2-v2-offers
    hosts:
    - https://partners.googleapis.com
    schemes:
    - https
- group: google-partners-v2
  url_pattern: /v2/offers/history
  method: GET
  host:
  - https://partners.googleapis.com
  query_string_params:
  - entireCompany
  - orderBy
  - pageSize
  - pageToken
  - requestMetadata.experimentIds
  - requestMetadata.locale
  - requestMetadata.partnersSessionId
  - requestMetadata.trafficSource.trafficSourceId
  - requestMetadata.trafficSource.trafficSubId
  - requestMetadata.userOverrides.ipAddress
  - requestMetadata.userOverrides.userId
  whitelist:
  - canShowEntireCompany
  - nextPageToken
  - offers
  - showingEntireCompany
  - totalResults
  concurrent_calls: 1
  mapping:
    canShowEntireCompany: canShowEntireCompany
    nextPageToken: nextPageToken
    offers: offers
    showingEntireCompany: showingEntireCompany
    totalResults: totalResults
  extra_config:
    slug: google-partners-v2-v2-offers-history
    hosts:
    - https://partners.googleapis.com
    schemes:
    - https
- group: google-partners-v2
  url_pattern: /v2/partnersstatus
  method: GET
  host:
  - https://partners.googleapis.com
  query_string_params:
  - requestMetadata.experimentIds
  - requestMetadata.locale
  - requestMetadata.partnersSessionId
  - requestMetadata.trafficSource.trafficSourceId
  - requestMetadata.trafficSource.trafficSubId
  - requestMetadata.userOverrides.ipAddress
  - requestMetadata.userOverrides.userId
  concurrent_calls: 1
  extra_config:
    slug: google-partners-v2-v2-partnersstatus
    hosts:
    - https://partners.googleapis.com
    schemes:
    - https
- group: google-partners-v2
  url_pattern: /v2/userEvents:log
  method: POST
  host:
  - https://partners.googleapis.com
  concurrent_calls: 1
  extra_config:
    slug: google-partners-v2-v2-userevents-log
    hosts:
    - https://partners.googleapis.com
    schemes:
    - https
- group: google-partners-v2
  url_pattern: /v2/userStates
  method: GET
  host:
  - https://partners.googleapis.com
  query_string_params:
  - requestMetadata.experimentIds
  - requestMetadata.locale
  - requestMetadata.partnersSessionId
  - requestMetadata.trafficSource.trafficSourceId
  - requestMetadata.trafficSource.trafficSubId
  - requestMetadata.userOverrides.ipAddress
  - requestMetadata.userOverrides.userId
  whitelist:
  - userStates
  concurrent_calls: 1
  mapping:
    userStates: userStates
  extra_config:
    slug: google-partners-v2-v2-userstates
    hosts:
    - https://partners.googleapis.com
    schemes:
    - https
- group: google-partners-v2
  url_pattern: /v2/users/{userId}
  method: GET
  host:
  - https://partners.googleapis.com
  url_keys:
  - userId
  query_string_params:
  - requestMetadata.experimentIds
  - requestMetadata.locale
  - requestMetadata.partnersSessionId
  - requestMetadata.trafficSource.trafficSourceId
  - requestMetadata.trafficSource.trafficSubId
  - requestMetadata.userOverrides.ipAddress
  - requestMetadata.userOverrides.userId
  - userView
  whitelist:
  - availableAdwordsManagerAccounts
  - certificationStatus
  - companyVerificationEmail
  - examStatus
  - id
  - internalId
  - lastAccessTime
  - primaryEmails
  concurrent_calls: 1
  mapping:
    availableAdwordsManagerAccounts: availableAdwordsManagerAccounts
    certificationStatus: certificationStatus
    companyVerificationEmail: companyVerificationEmail
    examStatus: examStatus
    id: id
    internalId: internalId
    lastAccessTime: lastAccessTime
    primaryEmails: primaryEmails
  extra_config:
    slug: google-partners-v2-v2-users-userid
    hosts:
    - https://partners.googleapis.com
    schemes:
    - https
